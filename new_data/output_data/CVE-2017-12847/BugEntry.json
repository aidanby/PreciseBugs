{"buggy_code": ["########################\nNagios Core 4 Change Log\n########################\n\n4.3.3 - 2017-05-09\n------------------\n* xodtemplate.c wrong option-deprecation code warning (alex2grad / John Frickson)\n* On-demand host check always use cached host state (John Frickson)\n* '\u00e1' causes Serivce Status Information to not be displayed (John Frickson)\n* New Macro(s) to generate URL for host / service object (John Frickson)\n\n\n4.3.2 - 2017-05-09\n------------------\nFIXED\n* Every 15sec /var/log/messages is flooded with \"nagios: set_environment_var\" (John Frickson)\n* Changed release date to ISO format (yyyy-mm-dd) (John Frickson)\n* `make all` fails if unzip is not installed (John Frickson)\n* Quick Search no longer allows search by Alias (John Frickson)\n* flexible downtime on a service immediately turns off notifications (John Frickson)\n* Fix to allow url_encode to be called twice (Z. Liu)\n* Update timeperiods.cfg.in (spelling) (Parth Laxmikant Kolekar)\n* Spelling fixes (Josh Soref)\n* Vent command pipe before remove to avoid deadlocks on writing end (Kai Kunstmann)\n* CGI utility cgiutil.c does not process relative config file path names properly (John Frickson)\n* xdata/xodtemplate.c bug in option-deprecation code (John Frickson)\n* Wildcard searching causes service status links to not work properly (John Frickson)\n* Quick search with no hits shows a permission denied error (John Frickson)\n* Setting a service as its own parent is not caught by the sanity checker (-v) and causes a segfault (John Frickson)\n\n\n4.3.1 - 2017-02-23\n------------------\nFIXES\n* Service hard state generation and host hard or soft down status (John Frickson)\n* Comments are duplicated through Nagios reload (John Frickson)\n* host hourly value is incorrectly dumped as json boolean (John Frickson)\n* Bug - Quick Search no longer allows search by IP (John Frickson)\n* Config: status_update_interval can not be set to 1 (John Frickson)\n* Check attempts not increasing if nagios is reloaded (John Frickson)\n* nagios hangs on reload while sending external command to cmd file (John Frickson)\n* Feature Request: return code xxx out of bounds - include message as well (John Frickson)\n\n\n4.3.0 - 2017-02-21\n------------------\nSECURITY FIXES\n* Fix for CVE-2016-6209 - The \"corewindow\" parameter (as in\n  http://localhost/nagios?corewindow=www.somewhere.com) has been disabled by\n  default. See the UPGRADING document for how to enable it. (John Frickson)\n\nFIXES\n* Fix early event scheduling (pmalek / John Frickson)\n* on-demand host checks triggered by service checks cause attempt number increments (fredericve)\n* Service notification not being send when host is in soft down state (John Frickson)\n* configure does not error if no perl installed on CentOS 7 (John Frickson)\n* failed passive requests leave .ok files in checkresults dir (caronc)\n* Services don't show in status.cgi if \"noheader\" specified (John Frickson)\n* Standardized check interval config file names (John Frickson)\n* \"Event Log\" (showlog.cgi) could not open log file (John Frickson)\n* \"nagios_check_command\" has been deprecated since v3.0. Last vestiges removed (John Frickson)\n\nENHANCEMENTS\n* Added new flag to cgi.cfg: tac_cgi_hard_only to show only HARD states (John Frickson)\n* Add broker-event for the end of a timed event (NEBTYPE_TIMEDEVENT_END) (John Frickson)\n* There is no Macro to retrieve addresses of hostgroup members (now $HOSTGROUPMEMBERADDRESSES$) (John Frickson)\n* Add \"Page Tour\" videos to several of the core web pages (John Frickson)\n* Added a login page, and a `Logoff` links (John Frickson)\n* On the status map, the host name will be colored if services are not all OK. (John Frickson)\n* Added \"Clear flapping state\" command on host and services detail pages. (John Frickson)\n* User-entered comment now displays below generated comment for downtime (John Frickson)\n\n\n4.2.4 - 2016-12-07\n------------------\nSECURITY FIXES\n* Fixed another root privilege escalation (CVE-2016-9566) Thanks for bringing this\n  to our attention go to Dawid Golunski (http://legalhackers.com).\n\n\n4.2.3 - 2016-11-21\n-------------------\nSECURITY FIXES\n* Fixed a root privilege escalation (CVE-2016-8641) (John Frickson)\n\nFIXES\n* external command during reload doesn't work (John Frickson)\n* Nagios provides no error condition as to why it fails on the verify for serviceescalation (John Frickson)\n* No root group in FreeBSD and Apple OS X (John Frickson)\n* jsonquery.html doesn't display scheduled_time_ok correctly (John Frickson)\n* daemon_dumps_core=1 has no effect on Linux when Nagios started as root (John Frickson)\n* Configuration check in hostgroup - misspelled hostname does not error (John Frickson)\n* contacts or contact_groups directive with no value should not be allowed (John Frickson)\n* Compile 64-bit on SPARC produces LD error (John Frickson)\n* HOSTSTATEID returns 0 even if host does not exist (John Frickson)\n* Submitting UNREACHABLE passive result for host sets it as DOWN if the host has no parents (John Frickson)\n* nagios: job XX (pid=YY): read() returned error 11 (changed from LOG_ERR to LOG_NOTICE) (John Frickson)\n* Fix for quick search not showing services if wildcard used (John Frickson)\n\n\n4.2.2 - 2016-10-24\n------------------\nSECURITY FIXES\n* There was a fix to vulnerability CVE-2008-4796 in the 4.2.0 release on\n  August 1, 2016. The fix was apparently incomplete, as there was still a\n  problem. However, we are now getting all RSS feeds using AJAX calls\n  instead of the (outdated) MagpieRSS package. Thanks for bringing this to\n  our attention go to Dawid Golunski (http://legalhackers.com).\n\nENHANCEMENTS\n* Update status.c to display passive check icon for hosts when passive checks\n\tare enabled and actives disabled (John Frickson)\n\nFIXES\n* Fix permissions for Host Groups reports (status.cgi) (Patrik Halfar)\n* Service Parents does not appear to be functioning as intended (lev)\n* Availability report mixes up scheduled and unscheduled warning percentages (Helmut Mikulcik)\n* Invalid values for saved_stamp in compute_subject_downtime_times() (John Frickson)\n* Remove deprecated \"framespacing\" (John Frickson)\n* The nagios tarball contains two identical jquery copies (John Frickson)\n* extinfo.cgi does not set content-type (most cgi's don't) (John Frickson)\n* Timeperiods are corrupted by external command CHANGE_SVC_CHECK_TIMEPERIOD (xoubih)\n* Quick search doesn't show hosts without services (service status detail page) (John Frickson)\n* In host/services details view, if exactly 100 entries would not show last one (John Frickson)\n* nagios host URL parameter for NEW map doesn`t work - Network Map for All Hosts (John Frickson)\n* next_problem_id is improperly initialized (gherteg)\n* Passive problems not showing as \"unhandled\" (John Frickson)\n* September reported as Sept instead of Sep (Rostislav Opo\u010densk\u00fd)\n* Notifications are not sent for active alerts after scheduled downtime ends (John Frickson)\n* Nagios 4.2.0 not working on Solaris (John Frickson)\n* install-exfoliation and install-classicui don't work FreeBSD and Mac OS X (John Frickson)\n* Updated makefile to delete some no-longer-needed files (John Frickson)\n\n\n4.2.1 - 2016-09-06\n------------------\nFIXES\n* Fix undefined variable php error (John Frickson)\n* Links on the sidebar menu under 'Problems' are indented too far (John Frickson)\n* Using $ARGn$ Macros in perfdata (John Frickson)\n* using a wildcard in search returns service status total all zero's (John Frickson)\n* read_only does not take priority (deppy)\n* Running nagios -v on 4.2.0 takes 90+ seconds (John Frickson)\n* Bare \"make\" invoked in subtarget (mjo)\n* Theme images/stylesheets installed with inconsistent permissions (mjo / John Frickson)\n* Missing Image for Host and Service State Trends in Availability Report (nichokap / John Frickson)\n* Maintain non-persistent comments through reload (John Frickson)\n* Servicegroup availability report ignores includesoftstates in service report links (PriceChild)\n* error: format not a string literal and no format arguments (Karsten Weiss)\n* Synced config.guess and config.sub with GNU (Zakhar Kleyman)\n\n\n4.2.0 - 2016-08-01\n------------------\nSECURITY FIXES\n* Fixed vulnerability CVE-2008-4796 (John Frickson)\n* Fixed vulnerability CVE-2013-4214 (John Frickson)\n* web interface vulnerable to Cross-Site Request Forgery attacks (John Frickson)\n\nENHANCEMENTS\n* Increase socket queue length for listen()\n* Added host name to the website page title (leres / John Frickson)\n* Added additional icons for NetBSD and SuSE (John Frickson)\n* The new Status Map will now use cgi.cfg options (John Frickson)\n    default_statusmap_layout will default to \"6\" for the new map\n* The new Status Map will now show some valid values in the popup for \"Nagios Process\" (John Frickson)\n\nFIXES\n* Network outage view without access to all hosts (John Frickson)\n* Core workers looping (John Frickson)\n* service query returns duplicate host_name and description fields in the returned data (John Frickson)\n* HTML output of plug-ins is parsed in wrong way => webgui unusable (John Frickson)\n* Command worker fails to handle SIGPIPE\n* \"View Status\" links under \"Map\" broken in Nagios Core Version 4.1.1 (John Frickson)\n* Can't send big buffer - wproc: Core Worker seems to be choked (velripn / John Frickson)\n* Too big CPU load on FreeBSD and other systems using poll() interface (cejkar)\n* Flexible downtime recorded as unscheduled downtime (John Frickson)\n* Service Flexible downtimes produce 1 notification before entering (John Frickson)\n* Once you \"set flap_detection_enabled 0\" it should remove flapping state from the host/services page (John Frickson)\n* New map doesn't finish loading if a logo image is not found (John Frickson)\n* Extraneous Div end tag in map.html (Scott Wilkerson)\n* Issue with \"Problems\" section (John Frickson)\n* Status Map icons and online/offline status dots disappear in IE11 (John Frickson)\n* New network map overlays the nagios process with objects (John Frickson)\n* Added Default-Start and Default-Stop to the init script (John Frickson)\n* Compile / logging issues with BSD 6\n* Related to above, Fixed a lot of incorrectly handled time_t's in *printf's (John Frickson)\n* New map not working for RU locale (actually, most locales) (John Frickson)\n* Replaced all instances of signal() with sigaction() + blocking (John Frickson)\n* UTF-8 characters like german \u00e4 are not processed properly by function url_encode (John Frickson)\n* nagios worker processes can hog CPU (huxley / John Frickson)\n* custom time periods that include special characters were not being handled in reports (John Frickson)\n* Fixed init script to wait up to 90 seconds then kill the nagios process (John Frickson)\n* No Host Groups results in wrong error message (John Frickson)\n* Setup Nagios users to view specific host is not working in the new network map (John Frickson)\n* statusjson.cgi fails glibc realloc truncate response output (John Frickson)\n* Report Time Period does not work if an @ character is in the timeperiod name (John Frickson)\n* State History does not use actual plugin long_output (John Frickson)\n* Time period corruption (xoubih)\n* Tactical Overview - Disabled Flap Detection Link (John Frickson)\n\n4.1.1 - 08/19/2015\n------------------\nFIXES\n* CGI Could not read object configuration data (broken by error in 4.1.0)\n* exclude (!) not working (broken by mis-applied fix for 4.1.0)\n\n\n4.1.0 - 08/18/2015\n------------------\nENHANCEMENTS\n* Promoted JSON CGIs to released status (Eric Stanley)\n* New graphical CGI displays: statusmap, trends, histogram (Eric Stanley)\n* Make sticky status for acks and comments configurable enhancement #20 (Trevor McDonald / Scott Wilkerson)\n* Add host_down_disable_service_checks directive to nagios.cfg #44 (Trevor McDonald / Scott Wilkerson)\n* httpd.conf doesn't support Apache versions > 2.3 (DanielB / John Frickson)\n\nFIXES\n* Fix for not all service dependencies created (John Frickson)\n* Fix SIGSEGV with empty custom variable (orbis / John Frickson)\n* Fix contact macros in environment variables (dvoryanchikov)\n* Fixed host's current attempt goes to 1 after going to hard state (John Frickson)\n* Fixed two bugs/problems: Replace use of %zd in base/utils.c & incorrect va_start() in cgi/jsonutils.c (Peter Eriksson)\n* Fixed: Let remove_specialized actually remove all workers (Phil Mayers)\n* Fixed log file spam caused when using perfdata command directives in nagios.cfg (shashikanthbussa)\n* Fixed off-by-one error in bounds check leads to segfault (Phil Mayers)\n* Added links for legacy graphical displays (Eric Stanley)\n* Update embedded URL's to https versions of Nagios websites (scottwilkerson)\n* Fixed doxygen comments to work with latest doxygen 1.8.9.1 #30 (Trevor McDonald)\n* Fixed makefile target \"html\" to PHONY to fix GitHub issue #28 (Trevor McDonald)\n* Fixed typo as per GitHub issue #27 (Trevor McDonald)\n* Fixed jsonquery.php 404 not found error, and disabled Send Query button until form populates #43 (Scott Wilkerson)\n* Fixed linking in Tactical Overview for several of the Host entries in Featured section #48 (Scott Wilkerson)\n* Fixed passing limit and sort options to pagination and sort links #42 (Scott Wilkerson)\n* Added form field for icon URL and clean-up when it changes in CGI Status Map. (Eric Stanley)\n* Added options to cgi.cfg to uncheck sticky and send when acknowledging a problem (Trevor McDonald)\n* Low impact changes to automate the generation of RPMs from nagios.spec file. (T.J. Yang)\n* Update index.php (Trevor McDonald)\n* Fixed escaping of corewindow parameter to account for possible XSS injection (Scott Wilkerson)\n* Typo correction (T.J. Yang)\n* Make getCoreStatus respect cgi_base_url (Moritz Schlarb)\n* Adjusted map layout to work within frames (Eric Stanley)\n* Fixed map displays are now the full size of browser window (Eric Stanley)\n* Fixed labels and icons on circular markup no longer scale on zoom (Eric Stanley)\n* Got all maps except circular markup working with icons (Eric Stanley)\n* Fixes to make legacy CGIs work again. (Eric Stanley)\n* Fixes to make all/html target tolerant of being run multiple times (Eric Stanley)\n* For user-supplied maps, converted node group to have transform (Eric Stanley)\n* Fixed issue transitioning from circular markup map to other maps (Eric Stanley)\n* Fix displayForm to trigger on the button press (Scott Wilkerson)\n* Fix fo getBBox crash on Firefox (Eric Stanley)\n* Fixed map now resets zoom when form apply()'d (Eric Stanley)\n* Fixed so close box on dialogs actually closes dialog (Eric Stanley)\n* Corrected directive in trends display (Eric Stanley)\n* Fixed minor issue with link in trends links (Eric Stanley)\n* Fixed issue with map displaying on Firefox (Eric Stanley)\n* Added exclusions for ctags generation (Eric Stanley)\n* Update map-popup.html (Scott Wilkerson)\n* Initial commit of new graphical CGIs (Eric Stanley)\n* Fixed Github bug #18 - archivejson.cgi returns wrong host for state change query (Eric Stanley)\n* Status JSON: Added next_check to service details (Eric Stanley)\n* Fixed escaping of keys for scalar values in JSON CGIs (Eric Stanley)\n* build: Include <sys/loadavg.h> if it exists. (Eric J. Mislivec)\n* lib-tests: test-io{cache|broker} need -lsocket to link. (Eric J. Mislivec)\n* lib-tests: test-runcmd assumes GNU echo. (Eric J. Mislivec)\n* lib-tests: Signal handlers don't return int on most platforms, and using a cast was the wrong way to resolve this. (Eric J. Mislivec)\n* Fix some type/format mismatch warnings for pid_t. (Eric J. Mislivec)\n* Fix build on Solaris. (Eric J. Mislivec)\n* runcmd: Fix build when we don't HAVE_SETENV. (Eric J. Mislivec)\n* Fixed checkresult output processing (Eric Mislivec)\n* Corrected escaping of long output macros (Eric Mislivec)\n* Fixed null pointer dereferences in archive JSON (Eric Stanley)\n* Fixed memory overwrite issue in JSON string escaping (Eric Stanley)\n* JSON CGI: Now escaping object and array keys (Eric Stanley)\n\nKNOWN ISSUES\n* New map does not account for multiple parents, leaving \"legacy\" map as an option in the menu\n\n4.0.8 - 08/12/2014\n------------------\nENHANCEMENTS\n* Removed 8 kB string size limitation in JSON CGIs (Eric Stanley)\n* Re-implemented auto-rescheduling of checks (Eric Mislivec)\n* Avoid bunching of checks delayed due to timeperiod constraints (Eric Stanley)\n* Limit the number of autocalculated core workers to not spawn too many on large systems (Eric Mislivec, Janice Singh)\n\nFIXES\n* Removed quotes from numeric duration values in JSON CGIs (Eric Stanley)\n* Fixed escaping in JSON CGIs so all required characters are escaped, and in the correct order (Eric Stanley)\n* Fixed segfault in archive JSON CGI when plugin output was empty (Eric Stanley)\n* Fixed several possibilities for buffer overflow (Eric Mislivec, Dirkjan Bussink)\n* Fixed Tracker #582, #626: Handle VAR=VAL assignments at the start of simple commands (Eric Mislivec, Phil Randal)\n* Fixed Tracker #630: Recognize '<' and '>' as redirection operators (Eric Mislivec)\n* Corrected worker communication protocol documentation (Phil Mayers)\n* Fixed init script to leave config test log in a better location, let sysconfig override init script variables, and not remove nagios.cmd when attempting to start with another instance running (Eric Mislivec, Robin Kearney)\n* Fixed Tracker #361: Downtime notifications not displayed properly (Andrew Widdersheim)\n\n4.0.7 - 06/03/2014\n------------------\nENHANCEMENTS\n* Added value of custom variables to Object JSON output for hosts, services and contacts (Eric Stanley)\n\nFIXES\n* Fixed bug #616: Unescape plugin output read from checkresult files, fix multiline perf data concatenation, and avoid extra memory allocation and copies. (Eric Mislivec)\n* Fixed bug #609: Image on home page doesn't have correct image path prefix. (Derek Brewer)\n* Fixed bug #608: Extra newline in service check timeout output string. (Mauno Pihelgas)\n* Fixed bug #596: Crashes checking contact authorization for host escalations. (Alexey Dvoryanchikov - duplicates #590, #586)\n* Fixed bug #496: Syntax error in exfoliation's common.css. (Karsten Weiss)\n\n4.0.6 - 04/29/2014\n------------------\nENHANCEMENTS\n* Added name of authenticated user to JSON CGI results object (Eric Stanley)\n* Added Nagios Core version to the Status JSON CGI programstatus query (Eric Stanley)\n* Added daemon status to main page (Eric Mislivec)\n\nFIXES\n* Fixed bug #600: Service Check Timeout State always returns OK (0) status (Mauno Pihelgas, Eric Stanley)\n* Fixed bug #583: Status Check Output of (No output on stdout) stderr: (Eric\nStanley - duplicate of bug #573)\n* Fixed bug #573: Service checks returns (No output on stdout) stderr (Eric Stanley)\n* Fixed bug #438: Reloads during downtime causes wrong availability calculations (Eric Stanley)\n* Fixed feed updates when daemon can not access external networks (Eric Mislivec)\n* Archive JSON: Fixed bugs calculating availability (Eric Stanley)\n* Archive JSON: Allow missing logs to be skipped (Eric Stanley)\n\n4.0.5 - 04/11/2014\n------------------\n* Fixed bug #595: Nagios 4 security fix (Alexey Dvoryanchikov, Eric Stanley)\n* Fixed bug #594: Nagios 4 fix contactgroups parsing (Alexey Dvoryanchikov, Eric Stanley)\n* Fixed bug #577: Nagios 4 checks stalled when write to socket failed (Alexey Dvoryanchikov)\n* Fixed bug #580: Nagios 4 memory leak (Eric Stanley)\n* Fixed init script to remove the switching of users when performing configuration verification which was causing failures if nagios user was set to nologin (Scott Wilkerson)\n* Fixed auto creation of RAMDISK via environment variables in init script to properly check existence using $RAMDISK_DIR environment variable. (Scott Wilkerson)\n* Fixed unreferenced variable NagiosVarDir in daemon-init (Eric Mislivec)\n* Fixed bug where audio alerts wouldn't work with a 0 height and width - https://support.nagios.com/forum/viewtopic.php?t=26387 (Scott Wilkerson)\n\n4.0.4 - 03/14/2014\n------------------\nENHANCEMENTS\n* JSON CGIs moved to beta status (Eric Stanley)\n\nFIXES\n* Fixed bug #491,#553: Rebuilt the daemon-init scripts back to something that should work on all systems (Scott Wilkerson)\n\n\n4.0.3 - 02/28/2014\n------------------\nENHANCEMENTS\n* Aliased hourly_value to importance and minimum_value to minimum_importance and deprecated the former (Eric Stanley)\n* Added host and service importance macros (Eric Stanley)\n* Added notifications on flexible downtime expiration (Dan Wittenberg)\n\nFIXES\n* Bug #548: Temporary fix that rejects all external command during restart to prevent Core from crashing (Eric Stanley)\n* Corrected calculation of host importance and importance defaults (Eric Stanley)\n* Fixed bug #498: Nagios 4 enable_environment_macros=1 not working (Eric Stanley, Alexey Dvoryanchikov)\n* No longer checks whether logs can be written when verifying configuration (Eric Stanley)\n* Fixed CGI bug where the CGI could read past the end of the list of CGI variables, potentially crashing the CGI (Scott Wilkerson)\n* Fixed inheritance of hourly_value from host and service templates (Scott Wilkerson)\n* Fixed bug #502: 4.0.0: Configuration -> Service Escalations = incomplete list (Eric Stanley)\n* Fixed bug #523: quotes and double quotes in plugin message are converted to HTML escapes in Nagios 4.0 (duplicate of bug #524)\n* Fixed bug #524: URLs returned in plugin check results are not correctly displayed (Eric Stanley)\n* Fixed bug where passive service checks would return \"Service check timed out after 0.00 seconds\" (Scott Wilkerson)\n\n4.0.2 - 11/25/2013\n------------------\nFIXES\n* Fixed bug 528: Nagios 4.0.1: Logrotation: Only current host- and servicestates saved in rotated logfiles (duplicate of 507)\n* Fixed bug 507: Nagios 4.0.0 - Problem during log rotate (Stefano Ghelfi)\n* Fixed bug 530: RPM spec file sets wrong permissions on plugins directory (duplicate of bug 494)\n* Fixed bug 494: nagios.spec fixes (with patch) (Karsten Weiss)\n* Fixed bug 515: Segsegv after starting up nagios (duplicate of bug 526)\n* Fixed bug 513: Crash while entering downtime for service (duplicate of bug 526)\n* Fixed bug 529: Core Worker failed to reap child in 4.0.1 Description\n* Fixed bug 514: scheduled downtime not showing in web interface (Eric Stanley)\n* Fixed bug 526: sort_downtime() corrupts scheduled_downtime_list causing segfault (Adam James)\n* Fixed bug 492: Nagios 4 fails to remove/add checks upon reload (Eric Stanley)\n* Fixed Bug 484: Beta4.0.0b4 service checks returning (No output on stdout) (Eric Stanley)\n* Fixed Bug 470: statusmap doesn't display info (Cameron Moore)\n* Fixed Bug 499: Security issue in daemon-init.in, function check_config (T\u00f3mas Edwardsson)\n\n4.0.1 - 10/15/2013\n------------------\nENHANCEMENTS\n* Added compiler flags in RPM spec file to reduce compiler noise (Dan Wittenberg)\n* Added logging of failure in dlclose() call (Anton Lofgren)\n* Added a simple query handler interface, nagios-qh.rb (Dan Wittenberg)\n* Multiple code simplifications, additional error handling in downtime code (Andreas Ericsson)\n\nFIXES\n* Reverted commit f99a9a7b which set check_interval to 1 if it was configured as zero.\n* Corrected order of arguments when logging unknown hosts/services (Scott Wilkerson)\n* Downtime initialized before retention data read (Eric Stanley)\n* Patches to make RPM build again (Dan Wittenberg)\n* Ensure that scheduled_downtime_depth never drops below zero (Andreas Ericsson)\n\n4.0.0 - 09/20/2013\n------------------\nSee http://nagios.sourceforge.net/docs/nagioscore/4/en/whatsnew.html for a\nlist of the changes in Nagios Core 4\n", "=======\nTHANKS!\n=======\n\nThe success of Nagios has been due to the fantastic community members that\nsupport it and provide bug reports, patches, and great ideas.  Here are a\nfew of the many members that have contributed to Nagios in various ways\nsince 1999.  If I missed your name, misspelled it or otherwise got it\nwrong, please let me know.\n\n* Adam Bowen\n* Ahmon Dancy\n* Alain Radix\n* Albrecht Dress\n* Alessandro Ren\n* Alex Peeters\n* Alexios Chouhoulas\n* Allan Clark\n* Alok Dubey\n* Aman Gupta\n* Amir Rosenblatt\n* Anders K. Lindgren\n* Andreas Ericsson\n* Andreas Kirchwitz\n* Andrew Kaplan\n* Andrew Widdersheim\n* Andy Finkenstadt\n* Andy Shellam\n* Anton Lofgren\n* Ari Edelkind\n* Armin Wolfermann\n* Arne Hinrichsen\n* Badri Pillai\n* Bastian Friedrich\n* Ben Bell\n* Ben Heavner\n* Bernard Li\n* Bernd Arnold\n* Bill Pier\n* Bo Kersey\n* Bob (Netshell)\n* Bob Rentschler\n* Bogdan Sandu\n* Brad Werschler\n* Brandon Knitter\n* Brian Riggs\n* Brian Seklecki\n* Burkhard Klaus\n* Carlos Velasco\n* Cary Petterborg\n* Charlie Cook\n* Chris Bensend\n* Chris Kolquist\n* Chris Rothecker\n* Chris Witterholt\n* Christian Masopust\n* Christian Mies\n* Christoph Biedl\n* Christoph Kron\n* Christoph Maser\n* Cliff Woolley\n* Dan Gailey\n* Daniel Burke\n* Daniel Koffler\n* Daniel Pouzzner\n* Daniel Wittenberg\n* Darren Gamble\n* Dave Viner\n* David Allan\n* David Kmoch\n* David Schlecht\n* David Tilloy\n* David Walser\n* Dawid Golunski\n* Dean Lane\n* Denis Seleznyov\n* Dennis Biringer\n* Derrick Bennett\n* Devin Bayer\n* Dietmar Rieder\n* Dirkjan Bussink\n* Don Carroll\n* Duncan Ferguson\n* Eirik Robertstad\n* Emanuel Massano\n* Ernst-Deiter Martin\n* Erwan Arzur\n* Esteban Manchado Velazquez\n* Evan Winter\n* Felipe Almeida\n* Florian Weimer\n* Fran Boon\n* Franky Van Liedekerke\n* Frederic Schaer\n* Frederic Van Espen \n* Garry Cook\n* Gary Berger\n* Gary Miller\n* Gavin Adams\n* Geert Vanderkelen\n* Gennaro Tortone\n* Geoff Montee\n* Gerd Mueller\n* Gerhard Lausser\n* gherteg\n* Glenn Thompson\n* Gordon Messmer\n* Gordon Smith\n* Grant Byers\n* Greg Abrams\n* Greg Woods\n* Hayakawa Shinya\n* Helmut Mikulcik\n* Hendrik Baecker\n* Henning Brauer\n* Herbert Straub\n* Hiren Patel\n* Holger Weiss\n* Horvath Tamas\n* Hugo Gayosso\n* Hugo Hallqvist\n* Ian Blenke\n* Ian Cass\n* Igno Kley\n* Ingo Lantschner\n* Ivan Kuncl\n* Jacob Lundqvist\n* James \"Showkilr\" Peterson\n* James Maddison\n* James Moseley\n* Jan David\n* Jan Grant\n* Jan Vejvalka\n* Janet Post\n* Janice Singh\n* Jason Blakey\n* Jason Hedden\n* Jean Gabes\n* Jean-Eric Cuendet\n* Jeff Cours\n* Jeff Johnson\n* Jeffrey Blank\n* Jeffrey Goldschrafe\n* Jeremy Bouse\n* Jeremy Weatherford\n* Jim Crilley\n* Jim Dumser\n* Jim Popovitch\n* Jiri Kostern\n* Jochen Bern\n* Joel Berry\n* Joel Crisp\n* Joerg Linge\n* John Calcote\n* John Rouillard\n* Jon Andrews\n* Jonathan Clarke\n* Jonathan Kamens\n* Jonathan Saggau\n* Jorge Sanchez\n* Joseph Maiorana\n* Josh Soref\n* Josh Thorstad\n* Justin Clarke\n* Kai Kunstmann\n* Kai Ung\n* Karel Salavec\n* Karl DeBisschop\n* Karl Hegbloom\n* Karsten Weiss\n* Kenneth Ray\n* Kevin Benton\n* Kevin Stone\n* Larry Low\n* Lars Hansson\n* Lars Hecking\n* Lars Kellogg-Stedman\n* Lars Michelson\n* Lars Vogdt\n* lev\n* Lonny Selinger\n* Lou Sneddon\n* Ludo Bosmans\n* Luigi Balzano\n* Luiz Felipe R E\n* Luke Ross\n* Marc Powell\n* Marcus Fleige\n* Marcus Hildenbrand\n* Mark DeTrano\n* Mark Frost\n* Mark Goldfinch\n* Mark Schenker\n* Mark Spieth\n* Markus Almroth\n* Markus Baertschi\n* Marlo Bell\n* Martin Green\n* Martin Mielke\n* Mathieu Gagne\n* Matt Ezell\n* Matthew Grant\n* Matthew Richardson\n* Matthias Cramer\n* Matthias Eble\n* Matthias Eichler\n* Matthias Flacke\n* Matthias Flittner\n* Matthias Kerk\n* Matthieu Kermagoret\n* Matthieu Kermagoret\n* Mattias Ryrlen\n* Max Schubert\n* Max Sikstrom\n* Michael Anthon\n* Michael Bailey\n* Michael Bunk\n* Michael Little\n* Michael Lubben\n* Michael Marineau\n* Michael O'Reilly\n* Michael Smedius\n* Michal Zimen\n* Michelle Craft\n* Mika Fischer\n* Mike Bird\n* Mike Dorman\n* Mike McHenry\n* Mindaugas Riauba\n* Mitch Wright \n* Moshe Sharon\n* Nate Shafer\n* Nathan Grennan\n* Nicholas Tang\n* Nick Cleaton\n* Nick Reinking\n* Nick Shore\n* Nikola Vassilev\n* Olivier Beytrison\n* Olivier Jan\n* Parth Laxmikant Kolekar\n* Patrick Proy\n* Patrik Halfar\n* Paul Kent\n* Paul Pot\n* Pavel Satrapa\n* Pawel Zuzelski\n* Pedro Leite\n* Percy Jahn\n* Perry Clarke\n* Peter Ringe\n* Peter Valdemar Morch\n* Peter Westlake\n* Petr Adamec\n* Petya Kohts\n* Phil Mayers\n* Phil Randal\n* Phil Walther\n* Ralph Rossner\n* Ray Bengen\n* Remi Paulmier\n* R\u00e9mi Verschelde \n* Rene Klootwijk\n* Ricardo Maraschini\n* Richard Mayhew\n* Rob Enders\n* Rob Patrick\n* Rob Remus\n* Robert August Vincent II\n* Robert Gash\n* Robert Thompson\n* Roberto Marrodan\n* Robin Kearney\n* Robin Sonefors\n* Ronald Ho\n* Rostislav Opo\u010densk\u00fd\n* Russell Scibetti\n* Ryan Skorstad\n* Ryoji Kobayashi\n* Sam Howard\n* Sean Finney\n* Sebastian Guarino\n* Sebastien Barbereau\n* Sergio Guzman\n* Shad Lords\n* Simon Beale\n* Stanley Hopcroft\n* Stefan Rompf\n* Stefan Schurtz\n* Stephane Urbanovski\n* Stephen Davies\n* Stephen Gran\n* Steve Underwood\n* Steven Pokrandt\n* Stewart James\n* Stig Jacobsen\n* Subhendu Ghosh\n* SUSE Linux Team\n* Sven Nierlein\n* Sven Strickroth\n* Sven-G\u00f6ran Bergh\n* Sylvain Falardeau\n* Szabo Gabor\n* Thomas Dohl\n* Thomas Dunkel\n* Thomas Guyot-Sionnest\n* Thomas Hepper\n* Thomas Sebastien\n* Thomas Stolle\n* Tim Starling\n* Tim Wilde\n* Time Niemueller\n* Tobias Klausmann\n* Tobias Mucke\n* Todd Green\n* Todd Wheeler\n* Tom Bertelson\n* Tom De Blende\n* Tom Welsh\n* Tomer Okavi\n* Ton Voon\n* Torsten Huebler\n* Tyler Lund\n* Uwe Knop\n* Uwe Knop\n* Vadim Okun\n* Volkan Yazici\n* Volker Aust\n* William Leibzon\n* William Preston\n* Wolfgang Barth\n* xoubih\n* Yves Rubin\n* Zakhar Kleyman\n* Z. Liu\n", "/*****************************************************************************\n *\n * NAGIOS.C - Core Program Code For Nagios\n *\n * Program: Nagios Core\n * License: GPL\n *\n * First Written:   01-28-1999 (start of development)\n *\n * Description:\n *\n * Nagios is a network monitoring tool that will check hosts and services\n * that you specify.  It has the ability to notify contacts via email, pager,\n * or other user-defined methods when a service or host goes down and\n * recovers.  Service and host monitoring is done through the use of external\n * plugins which can be developed independently of Nagios.\n *\n * License:\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 2 as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n *\n *****************************************************************************/\n\n#include \"../include/config.h\"\n#include \"../include/common.h\"\n#include \"../include/objects.h\"\n#include \"../include/comments.h\"\n#include \"../include/downtime.h\"\n#include \"../include/statusdata.h\"\n#include \"../include/macros.h\"\n#include \"../include/nagios.h\"\n#include \"../include/sretention.h\"\n#include \"../include/perfdata.h\"\n#include \"../include/broker.h\"\n#include \"../include/nebmods.h\"\n#include \"../include/nebmodules.h\"\n#include \"../include/workers.h\"\n\n/*#define DEBUG_MEMORY 1*/\n#ifdef DEBUG_MEMORY\n#include <mcheck.h>\n#endif\n\nstatic int is_worker;\n\nstatic void set_loadctl_defaults(void)\n{\n\tstruct rlimit rlim;\n\n\t/* Workers need to up 'em, master needs to know 'em */\n\tgetrlimit(RLIMIT_NOFILE, &rlim);\n\trlim.rlim_cur = rlim.rlim_max;\n\tsetrlimit(RLIMIT_NOFILE, &rlim);\n\tloadctl.nofile_limit = rlim.rlim_max;\n#ifdef RLIMIT_NPROC\n\tgetrlimit(RLIMIT_NPROC, &rlim);\n\trlim.rlim_cur = rlim.rlim_max;\n\tsetrlimit(RLIMIT_NPROC, &rlim);\n\tloadctl.nproc_limit = rlim.rlim_max;\n#else\n\tloadctl.nproc_limit = loadctl.nofile_limit / 2;\n#endif\n\n\t/*\n\t * things may have been configured already. Otherwise we\n\t * set some sort of sane defaults here\n\t */\n\tif (!loadctl.jobs_max) {\n\t\tloadctl.jobs_max = loadctl.nproc_limit - 100;\n\t\tif (!is_worker && loadctl.jobs_max > (loadctl.nofile_limit - 50) * wproc_num_workers_online) {\n\t\t\tloadctl.jobs_max = (loadctl.nofile_limit - 50) * wproc_num_workers_online;\n\t\t}\n\t}\n\n\tif (!loadctl.jobs_limit)\n\t\tloadctl.jobs_limit = loadctl.jobs_max;\n\n\tif (!loadctl.backoff_limit)\n\t\tloadctl.backoff_limit = online_cpus() * 2.5;\n\tif (!loadctl.rampup_limit)\n\t\tloadctl.rampup_limit = online_cpus() * 0.8;\n\tif (!loadctl.backoff_change)\n\t\tloadctl.backoff_change = loadctl.jobs_limit * 0.3;\n\tif (!loadctl.rampup_change)\n\t\tloadctl.rampup_change = loadctl.backoff_change * 0.25;\n\tif (!loadctl.check_interval)\n\t\tloadctl.check_interval = 60;\n\tif (!loadctl.jobs_min)\n\t\tloadctl.jobs_min = online_cpus() * 20; /* pessimistic */\n}\n\nstatic int test_path_access(const char *program, int mode)\n{\n\tchar *envpath, *p, *colon;\n\tint ret, our_errno = 1500; /* outside errno range */\n\n\tif (program[0] == '/' || !(envpath = getenv(\"PATH\")))\n\t\treturn access(program, mode);\n\n\tif (!(envpath = strdup(envpath))) {\n\t\terrno = ENOMEM;\n\t\treturn -1;\n\t}\n\n\tfor (p = envpath; p; p = colon + 1) {\n\t\tchar *path;\n\n\t\tcolon = strchr(p, ':');\n\t\tif (colon)\n\t\t\t*colon = 0;\n\t\tasprintf(&path, \"%s/%s\", p, program);\n\t\tret = access(path, mode);\n\t\tfree(path);\n\t\tif (!ret)\n\t\t\tbreak;\n\n\t\tif (ret < 0) {\n\t\t\tif (errno == ENOENT)\n\t\t\t\tcontinue;\n\t\t\tif (our_errno > errno)\n\t\t\t\tour_errno = errno;\n\t\t}\n\t\tif (!colon)\n\t\t\tbreak;\n\t}\n\n\tfree(envpath);\n\n\tif (!ret)\n\t\terrno = 0;\n\telse\n\t\terrno = our_errno;\n\n\treturn ret;\n}\n\nstatic int nagios_core_worker(const char *path)\n{\n\tint sd, ret;\n\tchar response[128];\n\n\tis_worker = 1;\n\n\tset_loadctl_defaults();\n\n\tsd = nsock_unix(path, NSOCK_TCP | NSOCK_CONNECT);\n\tif (sd < 0) {\n\t\tprintf(\"Failed to connect to query socket '%s': %s: %s\\n\",\n\t\t\t   path, nsock_strerror(sd), strerror(errno));\n\t\treturn 1;\n\t}\n\n\tret = nsock_printf_nul(sd, \"@wproc register name=Core Worker %ld;pid=%ld\", (long)getpid(), (long)getpid());\n\tif (ret < 0) {\n\t\tprintf(\"Failed to register as worker.\\n\");\n\t\treturn 1;\n\t}\n\n\tret = read(sd, response, 3);\n\tif (ret != 3) {\n\t\tprintf(\"Failed to read response from wproc manager\\n\");\n\t\treturn 1;\n\t}\n\tif (memcmp(response, \"OK\", 3)) {\n\t\tread(sd, response + 3, sizeof(response) - 4);\n\t\tresponse[sizeof(response) - 2] = 0;\n\t\tprintf(\"Failed to register with wproc manager: %s\\n\", response);\n\t\treturn 1;\n\t}\n\n\tenter_worker(sd, start_cmd);\n\treturn 0;\n}\n\n/*\n * only handles logfile for now, which we stash in macros to\n * make sure we can log *somewhere* in case the new path is\n * completely inaccessible.\n */\nstatic int test_configured_paths(void)\n{\n\tFILE *fp;\n\tnagios_macros *mac;\n\n\tmac = get_global_macros();\n\n\tfp = fopen(log_file, \"a+\");\n\tif (!fp) {\n\t\t/*\n\t\t * we do some variable trashing here so logit() can\n\t\t * open the old logfile (if any), in case we got a\n\t\t * restart command or a SIGHUP\n\t\t */\n\t\tchar *value_absolute = log_file;\n\t\tlog_file = mac->x[MACRO_LOGFILE];\n\t\tlogit(NSLOG_CONFIG_ERROR, TRUE, \"Error: Failed to open logfile '%s' for writing: %s\\n\", value_absolute, strerror(errno));\n\t\treturn ERROR;\n\t\t}\n\n\tfclose(fp);\n\n\t/* save the macro */\n\tmac->x[MACRO_LOGFILE] = log_file;\n\treturn OK;\n}\n\nint main(int argc, char **argv) {\n\tint result;\n\tint error = FALSE;\n\tint display_license = FALSE;\n\tint display_help = FALSE;\n\tint c = 0;\n\tstruct tm *tm, tm_s;\n\ttime_t now;\n\tchar datestring[256];\n\tnagios_macros *mac;\n\tconst char *worker_socket = NULL;\n\tint i;\n#ifdef HAVE_SIGACTION\n\tstruct sigaction sig_action;\n#endif\n\n#ifdef HAVE_GETOPT_H\n\tint option_index = 0;\n\tstatic struct option long_options[] = {\n\t\t\t{\"help\", no_argument, 0, 'h'},\n\t\t\t{\"version\", no_argument, 0, 'V'},\n\t\t\t{\"license\", no_argument, 0, 'V'},\n\t\t\t{\"verify-config\", no_argument, 0, 'v'},\n\t\t\t{\"daemon\", no_argument, 0, 'd'},\n\t\t\t{\"test-scheduling\", no_argument, 0, 's'},\n\t\t\t{\"precache-objects\", no_argument, 0, 'p'},\n\t\t\t{\"use-precached-objects\", no_argument, 0, 'u'},\n\t\t\t{\"enable-timing-point\", no_argument, 0, 'T'},\n\t\t\t{\"worker\", required_argument, 0, 'W'},\n\t\t\t{0, 0, 0, 0}\n\t\t};\n#define getopt(argc, argv, o) getopt_long(argc, argv, o, long_options, &option_index)\n#endif\n\n\tmemset(&loadctl, 0, sizeof(loadctl));\n\tmac = get_global_macros();\n\n\t/* make sure we have the correct number of command line arguments */\n\tif(argc < 2)\n\t\terror = TRUE;\n\n\t/* get all command line arguments */\n\twhile(1) {\n\t\tc = getopt(argc, argv, \"+hVvdspuxTW\");\n\n\t\tif(c == -1 || c == EOF)\n\t\t\tbreak;\n\n\t\tswitch(c) {\n\n\t\t\tcase '?': /* usage */\n\t\t\tcase 'h':\n\t\t\t\tdisplay_help = TRUE;\n\t\t\t\tbreak;\n\n\t\t\tcase 'V': /* version */\n\t\t\t\tdisplay_license = TRUE;\n\t\t\t\tbreak;\n\n\t\t\tcase 'v': /* verify */\n\t\t\t\tverify_config++;\n\t\t\t\tbreak;\n\n\t\t\tcase 's': /* scheduling check */\n\t\t\t\ttest_scheduling = TRUE;\n\t\t\t\tbreak;\n\n\t\t\tcase 'd': /* daemon mode */\n\t\t\t\tdaemon_mode = TRUE;\n\t\t\t\tbreak;\n\n\t\t\tcase 'p': /* precache object config */\n\t\t\t\tprecache_objects = TRUE;\n\t\t\t\tbreak;\n\n\t\t\tcase 'u': /* use precached object config */\n\t\t\t\tuse_precached_objects = TRUE;\n\t\t\t\tbreak;\n\t\t\tcase 'T':\n\t\t\t\tenable_timing_point = TRUE;\n\t\t\t\tbreak;\n\t\t\tcase 'W':\n\t\t\t\tworker_socket = optarg;\n\t\t\t\tbreak;\n\n\t\t\tcase 'x':\n\t\t\t\tprintf(\"Warning: -x is deprecated and will be removed\\n\");\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\n#ifdef DEBUG_MEMORY\n\tmtrace();\n#endif\n\t/* if we're a worker we can skip everything below */\n\tif(worker_socket) {\n\t\texit(nagios_core_worker(worker_socket));\n\t}\n\n\t/* Initialize configuration variables */                             \n\tinit_main_cfg_vars(1);\n\tinit_shared_cfg_vars(1);\n\n\tif(daemon_mode == FALSE) {\n\t\tprintf(\"\\nNagios Core %s\\n\", PROGRAM_VERSION);\n\t\tprintf(\"Copyright (c) 2009-present Nagios Core Development Team and Community Contributors\\n\");\n\t\tprintf(\"Copyright (c) 1999-2009 Ethan Galstad\\n\");\n\t\tprintf(\"Last Modified: %s\\n\", PROGRAM_MODIFICATION_DATE);\n\t\tprintf(\"License: GPL\\n\\n\");\n\t\tprintf(\"Website: https://www.nagios.org\\n\");\n\t\t}\n\n\t/* just display the license */\n\tif(display_license == TRUE) {\n\n\t\tprintf(\"This program is free software; you can redistribute it and/or modify\\n\");\n\t\tprintf(\"it under the terms of the GNU General Public License version 2 as\\n\");\n\t\tprintf(\"published by the Free Software Foundation.\\n\\n\");\n\t\tprintf(\"This program is distributed in the hope that it will be useful,\\n\");\n\t\tprintf(\"but WITHOUT ANY WARRANTY; without even the implied warranty of\\n\");\n\t\tprintf(\"MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n\");\n\t\tprintf(\"GNU General Public License for more details.\\n\\n\");\n\t\tprintf(\"You should have received a copy of the GNU General Public License\\n\");\n\t\tprintf(\"along with this program; if not, write to the Free Software\\n\");\n\t\tprintf(\"Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\\n\\n\");\n\n\t\texit(OK);\n\t\t}\n\n\t/* make sure we got the main config file on the command line... */\n\tif(optind >= argc)\n\t\terror = TRUE;\n\n\t/* if there are no command line options (or if we encountered an error), print usage */\n\tif(error == TRUE || display_help == TRUE) {\n\n\t\tprintf(\"Usage: %s [options] <main_config_file>\\n\", argv[0]);\n\t\tprintf(\"\\n\");\n\t\tprintf(\"Options:\\n\");\n\t\tprintf(\"\\n\");\n\t\tprintf(\"  -v, --verify-config          Verify all configuration data (-v -v for more info)\\n\");\n\t\tprintf(\"  -s, --test-scheduling        Shows projected/recommended check scheduling and other\\n\");\n\t\tprintf(\"                               diagnostic info based on the current configuration files.\\n\");\n\t\tprintf(\"  -T, --enable-timing-point    Enable timed commentary on initialization\\n\");\n\t\tprintf(\"  -x, --dont-verify-paths      Deprecated (Don't check for circular object paths)\\n\");\n\t\tprintf(\"  -p, --precache-objects       Precache object configuration\\n\");\n\t\tprintf(\"  -u, --use-precached-objects  Use precached object config file\\n\");\n\t\tprintf(\"  -d, --daemon                 Starts Nagios in daemon mode, instead of as a foreground process\\n\");\n\t\tprintf(\"  -W, --worker /path/to/socket Act as a worker for an already running daemon\\n\");\n\t\tprintf(\"\\n\");\n\t\tprintf(\"Visit the Nagios website at https://www.nagios.org/ for bug fixes, new\\n\");\n\t\tprintf(\"releases, online documentation, FAQs, information on subscribing to\\n\");\n\t\tprintf(\"the mailing lists, and commercial support options for Nagios.\\n\");\n\t\tprintf(\"\\n\");\n\n\t\texit(ERROR);\n\t\t}\n\n\n\t/*\n\t * config file is last argument specified.\n\t * Make sure it uses an absolute path\n\t */\n\tconfig_file = nspath_absolute(argv[optind], NULL);\n\tif(config_file == NULL) {\n\t\tprintf(\"Error allocating memory.\\n\");\n\t\texit(ERROR);\n\t\t}\n\n\tconfig_file_dir = nspath_absolute_dirname(config_file, NULL);\n\n\t/* \n\t * Set the signal handler for the SIGXFSZ signal here because\n\t * we may encounter this signal before the other signal handlers\n\t * are set.\n\t */\n#ifdef HAVE_SIGACTION\n\tsig_action.sa_sigaction = NULL;\n\tsig_action.sa_handler = handle_sigxfsz;\n\tsigfillset(&sig_action.sa_mask);\n\tsig_action.sa_flags = SA_NODEFER|SA_RESTART;\n\tsigaction(SIGXFSZ, &sig_action, NULL);\n#else\n\tsignal(SIGXFSZ, handle_sigxfsz);\n#endif\n\n\t/*\n\t * let's go to town. We'll be noisy if we're verifying config\n\t * or running scheduling tests.\n\t */\n\tif(verify_config || test_scheduling || precache_objects) {\n\t\treset_variables();\n\t\t/*\n\t\t * if we don't beef up our resource limits as much as\n\t\t * we can, it's quite possible we'll run headlong into\n\t\t * EAGAIN due to too many processes when we try to\n\t\t * drop privileges later.\n\t\t */\n\t\tset_loadctl_defaults();\n\n\t\tif(verify_config)\n\t\t\tprintf(\"Reading configuration data...\\n\");\n\n\t\t/* read our config file */\n\t\tresult = read_main_config_file(config_file);\n\t\tif(result != OK) {\n\t\t\tprintf(\"   Error processing main config file!\\n\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\tif(verify_config)\n\t\t\tprintf(\"   Read main config file okay...\\n\");\n\n\t\t/* drop privileges */\n\t\tif((result = drop_privileges(nagios_user, nagios_group)) == ERROR) {\n\t\t\tprintf(\"   Failed to drop privileges.  Aborting.\");\n\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\t/*\n\t\t * this must come after dropping privileges, so we make\n\t\t * sure to test access permissions as the right user.\n\t\t */\n\t\tif (!verify_config && test_configured_paths() == ERROR) {\n\t\t\tprintf(\"   One or more path problems detected. Aborting.\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\t/* read object config files */\n\t\tresult = read_all_object_data(config_file);\n\t\tif(result != OK) {\n\t\t\tprintf(\"   Error processing object config files!\\n\\n\");\n\t\t\t/* if the config filename looks fishy, warn the user */\n\t\t\tif(!strstr(config_file, \"nagios.cfg\")) {\n\t\t\t\tprintf(\"\\n***> The name of the main configuration file looks suspicious...\\n\");\n\t\t\t\tprintf(\"\\n\");\n\t\t\t\tprintf(\"     Make sure you are specifying the name of the MAIN configuration file on\\n\");\n\t\t\t\tprintf(\"     the command line and not the name of another configuration file.  The\\n\");\n\t\t\t\tprintf(\"     main configuration file is typically '%s'\\n\", DEFAULT_CONFIG_FILE);\n\t\t\t\t}\n\n\t\t\tprintf(\"\\n***> One or more problems was encountered while processing the config files...\\n\");\n\t\t\tprintf(\"\\n\");\n\t\t\tprintf(\"     Check your configuration file(s) to ensure that they contain valid\\n\");\n\t\t\tprintf(\"     directives and data definitions.  If you are upgrading from a previous\\n\");\n\t\t\tprintf(\"     version of Nagios, you should be aware that some variables/definitions\\n\");\n\t\t\tprintf(\"     may have been removed or modified in this version.  Make sure to read\\n\");\n\t\t\tprintf(\"     the HTML documentation regarding the config files, as well as the\\n\");\n\t\t\tprintf(\"     'Whats New' section to find out what has changed.\\n\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\tif(verify_config) {\n\t\t\tprintf(\"   Read object config files okay...\\n\\n\");\n\t\t\tprintf(\"Running pre-flight check on configuration data...\\n\\n\");\n\t\t\t}\n\n\t\t/* run the pre-flight check to make sure things look okay... */\n\t\tresult = pre_flight_check();\n\n\t\tif(result != OK) {\n\t\t\tprintf(\"\\n***> One or more problems was encountered while running the pre-flight check...\\n\");\n\t\t\tprintf(\"\\n\");\n\t\t\tprintf(\"     Check your configuration file(s) to ensure that they contain valid\\n\");\n\t\t\tprintf(\"     directives and data definitions.  If you are upgrading from a previous\\n\");\n\t\t\tprintf(\"     version of Nagios, you should be aware that some variables/definitions\\n\");\n\t\t\tprintf(\"     may have been removed or modified in this version.  Make sure to read\\n\");\n\t\t\tprintf(\"     the HTML documentation regarding the config files, as well as the\\n\");\n\t\t\tprintf(\"     'Whats New' section to find out what has changed.\\n\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\tif(verify_config) {\n\t\t\tprintf(\"\\nThings look okay - No serious problems were detected during the pre-flight check\\n\");\n\t\t\t}\n\n\t\t/* scheduling tests need a bit more than config verifications */\n\t\tif(test_scheduling == TRUE) {\n\n\t\t\t/* we'll need the event queue here so we can time insertions */\n\t\t\tinit_event_queue();\n\t\t\ttiming_point(\"Done initializing event queue\\n\");\n\n\t\t\t/* read initial service and host state information */\n\t\t\tinitialize_retention_data(config_file);\n\t\t\tread_initial_state_information();\n\t\t\ttiming_point(\"Retention data and initial state parsed\\n\");\n\n\t\t\t/* initialize the event timing loop */\n\t\t\tinit_timing_loop();\n\t\t\ttiming_point(\"Timing loop initialized\\n\");\n\n\t\t\t/* display scheduling information */\n\t\t\tdisplay_scheduling_info();\n\t\t\t}\n\n\t\tif(precache_objects) {\n\t\t\tresult = fcache_objects(object_precache_file);\n\t\t\ttiming_point(\"Done precaching objects\\n\");\n\t\t\tif(result == OK) {\n\t\t\t\tprintf(\"Object precache file created:\\n%s\\n\", object_precache_file);\n\t\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\"Failed to precache objects to '%s': %s\\n\", object_precache_file, strerror(errno));\n\t\t\t\t}\n\t\t\t}\n\n\t\t/* clean up after ourselves */\n\t\tcleanup();\n\n\t\t/* exit */\n\t\ttiming_point(\"Exiting\\n\");\n\n\t\t/* make valgrind shut up about still reachable memory */\n\t\tneb_free_module_list();\n\t\tfree(config_file_dir);\n\t\tfree(config_file);\n\n\t\texit(result);\n\t\t}\n\n\n\t/* else start to monitor things... */\n\telse {\n\n\t\t/*\n\t\t * if we're called with a relative path we must make\n\t\t * it absolute so we can launch our workers.\n\t\t * If not, we needn't bother, as we're using execvp()\n\t\t */\n\t\tif (strchr(argv[0], '/'))\n\t\t\tnagios_binary_path = nspath_absolute(argv[0], NULL);\n\t\telse\n\t\t\tnagios_binary_path = strdup(argv[0]);\n\n\t\tif (!nagios_binary_path) {\n\t\t\tlogit(NSLOG_RUNTIME_ERROR, TRUE, \"Error: Unable to allocate memory for nagios_binary_path\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\tif (!(nagios_iobs = iobroker_create())) {\n\t\t\tlogit(NSLOG_RUNTIME_ERROR, TRUE, \"Error: Failed to create IO broker set: %s\\n\",\n\t\t\t\t  strerror(errno));\n\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\t/* keep monitoring things until we get a shutdown command */\n\t\tdo {\n\t\t\t/* reset internal book-keeping (in case we're restarting) */\n\t\t\twproc_num_workers_spawned = wproc_num_workers_online = 0;\n\t\t\tcaught_signal = sigshutdown = FALSE;\n\t\t\tsig_id = 0;\n\n\t\t\t/* reset program variables */\n\t\t\treset_variables();\n\t\t\ttiming_point(\"Variables reset\\n\");\n\n\t\t\t/* get PID */\n\t\t\tnagios_pid = (int)getpid();\n\n\t\t\t/* read in the configuration files (main and resource config files) */\n\t\t\tresult = read_main_config_file(config_file);\n\t\t\tif (result != OK) {\n\t\t\t\tlogit(NSLOG_CONFIG_ERROR, TRUE, \"Error: Failed to process config file '%s'. Aborting\\n\", config_file);\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t\t}\n\t\t\ttiming_point(\"Main config file read\\n\");\n\n\t\t\t/* NOTE 11/06/07 EG moved to after we read config files, as user may have overridden timezone offset */\n\t\t\t/* get program (re)start time and save as macro */\n\t\t\tprogram_start = time(NULL);\n\t\t\tmy_free(mac->x[MACRO_PROCESSSTARTTIME]);\n\t\t\tasprintf(&mac->x[MACRO_PROCESSSTARTTIME], \"%llu\", (unsigned long long)program_start);\n\n\t\t\t/* drop privileges */\n\t\t\tif(drop_privileges(nagios_user, nagios_group) == ERROR) {\n\n\t\t\t\tlogit(NSLOG_PROCESS_INFO | NSLOG_RUNTIME_ERROR | NSLOG_CONFIG_ERROR, TRUE, \"Failed to drop privileges.  Aborting.\");\n\n\t\t\t\tcleanup();\n\t\t\t\texit(ERROR);\n\t\t\t\t}\n\n\t\t\tif (test_path_access(nagios_binary_path, X_OK)) {\n\t\t\t\tlogit(NSLOG_RUNTIME_ERROR, TRUE, \"Error: failed to access() %s: %s\\n\", nagios_binary_path, strerror(errno));\n\t\t\t\tlogit(NSLOG_RUNTIME_ERROR, TRUE, \"Error: Spawning workers will be impossible. Aborting.\\n\");\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t\t}\n\n\t\t\tif (test_configured_paths() == ERROR) {\n\t\t\t\t/* error has already been logged */\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t\t}\n\t\t\t/* enter daemon mode (unless we're restarting...) */\n\t\t\tif(daemon_mode == TRUE && sigrestart == FALSE) {\n\n\t\t\t\tresult = daemon_init();\n\n\t\t\t\t/* we had an error daemonizing, so bail... */\n\t\t\t\tif(result == ERROR) {\n\t\t\t\t\tlogit(NSLOG_PROCESS_INFO | NSLOG_RUNTIME_ERROR, TRUE, \"Bailing out due to failure to daemonize. (PID=%d)\", (int)getpid());\n\t\t\t\t\tcleanup();\n\t\t\t\t\texit(EXIT_FAILURE);\n\t\t\t\t\t}\n\n\t\t\t\t/* get new PID */\n\t\t\t\tnagios_pid = (int)getpid();\n\t\t\t\t}\n\n\t\t\t/* this must be logged after we read config data, as user may have changed location of main log file */\n\t\t\tlogit(NSLOG_PROCESS_INFO, TRUE, \"Nagios %s starting... (PID=%d)\\n\", PROGRAM_VERSION, (int)getpid());\n\n\t\t\t/* log the local time - may be different than clock time due to timezone offset */\n\t\t\tnow = time(NULL);\n\t\t\ttm = localtime_r(&now, &tm_s);\n\t\t\tstrftime(datestring, sizeof(datestring), \"%a %b %d %H:%M:%S %Z %Y\", tm);\n\t\t\tlogit(NSLOG_PROCESS_INFO, TRUE, \"Local time is %s\", datestring);\n\n\t\t\t/* write log version/info */\n\t\t\twrite_log_file_info(NULL);\n\n\t\t\t/* open debug log now that we're the right user */\n\t\t\topen_debug_log();\n\n#ifdef USE_EVENT_BROKER\n\t\t\t/* initialize modules */\n\t\t\tneb_init_modules();\n\t\t\tneb_init_callback_list();\n#endif\n\t\t\ttiming_point(\"NEB module API initialized\\n\");\n\n\t\t\t/* handle signals (interrupts) before we do any socket I/O */\n\t\t\tsetup_sighandler();\n\n\t\t\t/*\n\t\t\t * Initialize query handler and event subscription service.\n\t\t\t * This must be done before modules are initialized, so\n\t\t\t * the modules can use our in-core stuff properly\n\t\t\t */\n\t\t\tif (qh_init(qh_socket_path ? qh_socket_path : DEFAULT_QUERY_SOCKET) != OK) {\n\t\t\t\tlogit(NSLOG_RUNTIME_ERROR, TRUE, \"Error: Failed to initialize query handler. Aborting\\n\");\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\t\t\ttiming_point(\"Query handler initialized\\n\");\n\t\t\tnerd_init();\n\t\t\ttiming_point(\"NERD initialized\\n\");\n\n\t\t\t/* initialize check workers */\n\t\t\tif(init_workers(num_check_workers) < 0) {\n\t\t\t\tlogit(NSLOG_RUNTIME_ERROR, TRUE, \"Failed to spawn workers. Aborting\\n\");\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\t\t\ttiming_point(\"%u workers spawned\\n\", wproc_num_workers_spawned);\n\t\t\ti = 0;\n\t\t\twhile (i < 50 && wproc_num_workers_online < wproc_num_workers_spawned) {\n\t\t\t\tiobroker_poll(nagios_iobs, 50);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ttiming_point(\"%u workers connected\\n\", wproc_num_workers_online);\n\n\t\t\t/* now that workers have arrived we can set the defaults */\n\t\t\tset_loadctl_defaults();\n\n#ifdef USE_EVENT_BROKER\n\t\t\t/* load modules */\n\t\t\tif (neb_load_all_modules() != OK) {\n\t\t\t\tlogit(NSLOG_CONFIG_ERROR, ERROR, \"Error: Module loading failed. Aborting.\\n\");\n\t\t\t\t/* if we're dumping core, we must remove all dl-files */\n\t\t\t\tif (daemon_dumps_core)\n\t\t\t\t\tneb_unload_all_modules(NEBMODULE_FORCE_UNLOAD, NEBMODULE_NEB_SHUTDOWN);\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t\t}\n\t\t\ttiming_point(\"Modules loaded\\n\");\n\n\t\t\t/* send program data to broker */\n\t\t\tbroker_program_state(NEBTYPE_PROCESS_PRELAUNCH, NEBFLAG_NONE, NEBATTR_NONE, NULL);\n\t\t\ttiming_point(\"First callback made\\n\");\n#endif\n\n\t\t\t/* read in all object config data */\n\t\t\tif(result == OK)\n\t\t\t\tresult = read_all_object_data(config_file);\n\n\t\t\t/* there was a problem reading the config files */\n\t\t\tif(result != OK)\n\t\t\t\tlogit(NSLOG_PROCESS_INFO | NSLOG_RUNTIME_ERROR | NSLOG_CONFIG_ERROR, TRUE, \"Bailing out due to one or more errors encountered in the configuration files. Run Nagios from the command line with the -v option to verify your config before restarting. (PID=%d)\", (int)getpid());\n\n\t\t\telse {\n\n\t\t\t\t/* run the pre-flight check to make sure everything looks okay*/\n\t\t\t\tif((result = pre_flight_check()) != OK)\n\t\t\t\t\tlogit(NSLOG_PROCESS_INFO | NSLOG_RUNTIME_ERROR | NSLOG_VERIFICATION_ERROR, TRUE, \"Bailing out due to errors encountered while running the pre-flight check.  Run Nagios from the command line with the -v option to verify your config before restarting. (PID=%d)\\n\", (int)getpid());\n\t\t\t\t}\n\n\t\t\t/* an error occurred that prevented us from (re)starting */\n\t\t\tif(result != OK) {\n\n\t\t\t\t/* if we were restarting, we need to cleanup from the previous run */\n\t\t\t\tif(sigrestart == TRUE) {\n\n\t\t\t\t\t/* clean up the status data */\n\t\t\t\t\tcleanup_status_data(TRUE);\n\t\t\t\t\t}\n\n#ifdef USE_EVENT_BROKER\n\t\t\t\t/* send program data to broker */\n\t\t\t\tbroker_program_state(NEBTYPE_PROCESS_SHUTDOWN, NEBFLAG_PROCESS_INITIATED, NEBATTR_SHUTDOWN_ABNORMAL, NULL);\n#endif\n\t\t\t\tcleanup();\n\t\t\t\texit(ERROR);\n\t\t\t\t}\n\n\t\t\ttiming_point(\"Object configuration parsed and understood\\n\");\n\n\t\t\t/* write the objects.cache file */\n\t\t\tfcache_objects(object_cache_file);\n\t\t\ttiming_point(\"Objects cached\\n\");\n\n\t\t\tinit_event_queue();\n\t\t\ttiming_point(\"Event queue initialized\\n\");\n\n\n#ifdef USE_EVENT_BROKER\n\t\t\t/* send program data to broker */\n\t\t\tbroker_program_state(NEBTYPE_PROCESS_START, NEBFLAG_NONE, NEBATTR_NONE, NULL);\n#endif\n\n\t\t\t/* initialize status data unless we're starting */\n\t\t\tif(sigrestart == FALSE) {\n\t\t\t\tinitialize_status_data(config_file);\n\t\t\t\ttiming_point(\"Status data initialized\\n\");\n\t\t\t\t}\n\n\t\t\t/* initialize scheduled downtime data */\n\t\t\tinitialize_downtime_data();\n\t\t\ttiming_point(\"Downtime data initialized\\n\");\n\n\t\t\t/* read initial service and host state information  */\n\t\t\tinitialize_retention_data(config_file);\n\t\t\ttiming_point(\"Retention data initialized\\n\");\n\t\t\tread_initial_state_information();\n\t\t\ttiming_point(\"Initial state information read\\n\");\n\n\t\t\t/* initialize comment data */\n\t\t\tinitialize_comment_data();\n\t\t\ttiming_point(\"Comment data initialized\\n\");\n\n\t\t\t/* initialize performance data */\n\t\t\tinitialize_performance_data(config_file);\n\t\t\ttiming_point(\"Performance data initialized\\n\");\n\n\t\t\t/* initialize the event timing loop */\n\t\t\tinit_timing_loop();\n\t\t\ttiming_point(\"Event timing loop initialized\\n\");\n\n\t\t\t/* initialize check statistics */\n\t\t\tinit_check_stats();\n\t\t\ttiming_point(\"check stats initialized\\n\");\n\n\t\t\t/* check for updates */\n\t\t\tcheck_for_nagios_updates(FALSE, TRUE);\n\t\t\ttiming_point(\"Update check concluded\\n\");\n\n\t\t\t/* update all status data (with retained information) */\n\t\t\tupdate_all_status_data();\n\t\t\ttiming_point(\"Status data updated\\n\");\n\n\t\t\t/* log initial host and service state */\n\t\t\tlog_host_states(INITIAL_STATES, NULL);\n\t\t\tlog_service_states(INITIAL_STATES, NULL);\n\t\t\ttiming_point(\"Initial states logged\\n\");\n\n\t\t\t/* reset the restart flag */\n\t\t\tsigrestart = FALSE;\n\n\t\t\t/* fire up command file worker */\n\t\t\tlaunch_command_file_worker();\n\t\t\ttiming_point(\"Command file worker launched\\n\");\n\n#ifdef USE_EVENT_BROKER\n\t\t\t/* send program data to broker */\n\t\t\tbroker_program_state(NEBTYPE_PROCESS_EVENTLOOPSTART, NEBFLAG_NONE, NEBATTR_NONE, NULL);\n#endif\n\n\t\t\t/* get event start time and save as macro */\n\t\t\tevent_start = time(NULL);\n\t\t\tmy_free(mac->x[MACRO_EVENTSTARTTIME]);\n\t\t\tasprintf(&mac->x[MACRO_EVENTSTARTTIME], \"%llu\", (unsigned long long)event_start);\n\n\t\t\ttiming_point(\"Entering event execution loop\\n\");\n\t\t\t/***** start monitoring all services *****/\n\t\t\t/* (doesn't return until a restart or shutdown signal is encountered) */\n\t\t\tevent_execution_loop();\n\n\t\t\t/*\n\t\t\t * immediately deinitialize the query handler so it\n\t\t\t * can remove modules that have stashed data with it\n\t\t\t */\n\t\t\tqh_deinit(qh_socket_path ? qh_socket_path : DEFAULT_QUERY_SOCKET);\n\n\t\t\t/* 03/01/2007 EG Moved from sighandler() to prevent FUTEX locking problems under NPTL */\n\t\t\t/* 03/21/2007 EG SIGSEGV signals are still logged in sighandler() so we don't loose them */\n\t\t\t/* did we catch a signal? */\n\t\t\tif(caught_signal == TRUE) {\n\n\t\t\t\tif(sig_id == SIGHUP)\n\t\t\t\t\tlogit(NSLOG_PROCESS_INFO, TRUE, \"Caught SIGHUP, restarting...\\n\");\n\n\t\t\t\t}\n\n#ifdef USE_EVENT_BROKER\n\t\t\t/* send program data to broker */\n\t\t\tbroker_program_state(NEBTYPE_PROCESS_EVENTLOOPEND, NEBFLAG_NONE, NEBATTR_NONE, NULL);\n\t\t\tif(sigshutdown == TRUE)\n\t\t\t\tbroker_program_state(NEBTYPE_PROCESS_SHUTDOWN, NEBFLAG_USER_INITIATED, NEBATTR_SHUTDOWN_NORMAL, NULL);\n\t\t\telse if(sigrestart == TRUE)\n\t\t\t\tbroker_program_state(NEBTYPE_PROCESS_RESTART, NEBFLAG_USER_INITIATED, NEBATTR_RESTART_NORMAL, NULL);\n#endif\n\n\t\t\t/* save service and host state information */\n\t\t\tsave_state_information(FALSE);\n\t\t\tcleanup_retention_data();\n\n\t\t\t/* clean up performance data */\n\t\t\tcleanup_performance_data();\n\n\t\t\t/* clean up the scheduled downtime data */\n\t\t\tcleanup_downtime_data();\n\n\t\t\t/* clean up the status data unless we're restarting */\n\t\t\tif(sigrestart == FALSE) {\n\t\t\t\tcleanup_status_data(TRUE);\n\t\t\t\t}\n\n\t\t\tfree_worker_memory(WPROC_FORCE);\n\t\t\t/* shutdown stuff... */\n\t\t\tif(sigshutdown == TRUE) {\n\t\t\t\tiobroker_destroy(nagios_iobs, IOBROKER_CLOSE_SOCKETS);\n\t\t\t\tnagios_iobs = NULL;\n\n\t\t\t\t/* log a shutdown message */\n\t\t\t\tlogit(NSLOG_PROCESS_INFO, TRUE, \"Successfully shutdown... (PID=%d)\\n\", (int)getpid());\n\t\t\t\t}\n\n\t\t\t/* clean up after ourselves */\n\t\t\tcleanup();\n\n\t\t\t/* close debug log */\n\t\t\tclose_debug_log();\n\n\t\t\t}\n\t\twhile(sigrestart == TRUE && sigshutdown == FALSE);\n\n\t\tif(daemon_mode == TRUE)\n\t\t\tunlink(lock_file);\n\n\t\t/* free misc memory */\n\t\tmy_free(lock_file);\n\t\tmy_free(config_file);\n\t\tmy_free(config_file_dir);\n\t\tmy_free(nagios_binary_path);\n\t\t}\n\n\treturn OK;\n\t}\n", "dnl Process this -*-m4-*- file with autoconf to produce a configure script.\n\ndnl Disable caching\ndefine([AC_CACHE_LOAD],)\ndefine([AC_CACHE_SAVE],)\n\nAC_INIT(base/nagios.c)\nAC_CONFIG_HEADER(include/config.h lib/snprintf.h lib/iobroker.h)\nAC_PREFIX_DEFAULT(/usr/local/nagios)\n\nPKG_NAME=nagios\n\nPKG_VERSION=\"4.3.2\"\nPKG_HOME_URL=\"https://www.nagios.org/\"\nPKG_REL_DATE=\"2017-05-09\"\n\ndnl Figure out how to invoke \"install\" and what install options to use.\nAC_PROG_INSTALL\nAC_SUBST(INSTALL)\n\ndnl What OS are we running?\nAC_CANONICAL_HOST\n\nAC_CONFIG_FILES([html/index.php])\n\ndnl Checks for programs.\nAC_PROG_CC\nAC_PROG_MAKE_SET\nAC_PROG_LN_S\nAC_PATH_PROG([STRIP],[strip],[true])\n\ndnl Checks for header files.\nAC_HEADER_STDC\nAC_HEADER_TIME\nAC_HEADER_SYS_WAIT\nAC_CHECK_HEADERS(arpa/inet.h ctype.h dirent.h errno.h fcntl.h getopt.h grp.h)\nAC_CHECK_HEADERS(libgen.h limits.h math.h netdb.h netinet/in.h pwd.h regex.h)\nAC_CHECK_HEADERS(signal.h socket.h stdarg.h string.h strings.h sys/loadavg.h)\nAC_CHECK_HEADERS(sys/mman.h sys/types.h sys/time.h sys/resource.h sys/wait.h)\nAC_CHECK_HEADERS(sys/socket.h sys/stat.h sys/timeb.h sys/un.h sys/ipc.h)\nAC_CHECK_HEADERS(sys/msg.h sys/poll.h syslog.h uio.h unistd.h locale.h wchar.h)\nAC_CHECK_HEADERS(sys/prctl.h)\n\ndnl Checks for typedefs, structures, and compiler characteristics.\nAC_C_CONST\nAC_STRUCT_TM\nAC_STRUCT_TIMEZONE\nAC_TYPE_MODE_T\nAC_TYPE_PID_T\nAC_TYPE_SIZE_T\nAC_TYPE_SIGNAL\nAC_TYPE_GETGROUPS\n\n\ndnl Check for asprintf() and friends...\nAC_CACHE_CHECK([for va_copy],ac_cv_HAVE_VA_COPY,[\nAC_TRY_LINK([#include <stdarg.h>\nva_list ap1,ap2;], [va_copy(ap1,ap2);],\nac_cv_HAVE_VA_COPY=yes,\nac_cv_HAVE_VA_COPY=no)])\nif test x\"$ac_cv_HAVE_VA_COPY\" = x\"yes\"; then\n    AC_DEFINE(HAVE_VA_COPY,1,[Whether va_copy() is available])\nelse    \n    AC_CACHE_CHECK([for __va_copy],ac_cv_HAVE___VA_COPY,[\n    AC_TRY_LINK([#include <stdarg.h>\n    va_list ap1,ap2;], [__va_copy(ap1,ap2);],\n    ac_cv_HAVE___VA_COPY=yes,\n    ac_cv_HAVE___VA_COPY=no)])\n    if test x\"$ac_cv_HAVE___VA_COPY\" = x\"yes\"; then\n        AC_DEFINE(HAVE___VA_COPY,1,[Whether __va_copy() is available])\n    fi\nfi\n\nAC_CHECK_FUNC(vsnprintf,,SNPRINTF_O=../lib/snprintf.o)\nAC_CHECK_FUNC(snprintf,,SNPRINTF_O=../lib/snprintf.o)\nAC_CHECK_FUNC(asprintf,,SNPRINTF_O=../lib/snprintf.o)\nAC_CHECK_FUNC(vasprintf,,SNPRINTF_O=../lib/snprintf.o)\nAC_CHECK_FUNCS(sigaction)\n\nAC_CACHE_CHECK([for C99 vsnprintf],ac_cv_HAVE_C99_VSNPRINTF,[\nAC_TRY_RUN([\n#include <sys/types.h>\n#include <stdarg.h>\nvoid foo(const char *format, ...) { \n       va_list ap;\n       int len;\n       char buf[5];\n\n       va_start(ap, format);\n       len = vsnprintf(buf, 0, format, ap);\n       va_end(ap);\n       if (len != 5) exit(1);\n\n       va_start(ap, format);\n       len = vsnprintf(0, 0, format, ap);\n       va_end(ap);\n       if (len != 5) exit(1);\n\n       if (snprintf(buf, 3, \"hello\") != 5 || strcmp(buf, \"he\") != 0) exit(1);\n\n       exit(0);\n}\nmain() { foo(\"hello\"); }\n],\nac_cv_HAVE_C99_VSNPRINTF=yes,ac_cv_HAVE_C99_VSNPRINTF=no,ac_cv_HAVE_C99_VSNPRINTF=cross)])\nif test x\"$ac_cv_HAVE_C99_VSNPRINTF\" = x\"yes\"; then\n    AC_DEFINE(HAVE_C99_VSNPRINTF,1,[Define if system has C99 compatible vsnprintf])\nfi\n\ndnl AC_CHECK_FUNC(snprintf,AC_DEFINE(HAVE_SNPRINTF),SNPRINTF_O=../common/snprintf.o)\nAC_SUBST(SNPRINTF_O)\n\n\ndnl Checks for library functions.\nAC_SEARCH_LIBS([getservbyname],[nsl],\n\t[if test \"$ac_cv_search_getservbyname\" != \"none required\"; then\n\t\tSOCKETLIBS=\"$SOCKETLIBS -lnsl\"\n\tfi])\nAC_SEARCH_LIBS([connect],[socket],\n\t[if test \"$ac_cv_search_connect\" != \"none required\"; then\n\t\tSOCKETLIBS=\"$SOCKETLIBS -lsocket\"\n\tfi])\nAC_SUBST(SOCKETLIBS)\nAC_CHECK_FUNCS(initgroups setenv strdup strstr strtoul unsetenv)\n\nAC_MSG_CHECKING(for type of socket size)\nAC_TRY_COMPILE([#include <stdlib.h>\n#include <sys/types.h>\n#include <sys/socket.h>\n],\n[int a = send(1, (const void *) 0, (size_t) 0, (int) 0);],\n[AC_DEFINE(SOCKET_SIZE_TYPE, size_t, [typedef for socket size]) AC_MSG_RESULT(size_t)],\n[AC_DEFINE(SOCKET_SIZE_TYPE, int, [typedef for socket size]) AC_MSG_RESULT(int)])\n\n\ndnl Solaris needs rt or posix4 libraries for nanosleep()\nAC_SEARCH_LIBS(nanosleep,[rt posix4],,[\n\techo \"Error: nanosleep() needed for timing operations.\"\n\texit 1\n\t])\n\ncase $host_os in\n*bsd*|darwin*)\n\troot_grp=wheel\n\t;;\n*)\n\troot_grp=root\n\t;;\nesac\n\nAC_ARG_WITH(root_group,AC_HELP_STRING([--with-root-group=<grp>],[sets group name for installing init]),root_grp=$withval)\nAC_SUBST(root_grp)\nINIT_OPTS=\"-o root -g $root_grp\"\nAC_SUBST(INIT_OPTS)\n\nAC_ARG_WITH(nagios_user,AC_HELP_STRING([--with-nagios-user=<user>],[sets user name to run nagios]),nagios_user=$withval,nagios_user=nagios)\nAC_ARG_WITH(nagios_group,AC_HELP_STRING([--with-nagios-group=<grp>],[sets group name to run nagios]),nagios_grp=$withval,nagios_grp=nagios)\nAC_SUBST(nagios_user)\nAC_SUBST(nagios_grp)\nAC_DEFINE_UNQUOTED(DEFAULT_NAGIOS_USER,\"$nagios_user\",[user name to run nagios])\nAC_DEFINE_UNQUOTED(DEFAULT_NAGIOS_GROUP,\"$nagios_grp\",[group name to run nagios])\nINSTALL_OPTS=\"-o $nagios_user -g $nagios_grp\"\nAC_SUBST(INSTALL_OPTS)\n\nAC_ARG_WITH(command_user,AC_HELP_STRING([--with-command-user=<user>],[sets user name for command access]),command_user=$withval,command_user=$nagios_user)\nAC_ARG_WITH(command_group,AC_HELP_STRING([--with-command-group=<grp>],[sets group name for command access]),command_grp=$withval,command_grp=$nagios_grp)\nAC_SUBST(command_user)\nAC_SUBST(command_grp)\nCOMMAND_OPTS=\"-o $command_user -g $command_grp\"\nAC_SUBST(COMMAND_OPTS)\n\ndnl Check for location of mail program\nMAIL_PROG=no\nAC_ARG_WITH(mail,\n\tAC_HELP_STRING([--with-mail=<path_to_mail>],\n\t\t[sets path to equivalent program to mail]),\n\tMAIL_PROG=$withval,\n\tMAIL_PROG=no\n) \nif test x$MAIL_PROG = xno; then\n\tAC_PATH_PROG(MAIL_PROG,mail) \nfi \ndnl Fix for systems that don't (yet) have mail/mailx installed...\nif test x$MAIL_PROG = x; then\n\tMAIL_PROG=\"/bin/mail\"\nfi\nAC_SUBST(MAIL_PROG)\n\ndnl Check for location of Apache conf.d directory\nHTTP_CONF=no\nAC_ARG_WITH(httpd_conf,\n\tAC_HELP_STRING([--with-httpd-conf=<path_to_conf>],\n\t\t[sets path to Apache conf.d directory]),\n\tHTTPD_CONF=$withval,\n\tHTTPD_CONF=no\n) \nLN_HTTPD_SITES_ENABLED=0\nif test x$HTTPD_CONF = xno; then\n\tif test -d /etc/httpd/conf.d; then\n\t\tHTTPD_CONF=\"/etc/httpd/conf.d\"\n\telif test -d /etc/apache2/conf.d; then\n\t\tHTTPD_CONF=\"/etc/apache2/conf.d\"\n\telif test -d /etc/apache2/sites-available; then\n\t\tHTTPD_CONF=\"/etc/apache2/sites-available\"\n\t\tif test -d /etc/apache2/sites-enabled; then\n\t\t\tLN_HTTPD_SITES_ENABLED=1\n\t\tfi\n\telif test -d /etc/apache2/sites-enabled; then\n\t\tHTTPD_CONF=\"/etc/apache2/sites-enabled\"\n\telif test -d /etc/apache/conf.d; then\n\t\tHTTPD_CONF=\"/etc/apache/conf.d\"\n\telse\n\t\tHTTPD_CONF=\"/etc/httpd/conf.d\"\n\tfi\nfi \nAC_SUBST(HTTPD_CONF)\nAC_SUBST(LN_HTTPD_SITES_ENABLED)\n\ndnl Location of check result path\nCHECKRESULTDIR=no\nAC_ARG_WITH(checkresult-dir,\n\tAC_HELP_STRING([--with-checkresult-dir=<path>],\n\t\t[sets path to check results spool directory]),\n\tCHECKRESULTDIR=$withval,\n\tCHECKRESULTDIR=no\n) \nif test x$CHECKRESULTDIR = xno; then\n\tCHECKRESULTDIR=\"$localstatedir/spool/checkresults\"\nfi \n\ndnl Location of check result path\nTMPDIR=no\nAC_ARG_WITH(temp-dir,\n\tAC_HELP_STRING([--with-temp-dir=<path>],\n\t\t[sets path to temp directory]),\n\tTMPDIR=$withval,\n\tTMPDIR=no\n) \nif test x$TMPDIR = xno; then\n\tTMPDIR=\"/tmp\"\nfi \nAC_SUBST(TMPDIR)\n\ndnl Check for location of init scripts\ninit_dir=/etc/rc.d/init.d\nif test -d /etc/rc.d/init.d; then\n\tinit_dir=\"/etc/rc.d/init.d\"\nelif test -d /usr/local/etc/rc.d; then\n\tinit_dir=\"/usr/local/etc/rc.d\"\nelif test -d /etc/rc.d; then\n\tinit_dir=\"/etc/rc.d\"\nelif test -d /etc/init.d; then\n\tinit_dir=\"/etc/init.d\"\nelif test -d /sbin/init.d; then\n\tinit_dir=\"/sbin/init.d\"\nfi\n\ndnl User can override init script location\nAC_ARG_WITH(init_dir,\n\tAC_HELP_STRING([--with-init-dir=<path>],\n\t\t[sets directory to place init script into]),\n\tinit_dir=$withval\n)\nAC_SUBST(init_dir)\n\ndnl User can override lock file location\nAC_ARG_WITH(lockfile,\n\tAC_HELP_STRING([--with-lockfile=<path>],\n\t\t[sets path and file name for lock file]),\n\tlockfile=$withval,\n\tlockfile=$localstatedir/nagios.lock\n)\n\n\ndnl Determine the library to be used by the iobroker\n\ndnl epoll_*() is linux specific and was added to glibc 2.3.2, so we\ndnl check for 2.4 and use epoll() if we're on that version or later.\n\ncase $host_os in\nlinux*)\n\tAC_MSG_CHECKING(for glibc at least version 2.4)\n\tAC_TRY_CPP(\n\t\t[\n#include <stdio.h>\n#if defined(__GLIBC__) && defined(__linux)\n#include <features.h>\n# if !__GLIBC_PREREQ(2, 4)\n#  error GLIBC too old\n# endif\n#else\n# error Not using GLIBC\n#endif\n\t\t],\n\t\t[GLIBC_NEWER_2_4=1; AC_MSG_RESULT(yes)],\n\t\t[GLIBC_NEWER_2_4=0; AC_MSG_RESULT(no)]\n\t)\n\tif test $GLIBC_NEWER_2_4 -eq 1; then\n\t\tAC_CHECK_HEADER([sys/epoll.h])\n\tfi\n\t;;\nesac\nAC_CHECK_HEADER([sys/select.h])\n\nAC_ARG_WITH(iobroker,\n\tAC_HELP_STRING([--with-iobroker=<method>],\n\t\t[specify the method to use with iobroker: epoll, poll, or select]),\n\tIOBROKER_METHOD=$withval,\n\tIOBROKER_METHOD=\"none\"\n)\n\ncase $IOBROKER_METHOD in\nepoll*)\n\tif test $GLIBC_NEWER_2_4 -eq 1 -a x$ac_cv_header_sys_epoll_h = xyes ; then\n\t\tAC_DEFINE([IOBROKER_USES_EPOLL])\n\telse\n\t\techo \"\\\"epoll\\\" is not available as an iobroker method.\"\n\t\techo \"Please use one of the other options.\"\n\t\texit 1\n\tfi\n\t;;\npoll*)\n\tif test x$ac_cv_header_sys_poll_h = xyes -o x$ac_cv_header_poll_h = xyes ; then\n\t\tAC_DEFINE([IOBROKER_USES_POLL])\n\telse\n\t\techo \"\\\"poll\\\" is not available as an iobroker method.\"\n\t\techo \"Please use one of the other options.\"\n\t\texit 1\n\tfi\n\t;;\nselect*)\n\tif test x$ac_cv_header_sys_select_h = xyes ; then\n\t\tAC_DEFINE([IOBROKER_USES_SELECT])\n\telse\n\t\techo \"\\\"select\\\" is not available as an iobroker method.\"\n\t\techo \"Please use one of the other options.\"\n\t\texit 1\n\tfi\n\t;;\nnone*)\n\tif test $GLIBC_NEWER_2_4 -eq 1 -a x$ac_cv_header_sys_epoll_h = xyes ; then\n\t\tAC_DEFINE([IOBROKER_USES_EPOLL])\n\t\tIOBROKER_METHOD=\"epoll\"\n\telif test x$ac_cv_header_sys_poll_h = xyes -o x$ac_cv_header_poll_h = xyes ; then\n\t\tAC_DEFINE([IOBROKER_USES_POLL])\n\t\tIOBROKER_METHOD=\"poll\"\n\telif test x$ac_cv_header_sys_select_h = xyes ; then\n\t\tAC_DEFINE([IOBROKER_USES_SELECT])\n\t\tIOBROKER_METHOD=\"select\"\n\telse\n\t\techo \"There are no available options for iobroker polling\"\n\t\texit 1\n\tfi\n\t;;\n*)\n\t\techo \"\\\"$IOBROKER_METHOD\\\" is not a valid method for --with-iobroker\"\n\t\texit 1\n\t;;\nesac\n\ndnl Optional GD library and include paths\nAC_ARG_WITH(gd-lib,\n\tAC_HELP_STRING([--with-gd-lib=DIR],[sets location of the gd library]),\n\t[\n\t\tLDFLAGS=\"${LDFLAGS} -L${withval}\"\n\t\tLD_RUN_PATH=\"${withval}${LD_RUN_PATH:+:}${LD_RUN_PATH}\"\n\t]\n)\nAC_ARG_WITH(gd-inc,\n\tAC_HELP_STRING([--with-gd-inc=DIR],[sets location of the gd include files]),\n\t[CFLAGS=\"${CFLAGS} -I${withval}\"]\n)\n\n\nTRYGD=yep\n\ndnl 'corewindow' is now disabled. Allow it to be enabled if someone wants it\nCOREWINDOW=no\nAC_ARG_ENABLE(corewindow,\n\tAC_HELP_STRING([--enable-corewindow],\n\t\t[enables the 'corewindow' URL argument]),\n\tCOREWINDOW=yes\n)\nAC_SUBST(COREWINDOW)\n\ndnl statusmap CGI enabled by default, unless users chooses not to use it\nTRYSTATUSMAP=yep\nAC_ARG_ENABLE(statusmap,\n\tAC_HELP_STRING([--disable-statusmap],\n\t\t[disables compilation of statusmap CGI]),\n\tTRYSTATUSMAP=nope\n)\n\n\ndnl statuswrl CGI enabled by default, unless users chooses not to use it\nTRYSTATUSWRL=yep\nAC_ARG_ENABLE(statuswrl,\n\tAC_HELP_STRING([--disable-statuswrl],\n\t\t[disables compilation of statuswrl (VRML) CGI]),\n\tTRYSTATUSWRL=nope\n)\n\nif test x$TRYSTATUSWRL = xyep; then\n\tAC_DEFINE_UNQUOTED(USE_STATUSWRL,,[statuswrl CGI enabled by default, unless users chooses not to use it])\n\tCGIEXTRAS=\"$CGIEXTRAS statuswrl.cgi\"\nfi\n\n\ndnl JMD_CHECK_LIB_ORDER(LIBRARY, FUNCTION, ORDER [, ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND\ndnl              [, OTHER-LIBRARIES]]])\n\tAC_DEFUN([JMD_CHECK_LIB_ORDER],\n\t[AC_MSG_CHECKING([for $2 in -l$1 (order $3)])\n\tdnl Use a cache variable name containing both the library and function name,\n\tdnl because the test really is for library $1 defining function $2, not\n\tdnl just for library $1.  Separate tests with the same $1 and different $2s\n\tdnl may have different results.\n\tac_lib_var=`echo $1['_']$2['_']$3 | sed 'y%./+-%__p_%'`\n\tAC_CACHE_VAL(ac_cv_lib_$ac_lib_var,\n\t[ac_save_LIBS=\"$LIBS\"\n\tLIBS=\"-l$1 $6 $LIBS\"\n\tAC_TRY_LINK(dnl\n\tifelse([AC_LANG], [FORTRAN77], ,\n\tifelse([$2], [main], , dnl Avoid conflicting decl of main.\n[/* Override any gcc2 internal prototype to avoid an error.  */\n]ifelse([AC_LANG], CPLUSPLUS, [#ifdef __cplusplus\nextern \"C\"\n#endif\n])dnl\n[/* We use char because int might match the return type of a gcc2\n    builtin and then its argument prototype would still apply.  */\nchar $2();\n])),\n\t            [$2()],\n\t            eval \"ac_cv_lib_$ac_lib_var=yes\",\n\t            eval \"ac_cv_lib_$ac_lib_var=no\")\n\tLIBS=\"$ac_save_LIBS\"\n\t])dnl\n\tif eval \"test \\\"`echo '$ac_cv_lib_'$ac_lib_var`\\\" = yes\"; then\n\t  AC_MSG_RESULT(yes)\n\t  ifelse([$4], ,\n\t[changequote(, )dnl\n\t  ac_tr_lib=HAVE_LIB`echo $1 | sed -e 's/[^a-zA-Z0-9_]/_/g' \\\n\t    -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'`\n\tchangequote([, ])dnl\n\t  AC_DEFINE_UNQUOTED($ac_tr_lib)\n\t  LIBS=\"-l$1 $LIBS\"\n\t], [$4])\n\telse\n\t  AC_MSG_RESULT(no)\n\tifelse([$5], , , [$5\n\t])dnl\n\tfi\n\t])\n\n\n\ndnl Should we try and detect the GD libs?\nif test x$TRYGD = xyep; then\n\n\tdnl libiconv is required on some systems - tack it on if found\n\tAC_CHECK_LIB(iconv,main,ICONV=-liconv,)\n\n\tdnl See if the GD lib is available and supports PNG images...\n\n\tdnl GD > 1.8.3 requires the TrueType library to be present as well, so test for that first...\n\tJMD_CHECK_LIB_ORDER(gd,gdImagePng,1,[\n\t\t\tGDLIBFOUND=yep\n\t\t\tGDLIBS=\"-lgd -lttf -lpng -ljpeg -lz -lm\"\n\t\t\t],:,[-lttf -lpng -ljpeg -lz -lm])\n \n\tdnl GD > 1.8.1 requires the jpeg library to be present as well, so test for that...\n\tif test x$GDLIBFOUND = x; then\n\t\tJMD_CHECK_LIB_ORDER(gd,gdImagePng,2,[\n\t\t\tGDLIBFOUND=yep\n\t\t\tGDLIBS=\"-lgd $ICONV -lpng -ljpeg -lz -lm\"\n        \t\t],:,[$ICONV -lpng -ljpeg -lz -lm])\n\tfi\n\n\tdnl If we failed the first test, try without jpeg library\n\tif test x$GDLIBFOUND = x; then\n\t\tJMD_CHECK_LIB_ORDER(gd,gdImagePng,3,[\n\t\t\tGDLIBFOUND=yep\n\t\t\tGDLIBS=\"-lgd $ICONV -lz -lm -lpng\"\n\t\t        ],:,[$ICONV -lz -lm -lpng])\n\tfi\n\n\tdnl We failed again, so try a different library ordering (without jpeg libs)\n\tif test x$GDLIBFOUND = x; then\n\t\tJMD_CHECK_LIB_ORDER(gd,gdImagePng,4,[\n\t\t\tGDLIBFOUND=yep\n\t\t\tGDLIBS=\"-lgd $ICONV -lpng -lz -lm\"\n\t        \t],:,[$ICONV -lpng -lz -lm])\n\tfi\n\n\tdnl Did we find the necessary GD libraries?\n\tif test x$GDLIBFOUND = x; then\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"*** GD, PNG, and/or JPEG libraries could not be located... *********\"\n\t\techo \"\"\n\t\techo \"Boutell's GD library is required to compile the statusmap, trends\"\n\t\techo \"and histogram CGIs.  Get it from http://www.boutell.com/gd/, compile\"\n\t\techo \"it, and use the --with-gd-lib and --with-gd-inc arguments to specify\"\n\t\techo \"the locations of the GD library and include files.\"\n\t\techo \"\"\n\t\techo \"NOTE: In addition to the gd-devel library, you'll also need to make\"\n\t\techo \"      sure you have the png-devel and jpeg-devel libraries installed\"\n\t\techo \"      on your system.\"\n\t\techo \"\"\n\t\techo \"NOTE: After you install the necessary libraries on your system:\"\n\t\techo \"      1. Make sure /etc/ld.so.conf has an entry for the directory in\"\n\t\techo \"         which the GD, PNG, and JPEG libraries are installed.\"\n\t\techo \"      2. Run 'ldconfig' to update the run-time linker options.\"\n\t\techo \"      3. Run 'make clean' in the Nagios distribution to clean out\"\n\t\techo \"         any old references to your previous compile.\"\n\t\techo \"      4. Rerun the configure script.\"\n\t\techo \"\"\n\t\techo \"NOTE: If you can't get the configure script to recognize the GD libs\"\n\t\techo \"      on your system, get over it and move on to other things.  The\"\n\t\techo \"      CGIs that use the GD libs are just a small part of the entire\"\n\t\techo \"      Nagios package.  Get everything else working first and then\"\n\t\techo \"      revisit the problem.  Make sure to check the nagios-users\"\n\t\techo \"      mailing list archives for possible solutions to GD library\"\n\t\techo \"      problems when you resume your troubleshooting.\"\n\t\techo \"\"\n\t\techo \"********************************************************************\"\n\t\techo \"\"\n\t\techo \"\"\n\n\tdnl We found the GD lib!\n\telse\n\t\techo \"GD library was found!\"\n\t\tif test x$TRYSTATUSMAP = xyep; then\n\t\t\tAC_DEFINE_UNQUOTED(USE_STATUSMAP,,[defined if the user chose to include status map])\n\t\t\tCGIEXTRAS=\"$CGIEXTRAS statusmap.cgi\"\n\t\t\tAC_CHECK_LIB(gd,gdImageCreateTrueColor,\n\t\t\t\tAC_DEFINE(HAVE_GDIMAGECREATETRUECOLOR,1,\n\t\t\t\t\t[Define if your gd library has gdImageCreateTrueColor])) \n\t\tfi\n\n\t\tdnl compile trends CGI\n\t\tAC_DEFINE_UNQUOTED(USE_TRENDS,,[compile trends CGI])\n\t\tCGIEXTRAS=\"$CGIEXTRAS trends.cgi\"\n\t\n\t\tdnl compile histogram CGI\n\t\tAC_DEFINE_UNQUOTED(USE_HISTOGRAM,,[compile histogram CGI])\n\t        CGIEXTRAS=\"$CGIEXTRAS histogram.cgi\"\n\tfi\nfi\n\nAC_ARG_WITH(cgiurl,\n\tAC_HELP_STRING([--with-cgiurl=<local-url>],\n\t\t[sets URL for cgi programs (do not use a trailing slash)]),\n\tcgiurl=$withval,\n\tcgiurl=/nagios/cgi-bin\n)\nAC_ARG_WITH(htmurl,\n\tAC_HELP_STRING([--with-htmurl=<local-url>],\n\t\t[sets URL for public html]),\n\thtmurl=$withval,\n\thtmurl=/nagios\n)\nAC_SUBST(htmurl)\nAC_SUBST(cgiurl)\n\nUSE_NANOSLEEP=yes\nAC_ARG_ENABLE(nanosleep,\n\tAC_HELP_STRING([--enable-nanosleep],\n\t\t[enables use of nanosleep (instead of sleep) in event timing]),\n\tUSE_NANOSLEEP=$enableval,\n\tUSE_NANOSLEEP=yes\n)\nif test x$USE_NANOSLEEP = xyes; then\n\tAC_DEFINE_UNQUOTED(USE_NANOSLEEP,,[enables use of nanosleep (instead of sleep)])\nfi\n\nUSE_EVENTBROKER=yes\nAC_ARG_ENABLE(event-broker,\n\tAC_HELP_STRING([--enable-event-broker],\n\t\t[enables integration of event broker routines]),\n\tUSE_EVENTBROKER=$enableval,\n\tUSE_EVENTBROKER=yes\n)\n\nBROKER_LDFLAGS=\"\"\nBROKERLIBS=\"\";\nsome_dl_found=\"no\";\nif test x$USE_EVENTBROKER = xyes; then\n\n\tdnl Which loader library should we use? libtdl or dl?\n\tdnl Hopefully this will be portable and not give us headaches...\n\tAC_CHECK_HEADER(ltdl.h,[\n\t\tAC_CHECK_LIB(ltdl,lt_dlinit,[\n\t\t\tAC_DEFINE(HAVE_LTDL_H,,[Which loader library should we use? libtdl or dl?])\n\t\t\tsome_dl_found=\"yes\"\n\t\t\tBROKERLIBS=\"$BROKERLIBS -lltdl\"\n\t\t\t])\n\t        ])\n\tif test \"x$some_dl_found\" != xyes; then\n\tAC_CHECK_HEADER(dlfcn.h,[\n\t\tAC_CHECK_LIB(dl,dlopen,[\n\t\t\tAC_DEFINE(HAVE_DLFCN_H,,[Which loader library should we use? libtdl or dl?])\n\t\t\tsome_dl_found=\"yes\"\n\t\t\tBROKERLIBS=\"$BROKERLIBS -ldl\"\n\t\t\t])\n\t        ])\n\tfi\n\n\tdnl - Modified from www.erlang.org\n\t# Check how to export functions from the broker executable, needed\n\t# when dynamically loaded drivers are loaded (so that they can find\n\t# broker functions).\n\t# OS'es with ELF executables using the GNU linker (Linux and recent *BSD,\n\t# in rare cases Solaris) typically need '-Wl,-export-dynamic' (i.e. pass\n\t# -export-dynamic to the linker - also known as -rdynamic and some other\n\t# variants); some sysVr4 system(s) instead need(s) '-Wl,-Bexport'.\n\t# AIX 4.x (perhaps only for x>=2) wants -Wl,-bexpall,-brtl and doesn't\n\t# reliably return an error for others, thus we separate it out.\n\t# Otherwise we assume that if the linker accepts the flag, it is needed.\n\tAC_MSG_CHECKING(for extra flags needed to export symbols)\n\tcase $host_os in\n\t\taix4*|aix5*)\n\t\t\tBROKER_LDFLAGS=\"$BROKER_LDFLAGS -Wl,-bexpall,-brtl\"\n\t\t;;\n\t\tbsdi*)\n    \t\t\tBROKER_LDFLAGS=\"$BROKER_LDFLAGS -rdynamic\" \n\t    \t;;\n\t\t*)\n\t\t\tsave_ldflags=\"$LDFLAGS\"\n\t\t\tLDFLAGS=-Wl,-export-dynamic\n\t\t\tAC_TRY_LINK(,,[BROKER_LDFLAGS=\"$BROKER_LDFLAGS -Wl,-export-dynamic\"], [\n\t\t\t\tLDFLAGS=-Wl,-Bexport\n\t\t\t\tAC_TRY_LINK(,,[BROKER_LDFLAGS=\"$BROKER_LDFLAGS -Wl,-Bexport\"],\n\t\t\t\t\tAC_MSG_RESULT(none))])\n\t\t\tLDFLAGS=\"$save_ldflags\"\n\t\t;;\n\tesac\n\tAC_SUBST(BROKER_LDFLAGS)\n\tAC_SUBST(BROKERLIBS)\n\ttest \"x$BROKER_LDFLAGS\" != x && AC_MSG_RESULT([$BROKER_LDFLAGS])\n\n\n\tdnl - Modified version from www.erlang.org\n\tdnl - Some 12/15/05 mods made after reading http://xaxxon.slackworks.com/phuku/dl.html\n\tAC_MSG_CHECKING(for linker flags for loadable modules)\n\tcase $host_os in\n\t\tsolaris2*|sysv4*)\n\t\t\tMOD_LDFLAGS=\"-G\"\n\t\t\tMOD_CFLAGS=\"-fPIC\"\n\t\t;;\n\t\taix4*|aix5*)\n\t\t\t#MOD_LDFLAGS=\"-G -bnoentry -bexpall\"\n\t\t\tMOD_LDFLAGS=\"-G -bM:SRE -bnoentry -bexpall\"\n\t\t;;\n\t\tfreebsd2*)\n\t\t\t# Non-ELF GNU linker\n\t\t\tMOD_LDFLAGS=\"-Bshareable\"\n\t\t;;\n\t\tdarwin*)\n\t\t\t# Mach-O linker, a shared lib and a loadable\n\t\t\t# object file is not the same thing.\n\t\t\tMOD_LDFLAGS=\"-bundle -flat_namespace -undefined suppress\"\n\t\t\tMOD_CFLAGS=\"$MOD_CFLAGS -fno-common\"\n\t\t;;\n\t\tlinux* | k*bsd*-gnu*)\n\t\t\t# assume GNU linker and ELF\n\t\t\tMOD_LDFLAGS=\"-shared\"\n\t\t\tMOD_CFLAGS=\"-fPIC\"\n\t\t;;\n\t\t*bsd*)\n\t\t\tMOD_LDFLAGS=\"-shared\"\n\t\t\tMOD_CFLAGS=\"-fPIC\"\n\t\t;;\n\t\t*)\n\t\t\t# assume GNU linker and ELF\n\t\t\tMOD_LDFLAGS=\"-shared\"\n\t\t;;\n\tesac\n\tAC_MSG_RESULT([$MOD_LDFLAGS])\n\tAC_SUBST(MOD_CFLAGS)\n\tAC_SUBST(MOD_LDFLAGS)\n\n\tdnl - flags for compiling workers\n\tWORKER_CFLAGS=\"-I ../../include -I ../..\"\n\tWORKER_LDFLAGS=\"-L ../../lib -l nagios\"\n\tAC_SUBST(WORKER_CFLAGS)\n\tAC_SUBST(WORKER_LDFLAGS)\n\n\tAC_DEFINE_UNQUOTED(USE_EVENT_BROKER,,[defined to bring in the event broker objects])\n\tBROKER_O=\"broker.o nebmods.o\"\n\tAC_SUBST(BROKER_O)\n\tBROKER_H=\"../include/broker.h ../include/nebmods.h ../include/nebmodules.h ../include/nebcallbacks.h ../include/neberrors.h\"\n\tAC_SUBST(BROKER_H)\nfi\n\n\ndnl Option for compiling under CYGWIN\nnagios_name=nagios\nnagiostats_name=nagiostats\ncygwin=no\nAC_ARG_ENABLE(cygwin,\n\tAC_HELP_STRING([--enable-cygwin],\n\t\t[enables building under the CYGWIN environment]),\n\t[cygwin=$enableval]\n)\nif test x$cygwin = xyes; then\n\tCFLAGS=\"${CFLAGS} -DCYGWIN\" \n\tnagios_name=nagios.exe;\n\tnagiostats_name=nagiostats.exe;\nfi\nAC_SUBST(nagios_name)\nAC_SUBST(nagiostats_name)\n\n\ndnl Should predictive failure routines be compiled in?\ndnl AC_ARG_ENABLE(failure-prediction,--enable-failure-prediction will enable integration with failure prediction module (NOT HERE YET!),[\ndnl\tAC_DEFINE_UNQUOTED(PREDICT_FAILURES)\ndnl\tBASEEXTRALIBS=\"$BASEEXTRALIBS \\$(FDATALIBS)\"\ndnl\techo \"Failure prediction routines (incomplete!) will be compiled in...\"\ndnl\t])\n\ndnl Find traceroute\nAC_PATH_PROG(PATH_TO_TRACEROUTE,traceroute)\nAC_DEFINE_UNQUOTED(TRACEROUTE_COMMAND,\"$PATH_TO_TRACEROUTE\",[traceroute command to use])\n\n\n\ndnl Package directory for Solaris pkgmk (and other OSs, eventually)\ndnl VERSION=`grep 1.0 include/common.h | cut -d ' ' -f 3 | sed 's/\"//g'`\nVERSION=$PKG_VERSION\nPACKDIR=`pwd`/pkg\nAC_SUBST(PACKDIR)\nAC_SUBST(VERSION)\n \nAC_MSG_CHECKING(for type va_list)\nAC_TRY_COMPILE([#ifdef __STDC__\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdarg.h>\n#else\n#include <sys/types.h>\n#include <stdio.h>\n#include <varargs.h>\n#endif],\n[va_list args;],\n[AC_MSG_RESULT(yes)],\n[AC_DEFINE(NEED_VA_LIST,,[defined if va_list fails to compile]) AC_MSG_RESULT(no)])\n\ndnl Check if we should build local libtap\ndnl From Nagios Plugins\ndnl Have disabled autodetection of system library until later\nAC_ARG_ENABLE(libtap,\n  AC_HELP_STRING([--enable-libtap],\n                [Enable built-in libtap for unit-testing (default: no).]),\n        [enable_libtap=$enableval],\n        [enable_libtap=no])\n#Disabled for moment\n#AM_CONDITIONAL([USE_LIBTAP_LOCAL],[test \"$enable_libtap\" = \"yes\"])\n\n# Disabled for moment\n# If not local, check if we can use the system one\n#if test \"$enable_libtap\" != \"yes\" ; then\n#        dnl Check for libtap, to run perl-like tests\n#        AC_CHECK_LIB(tap, plan_tests,\n#                enable_libtap=\"yes\"\n#                )\n#fi\n\n# Finally, define tests if we use libtap\nif test \"$enable_libtap\" = \"yes\" ; then\n\tAC_CONFIG_SUBDIRS([tap])\n\tUSE_LIBTAP=yes\nelse\n\tUSE_LIBTAP=no\nfi\n\n\nAC_SUBST(USE_LIBTAP)\nAC_SUBST(CGIEXTRAS)\nAC_SUBST(GDLIBS)\nAC_SUBST(BASEEXTRALIBS)\nAC_SUBST(INITDIR)\nAC_SUBST(USE_EVENTBROKER)\n\nAC_PATH_PROG(PERL,perl)\nif test -z \"$PERL\"; then\n\tAC_MSG_ERROR([Cannot continue without perl!])\nfi\n\nAC_PATH_PROG(UNZIP,unzip)\nif test -z \"$UNZIP\"; then\n\tAC_MSG_ERROR([Cannot continue without unzip!])\nfi\n\nAC_OUTPUT(Makefile lib/Makefile subst pkginfo base/Makefile common/Makefile contrib/Makefile cgi/Makefile html/Makefile module/Makefile worker/Makefile worker/ping/Makefile xdata/Makefile daemon-init t/Makefile t-tap/Makefile)\n\n\nperl subst include/locations.h\nperl subst html/config.inc.php\n\n\necho \"\"\necho \"Creating sample config files in sample-config/ ...\"\n\nperl subst sample-config/nagios.cfg\nperl subst sample-config/cgi.cfg\nperl subst sample-config/resource.cfg\nperl subst sample-config/httpd.conf\nperl subst sample-config/mrtg.cfg\n\nperl subst sample-config/template-object/templates.cfg\nperl subst sample-config/template-object/commands.cfg\nperl subst sample-config/template-object/timeperiods.cfg\nperl subst sample-config/template-object/contacts.cfg\n\nperl subst sample-config/template-object/localhost.cfg\nperl subst sample-config/template-object/windows.cfg\nperl subst sample-config/template-object/printer.cfg\nperl subst sample-config/template-object/switch.cfg\n\n\n\neval localstatedir=$localstatedir\neval lockfile=$lockfile\neval CHECKRESULTDIR=$CHECKRESULTDIR\nAC_SUBST(CHECKRESULTDIR)\nAC_SUBST(lockfile)\n\ndnl Review options\necho \"\"\necho \"\"\nAC_MSG_RESULT([*** Configuration summary for $PKG_NAME $PKG_VERSION $PKG_REL_DATE ***:])\n\necho \"\"\necho \" General Options:\"\necho \" -------------------------\"\n\nAC_MSG_RESULT([        Nagios executable:  $nagios_name])\nAC_MSG_RESULT([        Nagios user/group:  $nagios_user,$nagios_grp])\nAC_MSG_RESULT([       Command user/group:  $command_user,$command_grp])\nif test x$USE_EVENTBROKER = xyes; then\nAC_MSG_RESULT([             Event Broker:  yes])\nelse\nAC_MSG_RESULT([             Event Broker:  no])\nfi\nAC_MSG_RESULT([        Install \\${prefix}:  $prefix])\nincdir=`eval echo $includedir`\nif test x$incdir = x$prefix/include; then\n\tincludedir=$prefix/include/nagios\nfi\nAC_MSG_RESULT([    Install \\${includedir}:  $includedir])\nAC_MSG_RESULT([                Lock file:  $lockfile])\nAC_MSG_RESULT([   Check result directory:  $CHECKRESULTDIR])\nAC_MSG_RESULT([           Init directory:  $init_dir])\nAC_MSG_RESULT([  Apache conf.d directory:  $HTTPD_CONF])\nAC_MSG_RESULT([             Mail program:  $MAIL_PROG])\nAC_MSG_RESULT([                  Host OS:  $host_os])\nAC_MSG_RESULT([          IOBroker Method:  $IOBROKER_METHOD])\n\necho \"\"\necho \" Web Interface Options:\"\necho \" ------------------------\"\n\nAC_MSG_RESULT([                 HTML URL:  http://localhost$htmurl/])\nAC_MSG_RESULT([                  CGI URL:  http://localhost$cgiurl/])\nAC_MSG_RESULT([ Traceroute (used by WAP):  $PATH_TO_TRACEROUTE])\n\necho \"\"\necho \"\"\necho \"Review the options above for accuracy.  If they look okay,\"\necho \"type 'make all' to compile the main program and CGIs.\"\necho \"\"\n"], "fixing_code": ["########################\nNagios Core 4 Change Log\n########################\n\n4.3.3 - 2017-05-09\n------------------\n* xodtemplate.c wrong option-deprecation code warning (alex2grad / John Frickson)\n* On-demand host check always use cached host state (John Frickson)\n* '\u00e1' causes Serivce Status Information to not be displayed (John Frickson)\n* New Macro(s) to generate URL for host / service object (John Frickson)\n* Fix minor map issues (Troy Lea)\n* Fix lockfile issues (Bryan Heden)\n\n\n4.3.2 - 2017-05-09\n------------------\nFIXED\n* Every 15sec /var/log/messages is flooded with \"nagios: set_environment_var\" (John Frickson)\n* Changed release date to ISO format (yyyy-mm-dd) (John Frickson)\n* `make all` fails if unzip is not installed (John Frickson)\n* Quick Search no longer allows search by Alias (John Frickson)\n* flexible downtime on a service immediately turns off notifications (John Frickson)\n* Fix to allow url_encode to be called twice (Z. Liu)\n* Update timeperiods.cfg.in (spelling) (Parth Laxmikant Kolekar)\n* Spelling fixes (Josh Soref)\n* Vent command pipe before remove to avoid deadlocks on writing end (Kai Kunstmann)\n* CGI utility cgiutil.c does not process relative config file path names properly (John Frickson)\n* xdata/xodtemplate.c bug in option-deprecation code (John Frickson)\n* Wildcard searching causes service status links to not work properly (John Frickson)\n* Quick search with no hits shows a permission denied error (John Frickson)\n* Setting a service as its own parent is not caught by the sanity checker (-v) and causes a segfault (John Frickson)\n\n\n4.3.1 - 2017-02-23\n------------------\nFIXES\n* Service hard state generation and host hard or soft down status (John Frickson)\n* Comments are duplicated through Nagios reload (John Frickson)\n* host hourly value is incorrectly dumped as json boolean (John Frickson)\n* Bug - Quick Search no longer allows search by IP (John Frickson)\n* Config: status_update_interval can not be set to 1 (John Frickson)\n* Check attempts not increasing if nagios is reloaded (John Frickson)\n* nagios hangs on reload while sending external command to cmd file (John Frickson)\n* Feature Request: return code xxx out of bounds - include message as well (John Frickson)\n\n\n4.3.0 - 2017-02-21\n------------------\nSECURITY FIXES\n* Fix for CVE-2016-6209 - The \"corewindow\" parameter (as in\n  http://localhost/nagios?corewindow=www.somewhere.com) has been disabled by\n  default. See the UPGRADING document for how to enable it. (John Frickson)\n\nFIXES\n* Fix early event scheduling (pmalek / John Frickson)\n* on-demand host checks triggered by service checks cause attempt number increments (fredericve)\n* Service notification not being send when host is in soft down state (John Frickson)\n* configure does not error if no perl installed on CentOS 7 (John Frickson)\n* failed passive requests leave .ok files in checkresults dir (caronc)\n* Services don't show in status.cgi if \"noheader\" specified (John Frickson)\n* Standardized check interval config file names (John Frickson)\n* \"Event Log\" (showlog.cgi) could not open log file (John Frickson)\n* \"nagios_check_command\" has been deprecated since v3.0. Last vestiges removed (John Frickson)\n\nENHANCEMENTS\n* Added new flag to cgi.cfg: tac_cgi_hard_only to show only HARD states (John Frickson)\n* Add broker-event for the end of a timed event (NEBTYPE_TIMEDEVENT_END) (John Frickson)\n* There is no Macro to retrieve addresses of hostgroup members (now $HOSTGROUPMEMBERADDRESSES$) (John Frickson)\n* Add \"Page Tour\" videos to several of the core web pages (John Frickson)\n* Added a login page, and a `Logoff` links (John Frickson)\n* On the status map, the host name will be colored if services are not all OK. (John Frickson)\n* Added \"Clear flapping state\" command on host and services detail pages. (John Frickson)\n* User-entered comment now displays below generated comment for downtime (John Frickson)\n\n\n4.2.4 - 2016-12-07\n------------------\nSECURITY FIXES\n* Fixed another root privilege escalation (CVE-2016-9566) Thanks for bringing this\n  to our attention go to Dawid Golunski (http://legalhackers.com).\n\n\n4.2.3 - 2016-11-21\n-------------------\nSECURITY FIXES\n* Fixed a root privilege escalation (CVE-2016-8641) (John Frickson)\n\nFIXES\n* external command during reload doesn't work (John Frickson)\n* Nagios provides no error condition as to why it fails on the verify for serviceescalation (John Frickson)\n* No root group in FreeBSD and Apple OS X (John Frickson)\n* jsonquery.html doesn't display scheduled_time_ok correctly (John Frickson)\n* daemon_dumps_core=1 has no effect on Linux when Nagios started as root (John Frickson)\n* Configuration check in hostgroup - misspelled hostname does not error (John Frickson)\n* contacts or contact_groups directive with no value should not be allowed (John Frickson)\n* Compile 64-bit on SPARC produces LD error (John Frickson)\n* HOSTSTATEID returns 0 even if host does not exist (John Frickson)\n* Submitting UNREACHABLE passive result for host sets it as DOWN if the host has no parents (John Frickson)\n* nagios: job XX (pid=YY): read() returned error 11 (changed from LOG_ERR to LOG_NOTICE) (John Frickson)\n* Fix for quick search not showing services if wildcard used (John Frickson)\n\n\n4.2.2 - 2016-10-24\n------------------\nSECURITY FIXES\n* There was a fix to vulnerability CVE-2008-4796 in the 4.2.0 release on\n  August 1, 2016. The fix was apparently incomplete, as there was still a\n  problem. However, we are now getting all RSS feeds using AJAX calls\n  instead of the (outdated) MagpieRSS package. Thanks for bringing this to\n  our attention go to Dawid Golunski (http://legalhackers.com).\n\nENHANCEMENTS\n* Update status.c to display passive check icon for hosts when passive checks\n\tare enabled and actives disabled (John Frickson)\n\nFIXES\n* Fix permissions for Host Groups reports (status.cgi) (Patrik Halfar)\n* Service Parents does not appear to be functioning as intended (lev)\n* Availability report mixes up scheduled and unscheduled warning percentages (Helmut Mikulcik)\n* Invalid values for saved_stamp in compute_subject_downtime_times() (John Frickson)\n* Remove deprecated \"framespacing\" (John Frickson)\n* The nagios tarball contains two identical jquery copies (John Frickson)\n* extinfo.cgi does not set content-type (most cgi's don't) (John Frickson)\n* Timeperiods are corrupted by external command CHANGE_SVC_CHECK_TIMEPERIOD (xoubih)\n* Quick search doesn't show hosts without services (service status detail page) (John Frickson)\n* In host/services details view, if exactly 100 entries would not show last one (John Frickson)\n* nagios host URL parameter for NEW map doesn`t work - Network Map for All Hosts (John Frickson)\n* next_problem_id is improperly initialized (gherteg)\n* Passive problems not showing as \"unhandled\" (John Frickson)\n* September reported as Sept instead of Sep (Rostislav Opo\u010densk\u00fd)\n* Notifications are not sent for active alerts after scheduled downtime ends (John Frickson)\n* Nagios 4.2.0 not working on Solaris (John Frickson)\n* install-exfoliation and install-classicui don't work FreeBSD and Mac OS X (John Frickson)\n* Updated makefile to delete some no-longer-needed files (John Frickson)\n\n\n4.2.1 - 2016-09-06\n------------------\nFIXES\n* Fix undefined variable php error (John Frickson)\n* Links on the sidebar menu under 'Problems' are indented too far (John Frickson)\n* Using $ARGn$ Macros in perfdata (John Frickson)\n* using a wildcard in search returns service status total all zero's (John Frickson)\n* read_only does not take priority (deppy)\n* Running nagios -v on 4.2.0 takes 90+ seconds (John Frickson)\n* Bare \"make\" invoked in subtarget (mjo)\n* Theme images/stylesheets installed with inconsistent permissions (mjo / John Frickson)\n* Missing Image for Host and Service State Trends in Availability Report (nichokap / John Frickson)\n* Maintain non-persistent comments through reload (John Frickson)\n* Servicegroup availability report ignores includesoftstates in service report links (PriceChild)\n* error: format not a string literal and no format arguments (Karsten Weiss)\n* Synced config.guess and config.sub with GNU (Zakhar Kleyman)\n\n\n4.2.0 - 2016-08-01\n------------------\nSECURITY FIXES\n* Fixed vulnerability CVE-2008-4796 (John Frickson)\n* Fixed vulnerability CVE-2013-4214 (John Frickson)\n* web interface vulnerable to Cross-Site Request Forgery attacks (John Frickson)\n\nENHANCEMENTS\n* Increase socket queue length for listen()\n* Added host name to the website page title (leres / John Frickson)\n* Added additional icons for NetBSD and SuSE (John Frickson)\n* The new Status Map will now use cgi.cfg options (John Frickson)\n    default_statusmap_layout will default to \"6\" for the new map\n* The new Status Map will now show some valid values in the popup for \"Nagios Process\" (John Frickson)\n\nFIXES\n* Network outage view without access to all hosts (John Frickson)\n* Core workers looping (John Frickson)\n* service query returns duplicate host_name and description fields in the returned data (John Frickson)\n* HTML output of plug-ins is parsed in wrong way => webgui unusable (John Frickson)\n* Command worker fails to handle SIGPIPE\n* \"View Status\" links under \"Map\" broken in Nagios Core Version 4.1.1 (John Frickson)\n* Can't send big buffer - wproc: Core Worker seems to be choked (velripn / John Frickson)\n* Too big CPU load on FreeBSD and other systems using poll() interface (cejkar)\n* Flexible downtime recorded as unscheduled downtime (John Frickson)\n* Service Flexible downtimes produce 1 notification before entering (John Frickson)\n* Once you \"set flap_detection_enabled 0\" it should remove flapping state from the host/services page (John Frickson)\n* New map doesn't finish loading if a logo image is not found (John Frickson)\n* Extraneous Div end tag in map.html (Scott Wilkerson)\n* Issue with \"Problems\" section (John Frickson)\n* Status Map icons and online/offline status dots disappear in IE11 (John Frickson)\n* New network map overlays the nagios process with objects (John Frickson)\n* Added Default-Start and Default-Stop to the init script (John Frickson)\n* Compile / logging issues with BSD 6\n* Related to above, Fixed a lot of incorrectly handled time_t's in *printf's (John Frickson)\n* New map not working for RU locale (actually, most locales) (John Frickson)\n* Replaced all instances of signal() with sigaction() + blocking (John Frickson)\n* UTF-8 characters like german \u00e4 are not processed properly by function url_encode (John Frickson)\n* nagios worker processes can hog CPU (huxley / John Frickson)\n* custom time periods that include special characters were not being handled in reports (John Frickson)\n* Fixed init script to wait up to 90 seconds then kill the nagios process (John Frickson)\n* No Host Groups results in wrong error message (John Frickson)\n* Setup Nagios users to view specific host is not working in the new network map (John Frickson)\n* statusjson.cgi fails glibc realloc truncate response output (John Frickson)\n* Report Time Period does not work if an @ character is in the timeperiod name (John Frickson)\n* State History does not use actual plugin long_output (John Frickson)\n* Time period corruption (xoubih)\n* Tactical Overview - Disabled Flap Detection Link (John Frickson)\n\n4.1.1 - 08/19/2015\n------------------\nFIXES\n* CGI Could not read object configuration data (broken by error in 4.1.0)\n* exclude (!) not working (broken by mis-applied fix for 4.1.0)\n\n\n4.1.0 - 08/18/2015\n------------------\nENHANCEMENTS\n* Promoted JSON CGIs to released status (Eric Stanley)\n* New graphical CGI displays: statusmap, trends, histogram (Eric Stanley)\n* Make sticky status for acks and comments configurable enhancement #20 (Trevor McDonald / Scott Wilkerson)\n* Add host_down_disable_service_checks directive to nagios.cfg #44 (Trevor McDonald / Scott Wilkerson)\n* httpd.conf doesn't support Apache versions > 2.3 (DanielB / John Frickson)\n\nFIXES\n* Fix for not all service dependencies created (John Frickson)\n* Fix SIGSEGV with empty custom variable (orbis / John Frickson)\n* Fix contact macros in environment variables (dvoryanchikov)\n* Fixed host's current attempt goes to 1 after going to hard state (John Frickson)\n* Fixed two bugs/problems: Replace use of %zd in base/utils.c & incorrect va_start() in cgi/jsonutils.c (Peter Eriksson)\n* Fixed: Let remove_specialized actually remove all workers (Phil Mayers)\n* Fixed log file spam caused when using perfdata command directives in nagios.cfg (shashikanthbussa)\n* Fixed off-by-one error in bounds check leads to segfault (Phil Mayers)\n* Added links for legacy graphical displays (Eric Stanley)\n* Update embedded URL's to https versions of Nagios websites (scottwilkerson)\n* Fixed doxygen comments to work with latest doxygen 1.8.9.1 #30 (Trevor McDonald)\n* Fixed makefile target \"html\" to PHONY to fix GitHub issue #28 (Trevor McDonald)\n* Fixed typo as per GitHub issue #27 (Trevor McDonald)\n* Fixed jsonquery.php 404 not found error, and disabled Send Query button until form populates #43 (Scott Wilkerson)\n* Fixed linking in Tactical Overview for several of the Host entries in Featured section #48 (Scott Wilkerson)\n* Fixed passing limit and sort options to pagination and sort links #42 (Scott Wilkerson)\n* Added form field for icon URL and clean-up when it changes in CGI Status Map. (Eric Stanley)\n* Added options to cgi.cfg to uncheck sticky and send when acknowledging a problem (Trevor McDonald)\n* Low impact changes to automate the generation of RPMs from nagios.spec file. (T.J. Yang)\n* Update index.php (Trevor McDonald)\n* Fixed escaping of corewindow parameter to account for possible XSS injection (Scott Wilkerson)\n* Typo correction (T.J. Yang)\n* Make getCoreStatus respect cgi_base_url (Moritz Schlarb)\n* Adjusted map layout to work within frames (Eric Stanley)\n* Fixed map displays are now the full size of browser window (Eric Stanley)\n* Fixed labels and icons on circular markup no longer scale on zoom (Eric Stanley)\n* Got all maps except circular markup working with icons (Eric Stanley)\n* Fixes to make legacy CGIs work again. (Eric Stanley)\n* Fixes to make all/html target tolerant of being run multiple times (Eric Stanley)\n* For user-supplied maps, converted node group to have transform (Eric Stanley)\n* Fixed issue transitioning from circular markup map to other maps (Eric Stanley)\n* Fix displayForm to trigger on the button press (Scott Wilkerson)\n* Fix fo getBBox crash on Firefox (Eric Stanley)\n* Fixed map now resets zoom when form apply()'d (Eric Stanley)\n* Fixed so close box on dialogs actually closes dialog (Eric Stanley)\n* Corrected directive in trends display (Eric Stanley)\n* Fixed minor issue with link in trends links (Eric Stanley)\n* Fixed issue with map displaying on Firefox (Eric Stanley)\n* Added exclusions for ctags generation (Eric Stanley)\n* Update map-popup.html (Scott Wilkerson)\n* Initial commit of new graphical CGIs (Eric Stanley)\n* Fixed Github bug #18 - archivejson.cgi returns wrong host for state change query (Eric Stanley)\n* Status JSON: Added next_check to service details (Eric Stanley)\n* Fixed escaping of keys for scalar values in JSON CGIs (Eric Stanley)\n* build: Include <sys/loadavg.h> if it exists. (Eric J. Mislivec)\n* lib-tests: test-io{cache|broker} need -lsocket to link. (Eric J. Mislivec)\n* lib-tests: test-runcmd assumes GNU echo. (Eric J. Mislivec)\n* lib-tests: Signal handlers don't return int on most platforms, and using a cast was the wrong way to resolve this. (Eric J. Mislivec)\n* Fix some type/format mismatch warnings for pid_t. (Eric J. Mislivec)\n* Fix build on Solaris. (Eric J. Mislivec)\n* runcmd: Fix build when we don't HAVE_SETENV. (Eric J. Mislivec)\n* Fixed checkresult output processing (Eric Mislivec)\n* Corrected escaping of long output macros (Eric Mislivec)\n* Fixed null pointer dereferences in archive JSON (Eric Stanley)\n* Fixed memory overwrite issue in JSON string escaping (Eric Stanley)\n* JSON CGI: Now escaping object and array keys (Eric Stanley)\n\nKNOWN ISSUES\n* New map does not account for multiple parents, leaving \"legacy\" map as an option in the menu\n\n4.0.8 - 08/12/2014\n------------------\nENHANCEMENTS\n* Removed 8 kB string size limitation in JSON CGIs (Eric Stanley)\n* Re-implemented auto-rescheduling of checks (Eric Mislivec)\n* Avoid bunching of checks delayed due to timeperiod constraints (Eric Stanley)\n* Limit the number of autocalculated core workers to not spawn too many on large systems (Eric Mislivec, Janice Singh)\n\nFIXES\n* Removed quotes from numeric duration values in JSON CGIs (Eric Stanley)\n* Fixed escaping in JSON CGIs so all required characters are escaped, and in the correct order (Eric Stanley)\n* Fixed segfault in archive JSON CGI when plugin output was empty (Eric Stanley)\n* Fixed several possibilities for buffer overflow (Eric Mislivec, Dirkjan Bussink)\n* Fixed Tracker #582, #626: Handle VAR=VAL assignments at the start of simple commands (Eric Mislivec, Phil Randal)\n* Fixed Tracker #630: Recognize '<' and '>' as redirection operators (Eric Mislivec)\n* Corrected worker communication protocol documentation (Phil Mayers)\n* Fixed init script to leave config test log in a better location, let sysconfig override init script variables, and not remove nagios.cmd when attempting to start with another instance running (Eric Mislivec, Robin Kearney)\n* Fixed Tracker #361: Downtime notifications not displayed properly (Andrew Widdersheim)\n\n4.0.7 - 06/03/2014\n------------------\nENHANCEMENTS\n* Added value of custom variables to Object JSON output for hosts, services and contacts (Eric Stanley)\n\nFIXES\n* Fixed bug #616: Unescape plugin output read from checkresult files, fix multiline perf data concatenation, and avoid extra memory allocation and copies. (Eric Mislivec)\n* Fixed bug #609: Image on home page doesn't have correct image path prefix. (Derek Brewer)\n* Fixed bug #608: Extra newline in service check timeout output string. (Mauno Pihelgas)\n* Fixed bug #596: Crashes checking contact authorization for host escalations. (Alexey Dvoryanchikov - duplicates #590, #586)\n* Fixed bug #496: Syntax error in exfoliation's common.css. (Karsten Weiss)\n\n4.0.6 - 04/29/2014\n------------------\nENHANCEMENTS\n* Added name of authenticated user to JSON CGI results object (Eric Stanley)\n* Added Nagios Core version to the Status JSON CGI programstatus query (Eric Stanley)\n* Added daemon status to main page (Eric Mislivec)\n\nFIXES\n* Fixed bug #600: Service Check Timeout State always returns OK (0) status (Mauno Pihelgas, Eric Stanley)\n* Fixed bug #583: Status Check Output of (No output on stdout) stderr: (Eric\nStanley - duplicate of bug #573)\n* Fixed bug #573: Service checks returns (No output on stdout) stderr (Eric Stanley)\n* Fixed bug #438: Reloads during downtime causes wrong availability calculations (Eric Stanley)\n* Fixed feed updates when daemon can not access external networks (Eric Mislivec)\n* Archive JSON: Fixed bugs calculating availability (Eric Stanley)\n* Archive JSON: Allow missing logs to be skipped (Eric Stanley)\n\n4.0.5 - 04/11/2014\n------------------\n* Fixed bug #595: Nagios 4 security fix (Alexey Dvoryanchikov, Eric Stanley)\n* Fixed bug #594: Nagios 4 fix contactgroups parsing (Alexey Dvoryanchikov, Eric Stanley)\n* Fixed bug #577: Nagios 4 checks stalled when write to socket failed (Alexey Dvoryanchikov)\n* Fixed bug #580: Nagios 4 memory leak (Eric Stanley)\n* Fixed init script to remove the switching of users when performing configuration verification which was causing failures if nagios user was set to nologin (Scott Wilkerson)\n* Fixed auto creation of RAMDISK via environment variables in init script to properly check existence using $RAMDISK_DIR environment variable. (Scott Wilkerson)\n* Fixed unreferenced variable NagiosVarDir in daemon-init (Eric Mislivec)\n* Fixed bug where audio alerts wouldn't work with a 0 height and width - https://support.nagios.com/forum/viewtopic.php?t=26387 (Scott Wilkerson)\n\n4.0.4 - 03/14/2014\n------------------\nENHANCEMENTS\n* JSON CGIs moved to beta status (Eric Stanley)\n\nFIXES\n* Fixed bug #491,#553: Rebuilt the daemon-init scripts back to something that should work on all systems (Scott Wilkerson)\n\n\n4.0.3 - 02/28/2014\n------------------\nENHANCEMENTS\n* Aliased hourly_value to importance and minimum_value to minimum_importance and deprecated the former (Eric Stanley)\n* Added host and service importance macros (Eric Stanley)\n* Added notifications on flexible downtime expiration (Dan Wittenberg)\n\nFIXES\n* Bug #548: Temporary fix that rejects all external command during restart to prevent Core from crashing (Eric Stanley)\n* Corrected calculation of host importance and importance defaults (Eric Stanley)\n* Fixed bug #498: Nagios 4 enable_environment_macros=1 not working (Eric Stanley, Alexey Dvoryanchikov)\n* No longer checks whether logs can be written when verifying configuration (Eric Stanley)\n* Fixed CGI bug where the CGI could read past the end of the list of CGI variables, potentially crashing the CGI (Scott Wilkerson)\n* Fixed inheritance of hourly_value from host and service templates (Scott Wilkerson)\n* Fixed bug #502: 4.0.0: Configuration -> Service Escalations = incomplete list (Eric Stanley)\n* Fixed bug #523: quotes and double quotes in plugin message are converted to HTML escapes in Nagios 4.0 (duplicate of bug #524)\n* Fixed bug #524: URLs returned in plugin check results are not correctly displayed (Eric Stanley)\n* Fixed bug where passive service checks would return \"Service check timed out after 0.00 seconds\" (Scott Wilkerson)\n\n4.0.2 - 11/25/2013\n------------------\nFIXES\n* Fixed bug 528: Nagios 4.0.1: Logrotation: Only current host- and servicestates saved in rotated logfiles (duplicate of 507)\n* Fixed bug 507: Nagios 4.0.0 - Problem during log rotate (Stefano Ghelfi)\n* Fixed bug 530: RPM spec file sets wrong permissions on plugins directory (duplicate of bug 494)\n* Fixed bug 494: nagios.spec fixes (with patch) (Karsten Weiss)\n* Fixed bug 515: Segsegv after starting up nagios (duplicate of bug 526)\n* Fixed bug 513: Crash while entering downtime for service (duplicate of bug 526)\n* Fixed bug 529: Core Worker failed to reap child in 4.0.1 Description\n* Fixed bug 514: scheduled downtime not showing in web interface (Eric Stanley)\n* Fixed bug 526: sort_downtime() corrupts scheduled_downtime_list causing segfault (Adam James)\n* Fixed bug 492: Nagios 4 fails to remove/add checks upon reload (Eric Stanley)\n* Fixed Bug 484: Beta4.0.0b4 service checks returning (No output on stdout) (Eric Stanley)\n* Fixed Bug 470: statusmap doesn't display info (Cameron Moore)\n* Fixed Bug 499: Security issue in daemon-init.in, function check_config (T\u00f3mas Edwardsson)\n\n4.0.1 - 10/15/2013\n------------------\nENHANCEMENTS\n* Added compiler flags in RPM spec file to reduce compiler noise (Dan Wittenberg)\n* Added logging of failure in dlclose() call (Anton Lofgren)\n* Added a simple query handler interface, nagios-qh.rb (Dan Wittenberg)\n* Multiple code simplifications, additional error handling in downtime code (Andreas Ericsson)\n\nFIXES\n* Reverted commit f99a9a7b which set check_interval to 1 if it was configured as zero.\n* Corrected order of arguments when logging unknown hosts/services (Scott Wilkerson)\n* Downtime initialized before retention data read (Eric Stanley)\n* Patches to make RPM build again (Dan Wittenberg)\n* Ensure that scheduled_downtime_depth never drops below zero (Andreas Ericsson)\n\n4.0.0 - 09/20/2013\n------------------\nSee http://nagios.sourceforge.net/docs/nagioscore/4/en/whatsnew.html for a\nlist of the changes in Nagios Core 4\n", "=======\nTHANKS!\n=======\n\nThe success of Nagios has been due to the fantastic community members that\nsupport it and provide bug reports, patches, and great ideas.  Here are a\nfew of the many members that have contributed to Nagios in various ways\nsince 1999.  If I missed your name, misspelled it or otherwise got it\nwrong, please let me know.\n\n* Adam Bowen\n* Ahmon Dancy\n* Alain Radix\n* Albrecht Dress\n* Alessandro Ren\n* Alex Peeters\n* Alexios Chouhoulas\n* Allan Clark\n* Alok Dubey\n* Aman Gupta\n* Amir Rosenblatt\n* Anders K. Lindgren\n* Andreas Ericsson\n* Andreas Kirchwitz\n* Andrew Kaplan\n* Andrew Widdersheim\n* Andy Finkenstadt\n* Andy Shellam\n* Anton Lofgren\n* Ari Edelkind\n* Armin Wolfermann\n* Arne Hinrichsen\n* Badri Pillai\n* Bastian Friedrich\n* Ben Bell\n* Ben Heavner\n* Bernard Li\n* Bernd Arnold\n* Bill Pier\n* Bo Kersey\n* Bob (Netshell)\n* Bob Rentschler\n* Bogdan Sandu\n* Brad Werschler\n* Brandon Knitter\n* Brian Riggs\n* Brian Seklecki\n* Burkhard Klaus\n* Carlos Velasco\n* Cary Petterborg\n* Charlie Cook\n* Chris Bensend\n* Chris Kolquist\n* Chris Rothecker\n* Chris Witterholt\n* Christian Masopust\n* Christian Mies\n* Christoph Biedl\n* Christoph Kron\n* Christoph Maser\n* Cliff Woolley\n* Dan Gailey\n* Daniel Burke\n* Daniel Koffler\n* Daniel Pouzzner\n* Daniel Wittenberg\n* Darren Gamble\n* Dave Viner\n* David Allan\n* David Kmoch\n* David Schlecht\n* David Tilloy\n* David Walser\n* Dawid Golunski\n* Dean Lane\n* Denis Seleznyov\n* Dennis Biringer\n* Derrick Bennett\n* Devin Bayer\n* Dietmar Rieder\n* Dirkjan Bussink\n* Don Carroll\n* Duncan Ferguson\n* Eirik Robertstad\n* Emanuel Massano\n* Ernst-Deiter Martin\n* Erwan Arzur\n* Esteban Manchado Velazquez\n* Evan Winter\n* Felipe Almeida\n* Florian Weimer\n* Fran Boon\n* Franky Van Liedekerke\n* Frederic Schaer\n* Frederic Van Espen \n* Garry Cook\n* Gary Berger\n* Gary Miller\n* Gavin Adams\n* Geert Vanderkelen\n* Gennaro Tortone\n* Geoff Montee\n* Gerd Mueller\n* Gerhard Lausser\n* gherteg\n* Glenn Thompson\n* Gordon Messmer\n* Gordon Smith\n* Grant Byers\n* Greg Abrams\n* Greg Woods\n* Hayakawa Shinya\n* Helmut Mikulcik\n* Hendrik Baecker\n* Henning Brauer\n* Herbert Straub\n* Hiren Patel\n* Holger Weiss\n* Horvath Tamas\n* Hugo Gayosso\n* Hugo Hallqvist\n* Ian Blenke\n* Ian Cass\n* Igno Kley\n* Ingo Lantschner\n* Ivan Kuncl\n* Jacob Lundqvist\n* James \"Showkilr\" Peterson\n* James Maddison\n* James Moseley\n* Jan David\n* Jan Grant\n* Jan Vejvalka\n* Janet Post\n* Janice Singh\n* Jason Blakey\n* Jason Hedden\n* Jean Gabes\n* Jean-Eric Cuendet\n* Jeff Cours\n* Jeff Johnson\n* Jeffrey Blank\n* Jeffrey Goldschrafe\n* Jeremy Bouse\n* Jeremy Weatherford\n* Jim Crilley\n* Jim Dumser\n* Jim Popovitch\n* Jiri Kostern\n* Jochen Bern\n* Joel Berry\n* Joel Crisp\n* Joerg Linge\n* John Calcote\n* John Rouillard\n* Jon Andrews\n* Jonathan Clarke\n* Jonathan Kamens\n* Jonathan Saggau\n* Jorge Sanchez\n* Joseph Maiorana\n* Josh Soref\n* Josh Thorstad\n* Justin Clarke\n* Kai Kunstmann\n* Kai Ung\n* Karel Salavec\n* Karl DeBisschop\n* Karl Hegbloom\n* Karsten Weiss\n* Kenneth Ray\n* Kevin Benton\n* Kevin Stone\n* Larry Low\n* Lars Hansson\n* Lars Hecking\n* Lars Kellogg-Stedman\n* Lars Michelson\n* Lars Vogdt\n* lev\n* Lonny Selinger\n* Lou Sneddon\n* Ludo Bosmans\n* Luigi Balzano\n* Luiz Felipe R E\n* Luke Ross\n* Marc Powell\n* Marcus Fleige\n* Marcus Hildenbrand\n* Mark DeTrano\n* Mark Frost\n* Mark Goldfinch\n* Mark Schenker\n* Mark Spieth\n* Markus Almroth\n* Markus Baertschi\n* Marlo Bell\n* Martin Green\n* Martin Mielke\n* Mathieu Gagne\n* Matt Ezell\n* Matthew Grant\n* Matthew Richardson\n* Matthias Cramer\n* Matthias Eble\n* Matthias Eichler\n* Matthias Flacke\n* Matthias Flittner\n* Matthias Kerk\n* Matthieu Kermagoret\n* Matthieu Kermagoret\n* Mattias Ryrlen\n* Max Schubert\n* Max Sikstrom\n* Michael Anthon\n* Michael Bailey\n* Michael Bunk\n* Michael Little\n* Michael Lubben\n* Michael Marineau\n* Michael O'Reilly\n* Michael Smedius\n* Michal Zimen\n* Michelle Craft\n* Mika Fischer\n* Mike Bird\n* Mike Dorman\n* Mike McHenry\n* Mindaugas Riauba\n* Mitch Wright \n* Moshe Sharon\n* Nate Shafer\n* Nathan Grennan\n* Nicholas Tang\n* Nick Cleaton\n* Nick Reinking\n* Nick Shore\n* Nikola Vassilev\n* Olivier Beytrison\n* Olivier Jan\n* Parth Laxmikant Kolekar\n* Patrick Proy\n* Patrik Halfar\n* Paul Kent\n* Paul Pot\n* Pavel Satrapa\n* Pawel Zuzelski\n* Pedro Leite\n* Percy Jahn\n* Perry Clarke\n* Peter Ringe\n* Peter Valdemar Morch\n* Peter Westlake\n* Petr Adamec\n* Petya Kohts\n* Phil Mayers\n* Phil Randal\n* Phil Walther\n* Ralph Rossner\n* Ray Bengen\n* Remi Paulmier\n* R\u00e9mi Verschelde \n* Rene Klootwijk\n* Ricardo Maraschini\n* Richard Mayhew\n* Rob Enders\n* Rob Patrick\n* Rob Remus\n* Robert August Vincent II\n* Robert Gash\n* Robert Thompson\n* Roberto Marrodan\n* Robin Kearney\n* Robin Sonefors\n* Ronald Ho\n* Rostislav Opo\u010densk\u00fd\n* Russell Scibetti\n* Ryan Skorstad\n* Ryoji Kobayashi\n* Sam Howard\n* Sean Finney\n* Sebastian Guarino\n* Sebastien Barbereau\n* Sergio Guzman\n* Shad Lords\n* Simon Beale\n* Stanley Hopcroft\n* Stefan Rompf\n* Stefan Schurtz\n* Stephane Urbanovski\n* Stephen Davies\n* Stephen Gran\n* Steve Underwood\n* Steven Pokrandt\n* Stewart James\n* Stig Jacobsen\n* Subhendu Ghosh\n* SUSE Linux Team\n* Sven Nierlein\n* Sven Strickroth\n* Sven-G\u00f6ran Bergh\n* Sylvain Falardeau\n* Szabo Gabor\n* Thomas Dohl\n* Thomas Dunkel\n* Thomas Guyot-Sionnest\n* Thomas Hepper\n* Thomas Sebastien\n* Thomas Stolle\n* Tim Starling\n* Tim Wilde\n* Time Niemueller\n* Tobias Klausmann\n* Tobias Mucke\n* Todd Green\n* Todd Wheeler\n* Tom Bertelson\n* Tom De Blende\n* Tom Welsh\n* Tomer Okavi\n* Ton Voon\n* Torsten Huebler\n* Troy Lea\n* Tyler Lund\n* Uwe Knop\n* Uwe Knop\n* Vadim Okun\n* Volkan Yazici\n* Volker Aust\n* William Leibzon\n* William Preston\n* Wolfgang Barth\n* xoubih\n* Yves Rubin\n* Zakhar Kleyman\n* Z. Liu\n", "/*****************************************************************************\n *\n * NAGIOS.C - Core Program Code For Nagios\n *\n * Program: Nagios Core\n * License: GPL\n *\n * First Written:   01-28-1999 (start of development)\n *\n * Description:\n *\n * Nagios is a network monitoring tool that will check hosts and services\n * that you specify.  It has the ability to notify contacts via email, pager,\n * or other user-defined methods when a service or host goes down and\n * recovers.  Service and host monitoring is done through the use of external\n * plugins which can be developed independently of Nagios.\n *\n * License:\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 2 as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n *\n *****************************************************************************/\n\n#include \"../include/config.h\"\n#include \"../include/common.h\"\n#include \"../include/objects.h\"\n#include \"../include/comments.h\"\n#include \"../include/downtime.h\"\n#include \"../include/statusdata.h\"\n#include \"../include/macros.h\"\n#include \"../include/nagios.h\"\n#include \"../include/sretention.h\"\n#include \"../include/perfdata.h\"\n#include \"../include/broker.h\"\n#include \"../include/nebmods.h\"\n#include \"../include/nebmodules.h\"\n#include \"../include/workers.h\"\n\n/*#define DEBUG_MEMORY 1*/\n#ifdef DEBUG_MEMORY\n#include <mcheck.h>\n#endif\n\nstatic int is_worker;\n\nstatic void set_loadctl_defaults(void)\n{\n\tstruct rlimit rlim;\n\n\t/* Workers need to up 'em, master needs to know 'em */\n\tgetrlimit(RLIMIT_NOFILE, &rlim);\n\trlim.rlim_cur = rlim.rlim_max;\n\tsetrlimit(RLIMIT_NOFILE, &rlim);\n\tloadctl.nofile_limit = rlim.rlim_max;\n#ifdef RLIMIT_NPROC\n\tgetrlimit(RLIMIT_NPROC, &rlim);\n\trlim.rlim_cur = rlim.rlim_max;\n\tsetrlimit(RLIMIT_NPROC, &rlim);\n\tloadctl.nproc_limit = rlim.rlim_max;\n#else\n\tloadctl.nproc_limit = loadctl.nofile_limit / 2;\n#endif\n\n\t/*\n\t * things may have been configured already. Otherwise we\n\t * set some sort of sane defaults here\n\t */\n\tif (!loadctl.jobs_max) {\n\t\tloadctl.jobs_max = loadctl.nproc_limit - 100;\n\t\tif (!is_worker && loadctl.jobs_max > (loadctl.nofile_limit - 50) * wproc_num_workers_online) {\n\t\t\tloadctl.jobs_max = (loadctl.nofile_limit - 50) * wproc_num_workers_online;\n\t\t}\n\t}\n\n\tif (!loadctl.jobs_limit)\n\t\tloadctl.jobs_limit = loadctl.jobs_max;\n\n\tif (!loadctl.backoff_limit)\n\t\tloadctl.backoff_limit = online_cpus() * 2.5;\n\tif (!loadctl.rampup_limit)\n\t\tloadctl.rampup_limit = online_cpus() * 0.8;\n\tif (!loadctl.backoff_change)\n\t\tloadctl.backoff_change = loadctl.jobs_limit * 0.3;\n\tif (!loadctl.rampup_change)\n\t\tloadctl.rampup_change = loadctl.backoff_change * 0.25;\n\tif (!loadctl.check_interval)\n\t\tloadctl.check_interval = 60;\n\tif (!loadctl.jobs_min)\n\t\tloadctl.jobs_min = online_cpus() * 20; /* pessimistic */\n}\n\nstatic int test_path_access(const char *program, int mode)\n{\n\tchar *envpath, *p, *colon;\n\tint ret, our_errno = 1500; /* outside errno range */\n\n\tif (program[0] == '/' || !(envpath = getenv(\"PATH\")))\n\t\treturn access(program, mode);\n\n\tif (!(envpath = strdup(envpath))) {\n\t\terrno = ENOMEM;\n\t\treturn -1;\n\t}\n\n\tfor (p = envpath; p; p = colon + 1) {\n\t\tchar *path;\n\n\t\tcolon = strchr(p, ':');\n\t\tif (colon)\n\t\t\t*colon = 0;\n\t\tasprintf(&path, \"%s/%s\", p, program);\n\t\tret = access(path, mode);\n\t\tfree(path);\n\t\tif (!ret)\n\t\t\tbreak;\n\n\t\tif (ret < 0) {\n\t\t\tif (errno == ENOENT)\n\t\t\t\tcontinue;\n\t\t\tif (our_errno > errno)\n\t\t\t\tour_errno = errno;\n\t\t}\n\t\tif (!colon)\n\t\t\tbreak;\n\t}\n\n\tfree(envpath);\n\n\tif (!ret)\n\t\terrno = 0;\n\telse\n\t\terrno = our_errno;\n\n\treturn ret;\n}\n\nstatic int nagios_core_worker(const char *path)\n{\n\tint sd, ret;\n\tchar response[128];\n\n\tis_worker = 1;\n\n\tset_loadctl_defaults();\n\n\tsd = nsock_unix(path, NSOCK_TCP | NSOCK_CONNECT);\n\tif (sd < 0) {\n\t\tprintf(\"Failed to connect to query socket '%s': %s: %s\\n\",\n\t\t\t   path, nsock_strerror(sd), strerror(errno));\n\t\treturn 1;\n\t}\n\n\tret = nsock_printf_nul(sd, \"@wproc register name=Core Worker %ld;pid=%ld\", (long)getpid(), (long)getpid());\n\tif (ret < 0) {\n\t\tprintf(\"Failed to register as worker.\\n\");\n\t\treturn 1;\n\t}\n\n\tret = read(sd, response, 3);\n\tif (ret != 3) {\n\t\tprintf(\"Failed to read response from wproc manager\\n\");\n\t\treturn 1;\n\t}\n\tif (memcmp(response, \"OK\", 3)) {\n\t\tread(sd, response + 3, sizeof(response) - 4);\n\t\tresponse[sizeof(response) - 2] = 0;\n\t\tprintf(\"Failed to register with wproc manager: %s\\n\", response);\n\t\treturn 1;\n\t}\n\n\tenter_worker(sd, start_cmd);\n\treturn 0;\n}\n\n/*\n * only handles logfile for now, which we stash in macros to\n * make sure we can log *somewhere* in case the new path is\n * completely inaccessible.\n */\nstatic int test_configured_paths(void)\n{\n\tFILE *fp;\n\tnagios_macros *mac;\n\n\tmac = get_global_macros();\n\n\tfp = fopen(log_file, \"a+\");\n\tif (!fp) {\n\t\t/*\n\t\t * we do some variable trashing here so logit() can\n\t\t * open the old logfile (if any), in case we got a\n\t\t * restart command or a SIGHUP\n\t\t */\n\t\tchar *value_absolute = log_file;\n\t\tlog_file = mac->x[MACRO_LOGFILE];\n\t\tlogit(NSLOG_CONFIG_ERROR, TRUE, \"Error: Failed to open logfile '%s' for writing: %s\\n\", value_absolute, strerror(errno));\n\t\treturn ERROR;\n\t\t}\n\n\tfclose(fp);\n\n\t/* save the macro */\n\tmac->x[MACRO_LOGFILE] = log_file;\n\treturn OK;\n}\n\nint main(int argc, char **argv) {\n\tint result;\n\tint error = FALSE;\n\tint display_license = FALSE;\n\tint display_help = FALSE;\n\tint c = 0;\n\tstruct tm *tm, tm_s;\n\ttime_t now;\n\tchar datestring[256];\n\tnagios_macros *mac;\n\tconst char *worker_socket = NULL;\n\tint i;\n#ifdef HAVE_SIGACTION\n\tstruct sigaction sig_action;\n#endif\n\n#ifdef HAVE_GETOPT_H\n\tint option_index = 0;\n\tstatic struct option long_options[] = {\n\t\t\t{\"help\", no_argument, 0, 'h'},\n\t\t\t{\"version\", no_argument, 0, 'V'},\n\t\t\t{\"license\", no_argument, 0, 'V'},\n\t\t\t{\"verify-config\", no_argument, 0, 'v'},\n\t\t\t{\"daemon\", no_argument, 0, 'd'},\n\t\t\t{\"test-scheduling\", no_argument, 0, 's'},\n\t\t\t{\"precache-objects\", no_argument, 0, 'p'},\n\t\t\t{\"use-precached-objects\", no_argument, 0, 'u'},\n\t\t\t{\"enable-timing-point\", no_argument, 0, 'T'},\n\t\t\t{\"worker\", required_argument, 0, 'W'},\n\t\t\t{0, 0, 0, 0}\n\t\t};\n#define getopt(argc, argv, o) getopt_long(argc, argv, o, long_options, &option_index)\n#endif\n\n\tmemset(&loadctl, 0, sizeof(loadctl));\n\tmac = get_global_macros();\n\n\t/* make sure we have the correct number of command line arguments */\n\tif(argc < 2)\n\t\terror = TRUE;\n\n\t/* get all command line arguments */\n\twhile(1) {\n\t\tc = getopt(argc, argv, \"+hVvdspuxTW\");\n\n\t\tif(c == -1 || c == EOF)\n\t\t\tbreak;\n\n\t\tswitch(c) {\n\n\t\t\tcase '?': /* usage */\n\t\t\tcase 'h':\n\t\t\t\tdisplay_help = TRUE;\n\t\t\t\tbreak;\n\n\t\t\tcase 'V': /* version */\n\t\t\t\tdisplay_license = TRUE;\n\t\t\t\tbreak;\n\n\t\t\tcase 'v': /* verify */\n\t\t\t\tverify_config++;\n\t\t\t\tbreak;\n\n\t\t\tcase 's': /* scheduling check */\n\t\t\t\ttest_scheduling = TRUE;\n\t\t\t\tbreak;\n\n\t\t\tcase 'd': /* daemon mode */\n\t\t\t\tdaemon_mode = TRUE;\n\t\t\t\tbreak;\n\n\t\t\tcase 'p': /* precache object config */\n\t\t\t\tprecache_objects = TRUE;\n\t\t\t\tbreak;\n\n\t\t\tcase 'u': /* use precached object config */\n\t\t\t\tuse_precached_objects = TRUE;\n\t\t\t\tbreak;\n\t\t\tcase 'T':\n\t\t\t\tenable_timing_point = TRUE;\n\t\t\t\tbreak;\n\t\t\tcase 'W':\n\t\t\t\tworker_socket = optarg;\n\t\t\t\tbreak;\n\n\t\t\tcase 'x':\n\t\t\t\tprintf(\"Warning: -x is deprecated and will be removed\\n\");\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\n#ifdef DEBUG_MEMORY\n\tmtrace();\n#endif\n\t/* if we're a worker we can skip everything below */\n\tif(worker_socket) {\n\t\texit(nagios_core_worker(worker_socket));\n\t}\n\n\t/* Initialize configuration variables */                             \n\tinit_main_cfg_vars(1);\n\tinit_shared_cfg_vars(1);\n\n\tif(daemon_mode == FALSE) {\n\t\tprintf(\"\\nNagios Core %s\\n\", PROGRAM_VERSION);\n\t\tprintf(\"Copyright (c) 2009-present Nagios Core Development Team and Community Contributors\\n\");\n\t\tprintf(\"Copyright (c) 1999-2009 Ethan Galstad\\n\");\n\t\tprintf(\"Last Modified: %s\\n\", PROGRAM_MODIFICATION_DATE);\n\t\tprintf(\"License: GPL\\n\\n\");\n\t\tprintf(\"Website: https://www.nagios.org\\n\");\n\t\t}\n\n\t/* just display the license */\n\tif(display_license == TRUE) {\n\n\t\tprintf(\"This program is free software; you can redistribute it and/or modify\\n\");\n\t\tprintf(\"it under the terms of the GNU General Public License version 2 as\\n\");\n\t\tprintf(\"published by the Free Software Foundation.\\n\\n\");\n\t\tprintf(\"This program is distributed in the hope that it will be useful,\\n\");\n\t\tprintf(\"but WITHOUT ANY WARRANTY; without even the implied warranty of\\n\");\n\t\tprintf(\"MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n\");\n\t\tprintf(\"GNU General Public License for more details.\\n\\n\");\n\t\tprintf(\"You should have received a copy of the GNU General Public License\\n\");\n\t\tprintf(\"along with this program; if not, write to the Free Software\\n\");\n\t\tprintf(\"Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\\n\\n\");\n\n\t\texit(OK);\n\t\t}\n\n\t/* make sure we got the main config file on the command line... */\n\tif(optind >= argc)\n\t\terror = TRUE;\n\n\t/* if there are no command line options (or if we encountered an error), print usage */\n\tif(error == TRUE || display_help == TRUE) {\n\n\t\tprintf(\"Usage: %s [options] <main_config_file>\\n\", argv[0]);\n\t\tprintf(\"\\n\");\n\t\tprintf(\"Options:\\n\");\n\t\tprintf(\"\\n\");\n\t\tprintf(\"  -v, --verify-config          Verify all configuration data (-v -v for more info)\\n\");\n\t\tprintf(\"  -s, --test-scheduling        Shows projected/recommended check scheduling and other\\n\");\n\t\tprintf(\"                               diagnostic info based on the current configuration files.\\n\");\n\t\tprintf(\"  -T, --enable-timing-point    Enable timed commentary on initialization\\n\");\n\t\tprintf(\"  -x, --dont-verify-paths      Deprecated (Don't check for circular object paths)\\n\");\n\t\tprintf(\"  -p, --precache-objects       Precache object configuration\\n\");\n\t\tprintf(\"  -u, --use-precached-objects  Use precached object config file\\n\");\n\t\tprintf(\"  -d, --daemon                 Starts Nagios in daemon mode, instead of as a foreground process\\n\");\n\t\tprintf(\"  -W, --worker /path/to/socket Act as a worker for an already running daemon\\n\");\n\t\tprintf(\"\\n\");\n\t\tprintf(\"Visit the Nagios website at https://www.nagios.org/ for bug fixes, new\\n\");\n\t\tprintf(\"releases, online documentation, FAQs, information on subscribing to\\n\");\n\t\tprintf(\"the mailing lists, and commercial support options for Nagios.\\n\");\n\t\tprintf(\"\\n\");\n\n\t\texit(ERROR);\n\t\t}\n\n\n\t/*\n\t * config file is last argument specified.\n\t * Make sure it uses an absolute path\n\t */\n\tconfig_file = nspath_absolute(argv[optind], NULL);\n\tif(config_file == NULL) {\n\t\tprintf(\"Error allocating memory.\\n\");\n\t\texit(ERROR);\n\t\t}\n\n\tconfig_file_dir = nspath_absolute_dirname(config_file, NULL);\n\n\t/* \n\t * Set the signal handler for the SIGXFSZ signal here because\n\t * we may encounter this signal before the other signal handlers\n\t * are set.\n\t */\n#ifdef HAVE_SIGACTION\n\tsig_action.sa_sigaction = NULL;\n\tsig_action.sa_handler = handle_sigxfsz;\n\tsigfillset(&sig_action.sa_mask);\n\tsig_action.sa_flags = SA_NODEFER|SA_RESTART;\n\tsigaction(SIGXFSZ, &sig_action, NULL);\n#else\n\tsignal(SIGXFSZ, handle_sigxfsz);\n#endif\n\n\t/*\n\t * let's go to town. We'll be noisy if we're verifying config\n\t * or running scheduling tests.\n\t */\n\tif(verify_config || test_scheduling || precache_objects) {\n\t\treset_variables();\n\t\t/*\n\t\t * if we don't beef up our resource limits as much as\n\t\t * we can, it's quite possible we'll run headlong into\n\t\t * EAGAIN due to too many processes when we try to\n\t\t * drop privileges later.\n\t\t */\n\t\tset_loadctl_defaults();\n\n\t\tif(verify_config)\n\t\t\tprintf(\"Reading configuration data...\\n\");\n\n\t\t/* read our config file */\n\t\tresult = read_main_config_file(config_file);\n\t\tif(result != OK) {\n\t\t\tprintf(\"   Error processing main config file!\\n\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\tif(verify_config)\n\t\t\tprintf(\"   Read main config file okay...\\n\");\n\n\t\t/* drop privileges */\n\t\tif((result = drop_privileges(nagios_user, nagios_group)) == ERROR) {\n\t\t\tprintf(\"   Failed to drop privileges.  Aborting.\");\n\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\t/*\n\t\t * this must come after dropping privileges, so we make\n\t\t * sure to test access permissions as the right user.\n\t\t */\n\t\tif (!verify_config && test_configured_paths() == ERROR) {\n\t\t\tprintf(\"   One or more path problems detected. Aborting.\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\t/* read object config files */\n\t\tresult = read_all_object_data(config_file);\n\t\tif(result != OK) {\n\t\t\tprintf(\"   Error processing object config files!\\n\\n\");\n\t\t\t/* if the config filename looks fishy, warn the user */\n\t\t\tif(!strstr(config_file, \"nagios.cfg\")) {\n\t\t\t\tprintf(\"\\n***> The name of the main configuration file looks suspicious...\\n\");\n\t\t\t\tprintf(\"\\n\");\n\t\t\t\tprintf(\"     Make sure you are specifying the name of the MAIN configuration file on\\n\");\n\t\t\t\tprintf(\"     the command line and not the name of another configuration file.  The\\n\");\n\t\t\t\tprintf(\"     main configuration file is typically '%s'\\n\", DEFAULT_CONFIG_FILE);\n\t\t\t\t}\n\n\t\t\tprintf(\"\\n***> One or more problems was encountered while processing the config files...\\n\");\n\t\t\tprintf(\"\\n\");\n\t\t\tprintf(\"     Check your configuration file(s) to ensure that they contain valid\\n\");\n\t\t\tprintf(\"     directives and data definitions.  If you are upgrading from a previous\\n\");\n\t\t\tprintf(\"     version of Nagios, you should be aware that some variables/definitions\\n\");\n\t\t\tprintf(\"     may have been removed or modified in this version.  Make sure to read\\n\");\n\t\t\tprintf(\"     the HTML documentation regarding the config files, as well as the\\n\");\n\t\t\tprintf(\"     'Whats New' section to find out what has changed.\\n\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\tif(verify_config) {\n\t\t\tprintf(\"   Read object config files okay...\\n\\n\");\n\t\t\tprintf(\"Running pre-flight check on configuration data...\\n\\n\");\n\t\t\t}\n\n\t\t/* run the pre-flight check to make sure things look okay... */\n\t\tresult = pre_flight_check();\n\n\t\tif(result != OK) {\n\t\t\tprintf(\"\\n***> One or more problems was encountered while running the pre-flight check...\\n\");\n\t\t\tprintf(\"\\n\");\n\t\t\tprintf(\"     Check your configuration file(s) to ensure that they contain valid\\n\");\n\t\t\tprintf(\"     directives and data definitions.  If you are upgrading from a previous\\n\");\n\t\t\tprintf(\"     version of Nagios, you should be aware that some variables/definitions\\n\");\n\t\t\tprintf(\"     may have been removed or modified in this version.  Make sure to read\\n\");\n\t\t\tprintf(\"     the HTML documentation regarding the config files, as well as the\\n\");\n\t\t\tprintf(\"     'Whats New' section to find out what has changed.\\n\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\tif(verify_config) {\n\t\t\tprintf(\"\\nThings look okay - No serious problems were detected during the pre-flight check\\n\");\n\t\t\t}\n\n\t\t/* scheduling tests need a bit more than config verifications */\n\t\tif(test_scheduling == TRUE) {\n\n\t\t\t/* we'll need the event queue here so we can time insertions */\n\t\t\tinit_event_queue();\n\t\t\ttiming_point(\"Done initializing event queue\\n\");\n\n\t\t\t/* read initial service and host state information */\n\t\t\tinitialize_retention_data(config_file);\n\t\t\tread_initial_state_information();\n\t\t\ttiming_point(\"Retention data and initial state parsed\\n\");\n\n\t\t\t/* initialize the event timing loop */\n\t\t\tinit_timing_loop();\n\t\t\ttiming_point(\"Timing loop initialized\\n\");\n\n\t\t\t/* display scheduling information */\n\t\t\tdisplay_scheduling_info();\n\t\t\t}\n\n\t\tif(precache_objects) {\n\t\t\tresult = fcache_objects(object_precache_file);\n\t\t\ttiming_point(\"Done precaching objects\\n\");\n\t\t\tif(result == OK) {\n\t\t\t\tprintf(\"Object precache file created:\\n%s\\n\", object_precache_file);\n\t\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\"Failed to precache objects to '%s': %s\\n\", object_precache_file, strerror(errno));\n\t\t\t\t}\n\t\t\t}\n\n\t\t/* clean up after ourselves */\n\t\tcleanup();\n\n\t\t/* exit */\n\t\ttiming_point(\"Exiting\\n\");\n\n\t\t/* make valgrind shut up about still reachable memory */\n\t\tneb_free_module_list();\n\t\tfree(config_file_dir);\n\t\tfree(config_file);\n\n\t\texit(result);\n\t\t}\n\n\n\t/* else start to monitor things... */\n\telse {\n\n\t\t/*\n\t\t * if we're called with a relative path we must make\n\t\t * it absolute so we can launch our workers.\n\t\t * If not, we needn't bother, as we're using execvp()\n\t\t */\n\t\tif (strchr(argv[0], '/'))\n\t\t\tnagios_binary_path = nspath_absolute(argv[0], NULL);\n\t\telse\n\t\t\tnagios_binary_path = strdup(argv[0]);\n\n\t\tif (!nagios_binary_path) {\n\t\t\tlogit(NSLOG_RUNTIME_ERROR, TRUE, \"Error: Unable to allocate memory for nagios_binary_path\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\tif (!(nagios_iobs = iobroker_create())) {\n\t\t\tlogit(NSLOG_RUNTIME_ERROR, TRUE, \"Error: Failed to create IO broker set: %s\\n\",\n\t\t\t\t  strerror(errno));\n\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\t/* keep monitoring things until we get a shutdown command */\n\t\tdo {\n\t\t\t/* reset internal book-keeping (in case we're restarting) */\n\t\t\twproc_num_workers_spawned = wproc_num_workers_online = 0;\n\t\t\tcaught_signal = sigshutdown = FALSE;\n\t\t\tsig_id = 0;\n\n\t\t\t/* reset program variables */\n\t\t\treset_variables();\n\t\t\ttiming_point(\"Variables reset\\n\");\n\n\t\t\t/* get PID */\n\t\t\tnagios_pid = (int)getpid();\n\n\t\t\t/* read in the configuration files (main and resource config files) */\n\t\t\tresult = read_main_config_file(config_file);\n\t\t\tif (result != OK) {\n\t\t\t\tlogit(NSLOG_CONFIG_ERROR, TRUE, \"Error: Failed to process config file '%s'. Aborting\\n\", config_file);\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t\t}\n\t\t\ttiming_point(\"Main config file read\\n\");\n\n\t\t\t/* NOTE 11/06/07 EG moved to after we read config files, as user may have overridden timezone offset */\n\t\t\t/* get program (re)start time and save as macro */\n\t\t\tprogram_start = time(NULL);\n\t\t\tmy_free(mac->x[MACRO_PROCESSSTARTTIME]);\n\t\t\tasprintf(&mac->x[MACRO_PROCESSSTARTTIME], \"%llu\", (unsigned long long)program_start);\n\t\t\t\n\t\t\t/* enter daemon mode (unless we're restarting...) */\n\t\t\tif(daemon_mode == TRUE && sigrestart == FALSE) {\n\n\t\t\t\tresult = daemon_init();\n\n\t\t\t\t/* we had an error daemonizing, so bail... */\n\t\t\t\tif(result == ERROR) {\n\t\t\t\t\tlogit(NSLOG_PROCESS_INFO | NSLOG_RUNTIME_ERROR, TRUE, \"Bailing out due to failure to daemonize. (PID=%d)\", (int)getpid());\n\t\t\t\t\tcleanup();\n\t\t\t\t\texit(EXIT_FAILURE);\n\t\t\t\t\t}\n\n\t\t\t\t/* get new PID */\n\t\t\t\tnagios_pid = (int)getpid();\n\t\t\t\t}\n\n\t\t\t/* drop privileges */\n\t\t\tif(drop_privileges(nagios_user, nagios_group) == ERROR) {\n\n\t\t\t\tlogit(NSLOG_PROCESS_INFO | NSLOG_RUNTIME_ERROR | NSLOG_CONFIG_ERROR, TRUE, \"Failed to drop privileges.  Aborting.\");\n\n\t\t\t\tcleanup();\n\t\t\t\texit(ERROR);\n\t\t\t\t}\n\n\t\t\tif (test_path_access(nagios_binary_path, X_OK)) {\n\t\t\t\tlogit(NSLOG_RUNTIME_ERROR, TRUE, \"Error: failed to access() %s: %s\\n\", nagios_binary_path, strerror(errno));\n\t\t\t\tlogit(NSLOG_RUNTIME_ERROR, TRUE, \"Error: Spawning workers will be impossible. Aborting.\\n\");\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t\t}\n\n\t\t\tif (test_configured_paths() == ERROR) {\n\t\t\t\t/* error has already been logged */\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t\t}\n\n\t\t\t/* this must be logged after we read config data, as user may have changed location of main log file */\n\t\t\tlogit(NSLOG_PROCESS_INFO, TRUE, \"Nagios %s starting... (PID=%d)\\n\", PROGRAM_VERSION, (int)getpid());\n\n\t\t\t/* log the local time - may be different than clock time due to timezone offset */\n\t\t\tnow = time(NULL);\n\t\t\ttm = localtime_r(&now, &tm_s);\n\t\t\tstrftime(datestring, sizeof(datestring), \"%a %b %d %H:%M:%S %Z %Y\", tm);\n\t\t\tlogit(NSLOG_PROCESS_INFO, TRUE, \"Local time is %s\", datestring);\n\n\t\t\t/* write log version/info */\n\t\t\twrite_log_file_info(NULL);\n\n\t\t\t/* open debug log now that we're the right user */\n\t\t\topen_debug_log();\n\n#ifdef USE_EVENT_BROKER\n\t\t\t/* initialize modules */\n\t\t\tneb_init_modules();\n\t\t\tneb_init_callback_list();\n#endif\n\t\t\ttiming_point(\"NEB module API initialized\\n\");\n\n\t\t\t/* handle signals (interrupts) before we do any socket I/O */\n\t\t\tsetup_sighandler();\n\n\t\t\t/*\n\t\t\t * Initialize query handler and event subscription service.\n\t\t\t * This must be done before modules are initialized, so\n\t\t\t * the modules can use our in-core stuff properly\n\t\t\t */\n\t\t\tif (qh_init(qh_socket_path ? qh_socket_path : DEFAULT_QUERY_SOCKET) != OK) {\n\t\t\t\tlogit(NSLOG_RUNTIME_ERROR, TRUE, \"Error: Failed to initialize query handler. Aborting\\n\");\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\t\t\ttiming_point(\"Query handler initialized\\n\");\n\t\t\tnerd_init();\n\t\t\ttiming_point(\"NERD initialized\\n\");\n\n\t\t\t/* initialize check workers */\n\t\t\tif(init_workers(num_check_workers) < 0) {\n\t\t\t\tlogit(NSLOG_RUNTIME_ERROR, TRUE, \"Failed to spawn workers. Aborting\\n\");\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\t\t\ttiming_point(\"%u workers spawned\\n\", wproc_num_workers_spawned);\n\t\t\ti = 0;\n\t\t\twhile (i < 50 && wproc_num_workers_online < wproc_num_workers_spawned) {\n\t\t\t\tiobroker_poll(nagios_iobs, 50);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ttiming_point(\"%u workers connected\\n\", wproc_num_workers_online);\n\n\t\t\t/* now that workers have arrived we can set the defaults */\n\t\t\tset_loadctl_defaults();\n\n#ifdef USE_EVENT_BROKER\n\t\t\t/* load modules */\n\t\t\tif (neb_load_all_modules() != OK) {\n\t\t\t\tlogit(NSLOG_CONFIG_ERROR, ERROR, \"Error: Module loading failed. Aborting.\\n\");\n\t\t\t\t/* if we're dumping core, we must remove all dl-files */\n\t\t\t\tif (daemon_dumps_core)\n\t\t\t\t\tneb_unload_all_modules(NEBMODULE_FORCE_UNLOAD, NEBMODULE_NEB_SHUTDOWN);\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t\t}\n\t\t\ttiming_point(\"Modules loaded\\n\");\n\n\t\t\t/* send program data to broker */\n\t\t\tbroker_program_state(NEBTYPE_PROCESS_PRELAUNCH, NEBFLAG_NONE, NEBATTR_NONE, NULL);\n\t\t\ttiming_point(\"First callback made\\n\");\n#endif\n\n\t\t\t/* read in all object config data */\n\t\t\tif(result == OK)\n\t\t\t\tresult = read_all_object_data(config_file);\n\n\t\t\t/* there was a problem reading the config files */\n\t\t\tif(result != OK)\n\t\t\t\tlogit(NSLOG_PROCESS_INFO | NSLOG_RUNTIME_ERROR | NSLOG_CONFIG_ERROR, TRUE, \"Bailing out due to one or more errors encountered in the configuration files. Run Nagios from the command line with the -v option to verify your config before restarting. (PID=%d)\", (int)getpid());\n\n\t\t\telse {\n\n\t\t\t\t/* run the pre-flight check to make sure everything looks okay*/\n\t\t\t\tif((result = pre_flight_check()) != OK)\n\t\t\t\t\tlogit(NSLOG_PROCESS_INFO | NSLOG_RUNTIME_ERROR | NSLOG_VERIFICATION_ERROR, TRUE, \"Bailing out due to errors encountered while running the pre-flight check.  Run Nagios from the command line with the -v option to verify your config before restarting. (PID=%d)\\n\", (int)getpid());\n\t\t\t\t}\n\n\t\t\t/* an error occurred that prevented us from (re)starting */\n\t\t\tif(result != OK) {\n\n\t\t\t\t/* if we were restarting, we need to cleanup from the previous run */\n\t\t\t\tif(sigrestart == TRUE) {\n\n\t\t\t\t\t/* clean up the status data */\n\t\t\t\t\tcleanup_status_data(TRUE);\n\t\t\t\t\t}\n\n#ifdef USE_EVENT_BROKER\n\t\t\t\t/* send program data to broker */\n\t\t\t\tbroker_program_state(NEBTYPE_PROCESS_SHUTDOWN, NEBFLAG_PROCESS_INITIATED, NEBATTR_SHUTDOWN_ABNORMAL, NULL);\n#endif\n\t\t\t\tcleanup();\n\t\t\t\texit(ERROR);\n\t\t\t\t}\n\n\t\t\ttiming_point(\"Object configuration parsed and understood\\n\");\n\n\t\t\t/* write the objects.cache file */\n\t\t\tfcache_objects(object_cache_file);\n\t\t\ttiming_point(\"Objects cached\\n\");\n\n\t\t\tinit_event_queue();\n\t\t\ttiming_point(\"Event queue initialized\\n\");\n\n\n#ifdef USE_EVENT_BROKER\n\t\t\t/* send program data to broker */\n\t\t\tbroker_program_state(NEBTYPE_PROCESS_START, NEBFLAG_NONE, NEBATTR_NONE, NULL);\n#endif\n\n\t\t\t/* initialize status data unless we're starting */\n\t\t\tif(sigrestart == FALSE) {\n\t\t\t\tinitialize_status_data(config_file);\n\t\t\t\ttiming_point(\"Status data initialized\\n\");\n\t\t\t\t}\n\n\t\t\t/* initialize scheduled downtime data */\n\t\t\tinitialize_downtime_data();\n\t\t\ttiming_point(\"Downtime data initialized\\n\");\n\n\t\t\t/* read initial service and host state information  */\n\t\t\tinitialize_retention_data(config_file);\n\t\t\ttiming_point(\"Retention data initialized\\n\");\n\t\t\tread_initial_state_information();\n\t\t\ttiming_point(\"Initial state information read\\n\");\n\n\t\t\t/* initialize comment data */\n\t\t\tinitialize_comment_data();\n\t\t\ttiming_point(\"Comment data initialized\\n\");\n\n\t\t\t/* initialize performance data */\n\t\t\tinitialize_performance_data(config_file);\n\t\t\ttiming_point(\"Performance data initialized\\n\");\n\n\t\t\t/* initialize the event timing loop */\n\t\t\tinit_timing_loop();\n\t\t\ttiming_point(\"Event timing loop initialized\\n\");\n\n\t\t\t/* initialize check statistics */\n\t\t\tinit_check_stats();\n\t\t\ttiming_point(\"check stats initialized\\n\");\n\n\t\t\t/* check for updates */\n\t\t\tcheck_for_nagios_updates(FALSE, TRUE);\n\t\t\ttiming_point(\"Update check concluded\\n\");\n\n\t\t\t/* update all status data (with retained information) */\n\t\t\tupdate_all_status_data();\n\t\t\ttiming_point(\"Status data updated\\n\");\n\n\t\t\t/* log initial host and service state */\n\t\t\tlog_host_states(INITIAL_STATES, NULL);\n\t\t\tlog_service_states(INITIAL_STATES, NULL);\n\t\t\ttiming_point(\"Initial states logged\\n\");\n\n\t\t\t/* reset the restart flag */\n\t\t\tsigrestart = FALSE;\n\n\t\t\t/* fire up command file worker */\n\t\t\tlaunch_command_file_worker();\n\t\t\ttiming_point(\"Command file worker launched\\n\");\n\n#ifdef USE_EVENT_BROKER\n\t\t\t/* send program data to broker */\n\t\t\tbroker_program_state(NEBTYPE_PROCESS_EVENTLOOPSTART, NEBFLAG_NONE, NEBATTR_NONE, NULL);\n#endif\n\n\t\t\t/* get event start time and save as macro */\n\t\t\tevent_start = time(NULL);\n\t\t\tmy_free(mac->x[MACRO_EVENTSTARTTIME]);\n\t\t\tasprintf(&mac->x[MACRO_EVENTSTARTTIME], \"%llu\", (unsigned long long)event_start);\n\n\t\t\ttiming_point(\"Entering event execution loop\\n\");\n\t\t\t/***** start monitoring all services *****/\n\t\t\t/* (doesn't return until a restart or shutdown signal is encountered) */\n\t\t\tevent_execution_loop();\n\n\t\t\t/*\n\t\t\t * immediately deinitialize the query handler so it\n\t\t\t * can remove modules that have stashed data with it\n\t\t\t */\n\t\t\tqh_deinit(qh_socket_path ? qh_socket_path : DEFAULT_QUERY_SOCKET);\n\n\t\t\t/* 03/01/2007 EG Moved from sighandler() to prevent FUTEX locking problems under NPTL */\n\t\t\t/* 03/21/2007 EG SIGSEGV signals are still logged in sighandler() so we don't loose them */\n\t\t\t/* did we catch a signal? */\n\t\t\tif(caught_signal == TRUE) {\n\n\t\t\t\tif(sig_id == SIGHUP)\n\t\t\t\t\tlogit(NSLOG_PROCESS_INFO, TRUE, \"Caught SIGHUP, restarting...\\n\");\n\n\t\t\t\t}\n\n#ifdef USE_EVENT_BROKER\n\t\t\t/* send program data to broker */\n\t\t\tbroker_program_state(NEBTYPE_PROCESS_EVENTLOOPEND, NEBFLAG_NONE, NEBATTR_NONE, NULL);\n\t\t\tif(sigshutdown == TRUE)\n\t\t\t\tbroker_program_state(NEBTYPE_PROCESS_SHUTDOWN, NEBFLAG_USER_INITIATED, NEBATTR_SHUTDOWN_NORMAL, NULL);\n\t\t\telse if(sigrestart == TRUE)\n\t\t\t\tbroker_program_state(NEBTYPE_PROCESS_RESTART, NEBFLAG_USER_INITIATED, NEBATTR_RESTART_NORMAL, NULL);\n#endif\n\n\t\t\t/* save service and host state information */\n\t\t\tsave_state_information(FALSE);\n\t\t\tcleanup_retention_data();\n\n\t\t\t/* clean up performance data */\n\t\t\tcleanup_performance_data();\n\n\t\t\t/* clean up the scheduled downtime data */\n\t\t\tcleanup_downtime_data();\n\n\t\t\t/* clean up the status data unless we're restarting */\n\t\t\tif(sigrestart == FALSE) {\n\t\t\t\tcleanup_status_data(TRUE);\n\t\t\t\t}\n\n\t\t\tfree_worker_memory(WPROC_FORCE);\n\t\t\t/* shutdown stuff... */\n\t\t\tif(sigshutdown == TRUE) {\n\t\t\t\tiobroker_destroy(nagios_iobs, IOBROKER_CLOSE_SOCKETS);\n\t\t\t\tnagios_iobs = NULL;\n\n\t\t\t\t/* log a shutdown message */\n\t\t\t\tlogit(NSLOG_PROCESS_INFO, TRUE, \"Successfully shutdown... (PID=%d)\\n\", (int)getpid());\n\t\t\t\t}\n\n\t\t\t/* clean up after ourselves */\n\t\t\tcleanup();\n\n\t\t\t/* close debug log */\n\t\t\tclose_debug_log();\n\n\t\t\t}\n\t\twhile(sigrestart == TRUE && sigshutdown == FALSE);\n\n\t\tif(daemon_mode == TRUE)\n\t\t\tunlink(lock_file);\n\n\t\t/* free misc memory */\n\t\tmy_free(lock_file);\n\t\tmy_free(config_file);\n\t\tmy_free(config_file_dir);\n\t\tmy_free(nagios_binary_path);\n\t\t}\n\n\treturn OK;\n\t}\n", "dnl Process this -*-m4-*- file with autoconf to produce a configure script.\n\ndnl Disable caching\ndefine([AC_CACHE_LOAD],)\ndefine([AC_CACHE_SAVE],)\n\nAC_INIT(base/nagios.c)\nAC_CONFIG_HEADER(include/config.h lib/snprintf.h lib/iobroker.h)\nAC_PREFIX_DEFAULT(/usr/local/nagios)\n\nPKG_NAME=nagios\n\nPKG_VERSION=\"4.3.2\"\nPKG_HOME_URL=\"https://www.nagios.org/\"\nPKG_REL_DATE=\"2017-05-09\"\n\ndnl Figure out how to invoke \"install\" and what install options to use.\nAC_PROG_INSTALL\nAC_SUBST(INSTALL)\n\ndnl What OS are we running?\nAC_CANONICAL_HOST\n\nAC_CONFIG_FILES([html/index.php])\n\ndnl Checks for programs.\nAC_PROG_CC\nAC_PROG_MAKE_SET\nAC_PROG_LN_S\nAC_PATH_PROG([STRIP],[strip],[true])\n\ndnl Checks for header files.\nAC_HEADER_STDC\nAC_HEADER_TIME\nAC_HEADER_SYS_WAIT\nAC_CHECK_HEADERS(arpa/inet.h ctype.h dirent.h errno.h fcntl.h getopt.h grp.h)\nAC_CHECK_HEADERS(libgen.h limits.h math.h netdb.h netinet/in.h pwd.h regex.h)\nAC_CHECK_HEADERS(signal.h socket.h stdarg.h string.h strings.h sys/loadavg.h)\nAC_CHECK_HEADERS(sys/mman.h sys/types.h sys/time.h sys/resource.h sys/wait.h)\nAC_CHECK_HEADERS(sys/socket.h sys/stat.h sys/timeb.h sys/un.h sys/ipc.h)\nAC_CHECK_HEADERS(sys/msg.h sys/poll.h syslog.h uio.h unistd.h locale.h wchar.h)\nAC_CHECK_HEADERS(sys/prctl.h)\n\ndnl Checks for typedefs, structures, and compiler characteristics.\nAC_C_CONST\nAC_STRUCT_TM\nAC_STRUCT_TIMEZONE\nAC_TYPE_MODE_T\nAC_TYPE_PID_T\nAC_TYPE_SIZE_T\nAC_TYPE_SIGNAL\nAC_TYPE_GETGROUPS\n\n\ndnl Check for asprintf() and friends...\nAC_CACHE_CHECK([for va_copy],ac_cv_HAVE_VA_COPY,[\nAC_TRY_LINK([#include <stdarg.h>\nva_list ap1,ap2;], [va_copy(ap1,ap2);],\nac_cv_HAVE_VA_COPY=yes,\nac_cv_HAVE_VA_COPY=no)])\nif test x\"$ac_cv_HAVE_VA_COPY\" = x\"yes\"; then\n    AC_DEFINE(HAVE_VA_COPY,1,[Whether va_copy() is available])\nelse    \n    AC_CACHE_CHECK([for __va_copy],ac_cv_HAVE___VA_COPY,[\n    AC_TRY_LINK([#include <stdarg.h>\n    va_list ap1,ap2;], [__va_copy(ap1,ap2);],\n    ac_cv_HAVE___VA_COPY=yes,\n    ac_cv_HAVE___VA_COPY=no)])\n    if test x\"$ac_cv_HAVE___VA_COPY\" = x\"yes\"; then\n        AC_DEFINE(HAVE___VA_COPY,1,[Whether __va_copy() is available])\n    fi\nfi\n\nAC_CHECK_FUNC(vsnprintf,,SNPRINTF_O=../lib/snprintf.o)\nAC_CHECK_FUNC(snprintf,,SNPRINTF_O=../lib/snprintf.o)\nAC_CHECK_FUNC(asprintf,,SNPRINTF_O=../lib/snprintf.o)\nAC_CHECK_FUNC(vasprintf,,SNPRINTF_O=../lib/snprintf.o)\nAC_CHECK_FUNCS(sigaction)\n\nAC_CACHE_CHECK([for C99 vsnprintf],ac_cv_HAVE_C99_VSNPRINTF,[\nAC_TRY_RUN([\n#include <sys/types.h>\n#include <stdarg.h>\nvoid foo(const char *format, ...) { \n       va_list ap;\n       int len;\n       char buf[5];\n\n       va_start(ap, format);\n       len = vsnprintf(buf, 0, format, ap);\n       va_end(ap);\n       if (len != 5) exit(1);\n\n       va_start(ap, format);\n       len = vsnprintf(0, 0, format, ap);\n       va_end(ap);\n       if (len != 5) exit(1);\n\n       if (snprintf(buf, 3, \"hello\") != 5 || strcmp(buf, \"he\") != 0) exit(1);\n\n       exit(0);\n}\nmain() { foo(\"hello\"); }\n],\nac_cv_HAVE_C99_VSNPRINTF=yes,ac_cv_HAVE_C99_VSNPRINTF=no,ac_cv_HAVE_C99_VSNPRINTF=cross)])\nif test x\"$ac_cv_HAVE_C99_VSNPRINTF\" = x\"yes\"; then\n    AC_DEFINE(HAVE_C99_VSNPRINTF,1,[Define if system has C99 compatible vsnprintf])\nfi\n\ndnl AC_CHECK_FUNC(snprintf,AC_DEFINE(HAVE_SNPRINTF),SNPRINTF_O=../common/snprintf.o)\nAC_SUBST(SNPRINTF_O)\n\n\ndnl Checks for library functions.\nAC_SEARCH_LIBS([getservbyname],[nsl],\n\t[if test \"$ac_cv_search_getservbyname\" != \"none required\"; then\n\t\tSOCKETLIBS=\"$SOCKETLIBS -lnsl\"\n\tfi])\nAC_SEARCH_LIBS([connect],[socket],\n\t[if test \"$ac_cv_search_connect\" != \"none required\"; then\n\t\tSOCKETLIBS=\"$SOCKETLIBS -lsocket\"\n\tfi])\nAC_SUBST(SOCKETLIBS)\nAC_CHECK_FUNCS(initgroups setenv strdup strstr strtoul unsetenv)\n\nAC_MSG_CHECKING(for type of socket size)\nAC_TRY_COMPILE([#include <stdlib.h>\n#include <sys/types.h>\n#include <sys/socket.h>\n],\n[int a = send(1, (const void *) 0, (size_t) 0, (int) 0);],\n[AC_DEFINE(SOCKET_SIZE_TYPE, size_t, [typedef for socket size]) AC_MSG_RESULT(size_t)],\n[AC_DEFINE(SOCKET_SIZE_TYPE, int, [typedef for socket size]) AC_MSG_RESULT(int)])\n\n\ndnl Solaris needs rt or posix4 libraries for nanosleep()\nAC_SEARCH_LIBS(nanosleep,[rt posix4],,[\n\techo \"Error: nanosleep() needed for timing operations.\"\n\texit 1\n\t])\n\ncase $host_os in\n*bsd*|darwin*)\n\troot_grp=wheel\n\t;;\n*)\n\troot_grp=root\n\t;;\nesac\n\nAC_ARG_WITH(root_group,AC_HELP_STRING([--with-root-group=<grp>],[sets group name for installing init]),root_grp=$withval)\nAC_SUBST(root_grp)\nINIT_OPTS=\"-o root -g $root_grp\"\nAC_SUBST(INIT_OPTS)\n\nAC_ARG_WITH(nagios_user,AC_HELP_STRING([--with-nagios-user=<user>],[sets user name to run nagios]),nagios_user=$withval,nagios_user=nagios)\nAC_ARG_WITH(nagios_group,AC_HELP_STRING([--with-nagios-group=<grp>],[sets group name to run nagios]),nagios_grp=$withval,nagios_grp=nagios)\nAC_SUBST(nagios_user)\nAC_SUBST(nagios_grp)\nAC_DEFINE_UNQUOTED(DEFAULT_NAGIOS_USER,\"$nagios_user\",[user name to run nagios])\nAC_DEFINE_UNQUOTED(DEFAULT_NAGIOS_GROUP,\"$nagios_grp\",[group name to run nagios])\nINSTALL_OPTS=\"-o $nagios_user -g $nagios_grp\"\nAC_SUBST(INSTALL_OPTS)\n\nAC_ARG_WITH(command_user,AC_HELP_STRING([--with-command-user=<user>],[sets user name for command access]),command_user=$withval,command_user=$nagios_user)\nAC_ARG_WITH(command_group,AC_HELP_STRING([--with-command-group=<grp>],[sets group name for command access]),command_grp=$withval,command_grp=$nagios_grp)\nAC_SUBST(command_user)\nAC_SUBST(command_grp)\nCOMMAND_OPTS=\"-o $command_user -g $command_grp\"\nAC_SUBST(COMMAND_OPTS)\n\ndnl Check for location of mail program\nMAIL_PROG=no\nAC_ARG_WITH(mail,\n\tAC_HELP_STRING([--with-mail=<path_to_mail>],\n\t\t[sets path to equivalent program to mail]),\n\tMAIL_PROG=$withval,\n\tMAIL_PROG=no\n) \nif test x$MAIL_PROG = xno; then\n\tAC_PATH_PROG(MAIL_PROG,mail) \nfi \ndnl Fix for systems that don't (yet) have mail/mailx installed...\nif test x$MAIL_PROG = x; then\n\tMAIL_PROG=\"/bin/mail\"\nfi\nAC_SUBST(MAIL_PROG)\n\ndnl Check for location of Apache conf.d directory\nHTTP_CONF=no\nAC_ARG_WITH(httpd_conf,\n\tAC_HELP_STRING([--with-httpd-conf=<path_to_conf>],\n\t\t[sets path to Apache conf.d directory]),\n\tHTTPD_CONF=$withval,\n\tHTTPD_CONF=no\n) \nLN_HTTPD_SITES_ENABLED=0\nif test x$HTTPD_CONF = xno; then\n\tif test -d /etc/httpd/conf.d; then\n\t\tHTTPD_CONF=\"/etc/httpd/conf.d\"\n\telif test -d /etc/apache2/conf.d; then\n\t\tHTTPD_CONF=\"/etc/apache2/conf.d\"\n\telif test -d /etc/apache2/sites-available; then\n\t\tHTTPD_CONF=\"/etc/apache2/sites-available\"\n\t\tif test -d /etc/apache2/sites-enabled; then\n\t\t\tLN_HTTPD_SITES_ENABLED=1\n\t\tfi\n\telif test -d /etc/apache2/sites-enabled; then\n\t\tHTTPD_CONF=\"/etc/apache2/sites-enabled\"\n\telif test -d /etc/apache/conf.d; then\n\t\tHTTPD_CONF=\"/etc/apache/conf.d\"\n\telse\n\t\tHTTPD_CONF=\"/etc/httpd/conf.d\"\n\tfi\nfi \nAC_SUBST(HTTPD_CONF)\nAC_SUBST(LN_HTTPD_SITES_ENABLED)\n\ndnl Location of check result path\nCHECKRESULTDIR=no\nAC_ARG_WITH(checkresult-dir,\n\tAC_HELP_STRING([--with-checkresult-dir=<path>],\n\t\t[sets path to check results spool directory]),\n\tCHECKRESULTDIR=$withval,\n\tCHECKRESULTDIR=no\n) \nif test x$CHECKRESULTDIR = xno; then\n\tCHECKRESULTDIR=\"$localstatedir/spool/checkresults\"\nfi \nAC_SUBST(CHECKRESULTDIR)\n\ndnl Location of check result path\nTMPDIR=no\nAC_ARG_WITH(temp-dir,\n\tAC_HELP_STRING([--with-temp-dir=<path>],\n\t\t[sets path to temp directory]),\n\tTMPDIR=$withval,\n\tTMPDIR=no\n) \nif test x$TMPDIR = xno; then\n\tTMPDIR=\"/tmp\"\nfi \nAC_SUBST(TMPDIR)\n\ndnl Check for location of init scripts\ninit_dir=/etc/rc.d/init.d\nif test -d /etc/rc.d/init.d; then\n\tinit_dir=\"/etc/rc.d/init.d\"\nelif test -d /usr/local/etc/rc.d; then\n\tinit_dir=\"/usr/local/etc/rc.d\"\nelif test -d /etc/rc.d; then\n\tinit_dir=\"/etc/rc.d\"\nelif test -d /etc/init.d; then\n\tinit_dir=\"/etc/init.d\"\nelif test -d /sbin/init.d; then\n\tinit_dir=\"/sbin/init.d\"\nfi\n\ndnl User can override init script location\nAC_ARG_WITH(init_dir,\n\tAC_HELP_STRING([--with-init-dir=<path>],\n\t\t[sets directory to place init script into]),\n\tinit_dir=$withval\n)\nAC_SUBST(init_dir)\n\ndnl User can override lock file location\nAC_ARG_WITH(lockfile,\n\tAC_HELP_STRING([--with-lockfile=<path>],\n\t\t[sets path and file name for lock file]),\n\tlockfile=$withval,\n\tlockfile=$localstatedir/nagios.lock\n)\nAC_SUBST(lockfile)\n\ndnl Determine the library to be used by the iobroker\n\ndnl epoll_*() is linux specific and was added to glibc 2.3.2, so we\ndnl check for 2.4 and use epoll() if we're on that version or later.\n\ncase $host_os in\nlinux*)\n\tAC_MSG_CHECKING(for glibc at least version 2.4)\n\tAC_TRY_CPP(\n\t\t[\n#include <stdio.h>\n#if defined(__GLIBC__) && defined(__linux)\n#include <features.h>\n# if !__GLIBC_PREREQ(2, 4)\n#  error GLIBC too old\n# endif\n#else\n# error Not using GLIBC\n#endif\n\t\t],\n\t\t[GLIBC_NEWER_2_4=1; AC_MSG_RESULT(yes)],\n\t\t[GLIBC_NEWER_2_4=0; AC_MSG_RESULT(no)]\n\t)\n\tif test $GLIBC_NEWER_2_4 -eq 1; then\n\t\tAC_CHECK_HEADER([sys/epoll.h])\n\tfi\n\t;;\nesac\nAC_CHECK_HEADER([sys/select.h])\n\nAC_ARG_WITH(iobroker,\n\tAC_HELP_STRING([--with-iobroker=<method>],\n\t\t[specify the method to use with iobroker: epoll, poll, or select]),\n\tIOBROKER_METHOD=$withval,\n\tIOBROKER_METHOD=\"none\"\n)\n\ncase $IOBROKER_METHOD in\nepoll*)\n\tif test $GLIBC_NEWER_2_4 -eq 1 -a x$ac_cv_header_sys_epoll_h = xyes ; then\n\t\tAC_DEFINE([IOBROKER_USES_EPOLL])\n\telse\n\t\techo \"\\\"epoll\\\" is not available as an iobroker method.\"\n\t\techo \"Please use one of the other options.\"\n\t\texit 1\n\tfi\n\t;;\npoll*)\n\tif test x$ac_cv_header_sys_poll_h = xyes -o x$ac_cv_header_poll_h = xyes ; then\n\t\tAC_DEFINE([IOBROKER_USES_POLL])\n\telse\n\t\techo \"\\\"poll\\\" is not available as an iobroker method.\"\n\t\techo \"Please use one of the other options.\"\n\t\texit 1\n\tfi\n\t;;\nselect*)\n\tif test x$ac_cv_header_sys_select_h = xyes ; then\n\t\tAC_DEFINE([IOBROKER_USES_SELECT])\n\telse\n\t\techo \"\\\"select\\\" is not available as an iobroker method.\"\n\t\techo \"Please use one of the other options.\"\n\t\texit 1\n\tfi\n\t;;\nnone*)\n\tif test $GLIBC_NEWER_2_4 -eq 1 -a x$ac_cv_header_sys_epoll_h = xyes ; then\n\t\tAC_DEFINE([IOBROKER_USES_EPOLL])\n\t\tIOBROKER_METHOD=\"epoll\"\n\telif test x$ac_cv_header_sys_poll_h = xyes -o x$ac_cv_header_poll_h = xyes ; then\n\t\tAC_DEFINE([IOBROKER_USES_POLL])\n\t\tIOBROKER_METHOD=\"poll\"\n\telif test x$ac_cv_header_sys_select_h = xyes ; then\n\t\tAC_DEFINE([IOBROKER_USES_SELECT])\n\t\tIOBROKER_METHOD=\"select\"\n\telse\n\t\techo \"There are no available options for iobroker polling\"\n\t\texit 1\n\tfi\n\t;;\n*)\n\t\techo \"\\\"$IOBROKER_METHOD\\\" is not a valid method for --with-iobroker\"\n\t\texit 1\n\t;;\nesac\n\ndnl Optional GD library and include paths\nAC_ARG_WITH(gd-lib,\n\tAC_HELP_STRING([--with-gd-lib=DIR],[sets location of the gd library]),\n\t[\n\t\tLDFLAGS=\"${LDFLAGS} -L${withval}\"\n\t\tLD_RUN_PATH=\"${withval}${LD_RUN_PATH:+:}${LD_RUN_PATH}\"\n\t]\n)\nAC_ARG_WITH(gd-inc,\n\tAC_HELP_STRING([--with-gd-inc=DIR],[sets location of the gd include files]),\n\t[CFLAGS=\"${CFLAGS} -I${withval}\"]\n)\n\n\nTRYGD=yep\n\ndnl 'corewindow' is now disabled. Allow it to be enabled if someone wants it\nCOREWINDOW=no\nAC_ARG_ENABLE(corewindow,\n\tAC_HELP_STRING([--enable-corewindow],\n\t\t[enables the 'corewindow' URL argument]),\n\tCOREWINDOW=yes\n)\nAC_SUBST(COREWINDOW)\n\ndnl statusmap CGI enabled by default, unless users chooses not to use it\nTRYSTATUSMAP=yep\nAC_ARG_ENABLE(statusmap,\n\tAC_HELP_STRING([--disable-statusmap],\n\t\t[disables compilation of statusmap CGI]),\n\tTRYSTATUSMAP=nope\n)\n\n\ndnl statuswrl CGI enabled by default, unless users chooses not to use it\nTRYSTATUSWRL=yep\nAC_ARG_ENABLE(statuswrl,\n\tAC_HELP_STRING([--disable-statuswrl],\n\t\t[disables compilation of statuswrl (VRML) CGI]),\n\tTRYSTATUSWRL=nope\n)\n\nif test x$TRYSTATUSWRL = xyep; then\n\tAC_DEFINE_UNQUOTED(USE_STATUSWRL,,[statuswrl CGI enabled by default, unless users chooses not to use it])\n\tCGIEXTRAS=\"$CGIEXTRAS statuswrl.cgi\"\nfi\n\n\ndnl JMD_CHECK_LIB_ORDER(LIBRARY, FUNCTION, ORDER [, ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND\ndnl              [, OTHER-LIBRARIES]]])\n\tAC_DEFUN([JMD_CHECK_LIB_ORDER],\n\t[AC_MSG_CHECKING([for $2 in -l$1 (order $3)])\n\tdnl Use a cache variable name containing both the library and function name,\n\tdnl because the test really is for library $1 defining function $2, not\n\tdnl just for library $1.  Separate tests with the same $1 and different $2s\n\tdnl may have different results.\n\tac_lib_var=`echo $1['_']$2['_']$3 | sed 'y%./+-%__p_%'`\n\tAC_CACHE_VAL(ac_cv_lib_$ac_lib_var,\n\t[ac_save_LIBS=\"$LIBS\"\n\tLIBS=\"-l$1 $6 $LIBS\"\n\tAC_TRY_LINK(dnl\n\tifelse([AC_LANG], [FORTRAN77], ,\n\tifelse([$2], [main], , dnl Avoid conflicting decl of main.\n[/* Override any gcc2 internal prototype to avoid an error.  */\n]ifelse([AC_LANG], CPLUSPLUS, [#ifdef __cplusplus\nextern \"C\"\n#endif\n])dnl\n[/* We use char because int might match the return type of a gcc2\n    builtin and then its argument prototype would still apply.  */\nchar $2();\n])),\n\t            [$2()],\n\t            eval \"ac_cv_lib_$ac_lib_var=yes\",\n\t            eval \"ac_cv_lib_$ac_lib_var=no\")\n\tLIBS=\"$ac_save_LIBS\"\n\t])dnl\n\tif eval \"test \\\"`echo '$ac_cv_lib_'$ac_lib_var`\\\" = yes\"; then\n\t  AC_MSG_RESULT(yes)\n\t  ifelse([$4], ,\n\t[changequote(, )dnl\n\t  ac_tr_lib=HAVE_LIB`echo $1 | sed -e 's/[^a-zA-Z0-9_]/_/g' \\\n\t    -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'`\n\tchangequote([, ])dnl\n\t  AC_DEFINE_UNQUOTED($ac_tr_lib)\n\t  LIBS=\"-l$1 $LIBS\"\n\t], [$4])\n\telse\n\t  AC_MSG_RESULT(no)\n\tifelse([$5], , , [$5\n\t])dnl\n\tfi\n\t])\n\n\n\ndnl Should we try and detect the GD libs?\nif test x$TRYGD = xyep; then\n\n\tdnl libiconv is required on some systems - tack it on if found\n\tAC_CHECK_LIB(iconv,main,ICONV=-liconv,)\n\n\tdnl See if the GD lib is available and supports PNG images...\n\n\tdnl GD > 1.8.3 requires the TrueType library to be present as well, so test for that first...\n\tJMD_CHECK_LIB_ORDER(gd,gdImagePng,1,[\n\t\t\tGDLIBFOUND=yep\n\t\t\tGDLIBS=\"-lgd -lttf -lpng -ljpeg -lz -lm\"\n\t\t\t],:,[-lttf -lpng -ljpeg -lz -lm])\n \n\tdnl GD > 1.8.1 requires the jpeg library to be present as well, so test for that...\n\tif test x$GDLIBFOUND = x; then\n\t\tJMD_CHECK_LIB_ORDER(gd,gdImagePng,2,[\n\t\t\tGDLIBFOUND=yep\n\t\t\tGDLIBS=\"-lgd $ICONV -lpng -ljpeg -lz -lm\"\n        \t\t],:,[$ICONV -lpng -ljpeg -lz -lm])\n\tfi\n\n\tdnl If we failed the first test, try without jpeg library\n\tif test x$GDLIBFOUND = x; then\n\t\tJMD_CHECK_LIB_ORDER(gd,gdImagePng,3,[\n\t\t\tGDLIBFOUND=yep\n\t\t\tGDLIBS=\"-lgd $ICONV -lz -lm -lpng\"\n\t\t        ],:,[$ICONV -lz -lm -lpng])\n\tfi\n\n\tdnl We failed again, so try a different library ordering (without jpeg libs)\n\tif test x$GDLIBFOUND = x; then\n\t\tJMD_CHECK_LIB_ORDER(gd,gdImagePng,4,[\n\t\t\tGDLIBFOUND=yep\n\t\t\tGDLIBS=\"-lgd $ICONV -lpng -lz -lm\"\n\t        \t],:,[$ICONV -lpng -lz -lm])\n\tfi\n\n\tdnl Did we find the necessary GD libraries?\n\tif test x$GDLIBFOUND = x; then\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"*** GD, PNG, and/or JPEG libraries could not be located... *********\"\n\t\techo \"\"\n\t\techo \"Boutell's GD library is required to compile the statusmap, trends\"\n\t\techo \"and histogram CGIs.  Get it from http://www.boutell.com/gd/, compile\"\n\t\techo \"it, and use the --with-gd-lib and --with-gd-inc arguments to specify\"\n\t\techo \"the locations of the GD library and include files.\"\n\t\techo \"\"\n\t\techo \"NOTE: In addition to the gd-devel library, you'll also need to make\"\n\t\techo \"      sure you have the png-devel and jpeg-devel libraries installed\"\n\t\techo \"      on your system.\"\n\t\techo \"\"\n\t\techo \"NOTE: After you install the necessary libraries on your system:\"\n\t\techo \"      1. Make sure /etc/ld.so.conf has an entry for the directory in\"\n\t\techo \"         which the GD, PNG, and JPEG libraries are installed.\"\n\t\techo \"      2. Run 'ldconfig' to update the run-time linker options.\"\n\t\techo \"      3. Run 'make clean' in the Nagios distribution to clean out\"\n\t\techo \"         any old references to your previous compile.\"\n\t\techo \"      4. Rerun the configure script.\"\n\t\techo \"\"\n\t\techo \"NOTE: If you can't get the configure script to recognize the GD libs\"\n\t\techo \"      on your system, get over it and move on to other things.  The\"\n\t\techo \"      CGIs that use the GD libs are just a small part of the entire\"\n\t\techo \"      Nagios package.  Get everything else working first and then\"\n\t\techo \"      revisit the problem.  Make sure to check the nagios-users\"\n\t\techo \"      mailing list archives for possible solutions to GD library\"\n\t\techo \"      problems when you resume your troubleshooting.\"\n\t\techo \"\"\n\t\techo \"********************************************************************\"\n\t\techo \"\"\n\t\techo \"\"\n\n\tdnl We found the GD lib!\n\telse\n\t\techo \"GD library was found!\"\n\t\tif test x$TRYSTATUSMAP = xyep; then\n\t\t\tAC_DEFINE_UNQUOTED(USE_STATUSMAP,,[defined if the user chose to include status map])\n\t\t\tCGIEXTRAS=\"$CGIEXTRAS statusmap.cgi\"\n\t\t\tAC_CHECK_LIB(gd,gdImageCreateTrueColor,\n\t\t\t\tAC_DEFINE(HAVE_GDIMAGECREATETRUECOLOR,1,\n\t\t\t\t\t[Define if your gd library has gdImageCreateTrueColor])) \n\t\tfi\n\n\t\tdnl compile trends CGI\n\t\tAC_DEFINE_UNQUOTED(USE_TRENDS,,[compile trends CGI])\n\t\tCGIEXTRAS=\"$CGIEXTRAS trends.cgi\"\n\t\n\t\tdnl compile histogram CGI\n\t\tAC_DEFINE_UNQUOTED(USE_HISTOGRAM,,[compile histogram CGI])\n\t        CGIEXTRAS=\"$CGIEXTRAS histogram.cgi\"\n\tfi\nfi\n\nAC_ARG_WITH(cgiurl,\n\tAC_HELP_STRING([--with-cgiurl=<local-url>],\n\t\t[sets URL for cgi programs (do not use a trailing slash)]),\n\tcgiurl=$withval,\n\tcgiurl=/nagios/cgi-bin\n)\nAC_ARG_WITH(htmurl,\n\tAC_HELP_STRING([--with-htmurl=<local-url>],\n\t\t[sets URL for public html]),\n\thtmurl=$withval,\n\thtmurl=/nagios\n)\nAC_SUBST(htmurl)\nAC_SUBST(cgiurl)\n\nUSE_NANOSLEEP=yes\nAC_ARG_ENABLE(nanosleep,\n\tAC_HELP_STRING([--enable-nanosleep],\n\t\t[enables use of nanosleep (instead of sleep) in event timing]),\n\tUSE_NANOSLEEP=$enableval,\n\tUSE_NANOSLEEP=yes\n)\nif test x$USE_NANOSLEEP = xyes; then\n\tAC_DEFINE_UNQUOTED(USE_NANOSLEEP,,[enables use of nanosleep (instead of sleep)])\nfi\n\nUSE_EVENTBROKER=yes\nAC_ARG_ENABLE(event-broker,\n\tAC_HELP_STRING([--enable-event-broker],\n\t\t[enables integration of event broker routines]),\n\tUSE_EVENTBROKER=$enableval,\n\tUSE_EVENTBROKER=yes\n)\n\nBROKER_LDFLAGS=\"\"\nBROKERLIBS=\"\";\nsome_dl_found=\"no\";\nif test x$USE_EVENTBROKER = xyes; then\n\n\tdnl Which loader library should we use? libtdl or dl?\n\tdnl Hopefully this will be portable and not give us headaches...\n\tAC_CHECK_HEADER(ltdl.h,[\n\t\tAC_CHECK_LIB(ltdl,lt_dlinit,[\n\t\t\tAC_DEFINE(HAVE_LTDL_H,,[Which loader library should we use? libtdl or dl?])\n\t\t\tsome_dl_found=\"yes\"\n\t\t\tBROKERLIBS=\"$BROKERLIBS -lltdl\"\n\t\t\t])\n\t        ])\n\tif test \"x$some_dl_found\" != xyes; then\n\tAC_CHECK_HEADER(dlfcn.h,[\n\t\tAC_CHECK_LIB(dl,dlopen,[\n\t\t\tAC_DEFINE(HAVE_DLFCN_H,,[Which loader library should we use? libtdl or dl?])\n\t\t\tsome_dl_found=\"yes\"\n\t\t\tBROKERLIBS=\"$BROKERLIBS -ldl\"\n\t\t\t])\n\t        ])\n\tfi\n\n\tdnl - Modified from www.erlang.org\n\t# Check how to export functions from the broker executable, needed\n\t# when dynamically loaded drivers are loaded (so that they can find\n\t# broker functions).\n\t# OS'es with ELF executables using the GNU linker (Linux and recent *BSD,\n\t# in rare cases Solaris) typically need '-Wl,-export-dynamic' (i.e. pass\n\t# -export-dynamic to the linker - also known as -rdynamic and some other\n\t# variants); some sysVr4 system(s) instead need(s) '-Wl,-Bexport'.\n\t# AIX 4.x (perhaps only for x>=2) wants -Wl,-bexpall,-brtl and doesn't\n\t# reliably return an error for others, thus we separate it out.\n\t# Otherwise we assume that if the linker accepts the flag, it is needed.\n\tAC_MSG_CHECKING(for extra flags needed to export symbols)\n\tcase $host_os in\n\t\taix4*|aix5*)\n\t\t\tBROKER_LDFLAGS=\"$BROKER_LDFLAGS -Wl,-bexpall,-brtl\"\n\t\t;;\n\t\tbsdi*)\n    \t\t\tBROKER_LDFLAGS=\"$BROKER_LDFLAGS -rdynamic\" \n\t    \t;;\n\t\t*)\n\t\t\tsave_ldflags=\"$LDFLAGS\"\n\t\t\tLDFLAGS=-Wl,-export-dynamic\n\t\t\tAC_TRY_LINK(,,[BROKER_LDFLAGS=\"$BROKER_LDFLAGS -Wl,-export-dynamic\"], [\n\t\t\t\tLDFLAGS=-Wl,-Bexport\n\t\t\t\tAC_TRY_LINK(,,[BROKER_LDFLAGS=\"$BROKER_LDFLAGS -Wl,-Bexport\"],\n\t\t\t\t\tAC_MSG_RESULT(none))])\n\t\t\tLDFLAGS=\"$save_ldflags\"\n\t\t;;\n\tesac\n\tAC_SUBST(BROKER_LDFLAGS)\n\tAC_SUBST(BROKERLIBS)\n\ttest \"x$BROKER_LDFLAGS\" != x && AC_MSG_RESULT([$BROKER_LDFLAGS])\n\n\n\tdnl - Modified version from www.erlang.org\n\tdnl - Some 12/15/05 mods made after reading http://xaxxon.slackworks.com/phuku/dl.html\n\tAC_MSG_CHECKING(for linker flags for loadable modules)\n\tcase $host_os in\n\t\tsolaris2*|sysv4*)\n\t\t\tMOD_LDFLAGS=\"-G\"\n\t\t\tMOD_CFLAGS=\"-fPIC\"\n\t\t;;\n\t\taix4*|aix5*)\n\t\t\t#MOD_LDFLAGS=\"-G -bnoentry -bexpall\"\n\t\t\tMOD_LDFLAGS=\"-G -bM:SRE -bnoentry -bexpall\"\n\t\t;;\n\t\tfreebsd2*)\n\t\t\t# Non-ELF GNU linker\n\t\t\tMOD_LDFLAGS=\"-Bshareable\"\n\t\t;;\n\t\tdarwin*)\n\t\t\t# Mach-O linker, a shared lib and a loadable\n\t\t\t# object file is not the same thing.\n\t\t\tMOD_LDFLAGS=\"-bundle -flat_namespace -undefined suppress\"\n\t\t\tMOD_CFLAGS=\"$MOD_CFLAGS -fno-common\"\n\t\t;;\n\t\tlinux* | k*bsd*-gnu*)\n\t\t\t# assume GNU linker and ELF\n\t\t\tMOD_LDFLAGS=\"-shared\"\n\t\t\tMOD_CFLAGS=\"-fPIC\"\n\t\t;;\n\t\t*bsd*)\n\t\t\tMOD_LDFLAGS=\"-shared\"\n\t\t\tMOD_CFLAGS=\"-fPIC\"\n\t\t;;\n\t\t*)\n\t\t\t# assume GNU linker and ELF\n\t\t\tMOD_LDFLAGS=\"-shared\"\n\t\t;;\n\tesac\n\tAC_MSG_RESULT([$MOD_LDFLAGS])\n\tAC_SUBST(MOD_CFLAGS)\n\tAC_SUBST(MOD_LDFLAGS)\n\n\tdnl - flags for compiling workers\n\tWORKER_CFLAGS=\"-I ../../include -I ../..\"\n\tWORKER_LDFLAGS=\"-L ../../lib -l nagios\"\n\tAC_SUBST(WORKER_CFLAGS)\n\tAC_SUBST(WORKER_LDFLAGS)\n\n\tAC_DEFINE_UNQUOTED(USE_EVENT_BROKER,,[defined to bring in the event broker objects])\n\tBROKER_O=\"broker.o nebmods.o\"\n\tAC_SUBST(BROKER_O)\n\tBROKER_H=\"../include/broker.h ../include/nebmods.h ../include/nebmodules.h ../include/nebcallbacks.h ../include/neberrors.h\"\n\tAC_SUBST(BROKER_H)\nfi\n\n\ndnl Option for compiling under CYGWIN\nnagios_name=nagios\nnagiostats_name=nagiostats\ncygwin=no\nAC_ARG_ENABLE(cygwin,\n\tAC_HELP_STRING([--enable-cygwin],\n\t\t[enables building under the CYGWIN environment]),\n\t[cygwin=$enableval]\n)\nif test x$cygwin = xyes; then\n\tCFLAGS=\"${CFLAGS} -DCYGWIN\" \n\tnagios_name=nagios.exe;\n\tnagiostats_name=nagiostats.exe;\nfi\nAC_SUBST(nagios_name)\nAC_SUBST(nagiostats_name)\n\n\ndnl Should predictive failure routines be compiled in?\ndnl AC_ARG_ENABLE(failure-prediction,--enable-failure-prediction will enable integration with failure prediction module (NOT HERE YET!),[\ndnl\tAC_DEFINE_UNQUOTED(PREDICT_FAILURES)\ndnl\tBASEEXTRALIBS=\"$BASEEXTRALIBS \\$(FDATALIBS)\"\ndnl\techo \"Failure prediction routines (incomplete!) will be compiled in...\"\ndnl\t])\n\ndnl Find traceroute\nAC_PATH_PROG(PATH_TO_TRACEROUTE,traceroute)\nAC_DEFINE_UNQUOTED(TRACEROUTE_COMMAND,\"$PATH_TO_TRACEROUTE\",[traceroute command to use])\n\n\n\ndnl Package directory for Solaris pkgmk (and other OSs, eventually)\ndnl VERSION=`grep 1.0 include/common.h | cut -d ' ' -f 3 | sed 's/\"//g'`\nVERSION=$PKG_VERSION\nPACKDIR=`pwd`/pkg\nAC_SUBST(PACKDIR)\nAC_SUBST(VERSION)\n \nAC_MSG_CHECKING(for type va_list)\nAC_TRY_COMPILE([#ifdef __STDC__\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdarg.h>\n#else\n#include <sys/types.h>\n#include <stdio.h>\n#include <varargs.h>\n#endif],\n[va_list args;],\n[AC_MSG_RESULT(yes)],\n[AC_DEFINE(NEED_VA_LIST,,[defined if va_list fails to compile]) AC_MSG_RESULT(no)])\n\ndnl Check if we should build local libtap\ndnl From Nagios Plugins\ndnl Have disabled autodetection of system library until later\nAC_ARG_ENABLE(libtap,\n  AC_HELP_STRING([--enable-libtap],\n                [Enable built-in libtap for unit-testing (default: no).]),\n        [enable_libtap=$enableval],\n        [enable_libtap=no])\n#Disabled for moment\n#AM_CONDITIONAL([USE_LIBTAP_LOCAL],[test \"$enable_libtap\" = \"yes\"])\n\n# Disabled for moment\n# If not local, check if we can use the system one\n#if test \"$enable_libtap\" != \"yes\" ; then\n#        dnl Check for libtap, to run perl-like tests\n#        AC_CHECK_LIB(tap, plan_tests,\n#                enable_libtap=\"yes\"\n#                )\n#fi\n\n# Finally, define tests if we use libtap\nif test \"$enable_libtap\" = \"yes\" ; then\n\tAC_CONFIG_SUBDIRS([tap])\n\tUSE_LIBTAP=yes\nelse\n\tUSE_LIBTAP=no\nfi\n\n\nAC_SUBST(USE_LIBTAP)\nAC_SUBST(CGIEXTRAS)\nAC_SUBST(GDLIBS)\nAC_SUBST(BASEEXTRALIBS)\nAC_SUBST(INITDIR)\nAC_SUBST(USE_EVENTBROKER)\n\nAC_PATH_PROG(PERL,perl)\nif test -z \"$PERL\"; then\n\tAC_MSG_ERROR([Cannot continue without perl!])\nfi\n\nAC_PATH_PROG(UNZIP,unzip)\nif test -z \"$UNZIP\"; then\n\tAC_MSG_ERROR([Cannot continue without unzip!])\nfi\n\nAC_OUTPUT(Makefile lib/Makefile subst pkginfo base/Makefile common/Makefile contrib/Makefile cgi/Makefile html/Makefile module/Makefile worker/Makefile worker/ping/Makefile xdata/Makefile daemon-init t/Makefile t-tap/Makefile)\n\n\nperl subst include/locations.h\nperl subst html/config.inc.php\n\n\necho \"\"\necho \"Creating sample config files in sample-config/ ...\"\n\nperl subst sample-config/nagios.cfg\nperl subst sample-config/cgi.cfg\nperl subst sample-config/resource.cfg\nperl subst sample-config/httpd.conf\nperl subst sample-config/mrtg.cfg\n\nperl subst sample-config/template-object/templates.cfg\nperl subst sample-config/template-object/commands.cfg\nperl subst sample-config/template-object/timeperiods.cfg\nperl subst sample-config/template-object/contacts.cfg\n\nperl subst sample-config/template-object/localhost.cfg\nperl subst sample-config/template-object/windows.cfg\nperl subst sample-config/template-object/printer.cfg\nperl subst sample-config/template-object/switch.cfg\n\n\ndnl Review options\necho \"\"\necho \"\"\nAC_MSG_RESULT([*** Configuration summary for $PKG_NAME $PKG_VERSION $PKG_REL_DATE ***:])\n\necho \"\"\necho \" General Options:\"\necho \" -------------------------\"\n\nAC_MSG_RESULT([        Nagios executable:  $nagios_name])\nAC_MSG_RESULT([        Nagios user/group:  $nagios_user,$nagios_grp])\nAC_MSG_RESULT([       Command user/group:  $command_user,$command_grp])\nif test x$USE_EVENTBROKER = xyes; then\nAC_MSG_RESULT([             Event Broker:  yes])\nelse\nAC_MSG_RESULT([             Event Broker:  no])\nfi\nAC_MSG_RESULT([        Install \\${prefix}:  $prefix])\nincdir=`eval echo $includedir`\nif test x$incdir = x$prefix/include; then\n\tincludedir=$prefix/include/nagios\nfi\nAC_MSG_RESULT([    Install \\${includedir}:  $includedir])\nAC_MSG_RESULT([                Lock file:  $lockfile])\nAC_MSG_RESULT([   Check result directory:  $CHECKRESULTDIR])\nAC_MSG_RESULT([           Init directory:  $init_dir])\nAC_MSG_RESULT([  Apache conf.d directory:  $HTTPD_CONF])\nAC_MSG_RESULT([             Mail program:  $MAIL_PROG])\nAC_MSG_RESULT([                  Host OS:  $host_os])\nAC_MSG_RESULT([          IOBroker Method:  $IOBROKER_METHOD])\n\necho \"\"\necho \" Web Interface Options:\"\necho \" ------------------------\"\n\nAC_MSG_RESULT([                 HTML URL:  http://localhost$htmurl/])\nAC_MSG_RESULT([                  CGI URL:  http://localhost$cgiurl/])\nAC_MSG_RESULT([ Traceroute (used by WAP):  $PATH_TO_TRACEROUTE])\n\necho \"\"\necho \"\"\necho \"Review the options above for accuracy.  If they look okay,\"\necho \"type 'make all' to compile the main program and CGIs.\"\necho \"\"\n"], "filenames": ["Changelog", "THANKS", "base/nagios.c", "configure.ac"], "buggy_code_start_loc": [10, 322, 595, 229], "buggy_code_end_loc": [10, 322, 628, 829], "fixing_code_start_loc": [11, 323, 595, 230], "fixing_code_end_loc": [13, 324, 630, 822], "type": "CWE-665", "message": "Nagios Core before 4.3.3 creates a nagios.lock PID file after dropping privileges to a non-root account, which might allow local users to kill arbitrary processes by leveraging access to this non-root account for nagios.lock modification before a root script executes a \"kill `cat /pathname/nagios.lock`\" command.", "other": {"cve": {"id": "CVE-2017-12847", "sourceIdentifier": "cve@mitre.org", "published": "2017-08-23T21:29:00.200", "lastModified": "2019-10-03T00:03:26.223", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Nagios Core before 4.3.3 creates a nagios.lock PID file after dropping privileges to a non-root account, which might allow local users to kill arbitrary processes by leveraging access to this non-root account for nagios.lock modification before a root script executes a \"kill `cat /pathname/nagios.lock`\" command."}, {"lang": "es", "value": "Nagios Core en versiones anteriores a la 4.3.3 crea un archivo nagios.lock PID tras eliminar privilegios a una cuenta no-root, lo que podr\u00eda permitir que usuarios locales terminen procesos arbitrarios aprovechando el acceso a esta cuenta no-root para modificar nagios.lock antes de que un script root ejecute un comando \"kill `cat /pathname/nagios.lock`\"."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.0, "impactScore": 5.2}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:M/Au:N/C:N/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 6.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.4, "impactScore": 9.2, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-665"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:nagios:nagios:*:*:*:*:*:*:*:*", "versionEndIncluding": "4.3.2", "matchCriteriaId": "EB40EDD4-55D8-4C3C-9D84-1F7B930F476F"}]}]}], "references": [{"url": "http://www.securityfocus.com/bid/100403", "source": "cve@mitre.org", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://github.com/NagiosEnterprises/nagioscore/blob/master/Changelog", "source": "cve@mitre.org", "tags": ["Release Notes", "Vendor Advisory"]}, {"url": "https://github.com/NagiosEnterprises/nagioscore/commit/1b197346d490df2e2d3b1dcce5ac6134ad0c8752", "source": "cve@mitre.org", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://github.com/NagiosEnterprises/nagioscore/commit/3baffa78bafebbbdf9f448890ba5a952ea2d73cb", "source": "cve@mitre.org", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://github.com/NagiosEnterprises/nagioscore/issues/404", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Vendor Advisory"]}, {"url": "https://security.gentoo.org/glsa/201710-20", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/NagiosEnterprises/nagioscore/commit/1b197346d490df2e2d3b1dcce5ac6134ad0c8752"}}