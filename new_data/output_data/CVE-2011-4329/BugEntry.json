{"buggy_code": ["<?php\n/* Copyright (C) 2008-2011 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2008-2011 Regis Houssin        <regis@dolibarr.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n * or see http://www.gnu.org/\n */\n\n/**\n *  \\file\t\t\thtdocs/lib/security.lib.php\n *  \\brief\t\t\tSet of function used for dolibarr security\n *  \\version\t\t$Id: security.lib.php,v 1.125 2011/07/31 23:25:15 eldy Exp $\n */\n\n\n/**\n *   Return a login if login/pass was successfull using an external login method\n *   @return\tstring\t\tLogin or ''\n * \t TODO Provide usertotest, passwordtotest and entitytotest by parameters\n */\nfunction getLoginMethod()\n{\n\tglobal $conf,$langs;\n\n\t$login = '';\n\n\tforeach($conf->login_method_modules as $dir)\n\t{\n\t\t// Check if directory exists\n\t\tif (!is_dir($dir)) continue;\n\n\t\t$handle=opendir($dir);\n\t\tif (is_resource($handle))\n\t\t{\n\t\t\twhile (($file = readdir($handle))!==false)\n\t\t\t{\n\t\t\t\tif (is_readable($dir.'/'.$file) && preg_match('/^functions_([^_]+)\\.php/',$file,$reg))\n\t\t\t\t{\n\t\t\t\t\t$authfile = $dir.'/'.$file;\n\t\t\t\t\t$mode = $reg[1];\n\n\t\t\t\t\t$result=include_once($authfile);\n\t\t\t\t\tif ($result)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Call function to check user/password\n\t\t\t\t\t\t$usertotest=$_POST[\"username\"];\n\t\t\t\t\t\t$passwordtotest=$_POST[\"password\"];\n\t\t\t\t\t\t$entitytotest=$_POST[\"entity\"];\n\t\t\t\t\t\t$function='check_user_password_'.$mode;\n\t\t\t\t\t\t$login=$function($usertotest,$passwordtotest,$entitytotest);\n\t\t\t\t\t\tif ($login)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$conf->authmode=$mode;\t// This properties is defined only when logged\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tdol_syslog(\"Authentification ko - failed to load file '\".$authfile.\"'\",LOG_ERR);\n\t\t\t\t\t\tsleep(1);\n\t\t\t\t\t\t$langs->load('main');\n\t\t\t\t\t\t$langs->load('other');\n\t\t\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorFailedToLoadLoginFileForMode\",$mode);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tclosedir($handle);\n\t}\n\treturn $login;\n}\n\n/**\n *\tShow Dolibarr default login page\n *\t@param\t\tlangs\t\tLang object (must be initialized by a new).\n *\t@param\t\tconf\t\tConf object\n *\t@param\t\tmysoc\t\tCompany object\n */\nfunction dol_loginfunction($langs,$conf,$mysoc)\n{\n\tglobal $dolibarr_main_demo,$db;\n\tglobal $smartphone;\n\n\t$langcode=(GETPOST('lang')?((is_object($langs)&&$langs->defaultlang)?$langs->defaultlang:'auto'):GETPOST('lang'));\n\t$langs->setDefaultLang($langcode);\n\n\t$langs->load(\"main\");\n\t$langs->load(\"other\");\n\t$langs->load(\"help\");\n\t$langs->load(\"admin\");\n\n\t$main_authentication=$conf->file->main_authentication;\n\t$session_name=session_name();\n\n\t$dol_url_root = DOL_URL_ROOT;\n\n\t$php_self = $_SERVER['PHP_SELF'];\n\t$php_self.= $_SERVER[\"QUERY_STRING\"]?'?'.$_SERVER[\"QUERY_STRING\"]:'';\n\n\t// Title\n\t$title='Dolibarr '.DOL_VERSION;\n\tif (! empty($conf->global->MAIN_APPLICATION_TITLE)) $title=$conf->global->MAIN_APPLICATION_TITLE;\n\n\t// Select templates\n\tif (preg_match('/^smartphone/',$conf->smart_menu) && isset($conf->browser->phone))\n\t{\n\t\t$template_dir = DOL_DOCUMENT_ROOT.'/theme/phones/smartphone/tpl/';\n\t}\n\telse\n\t{\n\t\tif (file_exists(DOL_DOCUMENT_ROOT.\"/theme/\".$conf->theme.\"/tpl/login.tpl.php\"))\n\t\t{\n\t\t\t$template_dir = DOL_DOCUMENT_ROOT.\"/theme/\".$conf->theme.\"/tpl/\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$template_dir = DOL_DOCUMENT_ROOT.\"/core/tpl/\";\n\t\t}\n\t}\n\n\t$conf->css = \"/theme/\".$conf->theme.\"/style.css.php?lang=\".$langs->defaultlang;\n\t$conf_css = DOL_URL_ROOT.$conf->css;\n\n\t// Set cookie for timeout management\n\t$prefix=dol_getprefix();\n\t$sessiontimeout='DOLSESSTIMEOUT_'.$prefix;\n\tif (! empty($conf->global->MAIN_SESSION_TIMEOUT)) setcookie($sessiontimeout, $conf->global->MAIN_SESSION_TIMEOUT, 0, \"/\", '', 0);\n\n\tif (GETPOST(\"urlfrom\")) $_SESSION[\"urlfrom\"]=GETPOST(\"urlfrom\");\n\telse unset($_SESSION[\"urlfrom\"]);\n\n\tif (! GETPOST(\"username\")) $focus_element='username';\n\telse $focus_element='password';\n\n\t$login_background=DOL_URL_ROOT.'/theme/login_background.png';\n\tif (file_exists(DOL_DOCUMENT_ROOT.'/theme/'.$conf->theme.'/img/login_background.png'))\n\t{\n\t\t$login_background=DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/login_background.png';\n\t}\n\n\t$demologin='';\n\t$demopassword='';\n\tif (! empty($dolibarr_main_demo))\n\t{\n\t\t$tab=explode(',',$dolibarr_main_demo);\n\t\t$demologin=$tab[0];\n\t\t$demopassword=$tab[1];\n\t}\n\n\t// Entity cookie\n\tif (! empty($conf->global->MAIN_MODULE_MULTICOMPANY))\n\t{\n\t\t$lastuser = '';\n\t\t$lastentity = $_POST['entity'];\n\n\t\tif (! empty($conf->global->MAIN_MULTICOMPANY_COOKIE))\n\t\t{\n\t\t\t$prefix=dol_getprefix();\n\t\t\t$entityCookieName = 'DOLENTITYID_'.$prefix;\n\t\t\tif (isset($_COOKIE[$entityCookieName]))\n\t\t\t{\n\t\t\t\tinclude_once(DOL_DOCUMENT_ROOT . \"/core/class/cookie.class.php\");\n\n\t\t\t\t$cryptkey = (! empty($conf->file->cookie_cryptkey) ? $conf->file->cookie_cryptkey : '' );\n\n\t\t\t\t$entityCookie = new DolCookie($cryptkey);\n\t\t\t\t$cookieValue = $entityCookie->_getCookie($entityCookieName);\n\t\t\t\tlist($lastuser, $lastentity) = explode('|', $cookieValue);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Login\n\t$login = (!empty($lastuser)?$lastuser:(GETPOST(\"username\")?GETPOST(\"username\"):$demologin));\n\t$password = $demopassword;\n\n\t// Show logo (search in order: small company logo, large company logo, theme logo, common logo)\n\t$width=0;\n\t$rowspan=2;\n\t$urllogo=DOL_URL_ROOT.'/theme/login_logo.png';\n\n\tif (! empty($mysoc->logo_small) && is_readable($conf->mycompany->dir_output.'/logos/thumbs/'.$mysoc->logo_small))\n\t{\n\t\t$urllogo=DOL_URL_ROOT.'/viewimage.php?cache=1&amp;modulepart=companylogo&amp;file='.urlencode('thumbs/'.$mysoc->logo_small);\n\t}\n\telseif (! empty($mysoc->logo) && is_readable($conf->mycompany->dir_output.'/logos/'.$mysoc->logo))\n\t{\n\t\t$urllogo=DOL_URL_ROOT.'/viewimage.php?cache=1&amp;modulepart=companylogo&amp;file='.urlencode($mysoc->logo);\n\t\t$width=128;\n\t}\n\telseif (is_readable(DOL_DOCUMENT_ROOT.'/theme/dolibarr_logo.png'))\n\t{\n\t\t$urllogo=DOL_URL_ROOT.'/theme/dolibarr_logo.png';\n\t}\n\n\t// Entity field\n\t$select_entity='';\n\tif (! empty($conf->global->MAIN_MODULE_MULTICOMPANY) && empty($conf->global->MULTICOMPANY_HIDE_LOGIN_COMBOBOX))\n\t{\n\t\t$rowspan++;\n\n\t\t$res=dol_include_once('/multicompany/class/actions_multicompany.class.php');\n\t\tif ($res)\n\t\t{\n\t\t\t$mc = new ActionsMulticompany($db);\n\n\t\t\t$select_entity=$mc->select_entities($lastentity, 'tabindex=\"3\"');\n\t\t}\n\t}\n\n\t// Security graphical code\n\t$captcha=0;\n\t$captcha_refresh='';\n\tif (function_exists(\"imagecreatefrompng\") && ! empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA))\n\t{\n\t\t$captcha=1;\n\t\t$captcha_refresh=img_refresh();\n\t}\n\n\t// Extra link\n\t$forgetpasslink=0;\n\t$helpcenterlink=0;\n\tif (empty($conf->global->MAIN_SECURITY_DISABLEFORGETPASSLINK) || empty($conf->global->MAIN_HELPCENTER_DISABLELINK))\n\t{\n\t\tif (empty($conf->global->MAIN_SECURITY_DISABLEFORGETPASSLINK))\n\t\t{\n\t\t\t$forgetpasslink=1;\n\t\t}\n\n\t\tif (empty($conf->global->MAIN_HELPCENTER_DISABLELINK))\n\t\t{\n\t\t\t$helpcenterlink=1;\n\t\t}\n\t}\n\n\t// Home message\n\tif (! empty($conf->global->MAIN_HOME))\n\t{\n\t\t$i=0;\n\t\twhile (preg_match('/__\\(([a-zA-Z]+)\\)__/i',$conf->global->MAIN_HOME,$reg) && $i < 100)\n\t\t{\n\t\t\t$conf->global->MAIN_HOME=preg_replace('/__\\('.$reg[1].'\\)__/i',$langs->trans($reg[1]),$conf->global->MAIN_HOME);\n\t\t\t$i++;\n\t\t}\n\t}\n\t$main_home=dol_htmlcleanlastbr($conf->global->MAIN_HOME);\n\n\t// Google AD\n\t$main_google_ad_client = ((! empty($conf->global->MAIN_GOOGLE_AD_CLIENT) && ! empty($conf->global->MAIN_GOOGLE_AD_SLOT))?1:0);\n\n\t$dol_loginmesg = $_SESSION[\"dol_loginmesg\"];\n\n\tinclude($template_dir.'login.tpl.php');\t// To use native PHP\n\n\t$_SESSION[\"dol_loginmesg\"] = '';\n}\n\n/**\n *  Fonction pour initialiser un salt pour la fonction crypt\n *  @param\t\t$type\t\t2=>renvoi un salt pour cryptage DES\n *\t\t\t\t\t\t\t12=>renvoi un salt pour cryptage MD5\n *\t\t\t\t\t\t\tnon defini=>renvoi un salt pour cryptage par defaut\n *\t@return\t\tstring\t\tChaine salt\n */\nfunction makesalt($type=CRYPT_SALT_LENGTH)\n{\n\tdol_syslog(\"security.lib.php::makesalt type=\".$type);\n\tswitch($type)\n\t{\n\t\tcase 12:\t// 8 + 4\n\t\t\t$saltlen=8; $saltprefix='$1$'; $saltsuffix='$'; break;\n\t\tcase 8:\t\t// 8 + 4 (Pour compatibilite, ne devrait pas etre utilise)\n\t\t\t$saltlen=8; $saltprefix='$1$'; $saltsuffix='$'; break;\n\t\tcase 2:\t\t// 2\n\t\tdefault: \t// by default, fall back on Standard DES (should work everywhere)\n\t\t\t$saltlen=2; $saltprefix=''; $saltsuffix=''; break;\n\t}\n\t$salt='';\n\twhile(dol_strlen($salt) < $saltlen) $salt.=chr(mt_rand(64,126));\n\n\t$result=$saltprefix.$salt.$saltsuffix;\n\tdol_syslog(\"security.lib.php::makesalt return=\".$result);\n\treturn $result;\n}\n\n/**\n *  Encode or decode database password in config file\n *  @param   \tlevel   \tEncode level: 0 no encoding, 1 encoding\n *\t@return\t\tint\t\t\t<0 if KO, >0 if OK\n */\nfunction encodedecode_dbpassconf($level=0)\n{\n\tdol_syslog(\"security.lib::encodedecode_dbpassconf level=\".$level, LOG_DEBUG);\n\t$config = '';\n\t$passwd='';\n\t$passwd_crypted='';\n\n\tif ($fp = fopen(DOL_DOCUMENT_ROOT.'/conf/conf.php','r'))\n\t{\n\t\twhile(!feof($fp))\n\t\t{\n\t\t\t$buffer = fgets($fp,4096);\n\n\t\t\t$lineofpass=0;\n\n\t\t\tif (preg_match('/^[^#]*dolibarr_main_db_encrypted_pass[\\s]*=[\\s]*(.*)/i',$buffer,$reg))\t// Old way to save crypted value\n\t\t\t{\n\t\t\t\t$val = trim($reg[1]);\t// This also remove CR/LF\n\t\t\t\t$val=preg_replace('/^[\"\\']/','',$val);\n\t\t\t\t$val=preg_replace('/[\"\\'][\\s;]*$/','',$val);\n\t\t\t\tif (! empty($val))\n\t\t\t\t{\n\t\t\t\t\t$passwd_crypted = $val;\n\t\t\t\t\t$val = dol_decode($val);\n\t\t\t\t\t$passwd = $val;\n\t\t\t\t\t$lineofpass=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\telseif (preg_match('/^[^#]*dolibarr_main_db_pass[\\s]*=[\\s]*(.*)/i',$buffer,$reg))\n\t\t\t{\n\t\t\t\t$val = trim($reg[1]);\t// This also remove CR/LF\n\t\t\t\t$val=preg_replace('/^[\"\\']/','',$val);\n\t\t\t\t$val=preg_replace('/[\"\\'][\\s;]*$/','',$val);\n\t\t\t\tif (preg_match('/crypted:/i',$buffer))\n\t\t\t\t{\n\t\t\t\t\t$val = preg_replace('/crypted:/i','',$val);\n\t\t\t\t\t$passwd_crypted = $val;\n\t\t\t\t\t$val = dol_decode($val);\n\t\t\t\t\t$passwd = $val;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$passwd = $val;\n\t\t\t\t\t$val = dol_encode($val);\n\t\t\t\t\t$passwd_crypted = $val;\n\t\t\t\t}\n\t\t\t\t$lineofpass=1;\n\t\t\t}\n\n\t\t\t// Output line\n\t\t\tif ($lineofpass)\n\t\t\t{\n\t\t\t\t// Add value at end of file\n\t\t\t\tif ($level == 0)\n\t\t\t\t{\n\t\t\t\t\t$config .= '$dolibarr_main_db_pass=\"'.$passwd.'\";'.\"\\n\";\n\t\t\t\t}\n\t\t\t\tif ($level == 1)\n\t\t\t\t{\n\t\t\t\t\t$config .= '$dolibarr_main_db_pass=\"crypted:'.$passwd_crypted.'\";'.\"\\n\";\n\t\t\t\t}\n\n\t\t\t\t//print 'passwd = '.$passwd.' - passwd_crypted = '.$passwd_crypted;\n\t\t\t\t//exit;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$config .= $buffer;\n\t\t\t}\n\t\t}\n\t\tfclose($fp);\n\n\t\t// Write new conf file\n\t\t$file=DOL_DOCUMENT_ROOT.'/conf/conf.php';\n\t\tif ($fp = @fopen($file,'w'))\n\t\t{\n\t\t\tfputs($fp, $config, dol_strlen($config));\n\t\t\tfclose($fp);\n\t\t\t// It's config file, so we set read permission for creator only.\n\t\t\t// Should set permission to web user and groups for users used by batch\n\t\t\t//@chmod($file, octdec('0600'));\n\n\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_syslog(\"security.lib::encodedecode_dbpassconf Failed to open conf.php file for writing\", LOG_WARNING);\n\t\t\treturn -1;\n\t\t}\n\t}\n\telse\n\t{\n\t\tdol_syslog(\"security.lib::encodedecode_dbpassconf Failed to read conf.php\", LOG_ERR);\n\t\treturn -2;\n\t}\n}\n\n/**\n *\tEncode a string\n *\t@param   chain\t\t\tchaine de caracteres a encoder\n *\t@return  string_coded  \tchaine de caracteres encodee\n */\nfunction dol_encode($chain)\n{\n\tfor($i=0;$i<dol_strlen($chain);$i++)\n\t{\n\t\t$output_tab[$i] = chr(ord(substr($chain,$i,1))+17);\n\t}\n\n\t$string_coded = base64_encode(implode(\"\",$output_tab));\n\treturn $string_coded;\n}\n\n/**\n *\tDecode a string\n *\t@param   chain    chaine de caracteres a decoder\n *\t@return  string_coded  chaine de caracteres decodee\n */\nfunction dol_decode($chain)\n{\n\t$chain = base64_decode($chain);\n\n\tfor($i=0;$i<dol_strlen($chain);$i++)\n\t{\n\t\t$output_tab[$i] = chr(ord(substr($chain,$i,1))-17);\n\t}\n\n\t$string_decoded = implode(\"\",$output_tab);\n\treturn $string_decoded;\n}\n\n\n/**\n * Return array of ciphers mode available\n * @return strAv\tConfiguration file content\n */\nfunction dol_efc_config()\n{\n\t// Make sure we can use mcrypt_generic_init\n\tif (!function_exists(\"mcrypt_generic_init\"))\n\t{\n\t\treturn -1;\n\t}\n\n\t// Set a temporary $key and $data for encryption tests\n\t$key = md5(time() . getmypid());\n\t$data = mt_rand();\n\n\t// Get and sort available cipher methods\n\t$ciphers = mcrypt_list_algorithms();\n\tnatsort($ciphers);\n\n\t// Get and sort available cipher modes\n\t$modes = mcrypt_list_modes();\n\tnatsort($modes);\n\n\tforeach ($ciphers as $cipher)\n\t{\n\t\tforeach ($modes as $mode)\n\t\t{\n\t\t\t// Not Compatible\n\t\t\t$result = 'false';\n\n\t\t\t// open encryption module\n\t\t\t$td = @mcrypt_module_open($cipher, '', $mode, '');\n\n\t\t\t// if we could open the cipher\n\t\t\tif ($td)\n\t\t\t{\n\t\t\t\t// try to generate the iv\n\t\t\t\t$iv = @mcrypt_create_iv(mcrypt_enc_get_iv_size ($td), MCRYPT_RAND);\n\n\t\t\t\t// if we could generate the iv\n\t\t\t\tif ($iv)\n\t\t\t\t{\n\t\t\t\t\t// initialize encryption\n\t\t\t\t\t@mcrypt_generic_init ($td, $key, $iv);\n\n\t\t\t\t\t// encrypt data\n\t\t\t\t\t$encrypted_data = mcrypt_generic($td, $data);\n\n\t\t\t\t\t// cleanup\n\t\t\t\t\tmcrypt_generic_deinit($td);\n\n\t\t\t\t\t// No error issued\n\t\t\t\t\t$result = 'true';\n\t\t\t\t}\n\n\t\t\t\t// close\n\t\t\t\t@mcrypt_module_close($td);\n\t\t\t}\n\n\t\t\tif ($result == \"true\") $available[\"$cipher\"][] = $mode;\n\t\t}\n\t}\n\n\tif (count($available) > 0)\n\t{\n\t\t// Content of configuration\n\t\t$strAv = \"<?php\\n\";\n\t\t$strAv.= \"/* Copyright (C) 2003 HumanEasy, Lda. <humaneasy@sitaar.com>\\n\";\n\t\t$strAv.= \" * Copyright (C) 2009 Regis Houssin <regis@dolibarr.fr>\\n\";\n\t\t$strAv.= \" *\\n\";\n\t\t$strAv.= \" * All rights reserved.\\n\";\n\t\t$strAv.= \" * This file is licensed under GNU GPL version 2 or above.\\n\";\n\t\t$strAv.= \" * Please visit http://www.gnu.org to now more about it.\\n\";\n\t\t$strAv.= \" */\\n\\n\";\n\t\t$strAv.= \"/**\\n\";\n\t\t$strAv.= \" *  Name: EasyFileCrypt Extending Crypt Class\\n\";\n\t\t$strAv.= \" *  Version: 1.0\\n\";\n\t\t$strAv.= \" *  Created: \".date(\"r\").\"\\n\";\n\t\t$strAv.= \" *  Ciphers Installed on this system: \".count($ciphers).\"\\n\";\n\t\t$strAv.= \" */\\n\\n\";\n\t\t$strAv.= \"    \\$xfss = Array ( \";\n\n\t\tforeach ($ciphers as $avCipher) {\n\n\t\t\t$v = \"\";\n\t\t\tif (count($available[\"$avCipher\"]) > 0) {\n\t\t\t\tforeach ($available[\"$avCipher\"] as $avMode)\n\t\t\t\t$v .= \" '\".$avMode.\"', \";\n\n\t\t\t\t$i = dol_strlen($v) - 2;\n\t\t\t\tif ($v[$i] == \",\")\n\t\t\t\t$v = substr($v, 2, $i - 3);\n\t\t\t}\n\t\t\tif (!empty($v)) $v = \" '\".$v.\"' \";\n\t\t\t$strAv .= \"'\".$avCipher.\"' => Array (\".$v.\"),\\n                    \";\n\t\t}\n\t\t$strAv = rtrim($strAv);\n\t\tif ($strAv[dol_strlen($strAv) - 1] == \",\")\n\t\t$strAv = substr($strAv, 0, dol_strlen($strAv) - 1);\n\t\t$strAv .= \" );\\n\\n\";\n\t\t$strAv .= \"?>\";\n\n\t\treturn $strAv;\n\t}\n}\n\n/**\n * Return a generated password using default module\n * @param\t\tgeneric\t\tCreate generic password\n * @return\t\tstring\t\tNew value for password\n */\nfunction getRandomPassword($generic=false)\n{\n\tglobal $db,$conf,$langs,$user;\n\n\t$generated_password='';\n\tif ($generic) $generated_password=dol_hash(mt_rand());\n\telse if ($conf->global->USER_PASSWORD_GENERATED)\n\t{\n\t\t$nomclass=\"modGeneratePass\".ucfirst($conf->global->USER_PASSWORD_GENERATED);\n\t\t$nomfichier=$nomclass.\".class.php\";\n\t\t//print DOL_DOCUMENT_ROOT.\"/includes/modules/security/generate/\".$nomclass;\n\t\trequire_once(DOL_DOCUMENT_ROOT.\"/includes/modules/security/generate/\".$nomfichier);\n\t\t$genhandler=new $nomclass($db,$conf,$langs,$user);\n\t\t$generated_password=$genhandler->getNewGeneratedPassword();\n\t\tunset($genhandler);\n\t}\n\n\treturn $generated_password;\n}\n\n/**\n * \tReturns a hash of a string\n * \t@param \tchain\tString to hash\n * \t@param\ttype\tType of hash (0:md5, 1:sha1, 2:sha1+md5)\n * \t@return\thash\thash of string\n */\nfunction dol_hash($chain,$type=0)\n{\n\tif ($type == 1) return sha1($chain);\n\telse if ($type == 2) return sha1(md5($chain));\n\telse return md5($chain);\n}\n\n?>", "<?php\n/* Copyright (C) 2002-2007 Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2003      Xavier Dutoit        <doli@sydesy.com>\n * Copyright (C) 2004-2011 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2004      Sebastien Di Cintio  <sdicintio@ressource-toi.org>\n * Copyright (C) 2004      Benoit Mortier       <benoit.mortier@opensides.be>\n * Copyright (C) 2005-2011 Regis Houssin        <regis@dolibarr.fr>\n * Copyright (C) 2008      Matteli\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/main.inc.php\n *\t\\ingroup\tcore\n *\t\\brief      File that defines environment for Dolibarr pages only (variables not required by scripts)\n *\t\\version    $Id: main.inc.php,v 1.756 2011/07/31 23:19:05 eldy Exp $\n */\n\n@ini_set('memory_limit', '64M');\t// This may be useless if memory is hard limited by your PHP\n\n// For optionnal tuning. Enabled if environment variable DOL_TUNING is defined.\n// A call first. Is the equivalent function dol_microtime_float not yet loaded.\n$micro_start_time=0;\nif (! empty($_SERVER['DOL_TUNING']))\n{\n\tlist($usec, $sec) = explode(\" \", microtime());\n\t$micro_start_time=((float)$usec + (float)$sec);\n\t// Add Xdebug code coverage\n\t//define('XDEBUGCOVERAGE',1);\n\tif (defined('XDEBUGCOVERAGE')) { xdebug_start_code_coverage(); }\n}\n\n// Removed magic_quotes\nif (function_exists('get_magic_quotes_gpc'))\t// magic_quotes_* removed in PHP6\n{\n\tif (get_magic_quotes_gpc())\n\t{\n\t\t// Forcing parameter setting magic_quotes_gpc and cleaning parameters\n\t\t// (Otherwise he would have for each position, condition\n\t\t// Reading stripslashes variable according to state get_magic_quotes_gpc).\n\t\t// Off mode (recommended, you just do $db->escape when an insert / update.\n\t\tfunction stripslashes_deep($value)\n\t\t{\n\t\t\treturn (is_array($value) ? array_map('stripslashes_deep', $value) : stripslashes($value));\n\t\t}\n\t\t$_GET     = array_map('stripslashes_deep', $_GET);\n\t\t$_POST    = array_map('stripslashes_deep', $_POST);\n\t\t$_COOKIE  = array_map('stripslashes_deep', $_COOKIE);\n\t\t@set_magic_quotes_runtime(0);\n\t}\n}\n\n// Security: SQL Injection and XSS Injection (scripts) protection (Filters on GET, POST)\nfunction test_sql_and_script_inject($val,$get)\n{\n\t$sql_inj = 0;\n\t// For SQL Injection\n\t$sql_inj += preg_match('/delete[\\s]+from/i', $val);\n\t$sql_inj += preg_match('/create[\\s]+table/i', $val);\n\t$sql_inj += preg_match('/update.+set.+=/i', $val);\n\t$sql_inj += preg_match('/insert[\\s]+into/i', $val);\n\t$sql_inj += preg_match('/select.+from/i', $val);\n\t$sql_inj += preg_match('/union.+select/i', $val);\n\t$sql_inj += preg_match('/(\\.\\.%2f)+/i', $val);\n\t// For XSS Injection done by adding javascript with script\n\t$sql_inj += preg_match('/<script/i', $val);\n\tif ($get) $sql_inj += preg_match('/javascript:/i', $val);\n\t// For XSS Injection done by adding javascript with onmousemove, etc... (closing a src or href tag with not cleaned param)\n\tif ($get) $sql_inj += preg_match('/\"/i', $val);\t// We refused \" in GET parameters value\n\treturn $sql_inj;\n}\n// Security: Return true if OK, false otherwise\nfunction analyse_sql_and_script(&$var,$get)\n{\n\tif (is_array($var))\n\t{\n\t\tforeach ($var as $key => $value)\n\t\t{\n\t\t\tif (analyse_sql_and_script($value,$get))\n\t\t\t{\n\t\t\t\t$var[$key] = $value;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint 'Access refused by SQL/Script injection protection in main.inc.php';\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn (test_sql_and_script_inject($var,$get) <= 0);\n\t}\n}\n// Sanity check on URL\nif (! empty($_SERVER[\"PHP_SELF\"]))\n{\n    $morevaltochecklikepost=array($_SERVER[\"PHP_SELF\"]);\n    analyse_sql_and_script($morevaltochecklikepost,0);\n}\n// Sanity check on GET parameters\nif (! empty($_SERVER[\"QUERY_STRING\"]))\n{\n    $morevaltochecklikeget=array($_SERVER[\"QUERY_STRING\"]);\n    analyse_sql_and_script($morevaltochecklikeget,1);\n}\n// Sanity check on POST\nanalyse_sql_and_script($_POST,0);\n\n// This is to make Dolibarr working with Plesk\nif (! empty($_SERVER['DOCUMENT_ROOT'])) set_include_path($_SERVER['DOCUMENT_ROOT'].'/htdocs');\n\n// Include the conf.php and functions.lib.php\nrequire_once(\"filefunc.inc.php\");\n\n// Init session. Name of session is specific to Dolibarr instance.\n$prefix=dol_getprefix();\n$sessionname='DOLSESSID_'.$prefix;\n$sessiontimeout='DOLSESSTIMEOUT_'.$prefix;\nif (! empty($_COOKIE[$sessiontimeout])) ini_set('session.gc_maxlifetime',$_COOKIE[$sessiontimeout]);\nsession_name($sessionname);\nsession_start();\n\n// Init the 5 global objects\n// This include will set: $conf, $db, $langs, $user, $mysoc objects\nrequire_once(\"master.inc.php\");\n\n// Activate end of page function\nregister_shutdown_function('dol_shutdown');\n\n// Detection browser\n// TODO rename conf->browser into user->browser\nif (isset($_SERVER[\"HTTP_USER_AGENT\"]))\n{\n\t// If phone/smartphone, we set phone os name.\n\tif (preg_match('/android/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t\t\t$conf->browser->phone='android';\n\telseif (preg_match('/blackberry/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t$conf->browser->phone='blackberry';\n\telseif (preg_match('/iphone/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t\t$conf->browser->phone='iphone';\n\telseif (preg_match('/ipod/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t\t\t$conf->browser->phone='iphone';\n\telseif (preg_match('/palm/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t\t\t$conf->browser->phone='palm';\n\telseif (preg_match('/symbian/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t\t$conf->browser->phone='symbian';\n\telseif (preg_match('/webos/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t\t\t$conf->browser->phone='webos';\n\telseif (preg_match('/maemo/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t\t\t$conf->browser->phone='maemo';\n\t// MS products at end\n\telseif (preg_match('/iemobile/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t\t$conf->browser->phone='windowsmobile';\n\telseif (preg_match('/windows ce/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t$conf->browser->phone='windowsmobile';\n\t// Name\n\tif (preg_match('/firefox/i',$_SERVER[\"HTTP_USER_AGENT\"]))       $conf->browser->name='firefox';\n\telseif (preg_match('/chrome/i',$_SERVER[\"HTTP_USER_AGENT\"]))    $conf->browser->name='chrome';\n\telseif (preg_match('/iceweasel/i',$_SERVER[\"HTTP_USER_AGENT\"])) $conf->browser->name='iceweasel';\n\telseif ((empty($conf->browser->phone) || preg_match('/iphone/i',$_SERVER[\"HTTP_USER_AGENT\"])) && preg_match('/safari/i',$_SERVER[\"HTTP_USER_AGENT\"]))    $conf->browser->name='safari';\t// Safari is often present in string but its not.\n\telseif (preg_match('/opera/i',$_SERVER[\"HTTP_USER_AGENT\"]))     $conf->browser->name='opera';\n\t// MS products at end\n\telseif (preg_match('/msie/i',$_SERVER[\"HTTP_USER_AGENT\"]))      $conf->browser->name='ie';\n\telse $conf->browser->name='unknown';\n\t// Other\n\tif (in_array($conf->browser->name,array('firefox','iceweasel'))) $conf->browser->firefox=1;\n\t//$conf->browser->phone='android';\n}\n\n\n// Force HTTPS if required ($conf->file->main_force_https is 0/1 or https dolibarr root url)\nif (! empty($conf->file->main_force_https))\n{\n\t$newurl='';\n\tif ($conf->file->main_force_https == '1')\n\t{\n\t\tif (! empty($_SERVER[\"SCRIPT_URI\"]))\t// If SCRIPT_URI supported by server\n\t\t{\n\t\t\tif (preg_match('/^http:/i',$_SERVER[\"SCRIPT_URI\"]) && ! preg_match('/^https:/i',$_SERVER[\"SCRIPT_URI\"]))\t// If link is http\n\t\t\t{\n\t\t\t\t$newurl=preg_replace('/^http:/i','https:',$_SERVER[\"SCRIPT_URI\"]);\n\t\t\t}\n\t\t}\n\t\telse\t// Check HTTPS environment variable (Apache/mod_ssl only)\n\t\t{\n\t\t\t// $_SERVER[\"HTTPS\"] is 'on' when link is https, otherwise $_SERVER[\"HTTPS\"] is empty or 'off'\n\t\t\tif (empty($_SERVER[\"HTTPS\"]) || $_SERVER[\"HTTPS\"] != 'on')\t\t// If link is http\n\t\t\t{\n\t\t\t\t$newurl=preg_replace('/^http:/i','https:',DOL_MAIN_URL_ROOT).$_SERVER[\"REQUEST_URI\"];\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t$newurl=$conf->file->main_force_https.$_SERVER[\"REQUEST_URI\"];\n\t}\n\t// Start redirect\n\tif ($newurl)\n\t{\n\t\tdol_syslog(\"main.inc: dolibarr_main_force_https is on, we make a redirect to \".$newurl);\n\t\theader(\"Location: \".$newurl);\n\t\texit;\n\t}\n\telse\n\t{\n\t\tdol_syslog(\"main.inc: dolibarr_main_force_https is on but we failed to forge new https url so no redirect is done\", LOG_WARNING);\n\t}\n}\n\n\n// Chargement des includes complementaires de presentation\nif (! defined('NOREQUIREMENU')) require_once(DOL_DOCUMENT_ROOT .\"/core/class/menu.class.php\");\t\t\t// Need 10ko memory (11ko in 2.2)\nif (! defined('NOREQUIREHTML')) require_once(DOL_DOCUMENT_ROOT .\"/core/class/html.form.class.php\");\t    // Need 660ko memory (800ko in 2.2)\nif (! defined('NOREQUIREAJAX') && $conf->use_javascript_ajax) require_once(DOL_DOCUMENT_ROOT.'/lib/ajax.lib.php');\t// Need 22ko memory\n//dol_stopwithmem();\n\n// If install or upgrade process not done or not completely finished, we call the install page.\nif (! empty($conf->global->MAIN_NOT_INSTALLED) || ! empty($conf->global->MAIN_NOT_UPGRADED))\n{\n\tdol_syslog(\"main.inc: A previous install or upgrade was not complete. Redirect to install page.\", LOG_WARNING);\n\tHeader(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n\texit;\n}\n// If an upgrade process is required, we call the install page.\nif ((! empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ($conf->global->MAIN_VERSION_LAST_UPGRADE != DOL_VERSION))\n|| (empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ! empty($conf->global->MAIN_VERSION_LAST_INSTALL) && ($conf->global->MAIN_VERSION_LAST_INSTALL != DOL_VERSION)))\n{\n    $versiontocompare=empty($conf->global->MAIN_VERSION_LAST_UPGRADE)?$conf->global->MAIN_VERSION_LAST_INSTALL:$conf->global->MAIN_VERSION_LAST_UPGRADE;\n    require_once(DOL_DOCUMENT_ROOT .\"/lib/admin.lib.php\");\n\t$dolibarrversionlastupgrade=preg_split('/[.-]/',$versiontocompare);\n\t$dolibarrversionprogram=preg_split('/[.-]/',DOL_VERSION);\n    $rescomp=versioncompare($dolibarrversionprogram,$dolibarrversionlastupgrade);\n    if ($rescomp > 0)   // Programs have a version higher than database. We did not add \"&& $rescomp < 3\" because we want upgrade process for build upgrades\n\t{\n\t\tdol_syslog(\"main.inc: database version \".$versiontocompare.\" is lower than programs version \".DOL_VERSION.\". Redirect to install page.\", LOG_WARNING);\n\t\tHeader(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n\t\texit;\n\t}\n}\n\n// Creation of a token against CSRF vulnerabilities\nif (! defined('NOTOKENRENEWAL'))\n{\n\t$token = md5(uniqid(mt_rand(),TRUE)); // Genere un hash d'un nombre aleatoire\n\t// roulement des jetons car cree a chaque appel\n\tif (isset($_SESSION['newtoken'])) $_SESSION['token'] = $_SESSION['newtoken'];\n\t$_SESSION['newtoken'] = $token;\n}\nif (! empty($conf->global->MAIN_SECURITY_CSRF))\t// Check validity of token, only if option enabled (this option breaks some features sometimes)\n{\n\tif (isset($_POST['token']) && isset($_SESSION['token']))\n\t{\n\t\tif (($_POST['token'] != $_SESSION['token']))\n\t\t{\n\t\t\tdol_syslog(\"Invalid token in \".$_SERVER['HTTP_REFERER'].\", action=\".$_POST['action'].\", _POST['token']=\".$_POST['token'].\", _SESSION['token']=\".$_SESSION['token'],LOG_WARNING);\n\t\t\t//print 'Unset POST by CSRF protection in main.inc.php.';\t// Do not output anything because this create problems when using the BACK button on browsers.\n\t\t\tunset($_POST);\n\t\t}\n\t}\n}\n\n// Disable modules (this must be after session_start and after conf has been loaded)\nif (GETPOST('disablemodules'))  $_SESSION[\"disablemodules\"]=GETPOST('disablemodules');\nif (! empty($_SESSION[\"disablemodules\"]))\n{\n\t$disabled_modules=explode(',',$_SESSION[\"disablemodules\"]);\n\tforeach($disabled_modules as $module)\n\t{\n\t\tif ($module) $conf->$module->enabled=false;\n\t}\n}\n\n\n/*\n * Phase authentication / login\n */\n$login='';\nif (! defined('NOLOGIN'))\n{\n\t// $authmode lists the different means of identification to be tested in order of preference.\n\t// Example: 'http'\n\t// Example: 'dolibarr'\n\t// Example: 'ldap'\n\t// Example: 'http,forceuser'\n\n\t// Authentication mode\n\tif (empty($dolibarr_main_authentication)) $dolibarr_main_authentication='http,dolibarr';\n\t// Authentication mode: forceuser\n\tif ($dolibarr_main_authentication == 'forceuser' && empty($dolibarr_auto_user)) $dolibarr_auto_user='auto';\n\n\t// Set authmode\n\t$authmode=explode(',',$dolibarr_main_authentication);\n\n\t// No authentication mode\n\tif (! sizeof($authmode) && empty($conf->login_method_modules))\n\t{\n\t\t$langs->load('main');\n\t\tdol_print_error('',$langs->trans(\"ErrorConfigParameterNotDefined\",'dolibarr_main_authentication'));\n\t\texit;\n\t}\n\n\t// If requested by the login has already occurred, it is retrieved from the session\n\t// Call module if not realized that his request.\n\t// At the end of this phase, the variable $login is defined.\n\t$resultFetchUser='';\n\t$test=true;\n\tif (! isset($_SESSION[\"dol_login\"]))\n\t{\n\t\t// It is not already authenticated, it requests the login / password\n\n\t    // If in demo mode, we check we go to home page through the public/demo/index.php page\n\t    if ($dolibarr_main_demo && $_SERVER['PHP_SELF'] == DOL_URL_ROOT.'/index.php')  // We ask index page\n        {\n            if (! preg_match('/public/',$_SERVER['HTTP_REFERER']))\n            {\n                dol_syslog(\"Call index page from another url than demo page\");\n                header(\"Location: \".DOL_URL_ROOT.'/public/demo/index.php');\n                exit;\n            }\n        }\n\n\t\t// Verification security graphic code\n\t\tif (isset($_POST[\"username\"]) && ! empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA))\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/includes/artichow/Artichow.cfg.php';\n\t\t\trequire_once ARTICHOW.\"/AntiSpam.class.php\";\n\n\t\t\t// It creates an anti-spam object\n\t\t\t$object = new AntiSpam();\n\n\t\t\t// Verifie code\n\t\t\tif (! $object->check('dol_antispam_value',$_POST['code'],true))\n\t\t\t{\n\t\t\t\tdol_syslog('Bad value for code, connexion refused');\n\t\t\t\t$langs->load('main');\n\t\t\t\t$langs->load('other');\n\n\t\t\t\t$user->trigger_mesg='ErrorBadValueForCode - login='.$_POST[\"username\"];\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadValueForCode\");\n\t\t\t\t$test=false;\n\n\t\t\t\t// Appel des triggers\n\t\t\t\tinclude_once(DOL_DOCUMENT_ROOT . \"/core/class/interfaces.class.php\");\n\t\t\t\t$interface=new Interfaces($db);\n\t\t\t\t$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,GETPOST('entity'));\n\t\t\t\tif ($result < 0) { $error++; }\n\t\t\t\t// Fin appel triggers\n\t\t\t}\n\t\t}\n\n\t\t// Validation of login with a third party login module method\n\t\tif (is_array($conf->login_method_modules) && !empty($conf->login_method_modules))\n\t\t{\n\t\t\tinclude_once(DOL_DOCUMENT_ROOT . \"/lib/security.lib.php\");\n\t\t\t$login = getLoginMethod();\n\t\t\tif ($login)\t$test=false;\n\t\t}\n\n\t\t// Validation tests user / password\n\t\t// If ok, the variable will be initialized login\n\t\t// If error, we will put error message in session under the name dol_loginmesg\n\t\t$goontestloop=false;\n\t\tif (isset($_SERVER[\"REMOTE_USER\"]) && in_array('http',$authmode)) $goontestloop=true;\n\t\tif (isset($_POST[\"username\"]) || GETPOST('openid_mode','alpha',1)) $goontestloop=true;\n\n\t\tif ($test && $goontestloop)\n\t\t{\n\t\t\tforeach($authmode as $mode)\n\t\t\t{\n\t\t\t\tif ($test && $mode && ! $login)\n\t\t\t\t{\n\t\t\t\t\t$authfile=DOL_DOCUMENT_ROOT.'/includes/login/functions_'.$mode.'.php';\n\t\t\t\t\t$result=include_once($authfile);\n\t\t\t\t\tif ($result)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Call function to check user/password\n\t\t\t\t\t\t$usertotest=$_POST[\"username\"];\n\t\t\t\t\t\t$passwordtotest=$_POST[\"password\"];\n\t\t\t\t\t\t$entitytotest=$_POST[\"entity\"];\n\t\t\t\t\t\t$function='check_user_password_'.$mode;\n\t\t\t\t\t\t$login=$function($usertotest,$passwordtotest,$entitytotest);\n\t\t\t\t\t\tif ($login)\t// Login is successfull\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$test=false;\n\t\t\t\t\t\t\t$dol_authmode=$mode;\t// This properties is defined only when logged to say what mode was successfully used\n\t\t\t\t\t\t\t$dol_tz=$_POST[\"tz\"];\n\t\t\t\t\t\t\t$dol_dst=$_POST[\"dst\"];\n\t\t\t\t\t\t\t$dol_screenwidth=$_POST[\"screenwidth\"];\n\t\t\t\t\t\t\t$dol_screenheight=$_POST[\"screenheight\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tdol_syslog(\"Authentification ko - failed to load file '\".$authfile.\"'\",LOG_ERR);\n\t\t\t\t\t\tsleep(1);\n\t\t\t\t\t\t$langs->load('main');\n\t\t\t\t\t\t$langs->load('other');\n\t\t\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorFailedToLoadLoginFileForMode\",$mode);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (! $login)\n\t\t\t{\n\t\t\t\tdol_syslog('Bad password, connexion refused',LOG_DEBUG);\n\t\t\t\t$langs->load('main');\n\t\t\t\t$langs->load('other');\n\n\t\t\t\t// Bad password. No authmode has found a good password.\n\t\t\t\t$user->trigger_mesg=$langs->trans(\"ErrorBadLoginPassword\").' - login='.$_POST[\"username\"];\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadLoginPassword\");\n\n\t\t\t\t// Appel des triggers\n\t\t\t\tinclude_once(DOL_DOCUMENT_ROOT . \"/core/class/interfaces.class.php\");\n\t\t\t\t$interface=new Interfaces($db);\n\t\t\t\t$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,$_POST[\"entity\"]);\n\t\t\t\tif ($result < 0) { $error++; }\n\t\t\t\t// Fin appel triggers\n\t\t\t}\n\t\t}\n\n\t\t// End test login / passwords\n\t\tif (! $login)\n\t\t{\n\t\t\t// We show login page\n\t\t\tinclude_once(DOL_DOCUMENT_ROOT.\"/lib/security.lib.php\");\n\t\t\tif (! is_object($langs)) // This can occurs when calling page with NOREQUIRETRAN defined\n\t\t\t{\n                include_once(DOL_DOCUMENT_ROOT.\"/core/class/translate.class.php\");\n\t\t\t\t$langs=new Translate(\"\",$conf);\n\t\t\t}\n\t\t\tdol_loginfunction($langs,$conf,$mysoc);\n\t\t\texit;\n\t\t}\n\n\t\t$resultFetchUser=$user->fetch('',$login);\n\t\tif ($resultFetchUser <= 0)\n\t\t{\n\t\t\tdol_syslog('User not found, connexion refused');\n\t\t\tsession_destroy();\n\t\t\tsession_name($sessionname);\n\t\t\tsession_start();\n\n\t\t\tif ($resultFetchUser == 0)\n\t\t\t{\n\t\t\t\t$langs->load('main');\n\t\t\t\t$langs->load('other');\n\n\t\t\t\t$user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\",$login);\n\t\t\t}\n\t\t\tif ($resultFetchUser < 0)\n\t\t\t{\n\t\t\t\t$user->trigger_mesg=$user->error;\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$user->error;\n\t\t\t}\n\n\t\t\t// Call triggers\n\t\t\tinclude_once(DOL_DOCUMENT_ROOT . \"/core/class/interfaces.class.php\");\n\t\t\t$interface=new Interfaces($db);\n\t\t\t$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,$_POST[\"entity\"]);\n\t\t\tif ($result < 0) { $error++; }\n\t\t\t// End call triggers\n\n\t\t\theader('Location: '.DOL_URL_ROOT.'/index.php');\n\t\t\texit;\n\t\t}\n\t}\n\telse\n\t{\n\t\t// We are already into an authenticated session\n\t\t$login=$_SESSION[\"dol_login\"];\n\t\tdol_syslog(\"This is an already logged session. _SESSION['dol_login']=\".$login);\n\n\t\t$resultFetchUser=$user->fetch('',$login);\n\t\tif ($resultFetchUser <= 0)\n\t\t{\n\t\t\t// Account has been removed after login\n\t\t\tdol_syslog(\"Can't load user even if session logged. _SESSION['dol_login']=\".$login, LOG_WARNING);\n\t\t\tsession_destroy();\n\t\t\tsession_name($sessionname);\n\t\t\tsession_start();\n\n\t\t\tif ($resultFetchUser == 0)\n\t\t\t{\n\t\t\t\t$langs->load('main');\n\t\t\t\t$langs->load('other');\n\n\t\t\t\t$user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\",$login);\n\t\t\t}\n\t\t\tif ($resultFetchUser < 0)\n\t\t\t{\n\t\t\t\t$user->trigger_mesg=$user->error;\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$user->error;\n\t\t\t}\n\n\t\t\t// Call triggers\n\t\t\tinclude_once(DOL_DOCUMENT_ROOT . \"/core/class/interfaces.class.php\");\n\t\t\t$interface=new Interfaces($db);\n\t\t\t$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,(isset($_POST[\"entity\"])?$_POST[\"entity\"]:0));\n\t\t\tif ($result < 0) { $error++; }\n\t\t\t// End call triggers\n\n\t\t\theader('Location: '.DOL_URL_ROOT.'/index.php');\n\t\t\texit;\n\t\t}\n\t\telse\n\t\t{\n\t\t    if (! empty($conf->MAIN_ACTIVATE_UPDATESESSIONTRIGGER))\t// We do not execute such trigger at each page load by default\n\t\t    {\n    \t\t\t// Call triggers\n    \t\t\tinclude_once(DOL_DOCUMENT_ROOT . \"/core/class/interfaces.class.php\");\n    \t\t\t$interface=new Interfaces($db);\n    \t\t\t$result=$interface->run_triggers('USER_UPDATE_SESSION',$user,$user,$langs,$conf,$conf->entity);\n    \t\t\tif ($result < 0) { $error++; }\n    \t\t\t// End call triggers\n\t\t    }\n\t\t}\n\t}\n\n\t// Is it a new session that has started ?\n\t// If we are here this means authentication was successfull.\n\tif (! isset($_SESSION[\"dol_login\"]))\n\t{\n\t\t$error=0;\n\n\t\t// New session for this login\n\t\t$_SESSION[\"dol_login\"]=$user->login;\n\t\t$_SESSION[\"dol_authmode\"]=isset($dol_authmode)?$dol_authmode:'';\n\t\t$_SESSION[\"dol_tz\"]=isset($dol_tz)?$dol_tz:'';\n\t\t$_SESSION[\"dol_dst\"]=isset($dol_dst)?$dol_dst:'';\n\t\t$_SESSION[\"dol_screenwidth\"]=isset($dol_screenwidth)?$dol_screenwidth:'';\n\t\t$_SESSION[\"dol_screenheight\"]=isset($dol_screenheight)?$dol_screenheight:'';\n\t\t$_SESSION[\"dol_company\"]=$conf->global->MAIN_INFO_SOCIETE_NOM;\n\t\tif ($conf->multicompany->enabled) $_SESSION[\"dol_entity\"]=$conf->entity;\n\t\tdol_syslog(\"This is a new started user session. _SESSION['dol_login']=\".$_SESSION[\"dol_login\"].' Session id='.session_id());\n\n\t\t$db->begin();\n\n\t\t$user->update_last_login_date();\n\n\t\t// Call triggers\n\t\tinclude_once(DOL_DOCUMENT_ROOT . \"/core/class/interfaces.class.php\");\n\t\t$interface=new Interfaces($db);\n\t\t$result=$interface->run_triggers('USER_LOGIN',$user,$user,$langs,$conf,$_POST[\"entity\"]);\n\t\tif ($result < 0) { $error++; }\n\t\t// End call triggers\n\n\t\tif ($error)\n\t\t{\n\t\t\t$db->rollback();\n\t\t\tsession_destroy();\n\t\t\tdol_print_error($db,'Error in some triggers on action USER_LOGIN',LOG_ERR);\n\t\t\texit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$db->commit();\n\t\t}\n\n\t\t// Create entity cookie, just used for login page\n\t\tif (!empty($conf->global->MAIN_MODULE_MULTICOMPANY) && !empty($conf->global->MAIN_MULTICOMPANY_COOKIE) && isset($_POST[\"entity\"]))\n\t\t{\n\t\t\tinclude_once(DOL_DOCUMENT_ROOT.\"/core/class/cookie.class.php\");\n\n\t\t\t$entity = $_SESSION[\"dol_login\"].'|'.$_POST[\"entity\"];\n\n\t\t\t$prefix=dol_getprefix();\n\t\t\t$entityCookieName = 'DOLENTITYID_'.$prefix;\n\t\t\t// TTL : is defined in the config page multicompany\n\t\t\t$ttl = (! empty($conf->global->MAIN_MULTICOMPANY_COOKIE_TTL) ? $conf->global->MAIN_MULTICOMPANY_COOKIE_TTL : time()+60*60*8 );\n\t\t\t// Cryptkey : will be created randomly in the config page multicompany\n\t\t\t$cryptkey = (! empty($conf->file->cookie_cryptkey) ? $conf->file->cookie_cryptkey : '' );\n\n\t\t\t$entityCookie = new DolCookie($cryptkey);\n\t\t\t$entityCookie->_setCookie($entityCookieName, $entity, $ttl);\n\t\t}\n\n\t\t// Module webcalendar\n\t\tif (! empty($conf->webcalendar->enabled) && $user->webcal_login != \"\")\n\t\t{\n\t\t\t$domain='';\n\n\t\t\t// Creation of a cookie to save login\n\t\t\t$cookiename='webcalendar_login';\n\t\t\tif (! isset($_COOKIE[$cookiename]))\n\t\t\t{\n\t\t\t\tsetcookie($cookiename, $user->webcal_login, 0, \"/\", $domain, 0);\n\t\t\t}\n\t\t\t// Creation of a cookie to save session\n\t\t\t$cookiename='webcalendar_session';\n\t\t\tif (! isset($_COOKIE[$cookiename]))\n\t\t\t{\n\t\t\t\tsetcookie($cookiename, 'TODO', 0, \"/\", $domain, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Module Phenix\n\t\tif (! empty($conf->phenix->enabled) && $user->phenix_login != \"\" && $conf->phenix->cookie)\n\t\t{\n\t\t\t// Creation du cookie permettant la connexion automatique, valide jusqu'a la fermeture du browser\n\t\t\tif (!isset($_COOKIE[$conf->phenix->cookie]))\n\t\t\t{\n\t\t\t\tsetcookie($conf->phenix->cookie, $user->phenix_login.\":\".$user->phenix_pass_crypted.\":1\", 0, \"/\", \"\", 0);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// If user admin, we force the rights-based modules\n\tif ($user->admin)\n\t{\n\t\t$user->rights->user->user->lire=1;\n\t\t$user->rights->user->user->creer=1;\n\t\t$user->rights->user->user->password=1;\n\t\t$user->rights->user->user->supprimer=1;\n\t\t$user->rights->user->self->creer=1;\n\t\t$user->rights->user->self->password=1;\n\t}\n\n\t/*\n\t * Overwrite configs global by peronal configs\n\t */\n\t// Set liste_limit\n\tif (isset($user->conf->MAIN_SIZE_LISTE_LIMIT))\t// Can be 0\n\t{\n\t\t$conf->liste_limit = $user->conf->MAIN_SIZE_LISTE_LIMIT;\n\t}\n\tif (isset($user->conf->PRODUIT_LIMIT_SIZE))\t\t// Can be 0\n\t{\n\t\t$conf->product->limit_size = $user->conf->PRODUIT_LIMIT_SIZE;\n\t}\n\t// Replace conf->css by personalized value\n\tif (isset($user->conf->MAIN_THEME) && $user->conf->MAIN_THEME)\n\t{\n\t\t$conf->theme=$user->conf->MAIN_THEME;\n\t\t$conf->css  = \"/theme/\".$conf->theme.\"/style.css.php\";\n\t}\n\t// Set javascript option\n    if (! GETPOST('nojs'))   // If javascript was not disabled on URL\n    {\n    \tif (! empty($user->conf->MAIN_DISABLE_JAVASCRIPT))\n    \t{\n    \t\t$conf->use_javascript_ajax=! $user->conf->MAIN_DISABLE_JAVASCRIPT;\n    \t}\n    }\n    else $conf->use_javascript_ajax=0;\n}\n\nif (! defined('NOREQUIRETRAN'))\n{\n\tif (! GETPOST('lang'))\t// If language was not forced on URL\n\t{\n\t\t// If user has chosen its own language\n\t\tif (! empty($user->conf->MAIN_LANG_DEFAULT))\n\t\t{\n\t\t\t// If different than current language\n\t\t\t//print \">>>\".$langs->getDefaultLang().\"-\".$user->conf->MAIN_LANG_DEFAULT;\n\t\t\tif ($langs->getDefaultLang() != $user->conf->MAIN_LANG_DEFAULT)\n\t\t\t{\n\t\t\t\t$langs->setDefaultLang($user->conf->MAIN_LANG_DEFAULT);\n\t\t\t}\n\t\t}\n\t}\n\telse\t// If language was forced on URL\n\t{\n\t\t$langs->setDefaultLang(GETPOST('lang','alpha',1));\n\t}\n}\n\n// Case forcing style from url\nif (GETPOST('theme'))\n{\n\t$conf->theme=GETPOST('theme','alpha',1);\n\t$conf->css  = \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n\n\nif (! defined('NOLOGIN'))\n{\n\t// If the login is not recovered, it is identified with an account that does not exist.\n\t// Hacking attempt?\n\tif (! $user->login) accessforbidden();\n\n\t// Check if user is active\n\tif ($user->statut < 1)\n\t{\n\t\t// If not active, we refuse the user\n\t\t$langs->load(\"other\");\n\t\tdol_syslog (\"Authentification ko as login is disabled\");\n\t\taccessforbidden($langs->trans(\"ErrorLoginDisabled\"));\n\t\texit;\n\t}\n\n\t// Load permissions\n\t$user->getrights();\n}\n\n\ndol_syslog(\"--- Access to \".$_SERVER[\"PHP_SELF\"]);\n//Another call for easy debugg\n//dol_syslog(\"Access to \".$_SERVER[\"PHP_SELF\"].' GET='.join(',',array_keys($_GET)).'->'.join(',',$_GET).' POST:'.join(',',array_keys($_POST)).'->'.join(',',$_POST));\n\n// Load main languages files\nif (! defined('NOREQUIRETRAN'))\n{\n\t$langs->load(\"main\");\n\t$langs->load(\"dict\");\n}\n\n// Define some constants used for style of arrays\n$bc=array(0=>'class=\"impair\"',1=>'class=\"pair\"');\n$bcdd=array(0=>'class=\"impair drag drop\"',1=>'class=\"pair drag drop\"');\n$bcnd=array(0=>'class=\"impair nodrag nodrop\"',1=>'class=\"pair nodrag nodrop\"');\n\n// Constants used to defined number of lines in textarea\nif (empty($conf->browser->firefox))\n{\n\tdefine('ROWS_1',1);\n\tdefine('ROWS_2',2);\n\tdefine('ROWS_3',3);\n\tdefine('ROWS_4',4);\n\tdefine('ROWS_5',5);\n\tdefine('ROWS_6',6);\n\tdefine('ROWS_7',7);\n\tdefine('ROWS_8',8);\n\tdefine('ROWS_9',9);\n}\nelse\n{\n\tdefine('ROWS_1',0);\n\tdefine('ROWS_2',1);\n\tdefine('ROWS_3',2);\n\tdefine('ROWS_4',3);\n\tdefine('ROWS_5',4);\n\tdefine('ROWS_6',5);\n\tdefine('ROWS_7',6);\n\tdefine('ROWS_8',7);\n\tdefine('ROWS_9',8);\n}\n\n$heightforframes=48;\n\n// Switch to another entity\nif (!empty($conf->global->MAIN_MODULE_MULTICOMPANY))\n{\n\tif (GETPOST('action') == 'switchentity' && $user->admin && ! $user->entity)\n\t{\n\t\t$res = @dol_include_once(\"/multicompany/class/actions_multicompany.class.php\");\n\n\t\tif ($res)\n\t\t{\n\t\t\t$mc = new ActionsMulticompany($db);\n\n\t\t\tif($mc->switchEntity(GETPOST('entity')) > 0)\n\t\t\t{\n\t\t\t\tHeader(\"Location: \".DOL_URL_ROOT.'/');\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// Functions\n\nif (! function_exists(\"llxHeader\"))\n{\n\t/**\n\t *\tShow HTML header HTML + BODY + Top menu + left menu + DIV\n\t * \t@param   \thead\t\t\tAdd optionnal head lines\n\t *  @param      title   \t\tTitle of web page\n\t * \t@param      help_url\t\tUrl links to help page\n\t *                              Syntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n\t *                                         For other external page: http://server/url\n\t *  @param      target  \t\tTarget to use in menu links\n\t *\t@param\t\tdisablejs\t\tDo not output links to js (Ex: qd fonction utilisee par sous formulaire Ajax)\n\t *\t@param\t\tdisablehead\t\tDo not output head section\n\t *\t@param\t\tarrayofjs\t\tArray of js files to add in header\n\t *\t@param\t\tarrayofcss\t\tArray of css files to add in header\n\t *  @param\t\tmorequerystring Query string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n\t */\n\tfunction llxHeader($head = '', $title='', $help_url='', $target='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $morequerystring='')\n\t{\n\t\ttop_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss);\t// Show html headers\n\t\ttop_menu($head, $title, $target, $disablejs, $disablehead, $arrayofjs, $arrayofcss, $morequerystring);\n\t\tleft_menu('', $help_url, '', '', 1, $title);\n\t\tmain_area($title);\n\t}\n}\n\n\n/**\n *  Show HTTP header\n */\nfunction top_httphead()\n{\n    global $conf;\n\n    //header(\"Content-type: text/html; charset=UTF-8\");\n    header(\"Content-type: text/html; charset=\".$conf->file->character_set_client);\n\n    // On the fly GZIP compression for all pages (if browser support it). Must set the bit 3 of constant to 1.\n    if (isset($conf->global->MAIN_OPTIMIZE_SPEED) && ($conf->global->MAIN_OPTIMIZE_SPEED & 0x04)) { ob_start(\"ob_gzhandler\"); }\n}\n\n\n/**\n *  Show HTML header\n *  @param      head    \tOptionnal head lines\n *  @param      title   \tWeb page title\n *\t@param\t\tdisablejs\tDo not output links to js (Ex: qd fonction utilisee par sous formulaire Ajax)\n *\t@param\t\tdisablehead\tDo not output head section\n *\t@param\t\tarrayofjs\tArray of js files to add in header\n *\t@param\t\tarrayofcss\tArray of css files to add in header\n */\nfunction top_htmlhead($head, $title='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='')\n{\n\tglobal $user, $conf, $langs, $db;\n\n\ttop_httphead();\n\n\tif (empty($conf->css)) $conf->css = '/theme/eldy/style.css.php';\t// If not defined, eldy by default\n\n\tprint '<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">';\n\t//print '<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/1999/REC-html401-19991224/strict.dtd\">';\n\t//print '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">';\n\t//print '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">';\n\t//print '<!DOCTYPE html>';\n\tprint \"\\n\";\n\tprint \"<html>\\n\";\n\t//print '<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"fr\">'.\"\\n\";\n\tif (empty($disablehead))\n\t{\n\t\tprint \"<head>\\n\";\n\n\t\tprint \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=\".$conf->file->character_set_client.\"\\\">\\n\";\n\n\t\t// Displays meta\n\t\tprint '<meta name=\"robots\" content=\"noindex,nofollow\">'.\"\\n\";      // Evite indexation par robots\n\t\tprint '<meta name=\"author\" content=\"Dolibarr Development Team\">'.\"\\n\";\n\t\tprint '<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"'.DOL_URL_ROOT.'/favicon.ico\">'.\"\\n\";\n\n\t\t// Displays title\n\t\t$appli='Dolibarr';\n\t\tif (!empty($conf->global->MAIN_APPLICATION_TITLE)) $appli=$conf->global->MAIN_APPLICATION_TITLE;\n\n\t\tif ($title) print '<title>'.$appli.' - '.$title.'</title>';\n\t\telse print \"<title>\".$appli.\"</title>\";\n\t\tprint \"\\n\";\n\n        if (! defined('DISABLE_JQUERY'))\n        {\n            print '<!-- Includes for JQuery (Ajax library) -->'.\"\\n\";\n            $jquerytheme = 'smoothness';\n            if (!empty($conf->global->MAIN_USE_JQUERY_THEME)) $jquerytheme = $conf->global->MAIN_USE_JQUERY_THEME;\n            print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/css/'.$jquerytheme.'/jquery-ui-latest.custom.css\" />'.\"\\n\";    // JQuery\n            print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tiptip/tipTip.css\" />'.\"\\n\";                           // Tooltip\n            print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify-alt.min.css\" />'.\"\\n\";          // JNotify\n            //print '<link rel=\"stylesheet\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/lightbox/css/jquery.lightbox-0.5.css\" media=\"screen\" />'.\"\\n\";       // Lightbox\n            if (! empty($conf->global->MAIN_USE_JQUERY_FILEUPLOAD))     // jQuery fileupload\n            {\n            \tprint '<link rel=\"stylesheet\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/fileupload/jquery.fileupload-ui.css\" type=\"text/css\" />'.\"\\n\";\n            }\n        }\n\n        print '<!-- Includes for Dolibarr, modules or specific pages-->'.\"\\n\";\n        // Output style sheets (optioncss='print' or '')\n        $themepath=dol_buildpath((empty($conf->global->MAIN_FORCETHEMEDIR)?'':$conf->global->MAIN_FORCETHEMEDIR).$conf->css,1);\n        //print 'themepath='.$themepath;exit;\n\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" title=\"default\" href=\"'.$themepath.'?lang='.$langs->defaultlang.'&theme='.$conf->theme.(GETPOST('optioncss')?'&optioncss='.GETPOST('optioncss','alpha',1):'').'\">'.\"\\n\";\n\t\t// CSS forced by modules (relative url starting with /)\n\t\tif (is_array($conf->css_modules))\n\t\t{\n\t\t\tforeach($conf->css_modules as $cssfile)\n\t\t\t{\t// cssfile is an absolute path\n\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" title=\"default\" href=\"'.dol_buildpath($cssfile,1);\n                // We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters and browser cache is not used.\n\t\t\t\tif (!preg_match('/\\.css$/i',$cssfile)) print '?lang='.$langs->defaultlang.'&theme='.$conf->theme.(GETPOST('optioncss')?'&optioncss='.GETPOST('optioncss','alpha',1):'');\n\t\t\t\tprint '\">'.\"\\n\";\n\t\t\t}\n\t\t}\n\t\t// CSS forced by page in top_htmlhead call (relative url starting with /)\n\t\tif (is_array($arrayofcss))\n\t\t{\n\t\t\tforeach($arrayofcss as $cssfile)\n\t\t\t{\n\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" title=\"default\" href=\"'.dol_buildpath($cssfile,1);\n                // We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters and browser cache is not used.\n\t\t\t\tif (!preg_match('/\\.css$/i',$cssfile)) print '?lang='.$langs->defaultlang.'&theme='.$conf->theme.(GETPOST('optioncss')?'&optioncss='.GETPOST('optioncss','alpha',1):'');\n\t\t\t\tprint '\">'.\"\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"top\" title=\"'.$langs->trans(\"Home\").'\" href=\"'.(DOL_URL_ROOT?DOL_URL_ROOT:'/').'\">'.\"\\n\";\n\t\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"copyright\" title=\"GNU General Public License\" href=\"http://www.gnu.org/copyleft/gpl.html#SEC1\">'.\"\\n\";\n\t\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"author\" title=\"Dolibarr Development Team\" href=\"http://www.dolibarr.org\">'.\"\\n\";\n\n\t\t// Output standard javascript links\n\t\tif (! $disablejs && $conf->use_javascript_ajax)\n\t\t{\n\t\t\t// Other external js\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/lib/ajax.lib.php';\n\n\t\t\t$ext='.js';\n\t\t\tif (isset($conf->global->MAIN_OPTIMIZE_SPEED) && ($conf->global->MAIN_OPTIMIZE_SPEED & 0x01)) { $ext='.jgz'; }\t// mini='_mini', ext='.gz'\n\n\t\t\t// JQuery. Must be before other includes\n\t\t\tprint '<!-- Includes JS for JQuery -->'.\"\\n\";\n            print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-latest.min'.$ext.'\"></script>'.\"\\n\";\n\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-ui-latest.custom.min'.$ext.'\"></script>'.\"\\n\";\n\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tablednd/jquery.tablednd_0_5'.$ext.'\"></script>'.\"\\n\";\n            print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tiptip/jquery.tipTip.min'.$ext.'\"></script>'.\"\\n\";\n            //print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/lightbox/js/jquery.lightbox-0.5.min'.$ext.'\"></script>'.\"\\n\";\n            // jQuery Layout\n\t\t\tif (!empty($conf->global->MAIN_MENU_USE_JQUERY_LAYOUT) || defined('REQUIRE_JQUERY_LAYOUT'))\n\t\t\t{\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/layout/jquery.layout-latest'.$ext.'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\t// jQuery jnotify\n\t\t\tif (empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY))\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify.min.js\"></script>'.\"\\n\";\n            // Flot\n            print '<!--[if lte IE 8]><script language=\"javascript\" type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/excanvas.min.js\"></script><![endif]-->'.\"\\n\";\n\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.min.js\"></script>'.\"\\n\";\n            print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.pie.min.js\"></script>'.\"\\n\";\n            print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.stack.min.js\"></script>'.\"\\n\";\n            // CKEditor\n            if (!empty($conf->fckeditor->enabled) && !empty($conf->global->FCKEDITOR_EDITORNAME) && $conf->global->FCKEDITOR_EDITORNAME == 'ckeditor')\n            {\n                print '<!-- Includes JS for CKEditor -->'.\"\\n\";\n                print '<script type=\"text/javascript\">var CKEDITOR_BASEPATH = \\''.DOL_URL_ROOT.'/includes/ckeditor/\\';</script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/ckeditor/ckeditor_basic.js\"></script>'.\"\\n\";\n            }\n            // File Upload\n            if (! empty($conf->global->MAIN_USE_JQUERY_FILEUPLOAD))\n            {\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/fileupload/jquery.tmpl.min.js\"></script>'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/fileupload/jquery.iframe-transport.js\"></script>'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/fileupload/jquery.fileupload.js\"></script>'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/fileupload/jquery.fileupload-ui.js\"></script>'.\"\\n\";\n            }\n            // Global js function\n            print '<!-- Includes JS of Dolibarr -->'.\"\\n\";\n            print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/lib/lib_head.js\"></script>'.\"\\n\";\n\t\t}\n\n\t\t// Output module javascript\n\t\tif (is_array($arrayofjs))\n\t\t{\n\t\t\tprint '<!-- Includes JS specific to page -->'.\"\\n\";\n\t\t\tforeach($arrayofjs as $jsfile)\n\t\t\t{\n\t\t\t\tif (preg_match('/^http/i',$jsfile))\n\t\t\t\t{\n\t\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.$jsfile.'\"></script>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (! preg_match('/^\\//',$jsfile)) $jsfile='/'.$jsfile;\t// For backward compatibility\n\t\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.dol_buildpath($jsfile,1).'\"></script>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Define tradMonths javascript array (we define this in datapicker AND in parent page to avoid errors with IE8)\n        print '<script type=\"text/javascript\">'.\"\\n\";\n\t\t$tradMonths=array($langs->trans(\"January\"),\n\t\t$langs->trans(\"February\"),\n\t\t$langs->trans(\"March\"),\n\t\t$langs->trans(\"April\"),\n\t\t$langs->trans(\"May\"),\n\t\t$langs->trans(\"June\"),\n\t\t$langs->trans(\"July\"),\n\t\t$langs->trans(\"August\"),\n\t\t$langs->trans(\"September\"),\n\t\t$langs->trans(\"October\"),\n\t\t$langs->trans(\"November\"),\n\t\t$langs->trans(\"December\")\n\t\t);\n\t\tprint 'var tradMonths = '.json_encode($tradMonths).';'.\"\\n\";\n\n\t\t// Define tradMonthsMin javascript array (we define this in datapicker AND in parent page to avoid errors with IE8)\n\t\t$tradMonthsMin=array($langs->trans(\"JanuaryMin\"),\n\t\t$langs->trans(\"FebruaryMin\"),\n\t\t$langs->trans(\"MarchMin\"),\n\t\t$langs->trans(\"AprilMin\"),\n\t\t$langs->trans(\"MayMin\"),\n\t\t$langs->trans(\"JuneMin\"),\n\t\t$langs->trans(\"JulyMin\"),\n\t\t$langs->trans(\"AugustMin\"),\n\t\t$langs->trans(\"SeptemberMin\"),\n\t\t$langs->trans(\"OctoberMin\"),\n\t\t$langs->trans(\"NovemberMin\"),\n\t\t$langs->trans(\"DecemberMin\")\n\t\t);\n\t\tprint 'var tradMonthsMin = '.json_encode($tradMonthsMin).';'.\"\\n\";\n\n\t\t// Define tradDays javascript array (we define this in datapicker AND in parent page to avoid errors with IE8)\n\t\t$tradDays=array($langs->trans(\"Monday\"),\n\t\t$langs->trans(\"Tuesday\"),\n\t\t$langs->trans(\"Wednesday\"),\n\t\t$langs->trans(\"Thursday\"),\n\t\t$langs->trans(\"Friday\"),\n\t\t$langs->trans(\"Saturday\"),\n\t\t$langs->trans(\"Sunday\")\n\t\t);\n\t\tprint 'var tradDays = '.json_encode($tradDays).';'.\"\\n\";\n\n\t\t// Define tradDaysMin javascript array (we define this in datapicker AND in parent page to avoid errors with IE8)\n\t\t$tradDaysMin=array($langs->trans(\"MondayMin\"),\n\t\t$langs->trans(\"TuesdayMin\"),\n\t\t$langs->trans(\"WednesdayMin\"),\n\t\t$langs->trans(\"ThursdayMin\"),\n\t\t$langs->trans(\"FridayMin\"),\n\t\t$langs->trans(\"SaturdayMin\"),\n\t\t$langs->trans(\"SundayMin\")\n\t\t);\n\t\tprint 'var tradDaysMin = '.json_encode($tradDaysMin).';'.\"\\n\";\n\t\tprint '</script>'.\"\\n\";\n\n\t\tif (! empty($head)) print $head.\"\\n\";\n\t\tif (! empty($conf->global->MAIN_HTML_HEADER)) print $conf->global->MAIN_HTML_HEADER.\"\\n\";\n\n\t\tprint \"</head>\\n\\n\";\n\t}\n\n\t$conf->headerdone=1;\t// To tell header was output\n}\n\n\n/**\n *  Show an HTML header + a BODY + The top menu bar\n *  @param      head    \t\tLines in the HEAD\n *  @param      title   \t\tTitle of web page\n *  @param      target  \t\tTarget to use in menu links\n *\t@param\t\tdisablejs\t\tDo not output links to js (Ex: qd fonction utilisee par sous formulaire Ajax)\n *\t@param\t\tdisablehead\t\tDo not output head section\n *\t@param\t\tarrayofjs\t\tArray of js files to add in header\n *\t@param\t\tarrayofcss\t\tArray of css files to add in header\n *  @param\t\tmorequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n */\nfunction top_menu($head, $title='', $target='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $morequerystring='')\n{\n\tglobal $user, $conf, $langs, $db, $dolibarr_main_authentication;\n\n\t$html=new Form($db);\n\n\tif (! $conf->top_menu)  $conf->top_menu ='eldy_backoffice.php';\n\n\t// For backward compatibility with old modules\n\tif (empty($conf->headerdone)) top_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss);\n\n\tprint '<body id=\"mainbody\">';\n\n\tif ($conf->use_javascript_ajax)\n\t{\n\t\tif ($conf->global->MAIN_MENU_USE_JQUERY_LAYOUT)\n\t\t{\n\t\t\tprint '<script type=\"text/javascript\">\n\t\t\t\tjQuery(document).ready(function () {\n\t\t\t\t\tjQuery(\"body\").layout( layoutSettings );\n\t\t\t\t});\n\t\t\t\tvar layoutSettings = {\n\t\t\t\t\tname: \"mainlayout\",\n\t\t\t\t\tdefaults: {\n\t\t\t\t\t\tuseStateCookie: true,\n\t\t\t\t\t\tsize: \"auto\",\n\t\t\t\t\t\tresizable: false,\n\t\t\t\t\t\t//paneClass: \"none\",\n\t\t\t\t\t\t//resizerClass: \"resizer\",\n\t\t\t\t\t\t//togglerClass: \"toggler\",\n\t\t\t\t\t\t//buttonClass: \"button\",\n\t\t\t\t\t\t//contentSelector: \".content\",\n\t\t\t\t\t\t//contentIgnoreSelector: \"span\",\n\t\t\t\t\t\ttogglerTip_open: \"Close This Pane\",\n\t\t\t\t\t\ttogglerTip_closed: \"Open This Pane\",\n\t\t\t\t\t\tresizerTip:\t\"Resize This Pane\"\n\t\t\t\t\t},\n\t\t\t\t\twest: {\n\t\t\t\t\t\tpaneClass: \"leftContent\",\n\t\t\t\t\t\tspacing_closed:\t14,\n\t\t\t\t\t\ttogglerLength_closed: 14,\n\t\t\t\t\t\ttogglerAlign_closed: \"top\",\n\t\t\t\t\t\t//togglerLength_open: 0,\n\t\t\t\t\t\t//\teffect defaults - overridden on some panes\n\t\t\t\t\t\t//slideTrigger_open:\t\"mouseover\",\n\t\t\t\t\t\t//initClosed:\ttrue,\n\t\t\t\t\t\tfxName:\t\"drop\",\n\t\t\t\t\t\tfxSpeed: \"normal\",\n\t\t\t\t\t\tfxSettings: { easing: \"\" }\n\t\t\t\t\t},\n\t\t\t\t\tnorth: {\n\t\t\t\t\t\tpaneClass: \"none\",\n\t\t\t\t\t\tresizerClass: \"none\",\n\t\t\t\t\t\ttogglerClass: \"none\",\n\t\t\t\t\t\tspacing_open: 0,\n\t\t\t\t\t\ttogglerLength_open:\t0,\n\t\t\t\t\t\ttogglerLength_closed: -1,\n\t\t\t\t\t\tslidable: false,\n\t\t\t\t\t\tfxName:\t\"none\"\n\t\t\t\t\t},\n\t\t\t\t\tcenter: {\n\t\t\t\t\t\tpaneSelector: \"#mainContent\"\n\t\t\t\t\t}\n\t\t\t\t}\n    \t\t</script>';\n\t\t}\n\n\t\tif (! empty($conf->global->MAIN_MENU_USE_JQUERY_ACCORDION))\n\t\t{\n\t\t\tprint \"\\n\".'<script type=\"text/javascript\">\n\t\t\t\t\tjQuery(document).ready(function () {\n\t\t\t\t\t\tjQuery( \".vmenu\" ).accordion({\n\t\t\t\t\t\t\tautoHeight: false,\n\t\t\t\t\t\t\tevent: \"mouseover\",\n\t\t\t\t\t\t\t//collapsible: true,\n\t\t\t\t\t\t\t//active: 2,\n\t\t\t\t\t\t\theader: \"> .blockvmenupair > .menu_titre\"\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\t</script>';\n\t\t}\n\n    \t// Wrapper to show tooltips\n    \tprint \"\\n\".'<script type=\"text/javascript\">\n                    jQuery(document).ready(function () {\n                    \tjQuery(function() {\n                        \t$(\".classfortooltip\").tipTip({maxWidth: \"600px\", edgeOffset: 10, delay: 50, fadeIn: 50, fadeOut: 50});\n                        });\n                    });\n                </script>';\n\t}\n\n\t/*\n\t * Top menu\n\t */\n    $top_menu=isset($conf->browser->phone)?$conf->smart_menu:$conf->top_menu;\n    if (GETPOST('menu')) $top_menu=GETPOST('menu'); // menu=eldy_backoffice.php\n\n\t// Load the top menu manager\n\t$result=dol_include_once(\"/includes/menus/standard/\".$top_menu);\n\tif (! $result)\t// If failed to include, we try with standard\n\t{\n\t\t$top_menu='eldy_backoffice.php';\n\t\tinclude_once(DOL_DOCUMENT_ROOT.\"/includes/menus/standard/\".$top_menu);\n\t}\n\n\n    print \"\\n\".'<!-- Start top horizontal menu '.$top_menu.' -->'.\"\\n\";\n\n    if ($conf->use_javascript_ajax && $conf->global->MAIN_MENU_USE_JQUERY_LAYOUT) print '<div class=\"ui-layout-north\"> <!-- Begin top layout -->'.\"\\n\";\n\n    print '<div id=\"tmenu_tooltip\" class=\"tmenu\">'.\"\\n\";\n\n    // Show menu\n    $menutop = new MenuTop($db);\n\t$menutop->atarget=$target;\n\t$menutop->showmenu();      // This contains a \\n\n\n\tprint \"</div>\\n\";\n\n\t// Link to login card\n\t$loginhtmltext=''; $logintext='';\n\tif ($user->societe_id)\n\t{\n\t\t$thirdpartystatic=new Societe($db);\n\t\t$thirdpartystatic->fetch($user->societe_id);\n\t\t$companylink=' ('.$thirdpartystatic->getNomUrl('','').')';\n\t\t$company=' ('.$langs->trans(\"Company\").': '.$thirdpartystatic->name.')';\n\t}\n\t$logintext='<div class=\"login\"><a href=\"'.DOL_URL_ROOT.'/user/fiche.php?id='.$user->id.'\"';\n\t$logintext.=$menutop->atarget?(' target=\"'.$menutop->atarget.'\"'):'';\n\t$logintext.='>'.$user->login.'</a>';\n\tif ($user->societe_id) $logintext.=$companylink;\n\t$logintext.='</div>';\n\t$loginhtmltext.='<u>'.$langs->trans(\"User\").'</u>';\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"Name\").'</b>: '.$user->getFullName($langs);\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"Login\").'</b>: '.$user->login;\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"Administrator\").'</b>: '.yn($user->admin);\n\t$type=($user->societe_id?$langs->trans(\"External\").$company:$langs->trans(\"Internal\"));\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"Type\").'</b>: '.$type;\n    $loginhtmltext.='<br><b>'.$langs->trans(\"IPAddress\").'</b>: '.$_SERVER[\"REMOTE_ADDR\"];\n\t$loginhtmltext.='<br>';\n\t$loginhtmltext.='<br><u>'.$langs->trans(\"Connection\").'</u>';\n\tif ($conf->global->MAIN_MODULE_MULTICOMPANY) $loginhtmltext.='<br><b>'.$langs->trans(\"ConnectedOnMultiCompany\").'</b>: '.$conf->entity.' (user entity '.$user->entity.')';\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"ConnectedSince\").'</b>: '.dol_print_date($user->datelastlogin,\"dayhour\");\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"PreviousConnexion\").'</b>: '.dol_print_date($user->datepreviouslogin,\"dayhour\");\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"AuthenticationMode\").'</b>: '.$_SESSION[\"dol_authmode\"];\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"CurrentTheme\").'</b>: '.$conf->theme;\n\t$s=picto_from_langcode($langs->getDefaultLang());\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"CurrentUserLanguage\").'</b>: '.($s?$s.' ':'').$langs->getDefaultLang();\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"Browser\").'</b>: '.$conf->browser->name.' ('.$_SERVER['HTTP_USER_AGENT'].')';\n\tif (! empty($conf->browser->phone)) $loginhtmltext.='<br><b>'.$langs->trans(\"Phone\").'</b>: '.$conf->browser->phone;\n\tif (! empty($_SESSION[\"disablemodules\"])) $loginhtmltext.='<br><b>'.$langs->trans(\"DisabledModules\").'</b>: <br>'.join(', ',explode(',',$_SESSION[\"disablemodules\"]));\n\n\t// Link info\n\t$logouthtmltext=''; $logouttext='';\n\t$logouthtmltext=$langs->trans(\"Logout\").'<br>';\n\t//$logouthtmltext.=\"<br>\";\n\tif ($_SESSION[\"dol_authmode\"] != 'forceuser'\n\t&& $_SESSION[\"dol_authmode\"] != 'http')\n\t{\n\t\t$logouttext.='<a href=\"'.DOL_URL_ROOT.'/user/logout.php\"';\n\t\t$logouttext.=$menutop->atarget?(' target=\"'.$menutop->atarget.'\"'):'';\n\t\t$logouttext.='>';\n\t\t$logouttext.='<img class=\"login\" border=\"0\" width=\"14\" height=\"14\" src=\"'.DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/logout.png\"';\n\t\t$logouttext.=' alt=\"'.dol_escape_htmltag($langs->trans(\"Logout\")).'\" title=\"\"';\n\t\t$logouttext.='>';\n\t\t$logouttext.='</a>';\n\t}\n\telse\n\t{\n\t\t$logouttext.='<img class=\"login\" border=\"0\" width=\"14\" height=\"14\" src=\"'.DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/logout.png\"';\n\t\t$logouttext.=' alt=\"'.dol_escape_htmltag($langs->trans(\"Logout\")).'\" title=\"\"';\n\t\t$logouttext.='>';\n\t}\n\n\tprint '<div class=\"login_block\">'.\"\\n\";\n    print '<table class=\"nobordernopadding\" summary=\"\"><tr>';\n\n\tprint $html->textwithtooltip('',$loginhtmltext,2,1,$logintext,'',1);\n\n\t// Select entity\n\tif (! empty($conf->global->MAIN_MODULE_MULTICOMPANY))\n\t{\n\t\tif ($user->admin && ! $user->entity)\n\t\t{\n\t\t\t$res=@dol_include_once('/multicompany/class/actions_multicompany.class.php');\n\n\t\t\tif ($res)\n\t\t\t{\n\t\t\t\t$mc = new ActionsMulticompany($db);\n\t\t\t\t$mc->showInfo($conf->entity);\n\t\t\t}\n\t\t}\n\t}\n\n\tprint $html->textwithtooltip('',$logouthtmltext,2,1,$logouttext,'',1);\n\n\t// Link to print main content area\n\tif (empty($conf->global->MAIN_PRINT_DISABLELINK) && empty($conf->browser->phone))\n\t{\n\t\t$qs=$_SERVER[\"QUERY_STRING\"].($_SERVER[\"QUERY_STRING\"]?'&':'').$morequerystring;\n\t\t$text ='<a href=\"'.$_SERVER[\"PHP_SELF\"].'?'.$qs.($qs?'&':'').'optioncss=print\" target=\"_blank\">';\n\t\t$text.='<img class=\"printer\" border=\"0\" width=\"14\" height=\"14\" src=\"'.DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/printer.png\"';\n\t\t$text.=' title=\"\" alt=\"\">';\n\t\t$text.='</a>';\n\t\tprint $html->textwithtooltip('',$langs->trans(\"PrintContentArea\"),2,1,$text,'',1);\n\t}\n\n\tprint '</tr></table>'.\"\\n\";\n\tprint \"</div>\\n\";\n\n\tif ($conf->use_javascript_ajax && $conf->global->MAIN_MENU_USE_JQUERY_LAYOUT) print \"</div><!-- End top layout -->\\n\";\n\n\tprint \"<!-- End top horizontal menu -->\\n\";\n\n\tif (! $conf->use_javascript_ajax || ! $conf->global->MAIN_MENU_USE_JQUERY_LAYOUT) print '<table width=\"100%\" class=\"notopnoleftnoright\" summary=\"leftmenutable\" id=\"undertopmenu\"><tr>';\n\n\n}\n\n\n/**\n *  Show left menu bar\n *  @param      menu_array_before \t       Table of menu entries to show before entries of menu handler\n *  @param      helppagename    \t       Name of wiki page for help ('' by default).\n * \t\t\t\t                           Syntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t\t\t\t                  For other external page: http://server/url\n *  @param      moresearchform             Search Form Permanent Supplemental\n *  @param      menu_array_after           Table of menu entries to show after entries of menu handler\n *  @param      leftmenuwithoutmainarea    Must be set to 1. 0 by default for backward compatibility with old modules.\n *  @param      title                      Title of web page\n */\nfunction left_menu($menu_array_before, $helppagename='', $moresearchform='', $menu_array_after='', $leftmenuwithoutmainarea=0, $title='')\n{\n\tglobal $user, $conf, $langs, $db;\n\n\t$searchform='';\n\t$bookmarks='';\n\n\tif ($conf->use_javascript_ajax && $conf->global->MAIN_MENU_USE_JQUERY_LAYOUT) print \"\\n\".'<div class=\"ui-layout-west\"> <!-- Begin left layout -->'.\"\\n\";\n\telse print '<td class=\"vmenu\" valign=\"top\">';\n\n\tprint \"\\n\";\n\n\t// Instantiate hooks of thirdparty module\n\tif (is_array($conf->hooks_modules) && !empty($conf->hooks_modules))\n\t{\n\t\trequire_once(DOL_DOCUMENT_ROOT.'/core/class/commonobject.class.php');\n\t\t$object = new CommonObject($db);\n\t\t$object->callHooks(array('searchform','leftblock'));\n\t}\n\n\t// Define $searchform\n\tif ($conf->societe->enabled && $conf->global->MAIN_SEARCHFORM_SOCIETE && $user->rights->societe->lire)\n\t{\n\t\t$langs->load(\"companies\");\n\t\t$searchform.=printSearchForm(DOL_URL_ROOT.'/societe/societe.php', DOL_URL_ROOT.'/societe/societe.php',\n\t\timg_object('','company').' '.$langs->trans(\"ThirdParties\"), 'soc', 'socname');\n\t}\n\n\tif ($conf->societe->enabled && $conf->global->MAIN_SEARCHFORM_CONTACT && $user->rights->societe->lire)\n\t{\n\t\t$langs->load(\"companies\");\n\t\t$searchform.=printSearchForm(DOL_URL_ROOT.'/contact/index.php', DOL_URL_ROOT.'/contact/index.php',\n\t\timg_object('','contact').' '.$langs->trans(\"Contacts\"), 'contact', 'contactname');\n\t}\n\n\tif ((($conf->product->enabled && $user->rights->produit->lire) || ($conf->service->enabled && $user->rights->service->lire))\n\t&& $conf->global->MAIN_SEARCHFORM_PRODUITSERVICE)\n\t{\n\t\t$langs->load(\"products\");\n\t\t$searchform.=printSearchForm(DOL_URL_ROOT.'/product/liste.php', DOL_URL_ROOT.'/product/liste.php',\n\t\timg_object('','product').' '.$langs->trans(\"Products\").\"/\".$langs->trans(\"Services\"), 'products', 'sall');\n\t}\n\n\tif ($conf->adherent->enabled && $conf->global->MAIN_SEARCHFORM_ADHERENT && $user->rights->adherent->lire)\n\t{\n\t\t$langs->load(\"members\");\n\t\t$searchform.=printSearchForm(DOL_URL_ROOT.'/adherents/liste.php', DOL_URL_ROOT.'/adherents/liste.php',\n\t\timg_object('','user').' '.$langs->trans(\"Members\"), 'member', 'sall');\n\t}\n\n\t// Search form hook for external modules\n\tif (! empty($object->hooks))\n\t{\n\t\t$searchform.='<!-- Begin search form hook area -->'.\"\\n\";\n\n\t\tforeach($object->hooks as $hook)\n\t\t{\n\t\t\tif ($hook['type'] == 'searchform' && ! empty($hook['modules']))\n\t\t\t{\n\t\t\t\tforeach($hook['modules'] as $module)\n\t\t\t\t{\n\t\t\t\t\tif (method_exists($module,'printSearchForm')) $searchform.=$module->printSearchForm();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n        $searchform.=\"\\n\".'<!-- End of search form hook area -->'.\"\\n\";\n    }\n\n\t// Define $bookmarks\n\tif ($conf->bookmark->enabled && $user->rights->bookmark->lire)\n\t{\n\t\tinclude_once (DOL_DOCUMENT_ROOT.'/bookmarks/bookmarks.lib.php');\n\t\t$langs->load(\"bookmarks\");\n\n\t\t$bookmarks=printBookmarksList($db, $langs);\n\t}\n\n    $left_menu=isset($conf->browser->phone)?$conf->smart_menu:$conf->top_menu;\n    if (GETPOST('menu')) $left_menu=GETPOST('menu');     // menu=eldy_backoffice.php\n\n    // Load the left menu manager\n\t$result=dol_include_once(\"/includes/menus/standard/\".$left_menu);\n\tif (! $result)\t// If menu manager removed or not found\n\t{\n\t\t$left_menu='eldy_backoffice.php';\n\t\tinclude_once(DOL_DOCUMENT_ROOT .\"/includes/menus/standard/\".$left_menu);\n\t}\n\n    // Left column\n    print '<!-- Begin left area - menu '.$left_menu.' -->'.\"\\n\";\n\n    print '<div class=\"vmenu\">'.\"\\n\";\n\n\t$menuleft=new MenuLeft($db,$menu_array_before,$menu_array_after);\n\t$menuleft->showmenu(); // output menu_array and menu found in database\n\n\n\t// Show other forms\n\tif ($searchform)\n\t{\n\t\tprint \"\\n\";\n\t\tprint \"<!-- Begin SearchForm -->\\n\";\n\t\tprint '<div id=\"blockvmenusearch\" class=\"blockvmenusearch\">'.\"\\n\";\n\t\tprint $searchform;\n\t\tprint '</div>'.\"\\n\";\n\t\tprint \"<!-- End SearchForm -->\\n\";\n\t}\n\n\t// More search form\n\tif ($moresearchform)\n\t{\n\t\tprint $moresearchform;\n\t}\n\n\t// Bookmarks\n\tif ($bookmarks)\n\t{\n\t\tprint \"\\n\";\n\t\tprint \"<!-- Begin Bookmarks -->\\n\";\n\t\tprint '<div id=\"blockvmenubookmarks\" class=\"blockvmenubookmarks\">'.\"\\n\";\n\t\tprint $bookmarks;\n\t\tprint '</div>'.\"\\n\";\n\t\tprint \"<!-- End Bookmarks -->\\n\";\n\t}\n\n\t// Link to Dolibarr wiki pages\n\tif ($helppagename && empty($conf->global->MAIN_HELP_DISABLELINK))\n\t{\n\t\t$langs->load(\"help\");\n\n\t\t$helpbaseurl='';\n\t\t$helppage='';\n\t\t$mode='';\n\n\t\t// Get helpbaseurl, helppage and mode from helppagename and langs\n\t\t$arrayres=getHelpParamFor($helppagename,$langs);\n\t\t$helpbaseurl=$arrayres['helpbaseurl'];\n\t\t$helppage=$arrayres['helppage'];\n\t\t$mode=$arrayres['mode'];\n\n\t\t// Link to help pages\n\t\tif ($helpbaseurl && $helppage)\n\t\t{\n\t\t\tprint '<div id=\"blockvmenuhelp\" class=\"blockvmenuhelp\">';\n\t\t\tprint '<a class=\"help\" target=\"_blank\" title=\"'.$langs->trans($mode == 'wiki' ? 'GoToWikiHelpPage': 'GoToHelpPage');\n\t\t\tif ($mode == 'wiki') print ' - '.$langs->trans(\"PageWiki\").' &quot;'.dol_escape_htmltag(strtr($helppage,'_',' ')).'&quot;';\n\t\t\tprint '\" href=\"';\n\t\t\tprint sprintf($helpbaseurl,urlencode(html_entity_decode($helppage)));\n\t\t\tprint '\">';\n\t\t\tprint img_picto('',DOL_URL_ROOT.'/theme/common/helpdoc.png','',1).' ';\n\t\t\tprint $langs->trans($mode == 'wiki' ? 'OnlineHelp': 'Help');\n\t\t\t//if ($mode == 'wiki') print ' ('.dol_trunc(strtr($helppage,'_',' '),8).')';\n\t\t\tprint '</a>';\n\t\t\tprint '</div>';\n\t\t}\n\t}\n\n    // Link to bugtrack\n\tif (! empty($conf->global->MAIN_SHOW_BUGTRACK_LINK))\n\t{\n\t\t$bugbaseurl='http://savannah.nongnu.org/bugs/?';\n\t\t$bugbaseurl.='func=additem&group=dolibarr&privacy=1&';\n\t\t$bugbaseurl.=\"&details=\";\n\t\t$bugbaseurl.=urlencode(\"\\n\\n\\n\\n\\n-------------\\n\");\n\t\t$bugbaseurl.=urlencode($langs->trans(\"Version\").\": \".DOL_VERSION.\"\\n\");\n\t\t$bugbaseurl.=urlencode($langs->trans(\"Server\").\": \".$_SERVER[\"SERVER_SOFTWARE\"].\"\\n\");\n\t\t$bugbaseurl.=urlencode($langs->trans(\"Url\").\": \".$_SERVER[\"REQUEST_URI\"].\"\\n\");\n\t\tprint '<div class=\"help\"><a class=\"help\" target=\"_blank\" href=\"'.$bugbaseurl.'\">'.$langs->trans(\"FindBug\").'</a></div>';\n\t}\n\tprint \"\\n\";\n\n\tprint \"</div>\\n\";\n\tprint \"<!-- End left vertical menu -->\\n\";\n\n\tprint \"\\n\";\n\n\t// Left block hook for external modules\n\tif (! empty($object->hooks))\n\t{\n\t\tprint '<!-- Begin left block hook area -->'.\"\\n\";\n\n\t\tforeach($object->hooks as $hook)\n\t\t{\n\t\t\tif ($hook['type'] == 'leftblock' && ! empty($hook['modules']))\n\t\t\t{\n\t\t\t\tforeach($hook['modules'] as $module)\n\t\t\t\t{\n\t\t\t\t\tif (method_exists($module,'printLeftBlock')) $module->printLeftBlock();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n        print \"\\n\".'<!-- End of left block hook area -->'.\"\\n\";\n    }\n\n\tif ($conf->use_javascript_ajax && $conf->global->MAIN_MENU_USE_JQUERY_LAYOUT) print '</div> <!-- End left layout -->'.\"\\n\";\n\telse print '</td>';\n\n\tprint \"\\n\";\n\tprint '<!-- End of left area -->'.\"\\n\";\n\tprint \"\\n\";\n    print '<!-- Begin right area -->'.\"\\n\";\n\n\n\tif (empty($leftmenuwithoutmainarea)) main_area($title);\n}\n\n/**\n *  Begin main area\n */\nfunction main_area($title='')\n{\n\tglobal $conf, $langs;\n\n\tif ($conf->use_javascript_ajax && $conf->global->MAIN_MENU_USE_JQUERY_LAYOUT)\n\t{\n\t\tprint '<div id=\"mainContent\"><div class=\"ui-layout-center\"> <!-- begin main layout -->'.\"\\n\";\n\t\tprint '<table width=\"100%\" class=\"notopnoleftnoright\" summary=\"centermenutable\" id=\"undertopmenu\"><tr>';\n\t}\n\n\tprint '<td valign=\"top\">'.\"\\n\";\n\n\tprint \"\\n\";\n\n\tprint '<div class=\"fiche\"> <!-- begin div class=\"fiche\" -->'.\"\\n\";\n    if (preg_match('/^smartphone/',$conf->smart_menu) && isset($conf->browser->phone))\n    {\n        print '<div data-role=\"page\"> <!-- begin div data-role=\"page\" -->';\n\n        print '<div data-role=\"header\" data-nobackbtn=\"false\" data-theme=\"b\">';\n        print '<div id=\"dol-homeheader\">'.\"\\n\";\n        $appli='Dolibarr';\n        if (! empty($conf->global->MAIN_APPLICATION_TITLE)) $appli=$conf->global->MAIN_APPLICATION_TITLE;\n        print $appli;\n        print '</div>'.\"\\n\";\n        print '</div>'.\"\\n\";\n        print \"\\n\";\n\n        print '<div data-role=\"content\"> <!-- begin div data-role=\"content\" -->'.\"\\n\";\n    }\n\tif (! empty($conf->global->MAIN_ONLY_LOGIN_ALLOWED)) print info_admin($langs->trans(\"WarningYouAreInMaintenanceMode\",$conf->global->MAIN_ONLY_LOGIN_ALLOWED));\n}\n\n\n/**\n *  Return helpbaseurl, helppage and mode\n *  @param   helppagename\t\tPage name (EN:xxx,ES:eee,FR:fff...)\n *  @param   langs\t\t\t\tLanguage\n */\nfunction getHelpParamFor($helppagename,$langs)\n{\n\tif (preg_match('/^http/i',$helppagename))\n\t{\n\t\t// If complete URL\n\t\t$helpbaseurl='%s';\n\t\t$helppage=$helppagename;\n\t\t$mode='local';\n\t}\n\telse\n\t{\n\t\t// If WIKI URL\n\t\tif (preg_match('/^es/i',$langs->defaultlang))\n\t\t{\n\t\t\t$helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/ES:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n\t\t}\n\t\tif (preg_match('/^fr/i',$langs->defaultlang))\n\t\t{\n\t\t\t$helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/FR:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n\t\t}\n\t\tif (empty($helppage))\t// If help page not already found\n\t\t{\n\t\t\t$helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/EN:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n\t\t}\n\t\t$mode='wiki';\n\t}\n\treturn array('helpbaseurl'=>$helpbaseurl,'helppage'=>$helppage,'mode'=>$mode);\n}\n\n\n/**\n *  Show a search area\n *  @param   urlaction          Url post\n *  @param   urlobject          Url of the link under the search box\n *  @param   title              Title search area\n *  @param   htmlmodesearch     'search'\n *  @param   htmlinputname      Field Name input form\n */\nfunction printSearchForm($urlaction,$urlobject,$title,$htmlmodesearch='search',$htmlinputname)\n{\n\tglobal $langs;\n\t$ret='';\n\t$ret.='<div class=\"menu_titre\">';\n\t$ret.='<a class=\"vsmenu\" href=\"'.$urlobject.'\">';\n\t$ret.=$title.'</a><br>';\n\t$ret.='</div>';\n\t$ret.='<form action=\"'.$urlaction.'\" method=\"post\">';\n\t$ret.='<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t$ret.='<input type=\"hidden\" name=\"mode\" value=\"search\">';\n\t$ret.='<input type=\"hidden\" name=\"mode-search\" value=\"'.$htmlmodesearch.'\">';\n\t$ret.='<input type=\"text\" class=\"flat\" name=\"'.$htmlinputname.'\" size=\"10\">&nbsp;';\n\t$ret.='<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Go\").'\">';\n\t$ret.=\"</form>\\n\";\n\treturn $ret;\n}\n\n\n/**\n *\t\tShow HTML footer\n *\t\tClose div /DIV data-role=page + /DIV class=fiche + /DIV /DIV main layout + /BODY + /HTML\n * \t\t@param   \tfoot    \t\tA text to add in HTML generated page\n */\nif (! function_exists(\"llxFooter\"))\n{\n\tfunction llxFooter($foot='')\n\t{\n\t\tglobal $conf, $langs, $dolibarr_auto_user, $micro_start_time;\n\n\t\t// Core error message\n\t\tif (defined(\"MAIN_CORE_ERROR\") && constant(\"MAIN_CORE_ERROR\") == 1)\n\t\t{\n\t\t\t// Ajax version\n\t\t\tif ($conf->use_javascript_ajax)\n\t\t\t{\n\t\t\t\t$title = img_warning().' '.$langs->trans('CoreErrorTitle');\n\t\t\t\tprint ajax_dialog($title, $langs->trans('CoreErrorMessage'));\n\t\t\t}\n\t\t\t// html version\n\t\t\telse\n\t\t\t{\n\t\t\t\t$msg = img_warning().' '.$langs->trans('CoreErrorMessage');\n\t\t\t\tprint '<div class=\"error\">'.$msg.'</div>';\n\t\t\t}\n\n\t\t\tdefine(\"MAIN_CORE_ERROR\",0);\n\t\t}\n\n        print \"\\n\\n\";\n        if (preg_match('/^smartphone/',$conf->smart_menu) && isset($conf->browser->phone))\n        {\n            print '</div> <!-- end div data-role=\"content\" -->'.\"\\n\";\n            print '</div> <!-- end div data-role=\"page\" -->'.\"\\n\";\n        }\n\t\tprint '</div> <!-- end div class=\"fiche\" -->'.\"\\n\";\n\n\n\t\tprint \"\\n\".'</td></tr></table> <!-- end right area -->'.\"\\n\";\n\t\tif ($conf->use_javascript_ajax && ! empty($conf->global->MAIN_MENU_USE_JQUERY_LAYOUT)) print '</div></div> <!-- end main layout -->'.\"\\n\";\n\n        print \"\\n\";\n        if ($foot) print '<!-- '.$foot.' -->'.\"\\n\";\n\n        if (! empty($conf->global->MAIN_HTML_FOOTER)) print $conf->global->MAIN_HTML_FOOTER.\"\\n\";\n\n\n\t\t// If there is some logs in buffer to show\n\t\tif (sizeof($conf->logbuffer))\n\t\t{\n\t\t\tprint \"\\n\";\n\t\t\tprint \"<!-- Start of log output\\n\";\n\t\t\t//print '<div class=\"hidden\">'.\"\\n\";\n\t\t\tforeach($conf->logbuffer as $logline)\n\t\t\t{\n\t\t\t\tprint $logline.\"<br>\\n\";\n\t\t\t}\n\t\t\t//print '</div>'.\"\\n\";\n\t\t\tprint \"End of log output -->\\n\";\n\t\t}\n\n\t\t// End of tuning\n        if (! empty($_SERVER['DOL_TUNING']))\n        {\n            $micro_end_time=dol_microtime_float(true);\n            print \"\\n\".'<script type=\"text/javascript\">console.log(\"';\n            if (! empty($conf->global->MEMCACHED_SERVER)) print 'MEMCACHED_SERVER='.$conf->global->MEMCACHED_SERVER.' - ';\n            print 'MAIN_OPTIMIZE_SPEED='.(isset($conf->global->MAIN_OPTIMIZE_SPEED)?$conf->global->MAIN_OPTIMIZE_SPEED:'off');\n            print ' - Build time: '.ceil(1000*($micro_end_time-$micro_start_time)).' ms';\n            if (function_exists(\"memory_get_usage\"))\n            {\n                print ' - Mem: '.memory_get_usage();\n            }\n            if (function_exists(\"xdebug_memory_usage\"))\n            {\n                print ' - XDebug time: '.ceil(1000*xdebug_time_index()).' ms';\n                print ' - XDebug mem: '.xdebug_memory_usage();\n                print ' - XDebug mem peak: '.xdebug_peak_memory_usage();\n            }\n            if (function_exists(\"zend_loader_file_encoded\"))\n            {\n                print ' - Zend encoded file: '.(zend_loader_file_encoded()?'yes':'no');\n            }\n            print '\")</script>'.\"\\n\";\n\n            // Add Xdebug coverage of code\n            if (defined('XDEBUGCOVERAGE')) { var_dump(xdebug_get_code_coverage()); }\n        }\n\n\t\tprint \"</body>\\n\";\n\t\tprint \"</html>\\n\";\n\t}\n}\n\n?>"], "fixing_code": ["<?php\n/* Copyright (C) 2008-2011 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2008-2011 Regis Houssin        <regis@dolibarr.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n * or see http://www.gnu.org/\n */\n\n/**\n *  \\file\t\t\thtdocs/lib/security.lib.php\n *  \\brief\t\t\tSet of function used for dolibarr security\n *  \\version\t\t$Id: security.lib.php,v 1.125 2011/07/31 23:25:15 eldy Exp $\n */\n\n\n/**\n *   Return a login if login/pass was successfull using an external login method\n *   @return\tstring\t\tLogin or ''\n * \t TODO Provide usertotest, passwordtotest and entitytotest by parameters\n */\nfunction getLoginMethod()\n{\n\tglobal $conf,$langs;\n\n\t$login = '';\n\n\tforeach($conf->login_method_modules as $dir)\n\t{\n\t\t// Check if directory exists\n\t\tif (!is_dir($dir)) continue;\n\n\t\t$handle=opendir($dir);\n\t\tif (is_resource($handle))\n\t\t{\n\t\t\twhile (($file = readdir($handle))!==false)\n\t\t\t{\n\t\t\t\tif (is_readable($dir.'/'.$file) && preg_match('/^functions_([^_]+)\\.php/',$file,$reg))\n\t\t\t\t{\n\t\t\t\t\t$authfile = $dir.'/'.$file;\n\t\t\t\t\t$mode = $reg[1];\n\n\t\t\t\t\t$result=include_once($authfile);\n\t\t\t\t\tif ($result)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Call function to check user/password\n\t\t\t\t\t\t$usertotest=$_POST[\"username\"];\n\t\t\t\t\t\t$passwordtotest=$_POST[\"password\"];\n\t\t\t\t\t\t$entitytotest=$_POST[\"entity\"];\n\t\t\t\t\t\t$function='check_user_password_'.$mode;\n\t\t\t\t\t\t$login=$function($usertotest,$passwordtotest,$entitytotest);\n\t\t\t\t\t\tif ($login)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$conf->authmode=$mode;\t// This properties is defined only when logged\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tdol_syslog(\"Authentification ko - failed to load file '\".$authfile.\"'\",LOG_ERR);\n\t\t\t\t\t\tsleep(1);\n\t\t\t\t\t\t$langs->load('main');\n\t\t\t\t\t\t$langs->load('other');\n\t\t\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorFailedToLoadLoginFileForMode\",$mode);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tclosedir($handle);\n\t}\n\treturn $login;\n}\n\n/**\n *\tShow Dolibarr default login page\n *\t@param\t\tlangs\t\tLang object (must be initialized by a new).\n *\t@param\t\tconf\t\tConf object\n *\t@param\t\tmysoc\t\tCompany object\n */\nfunction dol_loginfunction($langs,$conf,$mysoc)\n{\n\tglobal $dolibarr_main_demo,$db;\n\tglobal $smartphone;\n\n\t$langcode=(GETPOST('lang')?((is_object($langs)&&$langs->defaultlang)?$langs->defaultlang:'auto'):GETPOST('lang'));\n\t$langs->setDefaultLang($langcode);\n\n\t$langs->load(\"main\");\n\t$langs->load(\"other\");\n\t$langs->load(\"help\");\n\t$langs->load(\"admin\");\n\n\t$main_authentication=$conf->file->main_authentication;\n\t$session_name=session_name();\n\n\t$dol_url_root = DOL_URL_ROOT;\n\n\t$php_self = $_SERVER['PHP_SELF'];\n\t$php_self.= $_SERVER[\"QUERY_STRING\"]?'?'.$_SERVER[\"QUERY_STRING\"]:'';\n\n\t// Title\n\t$title='Dolibarr '.DOL_VERSION;\n\tif (! empty($conf->global->MAIN_APPLICATION_TITLE)) $title=$conf->global->MAIN_APPLICATION_TITLE;\n\n\t// Select templates\n\tif (preg_match('/^smartphone/',$conf->smart_menu) && isset($conf->browser->phone))\n\t{\n\t\t$template_dir = DOL_DOCUMENT_ROOT.'/theme/phones/smartphone/tpl/';\n\t}\n\telse\n\t{\n\t\tif (file_exists(DOL_DOCUMENT_ROOT.\"/theme/\".$conf->theme.\"/tpl/login.tpl.php\"))\n\t\t{\n\t\t\t$template_dir = DOL_DOCUMENT_ROOT.\"/theme/\".$conf->theme.\"/tpl/\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$template_dir = DOL_DOCUMENT_ROOT.\"/core/tpl/\";\n\t\t}\n\t}\n\n\t$conf->css = \"/theme/\".$conf->theme.\"/style.css.php?lang=\".$langs->defaultlang;\n\t$conf_css = DOL_URL_ROOT.$conf->css;\n\n\t// Set cookie for timeout management\n\t$prefix=dol_getprefix();\n\t$sessiontimeout='DOLSESSTIMEOUT_'.$prefix;\n\tif (! empty($conf->global->MAIN_SESSION_TIMEOUT)) setcookie($sessiontimeout, $conf->global->MAIN_SESSION_TIMEOUT, 0, \"/\", '', 0);\n\n\tif (GETPOST(\"urlfrom\")) $_SESSION[\"urlfrom\"]=GETPOST(\"urlfrom\");\n\telse unset($_SESSION[\"urlfrom\"]);\n\n\tif (! GETPOST(\"username\")) $focus_element='username';\n\telse $focus_element='password';\n\n\t$login_background=DOL_URL_ROOT.'/theme/login_background.png';\n\tif (file_exists(DOL_DOCUMENT_ROOT.'/theme/'.$conf->theme.'/img/login_background.png'))\n\t{\n\t\t$login_background=DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/login_background.png';\n\t}\n\n\t$demologin='';\n\t$demopassword='';\n\tif (! empty($dolibarr_main_demo))\n\t{\n\t\t$tab=explode(',',$dolibarr_main_demo);\n\t\t$demologin=$tab[0];\n\t\t$demopassword=$tab[1];\n\t}\n\n\t// Entity cookie\n\tif (! empty($conf->global->MAIN_MODULE_MULTICOMPANY))\n\t{\n\t\t$lastuser = '';\n\t\t$lastentity = $_POST['entity'];\n\n\t\tif (! empty($conf->global->MAIN_MULTICOMPANY_COOKIE))\n\t\t{\n\t\t\t$prefix=dol_getprefix();\n\t\t\t$entityCookieName = 'DOLENTITYID_'.$prefix;\n\t\t\tif (isset($_COOKIE[$entityCookieName]))\n\t\t\t{\n\t\t\t\tinclude_once(DOL_DOCUMENT_ROOT . \"/core/class/cookie.class.php\");\n\n\t\t\t\t$cryptkey = (! empty($conf->file->cookie_cryptkey) ? $conf->file->cookie_cryptkey : '' );\n\n\t\t\t\t$entityCookie = new DolCookie($cryptkey);\n\t\t\t\t$cookieValue = $entityCookie->_getCookie($entityCookieName);\n\t\t\t\tlist($lastuser, $lastentity) = explode('|', $cookieValue);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Login\n\t$login = (!empty($lastuser)?$lastuser:(GETPOST(\"username\",\"alpha\",2)?GETPOST(\"username\",\"alpha\",2):$demologin));\n\t$password = $demopassword;\n\n\t// Show logo (search in order: small company logo, large company logo, theme logo, common logo)\n\t$width=0;\n\t$rowspan=2;\n\t$urllogo=DOL_URL_ROOT.'/theme/login_logo.png';\n\n\tif (! empty($mysoc->logo_small) && is_readable($conf->mycompany->dir_output.'/logos/thumbs/'.$mysoc->logo_small))\n\t{\n\t\t$urllogo=DOL_URL_ROOT.'/viewimage.php?cache=1&amp;modulepart=companylogo&amp;file='.urlencode('thumbs/'.$mysoc->logo_small);\n\t}\n\telseif (! empty($mysoc->logo) && is_readable($conf->mycompany->dir_output.'/logos/'.$mysoc->logo))\n\t{\n\t\t$urllogo=DOL_URL_ROOT.'/viewimage.php?cache=1&amp;modulepart=companylogo&amp;file='.urlencode($mysoc->logo);\n\t\t$width=128;\n\t}\n\telseif (is_readable(DOL_DOCUMENT_ROOT.'/theme/dolibarr_logo.png'))\n\t{\n\t\t$urllogo=DOL_URL_ROOT.'/theme/dolibarr_logo.png';\n\t}\n\n\t// Entity field\n\t$select_entity='';\n\tif (! empty($conf->global->MAIN_MODULE_MULTICOMPANY) && empty($conf->global->MULTICOMPANY_HIDE_LOGIN_COMBOBOX))\n\t{\n\t\t$rowspan++;\n\n\t\t$res=dol_include_once('/multicompany/class/actions_multicompany.class.php');\n\t\tif ($res)\n\t\t{\n\t\t\t$mc = new ActionsMulticompany($db);\n\n\t\t\t$select_entity=$mc->select_entities($lastentity, 'tabindex=\"3\"');\n\t\t}\n\t}\n\n\t// Security graphical code\n\t$captcha=0;\n\t$captcha_refresh='';\n\tif (function_exists(\"imagecreatefrompng\") && ! empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA))\n\t{\n\t\t$captcha=1;\n\t\t$captcha_refresh=img_refresh();\n\t}\n\n\t// Extra link\n\t$forgetpasslink=0;\n\t$helpcenterlink=0;\n\tif (empty($conf->global->MAIN_SECURITY_DISABLEFORGETPASSLINK) || empty($conf->global->MAIN_HELPCENTER_DISABLELINK))\n\t{\n\t\tif (empty($conf->global->MAIN_SECURITY_DISABLEFORGETPASSLINK))\n\t\t{\n\t\t\t$forgetpasslink=1;\n\t\t}\n\n\t\tif (empty($conf->global->MAIN_HELPCENTER_DISABLELINK))\n\t\t{\n\t\t\t$helpcenterlink=1;\n\t\t}\n\t}\n\n\t// Home message\n\tif (! empty($conf->global->MAIN_HOME))\n\t{\n\t\t$i=0;\n\t\twhile (preg_match('/__\\(([a-zA-Z]+)\\)__/i',$conf->global->MAIN_HOME,$reg) && $i < 100)\n\t\t{\n\t\t\t$conf->global->MAIN_HOME=preg_replace('/__\\('.$reg[1].'\\)__/i',$langs->trans($reg[1]),$conf->global->MAIN_HOME);\n\t\t\t$i++;\n\t\t}\n\t}\n\t$main_home=dol_htmlcleanlastbr($conf->global->MAIN_HOME);\n\n\t// Google AD\n\t$main_google_ad_client = ((! empty($conf->global->MAIN_GOOGLE_AD_CLIENT) && ! empty($conf->global->MAIN_GOOGLE_AD_SLOT))?1:0);\n\n\t$dol_loginmesg = $_SESSION[\"dol_loginmesg\"];\n\n\tinclude($template_dir.'login.tpl.php');\t// To use native PHP\n\n\t$_SESSION[\"dol_loginmesg\"] = '';\n}\n\n/**\n *  Fonction pour initialiser un salt pour la fonction crypt\n *  @param\t\t$type\t\t2=>renvoi un salt pour cryptage DES\n *\t\t\t\t\t\t\t12=>renvoi un salt pour cryptage MD5\n *\t\t\t\t\t\t\tnon defini=>renvoi un salt pour cryptage par defaut\n *\t@return\t\tstring\t\tChaine salt\n */\nfunction makesalt($type=CRYPT_SALT_LENGTH)\n{\n\tdol_syslog(\"security.lib.php::makesalt type=\".$type);\n\tswitch($type)\n\t{\n\t\tcase 12:\t// 8 + 4\n\t\t\t$saltlen=8; $saltprefix='$1$'; $saltsuffix='$'; break;\n\t\tcase 8:\t\t// 8 + 4 (Pour compatibilite, ne devrait pas etre utilise)\n\t\t\t$saltlen=8; $saltprefix='$1$'; $saltsuffix='$'; break;\n\t\tcase 2:\t\t// 2\n\t\tdefault: \t// by default, fall back on Standard DES (should work everywhere)\n\t\t\t$saltlen=2; $saltprefix=''; $saltsuffix=''; break;\n\t}\n\t$salt='';\n\twhile(dol_strlen($salt) < $saltlen) $salt.=chr(mt_rand(64,126));\n\n\t$result=$saltprefix.$salt.$saltsuffix;\n\tdol_syslog(\"security.lib.php::makesalt return=\".$result);\n\treturn $result;\n}\n\n/**\n *  Encode or decode database password in config file\n *  @param   \tlevel   \tEncode level: 0 no encoding, 1 encoding\n *\t@return\t\tint\t\t\t<0 if KO, >0 if OK\n */\nfunction encodedecode_dbpassconf($level=0)\n{\n\tdol_syslog(\"security.lib::encodedecode_dbpassconf level=\".$level, LOG_DEBUG);\n\t$config = '';\n\t$passwd='';\n\t$passwd_crypted='';\n\n\tif ($fp = fopen(DOL_DOCUMENT_ROOT.'/conf/conf.php','r'))\n\t{\n\t\twhile(!feof($fp))\n\t\t{\n\t\t\t$buffer = fgets($fp,4096);\n\n\t\t\t$lineofpass=0;\n\n\t\t\tif (preg_match('/^[^#]*dolibarr_main_db_encrypted_pass[\\s]*=[\\s]*(.*)/i',$buffer,$reg))\t// Old way to save crypted value\n\t\t\t{\n\t\t\t\t$val = trim($reg[1]);\t// This also remove CR/LF\n\t\t\t\t$val=preg_replace('/^[\"\\']/','',$val);\n\t\t\t\t$val=preg_replace('/[\"\\'][\\s;]*$/','',$val);\n\t\t\t\tif (! empty($val))\n\t\t\t\t{\n\t\t\t\t\t$passwd_crypted = $val;\n\t\t\t\t\t$val = dol_decode($val);\n\t\t\t\t\t$passwd = $val;\n\t\t\t\t\t$lineofpass=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\telseif (preg_match('/^[^#]*dolibarr_main_db_pass[\\s]*=[\\s]*(.*)/i',$buffer,$reg))\n\t\t\t{\n\t\t\t\t$val = trim($reg[1]);\t// This also remove CR/LF\n\t\t\t\t$val=preg_replace('/^[\"\\']/','',$val);\n\t\t\t\t$val=preg_replace('/[\"\\'][\\s;]*$/','',$val);\n\t\t\t\tif (preg_match('/crypted:/i',$buffer))\n\t\t\t\t{\n\t\t\t\t\t$val = preg_replace('/crypted:/i','',$val);\n\t\t\t\t\t$passwd_crypted = $val;\n\t\t\t\t\t$val = dol_decode($val);\n\t\t\t\t\t$passwd = $val;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$passwd = $val;\n\t\t\t\t\t$val = dol_encode($val);\n\t\t\t\t\t$passwd_crypted = $val;\n\t\t\t\t}\n\t\t\t\t$lineofpass=1;\n\t\t\t}\n\n\t\t\t// Output line\n\t\t\tif ($lineofpass)\n\t\t\t{\n\t\t\t\t// Add value at end of file\n\t\t\t\tif ($level == 0)\n\t\t\t\t{\n\t\t\t\t\t$config .= '$dolibarr_main_db_pass=\"'.$passwd.'\";'.\"\\n\";\n\t\t\t\t}\n\t\t\t\tif ($level == 1)\n\t\t\t\t{\n\t\t\t\t\t$config .= '$dolibarr_main_db_pass=\"crypted:'.$passwd_crypted.'\";'.\"\\n\";\n\t\t\t\t}\n\n\t\t\t\t//print 'passwd = '.$passwd.' - passwd_crypted = '.$passwd_crypted;\n\t\t\t\t//exit;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$config .= $buffer;\n\t\t\t}\n\t\t}\n\t\tfclose($fp);\n\n\t\t// Write new conf file\n\t\t$file=DOL_DOCUMENT_ROOT.'/conf/conf.php';\n\t\tif ($fp = @fopen($file,'w'))\n\t\t{\n\t\t\tfputs($fp, $config, dol_strlen($config));\n\t\t\tfclose($fp);\n\t\t\t// It's config file, so we set read permission for creator only.\n\t\t\t// Should set permission to web user and groups for users used by batch\n\t\t\t//@chmod($file, octdec('0600'));\n\n\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_syslog(\"security.lib::encodedecode_dbpassconf Failed to open conf.php file for writing\", LOG_WARNING);\n\t\t\treturn -1;\n\t\t}\n\t}\n\telse\n\t{\n\t\tdol_syslog(\"security.lib::encodedecode_dbpassconf Failed to read conf.php\", LOG_ERR);\n\t\treturn -2;\n\t}\n}\n\n/**\n *\tEncode a string\n *\t@param   chain\t\t\tchaine de caracteres a encoder\n *\t@return  string_coded  \tchaine de caracteres encodee\n */\nfunction dol_encode($chain)\n{\n\tfor($i=0;$i<dol_strlen($chain);$i++)\n\t{\n\t\t$output_tab[$i] = chr(ord(substr($chain,$i,1))+17);\n\t}\n\n\t$string_coded = base64_encode(implode(\"\",$output_tab));\n\treturn $string_coded;\n}\n\n/**\n *\tDecode a string\n *\t@param   chain    chaine de caracteres a decoder\n *\t@return  string_coded  chaine de caracteres decodee\n */\nfunction dol_decode($chain)\n{\n\t$chain = base64_decode($chain);\n\n\tfor($i=0;$i<dol_strlen($chain);$i++)\n\t{\n\t\t$output_tab[$i] = chr(ord(substr($chain,$i,1))-17);\n\t}\n\n\t$string_decoded = implode(\"\",$output_tab);\n\treturn $string_decoded;\n}\n\n\n/**\n * Return array of ciphers mode available\n * @return strAv\tConfiguration file content\n */\nfunction dol_efc_config()\n{\n\t// Make sure we can use mcrypt_generic_init\n\tif (!function_exists(\"mcrypt_generic_init\"))\n\t{\n\t\treturn -1;\n\t}\n\n\t// Set a temporary $key and $data for encryption tests\n\t$key = md5(time() . getmypid());\n\t$data = mt_rand();\n\n\t// Get and sort available cipher methods\n\t$ciphers = mcrypt_list_algorithms();\n\tnatsort($ciphers);\n\n\t// Get and sort available cipher modes\n\t$modes = mcrypt_list_modes();\n\tnatsort($modes);\n\n\tforeach ($ciphers as $cipher)\n\t{\n\t\tforeach ($modes as $mode)\n\t\t{\n\t\t\t// Not Compatible\n\t\t\t$result = 'false';\n\n\t\t\t// open encryption module\n\t\t\t$td = @mcrypt_module_open($cipher, '', $mode, '');\n\n\t\t\t// if we could open the cipher\n\t\t\tif ($td)\n\t\t\t{\n\t\t\t\t// try to generate the iv\n\t\t\t\t$iv = @mcrypt_create_iv(mcrypt_enc_get_iv_size ($td), MCRYPT_RAND);\n\n\t\t\t\t// if we could generate the iv\n\t\t\t\tif ($iv)\n\t\t\t\t{\n\t\t\t\t\t// initialize encryption\n\t\t\t\t\t@mcrypt_generic_init ($td, $key, $iv);\n\n\t\t\t\t\t// encrypt data\n\t\t\t\t\t$encrypted_data = mcrypt_generic($td, $data);\n\n\t\t\t\t\t// cleanup\n\t\t\t\t\tmcrypt_generic_deinit($td);\n\n\t\t\t\t\t// No error issued\n\t\t\t\t\t$result = 'true';\n\t\t\t\t}\n\n\t\t\t\t// close\n\t\t\t\t@mcrypt_module_close($td);\n\t\t\t}\n\n\t\t\tif ($result == \"true\") $available[\"$cipher\"][] = $mode;\n\t\t}\n\t}\n\n\tif (count($available) > 0)\n\t{\n\t\t// Content of configuration\n\t\t$strAv = \"<?php\\n\";\n\t\t$strAv.= \"/* Copyright (C) 2003 HumanEasy, Lda. <humaneasy@sitaar.com>\\n\";\n\t\t$strAv.= \" * Copyright (C) 2009 Regis Houssin <regis@dolibarr.fr>\\n\";\n\t\t$strAv.= \" *\\n\";\n\t\t$strAv.= \" * All rights reserved.\\n\";\n\t\t$strAv.= \" * This file is licensed under GNU GPL version 2 or above.\\n\";\n\t\t$strAv.= \" * Please visit http://www.gnu.org to now more about it.\\n\";\n\t\t$strAv.= \" */\\n\\n\";\n\t\t$strAv.= \"/**\\n\";\n\t\t$strAv.= \" *  Name: EasyFileCrypt Extending Crypt Class\\n\";\n\t\t$strAv.= \" *  Version: 1.0\\n\";\n\t\t$strAv.= \" *  Created: \".date(\"r\").\"\\n\";\n\t\t$strAv.= \" *  Ciphers Installed on this system: \".count($ciphers).\"\\n\";\n\t\t$strAv.= \" */\\n\\n\";\n\t\t$strAv.= \"    \\$xfss = Array ( \";\n\n\t\tforeach ($ciphers as $avCipher) {\n\n\t\t\t$v = \"\";\n\t\t\tif (count($available[\"$avCipher\"]) > 0) {\n\t\t\t\tforeach ($available[\"$avCipher\"] as $avMode)\n\t\t\t\t$v .= \" '\".$avMode.\"', \";\n\n\t\t\t\t$i = dol_strlen($v) - 2;\n\t\t\t\tif ($v[$i] == \",\")\n\t\t\t\t$v = substr($v, 2, $i - 3);\n\t\t\t}\n\t\t\tif (!empty($v)) $v = \" '\".$v.\"' \";\n\t\t\t$strAv .= \"'\".$avCipher.\"' => Array (\".$v.\"),\\n                    \";\n\t\t}\n\t\t$strAv = rtrim($strAv);\n\t\tif ($strAv[dol_strlen($strAv) - 1] == \",\")\n\t\t$strAv = substr($strAv, 0, dol_strlen($strAv) - 1);\n\t\t$strAv .= \" );\\n\\n\";\n\t\t$strAv .= \"?>\";\n\n\t\treturn $strAv;\n\t}\n}\n\n/**\n * Return a generated password using default module\n * @param\t\tgeneric\t\tCreate generic password\n * @return\t\tstring\t\tNew value for password\n */\nfunction getRandomPassword($generic=false)\n{\n\tglobal $db,$conf,$langs,$user;\n\n\t$generated_password='';\n\tif ($generic) $generated_password=dol_hash(mt_rand());\n\telse if ($conf->global->USER_PASSWORD_GENERATED)\n\t{\n\t\t$nomclass=\"modGeneratePass\".ucfirst($conf->global->USER_PASSWORD_GENERATED);\n\t\t$nomfichier=$nomclass.\".class.php\";\n\t\t//print DOL_DOCUMENT_ROOT.\"/includes/modules/security/generate/\".$nomclass;\n\t\trequire_once(DOL_DOCUMENT_ROOT.\"/includes/modules/security/generate/\".$nomfichier);\n\t\t$genhandler=new $nomclass($db,$conf,$langs,$user);\n\t\t$generated_password=$genhandler->getNewGeneratedPassword();\n\t\tunset($genhandler);\n\t}\n\n\treturn $generated_password;\n}\n\n/**\n * \tReturns a hash of a string\n * \t@param \tchain\tString to hash\n * \t@param\ttype\tType of hash (0:md5, 1:sha1, 2:sha1+md5)\n * \t@return\thash\thash of string\n */\nfunction dol_hash($chain,$type=0)\n{\n\tif ($type == 1) return sha1($chain);\n\telse if ($type == 2) return sha1(md5($chain));\n\telse return md5($chain);\n}\n\n?>", "<?php\n/* Copyright (C) 2002-2007 Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2003      Xavier Dutoit        <doli@sydesy.com>\n * Copyright (C) 2004-2011 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2004      Sebastien Di Cintio  <sdicintio@ressource-toi.org>\n * Copyright (C) 2004      Benoit Mortier       <benoit.mortier@opensides.be>\n * Copyright (C) 2005-2011 Regis Houssin        <regis@dolibarr.fr>\n * Copyright (C) 2008      Matteli\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/main.inc.php\n *\t\\ingroup\tcore\n *\t\\brief      File that defines environment for Dolibarr pages only (variables not required by scripts)\n *\t\\version    $Id: main.inc.php,v 1.756 2011/07/31 23:19:05 eldy Exp $\n */\n\n@ini_set('memory_limit', '64M');\t// This may be useless if memory is hard limited by your PHP\n\n// For optionnal tuning. Enabled if environment variable DOL_TUNING is defined.\n// A call first. Is the equivalent function dol_microtime_float not yet loaded.\n$micro_start_time=0;\nif (! empty($_SERVER['DOL_TUNING']))\n{\n\tlist($usec, $sec) = explode(\" \", microtime());\n\t$micro_start_time=((float)$usec + (float)$sec);\n\t// Add Xdebug code coverage\n\t//define('XDEBUGCOVERAGE',1);\n\tif (defined('XDEBUGCOVERAGE')) { xdebug_start_code_coverage(); }\n}\n\n// Removed magic_quotes\nif (function_exists('get_magic_quotes_gpc'))\t// magic_quotes_* removed in PHP6\n{\n\tif (get_magic_quotes_gpc())\n\t{\n\t\t// Forcing parameter setting magic_quotes_gpc and cleaning parameters\n\t\t// (Otherwise he would have for each position, condition\n\t\t// Reading stripslashes variable according to state get_magic_quotes_gpc).\n\t\t// Off mode (recommended, you just do $db->escape when an insert / update.\n\t\tfunction stripslashes_deep($value)\n\t\t{\n\t\t\treturn (is_array($value) ? array_map('stripslashes_deep', $value) : stripslashes($value));\n\t\t}\n\t\t$_GET     = array_map('stripslashes_deep', $_GET);\n\t\t$_POST    = array_map('stripslashes_deep', $_POST);\n\t\t$_COOKIE  = array_map('stripslashes_deep', $_COOKIE);\n\t\t@set_magic_quotes_runtime(0);\n\t}\n}\n\n// Security: SQL Injection and XSS Injection (scripts) protection (Filters on GET, POST)\nfunction test_sql_and_script_inject($val,$get)\n{\n\t$sql_inj = 0;\n\t// For SQL Injection\n\t$sql_inj += preg_match('/delete[\\s]+from/i', $val);\n\t$sql_inj += preg_match('/create[\\s]+table/i', $val);\n\t$sql_inj += preg_match('/update.+set.+=/i', $val);\n\t$sql_inj += preg_match('/insert[\\s]+into/i', $val);\n\t$sql_inj += preg_match('/select.+from/i', $val);\n\t$sql_inj += preg_match('/union.+select/i', $val);\n\t$sql_inj += preg_match('/(\\.\\.%2f)+/i', $val);\n\t// For XSS Injection done by adding javascript with script\n\t$sql_inj += preg_match('/<script/i', $val);\n\t$sql_inj += preg_match('/img[\\s]+src/i', $val);\n\t$sql_inj += preg_match('/base[\\s]+href/i', $val);\n\t$sql_inj += preg_match('/style([\\s]+)?=/i', $val);\n\tif ($get) $sql_inj += preg_match('/javascript:/i', $val);\n\t// For XSS Injection done by adding javascript with onmousemove, etc... (closing a src or href tag with not cleaned param)\n\tif ($get) $sql_inj += preg_match('/\"/i', $val);\t// We refused \" in GET parameters value\n\treturn $sql_inj;\n}\n// Security: Return true if OK, false otherwise\nfunction analyse_sql_and_script(&$var,$get)\n{\n\tif (is_array($var))\n\t{\n\t\tforeach ($var as $key => $value)\n\t\t{\n\t\t\tif (analyse_sql_and_script($value,$get))\n\t\t\t{\n\t\t\t\t$var[$key] = $value;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint 'Access refused by SQL/Script injection protection in main.inc.php';\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn (test_sql_and_script_inject($var,$get) <= 0);\n\t}\n}\n// Sanity check on URL\nif (! empty($_SERVER[\"PHP_SELF\"]))\n{\n    $morevaltochecklikepost=array($_SERVER[\"PHP_SELF\"]);\n    analyse_sql_and_script($morevaltochecklikepost,0);\n}\n// Sanity check on GET parameters\nif (! empty($_SERVER[\"QUERY_STRING\"]))\n{\n    $morevaltochecklikeget=array($_SERVER[\"QUERY_STRING\"]);\n    analyse_sql_and_script($morevaltochecklikeget,1);\n}\n// Sanity check on POST\nanalyse_sql_and_script($_POST,0);\n\n// This is to make Dolibarr working with Plesk\nif (! empty($_SERVER['DOCUMENT_ROOT'])) set_include_path($_SERVER['DOCUMENT_ROOT'].'/htdocs');\n\n// Include the conf.php and functions.lib.php\nrequire_once(\"filefunc.inc.php\");\n\n// Init session. Name of session is specific to Dolibarr instance.\n$prefix=dol_getprefix();\n$sessionname='DOLSESSID_'.$prefix;\n$sessiontimeout='DOLSESSTIMEOUT_'.$prefix;\nif (! empty($_COOKIE[$sessiontimeout])) ini_set('session.gc_maxlifetime',$_COOKIE[$sessiontimeout]);\nsession_name($sessionname);\nsession_start();\n\n// Init the 5 global objects\n// This include will set: $conf, $db, $langs, $user, $mysoc objects\nrequire_once(\"master.inc.php\");\n\n// Activate end of page function\nregister_shutdown_function('dol_shutdown');\n\n// Detection browser\n// TODO rename conf->browser into user->browser\nif (isset($_SERVER[\"HTTP_USER_AGENT\"]))\n{\n\t// If phone/smartphone, we set phone os name.\n\tif (preg_match('/android/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t\t\t$conf->browser->phone='android';\n\telseif (preg_match('/blackberry/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t$conf->browser->phone='blackberry';\n\telseif (preg_match('/iphone/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t\t$conf->browser->phone='iphone';\n\telseif (preg_match('/ipod/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t\t\t$conf->browser->phone='iphone';\n\telseif (preg_match('/palm/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t\t\t$conf->browser->phone='palm';\n\telseif (preg_match('/symbian/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t\t$conf->browser->phone='symbian';\n\telseif (preg_match('/webos/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t\t\t$conf->browser->phone='webos';\n\telseif (preg_match('/maemo/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t\t\t$conf->browser->phone='maemo';\n\t// MS products at end\n\telseif (preg_match('/iemobile/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t\t$conf->browser->phone='windowsmobile';\n\telseif (preg_match('/windows ce/i',$_SERVER[\"HTTP_USER_AGENT\"]))\t$conf->browser->phone='windowsmobile';\n\t// Name\n\tif (preg_match('/firefox/i',$_SERVER[\"HTTP_USER_AGENT\"]))       $conf->browser->name='firefox';\n\telseif (preg_match('/chrome/i',$_SERVER[\"HTTP_USER_AGENT\"]))    $conf->browser->name='chrome';\n\telseif (preg_match('/iceweasel/i',$_SERVER[\"HTTP_USER_AGENT\"])) $conf->browser->name='iceweasel';\n\telseif ((empty($conf->browser->phone) || preg_match('/iphone/i',$_SERVER[\"HTTP_USER_AGENT\"])) && preg_match('/safari/i',$_SERVER[\"HTTP_USER_AGENT\"]))    $conf->browser->name='safari';\t// Safari is often present in string but its not.\n\telseif (preg_match('/opera/i',$_SERVER[\"HTTP_USER_AGENT\"]))     $conf->browser->name='opera';\n\t// MS products at end\n\telseif (preg_match('/msie/i',$_SERVER[\"HTTP_USER_AGENT\"]))      $conf->browser->name='ie';\n\telse $conf->browser->name='unknown';\n\t// Other\n\tif (in_array($conf->browser->name,array('firefox','iceweasel'))) $conf->browser->firefox=1;\n\t//$conf->browser->phone='android';\n}\n\n\n// Force HTTPS if required ($conf->file->main_force_https is 0/1 or https dolibarr root url)\nif (! empty($conf->file->main_force_https))\n{\n\t$newurl='';\n\tif ($conf->file->main_force_https == '1')\n\t{\n\t\tif (! empty($_SERVER[\"SCRIPT_URI\"]))\t// If SCRIPT_URI supported by server\n\t\t{\n\t\t\tif (preg_match('/^http:/i',$_SERVER[\"SCRIPT_URI\"]) && ! preg_match('/^https:/i',$_SERVER[\"SCRIPT_URI\"]))\t// If link is http\n\t\t\t{\n\t\t\t\t$newurl=preg_replace('/^http:/i','https:',$_SERVER[\"SCRIPT_URI\"]);\n\t\t\t}\n\t\t}\n\t\telse\t// Check HTTPS environment variable (Apache/mod_ssl only)\n\t\t{\n\t\t\t// $_SERVER[\"HTTPS\"] is 'on' when link is https, otherwise $_SERVER[\"HTTPS\"] is empty or 'off'\n\t\t\tif (empty($_SERVER[\"HTTPS\"]) || $_SERVER[\"HTTPS\"] != 'on')\t\t// If link is http\n\t\t\t{\n\t\t\t\t$newurl=preg_replace('/^http:/i','https:',DOL_MAIN_URL_ROOT).$_SERVER[\"REQUEST_URI\"];\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t$newurl=$conf->file->main_force_https.$_SERVER[\"REQUEST_URI\"];\n\t}\n\t// Start redirect\n\tif ($newurl)\n\t{\n\t\tdol_syslog(\"main.inc: dolibarr_main_force_https is on, we make a redirect to \".$newurl);\n\t\theader(\"Location: \".$newurl);\n\t\texit;\n\t}\n\telse\n\t{\n\t\tdol_syslog(\"main.inc: dolibarr_main_force_https is on but we failed to forge new https url so no redirect is done\", LOG_WARNING);\n\t}\n}\n\n\n// Chargement des includes complementaires de presentation\nif (! defined('NOREQUIREMENU')) require_once(DOL_DOCUMENT_ROOT .\"/core/class/menu.class.php\");\t\t\t// Need 10ko memory (11ko in 2.2)\nif (! defined('NOREQUIREHTML')) require_once(DOL_DOCUMENT_ROOT .\"/core/class/html.form.class.php\");\t    // Need 660ko memory (800ko in 2.2)\nif (! defined('NOREQUIREAJAX') && $conf->use_javascript_ajax) require_once(DOL_DOCUMENT_ROOT.'/lib/ajax.lib.php');\t// Need 22ko memory\n//dol_stopwithmem();\n\n// If install or upgrade process not done or not completely finished, we call the install page.\nif (! empty($conf->global->MAIN_NOT_INSTALLED) || ! empty($conf->global->MAIN_NOT_UPGRADED))\n{\n\tdol_syslog(\"main.inc: A previous install or upgrade was not complete. Redirect to install page.\", LOG_WARNING);\n\tHeader(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n\texit;\n}\n// If an upgrade process is required, we call the install page.\nif ((! empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ($conf->global->MAIN_VERSION_LAST_UPGRADE != DOL_VERSION))\n|| (empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ! empty($conf->global->MAIN_VERSION_LAST_INSTALL) && ($conf->global->MAIN_VERSION_LAST_INSTALL != DOL_VERSION)))\n{\n    $versiontocompare=empty($conf->global->MAIN_VERSION_LAST_UPGRADE)?$conf->global->MAIN_VERSION_LAST_INSTALL:$conf->global->MAIN_VERSION_LAST_UPGRADE;\n    require_once(DOL_DOCUMENT_ROOT .\"/lib/admin.lib.php\");\n\t$dolibarrversionlastupgrade=preg_split('/[.-]/',$versiontocompare);\n\t$dolibarrversionprogram=preg_split('/[.-]/',DOL_VERSION);\n    $rescomp=versioncompare($dolibarrversionprogram,$dolibarrversionlastupgrade);\n    if ($rescomp > 0)   // Programs have a version higher than database. We did not add \"&& $rescomp < 3\" because we want upgrade process for build upgrades\n\t{\n\t\tdol_syslog(\"main.inc: database version \".$versiontocompare.\" is lower than programs version \".DOL_VERSION.\". Redirect to install page.\", LOG_WARNING);\n\t\tHeader(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n\t\texit;\n\t}\n}\n\n// Creation of a token against CSRF vulnerabilities\nif (! defined('NOTOKENRENEWAL'))\n{\n\t$token = md5(uniqid(mt_rand(),TRUE)); // Genere un hash d'un nombre aleatoire\n\t// roulement des jetons car cree a chaque appel\n\tif (isset($_SESSION['newtoken'])) $_SESSION['token'] = $_SESSION['newtoken'];\n\t$_SESSION['newtoken'] = $token;\n}\nif (! empty($conf->global->MAIN_SECURITY_CSRF))\t// Check validity of token, only if option enabled (this option breaks some features sometimes)\n{\n\tif (isset($_POST['token']) && isset($_SESSION['token']))\n\t{\n\t\tif (($_POST['token'] != $_SESSION['token']))\n\t\t{\n\t\t\tdol_syslog(\"Invalid token in \".$_SERVER['HTTP_REFERER'].\", action=\".$_POST['action'].\", _POST['token']=\".$_POST['token'].\", _SESSION['token']=\".$_SESSION['token'],LOG_WARNING);\n\t\t\t//print 'Unset POST by CSRF protection in main.inc.php.';\t// Do not output anything because this create problems when using the BACK button on browsers.\n\t\t\tunset($_POST);\n\t\t}\n\t}\n}\n\n// Disable modules (this must be after session_start and after conf has been loaded)\nif (GETPOST('disablemodules'))  $_SESSION[\"disablemodules\"]=GETPOST('disablemodules');\nif (! empty($_SESSION[\"disablemodules\"]))\n{\n\t$disabled_modules=explode(',',$_SESSION[\"disablemodules\"]);\n\tforeach($disabled_modules as $module)\n\t{\n\t\tif ($module) $conf->$module->enabled=false;\n\t}\n}\n\n\n/*\n * Phase authentication / login\n */\n$login='';\nif (! defined('NOLOGIN'))\n{\n\t// $authmode lists the different means of identification to be tested in order of preference.\n\t// Example: 'http'\n\t// Example: 'dolibarr'\n\t// Example: 'ldap'\n\t// Example: 'http,forceuser'\n\n\t// Authentication mode\n\tif (empty($dolibarr_main_authentication)) $dolibarr_main_authentication='http,dolibarr';\n\t// Authentication mode: forceuser\n\tif ($dolibarr_main_authentication == 'forceuser' && empty($dolibarr_auto_user)) $dolibarr_auto_user='auto';\n\n\t// Set authmode\n\t$authmode=explode(',',$dolibarr_main_authentication);\n\n\t// No authentication mode\n\tif (! sizeof($authmode) && empty($conf->login_method_modules))\n\t{\n\t\t$langs->load('main');\n\t\tdol_print_error('',$langs->trans(\"ErrorConfigParameterNotDefined\",'dolibarr_main_authentication'));\n\t\texit;\n\t}\n\n\t// If requested by the login has already occurred, it is retrieved from the session\n\t// Call module if not realized that his request.\n\t// At the end of this phase, the variable $login is defined.\n\t$resultFetchUser='';\n\t$test=true;\n\tif (! isset($_SESSION[\"dol_login\"]))\n\t{\n\t\t// It is not already authenticated, it requests the login / password\n\n\t    // If in demo mode, we check we go to home page through the public/demo/index.php page\n\t    if ($dolibarr_main_demo && $_SERVER['PHP_SELF'] == DOL_URL_ROOT.'/index.php')  // We ask index page\n        {\n            if (! preg_match('/public/',$_SERVER['HTTP_REFERER']))\n            {\n                dol_syslog(\"Call index page from another url than demo page\");\n                header(\"Location: \".DOL_URL_ROOT.'/public/demo/index.php');\n                exit;\n            }\n        }\n\n\t\t// Verification security graphic code\n\t\tif (GETPOST(\"username\",\"alpha\",2) && ! empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA))\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/includes/artichow/Artichow.cfg.php';\n\t\t\trequire_once ARTICHOW.\"/AntiSpam.class.php\";\n\n\t\t\t// It creates an anti-spam object\n\t\t\t$object = new AntiSpam();\n\n\t\t\t// Verifie code\n\t\t\tif (! $object->check('dol_antispam_value',$_POST['code'],true))\n\t\t\t{\n\t\t\t\tdol_syslog('Bad value for code, connexion refused');\n\t\t\t\t$langs->load('main');\n\t\t\t\t$langs->load('other');\n\n\t\t\t\t$user->trigger_mesg='ErrorBadValueForCode - login='.GETPOST(\"username\",\"alpha\",2);\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadValueForCode\");\n\t\t\t\t$test=false;\n\n\t\t\t\t// Appel des triggers\n\t\t\t\tinclude_once(DOL_DOCUMENT_ROOT . \"/core/class/interfaces.class.php\");\n\t\t\t\t$interface=new Interfaces($db);\n\t\t\t\t$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,GETPOST('entity'));\n\t\t\t\tif ($result < 0) { $error++; }\n\t\t\t\t// Fin appel triggers\n\t\t\t}\n\t\t}\n\n\t\t// Validation of login with a third party login module method\n\t\tif (is_array($conf->login_method_modules) && !empty($conf->login_method_modules))\n\t\t{\n\t\t\tinclude_once(DOL_DOCUMENT_ROOT . \"/lib/security.lib.php\");\n\t\t\t$login = getLoginMethod();\n\t\t\tif ($login)\t$test=false;\n\t\t}\n\n\t\t// Validation tests user / password\n\t\t// If ok, the variable will be initialized login\n\t\t// If error, we will put error message in session under the name dol_loginmesg\n\t\t$goontestloop=false;\n\t\tif (isset($_SERVER[\"REMOTE_USER\"]) && in_array('http',$authmode)) $goontestloop=true;\n\t\tif (GETPOST(\"username\",\"alpha\",2) || GETPOST('openid_mode','alpha',1)) $goontestloop=true;\n\n\t\tif ($test && $goontestloop)\n\t\t{\n\t\t\tforeach($authmode as $mode)\n\t\t\t{\n\t\t\t\tif ($test && $mode && ! $login)\n\t\t\t\t{\n\t\t\t\t\t$authfile=DOL_DOCUMENT_ROOT.'/includes/login/functions_'.$mode.'.php';\n\t\t\t\t\t$result=include_once($authfile);\n\t\t\t\t\tif ($result)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Call function to check user/password\n\t\t\t\t\t\t$usertotest=GETPOST(\"username\",\"alpha\",2);\n\t\t\t\t\t\t$passwordtotest=$_POST[\"password\"];\n\t\t\t\t\t\t$entitytotest=$_POST[\"entity\"];\n\t\t\t\t\t\t$function='check_user_password_'.$mode;\n\t\t\t\t\t\t$login=$function($usertotest,$passwordtotest,$entitytotest);\n\t\t\t\t\t\tif ($login)\t// Login is successfull\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$test=false;\n\t\t\t\t\t\t\t$dol_authmode=$mode;\t// This properties is defined only when logged to say what mode was successfully used\n\t\t\t\t\t\t\t$dol_tz=$_POST[\"tz\"];\n\t\t\t\t\t\t\t$dol_dst=$_POST[\"dst\"];\n\t\t\t\t\t\t\t$dol_screenwidth=$_POST[\"screenwidth\"];\n\t\t\t\t\t\t\t$dol_screenheight=$_POST[\"screenheight\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tdol_syslog(\"Authentification ko - failed to load file '\".$authfile.\"'\",LOG_ERR);\n\t\t\t\t\t\tsleep(1);\n\t\t\t\t\t\t$langs->load('main');\n\t\t\t\t\t\t$langs->load('other');\n\t\t\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorFailedToLoadLoginFileForMode\",$mode);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (! $login)\n\t\t\t{\n\t\t\t\tdol_syslog('Bad password, connexion refused',LOG_DEBUG);\n\t\t\t\t$langs->load('main');\n\t\t\t\t$langs->load('other');\n\n\t\t\t\t// Bad password. No authmode has found a good password.\n\t\t\t\t$user->trigger_mesg=$langs->trans(\"ErrorBadLoginPassword\").' - login='.GETPOST(\"username\",\"alpha\",2);\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadLoginPassword\");\n\n\t\t\t\t// Appel des triggers\n\t\t\t\tinclude_once(DOL_DOCUMENT_ROOT . \"/core/class/interfaces.class.php\");\n\t\t\t\t$interface=new Interfaces($db);\n\t\t\t\t$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,$_POST[\"entity\"]);\n\t\t\t\tif ($result < 0) { $error++; }\n\t\t\t\t// Fin appel triggers\n\t\t\t}\n\t\t}\n\n\t\t// End test login / passwords\n\t\tif (! $login)\n\t\t{\n\t\t\t// We show login page\n\t\t\tinclude_once(DOL_DOCUMENT_ROOT.\"/lib/security.lib.php\");\n\t\t\tif (! is_object($langs)) // This can occurs when calling page with NOREQUIRETRAN defined\n\t\t\t{\n                include_once(DOL_DOCUMENT_ROOT.\"/core/class/translate.class.php\");\n\t\t\t\t$langs=new Translate(\"\",$conf);\n\t\t\t}\n\t\t\tdol_loginfunction($langs,$conf,$mysoc);\n\t\t\texit;\n\t\t}\n\n\t\t$resultFetchUser=$user->fetch('',$login);\n\t\tif ($resultFetchUser <= 0)\n\t\t{\n\t\t\tdol_syslog('User not found, connexion refused');\n\t\t\tsession_destroy();\n\t\t\tsession_name($sessionname);\n\t\t\tsession_start();\n\n\t\t\tif ($resultFetchUser == 0)\n\t\t\t{\n\t\t\t\t$langs->load('main');\n\t\t\t\t$langs->load('other');\n\n\t\t\t\t$user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\",$login);\n\t\t\t}\n\t\t\tif ($resultFetchUser < 0)\n\t\t\t{\n\t\t\t\t$user->trigger_mesg=$user->error;\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$user->error;\n\t\t\t}\n\n\t\t\t// Call triggers\n\t\t\tinclude_once(DOL_DOCUMENT_ROOT . \"/core/class/interfaces.class.php\");\n\t\t\t$interface=new Interfaces($db);\n\t\t\t$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,$_POST[\"entity\"]);\n\t\t\tif ($result < 0) { $error++; }\n\t\t\t// End call triggers\n\n\t\t\theader('Location: '.DOL_URL_ROOT.'/index.php');\n\t\t\texit;\n\t\t}\n\t}\n\telse\n\t{\n\t\t// We are already into an authenticated session\n\t\t$login=$_SESSION[\"dol_login\"];\n\t\tdol_syslog(\"This is an already logged session. _SESSION['dol_login']=\".$login);\n\n\t\t$resultFetchUser=$user->fetch('',$login);\n\t\tif ($resultFetchUser <= 0)\n\t\t{\n\t\t\t// Account has been removed after login\n\t\t\tdol_syslog(\"Can't load user even if session logged. _SESSION['dol_login']=\".$login, LOG_WARNING);\n\t\t\tsession_destroy();\n\t\t\tsession_name($sessionname);\n\t\t\tsession_start();\n\n\t\t\tif ($resultFetchUser == 0)\n\t\t\t{\n\t\t\t\t$langs->load('main');\n\t\t\t\t$langs->load('other');\n\n\t\t\t\t$user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\",$login);\n\t\t\t}\n\t\t\tif ($resultFetchUser < 0)\n\t\t\t{\n\t\t\t\t$user->trigger_mesg=$user->error;\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$user->error;\n\t\t\t}\n\n\t\t\t// Call triggers\n\t\t\tinclude_once(DOL_DOCUMENT_ROOT . \"/core/class/interfaces.class.php\");\n\t\t\t$interface=new Interfaces($db);\n\t\t\t$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,(isset($_POST[\"entity\"])?$_POST[\"entity\"]:0));\n\t\t\tif ($result < 0) { $error++; }\n\t\t\t// End call triggers\n\n\t\t\theader('Location: '.DOL_URL_ROOT.'/index.php');\n\t\t\texit;\n\t\t}\n\t\telse\n\t\t{\n\t\t    if (! empty($conf->MAIN_ACTIVATE_UPDATESESSIONTRIGGER))\t// We do not execute such trigger at each page load by default\n\t\t    {\n    \t\t\t// Call triggers\n    \t\t\tinclude_once(DOL_DOCUMENT_ROOT . \"/core/class/interfaces.class.php\");\n    \t\t\t$interface=new Interfaces($db);\n    \t\t\t$result=$interface->run_triggers('USER_UPDATE_SESSION',$user,$user,$langs,$conf,$conf->entity);\n    \t\t\tif ($result < 0) { $error++; }\n    \t\t\t// End call triggers\n\t\t    }\n\t\t}\n\t}\n\n\t// Is it a new session that has started ?\n\t// If we are here this means authentication was successfull.\n\tif (! isset($_SESSION[\"dol_login\"]))\n\t{\n\t\t$error=0;\n\n\t\t// New session for this login\n\t\t$_SESSION[\"dol_login\"]=$user->login;\n\t\t$_SESSION[\"dol_authmode\"]=isset($dol_authmode)?$dol_authmode:'';\n\t\t$_SESSION[\"dol_tz\"]=isset($dol_tz)?$dol_tz:'';\n\t\t$_SESSION[\"dol_dst\"]=isset($dol_dst)?$dol_dst:'';\n\t\t$_SESSION[\"dol_screenwidth\"]=isset($dol_screenwidth)?$dol_screenwidth:'';\n\t\t$_SESSION[\"dol_screenheight\"]=isset($dol_screenheight)?$dol_screenheight:'';\n\t\t$_SESSION[\"dol_company\"]=$conf->global->MAIN_INFO_SOCIETE_NOM;\n\t\tif ($conf->multicompany->enabled) $_SESSION[\"dol_entity\"]=$conf->entity;\n\t\tdol_syslog(\"This is a new started user session. _SESSION['dol_login']=\".$_SESSION[\"dol_login\"].' Session id='.session_id());\n\n\t\t$db->begin();\n\n\t\t$user->update_last_login_date();\n\n\t\t// Call triggers\n\t\tinclude_once(DOL_DOCUMENT_ROOT . \"/core/class/interfaces.class.php\");\n\t\t$interface=new Interfaces($db);\n\t\t$result=$interface->run_triggers('USER_LOGIN',$user,$user,$langs,$conf,$_POST[\"entity\"]);\n\t\tif ($result < 0) { $error++; }\n\t\t// End call triggers\n\n\t\tif ($error)\n\t\t{\n\t\t\t$db->rollback();\n\t\t\tsession_destroy();\n\t\t\tdol_print_error($db,'Error in some triggers on action USER_LOGIN',LOG_ERR);\n\t\t\texit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$db->commit();\n\t\t}\n\n\t\t// Create entity cookie, just used for login page\n\t\tif (!empty($conf->global->MAIN_MODULE_MULTICOMPANY) && !empty($conf->global->MAIN_MULTICOMPANY_COOKIE) && isset($_POST[\"entity\"]))\n\t\t{\n\t\t\tinclude_once(DOL_DOCUMENT_ROOT.\"/core/class/cookie.class.php\");\n\n\t\t\t$entity = $_SESSION[\"dol_login\"].'|'.$_POST[\"entity\"];\n\n\t\t\t$prefix=dol_getprefix();\n\t\t\t$entityCookieName = 'DOLENTITYID_'.$prefix;\n\t\t\t// TTL : is defined in the config page multicompany\n\t\t\t$ttl = (! empty($conf->global->MAIN_MULTICOMPANY_COOKIE_TTL) ? $conf->global->MAIN_MULTICOMPANY_COOKIE_TTL : time()+60*60*8 );\n\t\t\t// Cryptkey : will be created randomly in the config page multicompany\n\t\t\t$cryptkey = (! empty($conf->file->cookie_cryptkey) ? $conf->file->cookie_cryptkey : '' );\n\n\t\t\t$entityCookie = new DolCookie($cryptkey);\n\t\t\t$entityCookie->_setCookie($entityCookieName, $entity, $ttl);\n\t\t}\n\n\t\t// Module webcalendar\n\t\tif (! empty($conf->webcalendar->enabled) && $user->webcal_login != \"\")\n\t\t{\n\t\t\t$domain='';\n\n\t\t\t// Creation of a cookie to save login\n\t\t\t$cookiename='webcalendar_login';\n\t\t\tif (! isset($_COOKIE[$cookiename]))\n\t\t\t{\n\t\t\t\tsetcookie($cookiename, $user->webcal_login, 0, \"/\", $domain, 0);\n\t\t\t}\n\t\t\t// Creation of a cookie to save session\n\t\t\t$cookiename='webcalendar_session';\n\t\t\tif (! isset($_COOKIE[$cookiename]))\n\t\t\t{\n\t\t\t\tsetcookie($cookiename, 'TODO', 0, \"/\", $domain, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Module Phenix\n\t\tif (! empty($conf->phenix->enabled) && $user->phenix_login != \"\" && $conf->phenix->cookie)\n\t\t{\n\t\t\t// Creation du cookie permettant la connexion automatique, valide jusqu'a la fermeture du browser\n\t\t\tif (!isset($_COOKIE[$conf->phenix->cookie]))\n\t\t\t{\n\t\t\t\tsetcookie($conf->phenix->cookie, $user->phenix_login.\":\".$user->phenix_pass_crypted.\":1\", 0, \"/\", \"\", 0);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// If user admin, we force the rights-based modules\n\tif ($user->admin)\n\t{\n\t\t$user->rights->user->user->lire=1;\n\t\t$user->rights->user->user->creer=1;\n\t\t$user->rights->user->user->password=1;\n\t\t$user->rights->user->user->supprimer=1;\n\t\t$user->rights->user->self->creer=1;\n\t\t$user->rights->user->self->password=1;\n\t}\n\n\t/*\n\t * Overwrite configs global by peronal configs\n\t */\n\t// Set liste_limit\n\tif (isset($user->conf->MAIN_SIZE_LISTE_LIMIT))\t// Can be 0\n\t{\n\t\t$conf->liste_limit = $user->conf->MAIN_SIZE_LISTE_LIMIT;\n\t}\n\tif (isset($user->conf->PRODUIT_LIMIT_SIZE))\t\t// Can be 0\n\t{\n\t\t$conf->product->limit_size = $user->conf->PRODUIT_LIMIT_SIZE;\n\t}\n\t// Replace conf->css by personalized value\n\tif (isset($user->conf->MAIN_THEME) && $user->conf->MAIN_THEME)\n\t{\n\t\t$conf->theme=$user->conf->MAIN_THEME;\n\t\t$conf->css  = \"/theme/\".$conf->theme.\"/style.css.php\";\n\t}\n\t// Set javascript option\n    if (! GETPOST('nojs'))   // If javascript was not disabled on URL\n    {\n    \tif (! empty($user->conf->MAIN_DISABLE_JAVASCRIPT))\n    \t{\n    \t\t$conf->use_javascript_ajax=! $user->conf->MAIN_DISABLE_JAVASCRIPT;\n    \t}\n    }\n    else $conf->use_javascript_ajax=0;\n}\n\nif (! defined('NOREQUIRETRAN'))\n{\n\tif (! GETPOST('lang'))\t// If language was not forced on URL\n\t{\n\t\t// If user has chosen its own language\n\t\tif (! empty($user->conf->MAIN_LANG_DEFAULT))\n\t\t{\n\t\t\t// If different than current language\n\t\t\t//print \">>>\".$langs->getDefaultLang().\"-\".$user->conf->MAIN_LANG_DEFAULT;\n\t\t\tif ($langs->getDefaultLang() != $user->conf->MAIN_LANG_DEFAULT)\n\t\t\t{\n\t\t\t\t$langs->setDefaultLang($user->conf->MAIN_LANG_DEFAULT);\n\t\t\t}\n\t\t}\n\t}\n\telse\t// If language was forced on URL\n\t{\n\t\t$langs->setDefaultLang(GETPOST('lang','alpha',1));\n\t}\n}\n\n// Case forcing style from url\nif (GETPOST('theme'))\n{\n\t$conf->theme=GETPOST('theme','alpha',1);\n\t$conf->css  = \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n\n\nif (! defined('NOLOGIN'))\n{\n\t// If the login is not recovered, it is identified with an account that does not exist.\n\t// Hacking attempt?\n\tif (! $user->login) accessforbidden();\n\n\t// Check if user is active\n\tif ($user->statut < 1)\n\t{\n\t\t// If not active, we refuse the user\n\t\t$langs->load(\"other\");\n\t\tdol_syslog (\"Authentification ko as login is disabled\");\n\t\taccessforbidden($langs->trans(\"ErrorLoginDisabled\"));\n\t\texit;\n\t}\n\n\t// Load permissions\n\t$user->getrights();\n}\n\n\ndol_syslog(\"--- Access to \".$_SERVER[\"PHP_SELF\"]);\n//Another call for easy debugg\n//dol_syslog(\"Access to \".$_SERVER[\"PHP_SELF\"].' GET='.join(',',array_keys($_GET)).'->'.join(',',$_GET).' POST:'.join(',',array_keys($_POST)).'->'.join(',',$_POST));\n\n// Load main languages files\nif (! defined('NOREQUIRETRAN'))\n{\n\t$langs->load(\"main\");\n\t$langs->load(\"dict\");\n}\n\n// Define some constants used for style of arrays\n$bc=array(0=>'class=\"impair\"',1=>'class=\"pair\"');\n$bcdd=array(0=>'class=\"impair drag drop\"',1=>'class=\"pair drag drop\"');\n$bcnd=array(0=>'class=\"impair nodrag nodrop\"',1=>'class=\"pair nodrag nodrop\"');\n\n// Constants used to defined number of lines in textarea\nif (empty($conf->browser->firefox))\n{\n\tdefine('ROWS_1',1);\n\tdefine('ROWS_2',2);\n\tdefine('ROWS_3',3);\n\tdefine('ROWS_4',4);\n\tdefine('ROWS_5',5);\n\tdefine('ROWS_6',6);\n\tdefine('ROWS_7',7);\n\tdefine('ROWS_8',8);\n\tdefine('ROWS_9',9);\n}\nelse\n{\n\tdefine('ROWS_1',0);\n\tdefine('ROWS_2',1);\n\tdefine('ROWS_3',2);\n\tdefine('ROWS_4',3);\n\tdefine('ROWS_5',4);\n\tdefine('ROWS_6',5);\n\tdefine('ROWS_7',6);\n\tdefine('ROWS_8',7);\n\tdefine('ROWS_9',8);\n}\n\n$heightforframes=48;\n\n// Switch to another entity\nif (!empty($conf->global->MAIN_MODULE_MULTICOMPANY))\n{\n\tif (GETPOST('action') == 'switchentity' && $user->admin && ! $user->entity)\n\t{\n\t\t$res = @dol_include_once(\"/multicompany/class/actions_multicompany.class.php\");\n\n\t\tif ($res)\n\t\t{\n\t\t\t$mc = new ActionsMulticompany($db);\n\n\t\t\tif($mc->switchEntity(GETPOST('entity')) > 0)\n\t\t\t{\n\t\t\t\tHeader(\"Location: \".DOL_URL_ROOT.'/');\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// Functions\n\nif (! function_exists(\"llxHeader\"))\n{\n\t/**\n\t *\tShow HTML header HTML + BODY + Top menu + left menu + DIV\n\t * \t@param   \thead\t\t\tAdd optionnal head lines\n\t *  @param      title   \t\tTitle of web page\n\t * \t@param      help_url\t\tUrl links to help page\n\t *                              Syntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n\t *                                         For other external page: http://server/url\n\t *  @param      target  \t\tTarget to use in menu links\n\t *\t@param\t\tdisablejs\t\tDo not output links to js (Ex: qd fonction utilisee par sous formulaire Ajax)\n\t *\t@param\t\tdisablehead\t\tDo not output head section\n\t *\t@param\t\tarrayofjs\t\tArray of js files to add in header\n\t *\t@param\t\tarrayofcss\t\tArray of css files to add in header\n\t *  @param\t\tmorequerystring Query string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n\t */\n\tfunction llxHeader($head = '', $title='', $help_url='', $target='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $morequerystring='')\n\t{\n\t\ttop_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss);\t// Show html headers\n\t\ttop_menu($head, $title, $target, $disablejs, $disablehead, $arrayofjs, $arrayofcss, $morequerystring);\n\t\tleft_menu('', $help_url, '', '', 1, $title);\n\t\tmain_area($title);\n\t}\n}\n\n\n/**\n *  Show HTTP header\n */\nfunction top_httphead()\n{\n    global $conf;\n\n    //header(\"Content-type: text/html; charset=UTF-8\");\n    header(\"Content-type: text/html; charset=\".$conf->file->character_set_client);\n\n    // On the fly GZIP compression for all pages (if browser support it). Must set the bit 3 of constant to 1.\n    if (isset($conf->global->MAIN_OPTIMIZE_SPEED) && ($conf->global->MAIN_OPTIMIZE_SPEED & 0x04)) { ob_start(\"ob_gzhandler\"); }\n}\n\n\n/**\n *  Show HTML header\n *  @param      head    \tOptionnal head lines\n *  @param      title   \tWeb page title\n *\t@param\t\tdisablejs\tDo not output links to js (Ex: qd fonction utilisee par sous formulaire Ajax)\n *\t@param\t\tdisablehead\tDo not output head section\n *\t@param\t\tarrayofjs\tArray of js files to add in header\n *\t@param\t\tarrayofcss\tArray of css files to add in header\n */\nfunction top_htmlhead($head, $title='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='')\n{\n\tglobal $user, $conf, $langs, $db;\n\n\ttop_httphead();\n\n\tif (empty($conf->css)) $conf->css = '/theme/eldy/style.css.php';\t// If not defined, eldy by default\n\n\tprint '<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">';\n\t//print '<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/1999/REC-html401-19991224/strict.dtd\">';\n\t//print '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">';\n\t//print '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">';\n\t//print '<!DOCTYPE html>';\n\tprint \"\\n\";\n\tprint \"<html>\\n\";\n\t//print '<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"fr\">'.\"\\n\";\n\tif (empty($disablehead))\n\t{\n\t\tprint \"<head>\\n\";\n\n\t\tprint \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=\".$conf->file->character_set_client.\"\\\">\\n\";\n\n\t\t// Displays meta\n\t\tprint '<meta name=\"robots\" content=\"noindex,nofollow\">'.\"\\n\";      // Evite indexation par robots\n\t\tprint '<meta name=\"author\" content=\"Dolibarr Development Team\">'.\"\\n\";\n\t\tprint '<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"'.DOL_URL_ROOT.'/favicon.ico\">'.\"\\n\";\n\n\t\t// Displays title\n\t\t$appli='Dolibarr';\n\t\tif (!empty($conf->global->MAIN_APPLICATION_TITLE)) $appli=$conf->global->MAIN_APPLICATION_TITLE;\n\n\t\tif ($title) print '<title>'.$appli.' - '.$title.'</title>';\n\t\telse print \"<title>\".$appli.\"</title>\";\n\t\tprint \"\\n\";\n\n        if (! defined('DISABLE_JQUERY'))\n        {\n            print '<!-- Includes for JQuery (Ajax library) -->'.\"\\n\";\n            $jquerytheme = 'smoothness';\n            if (!empty($conf->global->MAIN_USE_JQUERY_THEME)) $jquerytheme = $conf->global->MAIN_USE_JQUERY_THEME;\n            print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/css/'.$jquerytheme.'/jquery-ui-latest.custom.css\" />'.\"\\n\";    // JQuery\n            print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tiptip/tipTip.css\" />'.\"\\n\";                           // Tooltip\n            print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify-alt.min.css\" />'.\"\\n\";          // JNotify\n            //print '<link rel=\"stylesheet\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/lightbox/css/jquery.lightbox-0.5.css\" media=\"screen\" />'.\"\\n\";       // Lightbox\n            if (! empty($conf->global->MAIN_USE_JQUERY_FILEUPLOAD))     // jQuery fileupload\n            {\n            \tprint '<link rel=\"stylesheet\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/fileupload/jquery.fileupload-ui.css\" type=\"text/css\" />'.\"\\n\";\n            }\n        }\n\n        print '<!-- Includes for Dolibarr, modules or specific pages-->'.\"\\n\";\n        // Output style sheets (optioncss='print' or '')\n        $themepath=dol_buildpath((empty($conf->global->MAIN_FORCETHEMEDIR)?'':$conf->global->MAIN_FORCETHEMEDIR).$conf->css,1);\n        //print 'themepath='.$themepath;exit;\n\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" title=\"default\" href=\"'.$themepath.'?lang='.$langs->defaultlang.'&theme='.$conf->theme.(GETPOST('optioncss')?'&optioncss='.GETPOST('optioncss','alpha',1):'').'\">'.\"\\n\";\n\t\t// CSS forced by modules (relative url starting with /)\n\t\tif (is_array($conf->css_modules))\n\t\t{\n\t\t\tforeach($conf->css_modules as $cssfile)\n\t\t\t{\t// cssfile is an absolute path\n\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" title=\"default\" href=\"'.dol_buildpath($cssfile,1);\n                // We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters and browser cache is not used.\n\t\t\t\tif (!preg_match('/\\.css$/i',$cssfile)) print '?lang='.$langs->defaultlang.'&theme='.$conf->theme.(GETPOST('optioncss')?'&optioncss='.GETPOST('optioncss','alpha',1):'');\n\t\t\t\tprint '\">'.\"\\n\";\n\t\t\t}\n\t\t}\n\t\t// CSS forced by page in top_htmlhead call (relative url starting with /)\n\t\tif (is_array($arrayofcss))\n\t\t{\n\t\t\tforeach($arrayofcss as $cssfile)\n\t\t\t{\n\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" title=\"default\" href=\"'.dol_buildpath($cssfile,1);\n                // We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters and browser cache is not used.\n\t\t\t\tif (!preg_match('/\\.css$/i',$cssfile)) print '?lang='.$langs->defaultlang.'&theme='.$conf->theme.(GETPOST('optioncss')?'&optioncss='.GETPOST('optioncss','alpha',1):'');\n\t\t\t\tprint '\">'.\"\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"top\" title=\"'.$langs->trans(\"Home\").'\" href=\"'.(DOL_URL_ROOT?DOL_URL_ROOT:'/').'\">'.\"\\n\";\n\t\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"copyright\" title=\"GNU General Public License\" href=\"http://www.gnu.org/copyleft/gpl.html#SEC1\">'.\"\\n\";\n\t\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"author\" title=\"Dolibarr Development Team\" href=\"http://www.dolibarr.org\">'.\"\\n\";\n\n\t\t// Output standard javascript links\n\t\tif (! $disablejs && $conf->use_javascript_ajax)\n\t\t{\n\t\t\t// Other external js\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/lib/ajax.lib.php';\n\n\t\t\t$ext='.js';\n\t\t\tif (isset($conf->global->MAIN_OPTIMIZE_SPEED) && ($conf->global->MAIN_OPTIMIZE_SPEED & 0x01)) { $ext='.jgz'; }\t// mini='_mini', ext='.gz'\n\n\t\t\t// JQuery. Must be before other includes\n\t\t\tprint '<!-- Includes JS for JQuery -->'.\"\\n\";\n            print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-latest.min'.$ext.'\"></script>'.\"\\n\";\n\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-ui-latest.custom.min'.$ext.'\"></script>'.\"\\n\";\n\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tablednd/jquery.tablednd_0_5'.$ext.'\"></script>'.\"\\n\";\n            print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tiptip/jquery.tipTip.min'.$ext.'\"></script>'.\"\\n\";\n            //print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/lightbox/js/jquery.lightbox-0.5.min'.$ext.'\"></script>'.\"\\n\";\n            // jQuery Layout\n\t\t\tif (!empty($conf->global->MAIN_MENU_USE_JQUERY_LAYOUT) || defined('REQUIRE_JQUERY_LAYOUT'))\n\t\t\t{\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/layout/jquery.layout-latest'.$ext.'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\t// jQuery jnotify\n\t\t\tif (empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY))\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify.min.js\"></script>'.\"\\n\";\n            // Flot\n            print '<!--[if lte IE 8]><script language=\"javascript\" type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/excanvas.min.js\"></script><![endif]-->'.\"\\n\";\n\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.min.js\"></script>'.\"\\n\";\n            print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.pie.min.js\"></script>'.\"\\n\";\n            print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.stack.min.js\"></script>'.\"\\n\";\n            // CKEditor\n            if (!empty($conf->fckeditor->enabled) && !empty($conf->global->FCKEDITOR_EDITORNAME) && $conf->global->FCKEDITOR_EDITORNAME == 'ckeditor')\n            {\n                print '<!-- Includes JS for CKEditor -->'.\"\\n\";\n                print '<script type=\"text/javascript\">var CKEDITOR_BASEPATH = \\''.DOL_URL_ROOT.'/includes/ckeditor/\\';</script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/ckeditor/ckeditor_basic.js\"></script>'.\"\\n\";\n            }\n            // File Upload\n            if (! empty($conf->global->MAIN_USE_JQUERY_FILEUPLOAD))\n            {\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/fileupload/jquery.tmpl.min.js\"></script>'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/fileupload/jquery.iframe-transport.js\"></script>'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/fileupload/jquery.fileupload.js\"></script>'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/fileupload/jquery.fileupload-ui.js\"></script>'.\"\\n\";\n            }\n            // Global js function\n            print '<!-- Includes JS of Dolibarr -->'.\"\\n\";\n            print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/lib/lib_head.js\"></script>'.\"\\n\";\n\t\t}\n\n\t\t// Output module javascript\n\t\tif (is_array($arrayofjs))\n\t\t{\n\t\t\tprint '<!-- Includes JS specific to page -->'.\"\\n\";\n\t\t\tforeach($arrayofjs as $jsfile)\n\t\t\t{\n\t\t\t\tif (preg_match('/^http/i',$jsfile))\n\t\t\t\t{\n\t\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.$jsfile.'\"></script>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (! preg_match('/^\\//',$jsfile)) $jsfile='/'.$jsfile;\t// For backward compatibility\n\t\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.dol_buildpath($jsfile,1).'\"></script>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Define tradMonths javascript array (we define this in datapicker AND in parent page to avoid errors with IE8)\n        print '<script type=\"text/javascript\">'.\"\\n\";\n\t\t$tradMonths=array($langs->trans(\"January\"),\n\t\t$langs->trans(\"February\"),\n\t\t$langs->trans(\"March\"),\n\t\t$langs->trans(\"April\"),\n\t\t$langs->trans(\"May\"),\n\t\t$langs->trans(\"June\"),\n\t\t$langs->trans(\"July\"),\n\t\t$langs->trans(\"August\"),\n\t\t$langs->trans(\"September\"),\n\t\t$langs->trans(\"October\"),\n\t\t$langs->trans(\"November\"),\n\t\t$langs->trans(\"December\")\n\t\t);\n\t\tprint 'var tradMonths = '.json_encode($tradMonths).';'.\"\\n\";\n\n\t\t// Define tradMonthsMin javascript array (we define this in datapicker AND in parent page to avoid errors with IE8)\n\t\t$tradMonthsMin=array($langs->trans(\"JanuaryMin\"),\n\t\t$langs->trans(\"FebruaryMin\"),\n\t\t$langs->trans(\"MarchMin\"),\n\t\t$langs->trans(\"AprilMin\"),\n\t\t$langs->trans(\"MayMin\"),\n\t\t$langs->trans(\"JuneMin\"),\n\t\t$langs->trans(\"JulyMin\"),\n\t\t$langs->trans(\"AugustMin\"),\n\t\t$langs->trans(\"SeptemberMin\"),\n\t\t$langs->trans(\"OctoberMin\"),\n\t\t$langs->trans(\"NovemberMin\"),\n\t\t$langs->trans(\"DecemberMin\")\n\t\t);\n\t\tprint 'var tradMonthsMin = '.json_encode($tradMonthsMin).';'.\"\\n\";\n\n\t\t// Define tradDays javascript array (we define this in datapicker AND in parent page to avoid errors with IE8)\n\t\t$tradDays=array($langs->trans(\"Monday\"),\n\t\t$langs->trans(\"Tuesday\"),\n\t\t$langs->trans(\"Wednesday\"),\n\t\t$langs->trans(\"Thursday\"),\n\t\t$langs->trans(\"Friday\"),\n\t\t$langs->trans(\"Saturday\"),\n\t\t$langs->trans(\"Sunday\")\n\t\t);\n\t\tprint 'var tradDays = '.json_encode($tradDays).';'.\"\\n\";\n\n\t\t// Define tradDaysMin javascript array (we define this in datapicker AND in parent page to avoid errors with IE8)\n\t\t$tradDaysMin=array($langs->trans(\"MondayMin\"),\n\t\t$langs->trans(\"TuesdayMin\"),\n\t\t$langs->trans(\"WednesdayMin\"),\n\t\t$langs->trans(\"ThursdayMin\"),\n\t\t$langs->trans(\"FridayMin\"),\n\t\t$langs->trans(\"SaturdayMin\"),\n\t\t$langs->trans(\"SundayMin\")\n\t\t);\n\t\tprint 'var tradDaysMin = '.json_encode($tradDaysMin).';'.\"\\n\";\n\t\tprint '</script>'.\"\\n\";\n\n\t\tif (! empty($head)) print $head.\"\\n\";\n\t\tif (! empty($conf->global->MAIN_HTML_HEADER)) print $conf->global->MAIN_HTML_HEADER.\"\\n\";\n\n\t\tprint \"</head>\\n\\n\";\n\t}\n\n\t$conf->headerdone=1;\t// To tell header was output\n}\n\n\n/**\n *  Show an HTML header + a BODY + The top menu bar\n *  @param      head    \t\tLines in the HEAD\n *  @param      title   \t\tTitle of web page\n *  @param      target  \t\tTarget to use in menu links\n *\t@param\t\tdisablejs\t\tDo not output links to js (Ex: qd fonction utilisee par sous formulaire Ajax)\n *\t@param\t\tdisablehead\t\tDo not output head section\n *\t@param\t\tarrayofjs\t\tArray of js files to add in header\n *\t@param\t\tarrayofcss\t\tArray of css files to add in header\n *  @param\t\tmorequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n */\nfunction top_menu($head, $title='', $target='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $morequerystring='')\n{\n\tglobal $user, $conf, $langs, $db, $dolibarr_main_authentication;\n\n\t$html=new Form($db);\n\n\tif (! $conf->top_menu)  $conf->top_menu ='eldy_backoffice.php';\n\n\t// For backward compatibility with old modules\n\tif (empty($conf->headerdone)) top_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss);\n\n\tprint '<body id=\"mainbody\">';\n\n\tif ($conf->use_javascript_ajax)\n\t{\n\t\tif ($conf->global->MAIN_MENU_USE_JQUERY_LAYOUT)\n\t\t{\n\t\t\tprint '<script type=\"text/javascript\">\n\t\t\t\tjQuery(document).ready(function () {\n\t\t\t\t\tjQuery(\"body\").layout( layoutSettings );\n\t\t\t\t});\n\t\t\t\tvar layoutSettings = {\n\t\t\t\t\tname: \"mainlayout\",\n\t\t\t\t\tdefaults: {\n\t\t\t\t\t\tuseStateCookie: true,\n\t\t\t\t\t\tsize: \"auto\",\n\t\t\t\t\t\tresizable: false,\n\t\t\t\t\t\t//paneClass: \"none\",\n\t\t\t\t\t\t//resizerClass: \"resizer\",\n\t\t\t\t\t\t//togglerClass: \"toggler\",\n\t\t\t\t\t\t//buttonClass: \"button\",\n\t\t\t\t\t\t//contentSelector: \".content\",\n\t\t\t\t\t\t//contentIgnoreSelector: \"span\",\n\t\t\t\t\t\ttogglerTip_open: \"Close This Pane\",\n\t\t\t\t\t\ttogglerTip_closed: \"Open This Pane\",\n\t\t\t\t\t\tresizerTip:\t\"Resize This Pane\"\n\t\t\t\t\t},\n\t\t\t\t\twest: {\n\t\t\t\t\t\tpaneClass: \"leftContent\",\n\t\t\t\t\t\tspacing_closed:\t14,\n\t\t\t\t\t\ttogglerLength_closed: 14,\n\t\t\t\t\t\ttogglerAlign_closed: \"top\",\n\t\t\t\t\t\t//togglerLength_open: 0,\n\t\t\t\t\t\t//\teffect defaults - overridden on some panes\n\t\t\t\t\t\t//slideTrigger_open:\t\"mouseover\",\n\t\t\t\t\t\t//initClosed:\ttrue,\n\t\t\t\t\t\tfxName:\t\"drop\",\n\t\t\t\t\t\tfxSpeed: \"normal\",\n\t\t\t\t\t\tfxSettings: { easing: \"\" }\n\t\t\t\t\t},\n\t\t\t\t\tnorth: {\n\t\t\t\t\t\tpaneClass: \"none\",\n\t\t\t\t\t\tresizerClass: \"none\",\n\t\t\t\t\t\ttogglerClass: \"none\",\n\t\t\t\t\t\tspacing_open: 0,\n\t\t\t\t\t\ttogglerLength_open:\t0,\n\t\t\t\t\t\ttogglerLength_closed: -1,\n\t\t\t\t\t\tslidable: false,\n\t\t\t\t\t\tfxName:\t\"none\"\n\t\t\t\t\t},\n\t\t\t\t\tcenter: {\n\t\t\t\t\t\tpaneSelector: \"#mainContent\"\n\t\t\t\t\t}\n\t\t\t\t}\n    \t\t</script>';\n\t\t}\n\n\t\tif (! empty($conf->global->MAIN_MENU_USE_JQUERY_ACCORDION))\n\t\t{\n\t\t\tprint \"\\n\".'<script type=\"text/javascript\">\n\t\t\t\t\tjQuery(document).ready(function () {\n\t\t\t\t\t\tjQuery( \".vmenu\" ).accordion({\n\t\t\t\t\t\t\tautoHeight: false,\n\t\t\t\t\t\t\tevent: \"mouseover\",\n\t\t\t\t\t\t\t//collapsible: true,\n\t\t\t\t\t\t\t//active: 2,\n\t\t\t\t\t\t\theader: \"> .blockvmenupair > .menu_titre\"\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\t</script>';\n\t\t}\n\n    \t// Wrapper to show tooltips\n    \tprint \"\\n\".'<script type=\"text/javascript\">\n                    jQuery(document).ready(function () {\n                    \tjQuery(function() {\n                        \t$(\".classfortooltip\").tipTip({maxWidth: \"600px\", edgeOffset: 10, delay: 50, fadeIn: 50, fadeOut: 50});\n                        });\n                    });\n                </script>';\n\t}\n\n\t/*\n\t * Top menu\n\t */\n    $top_menu=isset($conf->browser->phone)?$conf->smart_menu:$conf->top_menu;\n    if (GETPOST('menu')) $top_menu=GETPOST('menu'); // menu=eldy_backoffice.php\n\n\t// Load the top menu manager\n\t$result=dol_include_once(\"/includes/menus/standard/\".$top_menu);\n\tif (! $result)\t// If failed to include, we try with standard\n\t{\n\t\t$top_menu='eldy_backoffice.php';\n\t\tinclude_once(DOL_DOCUMENT_ROOT.\"/includes/menus/standard/\".$top_menu);\n\t}\n\n\n    print \"\\n\".'<!-- Start top horizontal menu '.$top_menu.' -->'.\"\\n\";\n\n    if ($conf->use_javascript_ajax && $conf->global->MAIN_MENU_USE_JQUERY_LAYOUT) print '<div class=\"ui-layout-north\"> <!-- Begin top layout -->'.\"\\n\";\n\n    print '<div id=\"tmenu_tooltip\" class=\"tmenu\">'.\"\\n\";\n\n    // Show menu\n    $menutop = new MenuTop($db);\n\t$menutop->atarget=$target;\n\t$menutop->showmenu();      // This contains a \\n\n\n\tprint \"</div>\\n\";\n\n\t// Link to login card\n\t$loginhtmltext=''; $logintext='';\n\tif ($user->societe_id)\n\t{\n\t\t$thirdpartystatic=new Societe($db);\n\t\t$thirdpartystatic->fetch($user->societe_id);\n\t\t$companylink=' ('.$thirdpartystatic->getNomUrl('','').')';\n\t\t$company=' ('.$langs->trans(\"Company\").': '.$thirdpartystatic->name.')';\n\t}\n\t$logintext='<div class=\"login\"><a href=\"'.DOL_URL_ROOT.'/user/fiche.php?id='.$user->id.'\"';\n\t$logintext.=$menutop->atarget?(' target=\"'.$menutop->atarget.'\"'):'';\n\t$logintext.='>'.$user->login.'</a>';\n\tif ($user->societe_id) $logintext.=$companylink;\n\t$logintext.='</div>';\n\t$loginhtmltext.='<u>'.$langs->trans(\"User\").'</u>';\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"Name\").'</b>: '.$user->getFullName($langs);\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"Login\").'</b>: '.$user->login;\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"Administrator\").'</b>: '.yn($user->admin);\n\t$type=($user->societe_id?$langs->trans(\"External\").$company:$langs->trans(\"Internal\"));\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"Type\").'</b>: '.$type;\n    $loginhtmltext.='<br><b>'.$langs->trans(\"IPAddress\").'</b>: '.$_SERVER[\"REMOTE_ADDR\"];\n\t$loginhtmltext.='<br>';\n\t$loginhtmltext.='<br><u>'.$langs->trans(\"Connection\").'</u>';\n\tif ($conf->global->MAIN_MODULE_MULTICOMPANY) $loginhtmltext.='<br><b>'.$langs->trans(\"ConnectedOnMultiCompany\").'</b>: '.$conf->entity.' (user entity '.$user->entity.')';\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"ConnectedSince\").'</b>: '.dol_print_date($user->datelastlogin,\"dayhour\");\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"PreviousConnexion\").'</b>: '.dol_print_date($user->datepreviouslogin,\"dayhour\");\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"AuthenticationMode\").'</b>: '.$_SESSION[\"dol_authmode\"];\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"CurrentTheme\").'</b>: '.$conf->theme;\n\t$s=picto_from_langcode($langs->getDefaultLang());\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"CurrentUserLanguage\").'</b>: '.($s?$s.' ':'').$langs->getDefaultLang();\n\t$loginhtmltext.='<br><b>'.$langs->trans(\"Browser\").'</b>: '.$conf->browser->name.' ('.$_SERVER['HTTP_USER_AGENT'].')';\n\tif (! empty($conf->browser->phone)) $loginhtmltext.='<br><b>'.$langs->trans(\"Phone\").'</b>: '.$conf->browser->phone;\n\tif (! empty($_SESSION[\"disablemodules\"])) $loginhtmltext.='<br><b>'.$langs->trans(\"DisabledModules\").'</b>: <br>'.join(', ',explode(',',$_SESSION[\"disablemodules\"]));\n\n\t// Link info\n\t$logouthtmltext=''; $logouttext='';\n\t$logouthtmltext=$langs->trans(\"Logout\").'<br>';\n\t//$logouthtmltext.=\"<br>\";\n\tif ($_SESSION[\"dol_authmode\"] != 'forceuser'\n\t&& $_SESSION[\"dol_authmode\"] != 'http')\n\t{\n\t\t$logouttext.='<a href=\"'.DOL_URL_ROOT.'/user/logout.php\"';\n\t\t$logouttext.=$menutop->atarget?(' target=\"'.$menutop->atarget.'\"'):'';\n\t\t$logouttext.='>';\n\t\t$logouttext.='<img class=\"login\" border=\"0\" width=\"14\" height=\"14\" src=\"'.DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/logout.png\"';\n\t\t$logouttext.=' alt=\"'.dol_escape_htmltag($langs->trans(\"Logout\")).'\" title=\"\"';\n\t\t$logouttext.='>';\n\t\t$logouttext.='</a>';\n\t}\n\telse\n\t{\n\t\t$logouttext.='<img class=\"login\" border=\"0\" width=\"14\" height=\"14\" src=\"'.DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/logout.png\"';\n\t\t$logouttext.=' alt=\"'.dol_escape_htmltag($langs->trans(\"Logout\")).'\" title=\"\"';\n\t\t$logouttext.='>';\n\t}\n\n\tprint '<div class=\"login_block\">'.\"\\n\";\n    print '<table class=\"nobordernopadding\" summary=\"\"><tr>';\n\n\tprint $html->textwithtooltip('',$loginhtmltext,2,1,$logintext,'',1);\n\n\t// Select entity\n\tif (! empty($conf->global->MAIN_MODULE_MULTICOMPANY))\n\t{\n\t\tif ($user->admin && ! $user->entity)\n\t\t{\n\t\t\t$res=@dol_include_once('/multicompany/class/actions_multicompany.class.php');\n\n\t\t\tif ($res)\n\t\t\t{\n\t\t\t\t$mc = new ActionsMulticompany($db);\n\t\t\t\t$mc->showInfo($conf->entity);\n\t\t\t}\n\t\t}\n\t}\n\n\tprint $html->textwithtooltip('',$logouthtmltext,2,1,$logouttext,'',1);\n\n\t// Link to print main content area\n\tif (empty($conf->global->MAIN_PRINT_DISABLELINK) && empty($conf->browser->phone))\n\t{\n\t\t$qs=$_SERVER[\"QUERY_STRING\"].($_SERVER[\"QUERY_STRING\"]?'&':'').$morequerystring;\n\t\t$text ='<a href=\"'.$_SERVER[\"PHP_SELF\"].'?'.$qs.($qs?'&':'').'optioncss=print\" target=\"_blank\">';\n\t\t$text.='<img class=\"printer\" border=\"0\" width=\"14\" height=\"14\" src=\"'.DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/printer.png\"';\n\t\t$text.=' title=\"\" alt=\"\">';\n\t\t$text.='</a>';\n\t\tprint $html->textwithtooltip('',$langs->trans(\"PrintContentArea\"),2,1,$text,'',1);\n\t}\n\n\tprint '</tr></table>'.\"\\n\";\n\tprint \"</div>\\n\";\n\n\tif ($conf->use_javascript_ajax && $conf->global->MAIN_MENU_USE_JQUERY_LAYOUT) print \"</div><!-- End top layout -->\\n\";\n\n\tprint \"<!-- End top horizontal menu -->\\n\";\n\n\tif (! $conf->use_javascript_ajax || ! $conf->global->MAIN_MENU_USE_JQUERY_LAYOUT) print '<table width=\"100%\" class=\"notopnoleftnoright\" summary=\"leftmenutable\" id=\"undertopmenu\"><tr>';\n\n\n}\n\n\n/**\n *  Show left menu bar\n *  @param      menu_array_before \t       Table of menu entries to show before entries of menu handler\n *  @param      helppagename    \t       Name of wiki page for help ('' by default).\n * \t\t\t\t                           Syntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t\t\t\t                  For other external page: http://server/url\n *  @param      moresearchform             Search Form Permanent Supplemental\n *  @param      menu_array_after           Table of menu entries to show after entries of menu handler\n *  @param      leftmenuwithoutmainarea    Must be set to 1. 0 by default for backward compatibility with old modules.\n *  @param      title                      Title of web page\n */\nfunction left_menu($menu_array_before, $helppagename='', $moresearchform='', $menu_array_after='', $leftmenuwithoutmainarea=0, $title='')\n{\n\tglobal $user, $conf, $langs, $db;\n\n\t$searchform='';\n\t$bookmarks='';\n\n\tif ($conf->use_javascript_ajax && $conf->global->MAIN_MENU_USE_JQUERY_LAYOUT) print \"\\n\".'<div class=\"ui-layout-west\"> <!-- Begin left layout -->'.\"\\n\";\n\telse print '<td class=\"vmenu\" valign=\"top\">';\n\n\tprint \"\\n\";\n\n\t// Instantiate hooks of thirdparty module\n\tif (is_array($conf->hooks_modules) && !empty($conf->hooks_modules))\n\t{\n\t\trequire_once(DOL_DOCUMENT_ROOT.'/core/class/commonobject.class.php');\n\t\t$object = new CommonObject($db);\n\t\t$object->callHooks(array('searchform','leftblock'));\n\t}\n\n\t// Define $searchform\n\tif ($conf->societe->enabled && $conf->global->MAIN_SEARCHFORM_SOCIETE && $user->rights->societe->lire)\n\t{\n\t\t$langs->load(\"companies\");\n\t\t$searchform.=printSearchForm(DOL_URL_ROOT.'/societe/societe.php', DOL_URL_ROOT.'/societe/societe.php',\n\t\timg_object('','company').' '.$langs->trans(\"ThirdParties\"), 'soc', 'socname');\n\t}\n\n\tif ($conf->societe->enabled && $conf->global->MAIN_SEARCHFORM_CONTACT && $user->rights->societe->lire)\n\t{\n\t\t$langs->load(\"companies\");\n\t\t$searchform.=printSearchForm(DOL_URL_ROOT.'/contact/index.php', DOL_URL_ROOT.'/contact/index.php',\n\t\timg_object('','contact').' '.$langs->trans(\"Contacts\"), 'contact', 'contactname');\n\t}\n\n\tif ((($conf->product->enabled && $user->rights->produit->lire) || ($conf->service->enabled && $user->rights->service->lire))\n\t&& $conf->global->MAIN_SEARCHFORM_PRODUITSERVICE)\n\t{\n\t\t$langs->load(\"products\");\n\t\t$searchform.=printSearchForm(DOL_URL_ROOT.'/product/liste.php', DOL_URL_ROOT.'/product/liste.php',\n\t\timg_object('','product').' '.$langs->trans(\"Products\").\"/\".$langs->trans(\"Services\"), 'products', 'sall');\n\t}\n\n\tif ($conf->adherent->enabled && $conf->global->MAIN_SEARCHFORM_ADHERENT && $user->rights->adherent->lire)\n\t{\n\t\t$langs->load(\"members\");\n\t\t$searchform.=printSearchForm(DOL_URL_ROOT.'/adherents/liste.php', DOL_URL_ROOT.'/adherents/liste.php',\n\t\timg_object('','user').' '.$langs->trans(\"Members\"), 'member', 'sall');\n\t}\n\n\t// Search form hook for external modules\n\tif (! empty($object->hooks))\n\t{\n\t\t$searchform.='<!-- Begin search form hook area -->'.\"\\n\";\n\n\t\tforeach($object->hooks as $hook)\n\t\t{\n\t\t\tif ($hook['type'] == 'searchform' && ! empty($hook['modules']))\n\t\t\t{\n\t\t\t\tforeach($hook['modules'] as $module)\n\t\t\t\t{\n\t\t\t\t\tif (method_exists($module,'printSearchForm')) $searchform.=$module->printSearchForm();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n        $searchform.=\"\\n\".'<!-- End of search form hook area -->'.\"\\n\";\n    }\n\n\t// Define $bookmarks\n\tif ($conf->bookmark->enabled && $user->rights->bookmark->lire)\n\t{\n\t\tinclude_once (DOL_DOCUMENT_ROOT.'/bookmarks/bookmarks.lib.php');\n\t\t$langs->load(\"bookmarks\");\n\n\t\t$bookmarks=printBookmarksList($db, $langs);\n\t}\n\n    $left_menu=isset($conf->browser->phone)?$conf->smart_menu:$conf->top_menu;\n    if (GETPOST('menu')) $left_menu=GETPOST('menu');     // menu=eldy_backoffice.php\n\n    // Load the left menu manager\n\t$result=dol_include_once(\"/includes/menus/standard/\".$left_menu);\n\tif (! $result)\t// If menu manager removed or not found\n\t{\n\t\t$left_menu='eldy_backoffice.php';\n\t\tinclude_once(DOL_DOCUMENT_ROOT .\"/includes/menus/standard/\".$left_menu);\n\t}\n\n    // Left column\n    print '<!-- Begin left area - menu '.$left_menu.' -->'.\"\\n\";\n\n    print '<div class=\"vmenu\">'.\"\\n\";\n\n\t$menuleft=new MenuLeft($db,$menu_array_before,$menu_array_after);\n\t$menuleft->showmenu(); // output menu_array and menu found in database\n\n\n\t// Show other forms\n\tif ($searchform)\n\t{\n\t\tprint \"\\n\";\n\t\tprint \"<!-- Begin SearchForm -->\\n\";\n\t\tprint '<div id=\"blockvmenusearch\" class=\"blockvmenusearch\">'.\"\\n\";\n\t\tprint $searchform;\n\t\tprint '</div>'.\"\\n\";\n\t\tprint \"<!-- End SearchForm -->\\n\";\n\t}\n\n\t// More search form\n\tif ($moresearchform)\n\t{\n\t\tprint $moresearchform;\n\t}\n\n\t// Bookmarks\n\tif ($bookmarks)\n\t{\n\t\tprint \"\\n\";\n\t\tprint \"<!-- Begin Bookmarks -->\\n\";\n\t\tprint '<div id=\"blockvmenubookmarks\" class=\"blockvmenubookmarks\">'.\"\\n\";\n\t\tprint $bookmarks;\n\t\tprint '</div>'.\"\\n\";\n\t\tprint \"<!-- End Bookmarks -->\\n\";\n\t}\n\n\t// Link to Dolibarr wiki pages\n\tif ($helppagename && empty($conf->global->MAIN_HELP_DISABLELINK))\n\t{\n\t\t$langs->load(\"help\");\n\n\t\t$helpbaseurl='';\n\t\t$helppage='';\n\t\t$mode='';\n\n\t\t// Get helpbaseurl, helppage and mode from helppagename and langs\n\t\t$arrayres=getHelpParamFor($helppagename,$langs);\n\t\t$helpbaseurl=$arrayres['helpbaseurl'];\n\t\t$helppage=$arrayres['helppage'];\n\t\t$mode=$arrayres['mode'];\n\n\t\t// Link to help pages\n\t\tif ($helpbaseurl && $helppage)\n\t\t{\n\t\t\tprint '<div id=\"blockvmenuhelp\" class=\"blockvmenuhelp\">';\n\t\t\tprint '<a class=\"help\" target=\"_blank\" title=\"'.$langs->trans($mode == 'wiki' ? 'GoToWikiHelpPage': 'GoToHelpPage');\n\t\t\tif ($mode == 'wiki') print ' - '.$langs->trans(\"PageWiki\").' &quot;'.dol_escape_htmltag(strtr($helppage,'_',' ')).'&quot;';\n\t\t\tprint '\" href=\"';\n\t\t\tprint sprintf($helpbaseurl,urlencode(html_entity_decode($helppage)));\n\t\t\tprint '\">';\n\t\t\tprint img_picto('',DOL_URL_ROOT.'/theme/common/helpdoc.png','',1).' ';\n\t\t\tprint $langs->trans($mode == 'wiki' ? 'OnlineHelp': 'Help');\n\t\t\t//if ($mode == 'wiki') print ' ('.dol_trunc(strtr($helppage,'_',' '),8).')';\n\t\t\tprint '</a>';\n\t\t\tprint '</div>';\n\t\t}\n\t}\n\n    // Link to bugtrack\n\tif (! empty($conf->global->MAIN_SHOW_BUGTRACK_LINK))\n\t{\n\t\t$bugbaseurl='http://savannah.nongnu.org/bugs/?';\n\t\t$bugbaseurl.='func=additem&group=dolibarr&privacy=1&';\n\t\t$bugbaseurl.=\"&details=\";\n\t\t$bugbaseurl.=urlencode(\"\\n\\n\\n\\n\\n-------------\\n\");\n\t\t$bugbaseurl.=urlencode($langs->trans(\"Version\").\": \".DOL_VERSION.\"\\n\");\n\t\t$bugbaseurl.=urlencode($langs->trans(\"Server\").\": \".$_SERVER[\"SERVER_SOFTWARE\"].\"\\n\");\n\t\t$bugbaseurl.=urlencode($langs->trans(\"Url\").\": \".$_SERVER[\"REQUEST_URI\"].\"\\n\");\n\t\tprint '<div class=\"help\"><a class=\"help\" target=\"_blank\" href=\"'.$bugbaseurl.'\">'.$langs->trans(\"FindBug\").'</a></div>';\n\t}\n\tprint \"\\n\";\n\n\tprint \"</div>\\n\";\n\tprint \"<!-- End left vertical menu -->\\n\";\n\n\tprint \"\\n\";\n\n\t// Left block hook for external modules\n\tif (! empty($object->hooks))\n\t{\n\t\tprint '<!-- Begin left block hook area -->'.\"\\n\";\n\n\t\tforeach($object->hooks as $hook)\n\t\t{\n\t\t\tif ($hook['type'] == 'leftblock' && ! empty($hook['modules']))\n\t\t\t{\n\t\t\t\tforeach($hook['modules'] as $module)\n\t\t\t\t{\n\t\t\t\t\tif (method_exists($module,'printLeftBlock')) $module->printLeftBlock();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n        print \"\\n\".'<!-- End of left block hook area -->'.\"\\n\";\n    }\n\n\tif ($conf->use_javascript_ajax && $conf->global->MAIN_MENU_USE_JQUERY_LAYOUT) print '</div> <!-- End left layout -->'.\"\\n\";\n\telse print '</td>';\n\n\tprint \"\\n\";\n\tprint '<!-- End of left area -->'.\"\\n\";\n\tprint \"\\n\";\n    print '<!-- Begin right area -->'.\"\\n\";\n\n\n\tif (empty($leftmenuwithoutmainarea)) main_area($title);\n}\n\n/**\n *  Begin main area\n */\nfunction main_area($title='')\n{\n\tglobal $conf, $langs;\n\n\tif ($conf->use_javascript_ajax && $conf->global->MAIN_MENU_USE_JQUERY_LAYOUT)\n\t{\n\t\tprint '<div id=\"mainContent\"><div class=\"ui-layout-center\"> <!-- begin main layout -->'.\"\\n\";\n\t\tprint '<table width=\"100%\" class=\"notopnoleftnoright\" summary=\"centermenutable\" id=\"undertopmenu\"><tr>';\n\t}\n\n\tprint '<td valign=\"top\">'.\"\\n\";\n\n\tprint \"\\n\";\n\n\tprint '<div class=\"fiche\"> <!-- begin div class=\"fiche\" -->'.\"\\n\";\n    if (preg_match('/^smartphone/',$conf->smart_menu) && isset($conf->browser->phone))\n    {\n        print '<div data-role=\"page\"> <!-- begin div data-role=\"page\" -->';\n\n        print '<div data-role=\"header\" data-nobackbtn=\"false\" data-theme=\"b\">';\n        print '<div id=\"dol-homeheader\">'.\"\\n\";\n        $appli='Dolibarr';\n        if (! empty($conf->global->MAIN_APPLICATION_TITLE)) $appli=$conf->global->MAIN_APPLICATION_TITLE;\n        print $appli;\n        print '</div>'.\"\\n\";\n        print '</div>'.\"\\n\";\n        print \"\\n\";\n\n        print '<div data-role=\"content\"> <!-- begin div data-role=\"content\" -->'.\"\\n\";\n    }\n\tif (! empty($conf->global->MAIN_ONLY_LOGIN_ALLOWED)) print info_admin($langs->trans(\"WarningYouAreInMaintenanceMode\",$conf->global->MAIN_ONLY_LOGIN_ALLOWED));\n}\n\n\n/**\n *  Return helpbaseurl, helppage and mode\n *  @param   helppagename\t\tPage name (EN:xxx,ES:eee,FR:fff...)\n *  @param   langs\t\t\t\tLanguage\n */\nfunction getHelpParamFor($helppagename,$langs)\n{\n\tif (preg_match('/^http/i',$helppagename))\n\t{\n\t\t// If complete URL\n\t\t$helpbaseurl='%s';\n\t\t$helppage=$helppagename;\n\t\t$mode='local';\n\t}\n\telse\n\t{\n\t\t// If WIKI URL\n\t\tif (preg_match('/^es/i',$langs->defaultlang))\n\t\t{\n\t\t\t$helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/ES:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n\t\t}\n\t\tif (preg_match('/^fr/i',$langs->defaultlang))\n\t\t{\n\t\t\t$helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/FR:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n\t\t}\n\t\tif (empty($helppage))\t// If help page not already found\n\t\t{\n\t\t\t$helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/EN:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n\t\t}\n\t\t$mode='wiki';\n\t}\n\treturn array('helpbaseurl'=>$helpbaseurl,'helppage'=>$helppage,'mode'=>$mode);\n}\n\n\n/**\n *  Show a search area\n *  @param   urlaction          Url post\n *  @param   urlobject          Url of the link under the search box\n *  @param   title              Title search area\n *  @param   htmlmodesearch     'search'\n *  @param   htmlinputname      Field Name input form\n */\nfunction printSearchForm($urlaction,$urlobject,$title,$htmlmodesearch='search',$htmlinputname)\n{\n\tglobal $langs;\n\t$ret='';\n\t$ret.='<div class=\"menu_titre\">';\n\t$ret.='<a class=\"vsmenu\" href=\"'.$urlobject.'\">';\n\t$ret.=$title.'</a><br>';\n\t$ret.='</div>';\n\t$ret.='<form action=\"'.$urlaction.'\" method=\"post\">';\n\t$ret.='<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t$ret.='<input type=\"hidden\" name=\"mode\" value=\"search\">';\n\t$ret.='<input type=\"hidden\" name=\"mode-search\" value=\"'.$htmlmodesearch.'\">';\n\t$ret.='<input type=\"text\" class=\"flat\" name=\"'.$htmlinputname.'\" size=\"10\">&nbsp;';\n\t$ret.='<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Go\").'\">';\n\t$ret.=\"</form>\\n\";\n\treturn $ret;\n}\n\n\n/**\n *\t\tShow HTML footer\n *\t\tClose div /DIV data-role=page + /DIV class=fiche + /DIV /DIV main layout + /BODY + /HTML\n * \t\t@param   \tfoot    \t\tA text to add in HTML generated page\n */\nif (! function_exists(\"llxFooter\"))\n{\n\tfunction llxFooter($foot='')\n\t{\n\t\tglobal $conf, $langs, $dolibarr_auto_user, $micro_start_time;\n\n\t\t// Core error message\n\t\tif (defined(\"MAIN_CORE_ERROR\") && constant(\"MAIN_CORE_ERROR\") == 1)\n\t\t{\n\t\t\t// Ajax version\n\t\t\tif ($conf->use_javascript_ajax)\n\t\t\t{\n\t\t\t\t$title = img_warning().' '.$langs->trans('CoreErrorTitle');\n\t\t\t\tprint ajax_dialog($title, $langs->trans('CoreErrorMessage'));\n\t\t\t}\n\t\t\t// html version\n\t\t\telse\n\t\t\t{\n\t\t\t\t$msg = img_warning().' '.$langs->trans('CoreErrorMessage');\n\t\t\t\tprint '<div class=\"error\">'.$msg.'</div>';\n\t\t\t}\n\n\t\t\tdefine(\"MAIN_CORE_ERROR\",0);\n\t\t}\n\n        print \"\\n\\n\";\n        if (preg_match('/^smartphone/',$conf->smart_menu) && isset($conf->browser->phone))\n        {\n            print '</div> <!-- end div data-role=\"content\" -->'.\"\\n\";\n            print '</div> <!-- end div data-role=\"page\" -->'.\"\\n\";\n        }\n\t\tprint '</div> <!-- end div class=\"fiche\" -->'.\"\\n\";\n\n\n\t\tprint \"\\n\".'</td></tr></table> <!-- end right area -->'.\"\\n\";\n\t\tif ($conf->use_javascript_ajax && ! empty($conf->global->MAIN_MENU_USE_JQUERY_LAYOUT)) print '</div></div> <!-- end main layout -->'.\"\\n\";\n\n        print \"\\n\";\n        if ($foot) print '<!-- '.$foot.' -->'.\"\\n\";\n\n        if (! empty($conf->global->MAIN_HTML_FOOTER)) print $conf->global->MAIN_HTML_FOOTER.\"\\n\";\n\n\n\t\t// If there is some logs in buffer to show\n\t\tif (sizeof($conf->logbuffer))\n\t\t{\n\t\t\tprint \"\\n\";\n\t\t\tprint \"<!-- Start of log output\\n\";\n\t\t\t//print '<div class=\"hidden\">'.\"\\n\";\n\t\t\tforeach($conf->logbuffer as $logline)\n\t\t\t{\n\t\t\t\tprint $logline.\"<br>\\n\";\n\t\t\t}\n\t\t\t//print '</div>'.\"\\n\";\n\t\t\tprint \"End of log output -->\\n\";\n\t\t}\n\n\t\t// End of tuning\n        if (! empty($_SERVER['DOL_TUNING']))\n        {\n            $micro_end_time=dol_microtime_float(true);\n            print \"\\n\".'<script type=\"text/javascript\">console.log(\"';\n            if (! empty($conf->global->MEMCACHED_SERVER)) print 'MEMCACHED_SERVER='.$conf->global->MEMCACHED_SERVER.' - ';\n            print 'MAIN_OPTIMIZE_SPEED='.(isset($conf->global->MAIN_OPTIMIZE_SPEED)?$conf->global->MAIN_OPTIMIZE_SPEED:'off');\n            print ' - Build time: '.ceil(1000*($micro_end_time-$micro_start_time)).' ms';\n            if (function_exists(\"memory_get_usage\"))\n            {\n                print ' - Mem: '.memory_get_usage();\n            }\n            if (function_exists(\"xdebug_memory_usage\"))\n            {\n                print ' - XDebug time: '.ceil(1000*xdebug_time_index()).' ms';\n                print ' - XDebug mem: '.xdebug_memory_usage();\n                print ' - XDebug mem peak: '.xdebug_peak_memory_usage();\n            }\n            if (function_exists(\"zend_loader_file_encoded\"))\n            {\n                print ' - Zend encoded file: '.(zend_loader_file_encoded()?'yes':'no');\n            }\n            print '\")</script>'.\"\\n\";\n\n            // Add Xdebug coverage of code\n            if (defined('XDEBUGCOVERAGE')) { var_dump(xdebug_get_code_coverage()); }\n        }\n\n\t\tprint \"</body>\\n\";\n\t\tprint \"</html>\\n\";\n\t}\n}\n\n?>"], "filenames": ["htdocs/lib/security.lib.php", "htdocs/main.inc.php"], "buggy_code_start_loc": [184, 78], "buggy_code_end_loc": [185, 415], "fixing_code_start_loc": [184, 79], "fixing_code_end_loc": [185, 418], "type": "CWE-79", "message": "Multiple cross-site scripting (XSS) vulnerabilities in Dolibarr 3.1.0 allow remote attackers to inject arbitrary web script or HTML via (1) the username parameter in a setup action to admin/company.php, or the PATH_INFO to (2) admin/security_other.php, (3) admin/events.php, or (4) admin/user.php.", "other": {"cve": {"id": "CVE-2011-4329", "sourceIdentifier": "secalert@redhat.com", "published": "2011-11-28T11:55:09.970", "lastModified": "2023-02-10T16:51:26.480", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Multiple cross-site scripting (XSS) vulnerabilities in Dolibarr 3.1.0 allow remote attackers to inject arbitrary web script or HTML via (1) the username parameter in a setup action to admin/company.php, or the PATH_INFO to (2) admin/security_other.php, (3) admin/events.php, or (4) admin/user.php."}, {"lang": "es", "value": "Varias vulnerabilidades de ejecuci\u00f3n de comandos en sitios cruzados (XSS) en Dolibarr v3.1.0 permiten a atacantes remotos inyectar secuencias de comandos web o HTML a trav\u00e9s de (1) el par\u00e1metro username en una acci\u00f3n de configuraci\u00f3n en admin/company.php o el PATH_INFO en (2) admin/security_other.php, en (3) admin/events.php, o (4) admin/user.php."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:dolibarr:dolibarr_erp\\/crm:3.1.0:*:*:*:*:*:*:*", "matchCriteriaId": "53CB14D6-4387-46BC-B602-D400DB435945"}]}]}], "references": [{"url": "http://archives.neohapsis.com/archives/bugtraq/2011-11/0052.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://archives.neohapsis.com/archives/bugtraq/2011-11/0138.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://www.securityfocus.com/bid/50617", "source": "secalert@redhat.com", "tags": ["Broken Link", "Third Party Advisory", "VDB Entry"]}, {"url": "https://doliforge.org/tracker/?func=detail&aid=232&group_id=144", "source": "secalert@redhat.com", "tags": ["Permissions Required"]}, {"url": "https://github.com/Dolibarr/dolibarr/commit/762f98ab4137749d0993612b4e3544a4207e78a1", "source": "secalert@redhat.com", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Dolibarr/dolibarr/commit/762f98ab4137749d0993612b4e3544a4207e78a1"}}