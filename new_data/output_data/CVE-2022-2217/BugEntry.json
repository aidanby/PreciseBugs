{"buggy_code": ["\"use strict\"\n\nconst parsePath = require(\"parse-path\")\n    , normalizeUrl = require(\"normalize-url\")\n\n/**\n * parseUrl\n * Parses the input url.\n *\n * **Note**: This *throws* if invalid urls are provided.\n *\n * @name parseUrl\n * @function\n * @param {String} url The input url.\n * @param {Boolean|Object} normalize Wheter to normalize the url or not.\n *                         Default is `false`. If `true`, the url will\n *                         be normalized. If an object, it will be the\n *                         options object sent to [`normalize-url`](https://github.com/sindresorhus/normalize-url).\n *\n *                         For SSH urls, normalize won't work.\n *\n * @return {Object} An object containing the following fields:\n *\n *  - `protocols` (Array): An array with the url protocols (usually it has one element).\n *  - `protocol` (String): The first protocol, `\"ssh\"` (if the url is a ssh url) or `\"file\"`.\n *  - `port` (null|Number): The domain port.\n *  - `resource` (String): The url domain (including subdomains).\n *  - `user` (String): The authentication user (usually for ssh urls).\n *  - `pathname` (String): The url pathname.\n *  - `hash` (String): The url hash.\n *  - `search` (String): The url querystring value.\n *  - `href` (String): The input url.\n *  - `query` (Object): The url querystring, parsed as object.\n */\nfunction parseUrl(url, normalize = false) {\n    if (typeof url !== \"string\" || !url.trim()) {\n        throw new Error(\"Invalid url.\")\n    }\n    if (normalize) {\n        if (typeof normalize !== \"object\") {\n            normalize = {\n                stripHash: false\n            }\n        }\n        url = normalizeUrl(url, normalize)\n    }\n    const parsed = parsePath(url)\n    return parsed;\n}\n\nmodule.exports = parseUrl;\n", "{\n  \"name\": \"parse-url\",\n  \"version\": \"5.0.8\",\n  \"description\": \"An advanced url parser supporting git urls too.\",\n  \"main\": \"lib/index.js\",\n  \"directories\": {\n    \"example\": \"example\",\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"test\": \"node test\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/IonicaBizau/parse-url.git\"\n  },\n  \"keywords\": [\n    \"parse\",\n    \"url\",\n    \"node\",\n    \"git\",\n    \"advanced\"\n  ],\n  \"author\": \"Ionic\u0103 Biz\u0103u <bizauionica@gmail.com> (https://ionicabizau.net)\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/IonicaBizau/parse-url/issues\"\n  },\n  \"homepage\": \"https://github.com/IonicaBizau/parse-url\",\n  \"devDependencies\": {\n    \"tester\": \"^1.3.1\"\n  },\n  \"dependencies\": {\n    \"is-ssh\": \"^1.3.0\",\n    \"normalize-url\": \"^6.1.0\",\n    \"parse-path\": \"^4.0.4\",\n    \"protocols\": \"^1.4.0\"\n  },\n  \"files\": [\n    \"bin/\",\n    \"app/\",\n    \"lib/\",\n    \"dist/\",\n    \"src/\",\n    \"scripts/\",\n    \"resources/\",\n    \"menu/\",\n    \"cli.js\",\n    \"index.js\",\n    \"bloggify.js\",\n    \"bloggify.json\",\n    \"bloggify/\"\n  ],\n  \"blah\": {\n    \"description\": [\n      \"For low-level path parsing, check out [`parse-path`](https://github.com/IonicaBizau/parse-path). This very module is designed to parse urls. By default the urls are normalized.\"\n    ]\n  }\n}", "// Dependencies\nconst parseUrl = require(\"../lib\")\n    , tester = require(\"tester\")\n    , normalizeUrl = require(\"normalize-url\")\n    , qs = require(\"querystring\")\n    ;\n\nconst INPUTS = [\n    [\n        \"http://ionicabizau.net/blog\"\n      , {\n            protocols: [ \"http\" ]\n          , protocol: \"http\"\n          , port: null\n          , resource: \"ionicabizau.net\"\n          , user: \"\"\n          , pathname: \"/blog\"\n          , hash: \"\"\n          , search: \"\"\n        }\n    ]\n  , [\n        \"//ionicabizau.net/foo.js\"\n      , {\n            protocols: [\"http\"]\n          , protocol: \"http\"\n          , port: null\n          , resource: \"ionicabizau.net\"\n          , user: \"\"\n          , pathname: \"/foo.js\"\n          , hash: \"\"\n          , search: \"\"\n        }\n    ]\n  , [\n        \"http://domain.com/path/name#some-hash?foo=bar\"\n      , {\n            protocols: [\"http\"]\n          , protocol: \"http\"\n          , port: null\n          , resource: \"domain.com\"\n          , user: \"\"\n          , pathname: \"/path/name\"\n          , hash: \"some-hash?foo=bar\"\n          , search: \"\"\n        }\n    ]\n  , [\n        [\"git+ssh://git@host.xz/path/name.git\", false]\n      , {\n            protocols: [\"git\", \"ssh\"]\n          , protocol: \"git\"\n          , port: null\n          , resource: \"host.xz\"\n          , user: \"git\"\n          , pathname: \"/path/name.git\"\n          , hash: \"\"\n          , search: \"\"\n        }\n    ]\n  , [\n        [\"git@github.com:IonicaBizau/git-stats.git\", false]\n      , {\n            protocols: []\n          , protocol: \"ssh\"\n          , port: null\n          , resource: \"github.com\"\n          , user: \"git\"\n          , pathname: \"/IonicaBizau/git-stats.git\"\n          , hash: \"\"\n          , search: \"\"\n        }\n    ]\n  , [\n        [\"http://ionicabizau.net/with-true-normalize\", true]\n      , {\n            protocols: [ \"http\" ]\n          , protocol: \"http\"\n          , port: null\n          , resource: \"ionicabizau.net\"\n          , user: \"\"\n          , pathname: \"/with-true-normalize\"\n          , hash: \"\"\n          , search: \"\"\n        }\n    ]\n];\n\ntester.describe(\"check urls\", test => {\n    INPUTS.forEach(function (c) {\n        let url = Array.isArray(c[0]) ? c[0][0] : c[0]\n        test.should(\"support \" + url, () => {\n            const res = parseUrl(url, c[0][1] !== false);\n            if (c[0][1] !== false) {\n                url = normalizeUrl(url, {\n                    stripHash: false\n                })\n            }\n            c[1].query = qs.parse(c[1].search)\n            c[1].href = url\n            test.expect(res).toEqual(c[1]);\n        });\n    });\n\n    test.should(\"throw if url is empty\", () => {\n        test.expect(() => {\n            parseUrl(\"\")\n        }).toThrow(/invalid url/i)\n    })\n});\n"], "fixing_code": ["\"use strict\"\n\n// Dependencies\nconst parsePath = require(\"parse-path\")\n    , normalizeUrl = require(\"normalize-url\")\n\n\n/**\n * parseUrl\n * Parses the input url.\n *\n * **Note**: This *throws* if invalid urls are provided.\n *\n * @name parseUrl\n * @function\n * @param {String} url The input url.\n * @param {Boolean|Object} normalize Whether to normalize the url or not.\n *                         Default is `false`. If `true`, the url will\n *                         be normalized. If an object, it will be the\n *                         options object sent to [`normalize-url`](https://github.com/sindresorhus/normalize-url).\n *\n *                         For SSH urls, normalize won't work.\n *\n * @return {Object} An object containing the following fields:\n *\n *    - `protocols` (Array): An array with the url protocols (usually it has one element).\n *    - `protocol` (String): The first protocol, `\"ssh\"` (if the url is a ssh url) or `\"file\"`.\n *    - `port` (null|Number): The domain port.\n *    - `resource` (String): The url domain (including subdomains).\n *    - `user` (String): The authentication user (usually for ssh urls).\n *    - `pathname` (String): The url pathname.\n *    - `hash` (String): The url hash.\n *    - `search` (String): The url querystring value.\n *    - `href` (String): The input url.\n *    - `query` (Object): The url querystring, parsed as object.\n */\nconst parseUrl = (url, normalize = false) => {\n\n    // Constants\n    const GIT_RE = /((git@|http(s)?:\\/\\/)([\\w\\.@]+)(\\/|:))(([\\~,\\w,\\-,\\_,\\/]+)(.git){0,1}((\\/){0,1}))/\n\n    if (typeof url !== \"string\" || !url.trim()) {\n        throw new Error(\"Invalid url.\")\n    }\n\n    if (normalize) {\n        if (typeof normalize !== \"object\") {\n            normalize = {\n                stripHash: false\n            }\n        }\n        url = normalizeUrl(url, normalize)\n    }\n\n    const parsed = parsePath(url)\n\n    // Potential git-ssh urls\n    if (parsed.protocol === \"file\") {\n        const matched  = parsed.href.match(GIT_RE)\n        if (matched) {\n            parsed.protocols = [\"ssh\"]\n            parsed.protocol = \"ssh\"\n            parsed.resource = matched[4]\n            parsed.user = \"git\"\n            parsed.pathname = `/${matched[6]}`\n        }\n    }\n\n    return parsed;\n}\n\nmodule.exports = parseUrl;\n", "{\n  \"name\": \"parse-url\",\n  \"version\": \"5.0.8\",\n  \"description\": \"An advanced url parser supporting git urls too.\",\n  \"main\": \"lib/index.js\",\n  \"directories\": {\n    \"example\": \"example\",\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"test\": \"node test\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/IonicaBizau/parse-url.git\"\n  },\n  \"keywords\": [\n    \"parse\",\n    \"url\",\n    \"node\",\n    \"git\",\n    \"advanced\"\n  ],\n  \"author\": \"Ionic\u0103 Biz\u0103u <bizauionica@gmail.com> (https://ionicabizau.net)\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/IonicaBizau/parse-url/issues\"\n  },\n  \"homepage\": \"https://github.com/IonicaBizau/parse-url\",\n  \"devDependencies\": {\n    \"tester\": \"^1.3.1\"\n  },\n  \"dependencies\": {\n    \"is-ssh\": \"^1.4.0\",\n    \"normalize-url\": \"^6.1.0\",\n    \"parse-path\": \"^5.0.0\",\n    \"protocols\": \"^2.0.1\"\n  },\n  \"files\": [\n    \"bin/\",\n    \"app/\",\n    \"lib/\",\n    \"dist/\",\n    \"src/\",\n    \"scripts/\",\n    \"resources/\",\n    \"menu/\",\n    \"cli.js\",\n    \"index.js\",\n    \"bloggify.js\",\n    \"bloggify.json\",\n    \"bloggify/\"\n  ],\n  \"blah\": {\n    \"description\": [\n      \"For low-level path parsing, check out [`parse-path`](https://github.com/IonicaBizau/parse-path). This very module is designed to parse urls. By default the urls are normalized.\"\n    ]\n  }\n}\n", "// Dependencies\nconst parseUrl = require(\"../lib\")\n    , tester = require(\"tester\")\n    , normalizeUrl = require(\"normalize-url\")\n    ;\n\nconst INPUTS = [\n    [\n        \"http://ionicabizau.net/blog\"\n      , {\n            protocols: [ \"http\" ]\n          , protocol: \"http\"\n          , port: \"\"\n          , resource: \"ionicabizau.net\"\n          , user: \"\"\n          , pathname: \"/blog\"\n          , hash: \"\"\n          , search: \"\"\n          , query: {}\n        }\n    ]\n  , [\n        \"//ionicabizau.net/foo.js\"\n      , {\n            protocols: [\"http\"]\n          , protocol: \"http\"\n          , port: \"\"\n          , resource: \"ionicabizau.net\"\n          , user: \"\"\n          , pathname: \"/foo.js\"\n          , hash: \"\"\n          , search: \"\"\n          , query: {}\n        }\n    ]\n  , [\n        \"http://domain.com/path/name#some-hash?foo=bar\"\n      , {\n            protocols: [\"http\"]\n          , protocol: \"http\"\n          , port: \"\"\n          , resource: \"domain.com\"\n          , user: \"\"\n          , pathname: \"/path/name\"\n          , hash: \"some-hash?foo=bar\"\n          , search: \"\"\n          , query: {}\n        }\n    ]\n  , [\n        [\"git+ssh://git@host.xz/path/name.git\", false]\n      , {\n            protocols: [\"git\", \"ssh\"]\n          , protocol: \"git\"\n          , port: \"\"\n          , resource: \"host.xz\"\n          , user: \"git\"\n          , pathname: \"/path/name.git\"\n          , hash: \"\"\n          , search: \"\"\n          , query: {}\n        }\n    ]\n  , [\n        [\"git@github.com:IonicaBizau/git-stats.git\", false]\n      , {\n            protocols: [\"ssh\"]\n          , protocol: \"ssh\"\n          , port: \"\"\n          , resource: \"github.com\"\n          , user: \"git\"\n          , pathname: \"/IonicaBizau/git-stats.git\"\n          , hash: \"\"\n          , search: \"\"\n          , query: {}\n        }\n    ]\n  , [\n        [\"http://ionicabizau.net/with-true-normalize\", true]\n      , {\n            protocols: [ \"http\" ]\n          , protocol: \"http\"\n          , port: \"\"\n          , resource: \"ionicabizau.net\"\n          , user: \"\"\n          , pathname: \"/with-true-normalize\"\n          , hash: \"\"\n          , search: \"\"\n          , query: {}\n        }\n    ]\n];\n\ntester.describe(\"check urls\", test => {\n    INPUTS.forEach(function (c) {\n        let url = Array.isArray(c[0]) ? c[0][0] : c[0]\n        test.should(\"support \" + url, () => {\n            const res = parseUrl(url, c[0][1] !== false);\n\n            if (c[0][1] !== false) {\n                url = normalizeUrl(url, {\n                    stripHash: false\n                })\n            }\n\n            c[1].href = c[1].href || url\n            c[1].password = c[1].password || \"\"\n            test.expect(res).toEqual(c[1]);\n        });\n    });\n\n    test.should(\"throw if url is empty\", () => {\n        test.expect(() => {\n            parseUrl(\"\")\n        }).toThrow(/invalid url/i)\n    })\n});\n"], "filenames": ["lib/index.js", "package.json", "test/index.js"], "buggy_code_start_loc": [2, 34, 5], "buggy_code_end_loc": [47, 60, 101], "fixing_code_start_loc": [3, 34, 4], "fixing_code_end_loc": [69, 60, 108], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Generic in GitHub repository ionicabizau/parse-url prior to 7.0.0.", "other": {"cve": {"id": "CVE-2022-2217", "sourceIdentifier": "security@huntr.dev", "published": "2022-06-27T11:15:08.403", "lastModified": "2022-07-06T18:01:20.373", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Generic in GitHub repository ionicabizau/parse-url prior to 7.0.0."}, {"lang": "es", "value": "Una vulnerabilidad de tipo Cross-site Scripting (XSS) - Gen\u00e9rico en el repositorio de GitHub ionicabizau/parse-url versiones anteriores a 7.0.0"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 9.1, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.2}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:parse-url_project:parse-url:*:*:*:*:*:*:*:*", "versionEndExcluding": "7.0.0", "matchCriteriaId": "25CBCA8D-CA07-4A6A-BEAE-31B7E0A621BD"}]}]}], "references": [{"url": "https://github.com/ionicabizau/parse-url/commit/21c72ab9412228eea753e2abc48f8962707b1fe3", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/4e046c63-b1ca-4bcc-b418-29796918a71b", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/ionicabizau/parse-url/commit/21c72ab9412228eea753e2abc48f8962707b1fe3"}}