{"buggy_code": ["<?php\n/**\n * ---------------------------------------------------------------------\n * GLPI - Gestionnaire Libre de Parc Informatique\n * Copyright (C) 2015-2018 Teclib' and contributors.\n *\n * http://glpi-project.org\n *\n * based on GLPI - Gestionnaire Libre de Parc Informatique\n * Copyright (C) 2003-2014 by the INDEPNET Development Team.\n *\n * ---------------------------------------------------------------------\n *\n * LICENSE\n *\n * This file is part of GLPI.\n *\n * GLPI is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * GLPI is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with GLPI. If not, see <http://www.gnu.org/licenses/>.\n * ---------------------------------------------------------------------\n */\n\n// Ensure current directory when run from crontab\nchdir(__DIR__);\n\nuse Glpi\\Event;\n\ninclude ('../inc/includes.php');\n\nif (isset($_SERVER['argv'])) {\n   for ($i=1; $i<$_SERVER['argc']; $i++) {\n      $it    = explode(\"=\", $_SERVER['argv'][$i], 2);\n      $it[0] = preg_replace('/^--/', '', $it[0]);\n\n      $_GET[$it[0]] = (isset($it[1]) ? $it[1] : true);\n   }\n}\nif (isset($_GET['cycle'])) {\n   $cycle = $_GET['cycle'];\n} else {\n   $cycle = 25;\n}\n\nif (isset($_GET['only_tasks'])) {\n   $only_tasks = explode(',', $_GET['only_tasks']);\n} else {\n   $only_tasks = [];\n}\n\n$crontask = new Crontask();\n$query    = \"SELECT `id`, `name`\n             FROM `glpi_crontasks`\n             WHERE `state` = '\".Crontask::STATE_RUNNING.\"'\n                   AND unix_timestamp(`lastrun`) + $cycle * `frequency` < unix_timestamp(now())\";\n\n//Number of unlocked tasks by the script\n$unlocked_tasks = 0;\n\necho \"Date : \".Html::convDateTime($_SESSION['glpi_currenttime']).\"\\n\";\necho \"Start unlock script\\n\";\n\nforeach ($DB->request($query) as $task) {\n   if (!empty($only_tasks) && !in_array($task['name'], $only_tasks)) {\n      echo $task['name'].\" is still running but not in the whitelist\\n\";\n      continue;\n   }\n\n   $tmp['state'] = Crontask::STATE_WAITING;\n   $tmp['id']    = $task['id'];\n   if ($crontask->update($tmp)) {\n      $unlocked_tasks++;\n      $message = \"Task '\".$task['name'].\"' unlocked\";\n      echo $message.\"\\n\";\n      Event::log($task['id'], 'Crontask', 5, 'Configuration', $message);\n   }\n}\necho \"Number of unlocked tasks : \".$unlocked_tasks.\"\\n\";"], "fixing_code": ["<?php\n/**\n * ---------------------------------------------------------------------\n * GLPI - Gestionnaire Libre de Parc Informatique\n * Copyright (C) 2015-2018 Teclib' and contributors.\n *\n * http://glpi-project.org\n *\n * based on GLPI - Gestionnaire Libre de Parc Informatique\n * Copyright (C) 2003-2014 by the INDEPNET Development Team.\n *\n * ---------------------------------------------------------------------\n *\n * LICENSE\n *\n * This file is part of GLPI.\n *\n * GLPI is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * GLPI is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with GLPI. If not, see <http://www.gnu.org/licenses/>.\n * ---------------------------------------------------------------------\n */\n\n// Ensure current directory when run from crontab\nchdir(__DIR__);\n\nuse Glpi\\Event;\n\ninclude ('../inc/includes.php');\n\nif (isset($_SERVER['argv'])) {\n   for ($i=1; $i<$_SERVER['argc']; $i++) {\n      $it    = explode(\"=\", $_SERVER['argv'][$i], 2);\n      $it[0] = preg_replace('/^--/', '', $it[0]);\n\n      $_GET[$it[0]] = (isset($it[1]) ? $it[1] : true);\n   }\n}\nif (isset($_GET['cycle'])) {\n   $cycle = (int)$_GET['cycle'];\n} else {\n   $cycle = 25;\n}\n\nif (isset($_GET['only_tasks'])) {\n   $only_tasks = explode(',', $_GET['only_tasks']);\n} else {\n   $only_tasks = [];\n}\n\n$crontask = new Crontask();\n$query    = \"SELECT `id`, `name`\n             FROM `glpi_crontasks`\n             WHERE `state` = '\".Crontask::STATE_RUNNING.\"'\n                   AND unix_timestamp(`lastrun`) + $cycle * `frequency` < unix_timestamp(now())\";\n\n//Number of unlocked tasks by the script\n$unlocked_tasks = 0;\n\necho \"Date : \".Html::convDateTime($_SESSION['glpi_currenttime']).\"\\n\";\necho \"Start unlock script\\n\";\n\nforeach ($DB->request($query) as $task) {\n   if (!empty($only_tasks) && !in_array($task['name'], $only_tasks)) {\n      echo $task['name'].\" is still running but not in the whitelist\\n\";\n      continue;\n   }\n\n   $tmp['state'] = Crontask::STATE_WAITING;\n   $tmp['id']    = $task['id'];\n   if ($crontask->update($tmp)) {\n      $unlocked_tasks++;\n      $message = \"Task '\".$task['name'].\"' unlocked\";\n      echo $message.\"\\n\";\n      Event::log($task['id'], 'Crontask', 5, 'Configuration', $message);\n   }\n}\necho \"Number of unlocked tasks : \".$unlocked_tasks.\"\\n\";\n"], "filenames": ["scripts/unlock_tasks.php"], "buggy_code_start_loc": [49], "buggy_code_end_loc": [88], "fixing_code_start_loc": [49], "fixing_code_end_loc": [88], "type": "CWE-89", "message": "Teclib GLPI through 9.3.3 has SQL injection via the \"cycle\" parameter in /scripts/unlock_tasks.php.", "other": {"cve": {"id": "CVE-2019-10232", "sourceIdentifier": "cve@mitre.org", "published": "2019-03-27T17:29:02.370", "lastModified": "2019-03-28T17:34:17.450", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Teclib GLPI through 9.3.3 has SQL injection via the \"cycle\" parameter in /scripts/unlock_tasks.php."}, {"lang": "es", "value": "Teclib GLPI, hasta la versi\u00f3n 9.3.3, tiene una inyecci\u00f3n SQL mediante el par\u00e1metro \"cycle\" en /scripts/unlock_tasks.php."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:teclib-edition:gestionnaire_libre_de_parc_informatique:*:*:*:*:*:*:*:*", "versionEndIncluding": "9.3.3", "matchCriteriaId": "41F0BB4D-28F4-42BC-B966-450FB6E4ADF0"}]}]}], "references": [{"url": "https://github.com/glpi-project/glpi/commit/684d4fc423652ec7dde21cac4d41c2df53f56b3c", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/glpi-project/glpi/commit/684d4fc423652ec7dde21cac4d41c2df53f56b3c"}}