{"buggy_code": ["<?php\n/**\n * This is the site header include template.\n *\n * If enabled, this will be included at the top of all skins to provide a common identity and site wide navigation.\n * NOTE: each skin is responsible for calling siteskin_include( '_site_body_header.inc.php' );\n *\n * @package site_skins\n */\nif( !defined('EVO_MAIN_INIT') ) die( 'Please, do not access this page directly.' );\n\nglobal $baseurl, $Settings;\n?>\n\n<nav class=\"sitewide_header\">\n\n<?php\nif( $Settings->get( 'notification_logo' ) != '' )\n{\n\t$site_title = $Settings->get( 'notification_long_name' ) != '' ? ' title=\"'.$Settings->get( 'notification_long_name' ).'\"' : '';\n\t$site_name_text = '<img src=\"'.$Settings->get( 'notification_logo' ).'\" alt=\"'.$Settings->get( 'notification_short_name' ).'\"'.$site_title.' />';\n\t$site_title_class = ' swhead_logo';\n}\nelse\n{\n\t$site_name_text = $Settings->get( 'notification_short_name' );\n\t$site_title_class = '';\n}\n?>\n<a href=\"<?php echo $baseurl; ?>\" class=\"swhead_sitename<?php echo $site_title_class; ?>\"><?php echo $site_name_text; ?></a>\n\n<?php\n\t// --------------------------------- START OF BLOG LIST --------------------------------\n\t// Call widget directly (without container):\n\tskin_widget( array(\n\t\t\t\t\t\t// CODE for the widget:\n\t\t\t\t\t\t'widget' => 'colls_list_public',\n\t\t\t\t\t\t// Optional display params\n\t\t\t\t\t\t'block_start' => '',\n\t\t\t\t\t\t'block_end' => '',\n\t\t\t\t\t\t'block_display_title' => false,\n\t\t\t\t\t\t'list_start' => '',\n\t\t\t\t\t\t'list_end' => '',\n\t\t\t\t\t\t'item_start' => '',\n\t\t\t\t\t\t'item_end' => '',\n\t\t\t\t\t\t'item_selected_start' => '',\n\t\t\t\t\t\t'item_selected_end' => '',\n\t\t\t\t\t\t'link_selected_class' => 'swhead_item swhead_item_selected',\n\t\t\t\t\t\t'link_default_class' => 'swhead_item ',\n\t\t\t\t) );\n\t// ---------------------------------- END OF BLOG LIST ---------------------------------\n\n\tif( $Settings->get( 'info_blog_ID' ) > 0 )\n\t{ // We have a collection for info pages:\n\t\t// --------------------------------- START OF PAGES LIST --------------------------------\n\t\t// Call widget directly (without container):\n\t\tskin_widget( array(\n\t\t\t\t\t\t// CODE for the widget:\n\t\t\t\t\t\t'widget' => 'coll_page_list',\n\t\t\t\t\t\t// Optional display params\n\t\t\t\t\t\t'block_start' => '',\n\t\t\t\t\t\t'block_end' => '',\n\t\t\t\t\t\t'block_display_title' => false,\n\t\t\t\t\t\t'list_start' => '',\n\t\t\t\t\t\t'list_end' => '',\n\t\t\t\t\t\t'item_start' => '',\n\t\t\t\t\t\t'item_end' => '',\n\t\t\t\t\t\t'item_selected_start' => '',\n\t\t\t\t\t\t'item_selected_end' => '',\n\t\t\t\t\t\t'link_selected_class' => 'swhead_item swhead_item_selected',\n\t\t\t\t\t\t'link_default_class' => 'swhead_item ',\n\t\t\t\t\t\t'blog_ID' => $Settings->get( 'info_blog_ID' ),\n\t\t\t\t\t\t'item_group_by' => 'none',\n\t\t\t\t\t\t'order_by' => 'order',\t\t// Order (as explicitly specified)\n\t\t\t\t) );\n\t\t// ---------------------------------- END OF PAGES LIST ---------------------------------\n\t}\n\n\t// --------------------------------- START OF CONTACT LINK --------------------------------\n\t// Call widget directly (without container):\n\tskin_widget( array(\n\t\t\t\t\t\t// CODE for the widget:\n\t\t\t\t\t\t'widget' => 'menu_link',\n\t\t\t\t\t\t// Optional display params\n\t\t\t\t\t\t'block_start' => '',\n\t\t\t\t\t\t'block_end' => '',\n\t\t\t\t\t\t'block_display_title' => false,\n\t\t\t\t\t\t'list_start' => '',\n\t\t\t\t\t\t'list_end' => '',\n\t\t\t\t\t\t'item_start' => '',\n\t\t\t\t\t\t'item_end' => '',\n\t\t\t\t\t\t'item_selected_start' => '',\n\t\t\t\t\t\t'item_selected_end' => '',\n\t\t\t\t\t\t'link_selected_class' => 'swhead_item swhead_item_selected',\n\t\t\t\t\t\t'link_default_class' => 'swhead_item ',\n\t\t\t\t\t\t'link_type' => 'ownercontact',\n\t\t\t\t) );\n\t// --------------------------------- END OF CONTACT LINK --------------------------------\n?>\n\n\t<div class=\"floatright\">\n\t<?php\n\t\t// Optional display params for widgets below\n\t\t$right_menu_params = array(\n\t\t\t\t'block_start' => '',\n\t\t\t\t'block_end' => '',\n\t\t\t\t'block_display_title' => false,\n\t\t\t\t'list_start' => '',\n\t\t\t\t'list_end' => '',\n\t\t\t\t'item_start' => '',\n\t\t\t\t'item_end' => '',\n\t\t\t\t'item_selected_start' => '',\n\t\t\t\t'item_selected_end' => '',\n\t\t\t\t'link_selected_class' => 'swhead_item swhead_item_selected',\n\t\t\t\t'link_default_class' => 'swhead_item ',\n\t\t\t);\n\n\t\tif( is_logged_in() )\n\t\t{ // Display the following menus when current user is logged in\n\n\t\t\t// Profile link:\n\t\t\t// Call widget directly (without container):\n\t\t\tskin_widget( array_merge( $right_menu_params, array(\n\t\t\t\t// CODE for the widget:\n\t\t\t\t'widget' => 'profile_menu_link',\n\t\t\t\t// Optional display params\n\t\t\t\t'profile_picture_size' => 'crop-top-32x32',\n\t\t\t) ) );\n\n\t\t\t// Messaging link:\n\t\t\t// Call widget directly (without container):\n\t\t\tskin_widget( array_merge( $right_menu_params, array(\n\t\t\t\t// CODE for the widget:\n\t\t\t\t'widget' => 'msg_menu_link',\n\t\t\t\t// Optional display params\n\t\t\t\t'link_type' => 'messages',\n\t\t\t) ) );\n\n\t\t\t// Logout link:\n\t\t\t// Call widget directly (without container):\n\t\t\tskin_widget( array_merge( $right_menu_params, array(\n\t\t\t\t// CODE for the widget:\n\t\t\t\t'widget' => 'menu_link',\n\t\t\t\t// Optional display params\n\t\t\t\t'link_type' => 'logout',\n\t\t\t) ) );\n\t\t}\n\t\telse\n\t\t{ // Display the following menus when current user is NOT logged in\n\n\t\t\t// Login link:\n\t\t\t// Call widget directly (without container):\n\t\t\tskin_widget( array_merge( $right_menu_params, array(\n\t\t\t\t// CODE for the widget:\n\t\t\t\t'widget' => 'menu_link',\n\t\t\t\t// Optional display params\n\t\t\t\t'link_type' => 'login',\n\t\t\t) ) );\n\n\t\t\t// Register link:\n\t\t\t// Call widget directly (without container):\n\t\t\tskin_widget( array_merge( $right_menu_params, array(\n\t\t\t\t// CODE for the widget:\n\t\t\t\t'widget' => 'menu_link',\n\t\t\t\t// Optional display params\n\t\t\t\t'link_type' => 'register',\n\t\t\t\t'link_selected_class' => 'swhead_item_white '.$right_menu_params['link_selected_class'],\n\t\t\t\t'link_default_class' => 'swhead_item_white '.$right_menu_params['link_default_class'],\n\t\t\t) ) );\n\t\t}\n\t?>\n\t</div>\n\t<div class=\"clear\"></div>\n</nav>\n"], "fixing_code": ["<?php\n/**\n * This is the site header include template.\n *\n * If enabled, this will be included at the top of all skins to provide a common identity and site wide navigation.\n * NOTE: each skin is responsible for calling siteskin_include( '_site_body_header.inc.php' );\n *\n * @package site_skins\n */\nif( !defined('EVO_MAIN_INIT') ) die( 'Please, do not access this page directly.' );\n\nglobal $baseurl, $Settings;\n?>\n\n<nav class=\"sitewide_header\">\n\n<?php\nif( $Settings->get( 'notification_logo' ) != '' )\n{\n\t$site_title = $Settings->get( 'notification_long_name' ) != '' ? ' title=\"'.format_to_output( $Settings->get( 'notification_long_name' ), 'htmlattr' ).'\"' : '';\n\t$site_name_text = '<img src=\"'.$Settings->get( 'notification_logo' ).'\" alt=\"'.format_to_output( $Settings->get( 'notification_short_name' ), 'htmlattr' ).'\"'.$site_title.' />';\n\t$site_title_class = ' swhead_logo';\n}\nelse\n{\n\t$site_name_text = $Settings->get( 'notification_short_name' );\n\t$site_title_class = '';\n}\n?>\n<a href=\"<?php echo $baseurl; ?>\" class=\"swhead_sitename<?php echo $site_title_class; ?>\"><?php echo $site_name_text; ?></a>\n\n<?php\n\t// --------------------------------- START OF BLOG LIST --------------------------------\n\t// Call widget directly (without container):\n\tskin_widget( array(\n\t\t\t\t\t\t// CODE for the widget:\n\t\t\t\t\t\t'widget' => 'colls_list_public',\n\t\t\t\t\t\t// Optional display params\n\t\t\t\t\t\t'block_start' => '',\n\t\t\t\t\t\t'block_end' => '',\n\t\t\t\t\t\t'block_display_title' => false,\n\t\t\t\t\t\t'list_start' => '',\n\t\t\t\t\t\t'list_end' => '',\n\t\t\t\t\t\t'item_start' => '',\n\t\t\t\t\t\t'item_end' => '',\n\t\t\t\t\t\t'item_selected_start' => '',\n\t\t\t\t\t\t'item_selected_end' => '',\n\t\t\t\t\t\t'link_selected_class' => 'swhead_item swhead_item_selected',\n\t\t\t\t\t\t'link_default_class' => 'swhead_item ',\n\t\t\t\t) );\n\t// ---------------------------------- END OF BLOG LIST ---------------------------------\n\n\tif( $Settings->get( 'info_blog_ID' ) > 0 )\n\t{ // We have a collection for info pages:\n\t\t// --------------------------------- START OF PAGES LIST --------------------------------\n\t\t// Call widget directly (without container):\n\t\tskin_widget( array(\n\t\t\t\t\t\t// CODE for the widget:\n\t\t\t\t\t\t'widget' => 'coll_page_list',\n\t\t\t\t\t\t// Optional display params\n\t\t\t\t\t\t'block_start' => '',\n\t\t\t\t\t\t'block_end' => '',\n\t\t\t\t\t\t'block_display_title' => false,\n\t\t\t\t\t\t'list_start' => '',\n\t\t\t\t\t\t'list_end' => '',\n\t\t\t\t\t\t'item_start' => '',\n\t\t\t\t\t\t'item_end' => '',\n\t\t\t\t\t\t'item_selected_start' => '',\n\t\t\t\t\t\t'item_selected_end' => '',\n\t\t\t\t\t\t'link_selected_class' => 'swhead_item swhead_item_selected',\n\t\t\t\t\t\t'link_default_class' => 'swhead_item ',\n\t\t\t\t\t\t'blog_ID' => $Settings->get( 'info_blog_ID' ),\n\t\t\t\t\t\t'item_group_by' => 'none',\n\t\t\t\t\t\t'order_by' => 'order',\t\t// Order (as explicitly specified)\n\t\t\t\t) );\n\t\t// ---------------------------------- END OF PAGES LIST ---------------------------------\n\t}\n\n\t// --------------------------------- START OF CONTACT LINK --------------------------------\n\t// Call widget directly (without container):\n\tskin_widget( array(\n\t\t\t\t\t\t// CODE for the widget:\n\t\t\t\t\t\t'widget' => 'menu_link',\n\t\t\t\t\t\t// Optional display params\n\t\t\t\t\t\t'block_start' => '',\n\t\t\t\t\t\t'block_end' => '',\n\t\t\t\t\t\t'block_display_title' => false,\n\t\t\t\t\t\t'list_start' => '',\n\t\t\t\t\t\t'list_end' => '',\n\t\t\t\t\t\t'item_start' => '',\n\t\t\t\t\t\t'item_end' => '',\n\t\t\t\t\t\t'item_selected_start' => '',\n\t\t\t\t\t\t'item_selected_end' => '',\n\t\t\t\t\t\t'link_selected_class' => 'swhead_item swhead_item_selected',\n\t\t\t\t\t\t'link_default_class' => 'swhead_item ',\n\t\t\t\t\t\t'link_type' => 'ownercontact',\n\t\t\t\t) );\n\t// --------------------------------- END OF CONTACT LINK --------------------------------\n?>\n\n\t<div class=\"floatright\">\n\t<?php\n\t\t// Optional display params for widgets below\n\t\t$right_menu_params = array(\n\t\t\t\t'block_start' => '',\n\t\t\t\t'block_end' => '',\n\t\t\t\t'block_display_title' => false,\n\t\t\t\t'list_start' => '',\n\t\t\t\t'list_end' => '',\n\t\t\t\t'item_start' => '',\n\t\t\t\t'item_end' => '',\n\t\t\t\t'item_selected_start' => '',\n\t\t\t\t'item_selected_end' => '',\n\t\t\t\t'link_selected_class' => 'swhead_item swhead_item_selected',\n\t\t\t\t'link_default_class' => 'swhead_item ',\n\t\t\t);\n\n\t\tif( is_logged_in() )\n\t\t{ // Display the following menus when current user is logged in\n\n\t\t\t// Profile link:\n\t\t\t// Call widget directly (without container):\n\t\t\tskin_widget( array_merge( $right_menu_params, array(\n\t\t\t\t// CODE for the widget:\n\t\t\t\t'widget' => 'profile_menu_link',\n\t\t\t\t// Optional display params\n\t\t\t\t'profile_picture_size' => 'crop-top-32x32',\n\t\t\t) ) );\n\n\t\t\t// Messaging link:\n\t\t\t// Call widget directly (without container):\n\t\t\tskin_widget( array_merge( $right_menu_params, array(\n\t\t\t\t// CODE for the widget:\n\t\t\t\t'widget' => 'msg_menu_link',\n\t\t\t\t// Optional display params\n\t\t\t\t'link_type' => 'messages',\n\t\t\t) ) );\n\n\t\t\t// Logout link:\n\t\t\t// Call widget directly (without container):\n\t\t\tskin_widget( array_merge( $right_menu_params, array(\n\t\t\t\t// CODE for the widget:\n\t\t\t\t'widget' => 'menu_link',\n\t\t\t\t// Optional display params\n\t\t\t\t'link_type' => 'logout',\n\t\t\t) ) );\n\t\t}\n\t\telse\n\t\t{ // Display the following menus when current user is NOT logged in\n\n\t\t\t// Login link:\n\t\t\t// Call widget directly (without container):\n\t\t\tskin_widget( array_merge( $right_menu_params, array(\n\t\t\t\t// CODE for the widget:\n\t\t\t\t'widget' => 'menu_link',\n\t\t\t\t// Optional display params\n\t\t\t\t'link_type' => 'login',\n\t\t\t) ) );\n\n\t\t\t// Register link:\n\t\t\t// Call widget directly (without container):\n\t\t\tskin_widget( array_merge( $right_menu_params, array(\n\t\t\t\t// CODE for the widget:\n\t\t\t\t'widget' => 'menu_link',\n\t\t\t\t// Optional display params\n\t\t\t\t'link_type' => 'register',\n\t\t\t\t'link_selected_class' => 'swhead_item_white '.$right_menu_params['link_selected_class'],\n\t\t\t\t'link_default_class' => 'swhead_item_white '.$right_menu_params['link_default_class'],\n\t\t\t) ) );\n\t\t}\n\t?>\n\t</div>\n\t<div class=\"clear\"></div>\n</nav>\n"], "filenames": ["skins_site/_site_body_header.inc.php"], "buggy_code_start_loc": [20], "buggy_code_end_loc": [22], "fixing_code_start_loc": [20], "fixing_code_end_loc": [22], "type": "CWE-79", "message": "Cross-site scripting (XSS) vulnerability in b2evolution 6.7.5 and earlier allows remote authenticated users to inject arbitrary web script or HTML via the site name.", "other": {"cve": {"id": "CVE-2016-7150", "sourceIdentifier": "cve@mitre.org", "published": "2017-01-18T17:59:00.623", "lastModified": "2017-01-23T19:53:40.207", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site scripting (XSS) vulnerability in b2evolution 6.7.5 and earlier allows remote authenticated users to inject arbitrary web script or HTML via the site name."}, {"lang": "es", "value": "Vulnerabilidad de XSS en b2evolution 6.7.5 y versiones anteriores permite a usuarios remotos autenticados inyectar secuencias de comandos web o HTML arbitrarios a trav\u00e9s del nombre del sitio."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:b2evolution:b2evolution:*:*:*:*:*:*:*:*", "versionEndIncluding": "6.7.5", "matchCriteriaId": "F7C58506-ACD4-4D6E-A5A5-D4E3AEBE684A"}]}]}], "references": [{"url": "http://www.openwall.com/lists/oss-security/2016/09/12/1", "source": "cve@mitre.org", "tags": ["Mailing List", "Patch", "Third Party Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2016/09/15/4", "source": "cve@mitre.org", "tags": ["Mailing List", "Patch", "Third Party Advisory"]}, {"url": "http://www.securityfocus.com/bid/92967", "source": "cve@mitre.org", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://github.com/b2evolution/b2evolution/commit/dd975fff7fce81bf12f9c59edb1a99475747c83c", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/b2evolution/b2evolution/commit/dd975fff7fce81bf12f9c59edb1a99475747c83c"}}