{"buggy_code": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jSuites\"] = factory();\n\telse\n\t\troot[\"jSuites\"] = factory();\n})(this, function() {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 195:\n/***/ (function(module) {\n\n/**\n * (c) jSuites Javascript Plugins and Web Components (v4)\n *\n * Website: https://jsuites.net\n * Description: Create amazing web based applications.\n * Plugin: Organogram\n *\n * MIT License\n */\n\n;(function (global, factory) {\n     true ? module.exports = factory() :\n    0;\n}(this, (function () {\n\n    return (function(str) {\n        function int64(msint_32, lsint_32) {\n            this.highOrder = msint_32;\n            this.lowOrder = lsint_32;\n        }\n\n        var H = [new int64(0x6a09e667, 0xf3bcc908), new int64(0xbb67ae85, 0x84caa73b),\n            new int64(0x3c6ef372, 0xfe94f82b), new int64(0xa54ff53a, 0x5f1d36f1),\n            new int64(0x510e527f, 0xade682d1), new int64(0x9b05688c, 0x2b3e6c1f),\n            new int64(0x1f83d9ab, 0xfb41bd6b), new int64(0x5be0cd19, 0x137e2179)];\n\n        var K = [new int64(0x428a2f98, 0xd728ae22), new int64(0x71374491, 0x23ef65cd),\n            new int64(0xb5c0fbcf, 0xec4d3b2f), new int64(0xe9b5dba5, 0x8189dbbc),\n            new int64(0x3956c25b, 0xf348b538), new int64(0x59f111f1, 0xb605d019),\n            new int64(0x923f82a4, 0xaf194f9b), new int64(0xab1c5ed5, 0xda6d8118),\n            new int64(0xd807aa98, 0xa3030242), new int64(0x12835b01, 0x45706fbe),\n            new int64(0x243185be, 0x4ee4b28c), new int64(0x550c7dc3, 0xd5ffb4e2),\n            new int64(0x72be5d74, 0xf27b896f), new int64(0x80deb1fe, 0x3b1696b1),\n            new int64(0x9bdc06a7, 0x25c71235), new int64(0xc19bf174, 0xcf692694),\n            new int64(0xe49b69c1, 0x9ef14ad2), new int64(0xefbe4786, 0x384f25e3),\n            new int64(0x0fc19dc6, 0x8b8cd5b5), new int64(0x240ca1cc, 0x77ac9c65),\n            new int64(0x2de92c6f, 0x592b0275), new int64(0x4a7484aa, 0x6ea6e483),\n            new int64(0x5cb0a9dc, 0xbd41fbd4), new int64(0x76f988da, 0x831153b5),\n            new int64(0x983e5152, 0xee66dfab), new int64(0xa831c66d, 0x2db43210),\n            new int64(0xb00327c8, 0x98fb213f), new int64(0xbf597fc7, 0xbeef0ee4),\n            new int64(0xc6e00bf3, 0x3da88fc2), new int64(0xd5a79147, 0x930aa725),\n            new int64(0x06ca6351, 0xe003826f), new int64(0x14292967, 0x0a0e6e70),\n            new int64(0x27b70a85, 0x46d22ffc), new int64(0x2e1b2138, 0x5c26c926),\n            new int64(0x4d2c6dfc, 0x5ac42aed), new int64(0x53380d13, 0x9d95b3df),\n            new int64(0x650a7354, 0x8baf63de), new int64(0x766a0abb, 0x3c77b2a8),\n            new int64(0x81c2c92e, 0x47edaee6), new int64(0x92722c85, 0x1482353b),\n            new int64(0xa2bfe8a1, 0x4cf10364), new int64(0xa81a664b, 0xbc423001),\n            new int64(0xc24b8b70, 0xd0f89791), new int64(0xc76c51a3, 0x0654be30),\n            new int64(0xd192e819, 0xd6ef5218), new int64(0xd6990624, 0x5565a910),\n            new int64(0xf40e3585, 0x5771202a), new int64(0x106aa070, 0x32bbd1b8),\n            new int64(0x19a4c116, 0xb8d2d0c8), new int64(0x1e376c08, 0x5141ab53),\n            new int64(0x2748774c, 0xdf8eeb99), new int64(0x34b0bcb5, 0xe19b48a8),\n            new int64(0x391c0cb3, 0xc5c95a63), new int64(0x4ed8aa4a, 0xe3418acb),\n            new int64(0x5b9cca4f, 0x7763e373), new int64(0x682e6ff3, 0xd6b2b8a3),\n            new int64(0x748f82ee, 0x5defb2fc), new int64(0x78a5636f, 0x43172f60),\n            new int64(0x84c87814, 0xa1f0ab72), new int64(0x8cc70208, 0x1a6439ec),\n            new int64(0x90befffa, 0x23631e28), new int64(0xa4506ceb, 0xde82bde9),\n            new int64(0xbef9a3f7, 0xb2c67915), new int64(0xc67178f2, 0xe372532b),\n            new int64(0xca273ece, 0xea26619c), new int64(0xd186b8c7, 0x21c0c207),\n            new int64(0xeada7dd6, 0xcde0eb1e), new int64(0xf57d4f7f, 0xee6ed178),\n            new int64(0x06f067aa, 0x72176fba), new int64(0x0a637dc5, 0xa2c898a6),\n            new int64(0x113f9804, 0xbef90dae), new int64(0x1b710b35, 0x131c471b),\n            new int64(0x28db77f5, 0x23047d84), new int64(0x32caab7b, 0x40c72493),\n            new int64(0x3c9ebe0a, 0x15c9bebc), new int64(0x431d67c4, 0x9c100d4c),\n            new int64(0x4cc5d4be, 0xcb3e42b6), new int64(0x597f299c, 0xfc657e2a),\n            new int64(0x5fcb6fab, 0x3ad6faec), new int64(0x6c44198c, 0x4a475817)];\n\n        var W = new Array(64);\n        var a, b, c, d, e, f, g, h, i, j;\n        var T1, T2;\n        var charsize = 8;\n\n        function utf8_encode(str) {\n            return unescape(encodeURIComponent(str));\n        }\n\n        function str2binb(str) {\n            var bin = [];\n            var mask = (1 << charsize) - 1;\n            var len = str.length * charsize;\n\n            for (var i = 0; i < len; i += charsize) {\n                bin[i >> 5] |= (str.charCodeAt(i / charsize) & mask) << (32 - charsize - (i % 32));\n            }\n\n            return bin;\n        }\n\n        function binb2hex(binarray) {\n            var hex_tab = \"0123456789abcdef\";\n            var str = \"\";\n            var length = binarray.length * 4;\n            var srcByte;\n\n            for (var i = 0; i < length; i += 1) {\n                srcByte = binarray[i >> 2] >> ((3 - (i % 4)) * 8);\n                str += hex_tab.charAt((srcByte >> 4) & 0xF) + hex_tab.charAt(srcByte & 0xF);\n            }\n\n            return str;\n        }\n\n        function safe_add_2(x, y) {\n            var lsw, msw, lowOrder, highOrder;\n\n            lsw = (x.lowOrder & 0xFFFF) + (y.lowOrder & 0xFFFF);\n            msw = (x.lowOrder >>> 16) + (y.lowOrder >>> 16) + (lsw >>> 16);\n            lowOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n            lsw = (x.highOrder & 0xFFFF) + (y.highOrder & 0xFFFF) + (msw >>> 16);\n            msw = (x.highOrder >>> 16) + (y.highOrder >>> 16) + (lsw >>> 16);\n            highOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n            return new int64(highOrder, lowOrder);\n        }\n\n        function safe_add_4(a, b, c, d) {\n            var lsw, msw, lowOrder, highOrder;\n\n            lsw = (a.lowOrder & 0xFFFF) + (b.lowOrder & 0xFFFF) + (c.lowOrder & 0xFFFF) + (d.lowOrder & 0xFFFF);\n            msw = (a.lowOrder >>> 16) + (b.lowOrder >>> 16) + (c.lowOrder >>> 16) + (d.lowOrder >>> 16) + (lsw >>> 16);\n            lowOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n            lsw = (a.highOrder & 0xFFFF) + (b.highOrder & 0xFFFF) + (c.highOrder & 0xFFFF) + (d.highOrder & 0xFFFF) + (msw >>> 16);\n            msw = (a.highOrder >>> 16) + (b.highOrder >>> 16) + (c.highOrder >>> 16) + (d.highOrder >>> 16) + (lsw >>> 16);\n            highOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n            return new int64(highOrder, lowOrder);\n        }\n\n        function safe_add_5(a, b, c, d, e) {\n            var lsw, msw, lowOrder, highOrder;\n\n            lsw = (a.lowOrder & 0xFFFF) + (b.lowOrder & 0xFFFF) + (c.lowOrder & 0xFFFF) + (d.lowOrder & 0xFFFF) + (e.lowOrder & 0xFFFF);\n            msw = (a.lowOrder >>> 16) + (b.lowOrder >>> 16) + (c.lowOrder >>> 16) + (d.lowOrder >>> 16) + (e.lowOrder >>> 16) + (lsw >>> 16);\n            lowOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n            lsw = (a.highOrder & 0xFFFF) + (b.highOrder & 0xFFFF) + (c.highOrder & 0xFFFF) + (d.highOrder & 0xFFFF) + (e.highOrder & 0xFFFF) + (msw >>> 16);\n            msw = (a.highOrder >>> 16) + (b.highOrder >>> 16) + (c.highOrder >>> 16) + (d.highOrder >>> 16) + (e.highOrder >>> 16) + (lsw >>> 16);\n            highOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n            return new int64(highOrder, lowOrder);\n        }\n\n        function maj(x, y, z) {\n            return new int64(\n                (x.highOrder & y.highOrder) ^ (x.highOrder & z.highOrder) ^ (y.highOrder & z.highOrder),\n                (x.lowOrder & y.lowOrder) ^ (x.lowOrder & z.lowOrder) ^ (y.lowOrder & z.lowOrder)\n            );\n        }\n\n        function ch(x, y, z) {\n            return new int64(\n                (x.highOrder & y.highOrder) ^ (~x.highOrder & z.highOrder),\n                (x.lowOrder & y.lowOrder) ^ (~x.lowOrder & z.lowOrder)\n            );\n        }\n\n        function rotr(x, n) {\n            if (n <= 32) {\n                return new int64(\n                    (x.highOrder >>> n) | (x.lowOrder << (32 - n)),\n                    (x.lowOrder >>> n) | (x.highOrder << (32 - n))\n                );\n            } else {\n                return new int64(\n                    (x.lowOrder >>> n) | (x.highOrder << (32 - n)),\n                    (x.highOrder >>> n) | (x.lowOrder << (32 - n))\n                );\n            }\n        }\n\n        function sigma0(x) {\n            var rotr28 = rotr(x, 28);\n            var rotr34 = rotr(x, 34);\n            var rotr39 = rotr(x, 39);\n\n            return new int64(\n                rotr28.highOrder ^ rotr34.highOrder ^ rotr39.highOrder,\n                rotr28.lowOrder ^ rotr34.lowOrder ^ rotr39.lowOrder\n            );\n        }\n\n        function sigma1(x) {\n            var rotr14 = rotr(x, 14);\n            var rotr18 = rotr(x, 18);\n            var rotr41 = rotr(x, 41);\n\n            return new int64(\n                rotr14.highOrder ^ rotr18.highOrder ^ rotr41.highOrder,\n                rotr14.lowOrder ^ rotr18.lowOrder ^ rotr41.lowOrder\n            );\n        }\n\n        function gamma0(x) {\n            var rotr1 = rotr(x, 1), rotr8 = rotr(x, 8), shr7 = shr(x, 7);\n\n            return new int64(\n                rotr1.highOrder ^ rotr8.highOrder ^ shr7.highOrder,\n                rotr1.lowOrder ^ rotr8.lowOrder ^ shr7.lowOrder\n            );\n        }\n\n        function gamma1(x) {\n            var rotr19 = rotr(x, 19);\n            var rotr61 = rotr(x, 61);\n            var shr6 = shr(x, 6);\n\n            return new int64(\n                rotr19.highOrder ^ rotr61.highOrder ^ shr6.highOrder,\n                rotr19.lowOrder ^ rotr61.lowOrder ^ shr6.lowOrder\n            );\n        }\n\n        function shr(x, n) {\n            if (n <= 32) {\n                return new int64(\n                    x.highOrder >>> n,\n                    x.lowOrder >>> n | (x.highOrder << (32 - n))\n                );\n            } else {\n                return new int64(\n                    0,\n                    x.highOrder << (32 - n)\n                );\n            }\n        }\n\n        var str = utf8_encode(str);\n        var strlen = str.length*charsize;\n        str = str2binb(str);\n\n        str[strlen >> 5] |= 0x80 << (24 - strlen % 32);\n        str[(((strlen + 128) >> 10) << 5) + 31] = strlen;\n\n        for (var i = 0; i < str.length; i += 32) {\n            a = H[0];\n            b = H[1];\n            c = H[2];\n            d = H[3];\n            e = H[4];\n            f = H[5];\n            g = H[6];\n            h = H[7];\n\n            for (var j = 0; j < 80; j++) {\n                if (j < 16) {\n                    W[j] = new int64(str[j*2 + i], str[j*2 + i + 1]);\n                } else {\n                    W[j] = safe_add_4(gamma1(W[j - 2]), W[j - 7], gamma0(W[j - 15]), W[j - 16]);\n                }\n\n                T1 = safe_add_5(h, sigma1(e), ch(e, f, g), K[j], W[j]);\n                T2 = safe_add_2(sigma0(a), maj(a, b, c));\n                h = g;\n                g = f;\n                f = e;\n                e = safe_add_2(d, T1);\n                d = c;\n                c = b;\n                b = a;\n                a = safe_add_2(T1, T2);\n            }\n\n            H[0] = safe_add_2(a, H[0]);\n            H[1] = safe_add_2(b, H[1]);\n            H[2] = safe_add_2(c, H[2]);\n            H[3] = safe_add_2(d, H[3]);\n            H[4] = safe_add_2(e, H[4]);\n            H[5] = safe_add_2(f, H[5]);\n            H[6] = safe_add_2(g, H[6]);\n            H[7] = safe_add_2(h, H[7]);\n        }\n\n        var binarray = [];\n        for (var i = 0; i < H.length; i++) {\n            binarray.push(H[i].highOrder);\n            binarray.push(H[i].lowOrder);\n        }\n\n        return binb2hex(binarray);\n    });\n\n})));\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t!function() {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = function(module) {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\tfunction() { return module['default']; } :\n/******/ \t\t\t\tfunction() { return module; };\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t}();\n/******/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be in strict mode.\n!function() {\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ jsuites; }\n});\n\n;// CONCATENATED MODULE: ./src/utils/helpers.js\nvar Helpers = {};\n\n// Two digits\nHelpers.two = function(value) {\n    value = '' + value;\n    if (value.length == 1) {\n        value = '0' + value;\n    }\n    return value;\n}\n\nHelpers.focus = function(el) {\n    if (el.innerText.length) {\n        var range = document.createRange();\n        var sel = window.getSelection();\n        var node = el.childNodes[el.childNodes.length-1];\n        range.setStart(node, node.length)\n        range.collapse(true)\n        sel.removeAllRanges()\n        sel.addRange(range)\n        el.scrollLeft = el.scrollWidth;\n    }\n}\n\nHelpers.isNumeric = (function (num) {\n    if (typeof(num) === 'string') {\n        num = num.trim();\n    }\n    return !isNaN(num) && num !== null && num !== '';\n});\n\nHelpers.guid = function() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nHelpers.getNode = function() {\n    var node = document.getSelection().anchorNode;\n    if (node) {\n        return (node.nodeType == 3 ? node.parentNode : node);\n    } else {\n        return null;\n    }\n}\n/**\n * Generate hash from a string\n */\nHelpers.hash = function(str) {\n    var hash = 0, i, chr;\n\n    if (str.length === 0) {\n        return hash;\n    } else {\n        for (i = 0; i < str.length; i++) {\n            chr = str.charCodeAt(i);\n            if (chr > 32) {\n                hash = ((hash << 5) - hash) + chr;\n                hash |= 0;\n            }\n        }\n    }\n    return hash;\n}\n\n/**\n * Generate a random color\n */\nHelpers.randomColor = function(h) {\n    var lum = -0.25;\n    var hex = String('#' + Math.random().toString(16).slice(2, 8).toUpperCase()).replace(/[^0-9a-f]/gi, '');\n    if (hex.length < 6) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    var rgb = [], c, i;\n    for (i = 0; i < 3; i++) {\n        c = parseInt(hex.substr(i * 2, 2), 16);\n        c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\n        rgb.push((\"00\" + c).substr(c.length));\n    }\n\n    // Return hex\n    if (h == true) {\n        return '#' + Helpers.two(rgb[0].toString(16)) + Helpers.two(rgb[1].toString(16)) + Helpers.two(rgb[2].toString(16));\n    }\n\n    return rgb;\n}\n\nHelpers.getWindowWidth = function() {\n    var w = window,\n    d = document,\n    e = d.documentElement,\n    g = d.getElementsByTagName('body')[0],\n    x = w.innerWidth || e.clientWidth || g.clientWidth;\n    return x;\n}\n\nHelpers.getWindowHeight = function() {\n    var w = window,\n    d = document,\n    e = d.documentElement,\n    g = d.getElementsByTagName('body')[0],\n    y = w.innerHeight|| e.clientHeight|| g.clientHeight;\n    return  y;\n}\n\nHelpers.getPosition = function(e) {\n    if (e.changedTouches && e.changedTouches[0]) {\n        var x = e.changedTouches[0].pageX;\n        var y = e.changedTouches[0].pageY;\n    } else {\n        var x = (window.Event) ? e.pageX : e.clientX + (document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft);\n        var y = (window.Event) ? e.pageY : e.clientY + (document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop);\n    }\n\n    return [ x, y ];\n}\n\nHelpers.click = function(el) {\n    if (el.click) {\n        el.click();\n    } else {\n        var evt = new MouseEvent('click', {\n            bubbles: true,\n            cancelable: true,\n            view: window\n        });\n        el.dispatchEvent(evt);\n    }\n}\n\nHelpers.findElement = function(element, condition) {\n    var foundElement = false;\n\n    function path (element) {\n        if (element && ! foundElement) {\n            if (typeof(condition) == 'function') {\n                foundElement = condition(element)\n            } else if (typeof(condition) == 'string') {\n                if (element.classList && element.classList.contains(condition)) {\n                    foundElement = element;\n                }\n            }\n        }\n\n        if (element.parentNode && ! foundElement) {\n            path(element.parentNode);\n        }\n    }\n\n    path(element);\n\n    return foundElement;\n}\n\n/* harmony default export */ var helpers = (Helpers);\n;// CONCATENATED MODULE: ./src/utils/helpers.date.js\n\n\nfunction HelpersDate() {\n    var Component = {};\n\n    Component.now = function (date, dateOnly) {\n        var y = null;\n        var m = null;\n        var d = null;\n        var h = null;\n        var i = null;\n        var s = null;\n\n        if (Array.isArray(date)) {\n            y = date[0];\n            m = date[1];\n            d = date[2];\n            h = date[3];\n            i = date[4];\n            s = date[5];\n        } else {\n            if (! date) {\n                date = new Date();\n            }\n            y = date.getFullYear();\n            m = date.getMonth() + 1;\n            d = date.getDate();\n            h = date.getHours();\n            i = date.getMinutes();\n            s = date.getSeconds();\n        }\n\n        if (dateOnly == true) {\n            return helpers.two(y) + '-' + helpers.two(m) + '-' + helpers.two(d);\n        } else {\n            return helpers.two(y) + '-' + helpers.two(m) + '-' + helpers.two(d) + ' ' + helpers.two(h) + ':' + helpers.two(i) + ':' + helpers.two(s);\n        }\n    }\n\n    Component.toArray = function (value) {\n        var date = value.split(((value.indexOf('T') !== -1) ? 'T' : ' '));\n        var time = date[1];\n        var date = date[0].split('-');\n        var y = parseInt(date[0]);\n        var m = parseInt(date[1]);\n        var d = parseInt(date[2]);\n        var h = 0;\n        var i = 0;\n\n        if (time) {\n            time = time.split(':');\n            h = parseInt(time[0]);\n            i = parseInt(time[1]);\n        }\n        return [y, m, d, h, i, 0];\n    }\n\n    var excelInitialTime = Date.UTC(1900, 0, 0);\n    var excelLeapYearBug = Date.UTC(1900, 1, 29);\n    var millisecondsPerDay = 86400000;\n\n    /**\n     * Date to number\n     */\n    Component.dateToNum = function (jsDate) {\n        if (typeof (jsDate) === 'string') {\n            jsDate = new Date(jsDate + '  GMT+0');\n        }\n        var jsDateInMilliseconds = jsDate.getTime();\n\n        if (jsDateInMilliseconds >= excelLeapYearBug) {\n            jsDateInMilliseconds += millisecondsPerDay;\n        }\n\n        jsDateInMilliseconds -= excelInitialTime;\n\n        return jsDateInMilliseconds / millisecondsPerDay;\n    }\n\n    /**\n     * Number to date\n     *\n     * IMPORTANT: Excel incorrectly considers 1900 to be a leap year\n     */\n    Component.numToDate = function (excelSerialNumber) {\n        var jsDateInMilliseconds = excelInitialTime + excelSerialNumber * millisecondsPerDay;\n\n        if (jsDateInMilliseconds >= excelLeapYearBug) {\n            jsDateInMilliseconds -= millisecondsPerDay;\n        }\n\n        const d = new Date(jsDateInMilliseconds);\n\n        var date = [\n            d.getUTCFullYear(),\n            d.getUTCMonth() + 1,\n            d.getUTCDate(),\n            d.getUTCHours(),\n            d.getUTCMinutes(),\n            d.getUTCSeconds(),\n        ];\n\n        return Component.now(date);\n    }\n\n    // Jsuites calendar labels\n    Component.weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    Component.months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    Component.weekdaysShort = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    Component.monthsShort = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n    return Component;\n}\n\n/* harmony default export */ var helpers_date = (HelpersDate());\n;// CONCATENATED MODULE: ./src/utils/dictionary.js\n\n\n// Update dictionary\nvar setDictionary = function(d) {\n    if (! document.dictionary) {\n        document.dictionary = {}\n    }\n    // Replace the key into the dictionary and append the new ones\n    var t = null;\n    var i = null;\n    var k = Object.keys(d);\n    for (i = 0; i < k.length; i++) {\n        document.dictionary[k[i]] = d[k[i]];\n    }\n\n    // Translations\n    for (i = 0; i < helpers_date.weekdays.length; i++) {\n        t =  translate(helpers_date.weekdays[i]);\n        if (helpers_date.weekdays[i]) {\n            helpers_date.weekdays[i] = t;\n            helpers_date.weekdaysShort[i] = t.substr(0,3);\n        }\n    }\n    for (i = 0; i < helpers_date.months.length; i++) {\n        t = translate(helpers_date.months[i]);\n        if (t) {\n            helpers_date.months[i] = t;\n            helpers_date.monthsShort[i] = t.substr(0,3);\n        }\n    }\n}\n\n// Translate\nvar translate = function(t) {\n    if (typeof(document) !== \"undefined\" && document.dictionary) {\n        return document.dictionary[t] || t;\n    } else {\n        return t;\n    }\n}\n\n\n/* harmony default export */ var dictionary = ({ setDictionary, translate });\n;// CONCATENATED MODULE: ./src/utils/tracking.js\nfunction Tracking(component, state) {\n    if (state == true) {\n        document.jsuitesComponents = document.jsuitesComponents.filter(function(v) {\n            return v !== null;\n        });\n\n        // Start after all events\n        setTimeout(function() {\n            document.jsuitesComponents.push(component);\n        }, 0);\n\n    } else {\n        var index = document.jsuitesComponents.indexOf(component);\n        if (index >= 0) {\n            document.jsuitesComponents.splice(index, 1);\n        }\n    }\n}\n\n;// CONCATENATED MODULE: ./src/utils/path.js\nfunction Path(str, val) {\n    str = str.split('.');\n    if (str.length) {\n        var o = this;\n        var p = null;\n        while (str.length > 1) {\n            // Get the property\n            p = str.shift();\n            // Check if the property exists\n            if (o.hasOwnProperty(p)) {\n                o = o[p];\n            } else {\n                // Property does not exists\n                if (val === undefined) {\n                    return undefined;\n                } else {\n                    // Create the property\n                    o[p] = {};\n                    // Next property\n                    o = o[p];\n                }\n            }\n        }\n        // Get the property\n        p = str.shift();\n        // Set or get the value\n        if (val !== undefined) {\n            o[p] = val;\n            // Success\n            return true;\n        } else {\n            // Return the value\n            if (o) {\n                return o[p];\n            }\n        }\n    }\n    // Something went wrong\n    return false;\n}\n;// CONCATENATED MODULE: ./src/utils/sorting.js\nfunction Sorting(el, options) {\n    var obj = {};\n    obj.options = {};\n\n    var defaults = {\n        pointer: null,\n        direction: null,\n        ondragstart: null,\n        ondragend: null,\n        ondrop: null,\n    }\n\n    var dragElement = null;\n\n    // Loop through the initial configuration\n    for (var property in defaults) {\n        if (options && options.hasOwnProperty(property)) {\n            obj.options[property] = options[property];\n        } else {\n            obj.options[property] = defaults[property];\n        }\n    }\n\n    el.classList.add('jsorting');\n\n    el.addEventListener('dragstart', function(e) {\n        var position = Array.prototype.indexOf.call(e.target.parentNode.children, e.target);\n        dragElement = {\n            element: e.target,\n            o: position,\n            d: position\n        }\n        e.target.style.opacity = '0.25';\n\n        if (typeof(obj.options.ondragstart) == 'function') {\n            obj.options.ondragstart(el, e.target, e);\n        }\n    });\n\n    el.addEventListener('dragover', function(e) {\n        e.preventDefault();\n\n        if (getElement(e.target) && dragElement) {\n            if (e.target.getAttribute('draggable') == 'true' && dragElement.element != e.target) {\n                if (! obj.options.direction) {\n                    var condition = e.target.clientHeight / 2 > e.offsetY;\n                } else {\n                    var condition = e.target.clientWidth / 2 > e.offsetX;\n                }\n\n                if (condition) {\n                    e.target.parentNode.insertBefore(dragElement.element, e.target);\n                } else {\n                    e.target.parentNode.insertBefore(dragElement.element, e.target.nextSibling);\n                }\n\n                dragElement.d = Array.prototype.indexOf.call(e.target.parentNode.children, dragElement.element);\n            }\n        }\n    });\n\n    el.addEventListener('dragleave', function(e) {\n        e.preventDefault();\n    });\n\n    el.addEventListener('dragend', function(e) {\n        e.preventDefault();\n\n        if (dragElement) {\n            if (typeof(obj.options.ondragend) == 'function') {\n                obj.options.ondragend(el, dragElement.element, e);\n            }\n\n            // Cancelled put element to the original position\n            if (dragElement.o < dragElement.d) {\n                e.target.parentNode.insertBefore(dragElement.element, e.target.parentNode.children[dragElement.o]);\n            } else {\n                e.target.parentNode.insertBefore(dragElement.element, e.target.parentNode.children[dragElement.o].nextSibling);\n            }\n\n            dragElement.element.style.opacity = '';\n            dragElement = null;\n        }\n    });\n\n    el.addEventListener('drop', function(e) {\n        e.preventDefault();\n\n        if (dragElement && (dragElement.o != dragElement.d)) {\n            if (typeof(obj.options.ondrop) == 'function') {\n                obj.options.ondrop(el, dragElement.o, dragElement.d, dragElement.element, e.target, e);\n            }\n        }\n\n        dragElement.element.style.opacity = '';\n        dragElement = null;\n    });\n\n    var getElement = function(element) {\n        var sorting = false;\n\n        function path (element) {\n            if (element.className) {\n                if (element.classList.contains('jsorting')) {\n                    sorting = true;\n                }\n            }\n\n            if (! sorting) {\n                path(element.parentNode);\n            }\n        }\n\n        path(element);\n\n        return sorting;\n    }\n\n    for (var i = 0; i < el.children.length; i++) {\n        if (! el.children[i].hasAttribute('draggable')) {\n            el.children[i].setAttribute('draggable', 'true');\n        }\n    }\n\n    el.val = function() {\n        var id = null;\n        var data = [];\n        for (var i = 0; i < el.children.length; i++) {\n            if (id = el.children[i].getAttribute('data-id')) {\n                data.push(id);\n            }\n        }\n        return data;\n    }\n\n    return el;\n}\n;// CONCATENATED MODULE: ./src/utils/lazyloading.js\nfunction LazyLoading(el, options) {\n    var obj = {}\n\n    // Mandatory options\n    if (! options.loadUp || typeof(options.loadUp) != 'function') {\n        options.loadUp = function() {\n            return false;\n        }\n    }\n    if (! options.loadDown || typeof(options.loadDown) != 'function') {\n        options.loadDown = function() {\n            return false;\n        }\n    }\n    // Timer ms\n    if (! options.timer) {\n        options.timer = 100;\n    }\n\n    // Timer\n    var timeControlLoading = null;\n\n    // Controls\n    var scrollControls = function(e) {\n        if (timeControlLoading == null) {\n            var event = false;\n            var scrollTop = el.scrollTop;\n            if (el.scrollTop + (el.clientHeight * 2) >= el.scrollHeight) {\n                if (options.loadDown()) {\n                    if (scrollTop == el.scrollTop) {\n                        el.scrollTop = el.scrollTop - (el.clientHeight);\n                    }\n                    event = true;\n                }\n            } else if (el.scrollTop <= el.clientHeight) {\n                if (options.loadUp()) {\n                    if (scrollTop == el.scrollTop) {\n                        el.scrollTop = el.scrollTop + (el.clientHeight);\n                    }\n                    event = true;\n                }\n            }\n\n            timeControlLoading = setTimeout(function() {\n                timeControlLoading = null;\n            }, options.timer);\n\n            if (event) {\n                if (typeof(options.onupdate) == 'function') {\n                    options.onupdate();\n                }\n            }\n        }\n    }\n\n    // Onscroll\n    el.onscroll = function(e) {\n        scrollControls(e);\n    }\n\n    el.onwheel = function(e) {\n        scrollControls(e);\n    }\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/ajax.js\nfunction Ajax() {\n    var Component = (function(options, complete) {\n        if (Array.isArray(options)) {\n            // Create multiple request controller\n            var multiple = {\n                instance: [],\n                complete: complete,\n            }\n\n            if (options.length > 0) {\n                for (var i = 0; i < options.length; i++) {\n                    options[i].multiple = multiple;\n                    multiple.instance.push(Component(options[i]));\n                }\n            }\n\n            return multiple;\n        }\n\n        if (! options.data) {\n            options.data = {};\n        }\n\n        if (options.type) {\n            options.method = options.type;\n        }\n\n        // Default method\n        if (! options.method) {\n            options.method = 'GET';\n        }\n\n        // Default type\n        if (! options.dataType) {\n            options.dataType = 'json';\n        }\n\n        if (options.data) {\n            // Parse object to variables format\n            var parseData = function (value, key) {\n                var vars = [];\n                if (value) {\n                    var keys = Object.keys(value);\n                    if (keys.length) {\n                        for (var i = 0; i < keys.length; i++) {\n                            if (key) {\n                                var k = key + '[' + keys[i] + ']';\n                            } else {\n                                var k = keys[i];\n                            }\n\n                            if (value[k] instanceof FileList) {\n                                vars[k] = value[keys[i]];\n                            } else if (value[keys[i]] === null || value[keys[i]] === undefined) {\n                                vars[k] = '';\n                            } else if (typeof(value[keys[i]]) == 'object') {\n                                var r = parseData(value[keys[i]], k);\n                                var o = Object.keys(r);\n                                for (var j = 0; j < o.length; j++) {\n                                    vars[o[j]] = r[o[j]];\n                                }\n                            } else {\n                                vars[k] = value[keys[i]];\n                            }\n                        }\n                    }\n                }\n\n                return vars;\n            }\n\n            var d = parseData(options.data);\n            var k = Object.keys(d);\n\n            // Data form\n            if (options.method == 'GET') {\n                if (k.length) {\n                    var data = [];\n                    for (var i = 0; i < k.length; i++) {\n                        data.push(k[i] + '=' + encodeURIComponent(d[k[i]]));\n                    }\n\n                    if (options.url.indexOf('?') < 0) {\n                        options.url += '?';\n                    }\n                    options.url += data.join('&');\n                }\n            } else {\n                var data = new FormData();\n                for (var i = 0; i < k.length; i++) {\n                    if (d[k[i]] instanceof FileList) {\n                        if (d[k[i]].length) {\n                            for (var j = 0; j < d[k[i]].length; j++) {\n                                data.append(k[i], d[k[i]][j], d[k[i]][j].name);\n                            }\n                        }\n                    } else {\n                        data.append(k[i], d[k[i]]);\n                    }\n                }\n            }\n        }\n\n        var httpRequest = new XMLHttpRequest();\n        httpRequest.open(options.method, options.url, true);\n        httpRequest.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n        // Content type\n        if (options.contentType) {\n            httpRequest.setRequestHeader('Content-Type', options.contentType);\n        }\n\n        // Headers\n        if (options.method == 'POST') {\n            httpRequest.setRequestHeader('Accept', 'application/json');\n        } else {\n            if (options.dataType == 'blob') {\n                httpRequest.responseType = \"blob\";\n            } else {\n                if (! options.contentType) {\n                    if (options.dataType == 'json') {\n                        httpRequest.setRequestHeader('Content-Type', 'text/json');\n                    } else if (options.dataType == 'html') {\n                        httpRequest.setRequestHeader('Content-Type', 'text/html');\n                    }\n                }\n            }\n        }\n\n        // No cache\n        if (options.cache != true) {\n            httpRequest.setRequestHeader('pragma', 'no-cache');\n            httpRequest.setRequestHeader('cache-control', 'no-cache');\n        }\n\n        // Authentication\n        if (options.withCredentials == true) {\n            httpRequest.withCredentials = true\n        }\n\n        // Before send\n        if (typeof(options.beforeSend) == 'function') {\n            options.beforeSend(httpRequest);\n        }\n\n        // Before send\n        if (typeof(Component.beforeSend) == 'function') {\n            Component.beforeSend(httpRequest);\n        }\n\n        if (document.ajax && typeof(document.ajax.beforeSend) == 'function') {\n            document.ajax.beforeSend(httpRequest);\n        }\n\n        httpRequest.onload = function() {\n            if (httpRequest.status === 200) {\n                if (options.dataType == 'json') {\n                    try {\n                        var result = JSON.parse(httpRequest.responseText);\n\n                        if (options.success && typeof(options.success) == 'function') {\n                            options.success(result);\n                        }\n                    } catch(err) {\n                        if (options.error && typeof(options.error) == 'function') {\n                            options.error(err, result);\n                        }\n                    }\n                } else {\n                    if (options.dataType == 'blob') {\n                        var result = httpRequest.response;\n                    } else {\n                        var result = httpRequest.responseText;\n                    }\n\n                    if (options.success && typeof(options.success) == 'function') {\n                        options.success(result);\n                    }\n                }\n            } else {\n                if (options.error && typeof(options.error) == 'function') {\n                    options.error(httpRequest.responseText, httpRequest.status);\n                }\n            }\n\n            // Global queue\n            if (Component.queue && Component.queue.length > 0) {\n                Component.send(Component.queue.shift());\n            }\n\n            // Global complete method\n            if (Component.requests && Component.requests.length) {\n                // Get index of this request in the container\n                var index = Component.requests.indexOf(httpRequest);\n                // Remove from the ajax requests container\n                Component.requests.splice(index, 1);\n                // Deprected: Last one?\n                if (! Component.requests.length) {\n                    // Object event\n                    if (options.complete && typeof(options.complete) == 'function') {\n                        options.complete(result);\n                    }\n                }\n                // Group requests\n                if (options.group) {\n                    if (Component.oncomplete && typeof(Component.oncomplete[options.group]) == 'function') {\n                        if (! Component.pending(options.group)) {\n                            Component.oncomplete[options.group]();\n                            Component.oncomplete[options.group] = null;\n                        }\n                    }\n                }\n                // Multiple requests controller\n                if (options.multiple && options.multiple.instance) {\n                    // Get index of this request in the container\n                    var index = options.multiple.instance.indexOf(httpRequest);\n                    // Remove from the ajax requests container\n                    options.multiple.instance.splice(index, 1);\n                    // If this is the last one call method complete\n                    if (! options.multiple.instance.length) {\n                        if (options.multiple.complete && typeof(options.multiple.complete) == 'function') {\n                            options.multiple.complete(result);\n                        }\n                    }\n                }\n            }\n        }\n\n        // Keep the options\n        httpRequest.options = options;\n        // Data\n        httpRequest.data = data;\n\n        // Queue\n        if (options.queue == true && Component.requests.length > 0) {\n            Component.queue.push(httpRequest);\n        } else {\n            Component.send(httpRequest)\n        }\n\n        return httpRequest;\n    });\n\n    Component.send = function(httpRequest) {\n        if (httpRequest.data) {\n            if (Array.isArray(httpRequest.data)) {\n                httpRequest.send(httpRequest.data.join('&'));\n            } else {\n                httpRequest.send(httpRequest.data);\n            }\n        } else {\n            httpRequest.send();\n        }\n\n        Component.requests.push(httpRequest);\n    }\n\n    Component.exists = function(url, __callback) {\n        var http = new XMLHttpRequest();\n        http.open('HEAD', url, false);\n        http.send();\n        if (http.status) {\n            __callback(http.status);\n        }\n    }\n\n    Component.pending = function(group) {\n        var n = 0;\n        var o = Component.requests;\n        if (o && o.length) {\n            for (var i = 0; i < o.length; i++) {\n                if (! group || group == o[i].options.group) {\n                    n++\n                }\n            }\n        }\n        return n;\n    }\n\n    Component.oncomplete = {};\n    Component.requests = [];\n    Component.queue = [];\n\n    return Component\n}\n\n/* harmony default export */ var ajax = (Ajax());\n;// CONCATENATED MODULE: ./src/plugins/animation.js\nfunction Animation() {\n    var Component = {\n        loading: {}\n    }\n\n    Component.loading.show = function(timeout) {\n        if (! Component.loading.element) {\n            Component.loading.element = document.createElement('div');\n            Component.loading.element.className = 'jloading';\n        }\n        document.body.appendChild(Component.loading.element);\n\n        // Max timeout in seconds\n        if (timeout > 0) {\n            setTimeout(function() {\n                obj.hide();\n            }, timeout * 1000)\n        }\n    }\n\n    Component.loading.hide = function() {\n        if (Component.loading.element && Component.loading.element.parentNode) {\n            document.body.removeChild(Component.loading.element);\n        }\n    }\n\n    Component.slideLeft = function (element, direction, done) {\n        if (direction == true) {\n            element.classList.add('slide-left-in');\n            setTimeout(function () {\n                element.classList.remove('slide-left-in');\n                if (typeof (done) == 'function') {\n                    done();\n                }\n            }, 400);\n        } else {\n            element.classList.add('slide-left-out');\n            setTimeout(function () {\n                element.classList.remove('slide-left-out');\n                if (typeof (done) == 'function') {\n                    done();\n                }\n            }, 400);\n        }\n    }\n\n    Component.slideRight = function (element, direction, done) {\n        if (direction == true) {\n            element.classList.add('slide-right-in');\n            setTimeout(function () {\n                element.classList.remove('slide-right-in');\n                if (typeof (done) == 'function') {\n                    done();\n                }\n            }, 400);\n        } else {\n            element.classList.add('slide-right-out');\n            setTimeout(function () {\n                element.classList.remove('slide-right-out');\n                if (typeof (done) == 'function') {\n                    done();\n                }\n            }, 400);\n        }\n    }\n\n    Component.slideTop = function (element, direction, done) {\n        if (direction == true) {\n            element.classList.add('slide-top-in');\n            setTimeout(function () {\n                element.classList.remove('slide-top-in');\n                if (typeof (done) == 'function') {\n                    done();\n                }\n            }, 400);\n        } else {\n            element.classList.add('slide-top-out');\n            setTimeout(function () {\n                element.classList.remove('slide-top-out');\n                if (typeof (done) == 'function') {\n                    done();\n                }\n            }, 400);\n        }\n    }\n\n    Component.slideBottom = function (element, direction, done) {\n        if (direction == true) {\n            element.classList.add('slide-bottom-in');\n            setTimeout(function () {\n                element.classList.remove('slide-bottom-in');\n                if (typeof (done) == 'function') {\n                    done();\n                }\n            }, 400);\n        } else {\n            element.classList.add('slide-bottom-out');\n            setTimeout(function () {\n                element.classList.remove('slide-bottom-out');\n                if (typeof (done) == 'function') {\n                    done();\n                }\n            }, 100);\n        }\n    }\n\n    Component.fadeIn = function (element, done) {\n        element.style.display = '';\n        element.classList.add('fade-in');\n        setTimeout(function () {\n            element.classList.remove('fade-in');\n            if (typeof (done) == 'function') {\n                done();\n            }\n        }, 2000);\n    }\n\n    Component.fadeOut = function (element, done) {\n        element.classList.add('fade-out');\n        setTimeout(function () {\n            element.style.display = 'none';\n            element.classList.remove('fade-out');\n            if (typeof (done) == 'function') {\n                done();\n            }\n        }, 1000);\n    }\n\n    return Component;\n}\n\n/* harmony default export */ var animation = (Animation());\n;// CONCATENATED MODULE: ./src/plugins/mask.js\n\n\n\nfunction Mask() {\n    // Currency\n    var tokens = {\n        // Text\n        text: [ '@' ],\n        // Currency tokens\n        currency: [ '#(.{1})##0?(.{1}0+)?( ?;(.*)?)?', '#' ],\n        // Percentage\n        percentage: [ '0{1}(.{1}0+)?%' ],\n        // Number\n        numeric: [ '0{1}(.{1}0+)?' ],\n        // Data tokens\n        datetime: [ 'YYYY', 'YYY', 'YY', 'MMMMM', 'MMMM', 'MMM', 'MM', 'DDDDD', 'DDDD', 'DDD', 'DD', 'DY', 'DAY', 'WD', 'D', 'Q', 'MONTH', 'MON', 'HH24', 'HH12', 'HH', '\\\\[H\\\\]', 'H', 'AM/PM', 'PM', 'AM', 'MI', 'SS', 'MS', 'Y', 'M' ],\n        // Other\n        general: [ 'A', '0', '[0-9a-zA-Z\\$]+', '.']\n    }\n\n    var getDate = function() {\n        if (this.mask.toLowerCase().indexOf('[h]') !== -1) {\n            var m = 0;\n            if (this.date[4]) {\n                m = parseFloat(this.date[4] / 60);\n            }\n            var v = parseInt(this.date[3]) + m;\n            v /= 24;\n        } else if (! (this.date[0] && this.date[1] && this.date[2]) && (this.date[3] || this.date[4])) {\n            v = helpers.two(this.date[3]) + ':' + helpers.two(this.date[4]) + ':' + helpers.two(this.date[5])\n        } else {\n            if (this.date[0] && this.date[1] && ! this.date[2]) {\n                this.date[2] = 1;\n            }\n            v = helpers.two(this.date[0]) + '-' + helpers.two(this.date[1]) + '-' + helpers.two(this.date[2]);\n\n            if (this.date[3] || this.date[4] || this.date[5]) {\n                v += ' ' + helpers.two(this.date[3]) + ':' + helpers.two(this.date[4]) + ':' + helpers.two(this.date[5]);\n            }\n        }\n\n        return v;\n    }\n\n    var extractDate = function() {\n        var v = '';\n        if (! (this.date[0] && this.date[1] && this.date[2]) && (this.date[3] || this.date[4])) {\n            if (this.mask.toLowerCase().indexOf('[h]') !== -1) {\n                v = parseInt(this.date[3]);\n            } else {\n                v = parseInt(this.date[3]) % 24;\n            }\n            if (this.date[4]) {\n                v += parseFloat(this.date[4] / 60);\n            }\n            v /= 24;\n        } else if (this.date[0] || this.date[1] || this.date[2] || this.date[3] || this.date[4] || this.date[5]) {\n            if (this.date[0] && this.date[1] && ! this.date[2]) {\n                this.date[2] = 1;\n            }\n            var t = helpers_date.now(this.date);\n            v = helpers_date.dateToNum(t);\n            if (this.date[4]) {\n                v += parseFloat(this.date[4] / 60);\n            }\n        }\n\n        if (isNaN(v)) {\n            v = '';\n        }\n\n        return v;\n    }\n\n    var isBlank = function(v) {\n        return v === null || v === '' || v === undefined ? true : false;\n    }\n\n    var isFormula = function(value) {\n        return (''+value).chartAt(0) == '=';\n    }\n\n    var isNumeric = function(t) {\n        return t === 'currency' || t === 'percentage' || t === 'numeric' ? true : false;\n    }\n    /**\n     * Get the decimal defined in the mask configuration\n     */\n    var getDecimal = function(v) {\n        if (v && Number(v) == v) {\n            return '.';\n        } else {\n            if (this.options.decimal) {\n                return this.options.decimal;\n            } else {\n                if (this.locale) {\n                    var t = Intl.NumberFormat(this.locale).format(1.1);\n                    return this.options.decimal = t[1];\n                } else {\n                    if (! v) {\n                        v  = this.mask;\n                    }\n                    var e = new RegExp('0{1}(.{1})0+', 'ig');\n                    var t = e.exec(v);\n                    if (t && t[1] && t[1].length == 1) {\n                        // Save decimal\n                        this.options.decimal = t[1];\n                        // Return decimal\n                        return t[1];\n                    } else {\n                        // Did not find any decimal last resort the default\n                        var e = new RegExp('#{1}(.{1})#+', 'ig');\n                        var t = e.exec(v);\n                        if (t && t[1] && t[1].length == 1) {\n                            if (t[1] === ',') {\n                                this.options.decimal = '.';\n                            } else {\n                                this.options.decimal = ',';\n                            }\n                        } else {\n                            this.options.decimal = '1.1'.toLocaleString().substring(1,2);\n                        }\n                    }\n                }\n            }\n        }\n\n        if (this.options.decimal) {\n            return this.options.decimal;\n        } else {\n            return null;\n        }\n    }\n\n    var ParseValue = function(v, decimal) {\n        if (v == '') {\n            return '';\n        }\n\n        // Get decimal\n        if (! decimal) {\n            decimal = getDecimal.call(this);\n        }\n\n        // New value\n        v = (''+v).split(decimal);\n\n        // Signal\n        var signal = v[0].match(/[-]+/g);\n        if (signal && signal.length) {\n            signal = true;\n        } else {\n            signal = false;\n        }\n\n        v[0] = v[0].match(/[0-9]+/g);\n\n        if (v[0]) {\n            if (signal) {\n                v[0].unshift('-');\n            }\n            v[0] = v[0].join('');\n        } else {\n            if (signal) {\n                v[0] = '-';\n            }\n        }\n\n        if (v[0] || v[1]) {\n            if (v[1] !== undefined) {\n                v[1] = v[1].match(/[0-9]+/g);\n                if (v[1]) {\n                    v[1] = v[1].join('');\n                } else {\n                    v[1] = '';\n                }\n            }\n        } else {\n            return '';\n        }\n        return v;\n    }\n\n    var FormatValue = function(v, event) {\n        if (v == '') {\n            return '';\n        }\n        // Get decimal\n        var d = getDecimal.call(this);\n        // Convert value\n        var o = this.options;\n        // Parse value\n        v = ParseValue.call(this, v);\n        if (v == '') {\n            return '';\n        }\n        // Temporary value\n        if (v[0]) {\n            var t = parseFloat(v[0] + '.1');\n            if (o.style == 'percent') {\n                t /= 100;\n            }\n        } else {\n            var t = null;\n        }\n\n        if ((v[0] == '-' || v[0] == '-00') && ! v[1] && (event && event.inputType == \"deleteContentBackward\")) {\n            return '';\n        }\n\n        var n = new Intl.NumberFormat(this.locale, o).format(t);\n        n = n.split(d);\n        if (typeof(n[1]) !== 'undefined') {\n            var s = n[1].replace(/[0-9]*/g, '');\n            if (s) {\n                n[2] = s;\n            }\n        }\n\n        if (v[1] !== undefined) {\n            n[1] = d + v[1];\n        } else {\n            n[1] = '';\n        }\n\n        return n.join('');\n    }\n\n    var Format = function(e, event) {\n        var v = Value.call(e);\n        if (! v) {\n            return;\n        }\n\n        // Get decimal\n        var d = getDecimal.call(this);\n        var n = FormatValue.call(this, v, event);\n        var t = (n.length) - v.length;\n        var index = Caret.call(e) + t;\n        // Set value and update caret\n        Value.call(e, n, index, true);\n    }\n\n    var Extract = function(v) {\n        // Keep the raw value\n        var current = ParseValue.call(this, v);\n        if (current) {\n            // Negative values\n            if (current[0] === '-') {\n                current[0] = '-0';\n            }\n            return parseFloat(current.join('.'));\n        }\n        return null;\n    }\n\n    /**\n     * Caret getter and setter methods\n     */\n    var Caret = function(index, adjustNumeric) {\n        if (index === undefined) {\n            if (this.tagName == 'DIV') {\n                var pos = 0;\n                var s = window.getSelection();\n                if (s) {\n                    if (s.rangeCount !== 0) {\n                        var r = s.getRangeAt(0);\n                        var p = r.cloneRange();\n                        p.selectNodeContents(this);\n                        p.setEnd(r.endContainer, r.endOffset);\n                        pos = p.toString().length;\n                    }\n                }\n                return pos;\n            } else {\n                return this.selectionStart;\n            }\n        } else {\n            // Get the current value\n            var n = Value.call(this);\n\n            // Review the position\n            if (adjustNumeric) {\n                var p = null;\n                for (var i = 0; i < n.length; i++) {\n                    if (n[i].match(/[\\-0-9]/g) || n[i] == '.' || n[i] == ',') {\n                        p = i;\n                    }\n                }\n\n                // If the string has no numbers\n                if (p === null) {\n                    p = n.indexOf(' ');\n                }\n\n                if (index >= p) {\n                    index = p + 1;\n                }\n            }\n\n            // Do not update caret\n            if (index > n.length) {\n                index = n.length;\n            }\n\n            if (index) {\n                // Set caret\n                if (this.tagName == 'DIV') {\n                    var s = window.getSelection();\n                    var r = document.createRange();\n\n                    if (this.childNodes[0]) {\n                        r.setStart(this.childNodes[0], index);\n                        s.removeAllRanges();\n                        s.addRange(r);\n                    }\n                } else {\n                    this.selectionStart = index;\n                    this.selectionEnd = index;\n                }\n            }\n        }\n    }\n\n    /**\n     * Value getter and setter method\n     */\n    var Value = function(v, updateCaret, adjustNumeric) {\n        if (this.tagName == 'DIV') {\n            if (v === undefined) {\n                var v = this.innerText;\n                if (this.value && this.value.length > v.length) {\n                    v = this.value;\n                }\n                return v;\n            } else {\n                if (this.innerText !== v) {\n                    this.innerText = v;\n\n                    if (updateCaret) {\n                        Caret.call(this, updateCaret, adjustNumeric);\n                    }\n                }\n            }\n        } else {\n            if (v === undefined) {\n                return this.value;\n            } else {\n                if (this.value !== v) {\n                    this.value = v;\n                    if (updateCaret) {\n                        Caret.call(this, updateCaret, adjustNumeric);\n                    }\n                }\n            }\n        }\n    }\n\n    // Labels\n    var weekDaysFull = helpers_date.weekdays;\n    var weekDays = helpers_date.weekdaysShort;\n    var monthsFull = helpers_date.months;\n    var months = helpers_date.monthsShort;\n\n    var parser = {\n        'YEAR': function(v, s) {\n            var y = ''+new Date().getFullYear();\n\n            if (typeof(this.values[this.index]) === 'undefined') {\n                this.values[this.index] = '';\n            }\n            if (parseInt(v) >= 0 && parseInt(v) <= 10) {\n                if (this.values[this.index].length < s) {\n                    this.values[this.index] += v;\n                }\n            }\n            if (this.values[this.index].length == s) {\n                if (s == 2) {\n                    var y = y.substr(0,2) + this.values[this.index];\n                } else if (s == 3) {\n                    var y = y.substr(0,1) + this.values[this.index];\n                } else if (s == 4) {\n                    var y = this.values[this.index];\n                }\n                this.date[0] = y;\n                this.index++;\n            }\n        },\n        'YYYY': function(v) {\n            parser.YEAR.call(this, v, 4);\n        },\n        'YYY': function(v) {\n            parser.YEAR.call(this, v, 3);\n        },\n        'YY': function(v) {\n            parser.YEAR.call(this, v, 2);\n        },\n        'FIND': function(v, a) {\n            if (isBlank(this.values[this.index])) {\n                this.values[this.index] = '';\n            }\n            if (this.event && this.event.inputType && this.event.inputType.indexOf('delete') > -1) {\n                this.values[this.index] += v;\n                return;\n            }\n            var pos = 0;\n            var count = 0;\n            var value = (this.values[this.index] + v).toLowerCase();\n            for (var i = 0; i < a.length; i++) {\n                if (a[i].toLowerCase().indexOf(value) == 0) {\n                    pos = i;\n                    count++;\n                }\n            }\n            if (count > 1) {\n                this.values[this.index] += v;\n            } else if (count == 1) {\n                // Jump number of chars\n                var t = (a[pos].length - this.values[this.index].length) - 1;\n                this.position += t;\n\n                this.values[this.index] = a[pos];\n                this.index++;\n                return pos;\n            }\n        },\n        'MMM': function(v) {\n            var ret = parser.FIND.call(this, v, months);\n            if (ret !== undefined) {\n                this.date[1] = ret + 1;\n            }\n        },\n        'MON': function(v) {\n            parser['MMM'].call(this, v);\n        },\n        'MMMM': function(v) {\n            var ret = parser.FIND.call(this, v, monthsFull);\n            if (ret !== undefined) {\n                this.date[1] = ret + 1;\n            }\n        },\n        'MONTH': function(v) {\n            parser['MMMM'].call(this, v);\n        },\n        'MMMMM': function(v) {\n            if (isBlank(this.values[this.index])) {\n                this.values[this.index] = '';\n            }\n            var pos = 0;\n            var count = 0;\n            var value = (this.values[this.index] + v).toLowerCase();\n            for (var i = 0; i < monthsFull.length; i++) {\n                if (monthsFull[i][0].toLowerCase().indexOf(value) == 0) {\n                    this.values[this.index] = monthsFull[i][0];\n                    this.date[1] = i + 1;\n                    this.index++;\n                    break;\n                }\n            }\n        },\n        'MM': function(v) {\n            if (isBlank(this.values[this.index])) {\n                if (parseInt(v) > 1 && parseInt(v) < 10) {\n                    this.date[1] = this.values[this.index] = '0' + v;\n                    this.index++;\n                } else if (parseInt(v) < 2) {\n                    this.values[this.index] = v;\n                }\n            } else {\n                if (this.values[this.index] == 1 && parseInt(v) < 3) {\n                    this.date[1] = this.values[this.index] += v;\n                    this.index++;\n                } else if (this.values[this.index] == 0 && parseInt(v) > 0 && parseInt(v) < 10) {\n                    this.date[1] = this.values[this.index] += v;\n                    this.index++;\n                }\n            }\n        },\n        'M': function(v) {\n            var test = false;\n            if (parseInt(v) >= 0 && parseInt(v) < 10) {\n                if (isBlank(this.values[this.index])) {\n                    this.values[this.index] = v;\n                    if (v > 1) {\n                        this.date[1] = this.values[this.index];\n                        this.index++;\n                    }\n                } else {\n                    if (this.values[this.index] == 1 && parseInt(v) < 3) {\n                        this.date[1] = this.values[this.index] += v;\n                        this.index++;\n                    } else if (this.values[this.index] == 0 && parseInt(v) > 0) {\n                        this.date[1] = this.values[this.index] += v;\n                        this.index++;\n                    } else {\n                        var test = true;\n                    }\n                }\n            } else {\n                var test = true;\n            }\n\n            // Re-test\n            if (test == true) {\n                var t = parseInt(this.values[this.index]);\n                if (t > 0 && t < 12) {\n                    this.date[2] = this.values[this.index];\n                    this.index++;\n                    // Repeat the character\n                    this.position--;\n                }\n            }\n        },\n        'D': function(v) {\n            var test = false;\n            if (parseInt(v) >= 0 && parseInt(v) < 10) {\n                if (isBlank(this.values[this.index])) {\n                    this.values[this.index] = v;\n                    if (parseInt(v) > 3) {\n                        this.date[2] = this.values[this.index];\n                        this.index++;\n                    }\n                } else {\n                    if (this.values[this.index] == 3 && parseInt(v) < 2) {\n                        this.date[2] = this.values[this.index] += v;\n                        this.index++;\n                    } else if (this.values[this.index] == 1 || this.values[this.index] == 2) {\n                        this.date[2] = this.values[this.index] += v;\n                        this.index++;\n                    } else if (this.values[this.index] == 0 && parseInt(v) > 0) {\n                        this.date[2] = this.values[this.index] += v;\n                        this.index++;\n                    } else {\n                        var test = true;\n                    }\n                }\n            } else {\n                var test = true;\n            }\n\n            // Re-test\n            if (test == true) {\n                var t = parseInt(this.values[this.index]);\n                if (t > 0 && t < 32) {\n                    this.date[2] = this.values[this.index];\n                    this.index++;\n                    // Repeat the character\n                    this.position--;\n                }\n            }\n        },\n        'DD': function(v) {\n            if (isBlank(this.values[this.index])) {\n                if (parseInt(v) > 3 && parseInt(v) < 10) {\n                    this.date[2] = this.values[this.index] = '0' + v;\n                    this.index++;\n                } else if (parseInt(v) < 10) {\n                    this.values[this.index] = v;\n                }\n            } else {\n                if (this.values[this.index] == 3 && parseInt(v) < 2) {\n                    this.date[2] = this.values[this.index] += v;\n                    this.index++;\n                } else if ((this.values[this.index] == 1 || this.values[this.index] == 2) && parseInt(v) < 10) {\n                    this.date[2] = this.values[this.index] += v;\n                    this.index++;\n                } else if (this.values[this.index] == 0 && parseInt(v) > 0 && parseInt(v) < 10) {\n                    this.date[2] = this.values[this.index] += v;\n                    this.index++;\n                }\n            }\n        },\n        'DDD': function(v) {\n            parser.FIND.call(this, v, weekDays);\n        },\n        'DY': function(v) {\n            parser['DDD'].call(this, v);\n        },\n        'DDDD': function(v) {\n            parser.FIND.call(this, v, weekDaysFull);\n        },\n        'DAY': function(v) {\n            parser['DDDD'].call(this, v);\n        },\n        'HH12': function(v, two) {\n            if (isBlank(this.values[this.index])) {\n                if (parseInt(v) > 1 && parseInt(v) < 10) {\n                    if (two) {\n                        v = 0 + v;\n                    }\n                    this.date[3] = this.values[this.index] = v;\n                    this.index++;\n                } else if (parseInt(v) < 10) {\n                    this.values[this.index] = v;\n                }\n            } else {\n                if (this.values[this.index] == 1 && parseInt(v) < 3) {\n                    this.date[3] = this.values[this.index] += v;\n                    this.index++;\n                } else if (this.values[this.index] < 1 && parseInt(v) < 10) {\n                    this.date[3] = this.values[this.index] += v;\n                    this.index++;\n                }\n            }\n        },\n        'HH24': function(v, two) {\n            var test = false;\n            if (parseInt(v) >= 0 && parseInt(v) < 10) {\n                if (this.values[this.index] == null || this.values[this.index] == '') {\n                    if (parseInt(v) > 2 && parseInt(v) < 10) {\n                        if (two) {\n                            v = 0 + v;\n                        }\n                        this.date[3] = this.values[this.index] = v;\n                        this.index++;\n                    } else if (parseInt(v) < 10) {\n                        this.values[this.index] = v;\n                    }\n                } else {\n                    if (this.values[this.index] == 2 && parseInt(v) < 4) {\n                        this.date[3] = this.values[this.index] += v;\n                        this.index++;\n                    } else if (this.values[this.index] < 2 && parseInt(v) < 10) {\n                        this.date[3] = this.values[this.index] += v;\n                        this.index++;\n                    }\n                }\n            }\n        },\n        'HH': function(v) {\n            parser['HH24'].call(this, v, 1);\n        },\n        'H': function(v) {\n            parser['HH24'].call(this, v, 0);\n        },\n        '\\\\[H\\\\]': function(v) {\n            if (this.values[this.index] == undefined) {\n                this.values[this.index] = '';\n            }\n            if (v.match(/[0-9]/g)) {\n                this.date[3] = this.values[this.index] += v;\n            } else {\n                if (this.values[this.index].match(/[0-9]/g)) {\n                    this.date[3] = this.values[this.index];\n                    this.index++;\n                    // Repeat the character\n                    this.position--;\n                }\n            }\n        },\n        'N60': function(v, i) {\n            if (this.values[this.index] == null || this.values[this.index] == '') {\n                if (parseInt(v) > 5 && parseInt(v) < 10) {\n                    this.date[i] = this.values[this.index] = '0' + v;\n                    this.index++;\n                } else if (parseInt(v) < 10) {\n                    this.values[this.index] = v;\n                }\n            } else {\n                if (parseInt(v) < 10) {\n                    this.date[i] = this.values[this.index] += v;\n                    this.index++;\n                 }\n            }\n        },\n        'MI': function(v) {\n            parser.N60.call(this, v, 4);\n        },\n        'SS': function(v) {\n            parser.N60.call(this, v, 5);\n        },\n        'AM/PM': function(v) {\n            this.values[this.index] = '';\n            if (v) {\n                if (this.date[3] > 12) {\n                    this.values[this.index] = 'PM';\n                } else {\n                    this.values[this.index] = 'AM';\n                }\n            }\n            this.index++;\n        },\n        'WD': function(v) {\n            if (typeof(this.values[this.index]) === 'undefined') {\n                this.values[this.index] = '';\n            }\n            if (parseInt(v) >= 0 && parseInt(v) < 7) {\n                this.values[this.index] = v;\n            }\n            if (this.value[this.index].length == 1) {\n                this.index++;\n            }\n        },\n        '0{1}(.{1}0+)?': function(v) {\n            // Get decimal\n            var decimal = getDecimal.call(this);\n            // Negative number\n            var neg = false;\n            // Create if is blank\n            if (isBlank(this.values[this.index])) {\n                this.values[this.index] = '';\n            } else {\n                if (this.values[this.index] == '-') {\n                    neg = true;\n                }\n            }\n            var current = ParseValue.call(this, this.values[this.index], decimal);\n            if (current) {\n                this.values[this.index] = current.join(decimal);\n            }\n            // New entry\n            if (parseInt(v) >= 0 && parseInt(v) < 10) {\n                // Replace the zero for a number\n                if (this.values[this.index] == '0' && v > 0) {\n                    this.values[this.index] = '';\n                } else if (this.values[this.index] == '-0' && v > 0) {\n                    this.values[this.index] = '-';\n                }\n                // Don't add up zeros because does not mean anything here\n                if ((this.values[this.index] != '0' && this.values[this.index] != '-0') || v == decimal) {\n                    this.values[this.index] += v;\n                }\n            } else if (decimal && v == decimal) {\n                if (this.values[this.index].indexOf(decimal) == -1) {\n                    if (! this.values[this.index]) {\n                        this.values[this.index] = '0';\n                    }\n                    this.values[this.index] += v;\n                }\n            } else if (v == '-') {\n                // Negative signed\n                neg = true;\n            }\n\n            if (neg === true && this.values[this.index][0] !== '-') {\n                this.values[this.index] = '-' + this.values[this.index];\n            }\n        },\n        '0{1}(.{1}0+)?%': function(v) {\n            parser['0{1}(.{1}0+)?'].call(this, v);\n\n            if (this.values[this.index].match(/[\\-0-9]/g)) {\n                if (this.values[this.index] && this.values[this.index].indexOf('%') == -1) {\n                    this.values[this.index] += '%';\n                }\n            } else {\n                this.values[this.index] = '';\n            }\n        },\n        '#(.{1})##0?(.{1}0+)?( ?;(.*)?)?': function(v) {\n            // Parse number\n            parser['0{1}(.{1}0+)?'].call(this, v);\n            // Get decimal\n            var decimal = getDecimal.call(this);\n            // Get separator\n            var separator = this.tokens[this.index].substr(1,1);\n            // Negative\n            var negative = this.values[this.index][0] === '-' ? true : false;\n            // Current value\n            var current = ParseValue.call(this, this.values[this.index], decimal);\n\n            // Get main and decimal parts\n            if (current !== '') {\n                // Format number\n                var n = current[0].match(/[0-9]/g);\n                if (n) {\n                    // Format\n                    n = n.join('');\n                    var t = [];\n                    var s = 0;\n                    for (var j = n.length - 1; j >= 0 ; j--) {\n                        t.push(n[j]);\n                        s++;\n                        if (! (s % 3)) {\n                            t.push(separator);\n                        }\n                    }\n                    t = t.reverse();\n                    current[0] = t.join('');\n                    if (current[0].substr(0,1) == separator) {\n                        current[0] = current[0].substr(1);\n                    }\n                } else {\n                    current[0] = '';\n                }\n\n                // Value\n                this.values[this.index] = current.join(decimal);\n\n                // Negative\n                if (negative) {\n                    this.values[this.index] = '-' + this.values[this.index];\n                }\n            }\n        },\n        '0': function(v) {\n            if (v.match(/[0-9]/g)) {\n                this.values[this.index] = v;\n                this.index++;\n            }\n        },\n        '[0-9a-zA-Z$]+': function(v) {\n            if (isBlank(this.values[this.index])) {\n                this.values[this.index] = '';\n            }\n            var t = this.tokens[this.index];\n            var s = this.values[this.index];\n            var i = s.length;\n\n            if (t[i] == v) {\n                this.values[this.index] += v;\n\n                if (this.values[this.index] == t) {\n                    this.index++;\n                }\n            } else {\n                this.values[this.index] = t;\n                this.index++;\n\n                if (v.match(/[\\-0-9]/g)) {\n                    // Repeat the character\n                    this.position--;\n                }\n            }\n        },\n        'A': function(v) {\n            if (v.match(/[a-zA-Z]/gi)) {\n                this.values[this.index] = v;\n                this.index++;\n            }\n        },\n        '.': function(v) {\n            parser['[0-9a-zA-Z$]+'].call(this, v);\n        },\n        '@': function(v) {\n            if (isBlank(this.values[this.index])) {\n                this.values[this.index] = '';\n            }\n            this.values[this.index] += v;\n        }\n    }\n\n    /**\n     * Get the tokens in the mask string\n     */\n    var getTokens = function(str) {\n        if (this.type == 'general') {\n            var t = [].concat(tokens.general);\n        } else {\n            var t = [].concat(tokens.currency, tokens.datetime, tokens.percentage, tokens.numeric, tokens.text, tokens.general);\n        }\n        // Expression to extract all tokens from the string\n        var e = new RegExp(t.join('|'), 'gi');\n        // Extract\n        return str.match(e);\n    }\n\n    /**\n     * Get the method of one given token\n     */\n    var getMethod = function(str) {\n        if (! this.type) {\n            var types = Object.keys(tokens);\n        } else if (this.type == 'text') {\n            var types = [ 'text' ];\n        } else if (this.type == 'general') {\n            var types = [ 'general' ];\n        } else if (this.type == 'datetime') {\n            var types = [ 'numeric', 'datetime', 'general' ];\n        } else {\n            var types = [ 'currency', 'percentage', 'numeric', 'general' ];\n        }\n\n        // Found\n        for (var i = 0; i < types.length; i++) {\n            var type = types[i];\n            for (var j = 0; j < tokens[type].length; j++) {\n                var e = new RegExp(tokens[type][j], 'gi');\n                var r = str.match(e);\n                if (r) {\n                    return { type: type, method: tokens[type][j] }\n                }\n            }\n        }\n    }\n\n    /**\n     * Identify each method for each token\n     */\n    var getMethods = function(t) {\n        var result = [];\n        for (var i = 0; i < t.length; i++) {\n            var m = getMethod.call(this, t[i]);\n            if (m) {\n                result.push(m.method);\n            } else {\n                result.push(null);\n            }\n        }\n\n        // Compatibility with excel\n        for (var i = 0; i < result.length; i++) {\n            if (result[i] == 'MM') {\n                // Not a month, correct to minutes\n                if (result[i-1] && result[i-1].indexOf('H') >= 0) {\n                    result[i] = 'MI';\n                } else if (result[i-2] && result[i-2].indexOf('H') >= 0) {\n                    result[i] = 'MI';\n                } else if (result[i+1] && result[i+1].indexOf('S') >= 0) {\n                    result[i] = 'MI';\n                } else if (result[i+2] && result[i+2].indexOf('S') >= 0) {\n                    result[i] = 'MI';\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Get the type for one given token\n     */\n    var getType = function(str) {\n        var m = getMethod.call(this, str);\n        if (m) {\n            var type = m.type;\n        }\n\n        if (type) {\n            var numeric = 0;\n            // Make sure the correct type\n            var t = getTokens.call(this, str);\n            for (var i = 0; i < t.length; i++) {\n                m = getMethod.call(this, t[i]);\n                if (m && isNumeric(m.type)) {\n                    numeric++;\n                }\n            }\n            if (numeric > 1) {\n                type = 'general';\n            }\n        }\n\n        return type;\n    }\n\n    /**\n     * Parse character per character using the detected tokens in the mask\n     */\n    var parse = function() {\n        // Parser method for this position\n        if (typeof(parser[this.methods[this.index]]) == 'function') {\n            parser[this.methods[this.index]].call(this, this.value[this.position]);\n            this.position++;\n        } else {\n            this.values[this.index] = this.tokens[this.index];\n            this.index++;\n        }\n    }\n\n    var isFormula = function(value) {\n        var v = (''+value)[0];\n        return v == '=' ? true : false;\n    }\n\n    var toPlainString = function(num) {\n        return (''+ +num).replace(/(-?)(\\d*)\\.?(\\d*)e([+-]\\d+)/,\n          function(a,b,c,d,e) {\n            return e < 0\n              ? b + '0.' + Array(1-e-c.length).join(0) + c + d\n              : b + c + d + Array(e-d.length+1).join(0);\n          });\n    }\n\n    /**\n     * Mask function\n     * @param {mixed|string} JS input or a string to be parsed\n     * @param {object|string} When the first param is a string, the second is the mask or object with the mask options\n     */\n    var obj = function(e, config, returnObject) {\n        // Options\n        var r = null;\n        var t = null;\n        var o = {\n            // Element\n            input: null,\n            // Current value\n            value: null,\n            // Mask options\n            options: {},\n            // New values for each token found\n            values: [],\n            // Token position\n            index: 0,\n            // Character position\n            position: 0,\n            // Date raw values\n            date: [0,0,0,0,0,0],\n            // Raw number for the numeric values\n            number: 0,\n        }\n\n        // This is a JavaScript Event\n        if (typeof(e) == 'object') {\n            // Element\n            o.input = e.target;\n            // Current value\n            o.value = Value.call(e.target);\n            // Current caret position\n            o.caret = Caret.call(e.target);\n            // Mask\n            if (t = e.target.getAttribute('data-mask')) {\n                o.mask = t;\n            }\n            // Type\n            if (t = e.target.getAttribute('data-type')) {\n                o.type = t;\n            }\n            // Options\n            if (e.target.mask) {\n                if (e.target.mask.options) {\n                    o.options = e.target.mask.options;\n                }\n                if (e.target.mask.locale) {\n                    o.locale = e.target.mask.locale;\n                }\n            } else {\n                // Locale\n                if (t = e.target.getAttribute('data-locale')) {\n                    o.locale = t;\n                    if (o.mask) {\n                        o.options.style = o.mask;\n                    }\n                }\n            }\n            // Extra configuration\n            if (e.target.attributes && e.target.attributes.length) {\n                for (var i = 0; i < e.target.attributes.length; i++) {\n                    var k = e.target.attributes[i].name;\n                    var v = e.target.attributes[i].value;\n                    if (k.substr(0,4) == 'data') {\n                        o.options[k.substr(5)] = v;\n                    }\n                }\n            }\n        } else {\n            // Options\n            if (typeof(config) == 'string') {\n                // Mask\n                o.mask = config;\n            } else {\n                // Mask\n                var k = Object.keys(config);\n                for (var i = 0; i < k.length; i++) {\n                    o[k[i]] = config[k[i]];\n                }\n            }\n\n            if (typeof(e) === 'number') {\n                // Get decimal\n                getDecimal.call(o, o.mask);\n                // Replace to the correct decimal\n                e = (''+e).replace('.', o.options.decimal);\n            }\n\n            // Current\n            o.value = e;\n\n            if (o.input) {\n                // Value\n                Value.call(o.input, e);\n                // Focus\n                helpers.focus(o.input);\n                // Caret\n                o.caret = Caret.call(o.input);\n            }\n        }\n\n        // Mask detected start the process\n        if (! isFormula(o.value) && (o.mask || o.locale)) {\n            // Compatibility fixes\n            if (o.mask) {\n                // Remove []\n                o.mask = o.mask.replace(new RegExp(/\\[h]/),'|h|');\n                o.mask = o.mask.replace(new RegExp(/\\[.*?\\]/),'');\n                o.mask = o.mask.replace(new RegExp(/\\|h\\|/),'[h]');\n                if (o.mask.indexOf(';') !== -1) {\n                    var t = o.mask.split(';');\n                    o.mask = t[0];\n                }\n                // Excel mask TODO: Improve\n                if (o.mask.indexOf('##') !== -1) {\n                    var d = o.mask.split(';');\n                    if (d[0]) {\n                        d[0] = d[0].replace('*', '\\t');\n                        d[0] = d[0].replace(new RegExp(/_-/g), ' ');\n                        d[0] = d[0].replace(new RegExp(/_/g), '');\n                        d[0] = d[0].replace('##0.###','##0.000');\n                        d[0] = d[0].replace('##0.##','##0.00');\n                        d[0] = d[0].replace('##0.#','##0.0');\n                        d[0] = d[0].replace('##0,###','##0,000');\n                        d[0] = d[0].replace('##0,##','##0,00');\n                        d[0] = d[0].replace('##0,#','##0,0');\n                    }\n                    o.mask = d[0];\n                }\n                // Get type\n                if (! o.type) {\n                    o.type = getType.call(o, o.mask);\n                }\n                // Get tokens\n                o.tokens = getTokens.call(o, o.mask);\n            }\n\n            // On new input\n            if (typeof(e) !== 'object'  || ! e.inputType || ! e.inputType.indexOf('insert') || ! e.inputType.indexOf('delete')) {\n                // Start transformation\n                if (o.locale) {\n                    if (o.input) {\n                        Format.call(o, o.input, e);\n                    } else {\n                        var newValue = FormatValue.call(o, o.value);\n                    }\n                } else {\n                    // Get tokens\n                    o.methods = getMethods.call(o, o.tokens);\n                    o.event = e;\n\n                    // Go through all tokes\n                    while (o.position < o.value.length && typeof(o.tokens[o.index]) !== 'undefined') {\n                        // Get the appropriate parser\n                        parse.call(o);\n                    }\n\n                    // New value\n                    var newValue = o.values.join('');\n\n                    // Add tokens to the end of string only if string is not empty\n                    if (isNumeric(o.type) && newValue !== '') {\n                        // Complement things in the end of the mask\n                        while (typeof(o.tokens[o.index]) !== 'undefined') {\n                            var t = getMethod.call(o, o.tokens[o.index]);\n                            if (t && t.type == 'general') {\n                                o.values[o.index] = o.tokens[o.index];\n                            }\n                            o.index++;\n                        }\n\n                        var adjustNumeric = true;\n                    } else {\n                        var adjustNumeric = false;\n                    }\n\n                    // New value\n                    newValue = o.values.join('');\n\n                    // Reset value\n                    if (o.input) {\n                        t = newValue.length - o.value.length;\n                        if (t > 0) {\n                            var caret = o.caret + t;\n                        } else {\n                            var caret = o.caret;\n                        }\n                        Value.call(o.input, newValue, caret, adjustNumeric);\n                    }\n                }\n            }\n\n            // Update raw data\n            if (o.input) {\n                var label = null;\n                if (isNumeric(o.type)) {\n                    // Extract the number\n                    o.number = Extract.call(o, Value.call(o.input));\n                    // Keep the raw data as a property of the tag\n                    if (o.type == 'percentage') {\n                        label = o.number / 100;\n                    } else {\n                        label = o.number;\n                    }\n                } else if (o.type == 'datetime') {\n                    label = getDate.call(o);\n\n                    if (o.date[0] && o.date[1] && o.date[2]) {\n                        o.input.setAttribute('data-completed', true);\n                    }\n                }\n\n                if (label) {\n                    o.input.setAttribute('data-value', label);\n                }\n            }\n\n            if (newValue !== undefined) {\n                if (returnObject) {\n                    return o;\n                } else {\n                    return newValue;\n                }\n            }\n        }\n    }\n\n    // Get the type of the mask\n    obj.getType = getType;\n\n    // Extract the tokens from a mask\n    obj.prepare = function(str, o) {\n        if (! o) {\n            o = {};\n        }\n        return getTokens.call(o, str);\n    }\n\n    /**\n     * Apply the mask to a element (legacy)\n     */\n    obj.apply = function(e) {\n        var v = Value.call(e.target);\n        if (e.key.length == 1) {\n            v += e.key;\n        }\n        Value.call(e.target, obj(v, e.target.getAttribute('data-mask')));\n    }\n\n    /**\n     * Legacy support\n     */\n    obj.run = function(value, mask, decimal) {\n        return obj(value, { mask: mask, decimal: decimal });\n    }\n\n    /**\n     * Extract number from masked string\n     */\n    obj.extract = function(v, options, returnObject) {\n        if (isBlank(v)) {\n            return v;\n        }\n        if (typeof(options) != 'object') {\n            return v;\n        } else {\n            options = Object.assign({}, options);\n\n            if (! options.options) {\n                options.options = {};\n            }\n        }\n\n        // Compatibility\n        if (! options.mask && options.format) {\n            options.mask = options.format;\n        }\n\n        // Remove []\n        if (options.mask) {\n            if (options.mask.indexOf(';') !== -1) {\n                var t = options.mask.split(';');\n                options.mask = t[0];\n            }\n            options.mask = options.mask.replace(new RegExp(/\\[h]/),'|h|');\n            options.mask = options.mask.replace(new RegExp(/\\[.*?\\]/),'');\n            options.mask = options.mask.replace(new RegExp(/\\|h\\|/),'[h]');\n        }\n\n        // Get decimal\n        getDecimal.call(options, options.mask);\n\n        var type = null;\n        var value = null;\n\n        if (options.type == 'percent' || options.options.style == 'percent') {\n            type = 'percentage';\n        } else if (options.mask) {\n            type = getType.call(options, options.mask);\n        }\n\n        if (type === 'general') {\n            var o = obj(v, options, true);\n\n            value = v;\n        } else if (type === 'datetime') {\n            if (v instanceof Date) {\n                v = obj.getDateString(v, options.mask);\n            }\n\n            var o = obj(v, options, true);\n\n            if (helpers.isNumeric(v)) {\n                value = v;\n            } else {\n                value = extractDate.call(o);\n            }\n        } else {\n            value = Extract.call(options, v);\n            // Percentage\n            if (type == 'percentage') {\n                value /= 100;\n            }\n            var o = options;\n        }\n\n        o.value = value;\n\n        if (! o.type && type) {\n            o.type = type;\n        }\n\n        if (returnObject) {\n            return o;\n        } else {\n            return value;\n        }\n    }\n\n    /**\n     * Render\n     */\n    obj.render = function(value, options, fullMask) {\n        if (isBlank(value)) {\n            return value;\n        }\n\n        if (typeof(options) != 'object') {\n            return value;\n        } else {\n            options = Object.assign({}, options);\n\n            if (! options.options) {\n                options.options = {};\n            }\n        }\n\n        // Compatibility\n        if (! options.mask && options.format) {\n            options.mask = options.format;\n        }\n\n        // Remove []\n        if (options.mask) {\n            if (options.mask.indexOf(';') !== -1) {\n                var t = options.mask.split(';');\n                options.mask = t[0];\n            }\n            options.mask = options.mask.replace(new RegExp(/\\[h]/),'|h|');\n            options.mask = options.mask.replace(new RegExp(/\\[.*?\\]/),'');\n            options.mask = options.mask.replace(new RegExp(/\\|h\\|/),'[h]');\n        }\n\n        var type = null;\n        if (options.type == 'percent' || options.options.style == 'percent') {\n            type = 'percentage';\n        } else if (options.mask) {\n            type = getType.call(options, options.mask);\n        } else if (value instanceof Date) {\n            type = 'datetime';\n        }\n\n        // Fill with blanks\n        var fillWithBlanks = false;\n\n        if (type =='datetime' || options.type == 'calendar') {\n            var t = obj.getDateString(value, options.mask);\n            if (t) {\n                value = t;\n            }\n            if (options.mask && fullMask) {\n                fillWithBlanks = true;\n            }\n        } else {\n            // Percentage\n            if (type == 'percentage') {\n                value *= 100;\n            }\n            // Number of decimal places\n            if (typeof(value) === 'number') {\n                var t = null;\n                if (options.mask && fullMask && ((''+value).indexOf('e') === -1)) {\n                    var d = getDecimal.call(options, options.mask);\n                    if (options.mask.indexOf(d) !== -1) {\n                        d = options.mask.split(d);\n                        d = (''+d[1].match(/[0-9]+/g))\n                        d = d.length;\n                        t = value.toFixed(d);\n                    } else {\n                        t = value.toFixed(0);\n                    }\n                } else if (options.locale && fullMask) {\n                    // Append zeros\n                    var d = (''+value).split('.');\n                    if (options.options) {\n                        if (typeof(d[1]) === 'undefined') {\n                            d[1] = '';\n                        }\n                        var len = d[1].length;\n                        if (options.options.minimumFractionDigits > len) {\n                            for (var i = 0; i < options.options.minimumFractionDigits - len; i++) {\n                                d[1] += '0';\n                            }\n                        }\n                    }\n                    if (! d[1].length) {\n                        t = d[0]\n                    } else {\n                        t = d.join('.');\n                    }\n                    var len = d[1].length;\n                    if (options.options && options.options.maximumFractionDigits < len) {\n                        t = parseFloat(t).toFixed(options.options.maximumFractionDigits);\n                    }\n                } else {\n                    t = toPlainString(value);\n                }\n\n                if (t !== null) {\n                    value = t;\n                    // Get decimal\n                    getDecimal.call(options, options.mask);\n                    // Replace to the correct decimal\n                    if (options.options.decimal) {\n                        value = value.replace('.', options.options.decimal);\n                    }\n                }\n            } else {\n                if (options.mask && fullMask) {\n                    fillWithBlanks = true;\n                }\n            }\n        }\n\n        if (fillWithBlanks) {\n            var s = options.mask.length - value.length;\n            if (s > 0) {\n                for (var i = 0; i < s; i++) {\n                    value += ' ';\n                }\n            }\n        }\n\n        value = obj(value, options);\n\n        // Numeric mask, number of zeros\n        if (fullMask && type === 'numeric') {\n            var maskZeros = options.mask.match(new RegExp(/^[0]+$/gm));\n            if (maskZeros && maskZeros.length === 1) {\n                var maskLength = maskZeros[0].length;\n                if (maskLength > 3) {\n                    value = '' + value;\n                    while (value.length < maskLength) {\n                        value = '0' + value;\n                    }\n                }\n            }\n        }\n\n        return value;\n    }\n\n    obj.set = function(e, m) {\n        if (m) {\n            e.setAttribute('data-mask', m);\n            // Reset the value\n            var event = new Event('input', {\n                bubbles: true,\n                cancelable: true,\n            });\n            e.dispatchEvent(event);\n        }\n    }\n\n    // Helper to extract date from a string\n    obj.extractDateFromString = function (date, format) {\n        var o = obj(date, { mask: format }, true);\n\n        // Check if in format Excel (Need difference with format date or type detected is numeric)\n        if (date > 0 && Number(date) == date && (o.values.join(\"\") !== o.value || o.type == \"numeric\")) {\n            var d = new Date(Math.round((date - 25569) * 86400 * 1000));\n            return d.getFullYear() + \"-\" + helpers.two(d.getMonth()) + \"-\" + helpers.two(d.getDate()) + ' 00:00:00';\n        }\n\n        var complete = false;\n\n        if (o.values.length === o.tokens.length && o.values[o.values.length - 1].length >= o.tokens[o.tokens.length - 1].length) {\n            complete = true;\n        }\n\n        if (o.date[0] && o.date[1] && (o.date[2] || complete)) {\n            if (!o.date[2]) {\n                o.date[2] = 1;\n            }\n\n            return o.date[0] + '-' + helpers.two(o.date[1]) + '-' + helpers.two(o.date[2]) + ' ' + helpers.two(o.date[3]) + ':' + helpers.two(o.date[4]) + ':' + helpers.two(o.date[5]);\n        }\n\n        return '';\n    }\n\n    // Helper to convert date into string\n    obj.getDateString = function (value, options) {\n        if (!options) {\n            var options = {};\n        }\n\n        // Labels\n        if (options && typeof (options) == 'object') {\n            var format = options.format;\n        } else {\n            var format = options;\n        }\n\n        if (!format) {\n            format = 'YYYY-MM-DD';\n        }\n\n        // Convert to number of hours\n        if (format.indexOf('[h]') >= 0) {\n            var result = 0;\n            if (value && helpers.isNumeric(value)) {\n                result = parseFloat(24 * Number(value));\n                if (format.indexOf('mm') >= 0) {\n                    var h = ('' + result).split('.');\n                    if (h[1]) {\n                        var d = 60 * parseFloat('0.' + h[1])\n                        d = parseFloat(d.toFixed(2));\n                    } else {\n                        var d = 0;\n                    }\n                    result = parseInt(h[0]) + ':' + helpers.two(d);\n                }\n            }\n            return result;\n        }\n\n        // Date instance\n        if (value instanceof Date) {\n            value = helpers_date.now(value);\n        } else if (value && helpers.isNumeric(value)) {\n            value = helpers_date.numToDate(value);\n        }\n\n        // Tokens\n        var tokens = ['DAY', 'WD', 'DDDD', 'DDD', 'DD', 'D', 'Q', 'HH24', 'HH12', 'HH', 'H', 'AM/PM', 'MI', 'SS', 'MS', 'YYYY', 'YYY', 'YY', 'Y', 'MONTH', 'MON', 'MMMMM', 'MMMM', 'MMM', 'MM', 'M', '.'];\n\n        // Expression to extract all tokens from the string\n        var e = new RegExp(tokens.join('|'), 'gi');\n        // Extract\n        var t = format.match(e);\n\n        // Compatibility with excel\n        for (var i = 0; i < t.length; i++) {\n            if (t[i].toUpperCase() == 'MM') {\n                // Not a month, correct to minutes\n                if (t[i - 1] && t[i - 1].toUpperCase().indexOf('H') >= 0) {\n                    t[i] = 'mi';\n                } else if (t[i - 2] && t[i - 2].toUpperCase().indexOf('H') >= 0) {\n                    t[i] = 'mi';\n                } else if (t[i + 1] && t[i + 1].toUpperCase().indexOf('S') >= 0) {\n                    t[i] = 'mi';\n                } else if (t[i + 2] && t[i + 2].toUpperCase().indexOf('S') >= 0) {\n                    t[i] = 'mi';\n                }\n            }\n        }\n\n        // Object\n        var o = {\n            tokens: t\n        }\n\n        // Value\n        if (value) {\n            var d = '' + value;\n            var splitStr = (d.indexOf('T') !== -1) ? 'T' : ' ';\n            d = d.split(splitStr);\n\n            var h = 0;\n            var m = 0;\n            var s = 0;\n\n            if (d[1]) {\n                h = d[1].split(':');\n                m = h[1] ? h[1] : 0;\n                s = h[2] ? h[2] : 0;\n                h = h[0] ? h[0] : 0;\n            }\n\n            d = d[0].split('-');\n\n            if (d[0] && d[1] && d[2] && d[0] > 0 && d[1] > 0 && d[1] < 13 && d[2] > 0 && d[2] < 32) {\n\n                // Data\n                o.data = [d[0], d[1], d[2], h, m, s];\n\n                // Value\n                o.value = [];\n\n                // Calendar instance\n                var calendar = new Date(o.data[0], o.data[1] - 1, o.data[2], o.data[3], o.data[4], o.data[5]);\n\n                // Get method\n                var get = function (i) {\n                    // Token\n                    var t = this.tokens[i];\n                    // Case token\n                    var s = t.toUpperCase();\n                    var v = null;\n\n                    if (s === 'YYYY') {\n                        v = this.data[0];\n                    } else if (s === 'YYY') {\n                        v = this.data[0].substring(1, 4);\n                    } else if (s === 'YY') {\n                        v = this.data[0].substring(2, 4);\n                    } else if (s === 'Y') {\n                        v = this.data[0].substring(3, 4);\n                    } else if (t === 'MON') {\n                        v = helpers_date.months[calendar.getMonth()].substr(0, 3).toUpperCase();\n                    } else if (t === 'mon') {\n                        v = helpers_date.months[calendar.getMonth()].substr(0, 3).toLowerCase();\n                    } else if (t === 'MONTH') {\n                        v = helpers_date.months[calendar.getMonth()].toUpperCase();\n                    } else if (t === 'month') {\n                        v = helpers_date.months[calendar.getMonth()].toLowerCase();\n                    } else if (s === 'MMMMM') {\n                        v = helpers_date.months[calendar.getMonth()].substr(0, 1);\n                    } else if (s === 'MMMM' || t === 'Month') {\n                        v = helpers_date.months[calendar.getMonth()];\n                    } else if (s === 'MMM' || t == 'Mon') {\n                        v = helpers_date.months[calendar.getMonth()].substr(0, 3);\n                    } else if (s === 'MM') {\n                        v = helpers.two(this.data[1]);\n                    } else if (s === 'M') {\n                        v = calendar.getMonth() + 1;\n                    } else if (t === 'DAY') {\n                        v = helpers_date.weekdays[calendar.getDay()].toUpperCase();\n                    } else if (t === 'day') {\n                        v = helpers_date.weekdays[calendar.getDay()].toLowerCase();\n                    } else if (s === 'DDDD' || t == 'Day') {\n                        v = helpers_date.weekdays[calendar.getDay()];\n                    } else if (s === 'DDD') {\n                        v = helpers_date.weekdays[calendar.getDay()].substr(0, 3);\n                    } else if (s === 'DD') {\n                        v = helpers.two(this.data[2]);\n                    } else if (s === 'D') {\n                        v = this.data[2];\n                    } else if (s === 'Q') {\n                        v = Math.floor((calendar.getMonth() + 3) / 3);\n                    } else if (s === 'HH24' || s === 'HH') {\n                        v = helpers.two(this.data[3]);\n                    } else if (s === 'HH12') {\n                        if (this.data[3] > 12) {\n                            v = helpers.two(this.data[3] - 12);\n                        } else {\n                            v = helpers.two(this.data[3]);\n                        }\n                    } else if (s === 'H') {\n                        v = this.data[3];\n                    } else if (s === 'MI') {\n                        v = helpers.two(this.data[4]);\n                    } else if (s === 'SS') {\n                        v = helpers.two(this.data[5]);\n                    } else if (s === 'MS') {\n                        v = calendar.getMilliseconds();\n                    } else if (s === 'AM/PM') {\n                        if (this.data[3] >= 12) {\n                            v = 'PM';\n                        } else {\n                            v = 'AM';\n                        }\n                    } else if (s === 'WD') {\n                        v = helpers_date.weekdays[calendar.getDay()];\n                    }\n\n                    if (v === null) {\n                        this.value[i] = this.tokens[i];\n                    } else {\n                        this.value[i] = v;\n                    }\n                }\n\n                for (var i = 0; i < o.tokens.length; i++) {\n                    get.call(o, i);\n                }\n                // Put pieces together\n                value = o.value.join('');\n            } else {\n                value = '';\n            }\n        }\n\n        return value;\n    }\n\n    if (typeof document !== 'undefined') {\n        document.addEventListener('input', function(e) {\n            if (e.target.getAttribute('data-mask') || e.target.mask) {\n                obj(e);\n            }\n        });\n    }\n\n    return obj;\n}\n\n/* harmony default export */ var mask = (Mask());\n;// CONCATENATED MODULE: ./src/plugins/calendar.js\n\n\n\n\n\n\n\nfunction Calendar() {\n    var Component = (function (el, options) {\n        // Already created, update options\n        if (el.calendar) {\n            return el.calendar.setOptions(options, true);\n        }\n\n        // New instance\n        var obj = {type: 'calendar'};\n        obj.options = {};\n\n        // Date\n        obj.date = null;\n\n        /**\n         * Update options\n         */\n        obj.setOptions = function (options, reset) {\n            // Default configuration\n            var defaults = {\n                // Render type: [ default | year-month-picker ]\n                type: 'default',\n                // Restrictions\n                validRange: null,\n                // Starting weekday - 0 for sunday, 6 for saturday\n                startingDay: null,\n                // Date format\n                format: 'DD/MM/YYYY',\n                // Allow keyboard date entry\n                readonly: true,\n                // Today is default\n                today: false,\n                // Show timepicker\n                time: false,\n                // Show the reset button\n                resetButton: true,\n                // Placeholder\n                placeholder: '',\n                // Translations can be done here\n                months: helpers_date.monthsShort,\n                monthsFull: helpers_date.months,\n                weekdays: helpers_date.weekdays,\n                textDone: dictionary.translate('Done'),\n                textReset: dictionary.translate('Reset'),\n                textUpdate: dictionary.translate('Update'),\n                // Value\n                value: null,\n                // Fullscreen (this is automatic set for screensize < 800)\n                fullscreen: false,\n                // Create the calendar closed as default\n                opened: false,\n                // Events\n                onopen: null,\n                onclose: null,\n                onchange: null,\n                onupdate: null,\n                // Internal mode controller\n                mode: null,\n                position: null,\n                // Data type\n                dataType: null,\n                // Controls\n                controls: true,\n            }\n\n            // Loop through our object\n            for (var property in defaults) {\n                if (options && options.hasOwnProperty(property)) {\n                    obj.options[property] = options[property];\n                } else {\n                    if (typeof (obj.options[property]) == 'undefined' || reset === true) {\n                        obj.options[property] = defaults[property];\n                    }\n                }\n            }\n\n            // Reset button\n            if (obj.options.resetButton == false) {\n                calendarReset.style.display = 'none';\n            } else {\n                calendarReset.style.display = '';\n            }\n\n            // Readonly\n            if (obj.options.readonly) {\n                el.setAttribute('readonly', 'readonly');\n            } else {\n                el.removeAttribute('readonly');\n            }\n\n            // Placeholder\n            if (obj.options.placeholder) {\n                el.setAttribute('placeholder', obj.options.placeholder);\n            } else {\n                el.removeAttribute('placeholder');\n            }\n\n            if (helpers.isNumeric(obj.options.value) && obj.options.value > 0) {\n                obj.options.value = Component.numToDate(obj.options.value);\n                // Data type numeric\n                obj.options.dataType = 'numeric';\n            }\n\n            // Texts\n            calendarReset.innerHTML = obj.options.textReset;\n            calendarConfirm.innerHTML = obj.options.textDone;\n            calendarControlsUpdateButton.innerHTML = obj.options.textUpdate;\n\n            // Define mask\n            el.setAttribute('data-mask', obj.options.format.toLowerCase());\n\n            // Value\n            if (!obj.options.value && obj.options.today) {\n                var value = Component.now();\n            } else {\n                var value = obj.options.value;\n            }\n\n            // Set internal date\n            if (value) {\n                // Force the update\n                obj.options.value = null;\n                // New value\n                obj.setValue(value);\n            }\n\n            return obj;\n        }\n\n        /**\n         * Open the calendar\n         */\n        obj.open = function (value) {\n            if (!calendar.classList.contains('jcalendar-focus')) {\n                if (!calendar.classList.contains('jcalendar-inline')) {\n                    // Current\n                    Component.current = obj;\n                    // Start tracking\n                    Tracking(obj, true);\n                    // Create the days\n                    obj.getDays();\n                    // Render months\n                    if (obj.options.type == 'year-month-picker') {\n                        obj.getMonths();\n                    }\n                    // Get time\n                    if (obj.options.time) {\n                        calendarSelectHour.value = obj.date[3];\n                        calendarSelectMin.value = obj.date[4];\n                    }\n\n                    // Show calendar\n                    calendar.classList.add('jcalendar-focus');\n\n                    // Get the position of the corner helper\n                    if (helpers.getWindowWidth() < 800 || obj.options.fullscreen) {\n                        calendar.classList.add('jcalendar-fullsize');\n                        // Animation\n                        animation.slideBottom(calendarContent, 1);\n                    } else {\n                        calendar.classList.remove('jcalendar-fullsize');\n\n                        var rect = el.getBoundingClientRect();\n                        var rectContent = calendarContent.getBoundingClientRect();\n\n                        if (obj.options.position) {\n                            calendarContainer.style.position = 'fixed';\n                            if (window.innerHeight < rect.bottom + rectContent.height) {\n                                calendarContainer.style.top = (rect.top - (rectContent.height + 2)) + 'px';\n                            } else {\n                                calendarContainer.style.top = (rect.top + rect.height + 2) + 'px';\n                            }\n                            calendarContainer.style.left = rect.left + 'px';\n                        } else {\n                            if (window.innerHeight < rect.bottom + rectContent.height) {\n                                var d = -1 * (rect.height + rectContent.height + 2);\n                                if (d + rect.top < 0) {\n                                    d = -1 * (rect.top + rect.height);\n                                }\n                                calendarContainer.style.top = d + 'px';\n                            } else {\n                                calendarContainer.style.top = 2 + 'px';\n                            }\n\n                            if (window.innerWidth < rect.left + rectContent.width) {\n                                var d = window.innerWidth - (rect.left + rectContent.width + 20);\n                                calendarContainer.style.left = d + 'px';\n                            } else {\n                                calendarContainer.style.left = '0px';\n                            }\n                        }\n                    }\n\n                    // Events\n                    if (typeof (obj.options.onopen) == 'function') {\n                        obj.options.onopen(el);\n                    }\n                }\n            }\n        }\n\n        obj.close = function (ignoreEvents, update) {\n            if (calendar.classList.contains('jcalendar-focus')) {\n                if (update !== false) {\n                    var element = calendar.querySelector('.jcalendar-selected');\n\n                    if (typeof (update) == 'string') {\n                        var value = update;\n                    } else if (!element || element.classList.contains('jcalendar-disabled')) {\n                        var value = obj.options.value\n                    } else {\n                        var value = obj.getValue();\n                    }\n\n                    obj.setValue(value);\n                }\n\n                // Events\n                if (!ignoreEvents && typeof (obj.options.onclose) == 'function') {\n                    obj.options.onclose(el);\n                }\n                // Hide\n                calendar.classList.remove('jcalendar-focus');\n                // Stop tracking\n                Tracking(obj, false);\n                // Current\n                Component.current = null;\n            }\n\n            return obj.options.value;\n        }\n\n        obj.prev = function () {\n            // Check if the visualization is the days picker or years picker\n            if (obj.options.mode == 'years') {\n                obj.date[0] = obj.date[0] - 12;\n\n                // Update picker table of days\n                obj.getYears();\n            } else if (obj.options.mode == 'months') {\n                obj.date[0] = parseInt(obj.date[0]) - 1;\n                // Update picker table of months\n                obj.getMonths();\n            } else {\n                // Go to the previous month\n                if (obj.date[1] < 2) {\n                    obj.date[0] = obj.date[0] - 1;\n                    obj.date[1] = 12;\n                } else {\n                    obj.date[1] = obj.date[1] - 1;\n                }\n\n                // Update picker table of days\n                obj.getDays();\n            }\n        }\n\n        obj.next = function () {\n            // Check if the visualization is the days picker or years picker\n            if (obj.options.mode == 'years') {\n                obj.date[0] = parseInt(obj.date[0]) + 12;\n\n                // Update picker table of days\n                obj.getYears();\n            } else if (obj.options.mode == 'months') {\n                obj.date[0] = parseInt(obj.date[0]) + 1;\n                // Update picker table of months\n                obj.getMonths();\n            } else {\n                // Go to the previous month\n                if (obj.date[1] > 11) {\n                    obj.date[0] = parseInt(obj.date[0]) + 1;\n                    obj.date[1] = 1;\n                } else {\n                    obj.date[1] = parseInt(obj.date[1]) + 1;\n                }\n\n                // Update picker table of days\n                obj.getDays();\n            }\n        }\n\n        /**\n         * Set today\n         */\n        obj.setToday = function () {\n            // Today\n            var value = new Date().toISOString().substr(0, 10);\n            // Change value\n            obj.setValue(value);\n            // Value\n            return value;\n        }\n\n        obj.setValue = function (val) {\n            if (!val) {\n                val = '' + val;\n            }\n            // Values\n            var newValue = val;\n            var oldValue = obj.options.value;\n\n            if (oldValue != newValue) {\n                // Set label\n                if (!newValue) {\n                    obj.date = null;\n                    var val = '';\n                    el.classList.remove('jcalendar_warning');\n                    el.title = '';\n                } else {\n                    var value = obj.setLabel(newValue, obj.options);\n                    var date = newValue.split(' ');\n                    if (!date[1]) {\n                        date[1] = '00:00:00';\n                    }\n                    var time = date[1].split(':')\n                    var date = date[0].split('-');\n                    var y = parseInt(date[0]);\n                    var m = parseInt(date[1]);\n                    var d = parseInt(date[2]);\n                    var h = parseInt(time[0]);\n                    var i = parseInt(time[1]);\n                    obj.date = [y, m, d, h, i, 0];\n                    var val = obj.setLabel(newValue, obj.options);\n\n                    // Current selection day\n                    var current = Component.now(new Date(y, m - 1, d), true);\n\n                    // Available ranges\n                    if (obj.options.validRange) {\n                        if (!obj.options.validRange[0] || current >= obj.options.validRange[0]) {\n                            var test1 = true;\n                        } else {\n                            var test1 = false;\n                        }\n\n                        if (!obj.options.validRange[1] || current <= obj.options.validRange[1]) {\n                            var test2 = true;\n                        } else {\n                            var test2 = false;\n                        }\n\n                        if (!(test1 && test2)) {\n                            el.classList.add('jcalendar_warning');\n                            el.title = dictionary.translate('Date outside the valid range');\n                        } else {\n                            el.classList.remove('jcalendar_warning');\n                            el.title = '';\n                        }\n                    } else {\n                        el.classList.remove('jcalendar_warning');\n                        el.title = '';\n                    }\n                }\n\n                // New value\n                obj.options.value = newValue;\n\n                if (typeof (obj.options.onchange) == 'function') {\n                    obj.options.onchange(el, newValue, oldValue);\n                }\n\n                // Lemonade JS\n                if (el.value != val) {\n                    el.value = val;\n                    if (typeof (el.oninput) == 'function') {\n                        el.oninput({\n                            type: 'input',\n                            target: el,\n                            value: el.value\n                        });\n                    }\n                }\n            }\n\n            obj.getDays();\n            // Render months\n            if (obj.options.type == 'year-month-picker') {\n                obj.getMonths();\n            }\n        }\n\n        obj.getValue = function () {\n            if (obj.date) {\n                if (obj.options.time) {\n                    return helpers.two(obj.date[0]) + '-' + helpers.two(obj.date[1]) + '-' + helpers.two(obj.date[2]) + ' ' + helpers.two(obj.date[3]) + ':' + helpers.two(obj.date[4]) + ':' + helpers.two(0);\n                } else {\n                    return helpers.two(obj.date[0]) + '-' + helpers.two(obj.date[1]) + '-' + helpers.two(obj.date[2]) + ' ' + helpers.two(0) + ':' + helpers.two(0) + ':' + helpers.two(0);\n                }\n            } else {\n                return \"\";\n            }\n        }\n\n        /**\n         *  Calendar\n         */\n        obj.update = function (element, v) {\n            if (element.classList.contains('jcalendar-disabled')) {\n                // Do nothing\n            } else {\n                var elements = calendar.querySelector('.jcalendar-selected');\n                if (elements) {\n                    elements.classList.remove('jcalendar-selected');\n                }\n                element.classList.add('jcalendar-selected');\n\n                if (element.classList.contains('jcalendar-set-month')) {\n                    obj.date[1] = v;\n                    obj.date[2] = 1; // first day of the month\n                } else {\n                    obj.date[2] = element.innerText;\n                }\n\n                if (!obj.options.time) {\n                    obj.close();\n                } else {\n                    obj.date[3] = calendarSelectHour.value;\n                    obj.date[4] = calendarSelectMin.value;\n                }\n            }\n\n            // Update\n            updateActions();\n        }\n\n        /**\n         * Set to blank\n         */\n        obj.reset = function () {\n            // Close calendar\n            obj.setValue('');\n            obj.date = null;\n            obj.close(false, false);\n        }\n\n        /**\n         * Get calendar days\n         */\n        obj.getDays = function () {\n            // Mode\n            obj.options.mode = 'days';\n\n            // Setting current values in case of NULLs\n            var date = new Date();\n\n            // Current selection\n            var year = obj.date && helpers.isNumeric(obj.date[0]) ? obj.date[0] : parseInt(date.getFullYear());\n            var month = obj.date && helpers.isNumeric(obj.date[1]) ? obj.date[1] : parseInt(date.getMonth()) + 1;\n            var day = obj.date && helpers.isNumeric(obj.date[2]) ? obj.date[2] : parseInt(date.getDate());\n            var hour = obj.date && helpers.isNumeric(obj.date[3]) ? obj.date[3] : parseInt(date.getHours());\n            var min = obj.date && helpers.isNumeric(obj.date[4]) ? obj.date[4] : parseInt(date.getMinutes());\n\n            // Selection container\n            obj.date = [year, month, day, hour, min, 0];\n\n            // Update title\n            calendarLabelYear.innerHTML = year;\n            calendarLabelMonth.innerHTML = obj.options.months[month - 1];\n\n            // Current month and Year\n            var isCurrentMonthAndYear = (date.getMonth() == month - 1) && (date.getFullYear() == year) ? true : false;\n            var currentDay = date.getDate();\n\n            // Number of days in the month\n            var date = new Date(year, month, 0, 0, 0);\n            var numberOfDays = date.getDate();\n\n            // First day\n            var date = new Date(year, month - 1, 0, 0, 0);\n            var firstDay = date.getDay() + 1;\n\n            // Index value\n            var index = obj.options.startingDay || 0;\n\n            // First of day relative to the starting calendar weekday\n            firstDay = firstDay - index;\n\n            // Reset table\n            calendarBody.innerHTML = '';\n\n            // Weekdays Row\n            var row = document.createElement('tr');\n            row.setAttribute('align', 'center');\n            calendarBody.appendChild(row);\n\n            // Create weekdays row\n            for (var i = 0; i < 7; i++) {\n                var cell = document.createElement('td');\n                cell.classList.add('jcalendar-weekday')\n                cell.innerHTML = obj.options.weekdays[index].substr(0, 1);\n                row.appendChild(cell);\n                // Next week day\n                index++;\n                // Restart index\n                if (index > 6) {\n                    index = 0;\n                }\n            }\n\n            // Index of days\n            var index = 0;\n            var d = 0;\n\n            // Calendar table\n            for (var j = 0; j < 6; j++) {\n                // Reset cells container\n                var row = document.createElement('tr');\n                row.setAttribute('align', 'center');\n                row.style.height = '34px';\n\n                // Create cells\n                for (var i = 0; i < 7; i++) {\n                    // Create cell\n                    var cell = document.createElement('td');\n                    cell.classList.add('jcalendar-set-day');\n\n                    if (index >= firstDay && index < (firstDay + numberOfDays)) {\n                        // Day cell\n                        d++;\n                        cell.innerHTML = d;\n\n                        // Selected\n                        if (d == day) {\n                            cell.classList.add('jcalendar-selected');\n                        }\n\n                        // Current selection day is today\n                        if (isCurrentMonthAndYear && currentDay == d) {\n                            cell.style.fontWeight = 'bold';\n                        }\n\n                        // Current selection day\n                        var current = Component.now(new Date(year, month - 1, d), true);\n\n                        // Available ranges\n                        if (obj.options.validRange) {\n                            if (!obj.options.validRange[0] || current >= obj.options.validRange[0]) {\n                                var test1 = true;\n                            } else {\n                                var test1 = false;\n                            }\n\n                            if (!obj.options.validRange[1] || current <= obj.options.validRange[1]) {\n                                var test2 = true;\n                            } else {\n                                var test2 = false;\n                            }\n\n                            if (!(test1 && test2)) {\n                                cell.classList.add('jcalendar-disabled');\n                            }\n                        }\n                    }\n                    // Day cell\n                    row.appendChild(cell);\n                    // Index\n                    index++;\n                }\n\n                // Add cell to the calendar body\n                calendarBody.appendChild(row);\n            }\n\n            // Show time controls\n            if (obj.options.time) {\n                calendarControlsTime.style.display = '';\n            } else {\n                calendarControlsTime.style.display = 'none';\n            }\n\n            // Update\n            updateActions();\n        }\n\n        obj.getMonths = function () {\n            // Mode\n            obj.options.mode = 'months';\n\n            // Loading month labels\n            var months = obj.options.months;\n\n            // Value\n            var value = obj.options.value;\n\n            // Current date\n            var date = new Date();\n            var currentYear = parseInt(date.getFullYear());\n            var currentMonth = parseInt(date.getMonth()) + 1;\n            var selectedYear = obj.date && helpers.isNumeric(obj.date[0]) ? obj.date[0] : currentYear;\n            var selectedMonth = obj.date && helpers.isNumeric(obj.date[1]) ? obj.date[1] : currentMonth;\n\n            // Update title\n            calendarLabelYear.innerHTML = obj.date[0];\n            calendarLabelMonth.innerHTML = months[selectedMonth - 1];\n\n            // Table\n            var table = document.createElement('table');\n            table.setAttribute('width', '100%');\n\n            // Row\n            var row = null;\n\n            // Calendar table\n            for (var i = 0; i < 12; i++) {\n                if (!(i % 4)) {\n                    // Reset cells container\n                    var row = document.createElement('tr');\n                    row.setAttribute('align', 'center');\n                    table.appendChild(row);\n                }\n\n                // Create cell\n                var cell = document.createElement('td');\n                cell.classList.add('jcalendar-set-month');\n                cell.setAttribute('data-value', i + 1);\n                cell.innerText = months[i];\n\n                if (obj.options.validRange) {\n                    var current = selectedYear + '-' + helpers.two(i + 1);\n                    if (!obj.options.validRange[0] || current >= obj.options.validRange[0].substr(0, 7)) {\n                        var test1 = true;\n                    } else {\n                        var test1 = false;\n                    }\n\n                    if (!obj.options.validRange[1] || current <= obj.options.validRange[1].substr(0, 7)) {\n                        var test2 = true;\n                    } else {\n                        var test2 = false;\n                    }\n\n                    if (!(test1 && test2)) {\n                        cell.classList.add('jcalendar-disabled');\n                    }\n                }\n\n                if (i + 1 == selectedMonth) {\n                    cell.classList.add('jcalendar-selected');\n                }\n\n                if (currentYear == selectedYear && i + 1 == currentMonth) {\n                    cell.style.fontWeight = 'bold';\n                }\n\n                row.appendChild(cell);\n            }\n\n            calendarBody.innerHTML = '<tr><td colspan=\"7\"></td></tr>';\n            calendarBody.children[0].children[0].appendChild(table);\n\n            // Update\n            updateActions();\n        }\n\n        obj.getYears = function () {\n            // Mode\n            obj.options.mode = 'years';\n\n            // Current date\n            var date = new Date();\n            var currentYear = date.getFullYear();\n            var selectedYear = obj.date && helpers.isNumeric(obj.date[0]) ? obj.date[0] : parseInt(date.getFullYear());\n\n            // Array of years\n            var y = [];\n            for (var i = 0; i < 25; i++) {\n                y[i] = parseInt(obj.date[0]) + (i - 12);\n            }\n\n            // Assembling the year tables\n            var table = document.createElement('table');\n            table.setAttribute('width', '100%');\n\n            for (var i = 0; i < 25; i++) {\n                if (!(i % 5)) {\n                    // Reset cells container\n                    var row = document.createElement('tr');\n                    row.setAttribute('align', 'center');\n                    table.appendChild(row);\n                }\n\n                // Create cell\n                var cell = document.createElement('td');\n                cell.classList.add('jcalendar-set-year');\n                cell.innerText = y[i];\n\n                if (selectedYear == y[i]) {\n                    cell.classList.add('jcalendar-selected');\n                }\n\n                if (currentYear == y[i]) {\n                    cell.style.fontWeight = 'bold';\n                }\n\n                row.appendChild(cell);\n            }\n\n            calendarBody.innerHTML = '<tr><td colspan=\"7\"></td></tr>';\n            calendarBody.firstChild.firstChild.appendChild(table);\n\n            // Update\n            updateActions();\n        }\n\n        obj.setLabel = function (value, mixed) {\n            return Component.getDateString(value, mixed);\n        }\n\n        obj.fromFormatted = function (value, format) {\n            return Component.extractDateFromString(value, format);\n        }\n\n        var mouseUpControls = function (e) {\n            var element = helpers.findElement(e.target, 'jcalendar-container');\n            if (element) {\n                var action = e.target.className;\n\n                // Object id\n                if (action == 'jcalendar-prev') {\n                    obj.prev();\n                } else if (action == 'jcalendar-next') {\n                    obj.next();\n                } else if (action == 'jcalendar-month') {\n                    obj.getMonths();\n                } else if (action == 'jcalendar-year') {\n                    obj.getYears();\n                } else if (action == 'jcalendar-set-year') {\n                    obj.date[0] = e.target.innerText;\n                    if (obj.options.type == 'year-month-picker') {\n                        obj.getMonths();\n                    } else {\n                        obj.getDays();\n                    }\n                } else if (e.target.classList.contains('jcalendar-set-month')) {\n                    var month = parseInt(e.target.getAttribute('data-value'));\n                    if (obj.options.type == 'year-month-picker') {\n                        obj.update(e.target, month);\n                    } else {\n                        obj.date[1] = month;\n                        obj.getDays();\n                    }\n                } else if (action == 'jcalendar-confirm' || action == 'jcalendar-update' || action == 'jcalendar-close') {\n                    obj.close();\n                } else if (action == 'jcalendar-backdrop') {\n                    obj.close(false, false);\n                } else if (action == 'jcalendar-reset') {\n                    obj.reset();\n                } else if (e.target.classList.contains('jcalendar-set-day') && e.target.innerText) {\n                    obj.update(e.target);\n                }\n            } else {\n                obj.close();\n            }\n        }\n\n        var keyUpControls = function (e) {\n            if (e.target.value && e.target.value.length > 3) {\n                var test = Component.extractDateFromString(e.target.value, obj.options.format);\n                if (test) {\n                    obj.setValue(test);\n                }\n            }\n        }\n\n        // Update actions button\n        var updateActions = function () {\n            var currentDay = calendar.querySelector('.jcalendar-selected');\n\n            if (currentDay && currentDay.classList.contains('jcalendar-disabled')) {\n                calendarControlsUpdateButton.setAttribute('disabled', 'disabled');\n                calendarSelectHour.setAttribute('disabled', 'disabled');\n                calendarSelectMin.setAttribute('disabled', 'disabled');\n            } else {\n                calendarControlsUpdateButton.removeAttribute('disabled');\n                calendarSelectHour.removeAttribute('disabled');\n                calendarSelectMin.removeAttribute('disabled');\n            }\n\n            // Event\n            if (typeof (obj.options.onupdate) == 'function') {\n                obj.options.onupdate(el, obj.getValue());\n            }\n        }\n\n        var calendar = null;\n        var calendarReset = null;\n        var calendarConfirm = null;\n        var calendarContainer = null;\n        var calendarContent = null;\n        var calendarLabelYear = null;\n        var calendarLabelMonth = null;\n        var calendarTable = null;\n        var calendarBody = null;\n\n        var calendarControls = null;\n        var calendarControlsTime = null;\n        var calendarControlsUpdate = null;\n        var calendarControlsUpdateButton = null;\n        var calendarSelectHour = null;\n        var calendarSelectMin = null;\n\n        var init = function () {\n            // Get value from initial element if that is an input\n            if (el.tagName == 'INPUT' && el.value) {\n                options.value = el.value;\n            }\n\n            // Calendar DOM elements\n            calendarReset = document.createElement('div');\n            calendarReset.className = 'jcalendar-reset';\n\n            calendarConfirm = document.createElement('div');\n            calendarConfirm.className = 'jcalendar-confirm';\n\n            calendarControls = document.createElement('div');\n            calendarControls.className = 'jcalendar-controls'\n            calendarControls.style.borderBottom = '1px solid #ddd';\n            calendarControls.appendChild(calendarReset);\n            calendarControls.appendChild(calendarConfirm);\n\n            calendarContainer = document.createElement('div');\n            calendarContainer.className = 'jcalendar-container';\n            calendarContent = document.createElement('div');\n            calendarContent.className = 'jcalendar-content';\n            calendarContainer.appendChild(calendarContent);\n\n            // Main element\n            if (el.tagName == 'DIV') {\n                calendar = el;\n                calendar.classList.add('jcalendar-inline');\n            } else {\n                // Add controls to the screen\n                calendarContent.appendChild(calendarControls);\n\n                calendar = document.createElement('div');\n                calendar.className = 'jcalendar';\n            }\n            calendar.classList.add('jcalendar-container');\n            calendar.appendChild(calendarContainer);\n\n            // Table container\n            var calendarTableContainer = document.createElement('div');\n            calendarTableContainer.className = 'jcalendar-table';\n            calendarContent.appendChild(calendarTableContainer);\n\n            // Previous button\n            var calendarHeaderPrev = document.createElement('td');\n            calendarHeaderPrev.setAttribute('colspan', '2');\n            calendarHeaderPrev.className = 'jcalendar-prev';\n\n            // Header with year and month\n            calendarLabelYear = document.createElement('span');\n            calendarLabelYear.className = 'jcalendar-year';\n            calendarLabelMonth = document.createElement('span');\n            calendarLabelMonth.className = 'jcalendar-month';\n\n            var calendarHeaderTitle = document.createElement('td');\n            calendarHeaderTitle.className = 'jcalendar-header';\n            calendarHeaderTitle.setAttribute('colspan', '3');\n            calendarHeaderTitle.appendChild(calendarLabelMonth);\n            calendarHeaderTitle.appendChild(calendarLabelYear);\n\n            var calendarHeaderNext = document.createElement('td');\n            calendarHeaderNext.setAttribute('colspan', '2');\n            calendarHeaderNext.className = 'jcalendar-next';\n\n            var calendarHeader = document.createElement('thead');\n            var calendarHeaderRow = document.createElement('tr');\n            calendarHeaderRow.appendChild(calendarHeaderPrev);\n            calendarHeaderRow.appendChild(calendarHeaderTitle);\n            calendarHeaderRow.appendChild(calendarHeaderNext);\n            calendarHeader.appendChild(calendarHeaderRow);\n\n            calendarTable = document.createElement('table');\n            calendarBody = document.createElement('tbody');\n            calendarTable.setAttribute('cellpadding', '0');\n            calendarTable.setAttribute('cellspacing', '0');\n            calendarTable.appendChild(calendarHeader);\n            calendarTable.appendChild(calendarBody);\n            calendarTableContainer.appendChild(calendarTable);\n\n            calendarSelectHour = document.createElement('select');\n            calendarSelectHour.className = 'jcalendar-select';\n            calendarSelectHour.onchange = function () {\n                obj.date[3] = this.value;\n\n                // Event\n                if (typeof (obj.options.onupdate) == 'function') {\n                    obj.options.onupdate(el, obj.getValue());\n                }\n            }\n\n            for (var i = 0; i < 24; i++) {\n                var element = document.createElement('option');\n                element.value = i;\n                element.innerHTML = helpers.two(i);\n                calendarSelectHour.appendChild(element);\n            }\n\n            calendarSelectMin = document.createElement('select');\n            calendarSelectMin.className = 'jcalendar-select';\n            calendarSelectMin.onchange = function () {\n                obj.date[4] = this.value;\n\n                // Event\n                if (typeof (obj.options.onupdate) == 'function') {\n                    obj.options.onupdate(el, obj.getValue());\n                }\n            }\n\n            for (var i = 0; i < 60; i++) {\n                var element = document.createElement('option');\n                element.value = i;\n                element.innerHTML = helpers.two(i);\n                calendarSelectMin.appendChild(element);\n            }\n\n            // Footer controls\n            var calendarControlsFooter = document.createElement('div');\n            calendarControlsFooter.className = 'jcalendar-controls';\n\n            calendarControlsTime = document.createElement('div');\n            calendarControlsTime.className = 'jcalendar-time';\n            calendarControlsTime.style.maxWidth = '140px';\n            calendarControlsTime.appendChild(calendarSelectHour);\n            calendarControlsTime.appendChild(calendarSelectMin);\n\n            calendarControlsUpdateButton = document.createElement('button');\n            calendarControlsUpdateButton.setAttribute('type', 'button');\n            calendarControlsUpdateButton.className = 'jcalendar-update';\n\n            calendarControlsUpdate = document.createElement('div');\n            calendarControlsUpdate.style.flexGrow = '10';\n            calendarControlsUpdate.appendChild(calendarControlsUpdateButton);\n            calendarControlsFooter.appendChild(calendarControlsTime);\n\n            // Only show the update button for input elements\n            if (el.tagName == 'INPUT') {\n                calendarControlsFooter.appendChild(calendarControlsUpdate);\n            }\n\n            calendarContent.appendChild(calendarControlsFooter);\n\n            var calendarBackdrop = document.createElement('div');\n            calendarBackdrop.className = 'jcalendar-backdrop';\n            calendar.appendChild(calendarBackdrop);\n\n            // Handle events\n            el.addEventListener(\"keyup\", keyUpControls);\n\n            // Add global events\n            calendar.addEventListener(\"swipeleft\", function (e) {\n                animation.slideLeft(calendarTable, 0, function () {\n                    obj.next();\n                    animation.slideRight(calendarTable, 1);\n                });\n                e.preventDefault();\n                e.stopPropagation();\n            });\n\n            calendar.addEventListener(\"swiperight\", function (e) {\n                animation.slideRight(calendarTable, 0, function () {\n                    obj.prev();\n                    animation.slideLeft(calendarTable, 1);\n                });\n                e.preventDefault();\n                e.stopPropagation();\n            });\n\n            if ('ontouchend' in document.documentElement === true) {\n                calendar.addEventListener(\"touchend\", mouseUpControls);\n                el.addEventListener(\"touchend\", obj.open);\n            } else {\n                calendar.addEventListener(\"mouseup\", mouseUpControls);\n                el.addEventListener(\"mouseup\", obj.open);\n            }\n\n            // Global controls\n            if (!Component.hasEvents) {\n                // Execute only one time\n                Component.hasEvents = true;\n                // Enter and Esc\n                document.addEventListener(\"keydown\", Component.keydown);\n            }\n\n            // Set configuration\n            obj.setOptions(options);\n\n            // Append element to the DOM\n            if (el.tagName == 'INPUT') {\n                el.parentNode.insertBefore(calendar, el.nextSibling);\n                // Add properties\n                el.setAttribute('autocomplete', 'off');\n                // Element\n                el.classList.add('jcalendar-input');\n                // Value\n                el.value = obj.setLabel(obj.getValue(), obj.options);\n            } else {\n                // Get days\n                obj.getDays();\n                // Hour\n                if (obj.options.time) {\n                    calendarSelectHour.value = obj.date[3];\n                    calendarSelectMin.value = obj.date[4];\n                }\n            }\n\n            // Default opened\n            if (obj.options.opened == true) {\n                obj.open();\n            }\n\n            // Controls\n            if (obj.options.controls == false) {\n                calendarContainer.classList.add('jcalendar-hide-controls');\n            }\n\n            // Change method\n            el.change = obj.setValue;\n\n            // Global generic value handler\n            el.val = function (val) {\n                if (val === undefined) {\n                    return obj.getValue();\n                } else {\n                    obj.setValue(val);\n                }\n            }\n\n            // Keep object available from the node\n            el.calendar = calendar.calendar = obj;\n        }\n\n        init();\n\n        return obj;\n    });\n\n    Component.keydown = function (e) {\n        var calendar = null;\n        if (calendar = Component.current) {\n            if (e.which == 13) {\n                // ENTER\n                calendar.close(false, true);\n            } else if (e.which == 27) {\n                // ESC\n                calendar.close(false, false);\n            }\n        }\n    }\n\n    Component.prettify = function (d, texts) {\n        if (!texts) {\n            var texts = {\n                justNow: 'Just now',\n                xMinutesAgo: '{0}m ago',\n                xHoursAgo: '{0}h ago',\n                xDaysAgo: '{0}d ago',\n                xWeeksAgo: '{0}w ago',\n                xMonthsAgo: '{0} mon ago',\n                xYearsAgo: '{0}y ago',\n            }\n        }\n\n        var d1 = new Date();\n        var d2 = new Date(d);\n        var total = parseInt((d1 - d2) / 1000 / 60);\n\n        String.prototype.format = function (o) {\n            return this.replace('{0}', o);\n        }\n\n        if (total == 0) {\n            var text = texts.justNow;\n        } else if (total < 90) {\n            var text = texts.xMinutesAgo.format(total);\n        } else if (total < 1440) { // One day\n            var text = texts.xHoursAgo.format(Math.round(total / 60));\n        } else if (total < 20160) { // 14 days\n            var text = texts.xDaysAgo.format(Math.round(total / 1440));\n        } else if (total < 43200) { // 30 days\n            var text = texts.xWeeksAgo.format(Math.round(total / 10080));\n        } else if (total < 1036800) { // 24 months\n            var text = texts.xMonthsAgo.format(Math.round(total / 43200));\n        } else { // 24 months+\n            var text = texts.xYearsAgo.format(Math.round(total / 525600));\n        }\n\n        return text;\n    }\n\n    Component.prettifyAll = function () {\n        var elements = document.querySelectorAll('.prettydate');\n        for (var i = 0; i < elements.length; i++) {\n            if (elements[i].getAttribute('data-date')) {\n                elements[i].innerHTML = Component.prettify(elements[i].getAttribute('data-date'));\n            } else {\n                if (elements[i].innerHTML) {\n                    elements[i].setAttribute('title', elements[i].innerHTML);\n                    elements[i].setAttribute('data-date', elements[i].innerHTML);\n                    elements[i].innerHTML = Component.prettify(elements[i].innerHTML);\n                }\n            }\n        }\n    }\n\n    Component.now = helpers_date.now;\n    Component.toArray = helpers_date.toArray;\n    Component.dateToNum = helpers_date.dateToNum\n    Component.numToDate = helpers_date.numToDate;\n    Component.weekdays = helpers_date.weekdays;\n    Component.months = helpers_date.months;\n    Component.weekdaysShort = helpers_date.weekdaysShort;\n    Component.monthsShort = helpers_date.monthsShort;\n\n    // Legacy shortcut\n    Component.extractDateFromString = mask.extractDateFromString;\n    Component.getDateString = mask.getDateString;\n\n    return Component;\n}\n\n/* harmony default export */ var calendar = (Calendar());\n;// CONCATENATED MODULE: ./src/plugins/palette.js\n// More palettes https://coolors.co/ or https://gka.github.io/palettes/#/10|s|003790,005647,ffffe0|ffffe0,ff005e,93003a|1|1\n\nfunction Palette() {\n\n    var palette = {\n        material: [\n            [\"#ffebee\", \"#fce4ec\", \"#f3e5f5\", \"#e8eaf6\", \"#e3f2fd\", \"#e0f7fa\", \"#e0f2f1\", \"#e8f5e9\", \"#f1f8e9\", \"#f9fbe7\", \"#fffde7\", \"#fff8e1\", \"#fff3e0\", \"#fbe9e7\", \"#efebe9\", \"#fafafa\", \"#eceff1\"],\n            [\"#ffcdd2\", \"#f8bbd0\", \"#e1bee7\", \"#c5cae9\", \"#bbdefb\", \"#b2ebf2\", \"#b2dfdb\", \"#c8e6c9\", \"#dcedc8\", \"#f0f4c3\", \"#fff9c4\", \"#ffecb3\", \"#ffe0b2\", \"#ffccbc\", \"#d7ccc8\", \"#f5f5f5\", \"#cfd8dc\"],\n            [\"#ef9a9a\", \"#f48fb1\", \"#ce93d8\", \"#9fa8da\", \"#90caf9\", \"#80deea\", \"#80cbc4\", \"#a5d6a7\", \"#c5e1a5\", \"#e6ee9c\", \"#fff59d\", \"#ffe082\", \"#ffcc80\", \"#ffab91\", \"#bcaaa4\", \"#eeeeee\", \"#b0bec5\"],\n            [\"#e57373\", \"#f06292\", \"#ba68c8\", \"#7986cb\", \"#64b5f6\", \"#4dd0e1\", \"#4db6ac\", \"#81c784\", \"#aed581\", \"#dce775\", \"#fff176\", \"#ffd54f\", \"#ffb74d\", \"#ff8a65\", \"#a1887f\", \"#e0e0e0\", \"#90a4ae\"],\n            [\"#ef5350\", \"#ec407a\", \"#ab47bc\", \"#5c6bc0\", \"#42a5f5\", \"#26c6da\", \"#26a69a\", \"#66bb6a\", \"#9ccc65\", \"#d4e157\", \"#ffee58\", \"#ffca28\", \"#ffa726\", \"#ff7043\", \"#8d6e63\", \"#bdbdbd\", \"#78909c\"],\n            [\"#f44336\", \"#e91e63\", \"#9c27b0\", \"#3f51b5\", \"#2196f3\", \"#00bcd4\", \"#009688\", \"#4caf50\", \"#8bc34a\", \"#cddc39\", \"#ffeb3b\", \"#ffc107\", \"#ff9800\", \"#ff5722\", \"#795548\", \"#9e9e9e\", \"#607d8b\"],\n            [\"#e53935\", \"#d81b60\", \"#8e24aa\", \"#3949ab\", \"#1e88e5\", \"#00acc1\", \"#00897b\", \"#43a047\", \"#7cb342\", \"#c0ca33\", \"#fdd835\", \"#ffb300\", \"#fb8c00\", \"#f4511e\", \"#6d4c41\", \"#757575\", \"#546e7a\"],\n            [\"#d32f2f\", \"#c2185b\", \"#7b1fa2\", \"#303f9f\", \"#1976d2\", \"#0097a7\", \"#00796b\", \"#388e3c\", \"#689f38\", \"#afb42b\", \"#fbc02d\", \"#ffa000\", \"#f57c00\", \"#e64a19\", \"#5d4037\", \"#616161\", \"#455a64\"],\n            [\"#c62828\", \"#ad1457\", \"#6a1b9a\", \"#283593\", \"#1565c0\", \"#00838f\", \"#00695c\", \"#2e7d32\", \"#558b2f\", \"#9e9d24\", \"#f9a825\", \"#ff8f00\", \"#ef6c00\", \"#d84315\", \"#4e342e\", \"#424242\", \"#37474f\"],\n            [\"#b71c1c\", \"#880e4f\", \"#4a148c\", \"#1a237e\", \"#0d47a1\", \"#006064\", \"#004d40\", \"#1b5e20\", \"#33691e\", \"#827717\", \"#f57f17\", \"#ff6f00\", \"#e65100\", \"#bf360c\", \"#3e2723\", \"#212121\", \"#263238\"],\n        ],\n        fire: [\n            [\"0b1a6d\", \"840f38\", \"b60718\", \"de030b\", \"ff0c0c\", \"fd491c\", \"fc7521\", \"faa331\", \"fbb535\", \"ffc73a\"],\n            [\"071147\", \"5f0b28\", \"930513\", \"be0309\", \"ef0000\", \"fa3403\", \"fb670b\", \"f9991b\", \"faad1e\", \"ffc123\"],\n            [\"03071e\", \"370617\", \"6a040f\", \"9d0208\", \"d00000\", \"dc2f02\", \"e85d04\", \"f48c06\", \"faa307\", \"ffba08\"],\n            [\"020619\", \"320615\", \"61040d\", \"8c0207\", \"bc0000\", \"c82a02\", \"d05203\", \"db7f06\", \"e19405\", \"efab00\"],\n            [\"020515\", \"2d0513\", \"58040c\", \"7f0206\", \"aa0000\", \"b62602\", \"b94903\", \"c57205\", \"ca8504\", \"d89b00\"],\n        ],\n        baby: [\n            [\"eddcd2\", \"fff1e6\", \"fde2e4\", \"fad2e1\", \"c5dedd\", \"dbe7e4\", \"f0efeb\", \"d6e2e9\", \"bcd4e6\", \"99c1de\"],\n            [\"e1c4b3\", \"ffd5b5\", \"fab6ba\", \"f5a8c4\", \"aacecd\", \"bfd5cf\", \"dbd9d0\", \"baceda\", \"9dc0db\", \"7eb1d5\"],\n            [\"daa990\", \"ffb787\", \"f88e95\", \"f282a9\", \"8fc4c3\", \"a3c8be\", \"cec9b3\", \"9dbcce\", \"82acd2\", \"649dcb\"],\n            [\"d69070\", \"ff9c5e\", \"f66770\", \"f05f8f\", \"74bbb9\", \"87bfae\", \"c5b993\", \"83aac3\", \"699bca\", \"4d89c2\"],\n            [\"c97d5d\", \"f58443\", \"eb4d57\", \"e54a7b\", \"66a9a7\", \"78ae9c\", \"b5a67e\", \"7599b1\", \"5c88b7\", \"4978aa\"],\n        ],\n        chart: [\n            ['#C1D37F', '#4C5454', '#FFD275', '#66586F', '#D05D5B', '#C96480', '#95BF8F', '#6EA240', '#0F0F0E', '#EB8258', '#95A3B3', '#995D81'],\n        ],\n    }\n\n    var Component = function (o) {\n        // Otherwise get palette value\n        if (palette[o]) {\n            return palette[o];\n        } else {\n            return palette.material;\n        }\n    }\n\n    Component.get = function (o) {\n        // Otherwise get palette value\n        if (palette[o]) {\n            return palette[o];\n        } else {\n            return palette;\n        }\n    }\n\n    Component.set = function (o, v) {\n        palette[o] = v;\n    }\n\n    return Component;\n}\n\n/* harmony default export */ var palette = (Palette());\n;// CONCATENATED MODULE: ./src/plugins/tabs.js\n\n\n\nfunction Tabs(el, options) {\n    var obj = {};\n    obj.options = {};\n\n    // Default configuration\n    var defaults = {\n        data: [],\n        position: null,\n        allowCreate: false,\n        allowChangePosition: false,\n        onclick: null,\n        onload: null,\n        onchange: null,\n        oncreate: null,\n        ondelete: null,\n        onbeforecreate: null,\n        onchangeposition: null,\n        animation: false,\n        hideHeaders: false,\n        padding: null,\n        palette: null,\n        maxWidth: null,\n    }\n\n    // Loop through the initial configuration\n    for (var property in defaults) {\n        if (options && options.hasOwnProperty(property)) {\n            obj.options[property] = options[property];\n        } else {\n            obj.options[property] = defaults[property];\n        }\n    }\n\n    // Class\n    el.classList.add('jtabs');\n\n    var prev = null;\n    var next = null;\n    var border = null;\n\n    // Helpers\n    var setBorder = function(index) {\n        if (obj.options.animation) {\n            setTimeout(function() {\n                var rect = obj.headers.children[index].getBoundingClientRect();\n\n                if (obj.options.palette == 'modern') {\n                    border.style.width = rect.width - 4 + 'px';\n                    border.style.left = obj.headers.children[index].offsetLeft + 2 + 'px';\n                } else {\n                    border.style.width = rect.width + 'px';\n                    border.style.left = obj.headers.children[index].offsetLeft + 'px';\n                }\n\n                if (obj.options.position == 'bottom') {\n                    border.style.top = '0px';\n                } else {\n                    border.style.bottom = '0px';\n                }\n            }, 150);\n        }\n    }\n\n    var updateControls = function(x) {\n        if (typeof(obj.headers.scrollTo) == 'function') {\n            obj.headers.scrollTo({\n                left: x,\n                behavior: 'smooth',\n            });\n        } else {\n            obj.headers.scrollLeft = x;\n        }\n\n        if (x <= 1) {\n            prev.classList.add('disabled');\n        } else {\n            prev.classList.remove('disabled');\n        }\n\n        if (x >= obj.headers.scrollWidth - obj.headers.offsetWidth) {\n            next.classList.add('disabled');\n        } else {\n            next.classList.remove('disabled');\n        }\n\n        if (obj.headers.scrollWidth <= obj.headers.offsetWidth) {\n            prev.style.display = 'none';\n            next.style.display = 'none';\n        } else {\n            prev.style.display = '';\n            next.style.display = '';\n        }\n    }\n\n    obj.setBorder = setBorder;\n\n    // Set value\n    obj.open = function(index) {\n        var previous = null;\n        for (var i = 0; i < obj.headers.children.length; i++) {\n            if (obj.headers.children[i].classList.contains('jtabs-selected')) {\n                // Current one\n                previous = i;\n            }\n            // Remote selected\n            obj.headers.children[i].classList.remove('jtabs-selected');\n            if (obj.content.children[i]) {\n                obj.content.children[i].classList.remove('jtabs-selected');\n            }\n        }\n\n        obj.headers.children[index].classList.add('jtabs-selected');\n        if (obj.content.children[index]) {\n            obj.content.children[index].classList.add('jtabs-selected');\n        }\n\n        if (previous != index && typeof(obj.options.onchange) == 'function') {\n            if (obj.content.children[index]) {\n                obj.options.onchange(el, obj, index, obj.headers.children[index], obj.content.children[index]);\n            }\n        }\n\n        // Hide\n        if (obj.options.hideHeaders == true && (obj.headers.children.length < 3 && obj.options.allowCreate == false)) {\n            obj.headers.parentNode.style.display = 'none';\n        } else {\n            // Set border\n            setBorder(index);\n\n            obj.headers.parentNode.style.display = '';\n\n            var x1 = obj.headers.children[index].offsetLeft;\n            var x2 = x1 + obj.headers.children[index].offsetWidth;\n            var r1 = obj.headers.scrollLeft;\n            var r2 = r1 + obj.headers.offsetWidth;\n\n            if (! (r1 <= x1 && r2 >= x2)) {\n                // Out of the viewport\n                updateControls(x1 - 1);\n            }\n        }\n    }\n\n    obj.selectIndex = function(a) {\n        var index = Array.prototype.indexOf.call(obj.headers.children, a);\n        if (index >= 0) {\n            obj.open(index);\n        }\n\n        return index;\n    }\n\n    obj.rename = function(i, title) {\n        if (! title) {\n            title = prompt('New title', obj.headers.children[i].innerText);\n        }\n        obj.headers.children[i].innerText = title;\n        obj.open(i);\n    }\n\n    obj.create = function(title, url) {\n        if (typeof(obj.options.onbeforecreate) == 'function') {\n            var ret = obj.options.onbeforecreate(el);\n            if (ret === false) {\n                return false;\n            } else {\n                title = ret;\n            }\n        }\n\n        var div = obj.appendElement(title);\n\n        if (typeof(obj.options.oncreate) == 'function') {\n            obj.options.oncreate(el, div)\n        }\n\n        setBorder();\n\n        return div;\n    }\n\n    obj.remove = function(index) {\n        return obj.deleteElement(index);\n    }\n\n    obj.nextNumber = function() {\n        var num = 0;\n        for (var i = 0; i < obj.headers.children.length; i++) {\n            var tmp = obj.headers.children[i].innerText.match(/[0-9].*/);\n            if (tmp > num) {\n                num = parseInt(tmp);\n            }\n        }\n        if (! num) {\n            num = 1;\n        } else {\n            num++;\n        }\n\n        return num;\n    }\n\n    obj.deleteElement = function(index) {\n        if (! obj.headers.children[index]) {\n            return false;\n        } else {\n            obj.headers.removeChild(obj.headers.children[index]);\n            obj.content.removeChild(obj.content.children[index]);\n        }\n\n        obj.open(0);\n\n        if (typeof(obj.options.ondelete) == 'function') {\n            obj.options.ondelete(el, index)\n        }\n    }\n\n    obj.appendElement = function(title, cb) {\n        if (! title) {\n            var title = prompt('Title?', '');\n        }\n\n        if (title) {\n            // Add content\n            var div = document.createElement('div');\n            obj.content.appendChild(div);\n\n            // Add headers\n            var h = document.createElement('div');\n            h.innerHTML = title;\n            h.content = div;\n            obj.headers.insertBefore(h, obj.headers.lastChild);\n\n            // Sortable\n            if (obj.options.allowChangePosition) {\n                h.setAttribute('draggable', 'true');\n            }\n            // Open new tab\n            obj.selectIndex(h);\n\n            // Callback\n            if (typeof(cb) == 'function') {\n                cb(div, h);\n            }\n\n            // Return element\n            return div;\n        }\n    }\n\n    obj.getActive = function() {\n        for (var i = 0; i < obj.headers.children.length; i++) {\n            if (obj.headers.children[i].classList.contains('jtabs-selected')) {\n                return i\n            }\n        }\n        return 0;\n    }\n\n    obj.updateContent = function(position, newContent) {\n        if (typeof newContent !== 'string') {\n            var contentItem = newContent;\n        } else {\n            var contentItem = document.createElement('div');\n            contentItem.innerHTML = newContent;\n        }\n\n        if (obj.content.children[position].classList.contains('jtabs-selected')) {\n            newContent.classList.add('jtabs-selected');\n        }\n\n        obj.content.replaceChild(newContent, obj.content.children[position]);\n\n        setBorder();\n    }\n\n    obj.updatePosition = function(f, t) {\n        // Ondrop update position of content\n        if (f > t) {\n            obj.content.insertBefore(obj.content.children[f], obj.content.children[t]);\n        } else {\n            obj.content.insertBefore(obj.content.children[f], obj.content.children[t].nextSibling);\n        }\n\n        // Open destination tab\n        obj.open(t);\n\n        // Call event\n        if (typeof(obj.options.onchangeposition) == 'function') {\n            obj.options.onchangeposition(obj.headers, f, t);\n        }\n    }\n\n    obj.move = function(f, t) {\n        if (f > t) {\n            obj.headers.insertBefore(obj.headers.children[f], obj.headers.children[t]);\n        } else {\n            obj.headers.insertBefore(obj.headers.children[f], obj.headers.children[t].nextSibling);\n        }\n\n        obj.updatePosition(f, t);\n    }\n\n    obj.setBorder = setBorder;\n\n    obj.init = function() {\n        el.innerHTML = '';\n\n        // Make sure the component is blank\n        obj.headers = document.createElement('div');\n        obj.content = document.createElement('div');\n        obj.headers.classList.add('jtabs-headers');\n        obj.content.classList.add('jtabs-content');\n\n        if (obj.options.palette) {\n            el.classList.add('jtabs-modern');\n        } else {\n            el.classList.remove('jtabs-modern');\n        }\n\n        // Padding\n        if (obj.options.padding) {\n            obj.content.style.padding = parseInt(obj.options.padding) + 'px';\n        }\n\n        // Header\n        var header = document.createElement('div');\n        header.className = 'jtabs-headers-container';\n        header.appendChild(obj.headers);\n        if (obj.options.maxWidth) {\n            header.style.maxWidth = parseInt(obj.options.maxWidth) + 'px';\n        }\n\n        // Controls\n        var controls = document.createElement('div');\n        controls.className = 'jtabs-controls';\n        controls.setAttribute('draggable', 'false');\n        header.appendChild(controls);\n\n        // Append DOM elements\n        if (obj.options.position == 'bottom') {\n            el.appendChild(obj.content);\n            el.appendChild(header);\n        } else {\n            el.appendChild(header);\n            el.appendChild(obj.content);\n        }\n\n        // New button\n        if (obj.options.allowCreate == true) {\n            var add = document.createElement('div');\n            add.className = 'jtabs-add';\n            add.onclick = function() {\n                obj.create();\n            }\n            controls.appendChild(add);\n        }\n\n        prev = document.createElement('div');\n        prev.className = 'jtabs-prev';\n        prev.onclick = function() {\n            updateControls(obj.headers.scrollLeft - obj.headers.offsetWidth);\n        }\n        controls.appendChild(prev);\n\n        next = document.createElement('div');\n        next.className = 'jtabs-next';\n        next.onclick = function() {\n            updateControls(obj.headers.scrollLeft + obj.headers.offsetWidth);\n        }\n        controls.appendChild(next);\n\n        // Data\n        for (var i = 0; i < obj.options.data.length; i++) {\n            // Title\n            if (obj.options.data[i].titleElement) {\n                var headerItem = obj.options.data[i].titleElement;\n            } else {\n                var headerItem = document.createElement('div');\n            }\n            // Icon\n            if (obj.options.data[i].icon) {\n                var iconContainer = document.createElement('div');\n                var icon = document.createElement('i');\n                icon.classList.add('material-icons');\n                icon.innerHTML = obj.options.data[i].icon;\n                iconContainer.appendChild(icon);\n                headerItem.appendChild(iconContainer);\n            }\n            // Title\n            if (obj.options.data[i].title) {\n                var title = document.createTextNode(obj.options.data[i].title);\n                headerItem.appendChild(title);\n            }\n            // Width\n            if (obj.options.data[i].width) {\n                headerItem.style.width = obj.options.data[i].width;\n            }\n            // Content\n            if (obj.options.data[i].contentElement) {\n                var contentItem = obj.options.data[i].contentElement;\n            } else {\n                var contentItem = document.createElement('div');\n                contentItem.innerHTML = obj.options.data[i].content;\n            }\n            obj.headers.appendChild(headerItem);\n            obj.content.appendChild(contentItem);\n        }\n\n        // Animation\n        border = document.createElement('div');\n        border.className = 'jtabs-border';\n        obj.headers.appendChild(border);\n\n        if (obj.options.animation) {\n            el.classList.add('jtabs-animation');\n        }\n\n        // Events\n        obj.headers.addEventListener(\"click\", function(e) {\n            if (e.target.parentNode.classList.contains('jtabs-headers')) {\n                var target = e.target;\n            } else {\n                if (e.target.tagName == 'I') {\n                    var target = e.target.parentNode.parentNode;\n                } else {\n                    var target = e.target.parentNode;\n                }\n            }\n\n            var index = obj.selectIndex(target);\n\n            if (typeof(obj.options.onclick) == 'function') {\n                obj.options.onclick(el, obj, index, obj.headers.children[index], obj.content.children[index]);\n            }\n        });\n\n        obj.headers.addEventListener(\"contextmenu\", function(e) {\n            obj.selectIndex(e.target);\n        });\n\n        if (obj.headers.children.length) {\n            // Open first tab\n            obj.open(0);\n        }\n\n        // Update controls\n        updateControls(0);\n\n        if (obj.options.allowChangePosition == true) {\n            Sorting(obj.headers, {\n                direction: 1,\n                ondrop: function(a,b,c) {\n                    obj.updatePosition(b,c);\n                },\n            });\n        }\n\n        if (typeof(obj.options.onload) == 'function') {\n            obj.options.onload(el, obj);\n        }\n    }\n\n    // Loading existing nodes as the data\n    if (el.children[0] && el.children[0].children.length) {\n        // Create from existing elements\n        for (var i = 0; i < el.children[0].children.length; i++) {\n            var item = obj.options.data && obj.options.data[i] ? obj.options.data[i] : {};\n\n            if (el.children[1] && el.children[1].children[i]) {\n                item.titleElement = el.children[0].children[i];\n                item.contentElement = el.children[1].children[i];\n            } else {\n                item.contentElement = el.children[0].children[i];\n            }\n\n            obj.options.data[i] = item;\n        }\n    }\n\n    // Remote controller flag\n    var loadingRemoteData = false;\n\n    // Create from data\n    if (obj.options.data) {\n        // Append children\n        for (var i = 0; i < obj.options.data.length; i++) {\n            if (obj.options.data[i].url) {\n                ajax({\n                    url: obj.options.data[i].url,\n                    type: 'GET',\n                    dataType: 'text/html',\n                    index: i,\n                    success: function(result) {\n                        obj.options.data[this.index].content = result;\n                    },\n                    complete: function() {\n                        obj.init();\n                    }\n                });\n\n                // Flag loading\n                loadingRemoteData = true;\n            }\n        }\n    }\n\n    if (! loadingRemoteData) {\n        obj.init();\n    }\n\n    el.tabs = obj;\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/color.js\n\n\n\n\n\n\nfunction Color(el, options) {\n    // Already created, update options\n    if (el.color) {\n        return el.color.setOptions(options, true);\n    }\n\n    // New instance\n    var obj = { type: 'color' };\n    obj.options = {};\n\n    var container = null;\n    var backdrop = null;\n    var content = null;\n    var resetButton = null;\n    var closeButton = null;\n    var tabs = null;\n    var jsuitesTabs = null;\n\n    /**\n     * Update options\n     */\n    obj.setOptions = function(options, reset) {\n        /**\n         * @typedef {Object} defaults\n         * @property {(string|Array)} value - Initial value of the compontent\n         * @property {string} placeholder - The default instruction text on the element\n         * @property {requestCallback} onchange - Method to be execute after any changes on the element\n         * @property {requestCallback} onclose - Method to be execute when the element is closed\n         * @property {string} doneLabel - Label for button done\n         * @property {string} resetLabel - Label for button reset\n         * @property {string} resetValue - Value for button reset\n         * @property {Bool} showResetButton - Active or note for button reset - default false\n         */\n        var defaults = {\n            placeholder: '',\n            value: null,\n            onopen: null,\n            onclose: null,\n            onchange: null,\n            closeOnChange: true,\n            palette: null,\n            position: null,\n            doneLabel: 'Done',\n            resetLabel: 'Reset',\n            fullscreen: false,\n            opened: false,\n        }\n\n        if (! options) {\n            options = {};\n        }\n\n        if (options && ! options.palette) {\n            // Default palette\n            options.palette = palette();\n        }\n\n        // Loop through our object\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                if (typeof(obj.options[property]) == 'undefined' || reset === true) {\n                    obj.options[property] = defaults[property];\n                }\n            }\n        }\n\n        // Update the text of the controls, if they have already been created\n        if (resetButton) {\n            resetButton.innerHTML = obj.options.resetLabel;\n        }\n        if (closeButton) {\n            closeButton.innerHTML = obj.options.doneLabel;\n        }\n\n        // Update the pallete\n        if (obj.options.palette && jsuitesTabs) {\n            jsuitesTabs.updateContent(0, table());\n        }\n\n        // Value\n        if (typeof obj.options.value === 'string') {\n            el.value = obj.options.value;\n            if (el.tagName === 'INPUT') {\n                el.style.color = el.value;\n                el.style.backgroundColor = el.value;\n            }\n        }\n\n        // Placeholder\n        if (obj.options.placeholder) {\n            el.setAttribute('placeholder', obj.options.placeholder);\n        } else {\n            if (el.getAttribute('placeholder')) {\n                el.removeAttribute('placeholder');\n            }\n        }\n\n        return obj;\n    }\n\n    obj.select = function(color) {\n        // Remove current selected mark\n        var selected = container.querySelector('.jcolor-selected');\n        if (selected) {\n            selected.classList.remove('jcolor-selected');\n        }\n\n        // Mark cell as selected\n        if (obj.values[color]) {\n            obj.values[color].classList.add('jcolor-selected');\n        }\n\n        obj.options.value = color;\n    }\n\n    /**\n     * Open color pallete\n     */\n    obj.open = function() {\n        if (! container.classList.contains('jcolor-focus')) {\n            // Start tracking\n            Tracking(obj, true);\n\n            // Show color picker\n            container.classList.add('jcolor-focus');\n\n            // Select current color\n            if (obj.options.value) {\n                obj.select(obj.options.value);\n            }\n\n            // Reset margin\n            content.style.marginTop = '';\n            content.style.marginLeft = '';\n\n            var rectContent = content.getBoundingClientRect();\n            var availableWidth = helpers.getWindowWidth();\n            var availableHeight = helpers.getWindowHeight();\n\n            if (availableWidth < 800 || obj.options.fullscreen == true) {\n                content.classList.add('jcolor-fullscreen');\n                animation.slideBottom(content, 1);\n                backdrop.style.display = 'block';\n            } else {\n                if (content.classList.contains('jcolor-fullscreen')) {\n                    content.classList.remove('jcolor-fullscreen');\n                    backdrop.style.display = '';\n                }\n\n                if (obj.options.position) {\n                    content.style.position = 'fixed';\n                } else {\n                    content.style.position = '';\n                }\n\n                if (rectContent.left + rectContent.width > availableWidth) {\n                    content.style.marginLeft = -1 * (rectContent.left + rectContent.width - (availableWidth - 20)) + 'px';\n                }\n                if (rectContent.top + rectContent.height > availableHeight) {\n                    content.style.marginTop = -1 * (rectContent.top + rectContent.height - (availableHeight - 20)) + 'px';\n                }\n            }\n\n\n            if (typeof(obj.options.onopen) == 'function') {\n                obj.options.onopen(el, obj);\n            }\n\n            jsuitesTabs.setBorder(jsuitesTabs.getActive());\n\n            // Update sliders\n            if (obj.options.value) {\n                var rgb = HexToRgb(obj.options.value);\n\n                rgbInputs.forEach(function(rgbInput, index) {\n                    rgbInput.value = rgb[index];\n                    rgbInput.dispatchEvent(new Event('input'));\n                });\n            }\n        }\n    }\n\n    /**\n     * Close color pallete\n     */\n    obj.close = function(ignoreEvents) {\n        if (container.classList.contains('jcolor-focus')) {\n            // Remove focus\n            container.classList.remove('jcolor-focus');\n            // Make sure backdrop is hidden\n            backdrop.style.display = '';\n            // Call related events\n            if (! ignoreEvents && typeof(obj.options.onclose) == 'function') {\n                obj.options.onclose(el, obj);\n            }\n            // Stop  the object\n            Tracking(obj, false);\n        }\n\n        return obj.options.value;\n    }\n\n    /**\n     * Set value\n     */\n    obj.setValue = function(color) {\n        if (! color) {\n            color = '';\n        }\n\n        if (color != obj.options.value) {\n            obj.options.value = color;\n            slidersResult = color;\n\n            // Remove current selecded mark\n            obj.select(color);\n\n            // Onchange\n            if (typeof(obj.options.onchange) == 'function') {\n                obj.options.onchange(el, color, obj);\n            }\n\n            // Changes\n            if (el.value != obj.options.value) {\n                // Set input value\n                el.value = obj.options.value;\n                if (el.tagName === 'INPUT') {\n                    el.style.color = el.value;\n                    el.style.backgroundColor = el.value;\n                }\n\n                // Element onchange native\n                if (typeof(el.oninput) == 'function') {\n                    el.oninput({\n                        type: 'input',\n                        target: el,\n                        value: el.value\n                    });\n                }\n            }\n\n            if (obj.options.closeOnChange == true) {\n                obj.close();\n            }\n        }\n    }\n\n    /**\n     * Get value\n     */\n    obj.getValue = function() {\n        return obj.options.value;\n    }\n\n    var backdropClickControl = false;\n\n    // Converts a number in decimal to hexadecimal\n    var decToHex = function(num) {\n        var hex = num.toString(16);\n        return hex.length === 1 ? \"0\" + hex : hex;\n    }\n\n    // Converts a color in rgb to hexadecimal\n    var rgbToHex = function(r, g, b) {\n        return \"#\" + decToHex(r) + decToHex(g) + decToHex(b);\n    }\n\n    // Converts a number in hexadecimal to decimal\n    var hexToDec = function(hex) {\n        return parseInt('0x' + hex);\n    }\n\n    // Converts a color in hexadecimal to rgb\n    var HexToRgb = function(hex) {\n        return [hexToDec(hex.substr(1, 2)), hexToDec(hex.substr(3, 2)), hexToDec(hex.substr(5, 2))]\n    }\n\n    var table = function() {\n        // Content of the first tab\n        var tableContainer = document.createElement('div');\n        tableContainer.className = 'jcolor-grid';\n\n        // Cells\n        obj.values = [];\n\n        // Table pallete\n        var t = document.createElement('table');\n        t.setAttribute('cellpadding', '7');\n        t.setAttribute('cellspacing', '0');\n\n        for (var j = 0; j < obj.options.palette.length; j++) {\n            var tr = document.createElement('tr');\n            for (var i = 0; i < obj.options.palette[j].length; i++) {\n                var td = document.createElement('td');\n                var color = obj.options.palette[j][i];\n                if (color.length < 7 && color.substr(0,1) !== '#') {\n                    color = '#' + color;\n                }\n                td.style.backgroundColor = color;\n                td.setAttribute('data-value', color);\n                td.innerHTML = '';\n                tr.appendChild(td);\n\n                // Selected color\n                if (obj.options.value == color) {\n                    td.classList.add('jcolor-selected');\n                }\n\n                // Possible values\n                obj.values[color] = td;\n            }\n            t.appendChild(tr);\n        }\n\n        // Append to the table\n        tableContainer.appendChild(t);\n\n        return tableContainer;\n    }\n\n    // Canvas where the image will be rendered\n    var canvas = document.createElement('canvas');\n    canvas.width = 200;\n    canvas.height = 160;\n    var context = canvas.getContext(\"2d\");\n\n    var resizeCanvas = function() {\n        // Specifications necessary to correctly obtain colors later in certain positions\n        var m = tabs.firstChild.getBoundingClientRect();\n        canvas.width = m.width - 14;\n        gradient()\n    }\n\n    var gradient = function() {\n        var g = context.createLinearGradient(0, 0, canvas.width, 0);\n        // Create color gradient\n        g.addColorStop(0,    \"rgb(255,0,0)\");\n        g.addColorStop(0.15, \"rgb(255,0,255)\");\n        g.addColorStop(0.33, \"rgb(0,0,255)\");\n        g.addColorStop(0.49, \"rgb(0,255,255)\");\n        g.addColorStop(0.67, \"rgb(0,255,0)\");\n        g.addColorStop(0.84, \"rgb(255,255,0)\");\n        g.addColorStop(1,    \"rgb(255,0,0)\");\n        context.fillStyle = g;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        g = context.createLinearGradient(0, 0, 0, canvas.height);\n        g.addColorStop(0,   \"rgba(255,255,255,1)\");\n        g.addColorStop(0.5, \"rgba(255,255,255,0)\");\n        g.addColorStop(0.5, \"rgba(0,0,0,0)\");\n        g.addColorStop(1,   \"rgba(0,0,0,1)\");\n        context.fillStyle = g;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    var hsl = function() {\n        var element = document.createElement('div');\n        element.className = \"jcolor-hsl\";\n\n        var point = document.createElement('div');\n        point.className = 'jcolor-point';\n\n        var div = document.createElement('div');\n        div.appendChild(canvas);\n        div.appendChild(point);\n        element.appendChild(div);\n\n        // Moves the marquee point to the specified position\n        var update = function(buttons, x, y) {\n            if (buttons === 1) {\n                var rect = element.getBoundingClientRect();\n                var left = x - rect.left;\n                var top = y - rect.top;\n                if (left < 0) {\n                    left = 0;\n                }\n                if (top < 0) {\n                    top = 0;\n                }\n                if (left > rect.width) {\n                    left = rect.width;\n                }\n                if (top > rect.height) {\n                    top = rect.height;\n                }\n                point.style.left = left + 'px';\n                point.style.top = top + 'px';\n                var pixel = context.getImageData(left, top, 1, 1).data;\n                slidersResult = rgbToHex(pixel[0], pixel[1], pixel[2]);\n            }\n        }\n\n        // Applies the point's motion function to the div that contains it\n        element.addEventListener('mousedown', function(e) {\n            update(e.buttons, e.clientX, e.clientY);\n        });\n\n        element.addEventListener('mousemove', function(e) {\n            update(e.buttons, e.clientX, e.clientY);\n        });\n\n        element.addEventListener('touchmove', function(e) {\n            update(1, e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        });\n\n        return element;\n    }\n\n    var slidersResult = '';\n\n    var rgbInputs = [];\n\n    var changeInputColors = function() {\n        if (slidersResult !== '') {\n            for (var j = 0; j < rgbInputs.length; j++) {\n                var currentColor = HexToRgb(slidersResult);\n\n                currentColor[j] = 0;\n\n                var newGradient = 'linear-gradient(90deg, rgb(';\n                newGradient += currentColor.join(', ');\n                newGradient += '), rgb(';\n\n                currentColor[j] = 255;\n\n                newGradient += currentColor.join(', ');\n                newGradient += '))';\n\n                rgbInputs[j].style.backgroundImage = newGradient;\n            }\n        }\n    }\n\n    var sliders = function() {\n        // Content of the third tab\n        var slidersElement = document.createElement('div');\n        slidersElement.className = 'jcolor-sliders';\n\n        var slidersBody = document.createElement('div');\n\n        // Creates a range-type input with the specified name\n        var createSliderInput = function(name) {\n            var inputContainer = document.createElement('div');\n            inputContainer.className = 'jcolor-sliders-input-container';\n\n            var label = document.createElement('label');\n            label.innerText = name;\n\n            var subContainer = document.createElement('div');\n            subContainer.className = 'jcolor-sliders-input-subcontainer';\n\n            var input = document.createElement('input');\n            input.type = 'range';\n            input.min = 0;\n            input.max = 255;\n            input.value = 0;\n\n            inputContainer.appendChild(label);\n            subContainer.appendChild(input);\n\n            var value = document.createElement('div');\n            value.innerText = input.value;\n\n            input.addEventListener('input', function() {\n                value.innerText = input.value;\n            });\n\n            subContainer.appendChild(value);\n            inputContainer.appendChild(subContainer);\n\n            slidersBody.appendChild(inputContainer);\n\n            return input;\n        }\n\n        // Creates red, green and blue inputs\n        rgbInputs = [\n            createSliderInput('Red'),\n            createSliderInput('Green'),\n            createSliderInput('Blue'),\n        ];\n\n        slidersElement.appendChild(slidersBody);\n\n        // Element that prints the current color\n        var slidersResultColor = document.createElement('div');\n        slidersResultColor.className = 'jcolor-sliders-final-color';\n\n        var resultElement = document.createElement('div');\n        resultElement.style.visibility = 'hidden';\n        resultElement.innerText = 'a';\n        slidersResultColor.appendChild(resultElement)\n\n        // Update the element that prints the current color\n        var updateResult = function() {\n            var resultColor = rgbToHex(parseInt(rgbInputs[0].value), parseInt(rgbInputs[1].value), parseInt(rgbInputs[2].value));\n\n            resultElement.innerText = resultColor;\n            resultElement.style.color = resultColor;\n            resultElement.style.removeProperty('visibility');\n\n            slidersResult = resultColor;\n        }\n\n        // Apply the update function to color inputs\n        rgbInputs.forEach(function(rgbInput) {\n            rgbInput.addEventListener('input', function() {\n                updateResult();\n                changeInputColors();\n            });\n        });\n\n        slidersElement.appendChild(slidersResultColor);\n\n        return slidersElement;\n    }\n\n    var init = function() {\n        // Initial options\n        obj.setOptions(options);\n\n        // Add a proper input tag when the element is an input\n        if (el.tagName == 'INPUT') {\n            el.classList.add('jcolor-input');\n            el.readOnly = true;\n        }\n\n        // Table container\n        container = document.createElement('div');\n        container.className = 'jcolor';\n\n        // Table container\n        backdrop = document.createElement('div');\n        backdrop.className = 'jcolor-backdrop';\n        container.appendChild(backdrop);\n\n        // Content\n        content = document.createElement('div');\n        content.className = 'jcolor-content';\n\n        // Controls\n        var controls = document.createElement('div');\n        controls.className = 'jcolor-controls';\n        content.appendChild(controls);\n\n        // Reset button\n        resetButton  = document.createElement('div');\n        resetButton.className = 'jcolor-reset';\n        resetButton.innerHTML = obj.options.resetLabel;\n        controls.appendChild(resetButton);\n\n        // Close button\n        closeButton  = document.createElement('div');\n        closeButton.className = 'jcolor-close';\n        closeButton.innerHTML = obj.options.doneLabel;\n        controls.appendChild(closeButton);\n\n        // Element that will be used to create the tabs\n        tabs = document.createElement('div');\n        content.appendChild(tabs);\n\n        // Starts the jSuites tabs component\n        jsuitesTabs = Tabs(tabs, {\n            animation: true,\n            data: [\n                {\n                    title: 'Grid',\n                    contentElement: table(),\n                },\n                {\n                    title: 'Spectrum',\n                    contentElement: hsl(),\n                },\n                {\n                    title: 'Sliders',\n                    contentElement: sliders(),\n                }\n            ],\n            onchange: function(element, instance, index) {\n                if (index === 1) {\n                    resizeCanvas();\n                } else {\n                    var color = slidersResult !== '' ? slidersResult : obj.getValue();\n\n                    if (index === 2 && color) {\n                        var rgb = HexToRgb(color);\n\n                        rgbInputs.forEach(function(rgbInput, index) {\n                            rgbInput.value = rgb[index];\n                            rgbInput.dispatchEvent(new Event('input'));\n                        });\n                    }\n                }\n            },\n            palette: 'modern',\n        });\n\n        container.appendChild(content);\n\n        // Insert picker after the element\n        if (el.tagName == 'INPUT') {\n            el.parentNode.insertBefore(container, el.nextSibling);\n        } else {\n            el.appendChild(container);\n        }\n\n        container.addEventListener(\"click\", function(e) {\n            if (e.target.tagName == 'TD') {\n                var value = e.target.getAttribute('data-value');\n                if (value) {\n                    obj.setValue(value);\n                }\n            } else if (e.target.classList.contains('jcolor-reset')) {\n                obj.setValue('');\n                obj.close();\n            } else if (e.target.classList.contains('jcolor-close')) {\n                if (jsuitesTabs.getActive() > 0) {\n                    obj.setValue(slidersResult);\n                }\n                obj.close();\n            } else if (e.target.classList.contains('jcolor-backdrop')) {\n                obj.close();\n            } else {\n                obj.open();\n            }\n        });\n\n        /**\n         * If element is focus open the picker\n         */\n        el.addEventListener(\"mouseup\", function(e) {\n            obj.open();\n        });\n\n        // If the picker is open on the spectrum tab, it changes the canvas size when the window size is changed\n        window.addEventListener('resize', function() {\n            if (container.classList.contains('jcolor-focus') && jsuitesTabs.getActive() == 1) {\n                resizeCanvas();\n            }\n        });\n\n        // Default opened\n        if (obj.options.opened == true) {\n            obj.open();\n        }\n\n        // Change\n        el.change = obj.setValue;\n\n        // Global generic value handler\n        el.val = function(val) {\n            if (val === undefined) {\n                return obj.getValue();\n            } else {\n                obj.setValue(val);\n            }\n        }\n\n        // Keep object available from the node\n        el.color = obj;\n\n        // Container shortcut\n        container.color = obj;\n    }\n\n    obj.toHex = function(rgb) {\n        var hex = function(x) {\n            return (\"0\" + parseInt(x).toString(16)).slice(-2);\n        }\n        if (rgb) {\n            if (/^#[0-9A-F]{6}$/i.test(rgb)) {\n                return rgb;\n            } else {\n                rgb = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n                if (rgb && rgb.length) {\n                    return \"#\" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);\n                } else {\n                    return \"\";\n                }\n            }\n        }\n    }\n\n    init();\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/contextmenu.js\n\n\n\nfunction Contextmenu() {\n\n    var Component = function(el, options) {\n        // New instance\n        var obj = {type: 'contextmenu'};\n        obj.options = {};\n\n        // Default configuration\n        var defaults = {\n            items: null,\n            onclick: null,\n        };\n\n        // Loop through our object\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                obj.options[property] = defaults[property];\n            }\n        }\n\n        // Class definition\n        el.classList.add('jcontextmenu');\n\n        /**\n         * Open contextmenu\n         */\n        obj.open = function (e, items) {\n            if (items) {\n                // Update content\n                obj.options.items = items;\n                // Create items\n                obj.create(items);\n            }\n\n            // Close current contextmenu\n            if (Component.current) {\n                Component.current.close();\n            }\n\n            // Add to the opened components monitor\n            Tracking(obj, true);\n\n            // Show context menu\n            el.classList.add('jcontextmenu-focus');\n\n            // Current\n            Component.current = obj;\n\n            // Coordinates\n            if ((obj.options.items && obj.options.items.length > 0) || el.children.length) {\n                if (e.target) {\n                    if (e.changedTouches && e.changedTouches[0]) {\n                        x = e.changedTouches[0].clientX;\n                        y = e.changedTouches[0].clientY;\n                    } else {\n                        var x = e.clientX;\n                        var y = e.clientY;\n                    }\n                } else {\n                    var x = e.x;\n                    var y = e.y;\n                }\n\n                var rect = el.getBoundingClientRect();\n\n                if (window.innerHeight < y + rect.height) {\n                    var h = y - rect.height;\n                    if (h < 0) {\n                        h = 0;\n                    }\n                    el.style.top = h + 'px';\n                } else {\n                    el.style.top = y + 'px';\n                }\n\n                if (window.innerWidth < x + rect.width) {\n                    if (x - rect.width > 0) {\n                        el.style.left = (x - rect.width) + 'px';\n                    } else {\n                        el.style.left = '10px';\n                    }\n                } else {\n                    el.style.left = x + 'px';\n                }\n            }\n        }\n\n        obj.isOpened = function () {\n            return el.classList.contains('jcontextmenu-focus') ? true : false;\n        }\n\n        /**\n         * Close menu\n         */\n        obj.close = function () {\n            if (el.classList.contains('jcontextmenu-focus')) {\n                el.classList.remove('jcontextmenu-focus');\n            }\n            Tracking(obj, false);\n        }\n\n        /**\n         * Create items based on the declared objectd\n         * @param {object} items - List of object\n         */\n        obj.create = function (items) {\n            // Update content\n            el.innerHTML = '';\n\n            // Add header contextmenu\n            var itemHeader = createHeader();\n            el.appendChild(itemHeader);\n\n            // Append items\n            for (var i = 0; i < items.length; i++) {\n                var itemContainer = createItemElement(items[i]);\n                el.appendChild(itemContainer);\n            }\n        }\n\n        /**\n         * createHeader for context menu\n         * @private\n         * @returns {HTMLElement}\n         */\n        function createHeader() {\n            var header = document.createElement('div');\n            header.classList.add(\"header\");\n            header.addEventListener(\"click\", function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n            });\n            var title = document.createElement('a');\n            title.classList.add(\"title\");\n            title.innerHTML = dictionary.translate(\"Menu\");\n\n            header.appendChild(title);\n\n            var closeButton = document.createElement('a');\n            closeButton.classList.add(\"close\");\n            closeButton.innerHTML = dictionary.translate(\"close\");\n            closeButton.addEventListener(\"click\", function (e) {\n                obj.close();\n            });\n\n            header.appendChild(closeButton);\n\n            return header;\n        }\n\n        /**\n         * Private function for create a new Item element\n         * @param {type} item\n         * @returns {jsuitesL#15.jSuites.contextmenu.createItemElement.itemContainer}\n         */\n        function createItemElement(item) {\n            if (item.type && (item.type == 'line' || item.type == 'divisor')) {\n                var itemContainer = document.createElement('hr');\n            } else {\n                var itemContainer = document.createElement('div');\n                var itemText = document.createElement('a');\n                itemText.innerHTML = item.title;\n\n                if (item.tooltip) {\n                    itemContainer.setAttribute('title', item.tooltip);\n                }\n\n                if (item.icon) {\n                    itemContainer.setAttribute('data-icon', item.icon);\n                }\n\n                if (item.id) {\n                    itemContainer.id = item.id;\n                }\n\n                if (item.disabled) {\n                    itemContainer.className = 'jcontextmenu-disabled';\n                } else if (item.onclick) {\n                    itemContainer.method = item.onclick;\n                    itemContainer.addEventListener(\"mousedown\", function (e) {\n                        e.preventDefault();\n                    });\n                    itemContainer.addEventListener(\"mouseup\", function (e) {\n                        // Execute method\n                        this.method(this, e);\n                    });\n                }\n                itemContainer.appendChild(itemText);\n\n                if (item.submenu) {\n                    var itemIconSubmenu = document.createElement('span');\n                    itemIconSubmenu.innerHTML = \"&#9658;\";\n                    itemContainer.appendChild(itemIconSubmenu);\n                    itemContainer.classList.add('jcontexthassubmenu');\n                    var el_submenu = document.createElement('div');\n                    // Class definition\n                    el_submenu.classList.add('jcontextmenu');\n                    // Focusable\n                    el_submenu.setAttribute('tabindex', '900');\n\n                    // Append items\n                    var submenu = item.submenu;\n                    for (var i = 0; i < submenu.length; i++) {\n                        var itemContainerSubMenu = createItemElement(submenu[i]);\n                        el_submenu.appendChild(itemContainerSubMenu);\n                    }\n\n                    itemContainer.appendChild(el_submenu);\n                } else if (item.shortcut) {\n                    var itemShortCut = document.createElement('span');\n                    itemShortCut.innerHTML = item.shortcut;\n                    itemContainer.appendChild(itemShortCut);\n                }\n            }\n            return itemContainer;\n        }\n\n        if (typeof (obj.options.onclick) == 'function') {\n            el.addEventListener('click', function (e) {\n                obj.options.onclick(obj, e);\n            });\n        }\n\n        // Create items\n        if (obj.options.items) {\n            obj.create(obj.options.items);\n        }\n\n        window.addEventListener(\"mousewheel\", function () {\n            obj.close();\n        });\n\n        el.contextmenu = obj;\n\n        return obj;\n    }\n\n    return Component;\n}\n\n/* harmony default export */ var contextmenu = (Contextmenu());\n;// CONCATENATED MODULE: ./src/plugins/dropdown.js\n\n\n\n\n\n\n\nfunction Dropdown() {\n\n    var Component = (function (el, options) {\n        // Already created, update options\n        if (el.dropdown) {\n            return el.dropdown.setOptions(options, true);\n        }\n\n        // New instance\n        var obj = {type: 'dropdown'};\n        obj.options = {};\n\n        // Success\n        var success = function (data, val) {\n            // Set data\n            if (data && data.length) {\n                // Sort\n                if (obj.options.sortResults !== false) {\n                    if (typeof obj.options.sortResults == \"function\") {\n                        data.sort(obj.options.sortResults);\n                    } else {\n                        data.sort(sortData);\n                    }\n                }\n\n                obj.setData(data);\n            }\n\n            // Onload method\n            if (typeof (obj.options.onload) == 'function') {\n                obj.options.onload(el, obj, data, val);\n            }\n\n            // Set value\n            if (val) {\n                applyValue(val);\n            }\n\n            // Component value\n            if (val === undefined || val === null) {\n                obj.options.value = '';\n            }\n            el.value = obj.options.value;\n\n            // Open dropdown\n            if (obj.options.opened == true) {\n                obj.open();\n            }\n        }\n\n\n        // Default sort\n        var sortData = function (itemA, itemB) {\n            var testA, testB;\n            if (typeof itemA == \"string\") {\n                testA = itemA;\n            } else {\n                if (itemA.text) {\n                    testA = itemA.text;\n                } else if (itemA.name) {\n                    testA = itemA.name;\n                }\n            }\n\n            if (typeof itemB == \"string\") {\n                testB = itemB;\n            } else {\n                if (itemB.text) {\n                    testB = itemB.text;\n                } else if (itemB.name) {\n                    testB = itemB.name;\n                }\n            }\n\n            if (typeof testA == \"string\" || typeof testB == \"string\") {\n                if (typeof testA != \"string\") {\n                    testA = \"\" + testA;\n                }\n                if (typeof testB != \"string\") {\n                    testB = \"\" + testB;\n                }\n                return testA.localeCompare(testB);\n            } else {\n                return testA - testB;\n            }\n        }\n\n        /**\n         * Reset the options for the dropdown\n         */\n        var resetValue = function () {\n            // Reset value container\n            obj.value = {};\n            // Remove selected\n            for (var i = 0; i < obj.items.length; i++) {\n                if (obj.items[i].selected == true) {\n                    if (obj.items[i].element) {\n                        obj.items[i].element.classList.remove('jdropdown-selected')\n                    }\n                    obj.items[i].selected = null;\n                }\n            }\n            // Reset options\n            obj.options.value = '';\n            // Reset value\n            el.value = '';\n        }\n\n        /**\n         * Apply values to the dropdown\n         */\n        var applyValue = function (values) {\n            // Reset the current values\n            resetValue();\n\n            // Read values\n            if (values !== null) {\n                if (!values) {\n                    if (typeof (obj.value['']) !== 'undefined') {\n                        obj.value[''] = '';\n                    }\n                } else {\n                    if (!Array.isArray(values)) {\n                        values = ('' + values).split(';');\n                    }\n                    for (var i = 0; i < values.length; i++) {\n                        obj.value[values[i]] = '';\n                    }\n                }\n            }\n\n            // Update the DOM\n            for (var i = 0; i < obj.items.length; i++) {\n                if (typeof (obj.value[Value(i)]) !== 'undefined') {\n                    if (obj.items[i].element) {\n                        obj.items[i].element.classList.add('jdropdown-selected')\n                    }\n                    obj.items[i].selected = true;\n\n                    // Keep label\n                    obj.value[Value(i)] = Text(i);\n                }\n            }\n\n            // Global value\n            obj.options.value = Object.keys(obj.value).join(';');\n\n            // Update labels\n            obj.header.value = obj.getText();\n        }\n\n        // Get the value of one item\n        var Value = function (k, v) {\n            // Legacy purposes\n            if (!obj.options.format) {\n                var property = 'value';\n            } else {\n                var property = 'id';\n            }\n\n            if (obj.items[k]) {\n                if (v !== undefined) {\n                    return obj.items[k].data[property] = v;\n                } else {\n                    return obj.items[k].data[property];\n                }\n            }\n\n            return '';\n        }\n\n        // Get the label of one item\n        var Text = function (k, v) {\n            // Legacy purposes\n            if (!obj.options.format) {\n                var property = 'text';\n            } else {\n                var property = 'name';\n            }\n\n            if (obj.items[k]) {\n                if (v !== undefined) {\n                    return obj.items[k].data[property] = v;\n                } else {\n                    return obj.items[k].data[property];\n                }\n            }\n\n            return '';\n        }\n\n        var getValue = function () {\n            return Object.keys(obj.value);\n        }\n\n        var getText = function () {\n            var data = [];\n            var k = Object.keys(obj.value);\n            for (var i = 0; i < k.length; i++) {\n                data.push(obj.value[k[i]]);\n            }\n            return data;\n        }\n\n        obj.setOptions = function (options, reset) {\n            if (!options) {\n                options = {};\n            }\n\n            // Default configuration\n            var defaults = {\n                url: null,\n                data: [],\n                format: 0,\n                multiple: false,\n                autocomplete: false,\n                remoteSearch: false,\n                lazyLoading: false,\n                type: null,\n                width: null,\n                maxWidth: null,\n                opened: false,\n                value: null,\n                placeholder: '',\n                newOptions: false,\n                position: false,\n                onchange: null,\n                onload: null,\n                onopen: null,\n                onclose: null,\n                onfocus: null,\n                onblur: null,\n                oninsert: null,\n                onbeforeinsert: null,\n                sortResults: false,\n                autofocus: false,\n            }\n\n            // Loop through our object\n            for (var property in defaults) {\n                if (options && options.hasOwnProperty(property)) {\n                    obj.options[property] = options[property];\n                } else {\n                    if (typeof (obj.options[property]) == 'undefined' || reset === true) {\n                        obj.options[property] = defaults[property];\n                    }\n                }\n            }\n\n            // Force autocomplete search\n            if (obj.options.remoteSearch == true || obj.options.type === 'searchbar') {\n                obj.options.autocomplete = true;\n            }\n\n            // New options\n            if (obj.options.newOptions == true) {\n                obj.header.classList.add('jdropdown-add');\n            } else {\n                obj.header.classList.remove('jdropdown-add');\n            }\n\n            // Autocomplete\n            if (obj.options.autocomplete == true) {\n                obj.header.removeAttribute('readonly');\n            } else {\n                obj.header.setAttribute('readonly', 'readonly');\n            }\n\n            // Place holder\n            if (obj.options.placeholder) {\n                obj.header.setAttribute('placeholder', obj.options.placeholder);\n            } else {\n                obj.header.removeAttribute('placeholder');\n            }\n\n            // Remove specific dropdown typing to add again\n            el.classList.remove('jdropdown-searchbar');\n            el.classList.remove('jdropdown-picker');\n            el.classList.remove('jdropdown-list');\n\n            if (obj.options.type == 'searchbar') {\n                el.classList.add('jdropdown-searchbar');\n            } else if (obj.options.type == 'list') {\n                el.classList.add('jdropdown-list');\n            } else if (obj.options.type == 'picker') {\n                el.classList.add('jdropdown-picker');\n            } else {\n                if (helpers.getWindowWidth() < 800) {\n                    if (obj.options.autocomplete) {\n                        el.classList.add('jdropdown-searchbar');\n                        obj.options.type = 'searchbar';\n                    } else {\n                        el.classList.add('jdropdown-picker');\n                        obj.options.type = 'picker';\n                    }\n                } else {\n                    if (obj.options.width) {\n                        el.style.width = obj.options.width;\n                        el.style.minWidth = obj.options.width;\n                    } else {\n                        el.style.removeProperty('width');\n                        el.style.removeProperty('min-width');\n                    }\n\n                    el.classList.add('jdropdown-default');\n                    obj.options.type = 'default';\n                }\n            }\n\n            // Close button\n            if (obj.options.type == 'searchbar') {\n                containerHeader.appendChild(closeButton);\n            } else {\n                container.insertBefore(closeButton, container.firstChild);\n            }\n\n            // Load the content\n            if (obj.options.url && !options.data) {\n                ajax({\n                    url: obj.options.url,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function (data) {\n                        if (data) {\n                            success(data, obj.options.value);\n                        }\n                    }\n                });\n            } else {\n                success(obj.options.data, obj.options.value);\n            }\n\n            // Return the instance\n            return obj;\n        }\n\n        // Helpers\n        var containerHeader = null;\n        var container = null;\n        var content = null;\n        var closeButton = null;\n        var resetButton = null;\n        var backdrop = null;\n\n        var keyTimer = null;\n\n        /**\n         * Init dropdown\n         */\n        var init = function () {\n            // Do not accept null\n            if (!options) {\n                options = {};\n            }\n\n            // If the element is a SELECT tag, create a configuration object\n            if (el.tagName == 'SELECT') {\n                var ret = Component.extractFromDom(el, options);\n                el = ret.el;\n                options = ret.options;\n            }\n\n            // Place holder\n            if (!options.placeholder && el.getAttribute('placeholder')) {\n                options.placeholder = el.getAttribute('placeholder');\n            }\n\n            // Value container\n            obj.value = {};\n            // Containers\n            obj.items = [];\n            obj.groups = [];\n            // Search options\n            obj.search = '';\n            obj.results = null;\n\n            // Create dropdown\n            el.classList.add('jdropdown');\n\n            // Header container\n            containerHeader = document.createElement('div');\n            containerHeader.className = 'jdropdown-container-header';\n\n            // Header\n            obj.header = document.createElement('input');\n            obj.header.className = 'jdropdown-header jss_object';\n            obj.header.type = 'text';\n            obj.header.setAttribute('autocomplete', 'off');\n            obj.header.onfocus = function () {\n                if (typeof (obj.options.onfocus) == 'function') {\n                    obj.options.onfocus(el);\n                }\n            }\n\n            obj.header.onblur = function () {\n                if (typeof (obj.options.onblur) == 'function') {\n                    obj.options.onblur(el);\n                }\n            }\n\n            obj.header.onkeyup = function (e) {\n                if (obj.options.autocomplete == true && !keyTimer) {\n                    if (obj.search != obj.header.value.trim()) {\n                        keyTimer = setTimeout(function () {\n                            obj.find(obj.header.value.trim());\n                            keyTimer = null;\n                        }, 400);\n                    }\n\n                    if (!el.classList.contains('jdropdown-focus')) {\n                        obj.open();\n                    }\n                } else {\n                    if (!obj.options.autocomplete) {\n                        obj.next(e.key);\n                    }\n                }\n            }\n\n            // Global controls\n            if (!Component.hasEvents) {\n                // Execute only one time\n                Component.hasEvents = true;\n                // Enter and Esc\n                document.addEventListener(\"keydown\", Component.keydown);\n            }\n\n            // Container\n            container = document.createElement('div');\n            container.className = 'jdropdown-container';\n\n            // Dropdown content\n            content = document.createElement('div');\n            content.className = 'jdropdown-content';\n\n            // Close button\n            closeButton = document.createElement('div');\n            closeButton.className = 'jdropdown-close';\n            closeButton.innerHTML = 'Done';\n\n            // Reset button\n            resetButton = document.createElement('div');\n            resetButton.className = 'jdropdown-reset';\n            resetButton.innerHTML = 'x';\n            resetButton.onclick = function () {\n                obj.reset();\n                obj.close();\n            }\n\n            // Create backdrop\n            backdrop = document.createElement('div');\n            backdrop.className = 'jdropdown-backdrop';\n\n            // Append elements\n            containerHeader.appendChild(obj.header);\n\n            container.appendChild(content);\n            el.appendChild(containerHeader);\n            el.appendChild(container);\n            el.appendChild(backdrop);\n\n            // Set the otiptions\n            obj.setOptions(options);\n\n            if ('ontouchsend' in document.documentElement === true) {\n                el.addEventListener('touchsend', Component.mouseup);\n            } else {\n                el.addEventListener('mouseup', Component.mouseup);\n            }\n\n            // Lazyloading\n            if (obj.options.lazyLoading == true) {\n                LazyLoading(content, {\n                    loadUp: obj.loadUp,\n                    loadDown: obj.loadDown,\n                });\n            }\n\n            content.onwheel = function (e) {\n                e.stopPropagation();\n            }\n\n            // Change method\n            el.change = obj.setValue;\n\n            // Global generic value handler\n            el.val = function (val) {\n                if (val === undefined) {\n                    return obj.getValue(obj.options.multiple ? true : false);\n                } else {\n                    obj.setValue(val);\n                }\n            }\n\n            // Keep object available from the node\n            el.dropdown = obj;\n        }\n\n        /**\n         * Get the current remote source of data URL\n         */\n        obj.getUrl = function () {\n            return obj.options.url;\n        }\n\n        /**\n         * Set the new data from a remote source\n         * @param {string} url - url from the remote source\n         * @param {function} callback - callback when the data is loaded\n         */\n        obj.setUrl = function (url, callback) {\n            obj.options.url = url;\n\n            ajax({\n                url: obj.options.url,\n                method: 'GET',\n                dataType: 'json',\n                success: function (data) {\n                    obj.setData(data);\n                    // Callback\n                    if (typeof (callback) == 'function') {\n                        callback(obj);\n                    }\n                }\n            });\n        }\n\n        /**\n         * Set ID for one item\n         */\n        obj.setId = function (item, v) {\n            // Legacy purposes\n            if (!obj.options.format) {\n                var property = 'value';\n            } else {\n                var property = 'id';\n            }\n\n            if (typeof (item) == 'object') {\n                item[property] = v;\n            } else {\n                obj.items[item].data[property] = v;\n            }\n        }\n\n        /**\n         * Add a new item\n         * @param {string} title - title of the new item\n         * @param {string} id - value/id of the new item\n         */\n        obj.add = function (title, id) {\n            if (!title) {\n                var current = obj.options.autocomplete == true ? obj.header.value : '';\n                var title = prompt(dictionary.translate('Add A New Option'), current);\n                if (!title) {\n                    return false;\n                }\n            }\n\n            // Id\n            if (!id) {\n                id = helpers.guid();\n            }\n\n            // Create new item\n            if (!obj.options.format) {\n                var item = {\n                    value: id,\n                    text: title,\n                }\n            } else {\n                var item = {\n                    id: id,\n                    name: title,\n                }\n            }\n\n            // Callback\n            if (typeof (obj.options.onbeforeinsert) == 'function') {\n                var ret = obj.options.onbeforeinsert(obj, item);\n                if (ret === false) {\n                    return false;\n                } else if (ret) {\n                    item = ret;\n                }\n            }\n\n            // Add item to the main list\n            obj.options.data.push(item);\n\n            // Create DOM\n            var newItem = obj.createItem(item);\n\n            // Append DOM to the list\n            content.appendChild(newItem.element);\n\n            // Callback\n            if (typeof (obj.options.oninsert) == 'function') {\n                obj.options.oninsert(obj, item, newItem);\n            }\n\n            // Show content\n            if (content.style.display == 'none') {\n                content.style.display = '';\n            }\n\n            // Search?\n            if (obj.results) {\n                obj.results.push(newItem);\n            }\n\n            return item;\n        }\n\n        /**\n         * Create a new item\n         */\n        obj.createItem = function (data, group, groupName) {\n            // Keep the correct source of data\n            if (!obj.options.format) {\n                if (!data.value && data.id !== undefined) {\n                    data.value = data.id;\n                    //delete data.id;\n                }\n                if (!data.text && data.name !== undefined) {\n                    data.text = data.name;\n                    //delete data.name;\n                }\n            } else {\n                if (!data.id && data.value !== undefined) {\n                    data.id = data.value;\n                    //delete data.value;\n                }\n                if (!data.name && data.text !== undefined) {\n                    data.name = data.text\n                    //delete data.text;\n                }\n            }\n\n            // Create item\n            var item = {};\n            item.element = document.createElement('div');\n            item.element.className = 'jdropdown-item';\n            item.element.indexValue = obj.items.length;\n            item.data = data;\n\n            // Groupd DOM\n            if (group) {\n                item.group = group;\n            }\n\n            // Id\n            if (data.id) {\n                item.element.setAttribute('id', data.id);\n            }\n\n            // Disabled\n            if (data.disabled == true) {\n                item.element.setAttribute('data-disabled', true);\n            }\n\n            // Tooltip\n            if (data.tooltip) {\n                item.element.setAttribute('title', data.tooltip);\n            }\n\n            // Image\n            if (data.image) {\n                var image = document.createElement('img');\n                image.className = 'jdropdown-image';\n                image.src = data.image;\n                if (!data.title) {\n                    image.classList.add('jdropdown-image-small');\n                }\n                item.element.appendChild(image);\n            } else if (data.icon) {\n                var icon = document.createElement('span');\n                icon.className = \"jdropdown-icon material-icons\";\n                icon.innerText = data.icon;\n                if (!data.title) {\n                    icon.classList.add('jdropdown-icon-small');\n                }\n                if (data.color) {\n                    icon.style.color = data.color;\n                }\n                item.element.appendChild(icon);\n            } else if (data.color) {\n                var color = document.createElement('div');\n                color.className = 'jdropdown-color';\n                color.style.backgroundColor = data.color;\n                item.element.appendChild(color);\n            }\n\n            // Set content\n            if (!obj.options.format) {\n                var text = data.text;\n            } else {\n                var text = data.name;\n            }\n\n            var node = document.createElement('div');\n            node.className = 'jdropdown-description';\n            node.innerHTML = text || '&nbsp;';\n\n            // Title\n            if (data.title) {\n                var title = document.createElement('div');\n                title.className = 'jdropdown-title';\n                title.innerText = data.title;\n                node.appendChild(title);\n            }\n\n            // Set content\n            if (!obj.options.format) {\n                var val = data.value;\n            } else {\n                var val = data.id;\n            }\n\n            // Value\n            if (obj.value[val]) {\n                item.element.classList.add('jdropdown-selected');\n                item.selected = true;\n            }\n\n            // Keep DOM accessible\n            obj.items.push(item);\n\n            // Add node to item\n            item.element.appendChild(node);\n\n            return item;\n        }\n\n        obj.appendData = function (data) {\n            // Create elements\n            if (data.length) {\n                // Helpers\n                var items = [];\n                var groups = [];\n\n                // Prepare data\n                for (var i = 0; i < data.length; i++) {\n                    // Process groups\n                    if (data[i].group) {\n                        if (!groups[data[i].group]) {\n                            groups[data[i].group] = [];\n                        }\n                        groups[data[i].group].push(i);\n                    } else {\n                        items.push(i);\n                    }\n                }\n\n                // Number of items counter\n                var counter = 0;\n\n                // Groups\n                var groupNames = Object.keys(groups);\n\n                // Append groups in case exists\n                if (groupNames.length > 0) {\n                    for (var i = 0; i < groupNames.length; i++) {\n                        // Group container\n                        var group = document.createElement('div');\n                        group.className = 'jdropdown-group';\n                        // Group name\n                        var groupName = document.createElement('div');\n                        groupName.className = 'jdropdown-group-name';\n                        groupName.innerHTML = groupNames[i];\n                        // Group arrow\n                        var groupArrow = document.createElement('i');\n                        groupArrow.className = 'jdropdown-group-arrow jdropdown-group-arrow-down';\n                        groupName.appendChild(groupArrow);\n                        // Group items\n                        var groupContent = document.createElement('div');\n                        groupContent.className = 'jdropdown-group-items';\n                        for (var j = 0; j < groups[groupNames[i]].length; j++) {\n                            var item = obj.createItem(data[groups[groupNames[i]][j]], group, groupNames[i]);\n\n                            if (obj.options.lazyLoading == false || counter < 200) {\n                                groupContent.appendChild(item.element);\n                                counter++;\n                            }\n                        }\n                        // Group itens\n                        group.appendChild(groupName);\n                        group.appendChild(groupContent);\n                        // Keep group DOM\n                        obj.groups.push(group);\n                        // Only add to the screen if children on the group\n                        if (groupContent.children.length > 0) {\n                            // Add DOM to the content\n                            content.appendChild(group);\n                        }\n                    }\n                }\n\n                if (items.length) {\n                    for (var i = 0; i < items.length; i++) {\n                        var item = obj.createItem(data[items[i]]);\n                        if (obj.options.lazyLoading == false || counter < 200) {\n                            content.appendChild(item.element);\n                            counter++;\n                        }\n                    }\n                }\n            }\n        }\n\n        obj.setData = function (data) {\n            // Reset current value\n            resetValue();\n\n            // Make sure the content container is blank\n            content.innerHTML = '';\n\n            // Reset\n            obj.header.value = '';\n\n            // Reset items and values\n            obj.items = [];\n\n            // Prepare data\n            if (data && data.length) {\n                for (var i = 0; i < data.length; i++) {\n                    // Compatibility\n                    if (typeof (data[i]) != 'object') {\n                        // Correct format\n                        if (!obj.options.format) {\n                            data[i] = {\n                                value: data[i],\n                                text: data[i]\n                            }\n                        } else {\n                            data[i] = {\n                                id: data[i],\n                                name: data[i]\n                            }\n                        }\n                    }\n                }\n\n                // Append data\n                obj.appendData(data);\n\n                // Update data\n                obj.options.data = data;\n            } else {\n                // Update data\n                obj.options.data = [];\n            }\n\n            obj.close();\n        }\n\n        obj.getData = function () {\n            return obj.options.data;\n        }\n\n        /**\n         * Get position of the item\n         */\n        obj.getPosition = function (val) {\n            for (var i = 0; i < obj.items.length; i++) {\n                if (Value(i) == val) {\n                    return i;\n                }\n            }\n            return false;\n        }\n\n        /**\n         * Get dropdown current text\n         */\n        obj.getText = function (asArray) {\n            // Get value\n            var v = getText();\n            // Return value\n            if (asArray) {\n                return v;\n            } else {\n                return v.join('; ');\n            }\n        }\n\n        /**\n         * Get dropdown current value\n         */\n        obj.getValue = function (asArray) {\n            // Get value\n            var v = getValue();\n            // Return value\n            if (asArray) {\n                return v;\n            } else {\n                return v.join(';');\n            }\n        }\n\n        /**\n         * Change event\n         */\n        var change = function (oldValue) {\n            // Lemonade JS\n            if (el.value != obj.options.value) {\n                el.value = obj.options.value;\n                if (typeof (el.oninput) == 'function') {\n                    el.oninput({\n                        type: 'input',\n                        target: el,\n                        value: el.value\n                    });\n                }\n            }\n\n            // Events\n            if (typeof (obj.options.onchange) == 'function') {\n                obj.options.onchange(el, obj, oldValue, obj.options.value);\n            }\n        }\n\n        /**\n         * Set value\n         */\n        obj.setValue = function (newValue) {\n            // Current value\n            var oldValue = obj.getValue();\n            // New value\n            if (Array.isArray(newValue)) {\n                newValue = newValue.join(';')\n            }\n\n            if (oldValue !== newValue) {\n                // Set value\n                applyValue(newValue);\n\n                // Change\n                change(oldValue);\n            }\n        }\n\n        obj.resetSelected = function () {\n            obj.setValue(null);\n        }\n\n        obj.selectIndex = function (index, force) {\n            // Make sure is a number\n            var index = parseInt(index);\n\n            // Only select those existing elements\n            if (obj.items && obj.items[index] && (force === true || obj.items[index].data.disabled !== true)) {\n                // Reset cursor to a new position\n                obj.setCursor(index, false);\n\n                // Behaviour\n                if (!obj.options.multiple) {\n                    // Update value\n                    if (obj.items[index].selected) {\n                        obj.setValue(null);\n                    } else {\n                        obj.setValue(Value(index));\n                    }\n\n                    // Close component\n                    obj.close();\n                } else {\n                    // Old value\n                    var oldValue = obj.options.value;\n\n                    // Toggle option\n                    if (obj.items[index].selected) {\n                        obj.items[index].element.classList.remove('jdropdown-selected');\n                        obj.items[index].selected = false;\n\n                        delete obj.value[Value(index)];\n                    } else {\n                        // Select element\n                        obj.items[index].element.classList.add('jdropdown-selected');\n                        obj.items[index].selected = true;\n\n                        // Set value\n                        obj.value[Value(index)] = Text(index);\n                    }\n\n                    // Global value\n                    obj.options.value = Object.keys(obj.value).join(';');\n\n                    // Update labels for multiple dropdown\n                    if (obj.options.autocomplete == false) {\n                        obj.header.value = getText().join('; ');\n                    }\n\n                    // Events\n                    change(oldValue);\n                }\n            }\n        }\n\n        obj.selectItem = function (item) {\n            obj.selectIndex(item.indexValue);\n        }\n\n        var exists = function (k, result) {\n            for (var j = 0; j < result.length; j++) {\n                if (!obj.options.format) {\n                    if (result[j].value == k) {\n                        return true;\n                    }\n                } else {\n                    if (result[j].id == k) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        obj.find = function (str) {\n            if (obj.search == str.trim()) {\n                return false;\n            }\n\n            // Search term\n            obj.search = str;\n\n            // Reset index\n            obj.setCursor();\n\n            // Remove nodes from all groups\n            if (obj.groups.length) {\n                for (var i = 0; i < obj.groups.length; i++) {\n                    obj.groups[i].lastChild.innerHTML = '';\n                }\n            }\n\n            // Remove all nodes\n            content.innerHTML = '';\n\n            // Remove current items in the remote search\n            if (obj.options.remoteSearch == true) {\n                // Reset results\n                obj.results = null;\n                // URL\n                var url = obj.options.url + (obj.options.url.indexOf('?') > 0 ? '&' : '?') + 'q=' + str;\n                // Remote search\n                ajax({\n                    url: url,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function (result) {\n                        // Reset items\n                        obj.items = [];\n\n                        // Add the current selected items to the results in case they are not there\n                        var current = Object.keys(obj.value);\n                        if (current.length) {\n                            for (var i = 0; i < current.length; i++) {\n                                if (!exists(current[i], result)) {\n                                    if (!obj.options.format) {\n                                        result.unshift({value: current[i], text: obj.value[current[i]]});\n                                    } else {\n                                        result.unshift({id: current[i], name: obj.value[current[i]]});\n                                    }\n                                }\n                            }\n                        }\n                        // Append data\n                        obj.appendData(result);\n                        // Show or hide results\n                        if (!result.length) {\n                            content.style.display = 'none';\n                        } else {\n                            content.style.display = '';\n                        }\n                    }\n                });\n            } else {\n                // Search terms\n                str = new RegExp(str, 'gi');\n\n                // Reset search\n                var results = [];\n\n                // Append options\n                for (var i = 0; i < obj.items.length; i++) {\n                    // Item label\n                    var label = Text(i);\n                    // Item title\n                    var title = obj.items[i].data.title || '';\n                    // Group name\n                    var groupName = obj.items[i].data.group || '';\n                    // Synonym\n                    var synonym = obj.items[i].data.synonym || '';\n                    if (synonym) {\n                        synonym = synonym.join(' ');\n                    }\n\n                    if (str == null || obj.items[i].selected == true || label.match(str) || title.match(str) || groupName.match(str) || synonym.match(str)) {\n                        results.push(obj.items[i]);\n                    }\n                }\n\n                if (!results.length) {\n                    content.style.display = 'none';\n\n                    // Results\n                    obj.results = null;\n                } else {\n                    content.style.display = '';\n\n                    // Results\n                    obj.results = results;\n\n                    // Show 200 items at once\n                    var number = results.length || 0;\n\n                    // Lazyloading\n                    if (obj.options.lazyLoading == true && number > 200) {\n                        number = 200;\n                    }\n\n                    for (var i = 0; i < number; i++) {\n                        if (obj.results[i].group) {\n                            if (!obj.results[i].group.parentNode) {\n                                content.appendChild(obj.results[i].group);\n                            }\n                            obj.results[i].group.lastChild.appendChild(obj.results[i].element);\n                        } else {\n                            content.appendChild(obj.results[i].element);\n                        }\n                    }\n                }\n            }\n\n            // Auto focus\n            if (obj.options.autofocus == true) {\n                obj.first();\n            }\n        }\n\n        obj.open = function () {\n            // Focus\n            if (!el.classList.contains('jdropdown-focus')) {\n                // Current dropdown\n                Component.current = obj;\n\n                // Start tracking\n                Tracking(obj, true);\n\n                // Add focus\n                el.classList.add('jdropdown-focus');\n\n                // Animation\n                if (helpers.getWindowWidth() < 800) {\n                    if (obj.options.type == null || obj.options.type == 'picker') {\n                        animation.slideBottom(container, 1);\n                    }\n                }\n\n                // Filter\n                if (obj.options.autocomplete == true) {\n                    obj.header.value = obj.search;\n                    obj.header.focus();\n                }\n\n                // Set cursor for the first or first selected element\n                var k = getValue();\n                if (k[0]) {\n                    var cursor = obj.getPosition(k[0]);\n                    if (cursor !== false) {\n                        obj.setCursor(cursor);\n                    }\n                }\n\n                // Container Size\n                if (!obj.options.type || obj.options.type == 'default') {\n                    var rect = el.getBoundingClientRect();\n                    var rectContainer = container.getBoundingClientRect();\n\n                    if (obj.options.position) {\n                        container.style.position = 'fixed';\n                        if (window.innerHeight < rect.bottom + rectContainer.height) {\n                            container.style.top = '';\n                            container.style.bottom = (window.innerHeight - rect.top) + 1 + 'px';\n                        } else {\n                            container.style.top = rect.bottom + 'px';\n                            container.style.bottom = '';\n                        }\n                        container.style.left = rect.left + 'px';\n                    } else {\n                        if (window.innerHeight < rect.bottom + rectContainer.height) {\n                            container.style.top = '';\n                            container.style.bottom = rect.height + 1 + 'px';\n                        } else {\n                            container.style.top = '';\n                            container.style.bottom = '';\n                        }\n                    }\n\n                    container.style.minWidth = rect.width + 'px';\n\n                    if (obj.options.maxWidth) {\n                        container.style.maxWidth = obj.options.maxWidth;\n                    }\n\n                    if (!obj.items.length && obj.options.autocomplete == true) {\n                        content.style.display = 'none';\n                    } else {\n                        content.style.display = '';\n                    }\n                }\n            }\n\n            // Events\n            if (typeof (obj.options.onopen) == 'function') {\n                obj.options.onopen(el);\n            }\n        }\n\n        obj.close = function (ignoreEvents) {\n            if (el.classList.contains('jdropdown-focus')) {\n                // Update labels\n                obj.header.value = obj.getText();\n                // Remove cursor\n                obj.setCursor();\n                // Events\n                if (!ignoreEvents && typeof (obj.options.onclose) == 'function') {\n                    obj.options.onclose(el);\n                }\n                // Blur\n                if (obj.header.blur) {\n                    obj.header.blur();\n                }\n                // Remove focus\n                el.classList.remove('jdropdown-focus');\n                // Start tracking\n                Tracking(obj, false);\n                // Current dropdown\n                Component.current = null;\n            }\n\n            return obj.getValue();\n        }\n\n        /**\n         * Set cursor\n         */\n        obj.setCursor = function (index, setPosition) {\n            // Remove current cursor\n            if (obj.currentIndex != null) {\n                // Remove visual cursor\n                if (obj.items && obj.items[obj.currentIndex]) {\n                    obj.items[obj.currentIndex].element.classList.remove('jdropdown-cursor');\n                }\n            }\n\n            if (index == undefined) {\n                obj.currentIndex = null;\n            } else {\n                index = parseInt(index);\n\n                // Cursor only for visible items\n                if (obj.items[index].element.parentNode) {\n                    obj.items[index].element.classList.add('jdropdown-cursor');\n                    obj.currentIndex = index;\n\n                    // Update scroll to the cursor element\n                    if (setPosition !== false && obj.items[obj.currentIndex].element) {\n                        var container = content.scrollTop;\n                        var element = obj.items[obj.currentIndex].element;\n                        content.scrollTop = element.offsetTop - element.scrollTop + element.clientTop - 95;\n                    }\n                }\n            }\n        }\n\n        // Compatibility\n        obj.resetCursor = obj.setCursor;\n        obj.updateCursor = obj.setCursor;\n\n        /**\n         * Reset cursor and selected items\n         */\n        obj.reset = function () {\n            // Reset cursor\n            obj.setCursor();\n\n            // Reset selected\n            obj.setValue(null);\n        }\n\n        /**\n         * First available item\n         */\n        obj.first = function () {\n            if (obj.options.lazyLoading === true) {\n                obj.loadFirst();\n            }\n\n            var items = content.querySelectorAll('.jdropdown-item');\n            if (items.length) {\n                var newIndex = items[0].indexValue;\n                obj.setCursor(newIndex);\n            }\n        }\n\n        /**\n         * Last available item\n         */\n        obj.last = function () {\n            if (obj.options.lazyLoading === true) {\n                obj.loadLast();\n            }\n\n            var items = content.querySelectorAll('.jdropdown-item');\n            if (items.length) {\n                var newIndex = items[items.length - 1].indexValue;\n                obj.setCursor(newIndex);\n            }\n        }\n\n        obj.next = function (letter) {\n            var newIndex = null;\n\n            if (letter) {\n                if (letter.length == 1) {\n                    // Current index\n                    var current = obj.currentIndex || -1;\n                    // Letter\n                    letter = letter.toLowerCase();\n\n                    var e = null;\n                    var l = null;\n                    var items = content.querySelectorAll('.jdropdown-item');\n                    if (items.length) {\n                        for (var i = 0; i < items.length; i++) {\n                            if (items[i].indexValue > current) {\n                                if (e = obj.items[items[i].indexValue]) {\n                                    if (l = e.element.innerText[0]) {\n                                        l = l.toLowerCase();\n                                        if (letter == l) {\n                                            newIndex = items[i].indexValue;\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        obj.setCursor(newIndex);\n                    }\n                }\n            } else {\n                if (obj.currentIndex == undefined || obj.currentIndex == null) {\n                    obj.first();\n                } else {\n                    var element = obj.items[obj.currentIndex].element;\n\n                    var next = element.nextElementSibling;\n                    if (next) {\n                        if (next.classList.contains('jdropdown-group')) {\n                            next = next.lastChild.firstChild;\n                        }\n                        newIndex = next.indexValue;\n                    } else {\n                        if (element.parentNode.classList.contains('jdropdown-group-items')) {\n                            if (next = element.parentNode.parentNode.nextElementSibling) {\n                                if (next.classList.contains('jdropdown-group')) {\n                                    next = next.lastChild.firstChild;\n                                } else if (next.classList.contains('jdropdown-item')) {\n                                    newIndex = next.indexValue;\n                                } else {\n                                    next = null;\n                                }\n                            }\n\n                            if (next) {\n                                newIndex = next.indexValue;\n                            }\n                        }\n                    }\n\n                    if (newIndex !== null) {\n                        obj.setCursor(newIndex);\n                    }\n                }\n            }\n        }\n\n        obj.prev = function () {\n            var newIndex = null;\n\n            if (obj.currentIndex === null) {\n                obj.first();\n            } else {\n                var element = obj.items[obj.currentIndex].element;\n\n                var prev = element.previousElementSibling;\n                if (prev) {\n                    if (prev.classList.contains('jdropdown-group')) {\n                        prev = prev.lastChild.lastChild;\n                    }\n                    newIndex = prev.indexValue;\n                } else {\n                    if (element.parentNode.classList.contains('jdropdown-group-items')) {\n                        if (prev = element.parentNode.parentNode.previousElementSibling) {\n                            if (prev.classList.contains('jdropdown-group')) {\n                                prev = prev.lastChild.lastChild;\n                            } else if (prev.classList.contains('jdropdown-item')) {\n                                newIndex = prev.indexValue;\n                            } else {\n                                prev = null\n                            }\n                        }\n\n                        if (prev) {\n                            newIndex = prev.indexValue;\n                        }\n                    }\n                }\n            }\n\n            if (newIndex !== null) {\n                obj.setCursor(newIndex);\n            }\n        }\n\n        obj.loadFirst = function () {\n            // Search\n            if (obj.results) {\n                var results = obj.results;\n            } else {\n                var results = obj.items;\n            }\n\n            // Show 200 items at once\n            var number = results.length || 0;\n\n            // Lazyloading\n            if (obj.options.lazyLoading == true && number > 200) {\n                number = 200;\n            }\n\n            // Reset container\n            content.innerHTML = '';\n\n            // First 200 items\n            for (var i = 0; i < number; i++) {\n                if (results[i].group) {\n                    if (!results[i].group.parentNode) {\n                        content.appendChild(results[i].group);\n                    }\n                    results[i].group.lastChild.appendChild(results[i].element);\n                } else {\n                    content.appendChild(results[i].element);\n                }\n            }\n\n            // Scroll go to the begin\n            content.scrollTop = 0;\n        }\n\n        obj.loadLast = function () {\n            // Search\n            if (obj.results) {\n                var results = obj.results;\n            } else {\n                var results = obj.items;\n            }\n\n            // Show first page\n            var number = results.length;\n\n            // Max 200 items\n            if (number > 200) {\n                number = number - 200;\n\n                // Reset container\n                content.innerHTML = '';\n\n                // First 200 items\n                for (var i = number; i < results.length; i++) {\n                    if (results[i].group) {\n                        if (!results[i].group.parentNode) {\n                            content.appendChild(results[i].group);\n                        }\n                        results[i].group.lastChild.appendChild(results[i].element);\n                    } else {\n                        content.appendChild(results[i].element);\n                    }\n                }\n\n                // Scroll go to the begin\n                content.scrollTop = content.scrollHeight;\n            }\n        }\n\n        obj.loadUp = function () {\n            var test = false;\n\n            // Search\n            if (obj.results) {\n                var results = obj.results;\n            } else {\n                var results = obj.items;\n            }\n\n            var items = content.querySelectorAll('.jdropdown-item');\n            var fistItem = items[0].indexValue;\n            fistItem = obj.items[fistItem];\n            var index = results.indexOf(fistItem) - 1;\n\n            if (index > 0) {\n                var number = 0;\n\n                while (index > 0 && results[index] && number < 200) {\n                    if (results[index].group) {\n                        if (!results[index].group.parentNode) {\n                            content.insertBefore(results[index].group, content.firstChild);\n                        }\n                        results[index].group.lastChild.insertBefore(results[index].element, results[index].group.lastChild.firstChild);\n                    } else {\n                        content.insertBefore(results[index].element, content.firstChild);\n                    }\n\n                    index--;\n                    number++;\n                }\n\n                // New item added\n                test = true;\n            }\n\n            return test;\n        }\n\n        obj.loadDown = function () {\n            var test = false;\n\n            // Search\n            if (obj.results) {\n                var results = obj.results;\n            } else {\n                var results = obj.items;\n            }\n\n            var items = content.querySelectorAll('.jdropdown-item');\n            var lastItem = items[items.length - 1].indexValue;\n            lastItem = obj.items[lastItem];\n            var index = results.indexOf(lastItem) + 1;\n\n            if (index < results.length) {\n                var number = 0;\n                while (index < results.length && results[index] && number < 200) {\n                    if (results[index].group) {\n                        if (!results[index].group.parentNode) {\n                            content.appendChild(results[index].group);\n                        }\n                        results[index].group.lastChild.appendChild(results[index].element);\n                    } else {\n                        content.appendChild(results[index].element);\n                    }\n\n                    index++;\n                    number++;\n                }\n\n                // New item added\n                test = true;\n            }\n\n            return test;\n        }\n\n        init();\n\n        return obj;\n    });\n\n    Component.keydown = function (e) {\n        var dropdown = null;\n        if (dropdown = Component.current) {\n            if (e.which == 13 || e.which == 9) {  // enter or tab\n                if (dropdown.header.value && dropdown.currentIndex == null && dropdown.options.newOptions) {\n                    // if they typed something in, but it matched nothing, and newOptions are allowed, start that flow\n                    dropdown.add();\n                } else {\n                    // Quick Select/Filter\n                    if (dropdown.currentIndex == null && dropdown.options.autocomplete == true && dropdown.header.value != \"\") {\n                        dropdown.find(dropdown.header.value);\n                    }\n                    dropdown.selectIndex(dropdown.currentIndex);\n                }\n            } else if (e.which == 38) {  // up arrow\n                if (dropdown.currentIndex == null) {\n                    dropdown.first();\n                } else if (dropdown.currentIndex > 0) {\n                    dropdown.prev();\n                }\n                e.preventDefault();\n            } else if (e.which == 40) {  // down arrow\n                if (dropdown.currentIndex == null) {\n                    dropdown.first();\n                } else if (dropdown.currentIndex + 1 < dropdown.items.length) {\n                    dropdown.next();\n                }\n                e.preventDefault();\n            } else if (e.which == 36) {\n                dropdown.first();\n                if (!e.target.classList.contains('jdropdown-header')) {\n                    e.preventDefault();\n                }\n            } else if (e.which == 35) {\n                dropdown.last();\n                if (!e.target.classList.contains('jdropdown-header')) {\n                    e.preventDefault();\n                }\n            } else if (e.which == 27) {\n                dropdown.close();\n            } else if (e.which == 33) {  // page up\n                if (dropdown.currentIndex == null) {\n                    dropdown.first();\n                } else if (dropdown.currentIndex > 0) {\n                    for (var i = 0; i < 7; i++) {\n                        dropdown.prev()\n                    }\n                }\n                e.preventDefault();\n            } else if (e.which == 34) {  // page down\n                if (dropdown.currentIndex == null) {\n                    dropdown.first();\n                } else if (dropdown.currentIndex + 1 < dropdown.items.length) {\n                    for (var i = 0; i < 7; i++) {\n                        dropdown.next()\n                    }\n                }\n                e.preventDefault();\n            }\n        }\n    }\n\n    Component.mouseup = function (e) {\n        var element = helpers.findElement(e.target, 'jdropdown');\n        if (element) {\n            var dropdown = element.dropdown;\n            if (e.target.classList.contains('jdropdown-header')) {\n                if (element.classList.contains('jdropdown-focus') && element.classList.contains('jdropdown-default')) {\n                    var rect = element.getBoundingClientRect();\n\n                    if (e.changedTouches && e.changedTouches[0]) {\n                        var x = e.changedTouches[0].clientX;\n                        var y = e.changedTouches[0].clientY;\n                    } else {\n                        var x = e.clientX;\n                        var y = e.clientY;\n                    }\n\n                    if (rect.width - (x - rect.left) < 30) {\n                        if (e.target.classList.contains('jdropdown-add')) {\n                            dropdown.add();\n                        } else {\n                            dropdown.close();\n                        }\n                    } else {\n                        if (dropdown.options.autocomplete == false) {\n                            dropdown.close();\n                        }\n                    }\n                } else {\n                    dropdown.open();\n                }\n            } else if (e.target.classList.contains('jdropdown-group-name')) {\n                var items = e.target.nextSibling.children;\n                if (e.target.nextSibling.style.display != 'none') {\n                    for (var i = 0; i < items.length; i++) {\n                        if (items[i].style.display != 'none') {\n                            dropdown.selectItem(items[i]);\n                        }\n                    }\n                }\n            } else if (e.target.classList.contains('jdropdown-group-arrow')) {\n                if (e.target.classList.contains('jdropdown-group-arrow-down')) {\n                    e.target.classList.remove('jdropdown-group-arrow-down');\n                    e.target.classList.add('jdropdown-group-arrow-up');\n                    e.target.parentNode.nextSibling.style.display = 'none';\n                } else {\n                    e.target.classList.remove('jdropdown-group-arrow-up');\n                    e.target.classList.add('jdropdown-group-arrow-down');\n                    e.target.parentNode.nextSibling.style.display = '';\n                }\n            } else if (e.target.classList.contains('jdropdown-item')) {\n                dropdown.selectItem(e.target);\n            } else if (e.target.classList.contains('jdropdown-image')) {\n                dropdown.selectItem(e.target.parentNode);\n            } else if (e.target.classList.contains('jdropdown-description')) {\n                dropdown.selectItem(e.target.parentNode);\n            } else if (e.target.classList.contains('jdropdown-title')) {\n                dropdown.selectItem(e.target.parentNode.parentNode);\n            } else if (e.target.classList.contains('jdropdown-close') || e.target.classList.contains('jdropdown-backdrop')) {\n                dropdown.close();\n            }\n        }\n    }\n\n    Component.extractFromDom = function (el, options) {\n        // Keep reference\n        var select = el;\n        if (!options) {\n            options = {};\n        }\n        // Prepare configuration\n        if (el.getAttribute('multiple') && (!options || options.multiple == undefined)) {\n            options.multiple = true;\n        }\n        if (el.getAttribute('placeholder') && (!options || options.placeholder == undefined)) {\n            options.placeholder = el.getAttribute('placeholder');\n        }\n        if (el.getAttribute('data-autocomplete') && (!options || options.autocomplete == undefined)) {\n            options.autocomplete = true;\n        }\n        if (!options || options.width == undefined) {\n            options.width = el.offsetWidth;\n        }\n        if (el.value && (!options || options.value == undefined)) {\n            options.value = el.value;\n        }\n        if (!options || options.data == undefined) {\n            options.data = [];\n            for (var j = 0; j < el.children.length; j++) {\n                if (el.children[j].tagName == 'OPTGROUP') {\n                    for (var i = 0; i < el.children[j].children.length; i++) {\n                        options.data.push({\n                            value: el.children[j].children[i].value,\n                            text: el.children[j].children[i].innerHTML,\n                            group: el.children[j].getAttribute('label'),\n                        });\n                    }\n                } else {\n                    options.data.push({\n                        value: el.children[j].value,\n                        text: el.children[j].innerHTML,\n                    });\n                }\n            }\n        }\n        if (!options || options.onchange == undefined) {\n            options.onchange = function (a, b, c, d) {\n                if (options.multiple == true) {\n                    if (obj.items[b].classList.contains('jdropdown-selected')) {\n                        select.options[b].setAttribute('selected', 'selected');\n                    } else {\n                        select.options[b].removeAttribute('selected');\n                    }\n                } else {\n                    select.value = d;\n                }\n            }\n        }\n        // Create DIV\n        var div = document.createElement('div');\n        el.parentNode.insertBefore(div, el);\n        el.style.display = 'none';\n        el = div;\n\n        return {el: el, options: options};\n    }\n\n    return Component;\n}\n\n/* harmony default export */ var dropdown = (Dropdown());\n;// CONCATENATED MODULE: ./src/plugins/picker.js\n\n\n\nfunction Picker(el, options) {\n    // Already created, update options\n    if (el.picker) {\n        return el.picker.setOptions(options, true);\n    }\n\n    // New instance\n    var obj = { type: 'picker' };\n    obj.options = {};\n\n    var dropdownHeader = null;\n    var dropdownContent = null;\n\n    /**\n     * The element passed is a DOM element\n     */\n    var isDOM = function(o) {\n        return (o instanceof Element || o instanceof HTMLDocument);\n    }\n\n    /**\n     * Create the content options\n     */\n    var createContent = function() {\n        dropdownContent.innerHTML = '';\n\n        // Create items\n        var keys = Object.keys(obj.options.data);\n\n        // Go though all options\n        for (var i = 0; i < keys.length; i++) {\n            // Item\n            var dropdownItem = document.createElement('div');\n            dropdownItem.classList.add('jpicker-item');\n            dropdownItem.k = keys[i];\n            dropdownItem.v = obj.options.data[keys[i]];\n            // Label\n            var item = obj.getLabel(keys[i], dropdownItem);\n            if (isDOM(item)) {\n                dropdownItem.appendChild(item);\n            } else {\n                dropdownItem.innerHTML = item;\n            }\n            // Append\n            dropdownContent.appendChild(dropdownItem);\n        }\n    }\n\n    /**\n     * Set or reset the options for the picker\n     */\n    obj.setOptions = function(options, reset) {\n        // Default configuration\n        var defaults = {\n            value: 0,\n            data: null,\n            render: null,\n            onchange: null,\n            onmouseover: null,\n            onselect: null,\n            onopen: null,\n            onclose: null,\n            onload: null,\n            width: null,\n            header: true,\n            right: false,\n            bottom: false,\n            content: false,\n            columns: null,\n            grid: null,\n            height: null,\n        }\n\n        // Legacy purpose only\n        if (options && options.options) {\n            options.data = options.options;\n        }\n\n        // Loop through the initial configuration\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                if (typeof(obj.options[property]) == 'undefined' || reset === true) {\n                    obj.options[property] = defaults[property];\n                }\n            }\n        }\n\n        // Start using the options\n        if (obj.options.header === false) {\n            dropdownHeader.style.display = 'none';\n        } else {\n            dropdownHeader.style.display = '';\n        }\n\n        // Width\n        if (obj.options.width) {\n            dropdownHeader.style.width = parseInt(obj.options.width) + 'px';\n        } else {\n            dropdownHeader.style.width = '';\n        }\n\n        // Height\n        if (obj.options.height) {\n            dropdownContent.style.maxHeight = obj.options.height + 'px';\n            dropdownContent.style.overflow = 'scroll';\n        } else {\n            dropdownContent.style.overflow = '';\n        }\n\n        if (obj.options.columns > 0) {\n            if (! obj.options.grid) {\n                dropdownContent.classList.add('jpicker-columns');\n                dropdownContent.style.width = obj.options.width ? obj.options.width : 36 * obj.options.columns + 'px';\n            } else {\n                dropdownContent.classList.add('jpicker-grid');\n                dropdownContent.style.gridTemplateColumns = 'repeat(' + obj.options.grid + ', 1fr)';\n            }\n        }\n\n        if (isNaN(parseInt(obj.options.value))) {\n            obj.options.value = 0;\n        }\n\n        // Create list from data\n        createContent();\n\n        // Set value\n        obj.setValue(obj.options.value);\n\n        // Set options all returns the own instance\n        return obj;\n    }\n\n    obj.getValue = function() {\n        return obj.options.value;\n    }\n\n    obj.setValue = function(k, e) {\n        // Set label\n        obj.setLabel(k);\n\n        // Update value\n        obj.options.value = String(k);\n\n        // Lemonade JS\n        if (el.value != obj.options.value) {\n            el.value = obj.options.value;\n            if (typeof(el.oninput) == 'function') {\n                el.oninput({\n                    type: 'input',\n                    target: el,\n                    value: el.value\n                });\n            }\n        }\n\n        if (dropdownContent.children[k] && dropdownContent.children[k].getAttribute('type') !== 'generic') {\n            obj.close();\n        }\n\n        // Call method\n        if (e) {\n            if (typeof (obj.options.onchange) == 'function') {\n                var v = obj.options.data[k];\n\n                obj.options.onchange(el, obj, v, v, k, e);\n            }\n        }\n    }\n\n    obj.getLabel = function(v, item) {\n        var label = obj.options.data[v] || null;\n        if (typeof(obj.options.render) == 'function') {\n            label = obj.options.render(label, item);\n        }\n        return label;\n    }\n\n    obj.setLabel = function(v) {\n        var item;\n\n        if (obj.options.content) {\n            item = '<i class=\"material-icons\">' + obj.options.content + '</i>';\n        } else {\n            item = obj.getLabel(v, null);\n        }\n        // Label\n        if (isDOM(item)) {\n            dropdownHeader.innerHTML = '';\n            dropdownHeader.appendChild(item);\n        } else {\n            dropdownHeader.innerHTML = item;\n        }\n    }\n\n    obj.open = function() {\n        if (! el.classList.contains('jpicker-focus')) {\n            // Start tracking the element\n            Tracking(obj, true);\n\n            // Open picker\n            el.classList.add('jpicker-focus');\n            el.focus();\n\n            var top = 0;\n            var left = 0;\n\n            dropdownContent.style.marginLeft = '';\n\n            var rectHeader = dropdownHeader.getBoundingClientRect();\n            var rectContent = dropdownContent.getBoundingClientRect();\n\n            if (window.innerHeight < rectHeader.bottom + rectContent.height || obj.options.bottom) {\n                top = -1 * (rectContent.height + 4);\n            } else {\n                top = rectHeader.height + 4;\n            }\n\n            if (obj.options.right === true) {\n                left = -1 * rectContent.width + rectHeader.width;\n            }\n\n            if (rectContent.left + left < 0) {\n                left = left + rectContent.left + 10;\n            }\n            if (rectContent.left + rectContent.width > window.innerWidth) {\n                left = -1 * (10 + rectContent.left + rectContent.width - window.innerWidth);\n            }\n\n            dropdownContent.style.marginTop = parseInt(top) + 'px';\n            dropdownContent.style.marginLeft = parseInt(left) + 'px';\n\n            //dropdownContent.style.marginTop\n            if (typeof obj.options.onopen == 'function') {\n                obj.options.onopen(el, obj);\n            }\n        }\n    }\n\n    obj.close = function() {\n        if (el.classList.contains('jpicker-focus')) {\n            el.classList.remove('jpicker-focus');\n\n            // Start tracking the element\n            Tracking(obj, false);\n\n            if (typeof obj.options.onclose == 'function') {\n                obj.options.onclose(el, obj);\n            }\n        }\n    }\n\n    /**\n     * Create floating picker\n     */\n    var init = function() {\n        // Class\n        el.classList.add('jpicker');\n        el.setAttribute('tabindex', '900');\n        el.onmousedown = function(e) {\n            if (! el.classList.contains('jpicker-focus')) {\n                obj.open();\n            }\n        }\n\n        // Dropdown Header\n        dropdownHeader = document.createElement('div');\n        dropdownHeader.classList.add('jpicker-header');\n\n        // Dropdown content\n        dropdownContent = document.createElement('div');\n        dropdownContent.classList.add('jpicker-content');\n        dropdownContent.onclick = function(e) {\n            var item = helpers.findElement(e.target, 'jpicker-item');\n            if (item) {\n                if (item.parentNode === dropdownContent) {\n                    // Update label\n                    obj.setValue(item.k, e);\n                }\n            }\n        }\n        // Append content and header\n        el.appendChild(dropdownHeader);\n        el.appendChild(dropdownContent);\n\n        // Default value\n        el.value = options.value || 0;\n\n        // Set options\n        obj.setOptions(options);\n\n        if (typeof(obj.options.onload) == 'function') {\n            obj.options.onload(el, obj);\n        }\n\n        // Change\n        el.change = obj.setValue;\n\n        // Global generic value handler\n        el.val = function(val) {\n            if (val === undefined) {\n                return obj.getValue();\n            } else {\n                obj.setValue(val);\n            }\n        }\n\n        // Reference\n        el.picker = obj;\n    }\n\n    init();\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/toolbar.js\n\n\n\n\n\nfunction Toolbar(el, options) {\n    // New instance\n    var obj = { type:'toolbar' };\n    obj.options = {};\n\n    // Default configuration\n    var defaults = {\n        app: null,\n        container: false,\n        badge: false,\n        title: false,\n        responsive: false,\n        maxWidth: null,\n        bottom: true,\n        items: [],\n    }\n\n    // Loop through our object\n    for (var property in defaults) {\n        if (options && options.hasOwnProperty(property)) {\n            obj.options[property] = options[property];\n        } else {\n            obj.options[property] = defaults[property];\n        }\n    }\n\n    if (! el && options.app && options.app.el) {\n        el = document.createElement('div');\n        options.app.el.appendChild(el);\n    }\n\n    // Arrow\n    var toolbarArrow = document.createElement('div');\n    toolbarArrow.classList.add('jtoolbar-item');\n    toolbarArrow.classList.add('jtoolbar-arrow');\n\n    var toolbarFloating = document.createElement('div');\n    toolbarFloating.classList.add('jtoolbar-floating');\n    toolbarArrow.appendChild(toolbarFloating);\n\n    obj.selectItem = function(element) {\n        var elements = toolbarContent.children;\n        for (var i = 0; i < elements.length; i++) {\n            if (element != elements[i]) {\n                elements[i].classList.remove('jtoolbar-selected');\n            }\n        }\n        element.classList.add('jtoolbar-selected');\n    }\n\n    obj.hide = function() {\n        animation.slideBottom(el, 0, function() {\n            el.style.display = 'none';\n        });\n    }\n\n    obj.show = function() {\n        el.style.display = '';\n        animation.slideBottom(el, 1);\n    }\n\n    obj.get = function() {\n        return el;\n    }\n\n    obj.setBadge = function(index, value) {\n        toolbarContent.children[index].children[1].firstChild.innerHTML = value;\n    }\n\n    obj.destroy = function() {\n        toolbar.remove();\n        el.innerHTML = '';\n    }\n\n    obj.update = function(a, b) {\n        for (var i = 0; i < toolbarContent.children.length; i++) {\n            // Toolbar element\n            var toolbarItem = toolbarContent.children[i];\n            // State management\n            if (typeof(toolbarItem.updateState) == 'function') {\n                toolbarItem.updateState(el, obj, toolbarItem, a, b);\n            }\n        }\n        for (var i = 0; i < toolbarFloating.children.length; i++) {\n            // Toolbar element\n            var toolbarItem = toolbarFloating.children[i];\n            // State management\n            if (typeof(toolbarItem.updateState) == 'function') {\n                toolbarItem.updateState(el, obj, toolbarItem, a, b);\n            }\n        }\n    }\n\n    obj.create = function(items) {\n        // Reset anything in the toolbar\n        toolbarContent.innerHTML = '';\n        // Create elements in the toolbar\n        for (var i = 0; i < items.length; i++) {\n            var toolbarItem = document.createElement('div');\n            toolbarItem.classList.add('jtoolbar-item');\n\n            if (items[i].width) {\n                toolbarItem.style.width = parseInt(items[i].width) + 'px';\n            }\n\n            if (items[i].k) {\n                toolbarItem.k = items[i].k;\n            }\n\n            if (items[i].tooltip) {\n                toolbarItem.setAttribute('title', items[i].tooltip);\n            }\n\n            // Id\n            if (items[i].id) {\n                toolbarItem.setAttribute('id', items[i].id);\n            }\n\n            // Selected\n            if (items[i].updateState) {\n                toolbarItem.updateState = items[i].updateState;\n            }\n\n            if (items[i].active) {\n                toolbarItem.classList.add('jtoolbar-active');\n            }\n\n            if (items[i].disabled) {\n                toolbarItem.classList.add('jtoolbar-disabled');\n            }\n\n            if (items[i].type == 'select' || items[i].type == 'dropdown') {\n                Picker(toolbarItem, items[i]);\n            } else if (items[i].type == 'divisor') {\n                toolbarItem.classList.add('jtoolbar-divisor');\n            } else if (items[i].type == 'label') {\n                toolbarItem.classList.add('jtoolbar-label');\n                toolbarItem.innerHTML = items[i].content;\n            } else {\n                // Material icons\n                var toolbarIcon = document.createElement('i');\n                if (typeof(items[i].class) === 'undefined') {\n                    toolbarIcon.classList.add('material-icons');\n                } else {\n                    var c = items[i].class.split(' ');\n                    for (var j = 0; j < c.length; j++) {\n                        toolbarIcon.classList.add(c[j]);\n                    }\n                }\n                toolbarIcon.innerHTML = items[i].content ? items[i].content : '';\n                toolbarItem.appendChild(toolbarIcon);\n\n                // Badge options\n                if (obj.options.badge == true) {\n                    var toolbarBadge = document.createElement('div');\n                    toolbarBadge.classList.add('jbadge');\n                    var toolbarBadgeContent = document.createElement('div');\n                    toolbarBadgeContent.innerHTML = items[i].badge ? items[i].badge : '';\n                    toolbarBadge.appendChild(toolbarBadgeContent);\n                    toolbarItem.appendChild(toolbarBadge);\n                }\n\n                // Title\n                if (items[i].title) {\n                    if (obj.options.title == true) {\n                        var toolbarTitle = document.createElement('span');\n                        toolbarTitle.innerHTML = items[i].title;\n                        toolbarItem.appendChild(toolbarTitle);\n                    } else {\n                        toolbarItem.setAttribute('title', items[i].title);\n                    }\n                }\n\n                if (obj.options.app && items[i].route) {\n                    // Route\n                    toolbarItem.route = items[i].route;\n                    // Onclick for route\n                    toolbarItem.onclick = function() {\n                        obj.options.app.pages(this.route);\n                    }\n                    // Create pages\n                    obj.options.app.pages(items[i].route, {\n                        toolbarItem: toolbarItem,\n                        closed: true\n                    });\n                }\n            }\n\n            if (items[i].onclick) {\n                toolbarItem.onclick = items[i].onclick.bind(items[i], el, obj, toolbarItem);\n            }\n\n            toolbarContent.appendChild(toolbarItem);\n        }\n\n        // Fits to the page\n        setTimeout(function() {\n            obj.refresh();\n        }, 0);\n    }\n\n    obj.open = function() {\n        toolbarArrow.classList.add('jtoolbar-arrow-selected');\n\n        var rectElement = el.getBoundingClientRect();\n        var rect = toolbarFloating.getBoundingClientRect();\n        if (rect.bottom > window.innerHeight || obj.options.bottom) {\n            toolbarFloating.style.bottom = '0';\n        } else {\n            toolbarFloating.style.removeProperty('bottom');\n        }\n\n        toolbarFloating.style.right = '0';\n\n        toolbarArrow.children[0].focus();\n        // Start tracking\n        Tracking(obj, true);\n    }\n\n    obj.close = function() {\n        toolbarArrow.classList.remove('jtoolbar-arrow-selected')\n        // End tracking\n        Tracking(obj, false);\n    }\n\n    obj.refresh = function() {\n        if (obj.options.responsive == true) {\n            // Width of the c\n            var rect = el.parentNode.getBoundingClientRect();\n            if (! obj.options.maxWidth) {\n                obj.options.maxWidth = rect.width;\n            }\n            // Available parent space\n            var available = parseInt(obj.options.maxWidth);\n            // Remove arrow\n            if (toolbarArrow.parentNode) {\n                toolbarArrow.parentNode.removeChild(toolbarArrow);\n            }\n            // Move all items to the toolbar\n            while (toolbarFloating.firstChild) {\n                toolbarContent.appendChild(toolbarFloating.firstChild);\n            }\n            // Toolbar is larger than the parent, move elements to the floating element\n            if (available < toolbarContent.offsetWidth) {\n                // Give space to the floating element\n                available -= 50;\n                // Move to the floating option\n                while (toolbarContent.lastChild && available < toolbarContent.offsetWidth) {\n                    toolbarFloating.insertBefore(toolbarContent.lastChild, toolbarFloating.firstChild);\n                }\n            }\n            // Show arrow\n            if (toolbarFloating.children.length > 0) {\n                toolbarContent.appendChild(toolbarArrow);\n            }\n        }\n    }\n\n    obj.setReadonly = function(state) {\n        state = state ? 'add' : 'remove';\n        el.classList[state]('jtoolbar-disabled');\n    }\n\n    el.onclick = function(e) {\n        var element = helpers.findElement(e.target, 'jtoolbar-item');\n        if (element) {\n            obj.selectItem(element);\n        }\n\n        if (e.target.classList.contains('jtoolbar-arrow')) {\n            obj.open();\n        }\n    }\n\n    window.addEventListener('resize', function() {\n        obj.refresh();\n    });\n\n    // Toolbar\n    el.classList.add('jtoolbar');\n    // Reset content\n    el.innerHTML = '';\n    // Container\n    if (obj.options.container == true) {\n        el.classList.add('jtoolbar-container');\n    }\n    // Content\n    var toolbarContent = document.createElement('div');\n    el.appendChild(toolbarContent);\n    // Special toolbar for mobile applications\n    if (obj.options.app) {\n        el.classList.add('jtoolbar-mobile');\n    }\n    // Create toolbar\n    obj.create(obj.options.items);\n    // Shortcut\n    el.toolbar = obj;\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/editor.js\n\n\n\n\n\nfunction Editor() {\n    var Component = (function(el, options) {\n        // New instance\n        var obj = { type:'editor' };\n        obj.options = {};\n\n        // Default configuration\n        var defaults = {\n            // Load data from a remove location\n            url: null,\n            // Initial HTML content\n            value: '',\n            // Initial snippet\n            snippet: null,\n            // Add toolbar\n            toolbar: true,\n            toolbarOnTop: false,\n            // Website parser is to read websites and images from cross domain\n            remoteParser: null,\n            // Placeholder\n            placeholder: null,\n            // Parse URL\n            filterPaste: true,\n            // Accept drop files\n            dropZone: true,\n            dropAsSnippet: false,\n            acceptImages: true,\n            acceptFiles: false,\n            maxFileSize: 5000000,\n            allowImageResize: true,\n            // Style\n            maxHeight: null,\n            height: null,\n            focus: false,\n            // Events\n            onclick: null,\n            onfocus: null,\n            onblur: null,\n            onload: null,\n            onkeyup: null,\n            onkeydown: null,\n            onchange: null,\n            extensions: null\n        };\n\n        // Loop through our object\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                obj.options[property] = defaults[property];\n            }\n        }\n\n        // Private controllers\n        var editorTimer = null;\n        var editorAction = null;\n        var files = [];\n\n        // Keep the reference for the container\n        obj.el = el;\n\n        if (typeof(obj.options.onclick) == 'function') {\n            el.onclick = function(e) {\n                obj.options.onclick(el, obj, e);\n            }\n        }\n\n        // Prepare container\n        el.classList.add('jeditor-container');\n\n        // Snippet\n        var snippet = document.createElement('div');\n        snippet.className = 'jsnippet';\n        snippet.setAttribute('contenteditable', false);\n\n        // Toolbar\n        var toolbar = document.createElement('div');\n        toolbar.className = 'jeditor-toolbar';\n\n        obj.editor = document.createElement('div');\n        obj.editor.setAttribute('contenteditable', true);\n        obj.editor.setAttribute('spellcheck', false);\n        obj.editor.classList.add('jeditor');\n\n        // Placeholder\n        if (obj.options.placeholder) {\n            obj.editor.setAttribute('data-placeholder', obj.options.placeholder);\n        }\n\n        // Max height\n        if (obj.options.maxHeight || obj.options.height) {\n            obj.editor.style.overflowY = 'auto';\n\n            if (obj.options.maxHeight) {\n                obj.editor.style.maxHeight = obj.options.maxHeight;\n            }\n            if (obj.options.height) {\n                obj.editor.style.height = obj.options.height;\n            }\n        }\n\n        // Set editor initial value\n        if (obj.options.url) {\n            ajax({\n                url: obj.options.url,\n                dataType: 'html',\n                success: function(result) {\n                    obj.editor.innerHTML = result;\n\n                    Component.setCursor(obj.editor, obj.options.focus == 'initial' ? true : false);\n                }\n            })\n        } else {\n            if (obj.options.value) {\n                obj.editor.innerHTML = obj.options.value;\n            } else {\n                // Create from existing elements\n                for (var i = 0; i < el.children.length; i++) {\n                    obj.editor.appendChild(el.children[i]);\n                }\n            }\n        }\n\n        // Make sure element is empty\n        el.innerHTML = '';\n\n        /**\n         * Onchange event controllers\n         */\n        var change = function(e) {\n            if (typeof(obj.options.onchange) == 'function') {\n                obj.options.onchange(el, obj, e);\n            }\n\n            // Update value\n            obj.options.value = obj.getData();\n\n            // Lemonade JS\n            if (el.value != obj.options.value) {\n                el.value = obj.options.value;\n                if (typeof(el.oninput) == 'function') {\n                    el.oninput({\n                        type: 'input',\n                        target: el,\n                        value: el.value\n                    });\n                }\n            }\n        }\n\n        /**\n         * Extract images from a HTML string\n         */\n        var extractImageFromHtml = function(html) {\n            // Create temp element\n            var div = document.createElement('div');\n            div.innerHTML = html;\n\n            // Extract images\n            var img = div.querySelectorAll('img');\n\n            if (img.length) {\n                for (var i = 0; i < img.length; i++) {\n                    obj.addImage(img[i].src);\n                }\n            }\n        }\n\n        /**\n         * Insert node at caret\n         */\n        var insertNodeAtCaret = function(newNode) {\n            var sel, range;\n\n            if (window.getSelection) {\n                sel = window.getSelection();\n                if (sel.rangeCount) {\n                    range = sel.getRangeAt(0);\n                    var selectedText = range.toString();\n                    range.deleteContents();\n                    range.insertNode(newNode);\n                    // move the cursor after element\n                    range.setStartAfter(newNode);\n                    range.setEndAfter(newNode);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n            }\n        }\n\n        var updateTotalImages = function() {\n            var o = null;\n            if (o = snippet.children[0]) {\n                // Make sure is a grid\n                if (! o.classList.contains('jslider-grid')) {\n                    o.classList.add('jslider-grid');\n                }\n                // Quantify of images\n                var number = o.children.length;\n                // Set the configuration of the grid\n                o.setAttribute('data-number', number > 4 ? 4 : number);\n                // Total of images inside the grid\n                if (number > 4) {\n                    o.setAttribute('data-total', number - 4);\n                } else {\n                    o.removeAttribute('data-total');\n                }\n            }\n        }\n\n        /**\n         * Append image to the snippet\n         */\n        var appendImage = function(image) {\n            if (! snippet.innerHTML) {\n                obj.appendSnippet({});\n            }\n            snippet.children[0].appendChild(image);\n            updateTotalImages();\n        }\n\n        /**\n         * Append snippet\n         * @Param object data\n         */\n        obj.appendSnippet = function(data) {\n            // Reset snippet\n            snippet.innerHTML = '';\n\n            // Attributes\n            var a = [ 'image', 'title', 'description', 'host', 'url' ];\n\n            for (var i = 0; i < a.length; i++) {\n                var div = document.createElement('div');\n                div.className = 'jsnippet-' + a[i];\n                div.setAttribute('data-k', a[i]);\n                snippet.appendChild(div);\n                if (data[a[i]]) {\n                    if (a[i] == 'image') {\n                        if (! Array.isArray(data.image)) {\n                            data.image = [ data.image ];\n                        }\n                        for (var j = 0; j < data.image.length; j++) {\n                            var img = document.createElement('img');\n                            img.src = data.image[j];\n                            div.appendChild(img);\n                        }\n                    } else {\n                        div.innerHTML = data[a[i]];\n                    }\n                }\n            }\n\n            obj.editor.appendChild(document.createElement('br'));\n            obj.editor.appendChild(snippet);\n        }\n\n        /**\n         * Set editor value\n         */\n        obj.setData = function(o) {\n            if (typeof(o) == 'object') {\n                obj.editor.innerHTML = o.content;\n            } else {\n                obj.editor.innerHTML = o;\n            }\n\n            if (obj.options.focus) {\n                Component.setCursor(obj.editor, true);\n            }\n\n            // Reset files container\n            files = [];\n        }\n\n        obj.getFiles = function() {\n            var f = obj.editor.querySelectorAll('.jfile');\n            var d = [];\n            for (var i = 0; i < f.length; i++) {\n                if (files[f[i].src]) {\n                    d.push(files[f[i].src]);\n                }\n            }\n            return d;\n        }\n\n        obj.getText = function() {\n            return obj.editor.innerText;\n        }\n\n        /**\n         * Get editor data\n         */\n        obj.getData = function(json) {\n            if (! json) {\n                var data = obj.editor.innerHTML;\n            } else {\n                var data = {\n                    content : '',\n                }\n\n                // Get snippet\n                if (snippet.innerHTML) {\n                    var index = 0;\n                    data.snippet = {};\n                    for (var i = 0; i < snippet.children.length; i++) {\n                        // Get key from element\n                        var key = snippet.children[i].getAttribute('data-k');\n                        if (key) {\n                            if (key == 'image') {\n                                if (! data.snippet.image) {\n                                    data.snippet.image = [];\n                                }\n                                // Get all images\n                                for (var j = 0; j < snippet.children[i].children.length; j++) {\n                                    data.snippet.image.push(snippet.children[i].children[j].getAttribute('src'))\n                                }\n                            } else {\n                                data.snippet[key] = snippet.children[i].innerHTML;\n                            }\n                        }\n                    }\n                }\n\n                // Get files\n                var f = Object.keys(files);\n                if (f.length) {\n                    data.files = [];\n                    for (var i = 0; i < f.length; i++) {\n                        data.files.push(files[f[i]]);\n                    }\n                }\n\n                // Get content\n                var d = document.createElement('div');\n                d.innerHTML = obj.editor.innerHTML;\n                var s = d.querySelector('.jsnippet');\n                if (s) {\n                    s.remove();\n                }\n\n                var text = d.innerHTML;\n                text = text.replace(/<br>/g, \"\\n\");\n                text = text.replace(/<\\/div>/g, \"<\\/div>\\n\");\n                text = text.replace(/<(?:.|\\n)*?>/gm, \"\");\n                data.content = text.trim();\n\n                // Process extensions\n                processExtensions('getData', data);\n            }\n\n            return data;\n        }\n\n        // Reset\n        obj.reset = function() {\n            obj.editor.innerHTML = '';\n            snippet.innerHTML = '';\n            files = [];\n        }\n\n        obj.addPdf = function(data) {\n            if (data.result.substr(0,4) != 'data') {\n                console.error('Invalid source');\n            } else {\n                var canvas = document.createElement('canvas');\n                canvas.width = 60;\n                canvas.height = 60;\n\n                var img = new Image();\n                var ctx = canvas.getContext('2d');\n                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n                canvas.toBlob(function(blob) {\n                    var newImage = document.createElement('img');\n                    newImage.src = window.URL.createObjectURL(blob);\n                    newImage.title = data.name;\n                    newImage.className = 'jfile pdf';\n\n                    files[newImage.src] = {\n                        file: newImage.src,\n                        extension: 'pdf',\n                        content: data.result,\n                    }\n\n                    //insertNodeAtCaret(newImage);\n                    document.execCommand('insertHtml', false, newImage.outerHTML);\n                });\n            }\n        }\n\n        obj.addImage = function(src, asSnippet) {\n            if (! src) {\n                src = '';\n            }\n\n            if (src.substr(0,4) != 'data' && ! obj.options.remoteParser) {\n                console.error('remoteParser not defined in your initialization');\n            } else {\n                // This is to process cross domain images\n                if (src.substr(0,4) == 'data') {\n                    var extension = src.split(';')\n                    extension = extension[0].split('/');\n                    extension = extension[1];\n                } else {\n                    var extension = src.substr(src.lastIndexOf('.') + 1);\n                    // Work for cross browsers\n                    src = obj.options.remoteParser + src;\n                }\n\n                var img = new Image();\n\n                img.onload = function onload() {\n                    var canvas = document.createElement('canvas');\n                    canvas.width = img.width;\n                    canvas.height = img.height;\n\n                    var ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n                    canvas.toBlob(function(blob) {\n                        var newImage = document.createElement('img');\n                        newImage.src = window.URL.createObjectURL(blob);\n                        newImage.classList.add('jfile');\n                        newImage.setAttribute('tabindex', '900');\n                        newImage.setAttribute('width', img.width);\n                        newImage.setAttribute('height', img.height);\n                        files[newImage.src] = {\n                            file: newImage.src,\n                            extension: extension,\n                            content: canvas.toDataURL(),\n                        }\n\n                        if (obj.options.dropAsSnippet || asSnippet) {\n                            appendImage(newImage);\n                            // Just to understand the attachment is part of a snippet\n                            files[newImage.src].snippet = true;\n                        } else {\n                            //insertNodeAtCaret(newImage);\n                            document.execCommand('insertHtml', false, newImage.outerHTML);\n                        }\n\n                        change();\n                    });\n                };\n\n                img.src = src;\n            }\n        }\n\n        obj.addFile = function(files) {\n            var reader = [];\n\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].size > obj.options.maxFileSize) {\n                    alert('The file is too big');\n                } else {\n                    // Only PDF or Images\n                    var type = files[i].type.split('/');\n\n                    if (type[0] == 'image') {\n                        type = 1;\n                    } else if (type[1] == 'pdf') {\n                        type = 2;\n                    } else {\n                        type = 0;\n                    }\n\n                    if (type) {\n                        // Create file\n                        reader[i] = new FileReader();\n                        reader[i].index = i;\n                        reader[i].type = type;\n                        reader[i].name = files[i].name;\n                        reader[i].date = files[i].lastModified;\n                        reader[i].size = files[i].size;\n                        reader[i].addEventListener(\"load\", function (data) {\n                            // Get result\n                            if (data.target.type == 2) {\n                                if (obj.options.acceptFiles == true) {\n                                    obj.addPdf(data.target);\n                                }\n                            } else {\n                                obj.addImage(data.target.result);\n                            }\n                        }, false);\n\n                        reader[i].readAsDataURL(files[i])\n                    } else {\n                        alert('The extension is not allowed');\n                    }\n                }\n            }\n        }\n\n        // Destroy\n        obj.destroy = function() {\n            obj.editor.removeEventListener('mouseup', editorMouseUp);\n            obj.editor.removeEventListener('mousedown', editorMouseDown);\n            obj.editor.removeEventListener('mousemove', editorMouseMove);\n            obj.editor.removeEventListener('keyup', editorKeyUp);\n            obj.editor.removeEventListener('keydown', editorKeyDown);\n            obj.editor.removeEventListener('dragstart', editorDragStart);\n            obj.editor.removeEventListener('dragenter', editorDragEnter);\n            obj.editor.removeEventListener('dragover', editorDragOver);\n            obj.editor.removeEventListener('drop', editorDrop);\n            obj.editor.removeEventListener('paste', editorPaste);\n            obj.editor.removeEventListener('blur', editorBlur);\n            obj.editor.removeEventListener('focus', editorFocus);\n\n            el.editor = null;\n            el.classList.remove('jeditor-container');\n\n            toolbar.remove();\n            snippet.remove();\n            obj.editor.remove();\n        }\n\n        obj.upload = function() {\n            helpers.click(obj.file);\n        }\n\n        // Elements to be removed\n        var remove = [\n            HTMLUnknownElement,\n            HTMLAudioElement,\n            HTMLEmbedElement,\n            HTMLIFrameElement,\n            HTMLTextAreaElement,\n            HTMLInputElement,\n            HTMLScriptElement\n        ];\n\n        // Valid properties\n        var validProperty = ['width', 'height', 'align', 'border', 'src', 'tabindex'];\n\n        // Valid CSS attributes\n        var validStyle = ['color', 'font-weight', 'font-size', 'background', 'background-color', 'margin'];\n\n        var parse = function(element) {\n           // Remove attributes\n           if (element.attributes && element.attributes.length) {\n               var image = null;\n               var style = null;\n               // Process style attribute\n               var elementStyle = element.getAttribute('style');\n               if (elementStyle) {\n                   style = [];\n                   var t = elementStyle.split(';');\n                   for (var j = 0; j < t.length; j++) {\n                       var v = t[j].trim().split(':');\n                       if (validStyle.indexOf(v[0].trim()) >= 0) {\n                           var k = v.shift();\n                           var v = v.join(':');\n                           style.push(k + ':' + v);\n                       }\n                   }\n               }\n               // Process image\n               if (element.tagName.toUpperCase() == 'IMG') {\n                   if (! obj.options.acceptImages || ! element.src) {\n                       element.parentNode.removeChild(element);\n                   } else {\n                       // Check if is data\n                       element.setAttribute('tabindex', '900');\n                       // Check attributes for persistance\n                       obj.addImage(element.src);\n                   }\n               }\n               // Remove attributes\n               var attr = [];\n               var numAttributes = element.attributes.length - 1;\n               if (numAttributes > 0) {\n                   for (var i = numAttributes; i >= 0 ; i--) {\n                       attr.push(element.attributes[i].name);\n                   }\n                   attr.forEach(function(v) {\n                       if (validProperty.indexOf(v) == -1) {\n                           element.removeAttribute(v);\n                       }\n                   });\n               }\n               element.style = '';\n               // Add valid style\n               if (style && style.length) {\n                   element.setAttribute('style', style.join(';'));\n               }\n           }\n           // Parse children\n           if (element.children.length) {\n               for (var i = 0; i < element.children.length; i++) {\n                   parse(element.children[i]);\n               }\n           }\n\n           if (remove.indexOf(element.constructor) >= 0) {\n               element.remove();\n           }\n        }\n\n        var select = function(e) {\n            var s = window.getSelection()\n            var r = document.createRange();\n            r.selectNode(e);\n            s.addRange(r)\n        }\n\n        var filter = function(data) {\n            if (data) {\n                data = data.replace(new RegExp('<!--(.*?)-->', 'gsi'), '');\n            }\n            var parser = new DOMParser();\n            var d = parser.parseFromString(data, \"text/html\");\n            parse(d);\n            var span = document.createElement('span');\n            span.innerHTML = d.firstChild.innerHTML;\n            return span;\n        }\n\n        var editorPaste = function(e) {\n            if (obj.options.filterPaste == true) {\n                if (e.clipboardData || e.originalEvent.clipboardData) {\n                    var html = (e.originalEvent || e).clipboardData.getData('text/html');\n                    var text = (e.originalEvent || e).clipboardData.getData('text/plain');\n                    var file = (e.originalEvent || e).clipboardData.files\n                } else if (window.clipboardData) {\n                    var html = window.clipboardData.getData('Html');\n                    var text = window.clipboardData.getData('Text');\n                    var file = window.clipboardData.files\n                }\n\n                if (file.length) {\n                    // Paste a image from the clipboard\n                    obj.addFile(file);\n                } else {\n                    if (! html) {\n                        html = text.split('\\r\\n');\n                        if (! e.target.innerText) {\n                            html.map(function(v) {\n                                var d = document.createElement('div');\n                                d.innerText = v;\n                                obj.editor.appendChild(d);\n                            });\n                        } else {\n                            html = html.map(function(v) {\n                                return '<div>' + v + '</div>';\n                            });\n                            document.execCommand('insertHtml', false, html.join(''));\n                        }\n                    } else {\n                        var d = filter(html);\n                        // Paste to the editor\n                        //insertNodeAtCaret(d);\n                        document.execCommand('insertHtml', false, d.innerHTML);\n                    }\n                }\n\n                e.preventDefault();\n            }\n        }\n\n        var editorDragStart = function(e) {\n            if (editorAction && editorAction.e) {\n                e.preventDefault();\n            }\n        }\n\n        var editorDragEnter = function(e) {\n            if (editorAction || obj.options.dropZone == false) {\n                // Do nothing\n            } else {\n                el.classList.add('jeditor-dragging');\n                e.preventDefault();\n            }\n        }\n\n        var editorDragOver = function(e) {\n            if (editorAction || obj.options.dropZone == false) {\n                // Do nothing\n            } else {\n                if (editorTimer) {\n                    clearTimeout(editorTimer);\n                }\n\n                editorTimer = setTimeout(function() {\n                    el.classList.remove('jeditor-dragging');\n                }, 100);\n                e.preventDefault();\n            }\n        }\n\n        var editorDrop = function(e) {\n            if (editorAction || obj.options.dropZone == false) {\n                // Do nothing\n            } else {\n                // Position caret on the drop\n                var range = null;\n                if (document.caretRangeFromPoint) {\n                    range=document.caretRangeFromPoint(e.clientX, e.clientY);\n                } else if (e.rangeParent) {\n                    range=document.createRange();\n                    range.setStart(e.rangeParent,e.rangeOffset);\n                }\n                var sel = window.getSelection();\n                sel.removeAllRanges();\n                sel.addRange(range);\n                sel.anchorNode.parentNode.focus();\n\n                var html = (e.originalEvent || e).dataTransfer.getData('text/html');\n                var text = (e.originalEvent || e).dataTransfer.getData('text/plain');\n                var file = (e.originalEvent || e).dataTransfer.files;\n\n                if (file.length) {\n                    obj.addFile(file);\n                } else if (text) {\n                    extractImageFromHtml(html);\n                }\n\n                el.classList.remove('jeditor-dragging');\n                e.preventDefault();\n            }\n        }\n\n        var editorBlur = function(e) {\n            // Process extensions\n            processExtensions('onevent', e);\n            // Apply changes\n            change(e);\n            // Blur\n            if (typeof(obj.options.onblur) == 'function') {\n                obj.options.onblur(el, obj, e);\n            }\n        }\n\n        var editorFocus = function(e) {\n            // Focus\n            if (typeof(obj.options.onfocus) == 'function') {\n                obj.options.onfocus(el, obj, e);\n            }\n        }\n\n        var editorKeyUp = function(e) {\n            if (! obj.editor.innerHTML) {\n                obj.editor.innerHTML = '<div><br></div>';\n            }\n            if (typeof(obj.options.onkeyup) == 'function') {\n                obj.options.onkeyup(el, obj, e);\n            }\n        }\n\n        var editorKeyDown = function(e) {\n            // Process extensions\n            processExtensions('onevent', e);\n\n            if (e.key == 'Delete') {\n                if (e.target.tagName == 'IMG') {\n                    var parent = e.target.parentNode;\n                    select(e.target);\n                    if (parent.classList.contains('jsnippet-image')) {\n                        updateTotalImages();\n                    }\n                }\n            }\n\n            if (typeof(obj.options.onkeydown) == 'function') {\n                obj.options.onkeydown(el, obj, e);\n            }\n        }\n\n        var editorMouseUp = function(e) {\n            if (editorAction && editorAction.e) {\n                editorAction.e.classList.remove('resizing');\n\n                if (editorAction.e.changed == true) {\n                    var image = editorAction.e.cloneNode()\n                    image.width = parseInt(editorAction.e.style.width) || editorAction.e.getAttribute('width');\n                    image.height = parseInt(editorAction.e.style.height) || editorAction.e.getAttribute('height');\n                    editorAction.e.style.width = '';\n                    editorAction.e.style.height = '';\n                    select(editorAction.e);\n                    document.execCommand('insertHtml', false, image.outerHTML);\n                }\n            }\n\n            editorAction = false;\n        }\n\n        var editorMouseDown = function(e) {\n            var close = function(snippet) {\n                var rect = snippet.getBoundingClientRect();\n                if (rect.width - (e.clientX - rect.left) < 40 && e.clientY - rect.top < 40) {\n                    snippet.innerHTML = '';\n                    snippet.remove();\n                }\n            }\n\n            if (e.target.tagName == 'IMG') {\n                if (e.target.style.cursor) {\n                    var rect = e.target.getBoundingClientRect();\n                    editorAction = {\n                        e: e.target,\n                        x: e.clientX,\n                        y: e.clientY,\n                        w: rect.width,\n                        h: rect.height,\n                        d: e.target.style.cursor,\n                    }\n\n                    if (! e.target.getAttribute('width')) {\n                        e.target.setAttribute('width', rect.width)\n                    }\n\n                    if (! e.target.getAttribute('height')) {\n                        e.target.setAttribute('height', rect.height)\n                    }\n\n                    var s = window.getSelection();\n                    if (s.rangeCount) {\n                        for (var i = 0; i < s.rangeCount; i++) {\n                            s.removeRange(s.getRangeAt(i));\n                        }\n                    }\n\n                    e.target.classList.add('resizing');\n                } else {\n                    editorAction = true;\n                }\n            } else {\n                if (e.target.classList.contains('jsnippet')) {\n                    close(e.target);\n                } else if (e.target.parentNode.classList.contains('jsnippet')) {\n                    close(e.target.parentNode);\n                }\n\n                editorAction = true;\n            }\n        }\n\n        var editorMouseMove = function(e) {\n            if (e.target.tagName == 'IMG' && ! e.target.parentNode.classList.contains('jsnippet-image') && obj.options.allowImageResize == true) {\n                if (e.target.getAttribute('tabindex')) {\n                    var rect = e.target.getBoundingClientRect();\n                    if (e.clientY - rect.top < 5) {\n                        if (rect.width - (e.clientX - rect.left) < 5) {\n                            e.target.style.cursor = 'ne-resize';\n                        } else if (e.clientX - rect.left < 5) {\n                            e.target.style.cursor = 'nw-resize';\n                        } else {\n                            e.target.style.cursor = 'n-resize';\n                        }\n                    } else if (rect.height - (e.clientY - rect.top) < 5) {\n                        if (rect.width - (e.clientX - rect.left) < 5) {\n                            e.target.style.cursor = 'se-resize';\n                        } else if (e.clientX - rect.left < 5) {\n                            e.target.style.cursor = 'sw-resize';\n                        } else {\n                            e.target.style.cursor = 's-resize';\n                        }\n                    } else if (rect.width - (e.clientX - rect.left) < 5) {\n                        e.target.style.cursor = 'e-resize';\n                    } else if (e.clientX - rect.left < 5) {\n                        e.target.style.cursor = 'w-resize';\n                    } else {\n                        e.target.style.cursor = '';\n                    }\n                }\n            }\n\n            // Move\n            if (e.which == 1 && editorAction && editorAction.d) {\n                if (editorAction.d == 'e-resize' || editorAction.d == 'ne-resize' ||  editorAction.d == 'se-resize') {\n                    editorAction.e.style.width = (editorAction.w + (e.clientX - editorAction.x));\n\n                    if (e.shiftKey) {\n                        var newHeight = (e.clientX - editorAction.x) * (editorAction.h / editorAction.w);\n                        editorAction.e.style.height = editorAction.h + newHeight;\n                    } else {\n                        var newHeight =  null;\n                    }\n                }\n\n                if (! newHeight) {\n                    if (editorAction.d == 's-resize' || editorAction.d == 'se-resize' || editorAction.d == 'sw-resize') {\n                        if (! e.shiftKey) {\n                            editorAction.e.style.height = editorAction.h + (e.clientY - editorAction.y);\n                        }\n                    }\n                }\n\n                editorAction.e.changed = true;\n            }\n        }\n\n        var processExtensions = function(method, data) {\n            if (obj.options.extensions) {\n                var ext = Object.keys(obj.options.extensions);\n                if (ext.length) {\n                    for (var i = 0; i < ext.length; i++)\n                        if (obj.options.extensions[ext[i]] && typeof(obj.options.extensions[ext[i]][method]) == 'function') {\n                            obj.options.extensions[ext[i]][method].call(obj, data);\n                        }\n                }\n            }\n        }\n\n        var loadExtensions = function() {\n            if (obj.options.extensions) {\n                var ext = Object.keys(obj.options.extensions);\n                if (ext.length) {\n                    for (var i = 0; i < ext.length; i++) {\n                        if (obj.options.extensions[ext[i]] && typeof (obj.options.extensions[ext[i]]) == 'function') {\n                            obj.options.extensions[ext[i]] = obj.options.extensions[ext[i]](el, obj);\n                        }\n                    }\n                }\n            }\n        }\n\n        document.addEventListener('mouseup', editorMouseUp);\n        document.addEventListener('mousemove', editorMouseMove);\n        obj.editor.addEventListener('mousedown', editorMouseDown);\n        obj.editor.addEventListener('keyup', editorKeyUp);\n        obj.editor.addEventListener('keydown', editorKeyDown);\n        obj.editor.addEventListener('dragstart', editorDragStart);\n        obj.editor.addEventListener('dragenter', editorDragEnter);\n        obj.editor.addEventListener('dragover', editorDragOver);\n        obj.editor.addEventListener('drop', editorDrop);\n        obj.editor.addEventListener('paste', editorPaste);\n        obj.editor.addEventListener('focus', editorFocus);\n        obj.editor.addEventListener('blur', editorBlur);\n\n        // Append editor to the container\n        el.appendChild(obj.editor);\n        // Snippet\n        if (obj.options.snippet) {\n            obj.appendSnippet(obj.options.snippet);\n        }\n\n        // Add toolbar\n        if (obj.options.toolbar) {\n            // Default toolbar configuration\n            if (Array.isArray(obj.options.toolbar)) {\n                var toolbarOptions = {\n                    container: true,\n                    responsive: true,\n                    items: obj.options.toolbar\n                }\n            } else if (obj.options.toolbar === true) {\n                var toolbarOptions = {\n                    container: true,\n                    responsive: true,\n                    items: [],\n                }\n            } else {\n                var toolbarOptions = obj.options.toolbar;\n            }\n\n            // Default items\n            if (! (toolbarOptions.items && toolbarOptions.items.length)) {\n                toolbarOptions.items = Component.getDefaultToolbar(obj);\n            }\n\n            if (obj.options.toolbarOnTop) {\n                // Add class\n                el.classList.add('toolbar-on-top');\n                // Append to the DOM\n                el.insertBefore(toolbar, el.firstChild);\n            } else {\n                // Add padding to the editor\n                obj.editor.style.padding = '15px';\n                // Append to the DOM\n                el.appendChild(toolbar);\n            }\n\n            // Create toolbar\n            Toolbar(toolbar, toolbarOptions);\n\n            toolbar.addEventListener('click', function() {\n                obj.editor.focus();\n            })\n        }\n\n        // Upload file\n        obj.file = document.createElement('input');\n        obj.file.style.display = 'none';\n        obj.file.type = 'file';\n        obj.file.setAttribute('accept', 'image/*');\n        obj.file.onchange = function() {\n            obj.addFile(this.files);\n        }\n        el.appendChild(obj.file);\n\n        // Focus to the editor\n        if (obj.editor.innerHTML && obj.options.focus) {\n            Component.setCursor(obj.editor, obj.options.focus == 'initial' ? true : false);\n        }\n\n        // Change method\n        el.change = obj.setData;\n\n        // Global generic value handler\n        el.val = function(val) {\n            if (val === undefined) {\n                // Data type\n                var o = el.getAttribute('data-html') === 'true' ? false : true;\n                return obj.getData(o);\n            } else {\n                obj.setData(val);\n            }\n        }\n\n        loadExtensions();\n\n        el.editor = obj;\n\n        // Onload\n        if (typeof(obj.options.onload) == 'function') {\n            obj.options.onload(el, obj, obj.editor);\n        }\n\n        return obj;\n    });\n\n    Component.setCursor = function(element, first) {\n        element.focus();\n        document.execCommand('selectAll');\n        var sel = window.getSelection();\n        var range = sel.getRangeAt(0);\n        if (first == true) {\n            var node = range.startContainer;\n            var size = 0;\n        } else {\n            var node = range.endContainer;\n            var size = node.length;\n        }\n        range.setStart(node, size);\n        range.setEnd(node, size);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n\n    Component.getDefaultToolbar = function(obj) {\n\n        var color = function(a,b,c) {\n            if (! c.color) {\n                var t = null;\n                var colorPicker = Color(c, {\n                    onchange: function(o, v) {\n                        if (c.k === 'color') {\n                            document.execCommand('foreColor', false, v);\n                        } else {\n                            document.execCommand('backColor', false, v);\n                        }\n                    }\n                });\n                c.color.open();\n            }\n        }\n\n        var items = [];\n\n        items.push({\n            content: 'undo',\n            onclick: function() {\n                document.execCommand('undo');\n            }\n        });\n\n        items.push({\n            content: 'redo',\n            onclick: function() {\n                document.execCommand('redo');\n            }\n        });\n\n        items.push({\n            type: 'divisor'\n        });\n\n        if (obj.options.toolbarOnTop) {\n            items.push({\n                type: 'select',\n                width: '140px',\n                options: ['Default', 'Verdana', 'Arial', 'Courier New'],\n                render: function (e) {\n                    return '<span style=\"font-family:' + e + '\">' + e + '</span>';\n                },\n                onchange: function (a,b,c,d,e) {\n                    document.execCommand(\"fontName\", false, d);\n                }\n            });\n\n            items.push({\n                type: 'select',\n                content: 'format_size',\n                options: ['x-small', 'small', 'medium', 'large', 'x-large'],\n                render: function (e) {\n                    return '<span style=\"font-size:' + e + '\">' + e + '</span>';\n                },\n                onchange: function (a,b,c,d,e) {\n                    //var html = `<span style=\"font-size: ${c}\">${text}</span>`;\n                    //document.execCommand('insertHtml', false, html);\n                    document.execCommand(\"fontSize\", false, parseInt(e)+1);\n                    //var f = window.getSelection().anchorNode.parentNode\n                    //f.removeAttribute(\"size\");\n                    //f.style.fontSize = d;\n                }\n            });\n\n            items.push({\n                type: 'select',\n                options: ['format_align_left', 'format_align_center', 'format_align_right', 'format_align_justify'],\n                render: function (e) {\n                    return '<i class=\"material-icons\">' + e + '</i>';\n                },\n                onchange: function (a,b,c,d,e) {\n                    var options = ['JustifyLeft','justifyCenter','justifyRight','justifyFull'];\n                    document.execCommand(options[e]);\n                }\n            });\n\n            items.push({\n                type: 'divisor'\n            });\n\n            items.push({\n                content: 'format_color_text',\n                k: 'color',\n                onclick: color,\n            });\n\n            items.push({\n                content: 'format_color_fill',\n                k: 'background-color',\n                onclick: color,\n            });\n        }\n\n        items.push({\n            content: 'format_bold',\n            onclick: function(a,b,c) {\n                document.execCommand('bold');\n\n                if (document.queryCommandState(\"bold\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_italic',\n            onclick: function(a,b,c) {\n                document.execCommand('italic');\n\n                if (document.queryCommandState(\"italic\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_underline',\n            onclick: function(a,b,c) {\n                document.execCommand('underline');\n\n                if (document.queryCommandState(\"underline\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            type:'divisor'\n        });\n\n        items.push({\n            content: 'format_list_bulleted',\n            onclick: function(a,b,c) {\n                document.execCommand('insertUnorderedList');\n\n                if (document.queryCommandState(\"insertUnorderedList\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_list_numbered',\n            onclick: function(a,b,c) {\n                document.execCommand('insertOrderedList');\n\n                if (document.queryCommandState(\"insertOrderedList\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_indent_increase',\n            onclick: function(a,b,c) {\n                document.execCommand('indent', true, null);\n\n                if (document.queryCommandState(\"indent\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_indent_decrease',\n            onclick: function() {\n                document.execCommand('outdent');\n\n                if (document.queryCommandState(\"outdent\")) {\n                    this.classList.add('selected');\n                } else {\n                    this.classList.remove('selected');\n                }\n            }\n        });\n\n        if (obj.options.toolbarOnTop) {\n            items.push({\n                type: 'divisor'\n            });\n\n            items.push({\n                content: 'photo',\n                onclick: function () {\n                    obj.upload();\n                }\n            });\n\n            items.push({\n                type: 'select',\n                content: 'table_view',\n                columns: 10,\n                right: true,\n                options: [\n                    '0x0', '1x0', '2x0', '3x0', '4x0', '5x0', '6x0', '7x0', '8x0', '9x0',\n                    '0x1', '1x1', '2x1', '3x1', '4x1', '5x1', '6x1', '7x1', '8x1', '9x1',\n                    '0x2', '1x2', '2x2', '3x2', '4x2', '5x2', '6x2', '7x2', '8x2', '9x2',\n                    '0x3', '1x3', '2x3', '3x3', '4x3', '5x3', '6x3', '7x3', '8x3', '9x3',\n                    '0x4', '1x4', '2x4', '3x4', '4x4', '5x4', '6x4', '7x4', '8x4', '9x4',\n                    '0x5', '1x5', '2x5', '3x5', '4x5', '5x5', '6x5', '7x5', '8x5', '9x5',\n                    '0x6', '1x6', '2x6', '3x6', '4x6', '5x6', '6x6', '7x6', '8x6', '9x6',\n                    '0x7', '1x7', '2x7', '3x7', '4x7', '5x7', '6x7', '7x7', '8x7', '9x7',\n                    '0x8', '1x8', '2x8', '3x8', '4x8', '5x8', '6x8', '7x8', '8x8', '9x8',\n                    '0x9', '1x9', '2x9', '3x9', '4x9', '5x9', '6x9', '7x9', '8x9', '9x9',\n                ],\n                render: function (e, item) {\n                    if (item) {\n                        item.onmouseover = this.onmouseover;\n                        e = e.split('x');\n                        item.setAttribute('data-x', e[0]);\n                        item.setAttribute('data-y', e[1]);\n                    }\n                    var element = document.createElement('div');\n                    item.style.margin = '1px';\n                    item.style.border = '1px solid #ddd';\n                    return element;\n                },\n                onmouseover: function (e) {\n                    var x = parseInt(e.target.getAttribute('data-x'));\n                    var y = parseInt(e.target.getAttribute('data-y'));\n                    for (var i = 0; i < e.target.parentNode.children.length; i++) {\n                        var element = e.target.parentNode.children[i];\n                        var ex = parseInt(element.getAttribute('data-x'));\n                        var ey = parseInt(element.getAttribute('data-y'));\n                        if (ex <= x && ey <= y) {\n                            element.style.backgroundColor = '#cae1fc';\n                            element.style.borderColor = '#2977ff';\n                        } else {\n                            element.style.backgroundColor = '';\n                            element.style.borderColor = '#ddd';\n                        }\n                    }\n                },\n                onchange: function (a, b, c) {\n                    c = c.split('x');\n                    var table = document.createElement('table');\n                    var tbody = document.createElement('tbody');\n                    for (var y = 0; y <= c[1]; y++) {\n                        var tr = document.createElement('tr');\n                        for (var x = 0; x <= c[0]; x++) {\n                            var td = document.createElement('td');\n                            td.innerHTML = '';\n                            tr.appendChild(td);\n                        }\n                        tbody.appendChild(tr);\n                    }\n                    table.appendChild(tbody);\n                    table.setAttribute('width', '100%');\n                    table.setAttribute('cellpadding', '6');\n                    table.setAttribute('cellspacing', '0');\n                    document.execCommand('insertHTML', false, table.outerHTML);\n                }\n            });\n        }\n\n        return items;\n    }\n\n    return Component;\n}\n\n/* harmony default export */ var editor = (Editor());\n;// CONCATENATED MODULE: ./src/plugins/floating.js\nfunction Floating() {\n    var Component = (function (el, options) {\n        var obj = {};\n        obj.options = {};\n\n        // Default configuration\n        var defaults = {\n            type: 'big',\n            title: 'Untitled',\n            width: 510,\n            height: 472,\n        }\n\n        // Loop through our object\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                obj.options[property] = defaults[property];\n            }\n        }\n\n        // Private methods\n\n        var setContent = function () {\n            var temp = document.createElement('div');\n            while (el.children[0]) {\n                temp.appendChild(el.children[0]);\n            }\n\n            obj.content = document.createElement('div');\n            obj.content.className = 'jfloating_content';\n            obj.content.innerHTML = el.innerHTML;\n\n            while (temp.children[0]) {\n                obj.content.appendChild(temp.children[0]);\n            }\n\n            obj.container = document.createElement('div');\n            obj.container.className = 'jfloating';\n            obj.container.appendChild(obj.content);\n\n            if (obj.options.title) {\n                obj.container.setAttribute('title', obj.options.title);\n            } else {\n                obj.container.classList.add('no-title');\n            }\n\n            // validate element dimensions\n            if (obj.options.width) {\n                obj.container.style.width = parseInt(obj.options.width) + 'px';\n            }\n\n            if (obj.options.height) {\n                obj.container.style.height = parseInt(obj.options.height) + 'px';\n            }\n\n            el.innerHTML = '';\n            el.appendChild(obj.container);\n        }\n\n        var setEvents = function () {\n            if (obj.container) {\n                obj.container.addEventListener('click', function (e) {\n                    var rect = e.target.getBoundingClientRect();\n\n                    if (e.target.classList.contains('jfloating')) {\n                        if (e.changedTouches && e.changedTouches[0]) {\n                            var x = e.changedTouches[0].clientX;\n                            var y = e.changedTouches[0].clientY;\n                        } else {\n                            var x = e.clientX;\n                            var y = e.clientY;\n                        }\n\n                        if (rect.width - (x - rect.left) < 50 && (y - rect.top) < 50) {\n                            setTimeout(function () {\n                                obj.close();\n                            }, 100);\n                        } else {\n                            obj.setState();\n                        }\n                    }\n                });\n            }\n        }\n\n        var setType = function () {\n            obj.container.classList.add('jfloating-' + obj.options.type);\n        }\n\n        obj.state = {\n            isMinized: false,\n        }\n\n        obj.setState = function () {\n            if (obj.state.isMinized) {\n                obj.container.classList.remove('jfloating-minimized');\n            } else {\n                obj.container.classList.add('jfloating-minimized');\n            }\n            obj.state.isMinized = !obj.state.isMinized;\n        }\n\n        obj.close = function () {\n            Components.elements.splice(Component.elements.indexOf(obj.container), 1);\n            obj.updatePosition();\n            el.remove();\n        }\n\n        obj.updatePosition = function () {\n            for (var i = 0; i < Component.elements.length; i++) {\n                var floating = Component.elements[i];\n                var prevFloating = Component.elements[i - 1];\n                floating.style.right = i * (prevFloating ? prevFloating.offsetWidth : floating.offsetWidth) * 1.01 + 'px';\n            }\n        }\n\n        obj.init = function () {\n            // Set content into root\n            setContent();\n\n            // Set dialog events\n            setEvents();\n\n            // Set dialog type\n            setType();\n\n            // Update floating position\n            Component.elements.push(obj.container);\n            obj.updatePosition();\n\n            el.floating = obj;\n        }\n\n        obj.init();\n\n        return obj;\n    });\n\n    Component.elements = [];\n\n    return Component;\n}\n\n/* harmony default export */ var floating = (Floating());\n;// CONCATENATED MODULE: ./src/plugins/validations.js\nfunction Validations() {\n    /**\n     * Options: Object,\n     * Properties:\n     * Constraint,\n     * Reference,\n     * Value\n     */\n\n    var isNumeric = function(num) {\n        return !isNaN(num) && num !== null && num !== '';\n    }\n\n    var numberCriterias = {\n        'between': function(value, range) {\n            return value >= range[0] && value <= range[1];\n        },\n        'not between': function(value, range) {\n            return value < range[0] || value > range[1];\n        },\n        '<': function(value, range) {\n            return value < range[0];\n        },\n        '<=': function(value, range) {\n            return value <= range[0];\n        },\n        '>': function(value, range) {\n            return value > range[0];\n        },\n        '>=': function(value, range) {\n            return value >= range[0];\n        },\n        '=': function(value, range) {\n            return value == range[0];\n        },\n        '!=': function(value, range) {\n            return value != range[0];\n        },\n    }\n\n    var dateCriterias = {\n        'valid date': function() {\n            return true;\n        },\n        '=': function(value, range) {\n            return value === range[0];\n        },\n        '<': function(value, range) {\n            return value < range[0];\n        },\n        '<=': function(value, range) {\n            return value <= range[0];\n        },\n        '>': function(value, range) {\n            return value > range[0];\n        },\n        '>=': function(value, range) {\n            return value >= range[0];\n        },\n        'between': function(value, range) {\n            return value >= range[0] && value <= range[1];\n        },\n        'not between': function(value, range) {\n            return value < range[0] || value > range[1];\n        },\n    }\n\n    var textCriterias = {\n        'contains': function(value, range) {\n            return value.includes(range[0]);\n        },\n        'not contains': function(value, range) {\n            return !value.includes(range[0]);\n        },\n        'begins with': function(value, range) {\n            return value.startsWith(range[0]);\n        },\n        'ends with': function(value, range) {\n            return value.endsWith(range[0]);\n        },\n        '=': function(value, range) {\n            return value === range[0];\n        },\n        'valid email': function(value) {\n            var pattern = new RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\n\n            return pattern.test(value);\n        },\n        'valid url': function(value) {\n            var pattern = new RegExp(/(((https?:\\/\\/)|(www\\.))[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|]+)/ig);\n\n            return pattern.test(value);\n        },\n    }\n\n    // Component router\n    var component = function(value, options) {\n        if (typeof(component[options.type]) === 'function') {\n            if (options.allowBlank && value === '') {\n                return true;\n            }\n\n            return component[options.type](value, options);\n        }\n        return null;\n    }\n\n    component.url = function() {\n        var pattern = new RegExp(/(((https?:\\/\\/)|(www\\.))[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|]+)/ig);\n        return pattern.test(data) ? true : false;\n    }\n\n    component.email = function(data) {\n        var pattern = new RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\n        return data && pattern.test(data) ? true : false;\n    }\n\n    component.required = function(data) {\n        return data.trim() ? true : false;\n    }\n\n    component.exist = function(data, options) {\n        return !!data.toString();\n    }\n\n    component['not exist'] = function(data, options) {\n        return !data.toString();\n    }\n\n    component.empty = function(data) {\n        return !data.toString();\n    }\n\n    component.notEmpty = function(data) {\n        return !!data.toString();\n    }\n\n    component.number = function(data, options) {\n       if (! isNumeric(data)) {\n           return false;\n       }\n\n       if (!options || !options.criteria) {\n           return true;\n       }\n\n       if (!numberCriterias[options.criteria]) {\n           return false;\n       }\n\n       var values = options.value.map(function(num) {\n          return parseFloat(num);\n       })\n\n       return numberCriterias[options.criteria](data, values);\n   };\n\n    component.login = function(data) {\n        var pattern = new RegExp(/^[a-zA-Z0-9\\_\\-\\.\\s+]+$/);\n        return data && pattern.test(data) ? true : false;\n    }\n\n    component.list = function(data, options) {\n        var dataType = typeof data;\n        if (dataType !== 'string' && dataType !== 'number') {\n            return false;\n        }\n        if (typeof(options.value[0]) === 'string') {\n            var list = options.value[0].split(',');\n        } else {\n            var list = options.value[0];\n        }\n\n        var validOption = list.findIndex(function name(item) {\n            return item == data;\n        });\n\n        return validOption > -1;\n    }\n\n    component.date = function(data, options) {\n        if (new Date(data) == 'Invalid Date') {\n            return false;\n        }\n\n        if (!options || !options.criteria) {\n            return true;\n        }\n\n        if (!dateCriterias[options.criteria]) {\n            return false;\n        }\n\n        var values = options.value.map(function(date) {\n            return new Date(date).getTime();\n        });\n\n        return dateCriterias[options.criteria](new Date(data).getTime(), values);\n    }\n\n    component.text = function(data, options) {\n        if (typeof data !== 'string') {\n            return false;\n        }\n\n        if (!options || !options.criteria) {\n            return true;\n        }\n\n        if (!textCriterias[options.criteria]) {\n            return false;\n        }\n\n        return textCriterias[options.criteria](data, options.value);\n    }\n\n    component.textLength = function(data, options) {\n        data = data.toString();\n\n        return component.number(data.length, options);\n    }\n\n    return component;\n}\n\n/* harmony default export */ var validations = (Validations());\n;// CONCATENATED MODULE: ./src/plugins/form.js\n\n\n\n\nfunction Form() {\n    var Component = (function(el, options) {\n        var obj = {};\n        obj.options = {};\n\n        // Default configuration\n        var defaults = {\n            url: null,\n            message: 'Are you sure? There are unsaved information in your form',\n            ignore: false,\n            currentHash: null,\n            submitButton:null,\n            validations: null,\n            onbeforeload: null,\n            onload: null,\n            onbeforesave: null,\n            onsave: null,\n            onbeforeremove: null,\n            onremove: null,\n            onerror: function(el, message) {\n                alert(message);\n            }\n        };\n\n        // Loop through our object\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                obj.options[property] = defaults[property];\n            }\n        }\n\n        // Validations\n        if (! obj.options.validations) {\n            obj.options.validations = {};\n        }\n\n        // Submit Button\n        if (! obj.options.submitButton) {\n            obj.options.submitButton = el.querySelector('input[type=submit]');\n        }\n\n        if (obj.options.submitButton && obj.options.url) {\n            obj.options.submitButton.onclick = function() {\n                obj.save();\n            }\n        }\n\n        if (! obj.options.validations.email) {\n            obj.options.validations.email = validations.email;\n        }\n\n        if (! obj.options.validations.length) {\n            obj.options.validations.length = validations.length;\n        }\n\n        if (! obj.options.validations.required) {\n            obj.options.validations.required = validations.required;\n        }\n\n        obj.setUrl = function(url) {\n            obj.options.url = url;\n        }\n\n        obj.load = function() {\n            ajax({\n                url: obj.options.url,\n                method: 'GET',\n                dataType: 'json',\n                queue: true,\n                success: function(data) {\n                    // Overwrite values from the backend\n                    if (typeof(obj.options.onbeforeload) == 'function') {\n                        var ret = obj.options.onbeforeload(el, data);\n                        if (ret) {\n                            data = ret;\n                        }\n                    }\n                    // Apply values to the form\n                    Component.setElements(el, data);\n                    // Onload methods\n                    if (typeof(obj.options.onload) == 'function') {\n                        obj.options.onload(el, data);\n                    }\n                }\n            });\n        }\n\n        obj.save = function() {\n            var test = obj.validate();\n\n            if (test) {\n                obj.options.onerror(el, test);\n            } else {\n                var data = Component.getElements(el, true);\n\n                if (typeof(obj.options.onbeforesave) == 'function') {\n                    var data = obj.options.onbeforesave(el, data);\n\n                    if (data === false) {\n                        return;\n                    }\n                }\n\n                ajax({\n                    url: obj.options.url,\n                    method: 'POST',\n                    dataType: 'json',\n                    data: data,\n                    success: function(result) {\n                        if (typeof(obj.options.onsave) == 'function') {\n                            obj.options.onsave(el, data, result);\n                        }\n                    }\n                });\n            }\n        }\n\n        obj.remove = function() {\n            if (typeof(obj.options.onbeforeremove) == 'function') {\n                var ret = obj.options.onbeforeremove(el, obj);\n                if (ret === false) {\n                    return false;\n                }\n            }\n\n            ajax({\n                url: obj.options.url,\n                method: 'DELETE',\n                dataType: 'json',\n                success: function(result) {\n                    if (typeof(obj.options.onremove) == 'function') {\n                        obj.options.onremove(el, obj, result);\n                    }\n\n                    obj.reset();\n                }\n            });\n        }\n\n        var addError = function(element) {\n            // Add error in the element\n            element.classList.add('error');\n            // Submit button\n            if (obj.options.submitButton) {\n                obj.options.submitButton.setAttribute('disabled', true);\n            }\n            // Return error message\n            var error = element.getAttribute('data-error') || 'There is an error in the form';\n            element.setAttribute('title', error);\n            return error;\n        }\n\n        var delError = function(element) {\n            var error = false;\n            // Remove class from this element\n            element.classList.remove('error');\n            element.removeAttribute('title');\n            // Get elements in the form\n            var elements = el.querySelectorAll(\"input, select, textarea, div[name]\");\n            // Run all elements\n            for (var i = 0; i < elements.length; i++) {\n                if (elements[i].getAttribute('data-validation')) {\n                    if (elements[i].classList.contains('error')) {\n                        error = true;\n                    }\n                }\n            }\n\n            if (obj.options.submitButton) {\n                if (error) {\n                    obj.options.submitButton.setAttribute('disabled', true);\n                } else {\n                    obj.options.submitButton.removeAttribute('disabled');\n                }\n            }\n        }\n\n        obj.validateElement = function(element) {\n            // Test results\n            var test = false;\n            // Value\n            var value = Component.getValue(element);\n            // Validation\n            var validation = element.getAttribute('data-validation');\n            // Parse\n            if (typeof(obj.options.validations[validation]) == 'function' && ! obj.options.validations[validation](value, element)) {\n                // Not passed in the test\n                test = addError(element);\n            } else {\n                if (element.classList.contains('error')) {\n                    delError(element);\n                }\n            }\n\n            return test;\n        }\n\n        obj.reset = function() {\n            // Get elements in the form\n            var name = null;\n            var elements = el.querySelectorAll(\"input, select, textarea, div[name]\");\n            // Run all elements\n            for (var i = 0; i < elements.length; i++) {\n                if (name = elements[i].getAttribute('name')) {\n                    if (elements[i].type == 'checkbox' || elements[i].type == 'radio') {\n                        elements[i].checked = false;\n                    } else {\n                        if (typeof(elements[i].val) == 'function') {\n                            elements[i].val('');\n                        } else {\n                            elements[i].value = '';\n                        }\n                    }\n                }\n            }\n        }\n\n        // Run form validation\n        obj.validate = function() {\n            var test = [];\n            // Get elements in the form\n            var elements = el.querySelectorAll(\"input, select, textarea, div[name]\");\n            // Run all elements\n            for (var i = 0; i < elements.length; i++) {\n                // Required\n                if (elements[i].getAttribute('data-validation')) {\n                    var res = obj.validateElement(elements[i]);\n                    if (res) {\n                        test.push(res);\n                    }\n                }\n            }\n            if (test.length > 0) {\n                return test.join('<br>');\n            } else {\n                return false;\n            }\n        }\n\n        // Check the form\n        obj.getError = function() {\n            // Validation\n            return obj.validation() ? true : false;\n        }\n\n        // Return the form hash\n        obj.setHash = function() {\n            return obj.getHash(Component.getElements(el));\n        }\n\n        // Get the form hash\n        obj.getHash = function(str) {\n            var hash = 0, i, chr;\n\n            if (str.length === 0) {\n                return hash;\n            } else {\n                for (i = 0; i < str.length; i++) {\n                  chr = str.charCodeAt(i);\n                  hash = ((hash << 5) - hash) + chr;\n                  hash |= 0;\n                }\n            }\n\n            return hash;\n        }\n\n        // Is there any change in the form since start tracking?\n        obj.isChanged = function() {\n            var hash = obj.setHash();\n            return (obj.options.currentHash != hash);\n        }\n\n        // Restart tracking\n        obj.resetTracker = function() {\n            obj.options.currentHash = obj.setHash();\n            obj.options.ignore = false;\n        }\n\n        // Ignore flag\n        obj.setIgnore = function(ignoreFlag) {\n            obj.options.ignore = ignoreFlag ? true : false;\n        }\n\n        // Start tracking in one second\n        setTimeout(function() {\n            obj.options.currentHash = obj.setHash();\n        }, 1000);\n\n        // Validations\n        el.addEventListener(\"keyup\", function(e) {\n            if (e.target.getAttribute('data-validation')) {\n                obj.validateElement(e.target);\n            }\n        });\n\n        // Alert\n        if (! Component.hasEvents) {\n            window.addEventListener(\"beforeunload\", function (e) {\n                if (obj.isChanged() && obj.options.ignore == false) {\n                    var confirmationMessage =  obj.options.message? obj.options.message : \"\\o/\";\n\n                    if (confirmationMessage) {\n                        if (typeof e == 'undefined') {\n                            e = window.event;\n                        }\n\n                        if (e) {\n                            e.returnValue = confirmationMessage;\n                        }\n\n                        return confirmationMessage;\n                    } else {\n                        return void(0);\n                    }\n                }\n            });\n\n            Component.hasEvents = true;\n        }\n\n        el.form = obj;\n\n        return obj;\n    });\n\n    // Get value from one element\n    Component.getValue = function(element) {\n        var value = null;\n        if (element.type == 'checkbox') {\n            if (element.checked == true) {\n                value = element.value || true;\n            }\n        } else if (element.type == 'radio') {\n            if (element.checked == true) {\n                value = element.value;\n            }\n        } else if (element.type == 'file') {\n            value = element.files;\n        } else if (element.tagName == 'select' && element.multiple == true) {\n            value = [];\n            var options = element.querySelectorAll(\"options[selected]\");\n            for (var j = 0; j < options.length; j++) {\n                value.push(options[j].value);\n            }\n        } else if (typeof(element.val) == 'function') {\n            value = element.val();\n        } else {\n            value = element.value || '';\n        }\n\n        return value;\n    }\n\n    // Get form elements\n    Component.getElements = function(el, asArray) {\n        var data = {};\n        var name = null;\n        var elements = el.querySelectorAll(\"input, select, textarea, div[name]\");\n\n        for (var i = 0; i < elements.length; i++) {\n            if (name = elements[i].getAttribute('name')) {\n                data[name] = Component.getValue(elements[i]) || '';\n            }\n        }\n\n        return asArray == true ? data : JSON.stringify(data);\n    }\n\n    //Get form elements\n    Component.setElements = function(el, data) {\n        var name = null;\n        var value = null;\n        var elements = el.querySelectorAll(\"input, select, textarea, div[name]\");\n        for (var i = 0; i < elements.length; i++) {\n            // Attributes\n            var type = elements[i].getAttribute('type');\n            if (name = elements[i].getAttribute('name')) {\n                // Transform variable names in pathname\n                name = name.replace(new RegExp(/\\[(.*?)\\]/ig), '.$1');\n                value = null;\n                // Seach for the data in the path\n                if (name.match(/\\./)) {\n                    var tmp = Path.call(data, name) || '';\n                    if (typeof(tmp) !== 'undefined') {\n                        value = tmp;\n                    }\n                } else {\n                    if (typeof(data[name]) !== 'undefined') {\n                        value = data[name];\n                    }\n                }\n                // Set the values\n                if (value !== null) {\n                    if (type == 'checkbox' || type == 'radio') {\n                        elements[i].checked = value ? true : false;\n                    } else if (type == 'file') {\n                        // Do nothing\n                    } else {\n                        if (typeof (elements[i].val) == 'function') {\n                            elements[i].val(value);\n                        } else {\n                            elements[i].value = value;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return Component;\n}\n\n/* harmony default export */ var plugins_form = (Form());\n;// CONCATENATED MODULE: ./src/plugins/modal.js\n\n\n\n\nfunction Modal() {\n\n    var Events = function() {\n        //  Position\n        var tracker = null;\n\n        var keyDown = function (e) {\n            if (e.which == 27) {\n                var modals = document.querySelectorAll('.jmodal');\n                for (var i = 0; i < modals.length; i++) {\n                    modals[i].parentNode.modal.close();\n                }\n            }\n        }\n\n        var mouseUp = function (e) {\n            var item = helpers.findElement(e.target, 'jmodal');\n            if (item) {\n                // Get target info\n                var rect = item.getBoundingClientRect();\n\n                if (e.changedTouches && e.changedTouches[0]) {\n                    var x = e.changedTouches[0].clientX;\n                    var y = e.changedTouches[0].clientY;\n                } else {\n                    var x = e.clientX;\n                    var y = e.clientY;\n                }\n\n                if (rect.width - (x - rect.left) < 50 && (y - rect.top) < 50) {\n                    item.parentNode.modal.close();\n                }\n            }\n\n            if (tracker) {\n                tracker.element.style.cursor = 'auto';\n                tracker = null;\n            }\n        }\n\n        var mouseDown = function (e) {\n            var item = helpers.findElement(e.target, 'jmodal');\n            if (item) {\n                // Get target info\n                var rect = item.getBoundingClientRect();\n\n                if (e.changedTouches && e.changedTouches[0]) {\n                    var x = e.changedTouches[0].clientX;\n                    var y = e.changedTouches[0].clientY;\n                } else {\n                    var x = e.clientX;\n                    var y = e.clientY;\n                }\n\n                if (rect.width - (x - rect.left) < 50 && (y - rect.top) < 50) {\n                    // Do nothing\n                } else {\n                    if (y - rect.top < 50) {\n                        if (document.selection) {\n                            document.selection.empty();\n                        } else if (window.getSelection) {\n                            window.getSelection().removeAllRanges();\n                        }\n\n                        tracker = {\n                            left: rect.left,\n                            top: rect.top,\n                            x: e.clientX,\n                            y: e.clientY,\n                            width: rect.width,\n                            height: rect.height,\n                            element: item,\n                        }\n                    }\n                }\n            }\n        }\n\n        var mouseMove = function (e) {\n            if (tracker) {\n                e = e || window.event;\n                if (e.buttons) {\n                    var mouseButton = e.buttons;\n                } else if (e.button) {\n                    var mouseButton = e.button;\n                } else {\n                    var mouseButton = e.which;\n                }\n\n                if (mouseButton) {\n                    tracker.element.style.top = (tracker.top + (e.clientY - tracker.y) + (tracker.height / 2)) + 'px';\n                    tracker.element.style.left = (tracker.left + (e.clientX - tracker.x) + (tracker.width / 2)) + 'px';\n                    tracker.element.style.cursor = 'move';\n                } else {\n                    tracker.element.style.cursor = 'auto';\n                }\n            }\n        }\n\n        document.addEventListener('keydown', keyDown);\n        document.addEventListener('mouseup', mouseUp);\n        document.addEventListener('mousedown', mouseDown);\n        document.addEventListener('mousemove', mouseMove);\n    }\n\n    var Component = (function (el, options) {\n        var obj = {};\n        obj.options = {};\n\n        // Default configuration\n        var defaults = {\n            url: null,\n            onopen: null,\n            onclose: null,\n            onload: null,\n            closed: false,\n            width: null,\n            height: null,\n            title: null,\n            padding: null,\n            backdrop: true,\n            icon: null,\n        };\n\n        // Loop through our object\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                obj.options[property] = defaults[property];\n            }\n        }\n\n        // Title\n        if (!obj.options.title && el.getAttribute('title')) {\n            obj.options.title = el.getAttribute('title');\n        }\n\n        var temp = document.createElement('div');\n        while (el.children[0]) {\n            temp.appendChild(el.children[0]);\n        }\n\n        obj.title = document.createElement('div');\n        obj.title.className = 'jmodal_title';\n        if (obj.options.icon) {\n            obj.title.setAttribute('data-icon', obj.options.icon);\n        }\n\n        obj.content = document.createElement('div');\n        obj.content.className = 'jmodal_content';\n        obj.content.innerHTML = el.innerHTML;\n\n        while (temp.children[0]) {\n            obj.content.appendChild(temp.children[0]);\n        }\n\n        obj.container = document.createElement('div');\n        obj.container.className = 'jmodal';\n        obj.container.appendChild(obj.title);\n        obj.container.appendChild(obj.content);\n\n        if (obj.options.padding) {\n            obj.content.style.padding = obj.options.padding;\n        }\n        if (obj.options.width) {\n            obj.container.style.width = obj.options.width;\n        }\n        if (obj.options.height) {\n            obj.container.style.height = obj.options.height;\n        }\n        if (obj.options.title) {\n            var title = document.createElement('h4');\n            title.innerText = obj.options.title;\n            obj.title.appendChild(title);\n        }\n\n        el.innerHTML = '';\n        el.style.display = 'none';\n        el.appendChild(obj.container);\n\n        // Backdrop\n        if (obj.options.backdrop) {\n            var backdrop = document.createElement('div');\n            backdrop.className = 'jmodal_backdrop';\n            backdrop.onclick = function () {\n                obj.close();\n            }\n            el.appendChild(backdrop);\n        }\n\n        obj.open = function () {\n            el.style.display = 'block';\n            // Fullscreen\n            var rect = obj.container.getBoundingClientRect();\n            if (helpers.getWindowWidth() < rect.width) {\n                obj.container.style.top = '';\n                obj.container.style.left = '';\n                obj.container.classList.add('jmodal_fullscreen');\n                animation.slideBottom(obj.container, 1);\n            } else {\n                if (obj.options.backdrop) {\n                    backdrop.style.display = 'block';\n                }\n            }\n            // Event\n            if (typeof (obj.options.onopen) == 'function') {\n                obj.options.onopen(el, obj);\n            }\n        }\n\n        obj.resetPosition = function () {\n            obj.container.style.top = '';\n            obj.container.style.left = '';\n        }\n\n        obj.isOpen = function () {\n            return el.style.display != 'none' ? true : false;\n        }\n\n        obj.close = function () {\n            if (obj.isOpen()) {\n                el.style.display = 'none';\n                if (obj.options.backdrop) {\n                    // Backdrop\n                    backdrop.style.display = '';\n                }\n                // Remove fullscreen class\n                obj.container.classList.remove('jmodal_fullscreen');\n                // Event\n                if (typeof (obj.options.onclose) == 'function') {\n                    obj.options.onclose(el, obj);\n                }\n            }\n        }\n\n        if (obj.options.url) {\n            ajax({\n                url: obj.options.url,\n                method: 'GET',\n                dataType: 'text/html',\n                success: function (data) {\n                    obj.content.innerHTML = data;\n\n                    if (!obj.options.closed) {\n                        obj.open();\n                    }\n\n                    if (typeof (obj.options.onload) === 'function') {\n                        obj.options.onload(obj);\n                    }\n                }\n            });\n        } else {\n            if (!obj.options.closed) {\n                obj.open();\n            }\n\n            if (typeof (obj.options.onload) === 'function') {\n                obj.options.onload(obj);\n            }\n        }\n\n        // Keep object available from the node\n        el.modal = obj;\n\n        // Create events when the first modal is create only\n        Events();\n\n        // Execute the events only once\n        Events = function() {};\n\n        return obj;\n    });\n\n    return Component;\n}\n\n/* harmony default export */ var modal = (Modal());\n;// CONCATENATED MODULE: ./src/plugins/notification.js\n\n\n\nfunction Notification() {\n    var Component = function (options) {\n        var obj = {};\n        obj.options = {};\n\n        // Default configuration\n        var defaults = {\n            icon: null,\n            name: 'Notification',\n            date: null,\n            error: null,\n            title: null,\n            message: null,\n            timeout: 4000,\n            autoHide: true,\n            closeable: true,\n        };\n\n        // Loop through our object\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                obj.options[property] = defaults[property];\n            }\n        }\n\n        var notification = document.createElement('div');\n        notification.className = 'jnotification';\n\n        if (obj.options.error) {\n            notification.classList.add('jnotification-error');\n        }\n\n        var notificationContainer = document.createElement('div');\n        notificationContainer.className = 'jnotification-container';\n        notification.appendChild(notificationContainer);\n\n        var notificationHeader = document.createElement('div');\n        notificationHeader.className = 'jnotification-header';\n        notificationContainer.appendChild(notificationHeader);\n\n        var notificationImage = document.createElement('div');\n        notificationImage.className = 'jnotification-image';\n        notificationHeader.appendChild(notificationImage);\n\n        if (obj.options.icon) {\n            var notificationIcon = document.createElement('img');\n            notificationIcon.src = obj.options.icon;\n            notificationImage.appendChild(notificationIcon);\n        }\n\n        var notificationName = document.createElement('div');\n        notificationName.className = 'jnotification-name';\n        notificationName.innerHTML = obj.options.name;\n        notificationHeader.appendChild(notificationName);\n\n        if (obj.options.closeable == true) {\n            var notificationClose = document.createElement('div');\n            notificationClose.className = 'jnotification-close';\n            notificationClose.onclick = function () {\n                obj.hide();\n            }\n            notificationHeader.appendChild(notificationClose);\n        }\n\n        var notificationDate = document.createElement('div');\n        notificationDate.className = 'jnotification-date';\n        notificationHeader.appendChild(notificationDate);\n\n        var notificationContent = document.createElement('div');\n        notificationContent.className = 'jnotification-content';\n        notificationContainer.appendChild(notificationContent);\n\n        if (obj.options.title) {\n            var notificationTitle = document.createElement('div');\n            notificationTitle.className = 'jnotification-title';\n            notificationTitle.innerHTML = obj.options.title;\n            notificationContent.appendChild(notificationTitle);\n        }\n\n        var notificationMessage = document.createElement('div');\n        notificationMessage.className = 'jnotification-message';\n        notificationMessage.innerHTML = obj.options.message;\n        notificationContent.appendChild(notificationMessage);\n\n        obj.show = function () {\n            document.body.appendChild(notification);\n            if (helpers.getWindowWidth() > 800) {\n                animation.fadeIn(notification);\n            } else {\n                animation.slideTop(notification, 1);\n            }\n        }\n\n        obj.hide = function () {\n            if (helpers.getWindowWidth() > 800) {\n                animation.fadeOut(notification, function () {\n                    if (notification.parentNode) {\n                        notification.parentNode.removeChild(notification);\n                        if (notificationTimeout) {\n                            clearTimeout(notificationTimeout);\n                        }\n                    }\n                });\n            } else {\n                animation.slideTop(notification, 0, function () {\n                    if (notification.parentNode) {\n                        notification.parentNode.removeChild(notification);\n                        if (notificationTimeout) {\n                            clearTimeout(notificationTimeout);\n                        }\n                    }\n                });\n            }\n        };\n\n        obj.show();\n\n        if (obj.options.autoHide == true) {\n            var notificationTimeout = setTimeout(function () {\n                obj.hide();\n            }, obj.options.timeout);\n        }\n\n        if (helpers.getWindowWidth() < 800) {\n            notification.addEventListener(\"swipeup\", function (e) {\n                obj.hide();\n                e.preventDefault();\n                e.stopPropagation();\n            });\n        }\n\n        return obj;\n    }\n\n    Component.isVisible = function () {\n        var j = document.querySelector('.jnotification');\n        return j && j.parentNode ? true : false;\n    }\n\n    return Component;\n}\n\n/* harmony default export */ var notification = (Notification());\n;// CONCATENATED MODULE: ./src/plugins/progressbar.js\nfunction Progressbar(el, options) {\n    var obj = {};\n    obj.options = {};\n\n    // Default configuration\n    var defaults = {\n        value: 0,\n        onchange: null,\n        width: null,\n    };\n\n    // Loop through the initial configuration\n    for (var property in defaults) {\n        if (options && options.hasOwnProperty(property)) {\n            obj.options[property] = options[property];\n        } else {\n            obj.options[property] = defaults[property];\n        }\n    }\n\n    // Class\n    el.classList.add('jprogressbar');\n    el.setAttribute('tabindex', 1);\n    el.setAttribute('data-value', obj.options.value);\n\n    var bar = document.createElement('div');\n    bar.style.width = obj.options.value + '%';\n    bar.style.color = '#fff';\n    el.appendChild(bar);\n\n    if (obj.options.width) {\n        el.style.width = obj.options.width;\n    }\n\n    // Set value\n    obj.setValue = function(value) {\n        value = parseInt(value);\n        obj.options.value = value;\n        bar.style.width = value + '%';\n        el.setAttribute('data-value', value + '%');\n\n        if (value < 6) {\n            el.style.color = '#000';\n        } else {\n            el.style.color = '#fff';\n        }\n\n        // Update value\n        obj.options.value = value;\n\n        if (typeof(obj.options.onchange) == 'function') {\n            obj.options.onchange(el, value);\n        }\n\n        // Lemonade JS\n        if (el.value != obj.options.value) {\n            el.value = obj.options.value;\n            if (typeof(el.oninput) == 'function') {\n                el.oninput({\n                    type: 'input',\n                    target: el,\n                    value: el.value\n                });\n            }\n        }\n    }\n\n    obj.getValue = function() {\n        return obj.options.value;\n    }\n\n    var action = function(e) {\n        if (e.which) {\n            // Get target info\n            var rect = el.getBoundingClientRect();\n\n            if (e.changedTouches && e.changedTouches[0]) {\n                var x = e.changedTouches[0].clientX;\n                var y = e.changedTouches[0].clientY;\n            } else {\n                var x = e.clientX;\n                var y = e.clientY;\n            }\n\n            obj.setValue(Math.round((x - rect.left) / rect.width * 100));\n        }\n    }\n\n    // Events\n    if ('touchstart' in document.documentElement === true) {\n        el.addEventListener('touchstart', action);\n        el.addEventListener('touchend', action);\n    } else {\n        el.addEventListener('mousedown', action);\n        el.addEventListener(\"mousemove\", action);\n    }\n\n    // Change\n    el.change = obj.setValue;\n\n    // Global generic value handler\n    el.val = function(val) {\n        if (val === undefined) {\n            return obj.getValue();\n        } else {\n            obj.setValue(val);\n        }\n    }\n\n    // Reference\n    el.progressbar = obj;\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/rating.js\nfunction Rating(el, options) {\n    // Already created, update options\n    if (el.rating) {\n        return el.rating.setOptions(options, true);\n    }\n\n    // New instance\n    var obj = {};\n    obj.options = {};\n\n    obj.setOptions = function(options, reset) {\n        // Default configuration\n        var defaults = {\n            number: 5,\n            value: 0,\n            tooltip: [ 'Very bad', 'Bad', 'Average', 'Good', 'Very good' ],\n            onchange: null,\n        };\n\n        // Loop through the initial configuration\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                if (typeof(obj.options[property]) == 'undefined' || reset === true) {\n                    obj.options[property] = defaults[property];\n                }\n            }\n        }\n\n        // Make sure the container is empty\n        el.innerHTML = '';\n\n        // Add elements\n        for (var i = 0; i < obj.options.number; i++) {\n            var div = document.createElement('div');\n            div.setAttribute('data-index', (i + 1))\n            div.setAttribute('title', obj.options.tooltip[i])\n            el.appendChild(div);\n        }\n\n        // Selected option\n        if (obj.options.value) {\n            for (var i = 0; i < obj.options.number; i++) {\n                if (i < obj.options.value) {\n                    el.children[i].classList.add('jrating-selected');\n                }\n            }\n        }\n\n        return obj;\n    }\n\n    // Set value\n    obj.setValue = function(index) {\n        for (var i = 0; i < obj.options.number; i++) {\n            if (i < index) {\n                el.children[i].classList.add('jrating-selected');\n            } else {\n                el.children[i].classList.remove('jrating-over');\n                el.children[i].classList.remove('jrating-selected');\n            }\n        }\n\n        obj.options.value = index;\n\n        if (typeof(obj.options.onchange) == 'function') {\n            obj.options.onchange(el, index);\n        }\n\n        // Lemonade JS\n        if (el.value != obj.options.value) {\n            el.value = obj.options.value;\n            if (typeof(el.oninput) == 'function') {\n                el.oninput({\n                    type: 'input',\n                    target: el,\n                    value: el.value\n                });\n            }\n        }\n    }\n\n    obj.getValue = function() {\n        return obj.options.value;\n    }\n\n    var init = function() {\n        // Start plugin\n        obj.setOptions(options);\n\n        // Class\n        el.classList.add('jrating');\n\n        // Events\n        el.addEventListener(\"click\", function(e) {\n            var index = e.target.getAttribute('data-index');\n            if (index != undefined) {\n                if (index == obj.options.value) {\n                    obj.setValue(0);\n                } else {\n                    obj.setValue(index);\n                }\n            }\n        });\n\n        el.addEventListener(\"mouseover\", function(e) {\n            var index = e.target.getAttribute('data-index');\n            for (var i = 0; i < obj.options.number; i++) {\n                if (i < index) {\n                    el.children[i].classList.add('jrating-over');\n                } else {\n                    el.children[i].classList.remove('jrating-over');\n                }\n            }\n        });\n\n        el.addEventListener(\"mouseout\", function(e) {\n            for (var i = 0; i < obj.options.number; i++) {\n                el.children[i].classList.remove('jrating-over');\n            }\n        });\n\n        // Change\n        el.change = obj.setValue;\n\n        // Global generic value handler\n        el.val = function(val) {\n            if (val === undefined) {\n                return obj.getValue();\n            } else {\n                obj.setValue(val);\n            }\n        }\n\n        // Reference\n        el.rating = obj;\n    }\n\n    init();\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/search.js\n\n\n\nfunction Search(el, options) {\n    if (el.search) {\n        return el.search;\n    }\n\n    var index =  null;\n\n    var select = function(e) {\n        if (e.target.classList.contains('jsearch_item')) {\n            var element = e.target;\n        } else {\n            var element = e.target.parentNode;\n        }\n\n        obj.selectIndex(element);\n        e.preventDefault();\n    }\n\n    var createList = function(data) {\n        if (typeof(obj.options.onsearch) == 'function') {\n            var ret = obj.options.onsearch(obj, data);\n            if (ret) {\n                data = ret;\n            }\n        }\n\n        // Reset container\n        container.innerHTML = '';\n        // Print results\n        if (! data.length) {\n            // Show container\n            el.style.display = '';\n        } else {\n            // Show container\n            el.style.display = 'block';\n\n            // Show items (only 10)\n            var len = data.length < 11 ? data.length : 10;\n            for (var i = 0; i < len; i++) {\n                if (typeof(data[i]) == 'string') {\n                    var text = data[i];\n                    var value = data[i];\n                } else {\n                    // Legacy\n                    var text = data[i].text;\n                    if (! text && data[i].name) {\n                        text = data[i].name;\n                    }\n                    var value = data[i].value;\n                    if (! value && data[i].id) {\n                        value = data[i].id;\n                    }\n                }\n\n                var div = document.createElement('div');\n                div.setAttribute('data-value', value);\n                div.setAttribute('data-text', text);\n                div.className = 'jsearch_item';\n\n                if (data[i].id) {\n                    div.setAttribute('id', data[i].id)\n                }\n\n                if (obj.options.forceSelect && i == 0) {\n                    div.classList.add('selected');\n                }\n                var img = document.createElement('img');\n                if (data[i].image) {\n                    img.src = data[i].image;\n                } else {\n                    img.style.display = 'none';\n                }\n                div.appendChild(img);\n\n                var item = document.createElement('div');\n                item.innerHTML = text;\n                div.appendChild(item);\n\n                // Append item to the container\n                container.appendChild(div);\n            }\n        }\n    }\n\n    var execute = function(str) {\n        if (str != obj.terms) {\n            // New terms\n            obj.terms = str;\n            // New index\n            if (obj.options.forceSelect) {\n                index = 0;\n            } else {\n                index = null;\n            }\n            // Array or remote search\n            if (Array.isArray(obj.options.data)) {\n                var test = function(o) {\n                    if (typeof(o) == 'string') {\n                        if ((''+o).toLowerCase().search(str.toLowerCase()) >= 0) {\n                            return true;\n                        }\n                    } else {\n                        for (var key in o) {\n                            var value = o[key];\n                            if ((''+value).toLowerCase().search(str.toLowerCase()) >= 0) {\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                }\n\n                var results = obj.options.data.filter(function(item) {\n                    return test(item);\n                });\n\n                // Show items\n                createList(results);\n            } else {\n                // Get remove results\n                ajax({\n                    url: obj.options.data + str,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function(data) {\n                        // Show items\n                        createList(data);\n                    }\n                });\n            }\n        }\n    }\n\n    // Search timer\n    var timer = null;\n\n    // Search methods\n    var obj = function(str) {\n        if (timer) {\n            clearTimeout(timer);\n        }\n        timer = setTimeout(function() {\n            execute(str);\n        }, 500);\n    }\n    if(options.forceSelect === null) {\n        options.forceSelect = true;\n    }\n    obj.options = {\n        data: options.data || null,\n        input: options.input || null,\n        searchByNode: options.searchByNode || null,\n        onselect: options.onselect || null,\n        forceSelect: options.forceSelect,\n        onsearch: options.onsearch || null,\n        onbeforesearch: options.onbeforesearch || null,\n    };\n\n    obj.selectIndex = function(item) {\n        var id = item.getAttribute('id');\n        var text = item.getAttribute('data-text');\n        var value = item.getAttribute('data-value');\n        var image = item.children[0].src || '';\n        // Onselect\n        if (typeof(obj.options.onselect) == 'function') {\n            obj.options.onselect(obj, text, value, id, image);\n        }\n        // Close container\n        obj.close();\n    }\n\n    obj.open = function() {\n        el.style.display = 'block';\n    }\n\n    obj.close = function() {\n        if (timer) {\n            clearTimeout(timer);\n        }\n        // Current terms\n        obj.terms = '';\n        // Remove results\n        container.innerHTML = '';\n        // Hide\n        el.style.display = '';\n    }\n\n    obj.isOpened = function() {\n        return el.style.display ? true : false;\n    }\n\n    obj.keydown = function(e) {\n        if (obj.isOpened()) {\n            if (e.key == 'Enter') {\n                // Enter\n                if (index!==null && container.children[index]) {\n                    obj.selectIndex(container.children[index]);\n                    e.preventDefault();\n                } else {\n                    obj.close();\n                }\n            } else if (e.key === 'ArrowUp') {\n                // Up\n                if (index!==null && container.children[0]) {\n                    container.children[index].classList.remove('selected');\n                    if(!obj.options.forceSelect && index === 0) {\n                        index = null;\n                    } else {\n                        index = Math.max(0, index-1);\n                        container.children[index].classList.add('selected');\n                    }\n                }\n                e.preventDefault();\n            } else if (e.key === 'ArrowDown') {\n                // Down\n                if(index == null) {\n                    index = -1;\n                } else {\n                    container.children[index].classList.remove('selected');\n                }\n                if (index < 9 && container.children[index+1]) {\n                    index++;\n                }\n                container.children[index].classList.add('selected');\n                e.preventDefault();\n            }\n        }\n    }\n\n    obj.keyup = function(e) {\n        if (! obj.options.searchByNode && obj.options.input) {\n            if (obj.options.input.tagName === 'DIV') {\n                var terms = obj.options.input.innerText;\n            } else {\n                var terms = obj.options.input.value;\n            }\n        } else {\n            // Current node\n            var node = helpers.getNode();\n            if (node) {\n                var terms = node.innerText;\n            }\n        }\n\n        if (typeof(obj.options.onbeforesearch) == 'function') {\n            var ret = obj.options.onbeforesearch(obj, terms);\n            if (ret) {\n                terms = ret;\n            } else {\n                if (ret === false) {\n                    // Ignore event\n                    return;\n                }\n            }\n        }\n\n        obj(terms);\n    }\n\n    obj.blur = function(e) {\n        obj.close();\n    }\n\n    // Add events\n    if (obj.options.input) {\n        obj.options.input.addEventListener(\"keyup\", obj.keyup);\n        obj.options.input.addEventListener(\"keydown\", obj.keydown);\n        obj.options.input.addEventListener(\"blur\", obj.blur);\n    }\n\n    // Append element\n    var container = document.createElement('div');\n    container.classList.add('jsearch_container');\n    container.onmousedown = select;\n    el.appendChild(container);\n\n    el.classList.add('jsearch');\n    el.search = obj;\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/slider.js\nfunction Slider(el, options) {\n    var obj = {};\n    obj.options = {};\n    obj.currentImage = null;\n\n    if (options) {\n        obj.options = options;\n    }\n\n    // Focus\n    el.setAttribute('tabindex', '900')\n\n    // Items\n    obj.options.items = [];\n\n    if (! el.classList.contains('jslider')) {\n        el.classList.add('jslider');\n        el.classList.add('unselectable');\n\n        if (obj.options.height) {\n            el.style.minHeight = parseInt(obj.options.height) + 'px';\n        }\n        if (obj.options.width) {\n            el.style.width = parseInt(obj.options.width) + 'px';\n        }\n        if (obj.options.grid) {\n            el.classList.add('jslider-grid');\n            var number = el.children.length;\n            if (number > 4) {\n                el.setAttribute('data-total', number - 4);\n            }\n            el.setAttribute('data-number', (number > 4 ? 4 : number));\n        }\n\n        // Add slider counter\n        var counter = document.createElement('div');\n        counter.classList.add('jslider-counter');\n\n        // Move children inside\n        if (el.children.length > 0) {\n            // Keep children items\n            for (var i = 0; i < el.children.length; i++) {\n                obj.options.items.push(el.children[i]);\n\n                // counter click event\n                var item = document.createElement('div');\n                item.onclick = function() {\n                    var index = Array.prototype.slice.call(counter.children).indexOf(this);\n                    obj.show(obj.currentImage = obj.options.items[index]);\n                }\n                counter.appendChild(item);\n            }\n        }\n        // Add caption\n        var caption = document.createElement('div');\n        caption.className = 'jslider-caption';\n\n        // Add close buttom\n        var controls = document.createElement('div');\n        var close = document.createElement('div');\n        close.className = 'jslider-close';\n        close.innerHTML = '';\n\n        close.onclick = function() {\n            obj.close();\n        }\n        controls.appendChild(caption);\n        controls.appendChild(close);\n    }\n\n    obj.updateCounter = function(index) {\n        for (var i = 0; i < counter.children.length; i ++) {\n            if (counter.children[i].classList.contains('jslider-counter-focus')) {\n                counter.children[i].classList.remove('jslider-counter-focus');\n                break;\n            }\n        }\n        counter.children[index].classList.add('jslider-counter-focus');\n    }\n\n    obj.show = function(target) {\n        if (! target) {\n            var target = el.children[0];\n        }\n\n        // Focus element\n        el.classList.add('jslider-focus');\n        el.classList.remove('jslider-grid');\n        el.appendChild(controls);\n        el.appendChild(counter);\n\n        // Update counter\n        var index = obj.options.items.indexOf(target);\n        obj.updateCounter(index);\n\n        // Remove display\n        for (var i = 0; i < el.children.length; i++) {\n            el.children[i].style.display = '';\n        }\n        target.style.display = 'block';\n\n        // Is there any previous\n        if (target.previousElementSibling) {\n            el.classList.add('jslider-left');\n        } else {\n            el.classList.remove('jslider-left');\n        }\n\n        // Is there any next\n        if (target.nextElementSibling && target.nextElementSibling.tagName == 'IMG') {\n            el.classList.add('jslider-right');\n        } else {\n            el.classList.remove('jslider-right');\n        }\n\n        obj.currentImage = target;\n\n        // Vertical image\n        if (obj.currentImage.offsetHeight > obj.currentImage.offsetWidth) {\n            obj.currentImage.classList.add('jslider-vertical');\n        }\n\n        controls.children[0].innerText = obj.currentImage.getAttribute('title');\n    }\n\n    obj.open = function() {\n        obj.show();\n\n        // Event\n        if (typeof(obj.options.onopen) == 'function') {\n            obj.options.onopen(el);\n        }\n    }\n\n    obj.close = function() {\n        // Remove control classes\n        el.classList.remove('jslider-focus');\n        el.classList.remove('jslider-left');\n        el.classList.remove('jslider-right');\n        // Show as a grid depending on the configuration\n        if (obj.options.grid) {\n            el.classList.add('jslider-grid');\n        }\n        // Remove display\n        for (var i = 0; i < el.children.length; i++) {\n            el.children[i].style.display = '';\n        }\n        // Remove controls from the component\n        counter.remove();\n        controls.remove();\n        // Current image\n        obj.currentImage = null;\n        // Event\n        if (typeof(obj.options.onclose) == 'function') {\n            obj.options.onclose(el);\n        }\n    }\n\n    obj.reset = function() {\n        el.innerHTML = '';\n    }\n\n    obj.next = function() {\n        var nextImage = obj.currentImage.nextElementSibling;\n        if (nextImage && nextImage.tagName === 'IMG') {\n            obj.show(obj.currentImage.nextElementSibling);\n        }\n    }\n\n    obj.prev = function() {\n        if (obj.currentImage.previousElementSibling) {\n            obj.show(obj.currentImage.previousElementSibling);\n        }\n    }\n\n    var mouseUp = function(e) {\n        // Open slider\n        if (e.target.tagName == 'IMG') {\n            obj.show(e.target);\n        } else if (! e.target.classList.contains('jslider-close') && ! (e.target.parentNode.classList.contains('jslider-counter') || e.target.classList.contains('jslider-counter'))){\n            // Arrow controls\n            var offsetX = e.offsetX || e.changedTouches[0].clientX;\n            if (e.target.clientWidth - offsetX < 40) {\n                // Show next image\n                obj.next();\n            } else if (offsetX < 40) {\n                // Show previous image\n                obj.prev();\n            }\n        }\n    }\n\n    if ('ontouchend' in document.documentElement === true) {\n        el.addEventListener('touchend', mouseUp);\n    } else {\n        el.addEventListener('mouseup', mouseUp);\n    }\n\n    // Add global events\n    el.addEventListener(\"swipeleft\", function(e) {\n        obj.next();\n        e.preventDefault();\n        e.stopPropagation();\n    });\n\n    el.addEventListener(\"swiperight\", function(e) {\n        obj.prev();\n        e.preventDefault();\n        e.stopPropagation();\n    });\n\n    el.addEventListener('keydown', function(e) {\n        if (e.which == 27) {\n            obj.close();\n        }\n    });\n\n    el.slider = obj;\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/tags.js\n\n\n\n\nfunction Tags(el, options) {\n    // Redefine configuration\n    if (el.tags) {\n        return el.tags.setOptions(options, true);\n    }\n\n    var obj = { type:'tags' };\n    obj.options = {};\n\n    // Limit\n    var limit = function() {\n        return obj.options.limit && el.children.length >= obj.options.limit ? true : false;\n    }\n\n    // Search helpers\n    var search = null;\n    var searchContainer = null;\n\n    obj.setOptions = function(options, reset) {\n        /**\n         * @typedef {Object} defaults\n         * @property {(string|Array)} value - Initial value of the compontent\n         * @property {number} limit - Max number of tags inside the element\n         * @property {string} search - The URL for suggestions\n         * @property {string} placeholder - The default instruction text on the element\n         * @property {validation} validation - Method to validate the tags\n         * @property {requestCallback} onbeforechange - Method to be execute before any changes on the element\n         * @property {requestCallback} onchange - Method to be execute after any changes on the element\n         * @property {requestCallback} onfocus - Method to be execute when on focus\n         * @property {requestCallback} onblur - Method to be execute when on blur\n         * @property {requestCallback} onload - Method to be execute when the element is loaded\n         */\n        var defaults = {\n            value: '',\n            limit: null,\n            search: null,\n            placeholder: null,\n            validation: null,\n            onbeforepaste: null,\n            onbeforechange: null,\n            onlimit: null,\n            onchange: null,\n            onfocus: null,\n            onblur: null,\n            onload: null,\n        }\n\n        // Loop through though the default configuration\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                if (typeof(obj.options[property]) == 'undefined' || reset === true) {\n                    obj.options[property] = defaults[property];\n                }\n            }\n        }\n\n        // Placeholder\n        if (obj.options.placeholder) {\n            el.setAttribute('data-placeholder', obj.options.placeholder);\n        } else {\n            el.removeAttribute('data-placeholder');\n        }\n        el.placeholder = obj.options.placeholder;\n\n        // Update value\n        obj.setValue(obj.options.value);\n\n        // Validate items\n        filter();\n\n        // Create search box\n        if (obj.options.search) {\n            if (! searchContainer) {\n                searchContainer = document.createElement('div');\n                el.parentNode.insertBefore(searchContainer, el.nextSibling);\n\n                // Create container\n                search = Search(searchContainer, {\n                    data: obj.options.search,\n                    onselect: function(a,b,c) {\n                        obj.selectIndex(b,c);\n                    }\n                });\n            }\n        } else {\n            if (searchContainer) {\n                search = null;\n                searchContainer.remove();\n                searchContainer = null;\n            }\n        }\n\n        return obj;\n    }\n\n    /**\n     * Add a new tag to the element\n     * @param {(?string|Array)} value - The value of the new element\n     */\n    obj.add = function(value, focus) {\n        if (typeof(obj.options.onbeforechange) == 'function') {\n            var ret = obj.options.onbeforechange(el, obj, obj.options.value, value);\n            if (ret === false) {\n                return false;\n            } else {\n                if (ret != null) {\n                    value = ret;\n                }\n            }\n        }\n\n        // Make sure search is closed\n        if (search) {\n            search.close();\n        }\n\n        if (limit()) {\n            if (typeof(obj.options.onlimit) == 'function') {\n                obj.options.onlimit(obj, obj.options.limit);\n            } else {\n                alert(dictionary.translate('You reach the limit number of entries') + ' ' + obj.options.limit);\n            }\n        } else {\n            // Get node\n            var node = helpers.getNode();\n\n            if (node && node.parentNode && node.parentNode.classList.contains('jtags') &&\n                node.nextSibling && (! (node.nextSibling.innerText && node.nextSibling.innerText.trim()))) {\n                div = node.nextSibling;\n            } else {\n                // Remove not used last item\n                if (el.lastChild) {\n                    if (! el.lastChild.innerText.trim()) {\n                        el.removeChild(el.lastChild);\n                    }\n                }\n\n                // Mix argument string or array\n                if (! value || typeof(value) == 'string') {\n                    var div = createElement(value, value, node);\n                } else {\n                    for (var i = 0; i <= value.length; i++) {\n                        if (! limit()) {\n                            if (! value[i] || typeof(value[i]) == 'string') {\n                                var t = value[i] || '';\n                                var v = null;\n                            } else {\n                                var t = value[i].text;\n                                var v = value[i].value;\n                            }\n\n                            // Add element\n                            var div = createElement(t, v);\n                        }\n                    }\n                }\n\n                // Change\n                change();\n            }\n\n            // Place caret\n            if (focus) {\n                setFocus(div);\n            }\n        }\n    }\n\n    obj.setLimit = function(limit) {\n        obj.options.limit = limit;\n        var n = el.children.length - limit;\n        while (el.children.length > limit) {\n            el.removeChild(el.lastChild);\n        }\n    }\n\n    // Remove a item node\n    obj.remove = function(node) {\n        // Remove node\n        node.parentNode.removeChild(node);\n        // Make sure element is not blank\n        if (! el.children.length) {\n            obj.add('', true);\n        } else {\n            change();\n        }\n    }\n\n    /**\n     * Get all tags in the element\n     * @return {Array} data - All tags as an array\n     */\n    obj.getData = function() {\n        var data = [];\n        for (var i = 0; i < el.children.length; i++) {\n            // Get value\n            var text = el.children[i].innerText.replace(\"\\n\", \"\");\n            // Get id\n            var value = el.children[i].getAttribute('data-value');\n            if (! value) {\n                value = text;\n            }\n            // Item\n            if (text || value) {\n                data.push({ text: text, value: value });\n            }\n        }\n        return data;\n    }\n\n    /**\n     * Get the value of one tag. Null for all tags\n     * @param {?number} index - Tag index number. Null for all tags.\n     * @return {string} value - All tags separated by comma\n     */\n    obj.getValue = function(index) {\n        var value = null;\n\n        if (index != null) {\n            // Get one individual value\n            value = el.children[index].getAttribute('data-value');\n            if (! value) {\n                value = el.children[index].innerText.replace(\"\\n\", \"\");\n            }\n        } else {\n            // Get all\n            var data = [];\n            for (var i = 0; i < el.children.length; i++) {\n                value = el.children[i].innerText.replace(\"\\n\", \"\");\n                if (value) {\n                    data.push(obj.getValue(i));\n                }\n            }\n            value = data.join(',');\n        }\n\n        return value;\n    }\n\n    /**\n     * Set the value of the element based on a string separeted by (,|;|\\r\\n)\n     * @param {mixed} value - A string or array object with values\n     */\n    obj.setValue = function(mixed) {\n        if (! mixed) {\n            obj.reset();\n        } else {\n            if (el.value != mixed) {\n                if (Array.isArray(mixed)) {\n                    obj.add(mixed);\n                } else {\n                    // Remove whitespaces\n                    var text = (''+mixed).trim();\n                    // Tags\n                    var data = extractTags(text);\n                    // Reset\n                    el.innerHTML = '';\n                    // Add tags to the element\n                    obj.add(data);\n                }\n            }\n        }\n    }\n\n    /**\n     * Reset the data from the element\n     */\n    obj.reset = function() {\n        // Empty class\n        el.classList.add('jtags-empty');\n        // Empty element\n        el.innerHTML = '<div></div>';\n        // Execute changes\n        change();\n    }\n\n    /**\n     * Verify if all tags in the element are valid\n     * @return {boolean}\n     */\n    obj.isValid = function() {\n        var test = 0;\n        for (var i = 0; i < el.children.length; i++) {\n            if (el.children[i].classList.contains('jtags_error')) {\n                test++;\n            }\n        }\n        return test == 0 ? true : false;\n    }\n\n    /**\n     * Add one element from the suggestions to the element\n     * @param {object} item - Node element in the suggestions container\n     */\n    obj.selectIndex = function(text, value) {\n        var node = helpers.getNode();\n        if (node) {\n            // Append text to the caret\n            node.innerText = text;\n            // Set node id\n            if (value) {\n                node.setAttribute('data-value', value);\n            }\n            // Remove any error\n            node.classList.remove('jtags_error');\n            if (! limit()) {\n                // Add new item\n                obj.add('', true);\n            }\n        }\n    }\n\n    /**\n     * Search for suggestions\n     * @param {object} node - Target node for any suggestions\n     */\n    obj.search = function(node) {\n        // Search for\n        var terms = node.innerText;\n    }\n\n    // Destroy tags element\n    obj.destroy = function() {\n        // Bind events\n        el.removeEventListener('mouseup', tagsMouseUp);\n        el.removeEventListener('keydown', tagsKeyDown);\n        el.removeEventListener('keyup', tagsKeyUp);\n        el.removeEventListener('paste', tagsPaste);\n        el.removeEventListener('focus', tagsFocus);\n        el.removeEventListener('blur', tagsBlur);\n\n        // Remove element\n        el.parentNode.removeChild(el);\n    }\n\n    var setFocus = function(node) {\n        if (el.children.length) {\n            var range = document.createRange();\n            var sel = window.getSelection();\n            if (! node) {\n                var node = el.childNodes[el.childNodes.length-1];\n            }\n            range.setStart(node, node.length)\n            range.collapse(true)\n            sel.removeAllRanges()\n            sel.addRange(range)\n            el.scrollLeft = el.scrollWidth;\n        }\n    }\n\n    var createElement = function(label, value, node) {\n        var div = document.createElement('div');\n        div.innerHTML = label ? label : '';\n        if (value) {\n            div.setAttribute('data-value', value);\n        }\n\n        if (node && node.parentNode.classList.contains('jtags')) {\n            el.insertBefore(div, node.nextSibling);\n        } else {\n            el.appendChild(div);\n        }\n\n        return div;\n    }\n\n    var change = function() {\n        // Value\n        var value = obj.getValue();\n\n        if (value != obj.options.value) {\n            obj.options.value = value;\n            if (typeof(obj.options.onchange) == 'function') {\n                obj.options.onchange(el, obj, obj.options.value);\n            }\n\n            // Lemonade JS\n            if (el.value != obj.options.value) {\n                el.value = obj.options.value;\n                if (typeof(el.oninput) == 'function') {\n                    el.oninput({\n                        type: 'input',\n                        target: el,\n                        value: el.value\n                    });\n                }\n            }\n        }\n\n        filter();\n    }\n\n    /**\n     * Filter tags\n     */\n    var filter = function() {\n        for (var i = 0; i < el.children.length; i++) {\n            if (el.children[i].tagName === 'DIV') {\n                // Create label design\n                if (!obj.getValue(i)) {\n                    el.children[i].classList.remove('jtags_label');\n                } else {\n                    el.children[i].classList.add('jtags_label');\n\n                    // Validation in place\n                    if (typeof (obj.options.validation) == 'function') {\n                        if (obj.getValue(i)) {\n                            if (!obj.options.validation(el.children[i], el.children[i].innerText, el.children[i].getAttribute('data-value'))) {\n                                el.children[i].classList.add('jtags_error');\n                            } else {\n                                el.children[i].classList.remove('jtags_error');\n                            }\n                        } else {\n                            el.children[i].classList.remove('jtags_error');\n                        }\n                    } else {\n                        el.children[i].classList.remove('jtags_error');\n                    }\n                }\n            }\n        }\n\n        isEmpty();\n    }\n\n    var isEmpty = function() {\n        // Can't be empty\n        if (! el.innerText.trim()) {\n            if (! el.children.length || el.children[0].tagName === 'BR') {\n                el.innerHTML = '';\n                setFocus(createElement());\n            }\n        } else {\n            el.classList.remove('jtags-empty');\n        }\n    }\n\n    /**\n     * Extract tags from a string\n     * @param {string} text - Raw string\n     * @return {Array} data - Array with extracted tags\n     */\n    var extractTags = function(text) {\n        /** @type {Array} */\n        var data = [];\n\n        /** @type {string} */\n        var word = '';\n\n        // Remove whitespaces\n        text = text.trim();\n\n        if (text) {\n            for (var i = 0; i < text.length; i++) {\n                if (text[i] == ',' || text[i] == ';' || text[i] == '\\n') {\n                    if (word) {\n                        data.push(word.trim());\n                        word = '';\n                    }\n                } else {\n                    word += text[i];\n                }\n            }\n\n            if (word) {\n                data.push(word);\n            }\n        }\n\n        return data;\n    }\n\n    /** @type {number} */\n    var anchorOffset = 0;\n\n    /**\n     * Processing event keydown on the element\n     * @param e {object}\n     */\n    var tagsKeyDown = function(e) {\n        // Anchoroffset\n        anchorOffset = window.getSelection().anchorOffset;\n\n        // Verify if is empty\n        isEmpty();\n\n        // Comma\n        if (e.key === 'Tab'  || e.key === ';' || e.key === ',') {\n            var n = window.getSelection().anchorOffset;\n            if (n > 1) {\n                if (limit()) {\n                    if (typeof(obj.options.onlimit) == 'function') {\n                        obj.options.onlimit(obj, obj.options.limit)\n                    }\n                } else {\n                    obj.add('', true);\n                }\n            }\n            e.preventDefault();\n        } else if (e.key == 'Enter') {\n            if (! search || ! search.isOpened()) {\n                var n = window.getSelection().anchorOffset;\n                if (n > 1) {\n                    if (! limit()) {\n                        obj.add('', true);\n                    }\n                }\n                e.preventDefault();\n            }\n        } else if (e.key == 'Backspace') {\n            // Back space - do not let last item to be removed\n            if (el.children.length == 1 && window.getSelection().anchorOffset < 1) {\n                e.preventDefault();\n            }\n        }\n\n        // Search events\n        if (search) {\n            search.keydown(e);\n        }\n\n        // Verify if is empty\n        isEmpty();\n    }\n\n    /**\n     * Processing event keyup on the element\n     * @param e {object}\n     */\n    var tagsKeyUp = function(e) {\n        if (e.which == 39) {\n            // Right arrow\n            var n = window.getSelection().anchorOffset;\n            if (n > 1 && n == anchorOffset) {\n                obj.add('', true);\n            }\n        } else if (e.which == 13 || e.which == 38 || e.which == 40) {\n            e.preventDefault();\n        } else {\n            if (search) {\n                search.keyup(e);\n            }\n        }\n\n        filter();\n    }\n\n    /**\n     * Processing event paste on the element\n     * @param e {object}\n     */\n    var tagsPaste =  function(e) {\n        if (e.clipboardData || e.originalEvent.clipboardData) {\n            var text = (e.originalEvent || e).clipboardData.getData('text/plain');\n        } else if (window.clipboardData) {\n            var text = window.clipboardData.getData('Text');\n        }\n\n        var data = extractTags(text);\n\n        if (typeof(obj.options.onbeforepaste) == 'function') {\n            var ret = obj.options.onbeforepaste(el, obj, data);\n            if (ret === false) {\n                e.preventDefault();\n                return false;\n            } else {\n                if (ret) {\n                    data = ret;\n                }\n            }\n        }\n\n        if (data.length > 1) {\n            obj.add(data, true);\n            e.preventDefault();\n        } else if (data[0]) {\n            document.execCommand('insertText', false, data[0])\n            e.preventDefault();\n        }\n    }\n\n    /**\n     * Processing event mouseup on the element\n     * @param e {object}\n     */\n    var tagsMouseUp = function(e) {\n        if (e.target.parentNode && e.target.parentNode.classList.contains('jtags')) {\n            if (e.target.classList.contains('jtags_label') || e.target.classList.contains('jtags_error')) {\n                var rect = e.target.getBoundingClientRect();\n                if (rect.width - (e.clientX - rect.left) < 16) {\n                    obj.remove(e.target);\n                }\n            }\n        }\n\n        // Set focus in the last item\n        if (e.target == el) {\n            setFocus();\n        }\n    }\n\n    var tagsFocus = function() {\n        if (! el.classList.contains('jtags-focus')) {\n            if (! el.children.length || obj.getValue(el.children.length - 1)) {\n                if (! limit()) {\n                    createElement('');\n                }\n            }\n\n            if (typeof(obj.options.onfocus) == 'function') {\n                obj.options.onfocus(el, obj, obj.getValue());\n            }\n\n            el.classList.add('jtags-focus');\n        }\n    }\n\n    var tagsBlur = function() {\n        if (el.classList.contains('jtags-focus')) {\n            if (search) {\n                search.close();\n            }\n\n            for (var i = 0; i < el.children.length - 1; i++) {\n                // Create label design\n                if (! obj.getValue(i)) {\n                    el.removeChild(el.children[i]);\n                }\n            }\n\n            change();\n\n            el.classList.remove('jtags-focus');\n\n            if (typeof(obj.options.onblur) == 'function') {\n                obj.options.onblur(el, obj, obj.getValue());\n            }\n        }\n    }\n\n    var init = function() {\n        // Bind events\n        if ('touchend' in document.documentElement === true) {\n            el.addEventListener('touchend', tagsMouseUp);\n        } else {\n            el.addEventListener('mouseup', tagsMouseUp);\n        }\n\n        el.addEventListener('keydown', tagsKeyDown);\n        el.addEventListener('keyup', tagsKeyUp);\n        el.addEventListener('paste', tagsPaste);\n        el.addEventListener('focus', tagsFocus);\n        el.addEventListener('blur', tagsBlur);\n\n        // Editable\n        el.setAttribute('contenteditable', true);\n\n        // Prepare container\n        el.classList.add('jtags');\n\n        // Initial options\n        obj.setOptions(options);\n\n        if (typeof(obj.options.onload) == 'function') {\n            obj.options.onload(el, obj);\n        }\n\n        // Change methods\n        el.change = obj.setValue;\n\n        // Global generic value handler\n        el.val = function(val) {\n            if (val === undefined) {\n                return obj.getValue();\n            } else {\n                obj.setValue(val);\n            }\n        }\n\n        el.tags = obj;\n    }\n\n    init();\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/upload.js\n\n\n\n\nfunction Upload(el, options) {\n    var obj = {};\n    obj.options = {};\n\n    // Default configuration\n    var defaults = {\n        type: 'image',\n        extension: '*',\n        input: false,\n        minWidth: false,\n        maxWidth: null,\n        maxHeight: null,\n        maxJpegSizeBytes: null, // For example, 350Kb would be 350000\n        onchange: null,\n        multiple: false,\n        remoteParser: null,\n    };\n\n    // Loop through our object\n    for (var property in defaults) {\n        if (options && options.hasOwnProperty(property)) {\n            obj.options[property] = options[property];\n        } else {\n            obj.options[property] = defaults[property];\n        }\n    }\n\n    // Multiple\n    if (obj.options.multiple == true) {\n        el.setAttribute('data-multiple', true);\n    }\n\n    // Container\n    el.content = [];\n\n    // Upload icon\n    el.classList.add('jupload');\n\n    if (obj.options.input == true) {\n        el.classList.add('input');\n    }\n\n    obj.add = function(data) {\n        // Reset container for single files\n        if (obj.options.multiple == false) {\n            el.content = [];\n            el.innerText = '';\n        }\n\n        // Append to the element\n        if (obj.options.type == 'image') {\n            var img = document.createElement('img');\n            img.setAttribute('src', data.file);\n            img.setAttribute('tabindex', -1);\n            if (! el.getAttribute('name')) {\n                img.className = 'jfile';\n                img.content = data;\n            }\n            el.appendChild(img);\n        } else {\n            if (data.name) {\n                var name = data.name;\n            } else {\n                var name = data.file;\n            }\n            var div = document.createElement('div');\n            div.innerText = name || obj.options.type;\n            div.classList.add('jupload-item');\n            div.setAttribute('tabindex', -1);\n            el.appendChild(div);\n        }\n\n        if (data.content) {\n            data.file = helpers.guid();\n        }\n\n        // Push content\n        el.content.push(data);\n\n        // Onchange\n        if (typeof(obj.options.onchange) == 'function') {\n            obj.options.onchange(el, data);\n        }\n    }\n\n    obj.addFromFile = function(file) {\n        var type = file.type.split('/');\n        if (type[0] == obj.options.type) {\n            var readFile = new FileReader();\n            readFile.addEventListener(\"load\", function (v) {\n                var data = {\n                    file: v.srcElement.result,\n                    extension: file.name.substr(file.name.lastIndexOf('.') + 1),\n                    name: file.name,\n                    size: file.size,\n                    lastmodified: file.lastModified,\n                    content: v.srcElement.result,\n                }\n\n                obj.add(data);\n            });\n\n            readFile.readAsDataURL(file);\n        } else {\n            alert(dictionary.translate('This extension is not allowed'));\n        }\n    }\n\n    obj.addFromUrl = function(src) {\n        if (src.substr(0,4) != 'data' && ! obj.options.remoteParser) {\n            console.error('remoteParser not defined in your initialization');\n        } else {\n            // This is to process cross domain images\n            if (src.substr(0,4) == 'data') {\n                var extension = src.split(';')\n                extension = extension[0].split('/');\n                var type = extension[0].replace('data:','');\n                if (type == obj.options.type) {\n                    var data = {\n                        file: src,\n                        name: '',\n                        extension: extension[1],\n                        content: src,\n                    }\n                    obj.add(data);\n                } else {\n                    alert(obj.options.text.extensionNotAllowed);\n                }\n            } else {\n                var extension = src.substr(src.lastIndexOf('.') + 1);\n                // Work for cross browsers\n                src = obj.options.remoteParser + src;\n                // Get remove content\n                ajax({\n                    url: src,\n                    type: 'GET',\n                    dataType: 'blob',\n                    success: function(data) {\n                        //add(extension[0].replace('data:',''), data);\n                    }\n                })\n            }\n        }\n    }\n\n    var getDataURL = function(canvas, type) {\n        var compression = 0.92;\n        var lastContentLength = null;\n        var content = canvas.toDataURL(type, compression);\n        while (obj.options.maxJpegSizeBytes && type === 'image/jpeg' &&\n               content.length > obj.options.maxJpegSizeBytes && content.length !== lastContentLength) {\n            // Apply the compression\n            compression *= 0.9;\n            lastContentLength = content.length;\n            content = canvas.toDataURL(type, compression);\n        }\n        return content;\n    }\n\n    var mime = obj.options.type + '/' + obj.options.extension;\n    var input = document.createElement('input');\n    input.type = 'file';\n    input.setAttribute('accept', mime);\n    input.onchange = function() {\n        for (var i = 0; i < this.files.length; i++) {\n            obj.addFromFile(this.files[i]);\n        }\n    }\n\n    // Allow multiple files\n    if (obj.options.multiple == true) {\n        input.setAttribute('multiple', true);\n    }\n\n    var current = null;\n\n    el.addEventListener(\"click\", function(e) {\n        current = null;\n        if (! el.children.length || e.target === el) {\n            helpers.click(input);\n        } else {\n            if (e.target.parentNode == el) {\n                current = e.target;\n            }\n        }\n    });\n\n    el.addEventListener(\"dblclick\", function(e) {\n        helpers.click(input);\n    });\n\n    el.addEventListener('dragenter', function(e) {\n        el.style.border = '1px dashed #000';\n    });\n\n    el.addEventListener('dragleave', function(e) {\n        el.style.border = '1px solid #eee';\n    });\n\n    el.addEventListener('dragstop', function(e) {\n        el.style.border = '1px solid #eee';\n    });\n\n    el.addEventListener('dragover', function(e) {\n        e.preventDefault();\n    });\n\n    el.addEventListener('keydown', function(e) {\n        if (current && e.which == 46) {\n            var index = Array.prototype.indexOf.call(el.children, current);\n            if (index >= 0) {\n                el.content.splice(index, 1);\n                current.remove();\n                current = null;\n            }\n        }\n    });\n\n    el.addEventListener('drop', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        var html = (e.originalEvent || e).dataTransfer.getData('text/html');\n        var file = (e.originalEvent || e).dataTransfer.files;\n\n        if (file.length) {\n            for (var i = 0; i < e.dataTransfer.files.length; i++) {\n                obj.addFromFile(e.dataTransfer.files[i]);\n            }\n        } else if (html) {\n            if (obj.options.multiple == false) {\n                el.innerText = '';\n            }\n\n            // Create temp element\n            var div = document.createElement('div');\n            div.innerHTML = html;\n\n            // Extract images\n            var img = div.querySelectorAll('img');\n\n            if (img.length) {\n                for (var i = 0; i < img.length; i++) {\n                    obj.addFromUrl(img[i].src);\n                }\n            }\n        }\n\n        el.style.border = '1px solid #eee';\n\n        return false;\n    });\n\n    el.val = function(val) {\n        if (val === undefined) {\n            return el.content && el.content.length ? el.content : null;\n        } else {\n            // Reset\n            el.innerText = '';\n            el.content = [];\n\n            if (val) {\n                if (Array.isArray(val)) {\n                    for (var i = 0; i < val.length; i++) {\n                        if (typeof(val[i]) == 'string') {\n                            obj.add({ file: val[i] });\n                        } else {\n                            obj.add(val[i]);\n                        }\n                    }\n                } else if (typeof(val) == 'string') {\n                    obj.add({ file: val });\n                }\n            }\n        }\n    }\n\n    el.upload = el.image = obj;\n\n    return obj;\n}\n\n// EXTERNAL MODULE: ./packages/sha512/sha512.js\nvar sha512 = __webpack_require__(195);\nvar sha512_default = /*#__PURE__*/__webpack_require__.n(sha512);\n;// CONCATENATED MODULE: ./src/jsuites.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar jSuites = {\n    /** Current version */\n    version: '5.0.0',\n    /** Bind new extensions to Jsuites */\n    setExtensions: function(o) {\n        if (typeof(o) == 'object') {\n            var k = Object.keys(o);\n            for (var i = 0; i < k.length; i++) {\n                jSuites[k[i]] = o[k[i]];\n            }\n        }\n    },\n    // Helpers\n    tracking: Tracking,\n    ...dictionary,\n    ...helpers,\n    path: Path,\n    sorting: Sorting,\n    lazyLoading: LazyLoading,\n    // Plugins\n    ajax: ajax,\n    animation: animation,\n    calendar: calendar,\n    color: Color,\n    contextmenu: contextmenu,\n    dropdown: dropdown,\n    editor: editor,\n    floating: floating,\n    form: plugins_form,\n    mask: mask,\n    modal: modal,\n    notification: notification,\n    palette: palette,\n    picker: Picker,\n    progressbar: Progressbar,\n    rating: Rating,\n    search: Search,\n    slider: Slider,\n    tabs: Tabs,\n    tags: Tags,\n    toolbar: Toolbar,\n    upload: Upload,\n    validations: validations,\n}\n\n// Legacy\njSuites.image = Upload;\njSuites.image.create = function(data) {\n    var img = document.createElement('img');\n    img.setAttribute('src', data.file);\n    img.className = 'jfile';\n    img.setAttribute('tabindex', -1);\n    img.content = data;\n\n    return img;\n}\n\njSuites.tracker = plugins_form;\njSuites.loading = animation.loading;\njSuites.sha512 = (sha512_default());\n\n\n/** Core events */\nvar Events = function() {\n\n    document.jsuitesComponents = [];\n\n    var find = function(DOMElement, component) {\n        if (DOMElement[component.type] && DOMElement[component.type] == component) {\n            return true;\n        }\n        if (DOMElement.component && DOMElement.component == component) {\n            return true;\n        }\n        if (DOMElement.parentNode) {\n            return find(DOMElement.parentNode, component);\n        }\n        return false;\n    }\n\n    var isOpened = function(e) {\n        if (document.jsuitesComponents && document.jsuitesComponents.length > 0) {\n            for (var i = 0; i < document.jsuitesComponents.length; i++) {\n                if (document.jsuitesComponents[i] && ! find(e, document.jsuitesComponents[i])) {\n                    document.jsuitesComponents[i].close();\n                }\n            }\n        }\n    }\n\n    // Width of the border\n    var cornerSize = 15;\n\n    // Current element\n    var element = null;\n\n    // Controllers\n    var editorAction = false;\n\n    // Event state\n    var state = {\n        x: null,\n        y: null,\n    }\n\n    // Tooltip element\n    var tooltip = document.createElement('div')\n    tooltip.classList.add('jtooltip');\n\n    // Events\n    var mouseDown = function(e) {\n        // Check if this is the floating\n        var item = jSuites.findElement(e.target, 'jpanel');\n        // Jfloating found\n        if (item && ! item.classList.contains(\"readonly\")) {\n            // Add focus to the chart container\n            item.focus();\n            // Keep the tracking information\n            var rect = e.target.getBoundingClientRect();\n            editorAction = {\n                e: item,\n                x: e.clientX,\n                y: e.clientY,\n                w: rect.width,\n                h: rect.height,\n                d: item.style.cursor,\n                resizing: item.style.cursor ? true : false,\n                actioned: false,\n            }\n\n            // Make sure width and height styling is OK\n            if (! item.style.width) {\n                item.style.width = rect.width + 'px';\n            }\n\n            if (! item.style.height) {\n                item.style.height = rect.height + 'px';\n            }\n\n            // Remove any selection from the page\n            var s = window.getSelection();\n            if (s.rangeCount) {\n                for (var i = 0; i < s.rangeCount; i++) {\n                    s.removeRange(s.getRangeAt(i));\n                }\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n        } else {\n            // No floating action found\n            editorAction = false;\n        }\n\n        // Verify current components tracking\n        if (e.changedTouches && e.changedTouches[0]) {\n            var x = e.changedTouches[0].clientX;\n            var y = e.changedTouches[0].clientY;\n        } else {\n            var x = e.clientX;\n            var y = e.clientY;\n        }\n\n        // Which component I am clicking\n        var path = e.path || (e.composedPath && e.composedPath());\n\n        // If path available get the first element in the chain\n        if (path) {\n            element = path[0];\n        } else {\n            // Try to guess using the coordinates\n            if (e.target && e.target.shadowRoot) {\n                var d = e.target.shadowRoot;\n            } else {\n                var d = document;\n            }\n            // Get the first target element\n            element = d.elementFromPoint(x, y);\n        }\n\n        isOpened(element);\n    }\n\n    var mouseUp = function(e) {\n        if (editorAction && editorAction.e) {\n            if (typeof(editorAction.e.refresh) == 'function' && state.actioned) {\n                editorAction.e.refresh();\n            }\n            editorAction.e.style.cursor = '';\n        }\n\n        // Reset\n        state = {\n            x: null,\n            y: null,\n        }\n\n        editorAction = false;\n    }\n\n    var mouseMove = function(e) {\n        if (editorAction) {\n            var x = e.clientX || e.pageX;\n            var y = e.clientY || e.pageY;\n\n            // Action on going\n            if (! editorAction.resizing) {\n                if (state.x == null && state.y == null) {\n                    state.x = x;\n                    state.y = y;\n                }\n\n                var dx = x - state.x;\n                var dy = y - state.y;\n                var top = editorAction.e.offsetTop + dy;\n                var left = editorAction.e.offsetLeft + dx;\n\n                // Update position\n                editorAction.e.style.top = top + 'px';\n                editorAction.e.style.left = left + 'px';\n                editorAction.e.style.cursor = \"move\";\n\n                state.x = x;\n                state.y = y;\n\n\n                // Update element\n                if (typeof(editorAction.e.refresh) == 'function') {\n                    state.actioned = true;\n                    editorAction.e.refresh('position', top, left);\n                }\n            } else {\n                var width = null;\n                var height = null;\n\n                if (editorAction.d == 'e-resize' || editorAction.d == 'ne-resize' || editorAction.d == 'se-resize') {\n                    // Update width\n                    width = editorAction.w + (x - editorAction.x);\n                    editorAction.e.style.width = width + 'px';\n\n                    // Update Height\n                    if (e.shiftKey) {\n                        var newHeight = (x - editorAction.x) * (editorAction.h / editorAction.w);\n                        height = editorAction.h + newHeight;\n                        editorAction.e.style.height = height + 'px';\n                    } else {\n                        var newHeight = false;\n                    }\n                }\n\n                if (! newHeight) {\n                    if (editorAction.d == 's-resize' || editorAction.d == 'se-resize' || editorAction.d == 'sw-resize') {\n                        height = editorAction.h + (y - editorAction.y);\n                        editorAction.e.style.height = height + 'px';\n                    }\n                }\n\n                // Update element\n                if (typeof(editorAction.e.refresh) == 'function') {\n                    state.actioned = true;\n                    editorAction.e.refresh('dimensions', width, height);\n                }\n            }\n        } else {\n            // Resizing action\n            var item = jSuites.findElement(e.target, 'jpanel');\n            // Found eligible component\n            if (item) {\n                if (item.getAttribute('tabindex')) {\n                    var rect = item.getBoundingClientRect();\n                    if (e.clientY - rect.top < cornerSize) {\n                        if (rect.width - (e.clientX - rect.left) < cornerSize) {\n                            item.style.cursor = 'ne-resize';\n                        } else if (e.clientX - rect.left < cornerSize) {\n                            item.style.cursor = 'nw-resize';\n                        } else {\n                            item.style.cursor = 'n-resize';\n                        }\n                    } else if (rect.height - (e.clientY - rect.top) < cornerSize) {\n                        if (rect.width - (e.clientX - rect.left) < cornerSize) {\n                            item.style.cursor = 'se-resize';\n                        } else if (e.clientX - rect.left < cornerSize) {\n                            item.style.cursor = 'sw-resize';\n                        } else {\n                            item.style.cursor = 's-resize';\n                        }\n                    } else if (rect.width - (e.clientX - rect.left) < cornerSize) {\n                        item.style.cursor = 'e-resize';\n                    } else if (e.clientX - rect.left < cornerSize) {\n                        item.style.cursor = 'w-resize';\n                    } else {\n                        item.style.cursor = '';\n                    }\n                }\n            }\n        }\n    }\n\n    var mouseOver = function(e) {\n        var message = e.target.getAttribute('data-tooltip');\n        if (message) {\n            // Instructions\n            tooltip.innerText = message;\n\n            // Position\n            if (e.changedTouches && e.changedTouches[0]) {\n                var x = e.changedTouches[0].clientX;\n                var y = e.changedTouches[0].clientY;\n            } else {\n                var x = e.clientX;\n                var y = e.clientY;\n            }\n\n            tooltip.style.top = y + 'px';\n            tooltip.style.left = x + 'px';\n            document.body.appendChild(tooltip);\n        } else if (tooltip.innerText) {\n            tooltip.innerText = '';\n            document.body.removeChild(tooltip);\n        }\n    }\n\n    var dblClick = function(e) {\n        var item = jSuites.findElement(e.target, 'jpanel');\n        if (item && typeof(item.dblclick) == 'function') {\n            // Create edition\n            item.dblclick(e);\n        }\n    }\n\n    var contextMenu = function(e) {\n        var item = document.activeElement;\n        if (item && typeof(item.contextmenu) == 'function') {\n            // Create edition\n            item.contextmenu(e);\n\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        } else {\n            // Search for possible context menus\n            item = jSuites.findElement(e.target, function(o) {\n                return o.tagName && o.getAttribute('aria-contextmenu-id');\n            });\n\n            if (item) {\n                var o = document.querySelector('#' + item);\n                if (! o) {\n                    console.error('JSUITES: contextmenu id not found: ' + item);\n                } else {\n                    o.contextmenu.open(e);\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                }\n            }\n        }\n    }\n\n    var keyDown = function(e) {\n        var item = document.activeElement;\n        if (item) {\n            if (e.key == \"Delete\" && typeof(item.delete) == 'function') {\n                item.delete();\n                e.preventDefault();\n                e.stopImmediatePropagation();\n            }\n        }\n\n        if (document.jsuitesComponents && document.jsuitesComponents.length) {\n            if (item = document.jsuitesComponents[document.jsuitesComponents.length - 1]) {\n                if (e.key == \"Escape\" && typeof(item.isOpened) == 'function' && typeof(item.close) == 'function') {\n                    if (item.isOpened()) {\n                        item.close();\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                    }\n                }\n            }\n        }\n    }\n\n    document.addEventListener('mouseup', mouseUp);\n    document.addEventListener(\"mousedown\", mouseDown);\n    document.addEventListener('mousemove', mouseMove);\n    document.addEventListener('mouseover', mouseOver);\n    document.addEventListener('dblclick', dblClick);\n    document.addEventListener('keydown', keyDown);\n    document.addEventListener('contextmenu', contextMenu);\n}\n\nif (typeof(document) !== \"undefined\" && ! document.jsuitesComponents) {\n    Events();\n}\n\n/* harmony default export */ var jsuites = (jSuites);\n}();\n__webpack_exports__ = __webpack_exports__[\"default\"];\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});", "import dictionary from './utils/dictionary';\nimport tracking from './utils/tracking';\nimport helpers from './utils/helpers';\nimport path from './utils/path';\nimport sorting from './utils/sorting';\nimport lazyLoading from './utils/lazyloading';\n\nimport ajax from './plugins/ajax';\nimport animation from './plugins/animation';\nimport calendar from './plugins/calendar';\nimport color from './plugins/color';\nimport contextmenu from './plugins/contextmenu';\nimport dropdown from './plugins/dropdown';\nimport editor from './plugins/editor';\nimport floating from './plugins/floating';\nimport form from './plugins/form';\nimport mask from './plugins/mask';\nimport modal from './plugins/modal';\nimport notification from './plugins/notification';\nimport palette from './plugins/palette';\nimport picker from './plugins/picker';\nimport progressbar from './plugins/progressbar';\nimport rating from './plugins/rating';\nimport search from './plugins/search';\nimport slider from './plugins/slider';\nimport tabs from './plugins/tabs';\nimport tags from './plugins/tags';\nimport toolbar from './plugins/toolbar';\nimport upload from './plugins/upload';\nimport validations from './plugins/validations';\n\nimport sha512 from '../packages/sha512';\n\nimport './style/core.css';\nimport './style/animation.css';\nimport './style/calendar.css';\nimport './style/color.css';\nimport './style/contextmenu.css';\nimport './style/dropdown.css';\nimport './style/editor.css';\nimport './style/floating.css';\nimport './style/modal.css';\nimport './style/notification.css';\nimport './style/picker.css';\nimport './style/progressbar.css';\nimport './style/rating.css';\nimport './style/search.css';\nimport './style/slider.css';\nimport './style/tabs.css';\nimport './style/tags.css';\nimport './style/toolbar.css';\n\nvar jSuites = {\n    /** Current version */\n    version: '5.0.0',\n    /** Bind new extensions to Jsuites */\n    setExtensions: function(o) {\n        if (typeof(o) == 'object') {\n            var k = Object.keys(o);\n            for (var i = 0; i < k.length; i++) {\n                jSuites[k[i]] = o[k[i]];\n            }\n        }\n    },\n    // Helpers\n    tracking,\n    ...dictionary,\n    ...helpers,\n    path,\n    sorting,\n    lazyLoading,\n    // Plugins\n    ajax,\n    animation,\n    calendar,\n    color,\n    contextmenu,\n    dropdown,\n    editor,\n    floating,\n    form,\n    mask,\n    modal,\n    notification,\n    palette,\n    picker,\n    progressbar,\n    rating,\n    search,\n    slider,\n    tabs,\n    tags,\n    toolbar,\n    upload,\n    validations,\n}\n\n// Legacy\njSuites.image = upload;\njSuites.image.create = function(data) {\n    var img = document.createElement('img');\n    img.setAttribute('src', data.file);\n    img.className = 'jfile';\n    img.setAttribute('tabindex', -1);\n    img.content = data;\n\n    return img;\n}\n\njSuites.tracker = form;\njSuites.loading = animation.loading;\njSuites.sha512 = sha512;\n\n\n/** Core events */\nvar Events = function() {\n\n    document.jsuitesComponents = [];\n\n    var find = function(DOMElement, component) {\n        if (DOMElement[component.type] && DOMElement[component.type] == component) {\n            return true;\n        }\n        if (DOMElement.component && DOMElement.component == component) {\n            return true;\n        }\n        if (DOMElement.parentNode) {\n            return find(DOMElement.parentNode, component);\n        }\n        return false;\n    }\n\n    var isOpened = function(e) {\n        if (document.jsuitesComponents && document.jsuitesComponents.length > 0) {\n            for (var i = 0; i < document.jsuitesComponents.length; i++) {\n                if (document.jsuitesComponents[i] && ! find(e, document.jsuitesComponents[i])) {\n                    document.jsuitesComponents[i].close();\n                }\n            }\n        }\n    }\n\n    // Width of the border\n    var cornerSize = 15;\n\n    // Current element\n    var element = null;\n\n    // Controllers\n    var editorAction = false;\n\n    // Event state\n    var state = {\n        x: null,\n        y: null,\n    }\n\n    // Tooltip element\n    var tooltip = document.createElement('div')\n    tooltip.classList.add('jtooltip');\n\n    // Events\n    var mouseDown = function(e) {\n        // Check if this is the floating\n        var item = jSuites.findElement(e.target, 'jpanel');\n        // Jfloating found\n        if (item && ! item.classList.contains(\"readonly\")) {\n            // Add focus to the chart container\n            item.focus();\n            // Keep the tracking information\n            var rect = e.target.getBoundingClientRect();\n            editorAction = {\n                e: item,\n                x: e.clientX,\n                y: e.clientY,\n                w: rect.width,\n                h: rect.height,\n                d: item.style.cursor,\n                resizing: item.style.cursor ? true : false,\n                actioned: false,\n            }\n\n            // Make sure width and height styling is OK\n            if (! item.style.width) {\n                item.style.width = rect.width + 'px';\n            }\n\n            if (! item.style.height) {\n                item.style.height = rect.height + 'px';\n            }\n\n            // Remove any selection from the page\n            var s = window.getSelection();\n            if (s.rangeCount) {\n                for (var i = 0; i < s.rangeCount; i++) {\n                    s.removeRange(s.getRangeAt(i));\n                }\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n        } else {\n            // No floating action found\n            editorAction = false;\n        }\n\n        // Verify current components tracking\n        if (e.changedTouches && e.changedTouches[0]) {\n            var x = e.changedTouches[0].clientX;\n            var y = e.changedTouches[0].clientY;\n        } else {\n            var x = e.clientX;\n            var y = e.clientY;\n        }\n\n        // Which component I am clicking\n        var path = e.path || (e.composedPath && e.composedPath());\n\n        // If path available get the first element in the chain\n        if (path) {\n            element = path[0];\n        } else {\n            // Try to guess using the coordinates\n            if (e.target && e.target.shadowRoot) {\n                var d = e.target.shadowRoot;\n            } else {\n                var d = document;\n            }\n            // Get the first target element\n            element = d.elementFromPoint(x, y);\n        }\n\n        isOpened(element);\n    }\n\n    var mouseUp = function(e) {\n        if (editorAction && editorAction.e) {\n            if (typeof(editorAction.e.refresh) == 'function' && state.actioned) {\n                editorAction.e.refresh();\n            }\n            editorAction.e.style.cursor = '';\n        }\n\n        // Reset\n        state = {\n            x: null,\n            y: null,\n        }\n\n        editorAction = false;\n    }\n\n    var mouseMove = function(e) {\n        if (editorAction) {\n            var x = e.clientX || e.pageX;\n            var y = e.clientY || e.pageY;\n\n            // Action on going\n            if (! editorAction.resizing) {\n                if (state.x == null && state.y == null) {\n                    state.x = x;\n                    state.y = y;\n                }\n\n                var dx = x - state.x;\n                var dy = y - state.y;\n                var top = editorAction.e.offsetTop + dy;\n                var left = editorAction.e.offsetLeft + dx;\n\n                // Update position\n                editorAction.e.style.top = top + 'px';\n                editorAction.e.style.left = left + 'px';\n                editorAction.e.style.cursor = \"move\";\n\n                state.x = x;\n                state.y = y;\n\n\n                // Update element\n                if (typeof(editorAction.e.refresh) == 'function') {\n                    state.actioned = true;\n                    editorAction.e.refresh('position', top, left);\n                }\n            } else {\n                var width = null;\n                var height = null;\n\n                if (editorAction.d == 'e-resize' || editorAction.d == 'ne-resize' || editorAction.d == 'se-resize') {\n                    // Update width\n                    width = editorAction.w + (x - editorAction.x);\n                    editorAction.e.style.width = width + 'px';\n\n                    // Update Height\n                    if (e.shiftKey) {\n                        var newHeight = (x - editorAction.x) * (editorAction.h / editorAction.w);\n                        height = editorAction.h + newHeight;\n                        editorAction.e.style.height = height + 'px';\n                    } else {\n                        var newHeight = false;\n                    }\n                }\n\n                if (! newHeight) {\n                    if (editorAction.d == 's-resize' || editorAction.d == 'se-resize' || editorAction.d == 'sw-resize') {\n                        height = editorAction.h + (y - editorAction.y);\n                        editorAction.e.style.height = height + 'px';\n                    }\n                }\n\n                // Update element\n                if (typeof(editorAction.e.refresh) == 'function') {\n                    state.actioned = true;\n                    editorAction.e.refresh('dimensions', width, height);\n                }\n            }\n        } else {\n            // Resizing action\n            var item = jSuites.findElement(e.target, 'jpanel');\n            // Found eligible component\n            if (item) {\n                if (item.getAttribute('tabindex')) {\n                    var rect = item.getBoundingClientRect();\n                    if (e.clientY - rect.top < cornerSize) {\n                        if (rect.width - (e.clientX - rect.left) < cornerSize) {\n                            item.style.cursor = 'ne-resize';\n                        } else if (e.clientX - rect.left < cornerSize) {\n                            item.style.cursor = 'nw-resize';\n                        } else {\n                            item.style.cursor = 'n-resize';\n                        }\n                    } else if (rect.height - (e.clientY - rect.top) < cornerSize) {\n                        if (rect.width - (e.clientX - rect.left) < cornerSize) {\n                            item.style.cursor = 'se-resize';\n                        } else if (e.clientX - rect.left < cornerSize) {\n                            item.style.cursor = 'sw-resize';\n                        } else {\n                            item.style.cursor = 's-resize';\n                        }\n                    } else if (rect.width - (e.clientX - rect.left) < cornerSize) {\n                        item.style.cursor = 'e-resize';\n                    } else if (e.clientX - rect.left < cornerSize) {\n                        item.style.cursor = 'w-resize';\n                    } else {\n                        item.style.cursor = '';\n                    }\n                }\n            }\n        }\n    }\n\n    var mouseOver = function(e) {\n        var message = e.target.getAttribute('data-tooltip');\n        if (message) {\n            // Instructions\n            tooltip.innerText = message;\n\n            // Position\n            if (e.changedTouches && e.changedTouches[0]) {\n                var x = e.changedTouches[0].clientX;\n                var y = e.changedTouches[0].clientY;\n            } else {\n                var x = e.clientX;\n                var y = e.clientY;\n            }\n\n            tooltip.style.top = y + 'px';\n            tooltip.style.left = x + 'px';\n            document.body.appendChild(tooltip);\n        } else if (tooltip.innerText) {\n            tooltip.innerText = '';\n            document.body.removeChild(tooltip);\n        }\n    }\n\n    var dblClick = function(e) {\n        var item = jSuites.findElement(e.target, 'jpanel');\n        if (item && typeof(item.dblclick) == 'function') {\n            // Create edition\n            item.dblclick(e);\n        }\n    }\n\n    var contextMenu = function(e) {\n        var item = document.activeElement;\n        if (item && typeof(item.contextmenu) == 'function') {\n            // Create edition\n            item.contextmenu(e);\n\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        } else {\n            // Search for possible context menus\n            item = jSuites.findElement(e.target, function(o) {\n                return o.tagName && o.getAttribute('aria-contextmenu-id');\n            });\n\n            if (item) {\n                var o = document.querySelector('#' + item);\n                if (! o) {\n                    console.error('JSUITES: contextmenu id not found: ' + item);\n                } else {\n                    o.contextmenu.open(e);\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                }\n            }\n        }\n    }\n\n    var keyDown = function(e) {\n        var item = document.activeElement;\n        if (item) {\n            if (e.key == \"Delete\" && typeof(item.delete) == 'function') {\n                item.delete();\n                e.preventDefault();\n                e.stopImmediatePropagation();\n            }\n        }\n\n        if (document.jsuitesComponents && document.jsuitesComponents.length) {\n            if (item = document.jsuitesComponents[document.jsuitesComponents.length - 1]) {\n                if (e.key == \"Escape\" && typeof(item.isOpened) == 'function' && typeof(item.close) == 'function') {\n                    if (item.isOpened()) {\n                        item.close();\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                    }\n                }\n            }\n        }\n    }\n\n    document.addEventListener('mouseup', mouseUp);\n    document.addEventListener(\"mousedown\", mouseDown);\n    document.addEventListener('mousemove', mouseMove);\n    document.addEventListener('mouseover', mouseOver);\n    document.addEventListener('dblclick', dblClick);\n    document.addEventListener('keydown', keyDown);\n    document.addEventListener('contextmenu', contextMenu);\n}\n\nif (typeof(document) !== \"undefined\" && ! document.jsuitesComponents) {\n    Events();\n}\n\nexport default jSuites;", "import Helpers from '../utils/helpers';\nimport Toolbar from './toolbar';\nimport Color from './color';\nimport Ajax from './ajax';\n\nfunction Editor() {\n    var Component = (function(el, options) {\n        // New instance\n        var obj = { type:'editor' };\n        obj.options = {};\n\n        // Default configuration\n        var defaults = {\n            // Load data from a remove location\n            url: null,\n            // Initial HTML content\n            value: '',\n            // Initial snippet\n            snippet: null,\n            // Add toolbar\n            toolbar: true,\n            toolbarOnTop: false,\n            // Website parser is to read websites and images from cross domain\n            remoteParser: null,\n            // Placeholder\n            placeholder: null,\n            // Parse URL\n            filterPaste: true,\n            // Accept drop files\n            dropZone: true,\n            dropAsSnippet: false,\n            acceptImages: true,\n            acceptFiles: false,\n            maxFileSize: 5000000,\n            allowImageResize: true,\n            // Style\n            maxHeight: null,\n            height: null,\n            focus: false,\n            // Events\n            onclick: null,\n            onfocus: null,\n            onblur: null,\n            onload: null,\n            onkeyup: null,\n            onkeydown: null,\n            onchange: null,\n            extensions: null\n        };\n\n        // Loop through our object\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                obj.options[property] = defaults[property];\n            }\n        }\n\n        // Private controllers\n        var editorTimer = null;\n        var editorAction = null;\n        var files = [];\n\n        // Keep the reference for the container\n        obj.el = el;\n\n        if (typeof(obj.options.onclick) == 'function') {\n            el.onclick = function(e) {\n                obj.options.onclick(el, obj, e);\n            }\n        }\n\n        // Prepare container\n        el.classList.add('jeditor-container');\n\n        // Snippet\n        var snippet = document.createElement('div');\n        snippet.className = 'jsnippet';\n        snippet.setAttribute('contenteditable', false);\n\n        // Toolbar\n        var toolbar = document.createElement('div');\n        toolbar.className = 'jeditor-toolbar';\n\n        obj.editor = document.createElement('div');\n        obj.editor.setAttribute('contenteditable', true);\n        obj.editor.setAttribute('spellcheck', false);\n        obj.editor.classList.add('jeditor');\n\n        // Placeholder\n        if (obj.options.placeholder) {\n            obj.editor.setAttribute('data-placeholder', obj.options.placeholder);\n        }\n\n        // Max height\n        if (obj.options.maxHeight || obj.options.height) {\n            obj.editor.style.overflowY = 'auto';\n\n            if (obj.options.maxHeight) {\n                obj.editor.style.maxHeight = obj.options.maxHeight;\n            }\n            if (obj.options.height) {\n                obj.editor.style.height = obj.options.height;\n            }\n        }\n\n        // Set editor initial value\n        if (obj.options.url) {\n            Ajax({\n                url: obj.options.url,\n                dataType: 'html',\n                success: function(result) {\n                    obj.editor.innerHTML = result;\n\n                    Component.setCursor(obj.editor, obj.options.focus == 'initial' ? true : false);\n                }\n            })\n        } else {\n            if (obj.options.value) {\n                obj.editor.innerHTML = obj.options.value;\n            } else {\n                // Create from existing elements\n                for (var i = 0; i < el.children.length; i++) {\n                    obj.editor.appendChild(el.children[i]);\n                }\n            }\n        }\n\n        // Make sure element is empty\n        el.innerHTML = '';\n\n        /**\n         * Onchange event controllers\n         */\n        var change = function(e) {\n            if (typeof(obj.options.onchange) == 'function') {\n                obj.options.onchange(el, obj, e);\n            }\n\n            // Update value\n            obj.options.value = obj.getData();\n\n            // Lemonade JS\n            if (el.value != obj.options.value) {\n                el.value = obj.options.value;\n                if (typeof(el.oninput) == 'function') {\n                    el.oninput({\n                        type: 'input',\n                        target: el,\n                        value: el.value\n                    });\n                }\n            }\n        }\n\n        /**\n         * Extract images from a HTML string\n         */\n        var extractImageFromHtml = function(html) {\n            // Create temp element\n            var div = document.createElement('div');\n            div.innerHTML = html;\n\n            // Extract images\n            var img = div.querySelectorAll('img');\n\n            if (img.length) {\n                for (var i = 0; i < img.length; i++) {\n                    obj.addImage(img[i].src);\n                }\n            }\n        }\n\n        /**\n         * Insert node at caret\n         */\n        var insertNodeAtCaret = function(newNode) {\n            var sel, range;\n\n            if (window.getSelection) {\n                sel = window.getSelection();\n                if (sel.rangeCount) {\n                    range = sel.getRangeAt(0);\n                    var selectedText = range.toString();\n                    range.deleteContents();\n                    range.insertNode(newNode);\n                    // move the cursor after element\n                    range.setStartAfter(newNode);\n                    range.setEndAfter(newNode);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n            }\n        }\n\n        var updateTotalImages = function() {\n            var o = null;\n            if (o = snippet.children[0]) {\n                // Make sure is a grid\n                if (! o.classList.contains('jslider-grid')) {\n                    o.classList.add('jslider-grid');\n                }\n                // Quantify of images\n                var number = o.children.length;\n                // Set the configuration of the grid\n                o.setAttribute('data-number', number > 4 ? 4 : number);\n                // Total of images inside the grid\n                if (number > 4) {\n                    o.setAttribute('data-total', number - 4);\n                } else {\n                    o.removeAttribute('data-total');\n                }\n            }\n        }\n\n        /**\n         * Append image to the snippet\n         */\n        var appendImage = function(image) {\n            if (! snippet.innerHTML) {\n                obj.appendSnippet({});\n            }\n            snippet.children[0].appendChild(image);\n            updateTotalImages();\n        }\n\n        /**\n         * Append snippet\n         * @Param object data\n         */\n        obj.appendSnippet = function(data) {\n            // Reset snippet\n            snippet.innerHTML = '';\n\n            // Attributes\n            var a = [ 'image', 'title', 'description', 'host', 'url' ];\n\n            for (var i = 0; i < a.length; i++) {\n                var div = document.createElement('div');\n                div.className = 'jsnippet-' + a[i];\n                div.setAttribute('data-k', a[i]);\n                snippet.appendChild(div);\n                if (data[a[i]]) {\n                    if (a[i] == 'image') {\n                        if (! Array.isArray(data.image)) {\n                            data.image = [ data.image ];\n                        }\n                        for (var j = 0; j < data.image.length; j++) {\n                            var img = document.createElement('img');\n                            img.src = data.image[j];\n                            div.appendChild(img);\n                        }\n                    } else {\n                        div.innerHTML = data[a[i]];\n                    }\n                }\n            }\n\n            obj.editor.appendChild(document.createElement('br'));\n            obj.editor.appendChild(snippet);\n        }\n\n        /**\n         * Set editor value\n         */\n        obj.setData = function(o) {\n            if (typeof(o) == 'object') {\n                obj.editor.innerHTML = o.content;\n            } else {\n                obj.editor.innerHTML = o;\n            }\n\n            if (obj.options.focus) {\n                Component.setCursor(obj.editor, true);\n            }\n\n            // Reset files container\n            files = [];\n        }\n\n        obj.getFiles = function() {\n            var f = obj.editor.querySelectorAll('.jfile');\n            var d = [];\n            for (var i = 0; i < f.length; i++) {\n                if (files[f[i].src]) {\n                    d.push(files[f[i].src]);\n                }\n            }\n            return d;\n        }\n\n        obj.getText = function() {\n            return obj.editor.innerText;\n        }\n\n        /**\n         * Get editor data\n         */\n        obj.getData = function(json) {\n            if (! json) {\n                var data = obj.editor.innerHTML;\n            } else {\n                var data = {\n                    content : '',\n                }\n\n                // Get snippet\n                if (snippet.innerHTML) {\n                    var index = 0;\n                    data.snippet = {};\n                    for (var i = 0; i < snippet.children.length; i++) {\n                        // Get key from element\n                        var key = snippet.children[i].getAttribute('data-k');\n                        if (key) {\n                            if (key == 'image') {\n                                if (! data.snippet.image) {\n                                    data.snippet.image = [];\n                                }\n                                // Get all images\n                                for (var j = 0; j < snippet.children[i].children.length; j++) {\n                                    data.snippet.image.push(snippet.children[i].children[j].getAttribute('src'))\n                                }\n                            } else {\n                                data.snippet[key] = snippet.children[i].innerHTML;\n                            }\n                        }\n                    }\n                }\n\n                // Get files\n                var f = Object.keys(files);\n                if (f.length) {\n                    data.files = [];\n                    for (var i = 0; i < f.length; i++) {\n                        data.files.push(files[f[i]]);\n                    }\n                }\n\n                // Get content\n                var d = document.createElement('div');\n                d.innerHTML = obj.editor.innerHTML;\n                var s = d.querySelector('.jsnippet');\n                if (s) {\n                    s.remove();\n                }\n\n                var text = d.innerHTML;\n                text = text.replace(/<br>/g, \"\\n\");\n                text = text.replace(/<\\/div>/g, \"<\\/div>\\n\");\n                text = text.replace(/<(?:.|\\n)*?>/gm, \"\");\n                data.content = text.trim();\n\n                // Process extensions\n                processExtensions('getData', data);\n            }\n\n            return data;\n        }\n\n        // Reset\n        obj.reset = function() {\n            obj.editor.innerHTML = '';\n            snippet.innerHTML = '';\n            files = [];\n        }\n\n        obj.addPdf = function(data) {\n            if (data.result.substr(0,4) != 'data') {\n                console.error('Invalid source');\n            } else {\n                var canvas = document.createElement('canvas');\n                canvas.width = 60;\n                canvas.height = 60;\n\n                var img = new Image();\n                var ctx = canvas.getContext('2d');\n                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n                canvas.toBlob(function(blob) {\n                    var newImage = document.createElement('img');\n                    newImage.src = window.URL.createObjectURL(blob);\n                    newImage.title = data.name;\n                    newImage.className = 'jfile pdf';\n\n                    files[newImage.src] = {\n                        file: newImage.src,\n                        extension: 'pdf',\n                        content: data.result,\n                    }\n\n                    //insertNodeAtCaret(newImage);\n                    document.execCommand('insertHtml', false, newImage.outerHTML);\n                });\n            }\n        }\n\n        obj.addImage = function(src, asSnippet) {\n            if (! src) {\n                src = '';\n            }\n\n            if (src.substr(0,4) != 'data' && ! obj.options.remoteParser) {\n                console.error('remoteParser not defined in your initialization');\n            } else {\n                // This is to process cross domain images\n                if (src.substr(0,4) == 'data') {\n                    var extension = src.split(';')\n                    extension = extension[0].split('/');\n                    extension = extension[1];\n                } else {\n                    var extension = src.substr(src.lastIndexOf('.') + 1);\n                    // Work for cross browsers\n                    src = obj.options.remoteParser + src;\n                }\n\n                var img = new Image();\n\n                img.onload = function onload() {\n                    var canvas = document.createElement('canvas');\n                    canvas.width = img.width;\n                    canvas.height = img.height;\n\n                    var ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n                    canvas.toBlob(function(blob) {\n                        var newImage = document.createElement('img');\n                        newImage.src = window.URL.createObjectURL(blob);\n                        newImage.classList.add('jfile');\n                        newImage.setAttribute('tabindex', '900');\n                        newImage.setAttribute('width', img.width);\n                        newImage.setAttribute('height', img.height);\n                        files[newImage.src] = {\n                            file: newImage.src,\n                            extension: extension,\n                            content: canvas.toDataURL(),\n                        }\n\n                        if (obj.options.dropAsSnippet || asSnippet) {\n                            appendImage(newImage);\n                            // Just to understand the attachment is part of a snippet\n                            files[newImage.src].snippet = true;\n                        } else {\n                            //insertNodeAtCaret(newImage);\n                            document.execCommand('insertHtml', false, newImage.outerHTML);\n                        }\n\n                        change();\n                    });\n                };\n\n                img.src = src;\n            }\n        }\n\n        obj.addFile = function(files) {\n            var reader = [];\n\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].size > obj.options.maxFileSize) {\n                    alert('The file is too big');\n                } else {\n                    // Only PDF or Images\n                    var type = files[i].type.split('/');\n\n                    if (type[0] == 'image') {\n                        type = 1;\n                    } else if (type[1] == 'pdf') {\n                        type = 2;\n                    } else {\n                        type = 0;\n                    }\n\n                    if (type) {\n                        // Create file\n                        reader[i] = new FileReader();\n                        reader[i].index = i;\n                        reader[i].type = type;\n                        reader[i].name = files[i].name;\n                        reader[i].date = files[i].lastModified;\n                        reader[i].size = files[i].size;\n                        reader[i].addEventListener(\"load\", function (data) {\n                            // Get result\n                            if (data.target.type == 2) {\n                                if (obj.options.acceptFiles == true) {\n                                    obj.addPdf(data.target);\n                                }\n                            } else {\n                                obj.addImage(data.target.result);\n                            }\n                        }, false);\n\n                        reader[i].readAsDataURL(files[i])\n                    } else {\n                        alert('The extension is not allowed');\n                    }\n                }\n            }\n        }\n\n        // Destroy\n        obj.destroy = function() {\n            obj.editor.removeEventListener('mouseup', editorMouseUp);\n            obj.editor.removeEventListener('mousedown', editorMouseDown);\n            obj.editor.removeEventListener('mousemove', editorMouseMove);\n            obj.editor.removeEventListener('keyup', editorKeyUp);\n            obj.editor.removeEventListener('keydown', editorKeyDown);\n            obj.editor.removeEventListener('dragstart', editorDragStart);\n            obj.editor.removeEventListener('dragenter', editorDragEnter);\n            obj.editor.removeEventListener('dragover', editorDragOver);\n            obj.editor.removeEventListener('drop', editorDrop);\n            obj.editor.removeEventListener('paste', editorPaste);\n            obj.editor.removeEventListener('blur', editorBlur);\n            obj.editor.removeEventListener('focus', editorFocus);\n\n            el.editor = null;\n            el.classList.remove('jeditor-container');\n\n            toolbar.remove();\n            snippet.remove();\n            obj.editor.remove();\n        }\n\n        obj.upload = function() {\n            Helpers.click(obj.file);\n        }\n\n        // Elements to be removed\n        var remove = [\n            HTMLUnknownElement,\n            HTMLAudioElement,\n            HTMLEmbedElement,\n            HTMLIFrameElement,\n            HTMLTextAreaElement,\n            HTMLInputElement,\n            HTMLScriptElement\n        ];\n\n        // Valid properties\n        var validProperty = ['width', 'height', 'align', 'border', 'src', 'tabindex'];\n\n        // Valid CSS attributes\n        var validStyle = ['color', 'font-weight', 'font-size', 'background', 'background-color', 'margin'];\n\n        var parse = function(element) {\n           // Remove attributes\n           if (element.attributes && element.attributes.length) {\n               var image = null;\n               var style = null;\n               // Process style attribute\n               var elementStyle = element.getAttribute('style');\n               if (elementStyle) {\n                   style = [];\n                   var t = elementStyle.split(';');\n                   for (var j = 0; j < t.length; j++) {\n                       var v = t[j].trim().split(':');\n                       if (validStyle.indexOf(v[0].trim()) >= 0) {\n                           var k = v.shift();\n                           var v = v.join(':');\n                           style.push(k + ':' + v);\n                       }\n                   }\n               }\n               // Process image\n               if (element.tagName.toUpperCase() == 'IMG') {\n                   if (! obj.options.acceptImages || ! element.src) {\n                       element.parentNode.removeChild(element);\n                   } else {\n                       // Check if is data\n                       element.setAttribute('tabindex', '900');\n                       // Check attributes for persistance\n                       obj.addImage(element.src);\n                   }\n               }\n               // Remove attributes\n               var attr = [];\n               var numAttributes = element.attributes.length - 1;\n               if (numAttributes > 0) {\n                   for (var i = numAttributes; i >= 0 ; i--) {\n                       attr.push(element.attributes[i].name);\n                   }\n                   attr.forEach(function(v) {\n                       if (validProperty.indexOf(v) == -1) {\n                           element.removeAttribute(v);\n                       }\n                   });\n               }\n               element.style = '';\n               // Add valid style\n               if (style && style.length) {\n                   element.setAttribute('style', style.join(';'));\n               }\n           }\n           // Parse children\n           if (element.children.length) {\n               for (var i = 0; i < element.children.length; i++) {\n                   parse(element.children[i]);\n               }\n           }\n\n           if (remove.indexOf(element.constructor) >= 0) {\n               element.remove();\n           }\n        }\n\n        var select = function(e) {\n            var s = window.getSelection()\n            var r = document.createRange();\n            r.selectNode(e);\n            s.addRange(r)\n        }\n\n        var filter = function(data) {\n            if (data) {\n                data = data.replace(new RegExp('<!--(.*?)-->', 'gsi'), '');\n            }\n            var parser = new DOMParser();\n            var d = parser.parseFromString(data, \"text/html\");\n            parse(d);\n            var span = document.createElement('span');\n            span.innerHTML = d.firstChild.innerHTML;\n            return span;\n        }\n\n        var editorPaste = function(e) {\n            if (obj.options.filterPaste == true) {\n                if (e.clipboardData || e.originalEvent.clipboardData) {\n                    var html = (e.originalEvent || e).clipboardData.getData('text/html');\n                    var text = (e.originalEvent || e).clipboardData.getData('text/plain');\n                    var file = (e.originalEvent || e).clipboardData.files\n                } else if (window.clipboardData) {\n                    var html = window.clipboardData.getData('Html');\n                    var text = window.clipboardData.getData('Text');\n                    var file = window.clipboardData.files\n                }\n\n                if (file.length) {\n                    // Paste a image from the clipboard\n                    obj.addFile(file);\n                } else {\n                    if (! html) {\n                        html = text.split('\\r\\n');\n                        if (! e.target.innerText) {\n                            html.map(function(v) {\n                                var d = document.createElement('div');\n                                d.innerText = v;\n                                obj.editor.appendChild(d);\n                            });\n                        } else {\n                            html = html.map(function(v) {\n                                return '<div>' + v + '</div>';\n                            });\n                            document.execCommand('insertHtml', false, html.join(''));\n                        }\n                    } else {\n                        var d = filter(html);\n                        // Paste to the editor\n                        //insertNodeAtCaret(d);\n                        document.execCommand('insertHtml', false, d.innerHTML);\n                    }\n                }\n\n                e.preventDefault();\n            }\n        }\n\n        var editorDragStart = function(e) {\n            if (editorAction && editorAction.e) {\n                e.preventDefault();\n            }\n        }\n\n        var editorDragEnter = function(e) {\n            if (editorAction || obj.options.dropZone == false) {\n                // Do nothing\n            } else {\n                el.classList.add('jeditor-dragging');\n                e.preventDefault();\n            }\n        }\n\n        var editorDragOver = function(e) {\n            if (editorAction || obj.options.dropZone == false) {\n                // Do nothing\n            } else {\n                if (editorTimer) {\n                    clearTimeout(editorTimer);\n                }\n\n                editorTimer = setTimeout(function() {\n                    el.classList.remove('jeditor-dragging');\n                }, 100);\n                e.preventDefault();\n            }\n        }\n\n        var editorDrop = function(e) {\n            if (editorAction || obj.options.dropZone == false) {\n                // Do nothing\n            } else {\n                // Position caret on the drop\n                var range = null;\n                if (document.caretRangeFromPoint) {\n                    range=document.caretRangeFromPoint(e.clientX, e.clientY);\n                } else if (e.rangeParent) {\n                    range=document.createRange();\n                    range.setStart(e.rangeParent,e.rangeOffset);\n                }\n                var sel = window.getSelection();\n                sel.removeAllRanges();\n                sel.addRange(range);\n                sel.anchorNode.parentNode.focus();\n\n                var html = (e.originalEvent || e).dataTransfer.getData('text/html');\n                var text = (e.originalEvent || e).dataTransfer.getData('text/plain');\n                var file = (e.originalEvent || e).dataTransfer.files;\n\n                if (file.length) {\n                    obj.addFile(file);\n                } else if (text) {\n                    extractImageFromHtml(html);\n                }\n\n                el.classList.remove('jeditor-dragging');\n                e.preventDefault();\n            }\n        }\n\n        var editorBlur = function(e) {\n            // Process extensions\n            processExtensions('onevent', e);\n            // Apply changes\n            change(e);\n            // Blur\n            if (typeof(obj.options.onblur) == 'function') {\n                obj.options.onblur(el, obj, e);\n            }\n        }\n\n        var editorFocus = function(e) {\n            // Focus\n            if (typeof(obj.options.onfocus) == 'function') {\n                obj.options.onfocus(el, obj, e);\n            }\n        }\n\n        var editorKeyUp = function(e) {\n            if (! obj.editor.innerHTML) {\n                obj.editor.innerHTML = '<div><br></div>';\n            }\n            if (typeof(obj.options.onkeyup) == 'function') {\n                obj.options.onkeyup(el, obj, e);\n            }\n        }\n\n        var editorKeyDown = function(e) {\n            // Process extensions\n            processExtensions('onevent', e);\n\n            if (e.key == 'Delete') {\n                if (e.target.tagName == 'IMG') {\n                    var parent = e.target.parentNode;\n                    select(e.target);\n                    if (parent.classList.contains('jsnippet-image')) {\n                        updateTotalImages();\n                    }\n                }\n            }\n\n            if (typeof(obj.options.onkeydown) == 'function') {\n                obj.options.onkeydown(el, obj, e);\n            }\n        }\n\n        var editorMouseUp = function(e) {\n            if (editorAction && editorAction.e) {\n                editorAction.e.classList.remove('resizing');\n\n                if (editorAction.e.changed == true) {\n                    var image = editorAction.e.cloneNode()\n                    image.width = parseInt(editorAction.e.style.width) || editorAction.e.getAttribute('width');\n                    image.height = parseInt(editorAction.e.style.height) || editorAction.e.getAttribute('height');\n                    editorAction.e.style.width = '';\n                    editorAction.e.style.height = '';\n                    select(editorAction.e);\n                    document.execCommand('insertHtml', false, image.outerHTML);\n                }\n            }\n\n            editorAction = false;\n        }\n\n        var editorMouseDown = function(e) {\n            var close = function(snippet) {\n                var rect = snippet.getBoundingClientRect();\n                if (rect.width - (e.clientX - rect.left) < 40 && e.clientY - rect.top < 40) {\n                    snippet.innerHTML = '';\n                    snippet.remove();\n                }\n            }\n\n            if (e.target.tagName == 'IMG') {\n                if (e.target.style.cursor) {\n                    var rect = e.target.getBoundingClientRect();\n                    editorAction = {\n                        e: e.target,\n                        x: e.clientX,\n                        y: e.clientY,\n                        w: rect.width,\n                        h: rect.height,\n                        d: e.target.style.cursor,\n                    }\n\n                    if (! e.target.getAttribute('width')) {\n                        e.target.setAttribute('width', rect.width)\n                    }\n\n                    if (! e.target.getAttribute('height')) {\n                        e.target.setAttribute('height', rect.height)\n                    }\n\n                    var s = window.getSelection();\n                    if (s.rangeCount) {\n                        for (var i = 0; i < s.rangeCount; i++) {\n                            s.removeRange(s.getRangeAt(i));\n                        }\n                    }\n\n                    e.target.classList.add('resizing');\n                } else {\n                    editorAction = true;\n                }\n            } else {\n                if (e.target.classList.contains('jsnippet')) {\n                    close(e.target);\n                } else if (e.target.parentNode.classList.contains('jsnippet')) {\n                    close(e.target.parentNode);\n                }\n\n                editorAction = true;\n            }\n        }\n\n        var editorMouseMove = function(e) {\n            if (e.target.tagName == 'IMG' && ! e.target.parentNode.classList.contains('jsnippet-image') && obj.options.allowImageResize == true) {\n                if (e.target.getAttribute('tabindex')) {\n                    var rect = e.target.getBoundingClientRect();\n                    if (e.clientY - rect.top < 5) {\n                        if (rect.width - (e.clientX - rect.left) < 5) {\n                            e.target.style.cursor = 'ne-resize';\n                        } else if (e.clientX - rect.left < 5) {\n                            e.target.style.cursor = 'nw-resize';\n                        } else {\n                            e.target.style.cursor = 'n-resize';\n                        }\n                    } else if (rect.height - (e.clientY - rect.top) < 5) {\n                        if (rect.width - (e.clientX - rect.left) < 5) {\n                            e.target.style.cursor = 'se-resize';\n                        } else if (e.clientX - rect.left < 5) {\n                            e.target.style.cursor = 'sw-resize';\n                        } else {\n                            e.target.style.cursor = 's-resize';\n                        }\n                    } else if (rect.width - (e.clientX - rect.left) < 5) {\n                        e.target.style.cursor = 'e-resize';\n                    } else if (e.clientX - rect.left < 5) {\n                        e.target.style.cursor = 'w-resize';\n                    } else {\n                        e.target.style.cursor = '';\n                    }\n                }\n            }\n\n            // Move\n            if (e.which == 1 && editorAction && editorAction.d) {\n                if (editorAction.d == 'e-resize' || editorAction.d == 'ne-resize' ||  editorAction.d == 'se-resize') {\n                    editorAction.e.style.width = (editorAction.w + (e.clientX - editorAction.x));\n\n                    if (e.shiftKey) {\n                        var newHeight = (e.clientX - editorAction.x) * (editorAction.h / editorAction.w);\n                        editorAction.e.style.height = editorAction.h + newHeight;\n                    } else {\n                        var newHeight =  null;\n                    }\n                }\n\n                if (! newHeight) {\n                    if (editorAction.d == 's-resize' || editorAction.d == 'se-resize' || editorAction.d == 'sw-resize') {\n                        if (! e.shiftKey) {\n                            editorAction.e.style.height = editorAction.h + (e.clientY - editorAction.y);\n                        }\n                    }\n                }\n\n                editorAction.e.changed = true;\n            }\n        }\n\n        var processExtensions = function(method, data) {\n            if (obj.options.extensions) {\n                var ext = Object.keys(obj.options.extensions);\n                if (ext.length) {\n                    for (var i = 0; i < ext.length; i++)\n                        if (obj.options.extensions[ext[i]] && typeof(obj.options.extensions[ext[i]][method]) == 'function') {\n                            obj.options.extensions[ext[i]][method].call(obj, data);\n                        }\n                }\n            }\n        }\n\n        var loadExtensions = function() {\n            if (obj.options.extensions) {\n                var ext = Object.keys(obj.options.extensions);\n                if (ext.length) {\n                    for (var i = 0; i < ext.length; i++) {\n                        if (obj.options.extensions[ext[i]] && typeof (obj.options.extensions[ext[i]]) == 'function') {\n                            obj.options.extensions[ext[i]] = obj.options.extensions[ext[i]](el, obj);\n                        }\n                    }\n                }\n            }\n        }\n\n        document.addEventListener('mouseup', editorMouseUp);\n        document.addEventListener('mousemove', editorMouseMove);\n        obj.editor.addEventListener('mousedown', editorMouseDown);\n        obj.editor.addEventListener('keyup', editorKeyUp);\n        obj.editor.addEventListener('keydown', editorKeyDown);\n        obj.editor.addEventListener('dragstart', editorDragStart);\n        obj.editor.addEventListener('dragenter', editorDragEnter);\n        obj.editor.addEventListener('dragover', editorDragOver);\n        obj.editor.addEventListener('drop', editorDrop);\n        obj.editor.addEventListener('paste', editorPaste);\n        obj.editor.addEventListener('focus', editorFocus);\n        obj.editor.addEventListener('blur', editorBlur);\n\n        // Append editor to the container\n        el.appendChild(obj.editor);\n        // Snippet\n        if (obj.options.snippet) {\n            obj.appendSnippet(obj.options.snippet);\n        }\n\n        // Add toolbar\n        if (obj.options.toolbar) {\n            // Default toolbar configuration\n            if (Array.isArray(obj.options.toolbar)) {\n                var toolbarOptions = {\n                    container: true,\n                    responsive: true,\n                    items: obj.options.toolbar\n                }\n            } else if (obj.options.toolbar === true) {\n                var toolbarOptions = {\n                    container: true,\n                    responsive: true,\n                    items: [],\n                }\n            } else {\n                var toolbarOptions = obj.options.toolbar;\n            }\n\n            // Default items\n            if (! (toolbarOptions.items && toolbarOptions.items.length)) {\n                toolbarOptions.items = Component.getDefaultToolbar(obj);\n            }\n\n            if (obj.options.toolbarOnTop) {\n                // Add class\n                el.classList.add('toolbar-on-top');\n                // Append to the DOM\n                el.insertBefore(toolbar, el.firstChild);\n            } else {\n                // Add padding to the editor\n                obj.editor.style.padding = '15px';\n                // Append to the DOM\n                el.appendChild(toolbar);\n            }\n\n            // Create toolbar\n            Toolbar(toolbar, toolbarOptions);\n\n            toolbar.addEventListener('click', function() {\n                obj.editor.focus();\n            })\n        }\n\n        // Upload file\n        obj.file = document.createElement('input');\n        obj.file.style.display = 'none';\n        obj.file.type = 'file';\n        obj.file.setAttribute('accept', 'image/*');\n        obj.file.onchange = function() {\n            obj.addFile(this.files);\n        }\n        el.appendChild(obj.file);\n\n        // Focus to the editor\n        if (obj.editor.innerHTML && obj.options.focus) {\n            Component.setCursor(obj.editor, obj.options.focus == 'initial' ? true : false);\n        }\n\n        // Change method\n        el.change = obj.setData;\n\n        // Global generic value handler\n        el.val = function(val) {\n            if (val === undefined) {\n                // Data type\n                var o = el.getAttribute('data-html') === 'true' ? false : true;\n                return obj.getData(o);\n            } else {\n                obj.setData(val);\n            }\n        }\n\n        loadExtensions();\n\n        el.editor = obj;\n\n        // Onload\n        if (typeof(obj.options.onload) == 'function') {\n            obj.options.onload(el, obj, obj.editor);\n        }\n\n        return obj;\n    });\n\n    Component.setCursor = function(element, first) {\n        element.focus();\n        document.execCommand('selectAll');\n        var sel = window.getSelection();\n        var range = sel.getRangeAt(0);\n        if (first == true) {\n            var node = range.startContainer;\n            var size = 0;\n        } else {\n            var node = range.endContainer;\n            var size = node.length;\n        }\n        range.setStart(node, size);\n        range.setEnd(node, size);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n\n    Component.getDefaultToolbar = function(obj) {\n\n        var color = function(a,b,c) {\n            if (! c.color) {\n                var t = null;\n                var colorPicker = Color(c, {\n                    onchange: function(o, v) {\n                        if (c.k === 'color') {\n                            document.execCommand('foreColor', false, v);\n                        } else {\n                            document.execCommand('backColor', false, v);\n                        }\n                    }\n                });\n                c.color.open();\n            }\n        }\n\n        var items = [];\n\n        items.push({\n            content: 'undo',\n            onclick: function() {\n                document.execCommand('undo');\n            }\n        });\n\n        items.push({\n            content: 'redo',\n            onclick: function() {\n                document.execCommand('redo');\n            }\n        });\n\n        items.push({\n            type: 'divisor'\n        });\n\n        if (obj.options.toolbarOnTop) {\n            items.push({\n                type: 'select',\n                width: '140px',\n                options: ['Default', 'Verdana', 'Arial', 'Courier New'],\n                render: function (e) {\n                    return '<span style=\"font-family:' + e + '\">' + e + '</span>';\n                },\n                onchange: function (a,b,c,d,e) {\n                    document.execCommand(\"fontName\", false, d);\n                }\n            });\n\n            items.push({\n                type: 'select',\n                content: 'format_size',\n                options: ['x-small', 'small', 'medium', 'large', 'x-large'],\n                render: function (e) {\n                    return '<span style=\"font-size:' + e + '\">' + e + '</span>';\n                },\n                onchange: function (a,b,c,d,e) {\n                    //var html = `<span style=\"font-size: ${c}\">${text}</span>`;\n                    //document.execCommand('insertHtml', false, html);\n                    document.execCommand(\"fontSize\", false, parseInt(e)+1);\n                    //var f = window.getSelection().anchorNode.parentNode\n                    //f.removeAttribute(\"size\");\n                    //f.style.fontSize = d;\n                }\n            });\n\n            items.push({\n                type: 'select',\n                options: ['format_align_left', 'format_align_center', 'format_align_right', 'format_align_justify'],\n                render: function (e) {\n                    return '<i class=\"material-icons\">' + e + '</i>';\n                },\n                onchange: function (a,b,c,d,e) {\n                    var options = ['JustifyLeft','justifyCenter','justifyRight','justifyFull'];\n                    document.execCommand(options[e]);\n                }\n            });\n\n            items.push({\n                type: 'divisor'\n            });\n\n            items.push({\n                content: 'format_color_text',\n                k: 'color',\n                onclick: color,\n            });\n\n            items.push({\n                content: 'format_color_fill',\n                k: 'background-color',\n                onclick: color,\n            });\n        }\n\n        items.push({\n            content: 'format_bold',\n            onclick: function(a,b,c) {\n                document.execCommand('bold');\n\n                if (document.queryCommandState(\"bold\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_italic',\n            onclick: function(a,b,c) {\n                document.execCommand('italic');\n\n                if (document.queryCommandState(\"italic\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_underline',\n            onclick: function(a,b,c) {\n                document.execCommand('underline');\n\n                if (document.queryCommandState(\"underline\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            type:'divisor'\n        });\n\n        items.push({\n            content: 'format_list_bulleted',\n            onclick: function(a,b,c) {\n                document.execCommand('insertUnorderedList');\n\n                if (document.queryCommandState(\"insertUnorderedList\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_list_numbered',\n            onclick: function(a,b,c) {\n                document.execCommand('insertOrderedList');\n\n                if (document.queryCommandState(\"insertOrderedList\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_indent_increase',\n            onclick: function(a,b,c) {\n                document.execCommand('indent', true, null);\n\n                if (document.queryCommandState(\"indent\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_indent_decrease',\n            onclick: function() {\n                document.execCommand('outdent');\n\n                if (document.queryCommandState(\"outdent\")) {\n                    this.classList.add('selected');\n                } else {\n                    this.classList.remove('selected');\n                }\n            }\n        });\n\n        if (obj.options.toolbarOnTop) {\n            items.push({\n                type: 'divisor'\n            });\n\n            items.push({\n                content: 'photo',\n                onclick: function () {\n                    obj.upload();\n                }\n            });\n\n            items.push({\n                type: 'select',\n                content: 'table_view',\n                columns: 10,\n                right: true,\n                options: [\n                    '0x0', '1x0', '2x0', '3x0', '4x0', '5x0', '6x0', '7x0', '8x0', '9x0',\n                    '0x1', '1x1', '2x1', '3x1', '4x1', '5x1', '6x1', '7x1', '8x1', '9x1',\n                    '0x2', '1x2', '2x2', '3x2', '4x2', '5x2', '6x2', '7x2', '8x2', '9x2',\n                    '0x3', '1x3', '2x3', '3x3', '4x3', '5x3', '6x3', '7x3', '8x3', '9x3',\n                    '0x4', '1x4', '2x4', '3x4', '4x4', '5x4', '6x4', '7x4', '8x4', '9x4',\n                    '0x5', '1x5', '2x5', '3x5', '4x5', '5x5', '6x5', '7x5', '8x5', '9x5',\n                    '0x6', '1x6', '2x6', '3x6', '4x6', '5x6', '6x6', '7x6', '8x6', '9x6',\n                    '0x7', '1x7', '2x7', '3x7', '4x7', '5x7', '6x7', '7x7', '8x7', '9x7',\n                    '0x8', '1x8', '2x8', '3x8', '4x8', '5x8', '6x8', '7x8', '8x8', '9x8',\n                    '0x9', '1x9', '2x9', '3x9', '4x9', '5x9', '6x9', '7x9', '8x9', '9x9',\n                ],\n                render: function (e, item) {\n                    if (item) {\n                        item.onmouseover = this.onmouseover;\n                        e = e.split('x');\n                        item.setAttribute('data-x', e[0]);\n                        item.setAttribute('data-y', e[1]);\n                    }\n                    var element = document.createElement('div');\n                    item.style.margin = '1px';\n                    item.style.border = '1px solid #ddd';\n                    return element;\n                },\n                onmouseover: function (e) {\n                    var x = parseInt(e.target.getAttribute('data-x'));\n                    var y = parseInt(e.target.getAttribute('data-y'));\n                    for (var i = 0; i < e.target.parentNode.children.length; i++) {\n                        var element = e.target.parentNode.children[i];\n                        var ex = parseInt(element.getAttribute('data-x'));\n                        var ey = parseInt(element.getAttribute('data-y'));\n                        if (ex <= x && ey <= y) {\n                            element.style.backgroundColor = '#cae1fc';\n                            element.style.borderColor = '#2977ff';\n                        } else {\n                            element.style.backgroundColor = '';\n                            element.style.borderColor = '#ddd';\n                        }\n                    }\n                },\n                onchange: function (a, b, c) {\n                    c = c.split('x');\n                    var table = document.createElement('table');\n                    var tbody = document.createElement('tbody');\n                    for (var y = 0; y <= c[1]; y++) {\n                        var tr = document.createElement('tr');\n                        for (var x = 0; x <= c[0]; x++) {\n                            var td = document.createElement('td');\n                            td.innerHTML = '';\n                            tr.appendChild(td);\n                        }\n                        tbody.appendChild(tr);\n                    }\n                    table.appendChild(tbody);\n                    table.setAttribute('width', '100%');\n                    table.setAttribute('cellpadding', '6');\n                    table.setAttribute('cellspacing', '0');\n                    document.execCommand('insertHTML', false, table.outerHTML);\n                }\n            });\n        }\n\n        return items;\n    }\n\n    return Component;\n}\n\nexport default Editor();"], "fixing_code": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jSuites\"] = factory();\n\telse\n\t\troot[\"jSuites\"] = factory();\n})(this, function() {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 195:\n/***/ (function(module) {\n\n/**\n * (c) jSuites Javascript Plugins and Web Components (v4)\n *\n * Website: https://jsuites.net\n * Description: Create amazing web based applications.\n * Plugin: Organogram\n *\n * MIT License\n */\n\n;(function (global, factory) {\n     true ? module.exports = factory() :\n    0;\n}(this, (function () {\n\n    return (function(str) {\n        function int64(msint_32, lsint_32) {\n            this.highOrder = msint_32;\n            this.lowOrder = lsint_32;\n        }\n\n        var H = [new int64(0x6a09e667, 0xf3bcc908), new int64(0xbb67ae85, 0x84caa73b),\n            new int64(0x3c6ef372, 0xfe94f82b), new int64(0xa54ff53a, 0x5f1d36f1),\n            new int64(0x510e527f, 0xade682d1), new int64(0x9b05688c, 0x2b3e6c1f),\n            new int64(0x1f83d9ab, 0xfb41bd6b), new int64(0x5be0cd19, 0x137e2179)];\n\n        var K = [new int64(0x428a2f98, 0xd728ae22), new int64(0x71374491, 0x23ef65cd),\n            new int64(0xb5c0fbcf, 0xec4d3b2f), new int64(0xe9b5dba5, 0x8189dbbc),\n            new int64(0x3956c25b, 0xf348b538), new int64(0x59f111f1, 0xb605d019),\n            new int64(0x923f82a4, 0xaf194f9b), new int64(0xab1c5ed5, 0xda6d8118),\n            new int64(0xd807aa98, 0xa3030242), new int64(0x12835b01, 0x45706fbe),\n            new int64(0x243185be, 0x4ee4b28c), new int64(0x550c7dc3, 0xd5ffb4e2),\n            new int64(0x72be5d74, 0xf27b896f), new int64(0x80deb1fe, 0x3b1696b1),\n            new int64(0x9bdc06a7, 0x25c71235), new int64(0xc19bf174, 0xcf692694),\n            new int64(0xe49b69c1, 0x9ef14ad2), new int64(0xefbe4786, 0x384f25e3),\n            new int64(0x0fc19dc6, 0x8b8cd5b5), new int64(0x240ca1cc, 0x77ac9c65),\n            new int64(0x2de92c6f, 0x592b0275), new int64(0x4a7484aa, 0x6ea6e483),\n            new int64(0x5cb0a9dc, 0xbd41fbd4), new int64(0x76f988da, 0x831153b5),\n            new int64(0x983e5152, 0xee66dfab), new int64(0xa831c66d, 0x2db43210),\n            new int64(0xb00327c8, 0x98fb213f), new int64(0xbf597fc7, 0xbeef0ee4),\n            new int64(0xc6e00bf3, 0x3da88fc2), new int64(0xd5a79147, 0x930aa725),\n            new int64(0x06ca6351, 0xe003826f), new int64(0x14292967, 0x0a0e6e70),\n            new int64(0x27b70a85, 0x46d22ffc), new int64(0x2e1b2138, 0x5c26c926),\n            new int64(0x4d2c6dfc, 0x5ac42aed), new int64(0x53380d13, 0x9d95b3df),\n            new int64(0x650a7354, 0x8baf63de), new int64(0x766a0abb, 0x3c77b2a8),\n            new int64(0x81c2c92e, 0x47edaee6), new int64(0x92722c85, 0x1482353b),\n            new int64(0xa2bfe8a1, 0x4cf10364), new int64(0xa81a664b, 0xbc423001),\n            new int64(0xc24b8b70, 0xd0f89791), new int64(0xc76c51a3, 0x0654be30),\n            new int64(0xd192e819, 0xd6ef5218), new int64(0xd6990624, 0x5565a910),\n            new int64(0xf40e3585, 0x5771202a), new int64(0x106aa070, 0x32bbd1b8),\n            new int64(0x19a4c116, 0xb8d2d0c8), new int64(0x1e376c08, 0x5141ab53),\n            new int64(0x2748774c, 0xdf8eeb99), new int64(0x34b0bcb5, 0xe19b48a8),\n            new int64(0x391c0cb3, 0xc5c95a63), new int64(0x4ed8aa4a, 0xe3418acb),\n            new int64(0x5b9cca4f, 0x7763e373), new int64(0x682e6ff3, 0xd6b2b8a3),\n            new int64(0x748f82ee, 0x5defb2fc), new int64(0x78a5636f, 0x43172f60),\n            new int64(0x84c87814, 0xa1f0ab72), new int64(0x8cc70208, 0x1a6439ec),\n            new int64(0x90befffa, 0x23631e28), new int64(0xa4506ceb, 0xde82bde9),\n            new int64(0xbef9a3f7, 0xb2c67915), new int64(0xc67178f2, 0xe372532b),\n            new int64(0xca273ece, 0xea26619c), new int64(0xd186b8c7, 0x21c0c207),\n            new int64(0xeada7dd6, 0xcde0eb1e), new int64(0xf57d4f7f, 0xee6ed178),\n            new int64(0x06f067aa, 0x72176fba), new int64(0x0a637dc5, 0xa2c898a6),\n            new int64(0x113f9804, 0xbef90dae), new int64(0x1b710b35, 0x131c471b),\n            new int64(0x28db77f5, 0x23047d84), new int64(0x32caab7b, 0x40c72493),\n            new int64(0x3c9ebe0a, 0x15c9bebc), new int64(0x431d67c4, 0x9c100d4c),\n            new int64(0x4cc5d4be, 0xcb3e42b6), new int64(0x597f299c, 0xfc657e2a),\n            new int64(0x5fcb6fab, 0x3ad6faec), new int64(0x6c44198c, 0x4a475817)];\n\n        var W = new Array(64);\n        var a, b, c, d, e, f, g, h, i, j;\n        var T1, T2;\n        var charsize = 8;\n\n        function utf8_encode(str) {\n            return unescape(encodeURIComponent(str));\n        }\n\n        function str2binb(str) {\n            var bin = [];\n            var mask = (1 << charsize) - 1;\n            var len = str.length * charsize;\n\n            for (var i = 0; i < len; i += charsize) {\n                bin[i >> 5] |= (str.charCodeAt(i / charsize) & mask) << (32 - charsize - (i % 32));\n            }\n\n            return bin;\n        }\n\n        function binb2hex(binarray) {\n            var hex_tab = \"0123456789abcdef\";\n            var str = \"\";\n            var length = binarray.length * 4;\n            var srcByte;\n\n            for (var i = 0; i < length; i += 1) {\n                srcByte = binarray[i >> 2] >> ((3 - (i % 4)) * 8);\n                str += hex_tab.charAt((srcByte >> 4) & 0xF) + hex_tab.charAt(srcByte & 0xF);\n            }\n\n            return str;\n        }\n\n        function safe_add_2(x, y) {\n            var lsw, msw, lowOrder, highOrder;\n\n            lsw = (x.lowOrder & 0xFFFF) + (y.lowOrder & 0xFFFF);\n            msw = (x.lowOrder >>> 16) + (y.lowOrder >>> 16) + (lsw >>> 16);\n            lowOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n            lsw = (x.highOrder & 0xFFFF) + (y.highOrder & 0xFFFF) + (msw >>> 16);\n            msw = (x.highOrder >>> 16) + (y.highOrder >>> 16) + (lsw >>> 16);\n            highOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n            return new int64(highOrder, lowOrder);\n        }\n\n        function safe_add_4(a, b, c, d) {\n            var lsw, msw, lowOrder, highOrder;\n\n            lsw = (a.lowOrder & 0xFFFF) + (b.lowOrder & 0xFFFF) + (c.lowOrder & 0xFFFF) + (d.lowOrder & 0xFFFF);\n            msw = (a.lowOrder >>> 16) + (b.lowOrder >>> 16) + (c.lowOrder >>> 16) + (d.lowOrder >>> 16) + (lsw >>> 16);\n            lowOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n            lsw = (a.highOrder & 0xFFFF) + (b.highOrder & 0xFFFF) + (c.highOrder & 0xFFFF) + (d.highOrder & 0xFFFF) + (msw >>> 16);\n            msw = (a.highOrder >>> 16) + (b.highOrder >>> 16) + (c.highOrder >>> 16) + (d.highOrder >>> 16) + (lsw >>> 16);\n            highOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n            return new int64(highOrder, lowOrder);\n        }\n\n        function safe_add_5(a, b, c, d, e) {\n            var lsw, msw, lowOrder, highOrder;\n\n            lsw = (a.lowOrder & 0xFFFF) + (b.lowOrder & 0xFFFF) + (c.lowOrder & 0xFFFF) + (d.lowOrder & 0xFFFF) + (e.lowOrder & 0xFFFF);\n            msw = (a.lowOrder >>> 16) + (b.lowOrder >>> 16) + (c.lowOrder >>> 16) + (d.lowOrder >>> 16) + (e.lowOrder >>> 16) + (lsw >>> 16);\n            lowOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n            lsw = (a.highOrder & 0xFFFF) + (b.highOrder & 0xFFFF) + (c.highOrder & 0xFFFF) + (d.highOrder & 0xFFFF) + (e.highOrder & 0xFFFF) + (msw >>> 16);\n            msw = (a.highOrder >>> 16) + (b.highOrder >>> 16) + (c.highOrder >>> 16) + (d.highOrder >>> 16) + (e.highOrder >>> 16) + (lsw >>> 16);\n            highOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n            return new int64(highOrder, lowOrder);\n        }\n\n        function maj(x, y, z) {\n            return new int64(\n                (x.highOrder & y.highOrder) ^ (x.highOrder & z.highOrder) ^ (y.highOrder & z.highOrder),\n                (x.lowOrder & y.lowOrder) ^ (x.lowOrder & z.lowOrder) ^ (y.lowOrder & z.lowOrder)\n            );\n        }\n\n        function ch(x, y, z) {\n            return new int64(\n                (x.highOrder & y.highOrder) ^ (~x.highOrder & z.highOrder),\n                (x.lowOrder & y.lowOrder) ^ (~x.lowOrder & z.lowOrder)\n            );\n        }\n\n        function rotr(x, n) {\n            if (n <= 32) {\n                return new int64(\n                    (x.highOrder >>> n) | (x.lowOrder << (32 - n)),\n                    (x.lowOrder >>> n) | (x.highOrder << (32 - n))\n                );\n            } else {\n                return new int64(\n                    (x.lowOrder >>> n) | (x.highOrder << (32 - n)),\n                    (x.highOrder >>> n) | (x.lowOrder << (32 - n))\n                );\n            }\n        }\n\n        function sigma0(x) {\n            var rotr28 = rotr(x, 28);\n            var rotr34 = rotr(x, 34);\n            var rotr39 = rotr(x, 39);\n\n            return new int64(\n                rotr28.highOrder ^ rotr34.highOrder ^ rotr39.highOrder,\n                rotr28.lowOrder ^ rotr34.lowOrder ^ rotr39.lowOrder\n            );\n        }\n\n        function sigma1(x) {\n            var rotr14 = rotr(x, 14);\n            var rotr18 = rotr(x, 18);\n            var rotr41 = rotr(x, 41);\n\n            return new int64(\n                rotr14.highOrder ^ rotr18.highOrder ^ rotr41.highOrder,\n                rotr14.lowOrder ^ rotr18.lowOrder ^ rotr41.lowOrder\n            );\n        }\n\n        function gamma0(x) {\n            var rotr1 = rotr(x, 1), rotr8 = rotr(x, 8), shr7 = shr(x, 7);\n\n            return new int64(\n                rotr1.highOrder ^ rotr8.highOrder ^ shr7.highOrder,\n                rotr1.lowOrder ^ rotr8.lowOrder ^ shr7.lowOrder\n            );\n        }\n\n        function gamma1(x) {\n            var rotr19 = rotr(x, 19);\n            var rotr61 = rotr(x, 61);\n            var shr6 = shr(x, 6);\n\n            return new int64(\n                rotr19.highOrder ^ rotr61.highOrder ^ shr6.highOrder,\n                rotr19.lowOrder ^ rotr61.lowOrder ^ shr6.lowOrder\n            );\n        }\n\n        function shr(x, n) {\n            if (n <= 32) {\n                return new int64(\n                    x.highOrder >>> n,\n                    x.lowOrder >>> n | (x.highOrder << (32 - n))\n                );\n            } else {\n                return new int64(\n                    0,\n                    x.highOrder << (32 - n)\n                );\n            }\n        }\n\n        var str = utf8_encode(str);\n        var strlen = str.length*charsize;\n        str = str2binb(str);\n\n        str[strlen >> 5] |= 0x80 << (24 - strlen % 32);\n        str[(((strlen + 128) >> 10) << 5) + 31] = strlen;\n\n        for (var i = 0; i < str.length; i += 32) {\n            a = H[0];\n            b = H[1];\n            c = H[2];\n            d = H[3];\n            e = H[4];\n            f = H[5];\n            g = H[6];\n            h = H[7];\n\n            for (var j = 0; j < 80; j++) {\n                if (j < 16) {\n                    W[j] = new int64(str[j*2 + i], str[j*2 + i + 1]);\n                } else {\n                    W[j] = safe_add_4(gamma1(W[j - 2]), W[j - 7], gamma0(W[j - 15]), W[j - 16]);\n                }\n\n                T1 = safe_add_5(h, sigma1(e), ch(e, f, g), K[j], W[j]);\n                T2 = safe_add_2(sigma0(a), maj(a, b, c));\n                h = g;\n                g = f;\n                f = e;\n                e = safe_add_2(d, T1);\n                d = c;\n                c = b;\n                b = a;\n                a = safe_add_2(T1, T2);\n            }\n\n            H[0] = safe_add_2(a, H[0]);\n            H[1] = safe_add_2(b, H[1]);\n            H[2] = safe_add_2(c, H[2]);\n            H[3] = safe_add_2(d, H[3]);\n            H[4] = safe_add_2(e, H[4]);\n            H[5] = safe_add_2(f, H[5]);\n            H[6] = safe_add_2(g, H[6]);\n            H[7] = safe_add_2(h, H[7]);\n        }\n\n        var binarray = [];\n        for (var i = 0; i < H.length; i++) {\n            binarray.push(H[i].highOrder);\n            binarray.push(H[i].lowOrder);\n        }\n\n        return binb2hex(binarray);\n    });\n\n})));\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t!function() {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = function(module) {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\tfunction() { return module['default']; } :\n/******/ \t\t\t\tfunction() { return module; };\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be in strict mode.\n!function() {\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ jsuites; }\n});\n\n;// CONCATENATED MODULE: ./src/utils/helpers.js\nvar Helpers = {};\n\n// Two digits\nHelpers.two = function(value) {\n    value = '' + value;\n    if (value.length == 1) {\n        value = '0' + value;\n    }\n    return value;\n}\n\nHelpers.focus = function(el) {\n    if (el.innerText.length) {\n        var range = document.createRange();\n        var sel = window.getSelection();\n        var node = el.childNodes[el.childNodes.length-1];\n        range.setStart(node, node.length)\n        range.collapse(true)\n        sel.removeAllRanges()\n        sel.addRange(range)\n        el.scrollLeft = el.scrollWidth;\n    }\n}\n\nHelpers.isNumeric = (function (num) {\n    if (typeof(num) === 'string') {\n        num = num.trim();\n    }\n    return !isNaN(num) && num !== null && num !== '';\n});\n\nHelpers.guid = function() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nHelpers.getNode = function() {\n    var node = document.getSelection().anchorNode;\n    if (node) {\n        return (node.nodeType == 3 ? node.parentNode : node);\n    } else {\n        return null;\n    }\n}\n/**\n * Generate hash from a string\n */\nHelpers.hash = function(str) {\n    var hash = 0, i, chr;\n\n    if (str.length === 0) {\n        return hash;\n    } else {\n        for (i = 0; i < str.length; i++) {\n            chr = str.charCodeAt(i);\n            if (chr > 32) {\n                hash = ((hash << 5) - hash) + chr;\n                hash |= 0;\n            }\n        }\n    }\n    return hash;\n}\n\n/**\n * Generate a random color\n */\nHelpers.randomColor = function(h) {\n    var lum = -0.25;\n    var hex = String('#' + Math.random().toString(16).slice(2, 8).toUpperCase()).replace(/[^0-9a-f]/gi, '');\n    if (hex.length < 6) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    var rgb = [], c, i;\n    for (i = 0; i < 3; i++) {\n        c = parseInt(hex.substr(i * 2, 2), 16);\n        c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\n        rgb.push((\"00\" + c).substr(c.length));\n    }\n\n    // Return hex\n    if (h == true) {\n        return '#' + Helpers.two(rgb[0].toString(16)) + Helpers.two(rgb[1].toString(16)) + Helpers.two(rgb[2].toString(16));\n    }\n\n    return rgb;\n}\n\nHelpers.getWindowWidth = function() {\n    var w = window,\n    d = document,\n    e = d.documentElement,\n    g = d.getElementsByTagName('body')[0],\n    x = w.innerWidth || e.clientWidth || g.clientWidth;\n    return x;\n}\n\nHelpers.getWindowHeight = function() {\n    var w = window,\n    d = document,\n    e = d.documentElement,\n    g = d.getElementsByTagName('body')[0],\n    y = w.innerHeight|| e.clientHeight|| g.clientHeight;\n    return  y;\n}\n\nHelpers.getPosition = function(e) {\n    if (e.changedTouches && e.changedTouches[0]) {\n        var x = e.changedTouches[0].pageX;\n        var y = e.changedTouches[0].pageY;\n    } else {\n        var x = (window.Event) ? e.pageX : e.clientX + (document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft);\n        var y = (window.Event) ? e.pageY : e.clientY + (document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop);\n    }\n\n    return [ x, y ];\n}\n\nHelpers.click = function(el) {\n    if (el.click) {\n        el.click();\n    } else {\n        var evt = new MouseEvent('click', {\n            bubbles: true,\n            cancelable: true,\n            view: window\n        });\n        el.dispatchEvent(evt);\n    }\n}\n\nHelpers.findElement = function(element, condition) {\n    var foundElement = false;\n\n    function path (element) {\n        if (element && ! foundElement) {\n            if (typeof(condition) == 'function') {\n                foundElement = condition(element)\n            } else if (typeof(condition) == 'string') {\n                if (element.classList && element.classList.contains(condition)) {\n                    foundElement = element;\n                }\n            }\n        }\n\n        if (element.parentNode && ! foundElement) {\n            path(element.parentNode);\n        }\n    }\n\n    path(element);\n\n    return foundElement;\n}\n\n/* harmony default export */ var helpers = (Helpers);\n;// CONCATENATED MODULE: ./src/utils/helpers.date.js\n\n\nfunction HelpersDate() {\n    var Component = {};\n\n    Component.now = function (date, dateOnly) {\n        var y = null;\n        var m = null;\n        var d = null;\n        var h = null;\n        var i = null;\n        var s = null;\n\n        if (Array.isArray(date)) {\n            y = date[0];\n            m = date[1];\n            d = date[2];\n            h = date[3];\n            i = date[4];\n            s = date[5];\n        } else {\n            if (! date) {\n                date = new Date();\n            }\n            y = date.getFullYear();\n            m = date.getMonth() + 1;\n            d = date.getDate();\n            h = date.getHours();\n            i = date.getMinutes();\n            s = date.getSeconds();\n        }\n\n        if (dateOnly == true) {\n            return helpers.two(y) + '-' + helpers.two(m) + '-' + helpers.two(d);\n        } else {\n            return helpers.two(y) + '-' + helpers.two(m) + '-' + helpers.two(d) + ' ' + helpers.two(h) + ':' + helpers.two(i) + ':' + helpers.two(s);\n        }\n    }\n\n    Component.toArray = function (value) {\n        var date = value.split(((value.indexOf('T') !== -1) ? 'T' : ' '));\n        var time = date[1];\n        var date = date[0].split('-');\n        var y = parseInt(date[0]);\n        var m = parseInt(date[1]);\n        var d = parseInt(date[2]);\n        var h = 0;\n        var i = 0;\n\n        if (time) {\n            time = time.split(':');\n            h = parseInt(time[0]);\n            i = parseInt(time[1]);\n        }\n        return [y, m, d, h, i, 0];\n    }\n\n    var excelInitialTime = Date.UTC(1900, 0, 0);\n    var excelLeapYearBug = Date.UTC(1900, 1, 29);\n    var millisecondsPerDay = 86400000;\n\n    /**\n     * Date to number\n     */\n    Component.dateToNum = function (jsDate) {\n        if (typeof (jsDate) === 'string') {\n            jsDate = new Date(jsDate + '  GMT+0');\n        }\n        var jsDateInMilliseconds = jsDate.getTime();\n\n        if (jsDateInMilliseconds >= excelLeapYearBug) {\n            jsDateInMilliseconds += millisecondsPerDay;\n        }\n\n        jsDateInMilliseconds -= excelInitialTime;\n\n        return jsDateInMilliseconds / millisecondsPerDay;\n    }\n\n    /**\n     * Number to date\n     *\n     * IMPORTANT: Excel incorrectly considers 1900 to be a leap year\n     */\n    Component.numToDate = function (excelSerialNumber) {\n        var jsDateInMilliseconds = excelInitialTime + excelSerialNumber * millisecondsPerDay;\n\n        if (jsDateInMilliseconds >= excelLeapYearBug) {\n            jsDateInMilliseconds -= millisecondsPerDay;\n        }\n\n        const d = new Date(jsDateInMilliseconds);\n\n        var date = [\n            d.getUTCFullYear(),\n            d.getUTCMonth() + 1,\n            d.getUTCDate(),\n            d.getUTCHours(),\n            d.getUTCMinutes(),\n            d.getUTCSeconds(),\n        ];\n\n        return Component.now(date);\n    }\n\n    // Jsuites calendar labels\n    Component.weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    Component.months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    Component.weekdaysShort = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    Component.monthsShort = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n    return Component;\n}\n\n/* harmony default export */ var helpers_date = (HelpersDate());\n;// CONCATENATED MODULE: ./src/utils/dictionary.js\n\n\n// Update dictionary\nvar setDictionary = function(d) {\n    if (! document.dictionary) {\n        document.dictionary = {}\n    }\n    // Replace the key into the dictionary and append the new ones\n    var t = null;\n    var i = null;\n    var k = Object.keys(d);\n    for (i = 0; i < k.length; i++) {\n        document.dictionary[k[i]] = d[k[i]];\n    }\n\n    // Translations\n    for (i = 0; i < helpers_date.weekdays.length; i++) {\n        t =  translate(helpers_date.weekdays[i]);\n        if (helpers_date.weekdays[i]) {\n            helpers_date.weekdays[i] = t;\n            helpers_date.weekdaysShort[i] = t.substr(0,3);\n        }\n    }\n    for (i = 0; i < helpers_date.months.length; i++) {\n        t = translate(helpers_date.months[i]);\n        if (t) {\n            helpers_date.months[i] = t;\n            helpers_date.monthsShort[i] = t.substr(0,3);\n        }\n    }\n}\n\n// Translate\nvar translate = function(t) {\n    if (typeof(document) !== \"undefined\" && document.dictionary) {\n        return document.dictionary[t] || t;\n    } else {\n        return t;\n    }\n}\n\n\n/* harmony default export */ var dictionary = ({ setDictionary, translate });\n;// CONCATENATED MODULE: ./src/utils/tracking.js\nfunction Tracking(component, state) {\n    if (state == true) {\n        document.jsuitesComponents = document.jsuitesComponents.filter(function(v) {\n            return v !== null;\n        });\n\n        // Start after all events\n        setTimeout(function() {\n            document.jsuitesComponents.push(component);\n        }, 0);\n\n    } else {\n        var index = document.jsuitesComponents.indexOf(component);\n        if (index >= 0) {\n            document.jsuitesComponents.splice(index, 1);\n        }\n    }\n}\n\n;// CONCATENATED MODULE: ./src/utils/path.js\nfunction Path(str, val) {\n    str = str.split('.');\n    if (str.length) {\n        var o = this;\n        var p = null;\n        while (str.length > 1) {\n            // Get the property\n            p = str.shift();\n            // Check if the property exists\n            if (o.hasOwnProperty(p)) {\n                o = o[p];\n            } else {\n                // Property does not exists\n                if (val === undefined) {\n                    return undefined;\n                } else {\n                    // Create the property\n                    o[p] = {};\n                    // Next property\n                    o = o[p];\n                }\n            }\n        }\n        // Get the property\n        p = str.shift();\n        // Set or get the value\n        if (val !== undefined) {\n            o[p] = val;\n            // Success\n            return true;\n        } else {\n            // Return the value\n            if (o) {\n                return o[p];\n            }\n        }\n    }\n    // Something went wrong\n    return false;\n}\n;// CONCATENATED MODULE: ./src/utils/sorting.js\nfunction Sorting(el, options) {\n    var obj = {};\n    obj.options = {};\n\n    var defaults = {\n        pointer: null,\n        direction: null,\n        ondragstart: null,\n        ondragend: null,\n        ondrop: null,\n    }\n\n    var dragElement = null;\n\n    // Loop through the initial configuration\n    for (var property in defaults) {\n        if (options && options.hasOwnProperty(property)) {\n            obj.options[property] = options[property];\n        } else {\n            obj.options[property] = defaults[property];\n        }\n    }\n\n    el.classList.add('jsorting');\n\n    el.addEventListener('dragstart', function(e) {\n        var position = Array.prototype.indexOf.call(e.target.parentNode.children, e.target);\n        dragElement = {\n            element: e.target,\n            o: position,\n            d: position\n        }\n        e.target.style.opacity = '0.25';\n\n        if (typeof(obj.options.ondragstart) == 'function') {\n            obj.options.ondragstart(el, e.target, e);\n        }\n    });\n\n    el.addEventListener('dragover', function(e) {\n        e.preventDefault();\n\n        if (getElement(e.target) && dragElement) {\n            if (e.target.getAttribute('draggable') == 'true' && dragElement.element != e.target) {\n                if (! obj.options.direction) {\n                    var condition = e.target.clientHeight / 2 > e.offsetY;\n                } else {\n                    var condition = e.target.clientWidth / 2 > e.offsetX;\n                }\n\n                if (condition) {\n                    e.target.parentNode.insertBefore(dragElement.element, e.target);\n                } else {\n                    e.target.parentNode.insertBefore(dragElement.element, e.target.nextSibling);\n                }\n\n                dragElement.d = Array.prototype.indexOf.call(e.target.parentNode.children, dragElement.element);\n            }\n        }\n    });\n\n    el.addEventListener('dragleave', function(e) {\n        e.preventDefault();\n    });\n\n    el.addEventListener('dragend', function(e) {\n        e.preventDefault();\n\n        if (dragElement) {\n            if (typeof(obj.options.ondragend) == 'function') {\n                obj.options.ondragend(el, dragElement.element, e);\n            }\n\n            // Cancelled put element to the original position\n            if (dragElement.o < dragElement.d) {\n                e.target.parentNode.insertBefore(dragElement.element, e.target.parentNode.children[dragElement.o]);\n            } else {\n                e.target.parentNode.insertBefore(dragElement.element, e.target.parentNode.children[dragElement.o].nextSibling);\n            }\n\n            dragElement.element.style.opacity = '';\n            dragElement = null;\n        }\n    });\n\n    el.addEventListener('drop', function(e) {\n        e.preventDefault();\n\n        if (dragElement && (dragElement.o != dragElement.d)) {\n            if (typeof(obj.options.ondrop) == 'function') {\n                obj.options.ondrop(el, dragElement.o, dragElement.d, dragElement.element, e.target, e);\n            }\n        }\n\n        dragElement.element.style.opacity = '';\n        dragElement = null;\n    });\n\n    var getElement = function(element) {\n        var sorting = false;\n\n        function path (element) {\n            if (element.className) {\n                if (element.classList.contains('jsorting')) {\n                    sorting = true;\n                }\n            }\n\n            if (! sorting) {\n                path(element.parentNode);\n            }\n        }\n\n        path(element);\n\n        return sorting;\n    }\n\n    for (var i = 0; i < el.children.length; i++) {\n        if (! el.children[i].hasAttribute('draggable')) {\n            el.children[i].setAttribute('draggable', 'true');\n        }\n    }\n\n    el.val = function() {\n        var id = null;\n        var data = [];\n        for (var i = 0; i < el.children.length; i++) {\n            if (id = el.children[i].getAttribute('data-id')) {\n                data.push(id);\n            }\n        }\n        return data;\n    }\n\n    return el;\n}\n;// CONCATENATED MODULE: ./src/utils/lazyloading.js\nfunction LazyLoading(el, options) {\n    var obj = {}\n\n    // Mandatory options\n    if (! options.loadUp || typeof(options.loadUp) != 'function') {\n        options.loadUp = function() {\n            return false;\n        }\n    }\n    if (! options.loadDown || typeof(options.loadDown) != 'function') {\n        options.loadDown = function() {\n            return false;\n        }\n    }\n    // Timer ms\n    if (! options.timer) {\n        options.timer = 100;\n    }\n\n    // Timer\n    var timeControlLoading = null;\n\n    // Controls\n    var scrollControls = function(e) {\n        if (timeControlLoading == null) {\n            var event = false;\n            var scrollTop = el.scrollTop;\n            if (el.scrollTop + (el.clientHeight * 2) >= el.scrollHeight) {\n                if (options.loadDown()) {\n                    if (scrollTop == el.scrollTop) {\n                        el.scrollTop = el.scrollTop - (el.clientHeight);\n                    }\n                    event = true;\n                }\n            } else if (el.scrollTop <= el.clientHeight) {\n                if (options.loadUp()) {\n                    if (scrollTop == el.scrollTop) {\n                        el.scrollTop = el.scrollTop + (el.clientHeight);\n                    }\n                    event = true;\n                }\n            }\n\n            timeControlLoading = setTimeout(function() {\n                timeControlLoading = null;\n            }, options.timer);\n\n            if (event) {\n                if (typeof(options.onupdate) == 'function') {\n                    options.onupdate();\n                }\n            }\n        }\n    }\n\n    // Onscroll\n    el.onscroll = function(e) {\n        scrollControls(e);\n    }\n\n    el.onwheel = function(e) {\n        scrollControls(e);\n    }\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/ajax.js\nfunction Ajax() {\n    var Component = (function(options, complete) {\n        if (Array.isArray(options)) {\n            // Create multiple request controller\n            var multiple = {\n                instance: [],\n                complete: complete,\n            }\n\n            if (options.length > 0) {\n                for (var i = 0; i < options.length; i++) {\n                    options[i].multiple = multiple;\n                    multiple.instance.push(Component(options[i]));\n                }\n            }\n\n            return multiple;\n        }\n\n        if (! options.data) {\n            options.data = {};\n        }\n\n        if (options.type) {\n            options.method = options.type;\n        }\n\n        // Default method\n        if (! options.method) {\n            options.method = 'GET';\n        }\n\n        // Default type\n        if (! options.dataType) {\n            options.dataType = 'json';\n        }\n\n        if (options.data) {\n            // Parse object to variables format\n            var parseData = function (value, key) {\n                var vars = [];\n                if (value) {\n                    var keys = Object.keys(value);\n                    if (keys.length) {\n                        for (var i = 0; i < keys.length; i++) {\n                            if (key) {\n                                var k = key + '[' + keys[i] + ']';\n                            } else {\n                                var k = keys[i];\n                            }\n\n                            if (value[k] instanceof FileList) {\n                                vars[k] = value[keys[i]];\n                            } else if (value[keys[i]] === null || value[keys[i]] === undefined) {\n                                vars[k] = '';\n                            } else if (typeof(value[keys[i]]) == 'object') {\n                                var r = parseData(value[keys[i]], k);\n                                var o = Object.keys(r);\n                                for (var j = 0; j < o.length; j++) {\n                                    vars[o[j]] = r[o[j]];\n                                }\n                            } else {\n                                vars[k] = value[keys[i]];\n                            }\n                        }\n                    }\n                }\n\n                return vars;\n            }\n\n            var d = parseData(options.data);\n            var k = Object.keys(d);\n\n            // Data form\n            if (options.method == 'GET') {\n                if (k.length) {\n                    var data = [];\n                    for (var i = 0; i < k.length; i++) {\n                        data.push(k[i] + '=' + encodeURIComponent(d[k[i]]));\n                    }\n\n                    if (options.url.indexOf('?') < 0) {\n                        options.url += '?';\n                    }\n                    options.url += data.join('&');\n                }\n            } else {\n                var data = new FormData();\n                for (var i = 0; i < k.length; i++) {\n                    if (d[k[i]] instanceof FileList) {\n                        if (d[k[i]].length) {\n                            for (var j = 0; j < d[k[i]].length; j++) {\n                                data.append(k[i], d[k[i]][j], d[k[i]][j].name);\n                            }\n                        }\n                    } else {\n                        data.append(k[i], d[k[i]]);\n                    }\n                }\n            }\n        }\n\n        var httpRequest = new XMLHttpRequest();\n        httpRequest.open(options.method, options.url, true);\n        httpRequest.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n        // Content type\n        if (options.contentType) {\n            httpRequest.setRequestHeader('Content-Type', options.contentType);\n        }\n\n        // Headers\n        if (options.method == 'POST') {\n            httpRequest.setRequestHeader('Accept', 'application/json');\n        } else {\n            if (options.dataType == 'blob') {\n                httpRequest.responseType = \"blob\";\n            } else {\n                if (! options.contentType) {\n                    if (options.dataType == 'json') {\n                        httpRequest.setRequestHeader('Content-Type', 'text/json');\n                    } else if (options.dataType == 'html') {\n                        httpRequest.setRequestHeader('Content-Type', 'text/html');\n                    }\n                }\n            }\n        }\n\n        // No cache\n        if (options.cache != true) {\n            httpRequest.setRequestHeader('pragma', 'no-cache');\n            httpRequest.setRequestHeader('cache-control', 'no-cache');\n        }\n\n        // Authentication\n        if (options.withCredentials == true) {\n            httpRequest.withCredentials = true\n        }\n\n        // Before send\n        if (typeof(options.beforeSend) == 'function') {\n            options.beforeSend(httpRequest);\n        }\n\n        // Before send\n        if (typeof(Component.beforeSend) == 'function') {\n            Component.beforeSend(httpRequest);\n        }\n\n        if (document.ajax && typeof(document.ajax.beforeSend) == 'function') {\n            document.ajax.beforeSend(httpRequest);\n        }\n\n        httpRequest.onload = function() {\n            if (httpRequest.status === 200) {\n                if (options.dataType == 'json') {\n                    try {\n                        var result = JSON.parse(httpRequest.responseText);\n\n                        if (options.success && typeof(options.success) == 'function') {\n                            options.success(result);\n                        }\n                    } catch(err) {\n                        if (options.error && typeof(options.error) == 'function') {\n                            options.error(err, result);\n                        }\n                    }\n                } else {\n                    if (options.dataType == 'blob') {\n                        var result = httpRequest.response;\n                    } else {\n                        var result = httpRequest.responseText;\n                    }\n\n                    if (options.success && typeof(options.success) == 'function') {\n                        options.success(result);\n                    }\n                }\n            } else {\n                if (options.error && typeof(options.error) == 'function') {\n                    options.error(httpRequest.responseText, httpRequest.status);\n                }\n            }\n\n            // Global queue\n            if (Component.queue && Component.queue.length > 0) {\n                Component.send(Component.queue.shift());\n            }\n\n            // Global complete method\n            if (Component.requests && Component.requests.length) {\n                // Get index of this request in the container\n                var index = Component.requests.indexOf(httpRequest);\n                // Remove from the ajax requests container\n                Component.requests.splice(index, 1);\n                // Deprected: Last one?\n                if (! Component.requests.length) {\n                    // Object event\n                    if (options.complete && typeof(options.complete) == 'function') {\n                        options.complete(result);\n                    }\n                }\n                // Group requests\n                if (options.group) {\n                    if (Component.oncomplete && typeof(Component.oncomplete[options.group]) == 'function') {\n                        if (! Component.pending(options.group)) {\n                            Component.oncomplete[options.group]();\n                            Component.oncomplete[options.group] = null;\n                        }\n                    }\n                }\n                // Multiple requests controller\n                if (options.multiple && options.multiple.instance) {\n                    // Get index of this request in the container\n                    var index = options.multiple.instance.indexOf(httpRequest);\n                    // Remove from the ajax requests container\n                    options.multiple.instance.splice(index, 1);\n                    // If this is the last one call method complete\n                    if (! options.multiple.instance.length) {\n                        if (options.multiple.complete && typeof(options.multiple.complete) == 'function') {\n                            options.multiple.complete(result);\n                        }\n                    }\n                }\n            }\n        }\n\n        // Keep the options\n        httpRequest.options = options;\n        // Data\n        httpRequest.data = data;\n\n        // Queue\n        if (options.queue == true && Component.requests.length > 0) {\n            Component.queue.push(httpRequest);\n        } else {\n            Component.send(httpRequest)\n        }\n\n        return httpRequest;\n    });\n\n    Component.send = function(httpRequest) {\n        if (httpRequest.data) {\n            if (Array.isArray(httpRequest.data)) {\n                httpRequest.send(httpRequest.data.join('&'));\n            } else {\n                httpRequest.send(httpRequest.data);\n            }\n        } else {\n            httpRequest.send();\n        }\n\n        Component.requests.push(httpRequest);\n    }\n\n    Component.exists = function(url, __callback) {\n        var http = new XMLHttpRequest();\n        http.open('HEAD', url, false);\n        http.send();\n        if (http.status) {\n            __callback(http.status);\n        }\n    }\n\n    Component.pending = function(group) {\n        var n = 0;\n        var o = Component.requests;\n        if (o && o.length) {\n            for (var i = 0; i < o.length; i++) {\n                if (! group || group == o[i].options.group) {\n                    n++\n                }\n            }\n        }\n        return n;\n    }\n\n    Component.oncomplete = {};\n    Component.requests = [];\n    Component.queue = [];\n\n    return Component\n}\n\n/* harmony default export */ var ajax = (Ajax());\n;// CONCATENATED MODULE: ./src/plugins/animation.js\nfunction Animation() {\n    var Component = {\n        loading: {}\n    }\n    \n    Component.loading.show = function(timeout) {\n        if (! Component.loading.element) {\n            Component.loading.element = document.createElement('div');\n            Component.loading.element.className = 'jloading';\n        }\n        document.body.appendChild(Component.loading.element);\n    \n        // Max timeout in seconds\n        if (timeout > 0) {\n            setTimeout(function() {\n                obj.hide();\n            }, timeout * 1000)\n        }\n    }\n    \n    Component.loading.hide = function() {\n        if (Component.loading.element && Component.loading.element.parentNode) {\n            document.body.removeChild(Component.loading.element);\n        }\n    }\n    \n    Component.slideLeft = function (element, direction, done) {\n        if (direction == true) {\n            element.classList.add('slide-left-in');\n            setTimeout(function () {\n                element.classList.remove('slide-left-in');\n                if (typeof (done) == 'function') {\n                    done();\n                }\n            }, 400);\n        } else {\n            element.classList.add('slide-left-out');\n            setTimeout(function () {\n                element.classList.remove('slide-left-out');\n                if (typeof (done) == 'function') {\n                    done();\n                }\n            }, 400);\n        }\n    }\n    \n    Component.slideRight = function (element, direction, done) {\n        if (direction == true) {\n            element.classList.add('slide-right-in');\n            setTimeout(function () {\n                element.classList.remove('slide-right-in');\n                if (typeof (done) == 'function') {\n                    done();\n                }\n            }, 400);\n        } else {\n            element.classList.add('slide-right-out');\n            setTimeout(function () {\n                element.classList.remove('slide-right-out');\n                if (typeof (done) == 'function') {\n                    done();\n                }\n            }, 400);\n        }\n    }\n    \n    Component.slideTop = function (element, direction, done) {\n        if (direction == true) {\n            element.classList.add('slide-top-in');\n            setTimeout(function () {\n                element.classList.remove('slide-top-in');\n                if (typeof (done) == 'function') {\n                    done();\n                }\n            }, 400);\n        } else {\n            element.classList.add('slide-top-out');\n            setTimeout(function () {\n                element.classList.remove('slide-top-out');\n                if (typeof (done) == 'function') {\n                    done();\n                }\n            }, 400);\n        }\n    }\n    \n    Component.slideBottom = function (element, direction, done) {\n        if (direction == true) {\n            element.classList.add('slide-bottom-in');\n            setTimeout(function () {\n                element.classList.remove('slide-bottom-in');\n                if (typeof (done) == 'function') {\n                    done();\n                }\n            }, 400);\n        } else {\n            element.classList.add('slide-bottom-out');\n            setTimeout(function () {\n                element.classList.remove('slide-bottom-out');\n                if (typeof (done) == 'function') {\n                    done();\n                }\n            }, 100);\n        }\n    }\n    \n    Component.fadeIn = function (element, done) {\n        element.style.display = '';\n        element.classList.add('fade-in');\n        setTimeout(function () {\n            element.classList.remove('fade-in');\n            if (typeof (done) == 'function') {\n                done();\n            }\n        }, 2000);\n    }\n    \n    Component.fadeOut = function (element, done) {\n        element.classList.add('fade-out');\n        setTimeout(function () {\n            element.style.display = 'none';\n            element.classList.remove('fade-out');\n            if (typeof (done) == 'function') {\n                done();\n            }\n        }, 1000);\n    }\n\n    return Component;\n}\n\n/* harmony default export */ var animation = (Animation());\n;// CONCATENATED MODULE: ./src/plugins/mask.js\n\n\n\nfunction Mask() {\n    // Currency\n    var tokens = {\n        // Text\n        text: [ '@' ],\n        // Currency tokens\n        currency: [ '#(.{1})##0?(.{1}0+)?( ?;(.*)?)?', '#' ],\n        // Percentage\n        percentage: [ '0{1}(.{1}0+)?%' ],\n        // Number\n        numeric: [ '0{1}(.{1}0+)?' ],\n        // Data tokens\n        datetime: [ 'YYYY', 'YYY', 'YY', 'MMMMM', 'MMMM', 'MMM', 'MM', 'DDDDD', 'DDDD', 'DDD', 'DD', 'DY', 'DAY', 'WD', 'D', 'Q', 'MONTH', 'MON', 'HH24', 'HH12', 'HH', '\\\\[H\\\\]', 'H', 'AM/PM', 'PM', 'AM', 'MI', 'SS', 'MS', 'Y', 'M' ],\n        // Other\n        general: [ 'A', '0', '[0-9a-zA-Z\\$]+', '.']\n    }\n\n    var getDate = function() {\n        if (this.mask.toLowerCase().indexOf('[h]') !== -1) {\n            var m = 0;\n            if (this.date[4]) {\n                m = parseFloat(this.date[4] / 60);\n            }\n            var v = parseInt(this.date[3]) + m;\n            v /= 24;\n        } else if (! (this.date[0] && this.date[1] && this.date[2]) && (this.date[3] || this.date[4])) {\n            v = helpers.two(this.date[3]) + ':' + helpers.two(this.date[4]) + ':' + helpers.two(this.date[5])\n        } else {\n            if (this.date[0] && this.date[1] && ! this.date[2]) {\n                this.date[2] = 1;\n            }\n            v = helpers.two(this.date[0]) + '-' + helpers.two(this.date[1]) + '-' + helpers.two(this.date[2]);\n\n            if (this.date[3] || this.date[4] || this.date[5]) {\n                v += ' ' + helpers.two(this.date[3]) + ':' + helpers.two(this.date[4]) + ':' + helpers.two(this.date[5]);\n            }\n        }\n\n        return v;\n    }\n\n    var extractDate = function() {\n        var v = '';\n        if (! (this.date[0] && this.date[1] && this.date[2]) && (this.date[3] || this.date[4])) {\n            if (this.mask.toLowerCase().indexOf('[h]') !== -1) {\n                v = parseInt(this.date[3]);\n            } else {\n                v = parseInt(this.date[3]) % 24;\n            }\n            if (this.date[4]) {\n                v += parseFloat(this.date[4] / 60);\n            }\n            v /= 24;\n        } else if (this.date[0] || this.date[1] || this.date[2] || this.date[3] || this.date[4] || this.date[5]) {\n            if (this.date[0] && this.date[1] && ! this.date[2]) {\n                this.date[2] = 1;\n            }\n            var t = helpers_date.now(this.date);\n            v = helpers_date.dateToNum(t);\n            if (this.date[4]) {\n                v += parseFloat(this.date[4] / 60);\n            }\n        }\n\n        if (isNaN(v)) {\n            v = '';\n        }\n\n        return v;\n    }\n\n    var isBlank = function(v) {\n        return v === null || v === '' || v === undefined ? true : false;\n    }\n\n    var isFormula = function(value) {\n        return (''+value).chartAt(0) == '=';\n    }\n\n    var isNumeric = function(t) {\n        return t === 'currency' || t === 'percentage' || t === 'numeric' ? true : false;\n    }\n    /**\n     * Get the decimal defined in the mask configuration\n     */\n    var getDecimal = function(v) {\n        if (v && Number(v) == v) {\n            return '.';\n        } else {\n            if (this.options.decimal) {\n                return this.options.decimal;\n            } else {\n                if (this.locale) {\n                    var t = Intl.NumberFormat(this.locale).format(1.1);\n                    return this.options.decimal = t[1];\n                } else {\n                    if (! v) {\n                        v  = this.mask;\n                    }\n                    var e = new RegExp('0{1}(.{1})0+', 'ig');\n                    var t = e.exec(v);\n                    if (t && t[1] && t[1].length == 1) {\n                        // Save decimal\n                        this.options.decimal = t[1];\n                        // Return decimal\n                        return t[1];\n                    } else {\n                        // Did not find any decimal last resort the default\n                        var e = new RegExp('#{1}(.{1})#+', 'ig');\n                        var t = e.exec(v);\n                        if (t && t[1] && t[1].length == 1) {\n                            if (t[1] === ',') {\n                                this.options.decimal = '.';\n                            } else {\n                                this.options.decimal = ',';\n                            }\n                        } else {\n                            this.options.decimal = '1.1'.toLocaleString().substring(1,2);\n                        }\n                    }\n                }\n            }\n        }\n\n        if (this.options.decimal) {\n            return this.options.decimal;\n        } else {\n            return null;\n        }\n    }\n\n    var ParseValue = function(v, decimal) {\n        if (v == '') {\n            return '';\n        }\n\n        // Get decimal\n        if (! decimal) {\n            decimal = getDecimal.call(this);\n        }\n\n        // New value\n        v = (''+v).split(decimal);\n\n        // Signal\n        var signal = v[0].match(/[-]+/g);\n        if (signal && signal.length) {\n            signal = true;\n        } else {\n            signal = false;\n        }\n\n        v[0] = v[0].match(/[0-9]+/g);\n\n        if (v[0]) {\n            if (signal) {\n                v[0].unshift('-');\n            }\n            v[0] = v[0].join('');\n        } else {\n            if (signal) {\n                v[0] = '-';\n            }\n        }\n\n        if (v[0] || v[1]) {\n            if (v[1] !== undefined) {\n                v[1] = v[1].match(/[0-9]+/g);\n                if (v[1]) {\n                    v[1] = v[1].join('');\n                } else {\n                    v[1] = '';\n                }\n            }\n        } else {\n            return '';\n        }\n        return v;\n    }\n\n    var FormatValue = function(v, event) {\n        if (v == '') {\n            return '';\n        }\n        // Get decimal\n        var d = getDecimal.call(this);\n        // Convert value\n        var o = this.options;\n        // Parse value\n        v = ParseValue.call(this, v);\n        if (v == '') {\n            return '';\n        }\n        // Temporary value\n        if (v[0]) {\n            var t = parseFloat(v[0] + '.1');\n            if (o.style == 'percent') {\n                t /= 100;\n            }\n        } else {\n            var t = null;\n        }\n\n        if ((v[0] == '-' || v[0] == '-00') && ! v[1] && (event && event.inputType == \"deleteContentBackward\")) {\n            return '';\n        }\n\n        var n = new Intl.NumberFormat(this.locale, o).format(t);\n        n = n.split(d);\n        if (typeof(n[1]) !== 'undefined') {\n            var s = n[1].replace(/[0-9]*/g, '');\n            if (s) {\n                n[2] = s;\n            }\n        }\n\n        if (v[1] !== undefined) {\n            n[1] = d + v[1];\n        } else {\n            n[1] = '';\n        }\n\n        return n.join('');\n    }\n\n    var Format = function(e, event) {\n        var v = Value.call(e);\n        if (! v) {\n            return;\n        }\n\n        // Get decimal\n        var d = getDecimal.call(this);\n        var n = FormatValue.call(this, v, event);\n        var t = (n.length) - v.length;\n        var index = Caret.call(e) + t;\n        // Set value and update caret\n        Value.call(e, n, index, true);\n    }\n\n    var Extract = function(v) {\n        // Keep the raw value\n        var current = ParseValue.call(this, v);\n        if (current) {\n            // Negative values\n            if (current[0] === '-') {\n                current[0] = '-0';\n            }\n            return parseFloat(current.join('.'));\n        }\n        return null;\n    }\n\n    /**\n     * Caret getter and setter methods\n     */\n    var Caret = function(index, adjustNumeric) {\n        if (index === undefined) {\n            if (this.tagName == 'DIV') {\n                var pos = 0;\n                var s = window.getSelection();\n                if (s) {\n                    if (s.rangeCount !== 0) {\n                        var r = s.getRangeAt(0);\n                        var p = r.cloneRange();\n                        p.selectNodeContents(this);\n                        p.setEnd(r.endContainer, r.endOffset);\n                        pos = p.toString().length;\n                    }\n                }\n                return pos;\n            } else {\n                return this.selectionStart;\n            }\n        } else {\n            // Get the current value\n            var n = Value.call(this);\n\n            // Review the position\n            if (adjustNumeric) {\n                var p = null;\n                for (var i = 0; i < n.length; i++) {\n                    if (n[i].match(/[\\-0-9]/g) || n[i] == '.' || n[i] == ',') {\n                        p = i;\n                    }\n                }\n\n                // If the string has no numbers\n                if (p === null) {\n                    p = n.indexOf(' ');\n                }\n\n                if (index >= p) {\n                    index = p + 1;\n                }\n            }\n\n            // Do not update caret\n            if (index > n.length) {\n                index = n.length;\n            }\n\n            if (index) {\n                // Set caret\n                if (this.tagName == 'DIV') {\n                    var s = window.getSelection();\n                    var r = document.createRange();\n\n                    if (this.childNodes[0]) {\n                        r.setStart(this.childNodes[0], index);\n                        s.removeAllRanges();\n                        s.addRange(r);\n                    }\n                } else {\n                    this.selectionStart = index;\n                    this.selectionEnd = index;\n                }\n            }\n        }\n    }\n\n    /**\n     * Value getter and setter method\n     */\n    var Value = function(v, updateCaret, adjustNumeric) {\n        if (this.tagName == 'DIV') {\n            if (v === undefined) {\n                var v = this.innerText;\n                if (this.value && this.value.length > v.length) {\n                    v = this.value;\n                }\n                return v;\n            } else {\n                if (this.innerText !== v) {\n                    this.innerText = v;\n\n                    if (updateCaret) {\n                        Caret.call(this, updateCaret, adjustNumeric);\n                    }\n                }\n            }\n        } else {\n            if (v === undefined) {\n                return this.value;\n            } else {\n                if (this.value !== v) {\n                    this.value = v;\n                    if (updateCaret) {\n                        Caret.call(this, updateCaret, adjustNumeric);\n                    }\n                }\n            }\n        }\n    }\n\n    // Labels\n    var weekDaysFull = helpers_date.weekdays;\n    var weekDays = helpers_date.weekdaysShort;\n    var monthsFull = helpers_date.months;\n    var months = helpers_date.monthsShort;\n\n    var parser = {\n        'YEAR': function(v, s) {\n            var y = ''+new Date().getFullYear();\n\n            if (typeof(this.values[this.index]) === 'undefined') {\n                this.values[this.index] = '';\n            }\n            if (parseInt(v) >= 0 && parseInt(v) <= 10) {\n                if (this.values[this.index].length < s) {\n                    this.values[this.index] += v;\n                }\n            }\n            if (this.values[this.index].length == s) {\n                if (s == 2) {\n                    var y = y.substr(0,2) + this.values[this.index];\n                } else if (s == 3) {\n                    var y = y.substr(0,1) + this.values[this.index];\n                } else if (s == 4) {\n                    var y = this.values[this.index];\n                }\n                this.date[0] = y;\n                this.index++;\n            }\n        },\n        'YYYY': function(v) {\n            parser.YEAR.call(this, v, 4);\n        },\n        'YYY': function(v) {\n            parser.YEAR.call(this, v, 3);\n        },\n        'YY': function(v) {\n            parser.YEAR.call(this, v, 2);\n        },\n        'FIND': function(v, a) {\n            if (isBlank(this.values[this.index])) {\n                this.values[this.index] = '';\n            }\n            if (this.event && this.event.inputType && this.event.inputType.indexOf('delete') > -1) {\n                this.values[this.index] += v;\n                return;\n            }\n            var pos = 0;\n            var count = 0;\n            var value = (this.values[this.index] + v).toLowerCase();\n            for (var i = 0; i < a.length; i++) {\n                if (a[i].toLowerCase().indexOf(value) == 0) {\n                    pos = i;\n                    count++;\n                }\n            }\n            if (count > 1) {\n                this.values[this.index] += v;\n            } else if (count == 1) {\n                // Jump number of chars\n                var t = (a[pos].length - this.values[this.index].length) - 1;\n                this.position += t;\n\n                this.values[this.index] = a[pos];\n                this.index++;\n                return pos;\n            }\n        },\n        'MMM': function(v) {\n            var ret = parser.FIND.call(this, v, months);\n            if (ret !== undefined) {\n                this.date[1] = ret + 1;\n            }\n        },\n        'MON': function(v) {\n            parser['MMM'].call(this, v);\n        },\n        'MMMM': function(v) {\n            var ret = parser.FIND.call(this, v, monthsFull);\n            if (ret !== undefined) {\n                this.date[1] = ret + 1;\n            }\n        },\n        'MONTH': function(v) {\n            parser['MMMM'].call(this, v);\n        },\n        'MMMMM': function(v) {\n            if (isBlank(this.values[this.index])) {\n                this.values[this.index] = '';\n            }\n            var pos = 0;\n            var count = 0;\n            var value = (this.values[this.index] + v).toLowerCase();\n            for (var i = 0; i < monthsFull.length; i++) {\n                if (monthsFull[i][0].toLowerCase().indexOf(value) == 0) {\n                    this.values[this.index] = monthsFull[i][0];\n                    this.date[1] = i + 1;\n                    this.index++;\n                    break;\n                }\n            }\n        },\n        'MM': function(v) {\n            if (isBlank(this.values[this.index])) {\n                if (parseInt(v) > 1 && parseInt(v) < 10) {\n                    this.date[1] = this.values[this.index] = '0' + v;\n                    this.index++;\n                } else if (parseInt(v) < 2) {\n                    this.values[this.index] = v;\n                }\n            } else {\n                if (this.values[this.index] == 1 && parseInt(v) < 3) {\n                    this.date[1] = this.values[this.index] += v;\n                    this.index++;\n                } else if (this.values[this.index] == 0 && parseInt(v) > 0 && parseInt(v) < 10) {\n                    this.date[1] = this.values[this.index] += v;\n                    this.index++;\n                }\n            }\n        },\n        'M': function(v) {\n            var test = false;\n            if (parseInt(v) >= 0 && parseInt(v) < 10) {\n                if (isBlank(this.values[this.index])) {\n                    this.values[this.index] = v;\n                    if (v > 1) {\n                        this.date[1] = this.values[this.index];\n                        this.index++;\n                    }\n                } else {\n                    if (this.values[this.index] == 1 && parseInt(v) < 3) {\n                        this.date[1] = this.values[this.index] += v;\n                        this.index++;\n                    } else if (this.values[this.index] == 0 && parseInt(v) > 0) {\n                        this.date[1] = this.values[this.index] += v;\n                        this.index++;\n                    } else {\n                        var test = true;\n                    }\n                }\n            } else {\n                var test = true;\n            }\n\n            // Re-test\n            if (test == true) {\n                var t = parseInt(this.values[this.index]);\n                if (t > 0 && t < 12) {\n                    this.date[2] = this.values[this.index];\n                    this.index++;\n                    // Repeat the character\n                    this.position--;\n                }\n            }\n        },\n        'D': function(v) {\n            var test = false;\n            if (parseInt(v) >= 0 && parseInt(v) < 10) {\n                if (isBlank(this.values[this.index])) {\n                    this.values[this.index] = v;\n                    if (parseInt(v) > 3) {\n                        this.date[2] = this.values[this.index];\n                        this.index++;\n                    }\n                } else {\n                    if (this.values[this.index] == 3 && parseInt(v) < 2) {\n                        this.date[2] = this.values[this.index] += v;\n                        this.index++;\n                    } else if (this.values[this.index] == 1 || this.values[this.index] == 2) {\n                        this.date[2] = this.values[this.index] += v;\n                        this.index++;\n                    } else if (this.values[this.index] == 0 && parseInt(v) > 0) {\n                        this.date[2] = this.values[this.index] += v;\n                        this.index++;\n                    } else {\n                        var test = true;\n                    }\n                }\n            } else {\n                var test = true;\n            }\n\n            // Re-test\n            if (test == true) {\n                var t = parseInt(this.values[this.index]);\n                if (t > 0 && t < 32) {\n                    this.date[2] = this.values[this.index];\n                    this.index++;\n                    // Repeat the character\n                    this.position--;\n                }\n            }\n        },\n        'DD': function(v) {\n            if (isBlank(this.values[this.index])) {\n                if (parseInt(v) > 3 && parseInt(v) < 10) {\n                    this.date[2] = this.values[this.index] = '0' + v;\n                    this.index++;\n                } else if (parseInt(v) < 10) {\n                    this.values[this.index] = v;\n                }\n            } else {\n                if (this.values[this.index] == 3 && parseInt(v) < 2) {\n                    this.date[2] = this.values[this.index] += v;\n                    this.index++;\n                } else if ((this.values[this.index] == 1 || this.values[this.index] == 2) && parseInt(v) < 10) {\n                    this.date[2] = this.values[this.index] += v;\n                    this.index++;\n                } else if (this.values[this.index] == 0 && parseInt(v) > 0 && parseInt(v) < 10) {\n                    this.date[2] = this.values[this.index] += v;\n                    this.index++;\n                }\n            }\n        },\n        'DDD': function(v) {\n            parser.FIND.call(this, v, weekDays);\n        },\n        'DY': function(v) {\n            parser['DDD'].call(this, v);\n        },\n        'DDDD': function(v) {\n            parser.FIND.call(this, v, weekDaysFull);\n        },\n        'DAY': function(v) {\n            parser['DDDD'].call(this, v);\n        },\n        'HH12': function(v, two) {\n            if (isBlank(this.values[this.index])) {\n                if (parseInt(v) > 1 && parseInt(v) < 10) {\n                    if (two) {\n                        v = 0 + v;\n                    }\n                    this.date[3] = this.values[this.index] = v;\n                    this.index++;\n                } else if (parseInt(v) < 10) {\n                    this.values[this.index] = v;\n                }\n            } else {\n                if (this.values[this.index] == 1 && parseInt(v) < 3) {\n                    this.date[3] = this.values[this.index] += v;\n                    this.index++;\n                } else if (this.values[this.index] < 1 && parseInt(v) < 10) {\n                    this.date[3] = this.values[this.index] += v;\n                    this.index++;\n                }\n            }\n        },\n        'HH24': function(v, two) {\n            var test = false;\n            if (parseInt(v) >= 0 && parseInt(v) < 10) {\n                if (this.values[this.index] == null || this.values[this.index] == '') {\n                    if (parseInt(v) > 2 && parseInt(v) < 10) {\n                        if (two) {\n                            v = 0 + v;\n                        }\n                        this.date[3] = this.values[this.index] = v;\n                        this.index++;\n                    } else if (parseInt(v) < 10) {\n                        this.values[this.index] = v;\n                    }\n                } else {\n                    if (this.values[this.index] == 2 && parseInt(v) < 4) {\n                        this.date[3] = this.values[this.index] += v;\n                        this.index++;\n                    } else if (this.values[this.index] < 2 && parseInt(v) < 10) {\n                        this.date[3] = this.values[this.index] += v;\n                        this.index++;\n                    }\n                }\n            }\n        },\n        'HH': function(v) {\n            parser['HH24'].call(this, v, 1);\n        },\n        'H': function(v) {\n            parser['HH24'].call(this, v, 0);\n        },\n        '\\\\[H\\\\]': function(v) {\n            if (this.values[this.index] == undefined) {\n                this.values[this.index] = '';\n            }\n            if (v.match(/[0-9]/g)) {\n                this.date[3] = this.values[this.index] += v;\n            } else {\n                if (this.values[this.index].match(/[0-9]/g)) {\n                    this.date[3] = this.values[this.index];\n                    this.index++;\n                    // Repeat the character\n                    this.position--;\n                }\n            }\n        },\n        'N60': function(v, i) {\n            if (this.values[this.index] == null || this.values[this.index] == '') {\n                if (parseInt(v) > 5 && parseInt(v) < 10) {\n                    this.date[i] = this.values[this.index] = '0' + v;\n                    this.index++;\n                } else if (parseInt(v) < 10) {\n                    this.values[this.index] = v;\n                }\n            } else {\n                if (parseInt(v) < 10) {\n                    this.date[i] = this.values[this.index] += v;\n                    this.index++;\n                 }\n            }\n        },\n        'MI': function(v) {\n            parser.N60.call(this, v, 4);\n        },\n        'SS': function(v) {\n            parser.N60.call(this, v, 5);\n        },\n        'AM/PM': function(v) {\n            this.values[this.index] = '';\n            if (v) {\n                if (this.date[3] > 12) {\n                    this.values[this.index] = 'PM';\n                } else {\n                    this.values[this.index] = 'AM';\n                }\n            }\n            this.index++;\n        },\n        'WD': function(v) {\n            if (typeof(this.values[this.index]) === 'undefined') {\n                this.values[this.index] = '';\n            }\n            if (parseInt(v) >= 0 && parseInt(v) < 7) {\n                this.values[this.index] = v;\n            }\n            if (this.value[this.index].length == 1) {\n                this.index++;\n            }\n        },\n        '0{1}(.{1}0+)?': function(v) {\n            // Get decimal\n            var decimal = getDecimal.call(this);\n            // Negative number\n            var neg = false;\n            // Create if is blank\n            if (isBlank(this.values[this.index])) {\n                this.values[this.index] = '';\n            } else {\n                if (this.values[this.index] == '-') {\n                    neg = true;\n                }\n            }\n            var current = ParseValue.call(this, this.values[this.index], decimal);\n            if (current) {\n                this.values[this.index] = current.join(decimal);\n            }\n            // New entry\n            if (parseInt(v) >= 0 && parseInt(v) < 10) {\n                // Replace the zero for a number\n                if (this.values[this.index] == '0' && v > 0) {\n                    this.values[this.index] = '';\n                } else if (this.values[this.index] == '-0' && v > 0) {\n                    this.values[this.index] = '-';\n                }\n                // Don't add up zeros because does not mean anything here\n                if ((this.values[this.index] != '0' && this.values[this.index] != '-0') || v == decimal) {\n                    this.values[this.index] += v;\n                }\n            } else if (decimal && v == decimal) {\n                if (this.values[this.index].indexOf(decimal) == -1) {\n                    if (! this.values[this.index]) {\n                        this.values[this.index] = '0';\n                    }\n                    this.values[this.index] += v;\n                }\n            } else if (v == '-') {\n                // Negative signed\n                neg = true;\n            }\n\n            if (neg === true && this.values[this.index][0] !== '-') {\n                this.values[this.index] = '-' + this.values[this.index];\n            }\n        },\n        '0{1}(.{1}0+)?%': function(v) {\n            parser['0{1}(.{1}0+)?'].call(this, v);\n\n            if (this.values[this.index].match(/[\\-0-9]/g)) {\n                if (this.values[this.index] && this.values[this.index].indexOf('%') == -1) {\n                    this.values[this.index] += '%';\n                }\n            } else {\n                this.values[this.index] = '';\n            }\n        },\n        '#(.{1})##0?(.{1}0+)?( ?;(.*)?)?': function(v) {\n            // Parse number\n            parser['0{1}(.{1}0+)?'].call(this, v);\n            // Get decimal\n            var decimal = getDecimal.call(this);\n            // Get separator\n            var separator = this.tokens[this.index].substr(1,1);\n            // Negative\n            var negative = this.values[this.index][0] === '-' ? true : false;\n            // Current value\n            var current = ParseValue.call(this, this.values[this.index], decimal);\n\n            // Get main and decimal parts\n            if (current !== '') {\n                // Format number\n                var n = current[0].match(/[0-9]/g);\n                if (n) {\n                    // Format\n                    n = n.join('');\n                    var t = [];\n                    var s = 0;\n                    for (var j = n.length - 1; j >= 0 ; j--) {\n                        t.push(n[j]);\n                        s++;\n                        if (! (s % 3)) {\n                            t.push(separator);\n                        }\n                    }\n                    t = t.reverse();\n                    current[0] = t.join('');\n                    if (current[0].substr(0,1) == separator) {\n                        current[0] = current[0].substr(1);\n                    }\n                } else {\n                    current[0] = '';\n                }\n\n                // Value\n                this.values[this.index] = current.join(decimal);\n\n                // Negative\n                if (negative) {\n                    this.values[this.index] = '-' + this.values[this.index];\n                }\n            }\n        },\n        '0': function(v) {\n            if (v.match(/[0-9]/g)) {\n                this.values[this.index] = v;\n                this.index++;\n            }\n        },\n        '[0-9a-zA-Z$]+': function(v) {\n            if (isBlank(this.values[this.index])) {\n                this.values[this.index] = '';\n            }\n            var t = this.tokens[this.index];\n            var s = this.values[this.index];\n            var i = s.length;\n\n            if (t[i] == v) {\n                this.values[this.index] += v;\n\n                if (this.values[this.index] == t) {\n                    this.index++;\n                }\n            } else {\n                this.values[this.index] = t;\n                this.index++;\n\n                if (v.match(/[\\-0-9]/g)) {\n                    // Repeat the character\n                    this.position--;\n                }\n            }\n        },\n        'A': function(v) {\n            if (v.match(/[a-zA-Z]/gi)) {\n                this.values[this.index] = v;\n                this.index++;\n            }\n        },\n        '.': function(v) {\n            parser['[0-9a-zA-Z$]+'].call(this, v);\n        },\n        '@': function(v) {\n            if (isBlank(this.values[this.index])) {\n                this.values[this.index] = '';\n            }\n            this.values[this.index] += v;\n        }\n    }\n\n    /**\n     * Get the tokens in the mask string\n     */\n    var getTokens = function(str) {\n        if (this.type == 'general') {\n            var t = [].concat(tokens.general);\n        } else {\n            var t = [].concat(tokens.currency, tokens.datetime, tokens.percentage, tokens.numeric, tokens.text, tokens.general);\n        }\n        // Expression to extract all tokens from the string\n        var e = new RegExp(t.join('|'), 'gi');\n        // Extract\n        return str.match(e);\n    }\n\n    /**\n     * Get the method of one given token\n     */\n    var getMethod = function(str) {\n        if (! this.type) {\n            var types = Object.keys(tokens);\n        } else if (this.type == 'text') {\n            var types = [ 'text' ];\n        } else if (this.type == 'general') {\n            var types = [ 'general' ];\n        } else if (this.type == 'datetime') {\n            var types = [ 'numeric', 'datetime', 'general' ];\n        } else {\n            var types = [ 'currency', 'percentage', 'numeric', 'general' ];\n        }\n\n        // Found\n        for (var i = 0; i < types.length; i++) {\n            var type = types[i];\n            for (var j = 0; j < tokens[type].length; j++) {\n                var e = new RegExp(tokens[type][j], 'gi');\n                var r = str.match(e);\n                if (r) {\n                    return { type: type, method: tokens[type][j] }\n                }\n            }\n        }\n    }\n\n    /**\n     * Identify each method for each token\n     */\n    var getMethods = function(t) {\n        var result = [];\n        for (var i = 0; i < t.length; i++) {\n            var m = getMethod.call(this, t[i]);\n            if (m) {\n                result.push(m.method);\n            } else {\n                result.push(null);\n            }\n        }\n\n        // Compatibility with excel\n        for (var i = 0; i < result.length; i++) {\n            if (result[i] == 'MM') {\n                // Not a month, correct to minutes\n                if (result[i-1] && result[i-1].indexOf('H') >= 0) {\n                    result[i] = 'MI';\n                } else if (result[i-2] && result[i-2].indexOf('H') >= 0) {\n                    result[i] = 'MI';\n                } else if (result[i+1] && result[i+1].indexOf('S') >= 0) {\n                    result[i] = 'MI';\n                } else if (result[i+2] && result[i+2].indexOf('S') >= 0) {\n                    result[i] = 'MI';\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Get the type for one given token\n     */\n    var getType = function(str) {\n        var m = getMethod.call(this, str);\n        if (m) {\n            var type = m.type;\n        }\n\n        if (type) {\n            var numeric = 0;\n            // Make sure the correct type\n            var t = getTokens.call(this, str);\n            for (var i = 0; i < t.length; i++) {\n                m = getMethod.call(this, t[i]);\n                if (m && isNumeric(m.type)) {\n                    numeric++;\n                }\n            }\n            if (numeric > 1) {\n                type = 'general';\n            }\n        }\n\n        return type;\n    }\n\n    /**\n     * Parse character per character using the detected tokens in the mask\n     */\n    var parse = function() {\n        // Parser method for this position\n        if (typeof(parser[this.methods[this.index]]) == 'function') {\n            parser[this.methods[this.index]].call(this, this.value[this.position]);\n            this.position++;\n        } else {\n            this.values[this.index] = this.tokens[this.index];\n            this.index++;\n        }\n    }\n\n    var isFormula = function(value) {\n        var v = (''+value)[0];\n        return v == '=' ? true : false;\n    }\n\n    var toPlainString = function(num) {\n        return (''+ +num).replace(/(-?)(\\d*)\\.?(\\d*)e([+-]\\d+)/,\n          function(a,b,c,d,e) {\n            return e < 0\n              ? b + '0.' + Array(1-e-c.length).join(0) + c + d\n              : b + c + d + Array(e-d.length+1).join(0);\n          });\n    }\n\n    /**\n     * Mask function\n     * @param {mixed|string} JS input or a string to be parsed\n     * @param {object|string} When the first param is a string, the second is the mask or object with the mask options\n     */\n    var obj = function(e, config, returnObject) {\n        // Options\n        var r = null;\n        var t = null;\n        var o = {\n            // Element\n            input: null,\n            // Current value\n            value: null,\n            // Mask options\n            options: {},\n            // New values for each token found\n            values: [],\n            // Token position\n            index: 0,\n            // Character position\n            position: 0,\n            // Date raw values\n            date: [0,0,0,0,0,0],\n            // Raw number for the numeric values\n            number: 0,\n        }\n\n        // This is a JavaScript Event\n        if (typeof(e) == 'object') {\n            // Element\n            o.input = e.target;\n            // Current value\n            o.value = Value.call(e.target);\n            // Current caret position\n            o.caret = Caret.call(e.target);\n            // Mask\n            if (t = e.target.getAttribute('data-mask')) {\n                o.mask = t;\n            }\n            // Type\n            if (t = e.target.getAttribute('data-type')) {\n                o.type = t;\n            }\n            // Options\n            if (e.target.mask) {\n                if (e.target.mask.options) {\n                    o.options = e.target.mask.options;\n                }\n                if (e.target.mask.locale) {\n                    o.locale = e.target.mask.locale;\n                }\n            } else {\n                // Locale\n                if (t = e.target.getAttribute('data-locale')) {\n                    o.locale = t;\n                    if (o.mask) {\n                        o.options.style = o.mask;\n                    }\n                }\n            }\n            // Extra configuration\n            if (e.target.attributes && e.target.attributes.length) {\n                for (var i = 0; i < e.target.attributes.length; i++) {\n                    var k = e.target.attributes[i].name;\n                    var v = e.target.attributes[i].value;\n                    if (k.substr(0,4) == 'data') {\n                        o.options[k.substr(5)] = v;\n                    }\n                }\n            }\n        } else {\n            // Options\n            if (typeof(config) == 'string') {\n                // Mask\n                o.mask = config;\n            } else {\n                // Mask\n                var k = Object.keys(config);\n                for (var i = 0; i < k.length; i++) {\n                    o[k[i]] = config[k[i]];\n                }\n            }\n\n            if (typeof(e) === 'number') {\n                // Get decimal\n                getDecimal.call(o, o.mask);\n                // Replace to the correct decimal\n                e = (''+e).replace('.', o.options.decimal);\n            }\n\n            // Current\n            o.value = e;\n\n            if (o.input) {\n                // Value\n                Value.call(o.input, e);\n                // Focus\n                helpers.focus(o.input);\n                // Caret\n                o.caret = Caret.call(o.input);\n            }\n        }\n\n        // Mask detected start the process\n        if (! isFormula(o.value) && (o.mask || o.locale)) {\n            // Compatibility fixes\n            if (o.mask) {\n                // Remove []\n                o.mask = o.mask.replace(new RegExp(/\\[h]/),'|h|');\n                o.mask = o.mask.replace(new RegExp(/\\[.*?\\]/),'');\n                o.mask = o.mask.replace(new RegExp(/\\|h\\|/),'[h]');\n                if (o.mask.indexOf(';') !== -1) {\n                    var t = o.mask.split(';');\n                    o.mask = t[0];\n                }\n                // Excel mask TODO: Improve\n                if (o.mask.indexOf('##') !== -1) {\n                    var d = o.mask.split(';');\n                    if (d[0]) {\n                        d[0] = d[0].replace('*', '\\t');\n                        d[0] = d[0].replace(new RegExp(/_-/g), ' ');\n                        d[0] = d[0].replace(new RegExp(/_/g), '');\n                        d[0] = d[0].replace('##0.###','##0.000');\n                        d[0] = d[0].replace('##0.##','##0.00');\n                        d[0] = d[0].replace('##0.#','##0.0');\n                        d[0] = d[0].replace('##0,###','##0,000');\n                        d[0] = d[0].replace('##0,##','##0,00');\n                        d[0] = d[0].replace('##0,#','##0,0');\n                    }\n                    o.mask = d[0];\n                }\n                // Get type\n                if (! o.type) {\n                    o.type = getType.call(o, o.mask);\n                }\n                // Get tokens\n                o.tokens = getTokens.call(o, o.mask);\n            }\n\n            // On new input\n            if (typeof(e) !== 'object'  || ! e.inputType || ! e.inputType.indexOf('insert') || ! e.inputType.indexOf('delete')) {\n                // Start transformation\n                if (o.locale) {\n                    if (o.input) {\n                        Format.call(o, o.input, e);\n                    } else {\n                        var newValue = FormatValue.call(o, o.value);\n                    }\n                } else {\n                    // Get tokens\n                    o.methods = getMethods.call(o, o.tokens);\n                    o.event = e;\n\n                    // Go through all tokes\n                    while (o.position < o.value.length && typeof(o.tokens[o.index]) !== 'undefined') {\n                        // Get the appropriate parser\n                        parse.call(o);\n                    }\n\n                    // New value\n                    var newValue = o.values.join('');\n\n                    // Add tokens to the end of string only if string is not empty\n                    if (isNumeric(o.type) && newValue !== '') {\n                        // Complement things in the end of the mask\n                        while (typeof(o.tokens[o.index]) !== 'undefined') {\n                            var t = getMethod.call(o, o.tokens[o.index]);\n                            if (t && t.type == 'general') {\n                                o.values[o.index] = o.tokens[o.index];\n                            }\n                            o.index++;\n                        }\n\n                        var adjustNumeric = true;\n                    } else {\n                        var adjustNumeric = false;\n                    }\n\n                    // New value\n                    newValue = o.values.join('');\n\n                    // Reset value\n                    if (o.input) {\n                        t = newValue.length - o.value.length;\n                        if (t > 0) {\n                            var caret = o.caret + t;\n                        } else {\n                            var caret = o.caret;\n                        }\n                        Value.call(o.input, newValue, caret, adjustNumeric);\n                    }\n                }\n            }\n\n            // Update raw data\n            if (o.input) {\n                var label = null;\n                if (isNumeric(o.type)) {\n                    // Extract the number\n                    o.number = Extract.call(o, Value.call(o.input));\n                    // Keep the raw data as a property of the tag\n                    if (o.type == 'percentage') {\n                        label = o.number / 100;\n                    } else {\n                        label = o.number;\n                    }\n                } else if (o.type == 'datetime') {\n                    label = getDate.call(o);\n\n                    if (o.date[0] && o.date[1] && o.date[2]) {\n                        o.input.setAttribute('data-completed', true);\n                    }\n                }\n\n                if (label) {\n                    o.input.setAttribute('data-value', label);\n                }\n            }\n\n            if (newValue !== undefined) {\n                if (returnObject) {\n                    return o;\n                } else {\n                    return newValue;\n                }\n            }\n        }\n    }\n\n    // Get the type of the mask\n    obj.getType = getType;\n\n    // Extract the tokens from a mask\n    obj.prepare = function(str, o) {\n        if (! o) {\n            o = {};\n        }\n        return getTokens.call(o, str);\n    }\n\n    /**\n     * Apply the mask to a element (legacy)\n     */\n    obj.apply = function(e) {\n        var v = Value.call(e.target);\n        if (e.key.length == 1) {\n            v += e.key;\n        }\n        Value.call(e.target, obj(v, e.target.getAttribute('data-mask')));\n    }\n\n    /**\n     * Legacy support\n     */\n    obj.run = function(value, mask, decimal) {\n        return obj(value, { mask: mask, decimal: decimal });\n    }\n\n    /**\n     * Extract number from masked string\n     */\n    obj.extract = function(v, options, returnObject) {\n        if (isBlank(v)) {\n            return v;\n        }\n        if (typeof(options) != 'object') {\n            return v;\n        } else {\n            options = Object.assign({}, options);\n\n            if (! options.options) {\n                options.options = {};\n            }\n        }\n\n        // Compatibility\n        if (! options.mask && options.format) {\n            options.mask = options.format;\n        }\n\n        // Remove []\n        if (options.mask) {\n            if (options.mask.indexOf(';') !== -1) {\n                var t = options.mask.split(';');\n                options.mask = t[0];\n            }\n            options.mask = options.mask.replace(new RegExp(/\\[h]/),'|h|');\n            options.mask = options.mask.replace(new RegExp(/\\[.*?\\]/),'');\n            options.mask = options.mask.replace(new RegExp(/\\|h\\|/),'[h]');\n        }\n\n        // Get decimal\n        getDecimal.call(options, options.mask);\n\n        var type = null;\n        var value = null;\n\n        if (options.type == 'percent' || options.options.style == 'percent') {\n            type = 'percentage';\n        } else if (options.mask) {\n            type = getType.call(options, options.mask);\n        }\n\n        if (type === 'general') {\n            var o = obj(v, options, true);\n\n            value = v;\n        } else if (type === 'datetime') {\n            if (v instanceof Date) {\n                v = obj.getDateString(v, options.mask);\n            }\n\n            var o = obj(v, options, true);\n\n            if (helpers.isNumeric(v)) {\n                value = v;\n            } else {\n                value = extractDate.call(o);\n            }\n        } else {\n            value = Extract.call(options, v);\n            // Percentage\n            if (type == 'percentage') {\n                value /= 100;\n            }\n            var o = options;\n        }\n\n        o.value = value;\n\n        if (! o.type && type) {\n            o.type = type;\n        }\n\n        if (returnObject) {\n            return o;\n        } else {\n            return value;\n        }\n    }\n\n    /**\n     * Render\n     */\n    obj.render = function(value, options, fullMask) {\n        if (isBlank(value)) {\n            return value;\n        }\n\n        if (typeof(options) != 'object') {\n            return value;\n        } else {\n            options = Object.assign({}, options);\n\n            if (! options.options) {\n                options.options = {};\n            }\n        }\n\n        // Compatibility\n        if (! options.mask && options.format) {\n            options.mask = options.format;\n        }\n\n        // Remove []\n        if (options.mask) {\n            if (options.mask.indexOf(';') !== -1) {\n                var t = options.mask.split(';');\n                options.mask = t[0];\n            }\n            options.mask = options.mask.replace(new RegExp(/\\[h]/),'|h|');\n            options.mask = options.mask.replace(new RegExp(/\\[.*?\\]/),'');\n            options.mask = options.mask.replace(new RegExp(/\\|h\\|/),'[h]');\n        }\n\n        var type = null;\n        if (options.type == 'percent' || options.options.style == 'percent') {\n            type = 'percentage';\n        } else if (options.mask) {\n            type = getType.call(options, options.mask);\n        } else if (value instanceof Date) {\n            type = 'datetime';\n        }\n\n        // Fill with blanks\n        var fillWithBlanks = false;\n\n        if (type =='datetime' || options.type == 'calendar') {\n            var t = obj.getDateString(value, options.mask);\n            if (t) {\n                value = t;\n            }\n            if (options.mask && fullMask) {\n                fillWithBlanks = true;\n            }\n        } else {\n            // Percentage\n            if (type == 'percentage') {\n                value *= 100;\n            }\n            // Number of decimal places\n            if (typeof(value) === 'number') {\n                var t = null;\n                if (options.mask && fullMask && ((''+value).indexOf('e') === -1)) {\n                    var d = getDecimal.call(options, options.mask);\n                    if (options.mask.indexOf(d) !== -1) {\n                        d = options.mask.split(d);\n                        d = (''+d[1].match(/[0-9]+/g))\n                        d = d.length;\n                        t = value.toFixed(d);\n                    } else {\n                        t = value.toFixed(0);\n                    }\n                } else if (options.locale && fullMask) {\n                    // Append zeros\n                    var d = (''+value).split('.');\n                    if (options.options) {\n                        if (typeof(d[1]) === 'undefined') {\n                            d[1] = '';\n                        }\n                        var len = d[1].length;\n                        if (options.options.minimumFractionDigits > len) {\n                            for (var i = 0; i < options.options.minimumFractionDigits - len; i++) {\n                                d[1] += '0';\n                            }\n                        }\n                    }\n                    if (! d[1].length) {\n                        t = d[0]\n                    } else {\n                        t = d.join('.');\n                    }\n                    var len = d[1].length;\n                    if (options.options && options.options.maximumFractionDigits < len) {\n                        t = parseFloat(t).toFixed(options.options.maximumFractionDigits);\n                    }\n                } else {\n                    t = toPlainString(value);\n                }\n\n                if (t !== null) {\n                    value = t;\n                    // Get decimal\n                    getDecimal.call(options, options.mask);\n                    // Replace to the correct decimal\n                    if (options.options.decimal) {\n                        value = value.replace('.', options.options.decimal);\n                    }\n                }\n            } else {\n                if (options.mask && fullMask) {\n                    fillWithBlanks = true;\n                }\n            }\n        }\n\n        if (fillWithBlanks) {\n            var s = options.mask.length - value.length;\n            if (s > 0) {\n                for (var i = 0; i < s; i++) {\n                    value += ' ';\n                }\n            }\n        }\n\n        value = obj(value, options);\n\n        // Numeric mask, number of zeros\n        if (fullMask && type === 'numeric') {\n            var maskZeros = options.mask.match(new RegExp(/^[0]+$/gm));\n            if (maskZeros && maskZeros.length === 1) {\n                var maskLength = maskZeros[0].length;\n                if (maskLength > 3) {\n                    value = '' + value;\n                    while (value.length < maskLength) {\n                        value = '0' + value;\n                    }\n                }\n            }\n        }\n\n        return value;\n    }\n\n    obj.set = function(e, m) {\n        if (m) {\n            e.setAttribute('data-mask', m);\n            // Reset the value\n            var event = new Event('input', {\n                bubbles: true,\n                cancelable: true,\n            });\n            e.dispatchEvent(event);\n        }\n    }\n\n    // Helper to extract date from a string\n    obj.extractDateFromString = function (date, format) {\n        var o = obj(date, { mask: format }, true);\n\n        // Check if in format Excel (Need difference with format date or type detected is numeric)\n        if (date > 0 && Number(date) == date && (o.values.join(\"\") !== o.value || o.type == \"numeric\")) {\n            var d = new Date(Math.round((date - 25569) * 86400 * 1000));\n            return d.getFullYear() + \"-\" + helpers.two(d.getMonth()) + \"-\" + helpers.two(d.getDate()) + ' 00:00:00';\n        }\n\n        var complete = false;\n\n        if (o.values.length === o.tokens.length && o.values[o.values.length - 1].length >= o.tokens[o.tokens.length - 1].length) {\n            complete = true;\n        }\n\n        if (o.date[0] && o.date[1] && (o.date[2] || complete)) {\n            if (!o.date[2]) {\n                o.date[2] = 1;\n            }\n\n            return o.date[0] + '-' + helpers.two(o.date[1]) + '-' + helpers.two(o.date[2]) + ' ' + helpers.two(o.date[3]) + ':' + helpers.two(o.date[4]) + ':' + helpers.two(o.date[5]);\n        }\n\n        return '';\n    }\n\n    // Helper to convert date into string\n    obj.getDateString = function (value, options) {\n        if (!options) {\n            var options = {};\n        }\n\n        // Labels\n        if (options && typeof (options) == 'object') {\n            var format = options.format;\n        } else {\n            var format = options;\n        }\n\n        if (!format) {\n            format = 'YYYY-MM-DD';\n        }\n\n        // Convert to number of hours\n        if (format.indexOf('[h]') >= 0) {\n            var result = 0;\n            if (value && helpers.isNumeric(value)) {\n                result = parseFloat(24 * Number(value));\n                if (format.indexOf('mm') >= 0) {\n                    var h = ('' + result).split('.');\n                    if (h[1]) {\n                        var d = 60 * parseFloat('0.' + h[1])\n                        d = parseFloat(d.toFixed(2));\n                    } else {\n                        var d = 0;\n                    }\n                    result = parseInt(h[0]) + ':' + helpers.two(d);\n                }\n            }\n            return result;\n        }\n\n        // Date instance\n        if (value instanceof Date) {\n            value = helpers_date.now(value);\n        } else if (value && helpers.isNumeric(value)) {\n            value = helpers_date.numToDate(value);\n        }\n\n        // Tokens\n        var tokens = ['DAY', 'WD', 'DDDD', 'DDD', 'DD', 'D', 'Q', 'HH24', 'HH12', 'HH', 'H', 'AM/PM', 'MI', 'SS', 'MS', 'YYYY', 'YYY', 'YY', 'Y', 'MONTH', 'MON', 'MMMMM', 'MMMM', 'MMM', 'MM', 'M', '.'];\n\n        // Expression to extract all tokens from the string\n        var e = new RegExp(tokens.join('|'), 'gi');\n        // Extract\n        var t = format.match(e);\n\n        // Compatibility with excel\n        for (var i = 0; i < t.length; i++) {\n            if (t[i].toUpperCase() == 'MM') {\n                // Not a month, correct to minutes\n                if (t[i - 1] && t[i - 1].toUpperCase().indexOf('H') >= 0) {\n                    t[i] = 'mi';\n                } else if (t[i - 2] && t[i - 2].toUpperCase().indexOf('H') >= 0) {\n                    t[i] = 'mi';\n                } else if (t[i + 1] && t[i + 1].toUpperCase().indexOf('S') >= 0) {\n                    t[i] = 'mi';\n                } else if (t[i + 2] && t[i + 2].toUpperCase().indexOf('S') >= 0) {\n                    t[i] = 'mi';\n                }\n            }\n        }\n\n        // Object\n        var o = {\n            tokens: t\n        }\n\n        // Value\n        if (value) {\n            var d = '' + value;\n            var splitStr = (d.indexOf('T') !== -1) ? 'T' : ' ';\n            d = d.split(splitStr);\n\n            var h = 0;\n            var m = 0;\n            var s = 0;\n\n            if (d[1]) {\n                h = d[1].split(':');\n                m = h[1] ? h[1] : 0;\n                s = h[2] ? h[2] : 0;\n                h = h[0] ? h[0] : 0;\n            }\n\n            d = d[0].split('-');\n\n            if (d[0] && d[1] && d[2] && d[0] > 0 && d[1] > 0 && d[1] < 13 && d[2] > 0 && d[2] < 32) {\n\n                // Data\n                o.data = [d[0], d[1], d[2], h, m, s];\n\n                // Value\n                o.value = [];\n\n                // Calendar instance\n                var calendar = new Date(o.data[0], o.data[1] - 1, o.data[2], o.data[3], o.data[4], o.data[5]);\n\n                // Get method\n                var get = function (i) {\n                    // Token\n                    var t = this.tokens[i];\n                    // Case token\n                    var s = t.toUpperCase();\n                    var v = null;\n\n                    if (s === 'YYYY') {\n                        v = this.data[0];\n                    } else if (s === 'YYY') {\n                        v = this.data[0].substring(1, 4);\n                    } else if (s === 'YY') {\n                        v = this.data[0].substring(2, 4);\n                    } else if (s === 'Y') {\n                        v = this.data[0].substring(3, 4);\n                    } else if (t === 'MON') {\n                        v = helpers_date.months[calendar.getMonth()].substr(0, 3).toUpperCase();\n                    } else if (t === 'mon') {\n                        v = helpers_date.months[calendar.getMonth()].substr(0, 3).toLowerCase();\n                    } else if (t === 'MONTH') {\n                        v = helpers_date.months[calendar.getMonth()].toUpperCase();\n                    } else if (t === 'month') {\n                        v = helpers_date.months[calendar.getMonth()].toLowerCase();\n                    } else if (s === 'MMMMM') {\n                        v = helpers_date.months[calendar.getMonth()].substr(0, 1);\n                    } else if (s === 'MMMM' || t === 'Month') {\n                        v = helpers_date.months[calendar.getMonth()];\n                    } else if (s === 'MMM' || t == 'Mon') {\n                        v = helpers_date.months[calendar.getMonth()].substr(0, 3);\n                    } else if (s === 'MM') {\n                        v = helpers.two(this.data[1]);\n                    } else if (s === 'M') {\n                        v = calendar.getMonth() + 1;\n                    } else if (t === 'DAY') {\n                        v = helpers_date.weekdays[calendar.getDay()].toUpperCase();\n                    } else if (t === 'day') {\n                        v = helpers_date.weekdays[calendar.getDay()].toLowerCase();\n                    } else if (s === 'DDDD' || t == 'Day') {\n                        v = helpers_date.weekdays[calendar.getDay()];\n                    } else if (s === 'DDD') {\n                        v = helpers_date.weekdays[calendar.getDay()].substr(0, 3);\n                    } else if (s === 'DD') {\n                        v = helpers.two(this.data[2]);\n                    } else if (s === 'D') {\n                        v = this.data[2];\n                    } else if (s === 'Q') {\n                        v = Math.floor((calendar.getMonth() + 3) / 3);\n                    } else if (s === 'HH24' || s === 'HH') {\n                        v = helpers.two(this.data[3]);\n                    } else if (s === 'HH12') {\n                        if (this.data[3] > 12) {\n                            v = helpers.two(this.data[3] - 12);\n                        } else {\n                            v = helpers.two(this.data[3]);\n                        }\n                    } else if (s === 'H') {\n                        v = this.data[3];\n                    } else if (s === 'MI') {\n                        v = helpers.two(this.data[4]);\n                    } else if (s === 'SS') {\n                        v = helpers.two(this.data[5]);\n                    } else if (s === 'MS') {\n                        v = calendar.getMilliseconds();\n                    } else if (s === 'AM/PM') {\n                        if (this.data[3] >= 12) {\n                            v = 'PM';\n                        } else {\n                            v = 'AM';\n                        }\n                    } else if (s === 'WD') {\n                        v = helpers_date.weekdays[calendar.getDay()];\n                    }\n\n                    if (v === null) {\n                        this.value[i] = this.tokens[i];\n                    } else {\n                        this.value[i] = v;\n                    }\n                }\n\n                for (var i = 0; i < o.tokens.length; i++) {\n                    get.call(o, i);\n                }\n                // Put pieces together\n                value = o.value.join('');\n            } else {\n                value = '';\n            }\n        }\n\n        return value;\n    }\n\n    if (typeof document !== 'undefined') {\n        document.addEventListener('input', function(e) {\n            if (e.target.getAttribute('data-mask') || e.target.mask) {\n                obj(e);\n            }\n        });\n    }\n\n    return obj;\n}\n\n/* harmony default export */ var mask = (Mask());\n;// CONCATENATED MODULE: ./src/plugins/calendar.js\n\n\n\n\n\n\n\nfunction Calendar() {\n    var Component = (function (el, options) {\n        // Already created, update options\n        if (el.calendar) {\n            return el.calendar.setOptions(options, true);\n        }\n\n        // New instance\n        var obj = {type: 'calendar'};\n        obj.options = {};\n\n        // Date\n        obj.date = null;\n\n        /**\n         * Update options\n         */\n        obj.setOptions = function (options, reset) {\n            // Default configuration\n            var defaults = {\n                // Render type: [ default | year-month-picker ]\n                type: 'default',\n                // Restrictions\n                validRange: null,\n                // Starting weekday - 0 for sunday, 6 for saturday\n                startingDay: null,\n                // Date format\n                format: 'DD/MM/YYYY',\n                // Allow keyboard date entry\n                readonly: true,\n                // Today is default\n                today: false,\n                // Show timepicker\n                time: false,\n                // Show the reset button\n                resetButton: true,\n                // Placeholder\n                placeholder: '',\n                // Translations can be done here\n                months: helpers_date.monthsShort,\n                monthsFull: helpers_date.months,\n                weekdays: helpers_date.weekdays,\n                textDone: dictionary.translate('Done'),\n                textReset: dictionary.translate('Reset'),\n                textUpdate: dictionary.translate('Update'),\n                // Value\n                value: null,\n                // Fullscreen (this is automatic set for screensize < 800)\n                fullscreen: false,\n                // Create the calendar closed as default\n                opened: false,\n                // Events\n                onopen: null,\n                onclose: null,\n                onchange: null,\n                onupdate: null,\n                // Internal mode controller\n                mode: null,\n                position: null,\n                // Data type\n                dataType: null,\n                // Controls\n                controls: true,\n            }\n\n            // Loop through our object\n            for (var property in defaults) {\n                if (options && options.hasOwnProperty(property)) {\n                    obj.options[property] = options[property];\n                } else {\n                    if (typeof (obj.options[property]) == 'undefined' || reset === true) {\n                        obj.options[property] = defaults[property];\n                    }\n                }\n            }\n\n            // Reset button\n            if (obj.options.resetButton == false) {\n                calendarReset.style.display = 'none';\n            } else {\n                calendarReset.style.display = '';\n            }\n\n            // Readonly\n            if (obj.options.readonly) {\n                el.setAttribute('readonly', 'readonly');\n            } else {\n                el.removeAttribute('readonly');\n            }\n\n            // Placeholder\n            if (obj.options.placeholder) {\n                el.setAttribute('placeholder', obj.options.placeholder);\n            } else {\n                el.removeAttribute('placeholder');\n            }\n\n            if (helpers.isNumeric(obj.options.value) && obj.options.value > 0) {\n                obj.options.value = Component.numToDate(obj.options.value);\n                // Data type numeric\n                obj.options.dataType = 'numeric';\n            }\n\n            // Texts\n            calendarReset.innerHTML = obj.options.textReset;\n            calendarConfirm.innerHTML = obj.options.textDone;\n            calendarControlsUpdateButton.innerHTML = obj.options.textUpdate;\n\n            // Define mask\n            el.setAttribute('data-mask', obj.options.format.toLowerCase());\n\n            // Value\n            if (!obj.options.value && obj.options.today) {\n                var value = Component.now();\n            } else {\n                var value = obj.options.value;\n            }\n\n            // Set internal date\n            if (value) {\n                // Force the update\n                obj.options.value = null;\n                // New value\n                obj.setValue(value);\n            }\n\n            return obj;\n        }\n\n        /**\n         * Open the calendar\n         */\n        obj.open = function (value) {\n            if (!calendar.classList.contains('jcalendar-focus')) {\n                if (!calendar.classList.contains('jcalendar-inline')) {\n                    // Current\n                    Component.current = obj;\n                    // Start tracking\n                    Tracking(obj, true);\n                    // Create the days\n                    obj.getDays();\n                    // Render months\n                    if (obj.options.type == 'year-month-picker') {\n                        obj.getMonths();\n                    }\n                    // Get time\n                    if (obj.options.time) {\n                        calendarSelectHour.value = obj.date[3];\n                        calendarSelectMin.value = obj.date[4];\n                    }\n\n                    // Show calendar\n                    calendar.classList.add('jcalendar-focus');\n\n                    // Get the position of the corner helper\n                    if (helpers.getWindowWidth() < 800 || obj.options.fullscreen) {\n                        calendar.classList.add('jcalendar-fullsize');\n                        // Animation\n                        animation.slideBottom(calendarContent, 1);\n                    } else {\n                        calendar.classList.remove('jcalendar-fullsize');\n\n                        var rect = el.getBoundingClientRect();\n                        var rectContent = calendarContent.getBoundingClientRect();\n\n                        if (obj.options.position) {\n                            calendarContainer.style.position = 'fixed';\n                            if (window.innerHeight < rect.bottom + rectContent.height) {\n                                calendarContainer.style.top = (rect.top - (rectContent.height + 2)) + 'px';\n                            } else {\n                                calendarContainer.style.top = (rect.top + rect.height + 2) + 'px';\n                            }\n                            calendarContainer.style.left = rect.left + 'px';\n                        } else {\n                            if (window.innerHeight < rect.bottom + rectContent.height) {\n                                var d = -1 * (rect.height + rectContent.height + 2);\n                                if (d + rect.top < 0) {\n                                    d = -1 * (rect.top + rect.height);\n                                }\n                                calendarContainer.style.top = d + 'px';\n                            } else {\n                                calendarContainer.style.top = 2 + 'px';\n                            }\n\n                            if (window.innerWidth < rect.left + rectContent.width) {\n                                var d = window.innerWidth - (rect.left + rectContent.width + 20);\n                                calendarContainer.style.left = d + 'px';\n                            } else {\n                                calendarContainer.style.left = '0px';\n                            }\n                        }\n                    }\n\n                    // Events\n                    if (typeof (obj.options.onopen) == 'function') {\n                        obj.options.onopen(el);\n                    }\n                }\n            }\n        }\n\n        obj.close = function (ignoreEvents, update) {\n            if (calendar.classList.contains('jcalendar-focus')) {\n                if (update !== false) {\n                    var element = calendar.querySelector('.jcalendar-selected');\n\n                    if (typeof (update) == 'string') {\n                        var value = update;\n                    } else if (!element || element.classList.contains('jcalendar-disabled')) {\n                        var value = obj.options.value\n                    } else {\n                        var value = obj.getValue();\n                    }\n\n                    obj.setValue(value);\n                }\n\n                // Events\n                if (!ignoreEvents && typeof (obj.options.onclose) == 'function') {\n                    obj.options.onclose(el);\n                }\n                // Hide\n                calendar.classList.remove('jcalendar-focus');\n                // Stop tracking\n                Tracking(obj, false);\n                // Current\n                Component.current = null;\n            }\n\n            return obj.options.value;\n        }\n\n        obj.prev = function () {\n            // Check if the visualization is the days picker or years picker\n            if (obj.options.mode == 'years') {\n                obj.date[0] = obj.date[0] - 12;\n\n                // Update picker table of days\n                obj.getYears();\n            } else if (obj.options.mode == 'months') {\n                obj.date[0] = parseInt(obj.date[0]) - 1;\n                // Update picker table of months\n                obj.getMonths();\n            } else {\n                // Go to the previous month\n                if (obj.date[1] < 2) {\n                    obj.date[0] = obj.date[0] - 1;\n                    obj.date[1] = 12;\n                } else {\n                    obj.date[1] = obj.date[1] - 1;\n                }\n\n                // Update picker table of days\n                obj.getDays();\n            }\n        }\n\n        obj.next = function () {\n            // Check if the visualization is the days picker or years picker\n            if (obj.options.mode == 'years') {\n                obj.date[0] = parseInt(obj.date[0]) + 12;\n\n                // Update picker table of days\n                obj.getYears();\n            } else if (obj.options.mode == 'months') {\n                obj.date[0] = parseInt(obj.date[0]) + 1;\n                // Update picker table of months\n                obj.getMonths();\n            } else {\n                // Go to the previous month\n                if (obj.date[1] > 11) {\n                    obj.date[0] = parseInt(obj.date[0]) + 1;\n                    obj.date[1] = 1;\n                } else {\n                    obj.date[1] = parseInt(obj.date[1]) + 1;\n                }\n\n                // Update picker table of days\n                obj.getDays();\n            }\n        }\n\n        /**\n         * Set today\n         */\n        obj.setToday = function () {\n            // Today\n            var value = new Date().toISOString().substr(0, 10);\n            // Change value\n            obj.setValue(value);\n            // Value\n            return value;\n        }\n\n        obj.setValue = function (val) {\n            if (!val) {\n                val = '' + val;\n            }\n            // Values\n            var newValue = val;\n            var oldValue = obj.options.value;\n\n            if (oldValue != newValue) {\n                // Set label\n                if (!newValue) {\n                    obj.date = null;\n                    var val = '';\n                    el.classList.remove('jcalendar_warning');\n                    el.title = '';\n                } else {\n                    var value = obj.setLabel(newValue, obj.options);\n                    var date = newValue.split(' ');\n                    if (!date[1]) {\n                        date[1] = '00:00:00';\n                    }\n                    var time = date[1].split(':')\n                    var date = date[0].split('-');\n                    var y = parseInt(date[0]);\n                    var m = parseInt(date[1]);\n                    var d = parseInt(date[2]);\n                    var h = parseInt(time[0]);\n                    var i = parseInt(time[1]);\n                    obj.date = [y, m, d, h, i, 0];\n                    var val = obj.setLabel(newValue, obj.options);\n\n                    // Current selection day\n                    var current = Component.now(new Date(y, m - 1, d), true);\n\n                    // Available ranges\n                    if (obj.options.validRange) {\n                        if (!obj.options.validRange[0] || current >= obj.options.validRange[0]) {\n                            var test1 = true;\n                        } else {\n                            var test1 = false;\n                        }\n\n                        if (!obj.options.validRange[1] || current <= obj.options.validRange[1]) {\n                            var test2 = true;\n                        } else {\n                            var test2 = false;\n                        }\n\n                        if (!(test1 && test2)) {\n                            el.classList.add('jcalendar_warning');\n                            el.title = dictionary.translate('Date outside the valid range');\n                        } else {\n                            el.classList.remove('jcalendar_warning');\n                            el.title = '';\n                        }\n                    } else {\n                        el.classList.remove('jcalendar_warning');\n                        el.title = '';\n                    }\n                }\n\n                // New value\n                obj.options.value = newValue;\n\n                if (typeof (obj.options.onchange) == 'function') {\n                    obj.options.onchange(el, newValue, oldValue);\n                }\n\n                // Lemonade JS\n                if (el.value != val) {\n                    el.value = val;\n                    if (typeof (el.oninput) == 'function') {\n                        el.oninput({\n                            type: 'input',\n                            target: el,\n                            value: el.value\n                        });\n                    }\n                }\n            }\n\n            obj.getDays();\n            // Render months\n            if (obj.options.type == 'year-month-picker') {\n                obj.getMonths();\n            }\n        }\n\n        obj.getValue = function () {\n            if (obj.date) {\n                if (obj.options.time) {\n                    return helpers.two(obj.date[0]) + '-' + helpers.two(obj.date[1]) + '-' + helpers.two(obj.date[2]) + ' ' + helpers.two(obj.date[3]) + ':' + helpers.two(obj.date[4]) + ':' + helpers.two(0);\n                } else {\n                    return helpers.two(obj.date[0]) + '-' + helpers.two(obj.date[1]) + '-' + helpers.two(obj.date[2]) + ' ' + helpers.two(0) + ':' + helpers.two(0) + ':' + helpers.two(0);\n                }\n            } else {\n                return \"\";\n            }\n        }\n\n        /**\n         *  Calendar\n         */\n        obj.update = function (element, v) {\n            if (element.classList.contains('jcalendar-disabled')) {\n                // Do nothing\n            } else {\n                var elements = calendar.querySelector('.jcalendar-selected');\n                if (elements) {\n                    elements.classList.remove('jcalendar-selected');\n                }\n                element.classList.add('jcalendar-selected');\n\n                if (element.classList.contains('jcalendar-set-month')) {\n                    obj.date[1] = v;\n                    obj.date[2] = 1; // first day of the month\n                } else {\n                    obj.date[2] = element.innerText;\n                }\n\n                if (!obj.options.time) {\n                    obj.close();\n                } else {\n                    obj.date[3] = calendarSelectHour.value;\n                    obj.date[4] = calendarSelectMin.value;\n                }\n            }\n\n            // Update\n            updateActions();\n        }\n\n        /**\n         * Set to blank\n         */\n        obj.reset = function () {\n            // Close calendar\n            obj.setValue('');\n            obj.date = null;\n            obj.close(false, false);\n        }\n\n        /**\n         * Get calendar days\n         */\n        obj.getDays = function () {\n            // Mode\n            obj.options.mode = 'days';\n\n            // Setting current values in case of NULLs\n            var date = new Date();\n\n            // Current selection\n            var year = obj.date && helpers.isNumeric(obj.date[0]) ? obj.date[0] : parseInt(date.getFullYear());\n            var month = obj.date && helpers.isNumeric(obj.date[1]) ? obj.date[1] : parseInt(date.getMonth()) + 1;\n            var day = obj.date && helpers.isNumeric(obj.date[2]) ? obj.date[2] : parseInt(date.getDate());\n            var hour = obj.date && helpers.isNumeric(obj.date[3]) ? obj.date[3] : parseInt(date.getHours());\n            var min = obj.date && helpers.isNumeric(obj.date[4]) ? obj.date[4] : parseInt(date.getMinutes());\n\n            // Selection container\n            obj.date = [year, month, day, hour, min, 0];\n\n            // Update title\n            calendarLabelYear.innerHTML = year;\n            calendarLabelMonth.innerHTML = obj.options.months[month - 1];\n\n            // Current month and Year\n            var isCurrentMonthAndYear = (date.getMonth() == month - 1) && (date.getFullYear() == year) ? true : false;\n            var currentDay = date.getDate();\n\n            // Number of days in the month\n            var date = new Date(year, month, 0, 0, 0);\n            var numberOfDays = date.getDate();\n\n            // First day\n            var date = new Date(year, month - 1, 0, 0, 0);\n            var firstDay = date.getDay() + 1;\n\n            // Index value\n            var index = obj.options.startingDay || 0;\n\n            // First of day relative to the starting calendar weekday\n            firstDay = firstDay - index;\n\n            // Reset table\n            calendarBody.innerHTML = '';\n\n            // Weekdays Row\n            var row = document.createElement('tr');\n            row.setAttribute('align', 'center');\n            calendarBody.appendChild(row);\n\n            // Create weekdays row\n            for (var i = 0; i < 7; i++) {\n                var cell = document.createElement('td');\n                cell.classList.add('jcalendar-weekday')\n                cell.innerHTML = obj.options.weekdays[index].substr(0, 1);\n                row.appendChild(cell);\n                // Next week day\n                index++;\n                // Restart index\n                if (index > 6) {\n                    index = 0;\n                }\n            }\n\n            // Index of days\n            var index = 0;\n            var d = 0;\n\n            // Calendar table\n            for (var j = 0; j < 6; j++) {\n                // Reset cells container\n                var row = document.createElement('tr');\n                row.setAttribute('align', 'center');\n                row.style.height = '34px';\n\n                // Create cells\n                for (var i = 0; i < 7; i++) {\n                    // Create cell\n                    var cell = document.createElement('td');\n                    cell.classList.add('jcalendar-set-day');\n\n                    if (index >= firstDay && index < (firstDay + numberOfDays)) {\n                        // Day cell\n                        d++;\n                        cell.innerHTML = d;\n\n                        // Selected\n                        if (d == day) {\n                            cell.classList.add('jcalendar-selected');\n                        }\n\n                        // Current selection day is today\n                        if (isCurrentMonthAndYear && currentDay == d) {\n                            cell.style.fontWeight = 'bold';\n                        }\n\n                        // Current selection day\n                        var current = Component.now(new Date(year, month - 1, d), true);\n\n                        // Available ranges\n                        if (obj.options.validRange) {\n                            if (!obj.options.validRange[0] || current >= obj.options.validRange[0]) {\n                                var test1 = true;\n                            } else {\n                                var test1 = false;\n                            }\n\n                            if (!obj.options.validRange[1] || current <= obj.options.validRange[1]) {\n                                var test2 = true;\n                            } else {\n                                var test2 = false;\n                            }\n\n                            if (!(test1 && test2)) {\n                                cell.classList.add('jcalendar-disabled');\n                            }\n                        }\n                    }\n                    // Day cell\n                    row.appendChild(cell);\n                    // Index\n                    index++;\n                }\n\n                // Add cell to the calendar body\n                calendarBody.appendChild(row);\n            }\n\n            // Show time controls\n            if (obj.options.time) {\n                calendarControlsTime.style.display = '';\n            } else {\n                calendarControlsTime.style.display = 'none';\n            }\n\n            // Update\n            updateActions();\n        }\n\n        obj.getMonths = function () {\n            // Mode\n            obj.options.mode = 'months';\n\n            // Loading month labels\n            var months = obj.options.months;\n\n            // Value\n            var value = obj.options.value;\n\n            // Current date\n            var date = new Date();\n            var currentYear = parseInt(date.getFullYear());\n            var currentMonth = parseInt(date.getMonth()) + 1;\n            var selectedYear = obj.date && helpers.isNumeric(obj.date[0]) ? obj.date[0] : currentYear;\n            var selectedMonth = obj.date && helpers.isNumeric(obj.date[1]) ? obj.date[1] : currentMonth;\n\n            // Update title\n            calendarLabelYear.innerHTML = obj.date[0];\n            calendarLabelMonth.innerHTML = months[selectedMonth - 1];\n\n            // Table\n            var table = document.createElement('table');\n            table.setAttribute('width', '100%');\n\n            // Row\n            var row = null;\n\n            // Calendar table\n            for (var i = 0; i < 12; i++) {\n                if (!(i % 4)) {\n                    // Reset cells container\n                    var row = document.createElement('tr');\n                    row.setAttribute('align', 'center');\n                    table.appendChild(row);\n                }\n\n                // Create cell\n                var cell = document.createElement('td');\n                cell.classList.add('jcalendar-set-month');\n                cell.setAttribute('data-value', i + 1);\n                cell.innerText = months[i];\n\n                if (obj.options.validRange) {\n                    var current = selectedYear + '-' + helpers.two(i + 1);\n                    if (!obj.options.validRange[0] || current >= obj.options.validRange[0].substr(0, 7)) {\n                        var test1 = true;\n                    } else {\n                        var test1 = false;\n                    }\n\n                    if (!obj.options.validRange[1] || current <= obj.options.validRange[1].substr(0, 7)) {\n                        var test2 = true;\n                    } else {\n                        var test2 = false;\n                    }\n\n                    if (!(test1 && test2)) {\n                        cell.classList.add('jcalendar-disabled');\n                    }\n                }\n\n                if (i + 1 == selectedMonth) {\n                    cell.classList.add('jcalendar-selected');\n                }\n\n                if (currentYear == selectedYear && i + 1 == currentMonth) {\n                    cell.style.fontWeight = 'bold';\n                }\n\n                row.appendChild(cell);\n            }\n\n            calendarBody.innerHTML = '<tr><td colspan=\"7\"></td></tr>';\n            calendarBody.children[0].children[0].appendChild(table);\n\n            // Update\n            updateActions();\n        }\n\n        obj.getYears = function () {\n            // Mode\n            obj.options.mode = 'years';\n\n            // Current date\n            var date = new Date();\n            var currentYear = date.getFullYear();\n            var selectedYear = obj.date && helpers.isNumeric(obj.date[0]) ? obj.date[0] : parseInt(date.getFullYear());\n\n            // Array of years\n            var y = [];\n            for (var i = 0; i < 25; i++) {\n                y[i] = parseInt(obj.date[0]) + (i - 12);\n            }\n\n            // Assembling the year tables\n            var table = document.createElement('table');\n            table.setAttribute('width', '100%');\n\n            for (var i = 0; i < 25; i++) {\n                if (!(i % 5)) {\n                    // Reset cells container\n                    var row = document.createElement('tr');\n                    row.setAttribute('align', 'center');\n                    table.appendChild(row);\n                }\n\n                // Create cell\n                var cell = document.createElement('td');\n                cell.classList.add('jcalendar-set-year');\n                cell.innerText = y[i];\n\n                if (selectedYear == y[i]) {\n                    cell.classList.add('jcalendar-selected');\n                }\n\n                if (currentYear == y[i]) {\n                    cell.style.fontWeight = 'bold';\n                }\n\n                row.appendChild(cell);\n            }\n\n            calendarBody.innerHTML = '<tr><td colspan=\"7\"></td></tr>';\n            calendarBody.firstChild.firstChild.appendChild(table);\n\n            // Update\n            updateActions();\n        }\n\n        obj.setLabel = function (value, mixed) {\n            return Component.getDateString(value, mixed);\n        }\n\n        obj.fromFormatted = function (value, format) {\n            return Component.extractDateFromString(value, format);\n        }\n\n        var mouseUpControls = function (e) {\n            var element = helpers.findElement(e.target, 'jcalendar-container');\n            if (element) {\n                var action = e.target.className;\n\n                // Object id\n                if (action == 'jcalendar-prev') {\n                    obj.prev();\n                } else if (action == 'jcalendar-next') {\n                    obj.next();\n                } else if (action == 'jcalendar-month') {\n                    obj.getMonths();\n                } else if (action == 'jcalendar-year') {\n                    obj.getYears();\n                } else if (action == 'jcalendar-set-year') {\n                    obj.date[0] = e.target.innerText;\n                    if (obj.options.type == 'year-month-picker') {\n                        obj.getMonths();\n                    } else {\n                        obj.getDays();\n                    }\n                } else if (e.target.classList.contains('jcalendar-set-month')) {\n                    var month = parseInt(e.target.getAttribute('data-value'));\n                    if (obj.options.type == 'year-month-picker') {\n                        obj.update(e.target, month);\n                    } else {\n                        obj.date[1] = month;\n                        obj.getDays();\n                    }\n                } else if (action == 'jcalendar-confirm' || action == 'jcalendar-update' || action == 'jcalendar-close') {\n                    obj.close();\n                } else if (action == 'jcalendar-backdrop') {\n                    obj.close(false, false);\n                } else if (action == 'jcalendar-reset') {\n                    obj.reset();\n                } else if (e.target.classList.contains('jcalendar-set-day') && e.target.innerText) {\n                    obj.update(e.target);\n                }\n            } else {\n                obj.close();\n            }\n        }\n\n        var keyUpControls = function (e) {\n            if (e.target.value && e.target.value.length > 3) {\n                var test = Component.extractDateFromString(e.target.value, obj.options.format);\n                if (test) {\n                    obj.setValue(test);\n                }\n            }\n        }\n\n        // Update actions button\n        var updateActions = function () {\n            var currentDay = calendar.querySelector('.jcalendar-selected');\n\n            if (currentDay && currentDay.classList.contains('jcalendar-disabled')) {\n                calendarControlsUpdateButton.setAttribute('disabled', 'disabled');\n                calendarSelectHour.setAttribute('disabled', 'disabled');\n                calendarSelectMin.setAttribute('disabled', 'disabled');\n            } else {\n                calendarControlsUpdateButton.removeAttribute('disabled');\n                calendarSelectHour.removeAttribute('disabled');\n                calendarSelectMin.removeAttribute('disabled');\n            }\n\n            // Event\n            if (typeof (obj.options.onupdate) == 'function') {\n                obj.options.onupdate(el, obj.getValue());\n            }\n        }\n\n        var calendar = null;\n        var calendarReset = null;\n        var calendarConfirm = null;\n        var calendarContainer = null;\n        var calendarContent = null;\n        var calendarLabelYear = null;\n        var calendarLabelMonth = null;\n        var calendarTable = null;\n        var calendarBody = null;\n\n        var calendarControls = null;\n        var calendarControlsTime = null;\n        var calendarControlsUpdate = null;\n        var calendarControlsUpdateButton = null;\n        var calendarSelectHour = null;\n        var calendarSelectMin = null;\n\n        var init = function () {\n            // Get value from initial element if that is an input\n            if (el.tagName == 'INPUT' && el.value) {\n                options.value = el.value;\n            }\n\n            // Calendar DOM elements\n            calendarReset = document.createElement('div');\n            calendarReset.className = 'jcalendar-reset';\n\n            calendarConfirm = document.createElement('div');\n            calendarConfirm.className = 'jcalendar-confirm';\n\n            calendarControls = document.createElement('div');\n            calendarControls.className = 'jcalendar-controls'\n            calendarControls.style.borderBottom = '1px solid #ddd';\n            calendarControls.appendChild(calendarReset);\n            calendarControls.appendChild(calendarConfirm);\n\n            calendarContainer = document.createElement('div');\n            calendarContainer.className = 'jcalendar-container';\n            calendarContent = document.createElement('div');\n            calendarContent.className = 'jcalendar-content';\n            calendarContainer.appendChild(calendarContent);\n\n            // Main element\n            if (el.tagName == 'DIV') {\n                calendar = el;\n                calendar.classList.add('jcalendar-inline');\n            } else {\n                // Add controls to the screen\n                calendarContent.appendChild(calendarControls);\n\n                calendar = document.createElement('div');\n                calendar.className = 'jcalendar';\n            }\n            calendar.classList.add('jcalendar-container');\n            calendar.appendChild(calendarContainer);\n\n            // Table container\n            var calendarTableContainer = document.createElement('div');\n            calendarTableContainer.className = 'jcalendar-table';\n            calendarContent.appendChild(calendarTableContainer);\n\n            // Previous button\n            var calendarHeaderPrev = document.createElement('td');\n            calendarHeaderPrev.setAttribute('colspan', '2');\n            calendarHeaderPrev.className = 'jcalendar-prev';\n\n            // Header with year and month\n            calendarLabelYear = document.createElement('span');\n            calendarLabelYear.className = 'jcalendar-year';\n            calendarLabelMonth = document.createElement('span');\n            calendarLabelMonth.className = 'jcalendar-month';\n\n            var calendarHeaderTitle = document.createElement('td');\n            calendarHeaderTitle.className = 'jcalendar-header';\n            calendarHeaderTitle.setAttribute('colspan', '3');\n            calendarHeaderTitle.appendChild(calendarLabelMonth);\n            calendarHeaderTitle.appendChild(calendarLabelYear);\n\n            var calendarHeaderNext = document.createElement('td');\n            calendarHeaderNext.setAttribute('colspan', '2');\n            calendarHeaderNext.className = 'jcalendar-next';\n\n            var calendarHeader = document.createElement('thead');\n            var calendarHeaderRow = document.createElement('tr');\n            calendarHeaderRow.appendChild(calendarHeaderPrev);\n            calendarHeaderRow.appendChild(calendarHeaderTitle);\n            calendarHeaderRow.appendChild(calendarHeaderNext);\n            calendarHeader.appendChild(calendarHeaderRow);\n\n            calendarTable = document.createElement('table');\n            calendarBody = document.createElement('tbody');\n            calendarTable.setAttribute('cellpadding', '0');\n            calendarTable.setAttribute('cellspacing', '0');\n            calendarTable.appendChild(calendarHeader);\n            calendarTable.appendChild(calendarBody);\n            calendarTableContainer.appendChild(calendarTable);\n\n            calendarSelectHour = document.createElement('select');\n            calendarSelectHour.className = 'jcalendar-select';\n            calendarSelectHour.onchange = function () {\n                obj.date[3] = this.value;\n\n                // Event\n                if (typeof (obj.options.onupdate) == 'function') {\n                    obj.options.onupdate(el, obj.getValue());\n                }\n            }\n\n            for (var i = 0; i < 24; i++) {\n                var element = document.createElement('option');\n                element.value = i;\n                element.innerHTML = helpers.two(i);\n                calendarSelectHour.appendChild(element);\n            }\n\n            calendarSelectMin = document.createElement('select');\n            calendarSelectMin.className = 'jcalendar-select';\n            calendarSelectMin.onchange = function () {\n                obj.date[4] = this.value;\n\n                // Event\n                if (typeof (obj.options.onupdate) == 'function') {\n                    obj.options.onupdate(el, obj.getValue());\n                }\n            }\n\n            for (var i = 0; i < 60; i++) {\n                var element = document.createElement('option');\n                element.value = i;\n                element.innerHTML = helpers.two(i);\n                calendarSelectMin.appendChild(element);\n            }\n\n            // Footer controls\n            var calendarControlsFooter = document.createElement('div');\n            calendarControlsFooter.className = 'jcalendar-controls';\n\n            calendarControlsTime = document.createElement('div');\n            calendarControlsTime.className = 'jcalendar-time';\n            calendarControlsTime.style.maxWidth = '140px';\n            calendarControlsTime.appendChild(calendarSelectHour);\n            calendarControlsTime.appendChild(calendarSelectMin);\n\n            calendarControlsUpdateButton = document.createElement('button');\n            calendarControlsUpdateButton.setAttribute('type', 'button');\n            calendarControlsUpdateButton.className = 'jcalendar-update';\n\n            calendarControlsUpdate = document.createElement('div');\n            calendarControlsUpdate.style.flexGrow = '10';\n            calendarControlsUpdate.appendChild(calendarControlsUpdateButton);\n            calendarControlsFooter.appendChild(calendarControlsTime);\n\n            // Only show the update button for input elements\n            if (el.tagName == 'INPUT') {\n                calendarControlsFooter.appendChild(calendarControlsUpdate);\n            }\n\n            calendarContent.appendChild(calendarControlsFooter);\n\n            var calendarBackdrop = document.createElement('div');\n            calendarBackdrop.className = 'jcalendar-backdrop';\n            calendar.appendChild(calendarBackdrop);\n\n            // Handle events\n            el.addEventListener(\"keyup\", keyUpControls);\n\n            // Add global events\n            calendar.addEventListener(\"swipeleft\", function (e) {\n                animation.slideLeft(calendarTable, 0, function () {\n                    obj.next();\n                    animation.slideRight(calendarTable, 1);\n                });\n                e.preventDefault();\n                e.stopPropagation();\n            });\n\n            calendar.addEventListener(\"swiperight\", function (e) {\n                animation.slideRight(calendarTable, 0, function () {\n                    obj.prev();\n                    animation.slideLeft(calendarTable, 1);\n                });\n                e.preventDefault();\n                e.stopPropagation();\n            });\n\n            if ('ontouchend' in document.documentElement === true) {\n                calendar.addEventListener(\"touchend\", mouseUpControls);\n                el.addEventListener(\"touchend\", obj.open);\n            } else {\n                calendar.addEventListener(\"mouseup\", mouseUpControls);\n                el.addEventListener(\"mouseup\", obj.open);\n            }\n\n            // Global controls\n            if (!Component.hasEvents) {\n                // Execute only one time\n                Component.hasEvents = true;\n                // Enter and Esc\n                document.addEventListener(\"keydown\", Component.keydown);\n            }\n\n            // Set configuration\n            obj.setOptions(options);\n\n            // Append element to the DOM\n            if (el.tagName == 'INPUT') {\n                el.parentNode.insertBefore(calendar, el.nextSibling);\n                // Add properties\n                el.setAttribute('autocomplete', 'off');\n                // Element\n                el.classList.add('jcalendar-input');\n                // Value\n                el.value = obj.setLabel(obj.getValue(), obj.options);\n            } else {\n                // Get days\n                obj.getDays();\n                // Hour\n                if (obj.options.time) {\n                    calendarSelectHour.value = obj.date[3];\n                    calendarSelectMin.value = obj.date[4];\n                }\n            }\n\n            // Default opened\n            if (obj.options.opened == true) {\n                obj.open();\n            }\n\n            // Controls\n            if (obj.options.controls == false) {\n                calendarContainer.classList.add('jcalendar-hide-controls');\n            }\n\n            // Change method\n            el.change = obj.setValue;\n\n            // Global generic value handler\n            el.val = function (val) {\n                if (val === undefined) {\n                    return obj.getValue();\n                } else {\n                    obj.setValue(val);\n                }\n            }\n\n            // Keep object available from the node\n            el.calendar = calendar.calendar = obj;\n        }\n\n        init();\n\n        return obj;\n    });\n\n    Component.keydown = function (e) {\n        var calendar = null;\n        if (calendar = Component.current) {\n            if (e.which == 13) {\n                // ENTER\n                calendar.close(false, true);\n            } else if (e.which == 27) {\n                // ESC\n                calendar.close(false, false);\n            }\n        }\n    }\n\n    Component.prettify = function (d, texts) {\n        if (!texts) {\n            var texts = {\n                justNow: 'Just now',\n                xMinutesAgo: '{0}m ago',\n                xHoursAgo: '{0}h ago',\n                xDaysAgo: '{0}d ago',\n                xWeeksAgo: '{0}w ago',\n                xMonthsAgo: '{0} mon ago',\n                xYearsAgo: '{0}y ago',\n            }\n        }\n\n        var d1 = new Date();\n        var d2 = new Date(d);\n        var total = parseInt((d1 - d2) / 1000 / 60);\n\n        String.prototype.format = function (o) {\n            return this.replace('{0}', o);\n        }\n\n        if (total == 0) {\n            var text = texts.justNow;\n        } else if (total < 90) {\n            var text = texts.xMinutesAgo.format(total);\n        } else if (total < 1440) { // One day\n            var text = texts.xHoursAgo.format(Math.round(total / 60));\n        } else if (total < 20160) { // 14 days\n            var text = texts.xDaysAgo.format(Math.round(total / 1440));\n        } else if (total < 43200) { // 30 days\n            var text = texts.xWeeksAgo.format(Math.round(total / 10080));\n        } else if (total < 1036800) { // 24 months\n            var text = texts.xMonthsAgo.format(Math.round(total / 43200));\n        } else { // 24 months+\n            var text = texts.xYearsAgo.format(Math.round(total / 525600));\n        }\n\n        return text;\n    }\n\n    Component.prettifyAll = function () {\n        var elements = document.querySelectorAll('.prettydate');\n        for (var i = 0; i < elements.length; i++) {\n            if (elements[i].getAttribute('data-date')) {\n                elements[i].innerHTML = Component.prettify(elements[i].getAttribute('data-date'));\n            } else {\n                if (elements[i].innerHTML) {\n                    elements[i].setAttribute('title', elements[i].innerHTML);\n                    elements[i].setAttribute('data-date', elements[i].innerHTML);\n                    elements[i].innerHTML = Component.prettify(elements[i].innerHTML);\n                }\n            }\n        }\n    }\n\n    Component.now = helpers_date.now;\n    Component.toArray = helpers_date.toArray;\n    Component.dateToNum = helpers_date.dateToNum\n    Component.numToDate = helpers_date.numToDate;\n    Component.weekdays = helpers_date.weekdays;\n    Component.months = helpers_date.months;\n    Component.weekdaysShort = helpers_date.weekdaysShort;\n    Component.monthsShort = helpers_date.monthsShort;\n\n    // Legacy shortcut\n    Component.extractDateFromString = mask.extractDateFromString;\n    Component.getDateString = mask.getDateString;\n\n    return Component;\n}\n\n/* harmony default export */ var calendar = (Calendar());\n;// CONCATENATED MODULE: ./src/plugins/palette.js\n// More palettes https://coolors.co/ or https://gka.github.io/palettes/#/10|s|003790,005647,ffffe0|ffffe0,ff005e,93003a|1|1\n\nfunction Palette() {\n\n    var palette = {\n        material: [\n            [\"#ffebee\", \"#fce4ec\", \"#f3e5f5\", \"#e8eaf6\", \"#e3f2fd\", \"#e0f7fa\", \"#e0f2f1\", \"#e8f5e9\", \"#f1f8e9\", \"#f9fbe7\", \"#fffde7\", \"#fff8e1\", \"#fff3e0\", \"#fbe9e7\", \"#efebe9\", \"#fafafa\", \"#eceff1\"],\n            [\"#ffcdd2\", \"#f8bbd0\", \"#e1bee7\", \"#c5cae9\", \"#bbdefb\", \"#b2ebf2\", \"#b2dfdb\", \"#c8e6c9\", \"#dcedc8\", \"#f0f4c3\", \"#fff9c4\", \"#ffecb3\", \"#ffe0b2\", \"#ffccbc\", \"#d7ccc8\", \"#f5f5f5\", \"#cfd8dc\"],\n            [\"#ef9a9a\", \"#f48fb1\", \"#ce93d8\", \"#9fa8da\", \"#90caf9\", \"#80deea\", \"#80cbc4\", \"#a5d6a7\", \"#c5e1a5\", \"#e6ee9c\", \"#fff59d\", \"#ffe082\", \"#ffcc80\", \"#ffab91\", \"#bcaaa4\", \"#eeeeee\", \"#b0bec5\"],\n            [\"#e57373\", \"#f06292\", \"#ba68c8\", \"#7986cb\", \"#64b5f6\", \"#4dd0e1\", \"#4db6ac\", \"#81c784\", \"#aed581\", \"#dce775\", \"#fff176\", \"#ffd54f\", \"#ffb74d\", \"#ff8a65\", \"#a1887f\", \"#e0e0e0\", \"#90a4ae\"],\n            [\"#ef5350\", \"#ec407a\", \"#ab47bc\", \"#5c6bc0\", \"#42a5f5\", \"#26c6da\", \"#26a69a\", \"#66bb6a\", \"#9ccc65\", \"#d4e157\", \"#ffee58\", \"#ffca28\", \"#ffa726\", \"#ff7043\", \"#8d6e63\", \"#bdbdbd\", \"#78909c\"],\n            [\"#f44336\", \"#e91e63\", \"#9c27b0\", \"#3f51b5\", \"#2196f3\", \"#00bcd4\", \"#009688\", \"#4caf50\", \"#8bc34a\", \"#cddc39\", \"#ffeb3b\", \"#ffc107\", \"#ff9800\", \"#ff5722\", \"#795548\", \"#9e9e9e\", \"#607d8b\"],\n            [\"#e53935\", \"#d81b60\", \"#8e24aa\", \"#3949ab\", \"#1e88e5\", \"#00acc1\", \"#00897b\", \"#43a047\", \"#7cb342\", \"#c0ca33\", \"#fdd835\", \"#ffb300\", \"#fb8c00\", \"#f4511e\", \"#6d4c41\", \"#757575\", \"#546e7a\"],\n            [\"#d32f2f\", \"#c2185b\", \"#7b1fa2\", \"#303f9f\", \"#1976d2\", \"#0097a7\", \"#00796b\", \"#388e3c\", \"#689f38\", \"#afb42b\", \"#fbc02d\", \"#ffa000\", \"#f57c00\", \"#e64a19\", \"#5d4037\", \"#616161\", \"#455a64\"],\n            [\"#c62828\", \"#ad1457\", \"#6a1b9a\", \"#283593\", \"#1565c0\", \"#00838f\", \"#00695c\", \"#2e7d32\", \"#558b2f\", \"#9e9d24\", \"#f9a825\", \"#ff8f00\", \"#ef6c00\", \"#d84315\", \"#4e342e\", \"#424242\", \"#37474f\"],\n            [\"#b71c1c\", \"#880e4f\", \"#4a148c\", \"#1a237e\", \"#0d47a1\", \"#006064\", \"#004d40\", \"#1b5e20\", \"#33691e\", \"#827717\", \"#f57f17\", \"#ff6f00\", \"#e65100\", \"#bf360c\", \"#3e2723\", \"#212121\", \"#263238\"],\n        ],\n        fire: [\n            [\"0b1a6d\", \"840f38\", \"b60718\", \"de030b\", \"ff0c0c\", \"fd491c\", \"fc7521\", \"faa331\", \"fbb535\", \"ffc73a\"],\n            [\"071147\", \"5f0b28\", \"930513\", \"be0309\", \"ef0000\", \"fa3403\", \"fb670b\", \"f9991b\", \"faad1e\", \"ffc123\"],\n            [\"03071e\", \"370617\", \"6a040f\", \"9d0208\", \"d00000\", \"dc2f02\", \"e85d04\", \"f48c06\", \"faa307\", \"ffba08\"],\n            [\"020619\", \"320615\", \"61040d\", \"8c0207\", \"bc0000\", \"c82a02\", \"d05203\", \"db7f06\", \"e19405\", \"efab00\"],\n            [\"020515\", \"2d0513\", \"58040c\", \"7f0206\", \"aa0000\", \"b62602\", \"b94903\", \"c57205\", \"ca8504\", \"d89b00\"],\n        ],\n        baby: [\n            [\"eddcd2\", \"fff1e6\", \"fde2e4\", \"fad2e1\", \"c5dedd\", \"dbe7e4\", \"f0efeb\", \"d6e2e9\", \"bcd4e6\", \"99c1de\"],\n            [\"e1c4b3\", \"ffd5b5\", \"fab6ba\", \"f5a8c4\", \"aacecd\", \"bfd5cf\", \"dbd9d0\", \"baceda\", \"9dc0db\", \"7eb1d5\"],\n            [\"daa990\", \"ffb787\", \"f88e95\", \"f282a9\", \"8fc4c3\", \"a3c8be\", \"cec9b3\", \"9dbcce\", \"82acd2\", \"649dcb\"],\n            [\"d69070\", \"ff9c5e\", \"f66770\", \"f05f8f\", \"74bbb9\", \"87bfae\", \"c5b993\", \"83aac3\", \"699bca\", \"4d89c2\"],\n            [\"c97d5d\", \"f58443\", \"eb4d57\", \"e54a7b\", \"66a9a7\", \"78ae9c\", \"b5a67e\", \"7599b1\", \"5c88b7\", \"4978aa\"],\n        ],\n        chart: [\n            ['#C1D37F', '#4C5454', '#FFD275', '#66586F', '#D05D5B', '#C96480', '#95BF8F', '#6EA240', '#0F0F0E', '#EB8258', '#95A3B3', '#995D81'],\n        ],\n    }\n\n    var Component = function (o) {\n        // Otherwise get palette value\n        if (palette[o]) {\n            return palette[o];\n        } else {\n            return palette.material;\n        }\n    }\n\n    Component.get = function (o) {\n        // Otherwise get palette value\n        if (palette[o]) {\n            return palette[o];\n        } else {\n            return palette;\n        }\n    }\n\n    Component.set = function (o, v) {\n        palette[o] = v;\n    }\n\n    return Component;\n}\n\n/* harmony default export */ var palette = (Palette());\n;// CONCATENATED MODULE: ./src/plugins/tabs.js\n\n\n\nfunction Tabs(el, options) {\n    var obj = {};\n    obj.options = {};\n\n    // Default configuration\n    var defaults = {\n        data: [],\n        position: null,\n        allowCreate: false,\n        allowChangePosition: false,\n        onclick: null,\n        onload: null,\n        onchange: null,\n        oncreate: null,\n        ondelete: null,\n        onbeforecreate: null,\n        onchangeposition: null,\n        animation: false,\n        hideHeaders: false,\n        padding: null,\n        palette: null,\n        maxWidth: null,\n    }\n\n    // Loop through the initial configuration\n    for (var property in defaults) {\n        if (options && options.hasOwnProperty(property)) {\n            obj.options[property] = options[property];\n        } else {\n            obj.options[property] = defaults[property];\n        }\n    }\n\n    // Class\n    el.classList.add('jtabs');\n\n    var prev = null;\n    var next = null;\n    var border = null;\n\n    // Helpers\n    var setBorder = function(index) {\n        if (obj.options.animation) {\n            setTimeout(function() {\n                var rect = obj.headers.children[index].getBoundingClientRect();\n\n                if (obj.options.palette == 'modern') {\n                    border.style.width = rect.width - 4 + 'px';\n                    border.style.left = obj.headers.children[index].offsetLeft + 2 + 'px';\n                } else {\n                    border.style.width = rect.width + 'px';\n                    border.style.left = obj.headers.children[index].offsetLeft + 'px';\n                }\n\n                if (obj.options.position == 'bottom') {\n                    border.style.top = '0px';\n                } else {\n                    border.style.bottom = '0px';\n                }\n            }, 150);\n        }\n    }\n\n    var updateControls = function(x) {\n        if (typeof(obj.headers.scrollTo) == 'function') {\n            obj.headers.scrollTo({\n                left: x,\n                behavior: 'smooth',\n            });\n        } else {\n            obj.headers.scrollLeft = x;\n        }\n\n        if (x <= 1) {\n            prev.classList.add('disabled');\n        } else {\n            prev.classList.remove('disabled');\n        }\n\n        if (x >= obj.headers.scrollWidth - obj.headers.offsetWidth) {\n            next.classList.add('disabled');\n        } else {\n            next.classList.remove('disabled');\n        }\n\n        if (obj.headers.scrollWidth <= obj.headers.offsetWidth) {\n            prev.style.display = 'none';\n            next.style.display = 'none';\n        } else {\n            prev.style.display = '';\n            next.style.display = '';\n        }\n    }\n\n    obj.setBorder = setBorder;\n\n    // Set value\n    obj.open = function(index) {\n        var previous = null;\n        for (var i = 0; i < obj.headers.children.length; i++) {\n            if (obj.headers.children[i].classList.contains('jtabs-selected')) {\n                // Current one\n                previous = i;\n            }\n            // Remote selected\n            obj.headers.children[i].classList.remove('jtabs-selected');\n            if (obj.content.children[i]) {\n                obj.content.children[i].classList.remove('jtabs-selected');\n            }\n        }\n\n        obj.headers.children[index].classList.add('jtabs-selected');\n        if (obj.content.children[index]) {\n            obj.content.children[index].classList.add('jtabs-selected');\n        }\n\n        if (previous != index && typeof(obj.options.onchange) == 'function') {\n            if (obj.content.children[index]) {\n                obj.options.onchange(el, obj, index, obj.headers.children[index], obj.content.children[index]);\n            }\n        }\n\n        // Hide\n        if (obj.options.hideHeaders == true && (obj.headers.children.length < 3 && obj.options.allowCreate == false)) {\n            obj.headers.parentNode.style.display = 'none';\n        } else {\n            // Set border\n            setBorder(index);\n\n            obj.headers.parentNode.style.display = '';\n\n            var x1 = obj.headers.children[index].offsetLeft;\n            var x2 = x1 + obj.headers.children[index].offsetWidth;\n            var r1 = obj.headers.scrollLeft;\n            var r2 = r1 + obj.headers.offsetWidth;\n\n            if (! (r1 <= x1 && r2 >= x2)) {\n                // Out of the viewport\n                updateControls(x1 - 1);\n            }\n        }\n    }\n\n    obj.selectIndex = function(a) {\n        var index = Array.prototype.indexOf.call(obj.headers.children, a);\n        if (index >= 0) {\n            obj.open(index);\n        }\n\n        return index;\n    }\n\n    obj.rename = function(i, title) {\n        if (! title) {\n            title = prompt('New title', obj.headers.children[i].innerText);\n        }\n        obj.headers.children[i].innerText = title;\n        obj.open(i);\n    }\n\n    obj.create = function(title, url) {\n        if (typeof(obj.options.onbeforecreate) == 'function') {\n            var ret = obj.options.onbeforecreate(el);\n            if (ret === false) {\n                return false;\n            } else {\n                title = ret;\n            }\n        }\n\n        var div = obj.appendElement(title);\n\n        if (typeof(obj.options.oncreate) == 'function') {\n            obj.options.oncreate(el, div)\n        }\n\n        setBorder();\n\n        return div;\n    }\n\n    obj.remove = function(index) {\n        return obj.deleteElement(index);\n    }\n\n    obj.nextNumber = function() {\n        var num = 0;\n        for (var i = 0; i < obj.headers.children.length; i++) {\n            var tmp = obj.headers.children[i].innerText.match(/[0-9].*/);\n            if (tmp > num) {\n                num = parseInt(tmp);\n            }\n        }\n        if (! num) {\n            num = 1;\n        } else {\n            num++;\n        }\n\n        return num;\n    }\n\n    obj.deleteElement = function(index) {\n        if (! obj.headers.children[index]) {\n            return false;\n        } else {\n            obj.headers.removeChild(obj.headers.children[index]);\n            obj.content.removeChild(obj.content.children[index]);\n        }\n\n        obj.open(0);\n\n        if (typeof(obj.options.ondelete) == 'function') {\n            obj.options.ondelete(el, index)\n        }\n    }\n\n    obj.appendElement = function(title, cb) {\n        if (! title) {\n            var title = prompt('Title?', '');\n        }\n\n        if (title) {\n            // Add content\n            var div = document.createElement('div');\n            obj.content.appendChild(div);\n\n            // Add headers\n            var h = document.createElement('div');\n            h.innerHTML = title;\n            h.content = div;\n            obj.headers.insertBefore(h, obj.headers.lastChild);\n\n            // Sortable\n            if (obj.options.allowChangePosition) {\n                h.setAttribute('draggable', 'true');\n            }\n            // Open new tab\n            obj.selectIndex(h);\n\n            // Callback\n            if (typeof(cb) == 'function') {\n                cb(div, h);\n            }\n\n            // Return element\n            return div;\n        }\n    }\n\n    obj.getActive = function() {\n        for (var i = 0; i < obj.headers.children.length; i++) {\n            if (obj.headers.children[i].classList.contains('jtabs-selected')) {\n                return i\n            }\n        }\n        return 0;\n    }\n\n    obj.updateContent = function(position, newContent) {\n        if (typeof newContent !== 'string') {\n            var contentItem = newContent;\n        } else {\n            var contentItem = document.createElement('div');\n            contentItem.innerHTML = newContent;\n        }\n\n        if (obj.content.children[position].classList.contains('jtabs-selected')) {\n            newContent.classList.add('jtabs-selected');\n        }\n\n        obj.content.replaceChild(newContent, obj.content.children[position]);\n\n        setBorder();\n    }\n\n    obj.updatePosition = function(f, t) {\n        // Ondrop update position of content\n        if (f > t) {\n            obj.content.insertBefore(obj.content.children[f], obj.content.children[t]);\n        } else {\n            obj.content.insertBefore(obj.content.children[f], obj.content.children[t].nextSibling);\n        }\n\n        // Open destination tab\n        obj.open(t);\n\n        // Call event\n        if (typeof(obj.options.onchangeposition) == 'function') {\n            obj.options.onchangeposition(obj.headers, f, t);\n        }\n    }\n\n    obj.move = function(f, t) {\n        if (f > t) {\n            obj.headers.insertBefore(obj.headers.children[f], obj.headers.children[t]);\n        } else {\n            obj.headers.insertBefore(obj.headers.children[f], obj.headers.children[t].nextSibling);\n        }\n\n        obj.updatePosition(f, t);\n    }\n\n    obj.setBorder = setBorder;\n\n    obj.init = function() {\n        el.innerHTML = '';\n\n        // Make sure the component is blank\n        obj.headers = document.createElement('div');\n        obj.content = document.createElement('div');\n        obj.headers.classList.add('jtabs-headers');\n        obj.content.classList.add('jtabs-content');\n\n        if (obj.options.palette) {\n            el.classList.add('jtabs-modern');\n        } else {\n            el.classList.remove('jtabs-modern');\n        }\n\n        // Padding\n        if (obj.options.padding) {\n            obj.content.style.padding = parseInt(obj.options.padding) + 'px';\n        }\n\n        // Header\n        var header = document.createElement('div');\n        header.className = 'jtabs-headers-container';\n        header.appendChild(obj.headers);\n        if (obj.options.maxWidth) {\n            header.style.maxWidth = parseInt(obj.options.maxWidth) + 'px';\n        }\n\n        // Controls\n        var controls = document.createElement('div');\n        controls.className = 'jtabs-controls';\n        controls.setAttribute('draggable', 'false');\n        header.appendChild(controls);\n\n        // Append DOM elements\n        if (obj.options.position == 'bottom') {\n            el.appendChild(obj.content);\n            el.appendChild(header);\n        } else {\n            el.appendChild(header);\n            el.appendChild(obj.content);\n        }\n\n        // New button\n        if (obj.options.allowCreate == true) {\n            var add = document.createElement('div');\n            add.className = 'jtabs-add';\n            add.onclick = function() {\n                obj.create();\n            }\n            controls.appendChild(add);\n        }\n\n        prev = document.createElement('div');\n        prev.className = 'jtabs-prev';\n        prev.onclick = function() {\n            updateControls(obj.headers.scrollLeft - obj.headers.offsetWidth);\n        }\n        controls.appendChild(prev);\n\n        next = document.createElement('div');\n        next.className = 'jtabs-next';\n        next.onclick = function() {\n            updateControls(obj.headers.scrollLeft + obj.headers.offsetWidth);\n        }\n        controls.appendChild(next);\n\n        // Data\n        for (var i = 0; i < obj.options.data.length; i++) {\n            // Title\n            if (obj.options.data[i].titleElement) {\n                var headerItem = obj.options.data[i].titleElement;\n            } else {\n                var headerItem = document.createElement('div');\n            }\n            // Icon\n            if (obj.options.data[i].icon) {\n                var iconContainer = document.createElement('div');\n                var icon = document.createElement('i');\n                icon.classList.add('material-icons');\n                icon.innerHTML = obj.options.data[i].icon;\n                iconContainer.appendChild(icon);\n                headerItem.appendChild(iconContainer);\n            }\n            // Title\n            if (obj.options.data[i].title) {\n                var title = document.createTextNode(obj.options.data[i].title);\n                headerItem.appendChild(title);\n            }\n            // Width\n            if (obj.options.data[i].width) {\n                headerItem.style.width = obj.options.data[i].width;\n            }\n            // Content\n            if (obj.options.data[i].contentElement) {\n                var contentItem = obj.options.data[i].contentElement;\n            } else {\n                var contentItem = document.createElement('div');\n                contentItem.innerHTML = obj.options.data[i].content;\n            }\n            obj.headers.appendChild(headerItem);\n            obj.content.appendChild(contentItem);\n        }\n\n        // Animation\n        border = document.createElement('div');\n        border.className = 'jtabs-border';\n        obj.headers.appendChild(border);\n\n        if (obj.options.animation) {\n            el.classList.add('jtabs-animation');\n        }\n\n        // Events\n        obj.headers.addEventListener(\"click\", function(e) {\n            if (e.target.parentNode.classList.contains('jtabs-headers')) {\n                var target = e.target;\n            } else {\n                if (e.target.tagName == 'I') {\n                    var target = e.target.parentNode.parentNode;\n                } else {\n                    var target = e.target.parentNode;\n                }\n            }\n\n            var index = obj.selectIndex(target);\n\n            if (typeof(obj.options.onclick) == 'function') {\n                obj.options.onclick(el, obj, index, obj.headers.children[index], obj.content.children[index]);\n            }\n        });\n\n        obj.headers.addEventListener(\"contextmenu\", function(e) {\n            obj.selectIndex(e.target);\n        });\n\n        if (obj.headers.children.length) {\n            // Open first tab\n            obj.open(0);\n        }\n\n        // Update controls\n        updateControls(0);\n\n        if (obj.options.allowChangePosition == true) {\n            Sorting(obj.headers, {\n                direction: 1,\n                ondrop: function(a,b,c) {\n                    obj.updatePosition(b,c);\n                },\n            });\n        }\n\n        if (typeof(obj.options.onload) == 'function') {\n            obj.options.onload(el, obj);\n        }\n    }\n\n    // Loading existing nodes as the data\n    if (el.children[0] && el.children[0].children.length) {\n        // Create from existing elements\n        for (var i = 0; i < el.children[0].children.length; i++) {\n            var item = obj.options.data && obj.options.data[i] ? obj.options.data[i] : {};\n\n            if (el.children[1] && el.children[1].children[i]) {\n                item.titleElement = el.children[0].children[i];\n                item.contentElement = el.children[1].children[i];\n            } else {\n                item.contentElement = el.children[0].children[i];\n            }\n\n            obj.options.data[i] = item;\n        }\n    }\n\n    // Remote controller flag\n    var loadingRemoteData = false;\n\n    // Create from data\n    if (obj.options.data) {\n        // Append children\n        for (var i = 0; i < obj.options.data.length; i++) {\n            if (obj.options.data[i].url) {\n                ajax({\n                    url: obj.options.data[i].url,\n                    type: 'GET',\n                    dataType: 'text/html',\n                    index: i,\n                    success: function(result) {\n                        obj.options.data[this.index].content = result;\n                    },\n                    complete: function() {\n                        obj.init();\n                    }\n                });\n\n                // Flag loading\n                loadingRemoteData = true;\n            }\n        }\n    }\n\n    if (! loadingRemoteData) {\n        obj.init();\n    }\n\n    el.tabs = obj;\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/color.js\n\n\n\n\n\n\nfunction Color(el, options) {\n    // Already created, update options\n    if (el.color) {\n        return el.color.setOptions(options, true);\n    }\n\n    // New instance\n    var obj = { type: 'color' };\n    obj.options = {};\n\n    var container = null;\n    var backdrop = null;\n    var content = null;\n    var resetButton = null;\n    var closeButton = null;\n    var tabs = null;\n    var jsuitesTabs = null;\n\n    /**\n     * Update options\n     */\n    obj.setOptions = function(options, reset) {\n        /**\n         * @typedef {Object} defaults\n         * @property {(string|Array)} value - Initial value of the compontent\n         * @property {string} placeholder - The default instruction text on the element\n         * @property {requestCallback} onchange - Method to be execute after any changes on the element\n         * @property {requestCallback} onclose - Method to be execute when the element is closed\n         * @property {string} doneLabel - Label for button done\n         * @property {string} resetLabel - Label for button reset\n         * @property {string} resetValue - Value for button reset\n         * @property {Bool} showResetButton - Active or note for button reset - default false\n         */\n        var defaults = {\n            placeholder: '',\n            value: null,\n            onopen: null,\n            onclose: null,\n            onchange: null,\n            closeOnChange: true,\n            palette: null,\n            position: null,\n            doneLabel: 'Done',\n            resetLabel: 'Reset',\n            fullscreen: false,\n            opened: false,\n        }\n\n        if (! options) {\n            options = {};\n        }\n\n        if (options && ! options.palette) {\n            // Default palette\n            options.palette = palette();\n        }\n\n        // Loop through our object\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                if (typeof(obj.options[property]) == 'undefined' || reset === true) {\n                    obj.options[property] = defaults[property];\n                }\n            }\n        }\n\n        // Update the text of the controls, if they have already been created\n        if (resetButton) {\n            resetButton.innerHTML = obj.options.resetLabel;\n        }\n        if (closeButton) {\n            closeButton.innerHTML = obj.options.doneLabel;\n        }\n\n        // Update the pallete\n        if (obj.options.palette && jsuitesTabs) {\n            jsuitesTabs.updateContent(0, table());\n        }\n\n        // Value\n        if (typeof obj.options.value === 'string') {\n            el.value = obj.options.value;\n            if (el.tagName === 'INPUT') {\n                el.style.color = el.value;\n                el.style.backgroundColor = el.value;\n            }\n        }\n\n        // Placeholder\n        if (obj.options.placeholder) {\n            el.setAttribute('placeholder', obj.options.placeholder);\n        } else {\n            if (el.getAttribute('placeholder')) {\n                el.removeAttribute('placeholder');\n            }\n        }\n\n        return obj;\n    }\n\n    obj.select = function(color) {\n        // Remove current selected mark\n        var selected = container.querySelector('.jcolor-selected');\n        if (selected) {\n            selected.classList.remove('jcolor-selected');\n        }\n\n        // Mark cell as selected\n        if (obj.values[color]) {\n            obj.values[color].classList.add('jcolor-selected');\n        }\n\n        obj.options.value = color;\n    }\n\n    /**\n     * Open color pallete\n     */\n    obj.open = function() {\n        if (! container.classList.contains('jcolor-focus')) {\n            // Start tracking\n            Tracking(obj, true);\n\n            // Show color picker\n            container.classList.add('jcolor-focus');\n\n            // Select current color\n            if (obj.options.value) {\n                obj.select(obj.options.value);\n            }\n\n            // Reset margin\n            content.style.marginTop = '';\n            content.style.marginLeft = '';\n\n            var rectContent = content.getBoundingClientRect();\n            var availableWidth = helpers.getWindowWidth();\n            var availableHeight = helpers.getWindowHeight();\n\n            if (availableWidth < 800 || obj.options.fullscreen == true) {\n                content.classList.add('jcolor-fullscreen');\n                animation.slideBottom(content, 1);\n                backdrop.style.display = 'block';\n            } else {\n                if (content.classList.contains('jcolor-fullscreen')) {\n                    content.classList.remove('jcolor-fullscreen');\n                    backdrop.style.display = '';\n                }\n\n                if (obj.options.position) {\n                    content.style.position = 'fixed';\n                } else {\n                    content.style.position = '';\n                }\n\n                if (rectContent.left + rectContent.width > availableWidth) {\n                    content.style.marginLeft = -1 * (rectContent.left + rectContent.width - (availableWidth - 20)) + 'px';\n                }\n                if (rectContent.top + rectContent.height > availableHeight) {\n                    content.style.marginTop = -1 * (rectContent.top + rectContent.height - (availableHeight - 20)) + 'px';\n                }\n            }\n\n\n            if (typeof(obj.options.onopen) == 'function') {\n                obj.options.onopen(el, obj);\n            }\n\n            jsuitesTabs.setBorder(jsuitesTabs.getActive());\n\n            // Update sliders\n            if (obj.options.value) {\n                var rgb = HexToRgb(obj.options.value);\n\n                rgbInputs.forEach(function(rgbInput, index) {\n                    rgbInput.value = rgb[index];\n                    rgbInput.dispatchEvent(new Event('input'));\n                });\n            }\n        }\n    }\n\n    /**\n     * Close color pallete\n     */\n    obj.close = function(ignoreEvents) {\n        if (container.classList.contains('jcolor-focus')) {\n            // Remove focus\n            container.classList.remove('jcolor-focus');\n            // Make sure backdrop is hidden\n            backdrop.style.display = '';\n            // Call related events\n            if (! ignoreEvents && typeof(obj.options.onclose) == 'function') {\n                obj.options.onclose(el, obj);\n            }\n            // Stop  the object\n            Tracking(obj, false);\n        }\n\n        return obj.options.value;\n    }\n\n    /**\n     * Set value\n     */\n    obj.setValue = function(color) {\n        if (! color) {\n            color = '';\n        }\n\n        if (color != obj.options.value) {\n            obj.options.value = color;\n            slidersResult = color;\n\n            // Remove current selecded mark\n            obj.select(color);\n\n            // Onchange\n            if (typeof(obj.options.onchange) == 'function') {\n                obj.options.onchange(el, color, obj);\n            }\n\n            // Changes\n            if (el.value != obj.options.value) {\n                // Set input value\n                el.value = obj.options.value;\n                if (el.tagName === 'INPUT') {\n                    el.style.color = el.value;\n                    el.style.backgroundColor = el.value;\n                }\n\n                // Element onchange native\n                if (typeof(el.oninput) == 'function') {\n                    el.oninput({\n                        type: 'input',\n                        target: el,\n                        value: el.value\n                    });\n                }\n            }\n\n            if (obj.options.closeOnChange == true) {\n                obj.close();\n            }\n        }\n    }\n\n    /**\n     * Get value\n     */\n    obj.getValue = function() {\n        return obj.options.value;\n    }\n\n    var backdropClickControl = false;\n\n    // Converts a number in decimal to hexadecimal\n    var decToHex = function(num) {\n        var hex = num.toString(16);\n        return hex.length === 1 ? \"0\" + hex : hex;\n    }\n\n    // Converts a color in rgb to hexadecimal\n    var rgbToHex = function(r, g, b) {\n        return \"#\" + decToHex(r) + decToHex(g) + decToHex(b);\n    }\n\n    // Converts a number in hexadecimal to decimal\n    var hexToDec = function(hex) {\n        return parseInt('0x' + hex);\n    }\n\n    // Converts a color in hexadecimal to rgb\n    var HexToRgb = function(hex) {\n        return [hexToDec(hex.substr(1, 2)), hexToDec(hex.substr(3, 2)), hexToDec(hex.substr(5, 2))]\n    }\n\n    var table = function() {\n        // Content of the first tab\n        var tableContainer = document.createElement('div');\n        tableContainer.className = 'jcolor-grid';\n\n        // Cells\n        obj.values = [];\n\n        // Table pallete\n        var t = document.createElement('table');\n        t.setAttribute('cellpadding', '7');\n        t.setAttribute('cellspacing', '0');\n\n        for (var j = 0; j < obj.options.palette.length; j++) {\n            var tr = document.createElement('tr');\n            for (var i = 0; i < obj.options.palette[j].length; i++) {\n                var td = document.createElement('td');\n                var color = obj.options.palette[j][i];\n                if (color.length < 7 && color.substr(0,1) !== '#') {\n                    color = '#' + color;\n                }\n                td.style.backgroundColor = color;\n                td.setAttribute('data-value', color);\n                td.innerHTML = '';\n                tr.appendChild(td);\n\n                // Selected color\n                if (obj.options.value == color) {\n                    td.classList.add('jcolor-selected');\n                }\n\n                // Possible values\n                obj.values[color] = td;\n            }\n            t.appendChild(tr);\n        }\n\n        // Append to the table\n        tableContainer.appendChild(t);\n\n        return tableContainer;\n    }\n\n    // Canvas where the image will be rendered\n    var canvas = document.createElement('canvas');\n    canvas.width = 200;\n    canvas.height = 160;\n    var context = canvas.getContext(\"2d\");\n\n    var resizeCanvas = function() {\n        // Specifications necessary to correctly obtain colors later in certain positions\n        var m = tabs.firstChild.getBoundingClientRect();\n        canvas.width = m.width - 14;\n        gradient()\n    }\n\n    var gradient = function() {\n        var g = context.createLinearGradient(0, 0, canvas.width, 0);\n        // Create color gradient\n        g.addColorStop(0,    \"rgb(255,0,0)\");\n        g.addColorStop(0.15, \"rgb(255,0,255)\");\n        g.addColorStop(0.33, \"rgb(0,0,255)\");\n        g.addColorStop(0.49, \"rgb(0,255,255)\");\n        g.addColorStop(0.67, \"rgb(0,255,0)\");\n        g.addColorStop(0.84, \"rgb(255,255,0)\");\n        g.addColorStop(1,    \"rgb(255,0,0)\");\n        context.fillStyle = g;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        g = context.createLinearGradient(0, 0, 0, canvas.height);\n        g.addColorStop(0,   \"rgba(255,255,255,1)\");\n        g.addColorStop(0.5, \"rgba(255,255,255,0)\");\n        g.addColorStop(0.5, \"rgba(0,0,0,0)\");\n        g.addColorStop(1,   \"rgba(0,0,0,1)\");\n        context.fillStyle = g;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    var hsl = function() {\n        var element = document.createElement('div');\n        element.className = \"jcolor-hsl\";\n\n        var point = document.createElement('div');\n        point.className = 'jcolor-point';\n\n        var div = document.createElement('div');\n        div.appendChild(canvas);\n        div.appendChild(point);\n        element.appendChild(div);\n\n        // Moves the marquee point to the specified position\n        var update = function(buttons, x, y) {\n            if (buttons === 1) {\n                var rect = element.getBoundingClientRect();\n                var left = x - rect.left;\n                var top = y - rect.top;\n                if (left < 0) {\n                    left = 0;\n                }\n                if (top < 0) {\n                    top = 0;\n                }\n                if (left > rect.width) {\n                    left = rect.width;\n                }\n                if (top > rect.height) {\n                    top = rect.height;\n                }\n                point.style.left = left + 'px';\n                point.style.top = top + 'px';\n                var pixel = context.getImageData(left, top, 1, 1).data;\n                slidersResult = rgbToHex(pixel[0], pixel[1], pixel[2]);\n            }\n        }\n\n        // Applies the point's motion function to the div that contains it\n        element.addEventListener('mousedown', function(e) {\n            update(e.buttons, e.clientX, e.clientY);\n        });\n\n        element.addEventListener('mousemove', function(e) {\n            update(e.buttons, e.clientX, e.clientY);\n        });\n\n        element.addEventListener('touchmove', function(e) {\n            update(1, e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        });\n\n        return element;\n    }\n\n    var slidersResult = '';\n\n    var rgbInputs = [];\n\n    var changeInputColors = function() {\n        if (slidersResult !== '') {\n            for (var j = 0; j < rgbInputs.length; j++) {\n                var currentColor = HexToRgb(slidersResult);\n\n                currentColor[j] = 0;\n\n                var newGradient = 'linear-gradient(90deg, rgb(';\n                newGradient += currentColor.join(', ');\n                newGradient += '), rgb(';\n\n                currentColor[j] = 255;\n\n                newGradient += currentColor.join(', ');\n                newGradient += '))';\n\n                rgbInputs[j].style.backgroundImage = newGradient;\n            }\n        }\n    }\n\n    var sliders = function() {\n        // Content of the third tab\n        var slidersElement = document.createElement('div');\n        slidersElement.className = 'jcolor-sliders';\n\n        var slidersBody = document.createElement('div');\n\n        // Creates a range-type input with the specified name\n        var createSliderInput = function(name) {\n            var inputContainer = document.createElement('div');\n            inputContainer.className = 'jcolor-sliders-input-container';\n\n            var label = document.createElement('label');\n            label.innerText = name;\n\n            var subContainer = document.createElement('div');\n            subContainer.className = 'jcolor-sliders-input-subcontainer';\n\n            var input = document.createElement('input');\n            input.type = 'range';\n            input.min = 0;\n            input.max = 255;\n            input.value = 0;\n\n            inputContainer.appendChild(label);\n            subContainer.appendChild(input);\n\n            var value = document.createElement('div');\n            value.innerText = input.value;\n\n            input.addEventListener('input', function() {\n                value.innerText = input.value;\n            });\n\n            subContainer.appendChild(value);\n            inputContainer.appendChild(subContainer);\n\n            slidersBody.appendChild(inputContainer);\n\n            return input;\n        }\n\n        // Creates red, green and blue inputs\n        rgbInputs = [\n            createSliderInput('Red'),\n            createSliderInput('Green'),\n            createSliderInput('Blue'),\n        ];\n\n        slidersElement.appendChild(slidersBody);\n\n        // Element that prints the current color\n        var slidersResultColor = document.createElement('div');\n        slidersResultColor.className = 'jcolor-sliders-final-color';\n\n        var resultElement = document.createElement('div');\n        resultElement.style.visibility = 'hidden';\n        resultElement.innerText = 'a';\n        slidersResultColor.appendChild(resultElement)\n\n        // Update the element that prints the current color\n        var updateResult = function() {\n            var resultColor = rgbToHex(parseInt(rgbInputs[0].value), parseInt(rgbInputs[1].value), parseInt(rgbInputs[2].value));\n\n            resultElement.innerText = resultColor;\n            resultElement.style.color = resultColor;\n            resultElement.style.removeProperty('visibility');\n\n            slidersResult = resultColor;\n        }\n\n        // Apply the update function to color inputs\n        rgbInputs.forEach(function(rgbInput) {\n            rgbInput.addEventListener('input', function() {\n                updateResult();\n                changeInputColors();\n            });\n        });\n\n        slidersElement.appendChild(slidersResultColor);\n\n        return slidersElement;\n    }\n\n    var init = function() {\n        // Initial options\n        obj.setOptions(options);\n\n        // Add a proper input tag when the element is an input\n        if (el.tagName == 'INPUT') {\n            el.classList.add('jcolor-input');\n            el.readOnly = true;\n        }\n\n        // Table container\n        container = document.createElement('div');\n        container.className = 'jcolor';\n\n        // Table container\n        backdrop = document.createElement('div');\n        backdrop.className = 'jcolor-backdrop';\n        container.appendChild(backdrop);\n\n        // Content\n        content = document.createElement('div');\n        content.className = 'jcolor-content';\n\n        // Controls\n        var controls = document.createElement('div');\n        controls.className = 'jcolor-controls';\n        content.appendChild(controls);\n\n        // Reset button\n        resetButton  = document.createElement('div');\n        resetButton.className = 'jcolor-reset';\n        resetButton.innerHTML = obj.options.resetLabel;\n        controls.appendChild(resetButton);\n\n        // Close button\n        closeButton  = document.createElement('div');\n        closeButton.className = 'jcolor-close';\n        closeButton.innerHTML = obj.options.doneLabel;\n        controls.appendChild(closeButton);\n\n        // Element that will be used to create the tabs\n        tabs = document.createElement('div');\n        content.appendChild(tabs);\n\n        // Starts the jSuites tabs component\n        jsuitesTabs = Tabs(tabs, {\n            animation: true,\n            data: [\n                {\n                    title: 'Grid',\n                    contentElement: table(),\n                },\n                {\n                    title: 'Spectrum',\n                    contentElement: hsl(),\n                },\n                {\n                    title: 'Sliders',\n                    contentElement: sliders(),\n                }\n            ],\n            onchange: function(element, instance, index) {\n                if (index === 1) {\n                    resizeCanvas();\n                } else {\n                    var color = slidersResult !== '' ? slidersResult : obj.getValue();\n\n                    if (index === 2 && color) {\n                        var rgb = HexToRgb(color);\n\n                        rgbInputs.forEach(function(rgbInput, index) {\n                            rgbInput.value = rgb[index];\n                            rgbInput.dispatchEvent(new Event('input'));\n                        });\n                    }\n                }\n            },\n            palette: 'modern',\n        });\n\n        container.appendChild(content);\n\n        // Insert picker after the element\n        if (el.tagName == 'INPUT') {\n            el.parentNode.insertBefore(container, el.nextSibling);\n        } else {\n            el.appendChild(container);\n        }\n\n        container.addEventListener(\"click\", function(e) {\n            if (e.target.tagName == 'TD') {\n                var value = e.target.getAttribute('data-value');\n                if (value) {\n                    obj.setValue(value);\n                }\n            } else if (e.target.classList.contains('jcolor-reset')) {\n                obj.setValue('');\n                obj.close();\n            } else if (e.target.classList.contains('jcolor-close')) {\n                if (jsuitesTabs.getActive() > 0) {\n                    obj.setValue(slidersResult);\n                }\n                obj.close();\n            } else if (e.target.classList.contains('jcolor-backdrop')) {\n                obj.close();\n            } else {\n                obj.open();\n            }\n        });\n\n        /**\n         * If element is focus open the picker\n         */\n        el.addEventListener(\"mouseup\", function(e) {\n            obj.open();\n        });\n\n        // If the picker is open on the spectrum tab, it changes the canvas size when the window size is changed\n        window.addEventListener('resize', function() {\n            if (container.classList.contains('jcolor-focus') && jsuitesTabs.getActive() == 1) {\n                resizeCanvas();\n            }\n        });\n\n        // Default opened\n        if (obj.options.opened == true) {\n            obj.open();\n        }\n\n        // Change\n        el.change = obj.setValue;\n\n        // Global generic value handler\n        el.val = function(val) {\n            if (val === undefined) {\n                return obj.getValue();\n            } else {\n                obj.setValue(val);\n            }\n        }\n\n        // Keep object available from the node\n        el.color = obj;\n\n        // Container shortcut\n        container.color = obj;\n    }\n\n    obj.toHex = function(rgb) {\n        var hex = function(x) {\n            return (\"0\" + parseInt(x).toString(16)).slice(-2);\n        }\n        if (rgb) {\n            if (/^#[0-9A-F]{6}$/i.test(rgb)) {\n                return rgb;\n            } else {\n                rgb = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n                if (rgb && rgb.length) {\n                    return \"#\" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);\n                } else {\n                    return \"\";\n                }\n            }\n        }\n    }\n\n    init();\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/contextmenu.js\n\n\n\nfunction Contextmenu() {\n\n    var Component = function(el, options) {\n        // New instance\n        var obj = {type: 'contextmenu'};\n        obj.options = {};\n\n        // Default configuration\n        var defaults = {\n            items: null,\n            onclick: null,\n        };\n\n        // Loop through our object\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                obj.options[property] = defaults[property];\n            }\n        }\n\n        // Class definition\n        el.classList.add('jcontextmenu');\n\n        /**\n         * Open contextmenu\n         */\n        obj.open = function (e, items) {\n            if (items) {\n                // Update content\n                obj.options.items = items;\n                // Create items\n                obj.create(items);\n            }\n\n            // Close current contextmenu\n            if (Component.current) {\n                Component.current.close();\n            }\n\n            // Add to the opened components monitor\n            Tracking(obj, true);\n\n            // Show context menu\n            el.classList.add('jcontextmenu-focus');\n\n            // Current\n            Component.current = obj;\n\n            // Coordinates\n            if ((obj.options.items && obj.options.items.length > 0) || el.children.length) {\n                if (e.target) {\n                    if (e.changedTouches && e.changedTouches[0]) {\n                        x = e.changedTouches[0].clientX;\n                        y = e.changedTouches[0].clientY;\n                    } else {\n                        var x = e.clientX;\n                        var y = e.clientY;\n                    }\n                } else {\n                    var x = e.x;\n                    var y = e.y;\n                }\n\n                var rect = el.getBoundingClientRect();\n\n                if (window.innerHeight < y + rect.height) {\n                    var h = y - rect.height;\n                    if (h < 0) {\n                        h = 0;\n                    }\n                    el.style.top = h + 'px';\n                } else {\n                    el.style.top = y + 'px';\n                }\n\n                if (window.innerWidth < x + rect.width) {\n                    if (x - rect.width > 0) {\n                        el.style.left = (x - rect.width) + 'px';\n                    } else {\n                        el.style.left = '10px';\n                    }\n                } else {\n                    el.style.left = x + 'px';\n                }\n            }\n        }\n\n        obj.isOpened = function () {\n            return el.classList.contains('jcontextmenu-focus') ? true : false;\n        }\n\n        /**\n         * Close menu\n         */\n        obj.close = function () {\n            if (el.classList.contains('jcontextmenu-focus')) {\n                el.classList.remove('jcontextmenu-focus');\n            }\n            Tracking(obj, false);\n        }\n\n        /**\n         * Create items based on the declared objectd\n         * @param {object} items - List of object\n         */\n        obj.create = function (items) {\n            // Update content\n            el.innerHTML = '';\n\n            // Add header contextmenu\n            var itemHeader = createHeader();\n            el.appendChild(itemHeader);\n\n            // Append items\n            for (var i = 0; i < items.length; i++) {\n                var itemContainer = createItemElement(items[i]);\n                el.appendChild(itemContainer);\n            }\n        }\n\n        /**\n         * createHeader for context menu\n         * @private\n         * @returns {HTMLElement}\n         */\n        function createHeader() {\n            var header = document.createElement('div');\n            header.classList.add(\"header\");\n            header.addEventListener(\"click\", function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n            });\n            var title = document.createElement('a');\n            title.classList.add(\"title\");\n            title.innerHTML = dictionary.translate(\"Menu\");\n\n            header.appendChild(title);\n\n            var closeButton = document.createElement('a');\n            closeButton.classList.add(\"close\");\n            closeButton.innerHTML = dictionary.translate(\"close\");\n            closeButton.addEventListener(\"click\", function (e) {\n                obj.close();\n            });\n\n            header.appendChild(closeButton);\n\n            return header;\n        }\n\n        /**\n         * Private function for create a new Item element\n         * @param {type} item\n         * @returns {jsuitesL#15.jSuites.contextmenu.createItemElement.itemContainer}\n         */\n        function createItemElement(item) {\n            if (item.type && (item.type == 'line' || item.type == 'divisor')) {\n                var itemContainer = document.createElement('hr');\n            } else {\n                var itemContainer = document.createElement('div');\n                var itemText = document.createElement('a');\n                itemText.innerHTML = item.title;\n\n                if (item.tooltip) {\n                    itemContainer.setAttribute('title', item.tooltip);\n                }\n\n                if (item.icon) {\n                    itemContainer.setAttribute('data-icon', item.icon);\n                }\n\n                if (item.id) {\n                    itemContainer.id = item.id;\n                }\n\n                if (item.disabled) {\n                    itemContainer.className = 'jcontextmenu-disabled';\n                } else if (item.onclick) {\n                    itemContainer.method = item.onclick;\n                    itemContainer.addEventListener(\"mousedown\", function (e) {\n                        e.preventDefault();\n                    });\n                    itemContainer.addEventListener(\"mouseup\", function (e) {\n                        // Execute method\n                        this.method(this, e);\n                    });\n                }\n                itemContainer.appendChild(itemText);\n\n                if (item.submenu) {\n                    var itemIconSubmenu = document.createElement('span');\n                    itemIconSubmenu.innerHTML = \"&#9658;\";\n                    itemContainer.appendChild(itemIconSubmenu);\n                    itemContainer.classList.add('jcontexthassubmenu');\n                    var el_submenu = document.createElement('div');\n                    // Class definition\n                    el_submenu.classList.add('jcontextmenu');\n                    // Focusable\n                    el_submenu.setAttribute('tabindex', '900');\n\n                    // Append items\n                    var submenu = item.submenu;\n                    for (var i = 0; i < submenu.length; i++) {\n                        var itemContainerSubMenu = createItemElement(submenu[i]);\n                        el_submenu.appendChild(itemContainerSubMenu);\n                    }\n\n                    itemContainer.appendChild(el_submenu);\n                } else if (item.shortcut) {\n                    var itemShortCut = document.createElement('span');\n                    itemShortCut.innerHTML = item.shortcut;\n                    itemContainer.appendChild(itemShortCut);\n                }\n            }\n            return itemContainer;\n        }\n\n        if (typeof (obj.options.onclick) == 'function') {\n            el.addEventListener('click', function (e) {\n                obj.options.onclick(obj, e);\n            });\n        }\n\n        // Create items\n        if (obj.options.items) {\n            obj.create(obj.options.items);\n        }\n\n        window.addEventListener(\"mousewheel\", function () {\n            obj.close();\n        });\n\n        el.contextmenu = obj;\n\n        return obj;\n    }\n\n    return Component;\n}\n\n/* harmony default export */ var contextmenu = (Contextmenu());\n;// CONCATENATED MODULE: ./src/plugins/dropdown.js\n\n\n\n\n\n\n\nfunction Dropdown() {\n\n    var Component = (function (el, options) {\n        // Already created, update options\n        if (el.dropdown) {\n            return el.dropdown.setOptions(options, true);\n        }\n\n        // New instance\n        var obj = {type: 'dropdown'};\n        obj.options = {};\n\n        // Success\n        var success = function (data, val) {\n            // Set data\n            if (data && data.length) {\n                // Sort\n                if (obj.options.sortResults !== false) {\n                    if (typeof obj.options.sortResults == \"function\") {\n                        data.sort(obj.options.sortResults);\n                    } else {\n                        data.sort(sortData);\n                    }\n                }\n\n                obj.setData(data);\n            }\n\n            // Onload method\n            if (typeof (obj.options.onload) == 'function') {\n                obj.options.onload(el, obj, data, val);\n            }\n\n            // Set value\n            if (val) {\n                applyValue(val);\n            }\n\n            // Component value\n            if (val === undefined || val === null) {\n                obj.options.value = '';\n            }\n            el.value = obj.options.value;\n\n            // Open dropdown\n            if (obj.options.opened == true) {\n                obj.open();\n            }\n        }\n\n\n        // Default sort\n        var sortData = function (itemA, itemB) {\n            var testA, testB;\n            if (typeof itemA == \"string\") {\n                testA = itemA;\n            } else {\n                if (itemA.text) {\n                    testA = itemA.text;\n                } else if (itemA.name) {\n                    testA = itemA.name;\n                }\n            }\n\n            if (typeof itemB == \"string\") {\n                testB = itemB;\n            } else {\n                if (itemB.text) {\n                    testB = itemB.text;\n                } else if (itemB.name) {\n                    testB = itemB.name;\n                }\n            }\n\n            if (typeof testA == \"string\" || typeof testB == \"string\") {\n                if (typeof testA != \"string\") {\n                    testA = \"\" + testA;\n                }\n                if (typeof testB != \"string\") {\n                    testB = \"\" + testB;\n                }\n                return testA.localeCompare(testB);\n            } else {\n                return testA - testB;\n            }\n        }\n\n        /**\n         * Reset the options for the dropdown\n         */\n        var resetValue = function () {\n            // Reset value container\n            obj.value = {};\n            // Remove selected\n            for (var i = 0; i < obj.items.length; i++) {\n                if (obj.items[i].selected == true) {\n                    if (obj.items[i].element) {\n                        obj.items[i].element.classList.remove('jdropdown-selected')\n                    }\n                    obj.items[i].selected = null;\n                }\n            }\n            // Reset options\n            obj.options.value = '';\n            // Reset value\n            el.value = '';\n        }\n\n        /**\n         * Apply values to the dropdown\n         */\n        var applyValue = function (values) {\n            // Reset the current values\n            resetValue();\n\n            // Read values\n            if (values !== null) {\n                if (!values) {\n                    if (typeof (obj.value['']) !== 'undefined') {\n                        obj.value[''] = '';\n                    }\n                } else {\n                    if (!Array.isArray(values)) {\n                        values = ('' + values).split(';');\n                    }\n                    for (var i = 0; i < values.length; i++) {\n                        obj.value[values[i]] = '';\n                    }\n                }\n            }\n\n            // Update the DOM\n            for (var i = 0; i < obj.items.length; i++) {\n                if (typeof (obj.value[Value(i)]) !== 'undefined') {\n                    if (obj.items[i].element) {\n                        obj.items[i].element.classList.add('jdropdown-selected')\n                    }\n                    obj.items[i].selected = true;\n\n                    // Keep label\n                    obj.value[Value(i)] = Text(i);\n                }\n            }\n\n            // Global value\n            obj.options.value = Object.keys(obj.value).join(';');\n\n            // Update labels\n            obj.header.value = obj.getText();\n        }\n\n        // Get the value of one item\n        var Value = function (k, v) {\n            // Legacy purposes\n            if (!obj.options.format) {\n                var property = 'value';\n            } else {\n                var property = 'id';\n            }\n\n            if (obj.items[k]) {\n                if (v !== undefined) {\n                    return obj.items[k].data[property] = v;\n                } else {\n                    return obj.items[k].data[property];\n                }\n            }\n\n            return '';\n        }\n\n        // Get the label of one item\n        var Text = function (k, v) {\n            // Legacy purposes\n            if (!obj.options.format) {\n                var property = 'text';\n            } else {\n                var property = 'name';\n            }\n\n            if (obj.items[k]) {\n                if (v !== undefined) {\n                    return obj.items[k].data[property] = v;\n                } else {\n                    return obj.items[k].data[property];\n                }\n            }\n\n            return '';\n        }\n\n        var getValue = function () {\n            return Object.keys(obj.value);\n        }\n\n        var getText = function () {\n            var data = [];\n            var k = Object.keys(obj.value);\n            for (var i = 0; i < k.length; i++) {\n                data.push(obj.value[k[i]]);\n            }\n            return data;\n        }\n\n        obj.setOptions = function (options, reset) {\n            if (!options) {\n                options = {};\n            }\n\n            // Default configuration\n            var defaults = {\n                url: null,\n                data: [],\n                format: 0,\n                multiple: false,\n                autocomplete: false,\n                remoteSearch: false,\n                lazyLoading: false,\n                type: null,\n                width: null,\n                maxWidth: null,\n                opened: false,\n                value: null,\n                placeholder: '',\n                newOptions: false,\n                position: false,\n                onchange: null,\n                onload: null,\n                onopen: null,\n                onclose: null,\n                onfocus: null,\n                onblur: null,\n                oninsert: null,\n                onbeforeinsert: null,\n                sortResults: false,\n                autofocus: false,\n            }\n\n            // Loop through our object\n            for (var property in defaults) {\n                if (options && options.hasOwnProperty(property)) {\n                    obj.options[property] = options[property];\n                } else {\n                    if (typeof (obj.options[property]) == 'undefined' || reset === true) {\n                        obj.options[property] = defaults[property];\n                    }\n                }\n            }\n\n            // Force autocomplete search\n            if (obj.options.remoteSearch == true || obj.options.type === 'searchbar') {\n                obj.options.autocomplete = true;\n            }\n\n            // New options\n            if (obj.options.newOptions == true) {\n                obj.header.classList.add('jdropdown-add');\n            } else {\n                obj.header.classList.remove('jdropdown-add');\n            }\n\n            // Autocomplete\n            if (obj.options.autocomplete == true) {\n                obj.header.removeAttribute('readonly');\n            } else {\n                obj.header.setAttribute('readonly', 'readonly');\n            }\n\n            // Place holder\n            if (obj.options.placeholder) {\n                obj.header.setAttribute('placeholder', obj.options.placeholder);\n            } else {\n                obj.header.removeAttribute('placeholder');\n            }\n\n            // Remove specific dropdown typing to add again\n            el.classList.remove('jdropdown-searchbar');\n            el.classList.remove('jdropdown-picker');\n            el.classList.remove('jdropdown-list');\n\n            if (obj.options.type == 'searchbar') {\n                el.classList.add('jdropdown-searchbar');\n            } else if (obj.options.type == 'list') {\n                el.classList.add('jdropdown-list');\n            } else if (obj.options.type == 'picker') {\n                el.classList.add('jdropdown-picker');\n            } else {\n                if (helpers.getWindowWidth() < 800) {\n                    if (obj.options.autocomplete) {\n                        el.classList.add('jdropdown-searchbar');\n                        obj.options.type = 'searchbar';\n                    } else {\n                        el.classList.add('jdropdown-picker');\n                        obj.options.type = 'picker';\n                    }\n                } else {\n                    if (obj.options.width) {\n                        el.style.width = obj.options.width;\n                        el.style.minWidth = obj.options.width;\n                    } else {\n                        el.style.removeProperty('width');\n                        el.style.removeProperty('min-width');\n                    }\n\n                    el.classList.add('jdropdown-default');\n                    obj.options.type = 'default';\n                }\n            }\n\n            // Close button\n            if (obj.options.type == 'searchbar') {\n                containerHeader.appendChild(closeButton);\n            } else {\n                container.insertBefore(closeButton, container.firstChild);\n            }\n\n            // Load the content\n            if (obj.options.url && !options.data) {\n                ajax({\n                    url: obj.options.url,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function (data) {\n                        if (data) {\n                            success(data, obj.options.value);\n                        }\n                    }\n                });\n            } else {\n                success(obj.options.data, obj.options.value);\n            }\n\n            // Return the instance\n            return obj;\n        }\n\n        // Helpers\n        var containerHeader = null;\n        var container = null;\n        var content = null;\n        var closeButton = null;\n        var resetButton = null;\n        var backdrop = null;\n\n        var keyTimer = null;\n\n        /**\n         * Init dropdown\n         */\n        var init = function () {\n            // Do not accept null\n            if (!options) {\n                options = {};\n            }\n\n            // If the element is a SELECT tag, create a configuration object\n            if (el.tagName == 'SELECT') {\n                var ret = Component.extractFromDom(el, options);\n                el = ret.el;\n                options = ret.options;\n            }\n\n            // Place holder\n            if (!options.placeholder && el.getAttribute('placeholder')) {\n                options.placeholder = el.getAttribute('placeholder');\n            }\n\n            // Value container\n            obj.value = {};\n            // Containers\n            obj.items = [];\n            obj.groups = [];\n            // Search options\n            obj.search = '';\n            obj.results = null;\n\n            // Create dropdown\n            el.classList.add('jdropdown');\n\n            // Header container\n            containerHeader = document.createElement('div');\n            containerHeader.className = 'jdropdown-container-header';\n\n            // Header\n            obj.header = document.createElement('input');\n            obj.header.className = 'jdropdown-header jss_object';\n            obj.header.type = 'text';\n            obj.header.setAttribute('autocomplete', 'off');\n            obj.header.onfocus = function () {\n                if (typeof (obj.options.onfocus) == 'function') {\n                    obj.options.onfocus(el);\n                }\n            }\n\n            obj.header.onblur = function () {\n                if (typeof (obj.options.onblur) == 'function') {\n                    obj.options.onblur(el);\n                }\n            }\n\n            obj.header.onkeyup = function (e) {\n                if (obj.options.autocomplete == true && !keyTimer) {\n                    if (obj.search != obj.header.value.trim()) {\n                        keyTimer = setTimeout(function () {\n                            obj.find(obj.header.value.trim());\n                            keyTimer = null;\n                        }, 400);\n                    }\n\n                    if (!el.classList.contains('jdropdown-focus')) {\n                        obj.open();\n                    }\n                } else {\n                    if (!obj.options.autocomplete) {\n                        obj.next(e.key);\n                    }\n                }\n            }\n\n            // Global controls\n            if (!Component.hasEvents) {\n                // Execute only one time\n                Component.hasEvents = true;\n                // Enter and Esc\n                document.addEventListener(\"keydown\", Component.keydown);\n            }\n\n            // Container\n            container = document.createElement('div');\n            container.className = 'jdropdown-container';\n\n            // Dropdown content\n            content = document.createElement('div');\n            content.className = 'jdropdown-content';\n\n            // Close button\n            closeButton = document.createElement('div');\n            closeButton.className = 'jdropdown-close';\n            closeButton.innerHTML = 'Done';\n\n            // Reset button\n            resetButton = document.createElement('div');\n            resetButton.className = 'jdropdown-reset';\n            resetButton.innerHTML = 'x';\n            resetButton.onclick = function () {\n                obj.reset();\n                obj.close();\n            }\n\n            // Create backdrop\n            backdrop = document.createElement('div');\n            backdrop.className = 'jdropdown-backdrop';\n\n            // Append elements\n            containerHeader.appendChild(obj.header);\n\n            container.appendChild(content);\n            el.appendChild(containerHeader);\n            el.appendChild(container);\n            el.appendChild(backdrop);\n\n            // Set the otiptions\n            obj.setOptions(options);\n\n            if ('ontouchsend' in document.documentElement === true) {\n                el.addEventListener('touchsend', Component.mouseup);\n            } else {\n                el.addEventListener('mouseup', Component.mouseup);\n            }\n\n            // Lazyloading\n            if (obj.options.lazyLoading == true) {\n                LazyLoading(content, {\n                    loadUp: obj.loadUp,\n                    loadDown: obj.loadDown,\n                });\n            }\n\n            content.onwheel = function (e) {\n                e.stopPropagation();\n            }\n\n            // Change method\n            el.change = obj.setValue;\n\n            // Global generic value handler\n            el.val = function (val) {\n                if (val === undefined) {\n                    return obj.getValue(obj.options.multiple ? true : false);\n                } else {\n                    obj.setValue(val);\n                }\n            }\n\n            // Keep object available from the node\n            el.dropdown = obj;\n        }\n\n        /**\n         * Get the current remote source of data URL\n         */\n        obj.getUrl = function () {\n            return obj.options.url;\n        }\n\n        /**\n         * Set the new data from a remote source\n         * @param {string} url - url from the remote source\n         * @param {function} callback - callback when the data is loaded\n         */\n        obj.setUrl = function (url, callback) {\n            obj.options.url = url;\n\n            ajax({\n                url: obj.options.url,\n                method: 'GET',\n                dataType: 'json',\n                success: function (data) {\n                    obj.setData(data);\n                    // Callback\n                    if (typeof (callback) == 'function') {\n                        callback(obj);\n                    }\n                }\n            });\n        }\n\n        /**\n         * Set ID for one item\n         */\n        obj.setId = function (item, v) {\n            // Legacy purposes\n            if (!obj.options.format) {\n                var property = 'value';\n            } else {\n                var property = 'id';\n            }\n\n            if (typeof (item) == 'object') {\n                item[property] = v;\n            } else {\n                obj.items[item].data[property] = v;\n            }\n        }\n\n        /**\n         * Add a new item\n         * @param {string} title - title of the new item\n         * @param {string} id - value/id of the new item\n         */\n        obj.add = function (title, id) {\n            if (!title) {\n                var current = obj.options.autocomplete == true ? obj.header.value : '';\n                var title = prompt(dictionary.translate('Add A New Option'), current);\n                if (!title) {\n                    return false;\n                }\n            }\n\n            // Id\n            if (!id) {\n                id = helpers.guid();\n            }\n\n            // Create new item\n            if (!obj.options.format) {\n                var item = {\n                    value: id,\n                    text: title,\n                }\n            } else {\n                var item = {\n                    id: id,\n                    name: title,\n                }\n            }\n\n            // Callback\n            if (typeof (obj.options.onbeforeinsert) == 'function') {\n                var ret = obj.options.onbeforeinsert(obj, item);\n                if (ret === false) {\n                    return false;\n                } else if (ret) {\n                    item = ret;\n                }\n            }\n\n            // Add item to the main list\n            obj.options.data.push(item);\n\n            // Create DOM\n            var newItem = obj.createItem(item);\n\n            // Append DOM to the list\n            content.appendChild(newItem.element);\n\n            // Callback\n            if (typeof (obj.options.oninsert) == 'function') {\n                obj.options.oninsert(obj, item, newItem);\n            }\n\n            // Show content\n            if (content.style.display == 'none') {\n                content.style.display = '';\n            }\n\n            // Search?\n            if (obj.results) {\n                obj.results.push(newItem);\n            }\n\n            return item;\n        }\n\n        /**\n         * Create a new item\n         */\n        obj.createItem = function (data, group, groupName) {\n            // Keep the correct source of data\n            if (!obj.options.format) {\n                if (!data.value && data.id !== undefined) {\n                    data.value = data.id;\n                    //delete data.id;\n                }\n                if (!data.text && data.name !== undefined) {\n                    data.text = data.name;\n                    //delete data.name;\n                }\n            } else {\n                if (!data.id && data.value !== undefined) {\n                    data.id = data.value;\n                    //delete data.value;\n                }\n                if (!data.name && data.text !== undefined) {\n                    data.name = data.text\n                    //delete data.text;\n                }\n            }\n\n            // Create item\n            var item = {};\n            item.element = document.createElement('div');\n            item.element.className = 'jdropdown-item';\n            item.element.indexValue = obj.items.length;\n            item.data = data;\n\n            // Groupd DOM\n            if (group) {\n                item.group = group;\n            }\n\n            // Id\n            if (data.id) {\n                item.element.setAttribute('id', data.id);\n            }\n\n            // Disabled\n            if (data.disabled == true) {\n                item.element.setAttribute('data-disabled', true);\n            }\n\n            // Tooltip\n            if (data.tooltip) {\n                item.element.setAttribute('title', data.tooltip);\n            }\n\n            // Image\n            if (data.image) {\n                var image = document.createElement('img');\n                image.className = 'jdropdown-image';\n                image.src = data.image;\n                if (!data.title) {\n                    image.classList.add('jdropdown-image-small');\n                }\n                item.element.appendChild(image);\n            } else if (data.icon) {\n                var icon = document.createElement('span');\n                icon.className = \"jdropdown-icon material-icons\";\n                icon.innerText = data.icon;\n                if (!data.title) {\n                    icon.classList.add('jdropdown-icon-small');\n                }\n                if (data.color) {\n                    icon.style.color = data.color;\n                }\n                item.element.appendChild(icon);\n            } else if (data.color) {\n                var color = document.createElement('div');\n                color.className = 'jdropdown-color';\n                color.style.backgroundColor = data.color;\n                item.element.appendChild(color);\n            }\n\n            // Set content\n            if (!obj.options.format) {\n                var text = data.text;\n            } else {\n                var text = data.name;\n            }\n\n            var node = document.createElement('div');\n            node.className = 'jdropdown-description';\n            node.innerHTML = text || '&nbsp;';\n\n            // Title\n            if (data.title) {\n                var title = document.createElement('div');\n                title.className = 'jdropdown-title';\n                title.innerText = data.title;\n                node.appendChild(title);\n            }\n\n            // Set content\n            if (!obj.options.format) {\n                var val = data.value;\n            } else {\n                var val = data.id;\n            }\n\n            // Value\n            if (obj.value[val]) {\n                item.element.classList.add('jdropdown-selected');\n                item.selected = true;\n            }\n\n            // Keep DOM accessible\n            obj.items.push(item);\n\n            // Add node to item\n            item.element.appendChild(node);\n\n            return item;\n        }\n\n        obj.appendData = function (data) {\n            // Create elements\n            if (data.length) {\n                // Helpers\n                var items = [];\n                var groups = [];\n\n                // Prepare data\n                for (var i = 0; i < data.length; i++) {\n                    // Process groups\n                    if (data[i].group) {\n                        if (!groups[data[i].group]) {\n                            groups[data[i].group] = [];\n                        }\n                        groups[data[i].group].push(i);\n                    } else {\n                        items.push(i);\n                    }\n                }\n\n                // Number of items counter\n                var counter = 0;\n\n                // Groups\n                var groupNames = Object.keys(groups);\n\n                // Append groups in case exists\n                if (groupNames.length > 0) {\n                    for (var i = 0; i < groupNames.length; i++) {\n                        // Group container\n                        var group = document.createElement('div');\n                        group.className = 'jdropdown-group';\n                        // Group name\n                        var groupName = document.createElement('div');\n                        groupName.className = 'jdropdown-group-name';\n                        groupName.innerHTML = groupNames[i];\n                        // Group arrow\n                        var groupArrow = document.createElement('i');\n                        groupArrow.className = 'jdropdown-group-arrow jdropdown-group-arrow-down';\n                        groupName.appendChild(groupArrow);\n                        // Group items\n                        var groupContent = document.createElement('div');\n                        groupContent.className = 'jdropdown-group-items';\n                        for (var j = 0; j < groups[groupNames[i]].length; j++) {\n                            var item = obj.createItem(data[groups[groupNames[i]][j]], group, groupNames[i]);\n\n                            if (obj.options.lazyLoading == false || counter < 200) {\n                                groupContent.appendChild(item.element);\n                                counter++;\n                            }\n                        }\n                        // Group itens\n                        group.appendChild(groupName);\n                        group.appendChild(groupContent);\n                        // Keep group DOM\n                        obj.groups.push(group);\n                        // Only add to the screen if children on the group\n                        if (groupContent.children.length > 0) {\n                            // Add DOM to the content\n                            content.appendChild(group);\n                        }\n                    }\n                }\n\n                if (items.length) {\n                    for (var i = 0; i < items.length; i++) {\n                        var item = obj.createItem(data[items[i]]);\n                        if (obj.options.lazyLoading == false || counter < 200) {\n                            content.appendChild(item.element);\n                            counter++;\n                        }\n                    }\n                }\n            }\n        }\n\n        obj.setData = function (data) {\n            // Reset current value\n            resetValue();\n\n            // Make sure the content container is blank\n            content.innerHTML = '';\n\n            // Reset\n            obj.header.value = '';\n\n            // Reset items and values\n            obj.items = [];\n\n            // Prepare data\n            if (data && data.length) {\n                for (var i = 0; i < data.length; i++) {\n                    // Compatibility\n                    if (typeof (data[i]) != 'object') {\n                        // Correct format\n                        if (!obj.options.format) {\n                            data[i] = {\n                                value: data[i],\n                                text: data[i]\n                            }\n                        } else {\n                            data[i] = {\n                                id: data[i],\n                                name: data[i]\n                            }\n                        }\n                    }\n                }\n\n                // Append data\n                obj.appendData(data);\n\n                // Update data\n                obj.options.data = data;\n            } else {\n                // Update data\n                obj.options.data = [];\n            }\n\n            obj.close();\n        }\n\n        obj.getData = function () {\n            return obj.options.data;\n        }\n\n        /**\n         * Get position of the item\n         */\n        obj.getPosition = function (val) {\n            for (var i = 0; i < obj.items.length; i++) {\n                if (Value(i) == val) {\n                    return i;\n                }\n            }\n            return false;\n        }\n\n        /**\n         * Get dropdown current text\n         */\n        obj.getText = function (asArray) {\n            // Get value\n            var v = getText();\n            // Return value\n            if (asArray) {\n                return v;\n            } else {\n                return v.join('; ');\n            }\n        }\n\n        /**\n         * Get dropdown current value\n         */\n        obj.getValue = function (asArray) {\n            // Get value\n            var v = getValue();\n            // Return value\n            if (asArray) {\n                return v;\n            } else {\n                return v.join(';');\n            }\n        }\n\n        /**\n         * Change event\n         */\n        var change = function (oldValue) {\n            // Lemonade JS\n            if (el.value != obj.options.value) {\n                el.value = obj.options.value;\n                if (typeof (el.oninput) == 'function') {\n                    el.oninput({\n                        type: 'input',\n                        target: el,\n                        value: el.value\n                    });\n                }\n            }\n\n            // Events\n            if (typeof (obj.options.onchange) == 'function') {\n                obj.options.onchange(el, obj, oldValue, obj.options.value);\n            }\n        }\n\n        /**\n         * Set value\n         */\n        obj.setValue = function (newValue) {\n            // Current value\n            var oldValue = obj.getValue();\n            // New value\n            if (Array.isArray(newValue)) {\n                newValue = newValue.join(';')\n            }\n\n            if (oldValue !== newValue) {\n                // Set value\n                applyValue(newValue);\n\n                // Change\n                change(oldValue);\n            }\n        }\n\n        obj.resetSelected = function () {\n            obj.setValue(null);\n        }\n\n        obj.selectIndex = function (index, force) {\n            // Make sure is a number\n            var index = parseInt(index);\n\n            // Only select those existing elements\n            if (obj.items && obj.items[index] && (force === true || obj.items[index].data.disabled !== true)) {\n                // Reset cursor to a new position\n                obj.setCursor(index, false);\n\n                // Behaviour\n                if (!obj.options.multiple) {\n                    // Update value\n                    if (obj.items[index].selected) {\n                        obj.setValue(null);\n                    } else {\n                        obj.setValue(Value(index));\n                    }\n\n                    // Close component\n                    obj.close();\n                } else {\n                    // Old value\n                    var oldValue = obj.options.value;\n\n                    // Toggle option\n                    if (obj.items[index].selected) {\n                        obj.items[index].element.classList.remove('jdropdown-selected');\n                        obj.items[index].selected = false;\n\n                        delete obj.value[Value(index)];\n                    } else {\n                        // Select element\n                        obj.items[index].element.classList.add('jdropdown-selected');\n                        obj.items[index].selected = true;\n\n                        // Set value\n                        obj.value[Value(index)] = Text(index);\n                    }\n\n                    // Global value\n                    obj.options.value = Object.keys(obj.value).join(';');\n\n                    // Update labels for multiple dropdown\n                    if (obj.options.autocomplete == false) {\n                        obj.header.value = getText().join('; ');\n                    }\n\n                    // Events\n                    change(oldValue);\n                }\n            }\n        }\n\n        obj.selectItem = function (item) {\n            obj.selectIndex(item.indexValue);\n        }\n\n        var exists = function (k, result) {\n            for (var j = 0; j < result.length; j++) {\n                if (!obj.options.format) {\n                    if (result[j].value == k) {\n                        return true;\n                    }\n                } else {\n                    if (result[j].id == k) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        obj.find = function (str) {\n            if (obj.search == str.trim()) {\n                return false;\n            }\n\n            // Search term\n            obj.search = str;\n\n            // Reset index\n            obj.setCursor();\n\n            // Remove nodes from all groups\n            if (obj.groups.length) {\n                for (var i = 0; i < obj.groups.length; i++) {\n                    obj.groups[i].lastChild.innerHTML = '';\n                }\n            }\n\n            // Remove all nodes\n            content.innerHTML = '';\n\n            // Remove current items in the remote search\n            if (obj.options.remoteSearch == true) {\n                // Reset results\n                obj.results = null;\n                // URL\n                var url = obj.options.url + (obj.options.url.indexOf('?') > 0 ? '&' : '?') + 'q=' + str;\n                // Remote search\n                ajax({\n                    url: url,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function (result) {\n                        // Reset items\n                        obj.items = [];\n\n                        // Add the current selected items to the results in case they are not there\n                        var current = Object.keys(obj.value);\n                        if (current.length) {\n                            for (var i = 0; i < current.length; i++) {\n                                if (!exists(current[i], result)) {\n                                    if (!obj.options.format) {\n                                        result.unshift({value: current[i], text: obj.value[current[i]]});\n                                    } else {\n                                        result.unshift({id: current[i], name: obj.value[current[i]]});\n                                    }\n                                }\n                            }\n                        }\n                        // Append data\n                        obj.appendData(result);\n                        // Show or hide results\n                        if (!result.length) {\n                            content.style.display = 'none';\n                        } else {\n                            content.style.display = '';\n                        }\n                    }\n                });\n            } else {\n                // Search terms\n                str = new RegExp(str, 'gi');\n\n                // Reset search\n                var results = [];\n\n                // Append options\n                for (var i = 0; i < obj.items.length; i++) {\n                    // Item label\n                    var label = Text(i);\n                    // Item title\n                    var title = obj.items[i].data.title || '';\n                    // Group name\n                    var groupName = obj.items[i].data.group || '';\n                    // Synonym\n                    var synonym = obj.items[i].data.synonym || '';\n                    if (synonym) {\n                        synonym = synonym.join(' ');\n                    }\n\n                    if (str == null || obj.items[i].selected == true || label.match(str) || title.match(str) || groupName.match(str) || synonym.match(str)) {\n                        results.push(obj.items[i]);\n                    }\n                }\n\n                if (!results.length) {\n                    content.style.display = 'none';\n\n                    // Results\n                    obj.results = null;\n                } else {\n                    content.style.display = '';\n\n                    // Results\n                    obj.results = results;\n\n                    // Show 200 items at once\n                    var number = results.length || 0;\n\n                    // Lazyloading\n                    if (obj.options.lazyLoading == true && number > 200) {\n                        number = 200;\n                    }\n\n                    for (var i = 0; i < number; i++) {\n                        if (obj.results[i].group) {\n                            if (!obj.results[i].group.parentNode) {\n                                content.appendChild(obj.results[i].group);\n                            }\n                            obj.results[i].group.lastChild.appendChild(obj.results[i].element);\n                        } else {\n                            content.appendChild(obj.results[i].element);\n                        }\n                    }\n                }\n            }\n\n            // Auto focus\n            if (obj.options.autofocus == true) {\n                obj.first();\n            }\n        }\n\n        obj.open = function () {\n            // Focus\n            if (!el.classList.contains('jdropdown-focus')) {\n                // Current dropdown\n                Component.current = obj;\n\n                // Start tracking\n                Tracking(obj, true);\n\n                // Add focus\n                el.classList.add('jdropdown-focus');\n\n                // Animation\n                if (helpers.getWindowWidth() < 800) {\n                    if (obj.options.type == null || obj.options.type == 'picker') {\n                        animation.slideBottom(container, 1);\n                    }\n                }\n\n                // Filter\n                if (obj.options.autocomplete == true) {\n                    obj.header.value = obj.search;\n                    obj.header.focus();\n                }\n\n                // Set cursor for the first or first selected element\n                var k = getValue();\n                if (k[0]) {\n                    var cursor = obj.getPosition(k[0]);\n                    if (cursor !== false) {\n                        obj.setCursor(cursor);\n                    }\n                }\n\n                // Container Size\n                if (!obj.options.type || obj.options.type == 'default') {\n                    var rect = el.getBoundingClientRect();\n                    var rectContainer = container.getBoundingClientRect();\n\n                    if (obj.options.position) {\n                        container.style.position = 'fixed';\n                        if (window.innerHeight < rect.bottom + rectContainer.height) {\n                            container.style.top = '';\n                            container.style.bottom = (window.innerHeight - rect.top) + 1 + 'px';\n                        } else {\n                            container.style.top = rect.bottom + 'px';\n                            container.style.bottom = '';\n                        }\n                        container.style.left = rect.left + 'px';\n                    } else {\n                        if (window.innerHeight < rect.bottom + rectContainer.height) {\n                            container.style.top = '';\n                            container.style.bottom = rect.height + 1 + 'px';\n                        } else {\n                            container.style.top = '';\n                            container.style.bottom = '';\n                        }\n                    }\n\n                    container.style.minWidth = rect.width + 'px';\n\n                    if (obj.options.maxWidth) {\n                        container.style.maxWidth = obj.options.maxWidth;\n                    }\n\n                    if (!obj.items.length && obj.options.autocomplete == true) {\n                        content.style.display = 'none';\n                    } else {\n                        content.style.display = '';\n                    }\n                }\n            }\n\n            // Events\n            if (typeof (obj.options.onopen) == 'function') {\n                obj.options.onopen(el);\n            }\n        }\n\n        obj.close = function (ignoreEvents) {\n            if (el.classList.contains('jdropdown-focus')) {\n                // Update labels\n                obj.header.value = obj.getText();\n                // Remove cursor\n                obj.setCursor();\n                // Events\n                if (!ignoreEvents && typeof (obj.options.onclose) == 'function') {\n                    obj.options.onclose(el);\n                }\n                // Blur\n                if (obj.header.blur) {\n                    obj.header.blur();\n                }\n                // Remove focus\n                el.classList.remove('jdropdown-focus');\n                // Start tracking\n                Tracking(obj, false);\n                // Current dropdown\n                Component.current = null;\n            }\n\n            return obj.getValue();\n        }\n\n        /**\n         * Set cursor\n         */\n        obj.setCursor = function (index, setPosition) {\n            // Remove current cursor\n            if (obj.currentIndex != null) {\n                // Remove visual cursor\n                if (obj.items && obj.items[obj.currentIndex]) {\n                    obj.items[obj.currentIndex].element.classList.remove('jdropdown-cursor');\n                }\n            }\n\n            if (index == undefined) {\n                obj.currentIndex = null;\n            } else {\n                index = parseInt(index);\n\n                // Cursor only for visible items\n                if (obj.items[index].element.parentNode) {\n                    obj.items[index].element.classList.add('jdropdown-cursor');\n                    obj.currentIndex = index;\n\n                    // Update scroll to the cursor element\n                    if (setPosition !== false && obj.items[obj.currentIndex].element) {\n                        var container = content.scrollTop;\n                        var element = obj.items[obj.currentIndex].element;\n                        content.scrollTop = element.offsetTop - element.scrollTop + element.clientTop - 95;\n                    }\n                }\n            }\n        }\n\n        // Compatibility\n        obj.resetCursor = obj.setCursor;\n        obj.updateCursor = obj.setCursor;\n\n        /**\n         * Reset cursor and selected items\n         */\n        obj.reset = function () {\n            // Reset cursor\n            obj.setCursor();\n\n            // Reset selected\n            obj.setValue(null);\n        }\n\n        /**\n         * First available item\n         */\n        obj.first = function () {\n            if (obj.options.lazyLoading === true) {\n                obj.loadFirst();\n            }\n\n            var items = content.querySelectorAll('.jdropdown-item');\n            if (items.length) {\n                var newIndex = items[0].indexValue;\n                obj.setCursor(newIndex);\n            }\n        }\n\n        /**\n         * Last available item\n         */\n        obj.last = function () {\n            if (obj.options.lazyLoading === true) {\n                obj.loadLast();\n            }\n\n            var items = content.querySelectorAll('.jdropdown-item');\n            if (items.length) {\n                var newIndex = items[items.length - 1].indexValue;\n                obj.setCursor(newIndex);\n            }\n        }\n\n        obj.next = function (letter) {\n            var newIndex = null;\n\n            if (letter) {\n                if (letter.length == 1) {\n                    // Current index\n                    var current = obj.currentIndex || -1;\n                    // Letter\n                    letter = letter.toLowerCase();\n\n                    var e = null;\n                    var l = null;\n                    var items = content.querySelectorAll('.jdropdown-item');\n                    if (items.length) {\n                        for (var i = 0; i < items.length; i++) {\n                            if (items[i].indexValue > current) {\n                                if (e = obj.items[items[i].indexValue]) {\n                                    if (l = e.element.innerText[0]) {\n                                        l = l.toLowerCase();\n                                        if (letter == l) {\n                                            newIndex = items[i].indexValue;\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        obj.setCursor(newIndex);\n                    }\n                }\n            } else {\n                if (obj.currentIndex == undefined || obj.currentIndex == null) {\n                    obj.first();\n                } else {\n                    var element = obj.items[obj.currentIndex].element;\n\n                    var next = element.nextElementSibling;\n                    if (next) {\n                        if (next.classList.contains('jdropdown-group')) {\n                            next = next.lastChild.firstChild;\n                        }\n                        newIndex = next.indexValue;\n                    } else {\n                        if (element.parentNode.classList.contains('jdropdown-group-items')) {\n                            if (next = element.parentNode.parentNode.nextElementSibling) {\n                                if (next.classList.contains('jdropdown-group')) {\n                                    next = next.lastChild.firstChild;\n                                } else if (next.classList.contains('jdropdown-item')) {\n                                    newIndex = next.indexValue;\n                                } else {\n                                    next = null;\n                                }\n                            }\n\n                            if (next) {\n                                newIndex = next.indexValue;\n                            }\n                        }\n                    }\n\n                    if (newIndex !== null) {\n                        obj.setCursor(newIndex);\n                    }\n                }\n            }\n        }\n\n        obj.prev = function () {\n            var newIndex = null;\n\n            if (obj.currentIndex === null) {\n                obj.first();\n            } else {\n                var element = obj.items[obj.currentIndex].element;\n\n                var prev = element.previousElementSibling;\n                if (prev) {\n                    if (prev.classList.contains('jdropdown-group')) {\n                        prev = prev.lastChild.lastChild;\n                    }\n                    newIndex = prev.indexValue;\n                } else {\n                    if (element.parentNode.classList.contains('jdropdown-group-items')) {\n                        if (prev = element.parentNode.parentNode.previousElementSibling) {\n                            if (prev.classList.contains('jdropdown-group')) {\n                                prev = prev.lastChild.lastChild;\n                            } else if (prev.classList.contains('jdropdown-item')) {\n                                newIndex = prev.indexValue;\n                            } else {\n                                prev = null\n                            }\n                        }\n\n                        if (prev) {\n                            newIndex = prev.indexValue;\n                        }\n                    }\n                }\n            }\n\n            if (newIndex !== null) {\n                obj.setCursor(newIndex);\n            }\n        }\n\n        obj.loadFirst = function () {\n            // Search\n            if (obj.results) {\n                var results = obj.results;\n            } else {\n                var results = obj.items;\n            }\n\n            // Show 200 items at once\n            var number = results.length || 0;\n\n            // Lazyloading\n            if (obj.options.lazyLoading == true && number > 200) {\n                number = 200;\n            }\n\n            // Reset container\n            content.innerHTML = '';\n\n            // First 200 items\n            for (var i = 0; i < number; i++) {\n                if (results[i].group) {\n                    if (!results[i].group.parentNode) {\n                        content.appendChild(results[i].group);\n                    }\n                    results[i].group.lastChild.appendChild(results[i].element);\n                } else {\n                    content.appendChild(results[i].element);\n                }\n            }\n\n            // Scroll go to the begin\n            content.scrollTop = 0;\n        }\n\n        obj.loadLast = function () {\n            // Search\n            if (obj.results) {\n                var results = obj.results;\n            } else {\n                var results = obj.items;\n            }\n\n            // Show first page\n            var number = results.length;\n\n            // Max 200 items\n            if (number > 200) {\n                number = number - 200;\n\n                // Reset container\n                content.innerHTML = '';\n\n                // First 200 items\n                for (var i = number; i < results.length; i++) {\n                    if (results[i].group) {\n                        if (!results[i].group.parentNode) {\n                            content.appendChild(results[i].group);\n                        }\n                        results[i].group.lastChild.appendChild(results[i].element);\n                    } else {\n                        content.appendChild(results[i].element);\n                    }\n                }\n\n                // Scroll go to the begin\n                content.scrollTop = content.scrollHeight;\n            }\n        }\n\n        obj.loadUp = function () {\n            var test = false;\n\n            // Search\n            if (obj.results) {\n                var results = obj.results;\n            } else {\n                var results = obj.items;\n            }\n\n            var items = content.querySelectorAll('.jdropdown-item');\n            var fistItem = items[0].indexValue;\n            fistItem = obj.items[fistItem];\n            var index = results.indexOf(fistItem) - 1;\n\n            if (index > 0) {\n                var number = 0;\n\n                while (index > 0 && results[index] && number < 200) {\n                    if (results[index].group) {\n                        if (!results[index].group.parentNode) {\n                            content.insertBefore(results[index].group, content.firstChild);\n                        }\n                        results[index].group.lastChild.insertBefore(results[index].element, results[index].group.lastChild.firstChild);\n                    } else {\n                        content.insertBefore(results[index].element, content.firstChild);\n                    }\n\n                    index--;\n                    number++;\n                }\n\n                // New item added\n                test = true;\n            }\n\n            return test;\n        }\n\n        obj.loadDown = function () {\n            var test = false;\n\n            // Search\n            if (obj.results) {\n                var results = obj.results;\n            } else {\n                var results = obj.items;\n            }\n\n            var items = content.querySelectorAll('.jdropdown-item');\n            var lastItem = items[items.length - 1].indexValue;\n            lastItem = obj.items[lastItem];\n            var index = results.indexOf(lastItem) + 1;\n\n            if (index < results.length) {\n                var number = 0;\n                while (index < results.length && results[index] && number < 200) {\n                    if (results[index].group) {\n                        if (!results[index].group.parentNode) {\n                            content.appendChild(results[index].group);\n                        }\n                        results[index].group.lastChild.appendChild(results[index].element);\n                    } else {\n                        content.appendChild(results[index].element);\n                    }\n\n                    index++;\n                    number++;\n                }\n\n                // New item added\n                test = true;\n            }\n\n            return test;\n        }\n\n        init();\n\n        return obj;\n    });\n\n    Component.keydown = function (e) {\n        var dropdown = null;\n        if (dropdown = Component.current) {\n            if (e.which == 13 || e.which == 9) {  // enter or tab\n                if (dropdown.header.value && dropdown.currentIndex == null && dropdown.options.newOptions) {\n                    // if they typed something in, but it matched nothing, and newOptions are allowed, start that flow\n                    dropdown.add();\n                } else {\n                    // Quick Select/Filter\n                    if (dropdown.currentIndex == null && dropdown.options.autocomplete == true && dropdown.header.value != \"\") {\n                        dropdown.find(dropdown.header.value);\n                    }\n                    dropdown.selectIndex(dropdown.currentIndex);\n                }\n            } else if (e.which == 38) {  // up arrow\n                if (dropdown.currentIndex == null) {\n                    dropdown.first();\n                } else if (dropdown.currentIndex > 0) {\n                    dropdown.prev();\n                }\n                e.preventDefault();\n            } else if (e.which == 40) {  // down arrow\n                if (dropdown.currentIndex == null) {\n                    dropdown.first();\n                } else if (dropdown.currentIndex + 1 < dropdown.items.length) {\n                    dropdown.next();\n                }\n                e.preventDefault();\n            } else if (e.which == 36) {\n                dropdown.first();\n                if (!e.target.classList.contains('jdropdown-header')) {\n                    e.preventDefault();\n                }\n            } else if (e.which == 35) {\n                dropdown.last();\n                if (!e.target.classList.contains('jdropdown-header')) {\n                    e.preventDefault();\n                }\n            } else if (e.which == 27) {\n                dropdown.close();\n            } else if (e.which == 33) {  // page up\n                if (dropdown.currentIndex == null) {\n                    dropdown.first();\n                } else if (dropdown.currentIndex > 0) {\n                    for (var i = 0; i < 7; i++) {\n                        dropdown.prev()\n                    }\n                }\n                e.preventDefault();\n            } else if (e.which == 34) {  // page down\n                if (dropdown.currentIndex == null) {\n                    dropdown.first();\n                } else if (dropdown.currentIndex + 1 < dropdown.items.length) {\n                    for (var i = 0; i < 7; i++) {\n                        dropdown.next()\n                    }\n                }\n                e.preventDefault();\n            }\n        }\n    }\n\n    Component.mouseup = function (e) {\n        var element = helpers.findElement(e.target, 'jdropdown');\n        if (element) {\n            var dropdown = element.dropdown;\n            if (e.target.classList.contains('jdropdown-header')) {\n                if (element.classList.contains('jdropdown-focus') && element.classList.contains('jdropdown-default')) {\n                    var rect = element.getBoundingClientRect();\n\n                    if (e.changedTouches && e.changedTouches[0]) {\n                        var x = e.changedTouches[0].clientX;\n                        var y = e.changedTouches[0].clientY;\n                    } else {\n                        var x = e.clientX;\n                        var y = e.clientY;\n                    }\n\n                    if (rect.width - (x - rect.left) < 30) {\n                        if (e.target.classList.contains('jdropdown-add')) {\n                            dropdown.add();\n                        } else {\n                            dropdown.close();\n                        }\n                    } else {\n                        if (dropdown.options.autocomplete == false) {\n                            dropdown.close();\n                        }\n                    }\n                } else {\n                    dropdown.open();\n                }\n            } else if (e.target.classList.contains('jdropdown-group-name')) {\n                var items = e.target.nextSibling.children;\n                if (e.target.nextSibling.style.display != 'none') {\n                    for (var i = 0; i < items.length; i++) {\n                        if (items[i].style.display != 'none') {\n                            dropdown.selectItem(items[i]);\n                        }\n                    }\n                }\n            } else if (e.target.classList.contains('jdropdown-group-arrow')) {\n                if (e.target.classList.contains('jdropdown-group-arrow-down')) {\n                    e.target.classList.remove('jdropdown-group-arrow-down');\n                    e.target.classList.add('jdropdown-group-arrow-up');\n                    e.target.parentNode.nextSibling.style.display = 'none';\n                } else {\n                    e.target.classList.remove('jdropdown-group-arrow-up');\n                    e.target.classList.add('jdropdown-group-arrow-down');\n                    e.target.parentNode.nextSibling.style.display = '';\n                }\n            } else if (e.target.classList.contains('jdropdown-item')) {\n                dropdown.selectItem(e.target);\n            } else if (e.target.classList.contains('jdropdown-image')) {\n                dropdown.selectItem(e.target.parentNode);\n            } else if (e.target.classList.contains('jdropdown-description')) {\n                dropdown.selectItem(e.target.parentNode);\n            } else if (e.target.classList.contains('jdropdown-title')) {\n                dropdown.selectItem(e.target.parentNode.parentNode);\n            } else if (e.target.classList.contains('jdropdown-close') || e.target.classList.contains('jdropdown-backdrop')) {\n                dropdown.close();\n            }\n        }\n    }\n\n    Component.extractFromDom = function (el, options) {\n        // Keep reference\n        var select = el;\n        if (!options) {\n            options = {};\n        }\n        // Prepare configuration\n        if (el.getAttribute('multiple') && (!options || options.multiple == undefined)) {\n            options.multiple = true;\n        }\n        if (el.getAttribute('placeholder') && (!options || options.placeholder == undefined)) {\n            options.placeholder = el.getAttribute('placeholder');\n        }\n        if (el.getAttribute('data-autocomplete') && (!options || options.autocomplete == undefined)) {\n            options.autocomplete = true;\n        }\n        if (!options || options.width == undefined) {\n            options.width = el.offsetWidth;\n        }\n        if (el.value && (!options || options.value == undefined)) {\n            options.value = el.value;\n        }\n        if (!options || options.data == undefined) {\n            options.data = [];\n            for (var j = 0; j < el.children.length; j++) {\n                if (el.children[j].tagName == 'OPTGROUP') {\n                    for (var i = 0; i < el.children[j].children.length; i++) {\n                        options.data.push({\n                            value: el.children[j].children[i].value,\n                            text: el.children[j].children[i].innerHTML,\n                            group: el.children[j].getAttribute('label'),\n                        });\n                    }\n                } else {\n                    options.data.push({\n                        value: el.children[j].value,\n                        text: el.children[j].innerHTML,\n                    });\n                }\n            }\n        }\n        if (!options || options.onchange == undefined) {\n            options.onchange = function (a, b, c, d) {\n                if (options.multiple == true) {\n                    if (obj.items[b].classList.contains('jdropdown-selected')) {\n                        select.options[b].setAttribute('selected', 'selected');\n                    } else {\n                        select.options[b].removeAttribute('selected');\n                    }\n                } else {\n                    select.value = d;\n                }\n            }\n        }\n        // Create DIV\n        var div = document.createElement('div');\n        el.parentNode.insertBefore(div, el);\n        el.style.display = 'none';\n        el = div;\n\n        return {el: el, options: options};\n    }\n\n    return Component;\n}\n\n/* harmony default export */ var dropdown = (Dropdown());\n;// CONCATENATED MODULE: ./src/plugins/picker.js\n\n\n\nfunction Picker(el, options) {\n    // Already created, update options\n    if (el.picker) {\n        return el.picker.setOptions(options, true);\n    }\n\n    // New instance\n    var obj = { type: 'picker' };\n    obj.options = {};\n\n    var dropdownHeader = null;\n    var dropdownContent = null;\n\n    /**\n     * The element passed is a DOM element\n     */\n    var isDOM = function(o) {\n        return (o instanceof Element || o instanceof HTMLDocument);\n    }\n\n    /**\n     * Create the content options\n     */\n    var createContent = function() {\n        dropdownContent.innerHTML = '';\n\n        // Create items\n        var keys = Object.keys(obj.options.data);\n\n        // Go though all options\n        for (var i = 0; i < keys.length; i++) {\n            // Item\n            var dropdownItem = document.createElement('div');\n            dropdownItem.classList.add('jpicker-item');\n            dropdownItem.k = keys[i];\n            dropdownItem.v = obj.options.data[keys[i]];\n            // Label\n            var item = obj.getLabel(keys[i], dropdownItem);\n            if (isDOM(item)) {\n                dropdownItem.appendChild(item);\n            } else {\n                dropdownItem.innerHTML = item;\n            }\n            // Append\n            dropdownContent.appendChild(dropdownItem);\n        }\n    }\n\n    /**\n     * Set or reset the options for the picker\n     */\n    obj.setOptions = function(options, reset) {\n        // Default configuration\n        var defaults = {\n            value: 0,\n            data: null,\n            render: null,\n            onchange: null,\n            onmouseover: null,\n            onselect: null,\n            onopen: null,\n            onclose: null,\n            onload: null,\n            width: null,\n            header: true,\n            right: false,\n            bottom: false,\n            content: false,\n            columns: null,\n            grid: null,\n            height: null,\n        }\n\n        // Legacy purpose only\n        if (options && options.options) {\n            options.data = options.options;\n        }\n\n        // Loop through the initial configuration\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                if (typeof(obj.options[property]) == 'undefined' || reset === true) {\n                    obj.options[property] = defaults[property];\n                }\n            }\n        }\n\n        // Start using the options\n        if (obj.options.header === false) {\n            dropdownHeader.style.display = 'none';\n        } else {\n            dropdownHeader.style.display = '';\n        }\n\n        // Width\n        if (obj.options.width) {\n            dropdownHeader.style.width = parseInt(obj.options.width) + 'px';\n        } else {\n            dropdownHeader.style.width = '';\n        }\n\n        // Height\n        if (obj.options.height) {\n            dropdownContent.style.maxHeight = obj.options.height + 'px';\n            dropdownContent.style.overflow = 'scroll';\n        } else {\n            dropdownContent.style.overflow = '';\n        }\n\n        if (obj.options.columns > 0) {\n            if (! obj.options.grid) {\n                dropdownContent.classList.add('jpicker-columns');\n                dropdownContent.style.width = obj.options.width ? obj.options.width : 36 * obj.options.columns + 'px';\n            } else {\n                dropdownContent.classList.add('jpicker-grid');\n                dropdownContent.style.gridTemplateColumns = 'repeat(' + obj.options.grid + ', 1fr)';\n            }\n        }\n\n        if (isNaN(parseInt(obj.options.value))) {\n            obj.options.value = 0;\n        }\n\n        // Create list from data\n        createContent();\n\n        // Set value\n        obj.setValue(obj.options.value);\n\n        // Set options all returns the own instance\n        return obj;\n    }\n\n    obj.getValue = function() {\n        return obj.options.value;\n    }\n\n    obj.setValue = function(k, e) {\n        // Set label\n        obj.setLabel(k);\n\n        // Update value\n        obj.options.value = String(k);\n\n        // Lemonade JS\n        if (el.value != obj.options.value) {\n            el.value = obj.options.value;\n            if (typeof(el.oninput) == 'function') {\n                el.oninput({\n                    type: 'input',\n                    target: el,\n                    value: el.value\n                });\n            }\n        }\n\n        if (dropdownContent.children[k] && dropdownContent.children[k].getAttribute('type') !== 'generic') {\n            obj.close();\n        }\n\n        // Call method\n        if (e) {\n            if (typeof (obj.options.onchange) == 'function') {\n                var v = obj.options.data[k];\n\n                obj.options.onchange(el, obj, v, v, k, e);\n            }\n        }\n    }\n\n    obj.getLabel = function(v, item) {\n        var label = obj.options.data[v] || null;\n        if (typeof(obj.options.render) == 'function') {\n            label = obj.options.render(label, item);\n        }\n        return label;\n    }\n\n    obj.setLabel = function(v) {\n        var item;\n\n        if (obj.options.content) {\n            item = '<i class=\"material-icons\">' + obj.options.content + '</i>';\n        } else {\n            item = obj.getLabel(v, null);\n        }\n        // Label\n        if (isDOM(item)) {\n            dropdownHeader.innerHTML = '';\n            dropdownHeader.appendChild(item);\n        } else {\n            dropdownHeader.innerHTML = item;\n        }\n    }\n\n    obj.open = function() {\n        if (! el.classList.contains('jpicker-focus')) {\n            // Start tracking the element\n            Tracking(obj, true);\n\n            // Open picker\n            el.classList.add('jpicker-focus');\n            el.focus();\n\n            var top = 0;\n            var left = 0;\n\n            dropdownContent.style.marginLeft = '';\n\n            var rectHeader = dropdownHeader.getBoundingClientRect();\n            var rectContent = dropdownContent.getBoundingClientRect();\n\n            if (window.innerHeight < rectHeader.bottom + rectContent.height || obj.options.bottom) {\n                top = -1 * (rectContent.height + 4);\n            } else {\n                top = rectHeader.height + 4;\n            }\n\n            if (obj.options.right === true) {\n                left = -1 * rectContent.width + rectHeader.width;\n            }\n\n            if (rectContent.left + left < 0) {\n                left = left + rectContent.left + 10;\n            }\n            if (rectContent.left + rectContent.width > window.innerWidth) {\n                left = -1 * (10 + rectContent.left + rectContent.width - window.innerWidth);\n            }\n\n            dropdownContent.style.marginTop = parseInt(top) + 'px';\n            dropdownContent.style.marginLeft = parseInt(left) + 'px';\n\n            //dropdownContent.style.marginTop\n            if (typeof obj.options.onopen == 'function') {\n                obj.options.onopen(el, obj);\n            }\n        }\n    }\n\n    obj.close = function() {\n        if (el.classList.contains('jpicker-focus')) {\n            el.classList.remove('jpicker-focus');\n\n            // Start tracking the element\n            Tracking(obj, false);\n\n            if (typeof obj.options.onclose == 'function') {\n                obj.options.onclose(el, obj);\n            }\n        }\n    }\n\n    /**\n     * Create floating picker\n     */\n    var init = function() {\n        // Class\n        el.classList.add('jpicker');\n        el.setAttribute('tabindex', '900');\n        el.onmousedown = function(e) {\n            if (! el.classList.contains('jpicker-focus')) {\n                obj.open();\n            }\n        }\n\n        // Dropdown Header\n        dropdownHeader = document.createElement('div');\n        dropdownHeader.classList.add('jpicker-header');\n\n        // Dropdown content\n        dropdownContent = document.createElement('div');\n        dropdownContent.classList.add('jpicker-content');\n        dropdownContent.onclick = function(e) {\n            var item = helpers.findElement(e.target, 'jpicker-item');\n            if (item) {\n                if (item.parentNode === dropdownContent) {\n                    // Update label\n                    obj.setValue(item.k, e);\n                }\n            }\n        }\n        // Append content and header\n        el.appendChild(dropdownHeader);\n        el.appendChild(dropdownContent);\n\n        // Default value\n        el.value = options.value || 0;\n\n        // Set options\n        obj.setOptions(options);\n\n        if (typeof(obj.options.onload) == 'function') {\n            obj.options.onload(el, obj);\n        }\n\n        // Change\n        el.change = obj.setValue;\n\n        // Global generic value handler\n        el.val = function(val) {\n            if (val === undefined) {\n                return obj.getValue();\n            } else {\n                obj.setValue(val);\n            }\n        }\n\n        // Reference\n        el.picker = obj;\n    }\n\n    init();\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/toolbar.js\n\n\n\n\n\nfunction Toolbar(el, options) {\n    // New instance\n    var obj = { type:'toolbar' };\n    obj.options = {};\n\n    // Default configuration\n    var defaults = {\n        app: null,\n        container: false,\n        badge: false,\n        title: false,\n        responsive: false,\n        maxWidth: null,\n        bottom: true,\n        items: [],\n    }\n\n    // Loop through our object\n    for (var property in defaults) {\n        if (options && options.hasOwnProperty(property)) {\n            obj.options[property] = options[property];\n        } else {\n            obj.options[property] = defaults[property];\n        }\n    }\n\n    if (! el && options.app && options.app.el) {\n        el = document.createElement('div');\n        options.app.el.appendChild(el);\n    }\n\n    // Arrow\n    var toolbarArrow = document.createElement('div');\n    toolbarArrow.classList.add('jtoolbar-item');\n    toolbarArrow.classList.add('jtoolbar-arrow');\n\n    var toolbarFloating = document.createElement('div');\n    toolbarFloating.classList.add('jtoolbar-floating');\n    toolbarArrow.appendChild(toolbarFloating);\n\n    obj.selectItem = function(element) {\n        var elements = toolbarContent.children;\n        for (var i = 0; i < elements.length; i++) {\n            if (element != elements[i]) {\n                elements[i].classList.remove('jtoolbar-selected');\n            }\n        }\n        element.classList.add('jtoolbar-selected');\n    }\n\n    obj.hide = function() {\n        animation.slideBottom(el, 0, function() {\n            el.style.display = 'none';\n        });\n    }\n\n    obj.show = function() {\n        el.style.display = '';\n        animation.slideBottom(el, 1);\n    }\n\n    obj.get = function() {\n        return el;\n    }\n\n    obj.setBadge = function(index, value) {\n        toolbarContent.children[index].children[1].firstChild.innerHTML = value;\n    }\n\n    obj.destroy = function() {\n        toolbar.remove();\n        el.innerHTML = '';\n    }\n\n    obj.update = function(a, b) {\n        for (var i = 0; i < toolbarContent.children.length; i++) {\n            // Toolbar element\n            var toolbarItem = toolbarContent.children[i];\n            // State management\n            if (typeof(toolbarItem.updateState) == 'function') {\n                toolbarItem.updateState(el, obj, toolbarItem, a, b);\n            }\n        }\n        for (var i = 0; i < toolbarFloating.children.length; i++) {\n            // Toolbar element\n            var toolbarItem = toolbarFloating.children[i];\n            // State management\n            if (typeof(toolbarItem.updateState) == 'function') {\n                toolbarItem.updateState(el, obj, toolbarItem, a, b);\n            }\n        }\n    }\n\n    obj.create = function(items) {\n        // Reset anything in the toolbar\n        toolbarContent.innerHTML = '';\n        // Create elements in the toolbar\n        for (var i = 0; i < items.length; i++) {\n            var toolbarItem = document.createElement('div');\n            toolbarItem.classList.add('jtoolbar-item');\n\n            if (items[i].width) {\n                toolbarItem.style.width = parseInt(items[i].width) + 'px'; \n            }\n\n            if (items[i].k) {\n                toolbarItem.k = items[i].k;\n            }\n\n            if (items[i].tooltip) {\n                toolbarItem.setAttribute('title', items[i].tooltip);\n            }\n\n            // Id\n            if (items[i].id) {\n                toolbarItem.setAttribute('id', items[i].id);\n            }\n\n            // Selected\n            if (items[i].updateState) {\n                toolbarItem.updateState = items[i].updateState;\n            }\n\n            if (items[i].active) {\n                toolbarItem.classList.add('jtoolbar-active');\n            }\n\n            if (items[i].disabled) {\n                toolbarItem.classList.add('jtoolbar-disabled');\n            }\n\n            if (items[i].type == 'select' || items[i].type == 'dropdown') {\n                Picker(toolbarItem, items[i]);\n            } else if (items[i].type == 'divisor') {\n                toolbarItem.classList.add('jtoolbar-divisor');\n            } else if (items[i].type == 'label') {\n                toolbarItem.classList.add('jtoolbar-label');\n                toolbarItem.innerHTML = items[i].content;\n            } else {\n                // Material icons\n                var toolbarIcon = document.createElement('i');\n                if (typeof(items[i].class) === 'undefined') {\n                    toolbarIcon.classList.add('material-icons');\n                } else {\n                    var c = items[i].class.split(' ');\n                    for (var j = 0; j < c.length; j++) {\n                        toolbarIcon.classList.add(c[j]);\n                    }\n                }\n                toolbarIcon.innerHTML = items[i].content ? items[i].content : '';\n                toolbarItem.appendChild(toolbarIcon);\n\n                // Badge options\n                if (obj.options.badge == true) {\n                    var toolbarBadge = document.createElement('div');\n                    toolbarBadge.classList.add('jbadge');\n                    var toolbarBadgeContent = document.createElement('div');\n                    toolbarBadgeContent.innerHTML = items[i].badge ? items[i].badge : '';\n                    toolbarBadge.appendChild(toolbarBadgeContent);\n                    toolbarItem.appendChild(toolbarBadge);\n                }\n\n                // Title\n                if (items[i].title) {\n                    if (obj.options.title == true) {\n                        var toolbarTitle = document.createElement('span');\n                        toolbarTitle.innerHTML = items[i].title;\n                        toolbarItem.appendChild(toolbarTitle);\n                    } else {\n                        toolbarItem.setAttribute('title', items[i].title);\n                    }\n                }\n\n                if (obj.options.app && items[i].route) {\n                    // Route\n                    toolbarItem.route = items[i].route;\n                    // Onclick for route\n                    toolbarItem.onclick = function() {\n                        obj.options.app.pages(this.route);\n                    }\n                    // Create pages\n                    obj.options.app.pages(items[i].route, {\n                        toolbarItem: toolbarItem,\n                        closed: true\n                    });\n                }\n            }\n\n            if (items[i].onclick) {\n                toolbarItem.onclick = items[i].onclick.bind(items[i], el, obj, toolbarItem);\n            }\n\n            toolbarContent.appendChild(toolbarItem);\n        }\n\n        // Fits to the page\n        setTimeout(function() {\n            obj.refresh();\n        }, 0);\n    }\n\n    obj.open = function() {\n        toolbarArrow.classList.add('jtoolbar-arrow-selected');\n\n        var rectElement = el.getBoundingClientRect();\n        var rect = toolbarFloating.getBoundingClientRect();\n        if (rect.bottom > window.innerHeight || obj.options.bottom) {\n            toolbarFloating.style.bottom = '0';\n        } else {\n            toolbarFloating.style.removeProperty('bottom');\n        }\n\n        toolbarFloating.style.right = '0';\n\n        toolbarArrow.children[0].focus();\n        // Start tracking\n        Tracking(obj, true);\n    }\n\n    obj.close = function() {\n        toolbarArrow.classList.remove('jtoolbar-arrow-selected')\n        // End tracking\n        Tracking(obj, false);\n    }\n\n    obj.refresh = function() {\n        if (obj.options.responsive == true) {\n            // Width of the c\n            var rect = el.parentNode.getBoundingClientRect();\n            if (! obj.options.maxWidth) {\n                obj.options.maxWidth = rect.width;\n            }\n            // Available parent space\n            var available = parseInt(obj.options.maxWidth);\n            // Remove arrow\n            if (toolbarArrow.parentNode) {\n                toolbarArrow.parentNode.removeChild(toolbarArrow);\n            }\n            // Move all items to the toolbar\n            while (toolbarFloating.firstChild) {\n                toolbarContent.appendChild(toolbarFloating.firstChild);\n            }\n            // Toolbar is larger than the parent, move elements to the floating element\n            if (available < toolbarContent.offsetWidth) {\n                // Give space to the floating element\n                available -= 50;\n                // Move to the floating option\n                while (toolbarContent.lastChild && available < toolbarContent.offsetWidth) {\n                    toolbarFloating.insertBefore(toolbarContent.lastChild, toolbarFloating.firstChild);\n                }\n            }\n            // Show arrow\n            if (toolbarFloating.children.length > 0) {\n                toolbarContent.appendChild(toolbarArrow);\n            }\n        }\n    }\n\n    obj.setReadonly = function(state) {\n        state = state ? 'add' : 'remove';\n        el.classList[state]('jtoolbar-disabled');\n    }\n\n    el.onclick = function(e) {\n        var element = helpers.findElement(e.target, 'jtoolbar-item');\n        if (element) {\n            obj.selectItem(element);\n        }\n\n        if (e.target.classList.contains('jtoolbar-arrow')) {\n            obj.open();\n        }\n    }\n\n    window.addEventListener('resize', function() {\n        obj.refresh();\n    });\n\n    // Toolbar\n    el.classList.add('jtoolbar');\n    // Reset content\n    el.innerHTML = '';\n    // Container\n    if (obj.options.container == true) {\n        el.classList.add('jtoolbar-container');\n    }\n    // Content\n    var toolbarContent = document.createElement('div');\n    el.appendChild(toolbarContent);\n    // Special toolbar for mobile applications\n    if (obj.options.app) {\n        el.classList.add('jtoolbar-mobile');\n    }\n    // Create toolbar\n    obj.create(obj.options.items);\n    // Shortcut\n    el.toolbar = obj;\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/editor.js\n\n\n\n\n\nfunction Editor() {\n    var Component = (function(el, options) {\n        // New instance\n        var obj = { type:'editor' };\n        obj.options = {};\n\n        // Default configuration\n        var defaults = {\n            // Load data from a remove location\n            url: null,\n            // Initial HTML content\n            value: '',\n            // Initial snippet\n            snippet: null,\n            // Add toolbar\n            toolbar: true,\n            toolbarOnTop: false,\n            // Website parser is to read websites and images from cross domain\n            remoteParser: null,\n            // Placeholder\n            placeholder: null,\n            // Parse URL\n            filterPaste: true,\n            // Accept drop files\n            dropZone: true,\n            dropAsSnippet: false,\n            acceptImages: true,\n            acceptFiles: false,\n            maxFileSize: 5000000,\n            allowImageResize: true,\n            // Style\n            maxHeight: null,\n            height: null,\n            focus: false,\n            // Events\n            onclick: null,\n            onfocus: null,\n            onblur: null,\n            onload: null,\n            onkeyup: null,\n            onkeydown: null,\n            onchange: null,\n            extensions: null,\n            type: null,\n        };\n\n        // Loop through our object\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                obj.options[property] = defaults[property];\n            }\n        }\n\n        // Private controllers\n        var editorTimer = null;\n        var editorAction = null;\n        var files = [];\n\n        // Keep the reference for the container\n        obj.el = el;\n\n        if (typeof(obj.options.onclick) == 'function') {\n            el.onclick = function(e) {\n                obj.options.onclick(el, obj, e);\n            }\n        }\n\n        // Prepare container\n        el.classList.add('jeditor-container');\n\n        // Snippet\n        var snippet = document.createElement('div');\n        snippet.className = 'jsnippet';\n        snippet.setAttribute('contenteditable', false);\n\n        // Toolbar\n        var toolbar = document.createElement('div');\n        toolbar.className = 'jeditor-toolbar';\n\n        obj.editor = document.createElement('div');\n        obj.editor.setAttribute('contenteditable', true);\n        obj.editor.setAttribute('spellcheck', false);\n        obj.editor.classList.add('jeditor');\n\n        // Placeholder\n        if (obj.options.placeholder) {\n            obj.editor.setAttribute('data-placeholder', obj.options.placeholder);\n        }\n\n        // Max height\n        if (obj.options.maxHeight || obj.options.height) {\n            obj.editor.style.overflowY = 'auto';\n\n            if (obj.options.maxHeight) {\n                obj.editor.style.maxHeight = obj.options.maxHeight;\n            }\n            if (obj.options.height) {\n                obj.editor.style.height = obj.options.height;\n            }\n        }\n\n        // Set editor initial value\n        if (obj.options.url) {\n            ajax({\n                url: obj.options.url,\n                dataType: 'html',\n                success: function(result) {\n                    obj.editor.innerHTML = result;\n\n                    Component.setCursor(obj.editor, obj.options.focus == 'initial' ? true : false);\n                }\n            })\n        } else {\n            if (obj.options.value) {\n                obj.editor.innerHTML = obj.options.value;\n            } else {\n                // Create from existing elements\n                for (var i = 0; i < el.children.length; i++) {\n                    obj.editor.appendChild(el.children[i]);\n                }\n            }\n        }\n\n        // Make sure element is empty\n        el.innerHTML = '';\n\n        /**\n         * Onchange event controllers\n         */\n        var change = function(e) {\n            if (typeof(obj.options.onchange) == 'function') {\n                obj.options.onchange(el, obj, e);\n            }\n\n            // Update value\n            obj.options.value = obj.getData();\n\n            // Lemonade JS\n            if (el.value != obj.options.value) {\n                el.value = obj.options.value;\n                if (typeof(el.oninput) == 'function') {\n                    el.oninput({\n                        type: 'input',\n                        target: el,\n                        value: el.value\n                    });\n                }\n            }\n        }\n\n        /**\n         * Extract images from a HTML string\n         */\n        var extractImageFromHtml = function(html) {\n            // Create temp element\n            var div = document.createElement('div');\n            div.innerHTML = html;\n\n            // Extract images\n            var img = div.querySelectorAll('img');\n\n            if (img.length) {\n                for (var i = 0; i < img.length; i++) {\n                    obj.addImage(img[i].src);\n                }\n            }\n        }\n\n        /**\n         * Insert node at caret\n         */\n        var insertNodeAtCaret = function(newNode) {\n            var sel, range;\n\n            if (window.getSelection) {\n                sel = window.getSelection();\n                if (sel.rangeCount) {\n                    range = sel.getRangeAt(0);\n                    var selectedText = range.toString();\n                    range.deleteContents();\n                    range.insertNode(newNode);\n                    // move the cursor after element\n                    range.setStartAfter(newNode);\n                    range.setEndAfter(newNode);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n            }\n        }\n\n        var updateTotalImages = function() {\n            var o = null;\n            if (o = snippet.children[0]) {\n                // Make sure is a grid\n                if (! o.classList.contains('jslider-grid')) {\n                    o.classList.add('jslider-grid');\n                }\n                // Quantify of images\n                var number = o.children.length;\n                // Set the configuration of the grid\n                o.setAttribute('data-number', number > 4 ? 4 : number);\n                // Total of images inside the grid\n                if (number > 4) {\n                    o.setAttribute('data-total', number - 4);\n                } else {\n                    o.removeAttribute('data-total');\n                }\n            }\n        }\n\n        /**\n         * Append image to the snippet\n         */\n        var appendImage = function(image) {\n            if (! snippet.innerHTML) {\n                obj.appendSnippet({});\n            }\n            snippet.children[0].appendChild(image);\n            updateTotalImages();\n        }\n\n        /**\n         * Append snippet\n         * @Param object data\n         */\n        obj.appendSnippet = function(data) {\n            // Reset snippet\n            snippet.innerHTML = '';\n\n            // Attributes\n            var a = [ 'image', 'title', 'description', 'host', 'url' ];\n\n            for (var i = 0; i < a.length; i++) {\n                var div = document.createElement('div');\n                div.className = 'jsnippet-' + a[i];\n                div.setAttribute('data-k', a[i]);\n                snippet.appendChild(div);\n                if (data[a[i]]) {\n                    if (a[i] == 'image') {\n                        if (! Array.isArray(data.image)) {\n                            data.image = [ data.image ];\n                        }\n                        for (var j = 0; j < data.image.length; j++) {\n                            var img = document.createElement('img');\n                            img.src = data.image[j];\n                            div.appendChild(img);\n                        }\n                    } else {\n                        div.innerHTML = data[a[i]];\n                    }\n                }\n            }\n\n            obj.editor.appendChild(document.createElement('br'));\n            obj.editor.appendChild(snippet);\n        }\n\n        /**\n         * Set editor value\n         */\n        obj.setData = function(o) {\n            if (typeof(o) == 'object') {\n                obj.editor.innerHTML = o.content;\n            } else {\n                obj.editor.innerHTML = o;\n            }\n\n            if (obj.options.focus) {\n                Component.setCursor(obj.editor, true);\n            }\n\n            // Reset files container\n            files = [];\n        }\n\n        obj.getFiles = function() {\n            var f = obj.editor.querySelectorAll('.jfile');\n            var d = [];\n            for (var i = 0; i < f.length; i++) {\n                if (files[f[i].src]) {\n                    d.push(files[f[i].src]);\n                }\n            }\n            return d;\n        }\n\n        obj.getText = function() {\n            return obj.editor.innerText;\n        }\n\n        /**\n         * Get editor data\n         */\n        obj.getData = function(json) {\n            if (! json) {\n                var data = obj.editor.innerHTML;\n            } else {\n                var data = {\n                    content : '',\n                }\n\n                // Get snippet\n                if (snippet.innerHTML) {\n                    var index = 0;\n                    data.snippet = {};\n                    for (var i = 0; i < snippet.children.length; i++) {\n                        // Get key from element\n                        var key = snippet.children[i].getAttribute('data-k');\n                        if (key) {\n                            if (key == 'image') {\n                                if (! data.snippet.image) {\n                                    data.snippet.image = [];\n                                }\n                                // Get all images\n                                for (var j = 0; j < snippet.children[i].children.length; j++) {\n                                    data.snippet.image.push(snippet.children[i].children[j].getAttribute('src'))\n                                }\n                            } else {\n                                data.snippet[key] = snippet.children[i].innerHTML;\n                            }\n                        }\n                    }\n                }\n\n                // Get files\n                var f = Object.keys(files);\n                if (f.length) {\n                    data.files = [];\n                    for (var i = 0; i < f.length; i++) {\n                        data.files.push(files[f[i]]);\n                    }\n                }\n\n                // Get content\n                var d = document.createElement('div');\n                d.innerHTML = obj.editor.innerHTML;\n                var s = d.querySelector('.jsnippet');\n                if (s) {\n                    s.remove();\n                }\n\n                var text = d.innerHTML;\n                text = text.replace(/<br>/g, \"\\n\");\n                text = text.replace(/<\\/div>/g, \"<\\/div>\\n\");\n                text = text.replace(/<(?:.|\\n)*?>/gm, \"\");\n                data.content = text.trim();\n\n                // Process extensions\n                processExtensions('getData', data);\n            }\n\n            return data;\n        }\n\n        // Reset\n        obj.reset = function() {\n            obj.editor.innerHTML = '';\n            snippet.innerHTML = '';\n            files = [];\n        }\n\n        obj.addPdf = function(data) {\n            if (data.result.substr(0,4) != 'data') {\n                console.error('Invalid source');\n            } else {\n                var canvas = document.createElement('canvas');\n                canvas.width = 60;\n                canvas.height = 60;\n\n                var img = new Image();\n                var ctx = canvas.getContext('2d');\n                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n                canvas.toBlob(function(blob) {\n                    var newImage = document.createElement('img');\n                    newImage.src = window.URL.createObjectURL(blob);\n                    newImage.title = data.name;\n                    newImage.className = 'jfile pdf';\n\n                    files[newImage.src] = {\n                        file: newImage.src,\n                        extension: 'pdf',\n                        content: data.result,\n                    }\n\n                    //insertNodeAtCaret(newImage);\n                    document.execCommand('insertHtml', false, newImage.outerHTML);\n                });\n            }\n        }\n\n        obj.addImage = function(src, asSnippet) {\n            if (! src) {\n                src = '';\n            }\n\n            if (src.substr(0,4) != 'data' && ! obj.options.remoteParser) {\n                console.error('remoteParser not defined in your initialization');\n            } else {\n                // This is to process cross domain images\n                if (src.substr(0,4) == 'data') {\n                    var extension = src.split(';')\n                    extension = extension[0].split('/');\n                    extension = extension[1];\n                } else {\n                    var extension = src.substr(src.lastIndexOf('.') + 1);\n                    // Work for cross browsers\n                    src = obj.options.remoteParser + src;\n                }\n\n                var img = new Image();\n\n                img.onload = function onload() {\n                    var canvas = document.createElement('canvas');\n                    canvas.width = img.width;\n                    canvas.height = img.height;\n\n                    var ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n                    canvas.toBlob(function(blob) {\n                        var newImage = document.createElement('img');\n                        newImage.src = window.URL.createObjectURL(blob);\n                        newImage.classList.add('jfile');\n                        newImage.setAttribute('tabindex', '900');\n                        newImage.setAttribute('width', img.width);\n                        newImage.setAttribute('height', img.height);\n                        files[newImage.src] = {\n                            file: newImage.src,\n                            extension: extension,\n                            content: canvas.toDataURL(),\n                        }\n\n                        if (obj.options.dropAsSnippet || asSnippet) {\n                            appendImage(newImage);\n                            // Just to understand the attachment is part of a snippet\n                            files[newImage.src].snippet = true;\n                        } else {\n                            //insertNodeAtCaret(newImage);\n                            document.execCommand('insertHtml', false, newImage.outerHTML);\n                        }\n\n                        change();\n                    });\n                };\n\n                img.src = src;\n            }\n        }\n\n        obj.addFile = function(files) {\n            var reader = [];\n\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].size > obj.options.maxFileSize) {\n                    alert('The file is too big');\n                } else {\n                    // Only PDF or Images\n                    var type = files[i].type.split('/');\n\n                    if (type[0] == 'image') {\n                        type = 1;\n                    } else if (type[1] == 'pdf') {\n                        type = 2;\n                    } else {\n                        type = 0;\n                    }\n\n                    if (type) {\n                        // Create file\n                        reader[i] = new FileReader();\n                        reader[i].index = i;\n                        reader[i].type = type;\n                        reader[i].name = files[i].name;\n                        reader[i].date = files[i].lastModified;\n                        reader[i].size = files[i].size;\n                        reader[i].addEventListener(\"load\", function (data) {\n                            // Get result\n                            if (data.target.type == 2) {\n                                if (obj.options.acceptFiles == true) {\n                                    obj.addPdf(data.target);\n                                }\n                            } else {\n                                obj.addImage(data.target.result);\n                            }\n                        }, false);\n\n                        reader[i].readAsDataURL(files[i])\n                    } else {\n                        alert('The extension is not allowed');\n                    }\n                }\n            }\n        }\n\n        // Destroy\n        obj.destroy = function() {\n            obj.editor.removeEventListener('mouseup', editorMouseUp);\n            obj.editor.removeEventListener('mousedown', editorMouseDown);\n            obj.editor.removeEventListener('mousemove', editorMouseMove);\n            obj.editor.removeEventListener('keyup', editorKeyUp);\n            obj.editor.removeEventListener('keydown', editorKeyDown);\n            obj.editor.removeEventListener('dragstart', editorDragStart);\n            obj.editor.removeEventListener('dragenter', editorDragEnter);\n            obj.editor.removeEventListener('dragover', editorDragOver);\n            obj.editor.removeEventListener('drop', editorDrop);\n            obj.editor.removeEventListener('paste', editorPaste);\n            obj.editor.removeEventListener('blur', editorBlur);\n            obj.editor.removeEventListener('focus', editorFocus);\n\n            el.editor = null;\n            el.classList.remove('jeditor-container');\n\n            toolbar.remove();\n            snippet.remove();\n            obj.editor.remove();\n        }\n\n        obj.upload = function() {\n            helpers.click(obj.file);\n        }\n\n        // Elements to be removed\n        var remove = [\n            HTMLUnknownElement,\n            HTMLAudioElement,\n            HTMLEmbedElement,\n            HTMLIFrameElement,\n            HTMLTextAreaElement,\n            HTMLInputElement,\n            HTMLScriptElement\n        ];\n\n        // Valid properties\n        var validProperty = ['width', 'height', 'align', 'border', 'src', 'tabindex'];\n\n        // Valid CSS attributes\n        var validStyle = ['color', 'font-weight', 'font-size', 'background', 'background-color', 'margin'];\n\n        var parse = function(element) {\n           // Remove attributes\n           if (element.attributes && element.attributes.length) {\n               var image = null;\n               var style = null;\n               // Process style attribute\n               var elementStyle = element.getAttribute('style');\n               if (elementStyle) {\n                   style = [];\n                   var t = elementStyle.split(';');\n                   for (var j = 0; j < t.length; j++) {\n                       var v = t[j].trim().split(':');\n                       if (validStyle.indexOf(v[0].trim()) >= 0) {\n                           var k = v.shift();\n                           var v = v.join(':');\n                           style.push(k + ':' + v);\n                       }\n                   }\n               }\n               // Process image\n               if (element.tagName.toUpperCase() == 'IMG') {\n                   if (! obj.options.acceptImages || ! element.src) {\n                       element.parentNode.removeChild(element);\n                   } else {\n                       // Check if is data\n                       element.setAttribute('tabindex', '900');\n                       // Check attributes for persistence\n                       obj.addImage(element.src);\n                   }\n               }\n               // Remove attributes\n               var attr = [];\n               for (var i = 0; i < element.attributes.length; i++) {\n                   attr.push(element.attributes[i].name);\n               }\n               if (attr.length) {\n                   attr.forEach(function(v) {\n                       if (validProperty.indexOf(v) == -1) {\n                           element.removeAttribute(v);\n                       } else {\n                           // Protection XSS\n                           if (element.attributes[i].value.indexOf('<') !== -1) {\n                               element.attributes[i].value.replace('<', '&#60;');\n                           }\n                       }\n                   });\n               }\n               element.style = '';\n               // Add valid style\n               if (style && style.length) {\n                   element.setAttribute('style', style.join(';'));\n               }\n           }\n           // Parse children\n           if (element.children.length) {\n               for (var i = 0; i < element.children.length; i++) {\n                   parse(element.children[i]);\n               }\n           }\n\n           if (remove.indexOf(element.constructor) >= 0) {\n               element.remove();\n           }\n        }\n\n        var select = function(e) {\n            var s = window.getSelection()\n            var r = document.createRange();\n            r.selectNode(e);\n            s.addRange(r)\n        }\n\n        var filter = function(data) {\n            if (data) {\n                data = data.replace(new RegExp('<!--(.*?)-->', 'gsi'), '');\n            }\n            var parser = new DOMParser();\n            var d = parser.parseFromString(data, \"text/html\");\n            parse(d);\n            var span = document.createElement('span');\n            span.innerHTML = d.firstChild.innerHTML;\n            return span;\n        }\n\n        var editorPaste = function(e) {\n            if (obj.options.filterPaste == true) {\n                if (e.clipboardData || e.originalEvent.clipboardData) {\n                    var html = (e.originalEvent || e).clipboardData.getData('text/html');\n                    var text = (e.originalEvent || e).clipboardData.getData('text/plain');\n                    var file = (e.originalEvent || e).clipboardData.files\n                } else if (window.clipboardData) {\n                    var html = window.clipboardData.getData('Html');\n                    var text = window.clipboardData.getData('Text');\n                    var file = window.clipboardData.files\n                }\n\n                if (file.length) {\n                    // Paste a image from the clipboard\n                    obj.addFile(file);\n                } else {\n                    if (! html) {\n                        html = text.split('\\r\\n');\n                        if (! e.target.innerText) {\n                            html.map(function(v) {\n                                var d = document.createElement('div');\n                                d.innerText = v;\n                                obj.editor.appendChild(d);\n                            });\n                        } else {\n                            html = html.map(function(v) {\n                                return '<div>' + v + '</div>';\n                            });\n                            document.execCommand('insertHtml', false, html.join(''));\n                        }\n                    } else {\n                        var d = filter(html);\n                        // Paste to the editor\n                        //insertNodeAtCaret(d);\n                        document.execCommand('insertHtml', false, d.innerHTML);\n                    }\n                }\n\n                e.preventDefault();\n            }\n        }\n\n        var editorDragStart = function(e) {\n            if (editorAction && editorAction.e) {\n                e.preventDefault();\n            }\n        }\n\n        var editorDragEnter = function(e) {\n            if (editorAction || obj.options.dropZone == false) {\n                // Do nothing\n            } else {\n                el.classList.add('jeditor-dragging');\n                e.preventDefault();\n            }\n        }\n\n        var editorDragOver = function(e) {\n            if (editorAction || obj.options.dropZone == false) {\n                // Do nothing\n            } else {\n                if (editorTimer) {\n                    clearTimeout(editorTimer);\n                }\n\n                editorTimer = setTimeout(function() {\n                    el.classList.remove('jeditor-dragging');\n                }, 100);\n                e.preventDefault();\n            }\n        }\n\n        var editorDrop = function(e) {\n            if (editorAction || obj.options.dropZone == false) {\n                // Do nothing\n            } else {\n                // Position caret on the drop\n                var range = null;\n                if (document.caretRangeFromPoint) {\n                    range=document.caretRangeFromPoint(e.clientX, e.clientY);\n                } else if (e.rangeParent) {\n                    range=document.createRange();\n                    range.setStart(e.rangeParent,e.rangeOffset);\n                }\n                var sel = window.getSelection();\n                sel.removeAllRanges();\n                sel.addRange(range);\n                sel.anchorNode.parentNode.focus();\n\n                var html = (e.originalEvent || e).dataTransfer.getData('text/html');\n                var text = (e.originalEvent || e).dataTransfer.getData('text/plain');\n                var file = (e.originalEvent || e).dataTransfer.files;\n\n                if (file.length) {\n                    obj.addFile(file);\n                } else if (text) {\n                    extractImageFromHtml(html);\n                }\n\n                el.classList.remove('jeditor-dragging');\n                e.preventDefault();\n            }\n        }\n\n        var editorBlur = function(e) {\n            // Process extensions\n            processExtensions('onevent', e);\n            // Apply changes\n            change(e);\n            // Blur\n            if (typeof(obj.options.onblur) == 'function') {\n                obj.options.onblur(el, obj, e);\n            }\n        }\n\n        var editorFocus = function(e) {\n            // Focus\n            if (typeof(obj.options.onfocus) == 'function') {\n                obj.options.onfocus(el, obj, e);\n            }\n        }\n\n        var editorKeyUp = function(e) {\n            if (! obj.editor.innerHTML) {\n                obj.editor.innerHTML = '<div><br></div>';\n            }\n            if (typeof(obj.options.onkeyup) == 'function') {\n                obj.options.onkeyup(el, obj, e);\n            }\n        }\n\n        var editorKeyDown = function(e) {\n            // Process extensions\n            processExtensions('onevent', e);\n\n            if (e.key == 'Delete') {\n                if (e.target.tagName == 'IMG') {\n                    var parent = e.target.parentNode;\n                    select(e.target);\n                    if (parent.classList.contains('jsnippet-image')) {\n                        updateTotalImages();\n                    }\n                }\n            }\n\n            if (typeof(obj.options.onkeydown) == 'function') {\n                obj.options.onkeydown(el, obj, e);\n            }\n        }\n\n        var editorMouseUp = function(e) {\n            if (editorAction && editorAction.e) {\n                editorAction.e.classList.remove('resizing');\n\n                if (editorAction.e.changed == true) {\n                    var image = editorAction.e.cloneNode()\n                    image.width = parseInt(editorAction.e.style.width) || editorAction.e.getAttribute('width');\n                    image.height = parseInt(editorAction.e.style.height) || editorAction.e.getAttribute('height');\n                    editorAction.e.style.width = '';\n                    editorAction.e.style.height = '';\n                    select(editorAction.e);\n                    document.execCommand('insertHtml', false, image.outerHTML);\n                }\n            }\n\n            editorAction = false;\n        }\n\n        var editorMouseDown = function(e) {\n            var close = function(snippet) {\n                var rect = snippet.getBoundingClientRect();\n                if (rect.width - (e.clientX - rect.left) < 40 && e.clientY - rect.top < 40) {\n                    snippet.innerHTML = '';\n                    snippet.remove();\n                }\n            }\n\n            if (e.target.tagName == 'IMG') {\n                if (e.target.style.cursor) {\n                    var rect = e.target.getBoundingClientRect();\n                    editorAction = {\n                        e: e.target,\n                        x: e.clientX,\n                        y: e.clientY,\n                        w: rect.width,\n                        h: rect.height,\n                        d: e.target.style.cursor,\n                    }\n\n                    if (! e.target.getAttribute('width')) {\n                        e.target.setAttribute('width', rect.width)\n                    }\n\n                    if (! e.target.getAttribute('height')) {\n                        e.target.setAttribute('height', rect.height)\n                    }\n\n                    var s = window.getSelection();\n                    if (s.rangeCount) {\n                        for (var i = 0; i < s.rangeCount; i++) {\n                            s.removeRange(s.getRangeAt(i));\n                        }\n                    }\n\n                    e.target.classList.add('resizing');\n                } else {\n                    editorAction = true;\n                }\n            } else {\n                if (e.target.classList.contains('jsnippet')) {\n                    close(e.target);\n                } else if (e.target.parentNode.classList.contains('jsnippet')) {\n                    close(e.target.parentNode);\n                }\n\n                editorAction = true;\n            }\n        }\n\n        var editorMouseMove = function(e) {\n            if (e.target.tagName == 'IMG' && ! e.target.parentNode.classList.contains('jsnippet-image') && obj.options.allowImageResize == true) {\n                if (e.target.getAttribute('tabindex')) {\n                    var rect = e.target.getBoundingClientRect();\n                    if (e.clientY - rect.top < 5) {\n                        if (rect.width - (e.clientX - rect.left) < 5) {\n                            e.target.style.cursor = 'ne-resize';\n                        } else if (e.clientX - rect.left < 5) {\n                            e.target.style.cursor = 'nw-resize';\n                        } else {\n                            e.target.style.cursor = 'n-resize';\n                        }\n                    } else if (rect.height - (e.clientY - rect.top) < 5) {\n                        if (rect.width - (e.clientX - rect.left) < 5) {\n                            e.target.style.cursor = 'se-resize';\n                        } else if (e.clientX - rect.left < 5) {\n                            e.target.style.cursor = 'sw-resize';\n                        } else {\n                            e.target.style.cursor = 's-resize';\n                        }\n                    } else if (rect.width - (e.clientX - rect.left) < 5) {\n                        e.target.style.cursor = 'e-resize';\n                    } else if (e.clientX - rect.left < 5) {\n                        e.target.style.cursor = 'w-resize';\n                    } else {\n                        e.target.style.cursor = '';\n                    }\n                }\n            }\n\n            // Move\n            if (e.which == 1 && editorAction && editorAction.d) {\n                if (editorAction.d == 'e-resize' || editorAction.d == 'ne-resize' ||  editorAction.d == 'se-resize') {\n                    editorAction.e.style.width = (editorAction.w + (e.clientX - editorAction.x));\n\n                    if (e.shiftKey) {\n                        var newHeight = (e.clientX - editorAction.x) * (editorAction.h / editorAction.w);\n                        editorAction.e.style.height = editorAction.h + newHeight;\n                    } else {\n                        var newHeight =  null;\n                    }\n                }\n\n                if (! newHeight) {\n                    if (editorAction.d == 's-resize' || editorAction.d == 'se-resize' || editorAction.d == 'sw-resize') {\n                        if (! e.shiftKey) {\n                            editorAction.e.style.height = editorAction.h + (e.clientY - editorAction.y);\n                        }\n                    }\n                }\n\n                editorAction.e.changed = true;\n            }\n        }\n\n        var processExtensions = function(method, data) {\n            if (obj.options.extensions) {\n                var ext = Object.keys(obj.options.extensions);\n                if (ext.length) {\n                    for (var i = 0; i < ext.length; i++)\n                        if (obj.options.extensions[ext[i]] && typeof(obj.options.extensions[ext[i]][method]) == 'function') {\n                            obj.options.extensions[ext[i]][method].call(obj, data);\n                        }\n                }\n            }\n        }\n\n        var loadExtensions = function() {\n            if (obj.options.extensions) {\n                var ext = Object.keys(obj.options.extensions);\n                if (ext.length) {\n                    for (var i = 0; i < ext.length; i++) {\n                        if (obj.options.extensions[ext[i]] && typeof (obj.options.extensions[ext[i]]) == 'function') {\n                            obj.options.extensions[ext[i]] = obj.options.extensions[ext[i]](el, obj);\n                        }\n                    }\n                }\n            }\n        }\n\n        document.addEventListener('mouseup', editorMouseUp);\n        document.addEventListener('mousemove', editorMouseMove);\n        obj.editor.addEventListener('mousedown', editorMouseDown);\n        obj.editor.addEventListener('keyup', editorKeyUp);\n        obj.editor.addEventListener('keydown', editorKeyDown);\n        obj.editor.addEventListener('dragstart', editorDragStart);\n        obj.editor.addEventListener('dragenter', editorDragEnter);\n        obj.editor.addEventListener('dragover', editorDragOver);\n        obj.editor.addEventListener('drop', editorDrop);\n        obj.editor.addEventListener('paste', editorPaste);\n        obj.editor.addEventListener('focus', editorFocus);\n        obj.editor.addEventListener('blur', editorBlur);\n\n        // Append editor to the container\n        el.appendChild(obj.editor);\n        // Snippet\n        if (obj.options.snippet) {\n            obj.appendSnippet(obj.options.snippet);\n        }\n\n        // Add toolbar\n        if (obj.options.toolbar) {\n            // Default toolbar configuration\n            if (Array.isArray(obj.options.toolbar)) {\n                var toolbarOptions = {\n                    container: true,\n                    responsive: true,\n                    items: obj.options.toolbar\n                }\n            } else if (obj.options.toolbar === true) {\n                var toolbarOptions = {\n                    container: true,\n                    responsive: true,\n                    items: [],\n                }\n            } else {\n                var toolbarOptions = obj.options.toolbar;\n            }\n\n            // Default items\n            if (! (toolbarOptions.items && toolbarOptions.items.length)) {\n                toolbarOptions.items = Component.getDefaultToolbar(obj);\n            }\n\n            if (obj.options.toolbarOnTop) {\n                // Add class\n                el.classList.add('toolbar-on-top');\n                // Append to the DOM\n                el.insertBefore(toolbar, el.firstChild);\n            } else {\n                // Add padding to the editor\n                obj.editor.style.padding = '15px';\n                // Append to the DOM\n                el.appendChild(toolbar);\n            }\n\n            // Create toolbar\n            Toolbar(toolbar, toolbarOptions);\n\n            toolbar.addEventListener('click', function() {\n                obj.editor.focus();\n            })\n        }\n\n        // Upload file\n        obj.file = document.createElement('input');\n        obj.file.style.display = 'none';\n        obj.file.type = 'file';\n        obj.file.setAttribute('accept', 'image/*');\n        obj.file.onchange = function() {\n            obj.addFile(this.files);\n        }\n        el.appendChild(obj.file);\n\n        // Focus to the editor\n        if (obj.editor.innerHTML && obj.options.focus) {\n            Component.setCursor(obj.editor, obj.options.focus == 'initial' ? true : false);\n        }\n\n        // Change method\n        el.change = obj.setData;\n\n        // Global generic value handler\n        el.val = function(val) {\n            if (val === undefined) {\n                // Data type\n                var o = el.getAttribute('data-html') === 'true' ? false : true;\n                return obj.getData(o);\n            } else {\n                obj.setData(val);\n            }\n        }\n\n        loadExtensions();\n\n        el.editor = obj;\n\n        // Onload\n        if (typeof(obj.options.onload) == 'function') {\n            obj.options.onload(el, obj, obj.editor);\n        }\n\n        return obj;\n    });\n\n    Component.setCursor = function(element, first) {\n        element.focus();\n        document.execCommand('selectAll');\n        var sel = window.getSelection();\n        var range = sel.getRangeAt(0);\n        if (first == true) {\n            var node = range.startContainer;\n            var size = 0;\n        } else {\n            var node = range.endContainer;\n            var size = node.length;\n        }\n        range.setStart(node, size);\n        range.setEnd(node, size);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n\n    Component.getDefaultToolbar = function(obj) {\n\n        var color = function(a,b,c) {\n            if (! c.color) {\n                var t = null;\n                var colorPicker = Color(c, {\n                    onchange: function(o, v) {\n                        if (c.k === 'color') {\n                            document.execCommand('foreColor', false, v);\n                        } else {\n                            document.execCommand('backColor', false, v);\n                        }\n                    }\n                });\n                c.color.open();\n            }\n        }\n\n        var items = [];\n\n        items.push({\n            content: 'undo',\n            onclick: function() {\n                document.execCommand('undo');\n            }\n        });\n\n        items.push({\n            content: 'redo',\n            onclick: function() {\n                document.execCommand('redo');\n            }\n        });\n\n        items.push({\n            type: 'divisor'\n        });\n\n        if (obj.options.toolbarOnTop) {\n            items.push({\n                type: 'select',\n                width: '140px',\n                options: ['Default', 'Verdana', 'Arial', 'Courier New'],\n                render: function (e) {\n                    return '<span style=\"font-family:' + e + '\">' + e + '</span>';\n                },\n                onchange: function (a,b,c,d,e) {\n                    document.execCommand(\"fontName\", false, d);\n                }\n            });\n\n            items.push({\n                type: 'select',\n                content: 'format_size',\n                options: ['x-small', 'small', 'medium', 'large', 'x-large'],\n                render: function (e) {\n                    return '<span style=\"font-size:' + e + '\">' + e + '</span>';\n                },\n                onchange: function (a,b,c,d,e) {\n                    //var html = `<span style=\"font-size: ${c}\">${text}</span>`;\n                    //document.execCommand('insertHtml', false, html);\n                    document.execCommand(\"fontSize\", false, parseInt(e)+1);\n                    //var f = window.getSelection().anchorNode.parentNode\n                    //f.removeAttribute(\"size\");\n                    //f.style.fontSize = d;\n                }\n            });\n\n            items.push({\n                type: 'select',\n                options: ['format_align_left', 'format_align_center', 'format_align_right', 'format_align_justify'],\n                render: function (e) {\n                    return '<i class=\"material-icons\">' + e + '</i>';\n                },\n                onchange: function (a,b,c,d,e) {\n                    var options = ['JustifyLeft','justifyCenter','justifyRight','justifyFull'];\n                    document.execCommand(options[e]);\n                }\n            });\n\n            items.push({\n                type: 'divisor'\n            });\n\n            items.push({\n                content: 'format_color_text',\n                k: 'color',\n                onclick: color,\n            });\n\n            items.push({\n                content: 'format_color_fill',\n                k: 'background-color',\n                onclick: color,\n            });\n        }\n\n        items.push({\n            content: 'format_bold',\n            onclick: function(a,b,c) {\n                document.execCommand('bold');\n\n                if (document.queryCommandState(\"bold\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_italic',\n            onclick: function(a,b,c) {\n                document.execCommand('italic');\n\n                if (document.queryCommandState(\"italic\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_underline',\n            onclick: function(a,b,c) {\n                document.execCommand('underline');\n\n                if (document.queryCommandState(\"underline\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            type:'divisor'\n        });\n\n        items.push({\n            content: 'format_list_bulleted',\n            onclick: function(a,b,c) {\n                document.execCommand('insertUnorderedList');\n\n                if (document.queryCommandState(\"insertUnorderedList\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_list_numbered',\n            onclick: function(a,b,c) {\n                document.execCommand('insertOrderedList');\n\n                if (document.queryCommandState(\"insertOrderedList\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_indent_increase',\n            onclick: function(a,b,c) {\n                document.execCommand('indent', true, null);\n\n                if (document.queryCommandState(\"indent\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_indent_decrease',\n            onclick: function() {\n                document.execCommand('outdent');\n\n                if (document.queryCommandState(\"outdent\")) {\n                    this.classList.add('selected');\n                } else {\n                    this.classList.remove('selected');\n                }\n            }\n        });\n\n        if (obj.options.toolbarOnTop) {\n            items.push({\n                type: 'divisor'\n            });\n\n            items.push({\n                content: 'photo',\n                onclick: function () {\n                    obj.upload();\n                }\n            });\n\n            items.push({\n                type: 'select',\n                content: 'table_view',\n                columns: 8,\n                grid: 8,\n                right: true,\n                options: [\n                    '0x0', '1x0', '2x0', '3x0', '4x0', '5x0', '6x0', '7x0',\n                    '0x1', '1x1', '2x1', '3x1', '4x1', '5x1', '6x1', '7x1',\n                    '0x2', '1x2', '2x2', '3x2', '4x2', '5x2', '6x2', '7x2',\n                    '0x3', '1x3', '2x3', '3x3', '4x3', '5x3', '6x3', '7x3',\n                    '0x4', '1x4', '2x4', '3x4', '4x4', '5x4', '6x4', '7x4',\n                    '0x5', '1x5', '2x5', '3x5', '4x5', '5x5', '6x5', '7x5',\n                    '0x6', '1x6', '2x6', '3x6', '4x6', '5x6', '6x6', '7x6',\n                    '0x7', '1x7', '2x7', '3x7', '4x7', '5x7', '6x7', '7x7',\n                ],\n                render: function (e, item) {\n                    if (item) {\n                        item.onmouseover = this.onmouseover;\n                        e = e.split('x');\n                        item.setAttribute('data-x', e[0]);\n                        item.setAttribute('data-y', e[1]);\n                    }\n                    var element = document.createElement('div');\n                    item.style.margin = '1px';\n                    item.style.border = '1px solid #ddd';\n                    return element;\n                },\n                onmouseover: function (e) {\n                    var x = parseInt(e.target.getAttribute('data-x'));\n                    var y = parseInt(e.target.getAttribute('data-y'));\n                    for (var i = 0; i < e.target.parentNode.children.length; i++) {\n                        var element = e.target.parentNode.children[i];\n                        var ex = parseInt(element.getAttribute('data-x'));\n                        var ey = parseInt(element.getAttribute('data-y'));\n                        if (ex <= x && ey <= y) {\n                            element.style.backgroundColor = '#cae1fc';\n                            element.style.borderColor = '#2977ff';\n                        } else {\n                            element.style.backgroundColor = '';\n                            element.style.borderColor = '#ddd';\n                        }\n                    }\n                },\n                onchange: function (a, b, c) {\n                    c = c.split('x');\n                    var table = document.createElement('table');\n                    var tbody = document.createElement('tbody');\n                    for (var y = 0; y <= c[1]; y++) {\n                        var tr = document.createElement('tr');\n                        for (var x = 0; x <= c[0]; x++) {\n                            var td = document.createElement('td');\n                            td.innerHTML = '';\n                            tr.appendChild(td);\n                        }\n                        tbody.appendChild(tr);\n                    }\n                    table.appendChild(tbody);\n                    table.setAttribute('width', '100%');\n                    table.setAttribute('cellpadding', '6');\n                    table.setAttribute('cellspacing', '0');\n                    document.execCommand('insertHTML', false, table.outerHTML);\n                }\n            });\n        }\n\n        return items;\n    }\n\n    return Component;\n}\n\n/* harmony default export */ var editor = (Editor());\n;// CONCATENATED MODULE: ./src/plugins/floating.js\nfunction Floating() {\n    var Component = (function (el, options) {\n        var obj = {};\n        obj.options = {};\n\n        // Default configuration\n        var defaults = {\n            type: 'big',\n            title: 'Untitled',\n            width: 510,\n            height: 472,\n        }\n\n        // Loop through our object\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                obj.options[property] = defaults[property];\n            }\n        }\n\n        // Private methods\n\n        var setContent = function () {\n            var temp = document.createElement('div');\n            while (el.children[0]) {\n                temp.appendChild(el.children[0]);\n            }\n\n            obj.content = document.createElement('div');\n            obj.content.className = 'jfloating_content';\n            obj.content.innerHTML = el.innerHTML;\n\n            while (temp.children[0]) {\n                obj.content.appendChild(temp.children[0]);\n            }\n\n            obj.container = document.createElement('div');\n            obj.container.className = 'jfloating';\n            obj.container.appendChild(obj.content);\n\n            if (obj.options.title) {\n                obj.container.setAttribute('title', obj.options.title);\n            } else {\n                obj.container.classList.add('no-title');\n            }\n\n            // validate element dimensions\n            if (obj.options.width) {\n                obj.container.style.width = parseInt(obj.options.width) + 'px';\n            }\n\n            if (obj.options.height) {\n                obj.container.style.height = parseInt(obj.options.height) + 'px';\n            }\n\n            el.innerHTML = '';\n            el.appendChild(obj.container);\n        }\n\n        var setEvents = function () {\n            if (obj.container) {\n                obj.container.addEventListener('click', function (e) {\n                    var rect = e.target.getBoundingClientRect();\n\n                    if (e.target.classList.contains('jfloating')) {\n                        if (e.changedTouches && e.changedTouches[0]) {\n                            var x = e.changedTouches[0].clientX;\n                            var y = e.changedTouches[0].clientY;\n                        } else {\n                            var x = e.clientX;\n                            var y = e.clientY;\n                        }\n\n                        if (rect.width - (x - rect.left) < 50 && (y - rect.top) < 50) {\n                            setTimeout(function () {\n                                obj.close();\n                            }, 100);\n                        } else {\n                            obj.setState();\n                        }\n                    }\n                });\n            }\n        }\n\n        var setType = function () {\n            obj.container.classList.add('jfloating-' + obj.options.type);\n        }\n\n        obj.state = {\n            isMinized: false,\n        }\n\n        obj.setState = function () {\n            if (obj.state.isMinized) {\n                obj.container.classList.remove('jfloating-minimized');\n            } else {\n                obj.container.classList.add('jfloating-minimized');\n            }\n            obj.state.isMinized = !obj.state.isMinized;\n        }\n\n        obj.close = function () {\n            Components.elements.splice(Component.elements.indexOf(obj.container), 1);\n            obj.updatePosition();\n            el.remove();\n        }\n\n        obj.updatePosition = function () {\n            for (var i = 0; i < Component.elements.length; i++) {\n                var floating = Component.elements[i];\n                var prevFloating = Component.elements[i - 1];\n                floating.style.right = i * (prevFloating ? prevFloating.offsetWidth : floating.offsetWidth) * 1.01 + 'px';\n            }\n        }\n\n        obj.init = function () {\n            // Set content into root\n            setContent();\n\n            // Set dialog events\n            setEvents();\n\n            // Set dialog type\n            setType();\n\n            // Update floating position\n            Component.elements.push(obj.container);\n            obj.updatePosition();\n\n            el.floating = obj;\n        }\n\n        obj.init();\n\n        return obj;\n    });\n\n    Component.elements = [];\n\n    return Component;\n}\n\n/* harmony default export */ var floating = (Floating());\n;// CONCATENATED MODULE: ./src/plugins/validations.js\nfunction Validations() {\n    /**\n     * Options: Object,\n     * Properties:\n     * Constraint,\n     * Reference,\n     * Value\n     */\n\n    var isNumeric = function(num) {\n        return !isNaN(num) && num !== null && num !== '';\n    }\n\n    var numberCriterias = {\n        'between': function(value, range) {\n            return value >= range[0] && value <= range[1];\n        },\n        'not between': function(value, range) {\n            return value < range[0] || value > range[1];\n        },\n        '<': function(value, range) {\n            return value < range[0];\n        },\n        '<=': function(value, range) {\n            return value <= range[0];\n        },\n        '>': function(value, range) {\n            return value > range[0];\n        },\n        '>=': function(value, range) {\n            return value >= range[0];\n        },\n        '=': function(value, range) {\n            return value == range[0];\n        },\n        '!=': function(value, range) {\n            return value != range[0];\n        },\n    }\n\n    var dateCriterias = {\n        'valid date': function() {\n            return true;\n        },\n        '=': function(value, range) {\n            return value === range[0];\n        },\n        '<': function(value, range) {\n            return value < range[0];\n        },\n        '<=': function(value, range) {\n            return value <= range[0];\n        },\n        '>': function(value, range) {\n            return value > range[0];\n        },\n        '>=': function(value, range) {\n            return value >= range[0];\n        },\n        'between': function(value, range) {\n            return value >= range[0] && value <= range[1];\n        },\n        'not between': function(value, range) {\n            return value < range[0] || value > range[1];\n        },\n    }\n\n    var textCriterias = {\n        'contains': function(value, range) {\n            return value.includes(range[0]);\n        },\n        'not contains': function(value, range) {\n            return !value.includes(range[0]);\n        },\n        'begins with': function(value, range) {\n            return value.startsWith(range[0]);\n        },\n        'ends with': function(value, range) {\n            return value.endsWith(range[0]);\n        },\n        '=': function(value, range) {\n            return value === range[0];\n        },\n        'valid email': function(value) {\n            var pattern = new RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\n\n            return pattern.test(value);\n        },\n        'valid url': function(value) {\n            var pattern = new RegExp(/(((https?:\\/\\/)|(www\\.))[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|]+)/ig);\n\n            return pattern.test(value);\n        },\n    }\n\n    // Component router\n    var component = function(value, options) {\n        if (typeof(component[options.type]) === 'function') {\n            if (options.allowBlank && value === '') {\n                return true;\n            }\n\n            return component[options.type](value, options);\n        }\n        return null;\n    }\n    \n    component.url = function() {\n        var pattern = new RegExp(/(((https?:\\/\\/)|(www\\.))[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|]+)/ig);\n        return pattern.test(data) ? true : false;\n    }\n\n    component.email = function(data) {\n        var pattern = new RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\n        return data && pattern.test(data) ? true : false; \n    }\n    \n    component.required = function(data) {\n        return data.trim() ? true : false;\n    }\n\n    component.exist = function(data, options) {\n        return !!data.toString();\n    }\n\n    component['not exist'] = function(data, options) {\n        return !data.toString();\n    }\n\n    component.empty = function(data) {\n        return !data.toString();\n    }\n\n    component.notEmpty = function(data) {\n        return !!data.toString();\n    }\n\n    component.number = function(data, options) {\n       if (! isNumeric(data)) {\n           return false;\n       }\n\n       if (!options || !options.criteria) {\n           return true;\n       }\n\n       if (!numberCriterias[options.criteria]) {\n           return false;\n       }\n\n       var values = options.value.map(function(num) {\n          return parseFloat(num);\n       })\n\n       return numberCriterias[options.criteria](data, values);\n   };\n\n    component.login = function(data) {\n        var pattern = new RegExp(/^[a-zA-Z0-9\\_\\-\\.\\s+]+$/);\n        return data && pattern.test(data) ? true : false;\n    }\n\n    component.list = function(data, options) {\n        var dataType = typeof data;\n        if (dataType !== 'string' && dataType !== 'number') {\n            return false;\n        }\n        if (typeof(options.value[0]) === 'string') {\n            var list = options.value[0].split(',');\n        } else {\n            var list = options.value[0];\n        }\n\n        var validOption = list.findIndex(function name(item) {\n            return item == data;\n        });\n\n        return validOption > -1;\n    }\n\n    component.date = function(data, options) {\n        if (new Date(data) == 'Invalid Date') {\n            return false;\n        }\n\n        if (!options || !options.criteria) {\n            return true;\n        }\n\n        if (!dateCriterias[options.criteria]) {\n            return false;\n        }\n\n        var values = options.value.map(function(date) {\n            return new Date(date).getTime();\n        });\n\n        return dateCriterias[options.criteria](new Date(data).getTime(), values);\n    }\n\n    component.text = function(data, options) {\n        if (typeof data !== 'string') {\n            return false;\n        }\n\n        if (!options || !options.criteria) {\n            return true;\n        }\n\n        if (!textCriterias[options.criteria]) {\n            return false;\n        }\n\n        return textCriterias[options.criteria](data, options.value);\n    }\n\n    component.textLength = function(data, options) {\n        data = data.toString();\n\n        return component.number(data.length, options);\n    }\n\n    return component;\n}\n\n/* harmony default export */ var validations = (Validations());\n;// CONCATENATED MODULE: ./src/plugins/form.js\n\n\n\n\nfunction Form() {\n    var Component = (function(el, options) {\n        var obj = {};\n        obj.options = {};\n\n        // Default configuration\n        var defaults = {\n            url: null,\n            message: 'Are you sure? There are unsaved information in your form',\n            ignore: false,\n            currentHash: null,\n            submitButton:null,\n            validations: null,\n            onbeforeload: null,\n            onload: null,\n            onbeforesave: null,\n            onsave: null,\n            onbeforeremove: null,\n            onremove: null,\n            onerror: function(el, message) {\n                alert(message);\n            }\n        };\n\n        // Loop through our object\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                obj.options[property] = defaults[property];\n            }\n        }\n\n        // Validations\n        if (! obj.options.validations) {\n            obj.options.validations = {};\n        }\n\n        // Submit Button\n        if (! obj.options.submitButton) {\n            obj.options.submitButton = el.querySelector('input[type=submit]');\n        }\n\n        if (obj.options.submitButton && obj.options.url) {\n            obj.options.submitButton.onclick = function() {\n                obj.save();\n            }\n        }\n\n        if (! obj.options.validations.email) {\n            obj.options.validations.email = validations.email;\n        }\n\n        if (! obj.options.validations.length) {\n            obj.options.validations.length = validations.length;\n        }\n\n        if (! obj.options.validations.required) {\n            obj.options.validations.required = validations.required;\n        }\n\n        obj.setUrl = function(url) {\n            obj.options.url = url;\n        }\n\n        obj.load = function() {\n            ajax({\n                url: obj.options.url,\n                method: 'GET',\n                dataType: 'json',\n                queue: true,\n                success: function(data) {\n                    // Overwrite values from the backend\n                    if (typeof(obj.options.onbeforeload) == 'function') {\n                        var ret = obj.options.onbeforeload(el, data);\n                        if (ret) {\n                            data = ret;\n                        }\n                    }\n                    // Apply values to the form\n                    Component.setElements(el, data);\n                    // Onload methods\n                    if (typeof(obj.options.onload) == 'function') {\n                        obj.options.onload(el, data);\n                    }\n                }\n            });\n        }\n\n        obj.save = function() {\n            var test = obj.validate();\n\n            if (test) {\n                obj.options.onerror(el, test);\n            } else {\n                var data = Component.getElements(el, true);\n\n                if (typeof(obj.options.onbeforesave) == 'function') {\n                    var data = obj.options.onbeforesave(el, data);\n\n                    if (data === false) {\n                        return;\n                    }\n                }\n\n                ajax({\n                    url: obj.options.url,\n                    method: 'POST',\n                    dataType: 'json',\n                    data: data,\n                    success: function(result) {\n                        if (typeof(obj.options.onsave) == 'function') {\n                            obj.options.onsave(el, data, result);\n                        }\n                    }\n                });\n            }\n        }\n\n        obj.remove = function() {\n            if (typeof(obj.options.onbeforeremove) == 'function') {\n                var ret = obj.options.onbeforeremove(el, obj);\n                if (ret === false) {\n                    return false;\n                }\n            }\n\n            ajax({\n                url: obj.options.url,\n                method: 'DELETE',\n                dataType: 'json',\n                success: function(result) {\n                    if (typeof(obj.options.onremove) == 'function') {\n                        obj.options.onremove(el, obj, result);\n                    }\n\n                    obj.reset();\n                }\n            });\n        }\n\n        var addError = function(element) {\n            // Add error in the element\n            element.classList.add('error');\n            // Submit button\n            if (obj.options.submitButton) {\n                obj.options.submitButton.setAttribute('disabled', true);\n            }\n            // Return error message\n            var error = element.getAttribute('data-error') || 'There is an error in the form';\n            element.setAttribute('title', error);\n            return error;\n        }\n\n        var delError = function(element) {\n            var error = false;\n            // Remove class from this element\n            element.classList.remove('error');\n            element.removeAttribute('title');\n            // Get elements in the form\n            var elements = el.querySelectorAll(\"input, select, textarea, div[name]\");\n            // Run all elements\n            for (var i = 0; i < elements.length; i++) {\n                if (elements[i].getAttribute('data-validation')) {\n                    if (elements[i].classList.contains('error')) {\n                        error = true;\n                    }\n                }\n            }\n\n            if (obj.options.submitButton) {\n                if (error) {\n                    obj.options.submitButton.setAttribute('disabled', true);\n                } else {\n                    obj.options.submitButton.removeAttribute('disabled');\n                }\n            }\n        }\n\n        obj.validateElement = function(element) {\n            // Test results\n            var test = false;\n            // Value\n            var value = Component.getValue(element);\n            // Validation\n            var validation = element.getAttribute('data-validation');\n            // Parse\n            if (typeof(obj.options.validations[validation]) == 'function' && ! obj.options.validations[validation](value, element)) {\n                // Not passed in the test\n                test = addError(element);\n            } else {\n                if (element.classList.contains('error')) {\n                    delError(element);\n                }\n            }\n\n            return test;\n        }\n\n        obj.reset = function() {\n            // Get elements in the form\n            var name = null;\n            var elements = el.querySelectorAll(\"input, select, textarea, div[name]\");\n            // Run all elements\n            for (var i = 0; i < elements.length; i++) {\n                if (name = elements[i].getAttribute('name')) {\n                    if (elements[i].type == 'checkbox' || elements[i].type == 'radio') {\n                        elements[i].checked = false;\n                    } else {\n                        if (typeof(elements[i].val) == 'function') {\n                            elements[i].val('');\n                        } else {\n                            elements[i].value = '';\n                        }\n                    }\n                }\n            }\n        }\n\n        // Run form validation\n        obj.validate = function() {\n            var test = [];\n            // Get elements in the form\n            var elements = el.querySelectorAll(\"input, select, textarea, div[name]\");\n            // Run all elements\n            for (var i = 0; i < elements.length; i++) {\n                // Required\n                if (elements[i].getAttribute('data-validation')) {\n                    var res = obj.validateElement(elements[i]);\n                    if (res) {\n                        test.push(res);\n                    }\n                }\n            }\n            if (test.length > 0) {\n                return test.join('<br>');\n            } else {\n                return false;\n            }\n        }\n\n        // Check the form\n        obj.getError = function() {\n            // Validation\n            return obj.validation() ? true : false;\n        }\n\n        // Return the form hash\n        obj.setHash = function() {\n            return obj.getHash(Component.getElements(el));\n        }\n\n        // Get the form hash\n        obj.getHash = function(str) {\n            var hash = 0, i, chr;\n\n            if (str.length === 0) {\n                return hash;\n            } else {\n                for (i = 0; i < str.length; i++) {\n                  chr = str.charCodeAt(i);\n                  hash = ((hash << 5) - hash) + chr;\n                  hash |= 0;\n                }\n            }\n\n            return hash;\n        }\n\n        // Is there any change in the form since start tracking?\n        obj.isChanged = function() {\n            var hash = obj.setHash();\n            return (obj.options.currentHash != hash);\n        }\n\n        // Restart tracking\n        obj.resetTracker = function() {\n            obj.options.currentHash = obj.setHash();\n            obj.options.ignore = false;\n        }\n\n        // Ignore flag\n        obj.setIgnore = function(ignoreFlag) {\n            obj.options.ignore = ignoreFlag ? true : false;\n        }\n\n        // Start tracking in one second\n        setTimeout(function() {\n            obj.options.currentHash = obj.setHash();\n        }, 1000);\n\n        // Validations\n        el.addEventListener(\"keyup\", function(e) {\n            if (e.target.getAttribute('data-validation')) {\n                obj.validateElement(e.target);\n            }\n        });\n\n        // Alert\n        if (! Component.hasEvents) {\n            window.addEventListener(\"beforeunload\", function (e) {\n                if (obj.isChanged() && obj.options.ignore == false) {\n                    var confirmationMessage =  obj.options.message? obj.options.message : \"\\o/\";\n\n                    if (confirmationMessage) {\n                        if (typeof e == 'undefined') {\n                            e = window.event;\n                        }\n\n                        if (e) {\n                            e.returnValue = confirmationMessage;\n                        }\n\n                        return confirmationMessage;\n                    } else {\n                        return void(0);\n                    }\n                }\n            });\n\n            Component.hasEvents = true;\n        }\n\n        el.form = obj;\n\n        return obj;\n    });\n\n    // Get value from one element\n    Component.getValue = function(element) {\n        var value = null;\n        if (element.type == 'checkbox') {\n            if (element.checked == true) {\n                value = element.value || true;\n            }\n        } else if (element.type == 'radio') {\n            if (element.checked == true) {\n                value = element.value;\n            }\n        } else if (element.type == 'file') {\n            value = element.files;\n        } else if (element.tagName == 'select' && element.multiple == true) {\n            value = [];\n            var options = element.querySelectorAll(\"options[selected]\");\n            for (var j = 0; j < options.length; j++) {\n                value.push(options[j].value);\n            }\n        } else if (typeof(element.val) == 'function') {\n            value = element.val();\n        } else {\n            value = element.value || '';\n        }\n\n        return value;\n    }\n\n    // Get form elements\n    Component.getElements = function(el, asArray) {\n        var data = {};\n        var name = null;\n        var elements = el.querySelectorAll(\"input, select, textarea, div[name]\");\n\n        for (var i = 0; i < elements.length; i++) {\n            if (name = elements[i].getAttribute('name')) {\n                data[name] = Component.getValue(elements[i]) || '';\n            }\n        }\n\n        return asArray == true ? data : JSON.stringify(data);\n    }\n\n    //Get form elements\n    Component.setElements = function(el, data) {\n        var name = null;\n        var value = null;\n        var elements = el.querySelectorAll(\"input, select, textarea, div[name]\");\n        for (var i = 0; i < elements.length; i++) {\n            // Attributes\n            var type = elements[i].getAttribute('type');\n            if (name = elements[i].getAttribute('name')) {\n                // Transform variable names in pathname\n                name = name.replace(new RegExp(/\\[(.*?)\\]/ig), '.$1');\n                value = null;\n                // Seach for the data in the path\n                if (name.match(/\\./)) {\n                    var tmp = Path.call(data, name) || '';\n                    if (typeof(tmp) !== 'undefined') {\n                        value = tmp;\n                    }\n                } else {\n                    if (typeof(data[name]) !== 'undefined') {\n                        value = data[name];\n                    }\n                }\n                // Set the values\n                if (value !== null) {\n                    if (type == 'checkbox' || type == 'radio') {\n                        elements[i].checked = value ? true : false;\n                    } else if (type == 'file') {\n                        // Do nothing\n                    } else {\n                        if (typeof (elements[i].val) == 'function') {\n                            elements[i].val(value);\n                        } else {\n                            elements[i].value = value;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return Component;\n}\n\n/* harmony default export */ var plugins_form = (Form());\n;// CONCATENATED MODULE: ./src/plugins/modal.js\n\n\n\n\nfunction Modal() {\n\n    var Events = function() {\n        //  Position\n        var tracker = null;\n\n        var keyDown = function (e) {\n            if (e.which == 27) {\n                var modals = document.querySelectorAll('.jmodal');\n                for (var i = 0; i < modals.length; i++) {\n                    modals[i].parentNode.modal.close();\n                }\n            }\n        }\n\n        var mouseUp = function (e) {\n            var item = helpers.findElement(e.target, 'jmodal');\n            if (item) {\n                // Get target info\n                var rect = item.getBoundingClientRect();\n\n                if (e.changedTouches && e.changedTouches[0]) {\n                    var x = e.changedTouches[0].clientX;\n                    var y = e.changedTouches[0].clientY;\n                } else {\n                    var x = e.clientX;\n                    var y = e.clientY;\n                }\n\n                if (rect.width - (x - rect.left) < 50 && (y - rect.top) < 50) {\n                    item.parentNode.modal.close();\n                }\n            }\n\n            if (tracker) {\n                tracker.element.style.cursor = 'auto';\n                tracker = null;\n            }\n        }\n\n        var mouseDown = function (e) {\n            var item = helpers.findElement(e.target, 'jmodal');\n            if (item) {\n                // Get target info\n                var rect = item.getBoundingClientRect();\n\n                if (e.changedTouches && e.changedTouches[0]) {\n                    var x = e.changedTouches[0].clientX;\n                    var y = e.changedTouches[0].clientY;\n                } else {\n                    var x = e.clientX;\n                    var y = e.clientY;\n                }\n\n                if (rect.width - (x - rect.left) < 50 && (y - rect.top) < 50) {\n                    // Do nothing\n                } else {\n                    if (y - rect.top < 50) {\n                        if (document.selection) {\n                            document.selection.empty();\n                        } else if (window.getSelection) {\n                            window.getSelection().removeAllRanges();\n                        }\n\n                        tracker = {\n                            left: rect.left,\n                            top: rect.top,\n                            x: e.clientX,\n                            y: e.clientY,\n                            width: rect.width,\n                            height: rect.height,\n                            element: item,\n                        }\n                    }\n                }\n            }\n        }\n\n        var mouseMove = function (e) {\n            if (tracker) {\n                e = e || window.event;\n                if (e.buttons) {\n                    var mouseButton = e.buttons;\n                } else if (e.button) {\n                    var mouseButton = e.button;\n                } else {\n                    var mouseButton = e.which;\n                }\n\n                if (mouseButton) {\n                    tracker.element.style.top = (tracker.top + (e.clientY - tracker.y) + (tracker.height / 2)) + 'px';\n                    tracker.element.style.left = (tracker.left + (e.clientX - tracker.x) + (tracker.width / 2)) + 'px';\n                    tracker.element.style.cursor = 'move';\n                } else {\n                    tracker.element.style.cursor = 'auto';\n                }\n            }\n        }\n\n        document.addEventListener('keydown', keyDown);\n        document.addEventListener('mouseup', mouseUp);\n        document.addEventListener('mousedown', mouseDown);\n        document.addEventListener('mousemove', mouseMove);\n    }\n\n    var Component = (function (el, options) {\n        var obj = {};\n        obj.options = {};\n\n        // Default configuration\n        var defaults = {\n            url: null,\n            onopen: null,\n            onclose: null,\n            onload: null,\n            closed: false,\n            width: null,\n            height: null,\n            title: null,\n            padding: null,\n            backdrop: true,\n            icon: null,\n        };\n\n        // Loop through our object\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                obj.options[property] = defaults[property];\n            }\n        }\n\n        // Title\n        if (!obj.options.title && el.getAttribute('title')) {\n            obj.options.title = el.getAttribute('title');\n        }\n\n        var temp = document.createElement('div');\n        while (el.children[0]) {\n            temp.appendChild(el.children[0]);\n        }\n\n        obj.title = document.createElement('div');\n        obj.title.className = 'jmodal_title';\n        if (obj.options.icon) {\n            obj.title.setAttribute('data-icon', obj.options.icon);\n        }\n\n        obj.content = document.createElement('div');\n        obj.content.className = 'jmodal_content';\n        obj.content.innerHTML = el.innerHTML;\n\n        while (temp.children[0]) {\n            obj.content.appendChild(temp.children[0]);\n        }\n\n        obj.container = document.createElement('div');\n        obj.container.className = 'jmodal';\n        obj.container.appendChild(obj.title);\n        obj.container.appendChild(obj.content);\n\n        if (obj.options.padding) {\n            obj.content.style.padding = obj.options.padding;\n        }\n        if (obj.options.width) {\n            obj.container.style.width = obj.options.width;\n        }\n        if (obj.options.height) {\n            obj.container.style.height = obj.options.height;\n        }\n        if (obj.options.title) {\n            var title = document.createElement('h4');\n            title.innerText = obj.options.title;\n            obj.title.appendChild(title);\n        }\n\n        el.innerHTML = '';\n        el.style.display = 'none';\n        el.appendChild(obj.container);\n\n        // Backdrop\n        if (obj.options.backdrop) {\n            var backdrop = document.createElement('div');\n            backdrop.className = 'jmodal_backdrop';\n            backdrop.onclick = function () {\n                obj.close();\n            }\n            el.appendChild(backdrop);\n        }\n\n        obj.open = function () {\n            el.style.display = 'block';\n            // Fullscreen\n            var rect = obj.container.getBoundingClientRect();\n            if (helpers.getWindowWidth() < rect.width) {\n                obj.container.style.top = '';\n                obj.container.style.left = '';\n                obj.container.classList.add('jmodal_fullscreen');\n                animation.slideBottom(obj.container, 1);\n            } else {\n                if (obj.options.backdrop) {\n                    backdrop.style.display = 'block';\n                }\n            }\n            // Event\n            if (typeof (obj.options.onopen) == 'function') {\n                obj.options.onopen(el, obj);\n            }\n        }\n\n        obj.resetPosition = function () {\n            obj.container.style.top = '';\n            obj.container.style.left = '';\n        }\n\n        obj.isOpen = function () {\n            return el.style.display != 'none' ? true : false;\n        }\n\n        obj.close = function () {\n            if (obj.isOpen()) {\n                el.style.display = 'none';\n                if (obj.options.backdrop) {\n                    // Backdrop\n                    backdrop.style.display = '';\n                }\n                // Remove fullscreen class\n                obj.container.classList.remove('jmodal_fullscreen');\n                // Event\n                if (typeof (obj.options.onclose) == 'function') {\n                    obj.options.onclose(el, obj);\n                }\n            }\n        }\n\n        if (obj.options.url) {\n            ajax({\n                url: obj.options.url,\n                method: 'GET',\n                dataType: 'text/html',\n                success: function (data) {\n                    obj.content.innerHTML = data;\n\n                    if (!obj.options.closed) {\n                        obj.open();\n                    }\n\n                    if (typeof (obj.options.onload) === 'function') {\n                        obj.options.onload(obj);\n                    }\n                }\n            });\n        } else {\n            if (!obj.options.closed) {\n                obj.open();\n            }\n\n            if (typeof (obj.options.onload) === 'function') {\n                obj.options.onload(obj);\n            }\n        }\n\n        // Keep object available from the node\n        el.modal = obj;\n\n        // Create events when the first modal is create only\n        Events();\n\n        // Execute the events only once\n        Events = function() {};\n\n        return obj;\n    });\n\n    return Component;\n}\n\n/* harmony default export */ var modal = (Modal());\n;// CONCATENATED MODULE: ./src/plugins/notification.js\n\n\n\nfunction Notification() {\n    var Component = function (options) {\n        var obj = {};\n        obj.options = {};\n\n        // Default configuration\n        var defaults = {\n            icon: null,\n            name: 'Notification',\n            date: null,\n            error: null,\n            title: null,\n            message: null,\n            timeout: 4000,\n            autoHide: true,\n            closeable: true,\n        };\n\n        // Loop through our object\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                obj.options[property] = defaults[property];\n            }\n        }\n\n        var notification = document.createElement('div');\n        notification.className = 'jnotification';\n\n        if (obj.options.error) {\n            notification.classList.add('jnotification-error');\n        }\n\n        var notificationContainer = document.createElement('div');\n        notificationContainer.className = 'jnotification-container';\n        notification.appendChild(notificationContainer);\n\n        var notificationHeader = document.createElement('div');\n        notificationHeader.className = 'jnotification-header';\n        notificationContainer.appendChild(notificationHeader);\n\n        var notificationImage = document.createElement('div');\n        notificationImage.className = 'jnotification-image';\n        notificationHeader.appendChild(notificationImage);\n\n        if (obj.options.icon) {\n            var notificationIcon = document.createElement('img');\n            notificationIcon.src = obj.options.icon;\n            notificationImage.appendChild(notificationIcon);\n        }\n\n        var notificationName = document.createElement('div');\n        notificationName.className = 'jnotification-name';\n        notificationName.innerHTML = obj.options.name;\n        notificationHeader.appendChild(notificationName);\n\n        if (obj.options.closeable == true) {\n            var notificationClose = document.createElement('div');\n            notificationClose.className = 'jnotification-close';\n            notificationClose.onclick = function () {\n                obj.hide();\n            }\n            notificationHeader.appendChild(notificationClose);\n        }\n\n        var notificationDate = document.createElement('div');\n        notificationDate.className = 'jnotification-date';\n        notificationHeader.appendChild(notificationDate);\n\n        var notificationContent = document.createElement('div');\n        notificationContent.className = 'jnotification-content';\n        notificationContainer.appendChild(notificationContent);\n\n        if (obj.options.title) {\n            var notificationTitle = document.createElement('div');\n            notificationTitle.className = 'jnotification-title';\n            notificationTitle.innerHTML = obj.options.title;\n            notificationContent.appendChild(notificationTitle);\n        }\n\n        var notificationMessage = document.createElement('div');\n        notificationMessage.className = 'jnotification-message';\n        notificationMessage.innerHTML = obj.options.message;\n        notificationContent.appendChild(notificationMessage);\n\n        obj.show = function () {\n            document.body.appendChild(notification);\n            if (helpers.getWindowWidth() > 800) {\n                animation.fadeIn(notification);\n            } else {\n                animation.slideTop(notification, 1);\n            }\n        }\n\n        obj.hide = function () {\n            if (helpers.getWindowWidth() > 800) {\n                animation.fadeOut(notification, function () {\n                    if (notification.parentNode) {\n                        notification.parentNode.removeChild(notification);\n                        if (notificationTimeout) {\n                            clearTimeout(notificationTimeout);\n                        }\n                    }\n                });\n            } else {\n                animation.slideTop(notification, 0, function () {\n                    if (notification.parentNode) {\n                        notification.parentNode.removeChild(notification);\n                        if (notificationTimeout) {\n                            clearTimeout(notificationTimeout);\n                        }\n                    }\n                });\n            }\n        };\n\n        obj.show();\n\n        if (obj.options.autoHide == true) {\n            var notificationTimeout = setTimeout(function () {\n                obj.hide();\n            }, obj.options.timeout);\n        }\n\n        if (helpers.getWindowWidth() < 800) {\n            notification.addEventListener(\"swipeup\", function (e) {\n                obj.hide();\n                e.preventDefault();\n                e.stopPropagation();\n            });\n        }\n\n        return obj;\n    }\n\n    Component.isVisible = function () {\n        var j = document.querySelector('.jnotification');\n        return j && j.parentNode ? true : false;\n    }\n\n    return Component;\n}\n\n/* harmony default export */ var notification = (Notification());\n;// CONCATENATED MODULE: ./src/plugins/progressbar.js\nfunction Progressbar(el, options) {\n    var obj = {};\n    obj.options = {};\n\n    // Default configuration\n    var defaults = {\n        value: 0,\n        onchange: null,\n        width: null,\n    };\n\n    // Loop through the initial configuration\n    for (var property in defaults) {\n        if (options && options.hasOwnProperty(property)) {\n            obj.options[property] = options[property];\n        } else {\n            obj.options[property] = defaults[property];\n        }\n    }\n\n    // Class\n    el.classList.add('jprogressbar');\n    el.setAttribute('tabindex', 1);\n    el.setAttribute('data-value', obj.options.value);\n\n    var bar = document.createElement('div');\n    bar.style.width = obj.options.value + '%';\n    bar.style.color = '#fff';\n    el.appendChild(bar);\n\n    if (obj.options.width) {\n        el.style.width = obj.options.width;\n    }\n\n    // Set value\n    obj.setValue = function(value) {\n        value = parseInt(value);\n        obj.options.value = value;\n        bar.style.width = value + '%';\n        el.setAttribute('data-value', value + '%');\n\n        if (value < 6) {\n            el.style.color = '#000';\n        } else {\n            el.style.color = '#fff';\n        }\n\n        // Update value\n        obj.options.value = value;\n\n        if (typeof(obj.options.onchange) == 'function') {\n            obj.options.onchange(el, value);\n        }\n\n        // Lemonade JS\n        if (el.value != obj.options.value) {\n            el.value = obj.options.value;\n            if (typeof(el.oninput) == 'function') {\n                el.oninput({\n                    type: 'input',\n                    target: el,\n                    value: el.value\n                });\n            }\n        }\n    }\n\n    obj.getValue = function() {\n        return obj.options.value;\n    }\n\n    var action = function(e) {\n        if (e.which) {\n            // Get target info\n            var rect = el.getBoundingClientRect();\n\n            if (e.changedTouches && e.changedTouches[0]) {\n                var x = e.changedTouches[0].clientX;\n                var y = e.changedTouches[0].clientY;\n            } else {\n                var x = e.clientX;\n                var y = e.clientY;\n            }\n\n            obj.setValue(Math.round((x - rect.left) / rect.width * 100));\n        }\n    }\n\n    // Events\n    if ('touchstart' in document.documentElement === true) {\n        el.addEventListener('touchstart', action);\n        el.addEventListener('touchend', action);\n    } else {\n        el.addEventListener('mousedown', action);\n        el.addEventListener(\"mousemove\", action);\n    }\n\n    // Change\n    el.change = obj.setValue;\n\n    // Global generic value handler\n    el.val = function(val) {\n        if (val === undefined) {\n            return obj.getValue();\n        } else {\n            obj.setValue(val);\n        }\n    }\n\n    // Reference\n    el.progressbar = obj;\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/rating.js\nfunction Rating(el, options) {\n    // Already created, update options\n    if (el.rating) {\n        return el.rating.setOptions(options, true);\n    }\n\n    // New instance\n    var obj = {};\n    obj.options = {};\n\n    obj.setOptions = function(options, reset) {\n        // Default configuration\n        var defaults = {\n            number: 5,\n            value: 0,\n            tooltip: [ 'Very bad', 'Bad', 'Average', 'Good', 'Very good' ],\n            onchange: null,\n        };\n\n        // Loop through the initial configuration\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                if (typeof(obj.options[property]) == 'undefined' || reset === true) {\n                    obj.options[property] = defaults[property];\n                }\n            }\n        }\n\n        // Make sure the container is empty\n        el.innerHTML = '';\n\n        // Add elements\n        for (var i = 0; i < obj.options.number; i++) {\n            var div = document.createElement('div');\n            div.setAttribute('data-index', (i + 1))\n            div.setAttribute('title', obj.options.tooltip[i])\n            el.appendChild(div);\n        }\n\n        // Selected option\n        if (obj.options.value) {\n            for (var i = 0; i < obj.options.number; i++) {\n                if (i < obj.options.value) {\n                    el.children[i].classList.add('jrating-selected');\n                }\n            }\n        }\n\n        return obj;\n    }\n\n    // Set value\n    obj.setValue = function(index) {\n        for (var i = 0; i < obj.options.number; i++) {\n            if (i < index) {\n                el.children[i].classList.add('jrating-selected');\n            } else {\n                el.children[i].classList.remove('jrating-over');\n                el.children[i].classList.remove('jrating-selected');\n            }\n        }\n\n        obj.options.value = index;\n\n        if (typeof(obj.options.onchange) == 'function') {\n            obj.options.onchange(el, index);\n        }\n\n        // Lemonade JS\n        if (el.value != obj.options.value) {\n            el.value = obj.options.value;\n            if (typeof(el.oninput) == 'function') {\n                el.oninput({\n                    type: 'input',\n                    target: el,\n                    value: el.value\n                });\n            }\n        }\n    }\n\n    obj.getValue = function() {\n        return obj.options.value;\n    }\n\n    var init = function() {\n        // Start plugin\n        obj.setOptions(options);\n\n        // Class\n        el.classList.add('jrating');\n\n        // Events\n        el.addEventListener(\"click\", function(e) {\n            var index = e.target.getAttribute('data-index');\n            if (index != undefined) {\n                if (index == obj.options.value) {\n                    obj.setValue(0);\n                } else {\n                    obj.setValue(index);\n                }\n            }\n        });\n\n        el.addEventListener(\"mouseover\", function(e) {\n            var index = e.target.getAttribute('data-index');\n            for (var i = 0; i < obj.options.number; i++) {\n                if (i < index) {\n                    el.children[i].classList.add('jrating-over');\n                } else {\n                    el.children[i].classList.remove('jrating-over');\n                }\n            }\n        });\n\n        el.addEventListener(\"mouseout\", function(e) {\n            for (var i = 0; i < obj.options.number; i++) {\n                el.children[i].classList.remove('jrating-over');\n            }\n        });\n\n        // Change\n        el.change = obj.setValue;\n\n        // Global generic value handler\n        el.val = function(val) {\n            if (val === undefined) {\n                return obj.getValue();\n            } else {\n                obj.setValue(val);\n            }\n        }\n\n        // Reference\n        el.rating = obj;\n    }\n\n    init();\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/search.js\n\n\n\nfunction Search(el, options) {\n    if (el.search) {\n        return el.search;\n    }\n\n    var index =  null;\n\n    var select = function(e) {\n        if (e.target.classList.contains('jsearch_item')) {\n            var element = e.target;\n        } else {\n            var element = e.target.parentNode;\n        }\n\n        obj.selectIndex(element);\n        e.preventDefault();\n    }\n\n    var createList = function(data) {\n        if (typeof(obj.options.onsearch) == 'function') {\n            var ret = obj.options.onsearch(obj, data);\n            if (ret) {\n                data = ret;\n            }\n        }\n\n        // Reset container\n        container.innerHTML = '';\n        // Print results\n        if (! data.length) {\n            // Show container\n            el.style.display = '';\n        } else {\n            // Show container\n            el.style.display = 'block';\n\n            // Show items (only 10)\n            var len = data.length < 11 ? data.length : 10;\n            for (var i = 0; i < len; i++) {\n                if (typeof(data[i]) == 'string') {\n                    var text = data[i];\n                    var value = data[i];\n                } else {\n                    // Legacy\n                    var text = data[i].text;\n                    if (! text && data[i].name) {\n                        text = data[i].name;\n                    }\n                    var value = data[i].value;\n                    if (! value && data[i].id) {\n                        value = data[i].id;\n                    }\n                }\n\n                var div = document.createElement('div');\n                div.setAttribute('data-value', value);\n                div.setAttribute('data-text', text);\n                div.className = 'jsearch_item';\n\n                if (data[i].id) {\n                    div.setAttribute('id', data[i].id)\n                }\n\n                if (obj.options.forceSelect && i == 0) {\n                    div.classList.add('selected');\n                }\n                var img = document.createElement('img');\n                if (data[i].image) {\n                    img.src = data[i].image;\n                } else {\n                    img.style.display = 'none';\n                }\n                div.appendChild(img);\n\n                var item = document.createElement('div');\n                item.innerHTML = text;\n                div.appendChild(item);\n\n                // Append item to the container\n                container.appendChild(div);\n            }\n        }\n    }\n\n    var execute = function(str) {\n        if (str != obj.terms) {\n            // New terms\n            obj.terms = str;\n            // New index\n            if (obj.options.forceSelect) {\n                index = 0;\n            } else {\n                index = null;\n            }\n            // Array or remote search\n            if (Array.isArray(obj.options.data)) {\n                var test = function(o) {\n                    if (typeof(o) == 'string') {\n                        if ((''+o).toLowerCase().search(str.toLowerCase()) >= 0) {\n                            return true;\n                        }\n                    } else {\n                        for (var key in o) {\n                            var value = o[key];\n                            if ((''+value).toLowerCase().search(str.toLowerCase()) >= 0) {\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                }\n\n                var results = obj.options.data.filter(function(item) {\n                    return test(item);\n                });\n\n                // Show items\n                createList(results);\n            } else {\n                // Get remove results\n                ajax({\n                    url: obj.options.data + str,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function(data) {\n                        // Show items\n                        createList(data);\n                    }\n                });\n            }\n        }\n    }\n\n    // Search timer\n    var timer = null;\n\n    // Search methods\n    var obj = function(str) {\n        if (timer) {\n            clearTimeout(timer);\n        }\n        timer = setTimeout(function() {\n            execute(str);\n        }, 500);\n    }\n    if(options.forceSelect === null) {\n        options.forceSelect = true;\n    }\n    obj.options = {\n        data: options.data || null,\n        input: options.input || null,\n        searchByNode: options.searchByNode || null,\n        onselect: options.onselect || null,\n        forceSelect: options.forceSelect,\n        onsearch: options.onsearch || null,\n        onbeforesearch: options.onbeforesearch || null,\n    };\n\n    obj.selectIndex = function(item) {\n        var id = item.getAttribute('id');\n        var text = item.getAttribute('data-text');\n        var value = item.getAttribute('data-value');\n        var image = item.children[0].src || '';\n        // Onselect\n        if (typeof(obj.options.onselect) == 'function') {\n            obj.options.onselect(obj, text, value, id, image);\n        }\n        // Close container\n        obj.close();\n    }\n\n    obj.open = function() {\n        el.style.display = 'block';\n    }\n\n    obj.close = function() {\n        if (timer) {\n            clearTimeout(timer);\n        }\n        // Current terms\n        obj.terms = '';\n        // Remove results\n        container.innerHTML = '';\n        // Hide\n        el.style.display = '';\n    }\n\n    obj.isOpened = function() {\n        return el.style.display ? true : false;\n    }\n\n    obj.keydown = function(e) {\n        if (obj.isOpened()) {\n            if (e.key == 'Enter') {\n                // Enter\n                if (index!==null && container.children[index]) {\n                    obj.selectIndex(container.children[index]);\n                    e.preventDefault();\n                } else {\n                    obj.close();\n                }\n            } else if (e.key === 'ArrowUp') {\n                // Up\n                if (index!==null && container.children[0]) {\n                    container.children[index].classList.remove('selected');\n                    if(!obj.options.forceSelect && index === 0) {\n                        index = null;\n                    } else {\n                        index = Math.max(0, index-1);\n                        container.children[index].classList.add('selected');\n                    }\n                }\n                e.preventDefault();\n            } else if (e.key === 'ArrowDown') {\n                // Down\n                if(index == null) {\n                    index = -1;\n                } else {\n                    container.children[index].classList.remove('selected');\n                }\n                if (index < 9 && container.children[index+1]) {\n                    index++;\n                }\n                container.children[index].classList.add('selected');\n                e.preventDefault();\n            }\n        }\n    }\n\n    obj.keyup = function(e) {\n        if (! obj.options.searchByNode && obj.options.input) {\n            if (obj.options.input.tagName === 'DIV') {\n                var terms = obj.options.input.innerText;\n            } else {\n                var terms = obj.options.input.value;\n            }\n        } else {\n            // Current node\n            var node = helpers.getNode();\n            if (node) {\n                var terms = node.innerText;\n            }\n        }\n\n        if (typeof(obj.options.onbeforesearch) == 'function') {\n            var ret = obj.options.onbeforesearch(obj, terms);\n            if (ret) {\n                terms = ret;\n            } else {\n                if (ret === false) {\n                    // Ignore event\n                    return;\n                }\n            }\n        }\n\n        obj(terms);\n    }\n\n    obj.blur = function(e) {\n        obj.close();\n    }\n\n    // Add events\n    if (obj.options.input) {\n        obj.options.input.addEventListener(\"keyup\", obj.keyup);\n        obj.options.input.addEventListener(\"keydown\", obj.keydown);\n        obj.options.input.addEventListener(\"blur\", obj.blur);\n    }\n\n    // Append element\n    var container = document.createElement('div');\n    container.classList.add('jsearch_container');\n    container.onmousedown = select;\n    el.appendChild(container);\n\n    el.classList.add('jsearch');\n    el.search = obj;\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/slider.js\nfunction Slider(el, options) {\n    var obj = {};\n    obj.options = {};\n    obj.currentImage = null;\n\n    if (options) {\n        obj.options = options;\n    }\n\n    // Focus\n    el.setAttribute('tabindex', '900')\n\n    // Items\n    obj.options.items = [];\n\n    if (! el.classList.contains('jslider')) {\n        el.classList.add('jslider');\n        el.classList.add('unselectable');\n\n        if (obj.options.height) {\n            el.style.minHeight = parseInt(obj.options.height) + 'px';\n        }\n        if (obj.options.width) {\n            el.style.width = parseInt(obj.options.width) + 'px';\n        }\n        if (obj.options.grid) {\n            el.classList.add('jslider-grid');\n            var number = el.children.length;\n            if (number > 4) {\n                el.setAttribute('data-total', number - 4);\n            }\n            el.setAttribute('data-number', (number > 4 ? 4 : number));\n        }\n\n        // Add slider counter\n        var counter = document.createElement('div');\n        counter.classList.add('jslider-counter');\n\n        // Move children inside\n        if (el.children.length > 0) {\n            // Keep children items\n            for (var i = 0; i < el.children.length; i++) {\n                obj.options.items.push(el.children[i]);\n                \n                // counter click event\n                var item = document.createElement('div');\n                item.onclick = function() {\n                    var index = Array.prototype.slice.call(counter.children).indexOf(this);\n                    obj.show(obj.currentImage = obj.options.items[index]);\n                }\n                counter.appendChild(item);\n            }\n        }\n        // Add caption\n        var caption = document.createElement('div');\n        caption.className = 'jslider-caption';\n\n        // Add close buttom\n        var controls = document.createElement('div');\n        var close = document.createElement('div');\n        close.className = 'jslider-close';\n        close.innerHTML = '';\n        \n        close.onclick = function() {\n            obj.close();\n        }\n        controls.appendChild(caption);\n        controls.appendChild(close);\n    }\n\n    obj.updateCounter = function(index) {\n        for (var i = 0; i < counter.children.length; i ++) {\n            if (counter.children[i].classList.contains('jslider-counter-focus')) {\n                counter.children[i].classList.remove('jslider-counter-focus');\n                break;\n            }\n        }\n        counter.children[index].classList.add('jslider-counter-focus');\n    }\n\n    obj.show = function(target) {\n        if (! target) {\n            var target = el.children[0];\n        }\n\n        // Focus element\n        el.classList.add('jslider-focus');\n        el.classList.remove('jslider-grid');\n        el.appendChild(controls);\n        el.appendChild(counter);\n\n        // Update counter\n        var index = obj.options.items.indexOf(target);\n        obj.updateCounter(index);\n\n        // Remove display\n        for (var i = 0; i < el.children.length; i++) {\n            el.children[i].style.display = '';\n        }\n        target.style.display = 'block';\n\n        // Is there any previous\n        if (target.previousElementSibling) {\n            el.classList.add('jslider-left');\n        } else {\n            el.classList.remove('jslider-left');\n        }\n\n        // Is there any next\n        if (target.nextElementSibling && target.nextElementSibling.tagName == 'IMG') {\n            el.classList.add('jslider-right');\n        } else {\n            el.classList.remove('jslider-right');\n        }\n\n        obj.currentImage = target;\n\n        // Vertical image\n        if (obj.currentImage.offsetHeight > obj.currentImage.offsetWidth) {\n            obj.currentImage.classList.add('jslider-vertical');\n        }\n\n        controls.children[0].innerText = obj.currentImage.getAttribute('title');\n    }\n\n    obj.open = function() {\n        obj.show();\n\n        // Event\n        if (typeof(obj.options.onopen) == 'function') {\n            obj.options.onopen(el);\n        }\n    }\n\n    obj.close = function() {\n        // Remove control classes\n        el.classList.remove('jslider-focus');\n        el.classList.remove('jslider-left');\n        el.classList.remove('jslider-right');\n        // Show as a grid depending on the configuration\n        if (obj.options.grid) {\n            el.classList.add('jslider-grid');\n        }\n        // Remove display\n        for (var i = 0; i < el.children.length; i++) {\n            el.children[i].style.display = '';\n        }\n        // Remove controls from the component\n        counter.remove();\n        controls.remove();\n        // Current image\n        obj.currentImage = null;\n        // Event\n        if (typeof(obj.options.onclose) == 'function') {\n            obj.options.onclose(el);\n        }\n    }\n\n    obj.reset = function() {\n        el.innerHTML = '';\n    }\n\n    obj.next = function() {\n        var nextImage = obj.currentImage.nextElementSibling;\n        if (nextImage && nextImage.tagName === 'IMG') {\n            obj.show(obj.currentImage.nextElementSibling);\n        }\n    }\n    \n    obj.prev = function() {\n        if (obj.currentImage.previousElementSibling) {\n            obj.show(obj.currentImage.previousElementSibling);\n        }\n    }\n\n    var mouseUp = function(e) {\n        // Open slider\n        if (e.target.tagName == 'IMG') {\n            obj.show(e.target);\n        } else if (! e.target.classList.contains('jslider-close') && ! (e.target.parentNode.classList.contains('jslider-counter') || e.target.classList.contains('jslider-counter'))){\n            // Arrow controls\n            var offsetX = e.offsetX || e.changedTouches[0].clientX;\n            if (e.target.clientWidth - offsetX < 40) {\n                // Show next image\n                obj.next();\n            } else if (offsetX < 40) {\n                // Show previous image\n                obj.prev();\n            }\n        }\n    }\n\n    if ('ontouchend' in document.documentElement === true) {\n        el.addEventListener('touchend', mouseUp);\n    } else {\n        el.addEventListener('mouseup', mouseUp);\n    }\n\n    // Add global events\n    el.addEventListener(\"swipeleft\", function(e) {\n        obj.next();\n        e.preventDefault();\n        e.stopPropagation();\n    });\n\n    el.addEventListener(\"swiperight\", function(e) {\n        obj.prev();\n        e.preventDefault();\n        e.stopPropagation();\n    });\n\n    el.addEventListener('keydown', function(e) {\n        if (e.which == 27) {\n            obj.close();\n        }\n    });\n\n    el.slider = obj;\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/tags.js\n\n\n\n\nfunction Tags(el, options) {\n    // Redefine configuration\n    if (el.tags) {\n        return el.tags.setOptions(options, true);\n    }\n\n    var obj = { type:'tags' };\n    obj.options = {};\n\n    // Limit\n    var limit = function() {\n        return obj.options.limit && el.children.length >= obj.options.limit ? true : false;\n    }\n\n    // Search helpers\n    var search = null;\n    var searchContainer = null;\n\n    obj.setOptions = function(options, reset) {\n        /**\n         * @typedef {Object} defaults\n         * @property {(string|Array)} value - Initial value of the compontent\n         * @property {number} limit - Max number of tags inside the element\n         * @property {string} search - The URL for suggestions\n         * @property {string} placeholder - The default instruction text on the element\n         * @property {validation} validation - Method to validate the tags\n         * @property {requestCallback} onbeforechange - Method to be execute before any changes on the element\n         * @property {requestCallback} onchange - Method to be execute after any changes on the element\n         * @property {requestCallback} onfocus - Method to be execute when on focus\n         * @property {requestCallback} onblur - Method to be execute when on blur\n         * @property {requestCallback} onload - Method to be execute when the element is loaded\n         */\n        var defaults = {\n            value: '',\n            limit: null,\n            search: null,\n            placeholder: null,\n            validation: null,\n            onbeforepaste: null,\n            onbeforechange: null,\n            onlimit: null,\n            onchange: null,\n            onfocus: null,\n            onblur: null,\n            onload: null,\n        }\n\n        // Loop through though the default configuration\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                if (typeof(obj.options[property]) == 'undefined' || reset === true) {\n                    obj.options[property] = defaults[property];\n                }\n            }\n        }\n\n        // Placeholder\n        if (obj.options.placeholder) {\n            el.setAttribute('data-placeholder', obj.options.placeholder);\n        } else {\n            el.removeAttribute('data-placeholder');\n        }\n        el.placeholder = obj.options.placeholder;\n\n        // Update value\n        obj.setValue(obj.options.value);\n\n        // Validate items\n        filter();\n\n        // Create search box\n        if (obj.options.search) {\n            if (! searchContainer) {\n                searchContainer = document.createElement('div');\n                el.parentNode.insertBefore(searchContainer, el.nextSibling);\n\n                // Create container\n                search = Search(searchContainer, {\n                    data: obj.options.search,\n                    onselect: function(a,b,c) {\n                        obj.selectIndex(b,c);\n                    }\n                });\n            }\n        } else {\n            if (searchContainer) {\n                search = null;\n                searchContainer.remove();\n                searchContainer = null;\n            }\n        }\n\n        return obj;\n    }\n\n    /**\n     * Add a new tag to the element\n     * @param {(?string|Array)} value - The value of the new element\n     */\n    obj.add = function(value, focus) {\n        if (typeof(obj.options.onbeforechange) == 'function') {\n            var ret = obj.options.onbeforechange(el, obj, obj.options.value, value);\n            if (ret === false) {\n                return false;\n            } else { \n                if (ret != null) {\n                    value = ret;\n                }\n            }\n        }\n\n        // Make sure search is closed\n        if (search) {\n            search.close();\n        }\n\n        if (limit()) {\n            if (typeof(obj.options.onlimit) == 'function') {\n                obj.options.onlimit(obj, obj.options.limit);\n            } else {\n                alert(dictionary.translate('You reach the limit number of entries') + ' ' + obj.options.limit);\n            }\n        } else {\n            // Get node\n            var node = helpers.getNode();\n\n            if (node && node.parentNode && node.parentNode.classList.contains('jtags') &&\n                node.nextSibling && (! (node.nextSibling.innerText && node.nextSibling.innerText.trim()))) {\n                div = node.nextSibling;\n            } else {\n                // Remove not used last item\n                if (el.lastChild) {\n                    if (! el.lastChild.innerText.trim()) {\n                        el.removeChild(el.lastChild);\n                    }\n                }\n\n                // Mix argument string or array\n                if (! value || typeof(value) == 'string') {\n                    var div = createElement(value, value, node);\n                } else {\n                    for (var i = 0; i <= value.length; i++) {\n                        if (! limit()) {\n                            if (! value[i] || typeof(value[i]) == 'string') {\n                                var t = value[i] || '';\n                                var v = null;\n                            } else {\n                                var t = value[i].text;\n                                var v = value[i].value;\n                            }\n\n                            // Add element\n                            var div = createElement(t, v);\n                        }\n                    }\n                }\n\n                // Change\n                change();\n            }\n\n            // Place caret\n            if (focus) {\n                setFocus(div);\n            }\n        }\n    }\n\n    obj.setLimit = function(limit) {\n        obj.options.limit = limit;\n        var n = el.children.length - limit;\n        while (el.children.length > limit) {\n            el.removeChild(el.lastChild);\n        }\n    }\n\n    // Remove a item node\n    obj.remove = function(node) {\n        // Remove node\n        node.parentNode.removeChild(node);\n        // Make sure element is not blank\n        if (! el.children.length) {\n            obj.add('', true);\n        } else {\n            change();\n        }\n    }\n\n    /**\n     * Get all tags in the element\n     * @return {Array} data - All tags as an array\n     */\n    obj.getData = function() {\n        var data = [];\n        for (var i = 0; i < el.children.length; i++) {\n            // Get value\n            var text = el.children[i].innerText.replace(\"\\n\", \"\");\n            // Get id\n            var value = el.children[i].getAttribute('data-value');\n            if (! value) {\n                value = text;\n            }\n            // Item\n            if (text || value) {\n                data.push({ text: text, value: value });\n            }\n        }\n        return data;\n    }\n\n    /**\n     * Get the value of one tag. Null for all tags\n     * @param {?number} index - Tag index number. Null for all tags.\n     * @return {string} value - All tags separated by comma\n     */\n    obj.getValue = function(index) {\n        var value = null;\n\n        if (index != null) {\n            // Get one individual value\n            value = el.children[index].getAttribute('data-value');\n            if (! value) {\n                value = el.children[index].innerText.replace(\"\\n\", \"\");\n            }\n        } else {\n            // Get all\n            var data = [];\n            for (var i = 0; i < el.children.length; i++) {\n                value = el.children[i].innerText.replace(\"\\n\", \"\");\n                if (value) {\n                    data.push(obj.getValue(i));\n                }\n            }\n            value = data.join(',');\n        }\n\n        return value;\n    }\n\n    /**\n     * Set the value of the element based on a string separeted by (,|;|\\r\\n)\n     * @param {mixed} value - A string or array object with values\n     */\n    obj.setValue = function(mixed) {\n        if (! mixed) {\n            obj.reset();\n        } else {\n            if (el.value != mixed) {\n                if (Array.isArray(mixed)) {\n                    obj.add(mixed);\n                } else {\n                    // Remove whitespaces\n                    var text = (''+mixed).trim();\n                    // Tags\n                    var data = extractTags(text);\n                    // Reset\n                    el.innerHTML = '';\n                    // Add tags to the element\n                    obj.add(data);\n                }\n            }\n        }\n    }\n\n    /**\n     * Reset the data from the element\n     */\n    obj.reset = function() {\n        // Empty class\n        el.classList.add('jtags-empty');\n        // Empty element\n        el.innerHTML = '<div></div>';\n        // Execute changes\n        change();\n    }\n\n    /**\n     * Verify if all tags in the element are valid\n     * @return {boolean}\n     */\n    obj.isValid = function() {\n        var test = 0;\n        for (var i = 0; i < el.children.length; i++) {\n            if (el.children[i].classList.contains('jtags_error')) {\n                test++;\n            }\n        }\n        return test == 0 ? true : false;\n    }\n\n    /**\n     * Add one element from the suggestions to the element\n     * @param {object} item - Node element in the suggestions container\n     */ \n    obj.selectIndex = function(text, value) {\n        var node = helpers.getNode();\n        if (node) {\n            // Append text to the caret\n            node.innerText = text;\n            // Set node id\n            if (value) {\n                node.setAttribute('data-value', value);\n            }\n            // Remove any error\n            node.classList.remove('jtags_error');\n            if (! limit()) {\n                // Add new item\n                obj.add('', true);\n            }\n        }\n    }\n\n    /**\n     * Search for suggestions\n     * @param {object} node - Target node for any suggestions\n     */\n    obj.search = function(node) {\n        // Search for\n        var terms = node.innerText;\n    }\n\n    // Destroy tags element\n    obj.destroy = function() {\n        // Bind events\n        el.removeEventListener('mouseup', tagsMouseUp);\n        el.removeEventListener('keydown', tagsKeyDown);\n        el.removeEventListener('keyup', tagsKeyUp);\n        el.removeEventListener('paste', tagsPaste);\n        el.removeEventListener('focus', tagsFocus);\n        el.removeEventListener('blur', tagsBlur);\n\n        // Remove element\n        el.parentNode.removeChild(el);\n    }\n\n    var setFocus = function(node) {\n        if (el.children.length) {\n            var range = document.createRange();\n            var sel = window.getSelection();\n            if (! node) {\n                var node = el.childNodes[el.childNodes.length-1];\n            }\n            range.setStart(node, node.length)\n            range.collapse(true)\n            sel.removeAllRanges()\n            sel.addRange(range)\n            el.scrollLeft = el.scrollWidth;\n        }\n    }\n\n    var createElement = function(label, value, node) {\n        var div = document.createElement('div');\n        div.innerHTML = label ? label : '';\n        if (value) {\n            div.setAttribute('data-value', value);\n        }\n\n        if (node && node.parentNode.classList.contains('jtags')) {\n            el.insertBefore(div, node.nextSibling);\n        } else {\n            el.appendChild(div);\n        }\n\n        return div;\n    }\n\n    var change = function() {\n        // Value\n        var value = obj.getValue();\n\n        if (value != obj.options.value) {\n            obj.options.value = value;\n            if (typeof(obj.options.onchange) == 'function') {\n                obj.options.onchange(el, obj, obj.options.value);\n            }\n\n            // Lemonade JS\n            if (el.value != obj.options.value) {\n                el.value = obj.options.value;\n                if (typeof(el.oninput) == 'function') {\n                    el.oninput({\n                        type: 'input',\n                        target: el,\n                        value: el.value\n                    });\n                }\n            }\n        }\n\n        filter();\n    }\n\n    /**\n     * Filter tags\n     */\n    var filter = function() {\n        for (var i = 0; i < el.children.length; i++) {\n            if (el.children[i].tagName === 'DIV') {\n                // Create label design\n                if (!obj.getValue(i)) {\n                    el.children[i].classList.remove('jtags_label');\n                } else {\n                    el.children[i].classList.add('jtags_label');\n\n                    // Validation in place\n                    if (typeof (obj.options.validation) == 'function') {\n                        if (obj.getValue(i)) {\n                            if (!obj.options.validation(el.children[i], el.children[i].innerText, el.children[i].getAttribute('data-value'))) {\n                                el.children[i].classList.add('jtags_error');\n                            } else {\n                                el.children[i].classList.remove('jtags_error');\n                            }\n                        } else {\n                            el.children[i].classList.remove('jtags_error');\n                        }\n                    } else {\n                        el.children[i].classList.remove('jtags_error');\n                    }\n                }\n            }\n        }\n\n        isEmpty();\n    }\n\n    var isEmpty = function() {\n        // Can't be empty\n        if (! el.innerText.trim()) {\n            if (! el.children.length || el.children[0].tagName === 'BR') {\n                el.innerHTML = '';\n                setFocus(createElement());\n            }\n        } else {\n            el.classList.remove('jtags-empty');\n        }\n    }\n\n    /**\n     * Extract tags from a string\n     * @param {string} text - Raw string\n     * @return {Array} data - Array with extracted tags\n     */\n    var extractTags = function(text) {\n        /** @type {Array} */\n        var data = [];\n\n        /** @type {string} */\n        var word = '';\n\n        // Remove whitespaces\n        text = text.trim();\n\n        if (text) {\n            for (var i = 0; i < text.length; i++) {\n                if (text[i] == ',' || text[i] == ';' || text[i] == '\\n') {\n                    if (word) {\n                        data.push(word.trim());\n                        word = '';\n                    }\n                } else {\n                    word += text[i];\n                }\n            }\n\n            if (word) {\n                data.push(word);\n            }\n        }\n\n        return data;\n    }\n\n    /** @type {number} */\n    var anchorOffset = 0;\n\n    /**\n     * Processing event keydown on the element\n     * @param e {object}\n     */\n    var tagsKeyDown = function(e) {\n        // Anchoroffset\n        anchorOffset = window.getSelection().anchorOffset;\n\n        // Verify if is empty\n        isEmpty();\n\n        // Comma\n        if (e.key === 'Tab'  || e.key === ';' || e.key === ',') {\n            var n = window.getSelection().anchorOffset;\n            if (n > 1) {\n                if (limit()) {\n                    if (typeof(obj.options.onlimit) == 'function') {\n                        obj.options.onlimit(obj, obj.options.limit)\n                    }\n                } else {\n                    obj.add('', true);\n                }\n            }\n            e.preventDefault();\n        } else if (e.key == 'Enter') {\n            if (! search || ! search.isOpened()) {\n                var n = window.getSelection().anchorOffset;\n                if (n > 1) {\n                    if (! limit()) {\n                        obj.add('', true);\n                    }\n                }\n                e.preventDefault();\n            }\n        } else if (e.key == 'Backspace') {\n            // Back space - do not let last item to be removed\n            if (el.children.length == 1 && window.getSelection().anchorOffset < 1) {\n                e.preventDefault();\n            }\n        }\n\n        // Search events\n        if (search) {\n            search.keydown(e);\n        }\n\n        // Verify if is empty\n        isEmpty();\n    }\n\n    /**\n     * Processing event keyup on the element\n     * @param e {object}\n     */\n    var tagsKeyUp = function(e) {\n        if (e.which == 39) {\n            // Right arrow\n            var n = window.getSelection().anchorOffset;\n            if (n > 1 && n == anchorOffset) {\n                obj.add('', true);\n            }\n        } else if (e.which == 13 || e.which == 38 || e.which == 40) {\n            e.preventDefault();\n        } else {\n            if (search) {\n                search.keyup(e);\n            }\n        }\n\n        filter();\n    }\n\n    /**\n     * Processing event paste on the element\n     * @param e {object}\n     */\n    var tagsPaste =  function(e) {\n        if (e.clipboardData || e.originalEvent.clipboardData) {\n            var text = (e.originalEvent || e).clipboardData.getData('text/plain');\n        } else if (window.clipboardData) {\n            var text = window.clipboardData.getData('Text');\n        }\n\n        var data = extractTags(text);\n\n        if (typeof(obj.options.onbeforepaste) == 'function') {\n            var ret = obj.options.onbeforepaste(el, obj, data);\n            if (ret === false) {\n                e.preventDefault();\n                return false;\n            } else {\n                if (ret) {\n                    data = ret;\n                }\n            }\n        }\n\n        if (data.length > 1) {\n            obj.add(data, true);\n            e.preventDefault();\n        } else if (data[0]) {\n            document.execCommand('insertText', false, data[0])\n            e.preventDefault();\n        }\n    }\n\n    /**\n     * Processing event mouseup on the element\n     * @param e {object}\n     */\n    var tagsMouseUp = function(e) {\n        if (e.target.parentNode && e.target.parentNode.classList.contains('jtags')) {\n            if (e.target.classList.contains('jtags_label') || e.target.classList.contains('jtags_error')) {\n                var rect = e.target.getBoundingClientRect();\n                if (rect.width - (e.clientX - rect.left) < 16) {\n                    obj.remove(e.target);\n                }\n            }\n        }\n\n        // Set focus in the last item\n        if (e.target == el) {\n            setFocus();\n        }\n    }\n\n    var tagsFocus = function() {\n        if (! el.classList.contains('jtags-focus')) {\n            if (! el.children.length || obj.getValue(el.children.length - 1)) {\n                if (! limit()) {\n                    createElement('');\n                }\n            }\n\n            if (typeof(obj.options.onfocus) == 'function') {\n                obj.options.onfocus(el, obj, obj.getValue());\n            }\n\n            el.classList.add('jtags-focus');\n        }\n    }\n\n    var tagsBlur = function() {\n        if (el.classList.contains('jtags-focus')) {\n            if (search) {\n                search.close();\n            }\n\n            for (var i = 0; i < el.children.length - 1; i++) {\n                // Create label design\n                if (! obj.getValue(i)) {\n                    el.removeChild(el.children[i]);\n                }\n            }\n\n            change();\n\n            el.classList.remove('jtags-focus');\n\n            if (typeof(obj.options.onblur) == 'function') {\n                obj.options.onblur(el, obj, obj.getValue());\n            }\n        }\n    }\n\n    var init = function() {\n        // Bind events\n        if ('touchend' in document.documentElement === true) {\n            el.addEventListener('touchend', tagsMouseUp);\n        } else {\n            el.addEventListener('mouseup', tagsMouseUp);\n        }\n\n        el.addEventListener('keydown', tagsKeyDown);\n        el.addEventListener('keyup', tagsKeyUp);\n        el.addEventListener('paste', tagsPaste);\n        el.addEventListener('focus', tagsFocus);\n        el.addEventListener('blur', tagsBlur);\n\n        // Editable\n        el.setAttribute('contenteditable', true);\n\n        // Prepare container\n        el.classList.add('jtags');\n\n        // Initial options\n        obj.setOptions(options);\n\n        if (typeof(obj.options.onload) == 'function') {\n            obj.options.onload(el, obj);\n        }\n\n        // Change methods\n        el.change = obj.setValue;\n\n        // Global generic value handler\n        el.val = function(val) {\n            if (val === undefined) {\n                return obj.getValue();\n            } else {\n                obj.setValue(val);\n            }\n        }\n\n        el.tags = obj;\n    }\n\n    init();\n\n    return obj;\n}\n;// CONCATENATED MODULE: ./src/plugins/upload.js\n\n\n\n\nfunction Upload(el, options) {\n    var obj = {};\n    obj.options = {};\n\n    // Default configuration\n    var defaults = {\n        type: 'image',\n        extension: '*',\n        input: false,\n        minWidth: false,\n        maxWidth: null,\n        maxHeight: null,\n        maxJpegSizeBytes: null, // For example, 350Kb would be 350000\n        onchange: null,\n        multiple: false,\n        remoteParser: null,\n    };\n\n    // Loop through our object\n    for (var property in defaults) {\n        if (options && options.hasOwnProperty(property)) {\n            obj.options[property] = options[property];\n        } else {\n            obj.options[property] = defaults[property];\n        }\n    }\n\n    // Multiple\n    if (obj.options.multiple == true) {\n        el.setAttribute('data-multiple', true);\n    }\n\n    // Container\n    el.content = [];\n\n    // Upload icon\n    el.classList.add('jupload');\n\n    if (obj.options.input == true) {\n        el.classList.add('input');\n    }\n\n    obj.add = function(data) {\n        // Reset container for single files\n        if (obj.options.multiple == false) {\n            el.content = [];\n            el.innerText = '';\n        }\n\n        // Append to the element\n        if (obj.options.type == 'image') {\n            var img = document.createElement('img');\n            img.setAttribute('src', data.file);\n            img.setAttribute('tabindex', -1);\n            if (! el.getAttribute('name')) {\n                img.className = 'jfile';\n                img.content = data;\n            }\n            el.appendChild(img);\n        } else {\n            if (data.name) {\n                var name = data.name;\n            } else {\n                var name = data.file;\n            }\n            var div = document.createElement('div');\n            div.innerText = name || obj.options.type;\n            div.classList.add('jupload-item');\n            div.setAttribute('tabindex', -1);\n            el.appendChild(div);\n        }\n\n        if (data.content) {\n            data.file = helpers.guid();\n        }\n\n        // Push content\n        el.content.push(data);\n\n        // Onchange\n        if (typeof(obj.options.onchange) == 'function') {\n            obj.options.onchange(el, data);\n        }\n    }\n\n    obj.addFromFile = function(file) {\n        var type = file.type.split('/');\n        if (type[0] == obj.options.type) {\n            var readFile = new FileReader();\n            readFile.addEventListener(\"load\", function (v) {\n                var data = {\n                    file: v.srcElement.result,\n                    extension: file.name.substr(file.name.lastIndexOf('.') + 1),\n                    name: file.name,\n                    size: file.size,\n                    lastmodified: file.lastModified,\n                    content: v.srcElement.result,\n                }\n\n                obj.add(data);\n            });\n\n            readFile.readAsDataURL(file);\n        } else {\n            alert(dictionary.translate('This extension is not allowed'));\n        }\n    }\n\n    obj.addFromUrl = function(src) {\n        if (src.substr(0,4) != 'data' && ! obj.options.remoteParser) {\n            console.error('remoteParser not defined in your initialization');\n        } else {\n            // This is to process cross domain images\n            if (src.substr(0,4) == 'data') {\n                var extension = src.split(';')\n                extension = extension[0].split('/');\n                var type = extension[0].replace('data:','');\n                if (type == obj.options.type) {\n                    var data = {\n                        file: src,\n                        name: '',\n                        extension: extension[1],\n                        content: src,\n                    }\n                    obj.add(data);\n                } else {\n                    alert(obj.options.text.extensionNotAllowed);\n                }\n            } else {\n                var extension = src.substr(src.lastIndexOf('.') + 1);\n                // Work for cross browsers\n                src = obj.options.remoteParser + src;\n                // Get remove content\n                ajax({\n                    url: src,\n                    type: 'GET',\n                    dataType: 'blob',\n                    success: function(data) {\n                        //add(extension[0].replace('data:',''), data);\n                    }\n                })\n            }\n        }\n    }\n\n    var getDataURL = function(canvas, type) {\n        var compression = 0.92;\n        var lastContentLength = null;\n        var content = canvas.toDataURL(type, compression);\n        while (obj.options.maxJpegSizeBytes && type === 'image/jpeg' &&\n               content.length > obj.options.maxJpegSizeBytes && content.length !== lastContentLength) {\n            // Apply the compression\n            compression *= 0.9;\n            lastContentLength = content.length;\n            content = canvas.toDataURL(type, compression);\n        }\n        return content;\n    }\n\n    var mime = obj.options.type + '/' + obj.options.extension;\n    var input = document.createElement('input');\n    input.type = 'file';\n    input.setAttribute('accept', mime);\n    input.onchange = function() {\n        for (var i = 0; i < this.files.length; i++) {\n            obj.addFromFile(this.files[i]);\n        }\n    }\n\n    // Allow multiple files\n    if (obj.options.multiple == true) {\n        input.setAttribute('multiple', true);\n    }\n\n    var current = null;\n\n    el.addEventListener(\"click\", function(e) {\n        current = null;\n        if (! el.children.length || e.target === el) {\n            helpers.click(input);\n        } else {\n            if (e.target.parentNode == el) {\n                current = e.target;\n            }\n        }\n    });\n\n    el.addEventListener(\"dblclick\", function(e) {\n        helpers.click(input);\n    });\n\n    el.addEventListener('dragenter', function(e) {\n        el.style.border = '1px dashed #000';\n    });\n\n    el.addEventListener('dragleave', function(e) {\n        el.style.border = '1px solid #eee';\n    });\n\n    el.addEventListener('dragstop', function(e) {\n        el.style.border = '1px solid #eee';\n    });\n\n    el.addEventListener('dragover', function(e) {\n        e.preventDefault();\n    });\n\n    el.addEventListener('keydown', function(e) {\n        if (current && e.which == 46) {\n            var index = Array.prototype.indexOf.call(el.children, current);\n            if (index >= 0) {\n                el.content.splice(index, 1);\n                current.remove();\n                current = null;\n            }\n        }\n    });\n\n    el.addEventListener('drop', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        var html = (e.originalEvent || e).dataTransfer.getData('text/html');\n        var file = (e.originalEvent || e).dataTransfer.files;\n\n        if (file.length) {\n            for (var i = 0; i < e.dataTransfer.files.length; i++) {\n                obj.addFromFile(e.dataTransfer.files[i]);\n            }\n        } else if (html) {\n            if (obj.options.multiple == false) {\n                el.innerText = '';\n            }\n\n            // Create temp element\n            var div = document.createElement('div');\n            div.innerHTML = html;\n\n            // Extract images\n            var img = div.querySelectorAll('img');\n\n            if (img.length) {\n                for (var i = 0; i < img.length; i++) {\n                    obj.addFromUrl(img[i].src);\n                }\n            }\n        }\n\n        el.style.border = '1px solid #eee';\n\n        return false;\n    });\n\n    el.val = function(val) {\n        if (val === undefined) {\n            return el.content && el.content.length ? el.content : null;\n        } else {\n            // Reset\n            el.innerText = '';\n            el.content = [];\n\n            if (val) {\n                if (Array.isArray(val)) {\n                    for (var i = 0; i < val.length; i++) {\n                        if (typeof(val[i]) == 'string') {\n                            obj.add({ file: val[i] });\n                        } else {\n                            obj.add(val[i]);\n                        }\n                    }\n                } else if (typeof(val) == 'string') {\n                    obj.add({ file: val });\n                }\n            }\n        }\n    }\n\n    el.upload = el.image = obj;\n\n    return obj;\n}\n\n// EXTERNAL MODULE: ./packages/sha512/sha512.js\nvar sha512 = __webpack_require__(195);\nvar sha512_default = /*#__PURE__*/__webpack_require__.n(sha512);\n;// CONCATENATED MODULE: ./src/jsuites.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar jSuites = {\n    /** Current version */\n    version: '5.0.1',\n    /** Bind new extensions to Jsuites */\n    setExtensions: function(o) {\n        if (typeof(o) == 'object') {\n            var k = Object.keys(o);\n            for (var i = 0; i < k.length; i++) {\n                jSuites[k[i]] = o[k[i]];\n            }\n        }\n    },\n    // Helpers\n    tracking: Tracking,\n    ...dictionary,\n    ...helpers,\n    path: Path,\n    sorting: Sorting,\n    lazyLoading: LazyLoading,\n    // Plugins\n    ajax: ajax,\n    animation: animation,\n    calendar: calendar,\n    color: Color,\n    contextmenu: contextmenu,\n    dropdown: dropdown,\n    editor: editor,\n    floating: floating,\n    form: plugins_form,\n    mask: mask,\n    modal: modal,\n    notification: notification,\n    palette: palette,\n    picker: Picker,\n    progressbar: Progressbar,\n    rating: Rating,\n    search: Search,\n    slider: Slider,\n    tabs: Tabs,\n    tags: Tags,\n    toolbar: Toolbar,\n    upload: Upload,\n    validations: validations,\n}\n\n// Legacy\njSuites.image = Upload;\njSuites.image.create = function(data) {\n    var img = document.createElement('img');\n    img.setAttribute('src', data.file);\n    img.className = 'jfile';\n    img.setAttribute('tabindex', -1);\n    img.content = data;\n\n    return img;\n}\n\njSuites.tracker = plugins_form;\njSuites.loading = animation.loading;\njSuites.sha512 = (sha512_default());\n\n\n/** Core events */\nvar Events = function() {\n\n    document.jsuitesComponents = [];\n\n    var find = function(DOMElement, component) {\n        if (DOMElement[component.type] && DOMElement[component.type] == component) {\n            return true;\n        }\n        if (DOMElement.component && DOMElement.component == component) {\n            return true;\n        }\n        if (DOMElement.parentNode) {\n            return find(DOMElement.parentNode, component);\n        }\n        return false;\n    }\n\n    var isOpened = function(e) {\n        if (document.jsuitesComponents && document.jsuitesComponents.length > 0) {\n            for (var i = 0; i < document.jsuitesComponents.length; i++) {\n                if (document.jsuitesComponents[i] && ! find(e, document.jsuitesComponents[i])) {\n                    document.jsuitesComponents[i].close();\n                }\n            }\n        }\n    }\n\n    // Width of the border\n    var cornerSize = 15;\n\n    // Current element\n    var element = null;\n\n    // Controllers\n    var editorAction = false;\n\n    // Event state\n    var state = {\n        x: null,\n        y: null,\n    }\n\n    // Tooltip element\n    var tooltip = document.createElement('div')\n    tooltip.classList.add('jtooltip');\n\n    // Events\n    var mouseDown = function(e) {\n        // Check if this is the floating\n        var item = jSuites.findElement(e.target, 'jpanel');\n        // Jfloating found\n        if (item && ! item.classList.contains(\"readonly\")) {\n            // Add focus to the chart container\n            item.focus();\n            // Keep the tracking information\n            var rect = e.target.getBoundingClientRect();\n            editorAction = {\n                e: item,\n                x: e.clientX,\n                y: e.clientY,\n                w: rect.width,\n                h: rect.height,\n                d: item.style.cursor,\n                resizing: item.style.cursor ? true : false,\n                actioned: false,\n            }\n\n            // Make sure width and height styling is OK\n            if (! item.style.width) {\n                item.style.width = rect.width + 'px';\n            }\n\n            if (! item.style.height) {\n                item.style.height = rect.height + 'px';\n            }\n\n            // Remove any selection from the page\n            var s = window.getSelection();\n            if (s.rangeCount) {\n                for (var i = 0; i < s.rangeCount; i++) {\n                    s.removeRange(s.getRangeAt(i));\n                }\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n        } else {\n            // No floating action found\n            editorAction = false;\n        }\n\n        // Verify current components tracking\n        if (e.changedTouches && e.changedTouches[0]) {\n            var x = e.changedTouches[0].clientX;\n            var y = e.changedTouches[0].clientY;\n        } else {\n            var x = e.clientX;\n            var y = e.clientY;\n        }\n\n        // Which component I am clicking\n        var path = e.path || (e.composedPath && e.composedPath());\n\n        // If path available get the first element in the chain\n        if (path) {\n            element = path[0];\n        } else {\n            // Try to guess using the coordinates\n            if (e.target && e.target.shadowRoot) {\n                var d = e.target.shadowRoot;\n            } else {\n                var d = document;\n            }\n            // Get the first target element\n            element = d.elementFromPoint(x, y);\n        }\n\n        isOpened(element);\n    }\n\n    var mouseUp = function(e) {\n        if (editorAction && editorAction.e) {\n            if (typeof(editorAction.e.refresh) == 'function' && state.actioned) {\n                editorAction.e.refresh();\n            }\n            editorAction.e.style.cursor = '';\n        }\n\n        // Reset\n        state = {\n            x: null,\n            y: null,\n        }\n\n        editorAction = false;\n    }\n\n    var mouseMove = function(e) {\n        if (editorAction) {\n            var x = e.clientX || e.pageX;\n            var y = e.clientY || e.pageY;\n\n            // Action on going\n            if (! editorAction.resizing) {\n                if (state.x == null && state.y == null) {\n                    state.x = x;\n                    state.y = y;\n                }\n\n                var dx = x - state.x;\n                var dy = y - state.y;\n                var top = editorAction.e.offsetTop + dy;\n                var left = editorAction.e.offsetLeft + dx;\n\n                // Update position\n                editorAction.e.style.top = top + 'px';\n                editorAction.e.style.left = left + 'px';\n                editorAction.e.style.cursor = \"move\";\n\n                state.x = x;\n                state.y = y;\n\n\n                // Update element\n                if (typeof(editorAction.e.refresh) == 'function') {\n                    state.actioned = true;\n                    editorAction.e.refresh('position', top, left);\n                }\n            } else {\n                var width = null;\n                var height = null;\n\n                if (editorAction.d == 'e-resize' || editorAction.d == 'ne-resize' || editorAction.d == 'se-resize') {\n                    // Update width\n                    width = editorAction.w + (x - editorAction.x);\n                    editorAction.e.style.width = width + 'px';\n\n                    // Update Height\n                    if (e.shiftKey) {\n                        var newHeight = (x - editorAction.x) * (editorAction.h / editorAction.w);\n                        height = editorAction.h + newHeight;\n                        editorAction.e.style.height = height + 'px';\n                    } else {\n                        var newHeight = false;\n                    }\n                }\n\n                if (! newHeight) {\n                    if (editorAction.d == 's-resize' || editorAction.d == 'se-resize' || editorAction.d == 'sw-resize') {\n                        height = editorAction.h + (y - editorAction.y);\n                        editorAction.e.style.height = height + 'px';\n                    }\n                }\n\n                // Update element\n                if (typeof(editorAction.e.refresh) == 'function') {\n                    state.actioned = true;\n                    editorAction.e.refresh('dimensions', width, height);\n                }\n            }\n        } else {\n            // Resizing action\n            var item = jSuites.findElement(e.target, 'jpanel');\n            // Found eligible component\n            if (item) {\n                if (item.getAttribute('tabindex')) {\n                    var rect = item.getBoundingClientRect();\n                    if (e.clientY - rect.top < cornerSize) {\n                        if (rect.width - (e.clientX - rect.left) < cornerSize) {\n                            item.style.cursor = 'ne-resize';\n                        } else if (e.clientX - rect.left < cornerSize) {\n                            item.style.cursor = 'nw-resize';\n                        } else {\n                            item.style.cursor = 'n-resize';\n                        }\n                    } else if (rect.height - (e.clientY - rect.top) < cornerSize) {\n                        if (rect.width - (e.clientX - rect.left) < cornerSize) {\n                            item.style.cursor = 'se-resize';\n                        } else if (e.clientX - rect.left < cornerSize) {\n                            item.style.cursor = 'sw-resize';\n                        } else {\n                            item.style.cursor = 's-resize';\n                        }\n                    } else if (rect.width - (e.clientX - rect.left) < cornerSize) {\n                        item.style.cursor = 'e-resize';\n                    } else if (e.clientX - rect.left < cornerSize) {\n                        item.style.cursor = 'w-resize';\n                    } else {\n                        item.style.cursor = '';\n                    }\n                }\n            }\n        }\n    }\n\n    var mouseOver = function(e) {\n        var message = e.target.getAttribute('data-tooltip');\n        if (message) {\n            // Instructions\n            tooltip.innerText = message;\n\n            // Position\n            if (e.changedTouches && e.changedTouches[0]) {\n                var x = e.changedTouches[0].clientX;\n                var y = e.changedTouches[0].clientY;\n            } else {\n                var x = e.clientX;\n                var y = e.clientY;\n            }\n\n            tooltip.style.top = y + 'px';\n            tooltip.style.left = x + 'px';\n            document.body.appendChild(tooltip);\n        } else if (tooltip.innerText) {\n            tooltip.innerText = '';\n            document.body.removeChild(tooltip);\n        }\n    }\n\n    var dblClick = function(e) {\n        var item = jSuites.findElement(e.target, 'jpanel');\n        if (item && typeof(item.dblclick) == 'function') {\n            // Create edition\n            item.dblclick(e);\n        }\n    }\n\n    var contextMenu = function(e) {\n        var item = document.activeElement;\n        if (item && typeof(item.contextmenu) == 'function') {\n            // Create edition\n            item.contextmenu(e);\n\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        } else {\n            // Search for possible context menus\n            item = jSuites.findElement(e.target, function(o) {\n                return o.tagName && o.getAttribute('aria-contextmenu-id');\n            });\n\n            if (item) {\n                var o = document.querySelector('#' + item);\n                if (! o) {\n                    console.error('JSUITES: contextmenu id not found: ' + item);\n                } else {\n                    o.contextmenu.open(e);\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                }\n            }\n        }\n    }\n\n    var keyDown = function(e) {\n        var item = document.activeElement;\n        if (item) {\n            if (e.key == \"Delete\" && typeof(item.delete) == 'function') {\n                item.delete();\n                e.preventDefault();\n                e.stopImmediatePropagation();\n            }\n        }\n\n        if (document.jsuitesComponents && document.jsuitesComponents.length) {\n            if (item = document.jsuitesComponents[document.jsuitesComponents.length - 1]) {\n                if (e.key == \"Escape\" && typeof(item.isOpened) == 'function' && typeof(item.close) == 'function') {\n                    if (item.isOpened()) {\n                        item.close();\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                    }\n                }\n            }\n        }\n    }\n\n    document.addEventListener('mouseup', mouseUp);\n    document.addEventListener(\"mousedown\", mouseDown);\n    document.addEventListener('mousemove', mouseMove);\n    document.addEventListener('mouseover', mouseOver);\n    document.addEventListener('dblclick', dblClick);\n    document.addEventListener('keydown', keyDown);\n    document.addEventListener('contextmenu', contextMenu);\n}\n\nif (typeof(document) !== \"undefined\" && ! document.jsuitesComponents) {\n    Events();\n}\n\n/* harmony default export */ var jsuites = (jSuites);\n}();\n__webpack_exports__ = __webpack_exports__[\"default\"];\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});", "import dictionary from './utils/dictionary';\nimport tracking from './utils/tracking';\nimport helpers from './utils/helpers';\nimport path from './utils/path';\nimport sorting from './utils/sorting';\nimport lazyLoading from './utils/lazyloading';\n\nimport ajax from './plugins/ajax';\nimport animation from './plugins/animation';\nimport calendar from './plugins/calendar';\nimport color from './plugins/color';\nimport contextmenu from './plugins/contextmenu';\nimport dropdown from './plugins/dropdown';\nimport editor from './plugins/editor';\nimport floating from './plugins/floating';\nimport form from './plugins/form';\nimport mask from './plugins/mask';\nimport modal from './plugins/modal';\nimport notification from './plugins/notification';\nimport palette from './plugins/palette';\nimport picker from './plugins/picker';\nimport progressbar from './plugins/progressbar';\nimport rating from './plugins/rating';\nimport search from './plugins/search';\nimport slider from './plugins/slider';\nimport tabs from './plugins/tabs';\nimport tags from './plugins/tags';\nimport toolbar from './plugins/toolbar';\nimport upload from './plugins/upload';\nimport validations from './plugins/validations';\n\nimport sha512 from '../packages/sha512';\n\nimport './style/core.css';\nimport './style/animation.css';\nimport './style/calendar.css';\nimport './style/color.css';\nimport './style/contextmenu.css';\nimport './style/dropdown.css';\nimport './style/editor.css';\nimport './style/floating.css';\nimport './style/modal.css';\nimport './style/notification.css';\nimport './style/picker.css';\nimport './style/progressbar.css';\nimport './style/rating.css';\nimport './style/search.css';\nimport './style/slider.css';\nimport './style/tabs.css';\nimport './style/tags.css';\nimport './style/toolbar.css';\n\nvar jSuites = {\n    /** Current version */\n    version: '5.0.1',\n    /** Bind new extensions to Jsuites */\n    setExtensions: function(o) {\n        if (typeof(o) == 'object') {\n            var k = Object.keys(o);\n            for (var i = 0; i < k.length; i++) {\n                jSuites[k[i]] = o[k[i]];\n            }\n        }\n    },\n    // Helpers\n    tracking,\n    ...dictionary,\n    ...helpers,\n    path,\n    sorting,\n    lazyLoading,\n    // Plugins\n    ajax,\n    animation,\n    calendar,\n    color,\n    contextmenu,\n    dropdown,\n    editor,\n    floating,\n    form,\n    mask,\n    modal,\n    notification,\n    palette,\n    picker,\n    progressbar,\n    rating,\n    search,\n    slider,\n    tabs,\n    tags,\n    toolbar,\n    upload,\n    validations,\n}\n\n// Legacy\njSuites.image = upload;\njSuites.image.create = function(data) {\n    var img = document.createElement('img');\n    img.setAttribute('src', data.file);\n    img.className = 'jfile';\n    img.setAttribute('tabindex', -1);\n    img.content = data;\n\n    return img;\n}\n\njSuites.tracker = form;\njSuites.loading = animation.loading;\njSuites.sha512 = sha512;\n\n\n/** Core events */\nvar Events = function() {\n\n    document.jsuitesComponents = [];\n\n    var find = function(DOMElement, component) {\n        if (DOMElement[component.type] && DOMElement[component.type] == component) {\n            return true;\n        }\n        if (DOMElement.component && DOMElement.component == component) {\n            return true;\n        }\n        if (DOMElement.parentNode) {\n            return find(DOMElement.parentNode, component);\n        }\n        return false;\n    }\n\n    var isOpened = function(e) {\n        if (document.jsuitesComponents && document.jsuitesComponents.length > 0) {\n            for (var i = 0; i < document.jsuitesComponents.length; i++) {\n                if (document.jsuitesComponents[i] && ! find(e, document.jsuitesComponents[i])) {\n                    document.jsuitesComponents[i].close();\n                }\n            }\n        }\n    }\n\n    // Width of the border\n    var cornerSize = 15;\n\n    // Current element\n    var element = null;\n\n    // Controllers\n    var editorAction = false;\n\n    // Event state\n    var state = {\n        x: null,\n        y: null,\n    }\n\n    // Tooltip element\n    var tooltip = document.createElement('div')\n    tooltip.classList.add('jtooltip');\n\n    // Events\n    var mouseDown = function(e) {\n        // Check if this is the floating\n        var item = jSuites.findElement(e.target, 'jpanel');\n        // Jfloating found\n        if (item && ! item.classList.contains(\"readonly\")) {\n            // Add focus to the chart container\n            item.focus();\n            // Keep the tracking information\n            var rect = e.target.getBoundingClientRect();\n            editorAction = {\n                e: item,\n                x: e.clientX,\n                y: e.clientY,\n                w: rect.width,\n                h: rect.height,\n                d: item.style.cursor,\n                resizing: item.style.cursor ? true : false,\n                actioned: false,\n            }\n\n            // Make sure width and height styling is OK\n            if (! item.style.width) {\n                item.style.width = rect.width + 'px';\n            }\n\n            if (! item.style.height) {\n                item.style.height = rect.height + 'px';\n            }\n\n            // Remove any selection from the page\n            var s = window.getSelection();\n            if (s.rangeCount) {\n                for (var i = 0; i < s.rangeCount; i++) {\n                    s.removeRange(s.getRangeAt(i));\n                }\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n        } else {\n            // No floating action found\n            editorAction = false;\n        }\n\n        // Verify current components tracking\n        if (e.changedTouches && e.changedTouches[0]) {\n            var x = e.changedTouches[0].clientX;\n            var y = e.changedTouches[0].clientY;\n        } else {\n            var x = e.clientX;\n            var y = e.clientY;\n        }\n\n        // Which component I am clicking\n        var path = e.path || (e.composedPath && e.composedPath());\n\n        // If path available get the first element in the chain\n        if (path) {\n            element = path[0];\n        } else {\n            // Try to guess using the coordinates\n            if (e.target && e.target.shadowRoot) {\n                var d = e.target.shadowRoot;\n            } else {\n                var d = document;\n            }\n            // Get the first target element\n            element = d.elementFromPoint(x, y);\n        }\n\n        isOpened(element);\n    }\n\n    var mouseUp = function(e) {\n        if (editorAction && editorAction.e) {\n            if (typeof(editorAction.e.refresh) == 'function' && state.actioned) {\n                editorAction.e.refresh();\n            }\n            editorAction.e.style.cursor = '';\n        }\n\n        // Reset\n        state = {\n            x: null,\n            y: null,\n        }\n\n        editorAction = false;\n    }\n\n    var mouseMove = function(e) {\n        if (editorAction) {\n            var x = e.clientX || e.pageX;\n            var y = e.clientY || e.pageY;\n\n            // Action on going\n            if (! editorAction.resizing) {\n                if (state.x == null && state.y == null) {\n                    state.x = x;\n                    state.y = y;\n                }\n\n                var dx = x - state.x;\n                var dy = y - state.y;\n                var top = editorAction.e.offsetTop + dy;\n                var left = editorAction.e.offsetLeft + dx;\n\n                // Update position\n                editorAction.e.style.top = top + 'px';\n                editorAction.e.style.left = left + 'px';\n                editorAction.e.style.cursor = \"move\";\n\n                state.x = x;\n                state.y = y;\n\n\n                // Update element\n                if (typeof(editorAction.e.refresh) == 'function') {\n                    state.actioned = true;\n                    editorAction.e.refresh('position', top, left);\n                }\n            } else {\n                var width = null;\n                var height = null;\n\n                if (editorAction.d == 'e-resize' || editorAction.d == 'ne-resize' || editorAction.d == 'se-resize') {\n                    // Update width\n                    width = editorAction.w + (x - editorAction.x);\n                    editorAction.e.style.width = width + 'px';\n\n                    // Update Height\n                    if (e.shiftKey) {\n                        var newHeight = (x - editorAction.x) * (editorAction.h / editorAction.w);\n                        height = editorAction.h + newHeight;\n                        editorAction.e.style.height = height + 'px';\n                    } else {\n                        var newHeight = false;\n                    }\n                }\n\n                if (! newHeight) {\n                    if (editorAction.d == 's-resize' || editorAction.d == 'se-resize' || editorAction.d == 'sw-resize') {\n                        height = editorAction.h + (y - editorAction.y);\n                        editorAction.e.style.height = height + 'px';\n                    }\n                }\n\n                // Update element\n                if (typeof(editorAction.e.refresh) == 'function') {\n                    state.actioned = true;\n                    editorAction.e.refresh('dimensions', width, height);\n                }\n            }\n        } else {\n            // Resizing action\n            var item = jSuites.findElement(e.target, 'jpanel');\n            // Found eligible component\n            if (item) {\n                if (item.getAttribute('tabindex')) {\n                    var rect = item.getBoundingClientRect();\n                    if (e.clientY - rect.top < cornerSize) {\n                        if (rect.width - (e.clientX - rect.left) < cornerSize) {\n                            item.style.cursor = 'ne-resize';\n                        } else if (e.clientX - rect.left < cornerSize) {\n                            item.style.cursor = 'nw-resize';\n                        } else {\n                            item.style.cursor = 'n-resize';\n                        }\n                    } else if (rect.height - (e.clientY - rect.top) < cornerSize) {\n                        if (rect.width - (e.clientX - rect.left) < cornerSize) {\n                            item.style.cursor = 'se-resize';\n                        } else if (e.clientX - rect.left < cornerSize) {\n                            item.style.cursor = 'sw-resize';\n                        } else {\n                            item.style.cursor = 's-resize';\n                        }\n                    } else if (rect.width - (e.clientX - rect.left) < cornerSize) {\n                        item.style.cursor = 'e-resize';\n                    } else if (e.clientX - rect.left < cornerSize) {\n                        item.style.cursor = 'w-resize';\n                    } else {\n                        item.style.cursor = '';\n                    }\n                }\n            }\n        }\n    }\n\n    var mouseOver = function(e) {\n        var message = e.target.getAttribute('data-tooltip');\n        if (message) {\n            // Instructions\n            tooltip.innerText = message;\n\n            // Position\n            if (e.changedTouches && e.changedTouches[0]) {\n                var x = e.changedTouches[0].clientX;\n                var y = e.changedTouches[0].clientY;\n            } else {\n                var x = e.clientX;\n                var y = e.clientY;\n            }\n\n            tooltip.style.top = y + 'px';\n            tooltip.style.left = x + 'px';\n            document.body.appendChild(tooltip);\n        } else if (tooltip.innerText) {\n            tooltip.innerText = '';\n            document.body.removeChild(tooltip);\n        }\n    }\n\n    var dblClick = function(e) {\n        var item = jSuites.findElement(e.target, 'jpanel');\n        if (item && typeof(item.dblclick) == 'function') {\n            // Create edition\n            item.dblclick(e);\n        }\n    }\n\n    var contextMenu = function(e) {\n        var item = document.activeElement;\n        if (item && typeof(item.contextmenu) == 'function') {\n            // Create edition\n            item.contextmenu(e);\n\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        } else {\n            // Search for possible context menus\n            item = jSuites.findElement(e.target, function(o) {\n                return o.tagName && o.getAttribute('aria-contextmenu-id');\n            });\n\n            if (item) {\n                var o = document.querySelector('#' + item);\n                if (! o) {\n                    console.error('JSUITES: contextmenu id not found: ' + item);\n                } else {\n                    o.contextmenu.open(e);\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                }\n            }\n        }\n    }\n\n    var keyDown = function(e) {\n        var item = document.activeElement;\n        if (item) {\n            if (e.key == \"Delete\" && typeof(item.delete) == 'function') {\n                item.delete();\n                e.preventDefault();\n                e.stopImmediatePropagation();\n            }\n        }\n\n        if (document.jsuitesComponents && document.jsuitesComponents.length) {\n            if (item = document.jsuitesComponents[document.jsuitesComponents.length - 1]) {\n                if (e.key == \"Escape\" && typeof(item.isOpened) == 'function' && typeof(item.close) == 'function') {\n                    if (item.isOpened()) {\n                        item.close();\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                    }\n                }\n            }\n        }\n    }\n\n    document.addEventListener('mouseup', mouseUp);\n    document.addEventListener(\"mousedown\", mouseDown);\n    document.addEventListener('mousemove', mouseMove);\n    document.addEventListener('mouseover', mouseOver);\n    document.addEventListener('dblclick', dblClick);\n    document.addEventListener('keydown', keyDown);\n    document.addEventListener('contextmenu', contextMenu);\n}\n\nif (typeof(document) !== \"undefined\" && ! document.jsuitesComponents) {\n    Events();\n}\n\nexport default jSuites;", "import Helpers from '../utils/helpers';\nimport Toolbar from './toolbar';\nimport Color from './color';\nimport Ajax from './ajax';\n\nfunction Editor() {\n    var Component = (function(el, options) {\n        // New instance\n        var obj = { type:'editor' };\n        obj.options = {};\n\n        // Default configuration\n        var defaults = {\n            // Load data from a remove location\n            url: null,\n            // Initial HTML content\n            value: '',\n            // Initial snippet\n            snippet: null,\n            // Add toolbar\n            toolbar: true,\n            toolbarOnTop: false,\n            // Website parser is to read websites and images from cross domain\n            remoteParser: null,\n            // Placeholder\n            placeholder: null,\n            // Parse URL\n            filterPaste: true,\n            // Accept drop files\n            dropZone: true,\n            dropAsSnippet: false,\n            acceptImages: true,\n            acceptFiles: false,\n            maxFileSize: 5000000,\n            allowImageResize: true,\n            // Style\n            maxHeight: null,\n            height: null,\n            focus: false,\n            // Events\n            onclick: null,\n            onfocus: null,\n            onblur: null,\n            onload: null,\n            onkeyup: null,\n            onkeydown: null,\n            onchange: null,\n            extensions: null,\n            type: null,\n        };\n\n        // Loop through our object\n        for (var property in defaults) {\n            if (options && options.hasOwnProperty(property)) {\n                obj.options[property] = options[property];\n            } else {\n                obj.options[property] = defaults[property];\n            }\n        }\n\n        // Private controllers\n        var editorTimer = null;\n        var editorAction = null;\n        var files = [];\n\n        // Keep the reference for the container\n        obj.el = el;\n\n        if (typeof(obj.options.onclick) == 'function') {\n            el.onclick = function(e) {\n                obj.options.onclick(el, obj, e);\n            }\n        }\n\n        // Prepare container\n        el.classList.add('jeditor-container');\n\n        // Snippet\n        var snippet = document.createElement('div');\n        snippet.className = 'jsnippet';\n        snippet.setAttribute('contenteditable', false);\n\n        // Toolbar\n        var toolbar = document.createElement('div');\n        toolbar.className = 'jeditor-toolbar';\n\n        obj.editor = document.createElement('div');\n        obj.editor.setAttribute('contenteditable', true);\n        obj.editor.setAttribute('spellcheck', false);\n        obj.editor.classList.add('jeditor');\n\n        // Placeholder\n        if (obj.options.placeholder) {\n            obj.editor.setAttribute('data-placeholder', obj.options.placeholder);\n        }\n\n        // Max height\n        if (obj.options.maxHeight || obj.options.height) {\n            obj.editor.style.overflowY = 'auto';\n\n            if (obj.options.maxHeight) {\n                obj.editor.style.maxHeight = obj.options.maxHeight;\n            }\n            if (obj.options.height) {\n                obj.editor.style.height = obj.options.height;\n            }\n        }\n\n        // Set editor initial value\n        if (obj.options.url) {\n            Ajax({\n                url: obj.options.url,\n                dataType: 'html',\n                success: function(result) {\n                    obj.editor.innerHTML = result;\n\n                    Component.setCursor(obj.editor, obj.options.focus == 'initial' ? true : false);\n                }\n            })\n        } else {\n            if (obj.options.value) {\n                obj.editor.innerHTML = obj.options.value;\n            } else {\n                // Create from existing elements\n                for (var i = 0; i < el.children.length; i++) {\n                    obj.editor.appendChild(el.children[i]);\n                }\n            }\n        }\n\n        // Make sure element is empty\n        el.innerHTML = '';\n\n        /**\n         * Onchange event controllers\n         */\n        var change = function(e) {\n            if (typeof(obj.options.onchange) == 'function') {\n                obj.options.onchange(el, obj, e);\n            }\n\n            // Update value\n            obj.options.value = obj.getData();\n\n            // Lemonade JS\n            if (el.value != obj.options.value) {\n                el.value = obj.options.value;\n                if (typeof(el.oninput) == 'function') {\n                    el.oninput({\n                        type: 'input',\n                        target: el,\n                        value: el.value\n                    });\n                }\n            }\n        }\n\n        /**\n         * Extract images from a HTML string\n         */\n        var extractImageFromHtml = function(html) {\n            // Create temp element\n            var div = document.createElement('div');\n            div.innerHTML = html;\n\n            // Extract images\n            var img = div.querySelectorAll('img');\n\n            if (img.length) {\n                for (var i = 0; i < img.length; i++) {\n                    obj.addImage(img[i].src);\n                }\n            }\n        }\n\n        /**\n         * Insert node at caret\n         */\n        var insertNodeAtCaret = function(newNode) {\n            var sel, range;\n\n            if (window.getSelection) {\n                sel = window.getSelection();\n                if (sel.rangeCount) {\n                    range = sel.getRangeAt(0);\n                    var selectedText = range.toString();\n                    range.deleteContents();\n                    range.insertNode(newNode);\n                    // move the cursor after element\n                    range.setStartAfter(newNode);\n                    range.setEndAfter(newNode);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n            }\n        }\n\n        var updateTotalImages = function() {\n            var o = null;\n            if (o = snippet.children[0]) {\n                // Make sure is a grid\n                if (! o.classList.contains('jslider-grid')) {\n                    o.classList.add('jslider-grid');\n                }\n                // Quantify of images\n                var number = o.children.length;\n                // Set the configuration of the grid\n                o.setAttribute('data-number', number > 4 ? 4 : number);\n                // Total of images inside the grid\n                if (number > 4) {\n                    o.setAttribute('data-total', number - 4);\n                } else {\n                    o.removeAttribute('data-total');\n                }\n            }\n        }\n\n        /**\n         * Append image to the snippet\n         */\n        var appendImage = function(image) {\n            if (! snippet.innerHTML) {\n                obj.appendSnippet({});\n            }\n            snippet.children[0].appendChild(image);\n            updateTotalImages();\n        }\n\n        /**\n         * Append snippet\n         * @Param object data\n         */\n        obj.appendSnippet = function(data) {\n            // Reset snippet\n            snippet.innerHTML = '';\n\n            // Attributes\n            var a = [ 'image', 'title', 'description', 'host', 'url' ];\n\n            for (var i = 0; i < a.length; i++) {\n                var div = document.createElement('div');\n                div.className = 'jsnippet-' + a[i];\n                div.setAttribute('data-k', a[i]);\n                snippet.appendChild(div);\n                if (data[a[i]]) {\n                    if (a[i] == 'image') {\n                        if (! Array.isArray(data.image)) {\n                            data.image = [ data.image ];\n                        }\n                        for (var j = 0; j < data.image.length; j++) {\n                            var img = document.createElement('img');\n                            img.src = data.image[j];\n                            div.appendChild(img);\n                        }\n                    } else {\n                        div.innerHTML = data[a[i]];\n                    }\n                }\n            }\n\n            obj.editor.appendChild(document.createElement('br'));\n            obj.editor.appendChild(snippet);\n        }\n\n        /**\n         * Set editor value\n         */\n        obj.setData = function(o) {\n            if (typeof(o) == 'object') {\n                obj.editor.innerHTML = o.content;\n            } else {\n                obj.editor.innerHTML = o;\n            }\n\n            if (obj.options.focus) {\n                Component.setCursor(obj.editor, true);\n            }\n\n            // Reset files container\n            files = [];\n        }\n\n        obj.getFiles = function() {\n            var f = obj.editor.querySelectorAll('.jfile');\n            var d = [];\n            for (var i = 0; i < f.length; i++) {\n                if (files[f[i].src]) {\n                    d.push(files[f[i].src]);\n                }\n            }\n            return d;\n        }\n\n        obj.getText = function() {\n            return obj.editor.innerText;\n        }\n\n        /**\n         * Get editor data\n         */\n        obj.getData = function(json) {\n            if (! json) {\n                var data = obj.editor.innerHTML;\n            } else {\n                var data = {\n                    content : '',\n                }\n\n                // Get snippet\n                if (snippet.innerHTML) {\n                    var index = 0;\n                    data.snippet = {};\n                    for (var i = 0; i < snippet.children.length; i++) {\n                        // Get key from element\n                        var key = snippet.children[i].getAttribute('data-k');\n                        if (key) {\n                            if (key == 'image') {\n                                if (! data.snippet.image) {\n                                    data.snippet.image = [];\n                                }\n                                // Get all images\n                                for (var j = 0; j < snippet.children[i].children.length; j++) {\n                                    data.snippet.image.push(snippet.children[i].children[j].getAttribute('src'))\n                                }\n                            } else {\n                                data.snippet[key] = snippet.children[i].innerHTML;\n                            }\n                        }\n                    }\n                }\n\n                // Get files\n                var f = Object.keys(files);\n                if (f.length) {\n                    data.files = [];\n                    for (var i = 0; i < f.length; i++) {\n                        data.files.push(files[f[i]]);\n                    }\n                }\n\n                // Get content\n                var d = document.createElement('div');\n                d.innerHTML = obj.editor.innerHTML;\n                var s = d.querySelector('.jsnippet');\n                if (s) {\n                    s.remove();\n                }\n\n                var text = d.innerHTML;\n                text = text.replace(/<br>/g, \"\\n\");\n                text = text.replace(/<\\/div>/g, \"<\\/div>\\n\");\n                text = text.replace(/<(?:.|\\n)*?>/gm, \"\");\n                data.content = text.trim();\n\n                // Process extensions\n                processExtensions('getData', data);\n            }\n\n            return data;\n        }\n\n        // Reset\n        obj.reset = function() {\n            obj.editor.innerHTML = '';\n            snippet.innerHTML = '';\n            files = [];\n        }\n\n        obj.addPdf = function(data) {\n            if (data.result.substr(0,4) != 'data') {\n                console.error('Invalid source');\n            } else {\n                var canvas = document.createElement('canvas');\n                canvas.width = 60;\n                canvas.height = 60;\n\n                var img = new Image();\n                var ctx = canvas.getContext('2d');\n                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n                canvas.toBlob(function(blob) {\n                    var newImage = document.createElement('img');\n                    newImage.src = window.URL.createObjectURL(blob);\n                    newImage.title = data.name;\n                    newImage.className = 'jfile pdf';\n\n                    files[newImage.src] = {\n                        file: newImage.src,\n                        extension: 'pdf',\n                        content: data.result,\n                    }\n\n                    //insertNodeAtCaret(newImage);\n                    document.execCommand('insertHtml', false, newImage.outerHTML);\n                });\n            }\n        }\n\n        obj.addImage = function(src, asSnippet) {\n            if (! src) {\n                src = '';\n            }\n\n            if (src.substr(0,4) != 'data' && ! obj.options.remoteParser) {\n                console.error('remoteParser not defined in your initialization');\n            } else {\n                // This is to process cross domain images\n                if (src.substr(0,4) == 'data') {\n                    var extension = src.split(';')\n                    extension = extension[0].split('/');\n                    extension = extension[1];\n                } else {\n                    var extension = src.substr(src.lastIndexOf('.') + 1);\n                    // Work for cross browsers\n                    src = obj.options.remoteParser + src;\n                }\n\n                var img = new Image();\n\n                img.onload = function onload() {\n                    var canvas = document.createElement('canvas');\n                    canvas.width = img.width;\n                    canvas.height = img.height;\n\n                    var ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n                    canvas.toBlob(function(blob) {\n                        var newImage = document.createElement('img');\n                        newImage.src = window.URL.createObjectURL(blob);\n                        newImage.classList.add('jfile');\n                        newImage.setAttribute('tabindex', '900');\n                        newImage.setAttribute('width', img.width);\n                        newImage.setAttribute('height', img.height);\n                        files[newImage.src] = {\n                            file: newImage.src,\n                            extension: extension,\n                            content: canvas.toDataURL(),\n                        }\n\n                        if (obj.options.dropAsSnippet || asSnippet) {\n                            appendImage(newImage);\n                            // Just to understand the attachment is part of a snippet\n                            files[newImage.src].snippet = true;\n                        } else {\n                            //insertNodeAtCaret(newImage);\n                            document.execCommand('insertHtml', false, newImage.outerHTML);\n                        }\n\n                        change();\n                    });\n                };\n\n                img.src = src;\n            }\n        }\n\n        obj.addFile = function(files) {\n            var reader = [];\n\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].size > obj.options.maxFileSize) {\n                    alert('The file is too big');\n                } else {\n                    // Only PDF or Images\n                    var type = files[i].type.split('/');\n\n                    if (type[0] == 'image') {\n                        type = 1;\n                    } else if (type[1] == 'pdf') {\n                        type = 2;\n                    } else {\n                        type = 0;\n                    }\n\n                    if (type) {\n                        // Create file\n                        reader[i] = new FileReader();\n                        reader[i].index = i;\n                        reader[i].type = type;\n                        reader[i].name = files[i].name;\n                        reader[i].date = files[i].lastModified;\n                        reader[i].size = files[i].size;\n                        reader[i].addEventListener(\"load\", function (data) {\n                            // Get result\n                            if (data.target.type == 2) {\n                                if (obj.options.acceptFiles == true) {\n                                    obj.addPdf(data.target);\n                                }\n                            } else {\n                                obj.addImage(data.target.result);\n                            }\n                        }, false);\n\n                        reader[i].readAsDataURL(files[i])\n                    } else {\n                        alert('The extension is not allowed');\n                    }\n                }\n            }\n        }\n\n        // Destroy\n        obj.destroy = function() {\n            obj.editor.removeEventListener('mouseup', editorMouseUp);\n            obj.editor.removeEventListener('mousedown', editorMouseDown);\n            obj.editor.removeEventListener('mousemove', editorMouseMove);\n            obj.editor.removeEventListener('keyup', editorKeyUp);\n            obj.editor.removeEventListener('keydown', editorKeyDown);\n            obj.editor.removeEventListener('dragstart', editorDragStart);\n            obj.editor.removeEventListener('dragenter', editorDragEnter);\n            obj.editor.removeEventListener('dragover', editorDragOver);\n            obj.editor.removeEventListener('drop', editorDrop);\n            obj.editor.removeEventListener('paste', editorPaste);\n            obj.editor.removeEventListener('blur', editorBlur);\n            obj.editor.removeEventListener('focus', editorFocus);\n\n            el.editor = null;\n            el.classList.remove('jeditor-container');\n\n            toolbar.remove();\n            snippet.remove();\n            obj.editor.remove();\n        }\n\n        obj.upload = function() {\n            Helpers.click(obj.file);\n        }\n\n        // Elements to be removed\n        var remove = [\n            HTMLUnknownElement,\n            HTMLAudioElement,\n            HTMLEmbedElement,\n            HTMLIFrameElement,\n            HTMLTextAreaElement,\n            HTMLInputElement,\n            HTMLScriptElement\n        ];\n\n        // Valid properties\n        var validProperty = ['width', 'height', 'align', 'border', 'src', 'tabindex'];\n\n        // Valid CSS attributes\n        var validStyle = ['color', 'font-weight', 'font-size', 'background', 'background-color', 'margin'];\n\n        var parse = function(element) {\n           // Remove attributes\n           if (element.attributes && element.attributes.length) {\n               var image = null;\n               var style = null;\n               // Process style attribute\n               var elementStyle = element.getAttribute('style');\n               if (elementStyle) {\n                   style = [];\n                   var t = elementStyle.split(';');\n                   for (var j = 0; j < t.length; j++) {\n                       var v = t[j].trim().split(':');\n                       if (validStyle.indexOf(v[0].trim()) >= 0) {\n                           var k = v.shift();\n                           var v = v.join(':');\n                           style.push(k + ':' + v);\n                       }\n                   }\n               }\n               // Process image\n               if (element.tagName.toUpperCase() == 'IMG') {\n                   if (! obj.options.acceptImages || ! element.src) {\n                       element.parentNode.removeChild(element);\n                   } else {\n                       // Check if is data\n                       element.setAttribute('tabindex', '900');\n                       // Check attributes for persistence\n                       obj.addImage(element.src);\n                   }\n               }\n               // Remove attributes\n               var attr = [];\n               for (var i = 0; i < element.attributes.length; i++) {\n                   attr.push(element.attributes[i].name);\n               }\n               if (attr.length) {\n                   attr.forEach(function(v) {\n                       if (validProperty.indexOf(v) == -1) {\n                           element.removeAttribute(v);\n                       } else {\n                           // Protection XSS\n                           if (element.attributes[i].value.indexOf('<') !== -1) {\n                               element.attributes[i].value.replace('<', '&#60;');\n                           }\n                       }\n                   });\n               }\n               element.style = '';\n               // Add valid style\n               if (style && style.length) {\n                   element.setAttribute('style', style.join(';'));\n               }\n           }\n           // Parse children\n           if (element.children.length) {\n               for (var i = 0; i < element.children.length; i++) {\n                   parse(element.children[i]);\n               }\n           }\n\n           if (remove.indexOf(element.constructor) >= 0) {\n               element.remove();\n           }\n        }\n\n        var select = function(e) {\n            var s = window.getSelection()\n            var r = document.createRange();\n            r.selectNode(e);\n            s.addRange(r)\n        }\n\n        var filter = function(data) {\n            if (data) {\n                data = data.replace(new RegExp('<!--(.*?)-->', 'gsi'), '');\n            }\n            var parser = new DOMParser();\n            var d = parser.parseFromString(data, \"text/html\");\n            parse(d);\n            var span = document.createElement('span');\n            span.innerHTML = d.firstChild.innerHTML;\n            return span;\n        }\n\n        var editorPaste = function(e) {\n            if (obj.options.filterPaste == true) {\n                if (e.clipboardData || e.originalEvent.clipboardData) {\n                    var html = (e.originalEvent || e).clipboardData.getData('text/html');\n                    var text = (e.originalEvent || e).clipboardData.getData('text/plain');\n                    var file = (e.originalEvent || e).clipboardData.files\n                } else if (window.clipboardData) {\n                    var html = window.clipboardData.getData('Html');\n                    var text = window.clipboardData.getData('Text');\n                    var file = window.clipboardData.files\n                }\n\n                if (file.length) {\n                    // Paste a image from the clipboard\n                    obj.addFile(file);\n                } else {\n                    if (! html) {\n                        html = text.split('\\r\\n');\n                        if (! e.target.innerText) {\n                            html.map(function(v) {\n                                var d = document.createElement('div');\n                                d.innerText = v;\n                                obj.editor.appendChild(d);\n                            });\n                        } else {\n                            html = html.map(function(v) {\n                                return '<div>' + v + '</div>';\n                            });\n                            document.execCommand('insertHtml', false, html.join(''));\n                        }\n                    } else {\n                        var d = filter(html);\n                        // Paste to the editor\n                        //insertNodeAtCaret(d);\n                        document.execCommand('insertHtml', false, d.innerHTML);\n                    }\n                }\n\n                e.preventDefault();\n            }\n        }\n\n        var editorDragStart = function(e) {\n            if (editorAction && editorAction.e) {\n                e.preventDefault();\n            }\n        }\n\n        var editorDragEnter = function(e) {\n            if (editorAction || obj.options.dropZone == false) {\n                // Do nothing\n            } else {\n                el.classList.add('jeditor-dragging');\n                e.preventDefault();\n            }\n        }\n\n        var editorDragOver = function(e) {\n            if (editorAction || obj.options.dropZone == false) {\n                // Do nothing\n            } else {\n                if (editorTimer) {\n                    clearTimeout(editorTimer);\n                }\n\n                editorTimer = setTimeout(function() {\n                    el.classList.remove('jeditor-dragging');\n                }, 100);\n                e.preventDefault();\n            }\n        }\n\n        var editorDrop = function(e) {\n            if (editorAction || obj.options.dropZone == false) {\n                // Do nothing\n            } else {\n                // Position caret on the drop\n                var range = null;\n                if (document.caretRangeFromPoint) {\n                    range=document.caretRangeFromPoint(e.clientX, e.clientY);\n                } else if (e.rangeParent) {\n                    range=document.createRange();\n                    range.setStart(e.rangeParent,e.rangeOffset);\n                }\n                var sel = window.getSelection();\n                sel.removeAllRanges();\n                sel.addRange(range);\n                sel.anchorNode.parentNode.focus();\n\n                var html = (e.originalEvent || e).dataTransfer.getData('text/html');\n                var text = (e.originalEvent || e).dataTransfer.getData('text/plain');\n                var file = (e.originalEvent || e).dataTransfer.files;\n\n                if (file.length) {\n                    obj.addFile(file);\n                } else if (text) {\n                    extractImageFromHtml(html);\n                }\n\n                el.classList.remove('jeditor-dragging');\n                e.preventDefault();\n            }\n        }\n\n        var editorBlur = function(e) {\n            // Process extensions\n            processExtensions('onevent', e);\n            // Apply changes\n            change(e);\n            // Blur\n            if (typeof(obj.options.onblur) == 'function') {\n                obj.options.onblur(el, obj, e);\n            }\n        }\n\n        var editorFocus = function(e) {\n            // Focus\n            if (typeof(obj.options.onfocus) == 'function') {\n                obj.options.onfocus(el, obj, e);\n            }\n        }\n\n        var editorKeyUp = function(e) {\n            if (! obj.editor.innerHTML) {\n                obj.editor.innerHTML = '<div><br></div>';\n            }\n            if (typeof(obj.options.onkeyup) == 'function') {\n                obj.options.onkeyup(el, obj, e);\n            }\n        }\n\n        var editorKeyDown = function(e) {\n            // Process extensions\n            processExtensions('onevent', e);\n\n            if (e.key == 'Delete') {\n                if (e.target.tagName == 'IMG') {\n                    var parent = e.target.parentNode;\n                    select(e.target);\n                    if (parent.classList.contains('jsnippet-image')) {\n                        updateTotalImages();\n                    }\n                }\n            }\n\n            if (typeof(obj.options.onkeydown) == 'function') {\n                obj.options.onkeydown(el, obj, e);\n            }\n        }\n\n        var editorMouseUp = function(e) {\n            if (editorAction && editorAction.e) {\n                editorAction.e.classList.remove('resizing');\n\n                if (editorAction.e.changed == true) {\n                    var image = editorAction.e.cloneNode()\n                    image.width = parseInt(editorAction.e.style.width) || editorAction.e.getAttribute('width');\n                    image.height = parseInt(editorAction.e.style.height) || editorAction.e.getAttribute('height');\n                    editorAction.e.style.width = '';\n                    editorAction.e.style.height = '';\n                    select(editorAction.e);\n                    document.execCommand('insertHtml', false, image.outerHTML);\n                }\n            }\n\n            editorAction = false;\n        }\n\n        var editorMouseDown = function(e) {\n            var close = function(snippet) {\n                var rect = snippet.getBoundingClientRect();\n                if (rect.width - (e.clientX - rect.left) < 40 && e.clientY - rect.top < 40) {\n                    snippet.innerHTML = '';\n                    snippet.remove();\n                }\n            }\n\n            if (e.target.tagName == 'IMG') {\n                if (e.target.style.cursor) {\n                    var rect = e.target.getBoundingClientRect();\n                    editorAction = {\n                        e: e.target,\n                        x: e.clientX,\n                        y: e.clientY,\n                        w: rect.width,\n                        h: rect.height,\n                        d: e.target.style.cursor,\n                    }\n\n                    if (! e.target.getAttribute('width')) {\n                        e.target.setAttribute('width', rect.width)\n                    }\n\n                    if (! e.target.getAttribute('height')) {\n                        e.target.setAttribute('height', rect.height)\n                    }\n\n                    var s = window.getSelection();\n                    if (s.rangeCount) {\n                        for (var i = 0; i < s.rangeCount; i++) {\n                            s.removeRange(s.getRangeAt(i));\n                        }\n                    }\n\n                    e.target.classList.add('resizing');\n                } else {\n                    editorAction = true;\n                }\n            } else {\n                if (e.target.classList.contains('jsnippet')) {\n                    close(e.target);\n                } else if (e.target.parentNode.classList.contains('jsnippet')) {\n                    close(e.target.parentNode);\n                }\n\n                editorAction = true;\n            }\n        }\n\n        var editorMouseMove = function(e) {\n            if (e.target.tagName == 'IMG' && ! e.target.parentNode.classList.contains('jsnippet-image') && obj.options.allowImageResize == true) {\n                if (e.target.getAttribute('tabindex')) {\n                    var rect = e.target.getBoundingClientRect();\n                    if (e.clientY - rect.top < 5) {\n                        if (rect.width - (e.clientX - rect.left) < 5) {\n                            e.target.style.cursor = 'ne-resize';\n                        } else if (e.clientX - rect.left < 5) {\n                            e.target.style.cursor = 'nw-resize';\n                        } else {\n                            e.target.style.cursor = 'n-resize';\n                        }\n                    } else if (rect.height - (e.clientY - rect.top) < 5) {\n                        if (rect.width - (e.clientX - rect.left) < 5) {\n                            e.target.style.cursor = 'se-resize';\n                        } else if (e.clientX - rect.left < 5) {\n                            e.target.style.cursor = 'sw-resize';\n                        } else {\n                            e.target.style.cursor = 's-resize';\n                        }\n                    } else if (rect.width - (e.clientX - rect.left) < 5) {\n                        e.target.style.cursor = 'e-resize';\n                    } else if (e.clientX - rect.left < 5) {\n                        e.target.style.cursor = 'w-resize';\n                    } else {\n                        e.target.style.cursor = '';\n                    }\n                }\n            }\n\n            // Move\n            if (e.which == 1 && editorAction && editorAction.d) {\n                if (editorAction.d == 'e-resize' || editorAction.d == 'ne-resize' ||  editorAction.d == 'se-resize') {\n                    editorAction.e.style.width = (editorAction.w + (e.clientX - editorAction.x));\n\n                    if (e.shiftKey) {\n                        var newHeight = (e.clientX - editorAction.x) * (editorAction.h / editorAction.w);\n                        editorAction.e.style.height = editorAction.h + newHeight;\n                    } else {\n                        var newHeight =  null;\n                    }\n                }\n\n                if (! newHeight) {\n                    if (editorAction.d == 's-resize' || editorAction.d == 'se-resize' || editorAction.d == 'sw-resize') {\n                        if (! e.shiftKey) {\n                            editorAction.e.style.height = editorAction.h + (e.clientY - editorAction.y);\n                        }\n                    }\n                }\n\n                editorAction.e.changed = true;\n            }\n        }\n\n        var processExtensions = function(method, data) {\n            if (obj.options.extensions) {\n                var ext = Object.keys(obj.options.extensions);\n                if (ext.length) {\n                    for (var i = 0; i < ext.length; i++)\n                        if (obj.options.extensions[ext[i]] && typeof(obj.options.extensions[ext[i]][method]) == 'function') {\n                            obj.options.extensions[ext[i]][method].call(obj, data);\n                        }\n                }\n            }\n        }\n\n        var loadExtensions = function() {\n            if (obj.options.extensions) {\n                var ext = Object.keys(obj.options.extensions);\n                if (ext.length) {\n                    for (var i = 0; i < ext.length; i++) {\n                        if (obj.options.extensions[ext[i]] && typeof (obj.options.extensions[ext[i]]) == 'function') {\n                            obj.options.extensions[ext[i]] = obj.options.extensions[ext[i]](el, obj);\n                        }\n                    }\n                }\n            }\n        }\n\n        document.addEventListener('mouseup', editorMouseUp);\n        document.addEventListener('mousemove', editorMouseMove);\n        obj.editor.addEventListener('mousedown', editorMouseDown);\n        obj.editor.addEventListener('keyup', editorKeyUp);\n        obj.editor.addEventListener('keydown', editorKeyDown);\n        obj.editor.addEventListener('dragstart', editorDragStart);\n        obj.editor.addEventListener('dragenter', editorDragEnter);\n        obj.editor.addEventListener('dragover', editorDragOver);\n        obj.editor.addEventListener('drop', editorDrop);\n        obj.editor.addEventListener('paste', editorPaste);\n        obj.editor.addEventListener('focus', editorFocus);\n        obj.editor.addEventListener('blur', editorBlur);\n\n        // Append editor to the container\n        el.appendChild(obj.editor);\n        // Snippet\n        if (obj.options.snippet) {\n            obj.appendSnippet(obj.options.snippet);\n        }\n\n        // Add toolbar\n        if (obj.options.toolbar) {\n            // Default toolbar configuration\n            if (Array.isArray(obj.options.toolbar)) {\n                var toolbarOptions = {\n                    container: true,\n                    responsive: true,\n                    items: obj.options.toolbar\n                }\n            } else if (obj.options.toolbar === true) {\n                var toolbarOptions = {\n                    container: true,\n                    responsive: true,\n                    items: [],\n                }\n            } else {\n                var toolbarOptions = obj.options.toolbar;\n            }\n\n            // Default items\n            if (! (toolbarOptions.items && toolbarOptions.items.length)) {\n                toolbarOptions.items = Component.getDefaultToolbar(obj);\n            }\n\n            if (obj.options.toolbarOnTop) {\n                // Add class\n                el.classList.add('toolbar-on-top');\n                // Append to the DOM\n                el.insertBefore(toolbar, el.firstChild);\n            } else {\n                // Add padding to the editor\n                obj.editor.style.padding = '15px';\n                // Append to the DOM\n                el.appendChild(toolbar);\n            }\n\n            // Create toolbar\n            Toolbar(toolbar, toolbarOptions);\n\n            toolbar.addEventListener('click', function() {\n                obj.editor.focus();\n            })\n        }\n\n        // Upload file\n        obj.file = document.createElement('input');\n        obj.file.style.display = 'none';\n        obj.file.type = 'file';\n        obj.file.setAttribute('accept', 'image/*');\n        obj.file.onchange = function() {\n            obj.addFile(this.files);\n        }\n        el.appendChild(obj.file);\n\n        // Focus to the editor\n        if (obj.editor.innerHTML && obj.options.focus) {\n            Component.setCursor(obj.editor, obj.options.focus == 'initial' ? true : false);\n        }\n\n        // Change method\n        el.change = obj.setData;\n\n        // Global generic value handler\n        el.val = function(val) {\n            if (val === undefined) {\n                // Data type\n                var o = el.getAttribute('data-html') === 'true' ? false : true;\n                return obj.getData(o);\n            } else {\n                obj.setData(val);\n            }\n        }\n\n        loadExtensions();\n\n        el.editor = obj;\n\n        // Onload\n        if (typeof(obj.options.onload) == 'function') {\n            obj.options.onload(el, obj, obj.editor);\n        }\n\n        return obj;\n    });\n\n    Component.setCursor = function(element, first) {\n        element.focus();\n        document.execCommand('selectAll');\n        var sel = window.getSelection();\n        var range = sel.getRangeAt(0);\n        if (first == true) {\n            var node = range.startContainer;\n            var size = 0;\n        } else {\n            var node = range.endContainer;\n            var size = node.length;\n        }\n        range.setStart(node, size);\n        range.setEnd(node, size);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n\n    Component.getDefaultToolbar = function(obj) {\n\n        var color = function(a,b,c) {\n            if (! c.color) {\n                var t = null;\n                var colorPicker = Color(c, {\n                    onchange: function(o, v) {\n                        if (c.k === 'color') {\n                            document.execCommand('foreColor', false, v);\n                        } else {\n                            document.execCommand('backColor', false, v);\n                        }\n                    }\n                });\n                c.color.open();\n            }\n        }\n\n        var items = [];\n\n        items.push({\n            content: 'undo',\n            onclick: function() {\n                document.execCommand('undo');\n            }\n        });\n\n        items.push({\n            content: 'redo',\n            onclick: function() {\n                document.execCommand('redo');\n            }\n        });\n\n        items.push({\n            type: 'divisor'\n        });\n\n        if (obj.options.toolbarOnTop) {\n            items.push({\n                type: 'select',\n                width: '140px',\n                options: ['Default', 'Verdana', 'Arial', 'Courier New'],\n                render: function (e) {\n                    return '<span style=\"font-family:' + e + '\">' + e + '</span>';\n                },\n                onchange: function (a,b,c,d,e) {\n                    document.execCommand(\"fontName\", false, d);\n                }\n            });\n\n            items.push({\n                type: 'select',\n                content: 'format_size',\n                options: ['x-small', 'small', 'medium', 'large', 'x-large'],\n                render: function (e) {\n                    return '<span style=\"font-size:' + e + '\">' + e + '</span>';\n                },\n                onchange: function (a,b,c,d,e) {\n                    //var html = `<span style=\"font-size: ${c}\">${text}</span>`;\n                    //document.execCommand('insertHtml', false, html);\n                    document.execCommand(\"fontSize\", false, parseInt(e)+1);\n                    //var f = window.getSelection().anchorNode.parentNode\n                    //f.removeAttribute(\"size\");\n                    //f.style.fontSize = d;\n                }\n            });\n\n            items.push({\n                type: 'select',\n                options: ['format_align_left', 'format_align_center', 'format_align_right', 'format_align_justify'],\n                render: function (e) {\n                    return '<i class=\"material-icons\">' + e + '</i>';\n                },\n                onchange: function (a,b,c,d,e) {\n                    var options = ['JustifyLeft','justifyCenter','justifyRight','justifyFull'];\n                    document.execCommand(options[e]);\n                }\n            });\n\n            items.push({\n                type: 'divisor'\n            });\n\n            items.push({\n                content: 'format_color_text',\n                k: 'color',\n                onclick: color,\n            });\n\n            items.push({\n                content: 'format_color_fill',\n                k: 'background-color',\n                onclick: color,\n            });\n        }\n\n        items.push({\n            content: 'format_bold',\n            onclick: function(a,b,c) {\n                document.execCommand('bold');\n\n                if (document.queryCommandState(\"bold\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_italic',\n            onclick: function(a,b,c) {\n                document.execCommand('italic');\n\n                if (document.queryCommandState(\"italic\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_underline',\n            onclick: function(a,b,c) {\n                document.execCommand('underline');\n\n                if (document.queryCommandState(\"underline\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            type:'divisor'\n        });\n\n        items.push({\n            content: 'format_list_bulleted',\n            onclick: function(a,b,c) {\n                document.execCommand('insertUnorderedList');\n\n                if (document.queryCommandState(\"insertUnorderedList\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_list_numbered',\n            onclick: function(a,b,c) {\n                document.execCommand('insertOrderedList');\n\n                if (document.queryCommandState(\"insertOrderedList\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_indent_increase',\n            onclick: function(a,b,c) {\n                document.execCommand('indent', true, null);\n\n                if (document.queryCommandState(\"indent\")) {\n                    c.classList.add('selected');\n                } else {\n                    c.classList.remove('selected');\n                }\n            }\n        });\n\n        items.push({\n            content: 'format_indent_decrease',\n            onclick: function() {\n                document.execCommand('outdent');\n\n                if (document.queryCommandState(\"outdent\")) {\n                    this.classList.add('selected');\n                } else {\n                    this.classList.remove('selected');\n                }\n            }\n        });\n\n        if (obj.options.toolbarOnTop) {\n            items.push({\n                type: 'divisor'\n            });\n\n            items.push({\n                content: 'photo',\n                onclick: function () {\n                    obj.upload();\n                }\n            });\n\n            items.push({\n                type: 'select',\n                content: 'table_view',\n                columns: 8,\n                grid: 8,\n                right: true,\n                options: [\n                    '0x0', '1x0', '2x0', '3x0', '4x0', '5x0', '6x0', '7x0',\n                    '0x1', '1x1', '2x1', '3x1', '4x1', '5x1', '6x1', '7x1',\n                    '0x2', '1x2', '2x2', '3x2', '4x2', '5x2', '6x2', '7x2',\n                    '0x3', '1x3', '2x3', '3x3', '4x3', '5x3', '6x3', '7x3',\n                    '0x4', '1x4', '2x4', '3x4', '4x4', '5x4', '6x4', '7x4',\n                    '0x5', '1x5', '2x5', '3x5', '4x5', '5x5', '6x5', '7x5',\n                    '0x6', '1x6', '2x6', '3x6', '4x6', '5x6', '6x6', '7x6',\n                    '0x7', '1x7', '2x7', '3x7', '4x7', '5x7', '6x7', '7x7',\n                ],\n                render: function (e, item) {\n                    if (item) {\n                        item.onmouseover = this.onmouseover;\n                        e = e.split('x');\n                        item.setAttribute('data-x', e[0]);\n                        item.setAttribute('data-y', e[1]);\n                    }\n                    var element = document.createElement('div');\n                    item.style.margin = '1px';\n                    item.style.border = '1px solid #ddd';\n                    return element;\n                },\n                onmouseover: function (e) {\n                    var x = parseInt(e.target.getAttribute('data-x'));\n                    var y = parseInt(e.target.getAttribute('data-y'));\n                    for (var i = 0; i < e.target.parentNode.children.length; i++) {\n                        var element = e.target.parentNode.children[i];\n                        var ex = parseInt(element.getAttribute('data-x'));\n                        var ey = parseInt(element.getAttribute('data-y'));\n                        if (ex <= x && ey <= y) {\n                            element.style.backgroundColor = '#cae1fc';\n                            element.style.borderColor = '#2977ff';\n                        } else {\n                            element.style.backgroundColor = '';\n                            element.style.borderColor = '#ddd';\n                        }\n                    }\n                },\n                onchange: function (a, b, c) {\n                    c = c.split('x');\n                    var table = document.createElement('table');\n                    var tbody = document.createElement('tbody');\n                    for (var y = 0; y <= c[1]; y++) {\n                        var tr = document.createElement('tr');\n                        for (var x = 0; x <= c[0]; x++) {\n                            var td = document.createElement('td');\n                            td.innerHTML = '';\n                            tr.appendChild(td);\n                        }\n                        tbody.appendChild(tr);\n                    }\n                    table.appendChild(tbody);\n                    table.setAttribute('width', '100%');\n                    table.setAttribute('cellpadding', '6');\n                    table.setAttribute('cellspacing', '0');\n                    document.execCommand('insertHTML', false, table.outerHTML);\n                }\n            });\n        }\n\n        return items;\n    }\n\n    return Component;\n}\n\nexport default Editor();"], "filenames": ["dist/jsuites.js", "src/jsuites.js", "src/plugins/editor.js"], "buggy_code_start_loc": [309, 55, 48], "buggy_code_end_loc": [12506, 56, 1268], "fixing_code_start_loc": [309, 55, 48], "fixing_code_end_loc": [12510, 56, 1272], "type": "CWE-79", "message": "Versions of the package jsuites before 5.0.1 are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization in the Editor() function.", "other": {"cve": {"id": "CVE-2022-25979", "sourceIdentifier": "report@snyk.io", "published": "2023-01-31T05:15:11.927", "lastModified": "2023-02-07T17:47:35.547", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Versions of the package jsuites before 5.0.1 are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization in the Editor() function."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "report@snyk.io", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.5}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:jsuites:jsuites:*:*:*:*:*:*:*:*", "versionEndExcluding": "5.0.1", "matchCriteriaId": "DCEC8F07-41E2-4780-A249-C8D37CFED690"}]}]}], "references": [{"url": "https://github.com/jsuites/jsuites/commit/b31770d5fe91684a00177f629aab933139c32d9f", "source": "report@snyk.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/jsuites/jsuites/issues/134", "source": "report@snyk.io", "tags": ["Issue Tracking", "Third Party Advisory"]}, {"url": "https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3253331", "source": "report@snyk.io", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://security.snyk.io/vuln/SNYK-JS-JSUITES-3226764", "source": "report@snyk.io", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/jsuites/jsuites/commit/b31770d5fe91684a00177f629aab933139c32d9f"}}