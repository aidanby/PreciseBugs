{"buggy_code": ["<?php\n/* Copyright (C) 2001-2007\tRodolphe Quiedeville\t<rodolphe@quiedeville.org>\n * Copyright (C) 2003\t\tJean-Louis Bergamo\t\t<jlb@j1b.org>\n * Copyright (C) 2004-2012\tLaurent Destailleur\t\t<eldy@users.sourceforge.net>\n * Copyright (C) 2004\t\tChristophe Combelles\t<ccomb@free.fr>\n * Copyright (C) 2005-2010\tRegis Houssin\t\t\t<regis.houssin@inodbox.com>\n * Copyright (C) 2013\t\tFlorian Henry\t\t\t<florian.henry@open-concept.pro>\n * Copyright (C) 2015-2016\tMarcos Garc\u00eda\t\t\t<marcosgdf@gmail.com>\n * Copyright (C) 2015-2017\tAlexandre Spangaro\t\t<aspangaro@open-dsi.fr>\n * Copyright (C) 2016\t\tFerran Marcet   \t\t<fmarcet@2byte.es>\n * Copyright (C) 2019\t\tJC Prieto\t\t\t\t<jcprieto@virtual20.com><prietojc@gmail.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/compta/bank/class/account.class.php\n *\t\\ingroup    bank\n *\t\\brief      File of class to manage bank accounts\n */\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/commonobject.class.php';\n\n\n/**\n *\tClass to manage bank accounts\n */\nclass Account extends CommonObject\n{\n\t/**\n\t * @var string ID to identify managed object\n\t */\n\tpublic $element = 'bank_account';\n\n\t/**\n\t * @var string Name of table without prefix where object is stored\n\t */\n\tpublic $table_element = 'bank_account';\n\n\t/**\n\t * @var string String with name of icon for myobject. Must be the part after the 'object_' into object_myobject.png\n\t */\n\tpublic $picto = 'account';\n\n\t/**\n\t * @var\tint\t\tUse id instead of rowid\n\t * @deprecated\n\t * @see $id\n\t */\n\tpublic $rowid;\n\n\t/**\n\t * Account Label\n\t * @var string\n\t */\n\tpublic $label;\n\n\t/**\n\t * Bank account type. Check TYPE_ constants\n\t * @var int\n\t */\n\tpublic $courant;\n\n\t/**\n\t * Bank account type. Check TYPE_ constants\n\t * @var int\n\t */\n\tpublic $type;\n\n\t/**\n\t * Bank name\n\t * @var string\n\t */\n\tpublic $bank;\n\n\t/**\n\t * Status\n\t * @var int\n\t */\n\tpublic $clos = self::STATUS_OPEN;\n\n\t/**\n\t * Does it need to be conciliated?\n\t * @var int\n\t */\n\tpublic $rappro = 1;\n\n\t/**\n\t * Webpage\n\t * @var string\n\t */\n\tpublic $url;\n\n\t/**\n\t * Bank number. If in SEPA area, you should move to IBAN field\n\t * @var string\n\t */\n\tpublic $code_banque;\n\n\t/**\n\t * Branch number. If in SEPA area, you should move to IBAN field\n\t * @var string\n\t */\n\tpublic $code_guichet;\n\n\t/**\n\t * Account number. If in SEPA area, you should move to IBAN field\n\t * @var string\n\t */\n\tpublic $number;\n\n\t/**\n\t * Bank account number control digit. If in SEPA area, you should move to IBAN field\n\t * @var string\n\t */\n\tpublic $cle_rib;\n\n\t/**\n\t * BIC/Swift code\n\t * @var string\n\t */\n\tpublic $bic;\n\n\t/**\n\t * IBAN number (International Bank Account Number). Stored into iban_prefix field into database\n\t * @var string\n\t */\n\tpublic $iban;\n\n\t/**\n\t * Name of account holder\n\t * @var string\n\t */\n\tpublic $proprio;\n\n\t/**\n\t * Address of account holder\n\t * @var string\n\t */\n\tpublic $owner_address;\n\n\tpublic $state_id;\n\tpublic $state_code;\n\tpublic $state;\n\n\t/**\n\t * Variable containing all account types with their respective translated label.\n\t * Defined in __construct\n\t * @var array\n\t */\n\tpublic $type_lib = array();\n\n\t/**\n\t * Variable containing all account statuses with their respective translated label.\n\t * Defined in __construct\n\t * @var array\n\t */\n\tpublic $status = array();\n\n\t/**\n\t * Accountancy code\n\t * @var string\n\t */\n\tpublic $account_number;\n\n\t/**\n\t * @var int ID\n\t */\n\tpublic $fk_accountancy_journal;\n\t/**\n\t * @var string\tLabel of journal\n\t */\n\tpublic $accountancy_journal;\n\n\t/**\n\t * Currency code\n\t * @var string\n\t */\n\tpublic $currency_code;\n\n\t/**\n\t * Currency code\n\t * @var string\n\t * @deprecated Use currency_code instead\n\t */\n\tpublic $account_currency_code;\n\n\t/**\n\t * Authorized minimum balance\n\t * @var float\n\t */\n\tpublic $min_allowed;\n\n\t/**\n\t * Desired minimum balance\n\t * @var float\n\t */\n\tpublic $min_desired;\n\n\t/**\n\t * Notes\n\t * @var string\n\t */\n\tpublic $comment;\n\n\t/**\n\t * Date of the initial balance. Used in Account::create\n\t * @var int\n\t */\n\tpublic $date_solde;\n\n\t/**\n\t * Creditor Identifier CI. Some banks use different ICS for direct debit and bank tranfer\n\t * @var string\n\t */\n\tpublic $ics;\n\n\t/**\n\t * Creditor Identifier for Bank Transfer.\n\t * @var string\n\t */\n\tpublic $ics_transfer;\n\n\n\n\t/**\n\t *  'type' if the field format ('integer', 'integer:ObjectClass:PathToClass[:AddCreateButtonOrNot[:Filter]]', 'varchar(x)', 'double(24,8)', 'real', 'price', 'text', 'html', 'date', 'datetime', 'timestamp', 'duration', 'mail', 'phone', 'url', 'password')\n\t *         Note: Filter can be a string like \"(t.ref:like:'SO-%') or (t.date_creation:<:'20160101') or (t.nature:is:NULL)\"\n\t *  'label' the translation key.\n\t *  'enabled' is a condition when the field must be managed.\n\t *  'position' is the sort order of field.\n\t *  'notnull' is set to 1 if not null in database. Set to -1 if we must set data to null if empty ('' or 0).\n\t *  'visible' says if field is visible in list (Examples: 0=Not visible, 1=Visible on list and create/update/view forms, 2=Visible on list only, 3=Visible on create/update/view form only (not list), 4=Visible on list and update/view form only (not create). 5=Visible on list and view only (not create/not update). Using a negative value means field is not shown by default on list but can be selected for viewing)\n\t *  'noteditable' says if field is not editable (1 or 0)\n\t *  'default' is a default value for creation (can still be overwrote by the Setup of Default Values if field is editable in creation form). Note: If default is set to '(PROV)' and field is 'ref', the default value will be set to '(PROVid)' where id is rowid when a new record is created.\n\t *  'index' if we want an index in database.\n\t *  'foreignkey'=>'tablename.field' if the field is a foreign key (it is recommanded to name the field fk_...).\n\t *  'searchall' is 1 if we want to search in this field when making a search from the quick search button.\n\t *  'isameasure' must be set to 1 if you want to have a total on list for this field. Field type must be summable like integer or double(24,8).\n\t *  'css' is the CSS style to use on field. For example: 'maxwidth200'\n\t *  'help' is a string visible as a tooltip on field\n\t *  'showoncombobox' if value of the field must be visible into the label of the combobox that list record\n\t *  'disabled' is 1 if we want to have the field locked by a 'disabled' attribute. In most cases, this is never set into the definition of $fields into class, but is set dynamically by some part of code.\n\t *  'arrayofkeyval' to set list of value if type is a list of predefined values. For example: array(\"0\"=>\"Draft\",\"1\"=>\"Active\",\"-1\"=>\"Cancel\")\n\t *  'comment' is not used. You can store here any text of your choice. It is not used by application.\n\t *\n\t *  Note: To have value dynamic, you can set value to 0 in definition and edit the value on the fly into the constructor.\n\t */\n\n\t// BEGIN MODULEBUILDER PROPERTIES\n\t/**\n\t * @var array  Array with all fields and their property. Do not use it as a static var. It may be modified by constructor.\n\t */\n\tpublic $fields = array(\n\t\t'rowid' =>array('type'=>'integer', 'label'=>'TechnicalID', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>10),\n\t\t'ref' =>array('type'=>'varchar(12)', 'label'=>'Ref', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'showoncombobox'=>1, 'position'=>25),\n\t\t'label' =>array('type'=>'varchar(30)', 'label'=>'Label', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>30),\n\t\t'entity' =>array('type'=>'integer', 'label'=>'Entity', 'default'=>1, 'enabled'=>1, 'visible'=>-2, 'notnull'=>1, 'position'=>35, 'index'=>1),\n\t\t'bank' =>array('type'=>'varchar(60)', 'label'=>'Bank', 'enabled'=>1, 'visible'=>-1, 'position'=>40),\n\t\t'code_banque' =>array('type'=>'varchar(128)', 'label'=>'Code banque', 'enabled'=>1, 'visible'=>-1, 'position'=>45),\n\t\t'code_guichet' =>array('type'=>'varchar(6)', 'label'=>'Code guichet', 'enabled'=>1, 'visible'=>-1, 'position'=>50),\n\t\t'number' =>array('type'=>'varchar(255)', 'label'=>'Number', 'enabled'=>1, 'visible'=>-1, 'position'=>55),\n\t\t'cle_rib' =>array('type'=>'varchar(5)', 'label'=>'Cle rib', 'enabled'=>1, 'visible'=>-1, 'position'=>60),\n\t\t'bic' =>array('type'=>'varchar(11)', 'label'=>'Bic', 'enabled'=>1, 'visible'=>-1, 'position'=>65),\n\t\t'iban_prefix' =>array('type'=>'varchar(34)', 'label'=>'Iban prefix', 'enabled'=>1, 'visible'=>-1, 'position'=>70),\n\t\t'country_iban' =>array('type'=>'varchar(2)', 'label'=>'Country iban', 'enabled'=>1, 'visible'=>-1, 'position'=>75),\n\t\t'cle_iban' =>array('type'=>'varchar(2)', 'label'=>'Cle iban', 'enabled'=>1, 'visible'=>-1, 'position'=>80),\n\t\t'domiciliation' =>array('type'=>'varchar(255)', 'label'=>'Domiciliation', 'enabled'=>1, 'visible'=>-1, 'position'=>85),\n\t\t'state_id' =>array('type'=>'integer', 'label'=>'State id', 'enabled'=>1, 'visible'=>-1, 'position'=>90),\n\t\t'fk_pays' =>array('type'=>'integer', 'label'=>'Fk pays', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>95),\n\t\t'proprio' =>array('type'=>'varchar(60)', 'label'=>'Proprio', 'enabled'=>1, 'visible'=>-1, 'position'=>100),\n\t\t'owner_address' =>array('type'=>'text', 'label'=>'Owner address', 'enabled'=>1, 'visible'=>-1, 'position'=>105),\n\t\t'courant' =>array('type'=>'smallint(6)', 'label'=>'Courant', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>110),\n\t\t'clos' =>array('type'=>'smallint(6)', 'label'=>'Clos', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>115),\n\t\t'rappro' =>array('type'=>'smallint(6)', 'label'=>'Rappro', 'enabled'=>1, 'visible'=>-1, 'position'=>120),\n\t\t'url' =>array('type'=>'varchar(128)', 'label'=>'Url', 'enabled'=>1, 'visible'=>-1, 'position'=>125),\n\t\t'account_number' =>array('type'=>'varchar(32)', 'label'=>'Account number', 'enabled'=>1, 'visible'=>-1, 'position'=>130),\n\t\t'fk_accountancy_journal' =>array('type'=>'integer', 'label'=>'Accountancy journal ID', 'enabled'=>1, 'visible'=>-1, 'position'=>132),\n\t\t'accountancy_journal' =>array('type'=>'varchar(20)', 'label'=>'Accountancy journal', 'enabled'=>1, 'visible'=>-1, 'position'=>135),\n\t\t'currency_code' =>array('type'=>'varchar(3)', 'label'=>'Currency code', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>140),\n\t\t'min_allowed' =>array('type'=>'integer', 'label'=>'Min allowed', 'enabled'=>1, 'visible'=>-1, 'position'=>145),\n\t\t'min_desired' =>array('type'=>'integer', 'label'=>'Min desired', 'enabled'=>1, 'visible'=>-1, 'position'=>150),\n\t\t'comment' =>array('type'=>'text', 'label'=>'Comment', 'enabled'=>1, 'visible'=>-1, 'position'=>155),\n\t\t'datec' =>array('type'=>'datetime', 'label'=>'DateCreation', 'enabled'=>1, 'visible'=>-1, 'position'=>156),\n\t\t'tms' =>array('type'=>'timestamp', 'label'=>'DateModification', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>157),\n\t\t'fk_user_author' =>array('type'=>'integer:User:user/class/user.class.php', 'label'=>'Fk user author', 'enabled'=>1, 'visible'=>-1, 'position'=>160),\n\t\t'fk_user_modif' =>array('type'=>'integer:User:user/class/user.class.php', 'label'=>'UserModif', 'enabled'=>1, 'visible'=>-2, 'notnull'=>-1, 'position'=>165),\n\t\t'note_public' =>array('type'=>'text', 'label'=>'NotePrivate', 'enabled'=>1, 'visible'=>0, 'position'=>170),\n\t\t'model_pdf' =>array('type'=>'varchar(255)', 'label'=>'Model pdf', 'enabled'=>1, 'visible'=>0, 'position'=>175),\n\t\t'import_key' =>array('type'=>'varchar(14)', 'label'=>'ImportId', 'enabled'=>1, 'visible'=>-2, 'position'=>180),\n\t\t'extraparams' =>array('type'=>'varchar(255)', 'label'=>'Extraparams', 'enabled'=>1, 'visible'=>-1, 'position'=>185),\n\t);\n\t// END MODULEBUILDER PROPERTIES\n\n\t/**\n\t * Current account\n\t */\n\tconst TYPE_CURRENT = 1;\n\t/**\n\t * Cash account\n\t */\n\tconst TYPE_CASH = 2;\n\t/**\n\t * Savings account\n\t */\n\tconst TYPE_SAVINGS = 0;\n\n\n\tconst STATUS_OPEN = 0;\n\tconst STATUS_CLOSED = 1;\n\n\n\t/**\n\t *  Constructor\n\t *\n\t *  @param\tDoliDB\t\t$db\t\tDatabase handler\n\t */\n\tpublic function __construct(DoliDB $db)\n\t{\n\t\tglobal $langs;\n\n\t\t$this->db = $db;\n\n\t\t$this->solde = 0;\n\n\t\t$this->type_lib = array(\n\t\t\tself::TYPE_SAVINGS => $langs->trans(\"BankType0\"),\n\t\t\tself::TYPE_CURRENT => $langs->trans(\"BankType1\"),\n\t\t\tself::TYPE_CASH => $langs->trans(\"BankType2\"),\n\t\t);\n\n\t\t$this->status = array(\n\t\t\tself::STATUS_OPEN => $langs->trans(\"StatusAccountOpened\"),\n\t\t\tself::STATUS_CLOSED => $langs->trans(\"StatusAccountClosed\")\n\t\t);\n\t}\n\n\t/**\n\t * Shows the account number in the appropriate format\n\t *\n\t * @return string\n\t */\n\tpublic function __toString()\n\t{\n\t\t$string = '';\n\t\tforeach ($this->getFieldsToShow() as $val) {\n\t\t\tif ($val == 'BankCode') {\n\t\t\t\t$string .= $this->code_banque.' ';\n\t\t\t} elseif ($val == 'BankAccountNumber') {\n\t\t\t\t$string .= $this->number.' ';\n\t\t\t} elseif ($val == 'DeskCode') {\n\t\t\t\t$string .= $this->code_guichet.' ';\n\t\t\t} elseif ($val == 'BankAccountNumberKey') {\n\t\t\t\t$string .= $this->cle_rib.' ';\n\t\t\t} elseif ($val == 'BIC') {\n\t\t\t\t$string .= $this->bic.' ';\n\t\t\t} elseif ($val == 'IBAN') {\n\t\t\t\t$string .= $this->iban.' ';\n\t\t\t}\n\t\t}\n\n\t\treturn trim($string);\n\t}\n\n\n\t/**\n\t *  Return if a bank account need to be conciliated\n\t *\n\t *  @return     int         1 if need to be concialiated, < 0 otherwise.\n\t */\n\tpublic function canBeConciliated()\n\t{\n\t\tglobal $conf;\n\n\t\tif (empty($this->rappro)) {\n\t\t\treturn -1;\n\t\t}\n\t\tif ($this->courant == Account::TYPE_CASH && empty($conf->global->BANK_CAN_RECONCILIATE_CASHACCOUNT)) {\n\t\t\treturn -2;\n\t\t}\n\t\tif ($this->clos) {\n\t\t\treturn -3;\n\t\t}\n\t\treturn 1;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Add a link between bank line record and its source\n\t *\n\t *      @param\tint\t\t$line_id    Id ecriture bancaire\n\t *      @param  int\t\t$url_id     Id parametre url\n\t *      @param  string\t$url        Url\n\t *      @param  string\t$label      Link label\n\t *      @param  string\t$type       Type of link ('payment', 'company', 'member', ...)\n\t *      @return int         \t\t<0 if KO, id line if OK\n\t */\n\tpublic function add_url_line($line_id, $url_id, $url, $label, $type)\n\t{\n\t\t// phpcs:enable\n\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"bank_url (\";\n\t\t$sql .= \"fk_bank\";\n\t\t$sql .= \", url_id\";\n\t\t$sql .= \", url\";\n\t\t$sql .= \", label\";\n\t\t$sql .= \", type\";\n\t\t$sql .= \") VALUES (\";\n\t\t$sql .= \" \".((int) $line_id);\n\t\t$sql .= \", '\".$this->db->escape($url_id).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($url).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($label).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($type).\"'\";\n\t\t$sql .= \")\";\n\n\t\tdol_syslog(get_class($this).\"::add_url_line\", LOG_DEBUG);\n\t\tif ($this->db->query($sql)) {\n\t\t\t$rowid = $this->db->last_insert_id(MAIN_DB_PREFIX.\"bank_url\");\n\t\t\treturn $rowid;\n\t\t} else {\n\t\t\t$this->error = $this->db->lasterror();\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * \t\tTODO Move this into AccountLine\n\t *      Return array with links from llx_bank_url\n\t *\n\t *      @param  int         $fk_bank    To search using bank transaction id\n\t *      @param  int         $url_id     To search using link to\n\t *      @param  string      $type       To search using type\n\t *      @return array|int               Array of links array('url'=>, 'url_id'=>, 'label'=>, 'type'=> 'fk_bank'=> ) or -1 on error\n\t */\n\tpublic function get_url($fk_bank = '', $url_id = '', $type = '')\n\t{\n\t\t// phpcs:enable\n\t\t$lines = array();\n\n\t\t// Check parameters\n\t\tif (!empty($fk_bank) && (!empty($url_id) || !empty($type))) {\n\t\t\t$this->error = \"ErrorBadParameter\";\n\t\t\treturn -1;\n\t\t}\n\n\t\t$sql = \"SELECT fk_bank, url_id, url, label, type\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank_url\";\n\t\tif ($fk_bank > 0) {\n\t\t\t$sql .= \" WHERE fk_bank = \".((int) $fk_bank);\n\t\t} else {\n\t\t\t$sql .= \" WHERE url_id = \".((int) $url_id).\" AND type = '\".$this->db->escape($type).\"'\";\n\t\t}\n\t\t$sql .= \" ORDER BY type, label\";\n\n\t\tdol_syslog(get_class($this).\"::get_url\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\t$i = 0;\n\t\t\t$num = $this->db->num_rows($result);\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\t// Anciens liens (pour compatibilite)\n\t\t\t\t$lines[$i][0] = $obj->url;\n\t\t\t\t$lines[$i][1] = $obj->url_id;\n\t\t\t\t$lines[$i][2] = $obj->label;\n\t\t\t\t$lines[$i][3] = $obj->type;\n\t\t\t\t// Nouveaux liens\n\t\t\t\t$lines[$i]['url'] = $obj->url;\n\t\t\t\t$lines[$i]['url_id'] = $obj->url_id;\n\t\t\t\t$lines[$i]['label'] = $obj->label;\n\t\t\t\t$lines[$i]['type'] = $obj->type;\n\t\t\t\t$lines[$i]['fk_bank'] = $obj->fk_bank;\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $lines;\n\t}\n\n\t/**\n\t *  Add an entry into table \".MAIN_DB_PREFIX.\"bank\n\t *\n\t *  @param\tint\t        $date\t\t\tDate operation\n\t *  @param\tstring\t\t$oper\t\t\t'VIR','PRE','LIQ','VAD','CB','CHQ'...\n\t *  @param\tstring\t\t$label\t\t\tDescripton\n\t *  @param\tfloat\t\t$amount\t\t\tAmount\n\t *  @param\tstring\t\t$num_chq\t\tNumero cheque or transfer\n\t *  @param\tint  \t\t$categorie\t\tCategory id (optionnal)\n\t *  @param\tUser\t\t$user\t\t\tUser that create\n\t *  @param\tstring\t\t$emetteur\t\tName of cheque writer\n\t *  @param\tstring\t\t$banque\t\t\tBank of cheque writer\n\t *  @param\tstring\t\t$accountancycode\tWhen we record a free bank entry, we must provide accounting account if accountancy module is on.\n\t *  @param\tint\t\t\t$datev\t\t\tDate value\n\t *  @param  string      $num_releve     Label of bank receipt for reconciliation\n\t *  @return\tint\t\t\t\t\t\t\tRowid of added entry, <0 if KO\n\t */\n\tpublic function addline($date, $oper, $label, $amount, $num_chq, $categorie, User $user, $emetteur = '', $banque = '', $accountancycode = '', $datev = null, $num_releve = '')\n\t{\n\t\t// Deprecation warning\n\t\tif (is_numeric($oper)) {\n\t\t\tdol_syslog(__METHOD__.\": using numeric operations is deprecated\", LOG_WARNING);\n\t\t}\n\n\t\tif (empty($this->id) && !empty($this->rowid)) {\t// For backward compatibility\n\t\t\t$this->id = $this->rowid;\n\t\t}\n\n\t\t// Clean parameters\n\t\t$emetteur = trim($emetteur);\n\t\t$banque = trim($banque);\n\t\t$label = trim($label);\n\n\t\t$now = dol_now();\n\n\t\tif (is_numeric($oper)) {    // Clean operation to have a code instead of a rowid\n\t\t\t$sql = \"SELECT code FROM \".MAIN_DB_PREFIX.\"c_paiement\";\n\t\t\t$sql .= \" WHERE id = \".((int) $oper);\n\t\t\t$sql .= \" AND entity IN (\".getEntity('c_paiement').\")\";\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t$oper = $obj->code;\n\t\t\t} else {\n\t\t\t\tdol_print_error($this->db, 'Failed to get payment type code');\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\t// Check parameters\n\t\tif (!$oper) {\n\t\t\t$this->error = \"oper not defined\";\n\t\t\treturn -1;\n\t\t}\n\t\tif (!$this->id) {\n\t\t\t$this->error = \"this->id not defined\";\n\t\t\treturn -2;\n\t\t}\n\t\tif ($this->courant == Account::TYPE_CASH && $oper != 'LIQ') {\n\t\t\t$this->error = \"ErrorCashAccountAcceptsOnlyCashMoney\";\n\t\t\treturn -3;\n\t\t}\n\n\t\t$this->db->begin();\n\n\t\tif (is_null($datev) || empty($datev)) {\n\t\t\t$datev = $date;\n\t\t}\n\n\t\t$accline = new AccountLine($this->db);\n\t\t$accline->datec = $now;\n\t\t$accline->dateo = $date;\n\t\t$accline->datev = $datev;\n\t\t$accline->label = $label;\n\t\t$accline->amount = $amount;\n\t\t$accline->fk_user_author = $user->id;\n\t\t$accline->fk_account = $this->id;\n\t\t$accline->fk_type = $oper;\n\t\t$accline->numero_compte = $accountancycode;\n\t\t$accline->num_releve = $num_releve;\n\n\t\tif ($num_chq) {\n\t\t\t$accline->num_chq = $num_chq;\n\t\t}\n\n\t\tif ($emetteur) {\n\t\t\t$accline->emetteur = $emetteur;\n\t\t}\n\n\t\tif ($banque) {\n\t\t\t$accline->bank_chq = $banque;\n\t\t}\n\n\t\tif ($accline->insert() > 0) {\n\t\t\tif ($categorie > 0) {\n\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"bank_class(\";\n\t\t\t\t$sql .= \"lineid, fk_categ\";\n\t\t\t\t$sql .= \") VALUES (\";\n\t\t\t\t$sql .= ((int) $accline->id).\", '\".$this->db->escape($categorie).\"'\";\n\t\t\t\t$sql .= \")\";\n\n\t\t\t\t$result = $this->db->query($sql);\n\t\t\t\tif (!$result) {\n\t\t\t\t\t$this->error = $this->db->lasterror();\n\t\t\t\t\t$this->db->rollback();\n\n\t\t\t\t\treturn -3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$this->db->commit();\n\n\t\t\treturn $accline->id;\n\t\t} else {\n\t\t\t$this->error = $accline->error;\n\t\t\t$this->errors = $accline->errors;\n\t\t\t$this->db->rollback();\n\n\t\t\treturn -2;\n\t\t}\n\t}\n\n\t/**\n\t *  Create bank account into database\n\t *\n\t *  @param\tUser\t$user\t\tObject user making creation\n\t *  @param  int     $notrigger  1=Disable triggers\n\t *  @return int        \t\t\t< 0 if KO, > 0 if OK\n\t */\n\tpublic function create(User $user, $notrigger = 0)\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$error = 0;\n\n\t\t// Clean parameters\n\t\tif (!$this->min_allowed) {\n\t\t\t$this->min_allowed = 0;\n\t\t}\n\t\tif (!$this->min_desired) {\n\t\t\t$this->min_desired = 0;\n\t\t}\n\n\t\t// Check parameters\n\t\tif (empty($this->country_id)) {\n\t\t\t$this->error = $langs->transnoentitiesnoconv(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"Country\"));\n\t\t\tdol_syslog(get_class($this).\"::create \".$this->error, LOG_ERR);\n\t\t\treturn -1;\n\t\t}\n\t\tif (empty($this->ref)) {\n\t\t\t$this->error = $langs->transnoentitiesnoconv(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"Ref\"));\n\t\t\tdol_syslog(get_class($this).\"::create \".$this->error, LOG_ERR);\n\t\t\treturn -1;\n\t\t}\n\t\tif (empty($this->date_solde)) {\n\t\t\t$this->error = $langs->transnoentitiesnoconv(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"DateInitialBalance\"));\n\t\t\tdol_syslog(get_class($this).\"::create \".$this->error, LOG_ERR);\n\t\t\treturn -1;\n\t\t}\n\n\t\t// Chargement librairie pour acces fonction controle RIB\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/bank.lib.php';\n\n\t\t$now = dol_now();\n\n\t\t$this->db->begin();\n\n\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"bank_account (\";\n\t\t$sql .= \"datec\";\n\t\t$sql .= \", ref\";\n\t\t$sql .= \", label\";\n\t\t$sql .= \", entity\";\n\t\t$sql .= \", account_number\";\n\t\t$sql .= \", fk_accountancy_journal\";\n\t\t$sql .= \", bank\";\n\t\t$sql .= \", code_banque\";\n\t\t$sql .= \", code_guichet\";\n\t\t$sql .= \", number\";\n\t\t$sql .= \", cle_rib\";\n\t\t$sql .= \", bic\";\n\t\t$sql .= \", iban_prefix\";\n\t\t$sql .= \", domiciliation\";\n\t\t$sql .= \", proprio\";\n\t\t$sql .= \", owner_address\";\n\t\t$sql .= \", currency_code\";\n\t\t$sql .= \", rappro\";\n\t\t$sql .= \", min_allowed\";\n\t\t$sql .= \", min_desired\";\n\t\t$sql .= \", comment\";\n\t\t$sql .= \", state_id\";\n\t\t$sql .= \", fk_pays\";\n\t\t$sql .= \", ics\";\n\t\t$sql .= \", ics_transfer\";\n\t\t$sql .= \") VALUES (\";\n\t\t$sql .= \"'\".$this->db->idate($now).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->ref).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->label).\"'\";\n\t\t$sql .= \", \".$conf->entity;\n\t\t$sql .= \", '\".$this->db->escape($this->account_number).\"'\";\n\t\t$sql .= \", \".($this->fk_accountancy_journal > 0 ? $this->db->escape($this->fk_accountancy_journal) : \"null\");\n\t\t$sql .= \", '\".$this->db->escape($this->bank).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->code_banque).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->code_guichet).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->number).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->cle_rib).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->bic).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->iban).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->domiciliation).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->proprio).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->owner_address).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->currency_code).\"'\";\n\t\t$sql .= \", \".((int) $this->rappro);\n\t\t$sql .= \", \".price2num($this->min_allowed);\n\t\t$sql .= \", \".price2num($this->min_desired);\n\t\t$sql .= \", '\".$this->db->escape($this->comment).\"'\";\n\t\t$sql .= \", \".($this->state_id > 0 ? ((int) $this->state_id) : \"null\");\n\t\t$sql .= \", \".($this->country_id > 0 ? ((int) $this->country_id) : \"null\");\n\t\t$sql .= \", '\".$this->db->escape($this->ics).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->ics_transfer).\"'\";\n\t\t$sql .= \")\";\n\n\t\tdol_syslog(get_class($this).\"::create\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$this->id = $this->db->last_insert_id(MAIN_DB_PREFIX.\"bank_account\");\n\n\t\t\t$result = $this->update($user, 1);\n\t\t\tif ($result > 0) {\n\t\t\t\t$accline = new AccountLine($this->db);\n\t\t\t\t$accline->datec = $this->db->idate($now);\n\t\t\t\t$accline->label = '('.$langs->trans(\"InitialBankBalance\").')';\n\t\t\t\t$accline->amount = price2num($this->solde);\n\t\t\t\t$accline->fk_user_author = $user->id;\n\t\t\t\t$accline->fk_account = $this->id;\n\t\t\t\t$accline->datev = $this->db->idate($this->date_solde);\n\t\t\t\t$accline->dateo = $this->db->idate($this->date_solde);\n\t\t\t\t$accline->fk_type = 'SOLD';\n\n\t\t\t\tif ($accline->insert() < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t\t$this->error = $accline->error;\n\t\t\t\t\t$this->errors = $accline->errors;\n\t\t\t\t}\n\n\t\t\t\tif (!$error) {\n\t\t\t\t\t$result = $this->insertExtraFields();\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error && !$notrigger) {\n\t\t\t\t\t// Call trigger\n\t\t\t\t\t$result = $this->call_trigger('BANKACCOUNT_CREATE', $user);\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t\t// End call triggers\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$error++;\n\t\t\t}\n\t\t} else {\n\t\t\tif ($this->db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n\t\t\t\t$this->error = $langs->trans(\"ErrorBankLabelAlreadyExists\");\n\t\t\t\t$error++;\n\t\t\t} else {\n\t\t\t\t$this->error = $this->db->error().\" sql=\".$sql;\n\t\t\t\t$error++;\n\t\t\t}\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$this->db->commit();\n\t\t\treturn $this->id;\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\treturn -1 * $error;\n\t\t}\n\t}\n\n\t/**\n\t *    \tUpdate bank account card\n\t *\n\t *    \t@param\tUser\t$user       Object user making action\n\t *      @param  int     $notrigger  1=Disable triggers\n\t *\t\t@return\tint\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function update(User $user, $notrigger = 0)\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$error = 0;\n\n\t\t$this->db->begin();\n\n\t\t// Check parameters\n\t\tif (empty($this->country_id)) {\n\t\t\t$this->error = $langs->transnoentitiesnoconv(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"Country\"));\n\t\t\tdol_syslog(get_class($this).\"::update \".$this->error, LOG_ERR);\n\t\t\treturn -1;\n\t\t}\n\t\tif (empty($this->ref)) {\n\t\t\t$this->error = $langs->transnoentitiesnoconv(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"Ref\"));\n\t\t\tdol_syslog(get_class($this).\"::update \".$this->error, LOG_ERR);\n\t\t\treturn -1;\n\t\t}\n\t\tif (!$this->label) {\n\t\t\t$this->label = \"???\";\n\t\t}\n\n\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"bank_account SET \";\n\n\t\t$sql .= \" ref   = '\".$this->db->escape($this->ref).\"'\";\n\t\t$sql .= \",label = '\".$this->db->escape($this->label).\"'\";\n\n\t\t$sql .= \",courant = \".((int) $this->courant);\n\t\t$sql .= \",clos = \".((int) $this->clos);\n\t\t$sql .= \",rappro = \".((int) $this->rappro);\n\t\t$sql .= \",url = \".($this->url ? \"'\".$this->db->escape($this->url).\"'\" : \"null\");\n\t\t$sql .= \",account_number = '\".$this->db->escape($this->account_number).\"'\";\n\t\t$sql .= \",fk_accountancy_journal = \".($this->fk_accountancy_journal > 0 ? $this->db->escape($this->fk_accountancy_journal) : \"null\");\n\t\t$sql .= \",bank  = '\".$this->db->escape($this->bank).\"'\";\n\t\t$sql .= \",code_banque='\".$this->db->escape($this->code_banque).\"'\";\n\t\t$sql .= \",code_guichet='\".$this->db->escape($this->code_guichet).\"'\";\n\t\t$sql .= \",number='\".$this->db->escape($this->number).\"'\";\n\t\t$sql .= \",cle_rib='\".$this->db->escape($this->cle_rib).\"'\";\n\t\t$sql .= \",bic='\".$this->db->escape($this->bic).\"'\";\n\t\t$sql .= \",iban_prefix = '\".$this->db->escape($this->iban).\"'\";\n\t\t$sql .= \",domiciliation='\".$this->db->escape($this->domiciliation).\"'\";\n\t\t$sql .= \",proprio = '\".$this->db->escape($this->proprio).\"'\";\n\t\t$sql .= \",owner_address = '\".$this->db->escape($this->owner_address).\"'\";\n\n\t\t$sql .= \",currency_code = '\".$this->db->escape($this->currency_code).\"'\";\n\n\t\t$sql .= \",min_allowed = \".($this->min_allowed != '' ? price2num($this->min_allowed) : \"null\");\n\t\t$sql .= \",min_desired = \".($this->min_desired != '' ? price2num($this->min_desired) : \"null\");\n\t\t$sql .= \",comment     = '\".$this->db->escape($this->comment).\"'\";\n\n\t\t$sql .= \",state_id = \".($this->state_id > 0 ? $this->state_id : \"null\");\n\t\t$sql .= \",fk_pays = \".($this->country_id > 0 ? $this->country_id : \"null\");\n\t\t$sql .= \",ics = '\".$this->db->escape($this->ics).\"'\";\n\t\t$sql .= \",ics_transfer = '\".$this->db->escape($this->ics_transfer).\"'\";\n\n\t\t$sql .= \" WHERE rowid = \".((int) $this->id);\n\n\t\tdol_syslog(get_class($this).\"::update\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\t// Actions on extra fields (by external module or standard code)\n\t\t\tif (!$error) {\n\t\t\t\t$result = $this->insertExtraFields();\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$error && !$notrigger) {\n\t\t\t\t// Call trigger\n\t\t\t\t$result = $this->call_trigger('BANKACCOUNT_UPDATE', $user);\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t\t// End call triggers\n\t\t\t}\n\t\t} else {\n\t\t\t$error++;\n\t\t\t$this->error = $this->db->lasterror();\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$this->db->commit();\n\t\t\treturn $this->id;\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\treturn -1 * $error;\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Update BBAN (RIB) account fields\n\t *\n\t *  @param\tUser\t$user       Object user making update\n\t *\t@return\tint\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function update_bban(User $user = null)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs;\n\n\t\t// Load library to get BAN control function\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/bank.lib.php';\n\n\t\tdol_syslog(get_class($this).\"::update_bban $this->code_banque,$this->code_guichet,$this->number,$this->cle_rib,$this->iban\");\n\n\t\t// Check parameters\n\t\tif (!$this->ref) {\n\t\t\t$this->error = $langs->transnoentitiesnoconv(\"ErrorFieldRequired\", $langs->trans(\"Ref\"));\n\t\t\treturn -2;\n\t\t}\n\n\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"bank_account SET \";\n\t\t$sql .= \" bank  = '\".$this->db->escape($this->bank).\"'\";\n\t\t$sql .= \",code_banque='\".$this->db->escape($this->code_banque).\"'\";\n\t\t$sql .= \",code_guichet='\".$this->db->escape($this->code_guichet).\"'\";\n\t\t$sql .= \",number='\".$this->db->escape($this->number).\"'\";\n\t\t$sql .= \",cle_rib='\".$this->db->escape($this->cle_rib).\"'\";\n\t\t$sql .= \",bic='\".$this->db->escape($this->bic).\"'\";\n\t\t$sql .= \",iban_prefix = '\".$this->db->escape($this->iban).\"'\";\n\t\t$sql .= \",domiciliation='\".$this->db->escape($this->domiciliation).\"'\";\n\t\t$sql .= \",proprio = '\".$this->db->escape($this->proprio).\"'\";\n\t\t$sql .= \",owner_address = '\".$this->db->escape($this->owner_address).\"'\";\n\t\t$sql .= \",state_id = \".($this->state_id > 0 ? $this->state_id : \"null\");\n\t\t$sql .= \",fk_pays = \".($this->country_id > 0 ? $this->country_id : \"null\");\n\t\t$sql .= \" WHERE rowid = \".$this->id;\n\t\t$sql .= \" AND entity = \".$conf->entity;\n\n\t\tdol_syslog(get_class($this).\"::update_bban\", LOG_DEBUG);\n\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t$this->error = $this->db->lasterror();\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t/**\n\t *      Load a bank account into memory from database\n\t *\n\t *      @param\tint\t\t$id      \tId of bank account to get\n\t *      @param  string\t$ref     \tRef of bank account to get\n\t *      @return\tint\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function fetch($id, $ref = '')\n\t{\n\t\tglobal $conf;\n\n\t\tif (empty($id) && empty($ref)) {\n\t\t\t$this->error = \"ErrorBadParameters\";\n\t\t\treturn -1;\n\t\t}\n\n\t\t$sql = \"SELECT ba.rowid, ba.ref, ba.label, ba.bank, ba.number, ba.courant, ba.clos, ba.rappro, ba.url,\";\n\t\t$sql .= \" ba.code_banque, ba.code_guichet, ba.cle_rib, ba.bic, ba.iban_prefix as iban,\";\n\t\t$sql .= \" ba.domiciliation, ba.proprio, ba.owner_address, ba.state_id, ba.fk_pays as country_id,\";\n\t\t$sql .= \" ba.account_number, ba.fk_accountancy_journal, ba.currency_code,\";\n\t\t$sql .= \" ba.min_allowed, ba.min_desired, ba.comment,\";\n\t\t$sql .= \" ba.datec as date_creation, ba.tms as date_update, ba.ics, ba.ics_transfer,\";\n\t\t$sql .= ' c.code as country_code, c.label as country,';\n\t\t$sql .= ' d.code_departement as state_code, d.nom as state';\n\t\t$sql .= ' , aj.code as accountancy_journal';\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank_account as ba\";\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_country as c ON ba.fk_pays = c.rowid';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_departements as d ON ba.state_id = d.rowid';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'accounting_journal as aj ON aj.rowid=ba.fk_accountancy_journal';\n\t\t$sql .= \" WHERE ba.entity IN (\".getEntity($this->element).\")\";\n\t\tif ($id) {\n\t\t\t$sql .= \" AND ba.rowid = \".((int) $id);\n\t\t}\n\t\tif ($ref) {\n\t\t\t$sql .= \" AND ba.ref = '\".$this->db->escape($ref).\"'\";\n\t\t}\n\n\t\tdol_syslog(get_class($this).\"::fetch\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\tif ($this->db->num_rows($result)) {\n\t\t\t\t$obj = $this->db->fetch_object($result);\n\n\t\t\t\t$this->id            = $obj->rowid;\n\t\t\t\t$this->rowid         = $obj->rowid;\n\t\t\t\t$this->ref           = $obj->ref;\n\t\t\t\t$this->label         = $obj->label;\n\t\t\t\t$this->type          = $obj->courant;\n\t\t\t\t$this->courant       = $obj->courant;\n\t\t\t\t$this->bank          = $obj->bank;\n\t\t\t\t$this->clos          = $obj->clos;\n\t\t\t\t$this->rappro        = $obj->rappro;\n\t\t\t\t$this->url           = $obj->url;\n\n\t\t\t\t$this->code_banque   = $obj->code_banque;\n\t\t\t\t$this->code_guichet  = $obj->code_guichet;\n\t\t\t\t$this->number        = $obj->number;\n\t\t\t\t$this->cle_rib       = $obj->cle_rib;\n\t\t\t\t$this->bic           = $obj->bic;\n\t\t\t\t$this->iban          = $obj->iban;\n\t\t\t\t$this->domiciliation = $obj->domiciliation;\n\t\t\t\t$this->proprio       = $obj->proprio;\n\t\t\t\t$this->owner_address = $obj->owner_address;\n\n\t\t\t\t$this->state_id        = $obj->state_id;\n\t\t\t\t$this->state_code      = $obj->state_code;\n\t\t\t\t$this->state           = $obj->state;\n\n\t\t\t\t$this->country_id    = $obj->country_id;\n\t\t\t\t$this->country_code  = $obj->country_code;\n\t\t\t\t$this->country       = $obj->country;\n\n\t\t\t\t$this->account_number = $obj->account_number;\n\t\t\t\t$this->fk_accountancy_journal = $obj->fk_accountancy_journal;\n\t\t\t\t$this->accountancy_journal = $obj->accountancy_journal;\n\n\t\t\t\t$this->currency_code  = $obj->currency_code;\n\t\t\t\t$this->account_currency_code = $obj->currency_code;\n\t\t\t\t$this->min_allowed    = $obj->min_allowed;\n\t\t\t\t$this->min_desired    = $obj->min_desired;\n\t\t\t\t$this->comment        = $obj->comment;\n\n\t\t\t\t$this->date_creation  = $this->db->jdate($obj->date_creation);\n\t\t\t\t$this->date_update    = $this->db->jdate($obj->date_update);\n\n\t\t\t\t$this->ics           = $obj->ics;\n\t\t\t\t$this->ics_transfer  = $obj->ics_transfer;\n\n\t\t\t\t// Retrieve all extrafield\n\t\t\t\t// fetch optionals attributes and labels\n\t\t\t\t$this->fetch_optionals();\n\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\t$this->error = $this->db->lasterror;\n\t\t\t$this->errors[] = $this->error;\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t * Sets object to supplied categories.\n\t *\n\t * Deletes object from existing categories not supplied.\n\t * Adds it to non existing supplied categories.\n\t * Existing categories are left untouch.\n\t *\n\t * @param int[]|int $categories Category or categories IDs\n\t * @return void\n\t */\n\tpublic function setCategories($categories)\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n\t\treturn parent::setCategoriesCommon($categories, Categorie::TYPE_ACCOUNT);\n\t}\n\n\t/**\n\t *  Delete bank account from database\n\t *\n\t *\t@param\tUser\t$user\tUser deleting\n\t *  @return int             <0 if KO, >0 if OK\n\t */\n\tpublic function delete(User $user = null)\n\t{\n\t\tglobal $conf;\n\n\t\t$error = 0;\n\n\t\t$this->db->begin();\n\n\t\t// Delete link between tag and bank account\n\t\tif (!$error) {\n\t\t\t$sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"categorie_account\";\n\t\t\t$sql .= \" WHERE fk_account = \".$this->id;\n\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\t$error++;\n\t\t\t\t$this->error = \"Error \".$this->db->lasterror();\n\t\t\t}\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"bank_account\";\n\t\t\t$sql .= \" WHERE rowid = \".((int) $this->rowid);\n\n\t\t\tdol_syslog(get_class($this).\"::delete\", LOG_DEBUG);\n\t\t\t$result = $this->db->query($sql);\n\t\t\tif ($result) {\n\t\t\t\t// Remove extrafields\n\t\t\t\tif (!$error) {\n\t\t\t\t\t$result = $this->deleteExtraFields();\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_syslog(get_class($this).\"::delete error -4 \".$this->error, LOG_ERR);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$error++;\n\t\t\t\t$this->error = \"Error \".$this->db->lasterror();\n\t\t\t}\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$this->db->commit();\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t/**\n\t *  Return label of object status\n\t *\n\t *  @param      int\t\t$mode\t\t\t0=long label, 1=short label, 2=Picto + short label, 3=Picto, 4=Picto + long label, 5=short label + picto, 6=Long label + picto\n\t *  @return     string        \t\t    Label\n\t */\n\tpublic function getLibStatut($mode = 0)\n\t{\n\t\treturn $this->LibStatut($this->clos, $mode);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return label of given object status\n\t *\n\t *  @param\t int\t\t$status        \tId status\n\t *  @param   int\t\t$mode\t\t\t0=long label, 1=short label, 2=Picto + short label, 3=Picto, 4=Picto + long label, 5=short label + picto, 6=Long label + picto\n\t *  @return  string        \t\t\t    Label\n\t */\n\tpublic function LibStatut($status, $mode = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\t$langs->load('banks');\n\n\t\tif ($status == self::STATUS_OPEN) {\n\t\t\t$label = $langs->trans(\"StatusAccountOpened\");\n\t\t\t$labelshort = $langs->trans(\"StatusAccountOpened\");\n\t\t\t$statusType = 'status4';\n\t\t} else {\n\t\t\t$label = $langs->trans(\"StatusAccountClosed\");\n\t\t\t$labelshort = $langs->trans(\"StatusAccountClosed\");\n\t\t\t$statusType = 'status5';\n\t\t}\n\n\t\treturn dolGetStatus($label, $labelshort, '', $statusType, $mode);\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Renvoi si un compte peut etre supprimer ou non (sans mouvements)\n\t *\n\t *    @return     boolean     vrai si peut etre supprime, faux sinon\n\t */\n\tpublic function can_be_deleted()\n\t{\n\t\t// phpcs:enable\n\t\t$can_be_deleted = false;\n\n\t\t$sql = \"SELECT COUNT(rowid) as nb\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank\";\n\t\t$sql .= \" WHERE fk_account=\".$this->id;\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\tif ($obj->nb <= 1) {\n\t\t\t\t$can_be_deleted = true; // Juste le solde\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t\treturn $can_be_deleted;\n\t}\n\n\n\t/**\n\t *   Return error\n\t *\n\t *   @return\tstring\t\tError string\n\t */\n\tpublic function error()\n\t{\n\t\treturn $this->error;\n\t}\n\n\t/**\n\t * \tReturn current sold\n\t *\n\t * \t@param\tint\t\t$option\t\t1=Exclude future operation date (this is to exclude input made in advance and have real account sold)\n\t *\t@return\tint\t\t\t\t\tCurrent sold (value date <= today)\n\t */\n\tpublic function solde($option = 0)\n\t{\n\t\t$solde = 0;\n\n\t\t$sql = \"SELECT sum(amount) as amount\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank\";\n\t\t$sql .= \" WHERE fk_account = \".$this->id;\n\t\tif ($option == 1) {\n\t\t\t$sql .= \" AND dateo <= '\".$this->db->idate(dol_now()).\"'\";\n\t\t}\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\tif ($this->db->num_rows($resql)) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t$solde = $obj->amount;\n\t\t\t}\n\t\t\t$this->db->free($resql);\n\t\t} else {\n\t\t\t$this->errors[] = $this->db->lasterror;\n\t\t\treturn -1;\n\t\t}\n\n\t\treturn price2num($solde, 'MU');\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Load indicators for dashboard (this->nbtodo and this->nbtodolate)\n\t *\n\t *      @param\tUser\t$user        \t\tObjet user\n\t *\t\t@param\tint\t\t$filteraccountid\tTo get info for a particular account id\n\t *      @return WorkboardResponse|int \t\t<0 if KO, WorkboardResponse if OK\n\t */\n\tpublic function load_board(User $user, $filteraccountid = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs;\n\n\t\tif ($user->socid) {\n\t\t\treturn -1; // protection pour eviter appel par utilisateur externe\n\t\t}\n\n\t\t$sql = \"SELECT b.rowid, b.datev as datefin\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank as b,\";\n\t\t$sql .= \" \".MAIN_DB_PREFIX.\"bank_account as ba\";\n\t\t$sql .= \" WHERE b.rappro=0\";\n\t\t$sql .= \" AND b.fk_account = ba.rowid\";\n\t\t$sql .= \" AND ba.entity IN (\".getEntity('bank_account').\")\";\n\t\t$sql .= \" AND (ba.rappro = 1 AND ba.courant != 2)\"; // Compte rapprochable\n\t\t$sql .= \" AND clos = 0\";\n\t\tif ($filteraccountid) {\n\t\t\t$sql .= \" AND ba.rowid = \".((int) $filteraccountid);\n\t\t}\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$langs->load(\"banks\");\n\t\t\t$now = dol_now();\n\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/workboardresponse.class.php';\n\n\t\t\t$response = new WorkboardResponse();\n\t\t\t$response->warning_delay = $conf->bank->rappro->warning_delay / 60 / 60 / 24;\n\t\t\t$response->label = $langs->trans(\"TransactionsToConciliate\");\n\t\t\t$response->labelShort = $langs->trans(\"TransactionsToConciliateShort\");\n\t\t\t$response->url = DOL_URL_ROOT.'/compta/bank/list.php?leftmenu=bank&amp;mainmenu=bank';\n\t\t\t$response->img = img_object('', \"payment\");\n\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$response->nbtodo++;\n\t\t\t\tif ($this->db->jdate($obj->datefin) < ($now - $conf->bank->rappro->warning_delay)) {\n\t\t\t\t\t$response->nbtodolate++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $response;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\t$this->error = $this->db->error();\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Charge indicateurs this->nb de tableau de bord\n\t *\t\t@param\t\tint\t\t\t$filteraccountid\tTo get info for a particular account id\n\t *      @return     int         <0 if ko, >0 if ok\n\t */\n\tpublic function load_state_board($filteraccountid = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $user;\n\n\t\tif ($user->socid) {\n\t\t\treturn -1; // protection pour eviter appel par utilisateur externe\n\t\t}\n\n\t\t$sql = \"SELECT count(b.rowid) as nb\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank as b,\";\n\t\t$sql .= \" \".MAIN_DB_PREFIX.\"bank_account as ba\";\n\t\t$sql .= \" WHERE b.fk_account = ba.rowid\";\n\t\t$sql .= \" AND ba.entity IN (\".getEntity('bank_account').\")\";\n\t\t$sql .= \" AND (ba.rappro = 1 AND ba.courant != 2)\"; // Compte rapprochable\n\t\t$sql .= \" AND clos = 0\";\n\t\tif ($filteraccountid) {\n\t\t\t$sql .= \" AND ba.rowid = \".((int) $filteraccountid);\n\t\t}\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$this->nb[\"banklines\"] = $obj->nb;\n\t\t\t}\n\t\t\t$this->db->free($resql);\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\t$this->error = $this->db->error();\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t/**\n\t *      Load indicators for dashboard (this->nbtodo and this->nbtodolate)\n\t *\n\t *      @return int     Nb of account we can reconciliate\n\t */\n\tpublic function countAccountToReconcile()\n\t{\n\t\tglobal $db, $conf, $user;\n\n\t\t//Protection against external users\n\t\tif ($user->socid) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t$nb = 0;\n\n\t\t$sql = \"SELECT COUNT(ba.rowid) as nb\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank_account as ba\";\n\t\t$sql .= \" WHERE ba.rappro > 0 and ba.clos = 0\";\n\t\t$sql .= \" AND ba.entity IN (\".getEntity('bank_account').\")\";\n\t\tif (empty($conf->global->BANK_CAN_RECONCILIATE_CASHACCOUNT)) {\n\t\t\t$sql .= \" AND ba.courant != 2\";\n\t\t}\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t$nb = $obj->nb;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $nb;\n\t}\n\n\t/**\n\t *  Return clicable name (with picto eventually)\n\t *\n\t *\t@param\tint\t\t$withpicto\t\t\t\t\tInclude picto into link\n\t *  @param  string\t$mode           \t\t\t''=Link to card, 'transactions'=Link to transactions card\n\t *  @param  string  $option         \t\t\t''=Show ref, 'reflabel'=Show ref+label\n\t *  @param  int     $save_lastsearch_value    \t-1=Auto, 0=No save of lastsearch_values when clicking, 1=Save lastsearch_values whenclicking\n\t *  @param\tint  \t$notooltip\t\t \t\t\t1=Disable tooltip\n\t *\t@return\tstring\t\t\t\t\t\t\t\tChaine avec URL\n\t */\n\tpublic function getNomUrl($withpicto = 0, $mode = '', $option = '', $save_lastsearch_value = -1, $notooltip = 0)\n\t{\n\t\tglobal $conf, $langs, $user;\n\n\t\t$result = '';\n\t\t$label = img_picto('', $this->picto).' <u class=\"paddingrightnow\">'.$langs->trans(\"BankAccount\").'</u>';\n\t\tif (isset($this->status)) {\n\t\t\t$label .= ' '.$this->getLibStatut(5);\n\t\t}\n\t\t$label .= '<br><b>'.$langs->trans('Label').':</b> '.$this->label;\n\t\t$label .= '<br><b>'.$langs->trans('AccountNumber').':</b> '.$this->number;\n\t\t$label .= '<br><b>'.$langs->trans('IBAN').':</b> '.$this->iban;\n\t\t$label .= '<br><b>'.$langs->trans('BIC').':</b> '.$this->bic;\n\t\t$label .= '<br><b>'.$langs->trans(\"AccountCurrency\").':</b> '.$this->currency_code;\n\n\t\tif (empty($user->rights->banque->lire) || !empty($user->socid)) {\n\t\t\t$option = 'nolink';\n\t\t}\n\n\t\tif (!empty($conf->accounting->enabled)) {\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/accounting.lib.php';\n\t\t\t$langs->load(\"accountancy\");\n\t\t\t$label .= '<br><b>'.$langs->trans('AccountAccounting').':</b> '.length_accountg($this->account_number);\n\t\t\t$label .= '<br><b>'.$langs->trans('AccountancyJournal').':</b> '.$this->accountancy_journal;\n\t\t}\n\n\t\t$linkclose = '\" title=\"'.dol_escape_htmltag($label, 1).'\" class=\"classfortooltip\">';\n\n\t\t$url = DOL_URL_ROOT.'/compta/bank/card.php?id='.$this->id;\n\t\tif ($mode == 'transactions') {\n\t\t\t$url = DOL_URL_ROOT.'/compta/bank/bankentries_list.php?id='.$this->id;\n\t\t} elseif ($mode == 'receipts') {\n\t\t\t$url = DOL_URL_ROOT.'/compta/bank/releve.php?account='.$this->id;\n\t\t}\n\n\t\tif ($option != 'nolink') {\n\t\t\t// Add param to save lastsearch_values or not\n\t\t\t$add_save_lastsearch_values = ($save_lastsearch_value == 1 ? 1 : 0);\n\t\t\tif ($save_lastsearch_value == -1 && preg_match('/list\\.php/', $_SERVER[\"PHP_SELF\"])) {\n\t\t\t\t$add_save_lastsearch_values = 1;\n\t\t\t}\n\t\t\tif ($add_save_lastsearch_values) {\n\t\t\t\t$url .= '&save_lastsearch_values=1';\n\t\t\t}\n\t\t}\n\n\t\t$linkstart = '<a href=\"'.$url.$linkclose;\n\t\t$linkend = '</a>';\n\n\t\tif ($option == 'nolink') {\n\t\t\t$linkstart = '';\n\t\t\t$linkend = '';\n\t\t}\n\n\t\t$result .= $linkstart;\n\t\tif ($withpicto) {\n\t\t\t$result .= img_object(($notooltip ? '' : $label), $this->picto, ($notooltip ? (($withpicto != 2) ? 'class=\"paddingright\"' : '') : 'class=\"'.(($withpicto != 2) ? 'paddingright ' : '').'classfortooltip\"'), 0, 0, $notooltip ? 0 : 1);\n\t\t}\n\t\tif ($withpicto != 2) {\n\t\t\t$result .= $this->ref.($option == 'reflabel' && $this->label ? ' - '.$this->label : '');\n\t\t}\n\t\t$result .= $linkend;\n\n\t\treturn $result;\n\t}\n\n\n\t// Method after here are common to Account and CompanyBankAccount\n\n\n\t/**\n\t *     Return if an account has valid information for Direct debit payment\n\t *\n\t *     @return     int         1 if correct, <=0 if wrong\n\t */\n\tpublic function verif()\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/bank.lib.php';\n\n\t\t$this->error_number = 0;\n\n\t\t// Call function to check BAN\n\n\t\tif (!checkIbanForAccount($this) || !checkSwiftForAccount($this)) {\n\t\t\t$this->error_number = 12;\n\t\t\t$this->error_message = 'IBANSWIFTControlError';\n\t\t}\n\t\t/*if (! checkBanForAccount($this))\n\t\t{\n\t\t\t$this->error_number = 12;\n\t\t\t$this->error_message = 'BANControlError';\n\t\t}*/\n\n\t\tif ($this->error_number == 0) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * \tReturn account country code\n\t *\n\t *\t@return\t\tstring\t\tcountry code\n\t */\n\tpublic function getCountryCode()\n\t{\n\t\tglobal $mysoc;\n\n\t\t// We return country code of bank account\n\t\tif (!empty($this->country_code)) {\n\t\t\treturn $this->country_code;\n\t\t}\n\n\t\t// For backward compatibility, we try to guess country from other information\n\t\tif (!empty($this->iban)) {\n\t\t\t// If IBAN defined, we can know country of account from it\n\t\t\t$reg = array();\n\t\t\tif (preg_match(\"/^([a-zA-Z][a-zA-Z])/i\", $this->iban, $reg)) {\n\t\t\t\treturn $reg[1];\n\t\t\t}\n\t\t}\n\n\t\t// If this class is linked to a third party\n\t\tif (!empty($this->socid)) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/societe/class/societe.class.php';\n\t\t\t$company = new Societe($this->db);\n\t\t\t$result = $company->fetch($this->socid);\n\t\t\tif (!empty($company->country_code)) {\n\t\t\t\treturn $company->country_code;\n\t\t\t}\n\t\t}\n\n\t\t// We return country code of managed company\n\t\tif (!empty($mysoc->country_code)) {\n\t\t\treturn $mysoc->country_code;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t/**\n\t * Return if a bank account is defined with detailed information (bank code, desk code, number and key).\n\t * More information on codes used by countries on page http://en.wikipedia.org/wiki/Bank_code\n\t *\n\t * @return\t\tint        0=No bank code need + Account number is enough\n\t *                         1=Need 2 fields for bank code: Bank, Desk (France, Spain, ...) + Account number and key\n\t *                         2=Need 1 field for bank code:  Bank only (Sort code for Great Britain, BSB for Australia) + Account number\n\t */\n\tpublic function useDetailedBBAN()\n\t{\n\t\t$country_code = $this->getCountryCode();\n\n\t\tif (in_array($country_code, array('FR', 'ES', 'GA', 'IT', 'NC'))) {\n\t\t\treturn 1; // France, Spain, Gabon, ... - Not valid for CH\n\t\t}\n\t\tif (in_array($country_code, array('AU', 'BE', 'CA', 'DE', 'DK', 'GR', 'GB', 'ID', 'IE', 'IR', 'KR', 'NL', 'NZ', 'UK', 'US'))) {\n\t\t\treturn 2; // Australia, England...\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Return 1 if IBAN / BIC is mandatory (otherwise option)\n\t *\n\t * @return\t\tint        1 = mandatory / 0 = Not mandatory\n\t */\n\tpublic function needIBAN()\n\t{\n\t\t$country_code = $this->getCountryCode();\n\n\t\t$country_code_in_EEC = array(\n\t\t\t\t'AT', // Austria\n\t\t\t\t'BE', // Belgium\n\t\t\t\t'BG', // Bulgaria\n\t\t\t\t'CY', // Cyprus\n\t\t\t\t'CZ', // Czech republic\n\t\t\t\t'DE', // Germany\n\t\t\t\t'DK', // Danemark\n\t\t\t\t'EE', // Estonia\n\t\t\t\t'ES', // Spain\n\t\t\t\t'FI', // Finland\n\t\t\t\t'FR', // France\n\t\t\t\t'GB', // United Kingdom\n\t\t\t\t'GR', // Greece\n\t\t\t\t'HR', // Croatia\n\t\t\t\t'NL', // Holland\n\t\t\t\t'HU', // Hungary\n\t\t\t\t'IE', // Ireland\n\t\t\t\t'IM', // Isle of Man - Included in UK\n\t\t\t\t'IT', // Italy\n\t\t\t\t'LT', // Lithuania\n\t\t\t\t'LU', // Luxembourg\n\t\t\t\t'LV', // Latvia\n\t\t\t\t'MC', // Monaco - Included in France\n\t\t\t\t'MT', // Malta\n\t\t\t\t//'NO',\t// Norway\n\t\t\t\t'PL', // Poland\n\t\t\t\t'PT', // Portugal\n\t\t\t\t'RO', // Romania\n\t\t\t\t'SE', // Sweden\n\t\t\t\t'SK', // Slovakia\n\t\t\t\t'SI', // Slovenia\n\t\t\t\t'UK', // United Kingdom\n\t\t\t\t//'CH',\t// Switzerland - No. Swizerland in not in EEC\n\t\t);\n\n\t\tif (in_array($country_code, $country_code_in_EEC)) {\n\t\t\treturn 1; // France, Spain, ...\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\tLoad miscellaneous information for tab \"Info\"\n\t *\n\t *\t@param  int\t\t$id\t\tId of object to load\n\t *\t@return\tvoid\n\t */\n\tpublic function info($id)\n\t{\n\t}\n\n\t/**\n\t * Returns the fields in order that this bank account should show to the user\n\t * Will return an array with the following values:\n\t * - BankAccountNumber\n\t * - BankCode\n\t * - BankAccountNumberKey\n\t * - DeskCode\n\t *\n\t * Some countries show less or more bank account properties to the user\n\t *\n\t * @param  int     $includeibanbic         1=Return also key for IBAN and BIC\n\t * @return array                           Array of fields to show\n\t * @see useDetailedBBAN()\n\t */\n\tpublic function getFieldsToShow($includeibanbic = 0)\n\t{\n\t\t//Get the required properties depending on the country\n\t\t$detailedBBAN = $this->useDetailedBBAN();\n\n\t\tif ($detailedBBAN == 0) {\n\t\t\t$fieldarray = array(\n\t\t\t\t\t'BankAccountNumber'\n\t\t\t);\n\t\t} elseif ($detailedBBAN == 2) {\n\t\t\t$fieldarray = array(\n\t\t\t\t\t'BankCode',\n\t\t\t\t\t'BankAccountNumber'\n\t\t\t);\n\t\t} else {\n\t\t\t$fieldarray = self::getAccountNumberOrder();\n\t\t}\n\n\t\t//if ($this->needIBAN()) {    // return always IBAN and BIC (this was old behaviour)\n\t\tif ($includeibanbic) {\n\t\t\t$fieldarray[] = 'IBAN';\n\t\t\t$fieldarray[] = 'BIC';\n\t\t}\n\t\t//}\n\n\t\t//Get the order the properties are shown\n\t\treturn $fieldarray;\n\t}\n\n\t/**\n\t * Returns the components of the bank account in order.\n\t * Will return an array with the following values:\n\t * - BankAccountNumber\n\t * - BankCode\n\t * - BankAccountNumberKey\n\t * - DeskCode\n\t *\n\t * @return array\n\t */\n\tpublic static function getAccountNumberOrder()\n\t{\n\t\tglobal $conf;\n\n\t\t$fieldlists = array(\n\t\t\t\t'BankCode',\n\t\t\t\t'DeskCode',\n\t\t\t\t'BankAccountNumber',\n\t\t\t\t'BankAccountNumberKey'\n\t\t);\n\n\t\tif (!empty($conf->global->BANK_SHOW_ORDER_OPTION)) {\n\t\t\tif (is_numeric($conf->global->BANK_SHOW_ORDER_OPTION)) {\n\t\t\t\tif ($conf->global->BANK_SHOW_ORDER_OPTION == '1') {\n\t\t\t\t\t$fieldlists = array(\n\t\t\t\t\t\t'BankCode',\n\t\t\t\t\t\t'DeskCode',\n\t\t\t\t\t\t'BankAccountNumberKey',\n\t\t\t\t\t\t'BankAccountNumber'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//Replace the old AccountNumber key with the new BankAccountNumber key\n\t\t\t\t$fieldlists = explode(\n\t\t\t\t\t' ',\n\t\t\t\t\tpreg_replace('/ ?[^Bank]AccountNumber ?/', 'BankAccountNumber', $conf->global->BANK_SHOW_ORDER_OPTION)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn $fieldlists;\n\t}\n\n\n\t/**\n\t *  Initialise an instance with random values.\n\t *  Used to build previews or test instances.\n\t *\tid must be 0 if object instance is a specimen.\n\t *\n\t *  @return\tvoid\n\t */\n\tpublic function initAsSpecimen()\n\t{\n\t\t$this->specimen        = 1;\n\t\t$this->ref             = 'MBA';\n\t\t$this->label           = 'My Big Company Bank account';\n\t\t$this->bank            = 'MyBank';\n\t\t$this->courant         = Account::TYPE_CURRENT;\n\t\t$this->clos            = Account::STATUS_OPEN;\n\t\t$this->code_banque     = '123';\n\t\t$this->code_guichet    = '456';\n\t\t$this->number          = 'ABC12345';\n\t\t$this->cle_rib         = '50';\n\t\t$this->bic             = 'AA12';\n\t\t$this->iban            = 'FR999999999';\n\t\t$this->domiciliation   = 'My bank address';\n\t\t$this->proprio         = 'Owner';\n\t\t$this->owner_address   = 'Owner address';\n\t\t$this->country_id      = 1;\n\t}\n\n\t/**\n\t * Function used to replace a thirdparty id with another one.\n\t *\n\t * @param DoliDB \t$db \t\t\tDatabase handler\n\t * @param int \t\t$origin_id \t\tOld thirdparty id\n\t * @param int \t\t$dest_id \t\tNew thirdparty id\n\t * @return bool\n\t */\n\tpublic static function replaceThirdparty($db, $origin_id, $dest_id)\n\t{\n\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"bank_url SET url_id = \".((int) $dest_id).\" WHERE url_id = \".((int) $origin_id).\" AND type='company'\";\n\n\t\tif (!$db->query($sql)) {\n\t\t\t//if ($ignoreerrors) return true; // TODO Not enough. If there is A-B on kept thirdarty and B-C on old one, we must get A-B-C after merge. Not A-B.\n\t\t\t//$this->errors = $db->lasterror();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n}\n\n\n/**\n *\tClass to manage bank transaction lines\n */\nclass AccountLine extends CommonObject\n{\n\t/**\n\t * @var string Error code (or message)\n\t */\n\tpublic $error = '';\n\n\t/**\n\t * @var DoliDB Database handler.\n\t */\n\tpublic $db;\n\n\t/**\n\t * @var string ID to identify managed object\n\t */\n\tpublic $element = 'bank';\n\n\t/**\n\t * @var string Name of table without prefix where object is stored\n\t */\n\tpublic $table_element = 'bank';\n\n\t/**\n\t * @var string String with name of icon for myobject. Must be the part after the 'object_' into object_myobject.png\n\t */\n\tpublic $picto = 'accountline';\n\n\t/**\n\t * @var int ID\n\t */\n\tpublic $id;\n\n\t/**\n\t * @var string Ref\n\t */\n\tpublic $ref;\n\n\t/**\n\t * Date creation record (datec)\n\t *\n\t * @var integer\n\t */\n\tpublic $datec;\n\n\t/**\n\t * Date (dateo)\n\t *\n\t * @var integer\n\t */\n\tpublic $dateo;\n\n\t/**\n\t * Date value (datev)\n\t *\n\t * @var integer\n\t */\n\tpublic $datev;\n\n\tpublic $amount;\n\n\t/**\n\t * @var int ID\n\t */\n\tpublic $fk_user_author;\n\n\t/**\n\t * @var int ID\n\t */\n\tpublic $fk_user_rappro;\n\n\t/**\n\t * @var int ID\n\t */\n\tpublic $fk_type;\n\n\t/**\n\t * @var int ID of cheque receipt\n\t */\n\tpublic $fk_bordereau;\n\n\t/**\n\t * @var int ID of bank account\n\t */\n\tpublic $fk_account;\n\n\t/**\n\t * @var string\t\tRef of bank account\n\t */\n\tpublic $bank_account_ref;\n\n\t/**\n\t * @var string\t\tLabel of bank account\n\t */\n\tpublic $bank_account_label;\n\n\t/**\n\t * @var string\t\tBank account numero\n\t */\n\tpublic $numero_compte;\n\n\t/**\n\t * @var string\t\tName of check issuer\n\t */\n\tpublic $emetteur;\n\n\tpublic $rappro; // Is it conciliated\n\tpublic $num_releve; // If conciliated, what is bank statement\n\tpublic $num_chq; // Num of cheque\n\tpublic $bank_chq; // Bank of cheque\n\n\t/**\n\t * @var string bank transaction lines label\n\t */\n\tpublic $label;\n\n\tpublic $note;\n\n\n\n\t/**\n\t *  Constructor\n\t *\n\t *  @param\tDoliDB\t$db\t\tDatabase handler\n\t */\n\tpublic function __construct(DoliDB $db)\n\t{\n\t\t$this->db = $db;\n\t}\n\n\t/**\n\t *  Load into memory content of a bank transaction line\n\t *\n\t *  @param\t\tint\t\t$rowid   \tId of bank transaction to load\n\t *  @param      string\t$ref     \tRef of bank transaction to load\n\t *  @param      string\t$num     \tExternal num to load (ex: num of transaction for paypal fee)\n\t *\t@return\t\tint\t\t\t\t\t<0 if KO, 0 if OK but not found, >0 if OK and found\n\t */\n\tpublic function fetch($rowid, $ref = '', $num = '')\n\t{\n\t\tglobal $conf;\n\n\t\t// Check parameters\n\t\tif (empty($rowid) && empty($ref) && empty($num)) {\n\t\t\treturn -1;\n\t\t}\n\n\t\t$sql = \"SELECT b.rowid, b.datec, b.datev, b.dateo, b.amount, b.label as label, b.fk_account,\";\n\t\t$sql .= \" b.fk_user_author, b.fk_user_rappro,\";\n\t\t$sql .= \" b.fk_type, b.num_releve, b.num_chq, b.rappro, b.note,\";\n\t\t$sql .= \" b.fk_bordereau, b.banque, b.emetteur,\";\n\t\t//$sql.= \" b.author\"; // Is this used ?\n\t\t$sql .= \" ba.ref as bank_account_ref, ba.label as bank_account_label\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank as b,\";\n\t\t$sql .= \" \".MAIN_DB_PREFIX.\"bank_account as ba\";\n\t\t$sql .= \" WHERE b.fk_account = ba.rowid\";\n\t\t$sql .= \" AND ba.entity IN (\".getEntity('bank_account').\")\";\n\t\tif ($num) {\n\t\t\t$sql .= \" AND b.num_chq='\".$this->db->escape($num).\"'\";\n\t\t} elseif ($ref) {\n\t\t\t$sql .= \" AND b.rowid='\".$this->db->escape($ref).\"'\";\n\t\t} else {\n\t\t\t$sql .= \" AND b.rowid = \".((int) $rowid);\n\t\t}\n\n\t\tdol_syslog(get_class($this).\"::fetch\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\t$ret = 0;\n\n\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\tif ($obj) {\n\t\t\t\t$this->id = $obj->rowid;\n\t\t\t\t$this->rowid\t\t\t= $obj->rowid;\n\t\t\t\t$this->ref = $obj->rowid;\n\n\t\t\t\t$this->datec\t\t\t= $obj->datec;\n\t\t\t\t$this->datev\t\t\t= $obj->datev;\n\t\t\t\t$this->dateo\t\t\t= $obj->dateo;\n\t\t\t\t$this->amount = $obj->amount;\n\t\t\t\t$this->label\t\t\t= $obj->label;\n\t\t\t\t$this->note\t\t\t\t= $obj->note;\n\n\t\t\t\t$this->fk_user_author\t= $obj->fk_user_author;\n\t\t\t\t$this->fk_user_rappro\t= $obj->fk_user_rappro;\n\n\t\t\t\t$this->fk_type = $obj->fk_type; // Type of transaction\n\t\t\t\t$this->rappro = $obj->rappro;\n\t\t\t\t$this->num_releve = $obj->num_releve;\n\n\t\t\t\t$this->num_chq = $obj->num_chq;\n\t\t\t\t$this->bank_chq = $obj->banque;\n\t\t\t\t$this->fk_bordereau = $obj->fk_bordereau;\n\n\t\t\t\t$this->fk_account = $obj->fk_account;\n\t\t\t\t$this->bank_account_ref   = $obj->bank_account_ref;\n\t\t\t\t$this->bank_account_label = $obj->bank_account_label;\n\n\t\t\t\t$ret = 1;\n\t\t\t}\n\t\t\t$this->db->free($result);\n\t\t\treturn $ret;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t * Inserts a transaction to a bank account\n\t *\n\t * @return int <0 if KO, rowid of the line if OK\n\t */\n\tpublic function insert()\n\t{\n\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"bank (\";\n\t\t$sql .= \"datec\";\n\t\t$sql .= \", dateo\";\n\t\t$sql .= \", datev\";\n\t\t$sql .= \", label\";\n\t\t$sql .= \", amount\";\n\t\t$sql .= \", fk_user_author\";\n\t\t$sql .= \", num_chq\";\n\t\t$sql .= \", fk_account\";\n\t\t$sql .= \", fk_type\";\n\t\t$sql .= \", emetteur,banque\";\n\t\t$sql .= \", rappro\";\n\t\t$sql .= \", numero_compte\";\n\t\t$sql .= \", num_releve\";\n\t\t$sql .= \") VALUES (\";\n\t\t$sql .= \"'\".$this->db->idate($this->datec).\"'\";\n\t\t$sql .= \", '\".$this->db->idate($this->dateo).\"'\";\n\t\t$sql .= \", '\".$this->db->idate($this->datev).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->label).\"'\";\n\t\t$sql .= \", \".price2num($this->amount);\n\t\t$sql .= \", \".($this->fk_user_author > 0 ? $this->fk_user_author : \"null\");\n\t\t$sql .= \", \".($this->num_chq ? \"'\".$this->db->escape($this->num_chq).\"'\" : \"null\");\n\t\t$sql .= \", '\".$this->db->escape($this->fk_account).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->fk_type).\"'\";\n\t\t$sql .= \", \".($this->emetteur ? \"'\".$this->db->escape($this->emetteur).\"'\" : \"null\");\n\t\t$sql .= \", \".($this->bank_chq ? \"'\".$this->db->escape($this->bank_chq).\"'\" : \"null\");\n\t\t$sql .= \", \".(int) $this->rappro;\n\t\t$sql .= \", \".($this->numero_compte ? \"'\".$this->db->escape($this->numero_compte).\"'\" : \"''\");\n\t\t$sql .= \", \".($this->num_releve ? \"'\".$this->db->escape($this->num_releve).\"'\" : \"null\");\n\t\t$sql .= \")\";\n\n\t\tdol_syslog(get_class($this).\"::insert\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\n\t\tif (!$resql) {\n\t\t\t$this->error = $this->db->lasterror();\n\t\t\treturn -1;\n\t\t}\n\n\t\t$this->id = $this->db->last_insert_id(MAIN_DB_PREFIX.'bank');\n\n\t\treturn $this->id;\n\t}\n\n\t/**\n\t *      Delete bank transaction record\n\t *\n\t *\t\t@param\tUser\t$user\tUser object that delete\n\t *      @return\tint \t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function delete(User $user = null)\n\t{\n\t\tglobal $conf;\n\n\t\t$nbko = 0;\n\n\t\tif ($this->rappro) {\n\t\t\t// Protection to avoid any delete of consolidated lines\n\t\t\t$this->error = \"ErrorDeleteNotPossibleLineIsConsolidated\";\n\t\t\treturn -1;\n\t\t}\n\n\t\t$this->db->begin();\n\n\t\t// Protection to avoid any delete of accounted lines. Protection on by default\n\t\tif (empty($conf->global->BANK_ALLOW_TRANSACTION_DELETION_EVEN_IF_IN_ACCOUNTING)) {\n\t\t\t$sql = \"SELECT COUNT(rowid) as nb FROM \".MAIN_DB_PREFIX.\"accounting_bookkeeping WHERE doc_type = 'bank' AND fk_doc = \".$this->id;\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\tif ($obj && $obj->nb) {\n\t\t\t\t\t$this->error = 'ErrorRecordAlreadyInAccountingDeletionNotPossible';\n\t\t\t\t\t$this->db->rollback();\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$this->error = $this->db->lasterror();\n\t\t\t\t$this->db->rollback();\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\t// Delete urls\n\t\t$result = $this->delete_urls($user);\n\t\tif ($result < 0) {\n\t\t\t$nbko++;\n\t\t}\n\n\t\t$sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"bank_class WHERE lineid=\".(int) $this->rowid;\n\t\tdol_syslog(get_class($this).\"::delete\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif (!$result) {\n\t\t\t$nbko++;\n\t\t}\n\n\t\t$sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"bank WHERE rowid=\".(int) $this->rowid;\n\t\tdol_syslog(get_class($this).\"::delete\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif (!$result) {\n\t\t\t$nbko++;\n\t\t}\n\n\t\tif (!$nbko) {\n\t\t\t$this->db->commit();\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\treturn -$nbko;\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Delete bank line records\n\t *\n\t *\t\t@param\tUser\t$user\tUser object that delete\n\t *      @return\tint \t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function delete_urls(User $user = null)\n\t{\n\t\t// phpcs:enable\n\t\t$nbko = 0;\n\n\t\tif ($this->rappro) {\n\t\t\t// Protection to avoid any delete of consolidated lines\n\t\t\t$this->error = \"ErrorDeleteNotPossibleLineIsConsolidated\";\n\t\t\treturn -1;\n\t\t}\n\n\t\t$this->db->begin();\n\n\t\t$sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"bank_url WHERE fk_bank=\".(int) $this->rowid;\n\t\tdol_syslog(get_class($this).\"::delete_urls\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif (!$result) {\n\t\t\t$nbko++;\n\t\t}\n\n\t\tif (!$nbko) {\n\t\t\t$this->db->commit();\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\treturn -$nbko;\n\t\t}\n\t}\n\n\n\t/**\n\t *\t\tUpdate bank account record in database\n\t *\n\t *\t\t@param\tUser\t$user\t\t\tObject user making update\n\t *\t\t@param \tint\t\t$notrigger\t\t0=Disable all triggers\n\t *\t\t@return\tint\t\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function update(User $user, $notrigger = 0)\n\t{\n\t\t$this->db->begin();\n\n\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"bank SET\";\n\t\t$sql .= \" amount = \".price2num($this->amount).\",\";\n\t\t$sql .= \" datev='\".$this->db->idate($this->datev).\"',\";\n\t\t$sql .= \" dateo='\".$this->db->idate($this->dateo).\"'\";\n\t\t$sql .= \" WHERE rowid = \".((int) $this->rowid);\n\n\t\tdol_syslog(get_class($this).\"::update\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$this->db->commit();\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\t$this->error = $this->db->error();\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tUpdate conciliation field\n\t *\n\t *\t@param\tUser\t$user\t\t\tObjet user making update\n\t *\t@param \tint\t\t$cat\t\t\tCategory id\n\t *\t@param\tint\t\t$conciliated\t1=Set transaction to conciliated, 0=Keep transaction non conciliated\n\t *\t@return\tint\t\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function update_conciliation(User $user, $cat, $conciliated = 1)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs;\n\n\t\t$this->db->begin();\n\n\t\t// Check statement field\n\t\tif (!empty($conf->global->BANK_STATEMENT_REGEX_RULE)) {\n\t\t\tif (!preg_match('/'.$conf->global->BANK_STATEMENT_REGEX_RULE.'/', $this->num_releve)) {\n\t\t\t\t$this->errors[] = $langs->trans(\"ErrorBankStatementNameMustFollowRegex\", $conf->global->BANK_STATEMENT_REGEX_RULE);\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"bank SET\";\n\t\t$sql .= \" rappro = \".((int) $conciliated);\n\t\t$sql .= \", num_releve = '\".$this->db->escape($this->num_releve).\"'\";\n\t\tif ($conciliated) {\n\t\t\t$sql .= \", fk_user_rappro = \".$user->id;\n\t\t}\n\t\t$sql .= \" WHERE rowid = \".((int) $this->id);\n\n\t\tdol_syslog(get_class($this).\"::update_conciliation\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\tif (!empty($cat)) {\n\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"bank_class (\";\n\t\t\t\t$sql .= \"lineid\";\n\t\t\t\t$sql .= \", fk_categ\";\n\t\t\t\t$sql .= \") VALUES (\";\n\t\t\t\t$sql .= $this->id;\n\t\t\t\t$sql .= \", \".$cat;\n\t\t\t\t$sql .= \")\";\n\n\t\t\t\tdol_syslog(get_class($this).\"::update_conciliation\", LOG_DEBUG);\n\t\t\t\t$this->db->query($sql);\n\n\t\t\t\t// No error check. Can fail if category already affected\n\t\t\t}\n\n\t\t\t$this->rappro = 1;\n\n\t\t\t$this->db->commit();\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * \tIncrease/decrease value date of a rowid\n\t *\n\t *\t@param\tint\t\t$rowid\t\tId of line\n\t *\t@param\tint\t\t$sign\t\t1 or -1\n\t *\t@return\tint\t\t\t\t\t>0 if OK, 0 if KO\n\t */\n\tpublic function datev_change($rowid, $sign = 1)\n\t{\n\t\t// phpcs:enable\n\t\t$sql = \"SELECT datev FROM \".MAIN_DB_PREFIX.\"bank WHERE rowid = \".((int) $rowid);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t$newdate = $this->db->jdate($obj->datev) + (3600 * 24 * $sign);\n\n\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"bank SET\";\n\t\t\t$sql .= \" datev = '\".$this->db->idate($newdate).\"'\";\n\t\t\t$sql .= \" WHERE rowid = \".((int) $rowid);\n\n\t\t\t$result = $this->db->query($sql);\n\t\t\tif ($result) {\n\t\t\t\tif ($this->db->affected_rows($result)) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdol_print_error($this->db);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * \tIncrease value date of a rowid\n\t *\n\t *\t@param\tint\t\t$id\t\tId of line to change\n\t *\t@return\tint\t\t\t\t>0 if OK, 0 if KO\n\t */\n\tpublic function datev_next($id)\n\t{\n\t\t// phpcs:enable\n\t\treturn $this->datev_change($id, 1);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * \tDecrease value date of a rowid\n\t *\n\t *\t@param\tint\t\t$id\t\tId of line to change\n\t *\t@return\tint\t\t\t\t>0 if OK, 0 if KO\n\t */\n\tpublic function datev_previous($id)\n\t{\n\t\t// phpcs:enable\n\t\treturn $this->datev_change($id, -1);\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * \tIncrease/decrease operation date of a rowid\n\t *\n\t *\t@param\tint\t\t$rowid\t\tId of line\n\t *\t@param\tint\t\t$sign\t\t1 or -1\n\t *\t@return\tint\t\t\t\t\t>0 if OK, 0 if KO\n\t */\n\tpublic function dateo_change($rowid, $sign = 1)\n\t{\n\t\t// phpcs:enable\n\t\t$sql = \"SELECT dateo FROM \".MAIN_DB_PREFIX.\"bank WHERE rowid = \".((int) $rowid);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t$newdate = $this->db->jdate($obj->dateo) + (3600 * 24 * $sign);\n\n\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"bank SET\";\n\t\t\t$sql .= \" dateo = '\".$this->db->idate($newdate).\"'\";\n\t\t\t$sql .= \" WHERE rowid = \".((int) $rowid);\n\n\t\t\t$result = $this->db->query($sql);\n\t\t\tif ($result) {\n\t\t\t\tif ($this->db->affected_rows($result)) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdol_print_error($this->db);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * \tIncrease operation date of a rowid\n\t *\n\t *\t@param\tint\t\t$id\t\tId of line to change\n\t *\t@return\tint\t\t\t\t>0 if OK, 0 if KO\n\t */\n\tpublic function dateo_next($id)\n\t{\n\t\t// phpcs:enable\n\t\treturn $this->dateo_change($id, 1);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * \tDecrease operation date of a rowid\n\t *\n\t *\t@param\tint\t\t$id\t\tId of line to change\n\t *\t@return\tint\t\t\t\t>0 if OK, 0 if KO\n\t */\n\tpublic function dateo_previous($id)\n\t{\n\t\t// phpcs:enable\n\t\treturn $this->dateo_change($id, -1);\n\t}\n\n\n\t/**\n\t *\tLoad miscellaneous information for tab \"Info\"\n\t *\n\t *\t@param  int\t\t$id\t\tId of object to load\n\t *\t@return\tvoid\n\t */\n\tpublic function info($id)\n\t{\n\t\t$sql = 'SELECT b.rowid, b.datec, b.tms as datem,';\n\t\t$sql .= ' b.fk_user_author, b.fk_user_rappro';\n\t\t$sql .= ' FROM '.MAIN_DB_PREFIX.'bank as b';\n\t\t$sql .= ' WHERE b.rowid = '.((int) $id);\n\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\tif ($this->db->num_rows($result)) {\n\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\t$this->id = $obj->rowid;\n\n\t\t\t\tif ($obj->fk_user_author) {\n\t\t\t\t\t$cuser = new User($this->db);\n\t\t\t\t\t$cuser->fetch($obj->fk_user_author);\n\t\t\t\t\t$this->user_creation = $cuser;\n\t\t\t\t}\n\t\t\t\tif ($obj->fk_user_rappro) {\n\t\t\t\t\t$ruser = new User($this->db);\n\t\t\t\t\t$ruser->fetch($obj->fk_user_rappro);\n\t\t\t\t\t$this->user_rappro = $ruser;\n\t\t\t\t}\n\n\t\t\t\t$this->date_creation     = $this->db->jdate($obj->datec);\n\t\t\t\t$this->date_modification = $this->db->jdate($obj->datem);\n\t\t\t\t//$this->date_rappro       = $obj->daterappro;    // Not yet managed\n\t\t\t}\n\t\t\t$this->db->free($result);\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\n\t/**\n\t *    \tReturn clickable name (with picto eventually)\n\t *\n\t *\t\t@param\tint\t\t$withpicto\t\t0=No picto, 1=Include picto into link, 2=Only picto\n\t *\t\t@param\tint\t\t$maxlen\t\t\tLongueur max libelle\n\t *\t\t@param\tstring\t$option\t\t\tOption ('', 'showall', 'showconciliated', 'showconciliatedandaccounted'). Options may be slow.\n\t * \t\t@param\tint     $notooltip\t\t1=Disable tooltip\n\t *\t\t@return\tstring\t\t\t\t\tChaine avec URL\n\t */\n\tpublic function getNomUrl($withpicto = 0, $maxlen = 0, $option = '', $notooltip = 0)\n\t{\n\t\tglobal $langs;\n\n\t\t$result = '';\n\n\t\t$label = img_picto('', $this->picto).' <u>'.$langs->trans(\"Transaction\").'</u>:<br>';\n\t\t$label .= '<b>'.$langs->trans(\"Ref\").':</b> '.$this->ref;\n\n\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/compta/bank/line.php?rowid='.((int) $this->id).'&save_lastsearch_values=1\" title=\"'.dol_escape_htmltag($label, 1).'\" class=\"classfortooltip\">';\n\t\t$linkend = '</a>';\n\n\t\t$result .= $linkstart;\n\t\tif ($withpicto) {\n\t\t\t$result .= img_object(($notooltip ? '' : $label), ($this->picto ? $this->picto : 'account'), ($notooltip ? (($withpicto != 2) ? 'class=\"paddingright\"' : '') : 'class=\"'.(($withpicto != 2) ? 'paddingright ' : '').'classfortooltip\"'), 0, 0, $notooltip ? 0 : 1);\n\t\t}\n\t\tif ($withpicto != 2) {\n\t\t\t$result .= ($this->ref ? $this->ref : $this->id);\n\t\t}\n\t\t$result .= $linkend;\n\n\t\tif ($option == 'showall' || $option == 'showconciliated' || $option == 'showconciliatedandaccounted') {\n\t\t\t$result .= ' <span class=\"opacitymedium\">(';\n\t\t}\n\t\tif ($option == 'showall') {\n\t\t\t$result .= $langs->trans(\"BankAccount\").': ';\n\t\t\t$accountstatic = new Account($this->db);\n\t\t\t$accountstatic->id = $this->fk_account;\n\t\t\t$accountstatic->ref = $this->bank_account_ref;\n\t\t\t$accountstatic->label = $this->bank_account_label;\n\t\t\t$result .= $accountstatic->getNomUrl(0).', ';\n\t\t}\n\t\tif ($option == 'showall' || $option == 'showconciliated' || $option == 'showconciliatedandaccounted') {\n\t\t\t$result .= $langs->trans(\"BankLineConciliated\").': ';\n\t\t\t$result .= yn($this->rappro);\n\t\t}\n\t\tif ($option == 'showall' || $option == 'showconciliatedandaccounted') {\n\t\t\t$sql = \"SELECT COUNT(rowid) as nb FROM \".MAIN_DB_PREFIX.\"accounting_bookkeeping WHERE doc_type = 'bank' AND fk_doc = \".$this->id;\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\tif ($obj && $obj->nb) {\n\t\t\t\t\t$result .= ' - '.$langs->trans(\"Accounted\").': '.yn(1);\n\t\t\t\t} else {\n\t\t\t\t\t$result .= ' - '.$langs->trans(\"Accounted\").': '.yn(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ($option == 'showall' || $option == 'showconciliated' || $option == 'showconciliatedandaccounted') {\n\t\t\t$result .= ')</span>';\n\t\t}\n\n\t\treturn $result;\n\t}\n\n\n\t/**\n\t *    Return label of status (activity, closed)\n\t *\n\t *    @param\tint\t\t$mode       0=libelle long, 1=libelle court, 2=Picto + Libelle court, 3=Picto, 4=Picto + Libelle long\n\t *    @return   string        \t\tLibelle\n\t */\n\tpublic function getLibStatut($mode = 0)\n\t{\n\t\treturn $this->LibStatut($this->status, $mode);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Renvoi le libelle d'un statut donne\n\t *\n\t *  @param\tint\t\t$status         Id statut\n\t *  @param\tint\t\t$mode           0=libelle long, 1=libelle court, 2=Picto + Libelle court, 3=Picto, 4=Picto + Libelle long, 5=Libelle court + Picto\n\t *  @return\tstring          \t\tLibelle du statut\n\t */\n\tpublic function LibStatut($status, $mode = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\t//$langs->load('companies');\n\t\t/*\n\t\tif ($mode == 0)\n\t\t{\n\t\t\tif ($status==0) return $langs->trans(\"ActivityCeased\");\n\t\t\tif ($status==1) return $langs->trans(\"InActivity\");\n\t\t}\n\t\tif ($mode == 1)\n\t\t{\n\t\t\tif ($status==0) return $langs->trans(\"ActivityCeased\");\n\t\t\tif ($status==1) return $langs->trans(\"InActivity\");\n\t\t}\n\t\tif ($mode == 2)\n\t\t{\n\t\t\tif ($status==0) return img_picto($langs->trans(\"ActivityCeased\"),'statut5', 'class=\"pictostatus\"').' '.$langs->trans(\"ActivityCeased\");\n\t\t\tif ($status==1) return img_picto($langs->trans(\"InActivity\"),'statut4', 'class=\"pictostatus\"').' '.$langs->trans(\"InActivity\");\n\t\t}\n\t\tif ($mode == 3)\n\t\t{\n\t\t\tif ($status==0) return img_picto($langs->trans(\"ActivityCeased\"),'statut5', 'class=\"pictostatus\"');\n\t\t\tif ($status==1) return img_picto($langs->trans(\"InActivity\"),'statut4', 'class=\"pictostatus\"');\n\t\t}\n\t\tif ($mode == 4)\n\t\t{\n\t\t\tif ($status==0) return img_picto($langs->trans(\"ActivityCeased\"),'statut5', 'class=\"pictostatus\"').' '.$langs->trans(\"ActivityCeased\");\n\t\t\tif ($status==1) return img_picto($langs->trans(\"InActivity\"),'statut4', 'class=\"pictostatus\"').' '.$langs->trans(\"InActivity\");\n\t\t}\n\t\tif ($mode == 5)\n\t\t{\n\t\t\tif ($status==0) return $langs->trans(\"ActivityCeased\").' '.img_picto($langs->trans(\"ActivityCeased\"),'statut5', 'class=\"pictostatus\"');\n\t\t\tif ($status==1) return $langs->trans(\"InActivity\").' '.img_picto($langs->trans(\"InActivity\"),'statut4', 'class=\"pictostatus\"');\n\t\t}*/\n\t}\n\n\n\t/**\n\t *\tReturn if a bank line was dispatched into bookkeeping\n\t *\n\t *\t@return     int         <0 if KO, 0=no, 1=yes\n\t */\n\tpublic function getVentilExportCompta()\n\t{\n\t\t$alreadydispatched = 0;\n\n\t\t$type = 'bank';\n\n\t\t$sql = \" SELECT COUNT(ab.rowid) as nb FROM \".MAIN_DB_PREFIX.\"accounting_bookkeeping as ab WHERE ab.doc_type='\".$this->db->escape($type).\"' AND ab.fk_doc = \".((int) $this->id);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\tif ($obj) {\n\t\t\t\t$alreadydispatched = $obj->nb;\n\t\t\t}\n\t\t} else {\n\t\t\t$this->error = $this->db->lasterror();\n\t\t\treturn -1;\n\t\t}\n\n\t\tif ($alreadydispatched) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n}\n", "<?php\n/* Copyright (C) 2016       Laurent Destailleur <eldy@users.sourceforge.net>\n * Copyright (C) 2014       Juanjo Menent       <jmenent@2byte.es>\n * Copyright (C) 2015       Florian Henry       <florian.henry@open-concept.pro>\n * Copyright (C) 2015       Rapha\u00ebl Doursenaud  <rdoursenaud@gpcsolutions.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n * \\file    htdocs/compta/sociales/class/cchargesociales.class.php\n * \\ingroup tax\n * \\brief   File to manage type of social/fiscal taxes\n */\n\n// Put here all includes required by your class file\n//require_once DOL_DOCUMENT_ROOT . '/core/class/commonobject.class.php';\n//require_once DOL_DOCUMENT_ROOT . '/societe/class/societe.class.php';\n//require_once DOL_DOCUMENT_ROOT . '/product/class/product.class.php';\n\n/**\n * Class Cchargesociales\n */\nclass Cchargesociales\n{\n\t/**\n\t * @var string Id to identify managed objects\n\t */\n\tpublic $element = 'cchargesociales';\n\n\t/**\n\t * @var string Name of table without prefix where object is stored\n\t */\n\tpublic $table_element = 'c_chargesociales';\n\n\t/**\n\t * @var string Label\n\t * @deprecated\n\t */\n\tpublic $libelle;\n\n\t/**\n\t * @var string Label\n\t */\n\tpublic $label;\n\n\tpublic $deductible;\n\tpublic $active;\n\tpublic $code;\n\n\t/**\n\t * @var int ID\n\t */\n\tpublic $fk_pays;\n\n\t/**\n\t * @var string module\n\t */\n\tpublic $module;\n\tpublic $accountancy_code;\n\n\n\t/**\n\t * Constructor\n\t *\n\t * @param DoliDb $db Database handler\n\t */\n\tpublic function __construct(DoliDB $db)\n\t{\n\t\t$this->db = $db;\n\t}\n\n\t/**\n\t * Create object into database\n\t *\n\t * @param  User $user      User that creates\n\t * @param  bool $notrigger false=launch triggers after, true=disable triggers\n\t *\n\t * @return int <0 if KO, Id of created object if OK\n\t */\n\tpublic function create(User $user, $notrigger = false)\n\t{\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$error = 0;\n\n\t\t// Clean parameters\n\t\t$this->trimParameters(\n\t\t\tarray(\n\t\t\t\t'libelle',\n\t\t\t\t'deductible',\n\t\t\t\t'active',\n\t\t\t\t'code',\n\t\t\t\t'fk_pays',\n\t\t\t\t'module',\n\t\t\t\t'accountancy_code',\n\t\t\t)\n\t\t);\n\n\t\t// Check parameters\n\t\t// Put here code to add control on parameters values\n\n\t\t// Insert request\n\t\t$sql = 'INSERT INTO '.MAIN_DB_PREFIX.$this->table_element.'(';\n\t\t$sql .= 'libelle,';\n\t\t$sql .= 'deductible,';\n\t\t$sql .= 'active,';\n\t\t$sql .= 'code,';\n\t\t$sql .= 'fk_pays,';\n\t\t$sql .= 'module';\n\t\t$sql .= 'accountancy_code';\n\t\t$sql .= ') VALUES (';\n\t\t$sql .= ' '.(!isset($this->libelle) ? 'NULL' : \"'\".$this->db->escape($this->libelle).\"'\").',';\n\t\t$sql .= ' '.(!isset($this->deductible) ? 'NULL' : $this->deductible).',';\n\t\t$sql .= ' '.(!isset($this->active) ? 'NULL' : $this->active).',';\n\t\t$sql .= ' '.(!isset($this->code) ? 'NULL' : \"'\".$this->db->escape($this->code).\"'\").',';\n\t\t$sql .= ' '.(!isset($this->fk_pays) ? 'NULL' : $this->fk_pays).',';\n\t\t$sql .= ' '.(!isset($this->module) ? 'NULL' : \"'\".$this->db->escape($this->module).\"'\").',';\n\t\t$sql .= ' '.(!isset($this->accountancy_code) ? 'NULL' : \"'\".$this->db->escape($this->accountancy_code).\"'\");\n\t\t$sql .= ')';\n\n\t\t$this->db->begin();\n\n\t\t$resql = $this->db->query($sql);\n\t\tif (!$resql) {\n\t\t\t$error++;\n\t\t\t$this->errors[] = 'Error '.$this->db->lasterror();\n\t\t\tdol_syslog(__METHOD__.' '.join(',', $this->errors), LOG_ERR);\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$this->id = $this->db->last_insert_id(MAIN_DB_PREFIX.$this->table_element);\n\n\t\t\t//if (!$notrigger) {\n\t\t\t\t// Uncomment this and change MYOBJECT to your own tag if you\n\t\t\t\t// want this action to call a trigger.\n\n\t\t\t\t//// Call triggers\n\t\t\t\t//$result=$this->call_trigger('MYOBJECT_CREATE',$user);\n\t\t\t\t//if ($result < 0) $error++;\n\t\t\t\t//// End call triggers\n\t\t\t//}\n\t\t}\n\n\t\t// Commit or rollback\n\t\tif ($error) {\n\t\t\t$this->db->rollback();\n\n\t\t\treturn -1 * $error;\n\t\t} else {\n\t\t\t$this->db->commit();\n\n\t\t\treturn $this->id;\n\t\t}\n\t}\n\n\t/**\n\t * Load object in memory from the database\n\t *\n\t * @param int    $id  Id object\n\t * @param string $ref Ref\n\t *\n\t * @return int <0 if KO, 0 if not found, >0 if OK\n\t */\n\tpublic function fetch($id, $ref = null)\n\t{\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$sql = 'SELECT';\n\t\t$sql .= \" t.id,\";\n\t\t$sql .= \" t.libelle as label,\";\n\t\t$sql .= \" t.deductible,\";\n\t\t$sql .= \" t.active,\";\n\t\t$sql .= \" t.code,\";\n\t\t$sql .= \" t.fk_pays,\";\n\t\t$sql .= \" t.module,\";\n\t\t$sql .= \" t.accountancy_code\";\n\t\t$sql .= ' FROM '.MAIN_DB_PREFIX.$this->table_element.' as t';\n\t\tif (null !== $ref) {\n\t\t\t$sql .= \" WHERE t.code = '\".$this->db->escape($ref).\"'\";\n\t\t} else {\n\t\t\t$sql .= ' WHERE t.id = '.((int) $id);\n\t\t}\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$numrows = $this->db->num_rows($resql);\n\t\t\tif ($numrows) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t$this->id = $obj->id;\n\n\t\t\t\t$this->libelle = $obj->label;\n\t\t\t\t$this->label = $obj->label;\n\t\t\t\t$this->deductible = $obj->deductible;\n\t\t\t\t$this->active = $obj->active;\n\t\t\t\t$this->code = $obj->code;\n\t\t\t\t$this->fk_pays = $obj->fk_pays;\n\t\t\t\t$this->module = $obj->module;\n\t\t\t\t$this->accountancy_code = $obj->accountancy_code;\n\t\t\t}\n\t\t\t$this->db->free($resql);\n\n\t\t\tif ($numrows) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\t$this->errors[] = 'Error '.$this->db->lasterror();\n\t\t\tdol_syslog(__METHOD__.' '.join(',', $this->errors), LOG_ERR);\n\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t * Update object into database\n\t *\n\t * @param  User $user      User that modifies\n\t * @param  bool $notrigger false=launch triggers after, true=disable triggers\n\t *\n\t * @return int <0 if KO, >0 if OK\n\t */\n\tpublic function update(User $user, $notrigger = false)\n\t{\n\t\t$error = 0;\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t// Clean parameters\n\n\t\t$this->trimParameters(\n\t\t\tarray(\n\t\t\t\t'libelle',\n\t\t\t\t'deductible',\n\t\t\t\t'active',\n\t\t\t\t'code',\n\t\t\t\t'fk_pays',\n\t\t\t\t'module',\n\t\t\t\t'accountancy_code',\n\t\t\t)\n\t\t);\n\n\n\t\t// Check parameters\n\t\t// Put here code to add a control on parameters values\n\n\t\t// Update request\n\t\t$sql = 'UPDATE '.MAIN_DB_PREFIX.$this->table_element.' SET';\n\t\t$sql .= ' libelle = '.(isset($this->libelle) ? \"'\".$this->db->escape($this->libelle).\"'\" : \"null\").',';\n\t\t$sql .= ' deductible = '.(isset($this->deductible) ? $this->deductible : \"null\").',';\n\t\t$sql .= ' active = '.(isset($this->active) ? $this->active : \"null\").',';\n\t\t$sql .= ' code = '.(isset($this->code) ? \"'\".$this->db->escape($this->code).\"'\" : \"null\").',';\n\t\t$sql .= ' fk_pays = '.(isset($this->fk_pays) ? $this->fk_pays : \"null\").',';\n\t\t$sql .= ' module = '.(isset($this->module) ? \"'\".$this->db->escape($this->module).\"'\" : \"null\").',';\n\t\t$sql .= ' accountancy_code = '.(isset($this->accountancy_code) ? \"'\".$this->db->escape($this->accountancy_code).\"'\" : \"null\");\n\t\t$sql .= ' WHERE id='.$this->id;\n\n\t\t$this->db->begin();\n\n\t\t$resql = $this->db->query($sql);\n\t\tif (!$resql) {\n\t\t\t$error++;\n\t\t\t$this->errors[] = 'Error '.$this->db->lasterror();\n\t\t\tdol_syslog(__METHOD__.' '.join(',', $this->errors), LOG_ERR);\n\t\t}\n\n\t\t//if (!$error && !$notrigger) {\n\t\t\t// Uncomment this and change MYOBJECT to your own tag if you\n\t\t\t// want this action calls a trigger.\n\n\t\t\t//// Call triggers\n\t\t\t//$result=$this->call_trigger('MYOBJECT_MODIFY',$user);\n\t\t\t//if ($result < 0) { $error++; //Do also what you must do to rollback action if trigger fail}\n\t\t\t//// End call triggers\n\t\t//}\n\n\t\t// Commit or rollback\n\t\tif ($error) {\n\t\t\t$this->db->rollback();\n\n\t\t\treturn -1 * $error;\n\t\t} else {\n\t\t\t$this->db->commit();\n\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\t/**\n\t * Delete object in database\n\t *\n\t * @param User $user      User that deletes\n\t * @param bool $notrigger false=launch triggers after, true=disable triggers\n\t *\n\t * @return int <0 if KO, >0 if OK\n\t */\n\tpublic function delete(User $user, $notrigger = false)\n\t{\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$error = 0;\n\n\t\t$this->db->begin();\n\n\t\t//if (!$error) {\n\t\t\t//if (!$notrigger) {\n\t\t\t\t// Uncomment this and change MYOBJECT to your own tag if you\n\t\t\t\t// want this action calls a trigger.\n\n\t\t\t\t//// Call triggers\n\t\t\t\t//$result=$this->call_trigger('MYOBJECT_DELETE',$user);\n\t\t\t\t//if ($result < 0) { $error++; //Do also what you must do to rollback action if trigger fail}\n\t\t\t\t//// End call triggers\n\t\t\t//}\n\t\t//}\n\n\t\tif (!$error) {\n\t\t\t$sql = 'DELETE FROM '.MAIN_DB_PREFIX.$this->table_element;\n\t\t\t$sql .= ' WHERE id='.$this->id;\n\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\t$error++;\n\t\t\t\t$this->errors[] = 'Error '.$this->db->lasterror();\n\t\t\t\tdol_syslog(__METHOD__.' '.join(',', $this->errors), LOG_ERR);\n\t\t\t}\n\t\t}\n\n\t\t// Commit or rollback\n\t\tif ($error) {\n\t\t\t$this->db->rollback();\n\n\t\t\treturn -1 * $error;\n\t\t} else {\n\t\t\t$this->db->commit();\n\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\t/**\n\t * Load an object from its id and create a new one in database\n\t *\n\t * @param\tUser\t$user\t\tUser making the clone\n\t * @param   int     $fromid     Id of object to clone\n\t * @return  int                 New id of clone\n\t */\n\tpublic function createFromClone(User $user, $fromid)\n\t{\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$error = 0;\n\t\t$object = new Cchargesociales($this->db);\n\n\t\t$this->db->begin();\n\n\t\t// Load source object\n\t\t$object->fetch($fromid);\n\t\t// Reset object\n\t\t$object->id = 0;\n\n\t\t// Clear fields\n\t\t// ...\n\n\t\t// Create clone\n\t\t$this->context['createfromclone'] = 'createfromclone';\n\t\t$result = $object->create($user);\n\n\t\t// Other options\n\t\tif ($result < 0) {\n\t\t\t$error++;\n\t\t\t$this->errors = $object->errors;\n\t\t\tdol_syslog(__METHOD__.' '.join(',', $this->errors), LOG_ERR);\n\t\t}\n\n\t\tunset($this->context['createfromclone']);\n\n\t\t// End\n\t\tif (!$error) {\n\t\t\t$this->db->commit();\n\n\t\t\treturn $object->id;\n\t\t} else {\n\t\t\t$this->db->rollback();\n\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *  Return a link to the user card (with optionaly the picto)\n\t * \tUse this->id,this->lastname, this->firstname\n\t *\n\t *\t@param\tint\t\t$withpicto\t\t\tInclude picto in link (0=No picto, 1=Include picto into link, 2=Only picto)\n\t *\t@param\tstring\t$option\t\t\t\tOn what the link point to\n\t *  @param\tinteger\t$notooltip\t\t\t1=Disable tooltip\n\t *  @param\tint\t\t$maxlen\t\t\t\tMax length of visible user name\n\t *  @param  string  $morecss            Add more css on link\n\t *\t@return\tstring\t\t\t\t\t\tString with URL\n\t */\n\tpublic function getNomUrl($withpicto = 0, $option = '', $notooltip = 0, $maxlen = 24, $morecss = '')\n\t{\n\t\tglobal $langs, $conf, $db;\n\t\tglobal $dolibarr_main_authentication, $dolibarr_main_demo;\n\t\tglobal $menumanager;\n\n\n\t\t$result = '';\n\t\t$companylink = '';\n\n\t\t$label = '<u>'.$langs->trans(\"MyModule\").'</u>';\n\t\t$label .= '<div width=\"100%\">';\n\t\t$label .= '<b>'.$langs->trans('Ref').':</b> '.$this->ref;\n\n\t\t$link = '<a href=\"'.DOL_URL_ROOT.'/tax/card.php?id='.$this->id.'\"';\n\t\t$link .= ($notooltip ? '' : ' title=\"'.dol_escape_htmltag($label, 1).'\" class=\"classfortooltip'.($morecss ? ' '.$morecss : '').'\"');\n\t\t$link .= '>';\n\t\t$linkend = '</a>';\n\n\t\tif ($withpicto) {\n\t\t\t$result .= ($link.img_object(($notooltip ? '' : $label), 'label', ($notooltip ? '' : 'class=\"classfortooltip\"'), 0, 0, $notooltip ? 0 : 1).$linkend);\n\t\t\tif ($withpicto != 2) {\n\t\t\t\t$result .= ' ';\n\t\t\t}\n\t\t}\n\t\t$result .= $link.$this->ref.$linkend;\n\t\treturn $result;\n\t}\n\n\t/**\n\t *  Retourne le libelle du status d'un user (actif, inactif)\n\t *\n\t *  @param\tint\t\t$mode          0=libelle long, 1=libelle court, 2=Picto + Libelle court, 3=Picto, 4=Picto + Libelle long, 5=Libelle court + Picto\n\t *  @return\tstring \t\t\t       Label of status\n\t */\n\tpublic function getLibStatut($mode = 0)\n\t{\n\t\treturn $this->LibStatut($this->status, $mode);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Renvoi le libelle d'un status donne\n\t *\n\t *  @param\tint\t\t$status        \tId status\n\t *  @param  int\t\t$mode          \t0=libelle long, 1=libelle court, 2=Picto + Libelle court, 3=Picto, 4=Picto + Libelle long, 5=Libelle court + Picto\n\t *  @return string \t\t\t       \tLabel of status\n\t */\n\tpublic function LibStatut($status, $mode = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\tif ($mode == 0) {\n\t\t\tif ($status == 1) {\n\t\t\t\treturn $langs->trans('Enabled');\n\t\t\t} elseif ($status == 0) {\n\t\t\t\treturn $langs->trans('Disabled');\n\t\t\t}\n\t\t} elseif ($mode == 1) {\n\t\t\tif ($status == 1) {\n\t\t\t\treturn $langs->trans('Enabled');\n\t\t\t} elseif ($status == 0) {\n\t\t\t\treturn $langs->trans('Disabled');\n\t\t\t}\n\t\t} elseif ($mode == 2) {\n\t\t\tif ($status == 1) {\n\t\t\t\treturn img_picto($langs->trans('Enabled'), 'statut4').' '.$langs->trans('Enabled');\n\t\t\t} elseif ($status == 0) {\n\t\t\t\treturn img_picto($langs->trans('Disabled'), 'statut5').' '.$langs->trans('Disabled');\n\t\t\t}\n\t\t} elseif ($mode == 3) {\n\t\t\tif ($status == 1) {\n\t\t\t\treturn img_picto($langs->trans('Enabled'), 'statut4');\n\t\t\t} elseif ($status == 0) {\n\t\t\t\treturn img_picto($langs->trans('Disabled'), 'statut5');\n\t\t\t}\n\t\t} elseif ($mode == 4) {\n\t\t\tif ($status == 1) {\n\t\t\t\treturn img_picto($langs->trans('Enabled'), 'statut4').' '.$langs->trans('Enabled');\n\t\t\t} elseif ($status == 0) {\n\t\t\t\treturn img_picto($langs->trans('Disabled'), 'statut5').' '.$langs->trans('Disabled');\n\t\t\t}\n\t\t} elseif ($mode == 5) {\n\t\t\tif ($status == 1) {\n\t\t\t\treturn $langs->trans('Enabled').' '.img_picto($langs->trans('Enabled'), 'statut4');\n\t\t\t} elseif ($status == 0) {\n\t\t\t\treturn $langs->trans('Disabled').' '.img_picto($langs->trans('Disabled'), 'statut5');\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Initialise object with example values\n\t * Id must be 0 if object instance is a specimen\n\t *\n\t * @return void\n\t */\n\tpublic function initAsSpecimen()\n\t{\n\t\t$this->id = 0;\n\n\t\t$this->libelle = '';\n\t\t$this->label = '';\n\t\t$this->deductible = '';\n\t\t$this->active = '';\n\t\t$this->code = '';\n\t\t$this->fk_pays = '';\n\t\t$this->module = '';\n\t\t$this->accountancy_code = '';\n\t}\n\n\t/**\n\t * Trim object parameters\n\t *\n\t * @param string[] $parameters array of parameters to trim\n\t * @return void\n\t */\n\tprivate function trimParameters($parameters)\n\t{\n\t\tforeach ($parameters as $parameter) {\n\t\t\tif (isset($this->$parameter)) {\n\t\t\t\t$this->$parameter = trim($this->$parameter);\n\t\t\t}\n\t\t}\n\t}\n}\n", "<?php\n/* Copyright (C) 2001-2007  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2003       Brian Fraval            <brian@fraval.org>\n * Copyright (C) 2004-2015  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2005       Eric Seigne             <eric.seigne@ryxeo.com>\n * Copyright (C) 2005-2017  Regis Houssin           <regis.houssin@inodbox.com>\n * Copyright (C) 2008       Patrick Raguin          <patrick.raguin@auguria.net>\n * Copyright (C) 2010-2020  Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2011-2013  Alexandre Spangaro      <aspangaro@open-dsi.fr>\n * Copyright (C) 2015       Jean-Fran\u00e7ois Ferry     <jfefe@aternatik.fr>\n * Copyright (C) 2015       Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2015       Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2018       Nicolas ZABOURI\t        <info@inovea-conseil.com>\n * Copyright (C) 2018       Ferran Marcet\t\t    <fmarcet@2byte.es.com>\n * Copyright (C) 2018-2021  Fr\u00e9d\u00e9ric France         <frederic.france@netlogic.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n *  \\file       htdocs/societe/card.php\n *  \\ingroup    societe\n *  \\brief      Third party card page\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/images.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formfile.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/extrafields.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/contact/class/contact.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\nif (!empty($conf->adherent->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\n}\nif (!empty($conf->accounting->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/accounting.lib.php';\n}\nif (!empty($conf->accounting->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formaccounting.class.php';\n}\nif (!empty($conf->accounting->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/accountancy/class/accountingaccount.class.php';\n}\nif (! empty($conf->eventorganization->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/eventorganization/class/conferenceorboothattendee.class.php';\n}\n\n\n$langs->loadLangs(array(\"companies\", \"commercial\", \"bills\", \"banks\", \"users\"));\nif (!empty($conf->adherent->enabled)) {\n\t$langs->load(\"members\");\n}\nif (!empty($conf->categorie->enabled)) {\n\t$langs->load(\"categories\");\n}\nif (!empty($conf->incoterm->enabled)) {\n\t$langs->load(\"incoterm\");\n}\nif (!empty($conf->notification->enabled)) {\n\t$langs->load(\"mails\");\n}\n\n$mesg = ''; $error = 0; $errors = array();\n\n$action\t\t= (GETPOST('action', 'aZ09') ? GETPOST('action', 'aZ09') : 'view');\n$cancel\t\t= GETPOST('cancel', 'alpha');\n$backtopage = GETPOST('backtopage', 'alpha');\n$confirm\t= GETPOST('confirm', 'alpha');\n\n$socid = GETPOST('socid', 'int') ?GETPOST('socid', 'int') : GETPOST('id', 'int');\nif ($user->socid) {\n\t$socid = $user->socid;\n}\nif (empty($socid) && $action == 'view') {\n\t$action = 'create';\n}\n\n$object = new Societe($db);\n$extrafields = new ExtraFields($db);\n\n// fetch optionals attributes and labels\n$extrafields->fetch_name_optionals_label($object->table_element);\n\n$socialnetworks = getArrayOfSocialNetworks();\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('thirdpartycard', 'globalcard'));\n\nif ($socid > 0) {\n\t$object->fetch($socid);\n}\n\nif (!($object->id > 0) && $action == 'view') {\n\t$langs->load(\"errors\");\n\tprint($langs->trans('ErrorRecordNotFound'));\n\texit;\n}\n\n// Get object canvas (By default, this is not defined, so standard usage of dolibarr)\n$canvas = $object->canvas ? $object->canvas : GETPOST(\"canvas\");\n$objcanvas = null;\nif (!empty($canvas)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/canvas.class.php';\n\t$objcanvas = new Canvas($db, $action);\n\t$objcanvas->getCanvas('thirdparty', 'card', $canvas);\n}\n\n$permissiontoread = $user->rights->societe->lire;\n$permissiontoadd = $user->rights->societe->creer; // Used by the include of actions_addupdatedelete.inc.php and actions_lineupdown.inc.php\n$permissiontodelete = $user->rights->societe->supprimer || ($permissiontoadd && isset($object->status) && $object->status == 0);\n$permissionnote = $user->rights->societe->creer; // Used by the include of actions_setnotes.inc.php\n$permissiondellink = $user->rights->societe->creer; // Used by the include of actions_dellink.inc.php\n$upload_dir = $conf->societe->multidir_output[isset($object->entity) ? $object->entity : 1];\n\n// Security check\n$result = restrictedArea($user, 'societe', $socid, '&societe', '', 'fk_soc', 'rowid', 0);\n\n/*\nif ($object->id > 0) {\n\tif ($object->client == 0 && $object->fournisseur > 0) {\n\t\tif (!empty($user->rights->fournisseur->lire)) {\n\t\t\taccessforbidden();\n\t\t}\n\t}\n}\n*/\n\n\n\n/*\n * Actions\n */\n\n$parameters = array('id'=>$socid, 'objcanvas'=>$objcanvas);\n$reshook = $hookmanager->executeHooks('doActions', $parameters, $object, $action); // Note that $action and $object may have been modified by some hooks\nif ($reshook < 0) {\n\tsetEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n}\n\nif (empty($reshook)) {\n\tif ($cancel) {\n\t\t$action = '';\n\t\tif (!empty($backtopage)) {\n\t\t\theader(\"Location: \".$backtopage);\n\t\t\texit;\n\t\t}\n\t}\n\n\tif ($action == 'confirm_merge' && $confirm == 'yes' && $user->rights->societe->creer) {\n\t\t$error = 0;\n\t\t$soc_origin_id = GETPOST('soc_origin', 'int');\n\t\t$soc_origin = new Societe($db);\n\n\t\tif ($soc_origin_id <= 0) {\n\t\t\t$langs->load('errors');\n\t\t\tsetEventMessages($langs->trans('ErrorThirdPartyIdIsMandatory', $langs->transnoentitiesnoconv('MergeOriginThirdparty')), null, 'errors');\n\t\t} else {\n\t\t\tif (!$error && $soc_origin->fetch($soc_origin_id) < 1) {\n\t\t\t\tsetEventMessages($langs->trans('ErrorRecordNotFound'), null, 'errors');\n\t\t\t\t$error++;\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\t// TODO Move the merge function into class of object.\n\n\t\t\t\t$db->begin();\n\n\t\t\t\t// Recopy some data\n\t\t\t\t$object->client = $object->client | $soc_origin->client;\n\t\t\t\t$object->fournisseur = $object->fournisseur | $soc_origin->fournisseur;\n\t\t\t\t$listofproperties = array(\n\t\t\t\t\t'address', 'zip', 'town', 'state_id', 'country_id', 'phone', 'phone_pro', 'fax', 'email', 'skype', 'twitter', 'facebook', 'linkedin', 'socialnetworks', 'url', 'barcode',\n\t\t\t\t\t'idprof1', 'idprof2', 'idprof3', 'idprof4', 'idprof5', 'idprof6',\n\t\t\t\t\t'tva_intra', 'effectif_id', 'forme_juridique', 'remise_percent', 'remise_supplier_percent', 'mode_reglement_supplier_id', 'cond_reglement_supplier_id', 'name_bis',\n\t\t\t\t\t'stcomm_id', 'outstanding_limit', 'price_level', 'parent', 'default_lang', 'ref', 'ref_ext', 'import_key', 'fk_incoterms', 'fk_multicurrency',\n\t\t\t\t\t'code_client', 'code_fournisseur', 'code_compta', 'code_compta_fournisseur',\n\t\t\t\t\t'model_pdf', 'fk_projet'\n\t\t\t\t);\n\t\t\t\tforeach ($listofproperties as $property) {\n\t\t\t\t\tif (empty($object->$property)) {\n\t\t\t\t\t\t$object->$property = $soc_origin->$property;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Concat some data\n\t\t\t\t$listofproperties = array(\n\t\t\t\t\t'note_public', 'note_private'\n\t\t\t\t);\n\t\t\t\tforeach ($listofproperties as $property) {\n\t\t\t\t\t$object->$property = dol_concatdesc($object->$property, $soc_origin->$property);\n\t\t\t\t}\n\n\t\t\t\t// Merge extrafields\n\t\t\t\tif (is_array($soc_origin->array_options)) {\n\t\t\t\t\tforeach ($soc_origin->array_options as $key => $val) {\n\t\t\t\t\t\tif (empty($object->array_options[$key])) {\n\t\t\t\t\t\t\t$object->array_options[$key] = $val;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Merge categories\n\t\t\t\t$static_cat = new Categorie($db);\n\n\t\t\t\t$custcats_ori = $static_cat->containing($soc_origin->id, 'customer', 'id');\n\t\t\t\t$custcats = $static_cat->containing($object->id, 'customer', 'id');\n\t\t\t\t$custcats = array_merge($custcats, $custcats_ori);\n\t\t\t\t$object->setCategories($custcats, 'customer');\n\n\t\t\t\t$suppcats_ori = $static_cat->containing($soc_origin->id, 'supplier', 'id');\n\t\t\t\t$suppcats = $static_cat->containing($object->id, 'supplier', 'id');\n\t\t\t\t$suppcats = array_merge($suppcats, $suppcats_ori);\n\t\t\t\t$object->setCategories($suppcats, 'supplier');\n\n\t\t\t\t// If thirdparty has a new code that is same than origin, we clean origin code to avoid duplicate key from database unique keys.\n\t\t\t\tif ($soc_origin->code_client == $object->code_client\n\t\t\t\t\t|| $soc_origin->code_fournisseur == $object->code_fournisseur\n\t\t\t\t\t|| $soc_origin->barcode == $object->barcode) {\n\t\t\t\t\tdol_syslog(\"We clean customer and supplier code so we will be able to make the update of target\");\n\t\t\t\t\t$soc_origin->code_client = '';\n\t\t\t\t\t$soc_origin->code_fournisseur = '';\n\t\t\t\t\t$soc_origin->barcode = '';\n\t\t\t\t\t$soc_origin->update($soc_origin->id, $user, 0, 1, 1, 'merge');\n\t\t\t\t}\n\n\t\t\t\t// Update\n\t\t\t\t$result = $object->update($object->id, $user, 0, 1, 1, 'merge');\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\n\t\t\t\t// Move links\n\t\t\t\tif (!$error) {\n\t\t\t\t\t// This list is also into the api_thirdparties.class.php\n\t\t\t\t\t// TODO Mutualise the list into object societe.class.php\n\t\t\t\t\t$objects = array(\n\t\t\t\t\t\t'Adherent' => '/adherents/class/adherent.class.php',\n\t\t\t\t\t\t'Don' => '/don/class/don.class.php',\n\t\t\t\t\t\t'Societe' => '/societe/class/societe.class.php',\n\t\t\t\t\t\t//'Categorie' => '/categories/class/categorie.class.php',\n\t\t\t\t\t\t'ActionComm' => '/comm/action/class/actioncomm.class.php',\n\t\t\t\t\t\t'Propal' => '/comm/propal/class/propal.class.php',\n\t\t\t\t\t\t'Commande' => '/commande/class/commande.class.php',\n\t\t\t\t\t\t'Facture' => '/compta/facture/class/facture.class.php',\n\t\t\t\t\t\t'FactureRec' => '/compta/facture/class/facture-rec.class.php',\n\t\t\t\t\t\t'LignePrelevement' => '/compta/prelevement/class/ligneprelevement.class.php',\n\t\t\t\t\t\t'Mo' => '/mrp/class/mo.class.php',\n\t\t\t\t\t\t'Contact' => '/contact/class/contact.class.php',\n\t\t\t\t\t\t'Contrat' => '/contrat/class/contrat.class.php',\n\t\t\t\t\t\t'Expedition' => '/expedition/class/expedition.class.php',\n\t\t\t\t\t\t'Fichinter' => '/fichinter/class/fichinter.class.php',\n\t\t\t\t\t\t'CommandeFournisseur' => '/fourn/class/fournisseur.commande.class.php',\n\t\t\t\t\t\t'FactureFournisseur' => '/fourn/class/fournisseur.facture.class.php',\n\t\t\t\t\t\t'SupplierProposal' => '/supplier_proposal/class/supplier_proposal.class.php',\n\t\t\t\t\t\t'ProductFournisseur' => '/fourn/class/fournisseur.product.class.php',\n\t\t\t\t\t\t'Delivery' => '/delivery/class/delivery.class.php',\n\t\t\t\t\t\t'Product' => '/product/class/product.class.php',\n\t\t\t\t\t\t'Project' => '/projet/class/project.class.php',\n\t\t\t\t\t\t'Ticket' => '/ticket/class/ticket.class.php',\n\t\t\t\t\t\t'User' => '/user/class/user.class.php',\n\t\t\t\t\t\t'Account' => '/compta/bank/class/account.class.php',\n\t\t\t\t\t\t'ConferenceOrBoothAttendee' => '/eventorganization/class/conferenceorboothattendee.class.php'\n\t\t\t\t\t);\n\n\t\t\t\t\t//First, all core objects must update their tables\n\t\t\t\t\tforeach ($objects as $object_name => $object_file) {\n\t\t\t\t\t\trequire_once DOL_DOCUMENT_ROOT.$object_file;\n\n\t\t\t\t\t\tif (!$error && !$object_name::replaceThirdparty($db, $soc_origin->id, $object->id)) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tsetEventMessages($db->lasterror(), null, 'errors');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// External modules should update their ones too\n\t\t\t\tif (!$error) {\n\t\t\t\t\t$reshook = $hookmanager->executeHooks('replaceThirdparty', array(\n\t\t\t\t\t\t'soc_origin' => $soc_origin->id,\n\t\t\t\t\t\t'soc_dest' => $object->id\n\t\t\t\t\t), $object, $action);\n\n\t\t\t\t\tif ($reshook < 0) {\n\t\t\t\t\t\tsetEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tif (!$error) {\n\t\t\t\t\t$object->context = array('merge'=>1, 'mergefromid'=>$soc_origin->id);\n\n\t\t\t\t\t// Call trigger\n\t\t\t\t\t$result = $object->call_trigger('COMPANY_MODIFY', $user);\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t\t// End call triggers\n\t\t\t\t}\n\n\t\t\t\tif (!$error) {\n\t\t\t\t\t//We finally remove the old thirdparty\n\t\t\t\t\tif ($soc_origin->delete($soc_origin->id, $user) < 1) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error) {\n\t\t\t\t\tsetEventMessages($langs->trans('ThirdpartiesMergeSuccess'), null, 'mesgs');\n\t\t\t\t\t$db->commit();\n\t\t\t\t} else {\n\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\tsetEventMessages($langs->trans('ErrorsThirdpartyMerge'), null, 'errors');\n\t\t\t\t\t$db->rollback();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (GETPOST('getcustomercode')) {\n\t\t// We defined value code_client\n\t\t$_POST[\"customer_code\"] = \"Acompleter\";\n\t}\n\n\tif (GETPOST('getsuppliercode')) {\n\t\t// We defined value code_fournisseur\n\t\t$_POST[\"supplier_code\"] = \"Acompleter\";\n\t}\n\n\tif ($action == 'set_localtax1') {\n\t\t//obtidre selected del combobox\n\t\t$value = GETPOST('lt1');\n\t\t$object->fetch($socid);\n\t\t$res = $object->setValueFrom('localtax1_value', $value, '', null, 'text', '', $user, 'COMPANY_MODIFY');\n\t}\n\tif ($action == 'set_localtax2') {\n\t\t//obtidre selected del combobox\n\t\t$value = GETPOST('lt2');\n\t\t$object->fetch($socid);\n\t\t$res = $object->setValueFrom('localtax2_value', $value, '', null, 'text', '', $user, 'COMPANY_MODIFY');\n\t}\n\n\tif ($action == 'update_extras') {\n\t\t$object->fetch($socid);\n\n\t\t$object->oldcopy = dol_clone($object);\n\n\t\t// Fill array 'array_options' with data from update form\n\t\t$extrafields->fetch_name_optionals_label($object->table_element);\n\n\t\t$ret = $extrafields->setOptionalsFromPost(null, $object, GETPOST('attribute', 'restricthtml'));\n\t\tif ($ret < 0) {\n\t\t\t$error++;\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$result = $object->insertExtraFields('COMPANY_MODIFY');\n\t\t\tif ($result < 0) {\n\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t$error++;\n\t\t\t}\n\t\t}\n\n\t\tif ($error) {\n\t\t\t$action = 'edit_extras';\n\t\t}\n\t}\n\n\t// Add new or update third party\n\tif ((!GETPOST('getcustomercode') && !GETPOST('getsuppliercode'))\n\t&& ($action == 'add' || $action == 'update') && $user->rights->societe->creer) {\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\n\t\tif (!GETPOST('name')) {\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"ThirdPartyName\")), null, 'errors');\n\t\t\t$error++;\n\t\t}\n\t\tif (GETPOST('client') < 0) {\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"ProspectCustomer\")), null, 'errors');\n\t\t\t$error++;\n\t\t}\n\t\tif (GETPOST('fournisseur') < 0) {\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"Supplier\")), null, 'errors');\n\t\t\t$error++;\n\t\t}\n\n\t\tif (!empty($conf->mailing->enabled) && !empty($conf->global->MAILING_CONTACT_DEFAULT_BULK_STATUS) && $conf->global->MAILING_CONTACT_DEFAULT_BULK_STATUS==-1 && GETPOST('contact_no_email', 'int')==-1 && !empty(GETPOST('email', 'custom', 0, FILTER_SANITIZE_EMAIL))) {\n\t\t\t$error++;\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"No_Email\")), null, 'errors');\n\t\t}\n\n\t\tif (!empty($conf->mailing->enabled) && GETPOST(\"private\", 'int') == 1 && !empty($conf->global->MAILING_CONTACT_DEFAULT_BULK_STATUS) && $conf->global->MAILING_CONTACT_DEFAULT_BULK_STATUS==-1 && GETPOST('contact_no_email', 'int')==-1 && !empty(GETPOST('email', 'custom', 0, FILTER_SANITIZE_EMAIL))) {\n\t\t\t$error++;\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"No_Email\")), null, 'errors');\n\t\t}\n\n\t\tif (!$error) {\n\t\t\tif ($action == 'update') {\n\t\t\t\t$ret = $object->fetch($socid);\n\t\t\t\t$object->oldcopy = clone $object;\n\t\t\t} else {\n\t\t\t\t$object->canvas = $canvas;\n\t\t\t}\n\n\t\t\tif (GETPOST(\"private\", 'int') == 1) {\t// Ask to create a contact\n\t\t\t\t$object->particulier\t\t= GETPOST(\"private\", 'int');\n\n\t\t\t\t$object->name = dolGetFirstLastname(GETPOST('firstname', 'alphanohtml'), GETPOST('name', 'alphanohtml'));\n\t\t\t\t$object->civility_id\t\t= GETPOST('civility_id', 'alphanohtml'); // Note: civility id is a code, not an int\n\t\t\t\t// Add non official properties\n\t\t\t\t$object->name_bis = GETPOST('name', 'alphanohtml');\n\t\t\t\t$object->firstname = GETPOST('firstname', 'alphanohtml');\n\t\t\t} else {\n\t\t\t\t$object->name = GETPOST('name', 'alphanohtml');\n\t\t\t}\n\t\t\t$object->entity\t\t\t\t\t= (GETPOSTISSET('entity') ? GETPOST('entity', 'int') : $conf->entity);\n\t\t\t$object->name_alias = GETPOST('name_alias', 'alphanohtml');\n\t\t\t$object->address\t\t\t\t= GETPOST('address', 'alphanohtml');\n\t\t\t$object->zip = GETPOST('zipcode', 'alphanohtml');\n\t\t\t$object->town = GETPOST('town', 'alphanohtml');\n\t\t\t$object->country_id = GETPOST('country_id', 'int');\n\t\t\t$object->state_id = GETPOST('state_id', 'int');\n\t\t\t//$object->skype\t\t\t\t\t= GETPOST('skype', 'alpha');\n\t\t\t//$object->twitter\t\t\t\t= GETPOST('twitter', 'alpha');\n\t\t\t//$object->facebook\t\t\t\t= GETPOST('facebook', 'alpha');\n\t\t\t//$object->linkedin\t\t\t\t= GETPOST('linkedin', 'alpha');\n\t\t\t$object->socialnetworks = array();\n\t\t\tif (!empty($conf->socialnetworks->enabled)) {\n\t\t\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\t\t\tif (GETPOSTISSET($key) && GETPOST($key, 'alphanohtml') != '') {\n\t\t\t\t\t\t$object->socialnetworks[$key] = GETPOST($key, 'alphanohtml');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$object->phone = GETPOST('phone', 'alpha');\n\t\t\t$object->fax\t\t\t\t\t= GETPOST('fax', 'alpha');\n\t\t\t$object->email = trim(GETPOST('email', 'custom', 0, FILTER_SANITIZE_EMAIL));\n\t\t\t$object->url\t\t\t\t\t= trim(GETPOST('url', 'custom', 0, FILTER_SANITIZE_URL));\n\t\t\t$object->idprof1\t\t\t\t= trim(GETPOST('idprof1', 'alphanohtml'));\n\t\t\t$object->idprof2\t\t\t\t= trim(GETPOST('idprof2', 'alphanohtml'));\n\t\t\t$object->idprof3\t\t\t\t= trim(GETPOST('idprof3', 'alphanohtml'));\n\t\t\t$object->idprof4\t\t\t\t= trim(GETPOST('idprof4', 'alphanohtml'));\n\t\t\t$object->idprof5\t\t\t\t= trim(GETPOST('idprof5', 'alphanohtml'));\n\t\t\t$object->idprof6\t\t\t\t= trim(GETPOST('idprof6', 'alphanohtml'));\n\t\t\t$object->prefix_comm\t\t\t= GETPOST('prefix_comm', 'alphanohtml');\n\t\t\t$object->code_client\t\t\t= GETPOSTISSET('customer_code') ?GETPOST('customer_code', 'alpha') : GETPOST('code_client', 'alpha');\n\t\t\t$object->code_fournisseur = GETPOSTISSET('supplier_code') ?GETPOST('supplier_code', 'alpha') : GETPOST('code_fournisseur', 'alpha');\n\t\t\t$object->capital\t\t\t\t= GETPOST('capital', 'alphanohtml');\n\t\t\t$object->barcode\t\t\t\t= GETPOST('barcode', 'alphanohtml');\n\n\t\t\t$object->tva_intra\t\t\t\t= GETPOST('tva_intra', 'alphanohtml');\n\t\t\t$object->tva_assuj\t\t\t\t= GETPOST('assujtva_value', 'alpha');\n\t\t\t$object->status = GETPOST('status', 'alpha');\n\n\t\t\t// Local Taxes\n\t\t\t$object->localtax1_assuj\t\t= GETPOST('localtax1assuj_value', 'alpha');\n\t\t\t$object->localtax2_assuj\t\t= GETPOST('localtax2assuj_value', 'alpha');\n\n\t\t\t$object->localtax1_value\t\t= GETPOST('lt1', 'alpha');\n\t\t\t$object->localtax2_value\t\t= GETPOST('lt2', 'alpha');\n\n\t\t\t$object->forme_juridique_code = GETPOST('forme_juridique_code', 'int');\n\t\t\t$object->effectif_id\t\t\t= GETPOST('effectif_id', 'int');\n\t\t\t$object->typent_id = GETPOST('typent_id', 'int');\n\n\t\t\t$object->typent_code\t\t\t= dol_getIdFromCode($db, $object->typent_id, 'c_typent', 'id', 'code'); // Force typent_code too so check in verify() will be done on new type\n\n\t\t\t$object->client = GETPOST('client', 'int');\n\t\t\t$object->fournisseur\t\t\t= GETPOST('fournisseur', 'int');\n\n\t\t\t$object->commercial_id = GETPOST('commercial_id', 'int');\n\t\t\t$object->default_lang = GETPOST('default_lang');\n\n\t\t\t// Webservices url/key\n\t\t\t$object->webservices_url\t\t= GETPOST('webservices_url', 'custom', 0, FILTER_SANITIZE_URL);\n\t\t\t$object->webservices_key\t\t= GETPOST('webservices_key', 'san_alpha');\n\n\t\t\tif (GETPOSTISSET('accountancy_code_sell')) {\n\t\t\t\t$object->accountancy_code_sell  = GETPOST('accountancy_code_sell', 'alpha');\n\t\t\t}\n\t\t\tif (GETPOSTISSET('accountancy_code_buy')) {\n\t\t\t\t$object->accountancy_code_buy   = GETPOST('accountancy_code_buy', 'alpha');\n\t\t\t}\n\n\t\t\t// Incoterms\n\t\t\tif (!empty($conf->incoterm->enabled)) {\n\t\t\t\t$object->fk_incoterms = GETPOST('incoterm_id', 'int');\n\t\t\t\t$object->location_incoterms = GETPOST('location_incoterms', 'alpha');\n\t\t\t}\n\n\t\t\t// Multicurrency\n\t\t\tif (!empty($conf->multicurrency->enabled)) {\n\t\t\t\t$object->multicurrency_code = GETPOST('multicurrency_code', 'alpha');\n\t\t\t}\n\n\t\t\t// Fill array 'array_options' with data from add form\n\t\t\t$ret = $extrafields->setOptionalsFromPost(null, $object);\n\t\t\tif ($ret < 0) {\n\t\t\t\t $error++;\n\t\t\t}\n\n\t\t\t// Fill array 'array_languages' with data from add form\n\t\t\t$ret = $object->setValuesForExtraLanguages();\n\t\t\tif ($ret < 0) {\n\t\t\t\t$error++;\n\t\t\t}\n\t\t\t//var_dump($object->array_languages);exit;\n\n\t\t\tif (GETPOST('deletephoto')) {\n\t\t\t\t$object->logo = '';\n\t\t\t} elseif (!empty($_FILES['photo']['name'])) {\n\t\t\t\t$object->logo = dol_sanitizeFileName($_FILES['photo']['name']);\n\t\t\t}\n\n\t\t\t// Check parameters\n\t\t\tif (!GETPOST('cancel', 'alpha')) {\n\t\t\t\tif (!empty($object->email) && !isValidEMail($object->email)) {\n\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t$error++;\n\t\t\t\t\tsetEventMessages('', $langs->trans(\"ErrorBadEMail\", $object->email), 'errors');\n\t\t\t\t}\n\t\t\t\tif (!empty($object->url) && !isValidUrl($object->url)) {\n\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\tsetEventMessages('', $langs->trans(\"ErrorBadUrl\", $object->url), 'errors');\n\t\t\t\t}\n\t\t\t\tif (!empty($object->webservices_url)) {\n\t\t\t\t\t//Check if has transport, without any the soap client will give error\n\t\t\t\t\tif (strpos($object->webservices_url, \"http\") === false) {\n\t\t\t\t\t\t$object->webservices_url = \"http://\".$object->webservices_url;\n\t\t\t\t\t}\n\t\t\t\t\tif (!isValidUrl($object->webservices_url)) {\n\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\t$error++; $errors[] = $langs->trans(\"ErrorBadUrl\", $object->webservices_url);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// We set country_id, country_code and country for the selected country\n\t\t\t\t$object->country_id = GETPOST('country_id') != '' ?GETPOST('country_id') : $mysoc->country_id;\n\t\t\t\tif ($object->country_id) {\n\t\t\t\t\t$tmparray = getCountry($object->country_id, 'all');\n\t\t\t\t\t$object->country_code = $tmparray['code'];\n\t\t\t\t\t$object->country = $tmparray['label'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!$error) {\n\t\t\tif ($action == 'add') {\n\t\t\t\t$error = 0;\n\n\t\t\t\t$db->begin();\n\n\t\t\t\tif (empty($object->client)) {\n\t\t\t\t\t$object->code_client = '';\n\t\t\t\t}\n\t\t\t\tif (empty($object->fournisseur)) {\n\t\t\t\t\t$object->code_fournisseur = '';\n\t\t\t\t}\n\n\t\t\t\t$result = $object->create($user);\n\n\t\t\t\tif ($result >= 0) {\n\t\t\t\t\tif ($object->particulier) {\n\t\t\t\t\t\tdol_syslog(\"We ask to create a contact/address too\", LOG_DEBUG);\n\t\t\t\t\t\t$contcats = GETPOST('contcats', 'array');\n\t\t\t\t\t\t$no_email = GETPOST('contact_no_email', 'int');\n\t\t\t\t\t\t$result = $object->create_individual($user, $no_email, $contcats);\n\t\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Links with users\n\t\t\t\t\t$salesreps = GETPOST('commercial', 'array');\n\t\t\t\t\t$result = $object->setSalesRep($salesreps, true);\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Customer categories association\n\t\t\t\t\t$custcats = GETPOST('custcats', 'array');\n\t\t\t\t\t$result = $object->setCategories($custcats, 'customer');\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Supplier categories association\n\t\t\t\t\t$suppcats = GETPOST('suppcats', 'array');\n\t\t\t\t\t$result = $object->setCategories($suppcats, 'supplier');\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Logo/Photo save\n\t\t\t\t\t$dir = $conf->societe->multidir_output[$conf->entity].\"/\".$object->id.\"/logos/\";\n\t\t\t\t\t$file_OK = is_uploaded_file($_FILES['photo']['tmp_name']);\n\t\t\t\t\tif ($file_OK) {\n\t\t\t\t\t\tif (image_format_supported($_FILES['photo']['name'])) {\n\t\t\t\t\t\t\tdol_mkdir($dir);\n\n\t\t\t\t\t\t\tif (@is_dir($dir)) {\n\t\t\t\t\t\t\t\t$newfile = $dir.'/'.dol_sanitizeFileName($_FILES['photo']['name']);\n\t\t\t\t\t\t\t\t$result = dol_move_uploaded_file($_FILES['photo']['tmp_name'], $newfile, 1);\n\n\t\t\t\t\t\t\t\tif (!$result > 0) {\n\t\t\t\t\t\t\t\t\t$errors[] = \"ErrorFailedToSaveFile\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Create thumbs\n\t\t\t\t\t\t\t\t\t$object->addThumbs($newfile);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tswitch ($_FILES['photo']['error']) {\n\t\t\t\t\t\t\tcase 1: //uploaded file exceeds the upload_max_filesize directive in php.ini\n\t\t\t\t\t\t\tcase 2: //uploaded file exceeds the MAX_FILE_SIZE directive that was specified in the html form\n\t\t\t\t\t\t\t\t$errors[] = \"ErrorFileSizeTooLarge\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3: //uploaded file was only partially uploaded\n\t\t\t\t\t\t\t\t$errors[] = \"ErrorFilePartiallyUploaded\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($result == -3 && in_array('ErrorCustomerCodeAlreadyUsed', $object->errors)) {\n\t\t\t\t\t\t$duplicate_code_error = true;\n\t\t\t\t\t\t$object->code_client = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($result == -3 && in_array('ErrorSupplierCodeAlreadyUsed', $object->errors)) {\n\t\t\t\t\t\t$duplicate_code_error = true;\n\t\t\t\t\t\t$object->code_fournisseur = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($db->lasterrno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\t// TODO Sometime errors on duplicate on profid and not on code, so we must manage this case\n\t\t\t\t\t\t$duplicate_code_error = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\n\t\t\t\tif ($result >= 0 && !$error) {\n\t\t\t\t\t$db->commit();\n\n\t\t\t\t\tif (!empty($backtopage)) {\n\t\t\t\t\t\t$backtopage = preg_replace('/--IDFORBACKTOPAGE--/', $object->id, $backtopage); // New method to autoselect project after a New on another form object creation\n\t\t\t\t\t\tif (preg_match('/\\?/', $backtopage)) {\n\t\t\t\t\t\t\t$backtopage .= '&socid='.$object->id; // Old method\n\t\t\t\t\t\t}\n\t\t\t\t\t\theader(\"Location: \".$backtopage);\n\t\t\t\t\t\texit;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$url = $_SERVER[\"PHP_SELF\"].\"?socid=\".$object->id; // Old method\n\t\t\t\t\t\tif (($object->client == 1 || $object->client == 3) && empty($conf->global->SOCIETE_DISABLE_CUSTOMERS)) {\n\t\t\t\t\t\t\t$url = DOL_URL_ROOT.\"/comm/card.php?socid=\".$object->id;\n\t\t\t\t\t\t} elseif ($object->fournisseur == 1) {\n\t\t\t\t\t\t\t$url = DOL_URL_ROOT.\"/fourn/card.php?socid=\".$object->id;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\theader(\"Location: \".$url);\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$db->rollback();\n\t\t\t\t\t$action = 'create';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($action == 'update') {\n\t\t\t\t$error = 0;\n\n\t\t\t\tif (GETPOST('cancel', 'alpha')) {\n\t\t\t\t\tif (!empty($backtopage)) {\n\t\t\t\t\t\theader(\"Location: \".$backtopage);\n\t\t\t\t\t\texit;\n\t\t\t\t\t} else {\n\t\t\t\t\t\theader(\"Location: \".$_SERVER[\"PHP_SELF\"].\"?socid=\".$socid);\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// To not set code if third party is not concerned. But if it had values, we keep them.\n\t\t\t\tif (empty($object->client) && empty($object->oldcopy->code_client)) {\n\t\t\t\t\t$object->code_client = '';\n\t\t\t\t}\n\t\t\t\tif (empty($object->fournisseur) && empty($object->oldcopy->code_fournisseur)) {\n\t\t\t\t\t$object->code_fournisseur = '';\n\t\t\t\t}\n\t\t\t\t//var_dump($object);exit;\n\n\t\t\t\t$result = $object->update($socid, $user, 1, $object->oldcopy->codeclient_modifiable(), $object->oldcopy->codefournisseur_modifiable(), 'update', 0);\n\n\t\t\t\tif ($result <= 0) {\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\n\t\t\t\t// Links with users\n\t\t\t\t$salesreps = GETPOST('commercial', 'array');\n\t\t\t\t$result = $object->setSalesRep($salesreps);\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t}\n\n\t\t\t\t// Prevent thirdparty's emptying if a user hasn't rights $user->rights->categorie->lire (in such a case, post of 'custcats' is not defined)\n\t\t\t\tif (!$error && !empty($user->rights->categorie->lire)) {\n\t\t\t\t\t// Customer categories association\n\t\t\t\t\t$categories = GETPOST('custcats', 'array');\n\t\t\t\t\t$result = $object->setCategories($categories, 'customer');\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Supplier categories association\n\t\t\t\t\t$categories = GETPOST('suppcats', 'array');\n\t\t\t\t\t$result = $object->setCategories($categories, 'supplier');\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Logo/Photo save\n\t\t\t\t$dir     = $conf->societe->multidir_output[$object->entity].\"/\".$object->id.\"/logos\";\n\t\t\t\t$file_OK = is_uploaded_file($_FILES['photo']['tmp_name']);\n\t\t\t\tif (GETPOST('deletephoto') && $object->logo) {\n\t\t\t\t\t$fileimg = $dir.'/'.$object->logo;\n\t\t\t\t\t$dirthumbs = $dir.'/thumbs';\n\t\t\t\t\tdol_delete_file($fileimg);\n\t\t\t\t\tdol_delete_dir_recursive($dirthumbs);\n\t\t\t\t}\n\t\t\t\tif ($file_OK) {\n\t\t\t\t\tif (image_format_supported($_FILES['photo']['name']) > 0) {\n\t\t\t\t\t\tdol_mkdir($dir);\n\n\t\t\t\t\t\tif (@is_dir($dir)) {\n\t\t\t\t\t\t\t$newfile = $dir.'/'.dol_sanitizeFileName($_FILES['photo']['name']);\n\t\t\t\t\t\t\t$result = dol_move_uploaded_file($_FILES['photo']['tmp_name'], $newfile, 1);\n\n\t\t\t\t\t\t\tif (!$result > 0) {\n\t\t\t\t\t\t\t\t$errors[] = \"ErrorFailedToSaveFile\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Create thumbs\n\t\t\t\t\t\t\t\t$object->addThumbs($newfile);\n\n\t\t\t\t\t\t\t\t// Index file in database\n\t\t\t\t\t\t\t\tif (!empty($conf->global->THIRDPARTY_LOGO_ALLOW_EXTERNAL_DOWNLOAD)) {\n\t\t\t\t\t\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\t\t\t\t\t\t\t\t\t// the dir dirname($newfile) is directory of logo, so we should have only one file at once into index, so we delete indexes for the dir\n\t\t\t\t\t\t\t\t\tdeleteFilesIntoDatabaseIndex(dirname($newfile), '', '');\n\t\t\t\t\t\t\t\t\t// now we index the uploaded logo file\n\t\t\t\t\t\t\t\t\taddFileIntoDatabaseIndex(dirname($newfile), basename($newfile), '', 'uploaded', 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$errors[] = \"ErrorBadImageFormat\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tswitch ($_FILES['photo']['error']) {\n\t\t\t\t\t\tcase 1: //uploaded file exceeds the upload_max_filesize directive in php.ini\n\t\t\t\t\t\tcase 2: //uploaded file exceeds the MAX_FILE_SIZE directive that was specified in the html form\n\t\t\t\t\t\t\t$errors[] = \"ErrorFileSizeTooLarge\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3: //uploaded file was only partially uploaded\n\t\t\t\t\t\t\t$errors[] = \"ErrorFilePartiallyUploaded\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Gestion du logo de la soci\u00e9t\u00e9\n\n\n\t\t\t\t// Update linked member\n\t\t\t\tif (!$error && $object->fk_soc > 0) {\n\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"adherent\";\n\t\t\t\t\t$sql .= \" SET fk_soc = NULL WHERE fk_soc = \".((int) $socid);\n\t\t\t\t\tif (!$object->db->query($sql)) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t$object->error .= $object->db->lasterror();\n\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error && !count($errors)) {\n\t\t\t\t\tif (!empty($backtopage)) {\n\t\t\t\t\t\theader(\"Location: \".$backtopage);\n\t\t\t\t\t\texit;\n\t\t\t\t\t} else {\n\t\t\t\t\t\theader(\"Location: \".$_SERVER[\"PHP_SELF\"].\"?socid=\".$socid);\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$object->id = $socid;\n\t\t\t\t\t$action = \"edit\";\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$action = ($action == 'add' ? 'create' : 'edit');\n\t\t}\n\t}\n\n\t// Delete third party\n\tif ($action == 'confirm_delete' && $confirm == 'yes' && $user->rights->societe->supprimer) {\n\t\t$object->fetch($socid);\n\t\t$object->oldcopy = clone $object;\n\t\t$result = $object->delete($socid, $user);\n\n\t\tif ($result > 0) {\n\t\t\theader(\"Location: \".DOL_URL_ROOT.\"/societe/list.php?restore_lastsearch_values=1&delsoc=\".urlencode($object->name));\n\t\t\texit;\n\t\t} else {\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t$error++;\n\t\t\t$action = '';\n\t\t}\n\t}\n\n\t// Set third-party type\n\tif ($action == 'set_thirdpartytype' && $user->rights->societe->creer) {\n\t\t$object->fetch($socid);\n\t\t$result = $object->setThirdpartyType(GETPOST('typent_id', 'int'));\n\t}\n\n\t// Set incoterm\n\tif ($action == 'set_incoterms' && $user->rights->societe->creer && !empty($conf->incoterm->enabled)) {\n\t\t$object->fetch($socid);\n\t\t$result = $object->setIncoterms(GETPOST('incoterm_id', 'int'), GETPOST('location_incoterms', 'alpha'));\n\t}\n\n\t// Set parent company\n\tif ($action == 'set_thirdparty' && $user->rights->societe->creer) {\n\t\t$object->fetch($socid);\n\t\t$result = $object->setParent(GETPOST('parent_id', 'int'));\n\t}\n\n\t// Set sales representatives\n\tif ($action == 'set_salesrepresentatives' && $user->rights->societe->creer) {\n\t\t$object->fetch($socid);\n\t\t$result = $object->setSalesRep(GETPOST('commercial', 'array'));\n\t}\n\n\t// warehouse\n\tif ($action == 'setwarehouse' && $user->rights->societe->creer) {\n\t\t$result = $object->setWarehouse(GETPOST('fk_warehouse', 'int'));\n\t}\n\n\t$id = $socid;\n\t$object->fetch($socid);\n\n\t// Selection of new fields\n\tif (!empty($conf->global->MAIN_DUPLICATE_CONTACTS_TAB_ON_MAIN_CARD) && (empty($conf->global->SOCIETE_DISABLE_CONTACTS) || !empty($conf->global->SOCIETE_ADDRESSES_MANAGEMENT))) {\n\t\tinclude DOL_DOCUMENT_ROOT.'/core/actions_changeselectedfields.inc.php';\n\t}\n\n\t// Actions to send emails\n\t$triggersendname = 'COMPANY_SENTBYMAIL';\n\t$paramname = 'socid';\n\t$mode = 'emailfromthirdparty';\n\t$trackid = 'thi'.$object->id;\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_sendmails.inc.php';\n\n\t// Actions to build doc\n\t$id = $socid;\n\t$upload_dir = $conf->societe->dir_output;\n\t$permissiontoadd = $user->rights->societe->creer;\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_builddoc.inc.php';\n}\n\n\n/*\n *  View\n */\n\n$form = new Form($db);\n$formfile = new FormFile($db);\n$formadmin = new FormAdmin($db);\n$formcompany = new FormCompany($db);\nif (!empty($conf->accounting->enabled)) {\n\t$formaccounting = new FormAccounting($db);\n}\n\nif ($socid > 0 && empty($object->id)) {\n\t$result = $object->fetch($socid);\n\tif ($result <= 0) {\n\t\tdol_print_error('', $object->error);\n\t}\n}\n\n$title = $langs->trans(\"ThirdParty\");\nif (!empty($conf->global->MAIN_HTML_TITLE) && preg_match('/thirdpartynameonly/', $conf->global->MAIN_HTML_TITLE) && $object->name) {\n\t$title = $object->name.\" - \".$langs->trans('Card');\n}\n\n$help_url = 'EN:Module_Third_Parties|FR:Module_Tiers|ES:Empresas|DE:Modul_Gesch\u00e4ftspartner';\n\nllxHeader('', $title, $help_url);\n\n$countrynotdefined = $langs->trans(\"ErrorSetACountryFirst\").' ('.$langs->trans(\"SeeAbove\").')';\n\nif (is_object($objcanvas) && $objcanvas->displayCanvasExists($action)) {\n\t// -----------------------------------------\n\t// When used with CANVAS\n\t// -----------------------------------------\n\t$objcanvas->assign_values($action, $object->id, $object->ref); // Set value for templates\n\t$objcanvas->display_canvas($action); // Show template\n} else {\n\t// -----------------------------------------\n\t// When used in standard mode\n\t// -----------------------------------------\n\tif ($action == 'create') {\n\t\t/*\n\t\t *  Creation\n\t\t */\n\t\t$private = GETPOST(\"private\", \"int\");\n\t\tif (!empty($conf->global->THIRDPARTY_DEFAULT_CREATE_CONTACT) && !GETPOSTISSET('private')) {\n\t\t\t$private = 1;\n\t\t}\n\t\tif (empty($private)) {\n\t\t\t$private = 0;\n\t\t}\n\n\t\t// Load object modCodeTiers\n\t\t$module = (!empty($conf->global->SOCIETE_CODECLIENT_ADDON) ? $conf->global->SOCIETE_CODECLIENT_ADDON : 'mod_codeclient_leopard');\n\t\tif (substr($module, 0, 15) == 'mod_codeclient_' && substr($module, -3) == 'php') {\n\t\t\t$module = substr($module, 0, dol_strlen($module) - 4);\n\t\t}\n\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\tif ($res) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t$modCodeClient = new $module;\n\t\t// Load object modCodeFournisseur\n\t\t$module = (!empty($conf->global->SOCIETE_CODECLIENT_ADDON) ? $conf->global->SOCIETE_CODECLIENT_ADDON : 'mod_codeclient_leopard');\n\t\tif (substr($module, 0, 15) == 'mod_codeclient_' && substr($module, -3) == 'php') {\n\t\t\t$module = substr($module, 0, dol_strlen($module) - 4);\n\t\t}\n\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\tif ($res) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t$modCodeFournisseur = new $module;\n\n\t\t// Define if customer/prospect or supplier status is set or not\n\t\tif (GETPOST(\"type\") != 'f') {\n\t\t\t$object->client = -1;\n\t\t\tif (!empty($conf->global->THIRDPARTY_CUSTOMERPROSPECT_BY_DEFAULT)) {\n\t\t\t\t$object->client = 3;\n\t\t\t}\n\t\t}\n\t\t// Prospect / Customer\n\t\tif (GETPOST(\"type\") == 'c') {\n\t\t\tif (!empty($conf->global->THIRDPARTY_CUSTOMERTYPE_BY_DEFAULT)) {\n\t\t\t\t$object->client = $conf->global->THIRDPARTY_CUSTOMERTYPE_BY_DEFAULT;\n\t\t\t} else {\n\t\t\t\t$object->client = 3;\n\t\t\t}\n\t\t}\n\t\tif (GETPOST(\"type\") == 'p') {\n\t\t\t$object->client = 2;\n\t\t}\n\t\tif (((!empty($conf->fournisseur->enabled) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || !empty($conf->supplier_order->enabled) || !empty($conf->supplier_invoice->enabled)) && (GETPOST(\"type\") == 'f' || (GETPOST(\"type\") == '' && !empty($conf->global->THIRDPARTY_SUPPLIER_BY_DEFAULT)))) {\n\t\t\t$object->fournisseur = 1;\n\t\t}\n\n\t\t$object->name = GETPOST('name', 'alphanohtml');\n\t\t$object->name_alias = GETPOST('name_alias', 'alphanohtml');\n\t\t$object->firstname = GETPOST('firstname', 'alphanohtml');\n\t\t$object->particulier\t\t= $private;\n\t\t$object->prefix_comm\t\t= GETPOST('prefix_comm', 'alphanohtml');\n\t\t$object->client = GETPOST('client', 'int') ?GETPOST('client', 'int') : $object->client;\n\n\t\tif (empty($duplicate_code_error)) {\n\t\t\t$object->code_client\t\t= GETPOST('customer_code', 'alpha');\n\t\t\t$object->fournisseur\t\t= GETPOST('fournisseur') ? GETPOST('fournisseur', 'int') : $object->fournisseur;\n\t\t\t$object->code_fournisseur = GETPOST('supplier_code', 'alpha');\n\t\t} else {\n\t\t\tsetEventMessages($langs->trans('NewCustomerSupplierCodeProposed'), '', 'warnings');\n\t\t}\n\n\t\t$object->address = GETPOST('address', 'alphanohtml');\n\t\t$object->zip = GETPOST('zipcode', 'alphanohtml');\n\t\t$object->town = GETPOST('town', 'alphanohtml');\n\t\t$object->state_id = GETPOST('state_id', 'int');\n\t\t//$object->skype\t\t\t\t= GETPOST('skype', 'alpha');\n\t\t//$object->twitter\t\t\t= GETPOST('twitter', 'alpha');\n\t\t//$object->facebook\t\t\t= GETPOST('facebook', 'alpha');\n\t\t//$object->linkedin\t\t\t= GETPOST('linkedin', 'alpha');\n\t\t$object->socialnetworks = array();\n\t\tif (!empty($conf->socialnetworks->enabled)) {\n\t\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\t\tif (GETPOSTISSET($key) && GETPOST($key, 'alphanohtml') != '') {\n\t\t\t\t\t$object->socialnetworks[$key] = GETPOST($key, 'alphanohtml');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$object->phone\t\t\t\t= GETPOST('phone', 'alpha');\n\t\t$object->fax\t\t\t\t= GETPOST('fax', 'alpha');\n\t\t$object->email\t\t\t\t= GETPOST('email', 'custom', 0, FILTER_SANITIZE_EMAIL);\n\t\t$object->url\t\t\t\t= GETPOST('url', 'custom', 0, FILTER_SANITIZE_URL);\n\t\t$object->capital\t\t\t= GETPOST('capital', 'alphanohtml');\n\t\t$object->barcode\t\t\t= GETPOST('barcode', 'alphanohtml');\n\t\t$object->idprof1\t\t\t= GETPOST('idprof1', 'alphanohtml');\n\t\t$object->idprof2\t\t\t= GETPOST('idprof2', 'alphanohtml');\n\t\t$object->idprof3\t\t\t= GETPOST('idprof3', 'alphanohtml');\n\t\t$object->idprof4\t\t\t= GETPOST('idprof4', 'alphanohtml');\n\t\t$object->idprof5\t\t\t= GETPOST('idprof5', 'alphanohtml');\n\t\t$object->idprof6\t\t\t= GETPOST('idprof6', 'alphanohtml');\n\t\t$object->typent_id = GETPOST('typent_id', 'int');\n\t\t$object->effectif_id\t\t= GETPOST('effectif_id', 'int');\n\t\t$object->civility_id\t\t= GETPOST('civility_id', 'alpha');\n\n\t\t$object->tva_assuj = GETPOST('assujtva_value', 'int');\n\t\t$object->status = GETPOST('status', 'int');\n\n\t\t//Local Taxes\n\t\t$object->localtax1_assuj\t= GETPOST('localtax1assuj_value', 'int');\n\t\t$object->localtax2_assuj\t= GETPOST('localtax2assuj_value', 'int');\n\n\t\t$object->localtax1_value\t= GETPOST('lt1', 'int');\n\t\t$object->localtax2_value\t= GETPOST('lt2', 'int');\n\n\t\t$object->tva_intra = GETPOST('tva_intra', 'alphanohtml');\n\n\t\t$object->commercial_id = GETPOST('commercial_id', 'int');\n\t\t$object->default_lang = GETPOST('default_lang');\n\n\t\tif (GETPOSTISSET('accountancy_code_sell')) {\n\t\t\t$object->accountancy_code_sell  = GETPOST('accountancy_code_sell', 'alpha');\n\t\t}\n\t\tif (GETPOSTISSET('accountancy_code_buy')) {\n\t\t\t$object->accountancy_code_buy   = GETPOST('accountancy_code_buy', 'alpha');\n\t\t}\n\n\t\t$object->logo = (isset($_FILES['photo']) ?dol_sanitizeFileName($_FILES['photo']['name']) : '');\n\n\t\t// Gestion du logo de la soci\u00e9t\u00e9\n\t\t$dir     = $conf->societe->multidir_output[$conf->entity].\"/\".$object->id.\"/logos\";\n\t\t$file_OK = (isset($_FILES['photo']) ?is_uploaded_file($_FILES['photo']['tmp_name']) : false);\n\t\tif ($file_OK) {\n\t\t\tif (image_format_supported($_FILES['photo']['name'])) {\n\t\t\t\tdol_mkdir($dir);\n\n\t\t\t\tif (@is_dir($dir)) {\n\t\t\t\t\t$newfile = $dir.'/'.dol_sanitizeFileName($_FILES['photo']['name']);\n\t\t\t\t\t$result = dol_move_uploaded_file($_FILES['photo']['tmp_name'], $newfile, 1);\n\n\t\t\t\t\tif (!$result > 0) {\n\t\t\t\t\t\t$errors[] = \"ErrorFailedToSaveFile\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Create thumbs\n\t\t\t\t\t\t$object->addThumbs($newfile);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// We set country_id, country_code and country for the selected country\n\t\t$object->country_id = GETPOST('country_id') ?GETPOST('country_id') : $mysoc->country_id;\n\t\tif ($object->country_id) {\n\t\t\t$tmparray = getCountry($object->country_id, 'all');\n\t\t\t$object->country_code = $tmparray['code'];\n\t\t\t$object->country = $tmparray['label'];\n\t\t}\n\t\t$object->forme_juridique_code = GETPOST('forme_juridique_code');\n\t\t/* Show create form */\n\n\t\t$linkback = \"\";\n\t\tprint load_fiche_titre($langs->trans(\"NewThirdParty\"), $linkback, 'building');\n\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\tif (!empty($conf->global->THIRDPARTY_SUGGEST_ALSO_ADDRESS_CREATION)) {\n\t\t\t\tprint \"\\n\".'<script type=\"text/javascript\">';\n\t\t\t\tprint '$(document).ready(function () {\n\t\t\t\t\t\tid_te_private=8;\n                        id_ef15=1;\n                        is_private=' . $private.';\n\t\t\t\t\t\tif (is_private) {\n\t\t\t\t\t\t\t$(\".individualline\").show();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$(\".individualline\").hide();\n\t\t\t\t\t\t}\n                        $(\"#radiocompany\").click(function() {\n                        \t$(\".individualline\").hide();\n                        \t$(\"#typent_id\").val(0);\n                        \t$(\"#typent_id\").change();\n                        \t$(\"#effectif_id\").val(0);\n                        \t$(\"#effectif_id\").change();\n                        \t$(\"#TypeName\").html(document.formsoc.ThirdPartyName.value);\n                        \tdocument.formsoc.private.value=0;\n                        });\n                        $(\"#radioprivate\").click(function() {\n                        \t$(\".individualline\").show();\n                        \t$(\"#typent_id\").val(id_te_private);\n                        \t$(\"#typent_id\").change();\n                        \t$(\"#effectif_id\").val(id_ef15);\n                        \t$(\"#effectif_id\").change();\n                        \t$(\"#TypeName\").html(document.formsoc.LastName.value);\n                        \tdocument.formsoc.private.value=1;\n                        });\n\n\t\t\t\t\t\tinit_customer_categ();\n\t\t\t  \t\t\t$(\"#customerprospect\").change(function() {\n\t\t\t\t\t\t\t\tinit_customer_categ();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfunction init_customer_categ() {\n\t\t\t\t\t\t\t\tconsole.log(\"is customer or prospect = \"+jQuery(\"#customerprospect\").val());\n\t\t\t\t\t\t\t\tif (jQuery(\"#customerprospect\").val() == 0 && (jQuery(\"#fournisseur\").val() == 0 || ' . (empty($conf->global->THIRDPARTY_CAN_HAVE_CATEGORY_EVEN_IF_NOT_CUSTOMER_PROSPECT_SUPPLIER) ? '1' : '0').'))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tjQuery(\".visibleifcustomer\").hide();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tjQuery(\".visibleifcustomer\").show();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinit_supplier_categ();\n\t\t\t       \t\t$(\"#fournisseur\").change(function() {\n\t\t\t\t\t\t\tinit_supplier_categ();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfunction init_supplier_categ() {\n\t\t\t\t\t\t\t\tconsole.log(\"is supplier = \"+jQuery(\"#fournisseur\").val());\n\t\t\t\t\t\t\t\tif (jQuery(\"#fournisseur\").val() == 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tjQuery(\".visibleifsupplier\").hide();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tjQuery(\".visibleifsupplier\").show();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n                        $(\"#selectcountry_id\").change(function() {\n                        \tdocument.formsoc.action.value=\"create\";\n                        \tdocument.formsoc.submit();\n                        });';\n\t\t\t\tif ($conf->global->MAILING_CONTACT_DEFAULT_BULK_STATUS==-1) {\n\t\t\t\t\tprint '\n\t\t\t\t\t\tfunction init_check_no_email(input) {\n\t\t\t\t\t\t\tif (input.val()!=\"\") {\n\t\t\t\t\t\t\t\t$(\".noemail\").addClass(\"fieldrequired\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(\".noemail\").removeClass(\"fieldrequired\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$(\"#email\").keyup(function() {\n\t\t\t\t\t\t\tinit_check_no_email($(this));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tinit_check_no_email($(\"#email\"));';\n\t\t\t\t}\n\t\t\t\tprint '});';\n\t\t\t\tprint '</script>'.\"\\n\";\n\n\t\t\t\tprint '<div id=\"selectthirdpartytype\">';\n\t\t\t\tprint '<div class=\"hideonsmartphone float\">';\n\t\t\t\tprint $langs->trans(\"ThirdPartyType\").': &nbsp; &nbsp; ';\n\t\t\t\tprint '</div>';\n\t\t\t\tprint '<label for=\"radiocompany\" class=\"radiocompany\">';\n\t\t\t\tprint '<input type=\"radio\" id=\"radiocompany\" class=\"flat\" name=\"private\"  value=\"0\"'.($private ? '' : ' checked').'>';\n\t\t\t\tprint '&nbsp;';\n\t\t\t\tprint $langs->trans(\"CreateThirdPartyOnly\");\n\t\t\t\tprint '</label>';\n\t\t\t\tprint ' &nbsp; &nbsp; ';\n\t\t\t\tprint '<label for=\"radioprivate\" class=\"radioprivate\">';\n\t\t\t\t$text = '<input type=\"radio\" id=\"radioprivate\" class=\"flat\" name=\"private\" value=\"1\"'.($private ? ' checked' : '').'>';\n\t\t\t\t$text .= '&nbsp;';\n\t\t\t\t$text .= $langs->trans(\"CreateThirdPartyAndContact\");\n\t\t\t\t$htmltext = $langs->trans(\"ToCreateContactWithSameName\");\n\t\t\t\tprint $form->textwithpicto($text, $htmltext, 1, 'help', '', 0, 3);\n\t\t\t\tprint '</label>';\n\t\t\t\tprint '</div>';\n\t\t\t\tprint \"<br>\\n\";\n\t\t\t} else {\n\t\t\t\tprint '<script type=\"text/javascript\">';\n\t\t\t\tprint '$(document).ready(function () {\n                        $(\"#selectcountry_id\").change(function() {\n                        \tdocument.formsoc.action.value=\"create\";\n                        \tdocument.formsoc.submit();\n                        });\n                     });';\n\t\t\t\tprint '</script>'.\"\\n\";\n\t\t\t}\n\t\t}\n\n\t\tdol_htmloutput_mesg(is_numeric($error) ? '' : $error, $errors, 'error');\n\n\t\tprint '<form enctype=\"multipart/form-data\" action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"post\" name=\"formsoc\" autocomplete=\"off\">'; // Chrome ignor autocomplete\n\n\t\tprint '<input type=\"hidden\" name=\"action\" value=\"add\">';\n\t\tprint '<input type=\"hidden\" name=\"backtopage\" value=\"'.$backtopage.'\">';\n\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\tprint '<input type=\"hidden\" name=\"private\" value='.$object->particulier.'>';\n\t\tprint '<input type=\"hidden\" name=\"type\" value='.GETPOST(\"type\", 'alpha').'>';\n\t\tprint '<input type=\"hidden\" name=\"LastName\" value=\"'.$langs->trans('ThirdPartyName').' / '.$langs->trans('LastName').'\">';\n\t\tprint '<input type=\"hidden\" name=\"ThirdPartyName\" value=\"'.$langs->trans('ThirdPartyName').'\">';\n\t\tif ($modCodeClient->code_auto || $modCodeFournisseur->code_auto) {\n\t\t\tprint '<input type=\"hidden\" name=\"code_auto\" value=\"1\">';\n\t\t}\n\n\t\tprint dol_get_fiche_head(null, 'card', '', 0, '');\n\n\t\tprint '<table class=\"border centpercent\">';\n\n\t\t// Name, firstname\n\t\tprint '<tr class=\"tr-field-thirdparty-name\"><td class=\"titlefieldcreate\">';\n\t\tif ($object->particulier || $private) {\n\t\t\tprint '<span id=\"TypeName\" class=\"fieldrequired\">'.$langs->trans('ThirdPartyName').' / '.$langs->trans('LastName', 'name').'</span>';\n\t\t} else {\n\t\t\tprint '<span id=\"TypeName\" class=\"fieldrequired\">'.$form->editfieldkey('ThirdPartyName', 'name', '', $object, 0).'</span>';\n\t\t}\n\t\tprint '</td><td'.(empty($conf->global->SOCIETE_USEPREFIX) ? ' colspan=\"3\"' : '').'>';\n\t\tprint '<input type=\"text\" class=\"minwidth300\" maxlength=\"128\" name=\"name\" id=\"name\" value=\"'.dol_escape_htmltag($object->name).'\" autofocus=\"autofocus\">';\n\t\tprint $form->widgetForTranslation(\"name\", $object, $permissiontoadd, 'string', 'alpahnohtml', 'minwidth300');\n\t\tprint '</td>';\n\t\tif (!empty($conf->global->SOCIETE_USEPREFIX)) {  // Old not used prefix field\n\t\t\tprint '<td>'.$langs->trans('Prefix').'</td><td><input type=\"text\" size=\"5\" maxlength=\"5\" name=\"prefix_comm\" value=\"'.dol_escape_htmltag($object->prefix_comm).'\"></td>';\n\t\t}\n\t\tprint '</tr>';\n\n\t\t// If javascript on, we show option individual\n\t\tif ($conf->use_javascript_ajax) {\n\t\t\tif (!empty($conf->global->THIRDPARTY_SUGGEST_ALSO_ADDRESS_CREATION)) {\n\t\t\t\t// Firstname\n\t\t\t\tprint '<tr class=\"individualline\"><td>'.$form->editfieldkey('FirstName', 'firstname', '', $object, 0).'</td>';\n\t\t\t\tprint '<td colspan=\"3\"><input type=\"text\" class=\"minwidth300\" maxlength=\"128\" name=\"firstname\" id=\"firstname\" value=\"'.dol_escape_htmltag($object->firstname).'\"></td>';\n\t\t\t\tprint '</tr>';\n\n\t\t\t\t// Title\n\t\t\t\tprint '<tr class=\"individualline\"><td>'.$form->editfieldkey('UserTitle', 'civility_id', '', $object, 0).'</td><td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t\t\tprint $formcompany->select_civility($object->civility_id, 'civility_id', 'maxwidth100').'</td>';\n\t\t\t\tprint '</tr>';\n\t\t\t}\n\t\t}\n\n\t\t// Alias names (commercial, trademark or alias names)\n\t\tprint '<tr id=\"name_alias\"><td><label for=\"name_alias_input\">'.$langs->trans('AliasNames').'</label></td>';\n\t\tprint '<td colspan=\"3\"><input type=\"text\" class=\"minwidth300\" name=\"name_alias\" id=\"name_alias_input\" value=\"'.dol_escape_htmltag($object->name_alias).'\"></td></tr>';\n\n\t\t// Prospect/Customer\n\t\tprint '<tr><td class=\"titlefieldcreate\">'.$form->editfieldkey('ProspectCustomer', 'customerprospect', '', $object, 0, 'string', '', 1).'</td>';\n\t\tprint '<td class=\"maxwidthonsmartphone\">';\n\t\t$selected = (GETPOSTISSET('client') ?GETPOST('client', 'int') : $object->client);\n\t\tprint $formcompany->selectProspectCustomerType($selected);\n\t\tprint '</td>';\n\n\t\tif ($conf->browser->layout == 'phone') {\n\t\t\tprint '</tr><tr>';\n\t\t}\n\n\t\tprint '<td>'.$form->editfieldkey('CustomerCode', 'customer_code', '', $object, 0).'</td><td>';\n\t\tprint '<table class=\"nobordernopadding\"><tr><td>';\n\t\t$tmpcode = $object->code_client;\n\t\tif (empty($tmpcode) && !empty($modCodeClient->code_auto)) {\n\t\t\t$tmpcode = $modCodeClient->getNextValue($object, 0);\n\t\t}\n\t\tprint '<input type=\"text\" name=\"customer_code\" id=\"customer_code\" class=\"maxwidthonsmartphone\" value=\"'.dol_escape_htmltag($tmpcode).'\" maxlength=\"24\">';\n\t\tprint '</td><td>';\n\t\t$s = $modCodeClient->getToolTip($langs, $object, 0);\n\t\tprint $form->textwithpicto('', $s, 1);\n\t\tprint '</td></tr></table>';\n\t\tprint '</td></tr>';\n\n\t\tif ((!empty($conf->fournisseur->enabled) && !empty($user->rights->fournisseur->lire) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || (!empty($conf->supplier_order->enabled) && !empty($user->rights->supplier_order->lire)) || (!empty($conf->supplier_invoice->enabled) && !empty($user->rights->supplier_invoice->lire))\n\t\t\t|| (!empty($conf->supplier_proposal->enabled) && !empty($user->rights->supplier_proposal->lire))) {\n\t\t\t// Supplier\n\t\t\tprint '<tr>';\n\t\t\tprint '<td>'.$form->editfieldkey('Vendor', 'fournisseur', '', $object, 0, 'string', '', 1).'</td><td>';\n\t\t\t$default = -1;\n\t\t\tif (!empty($conf->global->THIRDPARTY_SUPPLIER_BY_DEFAULT)) {\n\t\t\t\t$default = 1;\n\t\t\t}\n\t\t\tprint $form->selectyesno(\"fournisseur\", (GETPOST('fournisseur', 'int') != '' ? GETPOST('fournisseur', 'int') : (GETPOST(\"type\", 'alpha') == '' ? $default : $object->fournisseur)), 1, 0, (GETPOST(\"type\", 'alpha') == '' ? 1 : 0), 1);\n\t\t\tprint '</td>';\n\n\n\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\tprint '</tr><tr>';\n\t\t\t}\n\n\t\t\tprint '<td>';\n\t\t\tif ((!empty($conf->fournisseur->enabled) && !empty($user->rights->fournisseur->lire) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || (!empty($conf->supplier_order->enabled) && !empty($user->rights->supplier_order->lire)) || (!empty($conf->supplier_invoice->enabled) && !empty($user->rights->supplier_invoice->lire))) {\n\t\t\t\tprint $form->editfieldkey('SupplierCode', 'supplier_code', '', $object, 0);\n\t\t\t}\n\t\t\tprint '</td><td>';\n\t\t\tif ((!empty($conf->fournisseur->enabled) && !empty($user->rights->fournisseur->lire) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || (!empty($conf->supplier_order->enabled) && !empty($user->rights->supplier_order->lire)) || (!empty($conf->supplier_invoice->enabled) && !empty($user->rights->supplier_invoice->lire))) {\n\t\t\t\tprint '<table class=\"nobordernopadding\"><tr><td>';\n\t\t\t\t$tmpcode = $object->code_fournisseur;\n\t\t\t\tif (empty($tmpcode) && !empty($modCodeFournisseur->code_auto)) {\n\t\t\t\t\t$tmpcode = $modCodeFournisseur->getNextValue($object, 1);\n\t\t\t\t}\n\t\t\t\tprint '<input type=\"text\" name=\"supplier_code\" id=\"supplier_code\" class=\"maxwidthonsmartphone\" value=\"'.dol_escape_htmltag($tmpcode).'\" maxlength=\"24\">';\n\t\t\t\tprint '</td><td>';\n\t\t\t\t$s = $modCodeFournisseur->getToolTip($langs, $object, 1);\n\t\t\t\tprint $form->textwithpicto('', $s, 1);\n\t\t\t\tprint '</td></tr></table>';\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Status\n\t\tprint '<tr><td>'.$form->editfieldkey('Status', 'status', '', $object, 0).'</td><td colspan=\"3\">';\n\t\tprint $form->selectarray('status', array('0'=>$langs->trans('ActivityCeased'), '1'=>$langs->trans('InActivity')), 1, 0, 0, 0, '', 0, 0, 0, '', 'minwidth100', 1);\n\t\tprint '</td></tr>';\n\n\t\t// Barcode\n\t\tif (!empty($conf->barcode->enabled)) {\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Gencod', 'barcode', '', $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\">';\n\t\t\tprint img_picto('', 'barcode');\n\t\t\tprint '<input type=\"text\" name=\"barcode\" id=\"barcode\" value=\"'.dol_escape_htmltag($object->barcode).'\">';\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Address\n\t\tprint '<tr><td class=\"tdtop\">';\n\t\tprint $form->editfieldkey('Address', 'address', '', $object, 0);\n\t\tprint '</td>';\n\t\tprint '<td colspan=\"3\">';\n\t\tprint '<textarea name=\"address\" id=\"address\" class=\"quatrevingtpercent\" rows=\"'.ROWS_2.'\" wrap=\"soft\">';\n\t\tprint dol_escape_htmltag($object->address, 0, 1);\n\t\tprint '</textarea>';\n\t\tprint $form->widgetForTranslation(\"address\", $object, $permissiontoadd, 'textarea', 'alphanohtml', 'quatrevingtpercent');\n\t\tprint '</td></tr>';\n\n\t\t// Zip / Town\n\t\tprint '<tr><td>'.$form->editfieldkey('Zip', 'zipcode', '', $object, 0).'</td><td>';\n\t\tprint $formcompany->select_ziptown($object->zip, 'zipcode', array('town', 'selectcountry_id', 'state_id'), 0, 0, '', 'maxwidth100');\n\t\tprint '</td>';\n\t\tif ($conf->browser->layout == 'phone') {\n\t\t\tprint '</tr><tr>';\n\t\t}\n\t\tprint '<td class=\"tdtop\">'.$form->editfieldkey('Town', 'town', '', $object, 0).'</td><td>';\n\t\tprint $formcompany->select_ziptown($object->town, 'town', array('zipcode', 'selectcountry_id', 'state_id'), 0, 0, '', 'maxwidth100 quatrevingtpercent');\n\t\tprint $form->widgetForTranslation(\"town\", $object, $permissiontoadd, 'string', 'alphanohtml', 'maxwidth100 quatrevingtpercent');\n\t\tprint '</td></tr>';\n\n\t\t// Country\n\t\tprint '<tr><td>'.$form->editfieldkey('Country', 'selectcountry_id', '', $object, 0).'</td><td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\tprint img_picto('', 'country', 'class=\"paddingrightonly\"');\n\t\tprint $form->select_country((GETPOSTISSET('country_id') ? GETPOST('country_id') : $object->country_id), 'country_id', '', 0, 'minwidth300 maxwidth500 widthcentpercentminusx');\n\t\tif ($user->admin) {\n\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\t\tprint '</td></tr>';\n\n\t\t// State\n\t\tif (empty($conf->global->SOCIETE_DISABLE_STATE)) {\n\t\t\tif (!empty($conf->global->MAIN_SHOW_REGION_IN_STATE_SELECT) && ($conf->global->MAIN_SHOW_REGION_IN_STATE_SELECT == 1 || $conf->global->MAIN_SHOW_REGION_IN_STATE_SELECT == 2)) {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey('Region-State', 'state_id', '', $object, 0).'</td><td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t\t} else {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey('State', 'state_id', '', $object, 0).'</td><td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t\t}\n\n\t\t\tif ($object->country_id) {\n\t\t\t\tprint img_picto('', 'state', 'class=\"pictofixedwidth\"');\n\t\t\t\tprint $formcompany->select_state($object->state_id, $object->country_code);\n\t\t\t} else {\n\t\t\t\tprint $countrynotdefined;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Phone / Fax\n\t\tprint '<tr><td>'.$form->editfieldkey('Phone', 'phone', '', $object, 0).'</td>';\n\t\tprint '<td'.($conf->browser->layout == 'phone' ? ' colspan=\"3\"' : '').'>'.img_picto('', 'object_phoning').' <input type=\"text\" name=\"phone\" id=\"phone\" class=\"maxwidth200 widthcentpercentminusx\" value=\"'.(GETPOSTISSET('phone') ?GETPOST('phone', 'alpha') : $object->phone).'\"></td>';\n\t\tif ($conf->browser->layout == 'phone') {\n\t\t\tprint '</tr><tr>';\n\t\t}\n\t\tprint '<td>'.$form->editfieldkey('Fax', 'fax', '', $object, 0).'</td>';\n\t\tprint '<td'.($conf->browser->layout == 'phone' ? ' colspan=\"3\"' : '').'>'.img_picto('', 'object_phoning_fax').' <input type=\"text\" name=\"fax\" id=\"fax\" class=\"maxwidth200 widthcentpercentminusx\" value=\"'.(GETPOSTISSET('fax') ?GETPOST('fax', 'alpha') : $object->fax).'\"></td></tr>';\n\n\t\t// Email / Web\n\t\tprint '<tr><td>'.$form->editfieldkey('EMail', 'email', '', $object, 0, 'string', '', empty($conf->global->SOCIETE_EMAIL_MANDATORY) ? '' : $conf->global->SOCIETE_EMAIL_MANDATORY).'</td>';\n\t\tprint '<td'.(($conf->browser->layout == 'phone') || empty($conf->mailing->enabled) ? ' colspan=\"3\"' : '').'>'.img_picto('', 'object_email').' <input type=\"text\" class=\"maxwidth200 widthcentpercentminusx\" name=\"email\" id=\"email\" value=\"'.$object->email.'\"></td>';\n\t\tif (!empty($conf->mailing->enabled) && !empty($conf->global->THIRDPARTY_SUGGEST_ALSO_ADDRESS_CREATION)) {\n\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\tprint '</tr><tr>';\n\t\t\t}\n\t\t\tprint '<td class=\"individualline noemail\">'.$form->editfieldkey($langs->trans('No_Email') .' ('.$langs->trans('Contact').')', 'contact_no_email', '', $object, 0).'</td>';\n\t\t\tprint '<td class=\"individualline\" '.(($conf->browser->layout == 'phone') || empty($conf->mailing->enabled) ? ' colspan=\"3\"' : '').'>'.$form->selectyesno('contact_no_email', (GETPOSTISSET(\"contact_no_email\") ? GETPOST(\"contact_no_email\", 'alpha') : (empty($object->no_email) ? 0 : 1)), 1, false, 1).'</td>';\n\t\t}\n\t\tprint '</tr>';\n\t\tprint '<tr><td>'.$form->editfieldkey('Web', 'url', '', $object, 0).'</td>';\n\t\tprint '<td colspan=\"3\">'.img_picto('', 'globe').' <input type=\"text\" class=\"maxwidth500 widthcentpercentminusx\" name=\"url\" id=\"url\" value=\"'.$object->url.'\"></td></tr>';\n\n\t\tif (!empty($conf->socialnetworks->enabled)) {\n\t\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\t\tif ($value['active']) {\n\t\t\t\t\tprint '<tr>';\n\t\t\t\t\tprint '<td><label for=\"'.$value['label'].'\">'.$form->editfieldkey($value['label'], $key, '', $object, 0).'</label></td>';\n\t\t\t\t\tprint '<td colspan=\"3\">';\n\t\t\t\t\tif (!empty($value['icon'])) {\n\t\t\t\t\t\tprint '<span class=\"fa '.$value['icon'].'\"></span>';\n\t\t\t\t\t}\n\t\t\t\t\tprint '<input type=\"text\" name=\"'.$key.'\" id=\"'.$key.'\" class=\"minwidth100\" maxlength=\"80\" value=\"'.dol_escape_htmltag(GETPOSTISSET($key) ? GETPOST($key, 'alphanohtml') : (empty($object->socialnetworks[$key]) ? '' : $object->socialnetworks[$key])).'\">';\n\t\t\t\t\tprint '</td>';\n\t\t\t\t\tprint '</tr>';\n\t\t\t\t} elseif (!empty($object->socialnetworks[$key])) {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"'.$key.'\" value=\"'.$object->socialnetworks[$key].'\">';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Prof ids\n\t\t$i = 1; $j = 0; $NBCOLS = ($conf->browser->layout == 'phone' ? 1 : 2);\n\t\twhile ($i <= 6) {\n\t\t\t$idprof = $langs->transcountry('ProfId'.$i, $object->country_code);\n\t\t\tif ($idprof != '-')\t{\n\t\t\t\t$key = 'idprof'.$i;\n\n\t\t\t\tif (($j % $NBCOLS) == 0) {\n\t\t\t\t\tprint '<tr>';\n\t\t\t\t}\n\n\t\t\t\t$idprof_mandatory = 'SOCIETE_IDPROF'.($i).'_MANDATORY';\n\t\t\t\tprint '<td>'.$form->editfieldkey($idprof, $key, '', $object, 0, 'string', '', (empty($conf->global->$idprof_mandatory) ? 0 : 1)).'</td><td>';\n\n\t\t\t\tprint $formcompany->get_input_id_prof($i, $key, $object->$key, $object->country_code);\n\t\t\t\tprint '</td>';\n\t\t\t\tif (($j % $NBCOLS) == ($NBCOLS - 1)) {\n\t\t\t\t\tprint '</tr>';\n\t\t\t\t}\n\t\t\t\t$j++;\n\t\t\t}\n\t\t\t$i++;\n\t\t}\n\t\tif ($NBCOLS > 1 && ($j % 2 == 1)) {\n\t\t\tprint '<td colspan=\"2\"></td></tr>';\n\t\t}\n\n\t\t// Vat is used\n\t\tprint '<tr><td>'.$form->editfieldkey('VATIsUsed', 'assujtva_value', '', $object, 0).'</td>';\n\t\tprint '<td>';\n\t\tprint $form->selectyesno('assujtva_value', GETPOSTISSET('assujtva_value') ?GETPOST('assujtva_value', 'int') : 1, 1); // Assujeti par defaut en creation\n\t\tprint '</td>';\n\t\tif ($conf->browser->layout == 'phone') {\n\t\t\tprint '</tr><tr>';\n\t\t}\n\t\tprint '<td class=\"nowrap\">'.$form->editfieldkey('VATIntra', 'intra_vat', '', $object, 0).'</td>';\n\t\tprint '<td class=\"nowrap\">';\n\t\t$s = '<input type=\"text\" class=\"flat maxwidthonsmartphone\" name=\"tva_intra\" id=\"intra_vat\" maxlength=\"20\" value=\"'.$object->tva_intra.'\">';\n\n\t\tif (empty($conf->global->MAIN_DISABLEVATCHECK) && isInEEC($object)) {\n\t\t\t$s .= ' ';\n\n\t\t\tif (!empty($conf->use_javascript_ajax))\t{\n\t\t\t\t$widthpopup = 600;\n\t\t\t\tif (!empty($conf->dol_use_jmobile)) {\n\t\t\t\t\t$widthpopup = 350;\n\t\t\t\t}\n\t\t\t\t$heightpopup = 400;\n\t\t\t\tprint \"\\n\";\n\t\t\t\tprint '<script language=\"JavaScript\" type=\"text/javascript\">';\n\t\t\t\tprint \"function CheckVAT(a) {\\n\";\n\t\t\t\tprint \"newpopup('\".DOL_URL_ROOT.\"/societe/checkvat/checkVatPopup.php?vatNumber='+a, '\".dol_escape_js($langs->trans(\"VATIntraCheckableOnEUSite\")).\"', \".$widthpopup.\", \".$heightpopup.\");\\n\";\n\t\t\t\tprint \"}\\n\";\n\t\t\t\tprint '</script>';\n\t\t\t\tprint \"\\n\";\n\t\t\t\t$s .= '<a href=\"#\" class=\"hideonsmartphone\" onclick=\"javascript: CheckVAT(document.formsoc.tva_intra.value);\">'.$langs->trans(\"VATIntraCheck\").'</a>';\n\t\t\t\t$s = $form->textwithpicto($s, $langs->trans(\"VATIntraCheckDesc\", $langs->transnoentitiesnoconv(\"VATIntraCheck\")), 1);\n\t\t\t} else {\n\t\t\t\t$s .= '<a href=\"'.$langs->transcountry(\"VATIntraCheckURL\", $object->country_id).'\" target=\"_blank\">'.img_picto($langs->trans(\"VATIntraCheckableOnEUSite\"), 'help').'</a>';\n\t\t\t}\n\t\t}\n\t\tprint $s;\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\n\t\t// Local Taxes\n\t\t//TODO: Place into a function to control showing by country or study better option\n\t\tif ($mysoc->localtax1_assuj == \"1\" && $mysoc->localtax2_assuj == \"1\") {\n\t\t\tprint '<tr><td>'.$langs->transcountry(\"LocalTax1IsUsed\", $mysoc->country_code).'</td><td>';\n\t\t\tprint $form->selectyesno('localtax1assuj_value', (isset($conf->global->THIRDPARTY_DEFAULT_USELOCALTAX1) ? $conf->global->THIRDPARTY_DEFAULT_USELOCALTAX1 : 0), 1);\n\t\t\tprint '</td>';\n\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\tprint '</tr><tr>';\n\t\t\t}\n\t\t\tprint '<td>'.$langs->transcountry(\"LocalTax2IsUsed\", $mysoc->country_code).'</td><td>';\n\t\t\tprint $form->selectyesno('localtax2assuj_value', (isset($conf->global->THIRDPARTY_DEFAULT_USELOCALTAX2) ? $conf->global->THIRDPARTY_DEFAULT_USELOCALTAX2 : 0), 1);\n\t\t\tprint '</td></tr>';\n\t\t} elseif ($mysoc->localtax1_assuj == \"1\") {\n\t\t\tprint '<tr><td>'.$langs->transcountry(\"LocalTax1IsUsed\", $mysoc->country_code).'</td><td colspan=\"3\">';\n\t\t\tprint $form->selectyesno('localtax1assuj_value', (isset($conf->global->THIRDPARTY_DEFAULT_USELOCALTAX1) ? $conf->global->THIRDPARTY_DEFAULT_USELOCALTAX1 : 0), 1);\n\t\t\tprint '</td></tr>';\n\t\t} elseif ($mysoc->localtax2_assuj == \"1\") {\n\t\t\tprint '<tr><td>'.$langs->transcountry(\"LocalTax2IsUsed\", $mysoc->country_code).'</td><td colspan=\"3\">';\n\t\t\tprint $form->selectyesno('localtax2assuj_value', (isset($conf->global->THIRDPARTY_DEFAULT_USELOCALTAX2) ? $conf->global->THIRDPARTY_DEFAULT_USELOCALTAX2 : 0), 1);\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Type - Workforce/Staff\n\t\tprint '<tr><td>'.$form->editfieldkey('ThirdPartyType', 'typent_id', '', $object, 0).'</td><td class=\"maxwidthonsmartphone\"'.( ($conf->browser->layout == 'phone' || !empty($conf->global->SOCIETE_DISABLE_WORKFORCE)) ? ' colspan=\"3\"' : '').'>'.\"\\n\";\n\t\t$sortparam = (empty($conf->global->SOCIETE_SORT_ON_TYPEENT) ? 'ASC' : $conf->global->SOCIETE_SORT_ON_TYPEENT); // NONE means we keep sort of original array, so we sort on position. ASC, means next function will sort on label.\n\t\tprint $form->selectarray(\"typent_id\", $formcompany->typent_array(0), $object->typent_id, 1, 0, 0, '', 0, 0, 0, $sortparam, '', 1);\n\t\tif ($user->admin) {\n\t\t\tprint ' '.info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\t\tif (empty($conf->global->SOCIETE_DISABLE_WORKFORCE)) {\n\t\t\tprint '</td>';\n\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\tprint '</tr><tr>';\n\t\t\t}\n\t\t\tprint '<td>'.$form->editfieldkey('Workforce', 'effectif_id', '', $object, 0).'</td><td class=\"maxwidthonsmartphone\"'.($conf->browser->layout == 'phone' ? ' colspan=\"3\"' : '').'>';\n\t\t\tprint $form->selectarray(\"effectif_id\", $formcompany->effectif_array(0), $object->effectif_id, 0, 0, 0, '', 0, 0, 0, '', '', 1);\n\t\t\tif ($user->admin) {\n\t\t\t\tprint ' '.info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<input type=\"hidden\" name=\"effectif_id\" id=\"effectif_id\" value=\"'.$object->effectif_id.'\">';\n\t\t}\n\t\tprint '</td></tr>';\n\n\t\t// Legal Form\n\t\tprint '<tr><td>'.$form->editfieldkey('JuridicalStatus', 'forme_juridique_code', '', $object, 0).'</td>';\n\t\tprint '<td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\tif ($object->country_id) {\n\t\t\tprint $formcompany->select_juridicalstatus($object->forme_juridique_code, $object->country_code, '', 'forme_juridique_code');\n\t\t} else {\n\t\t\tprint $countrynotdefined;\n\t\t}\n\t\tprint '</td></tr>';\n\n\t\t// Capital\n\t\tprint '<tr><td>'.$form->editfieldkey('Capital', 'capital', '', $object, 0).'</td>';\n\t\tprint '<td colspan=\"3\"><input type=\"text\" name=\"capital\" id=\"capital\" class=\"maxwidth100\" value=\"'.$object->capital.'\"> ';\n\t\tprint '<span class=\"hideonsmartphone\">'.$langs->trans(\"Currency\".$conf->currency).'</span></td></tr>';\n\n\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\tprint '<tr><td>'.$form->editfieldkey('DefaultLang', 'default_lang', '', $object, 0).'</td><td colspan=\"3\" class=\"maxwidthonsmartphone\">'.\"\\n\";\n\t\t\tprint img_picto('', 'language').$formadmin->select_language(GETPOST('default_lang', 'alpha') ? GETPOST('default_lang', 'alpha') : ($object->default_lang ? $object->default_lang : ''), 'default_lang', 0, 0, 1, 0, 0, 'maxwidth200onsmartphone');\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\t\t}\n\n\t\t// Incoterms\n\t\tif (!empty($conf->incoterm->enabled)) {\n\t\t\tprint '<tr>';\n\t\t\tprint '<td>'.$form->editfieldkey('IncotermLabel', 'incoterm_id', '', $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t\tprint $form->select_incoterms((!empty($object->fk_incoterms) ? $object->fk_incoterms : ''), (!empty($object->location_incoterms) ? $object->location_incoterms : ''));\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Categories\n\t\tif (!empty($conf->categorie->enabled) && !empty($user->rights->categorie->lire)) {\n\t\t\t$langs->load('categories');\n\n\t\t\t// Customer\n\t\t\t//if ($object->prospect || $object->client || (! $object->fournisseur && ! empty($conf->global->THIRDPARTY_CAN_HAVE_CATEGORY_EVEN_IF_NOT_CUSTOMER_PROSPECT_SUPPLIER))) {\n\t\t\tprint '<tr class=\"visibleifcustomer\"><td class=\"toptd\">'.$form->editfieldkey('CustomersProspectsCategoriesShort', 'custcats', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_CUSTOMER, null, 'parent', null, null, 1);\n\t\t\tprint img_picto('', 'category').$form->multiselectarray('custcats', $cate_arbo, GETPOST('custcats', 'array'), null, null, 'quatrevingtpercent widthcentpercentminusx', 0, 0);\n\t\t\tprint \"</td></tr>\";\n\t\t\t//}\n\n\t\t\tif (!empty($conf->global->THIRDPARTY_SUGGEST_ALSO_ADDRESS_CREATION)) {\n\t\t\t\tprint '<tr class=\"individualline\"><td class=\"toptd\">'.$form->editfieldkey('ContactCategoriesShort', 'contcats', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_CONTACT, null, 'parent', null, null, 1);\n\t\t\t\tprint img_picto('', 'category').$form->multiselectarray('contcats', $cate_arbo, GETPOST('contcats', 'array'), null, null, 'quatrevingtpercent widthcentpercentminusx', 0, 0);\n\t\t\t\tprint \"</td></tr>\";\n\t\t\t}\n\n\t\t\tif (!empty($conf->global->THIRDPARTY_SUGGEST_ALSO_ADDRESS_CREATION)) {\n\t\t\t\tprint '<tr class=\"individualline\"><td class=\"toptd\">'.$form->editfieldkey('ContactCategoriesShort', 'contcats', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_CONTACT, null, 'parent', null, null, 1);\n\t\t\t\tprint img_picto('', 'category').$form->multiselectarray('contcats', $cate_arbo, GETPOST('contcats', 'array'), null, null, 'quatrevingtpercent widthcentpercentminusx', 0, 0);\n\t\t\t\tprint \"</td></tr>\";\n\t\t\t}\n\n\t\t\t// Supplier\n\t\t\tif ((!empty($conf->fournisseur->enabled) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || !empty($conf->supplier_order->enabled) || !empty($conf->supplier_invoice->enabled)) {\n\t\t\t\tprint '<tr class=\"visibleifsupplier\"><td class=\"toptd\">'.$form->editfieldkey('SuppliersCategoriesShort', 'suppcats', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_SUPPLIER, null, 'parent', null, null, 1);\n\t\t\t\tprint img_picto('', 'category').$form->multiselectarray('suppcats', $cate_arbo, GETPOST('suppcats', 'array'), null, null, 'quatrevingtpercent widthcentpercentminusx', 0, 0);\n\t\t\t\tprint \"</td></tr>\";\n\t\t\t}\n\t\t}\n\n\t\t// Multicurrency\n\t\tif (!empty($conf->multicurrency->enabled)) {\n\t\t\tprint '<tr>';\n\t\t\tprint '<td>'.$form->editfieldkey('Currency', 'multicurrency_code', '', $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t\tprint $form->selectMultiCurrency(($object->multicurrency_code ? $object->multicurrency_code : $conf->currency), 'multicurrency_code', 1);\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Other attributes\n\t\t$parameters = array('socid'=>$socid, 'colspan' => ' colspan=\"3\"', 'colspanvalue' => '3');\n\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_add.tpl.php';\n\n\t\t// Assign a sale representative\n\t\tprint '<tr>';\n\t\tprint '<td>'.$form->editfieldkey('AllocateCommercial', 'commercial_id', '', $object, 0).'</td>';\n\t\tprint '<td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t$userlist = $form->select_dolusers('', '', 0, null, 0, '', '', 0, 0, 0, 'AND u.statut = 1', 0, '', '', 0, 1);\n\t\t// Note: If user has no right to \"see all thirdparties\", we force selection of sale representative to him, so after creation he can see the record.\n\t\t$selected = (count(GETPOST('commercial', 'array')) > 0 ? GETPOST('commercial', 'array') : (GETPOST('commercial', 'int') > 0 ? array(GETPOST('commercial', 'int')) : (empty($user->rights->societe->client->voir) ? array($user->id) : array())));\n\t\tprint img_picto('', 'user').$form->multiselectarray('commercial', $userlist, $selected, null, null, 'quatrevingtpercent widthcentpercentminusx', 0, 0);\n\t\tprint '</td></tr>';\n\n\t\t// Add logo\n\t\tprint '<tr class=\"hideonsmartphone\">';\n\t\tprint '<td>'.$form->editfieldkey('Logo', 'photoinput', '', $object, 0).'</td>';\n\t\tprint '<td colspan=\"3\">';\n\t\tprint '<input class=\"flat\" type=\"file\" name=\"photo\" id=\"photoinput\" />';\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\n\t\tprint '</table>'.\"\\n\";\n\n\t\t// Accountancy codes\n\t\tif (!empty($conf->global->ACCOUNTANCY_USE_PRODUCT_ACCOUNT_ON_THIRDPARTY)) {\n\t\t\tprint '<table class=\"border\" width=\"100%\">';\n\n\t\t\tif (! empty($conf->accounting->enabled)) {\n\t\t\t\t// Accountancy_code_sell\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancySellCode\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\t$accountancy_code_sell = GETPOST('accountancy_code_sell', 'alpha');\n\t\t\t\tprint $formaccounting->select_account($accountancy_code_sell, 'accountancy_code_sell', 1, null, 1, 1, '');\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\t// Accountancy_code_buy\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancyBuyCode\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\t$accountancy_code_buy = GETPOST('accountancy_code_buy', 'alpha');\n\t\t\t\tprint $formaccounting->select_account($accountancy_code_buy, 'accountancy_code_buy', 1, null, 1, 1, '');\n\t\t\t\tprint '</td></tr>';\n\t\t\t} else { // For external software\n\t\t\t\t// Accountancy_code_sell\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancySellCode\").'</td>';\n\t\t\t\tprint '<td class=\"maxwidthonsmartphone\"><input class=\"minwidth100\" name=\"accountancy_code_sell\" value=\"'.$object->accountancy_code_sell.'\">';\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\t// Accountancy_code_buy\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancyBuyCode\").'</td>';\n\t\t\t\tprint '<td class=\"maxwidthonsmartphone\"><input class=\"minwidth100\" name=\"accountancy_code_buy\" value=\"'.$object->accountancy_code_buy.'\">';\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\tprint '</table>';\n\t\t}\n\n\t\tprint dol_get_fiche_end();\n\n\t\tprint '<div class=\"center\">';\n\t\tprint '<input type=\"submit\" class=\"button\" name=\"create\" value=\"'.$langs->trans('AddThirdParty').'\">';\n\t\tif (!empty($backtopage)) {\n\t\t\tprint ' &nbsp; &nbsp; ';\n\t\t\tprint '<input type=\"submit\" class=\"button button-cancel\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t} else {\n\t\t\tprint ' &nbsp; &nbsp; ';\n\t\t\tprint '<input type=\"button\" class=\"button button-cancel\" value=\"'.$langs->trans(\"Cancel\").'\" onClick=\"javascript:history.go(-1)\">';\n\t\t}\n\t\tprint '</div>'.\"\\n\";\n\n\t\tprint '</form>'.\"\\n\";\n\t} elseif ($action == 'edit') {\n\t\t//print load_fiche_titre($langs->trans(\"EditCompany\"));\n\n\t\tif ($socid) {\n\t\t\t$res = $object->fetch_optionals();\n\t\t\t//if ($res < 0) { dol_print_error($db); exit; }\n\n\t\t\t$head = societe_prepare_head($object);\n\n\t\t\t// Load object modCodeTiers\n\t\t\t$module = (!empty($conf->global->SOCIETE_CODECLIENT_ADDON) ? $conf->global->SOCIETE_CODECLIENT_ADDON : 'mod_codeclient_leopard');\n\t\t\tif (substr($module, 0, 15) == 'mod_codeclient_' && substr($module, -3) == 'php') {\n\t\t\t\t$module = substr($module, 0, dol_strlen($module) - 4);\n\t\t\t}\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$modCodeClient = new $module($db);\n\t\t\t// We verified if the tag prefix is used\n\t\t\tif ($modCodeClient->code_auto) {\n\t\t\t\t$prefixCustomerIsUsed = $modCodeClient->verif_prefixIsUsed();\n\t\t\t}\n\t\t\t$module = $conf->global->SOCIETE_CODECLIENT_ADDON;\n\t\t\tif (substr($module, 0, 15) == 'mod_codeclient_' && substr($module, -3) == 'php') {\n\t\t\t\t$module = substr($module, 0, dol_strlen($module) - 4);\n\t\t\t}\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$modCodeFournisseur = new $module($db);\n\t\t\t// On verifie si la balise prefix est utilisee\n\t\t\tif ($modCodeFournisseur->code_auto) {\n\t\t\t\t$prefixSupplierIsUsed = $modCodeFournisseur->verif_prefixIsUsed();\n\t\t\t}\n\n\t\t\t$object->oldcopy = clone $object;\n\n\t\t\tif (GETPOSTISSET('name')) {\n\t\t\t\t// We overwrite with values if posted\n\t\t\t\t$object->name = GETPOST('name', 'alphanohtml');\n\t\t\t\t$object->prefix_comm\t\t\t= GETPOST('prefix_comm', 'alphanohtml');\n\t\t\t\t$object->client = GETPOST('client', 'int');\n\t\t\t\t$object->code_client\t\t\t= GETPOST('customer_code', 'alpha');\n\t\t\t\t$object->fournisseur\t\t\t= GETPOST('fournisseur', 'int');\n\t\t\t\t$object->code_fournisseur = GETPOST('supplier_code', 'alpha');\n\t\t\t\t$object->address = GETPOST('address', 'alphanohtml');\n\t\t\t\t$object->zip = GETPOST('zipcode', 'alphanohtml');\n\t\t\t\t$object->town = GETPOST('town', 'alphanohtml');\n\t\t\t\t$object->country_id = GETPOST('country_id') ?GETPOST('country_id', 'int') : $mysoc->country_id;\n\t\t\t\t$object->state_id = GETPOST('state_id', 'int');\n\t\t\t\t//$object->skype\t\t\t\t= GETPOST('skype', 'alpha');\n\t\t\t\t//$object->twitter\t\t\t\t= GETPOST('twitter', 'alpha');\n\t\t\t\t//$object->facebook\t\t\t\t= GETPOST('facebook', 'alpha');\n\t\t\t\t//$object->linkedin\t\t\t\t= GETPOST('linkedin', 'alpha');\n\t\t\t\t$object->socialnetworks = array();\n\t\t\t\tif (!empty($conf->socialnetworks->enabled)) {\n\t\t\t\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\t\t\t\tif (GETPOSTISSET($key) && GETPOST($key, 'alphanohtml') != '') {\n\t\t\t\t\t\t\t$object->socialnetworks[$key] = GETPOST($key, 'alphanohtml');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$object->phone\t\t\t\t\t= GETPOST('phone', 'alpha');\n\t\t\t\t$object->fax\t\t\t\t\t= GETPOST('fax', 'alpha');\n\t\t\t\t$object->email\t\t\t\t\t= GETPOST('email', 'custom', 0, FILTER_SANITIZE_EMAIL);\n\t\t\t\t$object->url\t\t\t\t\t= GETPOST('url', 'custom', 0, FILTER_SANITIZE_URL);\n\t\t\t\t$object->capital\t\t\t\t= GETPOST('capital', 'alphanohtml');\n\t\t\t\t$object->idprof1\t\t\t\t= GETPOST('idprof1', 'alphanohtml');\n\t\t\t\t$object->idprof2\t\t\t\t= GETPOST('idprof2', 'alphanohtml');\n\t\t\t\t$object->idprof3\t\t\t\t= GETPOST('idprof3', 'alphanohtml');\n\t\t\t\t$object->idprof4\t\t\t\t= GETPOST('idprof4', 'alphanohtml');\n\t\t\t\t$object->idprof5\t\t\t\t= GETPOST('idprof5', 'alphanohtml');\n\t\t\t\t$object->idprof6\t\t\t\t= GETPOST('idprof6', 'alphanohtml');\n\t\t\t\t$object->typent_id = GETPOST('typent_id', 'int');\n\t\t\t\t$object->effectif_id = GETPOST('effectif_id', 'int');\n\t\t\t\t$object->barcode\t\t\t\t= GETPOST('barcode', 'alphanohtml');\n\t\t\t\t$object->forme_juridique_code = GETPOST('forme_juridique_code', 'int');\n\t\t\t\t$object->default_lang = GETPOST('default_lang', 'alpha');\n\n\t\t\t\t$object->tva_assuj\t\t\t\t= GETPOST('assujtva_value', 'int');\n\t\t\t\t$object->tva_intra\t\t\t\t= GETPOST('tva_intra', 'alphanohtml');\n\t\t\t\t$object->status = GETPOST('status', 'int');\n\n\t\t\t\t// Webservices url/key\n\t\t\t\t$object->webservices_url        = GETPOST('webservices_url', 'custom', 0, FILTER_SANITIZE_URL);\n\t\t\t\t$object->webservices_key        = GETPOST('webservices_key', 'san_alpha');\n\n\t\t\t\tif (GETPOSTISSET('accountancy_code_sell')) {\n\t\t\t\t\t$object->accountancy_code_sell  = GETPOST('accountancy_code_sell', 'alpha');\n\t\t\t\t}\n\t\t\t\tif (GETPOSTISSET('accountancy_code_buy')) {\n\t\t\t\t\t$object->accountancy_code_buy   = GETPOST('accountancy_code_buy', 'alpha');\n\t\t\t\t}\n\n\t\t\t\t//Incoterms\n\t\t\t\tif (!empty($conf->incoterm->enabled)) {\n\t\t\t\t\t$object->fk_incoterms = GETPOST('incoterm_id', 'int');\n\t\t\t\t\t$object->location_incoterms = GETPOST('lcoation_incoterms', 'alpha');\n\t\t\t\t}\n\n\t\t\t\t//Local Taxes\n\t\t\t\t$object->localtax1_assuj\t\t= GETPOST('localtax1assuj_value');\n\t\t\t\t$object->localtax2_assuj\t\t= GETPOST('localtax2assuj_value');\n\n\t\t\t\t$object->localtax1_value\t\t= GETPOST('lt1');\n\t\t\t\t$object->localtax2_value\t\t= GETPOST('lt2');\n\n\t\t\t\t// We set country_id, and country_code label of the chosen country\n\t\t\t\tif ($object->country_id > 0) {\n\t\t\t\t\t$tmparray = getCountry($object->country_id, 'all');\n\t\t\t\t\t$object->country_code = $tmparray['code'];\n\t\t\t\t\t$object->country = $tmparray['label'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($object->localtax1_assuj == 0) {\n\t\t\t\t$sub = 0;\n\t\t\t} else {\n\t\t\t\t$sub = 1;\n\t\t\t}\n\t\t\tif ($object->localtax2_assuj == 0) {\n\t\t\t\t$sub2 = 0;\n\t\t\t} else {\n\t\t\t\t$sub2 = 1;\n\t\t\t}\n\n\t\t\tif ($conf->use_javascript_ajax) {\n\t\t\t\tprint \"\\n\".'<script type=\"text/javascript\">';\n\t\t\t\tprint '$(document).ready(function () {\n    \t\t\tvar val='.$sub.';\n    \t\t\tvar val2='.$sub2.';\n    \t\t\tif(\"#localtax1assuj_value\".value==undefined){\n    \t\t\t\tif(val==1){\n    \t\t\t\t\t$(\".cblt1\").show();\n    \t\t\t\t}else{\n    \t\t\t\t\t$(\".cblt1\").hide();\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tif(\"#localtax2assuj_value\".value==undefined){\n    \t\t\t\tif(val2==1){\n    \t\t\t\t\t$(\".cblt2\").show();\n    \t\t\t\t}else{\n    \t\t\t\t\t$(\".cblt2\").hide();\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\t$(\"#localtax1assuj_value\").change(function() {\n               \t\tvar value=document.getElementById(\"localtax1assuj_value\").value;\n    \t\t\t\tif(value==1){\n    \t\t\t\t\t$(\".cblt1\").show();\n    \t\t\t\t}else{\n    \t\t\t\t\t$(\".cblt1\").hide();\n    \t\t\t\t}\n    \t\t\t});\n    \t\t\t$(\"#localtax2assuj_value\").change(function() {\n    \t\t\t\tvar value=document.getElementById(\"localtax2assuj_value\").value;\n    \t\t\t\tif(value==1){\n    \t\t\t\t\t$(\".cblt2\").show();\n    \t\t\t\t}else{\n    \t\t\t\t\t$(\".cblt2\").hide();\n    \t\t\t\t}\n    \t\t\t});\n\n\t\t\t\tinit_customer_categ();\n\t  \t\t\t$(\"#customerprospect\").change(function() {\n\t\t\t\t\tinit_customer_categ();\n\t\t\t\t});\n       \t\t\tfunction init_customer_categ() {\n\t\t\t\t\tconsole.log(\"is customer or prospect = \"+jQuery(\"#customerprospect\").val());\n\t\t\t\t\tif (jQuery(\"#customerprospect\").val() == 0 && (jQuery(\"#fournisseur\").val() == 0 || '.(empty($conf->global->THIRDPARTY_CAN_HAVE_CATEGORY_EVEN_IF_NOT_CUSTOMER_PROSPECT_SUPPLIER) ? '1' : '0').'))\n\t\t\t\t\t{\n\t\t\t\t\t\tjQuery(\".visibleifcustomer\").hide();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tjQuery(\".visibleifcustomer\").show();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tinit_supplier_categ();\n\t  \t\t\t$(\"#fournisseur\").change(function() {\n\t\t\t\t\tinit_supplier_categ();\n\t\t\t\t});\n       \t\t\tfunction init_supplier_categ() {\n\t\t\t\t\tconsole.log(\"is supplier = \"+jQuery(\"#fournisseur\").val());\n\t\t\t\t\tif (jQuery(\"#fournisseur\").val() == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tjQuery(\".visibleifsupplier\").hide();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tjQuery(\".visibleifsupplier\").show();\n\t\t\t\t\t}\n\t\t\t\t};\n\n       \t\t\t$(\"#selectcountry_id\").change(function() {\n       \t\t\t\tdocument.formsoc.action.value=\"edit\";\n      \t\t\t\tdocument.formsoc.submit();\n        \t\t\t});\n\n                })';\n\t\t\t\tprint '</script>'.\"\\n\";\n\t\t\t}\n\n\t\t\tprint '<form enctype=\"multipart/form-data\" action=\"'.$_SERVER[\"PHP_SELF\"].'?socid='.$object->id.'\" method=\"post\" name=\"formsoc\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"update\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"socid\" value=\"'.$object->id.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"entity\" value=\"'.$object->entity.'\">';\n\t\t\tif ($modCodeClient->code_auto || $modCodeFournisseur->code_auto) {\n\t\t\t\tprint '<input type=\"hidden\" name=\"code_auto\" value=\"1\">';\n\t\t\t}\n\n\n\t\t\tprint dol_get_fiche_head($head, 'card', $langs->trans(\"ThirdParty\"), 0, 'company');\n\n\t\t\tprint '<div class=\"fichecenter2\">';\n\t\t\tprint '<table class=\"border centpercent\">';\n\n\t\t\t// Ref/ID\n\t\t\tif (!empty($conf->global->MAIN_SHOW_TECHNICAL_ID)) {\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ID\").'</td><td colspan=\"3\">';\n\t\t\t\tprint $object->ref;\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Name\n\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$form->editfieldkey('ThirdPartyName', 'name', '', $object, 0, 'string', '', 1).'</td>';\n\t\t\tprint '<td colspan=\"3\"><input type=\"text\" class=\"minwidth300\" maxlength=\"128\" name=\"name\" id=\"name\" value=\"'.dol_escape_htmltag($object->name).'\" autofocus=\"autofocus\">';\n\t\t\tprint $form->widgetForTranslation(\"name\", $object, $permissiontoadd, 'string', 'alpahnohtml', 'minwidth300');\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Alias names (commercial, trademark or alias names)\n\t\t\tprint '<tr id=\"name_alias\"><td><label for=\"name_alias_input\">'.$langs->trans('AliasNames').'</label></td>';\n\t\t\tprint '<td colspan=\"3\"><input type=\"text\" class=\"minwidth300\" name=\"name_alias\" id=\"name_alias_input\" value=\"'.dol_escape_htmltag($object->name_alias).'\"></td></tr>';\n\n\t\t\t// Prefix\n\t\t\tif (!empty($conf->global->SOCIETE_USEPREFIX)) {  // Old not used prefix field\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey('Prefix', 'prefix', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t\t// It does not change the prefix mode using the auto numbering prefix\n\t\t\t\tif (($prefixCustomerIsUsed || $prefixSupplierIsUsed) && $object->prefix_comm) {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"prefix_comm\" value=\"'.dol_escape_htmltag($object->prefix_comm).'\">';\n\t\t\t\t\tprint $object->prefix_comm;\n\t\t\t\t} else {\n\t\t\t\t\tprint '<input type=\"text\" size=\"5\" maxlength=\"5\" name=\"prefix_comm\" id=\"prefix\" value=\"'.dol_escape_htmltag($object->prefix_comm).'\">';\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t}\n\n\t\t\t// Prospect/Customer\n\t\t\tprint '<tr><td>'.$form->editfieldkey('ProspectCustomer', 'customerprospect', '', $object, 0, 'string', '', 1).'</td>';\n\t\t\tprint '<td class=\"maxwidthonsmartphone\">';\n\t\t\tprint $formcompany->selectProspectCustomerType($object->client);\n\t\t\tprint '</td>';\n\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\tprint '</tr><tr>';\n\t\t\t}\n\t\t\tprint '<td>'.$form->editfieldkey('CustomerCode', 'customer_code', '', $object, 0).'</td><td>';\n\n\t\t\tprint '<table class=\"nobordernopadding\"><tr><td>';\n\t\t\tif ((!$object->code_client || $object->code_client == -1) && $modCodeClient->code_auto) {\n\t\t\t\t$tmpcode = $object->code_client;\n\t\t\t\tif (empty($tmpcode) && !empty($object->oldcopy->code_client)) {\n\t\t\t\t\t$tmpcode = $object->oldcopy->code_client; // When there is an error to update a thirdparty, the number for supplier and customer code is kept to old value.\n\t\t\t\t}\n\t\t\t\tif (empty($tmpcode) && !empty($modCodeClient->code_auto)) {\n\t\t\t\t\t$tmpcode = $modCodeClient->getNextValue($object, 0);\n\t\t\t\t}\n\t\t\t\tprint '<input type=\"text\" name=\"customer_code\" id=\"customer_code\" size=\"16\" value=\"'.dol_escape_htmltag($tmpcode).'\" maxlength=\"24\">';\n\t\t\t} elseif ($object->codeclient_modifiable()) {\n\t\t\t\tprint '<input type=\"text\" name=\"customer_code\" id=\"customer_code\" size=\"16\" value=\"'.dol_escape_htmltag($object->code_client).'\" maxlength=\"24\">';\n\t\t\t} else {\n\t\t\t\tprint $object->code_client;\n\t\t\t\tprint '<input type=\"hidden\" name=\"customer_code\" value=\"'.dol_escape_htmltag($object->code_client).'\">';\n\t\t\t}\n\t\t\tprint '</td><td>';\n\t\t\t$s = $modCodeClient->getToolTip($langs, $object, 0);\n\t\t\tprint $form->textwithpicto('', $s, 1);\n\t\t\tprint '</td></tr></table>';\n\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Supplier\n\t\t\tif (((!empty($conf->fournisseur->enabled) && !empty($user->rights->fournisseur->lire) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || (!empty($conf->supplier_order->enabled) && !empty($user->rights->supplier_order->lire)) || (!empty($conf->supplier_invoice->enabled) && !empty($user->rights->supplier_invoice->lire)))\n\t\t\t\t|| (!empty($conf->supplier_proposal->enabled) && !empty($user->rights->supplier_proposal->lire))) {\n\t\t\t\tprint '<tr>';\n\t\t\t\tprint '<td>'.$form->editfieldkey('Supplier', 'fournisseur', '', $object, 0, 'string', '', 1).'</td>';\n\t\t\t\tprint '<td class=\"maxwidthonsmartphone\">';\n\t\t\t\tprint $form->selectyesno(\"fournisseur\", $object->fournisseur, 1, false, 0, 1);\n\t\t\t\tprint '</td>';\n\t\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\t\tprint '</tr><tr>';\n\t\t\t\t}\n\t\t\t\tprint '<td>';\n\t\t\t\tif ((!empty($conf->fournisseur->enabled) && !empty($user->rights->fournisseur->lire) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || (!empty($conf->supplier_order->enabled) && !empty($user->rights->supplier_order->lire)) || (!empty($conf->supplier_invoice->enabled) && !empty($user->rights->supplier_invoice->lire))) {\n\t\t\t\t\tprint $form->editfieldkey('SupplierCode', 'supplier_code', '', $object, 0);\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint '<table class=\"nobordernopadding\"><tr><td>';\n\t\t\t\tif ((!$object->code_fournisseur || $object->code_fournisseur == -1) && $modCodeFournisseur->code_auto) {\n\t\t\t\t\t$tmpcode = $object->code_fournisseur;\n\t\t\t\t\tif (empty($tmpcode) && !empty($object->oldcopy->code_fournisseur)) {\n\t\t\t\t\t\t$tmpcode = $object->oldcopy->code_fournisseur; // When there is an error to update a thirdparty, the number for supplier and customer code is kept to old value.\n\t\t\t\t\t}\n\t\t\t\t\tif (empty($tmpcode) && !empty($modCodeFournisseur->code_auto)) {\n\t\t\t\t\t\t$tmpcode = $modCodeFournisseur->getNextValue($object, 1);\n\t\t\t\t\t}\n\t\t\t\t\tprint '<input type=\"text\" name=\"supplier_code\" id=\"supplier_code\" size=\"16\" value=\"'.dol_escape_htmltag($tmpcode).'\" maxlength=\"24\">';\n\t\t\t\t} elseif ($object->codefournisseur_modifiable()) {\n\t\t\t\t\tprint '<input type=\"text\" name=\"supplier_code\" id=\"supplier_code\" size=\"16\" value=\"'.dol_escape_htmltag($object->code_fournisseur).'\" maxlength=\"24\">';\n\t\t\t\t} else {\n\t\t\t\t\tprint $object->code_fournisseur;\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"supplier_code\" value=\"'.$object->code_fournisseur.'\">';\n\t\t\t\t}\n\t\t\t\tprint '</td><td>';\n\t\t\t\t$s = $modCodeFournisseur->getToolTip($langs, $object, 1);\n\t\t\t\tprint $form->textwithpicto('', $s, 1);\n\t\t\t\tprint '</td></tr></table>';\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Barcode\n\t\t\tif (!empty($conf->barcode->enabled)) {\n\t\t\t\tprint '<tr><td class=\"tdtop\">'.$form->editfieldkey('Gencod', 'barcode', '', $object, 0).'</td>';\n\t\t\t\tprint '<td colspan=\"3\">';\n\t\t\t\tprint img_picto('', 'barcode');\n\t\t\t\tprint '<input type=\"text\" name=\"barcode\" id=\"barcode\" value=\"'.dol_escape_htmltag($object->barcode).'\">';\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Status\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Status', 'status', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\tprint $form->selectarray('status', array('0'=>$langs->trans('ActivityCeased'), '1'=>$langs->trans('InActivity')), $object->status, 0, 0, 0, '', 0, 0, 0, '', 'minwidth100', 1);\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Address\n\t\t\tprint '<tr><td class=\"tdtop\">'.$form->editfieldkey('Address', 'address', '', $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\"><textarea name=\"address\" id=\"address\" class=\"quatrevingtpercent\" rows=\"3\" wrap=\"soft\">';\n\t\t\tprint dol_escape_htmltag($object->address, 0, 1);\n\t\t\tprint '</textarea>';\n\t\t\tprint $form->widgetForTranslation(\"address\", $object, $permissiontoadd, 'textarea', 'alphanohtml', 'quatrevingtpercent');\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Zip / Town\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Zip', 'zipcode', '', $object, 0).'</td><td>';\n\t\t\tprint $formcompany->select_ziptown($object->zip, 'zipcode', array('town', 'selectcountry_id', 'state_id'), 0, 0, '', 'maxwidth100');\n\t\t\tprint '</td>';\n\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\tprint '</tr><tr>';\n\t\t\t}\n\t\t\tprint '<td>'.$form->editfieldkey('Town', 'town', '', $object, 0).'</td><td>';\n\t\t\tprint $formcompany->select_ziptown($object->town, 'town', array('zipcode', 'selectcountry_id', 'state_id'));\n\t\t\tprint $form->widgetForTranslation(\"town\", $object, $permissiontoadd, 'string', 'alphanohtml', 'maxwidth100 quatrevingtpercent');\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Country\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Country', 'selectcounty_id', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\tprint img_picto('', 'globe-americas', 'class=\"paddingrightonly\"');\n\t\t\tprint $form->select_country((GETPOSTISSET('country_id') ? GETPOST('country_id') : $object->country_id), 'country_id', '', 0, 'minwidth300 maxwidth500 widthcentpercentminusx');\n\t\t\tif ($user->admin) {\n\t\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// State\n\t\t\tif (empty($conf->global->SOCIETE_DISABLE_STATE)) {\n\t\t\t\tif (!empty($conf->global->MAIN_SHOW_REGION_IN_STATE_SELECT) && ($conf->global->MAIN_SHOW_REGION_IN_STATE_SELECT == 1 || $conf->global->MAIN_SHOW_REGION_IN_STATE_SELECT == 2)) {\n\t\t\t\t\tprint '<tr><td>'.$form->editfieldkey('Region-State', 'state_id', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t\t} else {\n\t\t\t\t\tprint '<tr><td>'.$form->editfieldkey('State', 'state_id', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t\t}\n\n\t\t\t\tprint img_picto('', 'state', 'class=\"pictofixedwidth\"');\n\t\t\t\tprint $formcompany->select_state($object->state_id, $object->country_code);\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Phone / Fax\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Phone', 'phone', GETPOST('phone', 'alpha'), $object, 0).'</td>';\n\t\t\tprint '<td>'.img_picto('', 'object_phoning').' <input type=\"text\" name=\"phone\" id=\"phone\" class=\"maxwidth200 widthcentpercentminusx\" value=\"'.(GETPOSTISSET('phone') ?GETPOST('phone', 'alpha') : $object->phone).'\"></td>';\n\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\tprint '</tr><tr>';\n\t\t\t}\n\t\t\tprint '<td>'.$form->editfieldkey('Fax', 'fax', GETPOST('fax', 'alpha'), $object, 0).'</td>';\n\t\t\tprint '<td>'.img_picto('', 'object_phoning_fax').' <input type=\"text\" name=\"fax\" id=\"fax\" class=\"maxwidth200 widthcentpercentminusx\" value=\"'.(GETPOSTISSET('fax') ?GETPOST('fax', 'alpha') : $object->fax).'\"></td></tr>';\n\n\t\t\t// EMail / Web\n\t\t\tprint '<tr><td>'.$form->editfieldkey('EMail', 'email', GETPOST('email', 'custom', 0, FILTER_SANITIZE_EMAIL), $object, 0, 'string', '', (!empty($conf->global->SOCIETE_EMAIL_MANDATORY))).'</td>';\n\t\t\tprint '<td colspan=\"3\">'.img_picto('', 'object_email').' <input type=\"text\" name=\"email\" id=\"email\" class=\"maxwidth200onsmartphone maxwidth500 widthcentpercentminusx\" value=\"'.(GETPOSTISSET('email') ? GETPOST('email', 'custom', 0, FILTER_SANITIZE_EMAIL) : $object->email).'\"></td></tr>';\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Web', 'url', GETPOST('url', 'alpha'), $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\">'.img_picto('', 'globe').' <input type=\"text\" name=\"url\" id=\"url\" class=\"maxwidth200onsmartphone maxwidth500 widthcentpercentminusx \" value=\"'.(GETPOSTISSET('url') ?GETPOST('url', 'alpha') : $object->url).'\"></td></tr>';\n\n\t\t\tif (!empty($conf->socialnetworks->enabled)) {\n\t\t\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\t\t\tif ($value['active']) {\n\t\t\t\t\t\tprint '<tr>';\n\t\t\t\t\t\tprint '<td><label for=\"'.$value['label'].'\">'.$form->editfieldkey($value['label'], $key, '', $object, 0).'</label></td>';\n\t\t\t\t\t\tprint '<td colspan=\"3\">';\n\t\t\t\t\t\tif (!empty($value['icon'])) {\n\t\t\t\t\t\t\tprint '<span class=\"fa '.$value['icon'].'\"></span>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint '<input type=\"text\" name=\"'.$key.'\" id=\"'.$key.'\" class=\"minwidth100\" maxlength=\"80\" value=\"'.(empty($object->socialnetworks[$key]) ? '' : $object->socialnetworks[$key]).'\">';\n\t\t\t\t\t\tprint '</td>';\n\t\t\t\t\t\tprint '</tr>';\n\t\t\t\t\t} elseif (!empty($object->socialnetworks[$key])) {\n\t\t\t\t\t\tprint '<input type=\"hidden\" name=\"'.$key.'\" value=\"'.$object->socialnetworks[$key].'\">';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prof ids\n\t\t\t$i = 1;\n\t\t\t$j = 0;\n\t\t\t$NBCOLS = ($conf->browser->layout == 'phone' ? 1 : 2);\n\t\t\twhile ($i <= 6) {\n\t\t\t\t$idprof = $langs->transcountry('ProfId'.$i, $object->country_code);\n\t\t\t\tif ($idprof != '-') {\n\t\t\t\t\t$key = 'idprof'.$i;\n\n\t\t\t\t\tif (($j % $NBCOLS) == 0) {\n\t\t\t\t\t\tprint '<tr>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$idprof_mandatory = 'SOCIETE_IDPROF'.($i).'_MANDATORY';\n\t\t\t\t\tprint '<td>'.$form->editfieldkey($idprof, $key, '', $object, 0, 'string', '', !(empty($conf->global->$idprof_mandatory) || !$object->isACompany())).'</td><td>';\n\t\t\t\t\tprint $formcompany->get_input_id_prof($i, $key, $object->$key, $object->country_code);\n\t\t\t\t\tprint '</td>';\n\t\t\t\t\tif (($j % $NBCOLS) == ($NBCOLS - 1)) {\n\t\t\t\t\t\tprint '</tr>';\n\t\t\t\t\t}\n\t\t\t\t\t$j++;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif ($NBCOLS > 0 && $j % 2 == 1) {\n\t\t\t\tprint '<td colspan=\"2\"></td></tr>';\n\t\t\t}\n\n\t\t\t// VAT is used\n\t\t\tprint '<tr><td>'.$form->editfieldkey('VATIsUsed', 'assujtva_value', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\tprint $form->selectyesno('assujtva_value', $object->tva_assuj, 1);\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Local Taxes\n\t\t\t//TODO: Place into a function to control showing by country or study better option\n\t\t\tif ($mysoc->localtax1_assuj == \"1\" && $mysoc->localtax2_assuj == \"1\") {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey($langs->transcountry(\"LocalTax1IsUsed\", $mysoc->country_code), 'localtax1assuj_value', '', $object, 0).'</td><td>';\n\t\t\t\tprint $form->selectyesno('localtax1assuj_value', $object->localtax1_assuj, 1);\n\t\t\t\tif (!isOnlyOneLocalTax(1)) {\n\t\t\t\t\tprint '<span class=\"cblt1\">     '.$langs->transcountry(\"Type\", $mysoc->country_code).': ';\n\t\t\t\t\t$formcompany->select_localtax(1, $object->localtax1_value, \"lt1\");\n\t\t\t\t\tprint '</span>';\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '</tr><tr>';\n\t\t\t\tprint '<td>'.$form->editfieldkey($langs->transcountry(\"LocalTax2IsUsed\", $mysoc->country_code), 'localtax2assuj_value', '', $object, 0).'</td><td>';\n\t\t\t\tprint $form->selectyesno('localtax2assuj_value', $object->localtax2_assuj, 1);\n\t\t\t\tif (!isOnlyOneLocalTax(2)) {\n\t\t\t\t\tprint '<span class=\"cblt2\">     '.$langs->transcountry(\"Type\", $mysoc->country_code).': ';\n\t\t\t\t\t$formcompany->select_localtax(2, $object->localtax2_value, \"lt2\");\n\t\t\t\t\tprint '</span>';\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t} elseif ($mysoc->localtax1_assuj == \"1\" && $mysoc->localtax2_assuj != \"1\") {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey($langs->transcountry(\"LocalTax1IsUsed\", $mysoc->country_code), 'localtax1assuj_value', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t\tprint $form->selectyesno('localtax1assuj_value', $object->localtax1_assuj, 1);\n\t\t\t\tif (!isOnlyOneLocalTax(1)) {\n\t\t\t\t\tprint '<span class=\"cblt1\">     '.$langs->transcountry(\"Type\", $mysoc->country_code).': ';\n\t\t\t\t\t$formcompany->select_localtax(1, $object->localtax1_value, \"lt1\");\n\t\t\t\t\tprint '</span>';\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t} elseif ($mysoc->localtax2_assuj == \"1\" && $mysoc->localtax1_assuj != \"1\") {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey($langs->transcountry(\"LocalTax2IsUsed\", $mysoc->country_code), 'localtax2assuj_value', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t\tprint $form->selectyesno('localtax2assuj_value', $object->localtax2_assuj, 1);\n\t\t\t\tif (!isOnlyOneLocalTax(2)) {\n\t\t\t\t\tprint '<span class=\"cblt2\">     '.$langs->transcountry(\"Type\", $mysoc->country_code).': ';\n\t\t\t\t\t$formcompany->select_localtax(2, $object->localtax2_value, \"lt2\");\n\t\t\t\t\tprint '</span>';\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// VAT Code\n\t\t\tprint '<tr><td>'.$form->editfieldkey('VATIntra', 'intra_vat', '', $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\">';\n\t\t\t$s = '<input type=\"text\" class=\"flat maxwidthonsmartphone\" name=\"tva_intra\" id=\"intra_vat\" maxlength=\"20\" value=\"'.$object->tva_intra.'\">';\n\n\t\t\tif (empty($conf->global->MAIN_DISABLEVATCHECK) && isInEEC($object)) {\n\t\t\t\t$s .= ' &nbsp; ';\n\n\t\t\t\tif ($conf->use_javascript_ajax) {\n\t\t\t\t\t$widthpopup = 600;\n\t\t\t\t\tif (!empty($conf->dol_use_jmobile)) {\n\t\t\t\t\t\t$widthpopup = 350;\n\t\t\t\t\t}\n\t\t\t\t\t$heightpopup = 400;\n\t\t\t\t\tprint \"\\n\";\n\t\t\t\t\tprint '<script language=\"JavaScript\" type=\"text/javascript\">';\n\t\t\t\t\tprint \"function CheckVAT(a) {\\n\";\n\t\t\t\t\tprint \"newpopup('\".DOL_URL_ROOT.\"/societe/checkvat/checkVatPopup.php?vatNumber='+a,'\".dol_escape_js($langs->trans(\"VATIntraCheckableOnEUSite\")).\"', \".$widthpopup.\", \".$heightpopup.\");\\n\";\n\t\t\t\t\tprint \"}\\n\";\n\t\t\t\t\tprint '</script>';\n\t\t\t\t\tprint \"\\n\";\n\t\t\t\t\t$s .= '<a href=\"#\" class=\"hideonsmartphone\" onclick=\"javascript: CheckVAT(document.formsoc.tva_intra.value);\">'.$langs->trans(\"VATIntraCheck\").'</a>';\n\t\t\t\t\t$s = $form->textwithpicto($s, $langs->trans(\"VATIntraCheckDesc\", $langs->transnoentitiesnoconv(\"VATIntraCheck\")), 1);\n\t\t\t\t} else {\n\t\t\t\t\t$s .= '<a href=\"'.$langs->transcountry(\"VATIntraCheckURL\", $object->country_id).'\" class=\"hideonsmartphone\" target=\"_blank\">'.img_picto($langs->trans(\"VATIntraCheckableOnEUSite\"), 'help').'</a>';\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint $s;\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\n\t\t\t// Type - Workforce/Staff\n\t\t\tprint '<tr><td>'.$form->editfieldkey('ThirdPartyType', 'typent_id', '', $object, 0).'</td><td class=\"maxwidthonsmartphone\"'.( ($conf->browser->layout == 'phone' || !empty($conf->global->SOCIETE_DISABLE_WORKFORCE)) ? ' colspan=\"3\"' : '').'>';\n\t\t\tprint $form->selectarray(\"typent_id\", $formcompany->typent_array(0), $object->typent_id, 1, 0, 0, '', 0, 0, 0, (empty($conf->global->SOCIETE_SORT_ON_TYPEENT) ? 'ASC' : $conf->global->SOCIETE_SORT_ON_TYPEENT), '', 1);\n\t\t\tif ($user->admin) {\n\t\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t\t}\n\t\t\tif (empty($conf->global->SOCIETE_DISABLE_WORKFORCE)) {\n\t\t\t\tprint '</td>';\n\t\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\t\tprint '</tr><tr>';\n\t\t\t\t}\n\t\t\t\tprint '<td>'.$form->editfieldkey('Workforce', 'effectif_id', '', $object, 0).'</td><td class=\"maxwidthonsmartphone\">';\n\t\t\t\tprint $form->selectarray(\"effectif_id\", $formcompany->effectif_array(0), $object->effectif_id, 0, 0, 0, '', 0, 0, 0, '', '', 1);\n\t\t\t\tif ($user->admin) {\n\t\t\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"effectif_id\" id=\"effectif_id\" value=\"'.$object->effectif_id.'\">';\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Juridical type\n\t\t\tprint '<tr><td>'.$form->editfieldkey('JuridicalStatus', 'forme_juridique_code', '', $object, 0).'</td><td class=\"maxwidthonsmartphone\" colspan=\"3\">';\n\t\t\tprint $formcompany->select_juridicalstatus($object->forme_juridique_code, $object->country_code, '', 'forme_juridique_code');\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Capital\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Capital', 'capital', '', $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\"><input type=\"text\" name=\"capital\" id=\"capital\" size=\"10\" value=\"';\n\t\t\tprint $object->capital != '' ? dol_escape_htmltag(price($object->capital)) : '';\n\t\t\tprint '\"> <font class=\"hideonsmartphone\">'.$langs->trans(\"Currency\".$conf->currency).'</font></td></tr>';\n\n\t\t\t// Default language\n\t\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey('DefaultLang', 'default_lang', '', $object, 0).'</td><td colspan=\"3\">'.\"\\n\";\n\t\t\t\tprint img_picto('', 'language').$formadmin->select_language($object->default_lang, 'default_lang', 0, 0, 1);\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '</tr>';\n\t\t\t}\n\n\t\t\t// Incoterms\n\t\t\tif (!empty($conf->incoterm->enabled)) {\n\t\t\t\tprint '<tr>';\n\t\t\t\t\tprint '<td>'.$form->editfieldkey('IncotermLabel', 'incoterm_id', '', $object, 0).'</td>';\n\t\t\t\tprint '<td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t\t\tprint $form->select_incoterms((!empty($object->fk_incoterms) ? $object->fk_incoterms : ''), (!empty($object->location_incoterms) ? $object->location_incoterms : ''));\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Categories\n\t\t\tif (!empty($conf->categorie->enabled) && !empty($user->rights->categorie->lire)) {\n\t\t\t\t// Customer\n\t\t\t\tprint '<tr class=\"visibleifcustomer\"><td>'.$form->editfieldkey('CustomersCategoriesShort', 'custcats', '', $object, 0).'</td>';\n\t\t\t\tprint '<td colspan=\"3\">';\n\t\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_CUSTOMER, null, null, null, null, 1);\n\t\t\t\t$c = new Categorie($db);\n\t\t\t\t$cats = $c->containing($object->id, Categorie::TYPE_CUSTOMER);\n\t\t\t\t$arrayselected = array();\n\t\t\t\tforeach ($cats as $cat) {\n\t\t\t\t\t$arrayselected[] = $cat->id;\n\t\t\t\t}\n\t\t\t\tprint img_picto('', 'category').$form->multiselectarray('custcats', $cate_arbo, $arrayselected, 0, 0, 'quatrevingtpercent widthcentpercentminusx', 0, 0);\n\t\t\t\tprint \"</td></tr>\";\n\n\t\t\t\t// Supplier\n\t\t\t\tif ((!empty($conf->fournisseur->enabled) && !empty($user->rights->fournisseur->lire) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || (!empty($conf->supplier_order->enabled) && !empty($user->rights->supplier_order->lire)) || (!empty($conf->supplier_invoice->enabled) && !empty($user->rights->supplier_invoice->lire))) {\n\t\t\t\t\tprint '<tr class=\"visibleifsupplier\"><td>'.$form->editfieldkey('SuppliersCategoriesShort', 'suppcats', '', $object, 0).'</td>';\n\t\t\t\t\tprint '<td colspan=\"3\">';\n\t\t\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_SUPPLIER, null, null, null, null, 1);\n\t\t\t\t\t$c = new Categorie($db);\n\t\t\t\t\t$cats = $c->containing($object->id, Categorie::TYPE_SUPPLIER);\n\t\t\t\t\t$arrayselected = array();\n\t\t\t\t\tforeach ($cats as $cat) {\n\t\t\t\t\t\t$arrayselected[] = $cat->id;\n\t\t\t\t\t}\n\t\t\t\t\tprint img_picto('', 'category').$form->multiselectarray('suppcats', $cate_arbo, $arrayselected, 0, 0, 'quatrevingtpercent widthcentpercentminusx', 0, 0);\n\t\t\t\t\tprint \"</td></tr>\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Multicurrency\n\t\t\tif (!empty($conf->multicurrency->enabled)) {\n\t\t\t\tprint '<tr>';\n\t\t\t\tprint '<td>'.$form->editfieldkey('Currency', 'multicurrency_code', '', $object, 0).'</td>';\n\t\t\t\tprint '<td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t\t\tprint $form->selectMultiCurrency(($object->multicurrency_code ? $object->multicurrency_code : $conf->currency), 'multicurrency_code', 1);\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Other attributes\n\t\t\t$parameters = array('socid'=>$socid, 'colspan' => ' colspan=\"3\"', 'colspanvalue' => '3');\n\t\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_edit.tpl.php';\n\n\t\t\t// Webservices url/key\n\t\t\tif (!empty($conf->syncsupplierwebservices->enabled)) {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey('WebServiceURL', 'webservices_url', '', $object, 0).'</td>';\n\t\t\t\tprint '<td><input type=\"text\" name=\"webservices_url\" id=\"webservices_url\" size=\"32\" value=\"'.$object->webservices_url.'\"></td>';\n\t\t\t\tprint '<td>'.$form->editfieldkey('WebServiceKey', 'webservices_key', '', $object, 0).'</td>';\n\t\t\t\tprint '<td><input type=\"text\" name=\"webservices_key\" id=\"webservices_key\" size=\"32\" value=\"'.$object->webservices_key.'\"></td></tr>';\n\t\t\t}\n\n\t\t\t// Logo\n\t\t\tprint '<tr class=\"hideonsmartphone\">';\n\t\t\tprint '<td>'.$form->editfieldkey('Logo', 'photoinput', '', $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\">';\n\t\t\tif ($object->logo) {\n\t\t\t\tprint $form->showphoto('societe', $object);\n\t\t\t}\n\t\t\t$caneditfield = 1;\n\t\t\tif ($caneditfield) {\n\t\t\t\tif ($object->logo) {\n\t\t\t\t\tprint \"<br>\\n\";\n\t\t\t\t}\n\t\t\t\tprint '<table class=\"nobordernopadding\">';\n\t\t\t\tif ($object->logo) {\n\t\t\t\t\tprint '<tr><td><input type=\"checkbox\" class=\"flat photodelete\" name=\"deletephoto\" id=\"photodelete\"> '.$langs->trans(\"Delete\").'<br><br></td></tr>';\n\t\t\t\t}\n\t\t\t\t//print '<tr><td>'.$langs->trans(\"PhotoFile\").'</td></tr>';\n\t\t\t\tprint '<tr><td><input type=\"file\" class=\"flat\" name=\"photo\" id=\"photoinput\"></td></tr>';\n\t\t\t\tprint '</table>';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\n\t\t\t// Assign sale representative\n\t\t\tprint '<tr>';\n\t\t\tprint '<td>'.$form->editfieldkey('AllocateCommercial', 'commercial_id', '', $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t\t$userlist = $form->select_dolusers('', '', 0, null, 0, '', '', 0, 0, 0, 'AND u.statut = 1', 0, '', '', 0, 1);\n\t\t\t$arrayselected = GETPOST('commercial', 'array');\n\t\t\tif (empty($arrayselected)) {\n\t\t\t\t$arrayselected = $object->getSalesRepresentatives($user, 1);\n\t\t\t}\n\t\t\tprint img_picto('', 'user').$form->multiselectarray('commercial', $userlist, $arrayselected, 0, 0, 'quatrevingtpercent widthcentpercentminusx', 0, 0, '', '', '', 1);\n\t\t\tprint '</td></tr>';\n\n\t\t\tprint '</table>';\n\n\t\t\tif (!empty($conf->global->ACCOUNTANCY_USE_PRODUCT_ACCOUNT_ON_THIRDPARTY)) {\n\t\t\t\tprint '<br>';\n\t\t\t\tprint '<table class=\"border centpercent\">';\n\n\t\t\t\tif (! empty($conf->accounting->enabled)) {\n\t\t\t\t\t// Accountancy_code_sell\n\t\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ProductAccountancySellCode\").'</td>';\n\t\t\t\t\tprint '<td>';\n\t\t\t\t\tprint $formaccounting->select_account($object->accountancy_code_sell, 'accountancy_code_sell', 1, '', 1, 1);\n\t\t\t\t\tprint '</td></tr>';\n\n\t\t\t\t\t// Accountancy_code_buy\n\t\t\t\t\tprint '<tr><td>'.$langs->trans(\"ProductAccountancyBuyCode\").'</td>';\n\t\t\t\t\tprint '<td>';\n\t\t\t\t\tprint $formaccounting->select_account($object->accountancy_code_buy, 'accountancy_code_buy', 1, '', 1, 1);\n\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t} else { // For external software\n\t\t\t\t\t// Accountancy_code_sell\n\t\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ProductAccountancySellCode\").'</td>';\n\t\t\t\t\tprint '<td><input name=\"accountancy_code_sell\" class=\"maxwidth200\" value=\"'.$object->accountancy_code_sell.'\">';\n\t\t\t\t\tprint '</td></tr>';\n\n\t\t\t\t\t// Accountancy_code_buy\n\t\t\t\t\tprint '<tr><td>'.$langs->trans(\"ProductAccountancyBuyCode\").'</td>';\n\t\t\t\t\tprint '<td><input name=\"accountancy_code_buy\" class=\"maxwidth200\" value=\"'.$object->accountancy_code_buy.'\">';\n\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t}\n\t\t\t\tprint '</table>';\n\t\t\t}\n\n\t\t\tprint '</div>';\n\n\t\t\tprint dol_get_fiche_end();\n\n\t\t\tprint '<div class=\"center\">';\n\t\t\tprint '<input type=\"submit\" class=\"button button-save\" name=\"save\" value=\"'.$langs->trans(\"Save\").'\">';\n\t\t\tprint ' &nbsp; &nbsp; ';\n\t\t\tprint '<input type=\"submit\" class=\"button button-cancel\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t\tprint '</div>';\n\n\t\t\tprint '</form>';\n\t\t}\n\t} else {\n\t\t/*\n\t\t * View\n\t\t */\n\n\t\tif (!empty($object->id)) {\n\t\t\t$res = $object->fetch_optionals();\n\t\t}\n\t\t//if ($res < 0) { dol_print_error($db); exit; }\n\n\n\t\t$head = societe_prepare_head($object);\n\n\t\tprint dol_get_fiche_head($head, 'card', $langs->trans(\"ThirdParty\"), -1, 'company');\n\n\t\t$formconfirm = '';\n\n\t\t// Confirm delete third party\n\t\tif ($action == 'delete' || ($conf->use_javascript_ajax && empty($conf->dol_use_jmobile))) {\n\t\t\t$formconfirm = $form->formconfirm($_SERVER[\"PHP_SELF\"].\"?socid=\".$object->id, $langs->trans(\"DeleteACompany\"), $langs->trans(\"ConfirmDeleteCompany\"), \"confirm_delete\", '', 0, \"action-delete\");\n\t\t}\n\n\t\tif ($action == 'merge') {\n\t\t\t$formquestion = array(\n\t\t\t\tarray(\n\t\t\t\t\t'name' => 'soc_origin',\n\t\t\t\t\t'label' => $langs->trans('MergeOriginThirdparty'),\n\t\t\t\t\t'type' => 'other',\n\t\t\t\t\t'value' => $form->select_company('', 'soc_origin', '', 'SelectThirdParty', 0, 0, array(), 0, 'minwidth200', '', '', 1, null, false, array($object->id))\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$formconfirm .= $form->formconfirm($_SERVER[\"PHP_SELF\"].\"?socid=\".$object->id, $langs->trans(\"MergeThirdparties\"), $langs->trans(\"ConfirmMergeThirdparties\"), \"confirm_merge\", $formquestion, 'no', 1, 250);\n\t\t}\n\n\t\t// Call Hook formConfirm\n\t\t$parameters = array('formConfirm' => $formconfirm);\n\t\t$reshook = $hookmanager->executeHooks('formConfirm', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\t\tif (empty($reshook)) {\n\t\t\t$formconfirm .= $hookmanager->resPrint;\n\t\t} elseif ($reshook > 0) {\n\t\t\t$formconfirm = $hookmanager->resPrint;\n\t\t}\n\n\t\t// Print form confirm\n\t\tprint $formconfirm;\n\n\t\tdol_htmloutput_mesg(is_numeric($error) ? '' : $error, $errors, 'error');\n\n\t\t$linkback = '<a href=\"'.DOL_URL_ROOT.'/societe/list.php?restore_lastsearch_values=1\">'.$langs->trans(\"BackToList\").'</a>';\n\n\t\tdol_banner_tab($object, 'socid', $linkback, ($user->socid ? 0 : 1), 'rowid', 'nom');\n\n\n\t\tprint '<div class=\"fichecenter\">';\n\t\tprint '<div class=\"fichehalfleft\">';\n\n\t\tprint '<div class=\"underbanner clearboth\"></div>';\n\t\tprint '<table class=\"border tableforfield\" width=\"100%\">';\n\n\t\t// Type Prospect/Customer/Supplier\n\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans('NatureOfThirdParty').'</td><td>';\n\t\tprint $object->getTypeUrl(1);\n\t\tprint '</td></tr>';\n\n\t\t// Prefix\n\t\tif (!empty($conf->global->SOCIETE_USEPREFIX)) {  // Old not used prefix field\n\t\t\tprint '<tr><td>'.$langs->trans('Prefix').'</td><td>'.dol_escape_htmltag($object->prefix_comm).'</td>';\n\t\t\tprint '</tr>';\n\t\t}\n\n\t\t// Customer code\n\t\tif ($object->client) {\n\t\t\tprint '<tr><td>';\n\t\t\tprint $langs->trans('CustomerCode');\n\t\t\tprint '</td>';\n\t\t\tprint '<td>';\n\t\t\tprint showValueWithClipboardCPButton(dol_escape_htmltag($object->code_client));\n\t\t\tprint '</td>';\n\t\t\t$tmpcheck = $object->check_codeclient();\n\t\t\tif ($tmpcheck != 0 && $tmpcheck != -5) {\n\t\t\t\tprint ' <font class=\"error\">('.$langs->trans(\"WrongCustomerCode\").')</font>';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\t\t}\n\n\t\t// Supplier code\n\t\tif (((!empty($conf->fournisseur->enabled) && !empty($user->rights->fournisseur->lire) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || (!empty($conf->supplier_order->enabled) && !empty($user->rights->supplier_order->lire)) || (!empty($conf->supplier_invoice->enabled) && !empty($user->rights->supplier_invoice->lire))) && $object->fournisseur) {\n\t\t\tprint '<tr><td>';\n\t\t\tprint $langs->trans('SupplierCode').'</td><td>';\n\t\t\tprint showValueWithClipboardCPButton(dol_escape_htmltag($object->code_fournisseur));\n\t\t\t$tmpcheck = $object->check_codefournisseur();\n\t\t\tif ($tmpcheck != 0 && $tmpcheck != -5) {\n\t\t\t\tprint ' <font class=\"error\">('.$langs->trans(\"WrongSupplierCode\").')</font>';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\t\t}\n\n\t\t// Barcode\n\t\tif (!empty($conf->barcode->enabled)) {\n\t\t\tprint '<tr><td>';\n\t\t\tprint $langs->trans('Gencod').'</td><td>'.showValueWithClipboardCPButton(dol_escape_htmltag($object->barcode));\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\t\t}\n\n\t\t// Prof ids\n\t\t$i = 1; $j = 0;\n\t\twhile ($i <= 6) {\n\t\t\t$idprof = $langs->transcountry('ProfId'.$i, $object->country_code);\n\t\t\tif ($idprof != '-') {\n\t\t\t\t//if (($j % 2) == 0) print '<tr>';\n\t\t\t\tprint '<tr>';\n\t\t\t\tprint '<td>'.$idprof.'</td><td>';\n\t\t\t\t$key = 'idprof'.$i;\n\t\t\t\tprint showValueWithClipboardCPButton(dol_escape_htmltag($object->$key));\n\t\t\t\tif ($object->$key) {\n\t\t\t\t\tif ($object->id_prof_check($i, $object) > 0) {\n\t\t\t\t\t\tprint ' &nbsp; '.$object->id_prof_url($i, $object);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint ' <font class=\"error\">('.$langs->trans(\"ErrorWrongValue\").')</font>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\t//if (($j % 2) == 1) print '</tr>';\n\t\t\t\tprint '</tr>';\n\t\t\t\t$j++;\n\t\t\t}\n\t\t\t$i++;\n\t\t}\n\t\t//if ($j % 2 == 1)  print '<td colspan=\"2\"></td></tr>';\n\n\n\t\t// This fields are used to know VAT to include in an invoice when the thirdparty is making a sale, so when it is a supplier.\n\t\t// We don't need them into customer profile.\n\t\t// Except for spain and localtax where localtax depends on buyer and not seller\n\n\t\tif ($object->fournisseur) {\n\t\t\t// VAT is used\n\t\t\tprint '<tr><td>';\n\t\t\tprint $form->textwithpicto($langs->trans('VATIsUsed'), $langs->trans('VATIsUsedWhenSelling'));\n\t\t\tprint '</td><td>';\n\t\t\tprint yn($object->tva_assuj);\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\t\t}\n\n\t\t// Local Taxes\n\t\tif ($object->fournisseur || $mysoc->country_code == 'ES') {\n\t\t\tif ($mysoc->localtax1_assuj == \"1\" && $mysoc->localtax2_assuj == \"1\") {\n\t\t\t\tprint '<tr><td>'.$langs->transcountry(\"LocalTax1IsUsed\", $mysoc->country_code).'</td><td>';\n\t\t\t\tprint yn($object->localtax1_assuj);\n\t\t\t\tprint '</td></tr><tr><td>'.$langs->transcountry(\"LocalTax2IsUsed\", $mysoc->country_code).'</td><td>';\n\t\t\t\tprint yn($object->localtax2_assuj);\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\tif ($object->localtax1_assuj == \"1\" && (!isOnlyOneLocalTax(1))) {\n\t\t\t\t\tprint '<form method=\"post\" action=\"'.$_SERVER['PHP_SELF'].'?socid='.$object->id.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set_localtax1\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t\t\tprint '<tr><td>'.$langs->transcountry(\"Localtax1\", $mysoc->country_code).' <a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editRE&amp;socid='.$object->id.'\">'.img_edit($langs->transnoentitiesnoconv('Edit'), 1).'</td>';\n\t\t\t\t\tif ($action == 'editRE') {\n\t\t\t\t\t\tprint '<td class=\"left\">';\n\t\t\t\t\t\t$formcompany->select_localtax(1, $object->localtax1_value, \"lt1\");\n\t\t\t\t\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<td>'.$object->localtax1_value.'</td>';\n\t\t\t\t\t}\n\t\t\t\t\tprint '</tr></form>';\n\t\t\t\t}\n\t\t\t\tif ($object->localtax2_assuj == \"1\" && (!isOnlyOneLocalTax(2))) {\n\t\t\t\t\tprint '<form method=\"post\" action=\"'.$_SERVER['PHP_SELF'].'?socid='.$object->id.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set_localtax2\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t\t\tprint '<tr><td>'.$langs->transcountry(\"Localtax2\", $mysoc->country_code).'<a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editIRPF&amp;socid='.$object->id.'\">'.img_edit($langs->transnoentitiesnoconv('Edit'), 1).'</td>';\n\t\t\t\t\tif ($action == 'editIRPF') {\n\t\t\t\t\t\tprint '<td class=\"left\">';\n\t\t\t\t\t\t$formcompany->select_localtax(2, $object->localtax2_value, \"lt2\");\n\t\t\t\t\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<td>'.$object->localtax2_value.'</td>';\n\t\t\t\t\t}\n\t\t\t\t\tprint '</tr></form>';\n\t\t\t\t}\n\t\t\t} elseif ($mysoc->localtax1_assuj == \"1\" && $mysoc->localtax2_assuj != \"1\") {\n\t\t\t\tprint '<tr><td>'.$langs->transcountry(\"LocalTax1IsUsed\", $mysoc->country_code).'</td><td>';\n\t\t\t\tprint yn($object->localtax1_assuj);\n\t\t\t\tprint '</td></tr>';\n\t\t\t\tif ($object->localtax1_assuj == \"1\" && (!isOnlyOneLocalTax(1))) {\n\t\t\t\t\tprint '<form method=\"post\" action=\"'.$_SERVER['PHP_SELF'].'?socid='.$object->id.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set_localtax1\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t\t\tprint '<tr><td> '.$langs->transcountry(\"Localtax1\", $mysoc->country_code).'<a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editRE&amp;socid='.$object->id.'\">'.img_edit($langs->transnoentitiesnoconv('Edit'), 1).'</td>';\n\t\t\t\t\tif ($action == 'editRE') {\n\t\t\t\t\t\tprint '<td class=\"left\">';\n\t\t\t\t\t\t$formcompany->select_localtax(1, $object->localtax1_value, \"lt1\");\n\t\t\t\t\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<td>'.$object->localtax1_value.'</td>';\n\t\t\t\t\t}\n\t\t\t\t\tprint '</tr></form>';\n\t\t\t\t}\n\t\t\t} elseif ($mysoc->localtax2_assuj == \"1\" && $mysoc->localtax1_assuj != \"1\") {\n\t\t\t\tprint '<tr><td>'.$langs->transcountry(\"LocalTax2IsUsed\", $mysoc->country_code).'</td><td>';\n\t\t\t\tprint yn($object->localtax2_assuj);\n\t\t\t\tprint '</td></tr>';\n\t\t\t\tif ($object->localtax2_assuj == \"1\" && (!isOnlyOneLocalTax(2))) {\n\t\t\t\t\tprint '<form method=\"post\" action=\"'.$_SERVER['PHP_SELF'].'?socid='.$object->id.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set_localtax2\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t\t\tprint '<tr><td> '.$langs->transcountry(\"Localtax2\", $mysoc->country_code).' <a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editIRPF&amp;socid='.$object->id.'\">'.img_edit($langs->transnoentitiesnoconv('Edit'), 1).'</td>';\n\t\t\t\t\tif ($action == 'editIRPF') {\n\t\t\t\t\t\tprint '<td class=\"left\">';\n\t\t\t\t\t\t$formcompany->select_localtax(2, $object->localtax2_value, \"lt2\");\n\t\t\t\t\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<td>'.$object->localtax2_value.'</td>';\n\t\t\t\t\t}\n\t\t\t\t\tprint '</tr></form>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Sale tax code (VAT code)\n\t\tprint '<tr>';\n\t\tprint '<td class=\"nowrap\">'.$langs->trans('VATIntra').'</td><td>';\n\t\tif ($object->tva_intra) {\n\t\t\t$s = '';\n\t\t\t$s .= showValueWithClipboardCPButton(dol_escape_htmltag($object->tva_intra));\n\t\t\t$s .= '<input type=\"hidden\" id=\"tva_intra\" name=\"tva_intra\" maxlength=\"20\" value=\"'.$object->tva_intra.'\">';\n\n\t\t\tif (empty($conf->global->MAIN_DISABLEVATCHECK) && isInEEC($object)) {\n\t\t\t\t$s .= ' &nbsp; ';\n\n\t\t\t\tif ($conf->use_javascript_ajax) {\n\t\t\t\t\t$widthpopup = 600;\n\t\t\t\t\tif (!empty($conf->dol_use_jmobile)) {\n\t\t\t\t\t\t$widthpopup = 350;\n\t\t\t\t\t}\n\t\t\t\t\t$heightpopup = 400;\n\t\t\t\t\tprint \"\\n\";\n\t\t\t\t\tprint '<script language=\"JavaScript\" type=\"text/javascript\">';\n\t\t\t\t\tprint \"function CheckVAT(a) {\\n\";\n\t\t\t\t\tprint \"newpopup('\".DOL_URL_ROOT.\"/societe/checkvat/checkVatPopup.php?vatNumber='+a, '\".dol_escape_js($langs->trans(\"VATIntraCheckableOnEUSite\")).\"', \".$widthpopup.\", \".$heightpopup.\");\\n\";\n\t\t\t\t\tprint \"}\\n\";\n\t\t\t\t\tprint '</script>';\n\t\t\t\t\tprint \"\\n\";\n\t\t\t\t\t$s .= '<a href=\"#\" class=\"hideonsmartphone\" onclick=\"javascript: CheckVAT( $(\\'#tva_intra\\').val() );\">'.$langs->trans(\"VATIntraCheck\").'</a>';\n\t\t\t\t\t$s = $form->textwithpicto($s, $langs->trans(\"VATIntraCheckDesc\", $langs->transnoentitiesnoconv(\"VATIntraCheck\")), 1);\n\t\t\t\t} else {\n\t\t\t\t\t$s .= '<a href=\"'.$langs->transcountry(\"VATIntraCheckURL\", $object->country_id).'\" class=\"hideonsmartphone\" target=\"_blank\">'.img_picto($langs->trans(\"VATIntraCheckableOnEUSite\"), 'help').'</a>';\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint $s;\n\t\t} else {\n\t\t\tprint '&nbsp;';\n\t\t}\n\t\tprint '</td></tr>';\n\n\t\t// Warehouse\n\t\tif (!empty($conf->stock->enabled) && !empty($conf->global->SOCIETE_ASK_FOR_WAREHOUSE)) {\n\t\t\t$langs->load('stocks');\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/html.formproduct.class.php';\n\t\t\t$formproduct = new FormProduct($db);\n\t\t\tprint '<tr class=\"nowrap\">';\n\t\t\tprint '<td>';\n\t\t\tprint $form->editfieldkey(\"Warehouse\", 'warehouse', '', $object, $user->rights->societe->creer);\n\t\t\tprint '</td><td>';\n\t\t\tif ($action == 'editwarehouse') {\n\t\t\t\t$formproduct->formSelectWarehouses($_SERVER['PHP_SELF'].'?id='.$object->id, $object->fk_warehouse, 'fk_warehouse', 1);\n\t\t\t} else {\n\t\t\t\tif ($object->fk_warehouse > 0) {\n\t\t\t\t\tprint img_picto('', 'stock', 'class=\"paddingrightonly\"');\n\t\t\t\t}\n\t\t\t\t$formproduct->formSelectWarehouses($_SERVER['PHP_SELF'].'?id='.$object->id, $object->fk_warehouse, 'none');\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\t\t}\n\n\t\tprint '</table>';\n\t\tprint '</div>';\n\n\t\tprint '<div class=\"fichehalfright\"><div class=\"ficheaddleft\">';\n\n\t\tprint '<div class=\"underbanner clearboth\"></div>';\n\t\tprint '<table class=\"border tableforfield\" width=\"100%\">';\n\n\t\t// Tags / categories\n\t\tif (!empty($conf->categorie->enabled) && !empty($user->rights->categorie->lire)) {\n\t\t\t// Customer\n\t\t\tif ($object->prospect || $object->client || (!$object->fournisseur && !empty($conf->global->THIRDPARTY_CAN_HAVE_CATEGORY_EVEN_IF_NOT_CUSTOMER_PROSPECT_SUPPLIER))) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"CustomersCategoriesShort\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint $form->showCategories($object->id, Categorie::TYPE_CUSTOMER, 1);\n\t\t\t\tprint \"</td></tr>\";\n\t\t\t}\n\n\t\t\t// Supplier\n\t\t\tif (((!empty($conf->fournisseur->enabled) && !empty($user->rights->fournisseur->lire) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || (!empty($conf->supplier_order->enabled) && !empty($user->rights->supplier_order->lire)) || (!empty($conf->supplier_invoice->enabled) && !empty($user->rights->supplier_invoice->lire))) && $object->fournisseur) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"SuppliersCategoriesShort\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint $form->showCategories($object->id, Categorie::TYPE_SUPPLIER, 1);\n\t\t\t\tprint \"</td></tr>\";\n\t\t\t}\n\t\t}\n\n\n\t\t// Third-Party Type\n\t\tprint '<tr><td>';\n\t\tprint '<table class=\"nobordernopadding\" width=\"100%\"><tr><td>'.$langs->trans('ThirdPartyType').'</td>';\n\t\tif ($action != 'editthirdpartytype' && $user->rights->societe->creer) {\n\t\t\tprint '<td class=\"right\"><a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editthirdpartytype&amp;socid='.$object->id.'\">'.img_edit($langs->transnoentitiesnoconv('Edit'), 1).'</a></td>';\n\t\t}\n\t\tprint '</tr></table>';\n\t\tprint '</td><td>';\n\t\t$html_name = ($action == 'editthirdpartytype') ? 'typent_id' : 'none';\n\t\t$formcompany->formThirdpartyType($_SERVER['PHP_SELF'].'?socid='.$object->id, $object->typent_id, $html_name, '');\n\t\tprint '</td></tr>';\n\n\t\t// Workforce/Staff\n\t\tif (empty($conf->global->SOCIETE_DISABLE_WORKFORCE)) {\n\t\t\tprint '<tr><td>'.$langs->trans(\"Workforce\").'</td><td>'.$object->effectif.'</td></tr>';\n\t\t}\n\n\t\t// Legal\n\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans('JuridicalStatus').'</td><td>'.$object->forme_juridique.'</td></tr>';\n\n\t\t// Capital\n\t\tprint '<tr><td>'.$langs->trans('Capital').'</td><td>';\n\t\tif ($object->capital) {\n\t\t\tprint price($object->capital, '', $langs, 0, -1, -1, $conf->currency);\n\t\t} else {\n\t\t\tprint '&nbsp;';\n\t\t}\n\t\tprint '</td></tr>';\n\n\t\t// Default language\n\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\t\t\tprint '<tr><td>'.$langs->trans(\"DefaultLang\").'</td><td>';\n\t\t\t//$s=picto_from_langcode($object->default_lang);\n\t\t\t//print ($s?$s.' ':'');\n\t\t\t$langs->load(\"languages\");\n\t\t\t$labellang = ($object->default_lang ? $langs->trans('Language_'.$object->default_lang) : '');\n\t\t\tprint picto_from_langcode($object->default_lang, 'class=\"paddingrightonly saturatemedium opacitylow\"');\n\t\t\tprint $labellang;\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Incoterms\n\t\tif (!empty($conf->incoterm->enabled)) {\n\t\t\tprint '<tr><td>';\n\t\t\tprint '<table width=\"100%\" class=\"nobordernopadding\"><tr><td>'.$langs->trans('IncotermLabel').'</td>';\n\t\t\tif ($action != 'editincoterm' && $user->rights->societe->creer) {\n\t\t\t\tprint '<td class=\"right\"><a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?socid='.$object->id.'&action=editincoterm\">'.img_edit('', 1).'</a></td>';\n\t\t\t}\n\t\t\tprint '</tr></table>';\n\t\t\tprint '</td><td colspan=\"3\">';\n\t\t\tif ($action != 'editincoterm') {\n\t\t\t\tprint $form->textwithpicto($object->display_incoterms(), $object->label_incoterms, 1);\n\t\t\t} else {\n\t\t\t\tprint $form->select_incoterms((!empty($object->fk_incoterms) ? $object->fk_incoterms : ''), (!empty($object->location_incoterms) ? $object->location_incoterms : ''), $_SERVER['PHP_SELF'].'?socid='.$object->id);\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Multicurrency\n\t\tif (!empty($conf->multicurrency->enabled)) {\n\t\t\tprint '<tr>';\n\t\t\tprint '<td>'.$form->editfieldkey('Currency', 'multicurrency_code', '', $object, 0).'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint !empty($object->multicurrency_code) ? currency_name($object->multicurrency_code, 1) : '';\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\tif (!empty($conf->global->ACCOUNTANCY_USE_PRODUCT_ACCOUNT_ON_THIRDPARTY)) {\n\t\t\t// Accountancy sell code\n\t\t\tprint '<tr><td class=\"nowrap\">';\n\t\t\tprint $langs->trans(\"ProductAccountancySellCode\");\n\t\t\tprint '</td><td colspan=\"2\">';\n\t\t\tif (! empty($conf->accounting->enabled)) {\n\t\t\t\tif (! empty($object->accountancy_code_sell)) {\n\t\t\t\t\t$accountingaccount = new AccountingAccount($db);\n\t\t\t\t\t$accountingaccount->fetch('', $object->accountancy_code_sell, 1);\n\n\t\t\t\t\tprint $accountingaccount->getNomUrl(0, 1, 1, '', 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint $object->accountancy_code_sell;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Accountancy buy code\n\t\t\tprint '<tr><td class=\"nowrap\">';\n\t\t\tprint $langs->trans(\"ProductAccountancyBuyCode\");\n\t\t\tprint '</td><td colspan=\"2\">';\n\t\t\tif (! empty($conf->accounting->enabled)) {\n\t\t\t\tif (! empty($object->accountancy_code_buy)) {\n\t\t\t\t\t$accountingaccount2 = new AccountingAccount($db);\n\t\t\t\t\t$accountingaccount2->fetch('', $object->accountancy_code_buy, 1);\n\n\t\t\t\t\tprint $accountingaccount2->getNomUrl(0, 1, 1, '', 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint $object->accountancy_code_buy;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Other attributes\n\t\t$parameters = array('socid'=>$socid, 'colspan' => ' colspan=\"3\"', 'colspanvalue' => '3');\n\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_view.tpl.php';\n\n\t\t// Parent company\n\t\tif (empty($conf->global->SOCIETE_DISABLE_PARENTCOMPANY)) {\n\t\t\tprint '<tr><td>';\n\t\t\tprint '<table class=\"nobordernopadding\" width=\"100%\"><tr><td>'.$langs->trans('ParentCompany').'</td>';\n\t\t\tif ($action != 'editparentcompany' && $user->rights->societe->creer) {\n\t\t\t\tprint '<td class=\"right\"><a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editparentcompany&amp;socid='.$object->id.'\">'.img_edit($langs->transnoentitiesnoconv('Edit'), 1).'</a></td>';\n\t\t\t}\n\t\t\tprint '</tr></table>';\n\t\t\tprint '</td><td>';\n\t\t\t$html_name = ($action == 'editparentcompany') ? 'parent_id' : 'none';\n\t\t\t$form->form_thirdparty($_SERVER['PHP_SELF'].'?socid='.$object->id, $object->parent, $html_name, '', 1, 0, 0, null, 0, array($object->id));\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Sales representative\n\t\tinclude DOL_DOCUMENT_ROOT.'/societe/tpl/linesalesrepresentative.tpl.php';\n\n\t\t// Module Adherent\n\t\tif (!empty($conf->adherent->enabled)) {\n\t\t\t$langs->load(\"members\");\n\t\t\tprint '<tr><td>'.$langs->trans(\"LinkedToDolibarrMember\").'</td>';\n\t\t\tprint '<td>';\n\t\t\t$adh = new Adherent($db);\n\t\t\t$result = $adh->fetch('', '', $object->id);\n\t\t\tif ($result > 0) {\n\t\t\t\t$adh->ref = $adh->getFullName($langs);\n\t\t\t\tprint $adh->getNomUrl(-1);\n\t\t\t} else {\n\t\t\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"ThirdpartyNotLinkedToMember\").'</span>';\n\t\t\t}\n\t\t\tprint \"</td></tr>\\n\";\n\t\t}\n\n\t\t// Webservices url/key\n\t\tif (!empty($conf->syncsupplierwebservices->enabled)) {\n\t\t\tprint '<tr><td>'.$langs->trans(\"WebServiceURL\").'</td><td>'.dol_print_url($object->webservices_url).'</td>';\n\t\t\tprint '<td class=\"nowrap\">'.$langs->trans('WebServiceKey').'</td><td>'.$object->webservices_key.'</td></tr>';\n\t\t}\n\n\t\tprint '</table>';\n\t\tprint '</div>';\n\n\t\tprint '</div></div>';\n\t\tprint '<div style=\"clear:both\"></div>';\n\n\t\tprint dol_get_fiche_end();\n\n\n\t\t/*\n\t\t *  Actions\n\t\t */\n\t\tif ($action != 'presend') {\n\t\t\tprint '<div class=\"tabsAction\">'.\"\\n\";\n\n\t\t\t$parameters = array();\n\t\t\t$reshook = $hookmanager->executeHooks('addMoreActionsButtons', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\t\t\tif (empty($reshook)) {\n\t\t\t\t$at_least_one_email_contact = false;\n\t\t\t\t$TContact = $object->contact_array_objects();\n\t\t\t\tforeach ($TContact as &$contact) {\n\t\t\t\t\tif (!empty($contact->email)) {\n\t\t\t\t\t\t$at_least_one_email_contact = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (empty($user->socid)) {\n\t\t\t\t\tif (!empty($object->email) || $at_least_one_email_contact) {\n\t\t\t\t\t\t$langs->load(\"mails\");\n\t\t\t\t\t\tprint '<a class=\"butAction\" href=\"'.$_SERVER['PHP_SELF'].'?socid='.$object->id.'&action=presend&mode=init#formmailbeforetitle\">'.$langs->trans('SendMail').'</a>'.\"\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$langs->load(\"mails\");\n\t\t\t\t\t\tprint '<a class=\"butActionRefused classfortooltip\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NoEMail\")).'\">'.$langs->trans('SendMail').'</a>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($user->rights->societe->creer) {\n\t\t\t\t\tprint '<a class=\"butAction\" href=\"'.$_SERVER[\"PHP_SELF\"].'?socid='.$object->id.'&amp;action=edit\">'.$langs->trans(\"Modify\").'</a>'.\"\\n\";\n\t\t\t\t}\n\n\t\t\t\tif (!empty($conf->adherent->enabled)) {\n\t\t\t\t\t$adh = new Adherent($db);\n\t\t\t\t\t$result = $adh->fetch('', '', $object->id);\n\t\t\t\t\tif ($result == 0 && ($object->client == 1 || $object->client == 3) && !empty($conf->global->MEMBER_CAN_CONVERT_CUSTOMERS_TO_MEMBERS)) {\n\t\t\t\t\t\tprint '<a class=\"butAction\" href=\"'.DOL_URL_ROOT.'/adherents/card.php?&action=create&socid='.$object->id.'\" title=\"'.dol_escape_htmltag($langs->trans(\"NewMember\")).'\">'.$langs->trans(\"NewMember\").'</a>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($user->rights->societe->supprimer) {\n\t\t\t\t\tprint '<a class=\"butActionDelete\" href=\"card.php?action=merge&socid='.$object->id.'\" title=\"'.dol_escape_htmltag($langs->trans(\"MergeThirdparties\")).'\">'.$langs->trans('Merge').'</a>'.\"\\n\";\n\t\t\t\t}\n\n\t\t\t\tif ($user->rights->societe->supprimer) {\n\t\t\t\t\tif ($conf->use_javascript_ajax && empty($conf->dol_use_jmobile)) {\t// We can't use preloaded confirm form with jmobile\n\t\t\t\t\t\tprint '<span id=\"action-delete\" class=\"butActionDelete\">'.$langs->trans('Delete').'</span>'.\"\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<a class=\"butActionDelete\" href=\"'.$_SERVER[\"PHP_SELF\"].'?socid='.$object->id.'&amp;action=delete&amp;token='.newToken().'\">'.$langs->trans('Delete').'</a>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprint '</div>'.\"\\n\";\n\t\t}\n\n\t\t//Select mail models is same action as presend\n\t\tif (GETPOST('modelselected')) {\n\t\t\t$action = 'presend';\n\t\t}\n\n\t\tif ($action != 'presend') {\n\t\t\tprint '<div class=\"fichecenter\"><div class=\"fichehalfleft\">';\n\n\t\t\tif (empty($conf->global->SOCIETE_DISABLE_BUILDDOC)) {\n\t\t\t\tprint '<a name=\"builddoc\"></a>'; // ancre\n\n\t\t\t\t/*\n\t\t\t\t * Generated documents\n\t\t\t\t */\n\t\t\t\t$filedir = $conf->societe->multidir_output[$object->entity].'/'.$object->id;\n\t\t\t\t$urlsource = $_SERVER[\"PHP_SELF\"].\"?socid=\".$object->id;\n\t\t\t\t$genallowed = $user->rights->societe->lire;\n\t\t\t\t$delallowed = $user->rights->societe->creer;\n\n\t\t\t\tprint $formfile->showdocuments('company', $object->id, $filedir, $urlsource, $genallowed, $delallowed, $object->model_pdf, 0, 0, 0, 28, 0, 'entity='.$object->entity, 0, '', $object->default_lang);\n\t\t\t}\n\n\t\t\t// Subsidiaries list\n\t\t\tif (empty($conf->global->SOCIETE_DISABLE_SUBSIDIARIES)) {\n\t\t\t\t$result = show_subsidiaries($conf, $langs, $db, $object);\n\t\t\t}\n\n\t\t\tprint '</div><div class=\"fichehalfright\"><div class=\"ficheaddleft\">';\n\n\t\t\t$MAXEVENT = 10;\n\n\t\t\t$morehtmlright = dolGetButtonTitle($langs->trans('SeeAll'), '', 'fa fa-list-alt imgforviewmode', DOL_URL_ROOT.'/societe/agenda.php?socid='.$object->id);\n\n\t\t\t// List of actions on element\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formactions.class.php';\n\t\t\t$formactions = new FormActions($db);\n\t\t\t$somethingshown = $formactions->showactions($object, '', $socid, 1, '', $MAXEVENT, '', $morehtmlright); // Show all action for thirdparty\n\n\t\t\tprint '</div></div></div>';\n\n\t\t\tif (!empty($conf->global->MAIN_DUPLICATE_CONTACTS_TAB_ON_MAIN_CARD)) {\n\t\t\t\t// Contacts list\n\t\t\t\tif (empty($conf->global->SOCIETE_DISABLE_CONTACTS)) {\n\t\t\t\t\t$result = show_contacts($conf, $langs, $db, $object, $_SERVER[\"PHP_SELF\"].'?socid='.$object->id);\n\t\t\t\t}\n\n\t\t\t\t// Addresses list\n\t\t\t\tif (!empty($conf->global->SOCIETE_ADDRESSES_MANAGEMENT)) {\n\t\t\t\t\t$result = show_addresses($conf, $langs, $db, $object, $_SERVER[\"PHP_SELF\"].'?socid='.$object->id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Presend form\n\t\t$modelmail = 'thirdparty';\n\t\t$defaulttopic = 'Information';\n\t\t$diroutput = $conf->societe->dir_output;\n\t\t$trackid = 'thi'.$object->id;\n\n\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/card_presend.tpl.php';\n\t}\n}\n// End of page\nllxFooter();\n$db->close();\n", "<?php\n/* Copyright (C) 2002-2006  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2019  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Eric Seigne             <eric.seigne@ryxeo.com>\n * Copyright (C) 2003       Brian Fraval            <brian@fraval.org>\n * Copyright (C) 2006       Andre Cianfarani        <acianfa@free.fr>\n * Copyright (C) 2005-2017  Regis Houssin           <regis.houssin@inodbox.com>\n * Copyright (C) 2008       Patrick Raguin          <patrick.raguin@auguria.net>\n * Copyright (C) 2010-2018  Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2013       Florian Henry           <florian.henry@open-concept.pro>\n * Copyright (C) 2013       Alexandre Spangaro      <aspangaro@open-dsi.fr>\n * Copyright (C) 2013       Peter Fontaine          <contact@peterfontaine.fr>\n * Copyright (C) 2014-2015  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2015       Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2017       Rui Strecht\t\t\t    <rui.strecht@aliartalentos.com>\n * Copyright (C) 2018\t    Philippe Grand\t        <philippe.grand@atoo-net.com>\n * Copyright (C) 2019-2020  Josep Llu\u00eds Amador      <joseplluis@lliuretic.cat>\n * Copyright (C) 2019-2021  Fr\u00e9d\u00e9ric France         <frederic.france@netlogic.fr>\n * Copyright (C) 2020       Open-Dsi         \t\t<support@open-dsi.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/societe/class/societe.class.php\n *\t\\ingroup    societe\n *\t\\brief      File for third party class\n */\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/commonobject.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/commonincoterm.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/multicurrency/class/multicurrency.class.php';\n\n/**\n *\tClass to manage third parties objects (customers, suppliers, prospects...)\n */\nclass Societe extends CommonObject\n{\n\tuse CommonIncoterm;\n\n\t/**\n\t * @var string ID to identify managed object\n\t */\n\tpublic $element = 'societe';\n\n\t/**\n\t * @var string Name of table without prefix where object is stored\n\t */\n\tpublic $table_element = 'societe';\n\n\t/**\n\t * @var string Field with ID of parent key if this field has a parent or for child tables\n\t */\n\tpublic $fk_element = 'fk_soc';\n\n\t/**\n\t * @var string Fields for combobox\n\t */\n\tpublic $fieldsforcombobox = 'nom,name_alias';\n\n\t/**\n\t * @var array\tList of child tables. To test if we can delete object.\n\t */\n\tprotected $childtables = array(\n\t\t\"supplier_proposal\" => 'SupplierProposal',\n\t\t\"propal\" => 'Proposal',\n\t\t\"commande\" => 'Order',\n\t\t\"facture\" => 'Invoice',\n\t\t\"facture_rec\" => 'RecurringInvoiceTemplate',\n\t\t\"contrat\" => 'Contract',\n\t\t\"fichinter\" => 'Fichinter',\n\t\t\"facture_fourn\" => 'SupplierInvoice',\n\t\t\"commande_fournisseur\" => 'SupplierOrder',\n\t\t\"projet\" => 'Project',\n\t\t\"expedition\" => 'Shipment',\n\t\t\"prelevement_lignes\" => 'DirectDebitRecord',\n\t);\n\n\t/**\n\t * @var array    List of child tables. To know object to delete on cascade.\n\t *               if name like with @ClassName:FilePathClass:ParentFkFieldName' it will call method deleteByParentField (with parentId as parameters) and FieldName to fetch and delete child object\n\t */\n\tprotected $childtablesoncascade = array(\n\t\t\"societe_prices\",\n\t\t\"societe_address\",\n\t\t\"product_fournisseur_price\",\n\t\t\"product_customer_price_log\",\n\t\t\"product_customer_price\",\n\t\t\"@Contact:/contact/class/contact.class.php:fk_soc\",\n\t\t\"adherent\",\n\t\t\"societe_account\",\n\t\t\"societe_rib\",\n\t\t\"societe_remise\",\n\t\t\"societe_remise_except\",\n\t\t\"societe_commerciaux\",\n\t\t\"categorie\",\n\t\t\"notify\",\n\t\t\"notify_def\",\n\t\t\"actioncomm\",\n\t);\n\n\t/**\n\t * @var string String with name of icon for myobject. Must be the part after the 'object_' into object_myobject.png\n\t */\n\tpublic $picto = 'company';\n\n\t/**\n\t * 0=No test on entity, 1=Test with field entity, 2=Test with link by societe\n\t * @var int\n\t */\n\tpublic $ismultientitymanaged = 1;\n\n\t/**\n\t * 0=Default, 1=View may be restricted to sales representative only if no permission to see all or to company of external user if external user\n\t * @var integer\n\t */\n\tpublic $restrictiononfksoc = 1;\n\n\n\t/**\n\t *  'type' field format ('integer', 'integer:ObjectClass:PathToClass[:AddCreateButtonOrNot[:Filter]]', 'sellist:TableName:LabelFieldName[:KeyFieldName[:KeyFieldParent[:Filter]]]', 'varchar(x)', 'double(24,8)', 'real', 'price', 'text', 'text:none', 'html', 'date', 'datetime', 'timestamp', 'duration', 'mail', 'phone', 'url', 'password')\n\t *         Note: Filter can be a string like \"(t.ref:like:'SO-%') or (t.date_creation:<:'20160101') or (t.nature:is:NULL)\"\n\t *  'label' the translation key.\n\t *  'picto' is code of a picto to show before value in forms\n\t *  'enabled' is a condition when the field must be managed (Example: 1 or '$conf->global->MY_SETUP_PARAM)\n\t *  'position' is the sort order of field.\n\t *  'notnull' is set to 1 if not null in database. Set to -1 if we must set data to null if empty ('' or 0).\n\t *  'visible' says if field is visible in list (Examples: 0=Not visible, 1=Visible on list and create/update/view forms, 2=Visible on list only, 3=Visible on create/update/view form only (not list), 4=Visible on list and update/view form only (not create). 5=Visible on list and view only (not create/not update). Using a negative value means field is not shown by default on list but can be selected for viewing)\n\t *  'noteditable' says if field is not editable (1 or 0)\n\t *  'default' is a default value for creation (can still be overwrote by the Setup of Default Values if field is editable in creation form). Note: If default is set to '(PROV)' and field is 'ref', the default value will be set to '(PROVid)' where id is rowid when a new record is created.\n\t *  'index' if we want an index in database.\n\t *  'foreignkey'=>'tablename.field' if the field is a foreign key (it is recommanded to name the field fk_...).\n\t *  'searchall' is 1 if we want to search in this field when making a search from the quick search button.\n\t *  'isameasure' must be set to 1 if you want to have a total on list for this field. Field type must be summable like integer or double(24,8).\n\t *  'css' and 'cssview' and 'csslist' is the CSS style to use on field. 'css' is used in creation and update. 'cssview' is used in view mode. 'csslist' is used for columns in lists. For example: 'maxwidth200', 'wordbreak', 'tdoverflowmax200'\n\t *  'help' is a 'TranslationString' to use to show a tooltip on field. You can also use 'TranslationString:keyfortooltiponlick' for a tooltip on click.\n\t *  'showoncombobox' if value of the field must be visible into the label of the combobox that list record\n\t *  'disabled' is 1 if we want to have the field locked by a 'disabled' attribute. In most cases, this is never set into the definition of $fields into class, but is set dynamically by some part of code.\n\t *  'arrayofkeyval' to set list of value if type is a list of predefined values. For example: array(\"0\"=>\"Draft\",\"1\"=>\"Active\",\"-1\"=>\"Cancel\")\n\t *  'autofocusoncreate' to have field having the focus on a create form. Only 1 field should have this property set to 1.\n\t *  'comment' is not used. You can store here any text of your choice. It is not used by application.\n\t *\n\t *  Note: To have value dynamic, you can set value to 0 in definition and edit the value on the fly into the constructor.\n\t */\n\n\t/**\n\t * @var array  Array with all fields and their property. Do not use it as a static var. It may be modified by constructor.\n\t */\n\tpublic $fields = array(\n\t\t'rowid' =>array('type'=>'integer', 'label'=>'TechnicalID', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>10),\n\t\t'parent' =>array('type'=>'integer', 'label'=>'Parent', 'enabled'=>1, 'visible'=>-1, 'position'=>20),\n\t\t'tms' =>array('type'=>'timestamp', 'label'=>'DateModification', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>25),\n\t\t'datec' =>array('type'=>'datetime', 'label'=>'DateCreation', 'enabled'=>1, 'visible'=>-1, 'position'=>30),\n\t\t'nom' =>array('type'=>'varchar(128)', 'label'=>'Nom', 'enabled'=>1, 'visible'=>-1, 'position'=>35, 'showoncombobox'=>1),\n\t\t'name_alias' =>array('type'=>'varchar(128)', 'label'=>'Name alias', 'enabled'=>1, 'visible'=>-1, 'position'=>36, 'showoncombobox'=>2),\n\t\t'entity' =>array('type'=>'integer', 'label'=>'Entity', 'default'=>1, 'enabled'=>1, 'visible'=>-2, 'notnull'=>1, 'position'=>40, 'index'=>1),\n\t\t'ref_ext' =>array('type'=>'varchar(255)', 'label'=>'RefExt', 'enabled'=>1, 'visible'=>0, 'position'=>45),\n\t\t'code_client' =>array('type'=>'varchar(24)', 'label'=>'CustomerCode', 'enabled'=>1, 'visible'=>-1, 'position'=>55),\n\t\t'code_fournisseur' =>array('type'=>'varchar(24)', 'label'=>'SupplierCode', 'enabled'=>1, 'visible'=>-1, 'position'=>60),\n\t\t'code_compta' =>array('type'=>'varchar(24)', 'label'=>'CodeCompta', 'enabled'=>1, 'visible'=>-1, 'position'=>65),\n\t\t'code_compta_fournisseur' =>array('type'=>'varchar(24)', 'label'=>'CodeComptaSupplier', 'enabled'=>1, 'visible'=>-1, 'position'=>70),\n\t\t'address' =>array('type'=>'varchar(255)', 'label'=>'Address', 'enabled'=>1, 'visible'=>-1, 'position'=>75),\n\t\t'zip' =>array('type'=>'varchar(25)', 'label'=>'Zip', 'enabled'=>1, 'visible'=>-1, 'position'=>80),\n\t\t'town' =>array('type'=>'varchar(50)', 'label'=>'Town', 'enabled'=>1, 'visible'=>-1, 'position'=>85),\n\t\t'fk_departement' =>array('type'=>'integer', 'label'=>'State', 'enabled'=>1, 'visible'=>-1, 'position'=>90),\n\t\t'fk_pays' =>array('type'=>'integer:Ccountry:core/class/ccountry.class.php', 'label'=>'Country', 'enabled'=>1, 'visible'=>-1, 'position'=>95),\n\t\t'phone' =>array('type'=>'varchar(20)', 'label'=>'Phone', 'enabled'=>1, 'visible'=>-1, 'position'=>100),\n\t\t'fax' =>array('type'=>'varchar(20)', 'label'=>'Fax', 'enabled'=>1, 'visible'=>-1, 'position'=>105),\n\t\t'url' =>array('type'=>'varchar(255)', 'label'=>'Url', 'enabled'=>1, 'visible'=>-1, 'position'=>110),\n\t\t'email' =>array('type'=>'varchar(128)', 'label'=>'Email', 'enabled'=>1, 'visible'=>-1, 'position'=>115),\n\t\t'socialnetworks' =>array('type'=>'text', 'label'=>'Socialnetworks', 'enabled'=>1, 'visible'=>-1, 'position'=>120),\n\t\t'fk_effectif' =>array('type'=>'integer', 'label'=>'Workforce', 'enabled'=>1, 'visible'=>-1, 'position'=>170),\n\t\t'fk_typent' =>array('type'=>'integer', 'label'=>'TypeOfCompany', 'enabled'=>1, 'visible'=>-1, 'position'=>175, 'csslist'=>'minwidth200'),\n\t\t'fk_forme_juridique' =>array('type'=>'integer', 'label'=>'JuridicalStatus', 'enabled'=>1, 'visible'=>-1, 'position'=>180),\n\t\t'fk_currency' =>array('type'=>'varchar(3)', 'label'=>'Currency', 'enabled'=>1, 'visible'=>-1, 'position'=>185),\n\t\t'siren' =>array('type'=>'varchar(128)', 'label'=>'Idprof1', 'enabled'=>1, 'visible'=>-1, 'position'=>190),\n\t\t'siret' =>array('type'=>'varchar(128)', 'label'=>'Idprof2', 'enabled'=>1, 'visible'=>-1, 'position'=>195),\n\t\t'ape' =>array('type'=>'varchar(128)', 'label'=>'Idprof3', 'enabled'=>1, 'visible'=>-1, 'position'=>200),\n\t\t'idprof4' =>array('type'=>'varchar(128)', 'label'=>'Idprof4', 'enabled'=>1, 'visible'=>-1, 'position'=>205),\n\t\t'idprof5' =>array('type'=>'varchar(128)', 'label'=>'Idprof5', 'enabled'=>1, 'visible'=>-1, 'position'=>206),\n\t\t'idprof6' =>array('type'=>'varchar(128)', 'label'=>'Idprof6', 'enabled'=>1, 'visible'=>-1, 'position'=>207),\n\t\t'tva_intra' =>array('type'=>'varchar(20)', 'label'=>'Tva intra', 'enabled'=>1, 'visible'=>-1, 'position'=>210),\n\t\t'capital' =>array('type'=>'double(24,8)', 'label'=>'Capital', 'enabled'=>1, 'visible'=>-1, 'position'=>215),\n\t\t'fk_stcomm' =>array('type'=>'integer', 'label'=>'CommercialStatus', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>220),\n\t\t'note_private' =>array('type'=>'text', 'label'=>'NotePublic', 'enabled'=>1, 'visible'=>0, 'position'=>225),\n\t\t'note_public' =>array('type'=>'text', 'label'=>'NotePrivate', 'enabled'=>1, 'visible'=>0, 'position'=>230),\n\t\t'prefix_comm' =>array('type'=>'varchar(5)', 'label'=>'Prefix comm', 'enabled'=>'$conf->global->SOCIETE_USEPREFIX', 'visible'=>-1, 'position'=>235),\n\t\t'client' =>array('type'=>'tinyint(4)', 'label'=>'Client', 'enabled'=>1, 'visible'=>-1, 'position'=>240),\n\t\t'fournisseur' =>array('type'=>'tinyint(4)', 'label'=>'Fournisseur', 'enabled'=>1, 'visible'=>-1, 'position'=>245),\n\t\t'supplier_account' =>array('type'=>'varchar(32)', 'label'=>'Supplier account', 'enabled'=>1, 'visible'=>-1, 'position'=>250),\n\t\t'fk_prospectlevel' =>array('type'=>'varchar(12)', 'label'=>'ProspectLevel', 'enabled'=>1, 'visible'=>-1, 'position'=>255),\n\t\t'customer_bad' =>array('type'=>'tinyint(4)', 'label'=>'Customer bad', 'enabled'=>1, 'visible'=>-1, 'position'=>260),\n\t\t'customer_rate' =>array('type'=>'double', 'label'=>'Customer rate', 'enabled'=>1, 'visible'=>-1, 'position'=>265),\n\t\t'supplier_rate' =>array('type'=>'double', 'label'=>'Supplier rate', 'enabled'=>1, 'visible'=>-1, 'position'=>270),\n\t\t'fk_user_creat' =>array('type'=>'integer:User:user/class/user.class.php', 'label'=>'UserAuthor', 'enabled'=>1, 'visible'=>-2, 'position'=>275),\n\t\t'fk_user_modif' =>array('type'=>'integer:User:user/class/user.class.php', 'label'=>'UserModif', 'enabled'=>1, 'visible'=>-2, 'notnull'=>-1, 'position'=>280),\n\t\t//'remise_client' =>array('type'=>'double', 'label'=>'CustomerDiscount', 'enabled'=>1, 'visible'=>-1, 'position'=>285, 'isameasure'=>1),\n\t\t//'remise_supplier' =>array('type'=>'double', 'label'=>'SupplierDiscount', 'enabled'=>1, 'visible'=>-1, 'position'=>290, 'isameasure'=>1),\n\t\t'mode_reglement' =>array('type'=>'tinyint(4)', 'label'=>'Mode reglement', 'enabled'=>1, 'visible'=>-1, 'position'=>295),\n\t\t'cond_reglement' =>array('type'=>'tinyint(4)', 'label'=>'Cond reglement', 'enabled'=>1, 'visible'=>-1, 'position'=>300),\n\t\t'mode_reglement_supplier' =>array('type'=>'integer', 'label'=>'Mode reglement supplier', 'enabled'=>1, 'visible'=>-1, 'position'=>305),\n\t\t'outstanding_limit' =>array('type'=>'double(24,8)', 'label'=>'OutstandingBill', 'enabled'=>1, 'visible'=>-1, 'position'=>310, 'isameasure'=>1),\n\t\t'order_min_amount' =>array('type'=>'double(24,8)', 'label'=>'Order min amount', 'enabled'=>'!empty($conf->commande->enabled) && !empty($conf->global->ORDER_MANAGE_MIN_AMOUNT)', 'visible'=>-1, 'position'=>315, 'isameasure'=>1),\n\t\t'supplier_order_min_amount' =>array('type'=>'double(24,8)', 'label'=>'Supplier order min amount', 'enabled'=>'!empty($conf->commande->enabled) && !empty($conf->global->ORDER_MANAGE_MIN_AMOUNT)', 'visible'=>-1, 'position'=>320, 'isameasure'=>1),\n\t\t'cond_reglement_supplier' =>array('type'=>'integer', 'label'=>'Cond reglement supplier', 'enabled'=>1, 'visible'=>-1, 'position'=>325),\n\t\t'fk_shipping_method' =>array('type'=>'integer', 'label'=>'Fk shipping method', 'enabled'=>1, 'visible'=>-1, 'position'=>330),\n\t\t'tva_assuj' =>array('type'=>'tinyint(4)', 'label'=>'Tva assuj', 'enabled'=>1, 'visible'=>-1, 'position'=>335),\n\t\t'localtax1_assuj' =>array('type'=>'tinyint(4)', 'label'=>'Localtax1 assuj', 'enabled'=>1, 'visible'=>-1, 'position'=>340),\n\t\t'localtax1_value' =>array('type'=>'double(6,3)', 'label'=>'Localtax1 value', 'enabled'=>1, 'visible'=>-1, 'position'=>345),\n\t\t'localtax2_assuj' =>array('type'=>'tinyint(4)', 'label'=>'Localtax2 assuj', 'enabled'=>1, 'visible'=>-1, 'position'=>350),\n\t\t'localtax2_value' =>array('type'=>'double(6,3)', 'label'=>'Localtax2 value', 'enabled'=>1, 'visible'=>-1, 'position'=>355),\n\t\t'barcode' =>array('type'=>'varchar(255)', 'label'=>'Barcode', 'enabled'=>1, 'visible'=>-1, 'position'=>360),\n\t\t'price_level' =>array('type'=>'integer', 'label'=>'Price level', 'enabled'=>'$conf->global->PRODUIT_MULTIPRICES || $conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES', 'visible'=>-1, 'position'=>365),\n\t\t'default_lang' =>array('type'=>'varchar(6)', 'label'=>'Default lang', 'enabled'=>1, 'visible'=>-1, 'position'=>370),\n\t\t'canvas' =>array('type'=>'varchar(32)', 'label'=>'Canvas', 'enabled'=>1, 'visible'=>-1, 'position'=>375),\n\t\t'fk_barcode_type' =>array('type'=>'integer', 'label'=>'Fk barcode type', 'enabled'=>1, 'visible'=>-1, 'position'=>405),\n\t\t'webservices_url' =>array('type'=>'varchar(255)', 'label'=>'Webservices url', 'enabled'=>1, 'visible'=>-1, 'position'=>410),\n\t\t'webservices_key' =>array('type'=>'varchar(128)', 'label'=>'Webservices key', 'enabled'=>1, 'visible'=>-1, 'position'=>415),\n\t\t'fk_incoterms' =>array('type'=>'integer', 'label'=>'Fk incoterms', 'enabled'=>1, 'visible'=>-1, 'position'=>425),\n\t\t'location_incoterms' =>array('type'=>'varchar(255)', 'label'=>'Location incoterms', 'enabled'=>1, 'visible'=>-1, 'position'=>430),\n\t\t'model_pdf' =>array('type'=>'varchar(255)', 'label'=>'Model pdf', 'enabled'=>1, 'visible'=>0, 'position'=>435),\n\t\t'fk_multicurrency' =>array('type'=>'integer', 'label'=>'Fk multicurrency', 'enabled'=>1, 'visible'=>-1, 'position'=>440),\n\t\t'multicurrency_code' =>array('type'=>'varchar(255)', 'label'=>'Multicurrency code', 'enabled'=>1, 'visible'=>-1, 'position'=>445),\n\t\t'fk_account' =>array('type'=>'integer', 'label'=>'AccountingAccount', 'enabled'=>1, 'visible'=>-1, 'position'=>450),\n\t\t'fk_warehouse' =>array('type'=>'integer', 'label'=>'Warehouse', 'enabled'=>1, 'visible'=>-1, 'position'=>455),\n\t\t'logo' =>array('type'=>'varchar(255)', 'label'=>'Logo', 'enabled'=>1, 'visible'=>-1, 'position'=>400),\n\t\t'logo_squarred' =>array('type'=>'varchar(255)', 'label'=>'Logo squarred', 'enabled'=>1, 'visible'=>-1, 'position'=>401),\n\t\t'status' =>array('type'=>'tinyint(4)', 'label'=>'Status', 'enabled'=>1, 'visible'=>-1, 'position'=>500),\n\t\t'import_key' =>array('type'=>'varchar(14)', 'label'=>'ImportId', 'enabled'=>1, 'visible'=>-2, 'position'=>1000),\n\t);\n\n\t/**\n\t * @var int Entity\n\t */\n\tpublic $entity;\n\n\t/**\n\t * Thirdparty name\n\t * @var string\n\t * @deprecated Use $name instead\n\t * @see $name\n\t */\n\tpublic $nom;\n\n\t/**\n\t * @var string Thirdparty name\n\t */\n\tpublic $name;\n\n\t/**\n\t * Alias names (commercial, trademark or alias names)\n\t * @var string\n\t */\n\tpublic $name_alias;\n\n\t/**\n\t * @var int Physical thirdparty not a company\n\t */\n\tpublic $particulier;\n\n\t/**\n\t * @var string Address\n\t */\n\tpublic $address;\n\n\t/**\n\t * @var string Zip code of thirdparty\n\t */\n\tpublic $zip;\n\n\t/**\n\t * @var string Town of thirdparty\n\t */\n\tpublic $town;\n\n\t/**\n\t * Thirdparty status : 0=activity ceased, 1= in activity\n\t * @var int\n\t */\n\tpublic $status = 1;\n\n\t/**\n\t * Id of department\n\t * @var int\n\t */\n\tpublic $state_id;\n\n\t/**\n\t * @var string State code\n\t */\n\tpublic $state_code;\n\n\t/**\n\t * @var string State name\n\t */\n\tpublic $state;\n\n\t/**\n\t * Id of region\n\t * @var int\n\t */\n\tpublic $region_code;\n\n\t/**\n\t * @var string Region name\n\t */\n\tpublic $region;\n\n\t/**\n\t * @var string State code\n\t * @deprecated Use state_code instead\n\t * @see $state_code\n\t */\n\tpublic $departement_code;\n\n\t/**\n\t * @var string\n\t * @deprecated Use state instead\n\t * @see $state\n\t */\n\tpublic $departement;\n\n\t/**\n\t * @var string\n\t * @deprecated Use country instead\n\t * @see $country\n\t */\n\tpublic $pays;\n\n\t/**\n\t * Phone number\n\t * @var string\n\t */\n\tpublic $phone;\n\t/**\n\t * Fax number\n\t * @var string\n\t */\n\tpublic $fax;\n\t/**\n\t * Email\n\t * @var string\n\t */\n\tpublic $email;\n\n\t/**\n\t * @var array array of socialnetworks\n\t */\n\tpublic $socialnetworks;\n\n\t/**\n\t * Skype username\n\t * @var string\n\t * @deprecated\n\t */\n\tpublic $skype;\n\n\t/**\n\t * Twitter username\n\t * @var string\n\t * @deprecated\n\t */\n\tpublic $twitter;\n\n\t/**\n\t * Facebook username\n\t * @var string\n\t * @deprecated\n\t */\n\tpublic $facebook;\n\n\t/**\n\t * LinkedIn username\n\t * @var string\n\t * @deprecated\n\t */\n\tpublic $linkedin;\n\n\t/**\n\t * Webpage\n\t * @var string\n\t */\n\tpublic $url;\n\n\t/**\n\t * Barcode value\n\t * @var string\n\t */\n\tpublic $barcode;\n\n\t// 6 professional id (usage depends on country)\n\n\t/**\n\t * Professional ID 1 (Ex: Siren in France)\n\t * @var string\n\t */\n\tpublic $idprof1;\n\n\t/**\n\t * Professional ID 2 (Ex: Siret in France)\n\t * @var string\n\t */\n\tpublic $idprof2;\n\n\t/**\n\t * Professional ID 3 (Ex: Ape in France)\n\t * @var string\n\t */\n\tpublic $idprof3;\n\n\t/**\n\t * Professional ID 4 (Ex: RCS in France)\n\t * @var string\n\t */\n\tpublic $idprof4;\n\n\t/**\n\t * Professional ID 5\n\t * @var string\n\t */\n\tpublic $idprof5;\n\n\t/**\n\t * Professional ID 6\n\t * @var string\n\t */\n\tpublic $idprof6;\n\n\t/**\n\t * @var string Prefix comm\n\t */\n\tpublic $prefix_comm;\n\n\t/**\n\t * @var int Vat concerned\n\t */\n\tpublic $tva_assuj = 1;\n\n\t/**\n\t * Intracommunitary VAT ID\n\t * @var string\n\t */\n\tpublic $tva_intra;\n\n\t// Local taxes\n\tpublic $localtax1_assuj;\n\tpublic $localtax1_value;\n\tpublic $localtax2_assuj;\n\tpublic $localtax2_value;\n\n\t/**\n\t * @var string Manager\n\t */\n\tpublic $managers;\n\n\t/**\n\t * @var float Capital\n\t */\n\tpublic $capital;\n\n\t/**\n\t * @var int Type thirdparty\n\t */\n\tpublic $typent_id = 0;\n\tpublic $typent_code;\n\tpublic $effectif;\n\tpublic $effectif_id = 0;\n\tpublic $forme_juridique_code;\n\tpublic $forme_juridique = 0;\n\n\tpublic $remise_percent;\n\tpublic $remise_supplier_percent;\n\n\tpublic $mode_reglement_supplier_id;\n\tpublic $cond_reglement_supplier_id;\n\tpublic $transport_mode_supplier_id;\n\n\t/**\n\t * @var int ID\n\t */\n\tpublic $fk_prospectlevel;\n\n\t/**\n\t * @var string second name\n\t */\n\tpublic $name_bis;\n\n\t//Log data\n\n\t/**\n\t * Date of last update\n\t * @var string\n\t */\n\tpublic $date_modification;\n\n\t/**\n\t * User that made last update\n\t * @var string\n\t */\n\tpublic $user_modification;\n\n\t/**\n\t * @var integer|string date_creation\n\t */\n\tpublic $date_creation;\n\n\t/**\n\t * User that created the thirdparty\n\t * @var User\n\t */\n\tpublic $user_creation;\n\n\t/**\n\t * 0=no customer, 1=customer, 2=prospect, 3=customer and prospect\n\t * @var int\n\t */\n\tpublic $client = 0;\n\n\t/**\n\t * 0=no prospect, 1=prospect\n\t * @var int\n\t */\n\tpublic $prospect = 0;\n\n\t/**\n\t * 0=no supplier, 1=supplier\n\t * @var int\n\t */\n\tpublic $fournisseur;\n\n\t/**\n\t * Client code. E.g: CU2014-003\n\t * @var string\n\t */\n\tpublic $code_client;\n\n\t/**\n\t * Supplier code. E.g: SU2014-003\n\t * @var string\n\t */\n\tpublic $code_fournisseur;\n\n\t/**\n\t * Accounting code for client\n\t * @var string\n\t */\n\tpublic $code_compta;\n\n\t/**\n\t * Accounting code for client\n\t * @var string\n\t */\n\tpublic $code_compta_client;\n\n\t/**\n\t * Accounting code for suppliers\n\t * @var string\n\t */\n\tpublic $code_compta_fournisseur;\n\n\t/**\n\t * @var string\n\t * @deprecated Note is split in public and private notes\n\t * @see $note_public, $note_private\n\t */\n\tpublic $note;\n\n\t/**\n\t * Private note\n\t * @var string\n\t */\n\tpublic $note_private;\n\n\t/**\n\t * Public note\n\t * @var string\n\t */\n\tpublic $note_public;\n\n\t/**\n\t * Status prospect id\n\t * @var int\n\t */\n\tpublic $stcomm_id;\n\n\t/**\n\t * Status prospect picto\n\t * @var string\n\t */\n\tpublic $stcomm_picto;\n\n\t/**\n\t * Status prospect label\n\t * @var int\n\t */\n\tpublic $status_prospect_label;\n\n\t/**\n\t * Assigned price level\n\t * @var int\n\t */\n\tpublic $price_level;\n\n\t/**\n\t * @var string outstanding limit\n\t */\n\tpublic $outstanding_limit;\n\n\t/**\n\t * @var string Min order amount\n\t */\n\tpublic $order_min_amount;\n\n\t/**\n\t * @var string Supplier min order amount\n\t */\n\tpublic $supplier_order_min_amount;\n\n\t/**\n\t * Id of sales representative to link (used for thirdparty creation). Not filled by a fetch, because we can have several sales representatives.\n\t * @var int\n\t */\n\tpublic $commercial_id;\n\n\t/**\n\t * Id of parent thirdparty (if one)\n\t * @var int\n\t */\n\tpublic $parent;\n\n\t/**\n\t * Default language code of thirdparty (en_US, ...)\n\t * @var string\n\t */\n\tpublic $default_lang;\n\n\t/**\n\t * @var string Ref\n\t */\n\tpublic $ref;\n\n\t/**\n\t * @var string Internal ref\n\t * @deprecated\n\t */\n\tpublic $ref_int;\n\n\t/**\n\t * External user reference.\n\t * This is to allow external systems to store their id and make self-developed synchronizing functions easier to build.\n\t * @var string\n\t */\n\tpublic $ref_ext;\n\n\t/**\n\t * Import key.\n\t * Set when the thirdparty has been created through an import process. This is to relate those created thirdparties\n\t * to an import process\n\t * @var string\n\t */\n\tpublic $import_key;\n\n\t/**\n\t * Supplier WebServices URL\n\t * @var string\n\t */\n\tpublic $webservices_url;\n\n\t/**\n\t * Supplier WebServices Key\n\t * @var string\n\t */\n\tpublic $webservices_key;\n\n\t/**\n\t * @var string Logo\n\t */\n\tpublic $logo;\n\n\t/**\n\t * @var string logo small\n\t */\n\tpublic $logo_small;\n\n\t/**\n\t * @var string Logo mini\n\t */\n\tpublic $logo_mini;\n\n\t/**\n\t * @var string Logo squarred\n\t */\n\tpublic $logo_squarred;\n\n\t/**\n\t * @var string Logo squarred small\n\t */\n\tpublic $logo_squarred_small;\n\n\t/**\n\t * @var string Logo squarred mini\n\t */\n\tpublic $logo_squarred_mini;\n\n\t/**\n\t * @var string Accountancy account for sales\n\t */\n\tpublic $accountancy_code_sell;\n\n\t/**\n\t * @var string Accountancy account for bought\n\t */\n\tpublic $accountancy_code_buy;\n\n\t// Multicurrency\n\t/**\n\t * @var int ID\n\t */\n\tpublic $fk_multicurrency;\n\n\t// Warehouse\n\t/**\n\t * @var int ID\n\t */\n\tpublic $fk_warehouse;\n\n\t/**\n\t * @var string Multicurrency code\n\t */\n\tpublic $multicurrency_code;\n\n\n\t// Fields loaded by fetchPartnerships()\n\n\tpublic $partnerships = array();\n\n\n\n\t/**\n\t * @var Account|string Default BAN account\n\t */\n\tpublic $bank_account;\n\n\t/**\n\t * Third party is no customer\n\t */\n\tconst NO_CUSTOMER = 0;\n\n\t/**\n\t * Third party is a customer\n\t */\n\tconst CUSTOMER = 1;\n\n\t/**\n\t * Third party is a prospect\n\t */\n\tconst PROSPECT = 2;\n\n\t/**\n\t * Third party is a customer and a prospect\n\t */\n\tconst CUSTOMER_AND_PROSPECT = 3;\n\n\t/**\n\t * Third party is no supplier\n\t */\n\tconst NO_SUPPLIER = 0;\n\n\t/**\n\t * Third party is a supplier\n\t */\n\tconst SUPPLIER = 1;\n\n\t/**\n\t *    Constructor\n\t *\n\t *    @param\tDoliDB\t\t$db\t\tDatabase handler\n\t */\n\tpublic function __construct($db)\n\t{\n\t\tglobal $conf;\n\n\t\t$this->db = $db;\n\n\t\t$this->client = 0;\n\t\t$this->prospect = 0;\n\t\t$this->fournisseur = 0;\n\t\t$this->typent_id = 0;\n\t\t$this->effectif_id = 0;\n\t\t$this->forme_juridique_code = 0;\n\t\t$this->tva_assuj = 1;\n\t\t$this->status = 1;\n\n\t\tif (!empty($conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST)) {\n\t\t\t$this->fields['address']['showoncombobox'] = $conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST;\n\t\t\t$this->fields['zip']['showoncombobox'] = $conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST;\n\t\t\t$this->fields['town']['showoncombobox'] = $conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST;\n\t\t\t//$this->fields['fk_pays']['showoncombobox'] = $conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST;\n\t\t}\n\t}\n\n\n\t/**\n\t *    Create third party in database.\n\t *    $this->code_client = -1 and $this->code_fournisseur = -1 means automatic assignement.\n\t *\n\t *    @param\tUser\t$user       Object of user that ask creation\n\t *    @return   int         \t\t>=0 if OK, <0 if KO\n\t */\n\tpublic function create(User $user)\n\t{\n\t\tglobal $langs, $conf, $mysoc;\n\n\t\t$error = 0;\n\n\t\t// Clean parameters\n\t\tif (empty($this->status)) {\n\t\t\t$this->status = 0;\n\t\t}\n\t\t$this->name = $this->name ?trim($this->name) : trim($this->nom);\n\t\t$this->setUpperOrLowerCase();\n\t\t$this->nom = $this->name; // For backward compatibility\n\t\tif (empty($this->client)) {\n\t\t\t$this->client = 0;\n\t\t}\n\t\tif (empty($this->fournisseur)) {\n\t\t\t$this->fournisseur = 0;\n\t\t}\n\t\t$this->import_key = trim($this->import_key);\n\n\t\t$this->accountancy_code_buy = trim($this->accountancy_code_buy);\n\t\t$this->accountancy_code_sell= trim($this->accountancy_code_sell);\n\n\t\tif (!empty($this->multicurrency_code)) {\n\t\t\t$this->fk_multicurrency = MultiCurrency::getIdFromCode($this->db, $this->multicurrency_code);\n\t\t}\n\t\tif (empty($this->fk_multicurrency)) {\n\t\t\t$this->multicurrency_code = '';\n\t\t\t$this->fk_multicurrency = 0;\n\t\t}\n\n\t\tdol_syslog(get_class($this).\"::create \".$this->name);\n\n\t\t$now = dol_now();\n\n\t\t$this->db->begin();\n\n\t\t// For automatic creation during create action (not used by Dolibarr GUI, can be used by scripts)\n\t\tif ($this->code_client == -1 || $this->code_client === 'auto') {\n\t\t\t$this->get_codeclient($this, 0);\n\t\t}\n\t\tif ($this->code_fournisseur == -1 || $this->code_fournisseur === 'auto') {\n\t\t\t$this->get_codefournisseur($this, 1);\n\t\t}\n\n\t\t// Check more parameters (including mandatory setup\n\t\t// If error, this->errors[] is filled\n\t\t$result = $this->verify();\n\n\t\tif ($result >= 0) {\n\t\t\t$this->entity = ((isset($this->entity) && is_numeric($this->entity)) ? $this->entity : $conf->entity);\n\n\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"societe (\";\n\t\t\t$sql .= \"nom\";\n\t\t\t$sql .= \", name_alias\";\n\t\t\t$sql .= \", entity\";\n\t\t\t$sql .= \", datec\";\n\t\t\t$sql .= \", fk_typent\";\n\t\t\t$sql .= \", fk_user_creat\";\n\t\t\t$sql .= \", canvas\";\n\t\t\t$sql .= \", status\";\n\t\t\t$sql .= \", ref_ext\";\n\t\t\t$sql .= \", fk_stcomm\";\n\t\t\t$sql .= \", fk_incoterms\";\n\t\t\t$sql .= \", location_incoterms\";\n\t\t\t$sql .= \", import_key\";\n\t\t\t$sql .= \", fk_multicurrency\";\n\t\t\t$sql .= \", multicurrency_code\";\n\t\t\tif (empty($conf->global->MAIN_COMPANY_PERENTITY_SHARED)) {\n\t\t\t\t$sql .= \", accountancy_code_buy\";\n\t\t\t\t$sql .= \", accountancy_code_sell\";\n\t\t\t}\n\t\t\t$sql .= \") VALUES ('\".$this->db->escape($this->name).\"', '\".$this->db->escape($this->name_alias).\"', \".$this->db->escape($this->entity).\", '\".$this->db->idate($now).\"'\";\n\t\t\t$sql .= \", \".(!empty($user->id) ? ((int) $user->id) : \"null\");\n\t\t\t$sql .= \", \".(!empty($this->typent_id) ? ((int) $this->typent_id) : \"null\");\n\t\t\t$sql .= \", \".(!empty($this->canvas) ? \"'\".$this->db->escape($this->canvas).\"'\" : \"null\");\n\t\t\t$sql .= \", \".$this->status;\n\t\t\t$sql .= \", \".(!empty($this->ref_ext) ? \"'\".$this->db->escape($this->ref_ext).\"'\" : \"null\");\n\t\t\t$sql .= \", 0\";\n\t\t\t$sql .= \", \".(int) $this->fk_incoterms;\n\t\t\t$sql .= \", '\".$this->db->escape($this->location_incoterms).\"'\";\n\t\t\t$sql .= \", \".(!empty($this->import_key) ? \"'\".$this->db->escape($this->import_key).\"'\" : \"null\");\n\t\t\t$sql .= \", \".(int) $this->fk_multicurrency;\n\t\t\t$sql .= \", '\".$this->db->escape($this->multicurrency_code).\"'\";\n\t\t\tif (empty($conf->global->MAIN_COMPANY_PERENTITY_SHARED)) {\n\t\t\t\t$sql .= \", '\" . $this->db->escape($this->accountancy_code_buy) . \"'\";\n\t\t\t\t$sql .= \", '\" . $this->db->escape($this->accountancy_code_sell) . \"'\";\n\t\t\t}\n\t\t\t$sql .= \")\";\n\n\t\t\tdol_syslog(get_class($this).\"::create\", LOG_DEBUG);\n\t\t\t$result = $this->db->query($sql);\n\t\t\tif ($result) {\n\t\t\t\t$this->id = $this->db->last_insert_id(MAIN_DB_PREFIX.\"societe\");\n\n\t\t\t\t$ret = $this->update($this->id, $user, 0, 1, 1, 'add');\n\n\t\t\t\t// update accountancy for this entity\n\t\t\t\tif (!$error && !empty($conf->global->MAIN_COMPANY_PERENTITY_SHARED)) {\n\t\t\t\t\t$this->db->query(\"DELETE FROM \" . MAIN_DB_PREFIX . \"societe_perentity WHERE fk_soc = \" . $this->id . \" AND entity = \" . $conf->entity);\n\n\t\t\t\t\t$sql = \"INSERT INTO \" . MAIN_DB_PREFIX . \"societe_perentity (\";\n\t\t\t\t\t$sql .= \" fk_soc\";\n\t\t\t\t\t$sql .= \", entity\";\n\t\t\t\t\t$sql .= \", accountancy_code_buy\";\n\t\t\t\t\t$sql .= \", accountancy_code_sell\";\n\t\t\t\t\t$sql .= \") VALUES (\";\n\t\t\t\t\t$sql .= $this->id;\n\t\t\t\t\t$sql .= \", \" . $conf->entity;\n\t\t\t\t\t$sql .= \", '\" . $this->db->escape($this->accountancy_code_buy) . \"'\";\n\t\t\t\t\t$sql .= \", '\" . $this->db->escape($this->accountancy_code_sell) . \"'\";\n\t\t\t\t\t$sql .= \")\";\n\t\t\t\t\t$result = $this->db->query($sql);\n\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t$this->error = 'ErrorFailedToUpdateAccountancyForEntity';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Ajout du commercial affecte\n\t\t\t\tif ($this->commercial_id != '' && $this->commercial_id != -1) {\n\t\t\t\t\t$this->add_commercial($user, $this->commercial_id);\n\t\t\t\t} elseif (empty($user->rights->societe->client->voir)) {\n\t\t\t\t\t// si un commercial cree un client il lui est affecte automatiquement\n\t\t\t\t\t$this->add_commercial($user, $user->id);\n\t\t\t\t}\n\n\t\t\t\tif ($ret >= 0) {\n\t\t\t\t\t// Call trigger\n\t\t\t\t\t$result = $this->call_trigger('COMPANY_CREATE', $user);\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t\t// End call triggers\n\t\t\t\t} else {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\n\t\t\t\tif (!$error) {\n\t\t\t\t\tdol_syslog(get_class($this).\"::Create success id=\".$this->id);\n\t\t\t\t\t$this->db->commit();\n\t\t\t\t\treturn $this->id;\n\t\t\t\t} else {\n\t\t\t\t\tdol_syslog(get_class($this).\"::Create echec update \".$this->error.(empty($this->errors) ? '' : ' '.join(',', $this->errors)), LOG_ERR);\n\t\t\t\t\t$this->db->rollback();\n\t\t\t\t\treturn -4;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($this->db->lasterrno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n\t\t\t\t\t$this->error = $langs->trans(\"ErrorCompanyNameAlreadyExists\", $this->name); // duplicate on a field (code or profid or ...)\n\t\t\t\t\t$result = -1;\n\t\t\t\t} else {\n\t\t\t\t\t$this->error = $this->db->lasterror();\n\t\t\t\t\t$result = -2;\n\t\t\t\t}\n\t\t\t\t$this->db->rollback();\n\t\t\t\treturn $result;\n\t\t\t}\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\tdol_syslog(get_class($this).\"::Create fails verify \".join(',', $this->errors), LOG_WARNING);\n\t\t\treturn -3;\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * Create a contact/address from thirdparty\n\t *\n\t * @param \tUser\t$user\t\tObject user\n\t * @param \tint\t\t$no_email\t1=Do not send mailing, 0=Ok to recieve mailling\n\t * @param \tarray\t$tags\t\tArray of tag to affect to contact\n\t * @return \tint\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function create_individual(User $user, $no_email = 0, $tags = array())\n\t{\n\t\tglobal $conf;\n\n\t\t$error = 0;\n\n\t\t$this->db->begin();\n\n\t\t// phpcs:enable\n\t\trequire_once DOL_DOCUMENT_ROOT.'/contact/class/contact.class.php';\n\t\t$contact = new Contact($this->db);\n\n\t\t$contact->name              = $this->name_bis;\n\t\t$contact->firstname         = $this->firstname;\n\t\t$contact->civility_id       = $this->civility_id;\n\t\t$contact->socid             = $this->id; // fk_soc\n\t\t$contact->statut            = 1; // deprecated\n\t\t$contact->status            = 1;\n\t\t$contact->priv              = 0;\n\t\t$contact->country_id        = $this->country_id;\n\t\t$contact->state_id          = $this->state_id;\n\t\t$contact->address           = $this->address;\n\t\t$contact->email             = $this->email;\n\t\t$contact->zip               = $this->zip;\n\t\t$contact->town              = $this->town;\n\t\t$this->setUpperOrLowerCase();\n\t\t$contact->phone_pro         = $this->phone;\n\n\t\t$contactId = $contact->create($user);\n\t\tif ($contactId < 0) {\n\t\t\t$error++;\n\t\t\t$this->error = $contact->error;\n\t\t\t$this->errors = $contact->errors;\n\t\t\tdol_syslog(get_class($this).\"::create_individual ERROR:\".$this->error, LOG_ERR);\n\t\t}\n\n\t\tif (empty($error) && is_array($tags) && !empty($tags)) {\n\t\t\t$result = $contact->setCategories($tags);\n\t\t\tif ($result < 0) {\n\t\t\t\t$error++;\n\t\t\t\t$this->error = $contact->error;\n\t\t\t\t$this->errors = array_merge($this->errors, $contact->errors);\n\t\t\t\tdol_syslog(get_class($this) . \"::create_individual Affect Tag ERROR:\" . $this->error, LOG_ERR);\n\t\t\t\t$contactId = $result;\n\t\t\t}\n\t\t}\n\n\t\tif (empty($error) && !empty($conf->mailing->enabled) && !empty($contact->email) && isset($no_email)) {\n\t\t\t$result = $contact->setNoEmail($no_email);\n\t\t\tif ($result < 0) {\n\t\t\t\t$this->error = $contact->error;\n\t\t\t\t$this->errors = array_merge($this->errors, $contact->errors);\n\t\t\t\tdol_syslog(get_class($this) . \"::create_individual set mailing status ERROR:\" . $this->error, LOG_ERR);\n\t\t\t\t$contactId = $result;\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($error)) {\n\t\t\tdol_syslog(get_class($this).\"::create_individual success\");\n\t\t\t$this->db->commit();\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t}\n\n\t\treturn $contactId;\n\t}\n\n\t/**\n\t *    Check properties of third party are ok (like name, third party codes, ...)\n\t *    Used before an add or update.\n\t *\n\t *    @return     int\t\t0 if OK, <0 if KO\n\t */\n\tpublic function verify()\n\t{\n\t\tglobal $conf, $langs, $mysoc;\n\n\t\t$error = 0;\n\t\t$this->errors = array();\n\n\t\t$result = 0;\n\t\t$this->name = trim($this->name);\n\t\t$this->nom = $this->name; // For backward compatibility\n\n\t\tif (!$this->name) {\n\t\t\t$this->errors[] = 'ErrorBadThirdPartyName';\n\t\t\t$result = -2;\n\t\t}\n\n\t\tif ($this->client) {\n\t\t\t$rescode = $this->check_codeclient();\n\t\t\tif ($rescode != 0 && $rescode != -5) {\n\t\t\t\tif ($rescode == -1) {\n\t\t\t\t\t$this->errors[] = 'ErrorBadCustomerCodeSyntax';\n\t\t\t\t} elseif ($rescode == -2) {\n\t\t\t\t\t$this->errors[] = 'ErrorCustomerCodeRequired';\n\t\t\t\t} elseif ($rescode == -3) {\n\t\t\t\t\t$this->errors[] = 'ErrorCustomerCodeAlreadyUsed';\n\t\t\t\t} elseif ($rescode == -4) {\n\t\t\t\t\t$this->errors[] = 'ErrorPrefixRequired';\n\t\t\t\t} else {\n\t\t\t\t\t$this->errors[] = 'ErrorUnknownOnCustomerCodeCheck';\n\t\t\t\t}\n\n\t\t\t\t$result = -3;\n\t\t\t}\n\t\t}\n\n\t\tif ($this->fournisseur) {\n\t\t\t$rescode = $this->check_codefournisseur();\n\t\t\tif ($rescode != 0 && $rescode != -5) {\n\t\t\t\tif ($rescode == -1) {\n\t\t\t\t\t$this->errors[] = 'ErrorBadSupplierCodeSyntax';\n\t\t\t\t} elseif ($rescode == -2) {\n\t\t\t\t\t$this->errors[] = 'ErrorSupplierCodeRequired';\n\t\t\t\t} elseif ($rescode == -3) {\n\t\t\t\t\t$this->errors[] = 'ErrorSupplierCodeAlreadyUsed';\n\t\t\t\t} elseif ($rescode == -4) {\n\t\t\t\t\t$this->errors[] = 'ErrorPrefixRequired';\n\t\t\t\t} else {\n\t\t\t\t\t$this->errors[] = 'ErrorUnknownOnSupplierCodeCheck';\n\t\t\t\t}\n\t\t\t\t$result = -3;\n\t\t\t}\n\t\t}\n\n\t\t// Check for duplicate or mandatory fields defined into setup\n\t\t$array_to_check = array('IDPROF1', 'IDPROF2', 'IDPROF3', 'IDPROF4', 'IDPROF5', 'IDPROF6', 'EMAIL');\n\t\tforeach ($array_to_check as $key) {\n\t\t\t$keymin = strtolower($key);\n\t\t\t$i = (int) preg_replace('/[^0-9]/', '', $key);\n\t\t\t$vallabel = $this->$keymin;\n\n\t\t\tif ($i > 0) {\n\t\t\t\tif ($this->isACompany()) {\n\t\t\t\t\t// Check for mandatory prof id (but only if country is same than ours)\n\t\t\t\t\tif ($mysoc->country_id > 0 && $this->country_id == $mysoc->country_id) {\n\t\t\t\t\t\t$idprof_mandatory = 'SOCIETE_'.$key.'_MANDATORY';\n\t\t\t\t\t\tif (!$vallabel && !empty($conf->global->$idprof_mandatory)) {\n\t\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t$this->errors[] = $langs->trans(\"ErrorProdIdIsMandatory\", $langs->transcountry('ProfId'.$i, $this->country_code)).' ('.$langs->trans(\"ForbiddenBySetupRules\").')';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check for unicity on profid\n\t\t\t\tif (!$error && $vallabel && $this->id_prof_verifiable($i)) {\n\t\t\t\t\tif ($this->id_prof_exists($keymin, $vallabel, ($this->id > 0 ? $this->id : 0))) {\n\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t$this->errors[] = $langs->transcountry('ProfId'.$i, $this->country_code).\" \".$langs->trans(\"ErrorProdIdAlreadyExist\", $vallabel).' ('.$langs->trans(\"ForbiddenBySetupRules\").')';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//var_dump($conf->global->SOCIETE_EMAIL_UNIQUE);\n\t\t\t\t//var_dump($conf->global->SOCIETE_EMAIL_MANDATORY);\n\t\t\t\tif ($key == 'EMAIL') {\n\t\t\t\t\t// Check for mandatory\n\t\t\t\t\tif (!empty($conf->global->SOCIETE_EMAIL_MANDATORY) && !isValidEMail($this->email)) {\n\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t$this->errors[] = $langs->trans(\"ErrorBadEMail\", $this->email).' ('.$langs->trans(\"ForbiddenBySetupRules\").')';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check for unicity\n\t\t\t\t\tif (!$error && $vallabel && !empty($conf->global->SOCIETE_EMAIL_UNIQUE)) {\n\t\t\t\t\t\tif ($this->id_prof_exists($keymin, $vallabel, ($this->id > 0 ? $this->id : 0))) {\n\t\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\t\t$error++; $this->errors[] = $langs->trans('Email').\" \".$langs->trans(\"ErrorProdIdAlreadyExist\", $vallabel).' ('.$langs->trans(\"ForbiddenBySetupRules\").')';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($error) {\n\t\t\t$result = -4;\n\t\t}\n\n\t\treturn $result;\n\t}\n\n\t/**\n\t *      Update parameters of third party\n\t *\n\t *      @param\tint\t\t$id              \t\t\tId of company (deprecated, use 0 here and call update on an object loaded by a fetch)\n\t *      @param  User\t$user            \t\t\tUser who requests the update\n\t *      @param  int\t\t$call_trigger    \t\t\t0=no, 1=yes\n\t *\t\t@param\tint\t\t$allowmodcodeclient\t\t\tInclut modif code client et code compta\n\t *\t\t@param\tint\t\t$allowmodcodefournisseur\tInclut modif code fournisseur et code compta fournisseur\n\t *\t\t@param\tstring\t$action\t\t\t\t\t\t'add' or 'update' or 'merge'\n\t *\t\t@param\tint\t\t$nosyncmember\t\t\t\tDo not synchronize info of linked member\n\t *      @return int  \t\t\t           \t\t\t<0 if KO, >=0 if OK\n\t */\n\tpublic function update($id, $user = '', $call_trigger = 1, $allowmodcodeclient = 0, $allowmodcodefournisseur = 0, $action = 'update', $nosyncmember = 1)\n\t{\n\t\tglobal $langs, $conf, $hookmanager;\n\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\n\t\tif (empty($id)) {\n\t\t\t$id = $this->id;\n\t\t}\n\n\t\t$error = 0;\n\n\t\tdol_syslog(get_class($this).\"::Update id=\".$id.\" call_trigger=\".$call_trigger.\" allowmodcodeclient=\".$allowmodcodeclient.\" allowmodcodefournisseur=\".$allowmodcodefournisseur);\n\n\t\t$now = dol_now();\n\n\t\t// Clean parameters\n\t\t$this->id = $id;\n\t\t$this->entity = ((isset($this->entity) && is_numeric($this->entity)) ? $this->entity : $conf->entity);\n\t\t$this->name = $this->name ?trim($this->name) : trim($this->nom);\n\t\t$this->nom = $this->name; // For backward compatibility\n\t\t$this->name_alias = trim($this->name_alias);\n\t\t$this->ref_ext\t\t= trim($this->ref_ext);\n\t\t$this->address\t\t= $this->address ?trim($this->address) : trim($this->address);\n\t\t$this->zip = $this->zip ?trim($this->zip) : trim($this->zip);\n\t\t$this->town = $this->town ?trim($this->town) : trim($this->town);\n\t\t$this->setUpperOrLowerCase();\n\t\t$this->state_id = trim($this->state_id);\n\t\t$this->country_id = ($this->country_id > 0) ? $this->country_id : 0;\n\t\t$this->phone\t\t= trim($this->phone);\n\t\t$this->phone\t\t= preg_replace(\"/\\s/\", \"\", $this->phone);\n\t\t$this->phone\t\t= preg_replace(\"/\\./\", \"\", $this->phone);\n\t\t$this->fax\t\t\t= trim($this->fax);\n\t\t$this->fax\t\t\t= preg_replace(\"/\\s/\", \"\", $this->fax);\n\t\t$this->fax\t\t\t= preg_replace(\"/\\./\", \"\", $this->fax);\n\t\t$this->email = trim($this->email);\n\t\t$this->url\t\t\t= $this->url ?clean_url($this->url, 0) : '';\n\t\t$this->note_private = trim($this->note_private);\n\t\t$this->note_public  = trim($this->note_public);\n\t\t$this->idprof1\t\t= trim($this->idprof1);\n\t\t$this->idprof2\t\t= trim($this->idprof2);\n\t\t$this->idprof3\t\t= trim($this->idprof3);\n\t\t$this->idprof4\t\t= trim($this->idprof4);\n\t\t$this->idprof5\t\t= (!empty($this->idprof5) ?trim($this->idprof5) : '');\n\t\t$this->idprof6\t\t= (!empty($this->idprof6) ?trim($this->idprof6) : '');\n\t\t$this->prefix_comm = trim($this->prefix_comm);\n\t\t$this->outstanding_limit = price2num($this->outstanding_limit);\n\t\t$this->order_min_amount = price2num($this->order_min_amount);\n\t\t$this->supplier_order_min_amount = price2num($this->supplier_order_min_amount);\n\n\t\t$this->tva_assuj\t= trim($this->tva_assuj);\n\t\t$this->tva_intra\t= dol_sanitizeFileName($this->tva_intra, '');\n\t\tif (empty($this->status)) {\n\t\t\t$this->status = 0;\n\t\t}\n\n\t\tif (!empty($this->multicurrency_code)) {\n\t\t\t$this->fk_multicurrency = MultiCurrency::getIdFromCode($this->db, $this->multicurrency_code);\n\t\t}\n\t\tif (empty($this->fk_multicurrency)) {\n\t\t\t$this->multicurrency_code = '';\n\t\t\t$this->fk_multicurrency = 0;\n\t\t}\n\n\t\t// Local taxes\n\t\t$this->localtax1_assuj = trim($this->localtax1_assuj);\n\t\t$this->localtax2_assuj = trim($this->localtax2_assuj);\n\n\t\t$this->localtax1_value = trim($this->localtax1_value);\n\t\t$this->localtax2_value = trim($this->localtax2_value);\n\n\t\tif ($this->capital != '') {\n\t\t\t$this->capital = price2num(trim($this->capital));\n\t\t}\n\t\tif (!is_numeric($this->capital)) {\n\t\t\t$this->capital = ''; // '' = undef\n\t\t}\n\n\t\t$this->effectif_id = trim($this->effectif_id);\n\t\t$this->forme_juridique_code = trim($this->forme_juridique_code);\n\n\t\t//Gencod\n\t\t$this->barcode = trim($this->barcode);\n\n\t\t// For automatic creation\n\t\tif ($this->code_client == -1 || $this->code_client === 'auto') {\n\t\t\t$this->get_codeclient($this, 0);\n\t\t}\n\t\tif ($this->code_fournisseur == -1 || $this->code_fournisseur === 'auto') {\n\t\t\t$this->get_codefournisseur($this, 1);\n\t\t}\n\n\t\t$this->code_compta = trim($this->code_compta);\n\t\t$this->code_compta_fournisseur = trim($this->code_compta_fournisseur);\n\n\t\t// Check parameters. More tests are done later in the ->verify()\n\t\tif (!is_numeric($this->client) && !is_numeric($this->fournisseur)) {\n\t\t\t$langs->load(\"errors\");\n\t\t\t$this->error = $langs->trans(\"BadValueForParameterClientOrSupplier\");\n\t\t\treturn -1;\n\t\t}\n\n\t\t$customer = false;\n\t\tif (!empty($allowmodcodeclient) && !empty($this->client)) {\n\t\t\t// Attention get_codecompta peut modifier le code suivant le module utilise\n\t\t\tif (empty($this->code_compta)) {\n\t\t\t\t$ret = $this->get_codecompta('customer');\n\t\t\t\tif ($ret < 0) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$customer = true;\n\t\t}\n\n\t\t$supplier = false;\n\t\tif (!empty($allowmodcodefournisseur) && !empty($this->fournisseur)) {\n\t\t\t// Attention get_codecompta peut modifier le code suivant le module utilise\n\t\t\tif ($this->code_compta_fournisseur == \"\") {\n\t\t\t\t$ret = $this->get_codecompta('supplier');\n\t\t\t\tif ($ret < 0) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$supplier = true;\n\t\t}\n\n\t\t//Web services\n\t\t$this->webservices_url = $this->webservices_url ?clean_url($this->webservices_url, 0) : '';\n\t\t$this->webservices_key = trim($this->webservices_key);\n\n\t\t$this->accountancy_code_buy = trim($this->accountancy_code_buy);\n\t\t$this->accountancy_code_sell= trim($this->accountancy_code_sell);\n\n\t\t//Incoterms\n\t\t$this->fk_incoterms = (int) $this->fk_incoterms;\n\t\t$this->location_incoterms = trim($this->location_incoterms);\n\n\t\t$this->db->begin();\n\n\t\t// Check name is required and codes are ok or unique.\n\t\t// If error, this->errors[] is filled\n\t\t$result = 0;\n\t\tif ($action != 'add' && $action != 'merge') {\n\t\t\t// We don't check when update called during a create because verify was already done.\n\t\t\t// For a merge, we suppose source data is clean and a customer code of a deleted thirdparty must be accepted into a target thirdparty with empty code without duplicate error\n\t\t\t$result = $this->verify();\n\n\t\t\t// If there is only one error and error is ErrorBadCustomerCodeSyntax and we don't change customer code, we allow the update\n\t\t\t// So we can update record that were using and old numbering rule.\n\t\t\tif (is_array($this->errors)) {\n\t\t\t\tif (in_array('ErrorBadCustomerCodeSyntax', $this->errors) && is_object($this->oldcopy) && $this->oldcopy->code_client == $this->code_client) {\n\t\t\t\t\tif (($key = array_search('ErrorBadCustomerCodeSyntax', $this->errors)) !== false) {\n\t\t\t\t\t\tunset($this->errors[$key]); // Remove error message\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (in_array('ErrorBadSupplierCodeSyntax', $this->errors) && is_object($this->oldcopy) && $this->oldcopy->code_fournisseur == $this->code_fournisseur) {\n\t\t\t\t\tif (($key = array_search('ErrorBadSupplierCodeSyntax', $this->errors)) !== false) {\n\t\t\t\t\t\tunset($this->errors[$key]); // Remove error message\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (empty($this->errors)) {\t// If there is no more error, we can make like if there is no error at all\n\t\t\t\t\t$result = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($result >= 0) {\n\t\t\tdol_syslog(get_class($this).\"::update verify ok or not done\");\n\n\t\t\t$sql  = \"UPDATE \".MAIN_DB_PREFIX.\"societe SET \";\n\t\t\t$sql .= \"entity = \".$this->db->escape($this->entity);\n\t\t\t$sql .= \",nom = '\".$this->db->escape($this->name).\"'\"; // Required\n\t\t\t$sql .= \",name_alias = '\".$this->db->escape($this->name_alias).\"'\";\n\t\t\t$sql .= \",ref_ext = \".(!empty($this->ref_ext) ? \"'\".$this->db->escape($this->ref_ext).\"'\" : \"null\");\n\t\t\t$sql .= \",address = '\".$this->db->escape($this->address).\"'\";\n\n\t\t\t$sql .= \",zip = \".(!empty($this->zip) ? \"'\".$this->db->escape($this->zip).\"'\" : \"null\");\n\t\t\t$sql .= \",town = \".(!empty($this->town) ? \"'\".$this->db->escape($this->town).\"'\" : \"null\");\n\n\t\t\t$sql .= \",fk_departement = '\".(!empty($this->state_id) ? $this->state_id : '0').\"'\";\n\t\t\t$sql .= \",fk_pays = '\".(!empty($this->country_id) ? $this->country_id : '0').\"'\";\n\n\t\t\t$sql .= \",phone = \".(!empty($this->phone) ? \"'\".$this->db->escape($this->phone).\"'\" : \"null\");\n\t\t\t$sql .= \",fax = \".(!empty($this->fax) ? \"'\".$this->db->escape($this->fax).\"'\" : \"null\");\n\t\t\t$sql .= \",email = \".(!empty($this->email) ? \"'\".$this->db->escape($this->email).\"'\" : \"null\");\n\t\t\t$sql .= \", socialnetworks = '\".$this->db->escape(json_encode($this->socialnetworks)).\"'\";\n\t\t\t$sql .= \",url = \".(!empty($this->url) ? \"'\".$this->db->escape($this->url).\"'\" : \"null\");\n\n\t\t\t$sql .= \",parent = \".($this->parent > 0 ? $this->parent : \"null\");\n\n\t\t\t$sql .= \",note_private = \".(!empty($this->note_private) ? \"'\".$this->db->escape($this->note_private).\"'\" : \"null\");\n\t\t\t$sql .= \",note_public = \".(!empty($this->note_public) ? \"'\".$this->db->escape($this->note_public).\"'\" : \"null\");\n\n\t\t\t$sql .= \",siren   = '\".$this->db->escape($this->idprof1).\"'\";\n\t\t\t$sql .= \",siret   = '\".$this->db->escape($this->idprof2).\"'\";\n\t\t\t$sql .= \",ape     = '\".$this->db->escape($this->idprof3).\"'\";\n\t\t\t$sql .= \",idprof4 = '\".$this->db->escape($this->idprof4).\"'\";\n\t\t\t$sql .= \",idprof5 = '\".$this->db->escape($this->idprof5).\"'\";\n\t\t\t$sql .= \",idprof6 = '\".$this->db->escape($this->idprof6).\"'\";\n\n\t\t\t$sql .= \",tva_assuj = \".($this->tva_assuj != '' ? \"'\".$this->db->escape($this->tva_assuj).\"'\" : \"null\");\n\t\t\t$sql .= \",tva_intra = '\".$this->db->escape($this->tva_intra).\"'\";\n\t\t\t$sql .= \",status = \".((int) $this->status);\n\n\t\t\t// Local taxes\n\t\t\t$sql .= \",localtax1_assuj = \".($this->localtax1_assuj != '' ? \"'\".$this->db->escape($this->localtax1_assuj).\"'\" : \"null\");\n\t\t\t$sql .= \",localtax2_assuj = \".($this->localtax2_assuj != '' ? \"'\".$this->db->escape($this->localtax2_assuj).\"'\" : \"null\");\n\t\t\tif ($this->localtax1_assuj == 1) {\n\t\t\t\tif ($this->localtax1_value != '') {\n\t\t\t\t\t$sql .= \",localtax1_value =\".$this->localtax1_value;\n\t\t\t\t} else {\n\t\t\t\t\t$sql .= \",localtax1_value =0.000\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$sql .= \",localtax1_value =0.000\";\n\t\t\t}\n\n\t\t\tif ($this->localtax2_assuj == 1) {\n\t\t\t\tif ($this->localtax2_value != '') {\n\t\t\t\t\t$sql .= \",localtax2_value =\".$this->localtax2_value;\n\t\t\t\t} else {\n\t\t\t\t\t$sql .= \",localtax2_value =0.000\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$sql .= \",localtax2_value =0.000\";\n\t\t\t}\n\n\t\t\t$sql .= \",capital = \".($this->capital == '' ? \"null\" : $this->capital);\n\n\t\t\t$sql .= \",prefix_comm = \".(!empty($this->prefix_comm) ? \"'\".$this->db->escape($this->prefix_comm).\"'\" : \"null\");\n\n\t\t\t$sql .= \",fk_effectif = \".(!empty($this->effectif_id) ? \"'\".$this->db->escape($this->effectif_id).\"'\" : \"null\");\n\t\t\tif (isset($this->stcomm_id)) {\n\t\t\t\t$sql .= \",fk_stcomm=\".(!empty($this->stcomm_id) ? $this->stcomm_id : \"0\");\n\t\t\t}\n\t\t\t$sql .= \",fk_typent = \".(!empty($this->typent_id) ? \"'\".$this->db->escape($this->typent_id).\"'\" : \"0\");\n\n\t\t\t$sql .= \",fk_forme_juridique = \".(!empty($this->forme_juridique_code) ? \"'\".$this->db->escape($this->forme_juridique_code).\"'\" : \"null\");\n\n\t\t\t$sql .= \",mode_reglement = \".(!empty($this->mode_reglement_id) ? \"'\".$this->db->escape($this->mode_reglement_id).\"'\" : \"null\");\n\t\t\t$sql .= \",cond_reglement = \".(!empty($this->cond_reglement_id) ? \"'\".$this->db->escape($this->cond_reglement_id).\"'\" : \"null\");\n\t\t\t$sql .= \",transport_mode = \".(!empty($this->transport_mode_id) ? \"'\".$this->db->escape($this->transport_mode_id).\"'\" : \"null\");\n\t\t\t$sql .= \",mode_reglement_supplier = \".(!empty($this->mode_reglement_supplier_id) ? \"'\".$this->db->escape($this->mode_reglement_supplier_id).\"'\" : \"null\");\n\t\t\t$sql .= \",cond_reglement_supplier = \".(!empty($this->cond_reglement_supplier_id) ? \"'\".$this->db->escape($this->cond_reglement_supplier_id).\"'\" : \"null\");\n\t\t\t$sql .= \",transport_mode_supplier = \".(!empty($this->transport_mode_supplier_id) ? \"'\".$this->db->escape($this->transport_mode_supplier_id).\"'\" : \"null\");\n\t\t\t$sql .= \",fk_shipping_method = \".(!empty($this->shipping_method_id) ? \"'\".$this->db->escape($this->shipping_method_id).\"'\" : \"null\");\n\n\t\t\t$sql .= \",client = \".(!empty($this->client) ? $this->client : 0);\n\t\t\t$sql .= \",fournisseur = \".(!empty($this->fournisseur) ? $this->fournisseur : 0);\n\t\t\t$sql .= \",barcode = \".(!empty($this->barcode) ? \"'\".$this->db->escape($this->barcode).\"'\" : \"null\");\n\t\t\t$sql .= \",default_lang = \".(!empty($this->default_lang) ? \"'\".$this->db->escape($this->default_lang).\"'\" : \"null\");\n\t\t\t$sql .= \",logo = \".(!empty($this->logo) ? \"'\".$this->db->escape($this->logo).\"'\" : \"null\");\n\t\t\t$sql .= \",logo_squarred = \".(!empty($this->logo_squarred) ? \"'\".$this->db->escape($this->logo_squarred).\"'\" : \"null\");\n\t\t\t$sql .= \",outstanding_limit= \".($this->outstanding_limit != '' ? $this->outstanding_limit : 'null');\n\t\t\t$sql .= \",order_min_amount= \".($this->order_min_amount != '' ? $this->order_min_amount : 'null');\n\t\t\t$sql .= \",supplier_order_min_amount= \".($this->supplier_order_min_amount != '' ? $this->supplier_order_min_amount : 'null');\n\t\t\t$sql .= \",fk_prospectlevel='\".$this->db->escape($this->fk_prospectlevel).\"'\";\n\t\t\tif (empty($conf->global->MAIN_COMPANY_PERENTITY_SHARED)) {\n\t\t\t\t$sql .= \", accountancy_code_buy = '\" . $this->db->escape($this->accountancy_code_buy) . \"'\";\n\t\t\t\t$sql .= \", accountancy_code_sell= '\" . $this->db->escape($this->accountancy_code_sell) . \"'\";\n\t\t\t}\n\t\t\t$sql .= \",webservices_url = \".(!empty($this->webservices_url) ? \"'\".$this->db->escape($this->webservices_url).\"'\" : \"null\");\n\t\t\t$sql .= \",webservices_key = \".(!empty($this->webservices_key) ? \"'\".$this->db->escape($this->webservices_key).\"'\" : \"null\");\n\n\t\t\t//Incoterms\n\t\t\t$sql .= \", fk_incoterms = \".((int) $this->fk_incoterms);\n\t\t\t$sql .= \", location_incoterms = \".(!empty($this->location_incoterms) ? \"'\".$this->db->escape($this->location_incoterms).\"'\" : \"null\");\n\n\t\t\tif ($customer) {\n\t\t\t\t$sql .= \", code_client = \".(!empty($this->code_client) ? \"'\".$this->db->escape($this->code_client).\"'\" : \"null\");\n\t\t\t\t$sql .= \", code_compta = \".(!empty($this->code_compta) ? \"'\".$this->db->escape($this->code_compta).\"'\" : \"null\");\n\t\t\t}\n\n\t\t\tif ($supplier) {\n\t\t\t\t$sql .= \", code_fournisseur = \".(!empty($this->code_fournisseur) ? \"'\".$this->db->escape($this->code_fournisseur).\"'\" : \"null\");\n\t\t\t\t$sql .= \", code_compta_fournisseur = \".(($this->code_compta_fournisseur != \"\") ? \"'\".$this->db->escape($this->code_compta_fournisseur).\"'\" : \"null\");\n\t\t\t}\n\t\t\t$sql .= \", fk_user_modif = \".($user->id > 0 ? $user->id : \"null\");\n\t\t\t$sql .= \", fk_multicurrency = \".(int) $this->fk_multicurrency;\n\t\t\t$sql .= \", multicurrency_code = '\".$this->db->escape($this->multicurrency_code).\"'\";\n\t\t\t$sql .= \", model_pdf = '\".$this->db->escape($this->model_pdf).\"'\";\n\t\t\t$sql .= \" WHERE rowid = \".(int) $id;\n\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\tif (is_object($this->oldcopy)) {\t// If we have information on old values\n\t\t\t\t\tif ($this->oldcopy->country_id != $this->country_id) {\n\t\t\t\t\t\tunset($this->country_code);\n\t\t\t\t\t\tunset($this->country);\n\t\t\t\t\t}\n\t\t\t\t\tif ($this->oldcopy->state_id != $this->state_id) {\n\t\t\t\t\t\tunset($this->state_code);\n\t\t\t\t\t\tunset($this->state);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tunset($this->country_code); // We clean this, in the doubt, because it may have been changed after an update of country_id\n\t\t\t\t\tunset($this->country);\n\t\t\t\t\tunset($this->state_code);\n\t\t\t\t\tunset($this->state);\n\t\t\t\t}\n\n\t\t\t\t$nbrowsaffected = $this->db->affected_rows($resql);\n\n\t\t\t\tif (!$error && $nbrowsaffected) {\n\t\t\t\t\t// Update information on linked member if it is an update\n\t\t\t\t\tif (!$nosyncmember && !empty($conf->adherent->enabled)) {\n\t\t\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\n\n\t\t\t\t\t\tdol_syslog(get_class($this).\"::update update linked member\");\n\n\t\t\t\t\t\t$lmember = new Adherent($this->db);\n\t\t\t\t\t\t$result = $lmember->fetch(0, 0, $this->id);\n\n\t\t\t\t\t\tif ($result > 0) {\n\t\t\t\t\t\t\t$lmember->company = $this->name;\n\t\t\t\t\t\t\t//$lmember->firstname=$this->firstname?$this->firstname:$lmember->firstname;\t// We keep firstname and lastname of member unchanged\n\t\t\t\t\t\t\t//$lmember->lastname=$this->lastname?$this->lastname:$lmember->lastname;\t\t// We keep firstname and lastname of member unchanged\n\t\t\t\t\t\t\t$lmember->address = $this->address;\n\t\t\t\t\t\t\t$lmember->zip = $this->zip;\n\t\t\t\t\t\t\t$lmember->town = $this->town;\n\t\t\t\t\t\t\t$lmember->email = $this->email;\n\t\t\t\t\t\t\t$lmember->socialnetworks = $this->socialnetworks;\n\t\t\t\t\t\t\t$lmember->phone = $this->phone;\n\t\t\t\t\t\t\t$lmember->state_id = $this->state_id;\n\t\t\t\t\t\t\t$lmember->country_id = $this->country_id;\n\n\t\t\t\t\t\t\t$result = $lmember->update($user, 0, 1, 1, 1); // Use nosync to 1 to avoid cyclic updates\n\t\t\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t\t\t$this->error = $lmember->error;\n\t\t\t\t\t\t\t\t$this->errors = array_merge($this->errors, $lmember->errors);\n\t\t\t\t\t\t\t\tdol_syslog(get_class($this).\"::update \".$this->error, LOG_ERR);\n\t\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} elseif ($result < 0) {\n\t\t\t\t\t\t\t$this->error = $lmember->error;\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$action = 'update';\n\n\t\t\t\t// update accountancy for this entity\n\t\t\t\tif (!$error && !empty($conf->global->MAIN_COMPANY_PERENTITY_SHARED)) {\n\t\t\t\t\t$this->db->query(\"DELETE FROM \" . MAIN_DB_PREFIX . \"societe_perentity WHERE fk_soc = \" . $this->id . \" AND entity = \" . $conf->entity);\n\n\t\t\t\t\t$sql = \"INSERT INTO \" . MAIN_DB_PREFIX . \"societe_perentity (\";\n\t\t\t\t\t$sql .= \" fk_soc\";\n\t\t\t\t\t$sql .= \", entity\";\n\t\t\t\t\t$sql .= \", accountancy_code_buy\";\n\t\t\t\t\t$sql .= \", accountancy_code_sell\";\n\t\t\t\t\t$sql .= \") VALUES (\";\n\t\t\t\t\t$sql .= $this->id;\n\t\t\t\t\t$sql .= \", \" . $conf->entity;\n\t\t\t\t\t$sql .= \", '\" . $this->db->escape($this->accountancy_code_buy) . \"'\";\n\t\t\t\t\t$sql .= \", '\" . $this->db->escape($this->accountancy_code_sell) . \"'\";\n\t\t\t\t\t$sql .= \")\";\n\t\t\t\t\t$result = $this->db->query($sql);\n\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t$this->error = 'ErrorFailedToUpdateAccountancyForEntity';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Actions on extra fields\n\t\t\t\tif (!$error) {\n\t\t\t\t\t$result = $this->insertExtraFields();\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Actions on extra languages\n\t\t\t\tif (!$error && empty($conf->global->MAIN_EXTRALANGUAGES_DISABLED)) { // For avoid conflicts if trigger used\n\t\t\t\t\t$result = $this->insertExtraLanguages();\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error && $call_trigger) {\n\t\t\t\t\t// Call trigger\n\t\t\t\t\t$result = $this->call_trigger('COMPANY_MODIFY', $user);\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t\t// End call triggers\n\t\t\t\t}\n\n\t\t\t\tif (!$error) {\n\t\t\t\t\tdol_syslog(get_class($this).\"::Update success\");\n\t\t\t\t\t$this->db->commit();\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\t$this->db->rollback();\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($this->db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n\t\t\t\t\t// Doublon\n\t\t\t\t\t$this->error = $langs->trans(\"ErrorDuplicateField\");\n\t\t\t\t\t$result = -1;\n\t\t\t\t} else {\n\t\t\t\t\t$this->error = $this->db->lasterror();\n\t\t\t\t\t$result = -2;\n\t\t\t\t}\n\t\t\t\t$this->db->rollback();\n\t\t\t\treturn $result;\n\t\t\t}\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\tdol_syslog(get_class($this).\"::Update fails verify \".join(',', $this->errors), LOG_WARNING);\n\t\t\treturn -3;\n\t\t}\n\t}\n\n\t/**\n\t *    Load a third party from database into memory\n\t *\n\t *    @param\tint\t\t$rowid\t\t\tId of third party to load\n\t *    @param    string\t$ref\t\t\tReference of third party, name (Warning, this can return several records)\n\t *    @param    string\t$ref_ext       \tExternal reference of third party (Warning, this information is a free field not provided by Dolibarr)\n\t *    @param    string\t$barcode       \tBarcode of third party to load\n\t *    @param    string\t$idprof1\t\tProf id 1 of third party (Warning, this can return several records)\n\t *    @param    string\t$idprof2\t\tProf id 2 of third party (Warning, this can return several records)\n\t *    @param    string\t$idprof3\t\tProf id 3 of third party (Warning, this can return several records)\n\t *    @param    string\t$idprof4\t\tProf id 4 of third party (Warning, this can return several records)\n\t *    @param    string\t$idprof5\t\tProf id 5 of third party (Warning, this can return several records)\n\t *    @param    string\t$idprof6\t\tProf id 6 of third party (Warning, this can return several records)\n\t *    @param    string\t$email   \t\tEmail of third party (Warning, this can return several records)\n\t *    @param    string\t$ref_alias \t\tName_alias of third party (Warning, this can return several records)\n\t *    @return   int\t\t\t\t\t\t>0 if OK, <0 if KO or if two records found for same ref or idprof, 0 if not found.\n\t */\n\tpublic function fetch($rowid, $ref = '', $ref_ext = '', $barcode = '', $idprof1 = '', $idprof2 = '', $idprof3 = '', $idprof4 = '', $idprof5 = '', $idprof6 = '', $email = '', $ref_alias = '')\n\t{\n\t\tglobal $langs;\n\t\tglobal $conf;\n\n\t\tif (empty($rowid) && empty($ref) && empty($ref_ext) && empty($barcode) && empty($idprof1) && empty($idprof2) && empty($idprof3) && empty($idprof4) && empty($idprof5) && empty($idprof6) && empty($email)) {\n\t\t\treturn -1;\n\t\t}\n\n\t\t$sql = 'SELECT s.rowid, s.nom as name, s.name_alias, s.entity, s.ref_ext, s.address, s.datec as date_creation, s.prefix_comm';\n\t\t$sql .= ', s.status, s.fk_warehouse';\n\t\t$sql .= ', s.price_level';\n\t\t$sql .= ', s.tms as date_modification, s.fk_user_creat, s.fk_user_modif';\n\t\t$sql .= ', s.phone, s.fax, s.email';\n\t\t$sql .= ', s.socialnetworks';\n\t\t$sql .= ', s.url, s.zip, s.town, s.note_private, s.note_public, s.model_pdf, s.client, s.fournisseur';\n\t\t$sql .= ', s.siren as idprof1, s.siret as idprof2, s.ape as idprof3, s.idprof4, s.idprof5, s.idprof6';\n\t\t$sql .= ', s.capital, s.tva_intra';\n\t\t$sql .= ', s.fk_typent as typent_id';\n\t\t$sql .= ', s.fk_effectif as effectif_id';\n\t\t$sql .= ', s.fk_forme_juridique as forme_juridique_code';\n\t\t$sql .= ', s.webservices_url, s.webservices_key, s.model_pdf';\n\t\tif (empty($conf->global->MAIN_COMPANY_PERENTITY_SHARED)) {\n\t\t\t$sql .= ', s.accountancy_code_buy, s.accountancy_code_sell';\n\t\t} else {\n\t\t\t$sql .= ', spe.accountancy_code_buy, spe.accountancy_code_sell';\n\t\t}\n\t\t$sql .= ', s.code_client, s.code_fournisseur, s.code_compta, s.code_compta_fournisseur, s.parent, s.barcode';\n\t\t$sql .= ', s.fk_departement as state_id, s.fk_pays as country_id, s.fk_stcomm, s.mode_reglement, s.cond_reglement, s.transport_mode';\n\t\t$sql .= ', s.fk_account, s.tva_assuj';\n\t\t$sql .= ', s.mode_reglement_supplier, s.cond_reglement_supplier, s.transport_mode_supplier';\n\t\t$sql .= ', s.localtax1_assuj, s.localtax1_value, s.localtax2_assuj, s.localtax2_value, s.fk_prospectlevel, s.default_lang, s.logo, s.logo_squarred';\n\t\t$sql .= ', s.fk_shipping_method';\n\t\t$sql .= ', s.outstanding_limit, s.import_key, s.canvas, s.fk_incoterms, s.location_incoterms';\n\t\t$sql .= ', s.order_min_amount, s.supplier_order_min_amount';\n\t\t$sql .= ', s.fk_multicurrency, s.multicurrency_code';\n\t\t$sql .= ', fj.libelle as forme_juridique';\n\t\t$sql .= ', e.libelle as effectif';\n\t\t$sql .= ', c.code as country_code, c.label as country';\n\t\t$sql .= ', d.code_departement as state_code, d.nom as state';\n\t\t$sql .= ', r.rowid as region_id, r.code_region as region_code';\n\t\t$sql .= ', st.libelle as stcomm, st.picto as stcomm_picto';\n\t\t$sql .= ', te.code as typent_code';\n\t\t$sql .= ', i.libelle as label_incoterms';\n\t\tif (empty($conf->multicompany->enabled)) {\n\t\t\t$sql .= ', s.remise_client, s.remise_supplier';\n\t\t} else {\n\t\t\t$sql .= ', sr.remise_client, sr2.remise_supplier';\n\t\t}\n\t\t$sql .= ' FROM '.MAIN_DB_PREFIX.'societe as s';\n\t\tif (!empty($conf->global->MAIN_COMPANY_PERENTITY_SHARED)) {\n\t\t\t$sql .= \" LEFT JOIN \" . MAIN_DB_PREFIX . \"societe_perentity as spe ON spe.fk_soc = s.rowid AND spe.entity = \" . ((int) $conf->entity);\n\t\t}\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_effectif as e ON s.fk_effectif = e.id';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_country as c ON s.fk_pays = c.rowid';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_stcomm as st ON s.fk_stcomm = st.id';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_forme_juridique as fj ON s.fk_forme_juridique = fj.code';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_departements as d ON s.fk_departement = d.rowid';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_regions as r ON d.fk_region = r.code_region ';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_typent as te ON s.fk_typent = te.id';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_incoterms as i ON s.fk_incoterms = i.rowid';\n\t\t// With default setup, llx_societe_remise is a history table in default setup and current value is in llx_societe.\n\t\t// We use it for real value when multicompany is on. A better place would be into llx_societe_perentity.\n\t\tif (!empty($conf->multicompany->enabled)) {\n\t\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'societe_remise as sr ON sr.rowid = (SELECT MAX(rowid) FROM '.MAIN_DB_PREFIX.'societe_remise WHERE fk_soc = s.rowid AND entity IN ('.getEntity('discount').'))';\n\t\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'societe_remise_supplier as sr2 ON sr2.rowid = (SELECT MAX(rowid) FROM '.MAIN_DB_PREFIX.'societe_remise_supplier WHERE fk_soc = s.rowid AND entity IN ('.getEntity('discount').'))';\n\t\t}\n\t\t$sql .= ' WHERE s.entity IN ('.getEntity($this->element).')';\n\t\tif ($rowid) {\n\t\t\t$sql .= ' AND s.rowid = '.((int) $rowid);\n\t\t}\n\t\tif ($ref) {\n\t\t\t$sql .= \" AND s.nom = '\".$this->db->escape($ref).\"'\";\n\t\t}\n\t\tif ($ref_alias) {\n\t\t\t$sql .= \" AND s.name_alias = '\".$this->db->escape($ref_alias).\"'\";\n\t\t}\n\t\tif ($ref_ext) {\n\t\t\t$sql .= \" AND s.ref_ext = '\".$this->db->escape($ref_ext).\"'\";\n\t\t}\n\t\tif ($barcode) {\n\t\t\t$sql .= \" AND s.barcode = '\".$this->db->escape($barcode).\"'\";\n\t\t}\n\t\tif ($idprof1) {\n\t\t\t$sql .= \" AND s.siren = '\".$this->db->escape($idprof1).\"'\";\n\t\t}\n\t\tif ($idprof2) {\n\t\t\t$sql .= \" AND s.siret = '\".$this->db->escape($idprof2).\"'\";\n\t\t}\n\t\tif ($idprof3) {\n\t\t\t$sql .= \" AND s.ape = '\".$this->db->escape($idprof3).\"'\";\n\t\t}\n\t\tif ($idprof4) {\n\t\t\t$sql .= \" AND s.idprof4 = '\".$this->db->escape($idprof4).\"'\";\n\t\t}\n\t\tif ($idprof5) {\n\t\t\t$sql .= \" AND s.idprof5 = '\".$this->db->escape($idprof5).\"'\";\n\t\t}\n\t\tif ($idprof6) {\n\t\t\t$sql .= \" AND s.idprof6 = '\".$this->db->escape($idprof6).\"'\";\n\t\t}\n\t\tif ($email) {\n\t\t\t$sql .= \" AND s.email = '\".$this->db->escape($email).\"'\";\n\t\t}\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\tif ($num > 1) {\n\t\t\t\t$this->error = 'Fetch found several records. Rename one of thirdparties to avoid duplicate.';\n\t\t\t\tdol_syslog($this->error, LOG_ERR);\n\t\t\t\t$result = -2;\n\t\t\t} elseif ($num) {   // $num = 1\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t$this->id           = $obj->rowid;\n\t\t\t\t$this->entity       = $obj->entity;\n\t\t\t\t$this->canvas = $obj->canvas;\n\n\t\t\t\t$this->ref          = $obj->rowid;\n\t\t\t\t$this->name = $obj->name;\n\t\t\t\t$this->nom          = $obj->name; // deprecated\n\t\t\t\t$this->name_alias = $obj->name_alias;\n\t\t\t\t$this->ref_ext      = $obj->ref_ext;\n\n\t\t\t\t$this->date_creation     = $this->db->jdate($obj->date_creation);\n\t\t\t\t$this->date_modification = $this->db->jdate($obj->date_modification);\n\t\t\t\t$this->user_creation     = $obj->fk_user_creat;\n\t\t\t\t$this->user_modification = $obj->fk_user_modif;\n\n\t\t\t\t$this->address = $obj->address;\n\t\t\t\t$this->zip \t\t\t= $obj->zip;\n\t\t\t\t$this->town \t\t= $obj->town;\n\n\t\t\t\t$this->country_id   = $obj->country_id;\n\t\t\t\t$this->country_code = $obj->country_id ? $obj->country_code : '';\n\t\t\t\t$this->country = $obj->country_id ? ($langs->transnoentities('Country'.$obj->country_code) != 'Country'.$obj->country_code ? $langs->transnoentities('Country'.$obj->country_code) : $obj->country) : '';\n\n\t\t\t\t$this->state_id     = $obj->state_id;\n\t\t\t\t$this->state_code   = $obj->state_code;\n\t\t\t\t$this->region_id    = $obj->region_id;\n\t\t\t\t$this->region_code   = $obj->region_code;\n\t\t\t\t$this->state        = ($obj->state != '-' ? $obj->state : '');\n\n\t\t\t\t$transcode = $langs->trans('StatusProspect'.$obj->fk_stcomm);\n\t\t\t\t$label = ($transcode != 'StatusProspect'.$obj->fk_stcomm ? $transcode : $obj->stcomm);\n\t\t\t\t$this->stcomm_id = $obj->fk_stcomm; // id status prospect\n\t\t\t\t$this->status_prospect_label = $label; // label status prospect\n\t\t\t\t$this->stcomm_picto = $obj->stcomm_picto; // picto statut commercial\n\n\t\t\t\t$this->email = $obj->email;\n\t\t\t\t$this->socialnetworks = (array) json_decode($obj->socialnetworks, true);\n\n\t\t\t\t$this->url = $obj->url;\n\t\t\t\t$this->phone = $obj->phone;\n\t\t\t\t$this->fax = $obj->fax;\n\n\t\t\t\t$this->parent = $obj->parent;\n\n\t\t\t\t$this->idprof1\t\t= $obj->idprof1;\n\t\t\t\t$this->idprof2\t\t= $obj->idprof2;\n\t\t\t\t$this->idprof3\t\t= $obj->idprof3;\n\t\t\t\t$this->idprof4\t\t= $obj->idprof4;\n\t\t\t\t$this->idprof5\t\t= $obj->idprof5;\n\t\t\t\t$this->idprof6\t\t= $obj->idprof6;\n\n\t\t\t\t$this->capital = $obj->capital;\n\n\t\t\t\t$this->code_client = $obj->code_client;\n\t\t\t\t$this->code_fournisseur = $obj->code_fournisseur;\n\n\t\t\t\t$this->code_compta = $obj->code_compta;\n\t\t\t\t$this->code_compta_fournisseur = $obj->code_compta_fournisseur;\n\n\t\t\t\t$this->barcode = $obj->barcode;\n\n\t\t\t\t$this->tva_assuj      = $obj->tva_assuj;\n\t\t\t\t$this->tva_intra      = $obj->tva_intra;\n\t\t\t\t$this->status = $obj->status;\n\n\t\t\t\t// Local Taxes\n\t\t\t\t$this->localtax1_assuj      = $obj->localtax1_assuj;\n\t\t\t\t$this->localtax2_assuj      = $obj->localtax2_assuj;\n\n\t\t\t\t$this->localtax1_value\t\t= $obj->localtax1_value;\n\t\t\t\t$this->localtax2_value\t\t= $obj->localtax2_value;\n\n\t\t\t\t$this->typent_id      = $obj->typent_id;\n\t\t\t\t$this->typent_code    = $obj->typent_code;\n\n\t\t\t\t$this->effectif_id    = $obj->effectif_id;\n\t\t\t\t$this->effectif       = $obj->effectif_id ? $obj->effectif : '';\n\n\t\t\t\t$this->forme_juridique_code = $obj->forme_juridique_code;\n\t\t\t\t$this->forme_juridique = $obj->forme_juridique_code ? $obj->forme_juridique : '';\n\n\t\t\t\t$this->fk_prospectlevel = $obj->fk_prospectlevel;\n\n\t\t\t\t$this->prefix_comm = $obj->prefix_comm;\n\n\t\t\t\t$this->remise_percent = $obj->remise_client ? price2num($obj->remise_client) : 0; // 0.000000 must be 0\n\t\t\t\t$this->remise_supplier_percent = $obj->remise_supplier;\n\n\t\t\t\t$this->mode_reglement_id \t= $obj->mode_reglement;\n\t\t\t\t$this->cond_reglement_id \t= $obj->cond_reglement;\n\t\t\t\t$this->transport_mode_id \t= $obj->transport_mode;\n\t\t\t\t$this->mode_reglement_supplier_id \t= $obj->mode_reglement_supplier;\n\t\t\t\t$this->cond_reglement_supplier_id \t= $obj->cond_reglement_supplier;\n\t\t\t\t$this->transport_mode_supplier_id = $obj->transport_mode_supplier;\n\t\t\t\t$this->shipping_method_id = ($obj->fk_shipping_method > 0) ? $obj->fk_shipping_method : null;\n\t\t\t\t$this->fk_account = $obj->fk_account;\n\n\t\t\t\t$this->client = $obj->client;\n\t\t\t\t$this->fournisseur = $obj->fournisseur;\n\n\t\t\t\t$this->note = $obj->note_private; // TODO Deprecated for backward comtability\n\t\t\t\t$this->note_private = $obj->note_private;\n\t\t\t\t$this->note_public = $obj->note_public;\n\t\t\t\t$this->model_pdf = $obj->model_pdf;\n\t\t\t\t$this->modelpdf = $obj->model_pdf; // deprecated\n\t\t\t\t$this->default_lang = $obj->default_lang;\n\t\t\t\t$this->logo = $obj->logo;\n\t\t\t\t$this->logo_squarred = $obj->logo_squarred;\n\n\t\t\t\t$this->webservices_url = $obj->webservices_url;\n\t\t\t\t$this->webservices_key = $obj->webservices_key;\n\n\t\t\t\t$this->accountancy_code_buy     = $obj->accountancy_code_buy;\n\t\t\t\t$this->accountancy_code_sell    = $obj->accountancy_code_sell;\n\n\t\t\t\t$this->outstanding_limit\t\t= $obj->outstanding_limit;\n\t\t\t\t$this->order_min_amount\t\t\t= $obj->order_min_amount;\n\t\t\t\t$this->supplier_order_min_amount = $obj->supplier_order_min_amount;\n\n\t\t\t\t// multiprix\n\t\t\t\t$this->price_level = $obj->price_level;\n\n\t\t\t\t// warehouse\n\t\t\t\t$this->fk_warehouse = $obj->fk_warehouse;\n\n\t\t\t\t$this->import_key = $obj->import_key;\n\n\t\t\t\t//Incoterms\n\t\t\t\t$this->fk_incoterms = $obj->fk_incoterms;\n\t\t\t\t$this->location_incoterms = $obj->location_incoterms;\n\t\t\t\t$this->label_incoterms = $obj->label_incoterms;\n\n\t\t\t\t// multicurrency\n\t\t\t\t$this->fk_multicurrency = $obj->fk_multicurrency;\n\t\t\t\t$this->multicurrency_code = $obj->multicurrency_code;\n\t\t\t\t$this->model_pdf = $obj->model_pdf;\n\n\t\t\t\t$result = 1;\n\n\t\t\t\t// fetch optionals attributes and labels\n\t\t\t\t$this->fetch_optionals();\n\t\t\t} else {\n\t\t\t\t$result = 0;\n\t\t\t}\n\n\t\t\t$this->db->free($resql);\n\t\t} else {\n\t\t\t$this->error = $this->db->lasterror();\n\t\t\t$this->errors[] = $this->db->lasterror();\n\t\t\t$result = -3;\n\t\t}\n\n\t\t// Use first price level if level not defined for third party\n\t\tif ((!empty($conf->global->PRODUIT_MULTIPRICES) || !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES)) && empty($this->price_level)) {\n\t\t\t$this->price_level = 1;\n\t\t}\n\n\t\treturn $result;\n\t}\n\n\t/**\n\t *    Delete a third party from database and all its dependencies (contacts, rib...)\n\t *\n\t *    @param\tint\t\t$id             Id of third party to delete\n\t *    @param    User    $fuser          User who ask to delete thirdparty\n\t *    @param    int\t\t$call_trigger   0=No, 1=yes\n\t *    @return\tint\t\t\t\t\t\t<0 if KO, 0 if nothing done, >0 if OK\n\t */\n\tpublic function delete($id, User $fuser = null, $call_trigger = 1)\n\t{\n\t\tglobal $langs, $conf, $user;\n\n\t\tif (empty($fuser)) {\n\t\t\t$fuser = $user;\n\t\t}\n\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t\t$entity = isset($this->entity) ? $this->entity : $conf->entity;\n\n\t\tdol_syslog(get_class($this).\"::delete\", LOG_DEBUG);\n\t\t$error = 0;\n\n\t\t// Test if child exists\n\t\t$objectisused = $this->isObjectUsed($id);\n\t\tif (empty($objectisused)) {\n\t\t\t$this->db->begin();\n\n\t\t\t// User is mandatory for trigger call\n\t\t\tif (!$error && $call_trigger) {\n\t\t\t\t// Call trigger\n\t\t\t\t$result = $this->call_trigger('COMPANY_DELETE', $fuser);\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t\t// End call triggers\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n\t\t\t\t$static_cat = new Categorie($this->db);\n\t\t\t\t$toute_categs = array();\n\n\t\t\t\t// Fill $toute_categs array with an array of (type => array of (\"Categorie\" instance))\n\t\t\t\tif ($this->client || $this->prospect) {\n\t\t\t\t\t$toute_categs['customer'] = $static_cat->containing($this->id, Categorie::TYPE_CUSTOMER);\n\t\t\t\t}\n\t\t\t\tif ($this->fournisseur) {\n\t\t\t\t\t$toute_categs['supplier'] = $static_cat->containing($this->id, Categorie::TYPE_SUPPLIER);\n\t\t\t\t}\n\n\t\t\t\t// Remove each \"Categorie\"\n\t\t\t\tforeach ($toute_categs as $type => $categs_type) {\n\t\t\t\t\tforeach ($categs_type as $cat) {\n\t\t\t\t\t\t$cat->del_type($this, $type);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\tforeach ($this->childtablesoncascade as $tabletodelete) {\n\t\t\t\t\t$deleteFromObject = explode(':', $tabletodelete);\n\t\t\t\t\tif (count($deleteFromObject) >= 2) {\n\t\t\t\t\t\t$className = str_replace('@', '', $deleteFromObject[0]);\n\t\t\t\t\t\t$filepath = $deleteFromObject[1];\n\t\t\t\t\t\t$columnName = $deleteFromObject[2];\n\t\t\t\t\t\tif (dol_include_once($filepath)) {\n\t\t\t\t\t\t\t$child_object = new $className($this->db);\n\t\t\t\t\t\t\t$result = $child_object->deleteByParentField($id, $columnName);\n\t\t\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t\t$this->errors[] = $child_object->error;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t$this->errors[] = 'Cannot include child class file '.$filepath;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$sql = \"DELETE FROM \".MAIN_DB_PREFIX.$tabletodelete;\n\t\t\t\t\t\t$sql .= \" WHERE fk_soc = \".((int) $id);\n\t\t\t\t\t\tif (!$this->db->query($sql)) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t$this->errors[] = $this->db->lasterror();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Removed extrafields\n\t\t\tif (!$error) {\n\t\t\t\t$result = $this->deleteExtraFields();\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_syslog(get_class($this).\"::delete error -3 \".$this->error, LOG_ERR);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove links to subsidiaries companies\n\t\t\tif (!$error) {\n\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"societe\";\n\t\t\t\t$sql .= \" SET parent = NULL\";\n\t\t\t\t$sql .= \" WHERE parent = \".((int) $id);\n\t\t\t\tif (!$this->db->query($sql)) {\n\t\t\t\t\t$error++;\n\t\t\t\t\t$this->errors[] = $this->db->lasterror();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove third party\n\t\t\tif (!$error) {\n\t\t\t\t$sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"societe\";\n\t\t\t\t$sql .= \" WHERE rowid = \".((int) $id);\n\t\t\t\tif (!$this->db->query($sql)) {\n\t\t\t\t\t$error++;\n\t\t\t\t\t$this->errors[] = $this->db->lasterror();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\t$this->db->commit();\n\n\t\t\t\t// Delete directory\n\t\t\t\tif (!empty($conf->societe->multidir_output[$entity])) {\n\t\t\t\t\t$docdir = $conf->societe->multidir_output[$entity].\"/\".$id;\n\t\t\t\t\tif (dol_is_dir($docdir)) {\n\t\t\t\t\t\tdol_delete_dir_recursive($docdir);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\tdol_syslog($this->error, LOG_ERR);\n\t\t\t\t$this->db->rollback();\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_syslog(\"Can't remove thirdparty with id \".$id.\". There is \".$objectisused.\" childs\", LOG_WARNING);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Define third party as a customer\n\t *\n\t *\t@return\t\tint\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function set_as_client()\n\t{\n\t\t// phpcs:enable\n\t\tif ($this->id) {\n\t\t\t$newclient = 1;\n\t\t\tif ($this->client == 2 || $this->client == 3) {\n\t\t\t\t$newclient = 3; //If prospect, we keep prospect tag\n\t\t\t}\n\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"societe\";\n\t\t\t$sql .= \" SET client = \".((int) $newclient);\n\t\t\t$sql .= \" WHERE rowid = \".$this->id;\n\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$this->client = $newclient;\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Defines the company as a customer\n\t *\n\t *  @param\tfloat\t$remise\t\tValue in % of the discount\n\t *  @param  string\t$note\t\tNote/Reason for changing the discount\n\t *  @param  User\t$user\t\tUser who sets the discount\n\t *\t@return\tint\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function set_remise_client($remise, $note, User $user)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs;\n\n\t\t// Parameter cleaning\n\t\t$note = trim($note);\n\t\tif (!$note) {\n\t\t\t$this->error = $langs->trans(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"NoteReason\"));\n\t\t\treturn -2;\n\t\t}\n\n\t\tdol_syslog(get_class($this).\"::set_remise_client \".$remise.\", \".$note.\", \".$user->id);\n\n\t\tif ($this->id) {\n\t\t\t$this->db->begin();\n\n\t\t\t$now = dol_now();\n\n\t\t\t// Position current discount\n\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"societe \";\n\t\t\t$sql .= \" SET remise_client = '\".$this->db->escape($remise).\"'\";\n\t\t\t$sql .= \" WHERE rowid = \".$this->id;\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\t$this->db->rollback();\n\t\t\t\t$this->error = $this->db->error();\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// Writes trace in discount history\n\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"societe_remise\";\n\t\t\t$sql .= \" (entity, datec, fk_soc, remise_client, note, fk_user_author)\";\n\t\t\t$sql .= \" VALUES (\".$conf->entity.\", '\".$this->db->idate($now).\"', \".((int) $this->id).\", '\".$this->db->escape($remise).\"',\";\n\t\t\t$sql .= \" '\".$this->db->escape($note).\"',\";\n\t\t\t$sql .= \" \".((int) $user->id);\n\t\t\t$sql .= \")\";\n\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\t$this->db->rollback();\n\t\t\t\t$this->error = $this->db->lasterror();\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t$this->db->commit();\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Defines the company as a customer\n\t *\n\t *  @param\tfloat\t$remise\t\tValue in % of the discount\n\t *  @param  string\t$note\t\tNote/Reason for changing the discount\n\t *  @param  User\t$user\t\tUser who sets the discount\n\t *\t@return\tint\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function set_remise_supplier($remise, $note, User $user)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs;\n\n\t\t// Parameter cleaning\n\t\t$note = trim($note);\n\t\tif (!$note) {\n\t\t\t$this->error = $langs->trans(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"NoteReason\"));\n\t\t\treturn -2;\n\t\t}\n\n\t\tdol_syslog(get_class($this).\"::set_remise_supplier \".$remise.\", \".$note.\", \".$user->id);\n\n\t\tif ($this->id) {\n\t\t\t$this->db->begin();\n\n\t\t\t$now = dol_now();\n\n\t\t\t// Position current discount\n\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"societe \";\n\t\t\t$sql .= \" SET remise_supplier = '\".$this->db->escape($remise).\"'\";\n\t\t\t$sql .= \" WHERE rowid = \".$this->id;\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\t$this->db->rollback();\n\t\t\t\t$this->error = $this->db->error();\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// Writes trace in discount history\n\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"societe_remise_supplier\";\n\t\t\t$sql .= \" (entity, datec, fk_soc, remise_supplier, note, fk_user_author)\";\n\t\t\t$sql .= \" VALUES (\".$conf->entity.\", '\".$this->db->idate($now).\"', \".((int) $this->id).\", '\".$this->db->escape($remise).\"',\";\n\t\t\t$sql .= \" '\".$this->db->escape($note).\"',\";\n\t\t\t$sql .= \" \".((int) $user->id);\n\t\t\t$sql .= \")\";\n\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\t$this->db->rollback();\n\t\t\t\t$this->error = $this->db->lasterror();\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t$this->db->commit();\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    \tAdd a discount for third party\n\t *\n\t *    \t@param\tfloat\t$remise     \tAmount of discount\n\t *    \t@param  User\t$user       \tUser adding discount\n\t *    \t@param  string\t$desc\t\t\tReason of discount\n\t *      @param  string\t$vatrate     \tVAT rate (may contain the vat code too). Exemple: '1.23', '1.23 (ABC)', ...\n\t *      @param\tint\t\t$discount_type\t0 => customer discount, 1 => supplier discount\n\t *\t\t@return\tint\t\t\t\t\t\t<0 if KO, id of discount record if OK\n\t */\n\tpublic function set_remise_except($remise, User $user, $desc, $vatrate = '', $discount_type = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t// Clean parameters\n\t\t$remise = price2num($remise);\n\t\t$desc = trim($desc);\n\n\t\t// Check parameters\n\t\tif (!$remise > 0) {\n\t\t\t$this->error = $langs->trans(\"ErrorWrongValueForParameter\", \"1\");\n\t\t\treturn -1;\n\t\t}\n\t\tif (!$desc) {\n\t\t\t$this->error = $langs->trans(\"ErrorWrongValueForParameter\", \"3\");\n\t\t\treturn -2;\n\t\t}\n\n\t\tif ($this->id > 0) {\n\t\t\t// Clean vat code\n\t\t\t$reg = array();\n\t\t\t$vat_src_code = '';\n\t\t\tif (preg_match('/\\((.*)\\)/', $vatrate, $reg)) {\n\t\t\t\t$vat_src_code = $reg[1];\n\t\t\t\t$vatrate = preg_replace('/\\s*\\(.*\\)/', '', $vatrate); // Remove code into vatrate.\n\t\t\t}\n\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/discount.class.php';\n\n\t\t\t$discount = new DiscountAbsolute($this->db);\n\t\t\t$discount->fk_soc = $this->id;\n\n\t\t\t$discount->discount_type = $discount_type;\n\n\t\t\t$discount->amount_ht = $discount->multicurrency_amount_ht = price2num($remise, 'MT');\n\t\t\t$discount->amount_tva = $discount->multicurrency_amount_tva = price2num($remise * $vatrate / 100, 'MT');\n\t\t\t$discount->amount_ttc = $discount->multicurrency_amount_ttc = price2num($discount->amount_ht + $discount->amount_tva, 'MT');\n\n\t\t\t$discount->tva_tx = price2num($vatrate);\n\t\t\t$discount->vat_src_code = $vat_src_code;\n\n\t\t\t$discount->description = $desc;\n\n\t\t\t$result = $discount->create($user);\n\t\t\tif ($result > 0) {\n\t\t\t\treturn $result;\n\t\t\t} else {\n\t\t\t\t$this->error = $discount->error;\n\t\t\t\treturn -3;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * \tReturns amount of included taxes of the current discounts/credits available from the company\n\t *\n\t *\t@param\tUser\t$user\t\t\tFilter on a user author of discounts\n\t * \t@param\tstring\t$filter\t\t\tOther filter\n\t * \t@param\tinteger\t$maxvalue\t\tFilter on max value for discount\n\t * \t@param\tint\t\t$discount_type\t0 => customer discount, 1 => supplier discount\n\t *\t@return\tint\t\t\t\t\t<0 if KO, Credit note amount otherwise\n\t */\n\tpublic function getAvailableDiscounts($user = '', $filter = '', $maxvalue = 0, $discount_type = 0)\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/discount.class.php';\n\n\t\t$discountstatic = new DiscountAbsolute($this->db);\n\t\t$result = $discountstatic->getAvailableDiscounts($this, $user, $filter, $maxvalue, $discount_type);\n\t\tif ($result >= 0) {\n\t\t\treturn $result;\n\t\t} else {\n\t\t\t$this->error = $discountstatic->error;\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *  Return array of sales representatives\n\t *\n\t *  @param\tUser\t\t$user\t\t\tObject user\n\t *  @param\tint\t\t\t$mode\t\t\t0=Array with properties, 1=Array of id.\n\t *  @param\tstring\t\t$sortfield\t\tList of sort fields, separated by comma. Example: 't1.fielda,t2.fieldb'\n\t *  @param\tstring\t\t$sortorder\t\tSort order, separated by comma. Example: 'ASC,DESC';\n\t *  @return array       \t\t\t\tArray of sales representatives of third party\n\t */\n\tpublic function getSalesRepresentatives(User $user, $mode = 0, $sortfield = null, $sortorder = null)\n\t{\n\t\tglobal $conf;\n\n\t\t$reparray = array();\n\n\t\t$sql = \"SELECT DISTINCT u.rowid, u.login, u.lastname, u.firstname, u.office_phone, u.job, u.email, u.statut as status, u.entity, u.photo, u.gender\";\n\t\t$sql .= \", u.office_fax, u.user_mobile, u.personal_mobile\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"societe_commerciaux as sc, \".MAIN_DB_PREFIX.\"user as u\";\n\t\tif (!empty($conf->multicompany->enabled) && !empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE)) {\n\t\t\t$sql .= \", \".MAIN_DB_PREFIX.\"usergroup_user as ug\";\n\t\t\t$sql .= \" WHERE ((ug.fk_user = sc.fk_user\";\n\t\t\t$sql .= \" AND ug.entity = \".$conf->entity.\")\";\n\t\t\t$sql .= \" OR u.admin = 1)\";\n\t\t} else {\n\t\t\t$sql .= \" WHERE entity in (0, \".$conf->entity.\")\";\n\t\t}\n\n\t\t$sql .= \" AND u.rowid = sc.fk_user AND sc.fk_soc = \".$this->id;\n\t\tif (empty($sortfield) && empty($sortorder)) {\n\t\t\t$sortfield = 'u.lastname,u.firstname';\n\t\t\t$sortorder = 'ASC,ASC';\n\t\t}\n\t\t$sql .= $this->db->order($sortfield, $sortorder);\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\tif (empty($mode)) {\n\t\t\t\t\t$reparray[$i]['id'] = $obj->rowid;\n\t\t\t\t\t$reparray[$i]['lastname'] = $obj->lastname;\n\t\t\t\t\t$reparray[$i]['firstname'] = $obj->firstname;\n\t\t\t\t\t$reparray[$i]['email'] = $obj->email;\n\t\t\t\t\t$reparray[$i]['phone'] = $obj->office_phone;\n\t\t\t\t\t$reparray[$i]['office_phone'] = $obj->office_phone;\n\t\t\t\t\t$reparray[$i]['office_fax'] = $obj->office_fax;\n\t\t\t\t\t$reparray[$i]['user_mobile'] = $obj->user_mobile;\n\t\t\t\t\t$reparray[$i]['personal_mobile'] = $obj->personal_mobile;\n\t\t\t\t\t$reparray[$i]['job'] = $obj->job;\n\t\t\t\t\t$reparray[$i]['statut'] = $obj->status; // deprecated\n\t\t\t\t\t$reparray[$i]['status'] = $obj->status;\n\t\t\t\t\t$reparray[$i]['entity'] = $obj->entity;\n\t\t\t\t\t$reparray[$i]['login'] = $obj->login;\n\t\t\t\t\t$reparray[$i]['photo'] = $obj->photo;\n\t\t\t\t\t$reparray[$i]['gender'] = $obj->gender;\n\t\t\t\t} else {\n\t\t\t\t\t$reparray[] = $obj->rowid;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\treturn $reparray;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t * Set the price level\n\t *\n\t * @param \tint\t\t$price_level\tLevel of price\n\t * @param \tUser\t$user\t\t\tUse making change\n\t * @return\tint\t\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function setPriceLevel($price_level, User $user)\n\t{\n\t\tif ($this->id) {\n\t\t\t$now = dol_now();\n\n\t\t\t$sql  = \"UPDATE \".MAIN_DB_PREFIX.\"societe\";\n\t\t\t$sql .= \" SET price_level = \".((int) $price_level);\n\t\t\t$sql .= \" WHERE rowid = \".((int) $this->id);\n\n\t\t\tif (!$this->db->query($sql)) {\n\t\t\t\tdol_print_error($this->db);\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t$sql  = \"INSERT INTO \".MAIN_DB_PREFIX.\"societe_prices\";\n\t\t\t$sql .= \" (datec, fk_soc, price_level, fk_user_author)\";\n\t\t\t$sql .= \" VALUES ('\".$this->db->idate($now).\"', \".$this->id.\", \".((int) $price_level).\", \".$user->id.\")\";\n\n\t\t\tif (!$this->db->query($sql)) {\n\t\t\t\tdol_print_error($this->db);\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 1;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tAdd link to sales representative\n\t *\n\t *\t@param\tUser\t$user\t\tObject user\n\t *\t@param\tint\t\t$commid\t\tId of user\n\t *\t@return\tint\t\t\t\t\t<=0 if KO, >0 if OK\n\t */\n\tpublic function add_commercial(User $user, $commid)\n\t{\n\t\t// phpcs:enable\n\t\t$error = 0;\n\n\t\tif ($this->id > 0 && $commid > 0) {\n\t\t\t$this->db->begin();\n\n\t\t\tif (!$error) {\n\t\t\t\t$sql = \"DELETE FROM  \".MAIN_DB_PREFIX.\"societe_commerciaux\";\n\t\t\t\t$sql .= \" WHERE fk_soc = \".$this->id.\" AND fk_user = \".((int) $commid);\n\n\t\t\t\t$resql = $this->db->query($sql);\n\t\t\t\tif (!$resql) {\n\t\t\t\t\tdol_syslog(get_class($this).\"::add_commercial Error \".$this->db->lasterror());\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"societe_commerciaux\";\n\t\t\t\t$sql .= \" (fk_soc, fk_user)\";\n\t\t\t\t$sql .= \" VALUES (\".$this->id.\", \".$commid.\")\";\n\n\t\t\t\t$resql = $this->db->query($sql);\n\t\t\t\tif (!$resql) {\n\t\t\t\t\tdol_syslog(get_class($this).\"::add_commercial Error \".$this->db->lasterror());\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\t$this->context = array('commercial_modified'=>$commid);\n\n\t\t\t\t$result = $this->call_trigger('COMPANY_LINK_SALE_REPRESENTATIVE', $user);\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\t$this->db->commit();\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\t$this->db->rollback();\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tAdd link to sales representative\n\t *\n\t *\t@param\tUser\t$user\t\tObject user\n\t *\t@param\tint\t\t$commid\t\tId of user\n\t *\t@return\tvoid\n\t */\n\tpublic function del_commercial(User $user, $commid)\n\t{\n\t\t// phpcs:enable\n\t\t$error = 0;\n\t\t$this->context = array('commercial_modified'=>$commid);\n\n\t\t$result = $this->call_trigger('COMPANY_UNLINK_SALE_REPRESENTATIVE', $user);\n\t\tif ($result < 0) {\n\t\t\t$error++;\n\t\t}\n\n\t\tif ($this->id > 0 && $commid > 0) {\n\t\t\t$sql  = \"DELETE FROM  \".MAIN_DB_PREFIX.\"societe_commerciaux \";\n\t\t\t$sql .= \" WHERE fk_soc = \".$this->id.\" AND fk_user = \".((int) $commid);\n\n\t\t\tif (!$this->db->query($sql)) {\n\t\t\t\tdol_syslog(get_class($this).\"::del_commercial Erreur\");\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t *    \tReturn a link on thirdparty (with picto)\n\t *\n\t *\t\t@param\tint\t\t$withpicto\t\t          Add picto into link (0=No picto, 1=Include picto with link, 2=Picto only)\n\t *\t\t@param\tstring\t$option\t\t\t          Target of link ('', 'customer', 'prospect', 'supplier', 'project')\n\t *\t\t@param\tint\t\t$maxlen\t\t\t          Max length of name\n\t *      @param\tint  \t$notooltip\t\t          1=Disable tooltip\n\t *      @param  int     $save_lastsearch_value    -1=Auto, 0=No save of lastsearch_values when clicking, 1=Save lastsearch_values whenclicking\n\t *\t\t@return\tstring\t\t\t\t\t          String with URL\n\t */\n\tpublic function getNomUrl($withpicto = 0, $option = '', $maxlen = 0, $notooltip = 0, $save_lastsearch_value = -1)\n\t{\n\t\tglobal $conf, $langs, $hookmanager;\n\n\t\tif (!empty($conf->dol_no_mouse_hover)) {\n\t\t\t$notooltip = 1; // Force disable tooltips\n\t\t}\n\n\t\t$name = $this->name ? $this->name : $this->nom;\n\n\t\tif (!empty($conf->global->SOCIETE_ON_SEARCH_AND_LIST_GO_ON_CUSTOMER_OR_SUPPLIER_CARD)) {\n\t\t\tif (empty($option) && $this->client > 0) {\n\t\t\t\t$option = 'customer';\n\t\t\t}\n\t\t\tif (empty($option) && $this->fournisseur > 0) {\n\t\t\t\t$option = 'supplier';\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($conf->global->SOCIETE_ADD_REF_IN_LIST) && (!empty($withpicto))) {\n\t\t\t$code = '';\n\t\t\tif (($this->client) && (!empty($this->code_client)) && ($conf->global->SOCIETE_ADD_REF_IN_LIST == 1 || $conf->global->SOCIETE_ADD_REF_IN_LIST == 2)) {\n\t\t\t\t$code = $this->code_client.' - ';\n\t\t\t}\n\n\t\t\tif (($this->fournisseur) && (!empty($this->code_fournisseur)) && ($conf->global->SOCIETE_ADD_REF_IN_LIST == 1 || $conf->global->SOCIETE_ADD_REF_IN_LIST == 3)) {\n\t\t\t\t$code .= $this->code_fournisseur.' - ';\n\t\t\t}\n\n\t\t\tif ($code) {\n\t\t\t\tif ($conf->global->SOCIETE_ADD_REF_IN_LIST == 1) {\n\t\t\t\t\t$name = $code.' '.$name;\n\t\t\t\t} else {\n\t\t\t\t\t$name = $code;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($this->name_alias)) {\n\t\t\t$name .= ' ('.$this->name_alias.')';\n\t\t}\n\n\t\t$result = ''; $label = '';\n\t\t$linkstart = ''; $linkend = '';\n\n\t\tif (!empty($this->logo) && class_exists('Form')) {\n\t\t\t$label .= '<div class=\"photointooltip\">';\n\t\t\t$label .= Form::showphoto('societe', $this, 0, 40, 0, '', 'mini', 0); // Important, we must force height so image will have height tags and if image is inside a tooltip, the tooltip manager can calculate height and position correctly the tooltip.\n\t\t\t$label .= '</div><div style=\"clear: both;\"></div>';\n\t\t} elseif (!empty($this->logo_squarred) && class_exists('Form')) {\n\t\t\t/*$label.= '<div class=\"photointooltip\">';\n\t\t\t$label.= Form::showphoto('societe', $this, 0, 40, 0, 'photowithmargin', 'mini', 0);\t// Important, we must force height so image will have height tags and if image is inside a tooltip, the tooltip manager can calculate height and position correctly the tooltip.\n\t\t\t$label.= '</div><div style=\"clear: both;\"></div>';*/\n\t\t}\n\n\t\t$label .= '<div class=\"centpercent\">';\n\n\t\tif ($option == 'customer' || $option == 'compta' || $option == 'category') {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"Customer\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/comm/card.php?socid='.$this->id;\n\t\t} elseif ($option == 'prospect' && empty($conf->global->SOCIETE_DISABLE_PROSPECTS)) {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"Prospect\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/comm/card.php?socid='.$this->id;\n\t\t} elseif ($option == 'supplier' || $option == 'category_supplier') {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"Supplier\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/fourn/card.php?socid='.$this->id;\n\t\t} elseif ($option == 'agenda') {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"ThirdParty\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/societe/agenda.php?socid='.$this->id;\n\t\t} elseif ($option == 'project') {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"ThirdParty\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/societe/project.php?socid='.$this->id;\n\t\t} elseif ($option == 'margin') {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"ThirdParty\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/margin/tabs/thirdpartyMargins.php?socid='.$this->id.'&type=1';\n\t\t} elseif ($option == 'contact') {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"ThirdParty\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/societe/contact.php?socid='.$this->id;\n\t\t} elseif ($option == 'ban') {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"ThirdParty\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/societe/paymentmodes.php?socid='.$this->id;\n\t\t}\n\n\t\t// By default\n\t\tif (empty($linkstart)) {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"ThirdParty\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/societe/card.php?socid='.$this->id;\n\t\t}\n\t\tif (isset($this->status)) {\n\t\t\t$label .= ' '.$this->getLibStatut(5);\n\t\t}\n\n\t\tif (!empty($this->name)) {\n\t\t\t$label .= '<br><b>'.$langs->trans('Name').':</b> '.dol_escape_htmltag($this->name);\n\t\t\tif (!empty($this->name_alias)) {\n\t\t\t\t$label .= ' ('.dol_escape_htmltag($this->name_alias).')';\n\t\t\t}\n\t\t}\n\t\t$label .= '<br><b>'.$langs->trans('Email').':</b> '.$this->email;\n\t\tif (!empty($this->phone) || !empty($this->fax)) {\n\t\t\t$phonelist = array();\n\t\t\tif ($this->phone) {\n\t\t\t\t$phonelist[] = dol_print_phone($this->phone, $this->country_code, $this->id, 0, '', '&nbsp', 'phone');\n\t\t\t}\n\t\t\tif ($this->fax) {\n\t\t\t\t$phonelist[] = dol_print_phone($this->fax, $this->country_code, $this->id, 0, '', '&nbsp', 'fax');\n\t\t\t}\n\t\t\t$label .= '<br><b>'.$langs->trans('Phone').':</b> '.implode('&nbsp;', $phonelist);\n\t\t}\n\t\tif (!empty($this->address)) {\n\t\t\t$label .= '<br><b>'.$langs->trans(\"Address\").':</b> '.dol_format_address($this, 1, ' ', $langs);\t// Address + country\n\t\t} elseif (!empty($this->country_code)) {\n\t\t\t$label .= '<br><b>'.$langs->trans('Country').':</b> '.$this->country_code;\n\t\t}\n\t\tif (!empty($this->tva_intra) || (!empty($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP) && strpos($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP, 'vatnumber') !== false)) {\n\t\t\t$label .= '<br><b>'.$langs->trans('VATIntra').':</b> '.dol_escape_htmltag($this->tva_intra);\n\t\t}\n\t\tif (!empty($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP)) {\n\t\t\tif (strpos($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP, 'profid1') !== false) {\n\t\t\t\t$label .= '<br><b>'.$langs->trans('ProfId1'.$this->country_code).':</b> '.$this->idprof1;\n\t\t\t}\n\t\t\tif (strpos($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP, 'profid2') !== false) {\n\t\t\t\t$label .= '<br><b>'.$langs->trans('ProfId2'.$this->country_code).':</b> '.$this->idprof2;\n\t\t\t}\n\t\t\tif (strpos($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP, 'profid3') !== false) {\n\t\t\t\t$label .= '<br><b>'.$langs->trans('ProfId3'.$this->country_code).':</b> '.$this->idprof3;\n\t\t\t}\n\t\t\tif (strpos($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP, 'profid4') !== false) {\n\t\t\t\t$label .= '<br><b>'.$langs->trans('ProfId4'.$this->country_code).':</b> '.$this->idprof4;\n\t\t\t}\n\t\t\tif (strpos($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP, 'profid5') !== false) {\n\t\t\t\t$label .= '<br><b>'.$langs->trans('ProfId5'.$this->country_code).':</b> '.$this->idprof5;\n\t\t\t}\n\t\t\tif (strpos($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP, 'profid6') !== false) {\n\t\t\t\t$label .= '<br><b>'.$langs->trans('ProfId6'.$this->country_code).':</b> '.$this->idprof6;\n\t\t\t}\n\t\t}\n\t\tif (!empty($this->code_client) && ($this->client == 1 || $this->client == 3)) {\n\t\t\t$label .= '<br><b>'.$langs->trans('CustomerCode').':</b> '.$this->code_client;\n\t\t}\n\t\tif (!empty($this->code_fournisseur) && $this->fournisseur) {\n\t\t\t$label .= '<br><b>'.$langs->trans('SupplierCode').':</b> '.$this->code_fournisseur;\n\t\t}\n\t\tif (!empty($conf->accounting->enabled) && ($this->client == 1 || $this->client == 3)) {\n\t\t\t$label .= '<br><b>'.$langs->trans('CustomerAccountancyCode').':</b> '.($this->code_compta ? $this->code_compta : $this->code_compta_client);\n\t\t}\n\t\tif (!empty($conf->accounting->enabled) && $this->fournisseur) {\n\t\t\t$label .= '<br><b>'.$langs->trans('SupplierAccountancyCode').':</b> '.$this->code_compta_fournisseur;\n\t\t}\n\t\t$label .= '</div>';\n\n\t\t// Add type of canvas\n\t\t$linkstart .= (!empty($this->canvas) ? '&canvas='.$this->canvas : '');\n\t\t// Add param to save lastsearch_values or not\n\t\t$add_save_lastsearch_values = ($save_lastsearch_value == 1 ? 1 : 0);\n\t\tif ($save_lastsearch_value == -1 && preg_match('/list\\.php/', $_SERVER[\"PHP_SELF\"])) {\n\t\t\t$add_save_lastsearch_values = 1;\n\t\t}\n\t\tif ($add_save_lastsearch_values) {\n\t\t\t$linkstart .= '&save_lastsearch_values=1';\n\t\t}\n\t\t$linkstart .= '\"';\n\n\t\t$linkclose = '';\n\t\tif (empty($notooltip)) {\n\t\t\tif (!empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\t\t$label = $langs->trans(\"ShowCompany\");\n\t\t\t\t$linkclose .= ' alt=\"'.dol_escape_htmltag($label, 1).'\"';\n\t\t\t}\n\t\t\t$linkclose .= ' title=\"'.dol_escape_htmltag($label, 1).'\"';\n\t\t\t$linkclose .= ' class=\"classfortooltip refurl\"';\n\n\t\t\t/*\n\t\t\t$hookmanager->initHooks(array('thirdpartydao'));\n\t\t\t$parameters=array('id'=>$this->id);\n\t\t\t$reshook=$hookmanager->executeHooks('getnomurltooltip',$parameters,$this,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t\tif ($reshook > 0) $linkclose = $hookmanager->resPrint;\n\t\t\t*/\n\t\t}\n\t\t$linkstart .= $linkclose.'>';\n\t\t$linkend = '</a>';\n\n\t\tglobal $user;\n\t\tif (!$user->rights->societe->client->voir && $user->socid > 0 && $this->id != $user->socid) {\n\t\t\t$linkstart = '';\n\t\t\t$linkend = '';\n\t\t}\n\n\t\t$result .= $linkstart;\n\t\tif ($withpicto) {\n\t\t\t$result .= img_object(($notooltip ? '' : $label), ($this->picto ? $this->picto : 'generic'), ($notooltip ? (($withpicto != 2) ? 'class=\"paddingright\"' : '') : 'class=\"'.(($withpicto != 2) ? 'paddingright ' : '').'classfortooltip\"'), 0, 0, $notooltip ? 0 : 1);\n\t\t}\n\t\tif ($withpicto != 2) {\n\t\t\t$result .= dol_escape_htmltag($maxlen ? dol_trunc($name, $maxlen) : $name);\n\t\t}\n\t\t$result .= $linkend;\n\n\t\tglobal $action;\n\t\t$hookmanager->initHooks(array('thirdpartydao'));\n\t\t$parameters = array(\n\t\t\t'id'=>$this->id,\n\t\t\t'getnomurl'=>$result,\n\t\t\t'withpicto '=> $withpicto,\n\t\t\t'option'=> $option,\n\t\t\t'maxlen'=> $maxlen,\n\t\t\t'notooltip'=> $notooltip,\n\t\t\t'save_lastsearch_value'=> $save_lastsearch_value\n\t\t);\n\t\t$reshook = $hookmanager->executeHooks('getNomUrl', $parameters, $this, $action); // Note that $action and $object may have been modified by some hooks\n\t\tif ($reshook > 0) {\n\t\t\t$result = $hookmanager->resPrint;\n\t\t} else {\n\t\t\t$result .= $hookmanager->resPrint;\n\t\t}\n\n\t\treturn $result;\n\t}\n\n\t/**\n\t *    \tReturn link(s) on type of thirdparty (with picto)\n\t *\n\t *\t\t@param\tint\t\t$withpicto\t\t          Add picto into link (0=No picto, 1=Include picto with link, 2=Picto only)\n\t *\t\t@param\tstring\t$option\t\t\t\t\t  ''=All\n\t *      @param\tint  \t$notooltip\t\t          1=Disable tooltip\n\t *\t\t@return\tstring\t\t\t\t\t          String with URL\n\t */\n\tpublic function getTypeUrl($withpicto = 0, $option = '', $notooltip = 0)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$s = '';\n\t\tif (empty($option) || preg_match('/prospect/', $option)) {\n\t\t\tif (($this->client == 2 || $this->client == 3) && empty($conf->global->SOCIETE_DISABLE_PROSPECTS)) {\n\t\t\t\t$s .= '<a class=\"customer-back opacitymedium\" title=\"'.$langs->trans(\"Prospect\").'\" href=\"'.DOL_URL_ROOT.'/comm/card.php?socid='.$this->id.'\">'.dol_substr($langs->trans(\"Prospect\"), 0, 1).'</a>';\n\t\t\t}\n\t\t}\n\t\tif (empty($option) || preg_match('/customer/', $option)) {\n\t\t\tif (($this->client == 1 || $this->client == 3) && empty($conf->global->SOCIETE_DISABLE_CUSTOMERS)) {\n\t\t\t\t$s .= '<a class=\"customer-back\" title=\"'.$langs->trans(\"Customer\").'\" href=\"'.DOL_URL_ROOT.'/comm/card.php?socid='.$this->id.'\">'.dol_substr($langs->trans(\"Customer\"), 0, 1).'</a>';\n\t\t\t}\n\t\t}\n\t\tif (empty($option) || preg_match('/supplier/', $option)) {\n\t\t\tif (((!empty($conf->fournisseur->enabled) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || !empty($conf->supplier_order->enabled) || !empty($conf->supplier_invoice->enabled)) && $this->fournisseur) {\n\t\t\t\t$s .= '<a class=\"vendor-back\" title=\"'.$langs->trans(\"Supplier\").'\" href=\"'.DOL_URL_ROOT.'/fourn/card.php?socid='.$this->id.'\">'.dol_substr($langs->trans(\"Supplier\"), 0, 1).'</a>';\n\t\t\t}\n\t\t}\n\t\treturn $s;\n\t}\n\n\n\t/**\n\t *    Return label of status (activity, closed)\n\t *\n\t *    @param  \tint\t\t$mode       0=long label, 1=short label, 2=Picto + short label, 3=Picto, 4=Picto + long label, 5=Short label + Picto, 6=Long label + Picto\n\t *    @return   string     \t   \t\tLabel of status\n\t */\n\tpublic function getLibStatut($mode = 0)\n\t{\n\t\treturn $this->LibStatut($this->status, $mode);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return the label of a given status\n\t *\n\t *  @param\tint\t\t$status         Status id\n\t *  @param\tint\t\t$mode           0=Long label, 1=Short label, 2=Picto + Short label, 3=Picto, 4=Picto + Long label, 5=Short label + Picto, 6=Long label + Picto\n\t *  @return\tstring          \t\tStatus label\n\t */\n\tpublic function LibStatut($status, $mode = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\t$langs->load('companies');\n\n\t\t$statusType = 'status4';\n\t\tif ($status == 0) {\n\t\t\t$statusType = 'status6';\n\t\t}\n\n\t\tif (empty($this->labelStatus) || empty($this->labelStatusShort)) {\n\t\t\t$this->labelStatus[0] = $langs->trans(\"ActivityCeased\");\n\t\t\t$this->labelStatus[1] = $langs->trans(\"InActivity\");\n\t\t\t$this->labelStatusShort[0] = $langs->trans(\"ActivityCeased\");\n\t\t\t$this->labelStatusShort[1] = $langs->trans(\"InActivity\");\n\t\t}\n\n\t\treturn dolGetStatus($this->labelStatus[$status], $this->labelStatusShort[$status], '', $statusType, $mode);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Return list of contacts emails existing for third party\n\t *\n\t *\t  @param\t  int\t\t$addthirdparty\t\t1=Add also a record for thirdparty email\n\t *    @return     array       \t\t\t\t\tArray of contacts emails\n\t */\n\tpublic function thirdparty_and_contact_email_array($addthirdparty = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$contact_emails = $this->contact_property_array('email', 1);\n\t\tif ($this->email && $addthirdparty) {\n\t\t\tif (empty($this->name)) {\n\t\t\t\t$this->name = $this->nom;\n\t\t\t}\n\t\t\t$contact_emails['thirdparty'] = $langs->transnoentitiesnoconv(\"ThirdParty\").': '.dol_trunc($this->name, 16).\" <\".$this->email.\">\";\n\t\t}\n\t\t//var_dump($contact_emails)\n\t\treturn $contact_emails;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Return list of contacts mobile phone existing for third party\n\t *\n\t *    @return     array       Array of contacts emails\n\t */\n\tpublic function thirdparty_and_contact_phone_array()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$contact_phone = $this->contact_property_array('mobile');\n\n\t\tif (!empty($this->phone)) {\t// If a phone of thirdparty is defined, we add it ot mobile of contacts\n\t\t\tif (empty($this->name)) {\n\t\t\t\t$this->name = $this->nom;\n\t\t\t}\n\t\t\t// TODO: Tester si tel non deja present dans tableau contact\n\t\t\t$contact_phone['thirdparty'] = $langs->transnoentitiesnoconv(\"ThirdParty\").': '.dol_trunc($this->name, 16).\" <\".$this->phone.\">\";\n\t\t}\n\t\treturn $contact_phone;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return list of contacts emails or mobile existing for third party\n\t *\n\t *  @param\tstring\t$mode       \t\t'email' or 'mobile'\n\t * \t@param\tint\t\t$hidedisabled\t\t1=Hide contact if disabled\n\t *  @return array       \t\t\t\tArray of contacts emails or mobile. Example: array(id=>'Name <email>')\n\t */\n\tpublic function contact_property_array($mode = 'email', $hidedisabled = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$contact_property = array();\n\n\n\t\t$sql = \"SELECT rowid, email, statut as status, phone_mobile, lastname, poste, firstname\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"socpeople\";\n\t\t$sql .= \" WHERE fk_soc = \".$this->id;\n\t\t$sql .= \" ORDER BY lastname, firstname\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$nump = $this->db->num_rows($resql);\n\t\t\tif ($nump) {\n\t\t\t\t$sepa = \"(\"; $sepb = \")\";\n\t\t\t\tif ($mode == 'email') {\n\t\t\t\t\t//$sepa=\"&lt;\"; $sepb=\"&gt;\";\n\t\t\t\t\t$sepa = \"<\"; $sepb = \">\";\n\t\t\t\t}\n\t\t\t\t$i = 0;\n\t\t\t\twhile ($i < $nump) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\tif ($mode == 'email') {\n\t\t\t\t\t\t$property = $obj->email;\n\t\t\t\t\t} elseif ($mode == 'mobile') {\n\t\t\t\t\t\t$property = $obj->phone_mobile;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$property = $obj->$mode;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Show all contact. If hidedisabled is 1, showonly contacts with status = 1\n\t\t\t\t\tif ($obj->status == 1 || empty($hidedisabled)) {\n\t\t\t\t\t\tif (empty($property)) {\n\t\t\t\t\t\t\tif ($mode == 'email') {\n\t\t\t\t\t\t\t\t$property = $langs->transnoentitiesnoconv(\"NoEMail\");\n\t\t\t\t\t\t\t} elseif ($mode == 'mobile') {\n\t\t\t\t\t\t\t\t$property = $langs->transnoentitiesnoconv(\"NoMobilePhone\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!empty($obj->poste)) {\n\t\t\t\t\t\t\t$contact_property[$obj->rowid] = trim(dolGetFirstLastname($obj->firstname, $obj->lastname)).($obj->poste ? \" - \".$obj->poste : \"\").(($mode != 'poste' && $property) ? \" \".$sepa.$property.$sepb : '');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$contact_property[$obj->rowid] = trim(dolGetFirstLastname($obj->firstname, $obj->lastname)).(($mode != 'poste' && $property) ? \" \".$sepa.$property.$sepb : '');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t\treturn $contact_property;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Returns the contact list of this company\n\t *\n\t *    @return     array      array of contacts\n\t */\n\tpublic function contact_array()\n\t{\n\t\t// phpcs:enable\n\t\t$contacts = array();\n\n\t\t$sql = \"SELECT rowid, lastname, firstname FROM \".MAIN_DB_PREFIX.\"socpeople WHERE fk_soc = \".$this->id;\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$nump = $this->db->num_rows($resql);\n\t\t\tif ($nump) {\n\t\t\t\t$i = 0;\n\t\t\t\twhile ($i < $nump) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$contacts[$obj->rowid] = dolGetFirstLastname($obj->firstname, $obj->lastname);\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t\treturn $contacts;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Returns the contact list of this company\n\t *\n\t *    @return    array    $contacts    array of contacts\n\t */\n\tpublic function contact_array_objects()\n\t{\n\t\t// phpcs:enable\n\t\trequire_once DOL_DOCUMENT_ROOT.'/contact/class/contact.class.php';\n\t\t$contacts = array();\n\n\t\t$sql = \"SELECT rowid FROM \".MAIN_DB_PREFIX.\"socpeople WHERE fk_soc = \".$this->id;\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$nump = $this->db->num_rows($resql);\n\t\t\tif ($nump) {\n\t\t\t\t$i = 0;\n\t\t\t\twhile ($i < $nump) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$contact = new Contact($this->db);\n\t\t\t\t\t$contact->fetch($obj->rowid);\n\t\t\t\t\t$contacts[] = $contact;\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t\treturn $contacts;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return property of contact from its id\n\t *\n\t *  @param\tint\t\t$rowid      id of contact\n\t *  @param  string\t$mode       'email' or 'mobile'\n\t *  @return string  \t\t\tEmail of contact with format: \"Full name <email>\"\n\t */\n\tpublic function contact_get_property($rowid, $mode)\n\t{\n\t\t// phpcs:enable\n\t\t$contact_property = '';\n\n\t\tif (empty($rowid)) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$sql = \"SELECT rowid, email, phone_mobile, lastname, firstname\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"socpeople\";\n\t\t$sql .= \" WHERE rowid = \".((int) $rowid);\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$nump = $this->db->num_rows($resql);\n\n\t\t\tif ($nump) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\tif ($mode == 'email') {\n\t\t\t\t\t$contact_property = dol_string_nospecial(dolGetFirstLastname($obj->firstname, $obj->lastname), ' ', array(\",\")).\" <\".$obj->email.\">\";\n\t\t\t\t} elseif ($mode == 'mobile') {\n\t\t\t\t\t$contact_property = $obj->phone_mobile;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $contact_property;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return bank number property of thirdparty (label or rum)\n\t *\n\t *\t@param\tstring\t$mode\t'label' or 'rum' or 'format'\n\t *  @return\tstring\t\t\tBank label or RUM or '' if no bank account found\n\t */\n\tpublic function display_rib($mode = 'label')\n\t{\n\t\t// phpcs:enable\n\t\trequire_once DOL_DOCUMENT_ROOT.'/societe/class/companybankaccount.class.php';\n\n\t\t$bac = new CompanyBankAccount($this->db);\n\t\t$bac->fetch(0, $this->id);\n\n\t\tif ($bac->id > 0) {\t\t// If a bank account has been found for company $this->id\n\t\t\tif ($mode == 'label') {\n\t\t\t\treturn $bac->getRibLabel(true);\n\t\t\t} elseif ($mode == 'rum') {\n\t\t\t\tif (empty($bac->rum)) {\n\t\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/compta/prelevement/class/bonprelevement.class.php';\n\t\t\t\t\t$prelevement = new BonPrelevement($this->db);\n\t\t\t\t\t$bac->fetch_thirdparty();\n\t\t\t\t\t$bac->rum = $prelevement->buildRumNumber($bac->thirdparty->code_client, $bac->datec, $bac->id);\n\t\t\t\t}\n\t\t\t\treturn $bac->rum;\n\t\t\t} elseif ($mode == 'format') {\n\t\t\t\treturn $bac->frstrecur;\n\t\t\t} else {\n\t\t\t\treturn 'BadParameterToFunctionDisplayRib';\n\t\t\t}\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * Return Array of RIB\n\t *\n\t * @return     array|int        0 if KO, Array of CompanyBanckAccount if OK\n\t */\n\tpublic function get_all_rib()\n\t{\n\t\t// phpcs:enable\n\t\trequire_once DOL_DOCUMENT_ROOT.'/societe/class/companybankaccount.class.php';\n\t\t$sql = \"SELECT rowid FROM \".MAIN_DB_PREFIX.\"societe_rib WHERE type='ban' AND fk_soc = \".$this->id;\n\t\t$result = $this->db->query($sql);\n\t\tif (!$result) {\n\t\t\t$this->error++;\n\t\t\t$this->errors[] = $this->db->lasterror;\n\t\t\treturn 0;\n\t\t} else {\n\t\t\t$num_rows = $this->db->num_rows($result);\n\t\t\t$rib_array = array();\n\t\t\tif ($num_rows) {\n\t\t\t\twhile ($obj = $this->db->fetch_object($result)) {\n\t\t\t\t\t$rib = new CompanyBankAccount($this->db);\n\t\t\t\t\t$rib->fetch($obj->rowid);\n\t\t\t\t\t$rib_array[] = $rib;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $rib_array;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Assigns a customer code from the code control module.\n\t *  Return value is stored into this->code_client\n\t *\n\t *\t@param\tSociete\t\t$objsoc\t\tObject thirdparty\n\t *\t@param\tint\t\t\t$type\t\tShould be 0 to say customer\n\t *  @return void\n\t */\n\tpublic function get_codeclient($objsoc = 0, $type = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\t\tif (!empty($conf->global->SOCIETE_CODECLIENT_ADDON)) {\n\t\t\t$module = $conf->global->SOCIETE_CODECLIENT_ADDON;\n\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$mod = new $module();\n\n\t\t\t$this->code_client = $mod->getNextValue($objsoc, $type);\n\t\t\t$this->prefixCustomerIsRequired = $mod->prefixIsRequired;\n\n\t\t\tdol_syslog(get_class($this).\"::get_codeclient code_client=\".$this->code_client.\" module=\".$module);\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Assigns a vendor code from the code control module.\n\t *  Return value is stored into this->code_fournisseur\n\t *\n\t *\t@param\tSociete\t\t$objsoc\t\tObject thirdparty\n\t *\t@param\tint\t\t\t$type\t\tShould be 1 to say supplier\n\t *  @return void\n\t */\n\tpublic function get_codefournisseur($objsoc = 0, $type = 1)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\t\tif (!empty($conf->global->SOCIETE_CODECLIENT_ADDON)) {\n\t\t\t$module = $conf->global->SOCIETE_CODECLIENT_ADDON;\n\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$mod = new $module();\n\n\t\t\t$this->code_fournisseur = $mod->getNextValue($objsoc, $type);\n\n\t\t\tdol_syslog(get_class($this).\"::get_codefournisseur code_fournisseur=\".$this->code_fournisseur.\" module=\".$module);\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Check if a client code is editable based on the parameters of the\n\t *    code control module.\n\t *\n\t *    @return     int\t\t0=No, 1=Yes\n\t */\n\tpublic function codeclient_modifiable()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\t\tif (!empty($conf->global->SOCIETE_CODECLIENT_ADDON)) {\n\t\t\t$module = $conf->global->SOCIETE_CODECLIENT_ADDON;\n\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$mod = new $module();\n\n\t\t\tdol_syslog(get_class($this).\"::codeclient_modifiable code_client=\".$this->code_client.\" module=\".$module);\n\t\t\tif ($mod->code_modifiable_null && !$this->code_client) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif ($mod->code_modifiable_invalide && $this->check_codeclient() < 0) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif ($mod->code_modifiable) {\n\t\t\t\treturn 1; // A mettre en dernier\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Check if a vendor code is editable in the code control module configuration\n\t *\n\t *    @return     int\t\t0=No, 1=Yes\n\t */\n\tpublic function codefournisseur_modifiable()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\t\tif (!empty($conf->global->SOCIETE_CODECLIENT_ADDON)) {\n\t\t\t$module = $conf->global->SOCIETE_CODECLIENT_ADDON;\n\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$mod = new $module();\n\n\t\t\tdol_syslog(get_class($this).\"::codefournisseur_modifiable code_founisseur=\".$this->code_fournisseur.\" module=\".$module);\n\t\t\tif ($mod->code_modifiable_null && !$this->code_fournisseur) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif ($mod->code_modifiable_invalide && $this->check_codefournisseur() < 0) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif ($mod->code_modifiable) {\n\t\t\t\treturn 1; // A mettre en dernier\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Check customer code\n\t *\n\t *  @return     int\t\t\t\t0 if OK\n\t * \t\t\t\t\t\t\t\t-1 ErrorBadCustomerCodeSyntax\n\t * \t\t\t\t\t\t\t\t-2 ErrorCustomerCodeRequired\n\t * \t\t\t\t\t\t\t\t-3 ErrorCustomerCodeAlreadyUsed\n\t * \t\t\t\t\t\t\t\t-4 ErrorPrefixRequired\n\t * \t\t\t\t\t\t\t\t-5 NotConfigured - Setup empty so any value may be ok or not\n\t * \t\t\t\t\t\t\t\t-6 Other (see this->error)\n\t */\n\tpublic function check_codeclient()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\t\tif (!empty($conf->global->SOCIETE_CODECLIENT_ADDON)) {\n\t\t\t$module = $conf->global->SOCIETE_CODECLIENT_ADDON;\n\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$mod = new $module();\n\n\t\t\tdol_syslog(get_class($this).\"::check_codeclient code_client=\".$this->code_client.\" module=\".$module);\n\t\t\t$result = $mod->verif($this->db, $this->code_client, $this, 0);\n\t\t\tif ($result) {\t// If error\n\t\t\t\t$this->error = $mod->error;\n\t\t\t\t$this->errors = $mod->errors;\n\t\t\t}\n\t\t\treturn $result;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Check supplier code\n\t *\n\t *    @return     int\t\t0 if OK\n\t * \t\t\t\t\t\t\t-1 ErrorBadCustomerCodeSyntax\n\t * \t\t\t\t\t\t\t-2 ErrorCustomerCodeRequired\n\t * \t\t\t\t\t\t\t-3 ErrorCustomerCodeAlreadyUsed\n\t * \t\t\t\t\t\t\t-4 ErrorPrefixRequired\n\t * \t\t\t\t\t\t\t-5 NotConfigured - Setup empty so any value may be ok or not\n\t * \t\t\t\t\t\t\t-6 Other (see this->error)\n\t */\n\tpublic function check_codefournisseur()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\t\tif (!empty($conf->global->SOCIETE_CODECLIENT_ADDON)) {\n\t\t\t$module = $conf->global->SOCIETE_CODECLIENT_ADDON;\n\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$mod = new $module();\n\n\t\t\tdol_syslog(get_class($this).\"::check_codefournisseur code_fournisseur=\".$this->code_fournisseur.\" module=\".$module);\n\t\t\t$result = $mod->verif($this->db, $this->code_fournisseur, $this, 1);\n\t\t\tif ($result) {\t// If error\n\t\t\t\t$this->error = $mod->error;\n\t\t\t\t$this->errors = $mod->errors;\n\t\t\t}\n\t\t\treturn $result;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    \tAssigns a accounting code from the accounting code module.\n\t *      Computed value is stored into this->code_compta or this->code_compta_fournisseur according to $type.\n\t *      May be identical to the one entered or generated automatically. Currently, only the automatic generation is implemented.\n\t *\n\t *    \t@param\tstring\t$type\t\tType of thirdparty ('customer' or 'supplier')\n\t *\t\t@return\tint\t\t\t\t\t0 if OK, <0 if $type is not valid\n\t */\n\tpublic function get_codecompta($type)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\n\t\tif (!empty($conf->global->SOCIETE_CODECOMPTA_ADDON)) {\n\t\t\t$res = false;\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$conf->global->SOCIETE_CODECOMPTA_ADDON.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($res) {\n\t\t\t\t$classname = $conf->global->SOCIETE_CODECOMPTA_ADDON;\n\t\t\t\t$mod = new $classname;\n\n\t\t\t\t// Set code count in $mod->code\n\t\t\t\t$result = $mod->get_code($this->db, $this, $type);\n\n\t\t\t\tif ($type == 'customer') {\n\t\t\t\t\t$this->code_compta = $mod->code;\n\t\t\t\t} elseif ($type == 'supplier') {\n\t\t\t\t\t$this->code_compta_fournisseur = $mod->code;\n\t\t\t\t}\n\n\t\t\t\treturn $result;\n\t\t\t} else {\n\t\t\t\t$this->error = 'ErrorAccountancyCodeNotDefined';\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t} else {\n\t\t\tif ($type == 'customer') {\n\t\t\t\t$this->code_compta = '';\n\t\t\t} elseif ($type == 'supplier') {\n\t\t\t\t$this->code_compta_fournisseur = '';\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t *    Define parent commany of current company\n\t *\n\t *    @param\tint\t\t$id     Id of thirdparty to set or '' to remove\n\t *    @return\tint     \t\t<0 if KO, >0 if OK\n\t */\n\tpublic function setParent($id)\n\t{\n\t\tdol_syslog(get_class($this).'::setParent', LOG_DEBUG);\n\n\t\tif ($this->id) {\n\t\t\t// Check if the id we want to add as parent has not already one parent that is the current id we try to update\n\t\t\tif ($id > 0) {\n\t\t\t\t$sameparent\t= $this->validateFamilyTree($id, $this->id, 0);\n\t\t\t\tif ($sameparent < 0) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif ($sameparent == 1) {\n\t\t\t\t\tsetEventMessages('ParentCompanyToAddIsAlreadyAChildOfModifiedCompany', null, 'warnings');\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql = 'UPDATE '.MAIN_DB_PREFIX.'societe SET parent = '.($id > 0 ? $id : 'null').' WHERE rowid = '.((int) $this->id);\n\n\t\t\t$resql\t= $this->db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$this->parent = $id;\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *    Check if a thirdparty $idchild is or not inside the parents (or grand parents) of another thirdparty id $idparent.\n\t *\n\t *    @param\tint\t\t$idparent\tId of thirdparty to check\n\t *    @param\tint\t\t$idchild\tId of thirdparty to compare to\n\t *    @param    int     $counter    Counter to protect against infinite loops\n\t *    @return\tint     \t\t\t<0 if KO, 0 if OK or 1 if at some level a parent company was the child to compare to\n\t */\n\tpublic function validateFamilyTree($idparent, $idchild, $counter = 0)\n\t{\n\t\tif ($counter > 100) {\n\t\t\tdol_syslog(\"Too high level of parent - child for company. May be an infinite loop ?\", LOG_WARNING);\n\t\t}\n\n\t\t$sql = 'SELECT s.parent';\n\t\t$sql .= ' FROM '.MAIN_DB_PREFIX.'societe as s';\n\t\t$sql .= ' WHERE rowid = '.$idparent;\n\t\t$resql\t= $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj\t= $this->db->fetch_object($resql);\n\n\t\t\tif ($obj->parent == '')\t{\n\t\t\t\treturn 0;\n\t\t\t} elseif ($obj->parent == $idchild)\t{\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\t$sameparent\t= $this->validateFamilyTree($obj->parent, $idchild, ($counter + 1));\n\t\t\t}\n\t\t\treturn $sameparent;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Returns if a profid sould be verified to be unique\n\t *\n\t *  @param\tint\t\t$idprof\t\t1,2,3,4,5,6 (Example: 1=siren, 2=siret, 3=naf, 4=rcs/rm, 5=eori, 6=idprof6)\n\t *  @return boolean         \ttrue if the ID must be unique\n\t */\n\tpublic function id_prof_verifiable($idprof)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\n\t\tswitch ($idprof) {\n\t\t\tcase 1:\n\t\t\t\t$ret = (empty($conf->global->SOCIETE_IDPROF1_UNIQUE) ? false : true);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t$ret = (empty($conf->global->SOCIETE_IDPROF2_UNIQUE) ? false : true);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t$ret = (empty($conf->global->SOCIETE_IDPROF3_UNIQUE) ? false : true);\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\t$ret = (empty($conf->global->SOCIETE_IDPROF4_UNIQUE) ? false : true);\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\t$ret = (empty($conf->global->SOCIETE_IDPROF5_UNIQUE) ? false : true);\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\t$ret = (empty($conf->global->SOCIETE_IDPROF6_UNIQUE) ? false : true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$ret = false;\n\t\t}\n\n\t\treturn $ret;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Verify if a profid exists into database for others thirds\n\t *\n\t *    @param\tstring\t$idprof\t\t'idprof1','idprof2','idprof3','idprof4','idprof5','idprof6','email' (Example: idprof1=siren, idprof2=siret, idprof3=naf, idprof4=rcs/rm)\n\t *    @param\tstring\t$value\t\tValue of profid\n\t *    @param\tint\t\t$socid\t\tId of thirdparty to exclude (if update)\n\t *    @return   boolean\t\t\t\tTrue if exists, False if not\n\t */\n\tpublic function id_prof_exists($idprof, $value, $socid = 0)\n\t{\n\t\t// phpcs:enable\n\t\t$field = $idprof;\n\n\t\tswitch ($idprof) {\t// For backward compatibility\n\t\t\tcase '1':\n\t\t\tcase 'idprof1':\n\t\t\t\t$field = \"siren\";\n\t\t\t\tbreak;\n\t\t\tcase '2':\n\t\t\tcase 'idprof2':\n\t\t\t\t$field = \"siret\";\n\t\t\t\tbreak;\n\t\t\tcase '3':\n\t\t\tcase 'idprof3':\n\t\t\t\t$field = \"ape\";\n\t\t\t\tbreak;\n\t\t\tcase '4':\n\t\t\tcase 'idprof4':\n\t\t\t\t$field = \"idprof4\";\n\t\t\t\tbreak;\n\t\t\tcase '5':\n\t\t\t\t$field = \"idprof5\";\n\t\t\t\tbreak;\n\t\t\tcase '6':\n\t\t\t\t$field = \"idprof6\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\t //Verify duplicate entries\n\t\t$sql = \"SELECT COUNT(*) as idprof FROM \".MAIN_DB_PREFIX.\"societe WHERE \".$field.\" = '\".$this->db->escape($value).\"' AND entity IN (\".getEntity('societe').\")\";\n\t\tif ($socid) {\n\t\t\t$sql .= \" AND rowid <> \".$socid;\n\t\t}\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t$count = $obj->idprof;\n\t\t} else {\n\t\t\t$count = 0;\n\t\t\tprint $this->db->error();\n\t\t}\n\t\t$this->db->free($resql);\n\n\t\tif ($count > 0) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Check the validity of a professional identifier according to the country of the company (siren, siret, ...)\n\t *\n\t *  @param\tint\t\t\t$idprof         1,2,3,4 (Exemple: 1=siren,2=siret,3=naf,4=rcs/rm)\n\t *  @param  Societe\t\t$soc            Objet societe\n\t *  @return int             \t\t\t<=0 if KO, >0 if OK\n\t *  TODO better to have this in a lib than into a business class\n\t */\n\tpublic function id_prof_check($idprof, $soc)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\n\t\t$ok = 1;\n\n\t\tif (!empty($conf->global->MAIN_DISABLEPROFIDRULES)) {\n\t\t\treturn 1;\n\t\t}\n\n\t\t// Check SIREN if country FR\n\t\tif ($idprof == 1 && $soc->country_code == 'FR') {\n\t\t\t$chaine = trim($this->idprof1);\n\t\t\t$chaine = preg_replace('/(\\s)/', '', $chaine);\n\n\t\t\tif (!is_numeric($chaine)) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (dol_strlen($chaine) != 9) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// on prend chaque chiffre un par un\n\t\t\t// si son index (position dans la cha\u00eene en commence \u00e0 0 au premier caract\u00e8re) est impair\n\t\t\t// on double sa valeur et si cette derni\u00e8re est sup\u00e9rieure \u00e0 9, on lui retranche 9\n\t\t\t// on ajoute cette valeur \u00e0 la somme totale\n\t\t\t$sum = 0;\n\t\t\tfor ($index = 0; $index < 9; $index++) {\n\t\t\t\t$number = (int) $chaine[$index];\n\t\t\t\tif (($index % 2) != 0) {\n\t\t\t\t\tif (($number *= 2) > 9) {\n\t\t\t\t\t\t$number -= 9;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$sum += $number;\n\t\t\t}\n\n\t\t\t// le num\u00e9ro est valide si la somme des chiffres est multiple de 10\n\t\t\tif (($sum % 10) != 0) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\t// Verifie SIRET si pays FR\n\t\tif ($idprof == 2 && $soc->country_code == 'FR') {\n\t\t\t$chaine = trim($this->idprof2);\n\t\t\t$chaine = preg_replace('/(\\s)/', '', $chaine);\n\n\t\t\tif (!is_numeric($chaine)) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (dol_strlen($chaine) != 14) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// on prend chaque chiffre un par un\n\t\t\t// si son index (position dans la cha\u00eene en commence \u00e0 0 au premier caract\u00e8re) est pair\n\t\t\t// on double sa valeur et si cette derni\u00e8re est sup\u00e9rieure \u00e0 9, on lui retranche 9\n\t\t\t// on ajoute cette valeur \u00e0 la somme totale\n\t\t\t$sum = 0;\n\t\t\tfor ($index = 0; $index < 14; $index++) {\n\t\t\t\t$number = (int) $chaine[$index];\n\t\t\t\tif (($index % 2) == 0) {\n\t\t\t\t\tif (($number *= 2) > 9) {\n\t\t\t\t\t\t$number -= 9;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$sum += $number;\n\t\t\t}\n\n\t\t\t// le num\u00e9ro est valide si la somme des chiffres est multiple de 10\n\t\t\tif (($sum % 10) != 0) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\t//Verify CIF/NIF/NIE if pays ES\n\t\t//Returns: 1 if NIF ok, 2 if CIF ok, 3 if NIE ok, -1 if NIF bad, -2 if CIF bad, -3 if NIE bad, 0 if unexpected bad\n\t\tif ($idprof == 1 && $soc->country_code == 'ES') {\n\t\t\t$string = trim($this->idprof1);\n\t\t\t$string = preg_replace('/(\\s)/', '', $string);\n\t\t\t$string = strtoupper($string);\n\n\t\t\t//Check format\n\t\t\tif (!preg_match('/((^[A-Z]{1}[0-9]{7}[A-Z0-9]{1}$|^[T]{1}[A-Z0-9]{8}$)|^[0-9]{8}[A-Z]{1}$)/', $string)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t$num = array();\n\t\t\tfor ($i = 0; $i < 9; $i++) {\n\t\t\t\t$num[$i] = substr($string, $i, 1);\n\t\t\t}\n\n\t\t\t//Check NIF\n\t\t\tif (preg_match('/(^[0-9]{8}[A-Z]{1}$)/', $string)) {\n\t\t\t\tif ($num[8] == substr('TRWAGMYFPDXBNJZSQVHLCKE', substr($string, 0, 8) % 23, 1)) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//algorithm checking type code CIF\n\t\t\t$sum = $num[2] + $num[4] + $num[6];\n\t\t\tfor ($i = 1; $i < 8; $i += 2) {\n\t\t\t\t$sum += intval(substr((2 * $num[$i]), 0, 1)) + intval(substr((2 * $num[$i]), 1, 1));\n\t\t\t}\n\t\t\t$n = 10 - substr($sum, strlen($sum) - 1, 1);\n\n\t\t\t//Chek special NIF\n\t\t\tif (preg_match('/^[KLM]{1}/', $string)) {\n\t\t\t\tif ($num[8] == chr(64 + $n) || $num[8] == substr('TRWAGMYFPDXBNJZSQVHLCKE', substr($string, 1, 8) % 23, 1)) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Check CIF\n\t\t\tif (preg_match('/^[ABCDEFGHJNPQRSUVW]{1}/', $string)) {\n\t\t\t\tif ($num[8] == chr(64 + $n) || $num[8] == substr($n, strlen($n) - 1, 1)) {\n\t\t\t\t\treturn 2;\n\t\t\t\t} else {\n\t\t\t\t\treturn -2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Check NIE T\n\t\t\tif (preg_match('/^[T]{1}/', $string)) {\n\t\t\t\tif ($num[8] == preg_match('/^[T]{1}[A-Z0-9]{8}$/', $string)) {\n\t\t\t\t\treturn 3;\n\t\t\t\t} else {\n\t\t\t\t\treturn -3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Check NIE XYZ\n\t\t\tif (preg_match('/^[XYZ]{1}/', $string)) {\n\t\t\t\tif ($num[8] == substr('TRWAGMYFPDXBNJZSQVHLCKE', substr(str_replace(array('X', 'Y', 'Z'), array('0', '1', '2'), $string), 0, 8) % 23, 1)) {\n\t\t\t\t\treturn 3;\n\t\t\t\t} else {\n\t\t\t\t\treturn -3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Can not be verified\n\t\t\treturn -4;\n\t\t}\n\n\t\t//Verify NIF if country is PT\n\t\t//Returns: 1 if NIF ok, -1 if NIF bad, 0 if unexpected bad\n\t\tif ($idprof == 1 && $soc->country_code == 'PT') {\n\t\t\t$string = trim($this->idprof1);\n\t\t\t$string = preg_replace('/(\\s)/', '', $string);\n\n\t\t\t//Check NIF\n\t\t\tif (preg_match('/(^[0-9]{9}$)/', $string)) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\treturn $ok;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *   Return an url to check online a professional id or empty string\n\t *\n\t *   @param\t\tint\t\t$idprof         1,2,3,4 (Example: 1=siren,2=siret,3=naf,4=rcs/rm)\n\t *   @param \tSociete\t$thirdparty     Object thirdparty\n\t *   @return\tstring          \t\tUrl or empty string if no URL known\n\t *   TODO better in a lib than into business class\n\t */\n\tpublic function id_prof_url($idprof, $thirdparty)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs, $hookmanager;\n\n\t\t$url = '';\n\t\t$action = '';\n\n\t\t$hookmanager->initHooks(array('idprofurl'));\n\t\t$parameters = array('idprof'=>$idprof, 'company'=>$thirdparty);\n\t\t$reshook = $hookmanager->executeHooks('getIdProfUrl', $parameters, $this, $action); // Note that $action and $object may have been modified by some hooks\n\t\tif (empty($reshook)) {\n\t\t\tif (!empty($conf->global->MAIN_DISABLEPROFIDRULES)) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\t// TODO Move links to validate professional ID into a dictionary table \"country\" + \"link\"\n\t\t\t$strippedIdProf1 = str_replace(' ', '', $thirdparty->idprof1);\n\t\t\tif ($idprof == 1 && $thirdparty->country_code == 'FR') {\n\t\t\t\t$url = 'http://www.societe.com/cgi-bin/search?champs='.$strippedIdProf1; // See also http://avis-situation-sirene.insee.fr/\n\t\t\t}\n\t\t\tif ($idprof == 1 && ($thirdparty->country_code == 'GB' || $thirdparty->country_code == 'UK')) {\n\t\t\t\t$url = 'https://beta.companieshouse.gov.uk/company/'.$strippedIdProf1;\n\t\t\t}\n\t\t\tif ($idprof == 1 && $thirdparty->country_code == 'ES') {\n\t\t\t\t$url = 'http://www.e-informa.es/servlet/app/portal/ENTP/screen/SProducto/prod/ETIQUETA_EMPRESA/nif/'.$strippedIdProf1;\n\t\t\t}\n\t\t\tif ($idprof == 1 && $thirdparty->country_code == 'IN') {\n\t\t\t\t$url = 'http://www.tinxsys.com/TinxsysInternetWeb/dealerControllerServlet?tinNumber='.$strippedIdProf1.';&searchBy=TIN&backPage=searchByTin_Inter.jsp';\n\t\t\t}\n\t\t\tif ($idprof == 1 && $thirdparty->country_code == 'PT') {\n\t\t\t\t$url = 'http://www.nif.pt/'.$strippedIdProf1;\n\t\t\t}\n\n\t\t\tif ($url) {\n\t\t\t\treturn '<a target=\"_blank\" href=\"'.$url.'\">'.$langs->trans(\"Check\").'</a>';\n\t\t\t}\n\t\t} else {\n\t\t\treturn $hookmanager->resPrint;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *   Indicates if the company has projects\n\t *\n\t *   @return     bool\t   true if the company has projects, false otherwise\n\t */\n\tpublic function has_projects()\n\t{\n\t\t// phpcs:enable\n\t\t$sql = 'SELECT COUNT(*) as numproj FROM '.MAIN_DB_PREFIX.'projet WHERE fk_soc = '.$this->id;\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t$count = $obj->numproj;\n\t\t} else {\n\t\t\t$count = 0;\n\t\t\tprint $this->db->error();\n\t\t}\n\t\t$this->db->free($resql);\n\t\treturn ($count > 0);\n\t}\n\n\n\t/**\n\t *  Load information for tab info\n\t *\n\t *  @param  int\t\t$id     Id of thirdparty to load\n\t *  @return\tvoid\n\t */\n\tpublic function info($id)\n\t{\n\t\t$sql = \"SELECT s.rowid, s.nom as name, s.datec as date_creation, tms as date_modification,\";\n\t\t$sql .= \" fk_user_creat, fk_user_modif\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"societe as s\";\n\t\t$sql .= \" WHERE s.rowid = \".((int) $id);\n\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\tif ($this->db->num_rows($result)) {\n\t\t\t\t$obj = $this->db->fetch_object($result);\n\n\t\t\t\t$this->id = $obj->rowid;\n\n\t\t\t\tif ($obj->fk_user_creat) {\n\t\t\t\t\t$cuser = new User($this->db);\n\t\t\t\t\t$cuser->fetch($obj->fk_user_creat);\n\t\t\t\t\t$this->user_creation = $cuser;\n\t\t\t\t}\n\n\t\t\t\tif ($obj->fk_user_modif) {\n\t\t\t\t\t$muser = new User($this->db);\n\t\t\t\t\t$muser->fetch($obj->fk_user_modif);\n\t\t\t\t\t$this->user_modification = $muser;\n\t\t\t\t}\n\n\t\t\t\t$this->ref = $obj->name;\n\t\t\t\t$this->date_creation     = $this->db->jdate($obj->date_creation);\n\t\t\t\t$this->date_modification = $this->db->jdate($obj->date_modification);\n\t\t\t}\n\n\t\t\t$this->db->free($result);\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *  Return if third party is a company (Business) or an end user (Consumer)\n\t *\n\t *  @return    boolean     true=is a company, false=a and user\n\t */\n\tpublic function isACompany()\n\t{\n\t\tglobal $conf;\n\n\t\t// Define if third party is treated as company (or not) when nature is unknown\n\t\t$isacompany = empty($conf->global->MAIN_UNKNOWN_CUSTOMERS_ARE_COMPANIES) ? 0 : 1; // 0 by default\n\t\tif (!empty($this->tva_intra)) {\n\t\t\t$isacompany = 1;\n\t\t} elseif (!empty($this->idprof1) || !empty($this->idprof2) || !empty($this->idprof3) || !empty($this->idprof4) || !empty($this->idprof5) || !empty($this->idprof6)) {\n\t\t\t$isacompany = 1;\n\t\t} elseif (!empty($this->typent_code) && $this->typent_code != 'TE_UNKNOWN') {\n\t\t\t// TODO Add a field is_a_company into dictionary\n\t\t\tif (preg_match('/^TE_PRIVATE/', $this->typent_code)) {\n\t\t\t\t$isacompany = 0;\n\t\t\t} else {\n\t\t\t\t$isacompany = 1;\n\t\t\t}\n\t\t}\n\n\t\treturn $isacompany;\n\t}\n\n\t/**\n\t *  Return if a company is inside the EEC (European Economic Community)\n\t *\n\t *  @return     boolean\t\ttrue = country inside EEC, false = country outside EEC\n\t */\n\tpublic function isInEEC()\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\t\treturn isInEEC($this);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Load the list of provider categories\n\t *\n\t *  @return    int      0 if success, <> 0 if error\n\t */\n\tpublic function LoadSupplierCateg()\n\t{\n\t\t// phpcs:enable\n\t\t$this->SupplierCategories = array();\n\t\t$sql = \"SELECT rowid, label\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"categorie\";\n\t\t$sql .= \" WHERE type = \".Categorie::TYPE_SUPPLIER;\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$this->SupplierCategories[$obj->rowid] = $obj->label;\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Insert link supplier - category\n\t *\n\t *\t@param\tint\t\t$categorie_id\t\tId of category\n\t *  @return int      \t\t\t\t\t0 if success, <> 0 if error\n\t */\n\tpublic function AddFournisseurInCategory($categorie_id)\n\t{\n\t\t// phpcs:enable\n\t\tif ($categorie_id > 0 && $this->id > 0) {\n\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"categorie_fournisseur (fk_categorie, fk_soc) \";\n\t\t\t$sql .= \" VALUES (\".$categorie_id.\", \".$this->id.\")\";\n\n\t\t\tif ($resql = $this->db->query($sql)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t\treturn -1;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Create a third party into database from a member object\n\t *\n\t *  @param\tAdherent\t$member\t\t\tObject member\n\t * \t@param\tstring\t\t$socname\t\tName of third party to force\n\t *\t@param\tstring\t\t$socalias\t\tAlias name of third party to force\n\t *  @param\tstring\t\t$customercode\tCustomer code\n\t *  @return int\t\t\t\t\t\t\t<0 if KO, id of created account if OK\n\t */\n\tpublic function create_from_member(Adherent $member, $socname = '', $socalias = '', $customercode = '')\n\t{\n        // phpcs:enable\n\t\tglobal $conf, $user, $langs;\n\n\t\tdol_syslog(get_class($this).\"::create_from_member\", LOG_DEBUG);\n\n\t\t$name = $socname ? $socname : $member->societe;\n\t\tif (empty($name)) {\n\t\t\t$name = $member->getFullName($langs);\n\t\t}\n\n\t\t$alias = $socalias ? $socalias : '';\n\n\t\t// Positionne parametres\n\t\t$this->nom = $name; // TODO deprecated\n\t\t$this->name = $name;\n\t\t$this->name_alias = $alias;\n\t\t$this->address = $member->address;\n\t\t$this->zip = $member->zip;\n\t\t$this->town = $member->town;\n\t\t$this->country_code = $member->country_code;\n\t\t$this->country_id = $member->country_id;\n\t\t$this->phone = $member->phone; // Prof phone\n\t\t$this->email = $member->email;\n\t\t$this->socialnetworks = $member->socialnetworks;\n\t\t$this->entity = $member->entity;\n\n\t\t$this->client = 1; // A member is a customer by default\n\t\t$this->code_client = ($customercode ? $customercode : -1);\n\t\t$this->code_fournisseur = -1;\n\t\t$this->typent_code = ($member->morphy == 'phy' ? 'TE_PRIVATE' : 0);\n\t\t$this->typent_id = $this->typent_code ? dol_getIdFromCode($this->db, $this->typent_code, 'c_typent', 'id', 'code') : 0;\n\n\t\t$this->db->begin();\n\n\t\t// Cree et positionne $this->id\n\t\t$result = $this->create($user);\n\n\t\tif ($result >= 0) {\n\t\t\t// Auto-create contact on thirdparty creation\n\t\t\tif (!empty($conf->global->THIRDPARTY_DEFAULT_CREATE_CONTACT)) {\n\t\t\t\t// Fill fields needed by contact\n\t\t\t\t$this->name_bis = $member->lastname;\n\t\t\t\t$this->firstname = $member->firstname;\n\t\t\t\t$this->civility_id = $member->civility_id;\n\n\t\t\t\tdol_syslog(\"We ask to create a contact/address too\", LOG_DEBUG);\n\t\t\t\t$result = $this->create_individual($user);\n\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\tsetEventMessages($this->error, $this->errors, 'errors');\n\t\t\t\t\t$this->db->rollback();\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"adherent\";\n\t\t\t$sql .= \" SET fk_soc = \".((int) $this->id);\n\t\t\t$sql .= \" WHERE rowid = \".((int) $member->id);\n\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$this->db->commit();\n\t\t\t\treturn $this->id;\n\t\t\t} else {\n\t\t\t\t$this->error = $this->db->error();\n\n\t\t\t\t$this->db->rollback();\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t} else {\n\t\t\t// $this->error deja positionne\n\t\t\tdol_syslog(get_class($this).\"::create_from_member - 2 - \".$this->error.\" - \".join(',', $this->errors), LOG_ERR);\n\n\t\t\t$this->db->rollback();\n\t\t\treturn $result;\n\t\t}\n\t}\n\n\t/**\n\t * \tSet properties with value into $conf\n\t *\n\t * \t@param\tConf\t$conf\t\tConf object (possibility to use another entity)\n\t * \t@return\tvoid\n\t */\n\tpublic function setMysoc(Conf $conf)\n\t{\n\t\tglobal $langs;\n\n\t\t$this->id = 0;\n\t\t$this->name = empty($conf->global->MAIN_INFO_SOCIETE_NOM) ? '' : $conf->global->MAIN_INFO_SOCIETE_NOM;\n\t\t$this->address = empty($conf->global->MAIN_INFO_SOCIETE_ADDRESS) ? '' : $conf->global->MAIN_INFO_SOCIETE_ADDRESS;\n\t\t$this->zip = empty($conf->global->MAIN_INFO_SOCIETE_ZIP) ? '' : $conf->global->MAIN_INFO_SOCIETE_ZIP;\n\t\t$this->town = empty($conf->global->MAIN_INFO_SOCIETE_TOWN) ? '' : $conf->global->MAIN_INFO_SOCIETE_TOWN;\n\t\t$this->region_code = empty($conf->global->MAIN_INFO_SOCIETE_REGION) ? '' : $conf->global->MAIN_INFO_SOCIETE_REGION;\n\t\t$this->object = empty($conf->global->MAIN_INFO_SOCIETE_OBJECT) ? '' : $conf->global->MAIN_INFO_SOCIETE_OBJECT;\n\n\t\t$this->note_private = empty($conf->global->MAIN_INFO_SOCIETE_NOTE) ? '' : $conf->global->MAIN_INFO_SOCIETE_NOTE;\n\n\t\t$this->nom = $this->name; // deprecated\n\n\t\t// We define country_id, country_code and country\n\t\t$country_id = $country_code = $country_label = '';\n\t\tif (!empty($conf->global->MAIN_INFO_SOCIETE_COUNTRY)) {\n\t\t\t$tmp = explode(':', $conf->global->MAIN_INFO_SOCIETE_COUNTRY);\n\t\t\t$country_id = $tmp[0];\n\t\t\tif (!empty($tmp[1])) {   // If $conf->global->MAIN_INFO_SOCIETE_COUNTRY is \"id:code:label\"\n\t\t\t\t$country_code = $tmp[1];\n\t\t\t\t$country_label = $tmp[2];\n\t\t\t} else // For backward compatibility\n\t\t\t{\n\t\t\t\tdol_syslog(\"Your country setup use an old syntax. Reedit it using setup area.\", LOG_WARNING);\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\t\t\t\t$country_code = getCountry($country_id, 2, $this->db); // This need a SQL request, but it's the old feature that should not be used anymore\n\t\t\t\t$country_label = getCountry($country_id, 0, $this->db); // This need a SQL request, but it's the old feature that should not be used anymore\n\t\t\t}\n\t\t}\n\t\t$this->country_id = $country_id;\n\t\t$this->country_code = $country_code;\n\t\t$this->country = $country_label;\n\t\tif (is_object($langs)) {\n\t\t\t$this->country = ($langs->trans('Country'.$country_code) != 'Country'.$country_code) ? $langs->trans('Country'.$country_code) : $country_label;\n\t\t}\n\n\t\t//TODO This could be replicated for region but function `getRegion` didn't exist, so I didn't added it.\n\t\t// We define state_id, state_code and state\n\t\t$state_id = 0; $state_code = $state_label = '';\n\t\tif (!empty($conf->global->MAIN_INFO_SOCIETE_STATE)) {\n\t\t\t$tmp = explode(':', $conf->global->MAIN_INFO_SOCIETE_STATE);\n\t\t\t$state_id = $tmp[0];\n\t\t\tif (!empty($tmp[1])) {   // If $conf->global->MAIN_INFO_SOCIETE_STATE is \"id:code:label\"\n\t\t\t\t$state_code = $tmp[1];\n\t\t\t\t$state_label = $tmp[2];\n\t\t\t} else { // For backward compatibility\n\t\t\t\tdol_syslog(\"Your setup of State an old syntax (entity=\".$conf->entity.\"). Go in Home - Setup - Organization then Save should remove this error.\", LOG_ERR);\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\t\t\t\t$state_code = getState($state_id, 2, $this->db); // This need a SQL request, but it's the old feature that should not be used anymore\n\t\t\t\t$state_label = getState($state_id, 0, $this->db); // This need a SQL request, but it's the old feature that should not be used anymore\n\t\t\t}\n\t\t}\n\t\t$this->state_id = $state_id;\n\t\t$this->state_code = $state_code;\n\t\t$this->state = $state_label;\n\t\tif (is_object($langs)) {\n\t\t\t$this->state = ($langs->trans('State'.$state_code) != 'State'.$state_code) ? $langs->trans('State'.$state_code) : $state_label;\n\t\t}\n\n\t\t$this->phone = empty($conf->global->MAIN_INFO_SOCIETE_TEL) ? '' : $conf->global->MAIN_INFO_SOCIETE_TEL;\n\t\t$this->fax = empty($conf->global->MAIN_INFO_SOCIETE_FAX) ? '' : $conf->global->MAIN_INFO_SOCIETE_FAX;\n\t\t$this->url = empty($conf->global->MAIN_INFO_SOCIETE_WEB) ? '' : $conf->global->MAIN_INFO_SOCIETE_WEB;\n\n\t\t// Social networks\n\t\t$this->facebook_url = empty($conf->global->MAIN_INFO_SOCIETE_FACEBOOK_URL) ? '' : $conf->global->MAIN_INFO_SOCIETE_FACEBOOK_URL;\n\t\t$this->twitter_url = empty($conf->global->MAIN_INFO_SOCIETE_TWITTER_URL) ? '' : $conf->global->MAIN_INFO_SOCIETE_TWITTER_URL;\n\t\t$this->linkedin_url = empty($conf->global->MAIN_INFO_SOCIETE_LINKEDIN_URL) ? '' : $conf->global->MAIN_INFO_SOCIETE_LINKEDIN_URL;\n\t\t$this->instagram_url = empty($conf->global->MAIN_INFO_SOCIETE_INSTAGRAM_URL) ? '' : $conf->global->MAIN_INFO_SOCIETE_INSTAGRAM_URL;\n\t\t$this->youtube_url = empty($conf->global->MAIN_INFO_SOCIETE_YOUTUBE_URL) ? '' : $conf->global->MAIN_INFO_SOCIETE_YOUTUBE_URL;\n\t\t$this->github_url = empty($conf->global->MAIN_INFO_SOCIETE_GITHUB_URL) ? '' : $conf->global->MAIN_INFO_SOCIETE_GITHUB_URL;\n\t\t$this->socialnetworks = array();\n\t\tif (!empty($this->facebook_url)) {\n\t\t\t$this->socialnetworks['facebook'] = $this->facebook_url;\n\t\t}\n\t\tif (!empty($this->twitter_url)) {\n\t\t\t$this->socialnetworks['twitter'] = $this->twitter_url;\n\t\t}\n\t\tif (!empty($this->linkedin_url)) {\n\t\t\t$this->socialnetworks['linkedin'] = $this->linkedin_url;\n\t\t}\n\t\tif (!empty($this->instagram_url)) {\n\t\t\t$this->socialnetworks['instagram'] = $this->instagram_url;\n\t\t}\n\t\tif (!empty($this->youtube_url)) {\n\t\t\t$this->socialnetworks['youtube'] = $this->youtube_url;\n\t\t}\n\t\tif (!empty($this->github_url)) {\n\t\t\t$this->socialnetworks['github'] = $this->github_url;\n\t\t}\n\n\t\t// Id prof generiques\n\t\t$this->idprof1 = empty($conf->global->MAIN_INFO_SIREN) ? '' : $conf->global->MAIN_INFO_SIREN;\n\t\t$this->idprof2 = empty($conf->global->MAIN_INFO_SIRET) ? '' : $conf->global->MAIN_INFO_SIRET;\n\t\t$this->idprof3 = empty($conf->global->MAIN_INFO_APE) ? '' : $conf->global->MAIN_INFO_APE;\n\t\t$this->idprof4 = empty($conf->global->MAIN_INFO_RCS) ? '' : $conf->global->MAIN_INFO_RCS;\n\t\t$this->idprof5 = empty($conf->global->MAIN_INFO_PROFID5) ? '' : $conf->global->MAIN_INFO_PROFID5;\n\t\t$this->idprof6 = empty($conf->global->MAIN_INFO_PROFID6) ? '' : $conf->global->MAIN_INFO_PROFID6;\n\t\t$this->tva_intra = empty($conf->global->MAIN_INFO_TVAINTRA) ? '' : $conf->global->MAIN_INFO_TVAINTRA; // VAT number, not necessarly INTRA.\n\t\t$this->managers = empty($conf->global->MAIN_INFO_SOCIETE_MANAGERS) ? '' : $conf->global->MAIN_INFO_SOCIETE_MANAGERS;\n\t\t$this->capital = empty($conf->global->MAIN_INFO_CAPITAL) ? '' : $conf->global->MAIN_INFO_CAPITAL;\n\t\t$this->forme_juridique_code = empty($conf->global->MAIN_INFO_SOCIETE_FORME_JURIDIQUE) ? '' : $conf->global->MAIN_INFO_SOCIETE_FORME_JURIDIQUE;\n\t\t$this->email = empty($conf->global->MAIN_INFO_SOCIETE_MAIL) ? '' : $conf->global->MAIN_INFO_SOCIETE_MAIL;\n\t\t$this->default_lang = (empty($conf->global->MAIN_LANG_DEFAULT) ? 'auto' : $conf->global->MAIN_LANG_DEFAULT);\n\t\t$this->logo = empty($conf->global->MAIN_INFO_SOCIETE_LOGO) ? '' : $conf->global->MAIN_INFO_SOCIETE_LOGO;\n\t\t$this->logo_small = empty($conf->global->MAIN_INFO_SOCIETE_LOGO_SMALL) ? '' : $conf->global->MAIN_INFO_SOCIETE_LOGO_SMALL;\n\t\t$this->logo_mini = empty($conf->global->MAIN_INFO_SOCIETE_LOGO_MINI) ? '' : $conf->global->MAIN_INFO_SOCIETE_LOGO_MINI;\n\t\t$this->logo_squarred = empty($conf->global->MAIN_INFO_SOCIETE_LOGO_SQUARRED) ? '' : $conf->global->MAIN_INFO_SOCIETE_LOGO_SQUARRED;\n\t\t$this->logo_squarred_small = empty($conf->global->MAIN_INFO_SOCIETE_LOGO_SQUARRED_SMALL) ? '' : $conf->global->MAIN_INFO_SOCIETE_LOGO_SQUARRED_SMALL;\n\t\t$this->logo_squarred_mini = empty($conf->global->MAIN_INFO_SOCIETE_LOGO_SQUARRED_MINI) ? '' : $conf->global->MAIN_INFO_SOCIETE_LOGO_SQUARRED_MINI;\n\n\t\t// Define if company use vat or not\n\t\t$this->tva_assuj = $conf->global->FACTURE_TVAOPTION;\n\n\t\t// Define if company use local taxes\n\t\t$this->localtax1_assuj = ((isset($conf->global->FACTURE_LOCAL_TAX1_OPTION) && ($conf->global->FACTURE_LOCAL_TAX1_OPTION == '1' || $conf->global->FACTURE_LOCAL_TAX1_OPTION == 'localtax1on')) ? 1 : 0);\n\t\t$this->localtax2_assuj = ((isset($conf->global->FACTURE_LOCAL_TAX2_OPTION) && ($conf->global->FACTURE_LOCAL_TAX2_OPTION == '1' || $conf->global->FACTURE_LOCAL_TAX2_OPTION == 'localtax2on')) ? 1 : 0);\n\t}\n\n\t/**\n\t *  Initialise an instance with random values.\n\t *  Used to build previews or test instances.\n\t *\tid must be 0 if object instance is a specimen.\n\t *\n\t *  @return\tint >0 if ok\n\t */\n\tpublic function initAsSpecimen()\n\t{\n\t\t$now = dol_now();\n\n\t\t// Initialize parameters\n\t\t$this->id = 0;\n\t\t$this->entity = 1;\n\t\t$this->name = 'THIRDPARTY SPECIMEN '.dol_print_date($now, 'dayhourlog');\n\t\t$this->nom = $this->name; // For backward compatibility\n\t\t$this->ref_ext = 'Ref ext';\n\t\t$this->specimen = 1;\n\t\t$this->address = '21 jump street';\n\t\t$this->zip = '99999';\n\t\t$this->town = 'MyTown';\n\t\t$this->state_id = 1;\n\t\t$this->state_code = 'AA';\n\t\t$this->state = 'MyState';\n\t\t$this->country_id = 1;\n\t\t$this->country_code = 'FR';\n\t\t$this->email = 'specimen@specimen.com';\n\t\t$this->socialnetworks = array(\n\t\t\t'skype' => 'tom.hanson',\n\t\t\t'twitter' => 'tomhanson',\n\t\t\t'facebook' => 'tomhanson',\n\t\t\t'linkedin' => 'tomhanson',\n\t\t);\n\t\t$this->url = 'http://www.specimen.com';\n\n\t\t$this->phone = '0909090901';\n\t\t$this->fax = '0909090909';\n\n\t\t$this->code_client = 'CC-'.dol_print_date($now, 'dayhourlog');\n\t\t$this->code_fournisseur = 'SC-'.dol_print_date($now, 'dayhourlog');\n\t\t$this->capital = 10000;\n\t\t$this->client = 1;\n\t\t$this->prospect = 1;\n\t\t$this->fournisseur = 1;\n\t\t$this->tva_assuj = 1;\n\t\t$this->tva_intra = 'EU1234567';\n\t\t$this->note_public = 'This is a comment (public)';\n\t\t$this->note_private = 'This is a comment (private)';\n\n\t\t$this->idprof1 = 'idprof1';\n\t\t$this->idprof2 = 'idprof2';\n\t\t$this->idprof3 = 'idprof3';\n\t\t$this->idprof4 = 'idprof4';\n\t\t$this->idprof5 = 'idprof5';\n\t\t$this->idprof6 = 'idprof6';\n\t\treturn 1;\n\t}\n\n\t/**\n\t *  Check if we must use localtax feature or not according to country (country of $mysoc in most cases).\n\t *\n\t *\t@param\t\tint\t\t$localTaxNum\tTo get info for only localtax1 or localtax2\n\t *  @return\t\tboolean\t\t\t\t\ttrue or false\n\t */\n\tpublic function useLocalTax($localTaxNum = 0)\n\t{\n\t\t$sql  = \"SELECT t.localtax1, t.localtax2\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t$sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$this->db->escape($this->country_code).\"'\";\n\t\t$sql .= \" AND t.active = 1\";\n\t\tif (empty($localTaxNum)) {\n\t\t\t$sql .= \" AND (t.localtax1_type <> '0' OR t.localtax2_type <> '0')\";\n\t\t} elseif ($localTaxNum == 1) {\n\t\t\t$sql .= \" AND t.localtax1_type <> '0'\";\n\t\t} elseif ($localTaxNum == 2) {\n\t\t\t$sql .= \" AND t.localtax2_type <> '0'\";\n\t\t}\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\treturn ($this->db->num_rows($resql) > 0);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t *  Check if we must use NPR Vat (french stupid rule) or not according to country (country of $mysoc in most cases).\n\t *\n\t *  @return\t\tboolean\t\t\t\t\ttrue or false\n\t */\n\tpublic function useNPR()\n\t{\n\t\t$sql  = \"SELECT t.rowid\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t$sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$this->db->escape($this->country_code).\"'\";\n\t\t$sql .= \" AND t.active = 1 AND t.recuperableonly = 1\";\n\n\t\tdol_syslog(\"useNPR\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\treturn ($this->db->num_rows($resql) > 0);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t *  Check if we must use revenue stamps feature or not according to country (country of $mysocin most cases).\n\t *  Table c_revenuestamp contains the country and value of stamp per invoice.\n\t *\n\t *  @return\t\tboolean\t\t\ttrue or false\n\t */\n\tpublic function useRevenueStamp()\n\t{\n\t\t$sql  = \"SELECT COUNT(*) as nb\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_revenuestamp as r, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t$sql .= \" WHERE r.fk_pays = c.rowid AND c.code = '\".$this->db->escape($this->country_code).\"'\";\n\t\t$sql .= \" AND r.active = 1\";\n\n\t\tdol_syslog(\"useRevenueStamp\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\treturn (($obj->nb > 0) ?true:false);\n\t\t} else {\n\t\t\t$this->error = $this->db->lasterror();\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn prostect level\n\t *\n\t *  @return     string        Libelle\n\t */\n\tpublic function getLibProspLevel()\n\t{\n\t\treturn $this->LibProspLevel($this->fk_prospectlevel);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return label of prospect level\n\t *\n\t *  @param\tint\t\t$fk_prospectlevel   \tProspect level\n\t *  @return string        \t\t\t\t\tlabel of level\n\t */\n\tpublic function LibProspLevel($fk_prospectlevel)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$lib = $langs->trans(\"ProspectLevel\".$fk_prospectlevel);\n\t\t// If lib not found in language file, we get label from cache/databse\n\t\tif ($lib == $langs->trans(\"ProspectLevel\".$fk_prospectlevel)) {\n\t\t\t$lib = $langs->getLabelFromKey($this->db, $fk_prospectlevel, 'c_prospectlevel', 'code', 'label');\n\t\t}\n\t\treturn $lib;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Set prospect level\n\t *\n\t *  @param  User\t$user\t\tUser who sets the discount\n\t *\t@return\tint\t\t\t\t\t<0 if KO, >0 if OK\n\t * @deprecated Use update function instead\n\t */\n\tpublic function set_prospect_level(User $user)\n\t{\n\t\t// phpcs:enable\n\t\treturn $this->update($this->id, $user);\n\t}\n\n\t/**\n\t *  Return status of prospect\n\t *\n\t *  @param\tint\t\t$mode       0=libelle long, 1=libelle court, 2=Picto + Libelle court, 3=Picto, 4=Picto + Libelle long\n\t *  @param\tstring\t$label\t\tLabel to use for status for added status\n\t *  @return string        \t\tLibelle\n\t */\n\tpublic function getLibProspCommStatut($mode = 0, $label = '')\n\t{\n\t\treturn $this->LibProspCommStatut($this->stcomm_id, $mode, $label, $this->stcomm_picto);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return label of a given status\n\t *\n\t *  @param\tint|string\t$status        \tId or code for prospection status\n\t *  @param  int\t\t\t$mode          \t0=long label, 1=short label, 2=Picto + short label, 3=Picto, 4=Picto + long label, 5=Short label + Picto\n\t *  @param\tstring\t\t$label\t\t\tLabel to use for status for added status\n\t *\t@param \tstring\t\t$picto      \tName of image file to show ('filenew', ...)\n\t *                                      If no extension provided, we use '.png'. Image must be stored into theme/xxx/img directory.\n\t *                                      Example: picto.png                  if picto.png is stored into htdocs/theme/mytheme/img\n\t *                                      Example: picto.png@mymodule         if picto.png is stored into htdocs/mymodule/img\n\t *                                      Example: /mydir/mysubdir/picto.png  if picto.png is stored into htdocs/mydir/mysubdir (pictoisfullpath must be set to 1)\n\t *  @return string       \t \t\t\tLabel of prospection status\n\t */\n\tpublic function LibProspCommStatut($status, $mode = 0, $label = '', $picto = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\t$langs->load('customers');\n\n\t\tif ($mode == 2) {\n\t\t\tif ($status == '-1' || $status == 'ST_NO') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect-1\"), -1, $picto).' '.$langs->trans(\"StatusProspect-1\");\n\t\t\t} elseif ($status == '0' || $status == 'ST_NEVER') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect0\"), 0, $picto).' '.$langs->trans(\"StatusProspect0\");\n\t\t\t} elseif ($status == '1' || $status == 'ST_TODO') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect1\"), 1, $picto).' '.$langs->trans(\"StatusProspect1\");\n\t\t\t} elseif ($status == '2' || $status == 'ST_PEND') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect2\"), 2, $picto).' '.$langs->trans(\"StatusProspect2\");\n\t\t\t} elseif ($status == '3' || $status == 'ST_DONE') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect3\"), 3, $picto).' '.$langs->trans(\"StatusProspect3\");\n\t\t\t} else {\n\t\t\t\treturn img_action(($langs->trans(\"StatusProspect\".$status) != \"StatusProspect\".$status) ? $langs->trans(\"StatusProspect\".$status) : $label, 0, $picto).' '.(($langs->trans(\"StatusProspect\".$status) != \"StatusProspect\".$status) ? $langs->trans(\"StatusProspect\".$status) : $label);\n\t\t\t}\n\t\t} elseif ($mode == 3) {\n\t\t\tif ($status == '-1' || $status == 'ST_NO') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect-1\"), -1, $picto);\n\t\t\t} elseif ($status == '0' || $status == 'ST_NEVER') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect0\"), 0, $picto);\n\t\t\t} elseif ($status == '1' || $status == 'ST_TODO') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect1\"), 1, $picto);\n\t\t\t} elseif ($status == '2' || $status == 'ST_PEND') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect2\"), 2, $picto);\n\t\t\t} elseif ($status == '3' || $status == 'ST_DONE') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect3\"), 3, $picto);\n\t\t\t} else {\n\t\t\t\treturn img_action(($langs->trans(\"StatusProspect\".$status) != \"StatusProspect\".$status) ? $langs->trans(\"StatusProspect\".$status) : $label, 0, $picto);\n\t\t\t}\n\t\t} elseif ($mode == 4) {\n\t\t\tif ($status == '-1' || $status == 'ST_NO') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect-1\"), -1, $picto).' '.$langs->trans(\"StatusProspect-1\");\n\t\t\t} elseif ($status == '0' || $status == 'ST_NEVER') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect0\"), 0, $picto).' '.$langs->trans(\"StatusProspect0\");\n\t\t\t} elseif ($status == '1' || $status == 'ST_TODO') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect1\"), 1, $picto).' '.$langs->trans(\"StatusProspect1\");\n\t\t\t} elseif ($status == '2' || $status == 'ST_PEND') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect2\"), 2, $picto).' '.$langs->trans(\"StatusProspect2\");\n\t\t\t} elseif ($status == '3' || $status == 'ST_DONE') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect3\"), 3, $picto).' '.$langs->trans(\"StatusProspect3\");\n\t\t\t} else {\n\t\t\t\treturn img_action(($langs->trans(\"StatusProspect\".$status) != \"StatusProspect\".$status) ? $langs->trans(\"StatusProspect\".$status) : $label, 0, $picto).' '.(($langs->trans(\"StatusProspect\".$status) != \"StatusProspect\".$status) ? $langs->trans(\"StatusProspect\".$status) : $label);\n\t\t\t}\n\t\t}\n\n\t\treturn \"Error, mode/status not found\";\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Set outstanding value\n\t *\n\t *  @param  User\t$user\t\tUser making change\n\t *\t@return\tint\t\t\t\t\t<0 if KO, >0 if OK\n\t * @deprecated Use update function instead\n\t */\n\tpublic function set_OutstandingBill(User $user)\n\t{\n\t\t// phpcs:enable\n\t\treturn $this->update($this->id, $user);\n\t}\n\n\t/**\n\t *  Return amount of order not paid and total\n\t *\n\t *  @param     string      $mode    'customer' or 'supplier'\n\t *  @return    array\t\t\t\tarray('opened'=>Amount, 'total'=>Total amount)\n\t */\n\tpublic function getOutstandingProposals($mode = 'customer')\n\t{\n\t\t$table = 'propal';\n\t\tif ($mode == 'supplier') {\n\t\t\t$table = 'supplier_proposal';\n\t\t}\n\n\t\t$sql  = \"SELECT rowid, ref, total_ht, total_ttc, fk_statut as status FROM \".MAIN_DB_PREFIX.$table.\" as f\";\n\t\t$sql .= \" WHERE fk_soc = \".((int) $this->id);\n\t\tif ($mode == 'supplier') {\n\t\t\t$sql .= \" AND entity IN (\".getEntity('supplier_proposal').\")\";\n\t\t} else {\n\t\t\t$sql .= \" AND entity IN (\".getEntity('propal').\")\";\n\t\t}\n\n\t\tdol_syslog(\"getOutstandingProposals for fk_soc = \".((int) $this->id), LOG_DEBUG);\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$outstandingOpened = 0;\n\t\t\t$outstandingTotal = 0;\n\t\t\t$outstandingTotalIncTax = 0;\n\t\t\t$arrayofref = array();\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$arrayofref[$obj->rowid] = $obj->ref;\n\t\t\t\t$outstandingTotal += $obj->total_ht;\n\t\t\t\t$outstandingTotalIncTax += $obj->total_ttc;\n\t\t\t\tif ($obj->status != 0) {\n\t\t\t\t\t// Not a draft\n\t\t\t\t\t$outstandingOpened += $obj->total_ttc;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn array('opened'=>$outstandingOpened, 'total_ht'=>$outstandingTotal, 'total_ttc'=>$outstandingTotalIncTax, 'refs'=>$arrayofref); // 'opened' is 'incl taxes'\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t/**\n\t *  Return amount of order not paid and total\n\t *\n\t *  @param     string      $mode    'customer' or 'supplier'\n\t *  @return\t\tarray\t\t\t\tarray('opened'=>Amount, 'total'=>Total amount)\n\t */\n\tpublic function getOutstandingOrders($mode = 'customer')\n\t{\n\t\t$table = 'commande';\n\t\tif ($mode == 'supplier') {\n\t\t\t$table = 'commande_fournisseur';\n\t\t}\n\n\t\t$sql  = \"SELECT rowid, ref, total_ht, total_ttc, fk_statut as status FROM \".MAIN_DB_PREFIX.$table.\" as f\";\n\t\t$sql .= \" WHERE fk_soc = \".((int) $this->id);\n\t\tif ($mode == 'supplier') {\n\t\t\t$sql .= \" AND entity IN (\".getEntity('supplier_order').\")\";\n\t\t} else {\n\t\t\t$sql .= \" AND entity IN (\".getEntity('commande').\")\";\n\t\t}\n\n\t\tdol_syslog(\"getOutstandingOrders\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$outstandingOpened = 0;\n\t\t\t$outstandingTotal = 0;\n\t\t\t$outstandingTotalIncTax = 0;\n\t\t\t$arrayofref = array();\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$arrayofref[$obj->rowid] = $obj->ref;\n\t\t\t\t$outstandingTotal += $obj->total_ht;\n\t\t\t\t$outstandingTotalIncTax += $obj->total_ttc;\n\t\t\t\tif ($obj->status != 0) {\n\t\t\t\t\t// Not a draft\n\t\t\t\t\t$outstandingOpened += $obj->total_ttc;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn array('opened'=>$outstandingOpened, 'total_ht'=>$outstandingTotal, 'total_ttc'=>$outstandingTotalIncTax, 'refs'=>$arrayofref); // 'opened' is 'incl taxes'\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t/**\n\t *  Return amount of bill not paid and total\n\t *\n\t *  @param     string      $mode    'customer' or 'supplier'\n\t *  @param     int      $late    \t0 => all invoice, 1=> only late\n\t *  @return\t\tarray\t\t\t\tarray('opened'=>Amount, 'total'=>Total amount)\n\t */\n\tpublic function getOutstandingBills($mode = 'customer', $late = 0)\n\t{\n\t\t$table = 'facture';\n\t\tif ($mode == 'supplier') {\n\t\t\t$table = 'facture_fourn';\n\t\t}\n\n\t\t/* Accurate value of remain to pay is to sum remaintopay for each invoice\n\t\t $paiement = $invoice->getSommePaiement();\n\t\t $creditnotes=$invoice->getSumCreditNotesUsed();\n\t\t $deposits=$invoice->getSumDepositsUsed();\n\t\t $alreadypayed=price2num($paiement + $creditnotes + $deposits,'MT');\n\t\t $remaintopay=price2num($invoice->total_ttc - $paiement - $creditnotes - $deposits,'MT');\n\t\t */\n\t\t$sql = \"SELECT rowid, ref, total_ht, total_ttc, paye, type, fk_statut as status, close_code FROM \".MAIN_DB_PREFIX.$table.\" as f\";\n\t\t$sql .= \" WHERE fk_soc = \".((int) $this->id);\n\t\tif (!empty($late)) {\n\t\t\t$sql .= \" AND date_lim_reglement < '\".$this->db->idate(dol_now()).\"'\";\n\t\t}\n\t\tif ($mode == 'supplier') {\n\t\t\t$sql .= \" AND entity IN (\".getEntity('facture_fourn').\")\";\n\t\t} else {\n\t\t\t$sql .= \" AND entity IN (\".getEntity('invoice').\")\";\n\t\t}\n\n\t\tdol_syslog(\"getOutstandingBills\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$outstandingOpened = 0;\n\t\t\t$outstandingTotal = 0;\n\t\t\t$outstandingTotalIncTax = 0;\n\t\t\t$arrayofref = array();\n\t\t\tif ($mode == 'supplier') {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/fourn/class/fournisseur.facture.class.php';\n\t\t\t\t$tmpobject = new FactureFournisseur($this->db);\n\t\t\t} else {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/compta/facture/class/facture.class.php';\n\t\t\t\t$tmpobject = new Facture($this->db);\n\t\t\t}\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$arrayofref[$obj->rowid] = $obj->ref;\n\t\t\t\t$tmpobject->id = $obj->rowid;\n\n\t\t\t\tif ($obj->status != $tmpobject::STATUS_DRAFT                                           // Not a draft\n\t\t\t\t\t&& !($obj->status == $tmpobject::STATUS_ABANDONED && $obj->close_code == 'replaced')  // Not a replaced invoice\n\t\t\t\t\t) {\n\t\t\t\t\t$outstandingTotal += $obj->total_ht;\n\t\t\t\t\t$outstandingTotalIncTax += $obj->total_ttc;\n\t\t\t\t}\n\t\t\t\tif ($obj->paye == 0\n\t\t\t\t\t&& $obj->status != $tmpobject::STATUS_DRAFT    \t\t// Not a draft\n\t\t\t\t\t&& $obj->status != $tmpobject::STATUS_ABANDONED\t    // Not abandonned\n\t\t\t\t\t&& $obj->status != $tmpobject::STATUS_CLOSED) {\t\t// Not classified as paid\n\t\t\t\t\t//$sql .= \" AND (status <> 3 OR close_code <> 'abandon')\";\t\t// Not abandonned for undefined reason\n\t\t\t\t\t$paiement = $tmpobject->getSommePaiement();\n\t\t\t\t\t$creditnotes = $tmpobject->getSumCreditNotesUsed();\n\t\t\t\t\t$deposits = $tmpobject->getSumDepositsUsed();\n\n\t\t\t\t\t$outstandingOpened += $obj->total_ttc - $paiement - $creditnotes - $deposits;\n\t\t\t\t}\n\n\t\t\t\t//if credit note is converted but not used\n\t\t\t\t// TODO Do this also for customer ?\n\t\t\t\tif ($mode == 'supplier' && $obj->type == FactureFournisseur::TYPE_CREDIT_NOTE && $tmpobject->isCreditNoteUsed()) {\n\t\t\t\t\t$outstandingOpened -= $tmpobject->getSumFromThisCreditNotesNotUsed();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn array('opened'=>$outstandingOpened, 'total_ht'=>$outstandingTotal, 'total_ttc'=>$outstandingTotalIncTax, 'refs'=>$arrayofref); // 'opened' is 'incl taxes'\n\t\t} else {\n\t\t\tdol_syslog(\"Sql error \".$this->db->lasterror, LOG_ERR);\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t/**\n\t * Return label of status customer is prospect/customer\n\t *\n\t * @return   string        \tLabel\n\t * @see getTypeUrl()\n\t */\n\tpublic function getLibCustProspStatut()\n\t{\n\t\treturn $this->LibCustProspStatut($this->client);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return the label of the customer/prospect status\n\t *\n\t *  @param\tint\t\t$status         Id of prospection status\n\t *  @return\tstring          \t\tLabel of prospection status\n\t */\n\tpublic function LibCustProspStatut($status)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\t$langs->load('companies');\n\n\t\tif ($status == 0) {\n\t\t\treturn $langs->trans(\"NorProspectNorCustomer\");\n\t\t} elseif ($status == 1) {\n\t\t\treturn $langs->trans(\"Customer\");\n\t\t} elseif ($status == 2) {\n\t\t\treturn $langs->trans(\"Prospect\");\n\t\t} elseif ($status == 3) {\n\t\t\treturn $langs->trans(\"ProspectCustomer\");\n\t\t}\n\t}\n\n\n\t/**\n\t *  Create a document onto disk according to template module.\n\t *\n\t *\t@param\tstring\t\t$modele\t\t\tGenerator to use. Caller must set it to obj->model_pdf or GETPOST('model','alpha') for example.\n\t *\t@param\tTranslate\t$outputlangs\tobjet lang a utiliser pour traduction\n\t *  @param  int\t\t\t$hidedetails    Hide details of lines\n\t *  @param  int\t\t\t$hidedesc       Hide description\n\t *  @param  int\t\t\t$hideref        Hide ref\n\t *  @param  null|array  $moreparams     Array to provide more information\n\t *\t@return int        \t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function generateDocument($modele, $outputlangs, $hidedetails = 0, $hidedesc = 0, $hideref = 0, $moreparams = null)\n\t{\n\t\tglobal $conf, $user, $langs;\n\n\t\tif (!empty($moreparams) && !empty($moreparams['use_companybankid'])) {\n\t\t\t$modelpath = \"core/modules/bank/doc/\";\n\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/societe/class/companybankaccount.class.php';\n\t\t\t$companybankaccount = new CompanyBankAccount($this->db);\n\t\t\t$result = $companybankaccount->fetch($moreparams['use_companybankid']);\n\t\t\tif (!$result) {\n\t\t\t\tdol_print_error($this->db, $companybankaccount->error, $companybankaccount->errors);\n\t\t\t}\n\t\t\t$result = $companybankaccount->commonGenerateDocument($modelpath, $modele, $outputlangs, $hidedetails, $hidedesc, $hideref, $moreparams);\n\t\t} else {\n\t\t\t// Positionne le modele sur le nom du modele a utiliser\n\t\t\tif (!dol_strlen($modele)) {\n\t\t\t\tif (!empty($conf->global->COMPANY_ADDON_PDF)) {\n\t\t\t\t\t$modele = $conf->global->COMPANY_ADDON_PDF;\n\t\t\t\t} else {\n\t\t\t\t\tprint $langs->trans(\"Error\").\" \".$langs->trans(\"Error_COMPANY_ADDON_PDF_NotDefined\");\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!isset($this->bank_account)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/societe/class/companybankaccount.class.php';\n\t\t\t\t$bac = new CompanyBankAccount($this->db);\n\t\t\t\t$result = $bac->fetch(0, $this->id);\n\t\t\t\tif ($result > 0) {\n\t\t\t\t\t$this->bank_account = $bac;\n\t\t\t\t} else {\n\t\t\t\t\t$this->bank_account = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$modelpath = \"core/modules/societe/doc/\";\n\n\t\t\t$result = $this->commonGenerateDocument($modelpath, $modele, $outputlangs, $hidedetails, $hidedesc, $hideref, $moreparams);\n\t\t}\n\n\t\treturn $result;\n\t}\n\n\n\t/**\n\t * Sets object to supplied categories.\n\t *\n\t * Deletes object from existing categories not supplied.\n\t * Adds it to non existing supplied categories.\n\t * Existing categories are left untouch.\n\t *\n\t * @param \tint[]|int \t$categories \tCategory ID or array of Categories IDs\n\t * @param \tstring \t\t$type_categ \t\t\tCategory type ('customer' or 'supplier')\n\t * @return\tint\t\t\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function setCategories($categories, $type_categ)\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n\n\t\t// Decode type\n\t\tif (!in_array($type_categ, array(Categorie::TYPE_CUSTOMER, Categorie::TYPE_SUPPLIER))) {\n\t\t\tdol_syslog(__METHOD__.': Type '.$type_categ.'is an unknown company category type. Done nothing.', LOG_ERR);\n\t\t\treturn -1;\n\t\t}\n\n\t\treturn parent::setCategoriesCommon($categories, $type_categ);\n\t}\n\n\t/**\n\t * Sets sales representatives of the thirdparty\n\t *\n\t * @param \tint[]|int \t$salesrep\t \tUser ID or array of user IDs\n\t * @param   bool        $onlyAdd        Only add (no delete before)\n\t * @return\tint\t\t\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function setSalesRep($salesrep, $onlyAdd = false)\n\t{\n\t\tglobal $user;\n\n\t\t// Handle single user\n\t\tif (!is_array($salesrep)) {\n\t\t\t$salesrep = array($salesrep);\n\t\t}\n\n\t\t$to_del = array(); // Nothing to delete\n\t\t$to_add = $salesrep;\n\t\tif ($onlyAdd === false) {\n\t\t\t// Get current users\n\t\t\t$existing = $this->getSalesRepresentatives($user, 1);\n\n\t\t\t// Diff\n\t\t\tif (is_array($existing)) {\n\t\t\t\t$to_del = array_diff($existing, $salesrep);\n\t\t\t\t$to_add = array_diff($salesrep, $existing);\n\t\t\t}\n\t\t}\n\n\t\t$error = 0;\n\n\t\t// Process\n\t\tforeach ($to_del as $del) {\n\t\t\t$this->del_commercial($user, $del);\n\t\t}\n\t\tforeach ($to_add as $add) {\n\t\t\t$result = $this->add_commercial($user, $add);\n\t\t\tif ($result < 0) {\n\t\t\t\t$error++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $error ? -1 : 1;\n\t}\n\n\t/**\n\t *    Define third-party type of current company\n\t *\n\t *    @param\tint\t\t$typent_id\tthird party type rowid in llx_c_typent\n\t *    @return\tint     \t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function setThirdpartyType($typent_id)\n\t{\n\t\tif ($this->id) {\n\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"societe\";\n\t\t\t$sql .= \" SET fk_typent = \".($typent_id > 0 ? $typent_id : \"null\");\n\t\t\t$sql .= \" WHERE rowid = \".$this->id;\n\t\t\tdol_syslog(get_class($this).'::setThirdpartyType', LOG_DEBUG);\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$this->typent_id = $typent_id;\n\t\t\t\t$this->typent_code = dol_getIdFromCode($this->db, $this->$typent_id, 'c_typent', 'id', 'code');\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t * Function used to replace a thirdparty id with another one.\n\t * It must be used within a transaction to avoid trouble\n\t *\n\t * @param \tDoliDB \t$db \t\tDatabase handler\n\t * @param \tint \t$origin_id \tOld thirdparty id (will be removed)\n\t * @param \tint \t$dest_id \tNew thirdparty id\n\t * @return \tbool\t\t\t\tTrue if success, False if error\n\t */\n\tpublic static function replaceThirdparty(DoliDB $db, $origin_id, $dest_id)\n\t{\n\t\tif ($origin_id == $dest_id) {\n\t\t\tdol_syslog('Error: Try to merge a thirdparty into itself');\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * Thirdparty commercials cannot be the same in both thirdparties so we look for them and remove some to avoid duplicate.\n\t\t * Because this function is meant to be executed within a transaction, we won't take care of begin/commit.\n\t\t */\n\t\t$sql = 'SELECT rowid FROM '.MAIN_DB_PREFIX.'societe_commerciaux ';\n\t\t$sql .= ' WHERE fk_soc = '.(int) $dest_id.' AND fk_user IN ( ';\n\t\t$sql .= ' SELECT fk_user ';\n\t\t$sql .= ' FROM '.MAIN_DB_PREFIX.'societe_commerciaux ';\n\t\t$sql .= ' WHERE fk_soc = '.(int) $origin_id.') ';\n\n\t\t$resql = $db->query($sql);\n\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t$db->query('DELETE FROM '.MAIN_DB_PREFIX.'societe_commerciaux WHERE rowid = '.((int) $obj->rowid));\n\t\t}\n\n\t\t/**\n\t\t * llx_societe_extrafields table must not be here because we don't care about the old thirdparty data\n\t\t * Do not include llx_societe because it will be replaced later\n\t\t */\n\t\t$tables = array(\n\t\t\t'societe_address',\n\t\t\t'societe_commerciaux',\n\t\t\t'societe_prices',\n\t\t\t'societe_remise',\n\t\t\t'societe_remise_except',\n\t\t\t'societe_rib'\n\t\t);\n\n\t\treturn CommonObject::commonReplaceThirdparty($db, $origin_id, $dest_id, $tables);\n\t}\n\n\t/**\n\t * Sets an accountancy code for a thirdparty.\n\t * Also calls COMPANY_MODIFY trigger when modified\n\t *\n\t * @param   string  $type   It can be only 'buy' or 'sell'\n\t * @param   string  $value  Accountancy code\n\t * @return  int             <0 KO >0 OK\n\t */\n\tpublic function setAccountancyCode($type, $value)\n\t{\n\t\tglobal $user, $langs, $conf;\n\n\t\t$this->db->begin();\n\n\t\tif ($type == 'buy') {\n\t\t\t$field = 'accountancy_code_buy';\n\t\t} elseif ($type == 'sell') {\n\t\t\t$field = 'accountancy_code_sell';\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\n\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.$this->table_element.\" SET \";\n\t\t$sql.= \"$field = '\".$this->db->escape($value).\"'\";\n\t\t$sql.= \" WHERE rowid = \".$this->id;\n\n\t\tdol_syslog(get_class($this).\"::\".__FUNCTION__.\" sql=\".$sql, LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\n\t\tif ($resql) {\n\t\t\t// Call triggers\n\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n\t\t\t$interface=new Interfaces($this->db);\n\t\t\t$result=$interface->run_triggers('COMPANY_MODIFY', $this, $user, $langs, $conf);\n\t\t\tif ($result < 0) {\n\t\t\t\t$this->errors=$interface->errors;\n\t\t\t\t$this->db->rollback();\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\t// End call triggers\n\n\t\t\t$this->$field = $value;\n\n\t\t\t$this->db->commit();\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t$this->error=$this->db->lasterror();\n\t\t\t$this->db->rollback();\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *\tFunction to get partnerships array\n\t *\n\t *  @param\t\tstring\t\t$mode\t\t'member' or 'thirdparty'\n\t *\t@return\t\tint\t\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function fetchPartnerships($mode)\n\t{\n\t\tglobal $langs;\n\n\t\trequire_once DOL_DOCUMENT_ROOT.'/parntership/class/partnership.class.php';\n\n\n\t\t$this->partnerships[] = array();\n\n\t\treturn 1;\n\t}\n}\n"], "fixing_code": ["<?php\n/* Copyright (C) 2001-2007\tRodolphe Quiedeville\t<rodolphe@quiedeville.org>\n * Copyright (C) 2003\t\tJean-Louis Bergamo\t\t<jlb@j1b.org>\n * Copyright (C) 2004-2012\tLaurent Destailleur\t\t<eldy@users.sourceforge.net>\n * Copyright (C) 2004\t\tChristophe Combelles\t<ccomb@free.fr>\n * Copyright (C) 2005-2010\tRegis Houssin\t\t\t<regis.houssin@inodbox.com>\n * Copyright (C) 2013\t\tFlorian Henry\t\t\t<florian.henry@open-concept.pro>\n * Copyright (C) 2015-2016\tMarcos Garc\u00eda\t\t\t<marcosgdf@gmail.com>\n * Copyright (C) 2015-2017\tAlexandre Spangaro\t\t<aspangaro@open-dsi.fr>\n * Copyright (C) 2016\t\tFerran Marcet   \t\t<fmarcet@2byte.es>\n * Copyright (C) 2019\t\tJC Prieto\t\t\t\t<jcprieto@virtual20.com><prietojc@gmail.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/compta/bank/class/account.class.php\n *\t\\ingroup    bank\n *\t\\brief      File of class to manage bank accounts\n */\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/commonobject.class.php';\n\n\n/**\n *\tClass to manage bank accounts\n */\nclass Account extends CommonObject\n{\n\t/**\n\t * @var string ID to identify managed object\n\t */\n\tpublic $element = 'bank_account';\n\n\t/**\n\t * @var string Name of table without prefix where object is stored\n\t */\n\tpublic $table_element = 'bank_account';\n\n\t/**\n\t * @var string String with name of icon for myobject. Must be the part after the 'object_' into object_myobject.png\n\t */\n\tpublic $picto = 'account';\n\n\t/**\n\t * @var\tint\t\tUse id instead of rowid\n\t * @deprecated\n\t * @see $id\n\t */\n\tpublic $rowid;\n\n\t/**\n\t * Account Label\n\t * @var string\n\t */\n\tpublic $label;\n\n\t/**\n\t * Bank account type. Check TYPE_ constants\n\t * @var int\n\t */\n\tpublic $courant;\n\n\t/**\n\t * Bank account type. Check TYPE_ constants\n\t * @var int\n\t */\n\tpublic $type;\n\n\t/**\n\t * Bank name\n\t * @var string\n\t */\n\tpublic $bank;\n\n\t/**\n\t * Status\n\t * @var int\n\t */\n\tpublic $clos = self::STATUS_OPEN;\n\n\t/**\n\t * Does it need to be conciliated?\n\t * @var int\n\t */\n\tpublic $rappro = 1;\n\n\t/**\n\t * Webpage\n\t * @var string\n\t */\n\tpublic $url;\n\n\t/**\n\t * Bank number. If in SEPA area, you should move to IBAN field\n\t * @var string\n\t */\n\tpublic $code_banque;\n\n\t/**\n\t * Branch number. If in SEPA area, you should move to IBAN field\n\t * @var string\n\t */\n\tpublic $code_guichet;\n\n\t/**\n\t * Account number. If in SEPA area, you should move to IBAN field\n\t * @var string\n\t */\n\tpublic $number;\n\n\t/**\n\t * Bank account number control digit. If in SEPA area, you should move to IBAN field\n\t * @var string\n\t */\n\tpublic $cle_rib;\n\n\t/**\n\t * BIC/Swift code\n\t * @var string\n\t */\n\tpublic $bic;\n\n\t/**\n\t * IBAN number (International Bank Account Number). Stored into iban_prefix field into database\n\t * @var string\n\t */\n\tpublic $iban;\n\n\t/**\n\t * Name of account holder\n\t * @var string\n\t */\n\tpublic $proprio;\n\n\t/**\n\t * Address of account holder\n\t * @var string\n\t */\n\tpublic $owner_address;\n\n\tpublic $state_id;\n\tpublic $state_code;\n\tpublic $state;\n\n\t/**\n\t * Variable containing all account types with their respective translated label.\n\t * Defined in __construct\n\t * @var array\n\t */\n\tpublic $type_lib = array();\n\n\t/**\n\t * Variable containing all account statuses with their respective translated label.\n\t * Defined in __construct\n\t * @var array\n\t */\n\tpublic $status = array();\n\n\t/**\n\t * Accountancy code\n\t * @var string\n\t */\n\tpublic $account_number;\n\n\t/**\n\t * @var int ID\n\t */\n\tpublic $fk_accountancy_journal;\n\t/**\n\t * @var string\tLabel of journal\n\t */\n\tpublic $accountancy_journal;\n\n\t/**\n\t * Currency code\n\t * @var string\n\t */\n\tpublic $currency_code;\n\n\t/**\n\t * Currency code\n\t * @var string\n\t * @deprecated Use currency_code instead\n\t */\n\tpublic $account_currency_code;\n\n\t/**\n\t * Authorized minimum balance\n\t * @var float\n\t */\n\tpublic $min_allowed;\n\n\t/**\n\t * Desired minimum balance\n\t * @var float\n\t */\n\tpublic $min_desired;\n\n\t/**\n\t * Notes\n\t * @var string\n\t */\n\tpublic $comment;\n\n\t/**\n\t * Date of the initial balance. Used in Account::create\n\t * @var int\n\t */\n\tpublic $date_solde;\n\n\t/**\n\t * Creditor Identifier CI. Some banks use different ICS for direct debit and bank tranfer\n\t * @var string\n\t */\n\tpublic $ics;\n\n\t/**\n\t * Creditor Identifier for Bank Transfer.\n\t * @var string\n\t */\n\tpublic $ics_transfer;\n\n\n\n\t/**\n\t *  'type' if the field format ('integer', 'integer:ObjectClass:PathToClass[:AddCreateButtonOrNot[:Filter]]', 'varchar(x)', 'double(24,8)', 'real', 'price', 'text', 'html', 'date', 'datetime', 'timestamp', 'duration', 'mail', 'phone', 'url', 'password')\n\t *         Note: Filter can be a string like \"(t.ref:like:'SO-%') or (t.date_creation:<:'20160101') or (t.nature:is:NULL)\"\n\t *  'label' the translation key.\n\t *  'enabled' is a condition when the field must be managed.\n\t *  'position' is the sort order of field.\n\t *  'notnull' is set to 1 if not null in database. Set to -1 if we must set data to null if empty ('' or 0).\n\t *  'visible' says if field is visible in list (Examples: 0=Not visible, 1=Visible on list and create/update/view forms, 2=Visible on list only, 3=Visible on create/update/view form only (not list), 4=Visible on list and update/view form only (not create). 5=Visible on list and view only (not create/not update). Using a negative value means field is not shown by default on list but can be selected for viewing)\n\t *  'noteditable' says if field is not editable (1 or 0)\n\t *  'default' is a default value for creation (can still be overwrote by the Setup of Default Values if field is editable in creation form). Note: If default is set to '(PROV)' and field is 'ref', the default value will be set to '(PROVid)' where id is rowid when a new record is created.\n\t *  'index' if we want an index in database.\n\t *  'foreignkey'=>'tablename.field' if the field is a foreign key (it is recommanded to name the field fk_...).\n\t *  'searchall' is 1 if we want to search in this field when making a search from the quick search button.\n\t *  'isameasure' must be set to 1 if you want to have a total on list for this field. Field type must be summable like integer or double(24,8).\n\t *  'css' is the CSS style to use on field. For example: 'maxwidth200'\n\t *  'help' is a string visible as a tooltip on field\n\t *  'showoncombobox' if value of the field must be visible into the label of the combobox that list record\n\t *  'disabled' is 1 if we want to have the field locked by a 'disabled' attribute. In most cases, this is never set into the definition of $fields into class, but is set dynamically by some part of code.\n\t *  'arrayofkeyval' to set list of value if type is a list of predefined values. For example: array(\"0\"=>\"Draft\",\"1\"=>\"Active\",\"-1\"=>\"Cancel\")\n\t *  'comment' is not used. You can store here any text of your choice. It is not used by application.\n\t *\n\t *  Note: To have value dynamic, you can set value to 0 in definition and edit the value on the fly into the constructor.\n\t */\n\n\t// BEGIN MODULEBUILDER PROPERTIES\n\t/**\n\t * @var array  Array with all fields and their property. Do not use it as a static var. It may be modified by constructor.\n\t */\n\tpublic $fields = array(\n\t\t'rowid' =>array('type'=>'integer', 'label'=>'TechnicalID', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>10),\n\t\t'ref' =>array('type'=>'varchar(12)', 'label'=>'Ref', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'showoncombobox'=>1, 'position'=>25),\n\t\t'label' =>array('type'=>'varchar(30)', 'label'=>'Label', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>30),\n\t\t'entity' =>array('type'=>'integer', 'label'=>'Entity', 'default'=>1, 'enabled'=>1, 'visible'=>-2, 'notnull'=>1, 'position'=>35, 'index'=>1),\n\t\t'bank' =>array('type'=>'varchar(60)', 'label'=>'Bank', 'enabled'=>1, 'visible'=>-1, 'position'=>40),\n\t\t'code_banque' =>array('type'=>'varchar(128)', 'label'=>'Code banque', 'enabled'=>1, 'visible'=>-1, 'position'=>45),\n\t\t'code_guichet' =>array('type'=>'varchar(6)', 'label'=>'Code guichet', 'enabled'=>1, 'visible'=>-1, 'position'=>50),\n\t\t'number' =>array('type'=>'varchar(255)', 'label'=>'Number', 'enabled'=>1, 'visible'=>-1, 'position'=>55),\n\t\t'cle_rib' =>array('type'=>'varchar(5)', 'label'=>'Cle rib', 'enabled'=>1, 'visible'=>-1, 'position'=>60),\n\t\t'bic' =>array('type'=>'varchar(11)', 'label'=>'Bic', 'enabled'=>1, 'visible'=>-1, 'position'=>65),\n\t\t'iban_prefix' =>array('type'=>'varchar(34)', 'label'=>'Iban prefix', 'enabled'=>1, 'visible'=>-1, 'position'=>70),\n\t\t'country_iban' =>array('type'=>'varchar(2)', 'label'=>'Country iban', 'enabled'=>1, 'visible'=>-1, 'position'=>75),\n\t\t'cle_iban' =>array('type'=>'varchar(2)', 'label'=>'Cle iban', 'enabled'=>1, 'visible'=>-1, 'position'=>80),\n\t\t'domiciliation' =>array('type'=>'varchar(255)', 'label'=>'Domiciliation', 'enabled'=>1, 'visible'=>-1, 'position'=>85),\n\t\t'state_id' =>array('type'=>'integer', 'label'=>'State id', 'enabled'=>1, 'visible'=>-1, 'position'=>90),\n\t\t'fk_pays' =>array('type'=>'integer', 'label'=>'Fk pays', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>95),\n\t\t'proprio' =>array('type'=>'varchar(60)', 'label'=>'Proprio', 'enabled'=>1, 'visible'=>-1, 'position'=>100),\n\t\t'owner_address' =>array('type'=>'text', 'label'=>'Owner address', 'enabled'=>1, 'visible'=>-1, 'position'=>105),\n\t\t'courant' =>array('type'=>'smallint(6)', 'label'=>'Courant', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>110),\n\t\t'clos' =>array('type'=>'smallint(6)', 'label'=>'Clos', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>115),\n\t\t'rappro' =>array('type'=>'smallint(6)', 'label'=>'Rappro', 'enabled'=>1, 'visible'=>-1, 'position'=>120),\n\t\t'url' =>array('type'=>'varchar(128)', 'label'=>'Url', 'enabled'=>1, 'visible'=>-1, 'position'=>125),\n\t\t'account_number' =>array('type'=>'varchar(32)', 'label'=>'Account number', 'enabled'=>1, 'visible'=>-1, 'position'=>130),\n\t\t'fk_accountancy_journal' =>array('type'=>'integer', 'label'=>'Accountancy journal ID', 'enabled'=>1, 'visible'=>-1, 'position'=>132),\n\t\t'accountancy_journal' =>array('type'=>'varchar(20)', 'label'=>'Accountancy journal', 'enabled'=>1, 'visible'=>-1, 'position'=>135),\n\t\t'currency_code' =>array('type'=>'varchar(3)', 'label'=>'Currency code', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>140),\n\t\t'min_allowed' =>array('type'=>'integer', 'label'=>'Min allowed', 'enabled'=>1, 'visible'=>-1, 'position'=>145),\n\t\t'min_desired' =>array('type'=>'integer', 'label'=>'Min desired', 'enabled'=>1, 'visible'=>-1, 'position'=>150),\n\t\t'comment' =>array('type'=>'text', 'label'=>'Comment', 'enabled'=>1, 'visible'=>-1, 'position'=>155),\n\t\t'datec' =>array('type'=>'datetime', 'label'=>'DateCreation', 'enabled'=>1, 'visible'=>-1, 'position'=>156),\n\t\t'tms' =>array('type'=>'timestamp', 'label'=>'DateModification', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>157),\n\t\t'fk_user_author' =>array('type'=>'integer:User:user/class/user.class.php', 'label'=>'Fk user author', 'enabled'=>1, 'visible'=>-1, 'position'=>160),\n\t\t'fk_user_modif' =>array('type'=>'integer:User:user/class/user.class.php', 'label'=>'UserModif', 'enabled'=>1, 'visible'=>-2, 'notnull'=>-1, 'position'=>165),\n\t\t'note_public' =>array('type'=>'text', 'label'=>'NotePrivate', 'enabled'=>1, 'visible'=>0, 'position'=>170),\n\t\t'model_pdf' =>array('type'=>'varchar(255)', 'label'=>'Model pdf', 'enabled'=>1, 'visible'=>0, 'position'=>175),\n\t\t'import_key' =>array('type'=>'varchar(14)', 'label'=>'ImportId', 'enabled'=>1, 'visible'=>-2, 'position'=>180),\n\t\t'extraparams' =>array('type'=>'varchar(255)', 'label'=>'Extraparams', 'enabled'=>1, 'visible'=>-1, 'position'=>185),\n\t);\n\t// END MODULEBUILDER PROPERTIES\n\n\t/**\n\t * Current account\n\t */\n\tconst TYPE_CURRENT = 1;\n\t/**\n\t * Cash account\n\t */\n\tconst TYPE_CASH = 2;\n\t/**\n\t * Savings account\n\t */\n\tconst TYPE_SAVINGS = 0;\n\n\n\tconst STATUS_OPEN = 0;\n\tconst STATUS_CLOSED = 1;\n\n\n\t/**\n\t *  Constructor\n\t *\n\t *  @param\tDoliDB\t\t$db\t\tDatabase handler\n\t */\n\tpublic function __construct(DoliDB $db)\n\t{\n\t\tglobal $langs;\n\n\t\t$this->db = $db;\n\n\t\t$this->solde = 0;\n\n\t\t$this->type_lib = array(\n\t\t\tself::TYPE_SAVINGS => $langs->trans(\"BankType0\"),\n\t\t\tself::TYPE_CURRENT => $langs->trans(\"BankType1\"),\n\t\t\tself::TYPE_CASH => $langs->trans(\"BankType2\"),\n\t\t);\n\n\t\t$this->status = array(\n\t\t\tself::STATUS_OPEN => $langs->trans(\"StatusAccountOpened\"),\n\t\t\tself::STATUS_CLOSED => $langs->trans(\"StatusAccountClosed\")\n\t\t);\n\t}\n\n\t/**\n\t * Shows the account number in the appropriate format\n\t *\n\t * @return string\n\t */\n\tpublic function __toString()\n\t{\n\t\t$string = '';\n\t\tforeach ($this->getFieldsToShow() as $val) {\n\t\t\tif ($val == 'BankCode') {\n\t\t\t\t$string .= $this->code_banque.' ';\n\t\t\t} elseif ($val == 'BankAccountNumber') {\n\t\t\t\t$string .= $this->number.' ';\n\t\t\t} elseif ($val == 'DeskCode') {\n\t\t\t\t$string .= $this->code_guichet.' ';\n\t\t\t} elseif ($val == 'BankAccountNumberKey') {\n\t\t\t\t$string .= $this->cle_rib.' ';\n\t\t\t} elseif ($val == 'BIC') {\n\t\t\t\t$string .= $this->bic.' ';\n\t\t\t} elseif ($val == 'IBAN') {\n\t\t\t\t$string .= $this->iban.' ';\n\t\t\t}\n\t\t}\n\n\t\treturn trim($string);\n\t}\n\n\n\t/**\n\t *  Return if a bank account need to be conciliated\n\t *\n\t *  @return     int         1 if need to be concialiated, < 0 otherwise.\n\t */\n\tpublic function canBeConciliated()\n\t{\n\t\tglobal $conf;\n\n\t\tif (empty($this->rappro)) {\n\t\t\treturn -1;\n\t\t}\n\t\tif ($this->courant == Account::TYPE_CASH && empty($conf->global->BANK_CAN_RECONCILIATE_CASHACCOUNT)) {\n\t\t\treturn -2;\n\t\t}\n\t\tif ($this->clos) {\n\t\t\treturn -3;\n\t\t}\n\t\treturn 1;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Add a link between bank line record and its source\n\t *\n\t *      @param\tint\t\t$line_id    Id ecriture bancaire\n\t *      @param  int\t\t$url_id     Id parametre url\n\t *      @param  string\t$url        Url\n\t *      @param  string\t$label      Link label\n\t *      @param  string\t$type       Type of link ('payment', 'company', 'member', ...)\n\t *      @return int         \t\t<0 if KO, id line if OK\n\t */\n\tpublic function add_url_line($line_id, $url_id, $url, $label, $type)\n\t{\n\t\t// phpcs:enable\n\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"bank_url (\";\n\t\t$sql .= \"fk_bank\";\n\t\t$sql .= \", url_id\";\n\t\t$sql .= \", url\";\n\t\t$sql .= \", label\";\n\t\t$sql .= \", type\";\n\t\t$sql .= \") VALUES (\";\n\t\t$sql .= \" \".((int) $line_id);\n\t\t$sql .= \", '\".$this->db->escape($url_id).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($url).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($label).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($type).\"'\";\n\t\t$sql .= \")\";\n\n\t\tdol_syslog(get_class($this).\"::add_url_line\", LOG_DEBUG);\n\t\tif ($this->db->query($sql)) {\n\t\t\t$rowid = $this->db->last_insert_id(MAIN_DB_PREFIX.\"bank_url\");\n\t\t\treturn $rowid;\n\t\t} else {\n\t\t\t$this->error = $this->db->lasterror();\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * \t\tTODO Move this into AccountLine\n\t *      Return array with links from llx_bank_url\n\t *\n\t *      @param  int         $fk_bank    To search using bank transaction id\n\t *      @param  int         $url_id     To search using link to\n\t *      @param  string      $type       To search using type\n\t *      @return array|int               Array of links array('url'=>, 'url_id'=>, 'label'=>, 'type'=> 'fk_bank'=> ) or -1 on error\n\t */\n\tpublic function get_url($fk_bank = '', $url_id = '', $type = '')\n\t{\n\t\t// phpcs:enable\n\t\t$lines = array();\n\n\t\t// Check parameters\n\t\tif (!empty($fk_bank) && (!empty($url_id) || !empty($type))) {\n\t\t\t$this->error = \"ErrorBadParameter\";\n\t\t\treturn -1;\n\t\t}\n\n\t\t$sql = \"SELECT fk_bank, url_id, url, label, type\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank_url\";\n\t\tif ($fk_bank > 0) {\n\t\t\t$sql .= \" WHERE fk_bank = \".((int) $fk_bank);\n\t\t} else {\n\t\t\t$sql .= \" WHERE url_id = \".((int) $url_id).\" AND type = '\".$this->db->escape($type).\"'\";\n\t\t}\n\t\t$sql .= \" ORDER BY type, label\";\n\n\t\tdol_syslog(get_class($this).\"::get_url\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\t$i = 0;\n\t\t\t$num = $this->db->num_rows($result);\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\t// Anciens liens (pour compatibilite)\n\t\t\t\t$lines[$i][0] = $obj->url;\n\t\t\t\t$lines[$i][1] = $obj->url_id;\n\t\t\t\t$lines[$i][2] = $obj->label;\n\t\t\t\t$lines[$i][3] = $obj->type;\n\t\t\t\t// Nouveaux liens\n\t\t\t\t$lines[$i]['url'] = $obj->url;\n\t\t\t\t$lines[$i]['url_id'] = $obj->url_id;\n\t\t\t\t$lines[$i]['label'] = $obj->label;\n\t\t\t\t$lines[$i]['type'] = $obj->type;\n\t\t\t\t$lines[$i]['fk_bank'] = $obj->fk_bank;\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $lines;\n\t}\n\n\t/**\n\t *  Add an entry into table \".MAIN_DB_PREFIX.\"bank\n\t *\n\t *  @param\tint\t        $date\t\t\tDate operation\n\t *  @param\tstring\t\t$oper\t\t\t'VIR','PRE','LIQ','VAD','CB','CHQ'...\n\t *  @param\tstring\t\t$label\t\t\tDescripton\n\t *  @param\tfloat\t\t$amount\t\t\tAmount\n\t *  @param\tstring\t\t$num_chq\t\tNumero cheque or transfer\n\t *  @param\tint  \t\t$categorie\t\tCategory id (optionnal)\n\t *  @param\tUser\t\t$user\t\t\tUser that create\n\t *  @param\tstring\t\t$emetteur\t\tName of cheque writer\n\t *  @param\tstring\t\t$banque\t\t\tBank of cheque writer\n\t *  @param\tstring\t\t$accountancycode\tWhen we record a free bank entry, we must provide accounting account if accountancy module is on.\n\t *  @param\tint\t\t\t$datev\t\t\tDate value\n\t *  @param  string      $num_releve     Label of bank receipt for reconciliation\n\t *  @return\tint\t\t\t\t\t\t\tRowid of added entry, <0 if KO\n\t */\n\tpublic function addline($date, $oper, $label, $amount, $num_chq, $categorie, User $user, $emetteur = '', $banque = '', $accountancycode = '', $datev = null, $num_releve = '')\n\t{\n\t\t// Deprecation warning\n\t\tif (is_numeric($oper)) {\n\t\t\tdol_syslog(__METHOD__.\": using numeric operations is deprecated\", LOG_WARNING);\n\t\t}\n\n\t\tif (empty($this->id) && !empty($this->rowid)) {\t// For backward compatibility\n\t\t\t$this->id = $this->rowid;\n\t\t}\n\n\t\t// Clean parameters\n\t\t$emetteur = trim($emetteur);\n\t\t$banque = trim($banque);\n\t\t$label = trim($label);\n\n\t\t$now = dol_now();\n\n\t\tif (is_numeric($oper)) {    // Clean operation to have a code instead of a rowid\n\t\t\t$sql = \"SELECT code FROM \".MAIN_DB_PREFIX.\"c_paiement\";\n\t\t\t$sql .= \" WHERE id = \".((int) $oper);\n\t\t\t$sql .= \" AND entity IN (\".getEntity('c_paiement').\")\";\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t$oper = $obj->code;\n\t\t\t} else {\n\t\t\t\tdol_print_error($this->db, 'Failed to get payment type code');\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\t// Check parameters\n\t\tif (!$oper) {\n\t\t\t$this->error = \"oper not defined\";\n\t\t\treturn -1;\n\t\t}\n\t\tif (!$this->id) {\n\t\t\t$this->error = \"this->id not defined\";\n\t\t\treturn -2;\n\t\t}\n\t\tif ($this->courant == Account::TYPE_CASH && $oper != 'LIQ') {\n\t\t\t$this->error = \"ErrorCashAccountAcceptsOnlyCashMoney\";\n\t\t\treturn -3;\n\t\t}\n\n\t\t$this->db->begin();\n\n\t\tif (is_null($datev) || empty($datev)) {\n\t\t\t$datev = $date;\n\t\t}\n\n\t\t$accline = new AccountLine($this->db);\n\t\t$accline->datec = $now;\n\t\t$accline->dateo = $date;\n\t\t$accline->datev = $datev;\n\t\t$accline->label = $label;\n\t\t$accline->amount = $amount;\n\t\t$accline->fk_user_author = $user->id;\n\t\t$accline->fk_account = $this->id;\n\t\t$accline->fk_type = $oper;\n\t\t$accline->numero_compte = $accountancycode;\n\t\t$accline->num_releve = $num_releve;\n\n\t\tif ($num_chq) {\n\t\t\t$accline->num_chq = $num_chq;\n\t\t}\n\n\t\tif ($emetteur) {\n\t\t\t$accline->emetteur = $emetteur;\n\t\t}\n\n\t\tif ($banque) {\n\t\t\t$accline->bank_chq = $banque;\n\t\t}\n\n\t\tif ($accline->insert() > 0) {\n\t\t\tif ($categorie > 0) {\n\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"bank_class(\";\n\t\t\t\t$sql .= \"lineid, fk_categ\";\n\t\t\t\t$sql .= \") VALUES (\";\n\t\t\t\t$sql .= ((int) $accline->id).\", '\".$this->db->escape($categorie).\"'\";\n\t\t\t\t$sql .= \")\";\n\n\t\t\t\t$result = $this->db->query($sql);\n\t\t\t\tif (!$result) {\n\t\t\t\t\t$this->error = $this->db->lasterror();\n\t\t\t\t\t$this->db->rollback();\n\n\t\t\t\t\treturn -3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$this->db->commit();\n\n\t\t\treturn $accline->id;\n\t\t} else {\n\t\t\t$this->error = $accline->error;\n\t\t\t$this->errors = $accline->errors;\n\t\t\t$this->db->rollback();\n\n\t\t\treturn -2;\n\t\t}\n\t}\n\n\t/**\n\t *  Create bank account into database\n\t *\n\t *  @param\tUser\t$user\t\tObject user making creation\n\t *  @param  int     $notrigger  1=Disable triggers\n\t *  @return int        \t\t\t< 0 if KO, > 0 if OK\n\t */\n\tpublic function create(User $user, $notrigger = 0)\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$error = 0;\n\n\t\t// Clean parameters\n\t\tif (!$this->min_allowed) {\n\t\t\t$this->min_allowed = 0;\n\t\t}\n\t\tif (!$this->min_desired) {\n\t\t\t$this->min_desired = 0;\n\t\t}\n\n\t\t// Check parameters\n\t\tif (empty($this->country_id)) {\n\t\t\t$this->error = $langs->transnoentitiesnoconv(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"Country\"));\n\t\t\tdol_syslog(get_class($this).\"::create \".$this->error, LOG_ERR);\n\t\t\treturn -1;\n\t\t}\n\t\tif (empty($this->ref)) {\n\t\t\t$this->error = $langs->transnoentitiesnoconv(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"Ref\"));\n\t\t\tdol_syslog(get_class($this).\"::create \".$this->error, LOG_ERR);\n\t\t\treturn -1;\n\t\t}\n\t\tif (empty($this->date_solde)) {\n\t\t\t$this->error = $langs->transnoentitiesnoconv(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"DateInitialBalance\"));\n\t\t\tdol_syslog(get_class($this).\"::create \".$this->error, LOG_ERR);\n\t\t\treturn -1;\n\t\t}\n\n\t\t// Chargement librairie pour acces fonction controle RIB\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/bank.lib.php';\n\n\t\t$now = dol_now();\n\n\t\t$this->db->begin();\n\n\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"bank_account (\";\n\t\t$sql .= \"datec\";\n\t\t$sql .= \", ref\";\n\t\t$sql .= \", label\";\n\t\t$sql .= \", entity\";\n\t\t$sql .= \", account_number\";\n\t\t$sql .= \", fk_accountancy_journal\";\n\t\t$sql .= \", bank\";\n\t\t$sql .= \", code_banque\";\n\t\t$sql .= \", code_guichet\";\n\t\t$sql .= \", number\";\n\t\t$sql .= \", cle_rib\";\n\t\t$sql .= \", bic\";\n\t\t$sql .= \", iban_prefix\";\n\t\t$sql .= \", domiciliation\";\n\t\t$sql .= \", proprio\";\n\t\t$sql .= \", owner_address\";\n\t\t$sql .= \", currency_code\";\n\t\t$sql .= \", rappro\";\n\t\t$sql .= \", min_allowed\";\n\t\t$sql .= \", min_desired\";\n\t\t$sql .= \", comment\";\n\t\t$sql .= \", state_id\";\n\t\t$sql .= \", fk_pays\";\n\t\t$sql .= \", ics\";\n\t\t$sql .= \", ics_transfer\";\n\t\t$sql .= \") VALUES (\";\n\t\t$sql .= \"'\".$this->db->idate($now).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->ref).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->label).\"'\";\n\t\t$sql .= \", \".$conf->entity;\n\t\t$sql .= \", '\".$this->db->escape($this->account_number).\"'\";\n\t\t$sql .= \", \".($this->fk_accountancy_journal > 0 ? $this->db->escape($this->fk_accountancy_journal) : \"null\");\n\t\t$sql .= \", '\".$this->db->escape($this->bank).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->code_banque).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->code_guichet).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->number).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->cle_rib).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->bic).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->iban).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->domiciliation).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->proprio).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->owner_address).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->currency_code).\"'\";\n\t\t$sql .= \", \".((int) $this->rappro);\n\t\t$sql .= \", \".price2num($this->min_allowed);\n\t\t$sql .= \", \".price2num($this->min_desired);\n\t\t$sql .= \", '\".$this->db->escape($this->comment).\"'\";\n\t\t$sql .= \", \".($this->state_id > 0 ? ((int) $this->state_id) : \"null\");\n\t\t$sql .= \", \".($this->country_id > 0 ? ((int) $this->country_id) : \"null\");\n\t\t$sql .= \", '\".$this->db->escape($this->ics).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->ics_transfer).\"'\";\n\t\t$sql .= \")\";\n\n\t\tdol_syslog(get_class($this).\"::create\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$this->id = $this->db->last_insert_id(MAIN_DB_PREFIX.\"bank_account\");\n\n\t\t\t$result = $this->update($user, 1);\n\t\t\tif ($result > 0) {\n\t\t\t\t$accline = new AccountLine($this->db);\n\t\t\t\t$accline->datec = $this->db->idate($now);\n\t\t\t\t$accline->label = '('.$langs->trans(\"InitialBankBalance\").')';\n\t\t\t\t$accline->amount = price2num($this->solde);\n\t\t\t\t$accline->fk_user_author = $user->id;\n\t\t\t\t$accline->fk_account = $this->id;\n\t\t\t\t$accline->datev = $this->db->idate($this->date_solde);\n\t\t\t\t$accline->dateo = $this->db->idate($this->date_solde);\n\t\t\t\t$accline->fk_type = 'SOLD';\n\n\t\t\t\tif ($accline->insert() < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t\t$this->error = $accline->error;\n\t\t\t\t\t$this->errors = $accline->errors;\n\t\t\t\t}\n\n\t\t\t\tif (!$error) {\n\t\t\t\t\t$result = $this->insertExtraFields();\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error && !$notrigger) {\n\t\t\t\t\t// Call trigger\n\t\t\t\t\t$result = $this->call_trigger('BANKACCOUNT_CREATE', $user);\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t\t// End call triggers\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$error++;\n\t\t\t}\n\t\t} else {\n\t\t\tif ($this->db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n\t\t\t\t$this->error = $langs->trans(\"ErrorBankLabelAlreadyExists\");\n\t\t\t\t$error++;\n\t\t\t} else {\n\t\t\t\t$this->error = $this->db->error().\" sql=\".$sql;\n\t\t\t\t$error++;\n\t\t\t}\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$this->db->commit();\n\t\t\treturn $this->id;\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\treturn -1 * $error;\n\t\t}\n\t}\n\n\t/**\n\t *    \tUpdate bank account card\n\t *\n\t *    \t@param\tUser\t$user       Object user making action\n\t *      @param  int     $notrigger  1=Disable triggers\n\t *\t\t@return\tint\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function update(User $user, $notrigger = 0)\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$error = 0;\n\n\t\t$this->db->begin();\n\n\t\t// Check parameters\n\t\tif (empty($this->country_id)) {\n\t\t\t$this->error = $langs->transnoentitiesnoconv(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"Country\"));\n\t\t\tdol_syslog(get_class($this).\"::update \".$this->error, LOG_ERR);\n\t\t\treturn -1;\n\t\t}\n\t\tif (empty($this->ref)) {\n\t\t\t$this->error = $langs->transnoentitiesnoconv(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"Ref\"));\n\t\t\tdol_syslog(get_class($this).\"::update \".$this->error, LOG_ERR);\n\t\t\treturn -1;\n\t\t}\n\t\tif (!$this->label) {\n\t\t\t$this->label = \"???\";\n\t\t}\n\n\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"bank_account SET \";\n\n\t\t$sql .= \" ref   = '\".$this->db->escape($this->ref).\"'\";\n\t\t$sql .= \",label = '\".$this->db->escape($this->label).\"'\";\n\n\t\t$sql .= \",courant = \".((int) $this->courant);\n\t\t$sql .= \",clos = \".((int) $this->clos);\n\t\t$sql .= \",rappro = \".((int) $this->rappro);\n\t\t$sql .= \",url = \".($this->url ? \"'\".$this->db->escape($this->url).\"'\" : \"null\");\n\t\t$sql .= \",account_number = '\".$this->db->escape($this->account_number).\"'\";\n\t\t$sql .= \",fk_accountancy_journal = \".($this->fk_accountancy_journal > 0 ? $this->db->escape($this->fk_accountancy_journal) : \"null\");\n\t\t$sql .= \",bank  = '\".$this->db->escape($this->bank).\"'\";\n\t\t$sql .= \",code_banque='\".$this->db->escape($this->code_banque).\"'\";\n\t\t$sql .= \",code_guichet='\".$this->db->escape($this->code_guichet).\"'\";\n\t\t$sql .= \",number='\".$this->db->escape($this->number).\"'\";\n\t\t$sql .= \",cle_rib='\".$this->db->escape($this->cle_rib).\"'\";\n\t\t$sql .= \",bic='\".$this->db->escape($this->bic).\"'\";\n\t\t$sql .= \",iban_prefix = '\".$this->db->escape($this->iban).\"'\";\n\t\t$sql .= \",domiciliation='\".$this->db->escape($this->domiciliation).\"'\";\n\t\t$sql .= \",proprio = '\".$this->db->escape($this->proprio).\"'\";\n\t\t$sql .= \",owner_address = '\".$this->db->escape($this->owner_address).\"'\";\n\n\t\t$sql .= \",currency_code = '\".$this->db->escape($this->currency_code).\"'\";\n\n\t\t$sql .= \",min_allowed = \".($this->min_allowed != '' ? price2num($this->min_allowed) : \"null\");\n\t\t$sql .= \",min_desired = \".($this->min_desired != '' ? price2num($this->min_desired) : \"null\");\n\t\t$sql .= \",comment     = '\".$this->db->escape($this->comment).\"'\";\n\n\t\t$sql .= \",state_id = \".($this->state_id > 0 ? ((int) $this->state_id) : \"null\");\n\t\t$sql .= \",fk_pays = \".($this->country_id > 0 ? ((int) $this->country_id) : \"null\");\n\t\t$sql .= \",ics = '\".$this->db->escape($this->ics).\"'\";\n\t\t$sql .= \",ics_transfer = '\".$this->db->escape($this->ics_transfer).\"'\";\n\n\t\t$sql .= \" WHERE rowid = \".((int) $this->id);\n\n\t\tdol_syslog(get_class($this).\"::update\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\t// Actions on extra fields (by external module or standard code)\n\t\t\tif (!$error) {\n\t\t\t\t$result = $this->insertExtraFields();\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$error && !$notrigger) {\n\t\t\t\t// Call trigger\n\t\t\t\t$result = $this->call_trigger('BANKACCOUNT_UPDATE', $user);\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t\t// End call triggers\n\t\t\t}\n\t\t} else {\n\t\t\t$error++;\n\t\t\t$this->error = $this->db->lasterror();\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$this->db->commit();\n\t\t\treturn $this->id;\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\treturn -1 * $error;\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Update BBAN (RIB) account fields\n\t *\n\t *  @param\tUser\t$user       Object user making update\n\t *\t@return\tint\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function update_bban(User $user = null)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs;\n\n\t\t// Load library to get BAN control function\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/bank.lib.php';\n\n\t\tdol_syslog(get_class($this).\"::update_bban $this->code_banque,$this->code_guichet,$this->number,$this->cle_rib,$this->iban\");\n\n\t\t// Check parameters\n\t\tif (!$this->ref) {\n\t\t\t$this->error = $langs->transnoentitiesnoconv(\"ErrorFieldRequired\", $langs->trans(\"Ref\"));\n\t\t\treturn -2;\n\t\t}\n\n\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"bank_account SET \";\n\t\t$sql .= \" bank  = '\".$this->db->escape($this->bank).\"'\";\n\t\t$sql .= \",code_banque='\".$this->db->escape($this->code_banque).\"'\";\n\t\t$sql .= \",code_guichet='\".$this->db->escape($this->code_guichet).\"'\";\n\t\t$sql .= \",number='\".$this->db->escape($this->number).\"'\";\n\t\t$sql .= \",cle_rib='\".$this->db->escape($this->cle_rib).\"'\";\n\t\t$sql .= \",bic='\".$this->db->escape($this->bic).\"'\";\n\t\t$sql .= \",iban_prefix = '\".$this->db->escape($this->iban).\"'\";\n\t\t$sql .= \",domiciliation='\".$this->db->escape($this->domiciliation).\"'\";\n\t\t$sql .= \",proprio = '\".$this->db->escape($this->proprio).\"'\";\n\t\t$sql .= \",owner_address = '\".$this->db->escape($this->owner_address).\"'\";\n\t\t$sql .= \",state_id = \".($this->state_id > 0 ? $this->state_id : \"null\");\n\t\t$sql .= \",fk_pays = \".($this->country_id > 0 ? $this->country_id : \"null\");\n\t\t$sql .= \" WHERE rowid = \".$this->id;\n\t\t$sql .= \" AND entity = \".$conf->entity;\n\n\t\tdol_syslog(get_class($this).\"::update_bban\", LOG_DEBUG);\n\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t$this->error = $this->db->lasterror();\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t/**\n\t *      Load a bank account into memory from database\n\t *\n\t *      @param\tint\t\t$id      \tId of bank account to get\n\t *      @param  string\t$ref     \tRef of bank account to get\n\t *      @return\tint\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function fetch($id, $ref = '')\n\t{\n\t\tglobal $conf;\n\n\t\tif (empty($id) && empty($ref)) {\n\t\t\t$this->error = \"ErrorBadParameters\";\n\t\t\treturn -1;\n\t\t}\n\n\t\t$sql = \"SELECT ba.rowid, ba.ref, ba.label, ba.bank, ba.number, ba.courant, ba.clos, ba.rappro, ba.url,\";\n\t\t$sql .= \" ba.code_banque, ba.code_guichet, ba.cle_rib, ba.bic, ba.iban_prefix as iban,\";\n\t\t$sql .= \" ba.domiciliation, ba.proprio, ba.owner_address, ba.state_id, ba.fk_pays as country_id,\";\n\t\t$sql .= \" ba.account_number, ba.fk_accountancy_journal, ba.currency_code,\";\n\t\t$sql .= \" ba.min_allowed, ba.min_desired, ba.comment,\";\n\t\t$sql .= \" ba.datec as date_creation, ba.tms as date_update, ba.ics, ba.ics_transfer,\";\n\t\t$sql .= ' c.code as country_code, c.label as country,';\n\t\t$sql .= ' d.code_departement as state_code, d.nom as state';\n\t\t$sql .= ' , aj.code as accountancy_journal';\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank_account as ba\";\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_country as c ON ba.fk_pays = c.rowid';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_departements as d ON ba.state_id = d.rowid';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'accounting_journal as aj ON aj.rowid=ba.fk_accountancy_journal';\n\t\t$sql .= \" WHERE ba.entity IN (\".getEntity($this->element).\")\";\n\t\tif ($id) {\n\t\t\t$sql .= \" AND ba.rowid = \".((int) $id);\n\t\t}\n\t\tif ($ref) {\n\t\t\t$sql .= \" AND ba.ref = '\".$this->db->escape($ref).\"'\";\n\t\t}\n\n\t\tdol_syslog(get_class($this).\"::fetch\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\tif ($this->db->num_rows($result)) {\n\t\t\t\t$obj = $this->db->fetch_object($result);\n\n\t\t\t\t$this->id            = $obj->rowid;\n\t\t\t\t$this->rowid         = $obj->rowid;\n\t\t\t\t$this->ref           = $obj->ref;\n\t\t\t\t$this->label         = $obj->label;\n\t\t\t\t$this->type          = $obj->courant;\n\t\t\t\t$this->courant       = $obj->courant;\n\t\t\t\t$this->bank          = $obj->bank;\n\t\t\t\t$this->clos          = $obj->clos;\n\t\t\t\t$this->rappro        = $obj->rappro;\n\t\t\t\t$this->url           = $obj->url;\n\n\t\t\t\t$this->code_banque   = $obj->code_banque;\n\t\t\t\t$this->code_guichet  = $obj->code_guichet;\n\t\t\t\t$this->number        = $obj->number;\n\t\t\t\t$this->cle_rib       = $obj->cle_rib;\n\t\t\t\t$this->bic           = $obj->bic;\n\t\t\t\t$this->iban          = $obj->iban;\n\t\t\t\t$this->domiciliation = $obj->domiciliation;\n\t\t\t\t$this->proprio       = $obj->proprio;\n\t\t\t\t$this->owner_address = $obj->owner_address;\n\n\t\t\t\t$this->state_id        = $obj->state_id;\n\t\t\t\t$this->state_code      = $obj->state_code;\n\t\t\t\t$this->state           = $obj->state;\n\n\t\t\t\t$this->country_id    = $obj->country_id;\n\t\t\t\t$this->country_code  = $obj->country_code;\n\t\t\t\t$this->country       = $obj->country;\n\n\t\t\t\t$this->account_number = $obj->account_number;\n\t\t\t\t$this->fk_accountancy_journal = $obj->fk_accountancy_journal;\n\t\t\t\t$this->accountancy_journal = $obj->accountancy_journal;\n\n\t\t\t\t$this->currency_code  = $obj->currency_code;\n\t\t\t\t$this->account_currency_code = $obj->currency_code;\n\t\t\t\t$this->min_allowed    = $obj->min_allowed;\n\t\t\t\t$this->min_desired    = $obj->min_desired;\n\t\t\t\t$this->comment        = $obj->comment;\n\n\t\t\t\t$this->date_creation  = $this->db->jdate($obj->date_creation);\n\t\t\t\t$this->date_update    = $this->db->jdate($obj->date_update);\n\n\t\t\t\t$this->ics           = $obj->ics;\n\t\t\t\t$this->ics_transfer  = $obj->ics_transfer;\n\n\t\t\t\t// Retrieve all extrafield\n\t\t\t\t// fetch optionals attributes and labels\n\t\t\t\t$this->fetch_optionals();\n\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\t$this->error = $this->db->lasterror;\n\t\t\t$this->errors[] = $this->error;\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t * Sets object to supplied categories.\n\t *\n\t * Deletes object from existing categories not supplied.\n\t * Adds it to non existing supplied categories.\n\t * Existing categories are left untouch.\n\t *\n\t * @param int[]|int $categories Category or categories IDs\n\t * @return void\n\t */\n\tpublic function setCategories($categories)\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n\t\treturn parent::setCategoriesCommon($categories, Categorie::TYPE_ACCOUNT);\n\t}\n\n\t/**\n\t *  Delete bank account from database\n\t *\n\t *\t@param\tUser\t$user\tUser deleting\n\t *  @return int             <0 if KO, >0 if OK\n\t */\n\tpublic function delete(User $user = null)\n\t{\n\t\tglobal $conf;\n\n\t\t$error = 0;\n\n\t\t$this->db->begin();\n\n\t\t// Delete link between tag and bank account\n\t\tif (!$error) {\n\t\t\t$sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"categorie_account\";\n\t\t\t$sql .= \" WHERE fk_account = \".$this->id;\n\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\t$error++;\n\t\t\t\t$this->error = \"Error \".$this->db->lasterror();\n\t\t\t}\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"bank_account\";\n\t\t\t$sql .= \" WHERE rowid = \".((int) $this->rowid);\n\n\t\t\tdol_syslog(get_class($this).\"::delete\", LOG_DEBUG);\n\t\t\t$result = $this->db->query($sql);\n\t\t\tif ($result) {\n\t\t\t\t// Remove extrafields\n\t\t\t\tif (!$error) {\n\t\t\t\t\t$result = $this->deleteExtraFields();\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tdol_syslog(get_class($this).\"::delete error -4 \".$this->error, LOG_ERR);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$error++;\n\t\t\t\t$this->error = \"Error \".$this->db->lasterror();\n\t\t\t}\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$this->db->commit();\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t/**\n\t *  Return label of object status\n\t *\n\t *  @param      int\t\t$mode\t\t\t0=long label, 1=short label, 2=Picto + short label, 3=Picto, 4=Picto + long label, 5=short label + picto, 6=Long label + picto\n\t *  @return     string        \t\t    Label\n\t */\n\tpublic function getLibStatut($mode = 0)\n\t{\n\t\treturn $this->LibStatut($this->clos, $mode);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return label of given object status\n\t *\n\t *  @param\t int\t\t$status        \tId status\n\t *  @param   int\t\t$mode\t\t\t0=long label, 1=short label, 2=Picto + short label, 3=Picto, 4=Picto + long label, 5=short label + picto, 6=Long label + picto\n\t *  @return  string        \t\t\t    Label\n\t */\n\tpublic function LibStatut($status, $mode = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\t$langs->load('banks');\n\n\t\tif ($status == self::STATUS_OPEN) {\n\t\t\t$label = $langs->trans(\"StatusAccountOpened\");\n\t\t\t$labelshort = $langs->trans(\"StatusAccountOpened\");\n\t\t\t$statusType = 'status4';\n\t\t} else {\n\t\t\t$label = $langs->trans(\"StatusAccountClosed\");\n\t\t\t$labelshort = $langs->trans(\"StatusAccountClosed\");\n\t\t\t$statusType = 'status5';\n\t\t}\n\n\t\treturn dolGetStatus($label, $labelshort, '', $statusType, $mode);\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Renvoi si un compte peut etre supprimer ou non (sans mouvements)\n\t *\n\t *    @return     boolean     vrai si peut etre supprime, faux sinon\n\t */\n\tpublic function can_be_deleted()\n\t{\n\t\t// phpcs:enable\n\t\t$can_be_deleted = false;\n\n\t\t$sql = \"SELECT COUNT(rowid) as nb\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank\";\n\t\t$sql .= \" WHERE fk_account=\".$this->id;\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\tif ($obj->nb <= 1) {\n\t\t\t\t$can_be_deleted = true; // Juste le solde\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t\treturn $can_be_deleted;\n\t}\n\n\n\t/**\n\t *   Return error\n\t *\n\t *   @return\tstring\t\tError string\n\t */\n\tpublic function error()\n\t{\n\t\treturn $this->error;\n\t}\n\n\t/**\n\t * \tReturn current sold\n\t *\n\t * \t@param\tint\t\t$option\t\t1=Exclude future operation date (this is to exclude input made in advance and have real account sold)\n\t *\t@return\tint\t\t\t\t\tCurrent sold (value date <= today)\n\t */\n\tpublic function solde($option = 0)\n\t{\n\t\t$solde = 0;\n\n\t\t$sql = \"SELECT sum(amount) as amount\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank\";\n\t\t$sql .= \" WHERE fk_account = \".$this->id;\n\t\tif ($option == 1) {\n\t\t\t$sql .= \" AND dateo <= '\".$this->db->idate(dol_now()).\"'\";\n\t\t}\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\tif ($this->db->num_rows($resql)) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t$solde = $obj->amount;\n\t\t\t}\n\t\t\t$this->db->free($resql);\n\t\t} else {\n\t\t\t$this->errors[] = $this->db->lasterror;\n\t\t\treturn -1;\n\t\t}\n\n\t\treturn price2num($solde, 'MU');\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Load indicators for dashboard (this->nbtodo and this->nbtodolate)\n\t *\n\t *      @param\tUser\t$user        \t\tObjet user\n\t *\t\t@param\tint\t\t$filteraccountid\tTo get info for a particular account id\n\t *      @return WorkboardResponse|int \t\t<0 if KO, WorkboardResponse if OK\n\t */\n\tpublic function load_board(User $user, $filteraccountid = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs;\n\n\t\tif ($user->socid) {\n\t\t\treturn -1; // protection pour eviter appel par utilisateur externe\n\t\t}\n\n\t\t$sql = \"SELECT b.rowid, b.datev as datefin\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank as b,\";\n\t\t$sql .= \" \".MAIN_DB_PREFIX.\"bank_account as ba\";\n\t\t$sql .= \" WHERE b.rappro=0\";\n\t\t$sql .= \" AND b.fk_account = ba.rowid\";\n\t\t$sql .= \" AND ba.entity IN (\".getEntity('bank_account').\")\";\n\t\t$sql .= \" AND (ba.rappro = 1 AND ba.courant != 2)\"; // Compte rapprochable\n\t\t$sql .= \" AND clos = 0\";\n\t\tif ($filteraccountid) {\n\t\t\t$sql .= \" AND ba.rowid = \".((int) $filteraccountid);\n\t\t}\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$langs->load(\"banks\");\n\t\t\t$now = dol_now();\n\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/workboardresponse.class.php';\n\n\t\t\t$response = new WorkboardResponse();\n\t\t\t$response->warning_delay = $conf->bank->rappro->warning_delay / 60 / 60 / 24;\n\t\t\t$response->label = $langs->trans(\"TransactionsToConciliate\");\n\t\t\t$response->labelShort = $langs->trans(\"TransactionsToConciliateShort\");\n\t\t\t$response->url = DOL_URL_ROOT.'/compta/bank/list.php?leftmenu=bank&amp;mainmenu=bank';\n\t\t\t$response->img = img_object('', \"payment\");\n\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$response->nbtodo++;\n\t\t\t\tif ($this->db->jdate($obj->datefin) < ($now - $conf->bank->rappro->warning_delay)) {\n\t\t\t\t\t$response->nbtodolate++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $response;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\t$this->error = $this->db->error();\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Charge indicateurs this->nb de tableau de bord\n\t *\t\t@param\t\tint\t\t\t$filteraccountid\tTo get info for a particular account id\n\t *      @return     int         <0 if ko, >0 if ok\n\t */\n\tpublic function load_state_board($filteraccountid = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $user;\n\n\t\tif ($user->socid) {\n\t\t\treturn -1; // protection pour eviter appel par utilisateur externe\n\t\t}\n\n\t\t$sql = \"SELECT count(b.rowid) as nb\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank as b,\";\n\t\t$sql .= \" \".MAIN_DB_PREFIX.\"bank_account as ba\";\n\t\t$sql .= \" WHERE b.fk_account = ba.rowid\";\n\t\t$sql .= \" AND ba.entity IN (\".getEntity('bank_account').\")\";\n\t\t$sql .= \" AND (ba.rappro = 1 AND ba.courant != 2)\"; // Compte rapprochable\n\t\t$sql .= \" AND clos = 0\";\n\t\tif ($filteraccountid) {\n\t\t\t$sql .= \" AND ba.rowid = \".((int) $filteraccountid);\n\t\t}\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$this->nb[\"banklines\"] = $obj->nb;\n\t\t\t}\n\t\t\t$this->db->free($resql);\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\t$this->error = $this->db->error();\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t/**\n\t *      Load indicators for dashboard (this->nbtodo and this->nbtodolate)\n\t *\n\t *      @return int     Nb of account we can reconciliate\n\t */\n\tpublic function countAccountToReconcile()\n\t{\n\t\tglobal $db, $conf, $user;\n\n\t\t//Protection against external users\n\t\tif ($user->socid) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t$nb = 0;\n\n\t\t$sql = \"SELECT COUNT(ba.rowid) as nb\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank_account as ba\";\n\t\t$sql .= \" WHERE ba.rappro > 0 and ba.clos = 0\";\n\t\t$sql .= \" AND ba.entity IN (\".getEntity('bank_account').\")\";\n\t\tif (empty($conf->global->BANK_CAN_RECONCILIATE_CASHACCOUNT)) {\n\t\t\t$sql .= \" AND ba.courant != 2\";\n\t\t}\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t$nb = $obj->nb;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $nb;\n\t}\n\n\t/**\n\t *  Return clicable name (with picto eventually)\n\t *\n\t *\t@param\tint\t\t$withpicto\t\t\t\t\tInclude picto into link\n\t *  @param  string\t$mode           \t\t\t''=Link to card, 'transactions'=Link to transactions card\n\t *  @param  string  $option         \t\t\t''=Show ref, 'reflabel'=Show ref+label\n\t *  @param  int     $save_lastsearch_value    \t-1=Auto, 0=No save of lastsearch_values when clicking, 1=Save lastsearch_values whenclicking\n\t *  @param\tint  \t$notooltip\t\t \t\t\t1=Disable tooltip\n\t *\t@return\tstring\t\t\t\t\t\t\t\tChaine avec URL\n\t */\n\tpublic function getNomUrl($withpicto = 0, $mode = '', $option = '', $save_lastsearch_value = -1, $notooltip = 0)\n\t{\n\t\tglobal $conf, $langs, $user;\n\n\t\t$result = '';\n\t\t$label = img_picto('', $this->picto).' <u class=\"paddingrightnow\">'.$langs->trans(\"BankAccount\").'</u>';\n\t\tif (isset($this->status)) {\n\t\t\t$label .= ' '.$this->getLibStatut(5);\n\t\t}\n\t\t$label .= '<br><b>'.$langs->trans('Label').':</b> '.$this->label;\n\t\t$label .= '<br><b>'.$langs->trans('AccountNumber').':</b> '.$this->number;\n\t\t$label .= '<br><b>'.$langs->trans('IBAN').':</b> '.$this->iban;\n\t\t$label .= '<br><b>'.$langs->trans('BIC').':</b> '.$this->bic;\n\t\t$label .= '<br><b>'.$langs->trans(\"AccountCurrency\").':</b> '.$this->currency_code;\n\n\t\tif (empty($user->rights->banque->lire) || !empty($user->socid)) {\n\t\t\t$option = 'nolink';\n\t\t}\n\n\t\tif (!empty($conf->accounting->enabled)) {\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/accounting.lib.php';\n\t\t\t$langs->load(\"accountancy\");\n\t\t\t$label .= '<br><b>'.$langs->trans('AccountAccounting').':</b> '.length_accountg($this->account_number);\n\t\t\t$label .= '<br><b>'.$langs->trans('AccountancyJournal').':</b> '.$this->accountancy_journal;\n\t\t}\n\n\t\t$linkclose = '\" title=\"'.dol_escape_htmltag($label, 1).'\" class=\"classfortooltip\">';\n\n\t\t$url = DOL_URL_ROOT.'/compta/bank/card.php?id='.$this->id;\n\t\tif ($mode == 'transactions') {\n\t\t\t$url = DOL_URL_ROOT.'/compta/bank/bankentries_list.php?id='.$this->id;\n\t\t} elseif ($mode == 'receipts') {\n\t\t\t$url = DOL_URL_ROOT.'/compta/bank/releve.php?account='.$this->id;\n\t\t}\n\n\t\tif ($option != 'nolink') {\n\t\t\t// Add param to save lastsearch_values or not\n\t\t\t$add_save_lastsearch_values = ($save_lastsearch_value == 1 ? 1 : 0);\n\t\t\tif ($save_lastsearch_value == -1 && preg_match('/list\\.php/', $_SERVER[\"PHP_SELF\"])) {\n\t\t\t\t$add_save_lastsearch_values = 1;\n\t\t\t}\n\t\t\tif ($add_save_lastsearch_values) {\n\t\t\t\t$url .= '&save_lastsearch_values=1';\n\t\t\t}\n\t\t}\n\n\t\t$linkstart = '<a href=\"'.$url.$linkclose;\n\t\t$linkend = '</a>';\n\n\t\tif ($option == 'nolink') {\n\t\t\t$linkstart = '';\n\t\t\t$linkend = '';\n\t\t}\n\n\t\t$result .= $linkstart;\n\t\tif ($withpicto) {\n\t\t\t$result .= img_object(($notooltip ? '' : $label), $this->picto, ($notooltip ? (($withpicto != 2) ? 'class=\"paddingright\"' : '') : 'class=\"'.(($withpicto != 2) ? 'paddingright ' : '').'classfortooltip\"'), 0, 0, $notooltip ? 0 : 1);\n\t\t}\n\t\tif ($withpicto != 2) {\n\t\t\t$result .= $this->ref.($option == 'reflabel' && $this->label ? ' - '.$this->label : '');\n\t\t}\n\t\t$result .= $linkend;\n\n\t\treturn $result;\n\t}\n\n\n\t// Method after here are common to Account and CompanyBankAccount\n\n\n\t/**\n\t *     Return if an account has valid information for Direct debit payment\n\t *\n\t *     @return     int         1 if correct, <=0 if wrong\n\t */\n\tpublic function verif()\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/bank.lib.php';\n\n\t\t$this->error_number = 0;\n\n\t\t// Call function to check BAN\n\n\t\tif (!checkIbanForAccount($this) || !checkSwiftForAccount($this)) {\n\t\t\t$this->error_number = 12;\n\t\t\t$this->error_message = 'IBANSWIFTControlError';\n\t\t}\n\t\t/*if (! checkBanForAccount($this))\n\t\t{\n\t\t\t$this->error_number = 12;\n\t\t\t$this->error_message = 'BANControlError';\n\t\t}*/\n\n\t\tif ($this->error_number == 0) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * \tReturn account country code\n\t *\n\t *\t@return\t\tstring\t\tcountry code\n\t */\n\tpublic function getCountryCode()\n\t{\n\t\tglobal $mysoc;\n\n\t\t// We return country code of bank account\n\t\tif (!empty($this->country_code)) {\n\t\t\treturn $this->country_code;\n\t\t}\n\n\t\t// For backward compatibility, we try to guess country from other information\n\t\tif (!empty($this->iban)) {\n\t\t\t// If IBAN defined, we can know country of account from it\n\t\t\t$reg = array();\n\t\t\tif (preg_match(\"/^([a-zA-Z][a-zA-Z])/i\", $this->iban, $reg)) {\n\t\t\t\treturn $reg[1];\n\t\t\t}\n\t\t}\n\n\t\t// If this class is linked to a third party\n\t\tif (!empty($this->socid)) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/societe/class/societe.class.php';\n\t\t\t$company = new Societe($this->db);\n\t\t\t$result = $company->fetch($this->socid);\n\t\t\tif (!empty($company->country_code)) {\n\t\t\t\treturn $company->country_code;\n\t\t\t}\n\t\t}\n\n\t\t// We return country code of managed company\n\t\tif (!empty($mysoc->country_code)) {\n\t\t\treturn $mysoc->country_code;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t/**\n\t * Return if a bank account is defined with detailed information (bank code, desk code, number and key).\n\t * More information on codes used by countries on page http://en.wikipedia.org/wiki/Bank_code\n\t *\n\t * @return\t\tint        0=No bank code need + Account number is enough\n\t *                         1=Need 2 fields for bank code: Bank, Desk (France, Spain, ...) + Account number and key\n\t *                         2=Need 1 field for bank code:  Bank only (Sort code for Great Britain, BSB for Australia) + Account number\n\t */\n\tpublic function useDetailedBBAN()\n\t{\n\t\t$country_code = $this->getCountryCode();\n\n\t\tif (in_array($country_code, array('FR', 'ES', 'GA', 'IT', 'NC'))) {\n\t\t\treturn 1; // France, Spain, Gabon, ... - Not valid for CH\n\t\t}\n\t\tif (in_array($country_code, array('AU', 'BE', 'CA', 'DE', 'DK', 'GR', 'GB', 'ID', 'IE', 'IR', 'KR', 'NL', 'NZ', 'UK', 'US'))) {\n\t\t\treturn 2; // Australia, England...\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Return 1 if IBAN / BIC is mandatory (otherwise option)\n\t *\n\t * @return\t\tint        1 = mandatory / 0 = Not mandatory\n\t */\n\tpublic function needIBAN()\n\t{\n\t\t$country_code = $this->getCountryCode();\n\n\t\t$country_code_in_EEC = array(\n\t\t\t\t'AT', // Austria\n\t\t\t\t'BE', // Belgium\n\t\t\t\t'BG', // Bulgaria\n\t\t\t\t'CY', // Cyprus\n\t\t\t\t'CZ', // Czech republic\n\t\t\t\t'DE', // Germany\n\t\t\t\t'DK', // Danemark\n\t\t\t\t'EE', // Estonia\n\t\t\t\t'ES', // Spain\n\t\t\t\t'FI', // Finland\n\t\t\t\t'FR', // France\n\t\t\t\t'GB', // United Kingdom\n\t\t\t\t'GR', // Greece\n\t\t\t\t'HR', // Croatia\n\t\t\t\t'NL', // Holland\n\t\t\t\t'HU', // Hungary\n\t\t\t\t'IE', // Ireland\n\t\t\t\t'IM', // Isle of Man - Included in UK\n\t\t\t\t'IT', // Italy\n\t\t\t\t'LT', // Lithuania\n\t\t\t\t'LU', // Luxembourg\n\t\t\t\t'LV', // Latvia\n\t\t\t\t'MC', // Monaco - Included in France\n\t\t\t\t'MT', // Malta\n\t\t\t\t//'NO',\t// Norway\n\t\t\t\t'PL', // Poland\n\t\t\t\t'PT', // Portugal\n\t\t\t\t'RO', // Romania\n\t\t\t\t'SE', // Sweden\n\t\t\t\t'SK', // Slovakia\n\t\t\t\t'SI', // Slovenia\n\t\t\t\t'UK', // United Kingdom\n\t\t\t\t//'CH',\t// Switzerland - No. Swizerland in not in EEC\n\t\t);\n\n\t\tif (in_array($country_code, $country_code_in_EEC)) {\n\t\t\treturn 1; // France, Spain, ...\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\tLoad miscellaneous information for tab \"Info\"\n\t *\n\t *\t@param  int\t\t$id\t\tId of object to load\n\t *\t@return\tvoid\n\t */\n\tpublic function info($id)\n\t{\n\t}\n\n\t/**\n\t * Returns the fields in order that this bank account should show to the user\n\t * Will return an array with the following values:\n\t * - BankAccountNumber\n\t * - BankCode\n\t * - BankAccountNumberKey\n\t * - DeskCode\n\t *\n\t * Some countries show less or more bank account properties to the user\n\t *\n\t * @param  int     $includeibanbic         1=Return also key for IBAN and BIC\n\t * @return array                           Array of fields to show\n\t * @see useDetailedBBAN()\n\t */\n\tpublic function getFieldsToShow($includeibanbic = 0)\n\t{\n\t\t//Get the required properties depending on the country\n\t\t$detailedBBAN = $this->useDetailedBBAN();\n\n\t\tif ($detailedBBAN == 0) {\n\t\t\t$fieldarray = array(\n\t\t\t\t\t'BankAccountNumber'\n\t\t\t);\n\t\t} elseif ($detailedBBAN == 2) {\n\t\t\t$fieldarray = array(\n\t\t\t\t\t'BankCode',\n\t\t\t\t\t'BankAccountNumber'\n\t\t\t);\n\t\t} else {\n\t\t\t$fieldarray = self::getAccountNumberOrder();\n\t\t}\n\n\t\t//if ($this->needIBAN()) {    // return always IBAN and BIC (this was old behaviour)\n\t\tif ($includeibanbic) {\n\t\t\t$fieldarray[] = 'IBAN';\n\t\t\t$fieldarray[] = 'BIC';\n\t\t}\n\t\t//}\n\n\t\t//Get the order the properties are shown\n\t\treturn $fieldarray;\n\t}\n\n\t/**\n\t * Returns the components of the bank account in order.\n\t * Will return an array with the following values:\n\t * - BankAccountNumber\n\t * - BankCode\n\t * - BankAccountNumberKey\n\t * - DeskCode\n\t *\n\t * @return array\n\t */\n\tpublic static function getAccountNumberOrder()\n\t{\n\t\tglobal $conf;\n\n\t\t$fieldlists = array(\n\t\t\t\t'BankCode',\n\t\t\t\t'DeskCode',\n\t\t\t\t'BankAccountNumber',\n\t\t\t\t'BankAccountNumberKey'\n\t\t);\n\n\t\tif (!empty($conf->global->BANK_SHOW_ORDER_OPTION)) {\n\t\t\tif (is_numeric($conf->global->BANK_SHOW_ORDER_OPTION)) {\n\t\t\t\tif ($conf->global->BANK_SHOW_ORDER_OPTION == '1') {\n\t\t\t\t\t$fieldlists = array(\n\t\t\t\t\t\t'BankCode',\n\t\t\t\t\t\t'DeskCode',\n\t\t\t\t\t\t'BankAccountNumberKey',\n\t\t\t\t\t\t'BankAccountNumber'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//Replace the old AccountNumber key with the new BankAccountNumber key\n\t\t\t\t$fieldlists = explode(\n\t\t\t\t\t' ',\n\t\t\t\t\tpreg_replace('/ ?[^Bank]AccountNumber ?/', 'BankAccountNumber', $conf->global->BANK_SHOW_ORDER_OPTION)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn $fieldlists;\n\t}\n\n\n\t/**\n\t *  Initialise an instance with random values.\n\t *  Used to build previews or test instances.\n\t *\tid must be 0 if object instance is a specimen.\n\t *\n\t *  @return\tvoid\n\t */\n\tpublic function initAsSpecimen()\n\t{\n\t\t$this->specimen        = 1;\n\t\t$this->ref             = 'MBA';\n\t\t$this->label           = 'My Big Company Bank account';\n\t\t$this->bank            = 'MyBank';\n\t\t$this->courant         = Account::TYPE_CURRENT;\n\t\t$this->clos            = Account::STATUS_OPEN;\n\t\t$this->code_banque     = '123';\n\t\t$this->code_guichet    = '456';\n\t\t$this->number          = 'ABC12345';\n\t\t$this->cle_rib         = '50';\n\t\t$this->bic             = 'AA12';\n\t\t$this->iban            = 'FR999999999';\n\t\t$this->domiciliation   = 'My bank address';\n\t\t$this->proprio         = 'Owner';\n\t\t$this->owner_address   = 'Owner address';\n\t\t$this->country_id      = 1;\n\t}\n\n\t/**\n\t * Function used to replace a thirdparty id with another one.\n\t *\n\t * @param DoliDB \t$db \t\t\tDatabase handler\n\t * @param int \t\t$origin_id \t\tOld thirdparty id\n\t * @param int \t\t$dest_id \t\tNew thirdparty id\n\t * @return bool\n\t */\n\tpublic static function replaceThirdparty($db, $origin_id, $dest_id)\n\t{\n\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"bank_url SET url_id = \".((int) $dest_id).\" WHERE url_id = \".((int) $origin_id).\" AND type='company'\";\n\n\t\tif (!$db->query($sql)) {\n\t\t\t//if ($ignoreerrors) return true; // TODO Not enough. If there is A-B on kept thirdarty and B-C on old one, we must get A-B-C after merge. Not A-B.\n\t\t\t//$this->errors = $db->lasterror();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n}\n\n\n/**\n *\tClass to manage bank transaction lines\n */\nclass AccountLine extends CommonObject\n{\n\t/**\n\t * @var string Error code (or message)\n\t */\n\tpublic $error = '';\n\n\t/**\n\t * @var DoliDB Database handler.\n\t */\n\tpublic $db;\n\n\t/**\n\t * @var string ID to identify managed object\n\t */\n\tpublic $element = 'bank';\n\n\t/**\n\t * @var string Name of table without prefix where object is stored\n\t */\n\tpublic $table_element = 'bank';\n\n\t/**\n\t * @var string String with name of icon for myobject. Must be the part after the 'object_' into object_myobject.png\n\t */\n\tpublic $picto = 'accountline';\n\n\t/**\n\t * @var int ID\n\t */\n\tpublic $id;\n\n\t/**\n\t * @var string Ref\n\t */\n\tpublic $ref;\n\n\t/**\n\t * Date creation record (datec)\n\t *\n\t * @var integer\n\t */\n\tpublic $datec;\n\n\t/**\n\t * Date (dateo)\n\t *\n\t * @var integer\n\t */\n\tpublic $dateo;\n\n\t/**\n\t * Date value (datev)\n\t *\n\t * @var integer\n\t */\n\tpublic $datev;\n\n\tpublic $amount;\n\n\t/**\n\t * @var int ID\n\t */\n\tpublic $fk_user_author;\n\n\t/**\n\t * @var int ID\n\t */\n\tpublic $fk_user_rappro;\n\n\t/**\n\t * @var int ID\n\t */\n\tpublic $fk_type;\n\n\t/**\n\t * @var int ID of cheque receipt\n\t */\n\tpublic $fk_bordereau;\n\n\t/**\n\t * @var int ID of bank account\n\t */\n\tpublic $fk_account;\n\n\t/**\n\t * @var string\t\tRef of bank account\n\t */\n\tpublic $bank_account_ref;\n\n\t/**\n\t * @var string\t\tLabel of bank account\n\t */\n\tpublic $bank_account_label;\n\n\t/**\n\t * @var string\t\tBank account numero\n\t */\n\tpublic $numero_compte;\n\n\t/**\n\t * @var string\t\tName of check issuer\n\t */\n\tpublic $emetteur;\n\n\tpublic $rappro; // Is it conciliated\n\tpublic $num_releve; // If conciliated, what is bank statement\n\tpublic $num_chq; // Num of cheque\n\tpublic $bank_chq; // Bank of cheque\n\n\t/**\n\t * @var string bank transaction lines label\n\t */\n\tpublic $label;\n\n\tpublic $note;\n\n\n\n\t/**\n\t *  Constructor\n\t *\n\t *  @param\tDoliDB\t$db\t\tDatabase handler\n\t */\n\tpublic function __construct(DoliDB $db)\n\t{\n\t\t$this->db = $db;\n\t}\n\n\t/**\n\t *  Load into memory content of a bank transaction line\n\t *\n\t *  @param\t\tint\t\t$rowid   \tId of bank transaction to load\n\t *  @param      string\t$ref     \tRef of bank transaction to load\n\t *  @param      string\t$num     \tExternal num to load (ex: num of transaction for paypal fee)\n\t *\t@return\t\tint\t\t\t\t\t<0 if KO, 0 if OK but not found, >0 if OK and found\n\t */\n\tpublic function fetch($rowid, $ref = '', $num = '')\n\t{\n\t\tglobal $conf;\n\n\t\t// Check parameters\n\t\tif (empty($rowid) && empty($ref) && empty($num)) {\n\t\t\treturn -1;\n\t\t}\n\n\t\t$sql = \"SELECT b.rowid, b.datec, b.datev, b.dateo, b.amount, b.label as label, b.fk_account,\";\n\t\t$sql .= \" b.fk_user_author, b.fk_user_rappro,\";\n\t\t$sql .= \" b.fk_type, b.num_releve, b.num_chq, b.rappro, b.note,\";\n\t\t$sql .= \" b.fk_bordereau, b.banque, b.emetteur,\";\n\t\t//$sql.= \" b.author\"; // Is this used ?\n\t\t$sql .= \" ba.ref as bank_account_ref, ba.label as bank_account_label\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"bank as b,\";\n\t\t$sql .= \" \".MAIN_DB_PREFIX.\"bank_account as ba\";\n\t\t$sql .= \" WHERE b.fk_account = ba.rowid\";\n\t\t$sql .= \" AND ba.entity IN (\".getEntity('bank_account').\")\";\n\t\tif ($num) {\n\t\t\t$sql .= \" AND b.num_chq='\".$this->db->escape($num).\"'\";\n\t\t} elseif ($ref) {\n\t\t\t$sql .= \" AND b.rowid='\".$this->db->escape($ref).\"'\";\n\t\t} else {\n\t\t\t$sql .= \" AND b.rowid = \".((int) $rowid);\n\t\t}\n\n\t\tdol_syslog(get_class($this).\"::fetch\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\t$ret = 0;\n\n\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\tif ($obj) {\n\t\t\t\t$this->id = $obj->rowid;\n\t\t\t\t$this->rowid\t\t\t= $obj->rowid;\n\t\t\t\t$this->ref = $obj->rowid;\n\n\t\t\t\t$this->datec\t\t\t= $obj->datec;\n\t\t\t\t$this->datev\t\t\t= $obj->datev;\n\t\t\t\t$this->dateo\t\t\t= $obj->dateo;\n\t\t\t\t$this->amount = $obj->amount;\n\t\t\t\t$this->label\t\t\t= $obj->label;\n\t\t\t\t$this->note\t\t\t\t= $obj->note;\n\n\t\t\t\t$this->fk_user_author\t= $obj->fk_user_author;\n\t\t\t\t$this->fk_user_rappro\t= $obj->fk_user_rappro;\n\n\t\t\t\t$this->fk_type = $obj->fk_type; // Type of transaction\n\t\t\t\t$this->rappro = $obj->rappro;\n\t\t\t\t$this->num_releve = $obj->num_releve;\n\n\t\t\t\t$this->num_chq = $obj->num_chq;\n\t\t\t\t$this->bank_chq = $obj->banque;\n\t\t\t\t$this->fk_bordereau = $obj->fk_bordereau;\n\n\t\t\t\t$this->fk_account = $obj->fk_account;\n\t\t\t\t$this->bank_account_ref   = $obj->bank_account_ref;\n\t\t\t\t$this->bank_account_label = $obj->bank_account_label;\n\n\t\t\t\t$ret = 1;\n\t\t\t}\n\t\t\t$this->db->free($result);\n\t\t\treturn $ret;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t * Inserts a transaction to a bank account\n\t *\n\t * @return int <0 if KO, rowid of the line if OK\n\t */\n\tpublic function insert()\n\t{\n\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"bank (\";\n\t\t$sql .= \"datec\";\n\t\t$sql .= \", dateo\";\n\t\t$sql .= \", datev\";\n\t\t$sql .= \", label\";\n\t\t$sql .= \", amount\";\n\t\t$sql .= \", fk_user_author\";\n\t\t$sql .= \", num_chq\";\n\t\t$sql .= \", fk_account\";\n\t\t$sql .= \", fk_type\";\n\t\t$sql .= \", emetteur,banque\";\n\t\t$sql .= \", rappro\";\n\t\t$sql .= \", numero_compte\";\n\t\t$sql .= \", num_releve\";\n\t\t$sql .= \") VALUES (\";\n\t\t$sql .= \"'\".$this->db->idate($this->datec).\"'\";\n\t\t$sql .= \", '\".$this->db->idate($this->dateo).\"'\";\n\t\t$sql .= \", '\".$this->db->idate($this->datev).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->label).\"'\";\n\t\t$sql .= \", \".price2num($this->amount);\n\t\t$sql .= \", \".($this->fk_user_author > 0 ? $this->fk_user_author : \"null\");\n\t\t$sql .= \", \".($this->num_chq ? \"'\".$this->db->escape($this->num_chq).\"'\" : \"null\");\n\t\t$sql .= \", '\".$this->db->escape($this->fk_account).\"'\";\n\t\t$sql .= \", '\".$this->db->escape($this->fk_type).\"'\";\n\t\t$sql .= \", \".($this->emetteur ? \"'\".$this->db->escape($this->emetteur).\"'\" : \"null\");\n\t\t$sql .= \", \".($this->bank_chq ? \"'\".$this->db->escape($this->bank_chq).\"'\" : \"null\");\n\t\t$sql .= \", \".(int) $this->rappro;\n\t\t$sql .= \", \".($this->numero_compte ? \"'\".$this->db->escape($this->numero_compte).\"'\" : \"''\");\n\t\t$sql .= \", \".($this->num_releve ? \"'\".$this->db->escape($this->num_releve).\"'\" : \"null\");\n\t\t$sql .= \")\";\n\n\t\tdol_syslog(get_class($this).\"::insert\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\n\t\tif (!$resql) {\n\t\t\t$this->error = $this->db->lasterror();\n\t\t\treturn -1;\n\t\t}\n\n\t\t$this->id = $this->db->last_insert_id(MAIN_DB_PREFIX.'bank');\n\n\t\treturn $this->id;\n\t}\n\n\t/**\n\t *      Delete bank transaction record\n\t *\n\t *\t\t@param\tUser\t$user\tUser object that delete\n\t *      @return\tint \t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function delete(User $user = null)\n\t{\n\t\tglobal $conf;\n\n\t\t$nbko = 0;\n\n\t\tif ($this->rappro) {\n\t\t\t// Protection to avoid any delete of consolidated lines\n\t\t\t$this->error = \"ErrorDeleteNotPossibleLineIsConsolidated\";\n\t\t\treturn -1;\n\t\t}\n\n\t\t$this->db->begin();\n\n\t\t// Protection to avoid any delete of accounted lines. Protection on by default\n\t\tif (empty($conf->global->BANK_ALLOW_TRANSACTION_DELETION_EVEN_IF_IN_ACCOUNTING)) {\n\t\t\t$sql = \"SELECT COUNT(rowid) as nb FROM \".MAIN_DB_PREFIX.\"accounting_bookkeeping WHERE doc_type = 'bank' AND fk_doc = \".$this->id;\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\tif ($obj && $obj->nb) {\n\t\t\t\t\t$this->error = 'ErrorRecordAlreadyInAccountingDeletionNotPossible';\n\t\t\t\t\t$this->db->rollback();\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$this->error = $this->db->lasterror();\n\t\t\t\t$this->db->rollback();\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\t// Delete urls\n\t\t$result = $this->delete_urls($user);\n\t\tif ($result < 0) {\n\t\t\t$nbko++;\n\t\t}\n\n\t\t$sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"bank_class WHERE lineid=\".(int) $this->rowid;\n\t\tdol_syslog(get_class($this).\"::delete\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif (!$result) {\n\t\t\t$nbko++;\n\t\t}\n\n\t\t$sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"bank WHERE rowid=\".(int) $this->rowid;\n\t\tdol_syslog(get_class($this).\"::delete\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif (!$result) {\n\t\t\t$nbko++;\n\t\t}\n\n\t\tif (!$nbko) {\n\t\t\t$this->db->commit();\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\treturn -$nbko;\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *      Delete bank line records\n\t *\n\t *\t\t@param\tUser\t$user\tUser object that delete\n\t *      @return\tint \t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function delete_urls(User $user = null)\n\t{\n\t\t// phpcs:enable\n\t\t$nbko = 0;\n\n\t\tif ($this->rappro) {\n\t\t\t// Protection to avoid any delete of consolidated lines\n\t\t\t$this->error = \"ErrorDeleteNotPossibleLineIsConsolidated\";\n\t\t\treturn -1;\n\t\t}\n\n\t\t$this->db->begin();\n\n\t\t$sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"bank_url WHERE fk_bank=\".(int) $this->rowid;\n\t\tdol_syslog(get_class($this).\"::delete_urls\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif (!$result) {\n\t\t\t$nbko++;\n\t\t}\n\n\t\tif (!$nbko) {\n\t\t\t$this->db->commit();\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\treturn -$nbko;\n\t\t}\n\t}\n\n\n\t/**\n\t *\t\tUpdate bank account record in database\n\t *\n\t *\t\t@param\tUser\t$user\t\t\tObject user making update\n\t *\t\t@param \tint\t\t$notrigger\t\t0=Disable all triggers\n\t *\t\t@return\tint\t\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function update(User $user, $notrigger = 0)\n\t{\n\t\t$this->db->begin();\n\n\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"bank SET\";\n\t\t$sql .= \" amount = \".price2num($this->amount).\",\";\n\t\t$sql .= \" datev='\".$this->db->idate($this->datev).\"',\";\n\t\t$sql .= \" dateo='\".$this->db->idate($this->dateo).\"'\";\n\t\t$sql .= \" WHERE rowid = \".((int) $this->rowid);\n\n\t\tdol_syslog(get_class($this).\"::update\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$this->db->commit();\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\t$this->error = $this->db->error();\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tUpdate conciliation field\n\t *\n\t *\t@param\tUser\t$user\t\t\tObjet user making update\n\t *\t@param \tint\t\t$cat\t\t\tCategory id\n\t *\t@param\tint\t\t$conciliated\t1=Set transaction to conciliated, 0=Keep transaction non conciliated\n\t *\t@return\tint\t\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function update_conciliation(User $user, $cat, $conciliated = 1)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs;\n\n\t\t$this->db->begin();\n\n\t\t// Check statement field\n\t\tif (!empty($conf->global->BANK_STATEMENT_REGEX_RULE)) {\n\t\t\tif (!preg_match('/'.$conf->global->BANK_STATEMENT_REGEX_RULE.'/', $this->num_releve)) {\n\t\t\t\t$this->errors[] = $langs->trans(\"ErrorBankStatementNameMustFollowRegex\", $conf->global->BANK_STATEMENT_REGEX_RULE);\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"bank SET\";\n\t\t$sql .= \" rappro = \".((int) $conciliated);\n\t\t$sql .= \", num_releve = '\".$this->db->escape($this->num_releve).\"'\";\n\t\tif ($conciliated) {\n\t\t\t$sql .= \", fk_user_rappro = \".$user->id;\n\t\t}\n\t\t$sql .= \" WHERE rowid = \".((int) $this->id);\n\n\t\tdol_syslog(get_class($this).\"::update_conciliation\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\tif (!empty($cat)) {\n\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"bank_class (\";\n\t\t\t\t$sql .= \"lineid\";\n\t\t\t\t$sql .= \", fk_categ\";\n\t\t\t\t$sql .= \") VALUES (\";\n\t\t\t\t$sql .= $this->id;\n\t\t\t\t$sql .= \", \".$cat;\n\t\t\t\t$sql .= \")\";\n\n\t\t\t\tdol_syslog(get_class($this).\"::update_conciliation\", LOG_DEBUG);\n\t\t\t\t$this->db->query($sql);\n\n\t\t\t\t// No error check. Can fail if category already affected\n\t\t\t}\n\n\t\t\t$this->rappro = 1;\n\n\t\t\t$this->db->commit();\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * \tIncrease/decrease value date of a rowid\n\t *\n\t *\t@param\tint\t\t$rowid\t\tId of line\n\t *\t@param\tint\t\t$sign\t\t1 or -1\n\t *\t@return\tint\t\t\t\t\t>0 if OK, 0 if KO\n\t */\n\tpublic function datev_change($rowid, $sign = 1)\n\t{\n\t\t// phpcs:enable\n\t\t$sql = \"SELECT datev FROM \".MAIN_DB_PREFIX.\"bank WHERE rowid = \".((int) $rowid);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t$newdate = $this->db->jdate($obj->datev) + (3600 * 24 * $sign);\n\n\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"bank SET\";\n\t\t\t$sql .= \" datev = '\".$this->db->idate($newdate).\"'\";\n\t\t\t$sql .= \" WHERE rowid = \".((int) $rowid);\n\n\t\t\t$result = $this->db->query($sql);\n\t\t\tif ($result) {\n\t\t\t\tif ($this->db->affected_rows($result)) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdol_print_error($this->db);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * \tIncrease value date of a rowid\n\t *\n\t *\t@param\tint\t\t$id\t\tId of line to change\n\t *\t@return\tint\t\t\t\t>0 if OK, 0 if KO\n\t */\n\tpublic function datev_next($id)\n\t{\n\t\t// phpcs:enable\n\t\treturn $this->datev_change($id, 1);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * \tDecrease value date of a rowid\n\t *\n\t *\t@param\tint\t\t$id\t\tId of line to change\n\t *\t@return\tint\t\t\t\t>0 if OK, 0 if KO\n\t */\n\tpublic function datev_previous($id)\n\t{\n\t\t// phpcs:enable\n\t\treturn $this->datev_change($id, -1);\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * \tIncrease/decrease operation date of a rowid\n\t *\n\t *\t@param\tint\t\t$rowid\t\tId of line\n\t *\t@param\tint\t\t$sign\t\t1 or -1\n\t *\t@return\tint\t\t\t\t\t>0 if OK, 0 if KO\n\t */\n\tpublic function dateo_change($rowid, $sign = 1)\n\t{\n\t\t// phpcs:enable\n\t\t$sql = \"SELECT dateo FROM \".MAIN_DB_PREFIX.\"bank WHERE rowid = \".((int) $rowid);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t$newdate = $this->db->jdate($obj->dateo) + (3600 * 24 * $sign);\n\n\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"bank SET\";\n\t\t\t$sql .= \" dateo = '\".$this->db->idate($newdate).\"'\";\n\t\t\t$sql .= \" WHERE rowid = \".((int) $rowid);\n\n\t\t\t$result = $this->db->query($sql);\n\t\t\tif ($result) {\n\t\t\t\tif ($this->db->affected_rows($result)) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdol_print_error($this->db);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * \tIncrease operation date of a rowid\n\t *\n\t *\t@param\tint\t\t$id\t\tId of line to change\n\t *\t@return\tint\t\t\t\t>0 if OK, 0 if KO\n\t */\n\tpublic function dateo_next($id)\n\t{\n\t\t// phpcs:enable\n\t\treturn $this->dateo_change($id, 1);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * \tDecrease operation date of a rowid\n\t *\n\t *\t@param\tint\t\t$id\t\tId of line to change\n\t *\t@return\tint\t\t\t\t>0 if OK, 0 if KO\n\t */\n\tpublic function dateo_previous($id)\n\t{\n\t\t// phpcs:enable\n\t\treturn $this->dateo_change($id, -1);\n\t}\n\n\n\t/**\n\t *\tLoad miscellaneous information for tab \"Info\"\n\t *\n\t *\t@param  int\t\t$id\t\tId of object to load\n\t *\t@return\tvoid\n\t */\n\tpublic function info($id)\n\t{\n\t\t$sql = 'SELECT b.rowid, b.datec, b.tms as datem,';\n\t\t$sql .= ' b.fk_user_author, b.fk_user_rappro';\n\t\t$sql .= ' FROM '.MAIN_DB_PREFIX.'bank as b';\n\t\t$sql .= ' WHERE b.rowid = '.((int) $id);\n\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\tif ($this->db->num_rows($result)) {\n\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\t$this->id = $obj->rowid;\n\n\t\t\t\tif ($obj->fk_user_author) {\n\t\t\t\t\t$cuser = new User($this->db);\n\t\t\t\t\t$cuser->fetch($obj->fk_user_author);\n\t\t\t\t\t$this->user_creation = $cuser;\n\t\t\t\t}\n\t\t\t\tif ($obj->fk_user_rappro) {\n\t\t\t\t\t$ruser = new User($this->db);\n\t\t\t\t\t$ruser->fetch($obj->fk_user_rappro);\n\t\t\t\t\t$this->user_rappro = $ruser;\n\t\t\t\t}\n\n\t\t\t\t$this->date_creation     = $this->db->jdate($obj->datec);\n\t\t\t\t$this->date_modification = $this->db->jdate($obj->datem);\n\t\t\t\t//$this->date_rappro       = $obj->daterappro;    // Not yet managed\n\t\t\t}\n\t\t\t$this->db->free($result);\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\n\t/**\n\t *    \tReturn clickable name (with picto eventually)\n\t *\n\t *\t\t@param\tint\t\t$withpicto\t\t0=No picto, 1=Include picto into link, 2=Only picto\n\t *\t\t@param\tint\t\t$maxlen\t\t\tLongueur max libelle\n\t *\t\t@param\tstring\t$option\t\t\tOption ('', 'showall', 'showconciliated', 'showconciliatedandaccounted'). Options may be slow.\n\t * \t\t@param\tint     $notooltip\t\t1=Disable tooltip\n\t *\t\t@return\tstring\t\t\t\t\tChaine avec URL\n\t */\n\tpublic function getNomUrl($withpicto = 0, $maxlen = 0, $option = '', $notooltip = 0)\n\t{\n\t\tglobal $langs;\n\n\t\t$result = '';\n\n\t\t$label = img_picto('', $this->picto).' <u>'.$langs->trans(\"Transaction\").'</u>:<br>';\n\t\t$label .= '<b>'.$langs->trans(\"Ref\").':</b> '.$this->ref;\n\n\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/compta/bank/line.php?rowid='.((int) $this->id).'&save_lastsearch_values=1\" title=\"'.dol_escape_htmltag($label, 1).'\" class=\"classfortooltip\">';\n\t\t$linkend = '</a>';\n\n\t\t$result .= $linkstart;\n\t\tif ($withpicto) {\n\t\t\t$result .= img_object(($notooltip ? '' : $label), ($this->picto ? $this->picto : 'account'), ($notooltip ? (($withpicto != 2) ? 'class=\"paddingright\"' : '') : 'class=\"'.(($withpicto != 2) ? 'paddingright ' : '').'classfortooltip\"'), 0, 0, $notooltip ? 0 : 1);\n\t\t}\n\t\tif ($withpicto != 2) {\n\t\t\t$result .= ($this->ref ? $this->ref : $this->id);\n\t\t}\n\t\t$result .= $linkend;\n\n\t\tif ($option == 'showall' || $option == 'showconciliated' || $option == 'showconciliatedandaccounted') {\n\t\t\t$result .= ' <span class=\"opacitymedium\">(';\n\t\t}\n\t\tif ($option == 'showall') {\n\t\t\t$result .= $langs->trans(\"BankAccount\").': ';\n\t\t\t$accountstatic = new Account($this->db);\n\t\t\t$accountstatic->id = $this->fk_account;\n\t\t\t$accountstatic->ref = $this->bank_account_ref;\n\t\t\t$accountstatic->label = $this->bank_account_label;\n\t\t\t$result .= $accountstatic->getNomUrl(0).', ';\n\t\t}\n\t\tif ($option == 'showall' || $option == 'showconciliated' || $option == 'showconciliatedandaccounted') {\n\t\t\t$result .= $langs->trans(\"BankLineConciliated\").': ';\n\t\t\t$result .= yn($this->rappro);\n\t\t}\n\t\tif ($option == 'showall' || $option == 'showconciliatedandaccounted') {\n\t\t\t$sql = \"SELECT COUNT(rowid) as nb FROM \".MAIN_DB_PREFIX.\"accounting_bookkeeping WHERE doc_type = 'bank' AND fk_doc = \".$this->id;\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\tif ($obj && $obj->nb) {\n\t\t\t\t\t$result .= ' - '.$langs->trans(\"Accounted\").': '.yn(1);\n\t\t\t\t} else {\n\t\t\t\t\t$result .= ' - '.$langs->trans(\"Accounted\").': '.yn(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ($option == 'showall' || $option == 'showconciliated' || $option == 'showconciliatedandaccounted') {\n\t\t\t$result .= ')</span>';\n\t\t}\n\n\t\treturn $result;\n\t}\n\n\n\t/**\n\t *    Return label of status (activity, closed)\n\t *\n\t *    @param\tint\t\t$mode       0=libelle long, 1=libelle court, 2=Picto + Libelle court, 3=Picto, 4=Picto + Libelle long\n\t *    @return   string        \t\tLibelle\n\t */\n\tpublic function getLibStatut($mode = 0)\n\t{\n\t\treturn $this->LibStatut($this->status, $mode);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Renvoi le libelle d'un statut donne\n\t *\n\t *  @param\tint\t\t$status         Id statut\n\t *  @param\tint\t\t$mode           0=libelle long, 1=libelle court, 2=Picto + Libelle court, 3=Picto, 4=Picto + Libelle long, 5=Libelle court + Picto\n\t *  @return\tstring          \t\tLibelle du statut\n\t */\n\tpublic function LibStatut($status, $mode = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\t//$langs->load('companies');\n\t\t/*\n\t\tif ($mode == 0)\n\t\t{\n\t\t\tif ($status==0) return $langs->trans(\"ActivityCeased\");\n\t\t\tif ($status==1) return $langs->trans(\"InActivity\");\n\t\t}\n\t\tif ($mode == 1)\n\t\t{\n\t\t\tif ($status==0) return $langs->trans(\"ActivityCeased\");\n\t\t\tif ($status==1) return $langs->trans(\"InActivity\");\n\t\t}\n\t\tif ($mode == 2)\n\t\t{\n\t\t\tif ($status==0) return img_picto($langs->trans(\"ActivityCeased\"),'statut5', 'class=\"pictostatus\"').' '.$langs->trans(\"ActivityCeased\");\n\t\t\tif ($status==1) return img_picto($langs->trans(\"InActivity\"),'statut4', 'class=\"pictostatus\"').' '.$langs->trans(\"InActivity\");\n\t\t}\n\t\tif ($mode == 3)\n\t\t{\n\t\t\tif ($status==0) return img_picto($langs->trans(\"ActivityCeased\"),'statut5', 'class=\"pictostatus\"');\n\t\t\tif ($status==1) return img_picto($langs->trans(\"InActivity\"),'statut4', 'class=\"pictostatus\"');\n\t\t}\n\t\tif ($mode == 4)\n\t\t{\n\t\t\tif ($status==0) return img_picto($langs->trans(\"ActivityCeased\"),'statut5', 'class=\"pictostatus\"').' '.$langs->trans(\"ActivityCeased\");\n\t\t\tif ($status==1) return img_picto($langs->trans(\"InActivity\"),'statut4', 'class=\"pictostatus\"').' '.$langs->trans(\"InActivity\");\n\t\t}\n\t\tif ($mode == 5)\n\t\t{\n\t\t\tif ($status==0) return $langs->trans(\"ActivityCeased\").' '.img_picto($langs->trans(\"ActivityCeased\"),'statut5', 'class=\"pictostatus\"');\n\t\t\tif ($status==1) return $langs->trans(\"InActivity\").' '.img_picto($langs->trans(\"InActivity\"),'statut4', 'class=\"pictostatus\"');\n\t\t}*/\n\t}\n\n\n\t/**\n\t *\tReturn if a bank line was dispatched into bookkeeping\n\t *\n\t *\t@return     int         <0 if KO, 0=no, 1=yes\n\t */\n\tpublic function getVentilExportCompta()\n\t{\n\t\t$alreadydispatched = 0;\n\n\t\t$type = 'bank';\n\n\t\t$sql = \" SELECT COUNT(ab.rowid) as nb FROM \".MAIN_DB_PREFIX.\"accounting_bookkeeping as ab WHERE ab.doc_type='\".$this->db->escape($type).\"' AND ab.fk_doc = \".((int) $this->id);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\tif ($obj) {\n\t\t\t\t$alreadydispatched = $obj->nb;\n\t\t\t}\n\t\t} else {\n\t\t\t$this->error = $this->db->lasterror();\n\t\t\treturn -1;\n\t\t}\n\n\t\tif ($alreadydispatched) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n}\n", "<?php\n/* Copyright (C) 2016       Laurent Destailleur <eldy@users.sourceforge.net>\n * Copyright (C) 2014       Juanjo Menent       <jmenent@2byte.es>\n * Copyright (C) 2015       Florian Henry       <florian.henry@open-concept.pro>\n * Copyright (C) 2015       Rapha\u00ebl Doursenaud  <rdoursenaud@gpcsolutions.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n * \\file    htdocs/compta/sociales/class/cchargesociales.class.php\n * \\ingroup tax\n * \\brief   File to manage type of social/fiscal taxes\n */\n\n// Put here all includes required by your class file\n//require_once DOL_DOCUMENT_ROOT . '/core/class/commonobject.class.php';\n//require_once DOL_DOCUMENT_ROOT . '/societe/class/societe.class.php';\n//require_once DOL_DOCUMENT_ROOT . '/product/class/product.class.php';\n\n/**\n * Class Cchargesociales\n */\nclass Cchargesociales\n{\n\t/**\n\t * @var string Id to identify managed objects\n\t */\n\tpublic $element = 'cchargesociales';\n\n\t/**\n\t * @var string Name of table without prefix where object is stored\n\t */\n\tpublic $table_element = 'c_chargesociales';\n\n\t/**\n\t * @var string Label\n\t * @deprecated\n\t */\n\tpublic $libelle;\n\n\t/**\n\t * @var string Label\n\t */\n\tpublic $label;\n\n\tpublic $deductible;\n\tpublic $active;\n\tpublic $code;\n\n\t/**\n\t * @var int ID\n\t */\n\tpublic $fk_pays;\n\n\t/**\n\t * @var string module\n\t */\n\tpublic $module;\n\tpublic $accountancy_code;\n\n\n\t/**\n\t * Constructor\n\t *\n\t * @param DoliDb $db Database handler\n\t */\n\tpublic function __construct(DoliDB $db)\n\t{\n\t\t$this->db = $db;\n\t}\n\n\t/**\n\t * Create object into database\n\t *\n\t * @param  User $user      User that creates\n\t * @param  bool $notrigger false=launch triggers after, true=disable triggers\n\t *\n\t * @return int <0 if KO, Id of created object if OK\n\t */\n\tpublic function create(User $user, $notrigger = false)\n\t{\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$error = 0;\n\n\t\t// Clean parameters\n\t\t$this->trimParameters(\n\t\t\tarray(\n\t\t\t\t'libelle',\n\t\t\t\t'deductible',\n\t\t\t\t'active',\n\t\t\t\t'code',\n\t\t\t\t'fk_pays',\n\t\t\t\t'module',\n\t\t\t\t'accountancy_code',\n\t\t\t)\n\t\t);\n\n\t\t// Check parameters\n\t\t// Put here code to add control on parameters values\n\n\t\t// Insert request\n\t\t$sql = 'INSERT INTO '.MAIN_DB_PREFIX.$this->table_element.'(';\n\t\t$sql .= 'libelle,';\n\t\t$sql .= 'deductible,';\n\t\t$sql .= 'active,';\n\t\t$sql .= 'code,';\n\t\t$sql .= 'fk_pays,';\n\t\t$sql .= 'module';\n\t\t$sql .= 'accountancy_code';\n\t\t$sql .= ') VALUES (';\n\t\t$sql .= ' '.(!isset($this->libelle) ? 'NULL' : \"'\".$this->db->escape($this->libelle).\"'\").',';\n\t\t$sql .= ' '.(!isset($this->deductible) ? 'NULL' : $this->deductible).',';\n\t\t$sql .= ' '.(!isset($this->active) ? 'NULL' : $this->active).',';\n\t\t$sql .= ' '.(!isset($this->code) ? 'NULL' : \"'\".$this->db->escape($this->code).\"'\").',';\n\t\t$sql .= ' '.(!isset($this->fk_pays) ? 'NULL' : $this->fk_pays).',';\n\t\t$sql .= ' '.(!isset($this->module) ? 'NULL' : \"'\".$this->db->escape($this->module).\"'\").',';\n\t\t$sql .= ' '.(!isset($this->accountancy_code) ? 'NULL' : \"'\".$this->db->escape($this->accountancy_code).\"'\");\n\t\t$sql .= ')';\n\n\t\t$this->db->begin();\n\n\t\t$resql = $this->db->query($sql);\n\t\tif (!$resql) {\n\t\t\t$error++;\n\t\t\t$this->errors[] = 'Error '.$this->db->lasterror();\n\t\t\tdol_syslog(__METHOD__.' '.join(',', $this->errors), LOG_ERR);\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$this->id = $this->db->last_insert_id(MAIN_DB_PREFIX.$this->table_element);\n\n\t\t\t//if (!$notrigger) {\n\t\t\t\t// Uncomment this and change MYOBJECT to your own tag if you\n\t\t\t\t// want this action to call a trigger.\n\n\t\t\t\t//// Call triggers\n\t\t\t\t//$result=$this->call_trigger('MYOBJECT_CREATE',$user);\n\t\t\t\t//if ($result < 0) $error++;\n\t\t\t\t//// End call triggers\n\t\t\t//}\n\t\t}\n\n\t\t// Commit or rollback\n\t\tif ($error) {\n\t\t\t$this->db->rollback();\n\n\t\t\treturn -1 * $error;\n\t\t} else {\n\t\t\t$this->db->commit();\n\n\t\t\treturn $this->id;\n\t\t}\n\t}\n\n\t/**\n\t * Load object in memory from the database\n\t *\n\t * @param int    $id  Id object\n\t * @param string $ref Ref\n\t *\n\t * @return int <0 if KO, 0 if not found, >0 if OK\n\t */\n\tpublic function fetch($id, $ref = null)\n\t{\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$sql = 'SELECT';\n\t\t$sql .= \" t.id,\";\n\t\t$sql .= \" t.libelle as label,\";\n\t\t$sql .= \" t.deductible,\";\n\t\t$sql .= \" t.active,\";\n\t\t$sql .= \" t.code,\";\n\t\t$sql .= \" t.fk_pays,\";\n\t\t$sql .= \" t.module,\";\n\t\t$sql .= \" t.accountancy_code\";\n\t\t$sql .= ' FROM '.MAIN_DB_PREFIX.$this->table_element.' as t';\n\t\tif (null !== $ref) {\n\t\t\t$sql .= \" WHERE t.code = '\".$this->db->escape($ref).\"'\";\n\t\t} else {\n\t\t\t$sql .= ' WHERE t.id = '.((int) $id);\n\t\t}\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$numrows = $this->db->num_rows($resql);\n\t\t\tif ($numrows) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t$this->id = $obj->id;\n\n\t\t\t\t$this->libelle = $obj->label;\n\t\t\t\t$this->label = $obj->label;\n\t\t\t\t$this->deductible = $obj->deductible;\n\t\t\t\t$this->active = $obj->active;\n\t\t\t\t$this->code = $obj->code;\n\t\t\t\t$this->fk_pays = $obj->fk_pays;\n\t\t\t\t$this->module = $obj->module;\n\t\t\t\t$this->accountancy_code = $obj->accountancy_code;\n\t\t\t}\n\t\t\t$this->db->free($resql);\n\n\t\t\tif ($numrows) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\t$this->errors[] = 'Error '.$this->db->lasterror();\n\t\t\tdol_syslog(__METHOD__.' '.join(',', $this->errors), LOG_ERR);\n\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t * Update object into database\n\t *\n\t * @param  User $user      User that modifies\n\t * @param  bool $notrigger false=launch triggers after, true=disable triggers\n\t *\n\t * @return int <0 if KO, >0 if OK\n\t */\n\tpublic function update(User $user, $notrigger = false)\n\t{\n\t\t$error = 0;\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t// Clean parameters\n\n\t\t$this->trimParameters(\n\t\t\tarray(\n\t\t\t\t'libelle',\n\t\t\t\t'deductible',\n\t\t\t\t'active',\n\t\t\t\t'code',\n\t\t\t\t'fk_pays',\n\t\t\t\t'module',\n\t\t\t\t'accountancy_code',\n\t\t\t)\n\t\t);\n\n\n\t\t// Check parameters\n\t\t// Put here code to add a control on parameters values\n\n\t\t// Update request\n\t\t$sql = 'UPDATE '.MAIN_DB_PREFIX.$this->table_element.' SET';\n\t\t$sql .= ' libelle = '.(isset($this->libelle) ? \"'\".$this->db->escape($this->libelle).\"'\" : \"null\").',';\n\t\t$sql .= ' deductible = '.(isset($this->deductible) ? ((int) $this->deductible) : \"null\").',';\n\t\t$sql .= ' active = '.(isset($this->active) ? ((int) $this->active) : \"null\").',';\n\t\t$sql .= ' code = '.(isset($this->code) ? \"'\".$this->db->escape($this->code).\"'\" : \"null\").',';\n\t\t$sql .= ' fk_pays = '.((isset($this->fk_pays) && $this->fk_pays > 0) ? ((int) $this->fk_pays) : \"null\").',';\n\t\t$sql .= ' module = '.(isset($this->module) ? \"'\".$this->db->escape($this->module).\"'\" : \"null\").',';\n\t\t$sql .= ' accountancy_code = '.(isset($this->accountancy_code) ? \"'\".$this->db->escape($this->accountancy_code).\"'\" : \"null\");\n\t\t$sql .= ' WHERE id='.((int) $this->id);\n\n\t\t$this->db->begin();\n\n\t\t$resql = $this->db->query($sql);\n\t\tif (!$resql) {\n\t\t\t$error++;\n\t\t\t$this->errors[] = 'Error '.$this->db->lasterror();\n\t\t\tdol_syslog(__METHOD__.' '.join(',', $this->errors), LOG_ERR);\n\t\t}\n\n\t\t//if (!$error && !$notrigger) {\n\t\t\t// Uncomment this and change MYOBJECT to your own tag if you\n\t\t\t// want this action calls a trigger.\n\n\t\t\t//// Call triggers\n\t\t\t//$result=$this->call_trigger('MYOBJECT_MODIFY',$user);\n\t\t\t//if ($result < 0) { $error++; //Do also what you must do to rollback action if trigger fail}\n\t\t\t//// End call triggers\n\t\t//}\n\n\t\t// Commit or rollback\n\t\tif ($error) {\n\t\t\t$this->db->rollback();\n\n\t\t\treturn -1 * $error;\n\t\t} else {\n\t\t\t$this->db->commit();\n\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\t/**\n\t * Delete object in database\n\t *\n\t * @param User $user      User that deletes\n\t * @param bool $notrigger false=launch triggers after, true=disable triggers\n\t *\n\t * @return int <0 if KO, >0 if OK\n\t */\n\tpublic function delete(User $user, $notrigger = false)\n\t{\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$error = 0;\n\n\t\t$this->db->begin();\n\n\t\t//if (!$error) {\n\t\t\t//if (!$notrigger) {\n\t\t\t\t// Uncomment this and change MYOBJECT to your own tag if you\n\t\t\t\t// want this action calls a trigger.\n\n\t\t\t\t//// Call triggers\n\t\t\t\t//$result=$this->call_trigger('MYOBJECT_DELETE',$user);\n\t\t\t\t//if ($result < 0) { $error++; //Do also what you must do to rollback action if trigger fail}\n\t\t\t\t//// End call triggers\n\t\t\t//}\n\t\t//}\n\n\t\tif (!$error) {\n\t\t\t$sql = 'DELETE FROM '.MAIN_DB_PREFIX.$this->table_element;\n\t\t\t$sql .= ' WHERE id='.$this->id;\n\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\t$error++;\n\t\t\t\t$this->errors[] = 'Error '.$this->db->lasterror();\n\t\t\t\tdol_syslog(__METHOD__.' '.join(',', $this->errors), LOG_ERR);\n\t\t\t}\n\t\t}\n\n\t\t// Commit or rollback\n\t\tif ($error) {\n\t\t\t$this->db->rollback();\n\n\t\t\treturn -1 * $error;\n\t\t} else {\n\t\t\t$this->db->commit();\n\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\t/**\n\t * Load an object from its id and create a new one in database\n\t *\n\t * @param\tUser\t$user\t\tUser making the clone\n\t * @param   int     $fromid     Id of object to clone\n\t * @return  int                 New id of clone\n\t */\n\tpublic function createFromClone(User $user, $fromid)\n\t{\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$error = 0;\n\t\t$object = new Cchargesociales($this->db);\n\n\t\t$this->db->begin();\n\n\t\t// Load source object\n\t\t$object->fetch($fromid);\n\t\t// Reset object\n\t\t$object->id = 0;\n\n\t\t// Clear fields\n\t\t// ...\n\n\t\t// Create clone\n\t\t$this->context['createfromclone'] = 'createfromclone';\n\t\t$result = $object->create($user);\n\n\t\t// Other options\n\t\tif ($result < 0) {\n\t\t\t$error++;\n\t\t\t$this->errors = $object->errors;\n\t\t\tdol_syslog(__METHOD__.' '.join(',', $this->errors), LOG_ERR);\n\t\t}\n\n\t\tunset($this->context['createfromclone']);\n\n\t\t// End\n\t\tif (!$error) {\n\t\t\t$this->db->commit();\n\n\t\t\treturn $object->id;\n\t\t} else {\n\t\t\t$this->db->rollback();\n\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *  Return a link to the user card (with optionaly the picto)\n\t * \tUse this->id,this->lastname, this->firstname\n\t *\n\t *\t@param\tint\t\t$withpicto\t\t\tInclude picto in link (0=No picto, 1=Include picto into link, 2=Only picto)\n\t *\t@param\tstring\t$option\t\t\t\tOn what the link point to\n\t *  @param\tinteger\t$notooltip\t\t\t1=Disable tooltip\n\t *  @param\tint\t\t$maxlen\t\t\t\tMax length of visible user name\n\t *  @param  string  $morecss            Add more css on link\n\t *\t@return\tstring\t\t\t\t\t\tString with URL\n\t */\n\tpublic function getNomUrl($withpicto = 0, $option = '', $notooltip = 0, $maxlen = 24, $morecss = '')\n\t{\n\t\tglobal $langs, $conf, $db;\n\t\tglobal $dolibarr_main_authentication, $dolibarr_main_demo;\n\t\tglobal $menumanager;\n\n\n\t\t$result = '';\n\t\t$companylink = '';\n\n\t\t$label = '<u>'.$langs->trans(\"MyModule\").'</u>';\n\t\t$label .= '<div width=\"100%\">';\n\t\t$label .= '<b>'.$langs->trans('Ref').':</b> '.$this->ref;\n\n\t\t$link = '<a href=\"'.DOL_URL_ROOT.'/tax/card.php?id='.$this->id.'\"';\n\t\t$link .= ($notooltip ? '' : ' title=\"'.dol_escape_htmltag($label, 1).'\" class=\"classfortooltip'.($morecss ? ' '.$morecss : '').'\"');\n\t\t$link .= '>';\n\t\t$linkend = '</a>';\n\n\t\tif ($withpicto) {\n\t\t\t$result .= ($link.img_object(($notooltip ? '' : $label), 'label', ($notooltip ? '' : 'class=\"classfortooltip\"'), 0, 0, $notooltip ? 0 : 1).$linkend);\n\t\t\tif ($withpicto != 2) {\n\t\t\t\t$result .= ' ';\n\t\t\t}\n\t\t}\n\t\t$result .= $link.$this->ref.$linkend;\n\t\treturn $result;\n\t}\n\n\t/**\n\t *  Retourne le libelle du status d'un user (actif, inactif)\n\t *\n\t *  @param\tint\t\t$mode          0=libelle long, 1=libelle court, 2=Picto + Libelle court, 3=Picto, 4=Picto + Libelle long, 5=Libelle court + Picto\n\t *  @return\tstring \t\t\t       Label of status\n\t */\n\tpublic function getLibStatut($mode = 0)\n\t{\n\t\treturn $this->LibStatut($this->status, $mode);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Renvoi le libelle d'un status donne\n\t *\n\t *  @param\tint\t\t$status        \tId status\n\t *  @param  int\t\t$mode          \t0=libelle long, 1=libelle court, 2=Picto + Libelle court, 3=Picto, 4=Picto + Libelle long, 5=Libelle court + Picto\n\t *  @return string \t\t\t       \tLabel of status\n\t */\n\tpublic function LibStatut($status, $mode = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\tif ($mode == 0) {\n\t\t\tif ($status == 1) {\n\t\t\t\treturn $langs->trans('Enabled');\n\t\t\t} elseif ($status == 0) {\n\t\t\t\treturn $langs->trans('Disabled');\n\t\t\t}\n\t\t} elseif ($mode == 1) {\n\t\t\tif ($status == 1) {\n\t\t\t\treturn $langs->trans('Enabled');\n\t\t\t} elseif ($status == 0) {\n\t\t\t\treturn $langs->trans('Disabled');\n\t\t\t}\n\t\t} elseif ($mode == 2) {\n\t\t\tif ($status == 1) {\n\t\t\t\treturn img_picto($langs->trans('Enabled'), 'statut4').' '.$langs->trans('Enabled');\n\t\t\t} elseif ($status == 0) {\n\t\t\t\treturn img_picto($langs->trans('Disabled'), 'statut5').' '.$langs->trans('Disabled');\n\t\t\t}\n\t\t} elseif ($mode == 3) {\n\t\t\tif ($status == 1) {\n\t\t\t\treturn img_picto($langs->trans('Enabled'), 'statut4');\n\t\t\t} elseif ($status == 0) {\n\t\t\t\treturn img_picto($langs->trans('Disabled'), 'statut5');\n\t\t\t}\n\t\t} elseif ($mode == 4) {\n\t\t\tif ($status == 1) {\n\t\t\t\treturn img_picto($langs->trans('Enabled'), 'statut4').' '.$langs->trans('Enabled');\n\t\t\t} elseif ($status == 0) {\n\t\t\t\treturn img_picto($langs->trans('Disabled'), 'statut5').' '.$langs->trans('Disabled');\n\t\t\t}\n\t\t} elseif ($mode == 5) {\n\t\t\tif ($status == 1) {\n\t\t\t\treturn $langs->trans('Enabled').' '.img_picto($langs->trans('Enabled'), 'statut4');\n\t\t\t} elseif ($status == 0) {\n\t\t\t\treturn $langs->trans('Disabled').' '.img_picto($langs->trans('Disabled'), 'statut5');\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Initialise object with example values\n\t * Id must be 0 if object instance is a specimen\n\t *\n\t * @return void\n\t */\n\tpublic function initAsSpecimen()\n\t{\n\t\t$this->id = 0;\n\n\t\t$this->libelle = '';\n\t\t$this->label = '';\n\t\t$this->deductible = '';\n\t\t$this->active = '';\n\t\t$this->code = '';\n\t\t$this->fk_pays = '';\n\t\t$this->module = '';\n\t\t$this->accountancy_code = '';\n\t}\n\n\t/**\n\t * Trim object parameters\n\t *\n\t * @param string[] $parameters array of parameters to trim\n\t * @return void\n\t */\n\tprivate function trimParameters($parameters)\n\t{\n\t\tforeach ($parameters as $parameter) {\n\t\t\tif (isset($this->$parameter)) {\n\t\t\t\t$this->$parameter = trim($this->$parameter);\n\t\t\t}\n\t\t}\n\t}\n}\n", "<?php\n/* Copyright (C) 2001-2007  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2003       Brian Fraval            <brian@fraval.org>\n * Copyright (C) 2004-2015  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2005       Eric Seigne             <eric.seigne@ryxeo.com>\n * Copyright (C) 2005-2017  Regis Houssin           <regis.houssin@inodbox.com>\n * Copyright (C) 2008       Patrick Raguin          <patrick.raguin@auguria.net>\n * Copyright (C) 2010-2020  Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2011-2013  Alexandre Spangaro      <aspangaro@open-dsi.fr>\n * Copyright (C) 2015       Jean-Fran\u00e7ois Ferry     <jfefe@aternatik.fr>\n * Copyright (C) 2015       Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2015       Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2018       Nicolas ZABOURI\t        <info@inovea-conseil.com>\n * Copyright (C) 2018       Ferran Marcet\t\t    <fmarcet@2byte.es.com>\n * Copyright (C) 2018-2021  Fr\u00e9d\u00e9ric France         <frederic.france@netlogic.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n *  \\file       htdocs/societe/card.php\n *  \\ingroup    societe\n *  \\brief      Third party card page\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/images.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formfile.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/extrafields.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/contact/class/contact.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\nif (!empty($conf->adherent->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\n}\nif (!empty($conf->accounting->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/accounting.lib.php';\n}\nif (!empty($conf->accounting->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formaccounting.class.php';\n}\nif (!empty($conf->accounting->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/accountancy/class/accountingaccount.class.php';\n}\nif (! empty($conf->eventorganization->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/eventorganization/class/conferenceorboothattendee.class.php';\n}\n\n\n$langs->loadLangs(array(\"companies\", \"commercial\", \"bills\", \"banks\", \"users\"));\nif (!empty($conf->adherent->enabled)) {\n\t$langs->load(\"members\");\n}\nif (!empty($conf->categorie->enabled)) {\n\t$langs->load(\"categories\");\n}\nif (!empty($conf->incoterm->enabled)) {\n\t$langs->load(\"incoterm\");\n}\nif (!empty($conf->notification->enabled)) {\n\t$langs->load(\"mails\");\n}\n\n$mesg = ''; $error = 0; $errors = array();\n\n$action\t\t= (GETPOST('action', 'aZ09') ? GETPOST('action', 'aZ09') : 'view');\n$cancel\t\t= GETPOST('cancel', 'alpha');\n$backtopage = GETPOST('backtopage', 'alpha');\n$confirm\t= GETPOST('confirm', 'alpha');\n\n$socid = GETPOST('socid', 'int') ?GETPOST('socid', 'int') : GETPOST('id', 'int');\nif ($user->socid) {\n\t$socid = $user->socid;\n}\nif (empty($socid) && $action == 'view') {\n\t$action = 'create';\n}\n\n$object = new Societe($db);\n$extrafields = new ExtraFields($db);\n\n// fetch optionals attributes and labels\n$extrafields->fetch_name_optionals_label($object->table_element);\n\n$socialnetworks = getArrayOfSocialNetworks();\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('thirdpartycard', 'globalcard'));\n\nif ($socid > 0) {\n\t$object->fetch($socid);\n}\n\nif (!($object->id > 0) && $action == 'view') {\n\t$langs->load(\"errors\");\n\tprint($langs->trans('ErrorRecordNotFound'));\n\texit;\n}\n\n// Get object canvas (By default, this is not defined, so standard usage of dolibarr)\n$canvas = $object->canvas ? $object->canvas : GETPOST(\"canvas\");\n$objcanvas = null;\nif (!empty($canvas)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/canvas.class.php';\n\t$objcanvas = new Canvas($db, $action);\n\t$objcanvas->getCanvas('thirdparty', 'card', $canvas);\n}\n\n$permissiontoread = $user->rights->societe->lire;\n$permissiontoadd = $user->rights->societe->creer; // Used by the include of actions_addupdatedelete.inc.php and actions_lineupdown.inc.php\n$permissiontodelete = $user->rights->societe->supprimer || ($permissiontoadd && isset($object->status) && $object->status == 0);\n$permissionnote = $user->rights->societe->creer; // Used by the include of actions_setnotes.inc.php\n$permissiondellink = $user->rights->societe->creer; // Used by the include of actions_dellink.inc.php\n$upload_dir = $conf->societe->multidir_output[isset($object->entity) ? $object->entity : 1];\n\n// Security check\n$result = restrictedArea($user, 'societe', $socid, '&societe', '', 'fk_soc', 'rowid', 0);\n\n/*\nif ($object->id > 0) {\n\tif ($object->client == 0 && $object->fournisseur > 0) {\n\t\tif (!empty($user->rights->fournisseur->lire)) {\n\t\t\taccessforbidden();\n\t\t}\n\t}\n}\n*/\n\n\n\n/*\n * Actions\n */\n\n$parameters = array('id'=>$socid, 'objcanvas'=>$objcanvas);\n$reshook = $hookmanager->executeHooks('doActions', $parameters, $object, $action); // Note that $action and $object may have been modified by some hooks\nif ($reshook < 0) {\n\tsetEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n}\n\nif (empty($reshook)) {\n\tif ($cancel) {\n\t\t$action = '';\n\t\tif (!empty($backtopage)) {\n\t\t\theader(\"Location: \".$backtopage);\n\t\t\texit;\n\t\t}\n\t}\n\n\tif ($action == 'confirm_merge' && $confirm == 'yes' && $user->rights->societe->creer) {\n\t\t$error = 0;\n\t\t$soc_origin_id = GETPOST('soc_origin', 'int');\n\t\t$soc_origin = new Societe($db);\n\n\t\tif ($soc_origin_id <= 0) {\n\t\t\t$langs->load('errors');\n\t\t\tsetEventMessages($langs->trans('ErrorThirdPartyIdIsMandatory', $langs->transnoentitiesnoconv('MergeOriginThirdparty')), null, 'errors');\n\t\t} else {\n\t\t\tif (!$error && $soc_origin->fetch($soc_origin_id) < 1) {\n\t\t\t\tsetEventMessages($langs->trans('ErrorRecordNotFound'), null, 'errors');\n\t\t\t\t$error++;\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\t// TODO Move the merge function into class of object.\n\n\t\t\t\t$db->begin();\n\n\t\t\t\t// Recopy some data\n\t\t\t\t$object->client = $object->client | $soc_origin->client;\n\t\t\t\t$object->fournisseur = $object->fournisseur | $soc_origin->fournisseur;\n\t\t\t\t$listofproperties = array(\n\t\t\t\t\t'address', 'zip', 'town', 'state_id', 'country_id', 'phone', 'phone_pro', 'fax', 'email', 'skype', 'twitter', 'facebook', 'linkedin', 'socialnetworks', 'url', 'barcode',\n\t\t\t\t\t'idprof1', 'idprof2', 'idprof3', 'idprof4', 'idprof5', 'idprof6',\n\t\t\t\t\t'tva_intra', 'effectif_id', 'forme_juridique', 'remise_percent', 'remise_supplier_percent', 'mode_reglement_supplier_id', 'cond_reglement_supplier_id', 'name_bis',\n\t\t\t\t\t'stcomm_id', 'outstanding_limit', 'price_level', 'parent', 'default_lang', 'ref', 'ref_ext', 'import_key', 'fk_incoterms', 'fk_multicurrency',\n\t\t\t\t\t'code_client', 'code_fournisseur', 'code_compta', 'code_compta_fournisseur',\n\t\t\t\t\t'model_pdf', 'fk_projet'\n\t\t\t\t);\n\t\t\t\tforeach ($listofproperties as $property) {\n\t\t\t\t\tif (empty($object->$property)) {\n\t\t\t\t\t\t$object->$property = $soc_origin->$property;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Concat some data\n\t\t\t\t$listofproperties = array(\n\t\t\t\t\t'note_public', 'note_private'\n\t\t\t\t);\n\t\t\t\tforeach ($listofproperties as $property) {\n\t\t\t\t\t$object->$property = dol_concatdesc($object->$property, $soc_origin->$property);\n\t\t\t\t}\n\n\t\t\t\t// Merge extrafields\n\t\t\t\tif (is_array($soc_origin->array_options)) {\n\t\t\t\t\tforeach ($soc_origin->array_options as $key => $val) {\n\t\t\t\t\t\tif (empty($object->array_options[$key])) {\n\t\t\t\t\t\t\t$object->array_options[$key] = $val;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Merge categories\n\t\t\t\t$static_cat = new Categorie($db);\n\n\t\t\t\t$custcats_ori = $static_cat->containing($soc_origin->id, 'customer', 'id');\n\t\t\t\t$custcats = $static_cat->containing($object->id, 'customer', 'id');\n\t\t\t\t$custcats = array_merge($custcats, $custcats_ori);\n\t\t\t\t$object->setCategories($custcats, 'customer');\n\n\t\t\t\t$suppcats_ori = $static_cat->containing($soc_origin->id, 'supplier', 'id');\n\t\t\t\t$suppcats = $static_cat->containing($object->id, 'supplier', 'id');\n\t\t\t\t$suppcats = array_merge($suppcats, $suppcats_ori);\n\t\t\t\t$object->setCategories($suppcats, 'supplier');\n\n\t\t\t\t// If thirdparty has a new code that is same than origin, we clean origin code to avoid duplicate key from database unique keys.\n\t\t\t\tif ($soc_origin->code_client == $object->code_client\n\t\t\t\t\t|| $soc_origin->code_fournisseur == $object->code_fournisseur\n\t\t\t\t\t|| $soc_origin->barcode == $object->barcode) {\n\t\t\t\t\tdol_syslog(\"We clean customer and supplier code so we will be able to make the update of target\");\n\t\t\t\t\t$soc_origin->code_client = '';\n\t\t\t\t\t$soc_origin->code_fournisseur = '';\n\t\t\t\t\t$soc_origin->barcode = '';\n\t\t\t\t\t$soc_origin->update($soc_origin->id, $user, 0, 1, 1, 'merge');\n\t\t\t\t}\n\n\t\t\t\t// Update\n\t\t\t\t$result = $object->update($object->id, $user, 0, 1, 1, 'merge');\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\n\t\t\t\t// Move links\n\t\t\t\tif (!$error) {\n\t\t\t\t\t// This list is also into the api_thirdparties.class.php\n\t\t\t\t\t// TODO Mutualise the list into object societe.class.php\n\t\t\t\t\t$objects = array(\n\t\t\t\t\t\t'Adherent' => '/adherents/class/adherent.class.php',\n\t\t\t\t\t\t'Don' => '/don/class/don.class.php',\n\t\t\t\t\t\t'Societe' => '/societe/class/societe.class.php',\n\t\t\t\t\t\t//'Categorie' => '/categories/class/categorie.class.php',\n\t\t\t\t\t\t'ActionComm' => '/comm/action/class/actioncomm.class.php',\n\t\t\t\t\t\t'Propal' => '/comm/propal/class/propal.class.php',\n\t\t\t\t\t\t'Commande' => '/commande/class/commande.class.php',\n\t\t\t\t\t\t'Facture' => '/compta/facture/class/facture.class.php',\n\t\t\t\t\t\t'FactureRec' => '/compta/facture/class/facture-rec.class.php',\n\t\t\t\t\t\t'LignePrelevement' => '/compta/prelevement/class/ligneprelevement.class.php',\n\t\t\t\t\t\t'Mo' => '/mrp/class/mo.class.php',\n\t\t\t\t\t\t'Contact' => '/contact/class/contact.class.php',\n\t\t\t\t\t\t'Contrat' => '/contrat/class/contrat.class.php',\n\t\t\t\t\t\t'Expedition' => '/expedition/class/expedition.class.php',\n\t\t\t\t\t\t'Fichinter' => '/fichinter/class/fichinter.class.php',\n\t\t\t\t\t\t'CommandeFournisseur' => '/fourn/class/fournisseur.commande.class.php',\n\t\t\t\t\t\t'FactureFournisseur' => '/fourn/class/fournisseur.facture.class.php',\n\t\t\t\t\t\t'SupplierProposal' => '/supplier_proposal/class/supplier_proposal.class.php',\n\t\t\t\t\t\t'ProductFournisseur' => '/fourn/class/fournisseur.product.class.php',\n\t\t\t\t\t\t'Delivery' => '/delivery/class/delivery.class.php',\n\t\t\t\t\t\t'Product' => '/product/class/product.class.php',\n\t\t\t\t\t\t'Project' => '/projet/class/project.class.php',\n\t\t\t\t\t\t'Ticket' => '/ticket/class/ticket.class.php',\n\t\t\t\t\t\t'User' => '/user/class/user.class.php',\n\t\t\t\t\t\t'Account' => '/compta/bank/class/account.class.php',\n\t\t\t\t\t\t'ConferenceOrBoothAttendee' => '/eventorganization/class/conferenceorboothattendee.class.php'\n\t\t\t\t\t);\n\n\t\t\t\t\t//First, all core objects must update their tables\n\t\t\t\t\tforeach ($objects as $object_name => $object_file) {\n\t\t\t\t\t\trequire_once DOL_DOCUMENT_ROOT.$object_file;\n\n\t\t\t\t\t\tif (!$error && !$object_name::replaceThirdparty($db, $soc_origin->id, $object->id)) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\tsetEventMessages($db->lasterror(), null, 'errors');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// External modules should update their ones too\n\t\t\t\tif (!$error) {\n\t\t\t\t\t$reshook = $hookmanager->executeHooks('replaceThirdparty', array(\n\t\t\t\t\t\t'soc_origin' => $soc_origin->id,\n\t\t\t\t\t\t'soc_dest' => $object->id\n\t\t\t\t\t), $object, $action);\n\n\t\t\t\t\tif ($reshook < 0) {\n\t\t\t\t\t\tsetEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tif (!$error) {\n\t\t\t\t\t$object->context = array('merge'=>1, 'mergefromid'=>$soc_origin->id);\n\n\t\t\t\t\t// Call trigger\n\t\t\t\t\t$result = $object->call_trigger('COMPANY_MODIFY', $user);\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t\t// End call triggers\n\t\t\t\t}\n\n\t\t\t\tif (!$error) {\n\t\t\t\t\t//We finally remove the old thirdparty\n\t\t\t\t\tif ($soc_origin->delete($soc_origin->id, $user) < 1) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error) {\n\t\t\t\t\tsetEventMessages($langs->trans('ThirdpartiesMergeSuccess'), null, 'mesgs');\n\t\t\t\t\t$db->commit();\n\t\t\t\t} else {\n\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\tsetEventMessages($langs->trans('ErrorsThirdpartyMerge'), null, 'errors');\n\t\t\t\t\t$db->rollback();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (GETPOST('getcustomercode')) {\n\t\t// We defined value code_client\n\t\t$_POST[\"customer_code\"] = \"Acompleter\";\n\t}\n\n\tif (GETPOST('getsuppliercode')) {\n\t\t// We defined value code_fournisseur\n\t\t$_POST[\"supplier_code\"] = \"Acompleter\";\n\t}\n\n\tif ($action == 'set_localtax1') {\n\t\t//obtidre selected del combobox\n\t\t$value = GETPOST('lt1');\n\t\t$object->fetch($socid);\n\t\t$res = $object->setValueFrom('localtax1_value', $value, '', null, 'text', '', $user, 'COMPANY_MODIFY');\n\t}\n\tif ($action == 'set_localtax2') {\n\t\t//obtidre selected del combobox\n\t\t$value = GETPOST('lt2');\n\t\t$object->fetch($socid);\n\t\t$res = $object->setValueFrom('localtax2_value', $value, '', null, 'text', '', $user, 'COMPANY_MODIFY');\n\t}\n\n\tif ($action == 'update_extras') {\n\t\t$object->fetch($socid);\n\n\t\t$object->oldcopy = dol_clone($object);\n\n\t\t// Fill array 'array_options' with data from update form\n\t\t$extrafields->fetch_name_optionals_label($object->table_element);\n\n\t\t$ret = $extrafields->setOptionalsFromPost(null, $object, GETPOST('attribute', 'restricthtml'));\n\t\tif ($ret < 0) {\n\t\t\t$error++;\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t$result = $object->insertExtraFields('COMPANY_MODIFY');\n\t\t\tif ($result < 0) {\n\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t$error++;\n\t\t\t}\n\t\t}\n\n\t\tif ($error) {\n\t\t\t$action = 'edit_extras';\n\t\t}\n\t}\n\n\t// Add new or update third party\n\tif ((!GETPOST('getcustomercode') && !GETPOST('getsuppliercode'))\n\t&& ($action == 'add' || $action == 'update') && $user->rights->societe->creer) {\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\n\t\tif (!GETPOST('name')) {\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"ThirdPartyName\")), null, 'errors');\n\t\t\t$error++;\n\t\t}\n\t\tif (GETPOST('client') < 0) {\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"ProspectCustomer\")), null, 'errors');\n\t\t\t$error++;\n\t\t}\n\t\tif (GETPOST('fournisseur') < 0) {\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"Supplier\")), null, 'errors');\n\t\t\t$error++;\n\t\t}\n\n\t\tif (!empty($conf->mailing->enabled) && !empty($conf->global->MAILING_CONTACT_DEFAULT_BULK_STATUS) && $conf->global->MAILING_CONTACT_DEFAULT_BULK_STATUS==-1 && GETPOST('contact_no_email', 'int')==-1 && !empty(GETPOST('email', 'custom', 0, FILTER_SANITIZE_EMAIL))) {\n\t\t\t$error++;\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"No_Email\")), null, 'errors');\n\t\t}\n\n\t\tif (!empty($conf->mailing->enabled) && GETPOST(\"private\", 'int') == 1 && !empty($conf->global->MAILING_CONTACT_DEFAULT_BULK_STATUS) && $conf->global->MAILING_CONTACT_DEFAULT_BULK_STATUS==-1 && GETPOST('contact_no_email', 'int')==-1 && !empty(GETPOST('email', 'custom', 0, FILTER_SANITIZE_EMAIL))) {\n\t\t\t$error++;\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"No_Email\")), null, 'errors');\n\t\t}\n\n\t\tif (!$error) {\n\t\t\tif ($action == 'update') {\n\t\t\t\t$ret = $object->fetch($socid);\n\t\t\t\t$object->oldcopy = clone $object;\n\t\t\t} else {\n\t\t\t\t$object->canvas = $canvas;\n\t\t\t}\n\n\t\t\tif (GETPOST(\"private\", 'int') == 1) {\t// Ask to create a contact\n\t\t\t\t$object->particulier\t\t= GETPOST(\"private\", 'int');\n\n\t\t\t\t$object->name = dolGetFirstLastname(GETPOST('firstname', 'alphanohtml'), GETPOST('name', 'alphanohtml'));\n\t\t\t\t$object->civility_id\t\t= GETPOST('civility_id', 'alphanohtml'); // Note: civility id is a code, not an int\n\t\t\t\t// Add non official properties\n\t\t\t\t$object->name_bis = GETPOST('name', 'alphanohtml');\n\t\t\t\t$object->firstname = GETPOST('firstname', 'alphanohtml');\n\t\t\t} else {\n\t\t\t\t$object->name = GETPOST('name', 'alphanohtml');\n\t\t\t}\n\t\t\t$object->entity\t\t\t\t\t= (GETPOSTISSET('entity') ? GETPOST('entity', 'int') : $conf->entity);\n\t\t\t$object->name_alias = GETPOST('name_alias', 'alphanohtml');\n\t\t\t$object->address\t\t\t\t= GETPOST('address', 'alphanohtml');\n\t\t\t$object->zip = GETPOST('zipcode', 'alphanohtml');\n\t\t\t$object->town = GETPOST('town', 'alphanohtml');\n\t\t\t$object->country_id = GETPOST('country_id', 'int');\n\t\t\t$object->state_id = GETPOST('state_id', 'int');\n\t\t\t//$object->skype\t\t\t\t\t= GETPOST('skype', 'alpha');\n\t\t\t//$object->twitter\t\t\t\t= GETPOST('twitter', 'alpha');\n\t\t\t//$object->facebook\t\t\t\t= GETPOST('facebook', 'alpha');\n\t\t\t//$object->linkedin\t\t\t\t= GETPOST('linkedin', 'alpha');\n\t\t\t$object->socialnetworks = array();\n\t\t\tif (!empty($conf->socialnetworks->enabled)) {\n\t\t\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\t\t\tif (GETPOSTISSET($key) && GETPOST($key, 'alphanohtml') != '') {\n\t\t\t\t\t\t$object->socialnetworks[$key] = GETPOST($key, 'alphanohtml');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$object->phone = GETPOST('phone', 'alpha');\n\t\t\t$object->fax\t\t\t\t\t= GETPOST('fax', 'alpha');\n\t\t\t$object->email = trim(GETPOST('email', 'custom', 0, FILTER_SANITIZE_EMAIL));\n\t\t\t$object->url\t\t\t\t\t= trim(GETPOST('url', 'custom', 0, FILTER_SANITIZE_URL));\n\t\t\t$object->idprof1\t\t\t\t= trim(GETPOST('idprof1', 'alphanohtml'));\n\t\t\t$object->idprof2\t\t\t\t= trim(GETPOST('idprof2', 'alphanohtml'));\n\t\t\t$object->idprof3\t\t\t\t= trim(GETPOST('idprof3', 'alphanohtml'));\n\t\t\t$object->idprof4\t\t\t\t= trim(GETPOST('idprof4', 'alphanohtml'));\n\t\t\t$object->idprof5\t\t\t\t= trim(GETPOST('idprof5', 'alphanohtml'));\n\t\t\t$object->idprof6\t\t\t\t= trim(GETPOST('idprof6', 'alphanohtml'));\n\t\t\t$object->prefix_comm\t\t\t= GETPOST('prefix_comm', 'alphanohtml');\n\t\t\t$object->code_client\t\t\t= GETPOSTISSET('customer_code') ?GETPOST('customer_code', 'alpha') : GETPOST('code_client', 'alpha');\n\t\t\t$object->code_fournisseur = GETPOSTISSET('supplier_code') ?GETPOST('supplier_code', 'alpha') : GETPOST('code_fournisseur', 'alpha');\n\t\t\t$object->capital\t\t\t\t= GETPOST('capital', 'alphanohtml');\n\t\t\t$object->barcode\t\t\t\t= GETPOST('barcode', 'alphanohtml');\n\n\t\t\t$object->tva_intra\t\t\t\t= GETPOST('tva_intra', 'alphanohtml');\n\t\t\t$object->tva_assuj\t\t\t\t= GETPOST('assujtva_value', 'alpha');\n\t\t\t$object->status = GETPOST('status', 'alpha');\n\n\t\t\t// Local Taxes\n\t\t\t$object->localtax1_assuj\t\t= GETPOST('localtax1assuj_value', 'alpha');\n\t\t\t$object->localtax2_assuj\t\t= GETPOST('localtax2assuj_value', 'alpha');\n\n\t\t\t$object->localtax1_value\t\t= GETPOST('lt1', 'alpha');\n\t\t\t$object->localtax2_value\t\t= GETPOST('lt2', 'alpha');\n\n\t\t\t$object->forme_juridique_code = GETPOST('forme_juridique_code', 'int');\n\t\t\t$object->effectif_id\t\t\t= GETPOST('effectif_id', 'int');\n\t\t\t$object->typent_id = GETPOST('typent_id', 'int');\n\n\t\t\t$object->typent_code\t\t\t= dol_getIdFromCode($db, $object->typent_id, 'c_typent', 'id', 'code'); // Force typent_code too so check in verify() will be done on new type\n\n\t\t\t$object->client = GETPOST('client', 'int');\n\t\t\t$object->fournisseur\t\t\t= GETPOST('fournisseur', 'int');\n\n\t\t\t$object->commercial_id = GETPOST('commercial_id', 'int');\n\t\t\t$object->default_lang = GETPOST('default_lang');\n\n\t\t\t// Webservices url/key\n\t\t\t$object->webservices_url\t\t= GETPOST('webservices_url', 'custom', 0, FILTER_SANITIZE_URL);\n\t\t\t$object->webservices_key\t\t= GETPOST('webservices_key', 'san_alpha');\n\n\t\t\tif (GETPOSTISSET('accountancy_code_sell')) {\n\t\t\t\t$object->accountancy_code_sell  = GETPOST('accountancy_code_sell', 'alpha');\n\t\t\t}\n\t\t\tif (GETPOSTISSET('accountancy_code_buy')) {\n\t\t\t\t$object->accountancy_code_buy   = GETPOST('accountancy_code_buy', 'alpha');\n\t\t\t}\n\n\t\t\t// Incoterms\n\t\t\tif (!empty($conf->incoterm->enabled)) {\n\t\t\t\t$object->fk_incoterms = GETPOST('incoterm_id', 'int');\n\t\t\t\t$object->location_incoterms = GETPOST('location_incoterms', 'alpha');\n\t\t\t}\n\n\t\t\t// Multicurrency\n\t\t\tif (!empty($conf->multicurrency->enabled)) {\n\t\t\t\t$object->multicurrency_code = GETPOST('multicurrency_code', 'alpha');\n\t\t\t}\n\n\t\t\t// Fill array 'array_options' with data from add form\n\t\t\t$ret = $extrafields->setOptionalsFromPost(null, $object);\n\t\t\tif ($ret < 0) {\n\t\t\t\t $error++;\n\t\t\t}\n\n\t\t\t// Fill array 'array_languages' with data from add form\n\t\t\t$ret = $object->setValuesForExtraLanguages();\n\t\t\tif ($ret < 0) {\n\t\t\t\t$error++;\n\t\t\t}\n\t\t\t//var_dump($object->array_languages);exit;\n\n\t\t\tif (GETPOST('deletephoto')) {\n\t\t\t\t$object->logo = '';\n\t\t\t} elseif (!empty($_FILES['photo']['name'])) {\n\t\t\t\t$object->logo = dol_sanitizeFileName($_FILES['photo']['name']);\n\t\t\t}\n\n\t\t\t// Check parameters\n\t\t\tif (!GETPOST('cancel', 'alpha')) {\n\t\t\t\tif (!empty($object->email) && !isValidEMail($object->email)) {\n\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t$error++;\n\t\t\t\t\tsetEventMessages('', $langs->trans(\"ErrorBadEMail\", $object->email), 'errors');\n\t\t\t\t}\n\t\t\t\tif (!empty($object->url) && !isValidUrl($object->url)) {\n\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\tsetEventMessages('', $langs->trans(\"ErrorBadUrl\", $object->url), 'errors');\n\t\t\t\t}\n\t\t\t\tif (!empty($object->webservices_url)) {\n\t\t\t\t\t//Check if has transport, without any the soap client will give error\n\t\t\t\t\tif (strpos($object->webservices_url, \"http\") === false) {\n\t\t\t\t\t\t$object->webservices_url = \"http://\".$object->webservices_url;\n\t\t\t\t\t}\n\t\t\t\t\tif (!isValidUrl($object->webservices_url)) {\n\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\t$error++; $errors[] = $langs->trans(\"ErrorBadUrl\", $object->webservices_url);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// We set country_id, country_code and country for the selected country\n\t\t\t\t$object->country_id = GETPOST('country_id', 'int') != '' ? GETPOST('country_id', 'int') : $mysoc->country_id;\n\t\t\t\tif ($object->country_id) {\n\t\t\t\t\t$tmparray = getCountry($object->country_id, 'all');\n\t\t\t\t\t$object->country_code = $tmparray['code'];\n\t\t\t\t\t$object->country = $tmparray['label'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!$error) {\n\t\t\tif ($action == 'add') {\n\t\t\t\t$error = 0;\n\n\t\t\t\t$db->begin();\n\n\t\t\t\tif (empty($object->client)) {\n\t\t\t\t\t$object->code_client = '';\n\t\t\t\t}\n\t\t\t\tif (empty($object->fournisseur)) {\n\t\t\t\t\t$object->code_fournisseur = '';\n\t\t\t\t}\n\n\t\t\t\t$result = $object->create($user);\n\n\t\t\t\tif ($result >= 0) {\n\t\t\t\t\tif ($object->particulier) {\n\t\t\t\t\t\tdol_syslog(\"We ask to create a contact/address too\", LOG_DEBUG);\n\t\t\t\t\t\t$contcats = GETPOST('contcats', 'array');\n\t\t\t\t\t\t$no_email = GETPOST('contact_no_email', 'int');\n\t\t\t\t\t\t$result = $object->create_individual($user, $no_email, $contcats);\n\t\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Links with users\n\t\t\t\t\t$salesreps = GETPOST('commercial', 'array');\n\t\t\t\t\t$result = $object->setSalesRep($salesreps, true);\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Customer categories association\n\t\t\t\t\t$custcats = GETPOST('custcats', 'array');\n\t\t\t\t\t$result = $object->setCategories($custcats, 'customer');\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Supplier categories association\n\t\t\t\t\t$suppcats = GETPOST('suppcats', 'array');\n\t\t\t\t\t$result = $object->setCategories($suppcats, 'supplier');\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Logo/Photo save\n\t\t\t\t\t$dir = $conf->societe->multidir_output[$conf->entity].\"/\".$object->id.\"/logos/\";\n\t\t\t\t\t$file_OK = is_uploaded_file($_FILES['photo']['tmp_name']);\n\t\t\t\t\tif ($file_OK) {\n\t\t\t\t\t\tif (image_format_supported($_FILES['photo']['name'])) {\n\t\t\t\t\t\t\tdol_mkdir($dir);\n\n\t\t\t\t\t\t\tif (@is_dir($dir)) {\n\t\t\t\t\t\t\t\t$newfile = $dir.'/'.dol_sanitizeFileName($_FILES['photo']['name']);\n\t\t\t\t\t\t\t\t$result = dol_move_uploaded_file($_FILES['photo']['tmp_name'], $newfile, 1);\n\n\t\t\t\t\t\t\t\tif (!$result > 0) {\n\t\t\t\t\t\t\t\t\t$errors[] = \"ErrorFailedToSaveFile\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Create thumbs\n\t\t\t\t\t\t\t\t\t$object->addThumbs($newfile);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tswitch ($_FILES['photo']['error']) {\n\t\t\t\t\t\t\tcase 1: //uploaded file exceeds the upload_max_filesize directive in php.ini\n\t\t\t\t\t\t\tcase 2: //uploaded file exceeds the MAX_FILE_SIZE directive that was specified in the html form\n\t\t\t\t\t\t\t\t$errors[] = \"ErrorFileSizeTooLarge\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3: //uploaded file was only partially uploaded\n\t\t\t\t\t\t\t\t$errors[] = \"ErrorFilePartiallyUploaded\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($result == -3 && in_array('ErrorCustomerCodeAlreadyUsed', $object->errors)) {\n\t\t\t\t\t\t$duplicate_code_error = true;\n\t\t\t\t\t\t$object->code_client = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($result == -3 && in_array('ErrorSupplierCodeAlreadyUsed', $object->errors)) {\n\t\t\t\t\t\t$duplicate_code_error = true;\n\t\t\t\t\t\t$object->code_fournisseur = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($db->lasterrno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\t// TODO Sometime errors on duplicate on profid and not on code, so we must manage this case\n\t\t\t\t\t\t$duplicate_code_error = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\n\t\t\t\tif ($result >= 0 && !$error) {\n\t\t\t\t\t$db->commit();\n\n\t\t\t\t\tif (!empty($backtopage)) {\n\t\t\t\t\t\t$backtopage = preg_replace('/--IDFORBACKTOPAGE--/', $object->id, $backtopage); // New method to autoselect project after a New on another form object creation\n\t\t\t\t\t\tif (preg_match('/\\?/', $backtopage)) {\n\t\t\t\t\t\t\t$backtopage .= '&socid='.$object->id; // Old method\n\t\t\t\t\t\t}\n\t\t\t\t\t\theader(\"Location: \".$backtopage);\n\t\t\t\t\t\texit;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$url = $_SERVER[\"PHP_SELF\"].\"?socid=\".$object->id; // Old method\n\t\t\t\t\t\tif (($object->client == 1 || $object->client == 3) && empty($conf->global->SOCIETE_DISABLE_CUSTOMERS)) {\n\t\t\t\t\t\t\t$url = DOL_URL_ROOT.\"/comm/card.php?socid=\".$object->id;\n\t\t\t\t\t\t} elseif ($object->fournisseur == 1) {\n\t\t\t\t\t\t\t$url = DOL_URL_ROOT.\"/fourn/card.php?socid=\".$object->id;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\theader(\"Location: \".$url);\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$db->rollback();\n\t\t\t\t\t$action = 'create';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($action == 'update') {\n\t\t\t\t$error = 0;\n\n\t\t\t\tif (GETPOST('cancel', 'alpha')) {\n\t\t\t\t\tif (!empty($backtopage)) {\n\t\t\t\t\t\theader(\"Location: \".$backtopage);\n\t\t\t\t\t\texit;\n\t\t\t\t\t} else {\n\t\t\t\t\t\theader(\"Location: \".$_SERVER[\"PHP_SELF\"].\"?socid=\".$socid);\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// To not set code if third party is not concerned. But if it had values, we keep them.\n\t\t\t\tif (empty($object->client) && empty($object->oldcopy->code_client)) {\n\t\t\t\t\t$object->code_client = '';\n\t\t\t\t}\n\t\t\t\tif (empty($object->fournisseur) && empty($object->oldcopy->code_fournisseur)) {\n\t\t\t\t\t$object->code_fournisseur = '';\n\t\t\t\t}\n\t\t\t\t//var_dump($object);exit;\n\n\t\t\t\t$result = $object->update($socid, $user, 1, $object->oldcopy->codeclient_modifiable(), $object->oldcopy->codefournisseur_modifiable(), 'update', 0);\n\n\t\t\t\tif ($result <= 0) {\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\n\t\t\t\t// Links with users\n\t\t\t\t$salesreps = GETPOST('commercial', 'array');\n\t\t\t\t$result = $object->setSalesRep($salesreps);\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t}\n\n\t\t\t\t// Prevent thirdparty's emptying if a user hasn't rights $user->rights->categorie->lire (in such a case, post of 'custcats' is not defined)\n\t\t\t\tif (!$error && !empty($user->rights->categorie->lire)) {\n\t\t\t\t\t// Customer categories association\n\t\t\t\t\t$categories = GETPOST('custcats', 'array');\n\t\t\t\t\t$result = $object->setCategories($categories, 'customer');\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Supplier categories association\n\t\t\t\t\t$categories = GETPOST('suppcats', 'array');\n\t\t\t\t\t$result = $object->setCategories($categories, 'supplier');\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Logo/Photo save\n\t\t\t\t$dir     = $conf->societe->multidir_output[$object->entity].\"/\".$object->id.\"/logos\";\n\t\t\t\t$file_OK = is_uploaded_file($_FILES['photo']['tmp_name']);\n\t\t\t\tif (GETPOST('deletephoto') && $object->logo) {\n\t\t\t\t\t$fileimg = $dir.'/'.$object->logo;\n\t\t\t\t\t$dirthumbs = $dir.'/thumbs';\n\t\t\t\t\tdol_delete_file($fileimg);\n\t\t\t\t\tdol_delete_dir_recursive($dirthumbs);\n\t\t\t\t}\n\t\t\t\tif ($file_OK) {\n\t\t\t\t\tif (image_format_supported($_FILES['photo']['name']) > 0) {\n\t\t\t\t\t\tdol_mkdir($dir);\n\n\t\t\t\t\t\tif (@is_dir($dir)) {\n\t\t\t\t\t\t\t$newfile = $dir.'/'.dol_sanitizeFileName($_FILES['photo']['name']);\n\t\t\t\t\t\t\t$result = dol_move_uploaded_file($_FILES['photo']['tmp_name'], $newfile, 1);\n\n\t\t\t\t\t\t\tif (!$result > 0) {\n\t\t\t\t\t\t\t\t$errors[] = \"ErrorFailedToSaveFile\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Create thumbs\n\t\t\t\t\t\t\t\t$object->addThumbs($newfile);\n\n\t\t\t\t\t\t\t\t// Index file in database\n\t\t\t\t\t\t\t\tif (!empty($conf->global->THIRDPARTY_LOGO_ALLOW_EXTERNAL_DOWNLOAD)) {\n\t\t\t\t\t\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\t\t\t\t\t\t\t\t\t// the dir dirname($newfile) is directory of logo, so we should have only one file at once into index, so we delete indexes for the dir\n\t\t\t\t\t\t\t\t\tdeleteFilesIntoDatabaseIndex(dirname($newfile), '', '');\n\t\t\t\t\t\t\t\t\t// now we index the uploaded logo file\n\t\t\t\t\t\t\t\t\taddFileIntoDatabaseIndex(dirname($newfile), basename($newfile), '', 'uploaded', 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$errors[] = \"ErrorBadImageFormat\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tswitch ($_FILES['photo']['error']) {\n\t\t\t\t\t\tcase 1: //uploaded file exceeds the upload_max_filesize directive in php.ini\n\t\t\t\t\t\tcase 2: //uploaded file exceeds the MAX_FILE_SIZE directive that was specified in the html form\n\t\t\t\t\t\t\t$errors[] = \"ErrorFileSizeTooLarge\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3: //uploaded file was only partially uploaded\n\t\t\t\t\t\t\t$errors[] = \"ErrorFilePartiallyUploaded\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Gestion du logo de la soci\u00e9t\u00e9\n\n\n\t\t\t\t// Update linked member\n\t\t\t\tif (!$error && $object->fk_soc > 0) {\n\t\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"adherent\";\n\t\t\t\t\t$sql .= \" SET fk_soc = NULL WHERE fk_soc = \".((int) $socid);\n\t\t\t\t\tif (!$object->db->query($sql)) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t$object->error .= $object->db->lasterror();\n\t\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error && !count($errors)) {\n\t\t\t\t\tif (!empty($backtopage)) {\n\t\t\t\t\t\theader(\"Location: \".$backtopage);\n\t\t\t\t\t\texit;\n\t\t\t\t\t} else {\n\t\t\t\t\t\theader(\"Location: \".$_SERVER[\"PHP_SELF\"].\"?socid=\".$socid);\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$object->id = $socid;\n\t\t\t\t\t$action = \"edit\";\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$action = ($action == 'add' ? 'create' : 'edit');\n\t\t}\n\t}\n\n\t// Delete third party\n\tif ($action == 'confirm_delete' && $confirm == 'yes' && $user->rights->societe->supprimer) {\n\t\t$object->fetch($socid);\n\t\t$object->oldcopy = clone $object;\n\t\t$result = $object->delete($socid, $user);\n\n\t\tif ($result > 0) {\n\t\t\theader(\"Location: \".DOL_URL_ROOT.\"/societe/list.php?restore_lastsearch_values=1&delsoc=\".urlencode($object->name));\n\t\t\texit;\n\t\t} else {\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t$error++;\n\t\t\t$action = '';\n\t\t}\n\t}\n\n\t// Set third-party type\n\tif ($action == 'set_thirdpartytype' && $user->rights->societe->creer) {\n\t\t$object->fetch($socid);\n\t\t$result = $object->setThirdpartyType(GETPOST('typent_id', 'int'));\n\t}\n\n\t// Set incoterm\n\tif ($action == 'set_incoterms' && $user->rights->societe->creer && !empty($conf->incoterm->enabled)) {\n\t\t$object->fetch($socid);\n\t\t$result = $object->setIncoterms(GETPOST('incoterm_id', 'int'), GETPOST('location_incoterms', 'alpha'));\n\t}\n\n\t// Set parent company\n\tif ($action == 'set_thirdparty' && $user->rights->societe->creer) {\n\t\t$object->fetch($socid);\n\t\t$result = $object->setParent(GETPOST('parent_id', 'int'));\n\t}\n\n\t// Set sales representatives\n\tif ($action == 'set_salesrepresentatives' && $user->rights->societe->creer) {\n\t\t$object->fetch($socid);\n\t\t$result = $object->setSalesRep(GETPOST('commercial', 'array'));\n\t}\n\n\t// warehouse\n\tif ($action == 'setwarehouse' && $user->rights->societe->creer) {\n\t\t$result = $object->setWarehouse(GETPOST('fk_warehouse', 'int'));\n\t}\n\n\t$id = $socid;\n\t$object->fetch($socid);\n\n\t// Selection of new fields\n\tif (!empty($conf->global->MAIN_DUPLICATE_CONTACTS_TAB_ON_MAIN_CARD) && (empty($conf->global->SOCIETE_DISABLE_CONTACTS) || !empty($conf->global->SOCIETE_ADDRESSES_MANAGEMENT))) {\n\t\tinclude DOL_DOCUMENT_ROOT.'/core/actions_changeselectedfields.inc.php';\n\t}\n\n\t// Actions to send emails\n\t$triggersendname = 'COMPANY_SENTBYMAIL';\n\t$paramname = 'socid';\n\t$mode = 'emailfromthirdparty';\n\t$trackid = 'thi'.$object->id;\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_sendmails.inc.php';\n\n\t// Actions to build doc\n\t$id = $socid;\n\t$upload_dir = $conf->societe->dir_output;\n\t$permissiontoadd = $user->rights->societe->creer;\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_builddoc.inc.php';\n}\n\n\n/*\n *  View\n */\n\n$form = new Form($db);\n$formfile = new FormFile($db);\n$formadmin = new FormAdmin($db);\n$formcompany = new FormCompany($db);\nif (!empty($conf->accounting->enabled)) {\n\t$formaccounting = new FormAccounting($db);\n}\n\nif ($socid > 0 && empty($object->id)) {\n\t$result = $object->fetch($socid);\n\tif ($result <= 0) {\n\t\tdol_print_error('', $object->error);\n\t}\n}\n\n$title = $langs->trans(\"ThirdParty\");\nif (!empty($conf->global->MAIN_HTML_TITLE) && preg_match('/thirdpartynameonly/', $conf->global->MAIN_HTML_TITLE) && $object->name) {\n\t$title = $object->name.\" - \".$langs->trans('Card');\n}\n\n$help_url = 'EN:Module_Third_Parties|FR:Module_Tiers|ES:Empresas|DE:Modul_Gesch\u00e4ftspartner';\n\nllxHeader('', $title, $help_url);\n\n$countrynotdefined = $langs->trans(\"ErrorSetACountryFirst\").' ('.$langs->trans(\"SeeAbove\").')';\n\nif (is_object($objcanvas) && $objcanvas->displayCanvasExists($action)) {\n\t// -----------------------------------------\n\t// When used with CANVAS\n\t// -----------------------------------------\n\t$objcanvas->assign_values($action, $object->id, $object->ref); // Set value for templates\n\t$objcanvas->display_canvas($action); // Show template\n} else {\n\t// -----------------------------------------\n\t// When used in standard mode\n\t// -----------------------------------------\n\tif ($action == 'create') {\n\t\t/*\n\t\t *  Creation\n\t\t */\n\t\t$private = GETPOST(\"private\", \"int\");\n\t\tif (!empty($conf->global->THIRDPARTY_DEFAULT_CREATE_CONTACT) && !GETPOSTISSET('private')) {\n\t\t\t$private = 1;\n\t\t}\n\t\tif (empty($private)) {\n\t\t\t$private = 0;\n\t\t}\n\n\t\t// Load object modCodeTiers\n\t\t$module = (!empty($conf->global->SOCIETE_CODECLIENT_ADDON) ? $conf->global->SOCIETE_CODECLIENT_ADDON : 'mod_codeclient_leopard');\n\t\tif (substr($module, 0, 15) == 'mod_codeclient_' && substr($module, -3) == 'php') {\n\t\t\t$module = substr($module, 0, dol_strlen($module) - 4);\n\t\t}\n\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\tif ($res) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t$modCodeClient = new $module;\n\t\t// Load object modCodeFournisseur\n\t\t$module = (!empty($conf->global->SOCIETE_CODECLIENT_ADDON) ? $conf->global->SOCIETE_CODECLIENT_ADDON : 'mod_codeclient_leopard');\n\t\tif (substr($module, 0, 15) == 'mod_codeclient_' && substr($module, -3) == 'php') {\n\t\t\t$module = substr($module, 0, dol_strlen($module) - 4);\n\t\t}\n\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\tif ($res) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t$modCodeFournisseur = new $module;\n\n\t\t// Define if customer/prospect or supplier status is set or not\n\t\tif (GETPOST(\"type\") != 'f') {\n\t\t\t$object->client = -1;\n\t\t\tif (!empty($conf->global->THIRDPARTY_CUSTOMERPROSPECT_BY_DEFAULT)) {\n\t\t\t\t$object->client = 3;\n\t\t\t}\n\t\t}\n\t\t// Prospect / Customer\n\t\tif (GETPOST(\"type\") == 'c') {\n\t\t\tif (!empty($conf->global->THIRDPARTY_CUSTOMERTYPE_BY_DEFAULT)) {\n\t\t\t\t$object->client = $conf->global->THIRDPARTY_CUSTOMERTYPE_BY_DEFAULT;\n\t\t\t} else {\n\t\t\t\t$object->client = 3;\n\t\t\t}\n\t\t}\n\t\tif (GETPOST(\"type\") == 'p') {\n\t\t\t$object->client = 2;\n\t\t}\n\t\tif (((!empty($conf->fournisseur->enabled) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || !empty($conf->supplier_order->enabled) || !empty($conf->supplier_invoice->enabled)) && (GETPOST(\"type\") == 'f' || (GETPOST(\"type\") == '' && !empty($conf->global->THIRDPARTY_SUPPLIER_BY_DEFAULT)))) {\n\t\t\t$object->fournisseur = 1;\n\t\t}\n\n\t\t$object->name = GETPOST('name', 'alphanohtml');\n\t\t$object->name_alias = GETPOST('name_alias', 'alphanohtml');\n\t\t$object->firstname = GETPOST('firstname', 'alphanohtml');\n\t\t$object->particulier\t\t= $private;\n\t\t$object->prefix_comm\t\t= GETPOST('prefix_comm', 'alphanohtml');\n\t\t$object->client = GETPOST('client', 'int') ?GETPOST('client', 'int') : $object->client;\n\n\t\tif (empty($duplicate_code_error)) {\n\t\t\t$object->code_client\t\t= GETPOST('customer_code', 'alpha');\n\t\t\t$object->fournisseur\t\t= GETPOST('fournisseur') ? GETPOST('fournisseur', 'int') : $object->fournisseur;\n\t\t\t$object->code_fournisseur = GETPOST('supplier_code', 'alpha');\n\t\t} else {\n\t\t\tsetEventMessages($langs->trans('NewCustomerSupplierCodeProposed'), '', 'warnings');\n\t\t}\n\n\t\t$object->address = GETPOST('address', 'alphanohtml');\n\t\t$object->zip = GETPOST('zipcode', 'alphanohtml');\n\t\t$object->town = GETPOST('town', 'alphanohtml');\n\t\t$object->state_id = GETPOST('state_id', 'int');\n\t\t//$object->skype\t\t\t\t= GETPOST('skype', 'alpha');\n\t\t//$object->twitter\t\t\t= GETPOST('twitter', 'alpha');\n\t\t//$object->facebook\t\t\t= GETPOST('facebook', 'alpha');\n\t\t//$object->linkedin\t\t\t= GETPOST('linkedin', 'alpha');\n\t\t$object->socialnetworks = array();\n\t\tif (!empty($conf->socialnetworks->enabled)) {\n\t\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\t\tif (GETPOSTISSET($key) && GETPOST($key, 'alphanohtml') != '') {\n\t\t\t\t\t$object->socialnetworks[$key] = GETPOST($key, 'alphanohtml');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$object->phone\t\t\t\t= GETPOST('phone', 'alpha');\n\t\t$object->fax\t\t\t\t= GETPOST('fax', 'alpha');\n\t\t$object->email\t\t\t\t= GETPOST('email', 'custom', 0, FILTER_SANITIZE_EMAIL);\n\t\t$object->url\t\t\t\t= GETPOST('url', 'custom', 0, FILTER_SANITIZE_URL);\n\t\t$object->capital\t\t\t= GETPOST('capital', 'alphanohtml');\n\t\t$object->barcode\t\t\t= GETPOST('barcode', 'alphanohtml');\n\t\t$object->idprof1\t\t\t= GETPOST('idprof1', 'alphanohtml');\n\t\t$object->idprof2\t\t\t= GETPOST('idprof2', 'alphanohtml');\n\t\t$object->idprof3\t\t\t= GETPOST('idprof3', 'alphanohtml');\n\t\t$object->idprof4\t\t\t= GETPOST('idprof4', 'alphanohtml');\n\t\t$object->idprof5\t\t\t= GETPOST('idprof5', 'alphanohtml');\n\t\t$object->idprof6\t\t\t= GETPOST('idprof6', 'alphanohtml');\n\t\t$object->typent_id = GETPOST('typent_id', 'int');\n\t\t$object->effectif_id\t\t= GETPOST('effectif_id', 'int');\n\t\t$object->civility_id\t\t= GETPOST('civility_id', 'alpha');\n\n\t\t$object->tva_assuj = GETPOST('assujtva_value', 'int');\n\t\t$object->status = GETPOST('status', 'int');\n\n\t\t//Local Taxes\n\t\t$object->localtax1_assuj\t= GETPOST('localtax1assuj_value', 'int');\n\t\t$object->localtax2_assuj\t= GETPOST('localtax2assuj_value', 'int');\n\n\t\t$object->localtax1_value\t= GETPOST('lt1', 'int');\n\t\t$object->localtax2_value\t= GETPOST('lt2', 'int');\n\n\t\t$object->tva_intra = GETPOST('tva_intra', 'alphanohtml');\n\n\t\t$object->commercial_id = GETPOST('commercial_id', 'int');\n\t\t$object->default_lang = GETPOST('default_lang');\n\n\t\tif (GETPOSTISSET('accountancy_code_sell')) {\n\t\t\t$object->accountancy_code_sell  = GETPOST('accountancy_code_sell', 'alpha');\n\t\t}\n\t\tif (GETPOSTISSET('accountancy_code_buy')) {\n\t\t\t$object->accountancy_code_buy   = GETPOST('accountancy_code_buy', 'alpha');\n\t\t}\n\n\t\t$object->logo = (isset($_FILES['photo']) ?dol_sanitizeFileName($_FILES['photo']['name']) : '');\n\n\t\t// Gestion du logo de la soci\u00e9t\u00e9\n\t\t$dir     = $conf->societe->multidir_output[$conf->entity].\"/\".$object->id.\"/logos\";\n\t\t$file_OK = (isset($_FILES['photo']) ?is_uploaded_file($_FILES['photo']['tmp_name']) : false);\n\t\tif ($file_OK) {\n\t\t\tif (image_format_supported($_FILES['photo']['name'])) {\n\t\t\t\tdol_mkdir($dir);\n\n\t\t\t\tif (@is_dir($dir)) {\n\t\t\t\t\t$newfile = $dir.'/'.dol_sanitizeFileName($_FILES['photo']['name']);\n\t\t\t\t\t$result = dol_move_uploaded_file($_FILES['photo']['tmp_name'], $newfile, 1);\n\n\t\t\t\t\tif (!$result > 0) {\n\t\t\t\t\t\t$errors[] = \"ErrorFailedToSaveFile\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Create thumbs\n\t\t\t\t\t\t$object->addThumbs($newfile);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// We set country_id, country_code and country for the selected country\n\t\t$object->country_id = GETPOST('country_id') ?GETPOST('country_id') : $mysoc->country_id;\n\t\tif ($object->country_id) {\n\t\t\t$tmparray = getCountry($object->country_id, 'all');\n\t\t\t$object->country_code = $tmparray['code'];\n\t\t\t$object->country = $tmparray['label'];\n\t\t}\n\t\t$object->forme_juridique_code = GETPOST('forme_juridique_code');\n\t\t/* Show create form */\n\n\t\t$linkback = \"\";\n\t\tprint load_fiche_titre($langs->trans(\"NewThirdParty\"), $linkback, 'building');\n\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\tif (!empty($conf->global->THIRDPARTY_SUGGEST_ALSO_ADDRESS_CREATION)) {\n\t\t\t\tprint \"\\n\".'<script type=\"text/javascript\">';\n\t\t\t\tprint '$(document).ready(function () {\n\t\t\t\t\t\tid_te_private=8;\n                        id_ef15=1;\n                        is_private=' . $private.';\n\t\t\t\t\t\tif (is_private) {\n\t\t\t\t\t\t\t$(\".individualline\").show();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$(\".individualline\").hide();\n\t\t\t\t\t\t}\n                        $(\"#radiocompany\").click(function() {\n                        \t$(\".individualline\").hide();\n                        \t$(\"#typent_id\").val(0);\n                        \t$(\"#typent_id\").change();\n                        \t$(\"#effectif_id\").val(0);\n                        \t$(\"#effectif_id\").change();\n                        \t$(\"#TypeName\").html(document.formsoc.ThirdPartyName.value);\n                        \tdocument.formsoc.private.value=0;\n                        });\n                        $(\"#radioprivate\").click(function() {\n                        \t$(\".individualline\").show();\n                        \t$(\"#typent_id\").val(id_te_private);\n                        \t$(\"#typent_id\").change();\n                        \t$(\"#effectif_id\").val(id_ef15);\n                        \t$(\"#effectif_id\").change();\n                        \t$(\"#TypeName\").html(document.formsoc.LastName.value);\n                        \tdocument.formsoc.private.value=1;\n                        });\n\n\t\t\t\t\t\tinit_customer_categ();\n\t\t\t  \t\t\t$(\"#customerprospect\").change(function() {\n\t\t\t\t\t\t\t\tinit_customer_categ();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfunction init_customer_categ() {\n\t\t\t\t\t\t\t\tconsole.log(\"is customer or prospect = \"+jQuery(\"#customerprospect\").val());\n\t\t\t\t\t\t\t\tif (jQuery(\"#customerprospect\").val() == 0 && (jQuery(\"#fournisseur\").val() == 0 || ' . (empty($conf->global->THIRDPARTY_CAN_HAVE_CATEGORY_EVEN_IF_NOT_CUSTOMER_PROSPECT_SUPPLIER) ? '1' : '0').'))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tjQuery(\".visibleifcustomer\").hide();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tjQuery(\".visibleifcustomer\").show();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinit_supplier_categ();\n\t\t\t       \t\t$(\"#fournisseur\").change(function() {\n\t\t\t\t\t\t\tinit_supplier_categ();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfunction init_supplier_categ() {\n\t\t\t\t\t\t\t\tconsole.log(\"is supplier = \"+jQuery(\"#fournisseur\").val());\n\t\t\t\t\t\t\t\tif (jQuery(\"#fournisseur\").val() == 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tjQuery(\".visibleifsupplier\").hide();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tjQuery(\".visibleifsupplier\").show();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n                        $(\"#selectcountry_id\").change(function() {\n                        \tdocument.formsoc.action.value=\"create\";\n                        \tdocument.formsoc.submit();\n                        });';\n\t\t\t\tif ($conf->global->MAILING_CONTACT_DEFAULT_BULK_STATUS==-1) {\n\t\t\t\t\tprint '\n\t\t\t\t\t\tfunction init_check_no_email(input) {\n\t\t\t\t\t\t\tif (input.val()!=\"\") {\n\t\t\t\t\t\t\t\t$(\".noemail\").addClass(\"fieldrequired\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(\".noemail\").removeClass(\"fieldrequired\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$(\"#email\").keyup(function() {\n\t\t\t\t\t\t\tinit_check_no_email($(this));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tinit_check_no_email($(\"#email\"));';\n\t\t\t\t}\n\t\t\t\tprint '});';\n\t\t\t\tprint '</script>'.\"\\n\";\n\n\t\t\t\tprint '<div id=\"selectthirdpartytype\">';\n\t\t\t\tprint '<div class=\"hideonsmartphone float\">';\n\t\t\t\tprint $langs->trans(\"ThirdPartyType\").': &nbsp; &nbsp; ';\n\t\t\t\tprint '</div>';\n\t\t\t\tprint '<label for=\"radiocompany\" class=\"radiocompany\">';\n\t\t\t\tprint '<input type=\"radio\" id=\"radiocompany\" class=\"flat\" name=\"private\"  value=\"0\"'.($private ? '' : ' checked').'>';\n\t\t\t\tprint '&nbsp;';\n\t\t\t\tprint $langs->trans(\"CreateThirdPartyOnly\");\n\t\t\t\tprint '</label>';\n\t\t\t\tprint ' &nbsp; &nbsp; ';\n\t\t\t\tprint '<label for=\"radioprivate\" class=\"radioprivate\">';\n\t\t\t\t$text = '<input type=\"radio\" id=\"radioprivate\" class=\"flat\" name=\"private\" value=\"1\"'.($private ? ' checked' : '').'>';\n\t\t\t\t$text .= '&nbsp;';\n\t\t\t\t$text .= $langs->trans(\"CreateThirdPartyAndContact\");\n\t\t\t\t$htmltext = $langs->trans(\"ToCreateContactWithSameName\");\n\t\t\t\tprint $form->textwithpicto($text, $htmltext, 1, 'help', '', 0, 3);\n\t\t\t\tprint '</label>';\n\t\t\t\tprint '</div>';\n\t\t\t\tprint \"<br>\\n\";\n\t\t\t} else {\n\t\t\t\tprint '<script type=\"text/javascript\">';\n\t\t\t\tprint '$(document).ready(function () {\n                        $(\"#selectcountry_id\").change(function() {\n                        \tdocument.formsoc.action.value=\"create\";\n                        \tdocument.formsoc.submit();\n                        });\n                     });';\n\t\t\t\tprint '</script>'.\"\\n\";\n\t\t\t}\n\t\t}\n\n\t\tdol_htmloutput_mesg(is_numeric($error) ? '' : $error, $errors, 'error');\n\n\t\tprint '<form enctype=\"multipart/form-data\" action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"post\" name=\"formsoc\" autocomplete=\"off\">'; // Chrome ignor autocomplete\n\n\t\tprint '<input type=\"hidden\" name=\"action\" value=\"add\">';\n\t\tprint '<input type=\"hidden\" name=\"backtopage\" value=\"'.$backtopage.'\">';\n\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\tprint '<input type=\"hidden\" name=\"private\" value='.$object->particulier.'>';\n\t\tprint '<input type=\"hidden\" name=\"type\" value='.GETPOST(\"type\", 'alpha').'>';\n\t\tprint '<input type=\"hidden\" name=\"LastName\" value=\"'.$langs->trans('ThirdPartyName').' / '.$langs->trans('LastName').'\">';\n\t\tprint '<input type=\"hidden\" name=\"ThirdPartyName\" value=\"'.$langs->trans('ThirdPartyName').'\">';\n\t\tif ($modCodeClient->code_auto || $modCodeFournisseur->code_auto) {\n\t\t\tprint '<input type=\"hidden\" name=\"code_auto\" value=\"1\">';\n\t\t}\n\n\t\tprint dol_get_fiche_head(null, 'card', '', 0, '');\n\n\t\tprint '<table class=\"border centpercent\">';\n\n\t\t// Name, firstname\n\t\tprint '<tr class=\"tr-field-thirdparty-name\"><td class=\"titlefieldcreate\">';\n\t\tif ($object->particulier || $private) {\n\t\t\tprint '<span id=\"TypeName\" class=\"fieldrequired\">'.$langs->trans('ThirdPartyName').' / '.$langs->trans('LastName', 'name').'</span>';\n\t\t} else {\n\t\t\tprint '<span id=\"TypeName\" class=\"fieldrequired\">'.$form->editfieldkey('ThirdPartyName', 'name', '', $object, 0).'</span>';\n\t\t}\n\t\tprint '</td><td'.(empty($conf->global->SOCIETE_USEPREFIX) ? ' colspan=\"3\"' : '').'>';\n\t\tprint '<input type=\"text\" class=\"minwidth300\" maxlength=\"128\" name=\"name\" id=\"name\" value=\"'.dol_escape_htmltag($object->name).'\" autofocus=\"autofocus\">';\n\t\tprint $form->widgetForTranslation(\"name\", $object, $permissiontoadd, 'string', 'alpahnohtml', 'minwidth300');\n\t\tprint '</td>';\n\t\tif (!empty($conf->global->SOCIETE_USEPREFIX)) {  // Old not used prefix field\n\t\t\tprint '<td>'.$langs->trans('Prefix').'</td><td><input type=\"text\" size=\"5\" maxlength=\"5\" name=\"prefix_comm\" value=\"'.dol_escape_htmltag($object->prefix_comm).'\"></td>';\n\t\t}\n\t\tprint '</tr>';\n\n\t\t// If javascript on, we show option individual\n\t\tif ($conf->use_javascript_ajax) {\n\t\t\tif (!empty($conf->global->THIRDPARTY_SUGGEST_ALSO_ADDRESS_CREATION)) {\n\t\t\t\t// Firstname\n\t\t\t\tprint '<tr class=\"individualline\"><td>'.$form->editfieldkey('FirstName', 'firstname', '', $object, 0).'</td>';\n\t\t\t\tprint '<td colspan=\"3\"><input type=\"text\" class=\"minwidth300\" maxlength=\"128\" name=\"firstname\" id=\"firstname\" value=\"'.dol_escape_htmltag($object->firstname).'\"></td>';\n\t\t\t\tprint '</tr>';\n\n\t\t\t\t// Title\n\t\t\t\tprint '<tr class=\"individualline\"><td>'.$form->editfieldkey('UserTitle', 'civility_id', '', $object, 0).'</td><td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t\t\tprint $formcompany->select_civility($object->civility_id, 'civility_id', 'maxwidth100').'</td>';\n\t\t\t\tprint '</tr>';\n\t\t\t}\n\t\t}\n\n\t\t// Alias names (commercial, trademark or alias names)\n\t\tprint '<tr id=\"name_alias\"><td><label for=\"name_alias_input\">'.$langs->trans('AliasNames').'</label></td>';\n\t\tprint '<td colspan=\"3\"><input type=\"text\" class=\"minwidth300\" name=\"name_alias\" id=\"name_alias_input\" value=\"'.dol_escape_htmltag($object->name_alias).'\"></td></tr>';\n\n\t\t// Prospect/Customer\n\t\tprint '<tr><td class=\"titlefieldcreate\">'.$form->editfieldkey('ProspectCustomer', 'customerprospect', '', $object, 0, 'string', '', 1).'</td>';\n\t\tprint '<td class=\"maxwidthonsmartphone\">';\n\t\t$selected = (GETPOSTISSET('client') ?GETPOST('client', 'int') : $object->client);\n\t\tprint $formcompany->selectProspectCustomerType($selected);\n\t\tprint '</td>';\n\n\t\tif ($conf->browser->layout == 'phone') {\n\t\t\tprint '</tr><tr>';\n\t\t}\n\n\t\tprint '<td>'.$form->editfieldkey('CustomerCode', 'customer_code', '', $object, 0).'</td><td>';\n\t\tprint '<table class=\"nobordernopadding\"><tr><td>';\n\t\t$tmpcode = $object->code_client;\n\t\tif (empty($tmpcode) && !empty($modCodeClient->code_auto)) {\n\t\t\t$tmpcode = $modCodeClient->getNextValue($object, 0);\n\t\t}\n\t\tprint '<input type=\"text\" name=\"customer_code\" id=\"customer_code\" class=\"maxwidthonsmartphone\" value=\"'.dol_escape_htmltag($tmpcode).'\" maxlength=\"24\">';\n\t\tprint '</td><td>';\n\t\t$s = $modCodeClient->getToolTip($langs, $object, 0);\n\t\tprint $form->textwithpicto('', $s, 1);\n\t\tprint '</td></tr></table>';\n\t\tprint '</td></tr>';\n\n\t\tif ((!empty($conf->fournisseur->enabled) && !empty($user->rights->fournisseur->lire) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || (!empty($conf->supplier_order->enabled) && !empty($user->rights->supplier_order->lire)) || (!empty($conf->supplier_invoice->enabled) && !empty($user->rights->supplier_invoice->lire))\n\t\t\t|| (!empty($conf->supplier_proposal->enabled) && !empty($user->rights->supplier_proposal->lire))) {\n\t\t\t// Supplier\n\t\t\tprint '<tr>';\n\t\t\tprint '<td>'.$form->editfieldkey('Vendor', 'fournisseur', '', $object, 0, 'string', '', 1).'</td><td>';\n\t\t\t$default = -1;\n\t\t\tif (!empty($conf->global->THIRDPARTY_SUPPLIER_BY_DEFAULT)) {\n\t\t\t\t$default = 1;\n\t\t\t}\n\t\t\tprint $form->selectyesno(\"fournisseur\", (GETPOST('fournisseur', 'int') != '' ? GETPOST('fournisseur', 'int') : (GETPOST(\"type\", 'alpha') == '' ? $default : $object->fournisseur)), 1, 0, (GETPOST(\"type\", 'alpha') == '' ? 1 : 0), 1);\n\t\t\tprint '</td>';\n\n\n\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\tprint '</tr><tr>';\n\t\t\t}\n\n\t\t\tprint '<td>';\n\t\t\tif ((!empty($conf->fournisseur->enabled) && !empty($user->rights->fournisseur->lire) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || (!empty($conf->supplier_order->enabled) && !empty($user->rights->supplier_order->lire)) || (!empty($conf->supplier_invoice->enabled) && !empty($user->rights->supplier_invoice->lire))) {\n\t\t\t\tprint $form->editfieldkey('SupplierCode', 'supplier_code', '', $object, 0);\n\t\t\t}\n\t\t\tprint '</td><td>';\n\t\t\tif ((!empty($conf->fournisseur->enabled) && !empty($user->rights->fournisseur->lire) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || (!empty($conf->supplier_order->enabled) && !empty($user->rights->supplier_order->lire)) || (!empty($conf->supplier_invoice->enabled) && !empty($user->rights->supplier_invoice->lire))) {\n\t\t\t\tprint '<table class=\"nobordernopadding\"><tr><td>';\n\t\t\t\t$tmpcode = $object->code_fournisseur;\n\t\t\t\tif (empty($tmpcode) && !empty($modCodeFournisseur->code_auto)) {\n\t\t\t\t\t$tmpcode = $modCodeFournisseur->getNextValue($object, 1);\n\t\t\t\t}\n\t\t\t\tprint '<input type=\"text\" name=\"supplier_code\" id=\"supplier_code\" class=\"maxwidthonsmartphone\" value=\"'.dol_escape_htmltag($tmpcode).'\" maxlength=\"24\">';\n\t\t\t\tprint '</td><td>';\n\t\t\t\t$s = $modCodeFournisseur->getToolTip($langs, $object, 1);\n\t\t\t\tprint $form->textwithpicto('', $s, 1);\n\t\t\t\tprint '</td></tr></table>';\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Status\n\t\tprint '<tr><td>'.$form->editfieldkey('Status', 'status', '', $object, 0).'</td><td colspan=\"3\">';\n\t\tprint $form->selectarray('status', array('0'=>$langs->trans('ActivityCeased'), '1'=>$langs->trans('InActivity')), 1, 0, 0, 0, '', 0, 0, 0, '', 'minwidth100', 1);\n\t\tprint '</td></tr>';\n\n\t\t// Barcode\n\t\tif (!empty($conf->barcode->enabled)) {\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Gencod', 'barcode', '', $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\">';\n\t\t\tprint img_picto('', 'barcode');\n\t\t\tprint '<input type=\"text\" name=\"barcode\" id=\"barcode\" value=\"'.dol_escape_htmltag($object->barcode).'\">';\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Address\n\t\tprint '<tr><td class=\"tdtop\">';\n\t\tprint $form->editfieldkey('Address', 'address', '', $object, 0);\n\t\tprint '</td>';\n\t\tprint '<td colspan=\"3\">';\n\t\tprint '<textarea name=\"address\" id=\"address\" class=\"quatrevingtpercent\" rows=\"'.ROWS_2.'\" wrap=\"soft\">';\n\t\tprint dol_escape_htmltag($object->address, 0, 1);\n\t\tprint '</textarea>';\n\t\tprint $form->widgetForTranslation(\"address\", $object, $permissiontoadd, 'textarea', 'alphanohtml', 'quatrevingtpercent');\n\t\tprint '</td></tr>';\n\n\t\t// Zip / Town\n\t\tprint '<tr><td>'.$form->editfieldkey('Zip', 'zipcode', '', $object, 0).'</td><td>';\n\t\tprint $formcompany->select_ziptown($object->zip, 'zipcode', array('town', 'selectcountry_id', 'state_id'), 0, 0, '', 'maxwidth100');\n\t\tprint '</td>';\n\t\tif ($conf->browser->layout == 'phone') {\n\t\t\tprint '</tr><tr>';\n\t\t}\n\t\tprint '<td class=\"tdtop\">'.$form->editfieldkey('Town', 'town', '', $object, 0).'</td><td>';\n\t\tprint $formcompany->select_ziptown($object->town, 'town', array('zipcode', 'selectcountry_id', 'state_id'), 0, 0, '', 'maxwidth100 quatrevingtpercent');\n\t\tprint $form->widgetForTranslation(\"town\", $object, $permissiontoadd, 'string', 'alphanohtml', 'maxwidth100 quatrevingtpercent');\n\t\tprint '</td></tr>';\n\n\t\t// Country\n\t\tprint '<tr><td>'.$form->editfieldkey('Country', 'selectcountry_id', '', $object, 0).'</td><td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\tprint img_picto('', 'country', 'class=\"paddingrightonly\"');\n\t\tprint $form->select_country((GETPOSTISSET('country_id') ? GETPOST('country_id') : $object->country_id), 'country_id', '', 0, 'minwidth300 maxwidth500 widthcentpercentminusx');\n\t\tif ($user->admin) {\n\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\t\tprint '</td></tr>';\n\n\t\t// State\n\t\tif (empty($conf->global->SOCIETE_DISABLE_STATE)) {\n\t\t\tif (!empty($conf->global->MAIN_SHOW_REGION_IN_STATE_SELECT) && ($conf->global->MAIN_SHOW_REGION_IN_STATE_SELECT == 1 || $conf->global->MAIN_SHOW_REGION_IN_STATE_SELECT == 2)) {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey('Region-State', 'state_id', '', $object, 0).'</td><td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t\t} else {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey('State', 'state_id', '', $object, 0).'</td><td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t\t}\n\n\t\t\tif ($object->country_id) {\n\t\t\t\tprint img_picto('', 'state', 'class=\"pictofixedwidth\"');\n\t\t\t\tprint $formcompany->select_state($object->state_id, $object->country_code);\n\t\t\t} else {\n\t\t\t\tprint $countrynotdefined;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Phone / Fax\n\t\tprint '<tr><td>'.$form->editfieldkey('Phone', 'phone', '', $object, 0).'</td>';\n\t\tprint '<td'.($conf->browser->layout == 'phone' ? ' colspan=\"3\"' : '').'>'.img_picto('', 'object_phoning').' <input type=\"text\" name=\"phone\" id=\"phone\" class=\"maxwidth200 widthcentpercentminusx\" value=\"'.(GETPOSTISSET('phone') ?GETPOST('phone', 'alpha') : $object->phone).'\"></td>';\n\t\tif ($conf->browser->layout == 'phone') {\n\t\t\tprint '</tr><tr>';\n\t\t}\n\t\tprint '<td>'.$form->editfieldkey('Fax', 'fax', '', $object, 0).'</td>';\n\t\tprint '<td'.($conf->browser->layout == 'phone' ? ' colspan=\"3\"' : '').'>'.img_picto('', 'object_phoning_fax').' <input type=\"text\" name=\"fax\" id=\"fax\" class=\"maxwidth200 widthcentpercentminusx\" value=\"'.(GETPOSTISSET('fax') ?GETPOST('fax', 'alpha') : $object->fax).'\"></td></tr>';\n\n\t\t// Email / Web\n\t\tprint '<tr><td>'.$form->editfieldkey('EMail', 'email', '', $object, 0, 'string', '', empty($conf->global->SOCIETE_EMAIL_MANDATORY) ? '' : $conf->global->SOCIETE_EMAIL_MANDATORY).'</td>';\n\t\tprint '<td'.(($conf->browser->layout == 'phone') || empty($conf->mailing->enabled) ? ' colspan=\"3\"' : '').'>'.img_picto('', 'object_email').' <input type=\"text\" class=\"maxwidth200 widthcentpercentminusx\" name=\"email\" id=\"email\" value=\"'.$object->email.'\"></td>';\n\t\tif (!empty($conf->mailing->enabled) && !empty($conf->global->THIRDPARTY_SUGGEST_ALSO_ADDRESS_CREATION)) {\n\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\tprint '</tr><tr>';\n\t\t\t}\n\t\t\tprint '<td class=\"individualline noemail\">'.$form->editfieldkey($langs->trans('No_Email') .' ('.$langs->trans('Contact').')', 'contact_no_email', '', $object, 0).'</td>';\n\t\t\tprint '<td class=\"individualline\" '.(($conf->browser->layout == 'phone') || empty($conf->mailing->enabled) ? ' colspan=\"3\"' : '').'>'.$form->selectyesno('contact_no_email', (GETPOSTISSET(\"contact_no_email\") ? GETPOST(\"contact_no_email\", 'alpha') : (empty($object->no_email) ? 0 : 1)), 1, false, 1).'</td>';\n\t\t}\n\t\tprint '</tr>';\n\t\tprint '<tr><td>'.$form->editfieldkey('Web', 'url', '', $object, 0).'</td>';\n\t\tprint '<td colspan=\"3\">'.img_picto('', 'globe').' <input type=\"text\" class=\"maxwidth500 widthcentpercentminusx\" name=\"url\" id=\"url\" value=\"'.$object->url.'\"></td></tr>';\n\n\t\tif (!empty($conf->socialnetworks->enabled)) {\n\t\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\t\tif ($value['active']) {\n\t\t\t\t\tprint '<tr>';\n\t\t\t\t\tprint '<td><label for=\"'.$value['label'].'\">'.$form->editfieldkey($value['label'], $key, '', $object, 0).'</label></td>';\n\t\t\t\t\tprint '<td colspan=\"3\">';\n\t\t\t\t\tif (!empty($value['icon'])) {\n\t\t\t\t\t\tprint '<span class=\"fa '.$value['icon'].'\"></span>';\n\t\t\t\t\t}\n\t\t\t\t\tprint '<input type=\"text\" name=\"'.$key.'\" id=\"'.$key.'\" class=\"minwidth100\" maxlength=\"80\" value=\"'.dol_escape_htmltag(GETPOSTISSET($key) ? GETPOST($key, 'alphanohtml') : (empty($object->socialnetworks[$key]) ? '' : $object->socialnetworks[$key])).'\">';\n\t\t\t\t\tprint '</td>';\n\t\t\t\t\tprint '</tr>';\n\t\t\t\t} elseif (!empty($object->socialnetworks[$key])) {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"'.$key.'\" value=\"'.$object->socialnetworks[$key].'\">';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Prof ids\n\t\t$i = 1; $j = 0; $NBCOLS = ($conf->browser->layout == 'phone' ? 1 : 2);\n\t\twhile ($i <= 6) {\n\t\t\t$idprof = $langs->transcountry('ProfId'.$i, $object->country_code);\n\t\t\tif ($idprof != '-')\t{\n\t\t\t\t$key = 'idprof'.$i;\n\n\t\t\t\tif (($j % $NBCOLS) == 0) {\n\t\t\t\t\tprint '<tr>';\n\t\t\t\t}\n\n\t\t\t\t$idprof_mandatory = 'SOCIETE_IDPROF'.($i).'_MANDATORY';\n\t\t\t\tprint '<td>'.$form->editfieldkey($idprof, $key, '', $object, 0, 'string', '', (empty($conf->global->$idprof_mandatory) ? 0 : 1)).'</td><td>';\n\n\t\t\t\tprint $formcompany->get_input_id_prof($i, $key, $object->$key, $object->country_code);\n\t\t\t\tprint '</td>';\n\t\t\t\tif (($j % $NBCOLS) == ($NBCOLS - 1)) {\n\t\t\t\t\tprint '</tr>';\n\t\t\t\t}\n\t\t\t\t$j++;\n\t\t\t}\n\t\t\t$i++;\n\t\t}\n\t\tif ($NBCOLS > 1 && ($j % 2 == 1)) {\n\t\t\tprint '<td colspan=\"2\"></td></tr>';\n\t\t}\n\n\t\t// Vat is used\n\t\tprint '<tr><td>'.$form->editfieldkey('VATIsUsed', 'assujtva_value', '', $object, 0).'</td>';\n\t\tprint '<td>';\n\t\tprint $form->selectyesno('assujtva_value', GETPOSTISSET('assujtva_value') ?GETPOST('assujtva_value', 'int') : 1, 1); // Assujeti par defaut en creation\n\t\tprint '</td>';\n\t\tif ($conf->browser->layout == 'phone') {\n\t\t\tprint '</tr><tr>';\n\t\t}\n\t\tprint '<td class=\"nowrap\">'.$form->editfieldkey('VATIntra', 'intra_vat', '', $object, 0).'</td>';\n\t\tprint '<td class=\"nowrap\">';\n\t\t$s = '<input type=\"text\" class=\"flat maxwidthonsmartphone\" name=\"tva_intra\" id=\"intra_vat\" maxlength=\"20\" value=\"'.$object->tva_intra.'\">';\n\n\t\tif (empty($conf->global->MAIN_DISABLEVATCHECK) && isInEEC($object)) {\n\t\t\t$s .= ' ';\n\n\t\t\tif (!empty($conf->use_javascript_ajax))\t{\n\t\t\t\t$widthpopup = 600;\n\t\t\t\tif (!empty($conf->dol_use_jmobile)) {\n\t\t\t\t\t$widthpopup = 350;\n\t\t\t\t}\n\t\t\t\t$heightpopup = 400;\n\t\t\t\tprint \"\\n\";\n\t\t\t\tprint '<script language=\"JavaScript\" type=\"text/javascript\">';\n\t\t\t\tprint \"function CheckVAT(a) {\\n\";\n\t\t\t\tprint \"newpopup('\".DOL_URL_ROOT.\"/societe/checkvat/checkVatPopup.php?vatNumber='+a, '\".dol_escape_js($langs->trans(\"VATIntraCheckableOnEUSite\")).\"', \".$widthpopup.\", \".$heightpopup.\");\\n\";\n\t\t\t\tprint \"}\\n\";\n\t\t\t\tprint '</script>';\n\t\t\t\tprint \"\\n\";\n\t\t\t\t$s .= '<a href=\"#\" class=\"hideonsmartphone\" onclick=\"javascript: CheckVAT(document.formsoc.tva_intra.value);\">'.$langs->trans(\"VATIntraCheck\").'</a>';\n\t\t\t\t$s = $form->textwithpicto($s, $langs->trans(\"VATIntraCheckDesc\", $langs->transnoentitiesnoconv(\"VATIntraCheck\")), 1);\n\t\t\t} else {\n\t\t\t\t$s .= '<a href=\"'.$langs->transcountry(\"VATIntraCheckURL\", $object->country_id).'\" target=\"_blank\">'.img_picto($langs->trans(\"VATIntraCheckableOnEUSite\"), 'help').'</a>';\n\t\t\t}\n\t\t}\n\t\tprint $s;\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\n\t\t// Local Taxes\n\t\t//TODO: Place into a function to control showing by country or study better option\n\t\tif ($mysoc->localtax1_assuj == \"1\" && $mysoc->localtax2_assuj == \"1\") {\n\t\t\tprint '<tr><td>'.$langs->transcountry(\"LocalTax1IsUsed\", $mysoc->country_code).'</td><td>';\n\t\t\tprint $form->selectyesno('localtax1assuj_value', (isset($conf->global->THIRDPARTY_DEFAULT_USELOCALTAX1) ? $conf->global->THIRDPARTY_DEFAULT_USELOCALTAX1 : 0), 1);\n\t\t\tprint '</td>';\n\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\tprint '</tr><tr>';\n\t\t\t}\n\t\t\tprint '<td>'.$langs->transcountry(\"LocalTax2IsUsed\", $mysoc->country_code).'</td><td>';\n\t\t\tprint $form->selectyesno('localtax2assuj_value', (isset($conf->global->THIRDPARTY_DEFAULT_USELOCALTAX2) ? $conf->global->THIRDPARTY_DEFAULT_USELOCALTAX2 : 0), 1);\n\t\t\tprint '</td></tr>';\n\t\t} elseif ($mysoc->localtax1_assuj == \"1\") {\n\t\t\tprint '<tr><td>'.$langs->transcountry(\"LocalTax1IsUsed\", $mysoc->country_code).'</td><td colspan=\"3\">';\n\t\t\tprint $form->selectyesno('localtax1assuj_value', (isset($conf->global->THIRDPARTY_DEFAULT_USELOCALTAX1) ? $conf->global->THIRDPARTY_DEFAULT_USELOCALTAX1 : 0), 1);\n\t\t\tprint '</td></tr>';\n\t\t} elseif ($mysoc->localtax2_assuj == \"1\") {\n\t\t\tprint '<tr><td>'.$langs->transcountry(\"LocalTax2IsUsed\", $mysoc->country_code).'</td><td colspan=\"3\">';\n\t\t\tprint $form->selectyesno('localtax2assuj_value', (isset($conf->global->THIRDPARTY_DEFAULT_USELOCALTAX2) ? $conf->global->THIRDPARTY_DEFAULT_USELOCALTAX2 : 0), 1);\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Type - Workforce/Staff\n\t\tprint '<tr><td>'.$form->editfieldkey('ThirdPartyType', 'typent_id', '', $object, 0).'</td><td class=\"maxwidthonsmartphone\"'.( ($conf->browser->layout == 'phone' || !empty($conf->global->SOCIETE_DISABLE_WORKFORCE)) ? ' colspan=\"3\"' : '').'>'.\"\\n\";\n\t\t$sortparam = (empty($conf->global->SOCIETE_SORT_ON_TYPEENT) ? 'ASC' : $conf->global->SOCIETE_SORT_ON_TYPEENT); // NONE means we keep sort of original array, so we sort on position. ASC, means next function will sort on label.\n\t\tprint $form->selectarray(\"typent_id\", $formcompany->typent_array(0), $object->typent_id, 1, 0, 0, '', 0, 0, 0, $sortparam, '', 1);\n\t\tif ($user->admin) {\n\t\t\tprint ' '.info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t}\n\t\tif (empty($conf->global->SOCIETE_DISABLE_WORKFORCE)) {\n\t\t\tprint '</td>';\n\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\tprint '</tr><tr>';\n\t\t\t}\n\t\t\tprint '<td>'.$form->editfieldkey('Workforce', 'effectif_id', '', $object, 0).'</td><td class=\"maxwidthonsmartphone\"'.($conf->browser->layout == 'phone' ? ' colspan=\"3\"' : '').'>';\n\t\t\tprint $form->selectarray(\"effectif_id\", $formcompany->effectif_array(0), $object->effectif_id, 0, 0, 0, '', 0, 0, 0, '', '', 1);\n\t\t\tif ($user->admin) {\n\t\t\t\tprint ' '.info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<input type=\"hidden\" name=\"effectif_id\" id=\"effectif_id\" value=\"'.$object->effectif_id.'\">';\n\t\t}\n\t\tprint '</td></tr>';\n\n\t\t// Legal Form\n\t\tprint '<tr><td>'.$form->editfieldkey('JuridicalStatus', 'forme_juridique_code', '', $object, 0).'</td>';\n\t\tprint '<td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\tif ($object->country_id) {\n\t\t\tprint $formcompany->select_juridicalstatus($object->forme_juridique_code, $object->country_code, '', 'forme_juridique_code');\n\t\t} else {\n\t\t\tprint $countrynotdefined;\n\t\t}\n\t\tprint '</td></tr>';\n\n\t\t// Capital\n\t\tprint '<tr><td>'.$form->editfieldkey('Capital', 'capital', '', $object, 0).'</td>';\n\t\tprint '<td colspan=\"3\"><input type=\"text\" name=\"capital\" id=\"capital\" class=\"maxwidth100\" value=\"'.$object->capital.'\"> ';\n\t\tprint '<span class=\"hideonsmartphone\">'.$langs->trans(\"Currency\".$conf->currency).'</span></td></tr>';\n\n\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\tprint '<tr><td>'.$form->editfieldkey('DefaultLang', 'default_lang', '', $object, 0).'</td><td colspan=\"3\" class=\"maxwidthonsmartphone\">'.\"\\n\";\n\t\t\tprint img_picto('', 'language').$formadmin->select_language(GETPOST('default_lang', 'alpha') ? GETPOST('default_lang', 'alpha') : ($object->default_lang ? $object->default_lang : ''), 'default_lang', 0, 0, 1, 0, 0, 'maxwidth200onsmartphone');\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\t\t}\n\n\t\t// Incoterms\n\t\tif (!empty($conf->incoterm->enabled)) {\n\t\t\tprint '<tr>';\n\t\t\tprint '<td>'.$form->editfieldkey('IncotermLabel', 'incoterm_id', '', $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t\tprint $form->select_incoterms((!empty($object->fk_incoterms) ? $object->fk_incoterms : ''), (!empty($object->location_incoterms) ? $object->location_incoterms : ''));\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Categories\n\t\tif (!empty($conf->categorie->enabled) && !empty($user->rights->categorie->lire)) {\n\t\t\t$langs->load('categories');\n\n\t\t\t// Customer\n\t\t\t//if ($object->prospect || $object->client || (! $object->fournisseur && ! empty($conf->global->THIRDPARTY_CAN_HAVE_CATEGORY_EVEN_IF_NOT_CUSTOMER_PROSPECT_SUPPLIER))) {\n\t\t\tprint '<tr class=\"visibleifcustomer\"><td class=\"toptd\">'.$form->editfieldkey('CustomersProspectsCategoriesShort', 'custcats', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_CUSTOMER, null, 'parent', null, null, 1);\n\t\t\tprint img_picto('', 'category').$form->multiselectarray('custcats', $cate_arbo, GETPOST('custcats', 'array'), null, null, 'quatrevingtpercent widthcentpercentminusx', 0, 0);\n\t\t\tprint \"</td></tr>\";\n\t\t\t//}\n\n\t\t\tif (!empty($conf->global->THIRDPARTY_SUGGEST_ALSO_ADDRESS_CREATION)) {\n\t\t\t\tprint '<tr class=\"individualline\"><td class=\"toptd\">'.$form->editfieldkey('ContactCategoriesShort', 'contcats', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_CONTACT, null, 'parent', null, null, 1);\n\t\t\t\tprint img_picto('', 'category').$form->multiselectarray('contcats', $cate_arbo, GETPOST('contcats', 'array'), null, null, 'quatrevingtpercent widthcentpercentminusx', 0, 0);\n\t\t\t\tprint \"</td></tr>\";\n\t\t\t}\n\n\t\t\tif (!empty($conf->global->THIRDPARTY_SUGGEST_ALSO_ADDRESS_CREATION)) {\n\t\t\t\tprint '<tr class=\"individualline\"><td class=\"toptd\">'.$form->editfieldkey('ContactCategoriesShort', 'contcats', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_CONTACT, null, 'parent', null, null, 1);\n\t\t\t\tprint img_picto('', 'category').$form->multiselectarray('contcats', $cate_arbo, GETPOST('contcats', 'array'), null, null, 'quatrevingtpercent widthcentpercentminusx', 0, 0);\n\t\t\t\tprint \"</td></tr>\";\n\t\t\t}\n\n\t\t\t// Supplier\n\t\t\tif ((!empty($conf->fournisseur->enabled) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || !empty($conf->supplier_order->enabled) || !empty($conf->supplier_invoice->enabled)) {\n\t\t\t\tprint '<tr class=\"visibleifsupplier\"><td class=\"toptd\">'.$form->editfieldkey('SuppliersCategoriesShort', 'suppcats', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_SUPPLIER, null, 'parent', null, null, 1);\n\t\t\t\tprint img_picto('', 'category').$form->multiselectarray('suppcats', $cate_arbo, GETPOST('suppcats', 'array'), null, null, 'quatrevingtpercent widthcentpercentminusx', 0, 0);\n\t\t\t\tprint \"</td></tr>\";\n\t\t\t}\n\t\t}\n\n\t\t// Multicurrency\n\t\tif (!empty($conf->multicurrency->enabled)) {\n\t\t\tprint '<tr>';\n\t\t\tprint '<td>'.$form->editfieldkey('Currency', 'multicurrency_code', '', $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t\tprint $form->selectMultiCurrency(($object->multicurrency_code ? $object->multicurrency_code : $conf->currency), 'multicurrency_code', 1);\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Other attributes\n\t\t$parameters = array('socid'=>$socid, 'colspan' => ' colspan=\"3\"', 'colspanvalue' => '3');\n\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_add.tpl.php';\n\n\t\t// Assign a sale representative\n\t\tprint '<tr>';\n\t\tprint '<td>'.$form->editfieldkey('AllocateCommercial', 'commercial_id', '', $object, 0).'</td>';\n\t\tprint '<td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t$userlist = $form->select_dolusers('', '', 0, null, 0, '', '', 0, 0, 0, 'AND u.statut = 1', 0, '', '', 0, 1);\n\t\t// Note: If user has no right to \"see all thirdparties\", we force selection of sale representative to him, so after creation he can see the record.\n\t\t$selected = (count(GETPOST('commercial', 'array')) > 0 ? GETPOST('commercial', 'array') : (GETPOST('commercial', 'int') > 0 ? array(GETPOST('commercial', 'int')) : (empty($user->rights->societe->client->voir) ? array($user->id) : array())));\n\t\tprint img_picto('', 'user').$form->multiselectarray('commercial', $userlist, $selected, null, null, 'quatrevingtpercent widthcentpercentminusx', 0, 0);\n\t\tprint '</td></tr>';\n\n\t\t// Add logo\n\t\tprint '<tr class=\"hideonsmartphone\">';\n\t\tprint '<td>'.$form->editfieldkey('Logo', 'photoinput', '', $object, 0).'</td>';\n\t\tprint '<td colspan=\"3\">';\n\t\tprint '<input class=\"flat\" type=\"file\" name=\"photo\" id=\"photoinput\" />';\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\n\t\tprint '</table>'.\"\\n\";\n\n\t\t// Accountancy codes\n\t\tif (!empty($conf->global->ACCOUNTANCY_USE_PRODUCT_ACCOUNT_ON_THIRDPARTY)) {\n\t\t\tprint '<table class=\"border\" width=\"100%\">';\n\n\t\t\tif (! empty($conf->accounting->enabled)) {\n\t\t\t\t// Accountancy_code_sell\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancySellCode\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\t$accountancy_code_sell = GETPOST('accountancy_code_sell', 'alpha');\n\t\t\t\tprint $formaccounting->select_account($accountancy_code_sell, 'accountancy_code_sell', 1, null, 1, 1, '');\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\t// Accountancy_code_buy\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancyBuyCode\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\t$accountancy_code_buy = GETPOST('accountancy_code_buy', 'alpha');\n\t\t\t\tprint $formaccounting->select_account($accountancy_code_buy, 'accountancy_code_buy', 1, null, 1, 1, '');\n\t\t\t\tprint '</td></tr>';\n\t\t\t} else { // For external software\n\t\t\t\t// Accountancy_code_sell\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancySellCode\").'</td>';\n\t\t\t\tprint '<td class=\"maxwidthonsmartphone\"><input class=\"minwidth100\" name=\"accountancy_code_sell\" value=\"'.$object->accountancy_code_sell.'\">';\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\t// Accountancy_code_buy\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancyBuyCode\").'</td>';\n\t\t\t\tprint '<td class=\"maxwidthonsmartphone\"><input class=\"minwidth100\" name=\"accountancy_code_buy\" value=\"'.$object->accountancy_code_buy.'\">';\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\tprint '</table>';\n\t\t}\n\n\t\tprint dol_get_fiche_end();\n\n\t\tprint '<div class=\"center\">';\n\t\tprint '<input type=\"submit\" class=\"button\" name=\"create\" value=\"'.$langs->trans('AddThirdParty').'\">';\n\t\tif (!empty($backtopage)) {\n\t\t\tprint ' &nbsp; &nbsp; ';\n\t\t\tprint '<input type=\"submit\" class=\"button button-cancel\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t} else {\n\t\t\tprint ' &nbsp; &nbsp; ';\n\t\t\tprint '<input type=\"button\" class=\"button button-cancel\" value=\"'.$langs->trans(\"Cancel\").'\" onClick=\"javascript:history.go(-1)\">';\n\t\t}\n\t\tprint '</div>'.\"\\n\";\n\n\t\tprint '</form>'.\"\\n\";\n\t} elseif ($action == 'edit') {\n\t\t//print load_fiche_titre($langs->trans(\"EditCompany\"));\n\n\t\tif ($socid) {\n\t\t\t$res = $object->fetch_optionals();\n\t\t\t//if ($res < 0) { dol_print_error($db); exit; }\n\n\t\t\t$head = societe_prepare_head($object);\n\n\t\t\t// Load object modCodeTiers\n\t\t\t$module = (!empty($conf->global->SOCIETE_CODECLIENT_ADDON) ? $conf->global->SOCIETE_CODECLIENT_ADDON : 'mod_codeclient_leopard');\n\t\t\tif (substr($module, 0, 15) == 'mod_codeclient_' && substr($module, -3) == 'php') {\n\t\t\t\t$module = substr($module, 0, dol_strlen($module) - 4);\n\t\t\t}\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$modCodeClient = new $module($db);\n\t\t\t// We verified if the tag prefix is used\n\t\t\tif ($modCodeClient->code_auto) {\n\t\t\t\t$prefixCustomerIsUsed = $modCodeClient->verif_prefixIsUsed();\n\t\t\t}\n\t\t\t$module = $conf->global->SOCIETE_CODECLIENT_ADDON;\n\t\t\tif (substr($module, 0, 15) == 'mod_codeclient_' && substr($module, -3) == 'php') {\n\t\t\t\t$module = substr($module, 0, dol_strlen($module) - 4);\n\t\t\t}\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$modCodeFournisseur = new $module($db);\n\t\t\t// On verifie si la balise prefix est utilisee\n\t\t\tif ($modCodeFournisseur->code_auto) {\n\t\t\t\t$prefixSupplierIsUsed = $modCodeFournisseur->verif_prefixIsUsed();\n\t\t\t}\n\n\t\t\t$object->oldcopy = clone $object;\n\n\t\t\tif (GETPOSTISSET('name')) {\n\t\t\t\t// We overwrite with values if posted\n\t\t\t\t$object->name = GETPOST('name', 'alphanohtml');\n\t\t\t\t$object->prefix_comm\t\t\t= GETPOST('prefix_comm', 'alphanohtml');\n\t\t\t\t$object->client = GETPOST('client', 'int');\n\t\t\t\t$object->code_client\t\t\t= GETPOST('customer_code', 'alpha');\n\t\t\t\t$object->fournisseur\t\t\t= GETPOST('fournisseur', 'int');\n\t\t\t\t$object->code_fournisseur = GETPOST('supplier_code', 'alpha');\n\t\t\t\t$object->address = GETPOST('address', 'alphanohtml');\n\t\t\t\t$object->zip = GETPOST('zipcode', 'alphanohtml');\n\t\t\t\t$object->town = GETPOST('town', 'alphanohtml');\n\t\t\t\t$object->country_id = GETPOST('country_id') ?GETPOST('country_id', 'int') : $mysoc->country_id;\n\t\t\t\t$object->state_id = GETPOST('state_id', 'int');\n\t\t\t\t//$object->skype\t\t\t\t= GETPOST('skype', 'alpha');\n\t\t\t\t//$object->twitter\t\t\t\t= GETPOST('twitter', 'alpha');\n\t\t\t\t//$object->facebook\t\t\t\t= GETPOST('facebook', 'alpha');\n\t\t\t\t//$object->linkedin\t\t\t\t= GETPOST('linkedin', 'alpha');\n\t\t\t\t$object->socialnetworks = array();\n\t\t\t\tif (!empty($conf->socialnetworks->enabled)) {\n\t\t\t\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\t\t\t\tif (GETPOSTISSET($key) && GETPOST($key, 'alphanohtml') != '') {\n\t\t\t\t\t\t\t$object->socialnetworks[$key] = GETPOST($key, 'alphanohtml');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$object->phone\t\t\t\t\t= GETPOST('phone', 'alpha');\n\t\t\t\t$object->fax\t\t\t\t\t= GETPOST('fax', 'alpha');\n\t\t\t\t$object->email\t\t\t\t\t= GETPOST('email', 'custom', 0, FILTER_SANITIZE_EMAIL);\n\t\t\t\t$object->url\t\t\t\t\t= GETPOST('url', 'custom', 0, FILTER_SANITIZE_URL);\n\t\t\t\t$object->capital\t\t\t\t= GETPOST('capital', 'alphanohtml');\n\t\t\t\t$object->idprof1\t\t\t\t= GETPOST('idprof1', 'alphanohtml');\n\t\t\t\t$object->idprof2\t\t\t\t= GETPOST('idprof2', 'alphanohtml');\n\t\t\t\t$object->idprof3\t\t\t\t= GETPOST('idprof3', 'alphanohtml');\n\t\t\t\t$object->idprof4\t\t\t\t= GETPOST('idprof4', 'alphanohtml');\n\t\t\t\t$object->idprof5\t\t\t\t= GETPOST('idprof5', 'alphanohtml');\n\t\t\t\t$object->idprof6\t\t\t\t= GETPOST('idprof6', 'alphanohtml');\n\t\t\t\t$object->typent_id = GETPOST('typent_id', 'int');\n\t\t\t\t$object->effectif_id = GETPOST('effectif_id', 'int');\n\t\t\t\t$object->barcode\t\t\t\t= GETPOST('barcode', 'alphanohtml');\n\t\t\t\t$object->forme_juridique_code = GETPOST('forme_juridique_code', 'int');\n\t\t\t\t$object->default_lang = GETPOST('default_lang', 'alpha');\n\n\t\t\t\t$object->tva_assuj\t\t\t\t= GETPOST('assujtva_value', 'int');\n\t\t\t\t$object->tva_intra\t\t\t\t= GETPOST('tva_intra', 'alphanohtml');\n\t\t\t\t$object->status = GETPOST('status', 'int');\n\n\t\t\t\t// Webservices url/key\n\t\t\t\t$object->webservices_url        = GETPOST('webservices_url', 'custom', 0, FILTER_SANITIZE_URL);\n\t\t\t\t$object->webservices_key        = GETPOST('webservices_key', 'san_alpha');\n\n\t\t\t\tif (GETPOSTISSET('accountancy_code_sell')) {\n\t\t\t\t\t$object->accountancy_code_sell  = GETPOST('accountancy_code_sell', 'alpha');\n\t\t\t\t}\n\t\t\t\tif (GETPOSTISSET('accountancy_code_buy')) {\n\t\t\t\t\t$object->accountancy_code_buy   = GETPOST('accountancy_code_buy', 'alpha');\n\t\t\t\t}\n\n\t\t\t\t//Incoterms\n\t\t\t\tif (!empty($conf->incoterm->enabled)) {\n\t\t\t\t\t$object->fk_incoterms = GETPOST('incoterm_id', 'int');\n\t\t\t\t\t$object->location_incoterms = GETPOST('lcoation_incoterms', 'alpha');\n\t\t\t\t}\n\n\t\t\t\t//Local Taxes\n\t\t\t\t$object->localtax1_assuj\t\t= GETPOST('localtax1assuj_value');\n\t\t\t\t$object->localtax2_assuj\t\t= GETPOST('localtax2assuj_value');\n\n\t\t\t\t$object->localtax1_value\t\t= GETPOST('lt1');\n\t\t\t\t$object->localtax2_value\t\t= GETPOST('lt2');\n\n\t\t\t\t// We set country_id, and country_code label of the chosen country\n\t\t\t\tif ($object->country_id > 0) {\n\t\t\t\t\t$tmparray = getCountry($object->country_id, 'all');\n\t\t\t\t\t$object->country_code = $tmparray['code'];\n\t\t\t\t\t$object->country = $tmparray['label'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($object->localtax1_assuj == 0) {\n\t\t\t\t$sub = 0;\n\t\t\t} else {\n\t\t\t\t$sub = 1;\n\t\t\t}\n\t\t\tif ($object->localtax2_assuj == 0) {\n\t\t\t\t$sub2 = 0;\n\t\t\t} else {\n\t\t\t\t$sub2 = 1;\n\t\t\t}\n\n\t\t\tif ($conf->use_javascript_ajax) {\n\t\t\t\tprint \"\\n\".'<script type=\"text/javascript\">';\n\t\t\t\tprint '$(document).ready(function () {\n    \t\t\tvar val='.$sub.';\n    \t\t\tvar val2='.$sub2.';\n    \t\t\tif(\"#localtax1assuj_value\".value==undefined){\n    \t\t\t\tif(val==1){\n    \t\t\t\t\t$(\".cblt1\").show();\n    \t\t\t\t}else{\n    \t\t\t\t\t$(\".cblt1\").hide();\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tif(\"#localtax2assuj_value\".value==undefined){\n    \t\t\t\tif(val2==1){\n    \t\t\t\t\t$(\".cblt2\").show();\n    \t\t\t\t}else{\n    \t\t\t\t\t$(\".cblt2\").hide();\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\t$(\"#localtax1assuj_value\").change(function() {\n               \t\tvar value=document.getElementById(\"localtax1assuj_value\").value;\n    \t\t\t\tif(value==1){\n    \t\t\t\t\t$(\".cblt1\").show();\n    \t\t\t\t}else{\n    \t\t\t\t\t$(\".cblt1\").hide();\n    \t\t\t\t}\n    \t\t\t});\n    \t\t\t$(\"#localtax2assuj_value\").change(function() {\n    \t\t\t\tvar value=document.getElementById(\"localtax2assuj_value\").value;\n    \t\t\t\tif(value==1){\n    \t\t\t\t\t$(\".cblt2\").show();\n    \t\t\t\t}else{\n    \t\t\t\t\t$(\".cblt2\").hide();\n    \t\t\t\t}\n    \t\t\t});\n\n\t\t\t\tinit_customer_categ();\n\t  \t\t\t$(\"#customerprospect\").change(function() {\n\t\t\t\t\tinit_customer_categ();\n\t\t\t\t});\n       \t\t\tfunction init_customer_categ() {\n\t\t\t\t\tconsole.log(\"is customer or prospect = \"+jQuery(\"#customerprospect\").val());\n\t\t\t\t\tif (jQuery(\"#customerprospect\").val() == 0 && (jQuery(\"#fournisseur\").val() == 0 || '.(empty($conf->global->THIRDPARTY_CAN_HAVE_CATEGORY_EVEN_IF_NOT_CUSTOMER_PROSPECT_SUPPLIER) ? '1' : '0').'))\n\t\t\t\t\t{\n\t\t\t\t\t\tjQuery(\".visibleifcustomer\").hide();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tjQuery(\".visibleifcustomer\").show();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tinit_supplier_categ();\n\t  \t\t\t$(\"#fournisseur\").change(function() {\n\t\t\t\t\tinit_supplier_categ();\n\t\t\t\t});\n       \t\t\tfunction init_supplier_categ() {\n\t\t\t\t\tconsole.log(\"is supplier = \"+jQuery(\"#fournisseur\").val());\n\t\t\t\t\tif (jQuery(\"#fournisseur\").val() == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tjQuery(\".visibleifsupplier\").hide();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tjQuery(\".visibleifsupplier\").show();\n\t\t\t\t\t}\n\t\t\t\t};\n\n       \t\t\t$(\"#selectcountry_id\").change(function() {\n       \t\t\t\tdocument.formsoc.action.value=\"edit\";\n      \t\t\t\tdocument.formsoc.submit();\n        \t\t\t});\n\n                })';\n\t\t\t\tprint '</script>'.\"\\n\";\n\t\t\t}\n\n\t\t\tprint '<form enctype=\"multipart/form-data\" action=\"'.$_SERVER[\"PHP_SELF\"].'?socid='.$object->id.'\" method=\"post\" name=\"formsoc\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"update\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"socid\" value=\"'.$object->id.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"entity\" value=\"'.$object->entity.'\">';\n\t\t\tif ($modCodeClient->code_auto || $modCodeFournisseur->code_auto) {\n\t\t\t\tprint '<input type=\"hidden\" name=\"code_auto\" value=\"1\">';\n\t\t\t}\n\n\n\t\t\tprint dol_get_fiche_head($head, 'card', $langs->trans(\"ThirdParty\"), 0, 'company');\n\n\t\t\tprint '<div class=\"fichecenter2\">';\n\t\t\tprint '<table class=\"border centpercent\">';\n\n\t\t\t// Ref/ID\n\t\t\tif (!empty($conf->global->MAIN_SHOW_TECHNICAL_ID)) {\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ID\").'</td><td colspan=\"3\">';\n\t\t\t\tprint $object->ref;\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Name\n\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$form->editfieldkey('ThirdPartyName', 'name', '', $object, 0, 'string', '', 1).'</td>';\n\t\t\tprint '<td colspan=\"3\"><input type=\"text\" class=\"minwidth300\" maxlength=\"128\" name=\"name\" id=\"name\" value=\"'.dol_escape_htmltag($object->name).'\" autofocus=\"autofocus\">';\n\t\t\tprint $form->widgetForTranslation(\"name\", $object, $permissiontoadd, 'string', 'alpahnohtml', 'minwidth300');\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Alias names (commercial, trademark or alias names)\n\t\t\tprint '<tr id=\"name_alias\"><td><label for=\"name_alias_input\">'.$langs->trans('AliasNames').'</label></td>';\n\t\t\tprint '<td colspan=\"3\"><input type=\"text\" class=\"minwidth300\" name=\"name_alias\" id=\"name_alias_input\" value=\"'.dol_escape_htmltag($object->name_alias).'\"></td></tr>';\n\n\t\t\t// Prefix\n\t\t\tif (!empty($conf->global->SOCIETE_USEPREFIX)) {  // Old not used prefix field\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey('Prefix', 'prefix', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t\t// It does not change the prefix mode using the auto numbering prefix\n\t\t\t\tif (($prefixCustomerIsUsed || $prefixSupplierIsUsed) && $object->prefix_comm) {\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"prefix_comm\" value=\"'.dol_escape_htmltag($object->prefix_comm).'\">';\n\t\t\t\t\tprint $object->prefix_comm;\n\t\t\t\t} else {\n\t\t\t\t\tprint '<input type=\"text\" size=\"5\" maxlength=\"5\" name=\"prefix_comm\" id=\"prefix\" value=\"'.dol_escape_htmltag($object->prefix_comm).'\">';\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t}\n\n\t\t\t// Prospect/Customer\n\t\t\tprint '<tr><td>'.$form->editfieldkey('ProspectCustomer', 'customerprospect', '', $object, 0, 'string', '', 1).'</td>';\n\t\t\tprint '<td class=\"maxwidthonsmartphone\">';\n\t\t\tprint $formcompany->selectProspectCustomerType($object->client);\n\t\t\tprint '</td>';\n\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\tprint '</tr><tr>';\n\t\t\t}\n\t\t\tprint '<td>'.$form->editfieldkey('CustomerCode', 'customer_code', '', $object, 0).'</td><td>';\n\n\t\t\tprint '<table class=\"nobordernopadding\"><tr><td>';\n\t\t\tif ((!$object->code_client || $object->code_client == -1) && $modCodeClient->code_auto) {\n\t\t\t\t$tmpcode = $object->code_client;\n\t\t\t\tif (empty($tmpcode) && !empty($object->oldcopy->code_client)) {\n\t\t\t\t\t$tmpcode = $object->oldcopy->code_client; // When there is an error to update a thirdparty, the number for supplier and customer code is kept to old value.\n\t\t\t\t}\n\t\t\t\tif (empty($tmpcode) && !empty($modCodeClient->code_auto)) {\n\t\t\t\t\t$tmpcode = $modCodeClient->getNextValue($object, 0);\n\t\t\t\t}\n\t\t\t\tprint '<input type=\"text\" name=\"customer_code\" id=\"customer_code\" size=\"16\" value=\"'.dol_escape_htmltag($tmpcode).'\" maxlength=\"24\">';\n\t\t\t} elseif ($object->codeclient_modifiable()) {\n\t\t\t\tprint '<input type=\"text\" name=\"customer_code\" id=\"customer_code\" size=\"16\" value=\"'.dol_escape_htmltag($object->code_client).'\" maxlength=\"24\">';\n\t\t\t} else {\n\t\t\t\tprint $object->code_client;\n\t\t\t\tprint '<input type=\"hidden\" name=\"customer_code\" value=\"'.dol_escape_htmltag($object->code_client).'\">';\n\t\t\t}\n\t\t\tprint '</td><td>';\n\t\t\t$s = $modCodeClient->getToolTip($langs, $object, 0);\n\t\t\tprint $form->textwithpicto('', $s, 1);\n\t\t\tprint '</td></tr></table>';\n\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Supplier\n\t\t\tif (((!empty($conf->fournisseur->enabled) && !empty($user->rights->fournisseur->lire) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || (!empty($conf->supplier_order->enabled) && !empty($user->rights->supplier_order->lire)) || (!empty($conf->supplier_invoice->enabled) && !empty($user->rights->supplier_invoice->lire)))\n\t\t\t\t|| (!empty($conf->supplier_proposal->enabled) && !empty($user->rights->supplier_proposal->lire))) {\n\t\t\t\tprint '<tr>';\n\t\t\t\tprint '<td>'.$form->editfieldkey('Supplier', 'fournisseur', '', $object, 0, 'string', '', 1).'</td>';\n\t\t\t\tprint '<td class=\"maxwidthonsmartphone\">';\n\t\t\t\tprint $form->selectyesno(\"fournisseur\", $object->fournisseur, 1, false, 0, 1);\n\t\t\t\tprint '</td>';\n\t\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\t\tprint '</tr><tr>';\n\t\t\t\t}\n\t\t\t\tprint '<td>';\n\t\t\t\tif ((!empty($conf->fournisseur->enabled) && !empty($user->rights->fournisseur->lire) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || (!empty($conf->supplier_order->enabled) && !empty($user->rights->supplier_order->lire)) || (!empty($conf->supplier_invoice->enabled) && !empty($user->rights->supplier_invoice->lire))) {\n\t\t\t\t\tprint $form->editfieldkey('SupplierCode', 'supplier_code', '', $object, 0);\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint '<table class=\"nobordernopadding\"><tr><td>';\n\t\t\t\tif ((!$object->code_fournisseur || $object->code_fournisseur == -1) && $modCodeFournisseur->code_auto) {\n\t\t\t\t\t$tmpcode = $object->code_fournisseur;\n\t\t\t\t\tif (empty($tmpcode) && !empty($object->oldcopy->code_fournisseur)) {\n\t\t\t\t\t\t$tmpcode = $object->oldcopy->code_fournisseur; // When there is an error to update a thirdparty, the number for supplier and customer code is kept to old value.\n\t\t\t\t\t}\n\t\t\t\t\tif (empty($tmpcode) && !empty($modCodeFournisseur->code_auto)) {\n\t\t\t\t\t\t$tmpcode = $modCodeFournisseur->getNextValue($object, 1);\n\t\t\t\t\t}\n\t\t\t\t\tprint '<input type=\"text\" name=\"supplier_code\" id=\"supplier_code\" size=\"16\" value=\"'.dol_escape_htmltag($tmpcode).'\" maxlength=\"24\">';\n\t\t\t\t} elseif ($object->codefournisseur_modifiable()) {\n\t\t\t\t\tprint '<input type=\"text\" name=\"supplier_code\" id=\"supplier_code\" size=\"16\" value=\"'.dol_escape_htmltag($object->code_fournisseur).'\" maxlength=\"24\">';\n\t\t\t\t} else {\n\t\t\t\t\tprint $object->code_fournisseur;\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"supplier_code\" value=\"'.$object->code_fournisseur.'\">';\n\t\t\t\t}\n\t\t\t\tprint '</td><td>';\n\t\t\t\t$s = $modCodeFournisseur->getToolTip($langs, $object, 1);\n\t\t\t\tprint $form->textwithpicto('', $s, 1);\n\t\t\t\tprint '</td></tr></table>';\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Barcode\n\t\t\tif (!empty($conf->barcode->enabled)) {\n\t\t\t\tprint '<tr><td class=\"tdtop\">'.$form->editfieldkey('Gencod', 'barcode', '', $object, 0).'</td>';\n\t\t\t\tprint '<td colspan=\"3\">';\n\t\t\t\tprint img_picto('', 'barcode');\n\t\t\t\tprint '<input type=\"text\" name=\"barcode\" id=\"barcode\" value=\"'.dol_escape_htmltag($object->barcode).'\">';\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Status\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Status', 'status', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\tprint $form->selectarray('status', array('0'=>$langs->trans('ActivityCeased'), '1'=>$langs->trans('InActivity')), $object->status, 0, 0, 0, '', 0, 0, 0, '', 'minwidth100', 1);\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Address\n\t\t\tprint '<tr><td class=\"tdtop\">'.$form->editfieldkey('Address', 'address', '', $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\"><textarea name=\"address\" id=\"address\" class=\"quatrevingtpercent\" rows=\"3\" wrap=\"soft\">';\n\t\t\tprint dol_escape_htmltag($object->address, 0, 1);\n\t\t\tprint '</textarea>';\n\t\t\tprint $form->widgetForTranslation(\"address\", $object, $permissiontoadd, 'textarea', 'alphanohtml', 'quatrevingtpercent');\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Zip / Town\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Zip', 'zipcode', '', $object, 0).'</td><td>';\n\t\t\tprint $formcompany->select_ziptown($object->zip, 'zipcode', array('town', 'selectcountry_id', 'state_id'), 0, 0, '', 'maxwidth100');\n\t\t\tprint '</td>';\n\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\tprint '</tr><tr>';\n\t\t\t}\n\t\t\tprint '<td>'.$form->editfieldkey('Town', 'town', '', $object, 0).'</td><td>';\n\t\t\tprint $formcompany->select_ziptown($object->town, 'town', array('zipcode', 'selectcountry_id', 'state_id'));\n\t\t\tprint $form->widgetForTranslation(\"town\", $object, $permissiontoadd, 'string', 'alphanohtml', 'maxwidth100 quatrevingtpercent');\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Country\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Country', 'selectcounty_id', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\tprint img_picto('', 'globe-americas', 'class=\"paddingrightonly\"');\n\t\t\tprint $form->select_country((GETPOSTISSET('country_id') ? GETPOST('country_id') : $object->country_id), 'country_id', '', 0, 'minwidth300 maxwidth500 widthcentpercentminusx');\n\t\t\tif ($user->admin) {\n\t\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// State\n\t\t\tif (empty($conf->global->SOCIETE_DISABLE_STATE)) {\n\t\t\t\tif (!empty($conf->global->MAIN_SHOW_REGION_IN_STATE_SELECT) && ($conf->global->MAIN_SHOW_REGION_IN_STATE_SELECT == 1 || $conf->global->MAIN_SHOW_REGION_IN_STATE_SELECT == 2)) {\n\t\t\t\t\tprint '<tr><td>'.$form->editfieldkey('Region-State', 'state_id', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t\t} else {\n\t\t\t\t\tprint '<tr><td>'.$form->editfieldkey('State', 'state_id', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t\t}\n\n\t\t\t\tprint img_picto('', 'state', 'class=\"pictofixedwidth\"');\n\t\t\t\tprint $formcompany->select_state($object->state_id, $object->country_code);\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Phone / Fax\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Phone', 'phone', GETPOST('phone', 'alpha'), $object, 0).'</td>';\n\t\t\tprint '<td>'.img_picto('', 'object_phoning').' <input type=\"text\" name=\"phone\" id=\"phone\" class=\"maxwidth200 widthcentpercentminusx\" value=\"'.(GETPOSTISSET('phone') ?GETPOST('phone', 'alpha') : $object->phone).'\"></td>';\n\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\tprint '</tr><tr>';\n\t\t\t}\n\t\t\tprint '<td>'.$form->editfieldkey('Fax', 'fax', GETPOST('fax', 'alpha'), $object, 0).'</td>';\n\t\t\tprint '<td>'.img_picto('', 'object_phoning_fax').' <input type=\"text\" name=\"fax\" id=\"fax\" class=\"maxwidth200 widthcentpercentminusx\" value=\"'.(GETPOSTISSET('fax') ?GETPOST('fax', 'alpha') : $object->fax).'\"></td></tr>';\n\n\t\t\t// EMail / Web\n\t\t\tprint '<tr><td>'.$form->editfieldkey('EMail', 'email', GETPOST('email', 'custom', 0, FILTER_SANITIZE_EMAIL), $object, 0, 'string', '', (!empty($conf->global->SOCIETE_EMAIL_MANDATORY))).'</td>';\n\t\t\tprint '<td colspan=\"3\">'.img_picto('', 'object_email').' <input type=\"text\" name=\"email\" id=\"email\" class=\"maxwidth200onsmartphone maxwidth500 widthcentpercentminusx\" value=\"'.(GETPOSTISSET('email') ? GETPOST('email', 'custom', 0, FILTER_SANITIZE_EMAIL) : $object->email).'\"></td></tr>';\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Web', 'url', GETPOST('url', 'alpha'), $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\">'.img_picto('', 'globe').' <input type=\"text\" name=\"url\" id=\"url\" class=\"maxwidth200onsmartphone maxwidth500 widthcentpercentminusx \" value=\"'.(GETPOSTISSET('url') ?GETPOST('url', 'alpha') : $object->url).'\"></td></tr>';\n\n\t\t\tif (!empty($conf->socialnetworks->enabled)) {\n\t\t\t\tforeach ($socialnetworks as $key => $value) {\n\t\t\t\t\tif ($value['active']) {\n\t\t\t\t\t\tprint '<tr>';\n\t\t\t\t\t\tprint '<td><label for=\"'.$value['label'].'\">'.$form->editfieldkey($value['label'], $key, '', $object, 0).'</label></td>';\n\t\t\t\t\t\tprint '<td colspan=\"3\">';\n\t\t\t\t\t\tif (!empty($value['icon'])) {\n\t\t\t\t\t\t\tprint '<span class=\"fa '.$value['icon'].'\"></span>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint '<input type=\"text\" name=\"'.$key.'\" id=\"'.$key.'\" class=\"minwidth100\" maxlength=\"80\" value=\"'.(empty($object->socialnetworks[$key]) ? '' : $object->socialnetworks[$key]).'\">';\n\t\t\t\t\t\tprint '</td>';\n\t\t\t\t\t\tprint '</tr>';\n\t\t\t\t\t} elseif (!empty($object->socialnetworks[$key])) {\n\t\t\t\t\t\tprint '<input type=\"hidden\" name=\"'.$key.'\" value=\"'.$object->socialnetworks[$key].'\">';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prof ids\n\t\t\t$i = 1;\n\t\t\t$j = 0;\n\t\t\t$NBCOLS = ($conf->browser->layout == 'phone' ? 1 : 2);\n\t\t\twhile ($i <= 6) {\n\t\t\t\t$idprof = $langs->transcountry('ProfId'.$i, $object->country_code);\n\t\t\t\tif ($idprof != '-') {\n\t\t\t\t\t$key = 'idprof'.$i;\n\n\t\t\t\t\tif (($j % $NBCOLS) == 0) {\n\t\t\t\t\t\tprint '<tr>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$idprof_mandatory = 'SOCIETE_IDPROF'.($i).'_MANDATORY';\n\t\t\t\t\tprint '<td>'.$form->editfieldkey($idprof, $key, '', $object, 0, 'string', '', !(empty($conf->global->$idprof_mandatory) || !$object->isACompany())).'</td><td>';\n\t\t\t\t\tprint $formcompany->get_input_id_prof($i, $key, $object->$key, $object->country_code);\n\t\t\t\t\tprint '</td>';\n\t\t\t\t\tif (($j % $NBCOLS) == ($NBCOLS - 1)) {\n\t\t\t\t\t\tprint '</tr>';\n\t\t\t\t\t}\n\t\t\t\t\t$j++;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif ($NBCOLS > 0 && $j % 2 == 1) {\n\t\t\t\tprint '<td colspan=\"2\"></td></tr>';\n\t\t\t}\n\n\t\t\t// VAT is used\n\t\t\tprint '<tr><td>'.$form->editfieldkey('VATIsUsed', 'assujtva_value', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\tprint $form->selectyesno('assujtva_value', $object->tva_assuj, 1);\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Local Taxes\n\t\t\t//TODO: Place into a function to control showing by country or study better option\n\t\t\tif ($mysoc->localtax1_assuj == \"1\" && $mysoc->localtax2_assuj == \"1\") {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey($langs->transcountry(\"LocalTax1IsUsed\", $mysoc->country_code), 'localtax1assuj_value', '', $object, 0).'</td><td>';\n\t\t\t\tprint $form->selectyesno('localtax1assuj_value', $object->localtax1_assuj, 1);\n\t\t\t\tif (!isOnlyOneLocalTax(1)) {\n\t\t\t\t\tprint '<span class=\"cblt1\">     '.$langs->transcountry(\"Type\", $mysoc->country_code).': ';\n\t\t\t\t\t$formcompany->select_localtax(1, $object->localtax1_value, \"lt1\");\n\t\t\t\t\tprint '</span>';\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '</tr><tr>';\n\t\t\t\tprint '<td>'.$form->editfieldkey($langs->transcountry(\"LocalTax2IsUsed\", $mysoc->country_code), 'localtax2assuj_value', '', $object, 0).'</td><td>';\n\t\t\t\tprint $form->selectyesno('localtax2assuj_value', $object->localtax2_assuj, 1);\n\t\t\t\tif (!isOnlyOneLocalTax(2)) {\n\t\t\t\t\tprint '<span class=\"cblt2\">     '.$langs->transcountry(\"Type\", $mysoc->country_code).': ';\n\t\t\t\t\t$formcompany->select_localtax(2, $object->localtax2_value, \"lt2\");\n\t\t\t\t\tprint '</span>';\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t} elseif ($mysoc->localtax1_assuj == \"1\" && $mysoc->localtax2_assuj != \"1\") {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey($langs->transcountry(\"LocalTax1IsUsed\", $mysoc->country_code), 'localtax1assuj_value', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t\tprint $form->selectyesno('localtax1assuj_value', $object->localtax1_assuj, 1);\n\t\t\t\tif (!isOnlyOneLocalTax(1)) {\n\t\t\t\t\tprint '<span class=\"cblt1\">     '.$langs->transcountry(\"Type\", $mysoc->country_code).': ';\n\t\t\t\t\t$formcompany->select_localtax(1, $object->localtax1_value, \"lt1\");\n\t\t\t\t\tprint '</span>';\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t} elseif ($mysoc->localtax2_assuj == \"1\" && $mysoc->localtax1_assuj != \"1\") {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey($langs->transcountry(\"LocalTax2IsUsed\", $mysoc->country_code), 'localtax2assuj_value', '', $object, 0).'</td><td colspan=\"3\">';\n\t\t\t\tprint $form->selectyesno('localtax2assuj_value', $object->localtax2_assuj, 1);\n\t\t\t\tif (!isOnlyOneLocalTax(2)) {\n\t\t\t\t\tprint '<span class=\"cblt2\">     '.$langs->transcountry(\"Type\", $mysoc->country_code).': ';\n\t\t\t\t\t$formcompany->select_localtax(2, $object->localtax2_value, \"lt2\");\n\t\t\t\t\tprint '</span>';\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// VAT Code\n\t\t\tprint '<tr><td>'.$form->editfieldkey('VATIntra', 'intra_vat', '', $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\">';\n\t\t\t$s = '<input type=\"text\" class=\"flat maxwidthonsmartphone\" name=\"tva_intra\" id=\"intra_vat\" maxlength=\"20\" value=\"'.$object->tva_intra.'\">';\n\n\t\t\tif (empty($conf->global->MAIN_DISABLEVATCHECK) && isInEEC($object)) {\n\t\t\t\t$s .= ' &nbsp; ';\n\n\t\t\t\tif ($conf->use_javascript_ajax) {\n\t\t\t\t\t$widthpopup = 600;\n\t\t\t\t\tif (!empty($conf->dol_use_jmobile)) {\n\t\t\t\t\t\t$widthpopup = 350;\n\t\t\t\t\t}\n\t\t\t\t\t$heightpopup = 400;\n\t\t\t\t\tprint \"\\n\";\n\t\t\t\t\tprint '<script language=\"JavaScript\" type=\"text/javascript\">';\n\t\t\t\t\tprint \"function CheckVAT(a) {\\n\";\n\t\t\t\t\tprint \"newpopup('\".DOL_URL_ROOT.\"/societe/checkvat/checkVatPopup.php?vatNumber='+a,'\".dol_escape_js($langs->trans(\"VATIntraCheckableOnEUSite\")).\"', \".$widthpopup.\", \".$heightpopup.\");\\n\";\n\t\t\t\t\tprint \"}\\n\";\n\t\t\t\t\tprint '</script>';\n\t\t\t\t\tprint \"\\n\";\n\t\t\t\t\t$s .= '<a href=\"#\" class=\"hideonsmartphone\" onclick=\"javascript: CheckVAT(document.formsoc.tva_intra.value);\">'.$langs->trans(\"VATIntraCheck\").'</a>';\n\t\t\t\t\t$s = $form->textwithpicto($s, $langs->trans(\"VATIntraCheckDesc\", $langs->transnoentitiesnoconv(\"VATIntraCheck\")), 1);\n\t\t\t\t} else {\n\t\t\t\t\t$s .= '<a href=\"'.$langs->transcountry(\"VATIntraCheckURL\", $object->country_id).'\" class=\"hideonsmartphone\" target=\"_blank\">'.img_picto($langs->trans(\"VATIntraCheckableOnEUSite\"), 'help').'</a>';\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint $s;\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\n\t\t\t// Type - Workforce/Staff\n\t\t\tprint '<tr><td>'.$form->editfieldkey('ThirdPartyType', 'typent_id', '', $object, 0).'</td><td class=\"maxwidthonsmartphone\"'.( ($conf->browser->layout == 'phone' || !empty($conf->global->SOCIETE_DISABLE_WORKFORCE)) ? ' colspan=\"3\"' : '').'>';\n\t\t\tprint $form->selectarray(\"typent_id\", $formcompany->typent_array(0), $object->typent_id, 1, 0, 0, '', 0, 0, 0, (empty($conf->global->SOCIETE_SORT_ON_TYPEENT) ? 'ASC' : $conf->global->SOCIETE_SORT_ON_TYPEENT), '', 1);\n\t\t\tif ($user->admin) {\n\t\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t\t}\n\t\t\tif (empty($conf->global->SOCIETE_DISABLE_WORKFORCE)) {\n\t\t\t\tprint '</td>';\n\t\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\t\tprint '</tr><tr>';\n\t\t\t\t}\n\t\t\t\tprint '<td>'.$form->editfieldkey('Workforce', 'effectif_id', '', $object, 0).'</td><td class=\"maxwidthonsmartphone\">';\n\t\t\t\tprint $form->selectarray(\"effectif_id\", $formcompany->effectif_array(0), $object->effectif_id, 0, 0, 0, '', 0, 0, 0, '', '', 1);\n\t\t\t\tif ($user->admin) {\n\t\t\t\t\tprint info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"), 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint '<input type=\"hidden\" name=\"effectif_id\" id=\"effectif_id\" value=\"'.$object->effectif_id.'\">';\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Juridical type\n\t\t\tprint '<tr><td>'.$form->editfieldkey('JuridicalStatus', 'forme_juridique_code', '', $object, 0).'</td><td class=\"maxwidthonsmartphone\" colspan=\"3\">';\n\t\t\tprint $formcompany->select_juridicalstatus($object->forme_juridique_code, $object->country_code, '', 'forme_juridique_code');\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Capital\n\t\t\tprint '<tr><td>'.$form->editfieldkey('Capital', 'capital', '', $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\"><input type=\"text\" name=\"capital\" id=\"capital\" size=\"10\" value=\"';\n\t\t\tprint $object->capital != '' ? dol_escape_htmltag(price($object->capital)) : '';\n\t\t\tprint '\"> <font class=\"hideonsmartphone\">'.$langs->trans(\"Currency\".$conf->currency).'</font></td></tr>';\n\n\t\t\t// Default language\n\t\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey('DefaultLang', 'default_lang', '', $object, 0).'</td><td colspan=\"3\">'.\"\\n\";\n\t\t\t\tprint img_picto('', 'language').$formadmin->select_language($object->default_lang, 'default_lang', 0, 0, 1);\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '</tr>';\n\t\t\t}\n\n\t\t\t// Incoterms\n\t\t\tif (!empty($conf->incoterm->enabled)) {\n\t\t\t\tprint '<tr>';\n\t\t\t\t\tprint '<td>'.$form->editfieldkey('IncotermLabel', 'incoterm_id', '', $object, 0).'</td>';\n\t\t\t\tprint '<td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t\t\tprint $form->select_incoterms((!empty($object->fk_incoterms) ? $object->fk_incoterms : ''), (!empty($object->location_incoterms) ? $object->location_incoterms : ''));\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Categories\n\t\t\tif (!empty($conf->categorie->enabled) && !empty($user->rights->categorie->lire)) {\n\t\t\t\t// Customer\n\t\t\t\tprint '<tr class=\"visibleifcustomer\"><td>'.$form->editfieldkey('CustomersCategoriesShort', 'custcats', '', $object, 0).'</td>';\n\t\t\t\tprint '<td colspan=\"3\">';\n\t\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_CUSTOMER, null, null, null, null, 1);\n\t\t\t\t$c = new Categorie($db);\n\t\t\t\t$cats = $c->containing($object->id, Categorie::TYPE_CUSTOMER);\n\t\t\t\t$arrayselected = array();\n\t\t\t\tforeach ($cats as $cat) {\n\t\t\t\t\t$arrayselected[] = $cat->id;\n\t\t\t\t}\n\t\t\t\tprint img_picto('', 'category').$form->multiselectarray('custcats', $cate_arbo, $arrayselected, 0, 0, 'quatrevingtpercent widthcentpercentminusx', 0, 0);\n\t\t\t\tprint \"</td></tr>\";\n\n\t\t\t\t// Supplier\n\t\t\t\tif ((!empty($conf->fournisseur->enabled) && !empty($user->rights->fournisseur->lire) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || (!empty($conf->supplier_order->enabled) && !empty($user->rights->supplier_order->lire)) || (!empty($conf->supplier_invoice->enabled) && !empty($user->rights->supplier_invoice->lire))) {\n\t\t\t\t\tprint '<tr class=\"visibleifsupplier\"><td>'.$form->editfieldkey('SuppliersCategoriesShort', 'suppcats', '', $object, 0).'</td>';\n\t\t\t\t\tprint '<td colspan=\"3\">';\n\t\t\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_SUPPLIER, null, null, null, null, 1);\n\t\t\t\t\t$c = new Categorie($db);\n\t\t\t\t\t$cats = $c->containing($object->id, Categorie::TYPE_SUPPLIER);\n\t\t\t\t\t$arrayselected = array();\n\t\t\t\t\tforeach ($cats as $cat) {\n\t\t\t\t\t\t$arrayselected[] = $cat->id;\n\t\t\t\t\t}\n\t\t\t\t\tprint img_picto('', 'category').$form->multiselectarray('suppcats', $cate_arbo, $arrayselected, 0, 0, 'quatrevingtpercent widthcentpercentminusx', 0, 0);\n\t\t\t\t\tprint \"</td></tr>\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Multicurrency\n\t\t\tif (!empty($conf->multicurrency->enabled)) {\n\t\t\t\tprint '<tr>';\n\t\t\t\tprint '<td>'.$form->editfieldkey('Currency', 'multicurrency_code', '', $object, 0).'</td>';\n\t\t\t\tprint '<td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t\t\tprint $form->selectMultiCurrency(($object->multicurrency_code ? $object->multicurrency_code : $conf->currency), 'multicurrency_code', 1);\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Other attributes\n\t\t\t$parameters = array('socid'=>$socid, 'colspan' => ' colspan=\"3\"', 'colspanvalue' => '3');\n\t\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_edit.tpl.php';\n\n\t\t\t// Webservices url/key\n\t\t\tif (!empty($conf->syncsupplierwebservices->enabled)) {\n\t\t\t\tprint '<tr><td>'.$form->editfieldkey('WebServiceURL', 'webservices_url', '', $object, 0).'</td>';\n\t\t\t\tprint '<td><input type=\"text\" name=\"webservices_url\" id=\"webservices_url\" size=\"32\" value=\"'.$object->webservices_url.'\"></td>';\n\t\t\t\tprint '<td>'.$form->editfieldkey('WebServiceKey', 'webservices_key', '', $object, 0).'</td>';\n\t\t\t\tprint '<td><input type=\"text\" name=\"webservices_key\" id=\"webservices_key\" size=\"32\" value=\"'.$object->webservices_key.'\"></td></tr>';\n\t\t\t}\n\n\t\t\t// Logo\n\t\t\tprint '<tr class=\"hideonsmartphone\">';\n\t\t\tprint '<td>'.$form->editfieldkey('Logo', 'photoinput', '', $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\">';\n\t\t\tif ($object->logo) {\n\t\t\t\tprint $form->showphoto('societe', $object);\n\t\t\t}\n\t\t\t$caneditfield = 1;\n\t\t\tif ($caneditfield) {\n\t\t\t\tif ($object->logo) {\n\t\t\t\t\tprint \"<br>\\n\";\n\t\t\t\t}\n\t\t\t\tprint '<table class=\"nobordernopadding\">';\n\t\t\t\tif ($object->logo) {\n\t\t\t\t\tprint '<tr><td><input type=\"checkbox\" class=\"flat photodelete\" name=\"deletephoto\" id=\"photodelete\"> '.$langs->trans(\"Delete\").'<br><br></td></tr>';\n\t\t\t\t}\n\t\t\t\t//print '<tr><td>'.$langs->trans(\"PhotoFile\").'</td></tr>';\n\t\t\t\tprint '<tr><td><input type=\"file\" class=\"flat\" name=\"photo\" id=\"photoinput\"></td></tr>';\n\t\t\t\tprint '</table>';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\n\t\t\t// Assign sale representative\n\t\t\tprint '<tr>';\n\t\t\tprint '<td>'.$form->editfieldkey('AllocateCommercial', 'commercial_id', '', $object, 0).'</td>';\n\t\t\tprint '<td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n\t\t\t$userlist = $form->select_dolusers('', '', 0, null, 0, '', '', 0, 0, 0, 'AND u.statut = 1', 0, '', '', 0, 1);\n\t\t\t$arrayselected = GETPOST('commercial', 'array');\n\t\t\tif (empty($arrayselected)) {\n\t\t\t\t$arrayselected = $object->getSalesRepresentatives($user, 1);\n\t\t\t}\n\t\t\tprint img_picto('', 'user').$form->multiselectarray('commercial', $userlist, $arrayselected, 0, 0, 'quatrevingtpercent widthcentpercentminusx', 0, 0, '', '', '', 1);\n\t\t\tprint '</td></tr>';\n\n\t\t\tprint '</table>';\n\n\t\t\tif (!empty($conf->global->ACCOUNTANCY_USE_PRODUCT_ACCOUNT_ON_THIRDPARTY)) {\n\t\t\t\tprint '<br>';\n\t\t\t\tprint '<table class=\"border centpercent\">';\n\n\t\t\t\tif (! empty($conf->accounting->enabled)) {\n\t\t\t\t\t// Accountancy_code_sell\n\t\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ProductAccountancySellCode\").'</td>';\n\t\t\t\t\tprint '<td>';\n\t\t\t\t\tprint $formaccounting->select_account($object->accountancy_code_sell, 'accountancy_code_sell', 1, '', 1, 1);\n\t\t\t\t\tprint '</td></tr>';\n\n\t\t\t\t\t// Accountancy_code_buy\n\t\t\t\t\tprint '<tr><td>'.$langs->trans(\"ProductAccountancyBuyCode\").'</td>';\n\t\t\t\t\tprint '<td>';\n\t\t\t\t\tprint $formaccounting->select_account($object->accountancy_code_buy, 'accountancy_code_buy', 1, '', 1, 1);\n\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t} else { // For external software\n\t\t\t\t\t// Accountancy_code_sell\n\t\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ProductAccountancySellCode\").'</td>';\n\t\t\t\t\tprint '<td><input name=\"accountancy_code_sell\" class=\"maxwidth200\" value=\"'.$object->accountancy_code_sell.'\">';\n\t\t\t\t\tprint '</td></tr>';\n\n\t\t\t\t\t// Accountancy_code_buy\n\t\t\t\t\tprint '<tr><td>'.$langs->trans(\"ProductAccountancyBuyCode\").'</td>';\n\t\t\t\t\tprint '<td><input name=\"accountancy_code_buy\" class=\"maxwidth200\" value=\"'.$object->accountancy_code_buy.'\">';\n\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t}\n\t\t\t\tprint '</table>';\n\t\t\t}\n\n\t\t\tprint '</div>';\n\n\t\t\tprint dol_get_fiche_end();\n\n\t\t\tprint '<div class=\"center\">';\n\t\t\tprint '<input type=\"submit\" class=\"button button-save\" name=\"save\" value=\"'.$langs->trans(\"Save\").'\">';\n\t\t\tprint ' &nbsp; &nbsp; ';\n\t\t\tprint '<input type=\"submit\" class=\"button button-cancel\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t\tprint '</div>';\n\n\t\t\tprint '</form>';\n\t\t}\n\t} else {\n\t\t/*\n\t\t * View\n\t\t */\n\n\t\tif (!empty($object->id)) {\n\t\t\t$res = $object->fetch_optionals();\n\t\t}\n\t\t//if ($res < 0) { dol_print_error($db); exit; }\n\n\n\t\t$head = societe_prepare_head($object);\n\n\t\tprint dol_get_fiche_head($head, 'card', $langs->trans(\"ThirdParty\"), -1, 'company');\n\n\t\t$formconfirm = '';\n\n\t\t// Confirm delete third party\n\t\tif ($action == 'delete' || ($conf->use_javascript_ajax && empty($conf->dol_use_jmobile))) {\n\t\t\t$formconfirm = $form->formconfirm($_SERVER[\"PHP_SELF\"].\"?socid=\".$object->id, $langs->trans(\"DeleteACompany\"), $langs->trans(\"ConfirmDeleteCompany\"), \"confirm_delete\", '', 0, \"action-delete\");\n\t\t}\n\n\t\tif ($action == 'merge') {\n\t\t\t$formquestion = array(\n\t\t\t\tarray(\n\t\t\t\t\t'name' => 'soc_origin',\n\t\t\t\t\t'label' => $langs->trans('MergeOriginThirdparty'),\n\t\t\t\t\t'type' => 'other',\n\t\t\t\t\t'value' => $form->select_company('', 'soc_origin', '', 'SelectThirdParty', 0, 0, array(), 0, 'minwidth200', '', '', 1, null, false, array($object->id))\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$formconfirm .= $form->formconfirm($_SERVER[\"PHP_SELF\"].\"?socid=\".$object->id, $langs->trans(\"MergeThirdparties\"), $langs->trans(\"ConfirmMergeThirdparties\"), \"confirm_merge\", $formquestion, 'no', 1, 250);\n\t\t}\n\n\t\t// Call Hook formConfirm\n\t\t$parameters = array('formConfirm' => $formconfirm);\n\t\t$reshook = $hookmanager->executeHooks('formConfirm', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\t\tif (empty($reshook)) {\n\t\t\t$formconfirm .= $hookmanager->resPrint;\n\t\t} elseif ($reshook > 0) {\n\t\t\t$formconfirm = $hookmanager->resPrint;\n\t\t}\n\n\t\t// Print form confirm\n\t\tprint $formconfirm;\n\n\t\tdol_htmloutput_mesg(is_numeric($error) ? '' : $error, $errors, 'error');\n\n\t\t$linkback = '<a href=\"'.DOL_URL_ROOT.'/societe/list.php?restore_lastsearch_values=1\">'.$langs->trans(\"BackToList\").'</a>';\n\n\t\tdol_banner_tab($object, 'socid', $linkback, ($user->socid ? 0 : 1), 'rowid', 'nom');\n\n\n\t\tprint '<div class=\"fichecenter\">';\n\t\tprint '<div class=\"fichehalfleft\">';\n\n\t\tprint '<div class=\"underbanner clearboth\"></div>';\n\t\tprint '<table class=\"border tableforfield\" width=\"100%\">';\n\n\t\t// Type Prospect/Customer/Supplier\n\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans('NatureOfThirdParty').'</td><td>';\n\t\tprint $object->getTypeUrl(1);\n\t\tprint '</td></tr>';\n\n\t\t// Prefix\n\t\tif (!empty($conf->global->SOCIETE_USEPREFIX)) {  // Old not used prefix field\n\t\t\tprint '<tr><td>'.$langs->trans('Prefix').'</td><td>'.dol_escape_htmltag($object->prefix_comm).'</td>';\n\t\t\tprint '</tr>';\n\t\t}\n\n\t\t// Customer code\n\t\tif ($object->client) {\n\t\t\tprint '<tr><td>';\n\t\t\tprint $langs->trans('CustomerCode');\n\t\t\tprint '</td>';\n\t\t\tprint '<td>';\n\t\t\tprint showValueWithClipboardCPButton(dol_escape_htmltag($object->code_client));\n\t\t\tprint '</td>';\n\t\t\t$tmpcheck = $object->check_codeclient();\n\t\t\tif ($tmpcheck != 0 && $tmpcheck != -5) {\n\t\t\t\tprint ' <font class=\"error\">('.$langs->trans(\"WrongCustomerCode\").')</font>';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\t\t}\n\n\t\t// Supplier code\n\t\tif (((!empty($conf->fournisseur->enabled) && !empty($user->rights->fournisseur->lire) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || (!empty($conf->supplier_order->enabled) && !empty($user->rights->supplier_order->lire)) || (!empty($conf->supplier_invoice->enabled) && !empty($user->rights->supplier_invoice->lire))) && $object->fournisseur) {\n\t\t\tprint '<tr><td>';\n\t\t\tprint $langs->trans('SupplierCode').'</td><td>';\n\t\t\tprint showValueWithClipboardCPButton(dol_escape_htmltag($object->code_fournisseur));\n\t\t\t$tmpcheck = $object->check_codefournisseur();\n\t\t\tif ($tmpcheck != 0 && $tmpcheck != -5) {\n\t\t\t\tprint ' <font class=\"error\">('.$langs->trans(\"WrongSupplierCode\").')</font>';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\t\t}\n\n\t\t// Barcode\n\t\tif (!empty($conf->barcode->enabled)) {\n\t\t\tprint '<tr><td>';\n\t\t\tprint $langs->trans('Gencod').'</td><td>'.showValueWithClipboardCPButton(dol_escape_htmltag($object->barcode));\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\t\t}\n\n\t\t// Prof ids\n\t\t$i = 1; $j = 0;\n\t\twhile ($i <= 6) {\n\t\t\t$idprof = $langs->transcountry('ProfId'.$i, $object->country_code);\n\t\t\tif ($idprof != '-') {\n\t\t\t\t//if (($j % 2) == 0) print '<tr>';\n\t\t\t\tprint '<tr>';\n\t\t\t\tprint '<td>'.$idprof.'</td><td>';\n\t\t\t\t$key = 'idprof'.$i;\n\t\t\t\tprint showValueWithClipboardCPButton(dol_escape_htmltag($object->$key));\n\t\t\t\tif ($object->$key) {\n\t\t\t\t\tif ($object->id_prof_check($i, $object) > 0) {\n\t\t\t\t\t\tprint ' &nbsp; '.$object->id_prof_url($i, $object);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint ' <font class=\"error\">('.$langs->trans(\"ErrorWrongValue\").')</font>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprint '</td>';\n\t\t\t\t//if (($j % 2) == 1) print '</tr>';\n\t\t\t\tprint '</tr>';\n\t\t\t\t$j++;\n\t\t\t}\n\t\t\t$i++;\n\t\t}\n\t\t//if ($j % 2 == 1)  print '<td colspan=\"2\"></td></tr>';\n\n\n\t\t// This fields are used to know VAT to include in an invoice when the thirdparty is making a sale, so when it is a supplier.\n\t\t// We don't need them into customer profile.\n\t\t// Except for spain and localtax where localtax depends on buyer and not seller\n\n\t\tif ($object->fournisseur) {\n\t\t\t// VAT is used\n\t\t\tprint '<tr><td>';\n\t\t\tprint $form->textwithpicto($langs->trans('VATIsUsed'), $langs->trans('VATIsUsedWhenSelling'));\n\t\t\tprint '</td><td>';\n\t\t\tprint yn($object->tva_assuj);\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\t\t}\n\n\t\t// Local Taxes\n\t\tif ($object->fournisseur || $mysoc->country_code == 'ES') {\n\t\t\tif ($mysoc->localtax1_assuj == \"1\" && $mysoc->localtax2_assuj == \"1\") {\n\t\t\t\tprint '<tr><td>'.$langs->transcountry(\"LocalTax1IsUsed\", $mysoc->country_code).'</td><td>';\n\t\t\t\tprint yn($object->localtax1_assuj);\n\t\t\t\tprint '</td></tr><tr><td>'.$langs->transcountry(\"LocalTax2IsUsed\", $mysoc->country_code).'</td><td>';\n\t\t\t\tprint yn($object->localtax2_assuj);\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\tif ($object->localtax1_assuj == \"1\" && (!isOnlyOneLocalTax(1))) {\n\t\t\t\t\tprint '<form method=\"post\" action=\"'.$_SERVER['PHP_SELF'].'?socid='.$object->id.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set_localtax1\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t\t\tprint '<tr><td>'.$langs->transcountry(\"Localtax1\", $mysoc->country_code).' <a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editRE&amp;socid='.$object->id.'\">'.img_edit($langs->transnoentitiesnoconv('Edit'), 1).'</td>';\n\t\t\t\t\tif ($action == 'editRE') {\n\t\t\t\t\t\tprint '<td class=\"left\">';\n\t\t\t\t\t\t$formcompany->select_localtax(1, $object->localtax1_value, \"lt1\");\n\t\t\t\t\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<td>'.$object->localtax1_value.'</td>';\n\t\t\t\t\t}\n\t\t\t\t\tprint '</tr></form>';\n\t\t\t\t}\n\t\t\t\tif ($object->localtax2_assuj == \"1\" && (!isOnlyOneLocalTax(2))) {\n\t\t\t\t\tprint '<form method=\"post\" action=\"'.$_SERVER['PHP_SELF'].'?socid='.$object->id.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set_localtax2\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t\t\tprint '<tr><td>'.$langs->transcountry(\"Localtax2\", $mysoc->country_code).'<a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editIRPF&amp;socid='.$object->id.'\">'.img_edit($langs->transnoentitiesnoconv('Edit'), 1).'</td>';\n\t\t\t\t\tif ($action == 'editIRPF') {\n\t\t\t\t\t\tprint '<td class=\"left\">';\n\t\t\t\t\t\t$formcompany->select_localtax(2, $object->localtax2_value, \"lt2\");\n\t\t\t\t\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<td>'.$object->localtax2_value.'</td>';\n\t\t\t\t\t}\n\t\t\t\t\tprint '</tr></form>';\n\t\t\t\t}\n\t\t\t} elseif ($mysoc->localtax1_assuj == \"1\" && $mysoc->localtax2_assuj != \"1\") {\n\t\t\t\tprint '<tr><td>'.$langs->transcountry(\"LocalTax1IsUsed\", $mysoc->country_code).'</td><td>';\n\t\t\t\tprint yn($object->localtax1_assuj);\n\t\t\t\tprint '</td></tr>';\n\t\t\t\tif ($object->localtax1_assuj == \"1\" && (!isOnlyOneLocalTax(1))) {\n\t\t\t\t\tprint '<form method=\"post\" action=\"'.$_SERVER['PHP_SELF'].'?socid='.$object->id.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set_localtax1\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t\t\tprint '<tr><td> '.$langs->transcountry(\"Localtax1\", $mysoc->country_code).'<a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editRE&amp;socid='.$object->id.'\">'.img_edit($langs->transnoentitiesnoconv('Edit'), 1).'</td>';\n\t\t\t\t\tif ($action == 'editRE') {\n\t\t\t\t\t\tprint '<td class=\"left\">';\n\t\t\t\t\t\t$formcompany->select_localtax(1, $object->localtax1_value, \"lt1\");\n\t\t\t\t\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<td>'.$object->localtax1_value.'</td>';\n\t\t\t\t\t}\n\t\t\t\t\tprint '</tr></form>';\n\t\t\t\t}\n\t\t\t} elseif ($mysoc->localtax2_assuj == \"1\" && $mysoc->localtax1_assuj != \"1\") {\n\t\t\t\tprint '<tr><td>'.$langs->transcountry(\"LocalTax2IsUsed\", $mysoc->country_code).'</td><td>';\n\t\t\t\tprint yn($object->localtax2_assuj);\n\t\t\t\tprint '</td></tr>';\n\t\t\t\tif ($object->localtax2_assuj == \"1\" && (!isOnlyOneLocalTax(2))) {\n\t\t\t\t\tprint '<form method=\"post\" action=\"'.$_SERVER['PHP_SELF'].'?socid='.$object->id.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set_localtax2\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t\t\tprint '<tr><td> '.$langs->transcountry(\"Localtax2\", $mysoc->country_code).' <a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editIRPF&amp;socid='.$object->id.'\">'.img_edit($langs->transnoentitiesnoconv('Edit'), 1).'</td>';\n\t\t\t\t\tif ($action == 'editIRPF') {\n\t\t\t\t\t\tprint '<td class=\"left\">';\n\t\t\t\t\t\t$formcompany->select_localtax(2, $object->localtax2_value, \"lt2\");\n\t\t\t\t\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<td>'.$object->localtax2_value.'</td>';\n\t\t\t\t\t}\n\t\t\t\t\tprint '</tr></form>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Sale tax code (VAT code)\n\t\tprint '<tr>';\n\t\tprint '<td class=\"nowrap\">'.$langs->trans('VATIntra').'</td><td>';\n\t\tif ($object->tva_intra) {\n\t\t\t$s = '';\n\t\t\t$s .= showValueWithClipboardCPButton(dol_escape_htmltag($object->tva_intra));\n\t\t\t$s .= '<input type=\"hidden\" id=\"tva_intra\" name=\"tva_intra\" maxlength=\"20\" value=\"'.$object->tva_intra.'\">';\n\n\t\t\tif (empty($conf->global->MAIN_DISABLEVATCHECK) && isInEEC($object)) {\n\t\t\t\t$s .= ' &nbsp; ';\n\n\t\t\t\tif ($conf->use_javascript_ajax) {\n\t\t\t\t\t$widthpopup = 600;\n\t\t\t\t\tif (!empty($conf->dol_use_jmobile)) {\n\t\t\t\t\t\t$widthpopup = 350;\n\t\t\t\t\t}\n\t\t\t\t\t$heightpopup = 400;\n\t\t\t\t\tprint \"\\n\";\n\t\t\t\t\tprint '<script language=\"JavaScript\" type=\"text/javascript\">';\n\t\t\t\t\tprint \"function CheckVAT(a) {\\n\";\n\t\t\t\t\tprint \"newpopup('\".DOL_URL_ROOT.\"/societe/checkvat/checkVatPopup.php?vatNumber='+a, '\".dol_escape_js($langs->trans(\"VATIntraCheckableOnEUSite\")).\"', \".$widthpopup.\", \".$heightpopup.\");\\n\";\n\t\t\t\t\tprint \"}\\n\";\n\t\t\t\t\tprint '</script>';\n\t\t\t\t\tprint \"\\n\";\n\t\t\t\t\t$s .= '<a href=\"#\" class=\"hideonsmartphone\" onclick=\"javascript: CheckVAT( $(\\'#tva_intra\\').val() );\">'.$langs->trans(\"VATIntraCheck\").'</a>';\n\t\t\t\t\t$s = $form->textwithpicto($s, $langs->trans(\"VATIntraCheckDesc\", $langs->transnoentitiesnoconv(\"VATIntraCheck\")), 1);\n\t\t\t\t} else {\n\t\t\t\t\t$s .= '<a href=\"'.$langs->transcountry(\"VATIntraCheckURL\", $object->country_id).'\" class=\"hideonsmartphone\" target=\"_blank\">'.img_picto($langs->trans(\"VATIntraCheckableOnEUSite\"), 'help').'</a>';\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint $s;\n\t\t} else {\n\t\t\tprint '&nbsp;';\n\t\t}\n\t\tprint '</td></tr>';\n\n\t\t// Warehouse\n\t\tif (!empty($conf->stock->enabled) && !empty($conf->global->SOCIETE_ASK_FOR_WAREHOUSE)) {\n\t\t\t$langs->load('stocks');\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/html.formproduct.class.php';\n\t\t\t$formproduct = new FormProduct($db);\n\t\t\tprint '<tr class=\"nowrap\">';\n\t\t\tprint '<td>';\n\t\t\tprint $form->editfieldkey(\"Warehouse\", 'warehouse', '', $object, $user->rights->societe->creer);\n\t\t\tprint '</td><td>';\n\t\t\tif ($action == 'editwarehouse') {\n\t\t\t\t$formproduct->formSelectWarehouses($_SERVER['PHP_SELF'].'?id='.$object->id, $object->fk_warehouse, 'fk_warehouse', 1);\n\t\t\t} else {\n\t\t\t\tif ($object->fk_warehouse > 0) {\n\t\t\t\t\tprint img_picto('', 'stock', 'class=\"paddingrightonly\"');\n\t\t\t\t}\n\t\t\t\t$formproduct->formSelectWarehouses($_SERVER['PHP_SELF'].'?id='.$object->id, $object->fk_warehouse, 'none');\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint '</tr>';\n\t\t}\n\n\t\tprint '</table>';\n\t\tprint '</div>';\n\n\t\tprint '<div class=\"fichehalfright\"><div class=\"ficheaddleft\">';\n\n\t\tprint '<div class=\"underbanner clearboth\"></div>';\n\t\tprint '<table class=\"border tableforfield\" width=\"100%\">';\n\n\t\t// Tags / categories\n\t\tif (!empty($conf->categorie->enabled) && !empty($user->rights->categorie->lire)) {\n\t\t\t// Customer\n\t\t\tif ($object->prospect || $object->client || (!$object->fournisseur && !empty($conf->global->THIRDPARTY_CAN_HAVE_CATEGORY_EVEN_IF_NOT_CUSTOMER_PROSPECT_SUPPLIER))) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"CustomersCategoriesShort\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint $form->showCategories($object->id, Categorie::TYPE_CUSTOMER, 1);\n\t\t\t\tprint \"</td></tr>\";\n\t\t\t}\n\n\t\t\t// Supplier\n\t\t\tif (((!empty($conf->fournisseur->enabled) && !empty($user->rights->fournisseur->lire) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || (!empty($conf->supplier_order->enabled) && !empty($user->rights->supplier_order->lire)) || (!empty($conf->supplier_invoice->enabled) && !empty($user->rights->supplier_invoice->lire))) && $object->fournisseur) {\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"SuppliersCategoriesShort\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint $form->showCategories($object->id, Categorie::TYPE_SUPPLIER, 1);\n\t\t\t\tprint \"</td></tr>\";\n\t\t\t}\n\t\t}\n\n\n\t\t// Third-Party Type\n\t\tprint '<tr><td>';\n\t\tprint '<table class=\"nobordernopadding\" width=\"100%\"><tr><td>'.$langs->trans('ThirdPartyType').'</td>';\n\t\tif ($action != 'editthirdpartytype' && $user->rights->societe->creer) {\n\t\t\tprint '<td class=\"right\"><a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editthirdpartytype&amp;socid='.$object->id.'\">'.img_edit($langs->transnoentitiesnoconv('Edit'), 1).'</a></td>';\n\t\t}\n\t\tprint '</tr></table>';\n\t\tprint '</td><td>';\n\t\t$html_name = ($action == 'editthirdpartytype') ? 'typent_id' : 'none';\n\t\t$formcompany->formThirdpartyType($_SERVER['PHP_SELF'].'?socid='.$object->id, $object->typent_id, $html_name, '');\n\t\tprint '</td></tr>';\n\n\t\t// Workforce/Staff\n\t\tif (empty($conf->global->SOCIETE_DISABLE_WORKFORCE)) {\n\t\t\tprint '<tr><td>'.$langs->trans(\"Workforce\").'</td><td>'.$object->effectif.'</td></tr>';\n\t\t}\n\n\t\t// Legal\n\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans('JuridicalStatus').'</td><td>'.$object->forme_juridique.'</td></tr>';\n\n\t\t// Capital\n\t\tprint '<tr><td>'.$langs->trans('Capital').'</td><td>';\n\t\tif ($object->capital) {\n\t\t\tprint price($object->capital, '', $langs, 0, -1, -1, $conf->currency);\n\t\t} else {\n\t\t\tprint '&nbsp;';\n\t\t}\n\t\tprint '</td></tr>';\n\n\t\t// Default language\n\t\tif (!empty($conf->global->MAIN_MULTILANGS)) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\t\t\tprint '<tr><td>'.$langs->trans(\"DefaultLang\").'</td><td>';\n\t\t\t//$s=picto_from_langcode($object->default_lang);\n\t\t\t//print ($s?$s.' ':'');\n\t\t\t$langs->load(\"languages\");\n\t\t\t$labellang = ($object->default_lang ? $langs->trans('Language_'.$object->default_lang) : '');\n\t\t\tprint picto_from_langcode($object->default_lang, 'class=\"paddingrightonly saturatemedium opacitylow\"');\n\t\t\tprint $labellang;\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Incoterms\n\t\tif (!empty($conf->incoterm->enabled)) {\n\t\t\tprint '<tr><td>';\n\t\t\tprint '<table width=\"100%\" class=\"nobordernopadding\"><tr><td>'.$langs->trans('IncotermLabel').'</td>';\n\t\t\tif ($action != 'editincoterm' && $user->rights->societe->creer) {\n\t\t\t\tprint '<td class=\"right\"><a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?socid='.$object->id.'&action=editincoterm\">'.img_edit('', 1).'</a></td>';\n\t\t\t}\n\t\t\tprint '</tr></table>';\n\t\t\tprint '</td><td colspan=\"3\">';\n\t\t\tif ($action != 'editincoterm') {\n\t\t\t\tprint $form->textwithpicto($object->display_incoterms(), $object->label_incoterms, 1);\n\t\t\t} else {\n\t\t\t\tprint $form->select_incoterms((!empty($object->fk_incoterms) ? $object->fk_incoterms : ''), (!empty($object->location_incoterms) ? $object->location_incoterms : ''), $_SERVER['PHP_SELF'].'?socid='.$object->id);\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Multicurrency\n\t\tif (!empty($conf->multicurrency->enabled)) {\n\t\t\tprint '<tr>';\n\t\t\tprint '<td>'.$form->editfieldkey('Currency', 'multicurrency_code', '', $object, 0).'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint !empty($object->multicurrency_code) ? currency_name($object->multicurrency_code, 1) : '';\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\tif (!empty($conf->global->ACCOUNTANCY_USE_PRODUCT_ACCOUNT_ON_THIRDPARTY)) {\n\t\t\t// Accountancy sell code\n\t\t\tprint '<tr><td class=\"nowrap\">';\n\t\t\tprint $langs->trans(\"ProductAccountancySellCode\");\n\t\t\tprint '</td><td colspan=\"2\">';\n\t\t\tif (! empty($conf->accounting->enabled)) {\n\t\t\t\tif (! empty($object->accountancy_code_sell)) {\n\t\t\t\t\t$accountingaccount = new AccountingAccount($db);\n\t\t\t\t\t$accountingaccount->fetch('', $object->accountancy_code_sell, 1);\n\n\t\t\t\t\tprint $accountingaccount->getNomUrl(0, 1, 1, '', 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint $object->accountancy_code_sell;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\t// Accountancy buy code\n\t\t\tprint '<tr><td class=\"nowrap\">';\n\t\t\tprint $langs->trans(\"ProductAccountancyBuyCode\");\n\t\t\tprint '</td><td colspan=\"2\">';\n\t\t\tif (! empty($conf->accounting->enabled)) {\n\t\t\t\tif (! empty($object->accountancy_code_buy)) {\n\t\t\t\t\t$accountingaccount2 = new AccountingAccount($db);\n\t\t\t\t\t$accountingaccount2->fetch('', $object->accountancy_code_buy, 1);\n\n\t\t\t\t\tprint $accountingaccount2->getNomUrl(0, 1, 1, '', 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint $object->accountancy_code_buy;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Other attributes\n\t\t$parameters = array('socid'=>$socid, 'colspan' => ' colspan=\"3\"', 'colspanvalue' => '3');\n\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_view.tpl.php';\n\n\t\t// Parent company\n\t\tif (empty($conf->global->SOCIETE_DISABLE_PARENTCOMPANY)) {\n\t\t\tprint '<tr><td>';\n\t\t\tprint '<table class=\"nobordernopadding\" width=\"100%\"><tr><td>'.$langs->trans('ParentCompany').'</td>';\n\t\t\tif ($action != 'editparentcompany' && $user->rights->societe->creer) {\n\t\t\t\tprint '<td class=\"right\"><a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editparentcompany&amp;socid='.$object->id.'\">'.img_edit($langs->transnoentitiesnoconv('Edit'), 1).'</a></td>';\n\t\t\t}\n\t\t\tprint '</tr></table>';\n\t\t\tprint '</td><td>';\n\t\t\t$html_name = ($action == 'editparentcompany') ? 'parent_id' : 'none';\n\t\t\t$form->form_thirdparty($_SERVER['PHP_SELF'].'?socid='.$object->id, $object->parent, $html_name, '', 1, 0, 0, null, 0, array($object->id));\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Sales representative\n\t\tinclude DOL_DOCUMENT_ROOT.'/societe/tpl/linesalesrepresentative.tpl.php';\n\n\t\t// Module Adherent\n\t\tif (!empty($conf->adherent->enabled)) {\n\t\t\t$langs->load(\"members\");\n\t\t\tprint '<tr><td>'.$langs->trans(\"LinkedToDolibarrMember\").'</td>';\n\t\t\tprint '<td>';\n\t\t\t$adh = new Adherent($db);\n\t\t\t$result = $adh->fetch('', '', $object->id);\n\t\t\tif ($result > 0) {\n\t\t\t\t$adh->ref = $adh->getFullName($langs);\n\t\t\t\tprint $adh->getNomUrl(-1);\n\t\t\t} else {\n\t\t\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"ThirdpartyNotLinkedToMember\").'</span>';\n\t\t\t}\n\t\t\tprint \"</td></tr>\\n\";\n\t\t}\n\n\t\t// Webservices url/key\n\t\tif (!empty($conf->syncsupplierwebservices->enabled)) {\n\t\t\tprint '<tr><td>'.$langs->trans(\"WebServiceURL\").'</td><td>'.dol_print_url($object->webservices_url).'</td>';\n\t\t\tprint '<td class=\"nowrap\">'.$langs->trans('WebServiceKey').'</td><td>'.$object->webservices_key.'</td></tr>';\n\t\t}\n\n\t\tprint '</table>';\n\t\tprint '</div>';\n\n\t\tprint '</div></div>';\n\t\tprint '<div style=\"clear:both\"></div>';\n\n\t\tprint dol_get_fiche_end();\n\n\n\t\t/*\n\t\t *  Actions\n\t\t */\n\t\tif ($action != 'presend') {\n\t\t\tprint '<div class=\"tabsAction\">'.\"\\n\";\n\n\t\t\t$parameters = array();\n\t\t\t$reshook = $hookmanager->executeHooks('addMoreActionsButtons', $parameters, $object, $action); // Note that $action and $object may have been modified by hook\n\t\t\tif (empty($reshook)) {\n\t\t\t\t$at_least_one_email_contact = false;\n\t\t\t\t$TContact = $object->contact_array_objects();\n\t\t\t\tforeach ($TContact as &$contact) {\n\t\t\t\t\tif (!empty($contact->email)) {\n\t\t\t\t\t\t$at_least_one_email_contact = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (empty($user->socid)) {\n\t\t\t\t\tif (!empty($object->email) || $at_least_one_email_contact) {\n\t\t\t\t\t\t$langs->load(\"mails\");\n\t\t\t\t\t\tprint '<a class=\"butAction\" href=\"'.$_SERVER['PHP_SELF'].'?socid='.$object->id.'&action=presend&mode=init#formmailbeforetitle\">'.$langs->trans('SendMail').'</a>'.\"\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$langs->load(\"mails\");\n\t\t\t\t\t\tprint '<a class=\"butActionRefused classfortooltip\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NoEMail\")).'\">'.$langs->trans('SendMail').'</a>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($user->rights->societe->creer) {\n\t\t\t\t\tprint '<a class=\"butAction\" href=\"'.$_SERVER[\"PHP_SELF\"].'?socid='.$object->id.'&amp;action=edit\">'.$langs->trans(\"Modify\").'</a>'.\"\\n\";\n\t\t\t\t}\n\n\t\t\t\tif (!empty($conf->adherent->enabled)) {\n\t\t\t\t\t$adh = new Adherent($db);\n\t\t\t\t\t$result = $adh->fetch('', '', $object->id);\n\t\t\t\t\tif ($result == 0 && ($object->client == 1 || $object->client == 3) && !empty($conf->global->MEMBER_CAN_CONVERT_CUSTOMERS_TO_MEMBERS)) {\n\t\t\t\t\t\tprint '<a class=\"butAction\" href=\"'.DOL_URL_ROOT.'/adherents/card.php?&action=create&socid='.$object->id.'\" title=\"'.dol_escape_htmltag($langs->trans(\"NewMember\")).'\">'.$langs->trans(\"NewMember\").'</a>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($user->rights->societe->supprimer) {\n\t\t\t\t\tprint '<a class=\"butActionDelete\" href=\"card.php?action=merge&socid='.$object->id.'\" title=\"'.dol_escape_htmltag($langs->trans(\"MergeThirdparties\")).'\">'.$langs->trans('Merge').'</a>'.\"\\n\";\n\t\t\t\t}\n\n\t\t\t\tif ($user->rights->societe->supprimer) {\n\t\t\t\t\tif ($conf->use_javascript_ajax && empty($conf->dol_use_jmobile)) {\t// We can't use preloaded confirm form with jmobile\n\t\t\t\t\t\tprint '<span id=\"action-delete\" class=\"butActionDelete\">'.$langs->trans('Delete').'</span>'.\"\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<a class=\"butActionDelete\" href=\"'.$_SERVER[\"PHP_SELF\"].'?socid='.$object->id.'&amp;action=delete&amp;token='.newToken().'\">'.$langs->trans('Delete').'</a>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprint '</div>'.\"\\n\";\n\t\t}\n\n\t\t//Select mail models is same action as presend\n\t\tif (GETPOST('modelselected')) {\n\t\t\t$action = 'presend';\n\t\t}\n\n\t\tif ($action != 'presend') {\n\t\t\tprint '<div class=\"fichecenter\"><div class=\"fichehalfleft\">';\n\n\t\t\tif (empty($conf->global->SOCIETE_DISABLE_BUILDDOC)) {\n\t\t\t\tprint '<a name=\"builddoc\"></a>'; // ancre\n\n\t\t\t\t/*\n\t\t\t\t * Generated documents\n\t\t\t\t */\n\t\t\t\t$filedir = $conf->societe->multidir_output[$object->entity].'/'.$object->id;\n\t\t\t\t$urlsource = $_SERVER[\"PHP_SELF\"].\"?socid=\".$object->id;\n\t\t\t\t$genallowed = $user->rights->societe->lire;\n\t\t\t\t$delallowed = $user->rights->societe->creer;\n\n\t\t\t\tprint $formfile->showdocuments('company', $object->id, $filedir, $urlsource, $genallowed, $delallowed, $object->model_pdf, 0, 0, 0, 28, 0, 'entity='.$object->entity, 0, '', $object->default_lang);\n\t\t\t}\n\n\t\t\t// Subsidiaries list\n\t\t\tif (empty($conf->global->SOCIETE_DISABLE_SUBSIDIARIES)) {\n\t\t\t\t$result = show_subsidiaries($conf, $langs, $db, $object);\n\t\t\t}\n\n\t\t\tprint '</div><div class=\"fichehalfright\"><div class=\"ficheaddleft\">';\n\n\t\t\t$MAXEVENT = 10;\n\n\t\t\t$morehtmlright = dolGetButtonTitle($langs->trans('SeeAll'), '', 'fa fa-list-alt imgforviewmode', DOL_URL_ROOT.'/societe/agenda.php?socid='.$object->id);\n\n\t\t\t// List of actions on element\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formactions.class.php';\n\t\t\t$formactions = new FormActions($db);\n\t\t\t$somethingshown = $formactions->showactions($object, '', $socid, 1, '', $MAXEVENT, '', $morehtmlright); // Show all action for thirdparty\n\n\t\t\tprint '</div></div></div>';\n\n\t\t\tif (!empty($conf->global->MAIN_DUPLICATE_CONTACTS_TAB_ON_MAIN_CARD)) {\n\t\t\t\t// Contacts list\n\t\t\t\tif (empty($conf->global->SOCIETE_DISABLE_CONTACTS)) {\n\t\t\t\t\t$result = show_contacts($conf, $langs, $db, $object, $_SERVER[\"PHP_SELF\"].'?socid='.$object->id);\n\t\t\t\t}\n\n\t\t\t\t// Addresses list\n\t\t\t\tif (!empty($conf->global->SOCIETE_ADDRESSES_MANAGEMENT)) {\n\t\t\t\t\t$result = show_addresses($conf, $langs, $db, $object, $_SERVER[\"PHP_SELF\"].'?socid='.$object->id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Presend form\n\t\t$modelmail = 'thirdparty';\n\t\t$defaulttopic = 'Information';\n\t\t$diroutput = $conf->societe->dir_output;\n\t\t$trackid = 'thi'.$object->id;\n\n\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/card_presend.tpl.php';\n\t}\n}\n// End of page\nllxFooter();\n$db->close();\n", "<?php\n/* Copyright (C) 2002-2006  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2019  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Eric Seigne             <eric.seigne@ryxeo.com>\n * Copyright (C) 2003       Brian Fraval            <brian@fraval.org>\n * Copyright (C) 2006       Andre Cianfarani        <acianfa@free.fr>\n * Copyright (C) 2005-2017  Regis Houssin           <regis.houssin@inodbox.com>\n * Copyright (C) 2008       Patrick Raguin          <patrick.raguin@auguria.net>\n * Copyright (C) 2010-2018  Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2013       Florian Henry           <florian.henry@open-concept.pro>\n * Copyright (C) 2013       Alexandre Spangaro      <aspangaro@open-dsi.fr>\n * Copyright (C) 2013       Peter Fontaine          <contact@peterfontaine.fr>\n * Copyright (C) 2014-2015  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2015       Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2017       Rui Strecht\t\t\t    <rui.strecht@aliartalentos.com>\n * Copyright (C) 2018\t    Philippe Grand\t        <philippe.grand@atoo-net.com>\n * Copyright (C) 2019-2020  Josep Llu\u00eds Amador      <joseplluis@lliuretic.cat>\n * Copyright (C) 2019-2021  Fr\u00e9d\u00e9ric France         <frederic.france@netlogic.fr>\n * Copyright (C) 2020       Open-Dsi         \t\t<support@open-dsi.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/societe/class/societe.class.php\n *\t\\ingroup    societe\n *\t\\brief      File for third party class\n */\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/commonobject.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/commonincoterm.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/multicurrency/class/multicurrency.class.php';\n\n/**\n *\tClass to manage third parties objects (customers, suppliers, prospects...)\n */\nclass Societe extends CommonObject\n{\n\tuse CommonIncoterm;\n\n\t/**\n\t * @var string ID to identify managed object\n\t */\n\tpublic $element = 'societe';\n\n\t/**\n\t * @var string Name of table without prefix where object is stored\n\t */\n\tpublic $table_element = 'societe';\n\n\t/**\n\t * @var string Field with ID of parent key if this field has a parent or for child tables\n\t */\n\tpublic $fk_element = 'fk_soc';\n\n\t/**\n\t * @var string Fields for combobox\n\t */\n\tpublic $fieldsforcombobox = 'nom,name_alias';\n\n\t/**\n\t * @var array\tList of child tables. To test if we can delete object.\n\t */\n\tprotected $childtables = array(\n\t\t\"supplier_proposal\" => 'SupplierProposal',\n\t\t\"propal\" => 'Proposal',\n\t\t\"commande\" => 'Order',\n\t\t\"facture\" => 'Invoice',\n\t\t\"facture_rec\" => 'RecurringInvoiceTemplate',\n\t\t\"contrat\" => 'Contract',\n\t\t\"fichinter\" => 'Fichinter',\n\t\t\"facture_fourn\" => 'SupplierInvoice',\n\t\t\"commande_fournisseur\" => 'SupplierOrder',\n\t\t\"projet\" => 'Project',\n\t\t\"expedition\" => 'Shipment',\n\t\t\"prelevement_lignes\" => 'DirectDebitRecord',\n\t);\n\n\t/**\n\t * @var array    List of child tables. To know object to delete on cascade.\n\t *               if name like with @ClassName:FilePathClass:ParentFkFieldName' it will call method deleteByParentField (with parentId as parameters) and FieldName to fetch and delete child object\n\t */\n\tprotected $childtablesoncascade = array(\n\t\t\"societe_prices\",\n\t\t\"societe_address\",\n\t\t\"product_fournisseur_price\",\n\t\t\"product_customer_price_log\",\n\t\t\"product_customer_price\",\n\t\t\"@Contact:/contact/class/contact.class.php:fk_soc\",\n\t\t\"adherent\",\n\t\t\"societe_account\",\n\t\t\"societe_rib\",\n\t\t\"societe_remise\",\n\t\t\"societe_remise_except\",\n\t\t\"societe_commerciaux\",\n\t\t\"categorie\",\n\t\t\"notify\",\n\t\t\"notify_def\",\n\t\t\"actioncomm\",\n\t);\n\n\t/**\n\t * @var string String with name of icon for myobject. Must be the part after the 'object_' into object_myobject.png\n\t */\n\tpublic $picto = 'company';\n\n\t/**\n\t * 0=No test on entity, 1=Test with field entity, 2=Test with link by societe\n\t * @var int\n\t */\n\tpublic $ismultientitymanaged = 1;\n\n\t/**\n\t * 0=Default, 1=View may be restricted to sales representative only if no permission to see all or to company of external user if external user\n\t * @var integer\n\t */\n\tpublic $restrictiononfksoc = 1;\n\n\n\t/**\n\t *  'type' field format ('integer', 'integer:ObjectClass:PathToClass[:AddCreateButtonOrNot[:Filter]]', 'sellist:TableName:LabelFieldName[:KeyFieldName[:KeyFieldParent[:Filter]]]', 'varchar(x)', 'double(24,8)', 'real', 'price', 'text', 'text:none', 'html', 'date', 'datetime', 'timestamp', 'duration', 'mail', 'phone', 'url', 'password')\n\t *         Note: Filter can be a string like \"(t.ref:like:'SO-%') or (t.date_creation:<:'20160101') or (t.nature:is:NULL)\"\n\t *  'label' the translation key.\n\t *  'picto' is code of a picto to show before value in forms\n\t *  'enabled' is a condition when the field must be managed (Example: 1 or '$conf->global->MY_SETUP_PARAM)\n\t *  'position' is the sort order of field.\n\t *  'notnull' is set to 1 if not null in database. Set to -1 if we must set data to null if empty ('' or 0).\n\t *  'visible' says if field is visible in list (Examples: 0=Not visible, 1=Visible on list and create/update/view forms, 2=Visible on list only, 3=Visible on create/update/view form only (not list), 4=Visible on list and update/view form only (not create). 5=Visible on list and view only (not create/not update). Using a negative value means field is not shown by default on list but can be selected for viewing)\n\t *  'noteditable' says if field is not editable (1 or 0)\n\t *  'default' is a default value for creation (can still be overwrote by the Setup of Default Values if field is editable in creation form). Note: If default is set to '(PROV)' and field is 'ref', the default value will be set to '(PROVid)' where id is rowid when a new record is created.\n\t *  'index' if we want an index in database.\n\t *  'foreignkey'=>'tablename.field' if the field is a foreign key (it is recommanded to name the field fk_...).\n\t *  'searchall' is 1 if we want to search in this field when making a search from the quick search button.\n\t *  'isameasure' must be set to 1 if you want to have a total on list for this field. Field type must be summable like integer or double(24,8).\n\t *  'css' and 'cssview' and 'csslist' is the CSS style to use on field. 'css' is used in creation and update. 'cssview' is used in view mode. 'csslist' is used for columns in lists. For example: 'maxwidth200', 'wordbreak', 'tdoverflowmax200'\n\t *  'help' is a 'TranslationString' to use to show a tooltip on field. You can also use 'TranslationString:keyfortooltiponlick' for a tooltip on click.\n\t *  'showoncombobox' if value of the field must be visible into the label of the combobox that list record\n\t *  'disabled' is 1 if we want to have the field locked by a 'disabled' attribute. In most cases, this is never set into the definition of $fields into class, but is set dynamically by some part of code.\n\t *  'arrayofkeyval' to set list of value if type is a list of predefined values. For example: array(\"0\"=>\"Draft\",\"1\"=>\"Active\",\"-1\"=>\"Cancel\")\n\t *  'autofocusoncreate' to have field having the focus on a create form. Only 1 field should have this property set to 1.\n\t *  'comment' is not used. You can store here any text of your choice. It is not used by application.\n\t *\n\t *  Note: To have value dynamic, you can set value to 0 in definition and edit the value on the fly into the constructor.\n\t */\n\n\t/**\n\t * @var array  Array with all fields and their property. Do not use it as a static var. It may be modified by constructor.\n\t */\n\tpublic $fields = array(\n\t\t'rowid' =>array('type'=>'integer', 'label'=>'TechnicalID', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>10),\n\t\t'parent' =>array('type'=>'integer', 'label'=>'Parent', 'enabled'=>1, 'visible'=>-1, 'position'=>20),\n\t\t'tms' =>array('type'=>'timestamp', 'label'=>'DateModification', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>25),\n\t\t'datec' =>array('type'=>'datetime', 'label'=>'DateCreation', 'enabled'=>1, 'visible'=>-1, 'position'=>30),\n\t\t'nom' =>array('type'=>'varchar(128)', 'label'=>'Nom', 'enabled'=>1, 'visible'=>-1, 'position'=>35, 'showoncombobox'=>1),\n\t\t'name_alias' =>array('type'=>'varchar(128)', 'label'=>'Name alias', 'enabled'=>1, 'visible'=>-1, 'position'=>36, 'showoncombobox'=>2),\n\t\t'entity' =>array('type'=>'integer', 'label'=>'Entity', 'default'=>1, 'enabled'=>1, 'visible'=>-2, 'notnull'=>1, 'position'=>40, 'index'=>1),\n\t\t'ref_ext' =>array('type'=>'varchar(255)', 'label'=>'RefExt', 'enabled'=>1, 'visible'=>0, 'position'=>45),\n\t\t'code_client' =>array('type'=>'varchar(24)', 'label'=>'CustomerCode', 'enabled'=>1, 'visible'=>-1, 'position'=>55),\n\t\t'code_fournisseur' =>array('type'=>'varchar(24)', 'label'=>'SupplierCode', 'enabled'=>1, 'visible'=>-1, 'position'=>60),\n\t\t'code_compta' =>array('type'=>'varchar(24)', 'label'=>'CodeCompta', 'enabled'=>1, 'visible'=>-1, 'position'=>65),\n\t\t'code_compta_fournisseur' =>array('type'=>'varchar(24)', 'label'=>'CodeComptaSupplier', 'enabled'=>1, 'visible'=>-1, 'position'=>70),\n\t\t'address' =>array('type'=>'varchar(255)', 'label'=>'Address', 'enabled'=>1, 'visible'=>-1, 'position'=>75),\n\t\t'zip' =>array('type'=>'varchar(25)', 'label'=>'Zip', 'enabled'=>1, 'visible'=>-1, 'position'=>80),\n\t\t'town' =>array('type'=>'varchar(50)', 'label'=>'Town', 'enabled'=>1, 'visible'=>-1, 'position'=>85),\n\t\t'fk_departement' =>array('type'=>'integer', 'label'=>'State', 'enabled'=>1, 'visible'=>-1, 'position'=>90),\n\t\t'fk_pays' =>array('type'=>'integer:Ccountry:core/class/ccountry.class.php', 'label'=>'Country', 'enabled'=>1, 'visible'=>-1, 'position'=>95),\n\t\t'phone' =>array('type'=>'varchar(20)', 'label'=>'Phone', 'enabled'=>1, 'visible'=>-1, 'position'=>100),\n\t\t'fax' =>array('type'=>'varchar(20)', 'label'=>'Fax', 'enabled'=>1, 'visible'=>-1, 'position'=>105),\n\t\t'url' =>array('type'=>'varchar(255)', 'label'=>'Url', 'enabled'=>1, 'visible'=>-1, 'position'=>110),\n\t\t'email' =>array('type'=>'varchar(128)', 'label'=>'Email', 'enabled'=>1, 'visible'=>-1, 'position'=>115),\n\t\t'socialnetworks' =>array('type'=>'text', 'label'=>'Socialnetworks', 'enabled'=>1, 'visible'=>-1, 'position'=>120),\n\t\t'fk_effectif' =>array('type'=>'integer', 'label'=>'Workforce', 'enabled'=>1, 'visible'=>-1, 'position'=>170),\n\t\t'fk_typent' =>array('type'=>'integer', 'label'=>'TypeOfCompany', 'enabled'=>1, 'visible'=>-1, 'position'=>175, 'csslist'=>'minwidth200'),\n\t\t'fk_forme_juridique' =>array('type'=>'integer', 'label'=>'JuridicalStatus', 'enabled'=>1, 'visible'=>-1, 'position'=>180),\n\t\t'fk_currency' =>array('type'=>'varchar(3)', 'label'=>'Currency', 'enabled'=>1, 'visible'=>-1, 'position'=>185),\n\t\t'siren' =>array('type'=>'varchar(128)', 'label'=>'Idprof1', 'enabled'=>1, 'visible'=>-1, 'position'=>190),\n\t\t'siret' =>array('type'=>'varchar(128)', 'label'=>'Idprof2', 'enabled'=>1, 'visible'=>-1, 'position'=>195),\n\t\t'ape' =>array('type'=>'varchar(128)', 'label'=>'Idprof3', 'enabled'=>1, 'visible'=>-1, 'position'=>200),\n\t\t'idprof4' =>array('type'=>'varchar(128)', 'label'=>'Idprof4', 'enabled'=>1, 'visible'=>-1, 'position'=>205),\n\t\t'idprof5' =>array('type'=>'varchar(128)', 'label'=>'Idprof5', 'enabled'=>1, 'visible'=>-1, 'position'=>206),\n\t\t'idprof6' =>array('type'=>'varchar(128)', 'label'=>'Idprof6', 'enabled'=>1, 'visible'=>-1, 'position'=>207),\n\t\t'tva_intra' =>array('type'=>'varchar(20)', 'label'=>'Tva intra', 'enabled'=>1, 'visible'=>-1, 'position'=>210),\n\t\t'capital' =>array('type'=>'double(24,8)', 'label'=>'Capital', 'enabled'=>1, 'visible'=>-1, 'position'=>215),\n\t\t'fk_stcomm' =>array('type'=>'integer', 'label'=>'CommercialStatus', 'enabled'=>1, 'visible'=>-1, 'notnull'=>1, 'position'=>220),\n\t\t'note_private' =>array('type'=>'text', 'label'=>'NotePublic', 'enabled'=>1, 'visible'=>0, 'position'=>225),\n\t\t'note_public' =>array('type'=>'text', 'label'=>'NotePrivate', 'enabled'=>1, 'visible'=>0, 'position'=>230),\n\t\t'prefix_comm' =>array('type'=>'varchar(5)', 'label'=>'Prefix comm', 'enabled'=>'$conf->global->SOCIETE_USEPREFIX', 'visible'=>-1, 'position'=>235),\n\t\t'client' =>array('type'=>'tinyint(4)', 'label'=>'Client', 'enabled'=>1, 'visible'=>-1, 'position'=>240),\n\t\t'fournisseur' =>array('type'=>'tinyint(4)', 'label'=>'Fournisseur', 'enabled'=>1, 'visible'=>-1, 'position'=>245),\n\t\t'supplier_account' =>array('type'=>'varchar(32)', 'label'=>'Supplier account', 'enabled'=>1, 'visible'=>-1, 'position'=>250),\n\t\t'fk_prospectlevel' =>array('type'=>'varchar(12)', 'label'=>'ProspectLevel', 'enabled'=>1, 'visible'=>-1, 'position'=>255),\n\t\t'customer_bad' =>array('type'=>'tinyint(4)', 'label'=>'Customer bad', 'enabled'=>1, 'visible'=>-1, 'position'=>260),\n\t\t'customer_rate' =>array('type'=>'double', 'label'=>'Customer rate', 'enabled'=>1, 'visible'=>-1, 'position'=>265),\n\t\t'supplier_rate' =>array('type'=>'double', 'label'=>'Supplier rate', 'enabled'=>1, 'visible'=>-1, 'position'=>270),\n\t\t'fk_user_creat' =>array('type'=>'integer:User:user/class/user.class.php', 'label'=>'UserAuthor', 'enabled'=>1, 'visible'=>-2, 'position'=>275),\n\t\t'fk_user_modif' =>array('type'=>'integer:User:user/class/user.class.php', 'label'=>'UserModif', 'enabled'=>1, 'visible'=>-2, 'notnull'=>-1, 'position'=>280),\n\t\t//'remise_client' =>array('type'=>'double', 'label'=>'CustomerDiscount', 'enabled'=>1, 'visible'=>-1, 'position'=>285, 'isameasure'=>1),\n\t\t//'remise_supplier' =>array('type'=>'double', 'label'=>'SupplierDiscount', 'enabled'=>1, 'visible'=>-1, 'position'=>290, 'isameasure'=>1),\n\t\t'mode_reglement' =>array('type'=>'tinyint(4)', 'label'=>'Mode reglement', 'enabled'=>1, 'visible'=>-1, 'position'=>295),\n\t\t'cond_reglement' =>array('type'=>'tinyint(4)', 'label'=>'Cond reglement', 'enabled'=>1, 'visible'=>-1, 'position'=>300),\n\t\t'mode_reglement_supplier' =>array('type'=>'integer', 'label'=>'Mode reglement supplier', 'enabled'=>1, 'visible'=>-1, 'position'=>305),\n\t\t'outstanding_limit' =>array('type'=>'double(24,8)', 'label'=>'OutstandingBill', 'enabled'=>1, 'visible'=>-1, 'position'=>310, 'isameasure'=>1),\n\t\t'order_min_amount' =>array('type'=>'double(24,8)', 'label'=>'Order min amount', 'enabled'=>'!empty($conf->commande->enabled) && !empty($conf->global->ORDER_MANAGE_MIN_AMOUNT)', 'visible'=>-1, 'position'=>315, 'isameasure'=>1),\n\t\t'supplier_order_min_amount' =>array('type'=>'double(24,8)', 'label'=>'Supplier order min amount', 'enabled'=>'!empty($conf->commande->enabled) && !empty($conf->global->ORDER_MANAGE_MIN_AMOUNT)', 'visible'=>-1, 'position'=>320, 'isameasure'=>1),\n\t\t'cond_reglement_supplier' =>array('type'=>'integer', 'label'=>'Cond reglement supplier', 'enabled'=>1, 'visible'=>-1, 'position'=>325),\n\t\t'fk_shipping_method' =>array('type'=>'integer', 'label'=>'Fk shipping method', 'enabled'=>1, 'visible'=>-1, 'position'=>330),\n\t\t'tva_assuj' =>array('type'=>'tinyint(4)', 'label'=>'Tva assuj', 'enabled'=>1, 'visible'=>-1, 'position'=>335),\n\t\t'localtax1_assuj' =>array('type'=>'tinyint(4)', 'label'=>'Localtax1 assuj', 'enabled'=>1, 'visible'=>-1, 'position'=>340),\n\t\t'localtax1_value' =>array('type'=>'double(6,3)', 'label'=>'Localtax1 value', 'enabled'=>1, 'visible'=>-1, 'position'=>345),\n\t\t'localtax2_assuj' =>array('type'=>'tinyint(4)', 'label'=>'Localtax2 assuj', 'enabled'=>1, 'visible'=>-1, 'position'=>350),\n\t\t'localtax2_value' =>array('type'=>'double(6,3)', 'label'=>'Localtax2 value', 'enabled'=>1, 'visible'=>-1, 'position'=>355),\n\t\t'barcode' =>array('type'=>'varchar(255)', 'label'=>'Barcode', 'enabled'=>1, 'visible'=>-1, 'position'=>360),\n\t\t'price_level' =>array('type'=>'integer', 'label'=>'Price level', 'enabled'=>'$conf->global->PRODUIT_MULTIPRICES || $conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES', 'visible'=>-1, 'position'=>365),\n\t\t'default_lang' =>array('type'=>'varchar(6)', 'label'=>'Default lang', 'enabled'=>1, 'visible'=>-1, 'position'=>370),\n\t\t'canvas' =>array('type'=>'varchar(32)', 'label'=>'Canvas', 'enabled'=>1, 'visible'=>-1, 'position'=>375),\n\t\t'fk_barcode_type' =>array('type'=>'integer', 'label'=>'Fk barcode type', 'enabled'=>1, 'visible'=>-1, 'position'=>405),\n\t\t'webservices_url' =>array('type'=>'varchar(255)', 'label'=>'Webservices url', 'enabled'=>1, 'visible'=>-1, 'position'=>410),\n\t\t'webservices_key' =>array('type'=>'varchar(128)', 'label'=>'Webservices key', 'enabled'=>1, 'visible'=>-1, 'position'=>415),\n\t\t'fk_incoterms' =>array('type'=>'integer', 'label'=>'Fk incoterms', 'enabled'=>1, 'visible'=>-1, 'position'=>425),\n\t\t'location_incoterms' =>array('type'=>'varchar(255)', 'label'=>'Location incoterms', 'enabled'=>1, 'visible'=>-1, 'position'=>430),\n\t\t'model_pdf' =>array('type'=>'varchar(255)', 'label'=>'Model pdf', 'enabled'=>1, 'visible'=>0, 'position'=>435),\n\t\t'fk_multicurrency' =>array('type'=>'integer', 'label'=>'Fk multicurrency', 'enabled'=>1, 'visible'=>-1, 'position'=>440),\n\t\t'multicurrency_code' =>array('type'=>'varchar(255)', 'label'=>'Multicurrency code', 'enabled'=>1, 'visible'=>-1, 'position'=>445),\n\t\t'fk_account' =>array('type'=>'integer', 'label'=>'AccountingAccount', 'enabled'=>1, 'visible'=>-1, 'position'=>450),\n\t\t'fk_warehouse' =>array('type'=>'integer', 'label'=>'Warehouse', 'enabled'=>1, 'visible'=>-1, 'position'=>455),\n\t\t'logo' =>array('type'=>'varchar(255)', 'label'=>'Logo', 'enabled'=>1, 'visible'=>-1, 'position'=>400),\n\t\t'logo_squarred' =>array('type'=>'varchar(255)', 'label'=>'Logo squarred', 'enabled'=>1, 'visible'=>-1, 'position'=>401),\n\t\t'status' =>array('type'=>'tinyint(4)', 'label'=>'Status', 'enabled'=>1, 'visible'=>-1, 'position'=>500),\n\t\t'import_key' =>array('type'=>'varchar(14)', 'label'=>'ImportId', 'enabled'=>1, 'visible'=>-2, 'position'=>1000),\n\t);\n\n\t/**\n\t * @var int Entity\n\t */\n\tpublic $entity;\n\n\t/**\n\t * Thirdparty name\n\t * @var string\n\t * @deprecated Use $name instead\n\t * @see $name\n\t */\n\tpublic $nom;\n\n\t/**\n\t * @var string Thirdparty name\n\t */\n\tpublic $name;\n\n\t/**\n\t * Alias names (commercial, trademark or alias names)\n\t * @var string\n\t */\n\tpublic $name_alias;\n\n\t/**\n\t * @var int Physical thirdparty not a company\n\t */\n\tpublic $particulier;\n\n\t/**\n\t * @var string Address\n\t */\n\tpublic $address;\n\n\t/**\n\t * @var string Zip code of thirdparty\n\t */\n\tpublic $zip;\n\n\t/**\n\t * @var string Town of thirdparty\n\t */\n\tpublic $town;\n\n\t/**\n\t * Thirdparty status : 0=activity ceased, 1= in activity\n\t * @var int\n\t */\n\tpublic $status = 1;\n\n\t/**\n\t * Id of department\n\t * @var int\n\t */\n\tpublic $state_id;\n\n\t/**\n\t * @var string State code\n\t */\n\tpublic $state_code;\n\n\t/**\n\t * @var string State name\n\t */\n\tpublic $state;\n\n\t/**\n\t * Id of region\n\t * @var int\n\t */\n\tpublic $region_code;\n\n\t/**\n\t * @var string Region name\n\t */\n\tpublic $region;\n\n\t/**\n\t * @var string State code\n\t * @deprecated Use state_code instead\n\t * @see $state_code\n\t */\n\tpublic $departement_code;\n\n\t/**\n\t * @var string\n\t * @deprecated Use state instead\n\t * @see $state\n\t */\n\tpublic $departement;\n\n\t/**\n\t * @var string\n\t * @deprecated Use country instead\n\t * @see $country\n\t */\n\tpublic $pays;\n\n\t/**\n\t * Phone number\n\t * @var string\n\t */\n\tpublic $phone;\n\t/**\n\t * Fax number\n\t * @var string\n\t */\n\tpublic $fax;\n\t/**\n\t * Email\n\t * @var string\n\t */\n\tpublic $email;\n\n\t/**\n\t * @var array array of socialnetworks\n\t */\n\tpublic $socialnetworks;\n\n\t/**\n\t * Skype username\n\t * @var string\n\t * @deprecated\n\t */\n\tpublic $skype;\n\n\t/**\n\t * Twitter username\n\t * @var string\n\t * @deprecated\n\t */\n\tpublic $twitter;\n\n\t/**\n\t * Facebook username\n\t * @var string\n\t * @deprecated\n\t */\n\tpublic $facebook;\n\n\t/**\n\t * LinkedIn username\n\t * @var string\n\t * @deprecated\n\t */\n\tpublic $linkedin;\n\n\t/**\n\t * Webpage\n\t * @var string\n\t */\n\tpublic $url;\n\n\t/**\n\t * Barcode value\n\t * @var string\n\t */\n\tpublic $barcode;\n\n\t// 6 professional id (usage depends on country)\n\n\t/**\n\t * Professional ID 1 (Ex: Siren in France)\n\t * @var string\n\t */\n\tpublic $idprof1;\n\n\t/**\n\t * Professional ID 2 (Ex: Siret in France)\n\t * @var string\n\t */\n\tpublic $idprof2;\n\n\t/**\n\t * Professional ID 3 (Ex: Ape in France)\n\t * @var string\n\t */\n\tpublic $idprof3;\n\n\t/**\n\t * Professional ID 4 (Ex: RCS in France)\n\t * @var string\n\t */\n\tpublic $idprof4;\n\n\t/**\n\t * Professional ID 5\n\t * @var string\n\t */\n\tpublic $idprof5;\n\n\t/**\n\t * Professional ID 6\n\t * @var string\n\t */\n\tpublic $idprof6;\n\n\t/**\n\t * @var string Prefix comm\n\t */\n\tpublic $prefix_comm;\n\n\t/**\n\t * @var int Vat concerned\n\t */\n\tpublic $tva_assuj = 1;\n\n\t/**\n\t * Intracommunitary VAT ID\n\t * @var string\n\t */\n\tpublic $tva_intra;\n\n\t// Local taxes\n\tpublic $localtax1_assuj;\n\tpublic $localtax1_value;\n\tpublic $localtax2_assuj;\n\tpublic $localtax2_value;\n\n\t/**\n\t * @var string Manager\n\t */\n\tpublic $managers;\n\n\t/**\n\t * @var float Capital\n\t */\n\tpublic $capital;\n\n\t/**\n\t * @var int Type thirdparty\n\t */\n\tpublic $typent_id = 0;\n\tpublic $typent_code;\n\tpublic $effectif;\n\tpublic $effectif_id = 0;\n\tpublic $forme_juridique_code;\n\tpublic $forme_juridique = 0;\n\n\tpublic $remise_percent;\n\tpublic $remise_supplier_percent;\n\n\tpublic $mode_reglement_supplier_id;\n\tpublic $cond_reglement_supplier_id;\n\tpublic $transport_mode_supplier_id;\n\n\t/**\n\t * @var int ID\n\t */\n\tpublic $fk_prospectlevel;\n\n\t/**\n\t * @var string second name\n\t */\n\tpublic $name_bis;\n\n\t//Log data\n\n\t/**\n\t * Date of last update\n\t * @var string\n\t */\n\tpublic $date_modification;\n\n\t/**\n\t * User that made last update\n\t * @var string\n\t */\n\tpublic $user_modification;\n\n\t/**\n\t * @var integer|string date_creation\n\t */\n\tpublic $date_creation;\n\n\t/**\n\t * User that created the thirdparty\n\t * @var User\n\t */\n\tpublic $user_creation;\n\n\t/**\n\t * 0=no customer, 1=customer, 2=prospect, 3=customer and prospect\n\t * @var int\n\t */\n\tpublic $client = 0;\n\n\t/**\n\t * 0=no prospect, 1=prospect\n\t * @var int\n\t */\n\tpublic $prospect = 0;\n\n\t/**\n\t * 0=no supplier, 1=supplier\n\t * @var int\n\t */\n\tpublic $fournisseur;\n\n\t/**\n\t * Client code. E.g: CU2014-003\n\t * @var string\n\t */\n\tpublic $code_client;\n\n\t/**\n\t * Supplier code. E.g: SU2014-003\n\t * @var string\n\t */\n\tpublic $code_fournisseur;\n\n\t/**\n\t * Accounting code for client\n\t * @var string\n\t */\n\tpublic $code_compta;\n\n\t/**\n\t * Accounting code for client\n\t * @var string\n\t */\n\tpublic $code_compta_client;\n\n\t/**\n\t * Accounting code for suppliers\n\t * @var string\n\t */\n\tpublic $code_compta_fournisseur;\n\n\t/**\n\t * @var string\n\t * @deprecated Note is split in public and private notes\n\t * @see $note_public, $note_private\n\t */\n\tpublic $note;\n\n\t/**\n\t * Private note\n\t * @var string\n\t */\n\tpublic $note_private;\n\n\t/**\n\t * Public note\n\t * @var string\n\t */\n\tpublic $note_public;\n\n\t/**\n\t * Status prospect id\n\t * @var int\n\t */\n\tpublic $stcomm_id;\n\n\t/**\n\t * Status prospect picto\n\t * @var string\n\t */\n\tpublic $stcomm_picto;\n\n\t/**\n\t * Status prospect label\n\t * @var int\n\t */\n\tpublic $status_prospect_label;\n\n\t/**\n\t * Assigned price level\n\t * @var int\n\t */\n\tpublic $price_level;\n\n\t/**\n\t * @var string outstanding limit\n\t */\n\tpublic $outstanding_limit;\n\n\t/**\n\t * @var string Min order amount\n\t */\n\tpublic $order_min_amount;\n\n\t/**\n\t * @var string Supplier min order amount\n\t */\n\tpublic $supplier_order_min_amount;\n\n\t/**\n\t * Id of sales representative to link (used for thirdparty creation). Not filled by a fetch, because we can have several sales representatives.\n\t * @var int\n\t */\n\tpublic $commercial_id;\n\n\t/**\n\t * Id of parent thirdparty (if one)\n\t * @var int\n\t */\n\tpublic $parent;\n\n\t/**\n\t * Default language code of thirdparty (en_US, ...)\n\t * @var string\n\t */\n\tpublic $default_lang;\n\n\t/**\n\t * @var string Ref\n\t */\n\tpublic $ref;\n\n\t/**\n\t * @var string Internal ref\n\t * @deprecated\n\t */\n\tpublic $ref_int;\n\n\t/**\n\t * External user reference.\n\t * This is to allow external systems to store their id and make self-developed synchronizing functions easier to build.\n\t * @var string\n\t */\n\tpublic $ref_ext;\n\n\t/**\n\t * Import key.\n\t * Set when the thirdparty has been created through an import process. This is to relate those created thirdparties\n\t * to an import process\n\t * @var string\n\t */\n\tpublic $import_key;\n\n\t/**\n\t * Supplier WebServices URL\n\t * @var string\n\t */\n\tpublic $webservices_url;\n\n\t/**\n\t * Supplier WebServices Key\n\t * @var string\n\t */\n\tpublic $webservices_key;\n\n\t/**\n\t * @var string Logo\n\t */\n\tpublic $logo;\n\n\t/**\n\t * @var string logo small\n\t */\n\tpublic $logo_small;\n\n\t/**\n\t * @var string Logo mini\n\t */\n\tpublic $logo_mini;\n\n\t/**\n\t * @var string Logo squarred\n\t */\n\tpublic $logo_squarred;\n\n\t/**\n\t * @var string Logo squarred small\n\t */\n\tpublic $logo_squarred_small;\n\n\t/**\n\t * @var string Logo squarred mini\n\t */\n\tpublic $logo_squarred_mini;\n\n\t/**\n\t * @var string Accountancy account for sales\n\t */\n\tpublic $accountancy_code_sell;\n\n\t/**\n\t * @var string Accountancy account for bought\n\t */\n\tpublic $accountancy_code_buy;\n\n\t// Multicurrency\n\t/**\n\t * @var int ID\n\t */\n\tpublic $fk_multicurrency;\n\n\t// Warehouse\n\t/**\n\t * @var int ID\n\t */\n\tpublic $fk_warehouse;\n\n\t/**\n\t * @var string Multicurrency code\n\t */\n\tpublic $multicurrency_code;\n\n\n\t// Fields loaded by fetchPartnerships()\n\n\tpublic $partnerships = array();\n\n\n\n\t/**\n\t * @var Account|string Default BAN account\n\t */\n\tpublic $bank_account;\n\n\t/**\n\t * Third party is no customer\n\t */\n\tconst NO_CUSTOMER = 0;\n\n\t/**\n\t * Third party is a customer\n\t */\n\tconst CUSTOMER = 1;\n\n\t/**\n\t * Third party is a prospect\n\t */\n\tconst PROSPECT = 2;\n\n\t/**\n\t * Third party is a customer and a prospect\n\t */\n\tconst CUSTOMER_AND_PROSPECT = 3;\n\n\t/**\n\t * Third party is no supplier\n\t */\n\tconst NO_SUPPLIER = 0;\n\n\t/**\n\t * Third party is a supplier\n\t */\n\tconst SUPPLIER = 1;\n\n\t/**\n\t *    Constructor\n\t *\n\t *    @param\tDoliDB\t\t$db\t\tDatabase handler\n\t */\n\tpublic function __construct($db)\n\t{\n\t\tglobal $conf;\n\n\t\t$this->db = $db;\n\n\t\t$this->client = 0;\n\t\t$this->prospect = 0;\n\t\t$this->fournisseur = 0;\n\t\t$this->typent_id = 0;\n\t\t$this->effectif_id = 0;\n\t\t$this->forme_juridique_code = 0;\n\t\t$this->tva_assuj = 1;\n\t\t$this->status = 1;\n\n\t\tif (!empty($conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST)) {\n\t\t\t$this->fields['address']['showoncombobox'] = $conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST;\n\t\t\t$this->fields['zip']['showoncombobox'] = $conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST;\n\t\t\t$this->fields['town']['showoncombobox'] = $conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST;\n\t\t\t//$this->fields['fk_pays']['showoncombobox'] = $conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST;\n\t\t}\n\t}\n\n\n\t/**\n\t *    Create third party in database.\n\t *    $this->code_client = -1 and $this->code_fournisseur = -1 means automatic assignement.\n\t *\n\t *    @param\tUser\t$user       Object of user that ask creation\n\t *    @return   int         \t\t>=0 if OK, <0 if KO\n\t */\n\tpublic function create(User $user)\n\t{\n\t\tglobal $langs, $conf, $mysoc;\n\n\t\t$error = 0;\n\n\t\t// Clean parameters\n\t\tif (empty($this->status)) {\n\t\t\t$this->status = 0;\n\t\t}\n\t\t$this->name = $this->name ?trim($this->name) : trim($this->nom);\n\t\t$this->setUpperOrLowerCase();\n\t\t$this->nom = $this->name; // For backward compatibility\n\t\tif (empty($this->client)) {\n\t\t\t$this->client = 0;\n\t\t}\n\t\tif (empty($this->fournisseur)) {\n\t\t\t$this->fournisseur = 0;\n\t\t}\n\t\t$this->import_key = trim($this->import_key);\n\n\t\t$this->accountancy_code_buy = trim($this->accountancy_code_buy);\n\t\t$this->accountancy_code_sell= trim($this->accountancy_code_sell);\n\n\t\tif (!empty($this->multicurrency_code)) {\n\t\t\t$this->fk_multicurrency = MultiCurrency::getIdFromCode($this->db, $this->multicurrency_code);\n\t\t}\n\t\tif (empty($this->fk_multicurrency)) {\n\t\t\t$this->multicurrency_code = '';\n\t\t\t$this->fk_multicurrency = 0;\n\t\t}\n\n\t\tdol_syslog(get_class($this).\"::create \".$this->name);\n\n\t\t$now = dol_now();\n\n\t\t$this->db->begin();\n\n\t\t// For automatic creation during create action (not used by Dolibarr GUI, can be used by scripts)\n\t\tif ($this->code_client == -1 || $this->code_client === 'auto') {\n\t\t\t$this->get_codeclient($this, 0);\n\t\t}\n\t\tif ($this->code_fournisseur == -1 || $this->code_fournisseur === 'auto') {\n\t\t\t$this->get_codefournisseur($this, 1);\n\t\t}\n\n\t\t// Check more parameters (including mandatory setup\n\t\t// If error, this->errors[] is filled\n\t\t$result = $this->verify();\n\n\t\tif ($result >= 0) {\n\t\t\t$this->entity = ((isset($this->entity) && is_numeric($this->entity)) ? $this->entity : $conf->entity);\n\n\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"societe (\";\n\t\t\t$sql .= \"nom\";\n\t\t\t$sql .= \", name_alias\";\n\t\t\t$sql .= \", entity\";\n\t\t\t$sql .= \", datec\";\n\t\t\t$sql .= \", fk_typent\";\n\t\t\t$sql .= \", fk_user_creat\";\n\t\t\t$sql .= \", canvas\";\n\t\t\t$sql .= \", status\";\n\t\t\t$sql .= \", ref_ext\";\n\t\t\t$sql .= \", fk_stcomm\";\n\t\t\t$sql .= \", fk_incoterms\";\n\t\t\t$sql .= \", location_incoterms\";\n\t\t\t$sql .= \", import_key\";\n\t\t\t$sql .= \", fk_multicurrency\";\n\t\t\t$sql .= \", multicurrency_code\";\n\t\t\tif (empty($conf->global->MAIN_COMPANY_PERENTITY_SHARED)) {\n\t\t\t\t$sql .= \", accountancy_code_buy\";\n\t\t\t\t$sql .= \", accountancy_code_sell\";\n\t\t\t}\n\t\t\t$sql .= \") VALUES ('\".$this->db->escape($this->name).\"', '\".$this->db->escape($this->name_alias).\"', \".$this->db->escape($this->entity).\", '\".$this->db->idate($now).\"'\";\n\t\t\t$sql .= \", \".(!empty($user->id) ? ((int) $user->id) : \"null\");\n\t\t\t$sql .= \", \".(!empty($this->typent_id) ? ((int) $this->typent_id) : \"null\");\n\t\t\t$sql .= \", \".(!empty($this->canvas) ? \"'\".$this->db->escape($this->canvas).\"'\" : \"null\");\n\t\t\t$sql .= \", \".((int) $this->status);\n\t\t\t$sql .= \", \".(!empty($this->ref_ext) ? \"'\".$this->db->escape($this->ref_ext).\"'\" : \"null\");\n\t\t\t$sql .= \", 0\";\n\t\t\t$sql .= \", \".(int) $this->fk_incoterms;\n\t\t\t$sql .= \", '\".$this->db->escape($this->location_incoterms).\"'\";\n\t\t\t$sql .= \", \".(!empty($this->import_key) ? \"'\".$this->db->escape($this->import_key).\"'\" : \"null\");\n\t\t\t$sql .= \", \".(int) $this->fk_multicurrency;\n\t\t\t$sql .= \", '\".$this->db->escape($this->multicurrency_code).\"'\";\n\t\t\tif (empty($conf->global->MAIN_COMPANY_PERENTITY_SHARED)) {\n\t\t\t\t$sql .= \", '\" . $this->db->escape($this->accountancy_code_buy) . \"'\";\n\t\t\t\t$sql .= \", '\" . $this->db->escape($this->accountancy_code_sell) . \"'\";\n\t\t\t}\n\t\t\t$sql .= \")\";\n\n\t\t\tdol_syslog(get_class($this).\"::create\", LOG_DEBUG);\n\t\t\t$result = $this->db->query($sql);\n\t\t\tif ($result) {\n\t\t\t\t$this->id = $this->db->last_insert_id(MAIN_DB_PREFIX.\"societe\");\n\n\t\t\t\t$ret = $this->update($this->id, $user, 0, 1, 1, 'add');\n\n\t\t\t\t// update accountancy for this entity\n\t\t\t\tif (!$error && !empty($conf->global->MAIN_COMPANY_PERENTITY_SHARED)) {\n\t\t\t\t\t$this->db->query(\"DELETE FROM \" . MAIN_DB_PREFIX . \"societe_perentity WHERE fk_soc = \" . $this->id . \" AND entity = \" . $conf->entity);\n\n\t\t\t\t\t$sql = \"INSERT INTO \" . MAIN_DB_PREFIX . \"societe_perentity (\";\n\t\t\t\t\t$sql .= \" fk_soc\";\n\t\t\t\t\t$sql .= \", entity\";\n\t\t\t\t\t$sql .= \", accountancy_code_buy\";\n\t\t\t\t\t$sql .= \", accountancy_code_sell\";\n\t\t\t\t\t$sql .= \") VALUES (\";\n\t\t\t\t\t$sql .= $this->id;\n\t\t\t\t\t$sql .= \", \" . $conf->entity;\n\t\t\t\t\t$sql .= \", '\" . $this->db->escape($this->accountancy_code_buy) . \"'\";\n\t\t\t\t\t$sql .= \", '\" . $this->db->escape($this->accountancy_code_sell) . \"'\";\n\t\t\t\t\t$sql .= \")\";\n\t\t\t\t\t$result = $this->db->query($sql);\n\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t$this->error = 'ErrorFailedToUpdateAccountancyForEntity';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Ajout du commercial affecte\n\t\t\t\tif ($this->commercial_id != '' && $this->commercial_id != -1) {\n\t\t\t\t\t$this->add_commercial($user, $this->commercial_id);\n\t\t\t\t} elseif (empty($user->rights->societe->client->voir)) {\n\t\t\t\t\t// si un commercial cree un client il lui est affecte automatiquement\n\t\t\t\t\t$this->add_commercial($user, $user->id);\n\t\t\t\t}\n\n\t\t\t\tif ($ret >= 0) {\n\t\t\t\t\t// Call trigger\n\t\t\t\t\t$result = $this->call_trigger('COMPANY_CREATE', $user);\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t\t// End call triggers\n\t\t\t\t} else {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\n\t\t\t\tif (!$error) {\n\t\t\t\t\tdol_syslog(get_class($this).\"::Create success id=\".$this->id);\n\t\t\t\t\t$this->db->commit();\n\t\t\t\t\treturn $this->id;\n\t\t\t\t} else {\n\t\t\t\t\tdol_syslog(get_class($this).\"::Create echec update \".$this->error.(empty($this->errors) ? '' : ' '.join(',', $this->errors)), LOG_ERR);\n\t\t\t\t\t$this->db->rollback();\n\t\t\t\t\treturn -4;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($this->db->lasterrno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n\t\t\t\t\t$this->error = $langs->trans(\"ErrorCompanyNameAlreadyExists\", $this->name); // duplicate on a field (code or profid or ...)\n\t\t\t\t\t$result = -1;\n\t\t\t\t} else {\n\t\t\t\t\t$this->error = $this->db->lasterror();\n\t\t\t\t\t$result = -2;\n\t\t\t\t}\n\t\t\t\t$this->db->rollback();\n\t\t\t\treturn $result;\n\t\t\t}\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\tdol_syslog(get_class($this).\"::Create fails verify \".join(',', $this->errors), LOG_WARNING);\n\t\t\treturn -3;\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * Create a contact/address from thirdparty\n\t *\n\t * @param \tUser\t$user\t\tObject user\n\t * @param \tint\t\t$no_email\t1=Do not send mailing, 0=Ok to recieve mailling\n\t * @param \tarray\t$tags\t\tArray of tag to affect to contact\n\t * @return \tint\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function create_individual(User $user, $no_email = 0, $tags = array())\n\t{\n\t\tglobal $conf;\n\n\t\t$error = 0;\n\n\t\t$this->db->begin();\n\n\t\t// phpcs:enable\n\t\trequire_once DOL_DOCUMENT_ROOT.'/contact/class/contact.class.php';\n\t\t$contact = new Contact($this->db);\n\n\t\t$contact->name              = $this->name_bis;\n\t\t$contact->firstname         = $this->firstname;\n\t\t$contact->civility_id       = $this->civility_id;\n\t\t$contact->socid             = $this->id; // fk_soc\n\t\t$contact->statut            = 1; // deprecated\n\t\t$contact->status            = 1;\n\t\t$contact->priv              = 0;\n\t\t$contact->country_id        = $this->country_id;\n\t\t$contact->state_id          = $this->state_id;\n\t\t$contact->address           = $this->address;\n\t\t$contact->email             = $this->email;\n\t\t$contact->zip               = $this->zip;\n\t\t$contact->town              = $this->town;\n\t\t$this->setUpperOrLowerCase();\n\t\t$contact->phone_pro         = $this->phone;\n\n\t\t$contactId = $contact->create($user);\n\t\tif ($contactId < 0) {\n\t\t\t$error++;\n\t\t\t$this->error = $contact->error;\n\t\t\t$this->errors = $contact->errors;\n\t\t\tdol_syslog(get_class($this).\"::create_individual ERROR:\".$this->error, LOG_ERR);\n\t\t}\n\n\t\tif (empty($error) && is_array($tags) && !empty($tags)) {\n\t\t\t$result = $contact->setCategories($tags);\n\t\t\tif ($result < 0) {\n\t\t\t\t$error++;\n\t\t\t\t$this->error = $contact->error;\n\t\t\t\t$this->errors = array_merge($this->errors, $contact->errors);\n\t\t\t\tdol_syslog(get_class($this) . \"::create_individual Affect Tag ERROR:\" . $this->error, LOG_ERR);\n\t\t\t\t$contactId = $result;\n\t\t\t}\n\t\t}\n\n\t\tif (empty($error) && !empty($conf->mailing->enabled) && !empty($contact->email) && isset($no_email)) {\n\t\t\t$result = $contact->setNoEmail($no_email);\n\t\t\tif ($result < 0) {\n\t\t\t\t$this->error = $contact->error;\n\t\t\t\t$this->errors = array_merge($this->errors, $contact->errors);\n\t\t\t\tdol_syslog(get_class($this) . \"::create_individual set mailing status ERROR:\" . $this->error, LOG_ERR);\n\t\t\t\t$contactId = $result;\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($error)) {\n\t\t\tdol_syslog(get_class($this).\"::create_individual success\");\n\t\t\t$this->db->commit();\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t}\n\n\t\treturn $contactId;\n\t}\n\n\t/**\n\t *    Check properties of third party are ok (like name, third party codes, ...)\n\t *    Used before an add or update.\n\t *\n\t *    @return     int\t\t0 if OK, <0 if KO\n\t */\n\tpublic function verify()\n\t{\n\t\tglobal $conf, $langs, $mysoc;\n\n\t\t$error = 0;\n\t\t$this->errors = array();\n\n\t\t$result = 0;\n\t\t$this->name = trim($this->name);\n\t\t$this->nom = $this->name; // For backward compatibility\n\n\t\tif (!$this->name) {\n\t\t\t$this->errors[] = 'ErrorBadThirdPartyName';\n\t\t\t$result = -2;\n\t\t}\n\n\t\tif ($this->client) {\n\t\t\t$rescode = $this->check_codeclient();\n\t\t\tif ($rescode != 0 && $rescode != -5) {\n\t\t\t\tif ($rescode == -1) {\n\t\t\t\t\t$this->errors[] = 'ErrorBadCustomerCodeSyntax';\n\t\t\t\t} elseif ($rescode == -2) {\n\t\t\t\t\t$this->errors[] = 'ErrorCustomerCodeRequired';\n\t\t\t\t} elseif ($rescode == -3) {\n\t\t\t\t\t$this->errors[] = 'ErrorCustomerCodeAlreadyUsed';\n\t\t\t\t} elseif ($rescode == -4) {\n\t\t\t\t\t$this->errors[] = 'ErrorPrefixRequired';\n\t\t\t\t} else {\n\t\t\t\t\t$this->errors[] = 'ErrorUnknownOnCustomerCodeCheck';\n\t\t\t\t}\n\n\t\t\t\t$result = -3;\n\t\t\t}\n\t\t}\n\n\t\tif ($this->fournisseur) {\n\t\t\t$rescode = $this->check_codefournisseur();\n\t\t\tif ($rescode != 0 && $rescode != -5) {\n\t\t\t\tif ($rescode == -1) {\n\t\t\t\t\t$this->errors[] = 'ErrorBadSupplierCodeSyntax';\n\t\t\t\t} elseif ($rescode == -2) {\n\t\t\t\t\t$this->errors[] = 'ErrorSupplierCodeRequired';\n\t\t\t\t} elseif ($rescode == -3) {\n\t\t\t\t\t$this->errors[] = 'ErrorSupplierCodeAlreadyUsed';\n\t\t\t\t} elseif ($rescode == -4) {\n\t\t\t\t\t$this->errors[] = 'ErrorPrefixRequired';\n\t\t\t\t} else {\n\t\t\t\t\t$this->errors[] = 'ErrorUnknownOnSupplierCodeCheck';\n\t\t\t\t}\n\t\t\t\t$result = -3;\n\t\t\t}\n\t\t}\n\n\t\t// Check for duplicate or mandatory fields defined into setup\n\t\t$array_to_check = array('IDPROF1', 'IDPROF2', 'IDPROF3', 'IDPROF4', 'IDPROF5', 'IDPROF6', 'EMAIL');\n\t\tforeach ($array_to_check as $key) {\n\t\t\t$keymin = strtolower($key);\n\t\t\t$i = (int) preg_replace('/[^0-9]/', '', $key);\n\t\t\t$vallabel = $this->$keymin;\n\n\t\t\tif ($i > 0) {\n\t\t\t\tif ($this->isACompany()) {\n\t\t\t\t\t// Check for mandatory prof id (but only if country is same than ours)\n\t\t\t\t\tif ($mysoc->country_id > 0 && $this->country_id == $mysoc->country_id) {\n\t\t\t\t\t\t$idprof_mandatory = 'SOCIETE_'.$key.'_MANDATORY';\n\t\t\t\t\t\tif (!$vallabel && !empty($conf->global->$idprof_mandatory)) {\n\t\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t$this->errors[] = $langs->trans(\"ErrorProdIdIsMandatory\", $langs->transcountry('ProfId'.$i, $this->country_code)).' ('.$langs->trans(\"ForbiddenBySetupRules\").')';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check for unicity on profid\n\t\t\t\tif (!$error && $vallabel && $this->id_prof_verifiable($i)) {\n\t\t\t\t\tif ($this->id_prof_exists($keymin, $vallabel, ($this->id > 0 ? $this->id : 0))) {\n\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t$this->errors[] = $langs->transcountry('ProfId'.$i, $this->country_code).\" \".$langs->trans(\"ErrorProdIdAlreadyExist\", $vallabel).' ('.$langs->trans(\"ForbiddenBySetupRules\").')';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//var_dump($conf->global->SOCIETE_EMAIL_UNIQUE);\n\t\t\t\t//var_dump($conf->global->SOCIETE_EMAIL_MANDATORY);\n\t\t\t\tif ($key == 'EMAIL') {\n\t\t\t\t\t// Check for mandatory\n\t\t\t\t\tif (!empty($conf->global->SOCIETE_EMAIL_MANDATORY) && !isValidEMail($this->email)) {\n\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t$this->errors[] = $langs->trans(\"ErrorBadEMail\", $this->email).' ('.$langs->trans(\"ForbiddenBySetupRules\").')';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check for unicity\n\t\t\t\t\tif (!$error && $vallabel && !empty($conf->global->SOCIETE_EMAIL_UNIQUE)) {\n\t\t\t\t\t\tif ($this->id_prof_exists($keymin, $vallabel, ($this->id > 0 ? $this->id : 0))) {\n\t\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\t\t$error++; $this->errors[] = $langs->trans('Email').\" \".$langs->trans(\"ErrorProdIdAlreadyExist\", $vallabel).' ('.$langs->trans(\"ForbiddenBySetupRules\").')';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($error) {\n\t\t\t$result = -4;\n\t\t}\n\n\t\treturn $result;\n\t}\n\n\t/**\n\t *      Update parameters of third party\n\t *\n\t *      @param\tint\t\t$id              \t\t\tId of company (deprecated, use 0 here and call update on an object loaded by a fetch)\n\t *      @param  User\t$user            \t\t\tUser who requests the update\n\t *      @param  int\t\t$call_trigger    \t\t\t0=no, 1=yes\n\t *\t\t@param\tint\t\t$allowmodcodeclient\t\t\tInclut modif code client et code compta\n\t *\t\t@param\tint\t\t$allowmodcodefournisseur\tInclut modif code fournisseur et code compta fournisseur\n\t *\t\t@param\tstring\t$action\t\t\t\t\t\t'add' or 'update' or 'merge'\n\t *\t\t@param\tint\t\t$nosyncmember\t\t\t\tDo not synchronize info of linked member\n\t *      @return int  \t\t\t           \t\t\t<0 if KO, >=0 if OK\n\t */\n\tpublic function update($id, $user = '', $call_trigger = 1, $allowmodcodeclient = 0, $allowmodcodefournisseur = 0, $action = 'update', $nosyncmember = 1)\n\t{\n\t\tglobal $langs, $conf, $hookmanager;\n\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\n\t\tif (empty($id)) {\n\t\t\t$id = $this->id;\n\t\t}\n\n\t\t$error = 0;\n\n\t\tdol_syslog(get_class($this).\"::Update id=\".$id.\" call_trigger=\".$call_trigger.\" allowmodcodeclient=\".$allowmodcodeclient.\" allowmodcodefournisseur=\".$allowmodcodefournisseur);\n\n\t\t$now = dol_now();\n\n\t\t// Clean parameters\n\t\t$this->id = $id;\n\t\t$this->entity = ((isset($this->entity) && is_numeric($this->entity)) ? $this->entity : $conf->entity);\n\t\t$this->name = $this->name ?trim($this->name) : trim($this->nom);\n\t\t$this->nom = $this->name; // For backward compatibility\n\t\t$this->name_alias = trim($this->name_alias);\n\t\t$this->ref_ext\t\t= trim($this->ref_ext);\n\t\t$this->address\t\t= $this->address ?trim($this->address) : trim($this->address);\n\t\t$this->zip = $this->zip ?trim($this->zip) : trim($this->zip);\n\t\t$this->town = $this->town ?trim($this->town) : trim($this->town);\n\t\t$this->setUpperOrLowerCase();\n\t\t$this->state_id = trim($this->state_id);\n\t\t$this->country_id = ($this->country_id > 0) ? $this->country_id : 0;\n\t\t$this->phone\t\t= trim($this->phone);\n\t\t$this->phone\t\t= preg_replace(\"/\\s/\", \"\", $this->phone);\n\t\t$this->phone\t\t= preg_replace(\"/\\./\", \"\", $this->phone);\n\t\t$this->fax\t\t\t= trim($this->fax);\n\t\t$this->fax\t\t\t= preg_replace(\"/\\s/\", \"\", $this->fax);\n\t\t$this->fax\t\t\t= preg_replace(\"/\\./\", \"\", $this->fax);\n\t\t$this->email = trim($this->email);\n\t\t$this->url\t\t\t= $this->url ?clean_url($this->url, 0) : '';\n\t\t$this->note_private = trim($this->note_private);\n\t\t$this->note_public  = trim($this->note_public);\n\t\t$this->idprof1\t\t= trim($this->idprof1);\n\t\t$this->idprof2\t\t= trim($this->idprof2);\n\t\t$this->idprof3\t\t= trim($this->idprof3);\n\t\t$this->idprof4\t\t= trim($this->idprof4);\n\t\t$this->idprof5\t\t= (!empty($this->idprof5) ?trim($this->idprof5) : '');\n\t\t$this->idprof6\t\t= (!empty($this->idprof6) ?trim($this->idprof6) : '');\n\t\t$this->prefix_comm = trim($this->prefix_comm);\n\t\t$this->outstanding_limit = price2num($this->outstanding_limit);\n\t\t$this->order_min_amount = price2num($this->order_min_amount);\n\t\t$this->supplier_order_min_amount = price2num($this->supplier_order_min_amount);\n\n\t\t$this->tva_assuj\t= trim($this->tva_assuj);\n\t\t$this->tva_intra\t= dol_sanitizeFileName($this->tva_intra, '');\n\t\tif (empty($this->status)) {\n\t\t\t$this->status = 0;\n\t\t}\n\n\t\tif (!empty($this->multicurrency_code)) {\n\t\t\t$this->fk_multicurrency = MultiCurrency::getIdFromCode($this->db, $this->multicurrency_code);\n\t\t}\n\t\tif (empty($this->fk_multicurrency)) {\n\t\t\t$this->multicurrency_code = '';\n\t\t\t$this->fk_multicurrency = 0;\n\t\t}\n\n\t\t// Local taxes\n\t\t$this->localtax1_assuj = trim($this->localtax1_assuj);\n\t\t$this->localtax2_assuj = trim($this->localtax2_assuj);\n\n\t\t$this->localtax1_value = trim($this->localtax1_value);\n\t\t$this->localtax2_value = trim($this->localtax2_value);\n\n\t\tif ($this->capital != '') {\n\t\t\t$this->capital = price2num(trim($this->capital));\n\t\t}\n\t\tif (!is_numeric($this->capital)) {\n\t\t\t$this->capital = ''; // '' = undef\n\t\t}\n\n\t\t$this->effectif_id = trim($this->effectif_id);\n\t\t$this->forme_juridique_code = trim($this->forme_juridique_code);\n\n\t\t//Gencod\n\t\t$this->barcode = trim($this->barcode);\n\n\t\t// For automatic creation\n\t\tif ($this->code_client == -1 || $this->code_client === 'auto') {\n\t\t\t$this->get_codeclient($this, 0);\n\t\t}\n\t\tif ($this->code_fournisseur == -1 || $this->code_fournisseur === 'auto') {\n\t\t\t$this->get_codefournisseur($this, 1);\n\t\t}\n\n\t\t$this->code_compta = trim($this->code_compta);\n\t\t$this->code_compta_fournisseur = trim($this->code_compta_fournisseur);\n\n\t\t// Check parameters. More tests are done later in the ->verify()\n\t\tif (!is_numeric($this->client) && !is_numeric($this->fournisseur)) {\n\t\t\t$langs->load(\"errors\");\n\t\t\t$this->error = $langs->trans(\"BadValueForParameterClientOrSupplier\");\n\t\t\treturn -1;\n\t\t}\n\n\t\t$customer = false;\n\t\tif (!empty($allowmodcodeclient) && !empty($this->client)) {\n\t\t\t// Attention get_codecompta peut modifier le code suivant le module utilise\n\t\t\tif (empty($this->code_compta)) {\n\t\t\t\t$ret = $this->get_codecompta('customer');\n\t\t\t\tif ($ret < 0) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$customer = true;\n\t\t}\n\n\t\t$supplier = false;\n\t\tif (!empty($allowmodcodefournisseur) && !empty($this->fournisseur)) {\n\t\t\t// Attention get_codecompta peut modifier le code suivant le module utilise\n\t\t\tif ($this->code_compta_fournisseur == \"\") {\n\t\t\t\t$ret = $this->get_codecompta('supplier');\n\t\t\t\tif ($ret < 0) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$supplier = true;\n\t\t}\n\n\t\t//Web services\n\t\t$this->webservices_url = $this->webservices_url ?clean_url($this->webservices_url, 0) : '';\n\t\t$this->webservices_key = trim($this->webservices_key);\n\n\t\t$this->accountancy_code_buy = trim($this->accountancy_code_buy);\n\t\t$this->accountancy_code_sell= trim($this->accountancy_code_sell);\n\n\t\t//Incoterms\n\t\t$this->fk_incoterms = (int) $this->fk_incoterms;\n\t\t$this->location_incoterms = trim($this->location_incoterms);\n\n\t\t$this->db->begin();\n\n\t\t// Check name is required and codes are ok or unique.\n\t\t// If error, this->errors[] is filled\n\t\t$result = 0;\n\t\tif ($action != 'add' && $action != 'merge') {\n\t\t\t// We don't check when update called during a create because verify was already done.\n\t\t\t// For a merge, we suppose source data is clean and a customer code of a deleted thirdparty must be accepted into a target thirdparty with empty code without duplicate error\n\t\t\t$result = $this->verify();\n\n\t\t\t// If there is only one error and error is ErrorBadCustomerCodeSyntax and we don't change customer code, we allow the update\n\t\t\t// So we can update record that were using and old numbering rule.\n\t\t\tif (is_array($this->errors)) {\n\t\t\t\tif (in_array('ErrorBadCustomerCodeSyntax', $this->errors) && is_object($this->oldcopy) && $this->oldcopy->code_client == $this->code_client) {\n\t\t\t\t\tif (($key = array_search('ErrorBadCustomerCodeSyntax', $this->errors)) !== false) {\n\t\t\t\t\t\tunset($this->errors[$key]); // Remove error message\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (in_array('ErrorBadSupplierCodeSyntax', $this->errors) && is_object($this->oldcopy) && $this->oldcopy->code_fournisseur == $this->code_fournisseur) {\n\t\t\t\t\tif (($key = array_search('ErrorBadSupplierCodeSyntax', $this->errors)) !== false) {\n\t\t\t\t\t\tunset($this->errors[$key]); // Remove error message\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (empty($this->errors)) {\t// If there is no more error, we can make like if there is no error at all\n\t\t\t\t\t$result = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($result >= 0) {\n\t\t\tdol_syslog(get_class($this).\"::update verify ok or not done\");\n\n\t\t\t$sql  = \"UPDATE \".MAIN_DB_PREFIX.\"societe SET \";\n\t\t\t$sql .= \"entity = \".$this->db->escape($this->entity);\n\t\t\t$sql .= \",nom = '\".$this->db->escape($this->name).\"'\"; // Required\n\t\t\t$sql .= \",name_alias = '\".$this->db->escape($this->name_alias).\"'\";\n\t\t\t$sql .= \",ref_ext = \".(!empty($this->ref_ext) ? \"'\".$this->db->escape($this->ref_ext).\"'\" : \"null\");\n\t\t\t$sql .= \",address = '\".$this->db->escape($this->address).\"'\";\n\n\t\t\t$sql .= \",zip = \".(!empty($this->zip) ? \"'\".$this->db->escape($this->zip).\"'\" : \"null\");\n\t\t\t$sql .= \",town = \".(!empty($this->town) ? \"'\".$this->db->escape($this->town).\"'\" : \"null\");\n\n\t\t\t$sql .= \",fk_departement = \".((!empty($this->state_id) && $this->state_id > 0) ? ((int) $this->state_id) : 'null');\n\t\t\t$sql .= \",fk_pays = \".((!empty($this->country_id) && $this->country_id > 0) ? ((int) $this->country_id) : 'null');\n\n\t\t\t$sql .= \",phone = \".(!empty($this->phone) ? \"'\".$this->db->escape($this->phone).\"'\" : \"null\");\n\t\t\t$sql .= \",fax = \".(!empty($this->fax) ? \"'\".$this->db->escape($this->fax).\"'\" : \"null\");\n\t\t\t$sql .= \",email = \".(!empty($this->email) ? \"'\".$this->db->escape($this->email).\"'\" : \"null\");\n\t\t\t$sql .= \",socialnetworks = '\".$this->db->escape(json_encode($this->socialnetworks)).\"'\";\n\t\t\t$sql .= \",url = \".(!empty($this->url) ? \"'\".$this->db->escape($this->url).\"'\" : \"null\");\n\n\t\t\t$sql .= \",parent = \".($this->parent > 0 ? $this->parent : \"null\");\n\n\t\t\t$sql .= \",note_private = \".(!empty($this->note_private) ? \"'\".$this->db->escape($this->note_private).\"'\" : \"null\");\n\t\t\t$sql .= \",note_public = \".(!empty($this->note_public) ? \"'\".$this->db->escape($this->note_public).\"'\" : \"null\");\n\n\t\t\t$sql .= \",siren   = '\".$this->db->escape($this->idprof1).\"'\";\n\t\t\t$sql .= \",siret   = '\".$this->db->escape($this->idprof2).\"'\";\n\t\t\t$sql .= \",ape     = '\".$this->db->escape($this->idprof3).\"'\";\n\t\t\t$sql .= \",idprof4 = '\".$this->db->escape($this->idprof4).\"'\";\n\t\t\t$sql .= \",idprof5 = '\".$this->db->escape($this->idprof5).\"'\";\n\t\t\t$sql .= \",idprof6 = '\".$this->db->escape($this->idprof6).\"'\";\n\n\t\t\t$sql .= \",tva_assuj = \".($this->tva_assuj != '' ? \"'\".$this->db->escape($this->tva_assuj).\"'\" : \"null\");\n\t\t\t$sql .= \",tva_intra = '\".$this->db->escape($this->tva_intra).\"'\";\n\t\t\t$sql .= \",status = \".((int) $this->status);\n\n\t\t\t// Local taxes\n\t\t\t$sql .= \",localtax1_assuj = \".($this->localtax1_assuj != '' ? \"'\".$this->db->escape($this->localtax1_assuj).\"'\" : \"null\");\n\t\t\t$sql .= \",localtax2_assuj = \".($this->localtax2_assuj != '' ? \"'\".$this->db->escape($this->localtax2_assuj).\"'\" : \"null\");\n\t\t\tif ($this->localtax1_assuj == 1) {\n\t\t\t\tif ($this->localtax1_value != '') {\n\t\t\t\t\t$sql .= \",localtax1_value =\".$this->localtax1_value;\n\t\t\t\t} else {\n\t\t\t\t\t$sql .= \",localtax1_value =0.000\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$sql .= \",localtax1_value =0.000\";\n\t\t\t}\n\n\t\t\tif ($this->localtax2_assuj == 1) {\n\t\t\t\tif ($this->localtax2_value != '') {\n\t\t\t\t\t$sql .= \",localtax2_value =\".$this->localtax2_value;\n\t\t\t\t} else {\n\t\t\t\t\t$sql .= \",localtax2_value =0.000\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$sql .= \",localtax2_value =0.000\";\n\t\t\t}\n\n\t\t\t$sql .= \",capital = \".($this->capital == '' ? \"null\" : $this->capital);\n\n\t\t\t$sql .= \",prefix_comm = \".(!empty($this->prefix_comm) ? \"'\".$this->db->escape($this->prefix_comm).\"'\" : \"null\");\n\n\t\t\t$sql .= \",fk_effectif = \".(!empty($this->effectif_id) ? \"'\".$this->db->escape($this->effectif_id).\"'\" : \"null\");\n\t\t\tif (isset($this->stcomm_id)) {\n\t\t\t\t$sql .= \",fk_stcomm=\".(!empty($this->stcomm_id) ? $this->stcomm_id : \"0\");\n\t\t\t}\n\t\t\t$sql .= \",fk_typent = \".(!empty($this->typent_id) ? \"'\".$this->db->escape($this->typent_id).\"'\" : \"0\");\n\n\t\t\t$sql .= \",fk_forme_juridique = \".(!empty($this->forme_juridique_code) ? \"'\".$this->db->escape($this->forme_juridique_code).\"'\" : \"null\");\n\n\t\t\t$sql .= \",mode_reglement = \".(!empty($this->mode_reglement_id) ? \"'\".$this->db->escape($this->mode_reglement_id).\"'\" : \"null\");\n\t\t\t$sql .= \",cond_reglement = \".(!empty($this->cond_reglement_id) ? \"'\".$this->db->escape($this->cond_reglement_id).\"'\" : \"null\");\n\t\t\t$sql .= \",transport_mode = \".(!empty($this->transport_mode_id) ? \"'\".$this->db->escape($this->transport_mode_id).\"'\" : \"null\");\n\t\t\t$sql .= \",mode_reglement_supplier = \".(!empty($this->mode_reglement_supplier_id) ? \"'\".$this->db->escape($this->mode_reglement_supplier_id).\"'\" : \"null\");\n\t\t\t$sql .= \",cond_reglement_supplier = \".(!empty($this->cond_reglement_supplier_id) ? \"'\".$this->db->escape($this->cond_reglement_supplier_id).\"'\" : \"null\");\n\t\t\t$sql .= \",transport_mode_supplier = \".(!empty($this->transport_mode_supplier_id) ? \"'\".$this->db->escape($this->transport_mode_supplier_id).\"'\" : \"null\");\n\t\t\t$sql .= \",fk_shipping_method = \".(!empty($this->shipping_method_id) ? \"'\".$this->db->escape($this->shipping_method_id).\"'\" : \"null\");\n\n\t\t\t$sql .= \",client = \".(!empty($this->client) ? $this->client : 0);\n\t\t\t$sql .= \",fournisseur = \".(!empty($this->fournisseur) ? $this->fournisseur : 0);\n\t\t\t$sql .= \",barcode = \".(!empty($this->barcode) ? \"'\".$this->db->escape($this->barcode).\"'\" : \"null\");\n\t\t\t$sql .= \",default_lang = \".(!empty($this->default_lang) ? \"'\".$this->db->escape($this->default_lang).\"'\" : \"null\");\n\t\t\t$sql .= \",logo = \".(!empty($this->logo) ? \"'\".$this->db->escape($this->logo).\"'\" : \"null\");\n\t\t\t$sql .= \",logo_squarred = \".(!empty($this->logo_squarred) ? \"'\".$this->db->escape($this->logo_squarred).\"'\" : \"null\");\n\t\t\t$sql .= \",outstanding_limit= \".($this->outstanding_limit != '' ? $this->outstanding_limit : 'null');\n\t\t\t$sql .= \",order_min_amount= \".($this->order_min_amount != '' ? $this->order_min_amount : 'null');\n\t\t\t$sql .= \",supplier_order_min_amount= \".($this->supplier_order_min_amount != '' ? $this->supplier_order_min_amount : 'null');\n\t\t\t$sql .= \",fk_prospectlevel='\".$this->db->escape($this->fk_prospectlevel).\"'\";\n\t\t\tif (empty($conf->global->MAIN_COMPANY_PERENTITY_SHARED)) {\n\t\t\t\t$sql .= \", accountancy_code_buy = '\" . $this->db->escape($this->accountancy_code_buy) . \"'\";\n\t\t\t\t$sql .= \", accountancy_code_sell= '\" . $this->db->escape($this->accountancy_code_sell) . \"'\";\n\t\t\t}\n\t\t\t$sql .= \",webservices_url = \".(!empty($this->webservices_url) ? \"'\".$this->db->escape($this->webservices_url).\"'\" : \"null\");\n\t\t\t$sql .= \",webservices_key = \".(!empty($this->webservices_key) ? \"'\".$this->db->escape($this->webservices_key).\"'\" : \"null\");\n\n\t\t\t//Incoterms\n\t\t\t$sql .= \", fk_incoterms = \".((int) $this->fk_incoterms);\n\t\t\t$sql .= \", location_incoterms = \".(!empty($this->location_incoterms) ? \"'\".$this->db->escape($this->location_incoterms).\"'\" : \"null\");\n\n\t\t\tif ($customer) {\n\t\t\t\t$sql .= \", code_client = \".(!empty($this->code_client) ? \"'\".$this->db->escape($this->code_client).\"'\" : \"null\");\n\t\t\t\t$sql .= \", code_compta = \".(!empty($this->code_compta) ? \"'\".$this->db->escape($this->code_compta).\"'\" : \"null\");\n\t\t\t}\n\n\t\t\tif ($supplier) {\n\t\t\t\t$sql .= \", code_fournisseur = \".(!empty($this->code_fournisseur) ? \"'\".$this->db->escape($this->code_fournisseur).\"'\" : \"null\");\n\t\t\t\t$sql .= \", code_compta_fournisseur = \".(($this->code_compta_fournisseur != \"\") ? \"'\".$this->db->escape($this->code_compta_fournisseur).\"'\" : \"null\");\n\t\t\t}\n\t\t\t$sql .= \", fk_user_modif = \".($user->id > 0 ? $user->id : \"null\");\n\t\t\t$sql .= \", fk_multicurrency = \".(int) $this->fk_multicurrency;\n\t\t\t$sql .= \", multicurrency_code = '\".$this->db->escape($this->multicurrency_code).\"'\";\n\t\t\t$sql .= \", model_pdf = '\".$this->db->escape($this->model_pdf).\"'\";\n\t\t\t$sql .= \" WHERE rowid = \".(int) $id;\n\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\tif (is_object($this->oldcopy)) {\t// If we have information on old values\n\t\t\t\t\tif ($this->oldcopy->country_id != $this->country_id) {\n\t\t\t\t\t\tunset($this->country_code);\n\t\t\t\t\t\tunset($this->country);\n\t\t\t\t\t}\n\t\t\t\t\tif ($this->oldcopy->state_id != $this->state_id) {\n\t\t\t\t\t\tunset($this->state_code);\n\t\t\t\t\t\tunset($this->state);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tunset($this->country_code); // We clean this, in the doubt, because it may have been changed after an update of country_id\n\t\t\t\t\tunset($this->country);\n\t\t\t\t\tunset($this->state_code);\n\t\t\t\t\tunset($this->state);\n\t\t\t\t}\n\n\t\t\t\t$nbrowsaffected = $this->db->affected_rows($resql);\n\n\t\t\t\tif (!$error && $nbrowsaffected) {\n\t\t\t\t\t// Update information on linked member if it is an update\n\t\t\t\t\tif (!$nosyncmember && !empty($conf->adherent->enabled)) {\n\t\t\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\n\n\t\t\t\t\t\tdol_syslog(get_class($this).\"::update update linked member\");\n\n\t\t\t\t\t\t$lmember = new Adherent($this->db);\n\t\t\t\t\t\t$result = $lmember->fetch(0, 0, $this->id);\n\n\t\t\t\t\t\tif ($result > 0) {\n\t\t\t\t\t\t\t$lmember->company = $this->name;\n\t\t\t\t\t\t\t//$lmember->firstname=$this->firstname?$this->firstname:$lmember->firstname;\t// We keep firstname and lastname of member unchanged\n\t\t\t\t\t\t\t//$lmember->lastname=$this->lastname?$this->lastname:$lmember->lastname;\t\t// We keep firstname and lastname of member unchanged\n\t\t\t\t\t\t\t$lmember->address = $this->address;\n\t\t\t\t\t\t\t$lmember->zip = $this->zip;\n\t\t\t\t\t\t\t$lmember->town = $this->town;\n\t\t\t\t\t\t\t$lmember->email = $this->email;\n\t\t\t\t\t\t\t$lmember->socialnetworks = $this->socialnetworks;\n\t\t\t\t\t\t\t$lmember->phone = $this->phone;\n\t\t\t\t\t\t\t$lmember->state_id = $this->state_id;\n\t\t\t\t\t\t\t$lmember->country_id = $this->country_id;\n\n\t\t\t\t\t\t\t$result = $lmember->update($user, 0, 1, 1, 1); // Use nosync to 1 to avoid cyclic updates\n\t\t\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t\t\t$this->error = $lmember->error;\n\t\t\t\t\t\t\t\t$this->errors = array_merge($this->errors, $lmember->errors);\n\t\t\t\t\t\t\t\tdol_syslog(get_class($this).\"::update \".$this->error, LOG_ERR);\n\t\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} elseif ($result < 0) {\n\t\t\t\t\t\t\t$this->error = $lmember->error;\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$action = 'update';\n\n\t\t\t\t// update accountancy for this entity\n\t\t\t\tif (!$error && !empty($conf->global->MAIN_COMPANY_PERENTITY_SHARED)) {\n\t\t\t\t\t$this->db->query(\"DELETE FROM \" . MAIN_DB_PREFIX . \"societe_perentity WHERE fk_soc = \" . $this->id . \" AND entity = \" . $conf->entity);\n\n\t\t\t\t\t$sql = \"INSERT INTO \" . MAIN_DB_PREFIX . \"societe_perentity (\";\n\t\t\t\t\t$sql .= \" fk_soc\";\n\t\t\t\t\t$sql .= \", entity\";\n\t\t\t\t\t$sql .= \", accountancy_code_buy\";\n\t\t\t\t\t$sql .= \", accountancy_code_sell\";\n\t\t\t\t\t$sql .= \") VALUES (\";\n\t\t\t\t\t$sql .= $this->id;\n\t\t\t\t\t$sql .= \", \" . $conf->entity;\n\t\t\t\t\t$sql .= \", '\" . $this->db->escape($this->accountancy_code_buy) . \"'\";\n\t\t\t\t\t$sql .= \", '\" . $this->db->escape($this->accountancy_code_sell) . \"'\";\n\t\t\t\t\t$sql .= \")\";\n\t\t\t\t\t$result = $this->db->query($sql);\n\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t$this->error = 'ErrorFailedToUpdateAccountancyForEntity';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Actions on extra fields\n\t\t\t\tif (!$error) {\n\t\t\t\t\t$result = $this->insertExtraFields();\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Actions on extra languages\n\t\t\t\tif (!$error && empty($conf->global->MAIN_EXTRALANGUAGES_DISABLED)) { // For avoid conflicts if trigger used\n\t\t\t\t\t$result = $this->insertExtraLanguages();\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error && $call_trigger) {\n\t\t\t\t\t// Call trigger\n\t\t\t\t\t$result = $this->call_trigger('COMPANY_MODIFY', $user);\n\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t}\n\t\t\t\t\t// End call triggers\n\t\t\t\t}\n\n\t\t\t\tif (!$error) {\n\t\t\t\t\tdol_syslog(get_class($this).\"::Update success\");\n\t\t\t\t\t$this->db->commit();\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\t$this->db->rollback();\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($this->db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n\t\t\t\t\t// Doublon\n\t\t\t\t\t$this->error = $langs->trans(\"ErrorDuplicateField\");\n\t\t\t\t\t$result = -1;\n\t\t\t\t} else {\n\t\t\t\t\t$this->error = $this->db->lasterror();\n\t\t\t\t\t$result = -2;\n\t\t\t\t}\n\t\t\t\t$this->db->rollback();\n\t\t\t\treturn $result;\n\t\t\t}\n\t\t} else {\n\t\t\t$this->db->rollback();\n\t\t\tdol_syslog(get_class($this).\"::Update fails verify \".join(',', $this->errors), LOG_WARNING);\n\t\t\treturn -3;\n\t\t}\n\t}\n\n\t/**\n\t *    Load a third party from database into memory\n\t *\n\t *    @param\tint\t\t$rowid\t\t\tId of third party to load\n\t *    @param    string\t$ref\t\t\tReference of third party, name (Warning, this can return several records)\n\t *    @param    string\t$ref_ext       \tExternal reference of third party (Warning, this information is a free field not provided by Dolibarr)\n\t *    @param    string\t$barcode       \tBarcode of third party to load\n\t *    @param    string\t$idprof1\t\tProf id 1 of third party (Warning, this can return several records)\n\t *    @param    string\t$idprof2\t\tProf id 2 of third party (Warning, this can return several records)\n\t *    @param    string\t$idprof3\t\tProf id 3 of third party (Warning, this can return several records)\n\t *    @param    string\t$idprof4\t\tProf id 4 of third party (Warning, this can return several records)\n\t *    @param    string\t$idprof5\t\tProf id 5 of third party (Warning, this can return several records)\n\t *    @param    string\t$idprof6\t\tProf id 6 of third party (Warning, this can return several records)\n\t *    @param    string\t$email   \t\tEmail of third party (Warning, this can return several records)\n\t *    @param    string\t$ref_alias \t\tName_alias of third party (Warning, this can return several records)\n\t *    @return   int\t\t\t\t\t\t>0 if OK, <0 if KO or if two records found for same ref or idprof, 0 if not found.\n\t */\n\tpublic function fetch($rowid, $ref = '', $ref_ext = '', $barcode = '', $idprof1 = '', $idprof2 = '', $idprof3 = '', $idprof4 = '', $idprof5 = '', $idprof6 = '', $email = '', $ref_alias = '')\n\t{\n\t\tglobal $langs;\n\t\tglobal $conf;\n\n\t\tif (empty($rowid) && empty($ref) && empty($ref_ext) && empty($barcode) && empty($idprof1) && empty($idprof2) && empty($idprof3) && empty($idprof4) && empty($idprof5) && empty($idprof6) && empty($email)) {\n\t\t\treturn -1;\n\t\t}\n\n\t\t$sql = 'SELECT s.rowid, s.nom as name, s.name_alias, s.entity, s.ref_ext, s.address, s.datec as date_creation, s.prefix_comm';\n\t\t$sql .= ', s.status, s.fk_warehouse';\n\t\t$sql .= ', s.price_level';\n\t\t$sql .= ', s.tms as date_modification, s.fk_user_creat, s.fk_user_modif';\n\t\t$sql .= ', s.phone, s.fax, s.email';\n\t\t$sql .= ', s.socialnetworks';\n\t\t$sql .= ', s.url, s.zip, s.town, s.note_private, s.note_public, s.model_pdf, s.client, s.fournisseur';\n\t\t$sql .= ', s.siren as idprof1, s.siret as idprof2, s.ape as idprof3, s.idprof4, s.idprof5, s.idprof6';\n\t\t$sql .= ', s.capital, s.tva_intra';\n\t\t$sql .= ', s.fk_typent as typent_id';\n\t\t$sql .= ', s.fk_effectif as effectif_id';\n\t\t$sql .= ', s.fk_forme_juridique as forme_juridique_code';\n\t\t$sql .= ', s.webservices_url, s.webservices_key, s.model_pdf';\n\t\tif (empty($conf->global->MAIN_COMPANY_PERENTITY_SHARED)) {\n\t\t\t$sql .= ', s.accountancy_code_buy, s.accountancy_code_sell';\n\t\t} else {\n\t\t\t$sql .= ', spe.accountancy_code_buy, spe.accountancy_code_sell';\n\t\t}\n\t\t$sql .= ', s.code_client, s.code_fournisseur, s.code_compta, s.code_compta_fournisseur, s.parent, s.barcode';\n\t\t$sql .= ', s.fk_departement as state_id, s.fk_pays as country_id, s.fk_stcomm, s.mode_reglement, s.cond_reglement, s.transport_mode';\n\t\t$sql .= ', s.fk_account, s.tva_assuj';\n\t\t$sql .= ', s.mode_reglement_supplier, s.cond_reglement_supplier, s.transport_mode_supplier';\n\t\t$sql .= ', s.localtax1_assuj, s.localtax1_value, s.localtax2_assuj, s.localtax2_value, s.fk_prospectlevel, s.default_lang, s.logo, s.logo_squarred';\n\t\t$sql .= ', s.fk_shipping_method';\n\t\t$sql .= ', s.outstanding_limit, s.import_key, s.canvas, s.fk_incoterms, s.location_incoterms';\n\t\t$sql .= ', s.order_min_amount, s.supplier_order_min_amount';\n\t\t$sql .= ', s.fk_multicurrency, s.multicurrency_code';\n\t\t$sql .= ', fj.libelle as forme_juridique';\n\t\t$sql .= ', e.libelle as effectif';\n\t\t$sql .= ', c.code as country_code, c.label as country';\n\t\t$sql .= ', d.code_departement as state_code, d.nom as state';\n\t\t$sql .= ', r.rowid as region_id, r.code_region as region_code';\n\t\t$sql .= ', st.libelle as stcomm, st.picto as stcomm_picto';\n\t\t$sql .= ', te.code as typent_code';\n\t\t$sql .= ', i.libelle as label_incoterms';\n\t\tif (empty($conf->multicompany->enabled)) {\n\t\t\t$sql .= ', s.remise_client, s.remise_supplier';\n\t\t} else {\n\t\t\t$sql .= ', sr.remise_client, sr2.remise_supplier';\n\t\t}\n\t\t$sql .= ' FROM '.MAIN_DB_PREFIX.'societe as s';\n\t\tif (!empty($conf->global->MAIN_COMPANY_PERENTITY_SHARED)) {\n\t\t\t$sql .= \" LEFT JOIN \" . MAIN_DB_PREFIX . \"societe_perentity as spe ON spe.fk_soc = s.rowid AND spe.entity = \" . ((int) $conf->entity);\n\t\t}\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_effectif as e ON s.fk_effectif = e.id';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_country as c ON s.fk_pays = c.rowid';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_stcomm as st ON s.fk_stcomm = st.id';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_forme_juridique as fj ON s.fk_forme_juridique = fj.code';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_departements as d ON s.fk_departement = d.rowid';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_regions as r ON d.fk_region = r.code_region ';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_typent as te ON s.fk_typent = te.id';\n\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'c_incoterms as i ON s.fk_incoterms = i.rowid';\n\t\t// With default setup, llx_societe_remise is a history table in default setup and current value is in llx_societe.\n\t\t// We use it for real value when multicompany is on. A better place would be into llx_societe_perentity.\n\t\tif (!empty($conf->multicompany->enabled)) {\n\t\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'societe_remise as sr ON sr.rowid = (SELECT MAX(rowid) FROM '.MAIN_DB_PREFIX.'societe_remise WHERE fk_soc = s.rowid AND entity IN ('.getEntity('discount').'))';\n\t\t\t$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'societe_remise_supplier as sr2 ON sr2.rowid = (SELECT MAX(rowid) FROM '.MAIN_DB_PREFIX.'societe_remise_supplier WHERE fk_soc = s.rowid AND entity IN ('.getEntity('discount').'))';\n\t\t}\n\t\t$sql .= ' WHERE s.entity IN ('.getEntity($this->element).')';\n\t\tif ($rowid) {\n\t\t\t$sql .= ' AND s.rowid = '.((int) $rowid);\n\t\t}\n\t\tif ($ref) {\n\t\t\t$sql .= \" AND s.nom = '\".$this->db->escape($ref).\"'\";\n\t\t}\n\t\tif ($ref_alias) {\n\t\t\t$sql .= \" AND s.name_alias = '\".$this->db->escape($ref_alias).\"'\";\n\t\t}\n\t\tif ($ref_ext) {\n\t\t\t$sql .= \" AND s.ref_ext = '\".$this->db->escape($ref_ext).\"'\";\n\t\t}\n\t\tif ($barcode) {\n\t\t\t$sql .= \" AND s.barcode = '\".$this->db->escape($barcode).\"'\";\n\t\t}\n\t\tif ($idprof1) {\n\t\t\t$sql .= \" AND s.siren = '\".$this->db->escape($idprof1).\"'\";\n\t\t}\n\t\tif ($idprof2) {\n\t\t\t$sql .= \" AND s.siret = '\".$this->db->escape($idprof2).\"'\";\n\t\t}\n\t\tif ($idprof3) {\n\t\t\t$sql .= \" AND s.ape = '\".$this->db->escape($idprof3).\"'\";\n\t\t}\n\t\tif ($idprof4) {\n\t\t\t$sql .= \" AND s.idprof4 = '\".$this->db->escape($idprof4).\"'\";\n\t\t}\n\t\tif ($idprof5) {\n\t\t\t$sql .= \" AND s.idprof5 = '\".$this->db->escape($idprof5).\"'\";\n\t\t}\n\t\tif ($idprof6) {\n\t\t\t$sql .= \" AND s.idprof6 = '\".$this->db->escape($idprof6).\"'\";\n\t\t}\n\t\tif ($email) {\n\t\t\t$sql .= \" AND s.email = '\".$this->db->escape($email).\"'\";\n\t\t}\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\tif ($num > 1) {\n\t\t\t\t$this->error = 'Fetch found several records. Rename one of thirdparties to avoid duplicate.';\n\t\t\t\tdol_syslog($this->error, LOG_ERR);\n\t\t\t\t$result = -2;\n\t\t\t} elseif ($num) {   // $num = 1\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t$this->id           = $obj->rowid;\n\t\t\t\t$this->entity       = $obj->entity;\n\t\t\t\t$this->canvas = $obj->canvas;\n\n\t\t\t\t$this->ref          = $obj->rowid;\n\t\t\t\t$this->name = $obj->name;\n\t\t\t\t$this->nom          = $obj->name; // deprecated\n\t\t\t\t$this->name_alias = $obj->name_alias;\n\t\t\t\t$this->ref_ext      = $obj->ref_ext;\n\n\t\t\t\t$this->date_creation     = $this->db->jdate($obj->date_creation);\n\t\t\t\t$this->date_modification = $this->db->jdate($obj->date_modification);\n\t\t\t\t$this->user_creation     = $obj->fk_user_creat;\n\t\t\t\t$this->user_modification = $obj->fk_user_modif;\n\n\t\t\t\t$this->address = $obj->address;\n\t\t\t\t$this->zip \t\t\t= $obj->zip;\n\t\t\t\t$this->town \t\t= $obj->town;\n\n\t\t\t\t$this->country_id   = $obj->country_id;\n\t\t\t\t$this->country_code = $obj->country_id ? $obj->country_code : '';\n\t\t\t\t$this->country = $obj->country_id ? ($langs->transnoentities('Country'.$obj->country_code) != 'Country'.$obj->country_code ? $langs->transnoentities('Country'.$obj->country_code) : $obj->country) : '';\n\n\t\t\t\t$this->state_id     = $obj->state_id;\n\t\t\t\t$this->state_code   = $obj->state_code;\n\t\t\t\t$this->region_id    = $obj->region_id;\n\t\t\t\t$this->region_code   = $obj->region_code;\n\t\t\t\t$this->state        = ($obj->state != '-' ? $obj->state : '');\n\n\t\t\t\t$transcode = $langs->trans('StatusProspect'.$obj->fk_stcomm);\n\t\t\t\t$label = ($transcode != 'StatusProspect'.$obj->fk_stcomm ? $transcode : $obj->stcomm);\n\t\t\t\t$this->stcomm_id = $obj->fk_stcomm; // id status prospect\n\t\t\t\t$this->status_prospect_label = $label; // label status prospect\n\t\t\t\t$this->stcomm_picto = $obj->stcomm_picto; // picto statut commercial\n\n\t\t\t\t$this->email = $obj->email;\n\t\t\t\t$this->socialnetworks = (array) json_decode($obj->socialnetworks, true);\n\n\t\t\t\t$this->url = $obj->url;\n\t\t\t\t$this->phone = $obj->phone;\n\t\t\t\t$this->fax = $obj->fax;\n\n\t\t\t\t$this->parent = $obj->parent;\n\n\t\t\t\t$this->idprof1\t\t= $obj->idprof1;\n\t\t\t\t$this->idprof2\t\t= $obj->idprof2;\n\t\t\t\t$this->idprof3\t\t= $obj->idprof3;\n\t\t\t\t$this->idprof4\t\t= $obj->idprof4;\n\t\t\t\t$this->idprof5\t\t= $obj->idprof5;\n\t\t\t\t$this->idprof6\t\t= $obj->idprof6;\n\n\t\t\t\t$this->capital = $obj->capital;\n\n\t\t\t\t$this->code_client = $obj->code_client;\n\t\t\t\t$this->code_fournisseur = $obj->code_fournisseur;\n\n\t\t\t\t$this->code_compta = $obj->code_compta;\n\t\t\t\t$this->code_compta_fournisseur = $obj->code_compta_fournisseur;\n\n\t\t\t\t$this->barcode = $obj->barcode;\n\n\t\t\t\t$this->tva_assuj      = $obj->tva_assuj;\n\t\t\t\t$this->tva_intra      = $obj->tva_intra;\n\t\t\t\t$this->status = $obj->status;\n\n\t\t\t\t// Local Taxes\n\t\t\t\t$this->localtax1_assuj      = $obj->localtax1_assuj;\n\t\t\t\t$this->localtax2_assuj      = $obj->localtax2_assuj;\n\n\t\t\t\t$this->localtax1_value\t\t= $obj->localtax1_value;\n\t\t\t\t$this->localtax2_value\t\t= $obj->localtax2_value;\n\n\t\t\t\t$this->typent_id      = $obj->typent_id;\n\t\t\t\t$this->typent_code    = $obj->typent_code;\n\n\t\t\t\t$this->effectif_id    = $obj->effectif_id;\n\t\t\t\t$this->effectif       = $obj->effectif_id ? $obj->effectif : '';\n\n\t\t\t\t$this->forme_juridique_code = $obj->forme_juridique_code;\n\t\t\t\t$this->forme_juridique = $obj->forme_juridique_code ? $obj->forme_juridique : '';\n\n\t\t\t\t$this->fk_prospectlevel = $obj->fk_prospectlevel;\n\n\t\t\t\t$this->prefix_comm = $obj->prefix_comm;\n\n\t\t\t\t$this->remise_percent = $obj->remise_client ? price2num($obj->remise_client) : 0; // 0.000000 must be 0\n\t\t\t\t$this->remise_supplier_percent = $obj->remise_supplier;\n\n\t\t\t\t$this->mode_reglement_id \t= $obj->mode_reglement;\n\t\t\t\t$this->cond_reglement_id \t= $obj->cond_reglement;\n\t\t\t\t$this->transport_mode_id \t= $obj->transport_mode;\n\t\t\t\t$this->mode_reglement_supplier_id \t= $obj->mode_reglement_supplier;\n\t\t\t\t$this->cond_reglement_supplier_id \t= $obj->cond_reglement_supplier;\n\t\t\t\t$this->transport_mode_supplier_id = $obj->transport_mode_supplier;\n\t\t\t\t$this->shipping_method_id = ($obj->fk_shipping_method > 0) ? $obj->fk_shipping_method : null;\n\t\t\t\t$this->fk_account = $obj->fk_account;\n\n\t\t\t\t$this->client = $obj->client;\n\t\t\t\t$this->fournisseur = $obj->fournisseur;\n\n\t\t\t\t$this->note = $obj->note_private; // TODO Deprecated for backward comtability\n\t\t\t\t$this->note_private = $obj->note_private;\n\t\t\t\t$this->note_public = $obj->note_public;\n\t\t\t\t$this->model_pdf = $obj->model_pdf;\n\t\t\t\t$this->modelpdf = $obj->model_pdf; // deprecated\n\t\t\t\t$this->default_lang = $obj->default_lang;\n\t\t\t\t$this->logo = $obj->logo;\n\t\t\t\t$this->logo_squarred = $obj->logo_squarred;\n\n\t\t\t\t$this->webservices_url = $obj->webservices_url;\n\t\t\t\t$this->webservices_key = $obj->webservices_key;\n\n\t\t\t\t$this->accountancy_code_buy     = $obj->accountancy_code_buy;\n\t\t\t\t$this->accountancy_code_sell    = $obj->accountancy_code_sell;\n\n\t\t\t\t$this->outstanding_limit\t\t= $obj->outstanding_limit;\n\t\t\t\t$this->order_min_amount\t\t\t= $obj->order_min_amount;\n\t\t\t\t$this->supplier_order_min_amount = $obj->supplier_order_min_amount;\n\n\t\t\t\t// multiprix\n\t\t\t\t$this->price_level = $obj->price_level;\n\n\t\t\t\t// warehouse\n\t\t\t\t$this->fk_warehouse = $obj->fk_warehouse;\n\n\t\t\t\t$this->import_key = $obj->import_key;\n\n\t\t\t\t//Incoterms\n\t\t\t\t$this->fk_incoterms = $obj->fk_incoterms;\n\t\t\t\t$this->location_incoterms = $obj->location_incoterms;\n\t\t\t\t$this->label_incoterms = $obj->label_incoterms;\n\n\t\t\t\t// multicurrency\n\t\t\t\t$this->fk_multicurrency = $obj->fk_multicurrency;\n\t\t\t\t$this->multicurrency_code = $obj->multicurrency_code;\n\t\t\t\t$this->model_pdf = $obj->model_pdf;\n\n\t\t\t\t$result = 1;\n\n\t\t\t\t// fetch optionals attributes and labels\n\t\t\t\t$this->fetch_optionals();\n\t\t\t} else {\n\t\t\t\t$result = 0;\n\t\t\t}\n\n\t\t\t$this->db->free($resql);\n\t\t} else {\n\t\t\t$this->error = $this->db->lasterror();\n\t\t\t$this->errors[] = $this->db->lasterror();\n\t\t\t$result = -3;\n\t\t}\n\n\t\t// Use first price level if level not defined for third party\n\t\tif ((!empty($conf->global->PRODUIT_MULTIPRICES) || !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES)) && empty($this->price_level)) {\n\t\t\t$this->price_level = 1;\n\t\t}\n\n\t\treturn $result;\n\t}\n\n\t/**\n\t *    Delete a third party from database and all its dependencies (contacts, rib...)\n\t *\n\t *    @param\tint\t\t$id             Id of third party to delete\n\t *    @param    User    $fuser          User who ask to delete thirdparty\n\t *    @param    int\t\t$call_trigger   0=No, 1=yes\n\t *    @return\tint\t\t\t\t\t\t<0 if KO, 0 if nothing done, >0 if OK\n\t */\n\tpublic function delete($id, User $fuser = null, $call_trigger = 1)\n\t{\n\t\tglobal $langs, $conf, $user;\n\n\t\tif (empty($fuser)) {\n\t\t\t$fuser = $user;\n\t\t}\n\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t\t$entity = isset($this->entity) ? $this->entity : $conf->entity;\n\n\t\tdol_syslog(get_class($this).\"::delete\", LOG_DEBUG);\n\t\t$error = 0;\n\n\t\t// Test if child exists\n\t\t$objectisused = $this->isObjectUsed($id);\n\t\tif (empty($objectisused)) {\n\t\t\t$this->db->begin();\n\n\t\t\t// User is mandatory for trigger call\n\t\t\tif (!$error && $call_trigger) {\n\t\t\t\t// Call trigger\n\t\t\t\t$result = $this->call_trigger('COMPANY_DELETE', $fuser);\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t\t// End call triggers\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n\t\t\t\t$static_cat = new Categorie($this->db);\n\t\t\t\t$toute_categs = array();\n\n\t\t\t\t// Fill $toute_categs array with an array of (type => array of (\"Categorie\" instance))\n\t\t\t\tif ($this->client || $this->prospect) {\n\t\t\t\t\t$toute_categs['customer'] = $static_cat->containing($this->id, Categorie::TYPE_CUSTOMER);\n\t\t\t\t}\n\t\t\t\tif ($this->fournisseur) {\n\t\t\t\t\t$toute_categs['supplier'] = $static_cat->containing($this->id, Categorie::TYPE_SUPPLIER);\n\t\t\t\t}\n\n\t\t\t\t// Remove each \"Categorie\"\n\t\t\t\tforeach ($toute_categs as $type => $categs_type) {\n\t\t\t\t\tforeach ($categs_type as $cat) {\n\t\t\t\t\t\t$cat->del_type($this, $type);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\tforeach ($this->childtablesoncascade as $tabletodelete) {\n\t\t\t\t\t$deleteFromObject = explode(':', $tabletodelete);\n\t\t\t\t\tif (count($deleteFromObject) >= 2) {\n\t\t\t\t\t\t$className = str_replace('@', '', $deleteFromObject[0]);\n\t\t\t\t\t\t$filepath = $deleteFromObject[1];\n\t\t\t\t\t\t$columnName = $deleteFromObject[2];\n\t\t\t\t\t\tif (dol_include_once($filepath)) {\n\t\t\t\t\t\t\t$child_object = new $className($this->db);\n\t\t\t\t\t\t\t$result = $child_object->deleteByParentField($id, $columnName);\n\t\t\t\t\t\t\tif ($result < 0) {\n\t\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t\t$this->errors[] = $child_object->error;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t$this->errors[] = 'Cannot include child class file '.$filepath;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$sql = \"DELETE FROM \".MAIN_DB_PREFIX.$tabletodelete;\n\t\t\t\t\t\t$sql .= \" WHERE fk_soc = \".((int) $id);\n\t\t\t\t\t\tif (!$this->db->query($sql)) {\n\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t$this->errors[] = $this->db->lasterror();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Removed extrafields\n\t\t\tif (!$error) {\n\t\t\t\t$result = $this->deleteExtraFields();\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t\tdol_syslog(get_class($this).\"::delete error -3 \".$this->error, LOG_ERR);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove links to subsidiaries companies\n\t\t\tif (!$error) {\n\t\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"societe\";\n\t\t\t\t$sql .= \" SET parent = NULL\";\n\t\t\t\t$sql .= \" WHERE parent = \".((int) $id);\n\t\t\t\tif (!$this->db->query($sql)) {\n\t\t\t\t\t$error++;\n\t\t\t\t\t$this->errors[] = $this->db->lasterror();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove third party\n\t\t\tif (!$error) {\n\t\t\t\t$sql = \"DELETE FROM \".MAIN_DB_PREFIX.\"societe\";\n\t\t\t\t$sql .= \" WHERE rowid = \".((int) $id);\n\t\t\t\tif (!$this->db->query($sql)) {\n\t\t\t\t\t$error++;\n\t\t\t\t\t$this->errors[] = $this->db->lasterror();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\t$this->db->commit();\n\n\t\t\t\t// Delete directory\n\t\t\t\tif (!empty($conf->societe->multidir_output[$entity])) {\n\t\t\t\t\t$docdir = $conf->societe->multidir_output[$entity].\"/\".$id;\n\t\t\t\t\tif (dol_is_dir($docdir)) {\n\t\t\t\t\t\tdol_delete_dir_recursive($docdir);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\tdol_syslog($this->error, LOG_ERR);\n\t\t\t\t$this->db->rollback();\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_syslog(\"Can't remove thirdparty with id \".$id.\". There is \".$objectisused.\" childs\", LOG_WARNING);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Define third party as a customer\n\t *\n\t *\t@return\t\tint\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function set_as_client()\n\t{\n\t\t// phpcs:enable\n\t\tif ($this->id) {\n\t\t\t$newclient = 1;\n\t\t\tif ($this->client == 2 || $this->client == 3) {\n\t\t\t\t$newclient = 3; //If prospect, we keep prospect tag\n\t\t\t}\n\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"societe\";\n\t\t\t$sql .= \" SET client = \".((int) $newclient);\n\t\t\t$sql .= \" WHERE rowid = \".$this->id;\n\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$this->client = $newclient;\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Defines the company as a customer\n\t *\n\t *  @param\tfloat\t$remise\t\tValue in % of the discount\n\t *  @param  string\t$note\t\tNote/Reason for changing the discount\n\t *  @param  User\t$user\t\tUser who sets the discount\n\t *\t@return\tint\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function set_remise_client($remise, $note, User $user)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs;\n\n\t\t// Parameter cleaning\n\t\t$note = trim($note);\n\t\tif (!$note) {\n\t\t\t$this->error = $langs->trans(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"NoteReason\"));\n\t\t\treturn -2;\n\t\t}\n\n\t\tdol_syslog(get_class($this).\"::set_remise_client \".$remise.\", \".$note.\", \".$user->id);\n\n\t\tif ($this->id) {\n\t\t\t$this->db->begin();\n\n\t\t\t$now = dol_now();\n\n\t\t\t// Position current discount\n\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"societe \";\n\t\t\t$sql .= \" SET remise_client = '\".$this->db->escape($remise).\"'\";\n\t\t\t$sql .= \" WHERE rowid = \".$this->id;\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\t$this->db->rollback();\n\t\t\t\t$this->error = $this->db->error();\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// Writes trace in discount history\n\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"societe_remise\";\n\t\t\t$sql .= \" (entity, datec, fk_soc, remise_client, note, fk_user_author)\";\n\t\t\t$sql .= \" VALUES (\".$conf->entity.\", '\".$this->db->idate($now).\"', \".((int) $this->id).\", '\".$this->db->escape($remise).\"',\";\n\t\t\t$sql .= \" '\".$this->db->escape($note).\"',\";\n\t\t\t$sql .= \" \".((int) $user->id);\n\t\t\t$sql .= \")\";\n\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\t$this->db->rollback();\n\t\t\t\t$this->error = $this->db->lasterror();\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t$this->db->commit();\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Defines the company as a customer\n\t *\n\t *  @param\tfloat\t$remise\t\tValue in % of the discount\n\t *  @param  string\t$note\t\tNote/Reason for changing the discount\n\t *  @param  User\t$user\t\tUser who sets the discount\n\t *\t@return\tint\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function set_remise_supplier($remise, $note, User $user)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs;\n\n\t\t// Parameter cleaning\n\t\t$note = trim($note);\n\t\tif (!$note) {\n\t\t\t$this->error = $langs->trans(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"NoteReason\"));\n\t\t\treturn -2;\n\t\t}\n\n\t\tdol_syslog(get_class($this).\"::set_remise_supplier \".$remise.\", \".$note.\", \".$user->id);\n\n\t\tif ($this->id) {\n\t\t\t$this->db->begin();\n\n\t\t\t$now = dol_now();\n\n\t\t\t// Position current discount\n\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"societe \";\n\t\t\t$sql .= \" SET remise_supplier = '\".$this->db->escape($remise).\"'\";\n\t\t\t$sql .= \" WHERE rowid = \".$this->id;\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\t$this->db->rollback();\n\t\t\t\t$this->error = $this->db->error();\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// Writes trace in discount history\n\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"societe_remise_supplier\";\n\t\t\t$sql .= \" (entity, datec, fk_soc, remise_supplier, note, fk_user_author)\";\n\t\t\t$sql .= \" VALUES (\".$conf->entity.\", '\".$this->db->idate($now).\"', \".((int) $this->id).\", '\".$this->db->escape($remise).\"',\";\n\t\t\t$sql .= \" '\".$this->db->escape($note).\"',\";\n\t\t\t$sql .= \" \".((int) $user->id);\n\t\t\t$sql .= \")\";\n\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif (!$resql) {\n\t\t\t\t$this->db->rollback();\n\t\t\t\t$this->error = $this->db->lasterror();\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t$this->db->commit();\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    \tAdd a discount for third party\n\t *\n\t *    \t@param\tfloat\t$remise     \tAmount of discount\n\t *    \t@param  User\t$user       \tUser adding discount\n\t *    \t@param  string\t$desc\t\t\tReason of discount\n\t *      @param  string\t$vatrate     \tVAT rate (may contain the vat code too). Exemple: '1.23', '1.23 (ABC)', ...\n\t *      @param\tint\t\t$discount_type\t0 => customer discount, 1 => supplier discount\n\t *\t\t@return\tint\t\t\t\t\t\t<0 if KO, id of discount record if OK\n\t */\n\tpublic function set_remise_except($remise, User $user, $desc, $vatrate = '', $discount_type = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t// Clean parameters\n\t\t$remise = price2num($remise);\n\t\t$desc = trim($desc);\n\n\t\t// Check parameters\n\t\tif (!$remise > 0) {\n\t\t\t$this->error = $langs->trans(\"ErrorWrongValueForParameter\", \"1\");\n\t\t\treturn -1;\n\t\t}\n\t\tif (!$desc) {\n\t\t\t$this->error = $langs->trans(\"ErrorWrongValueForParameter\", \"3\");\n\t\t\treturn -2;\n\t\t}\n\n\t\tif ($this->id > 0) {\n\t\t\t// Clean vat code\n\t\t\t$reg = array();\n\t\t\t$vat_src_code = '';\n\t\t\tif (preg_match('/\\((.*)\\)/', $vatrate, $reg)) {\n\t\t\t\t$vat_src_code = $reg[1];\n\t\t\t\t$vatrate = preg_replace('/\\s*\\(.*\\)/', '', $vatrate); // Remove code into vatrate.\n\t\t\t}\n\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/discount.class.php';\n\n\t\t\t$discount = new DiscountAbsolute($this->db);\n\t\t\t$discount->fk_soc = $this->id;\n\n\t\t\t$discount->discount_type = $discount_type;\n\n\t\t\t$discount->amount_ht = $discount->multicurrency_amount_ht = price2num($remise, 'MT');\n\t\t\t$discount->amount_tva = $discount->multicurrency_amount_tva = price2num($remise * $vatrate / 100, 'MT');\n\t\t\t$discount->amount_ttc = $discount->multicurrency_amount_ttc = price2num($discount->amount_ht + $discount->amount_tva, 'MT');\n\n\t\t\t$discount->tva_tx = price2num($vatrate);\n\t\t\t$discount->vat_src_code = $vat_src_code;\n\n\t\t\t$discount->description = $desc;\n\n\t\t\t$result = $discount->create($user);\n\t\t\tif ($result > 0) {\n\t\t\t\treturn $result;\n\t\t\t} else {\n\t\t\t\t$this->error = $discount->error;\n\t\t\t\treturn -3;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * \tReturns amount of included taxes of the current discounts/credits available from the company\n\t *\n\t *\t@param\tUser\t$user\t\t\tFilter on a user author of discounts\n\t * \t@param\tstring\t$filter\t\t\tOther filter\n\t * \t@param\tinteger\t$maxvalue\t\tFilter on max value for discount\n\t * \t@param\tint\t\t$discount_type\t0 => customer discount, 1 => supplier discount\n\t *\t@return\tint\t\t\t\t\t<0 if KO, Credit note amount otherwise\n\t */\n\tpublic function getAvailableDiscounts($user = '', $filter = '', $maxvalue = 0, $discount_type = 0)\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/discount.class.php';\n\n\t\t$discountstatic = new DiscountAbsolute($this->db);\n\t\t$result = $discountstatic->getAvailableDiscounts($this, $user, $filter, $maxvalue, $discount_type);\n\t\tif ($result >= 0) {\n\t\t\treturn $result;\n\t\t} else {\n\t\t\t$this->error = $discountstatic->error;\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *  Return array of sales representatives\n\t *\n\t *  @param\tUser\t\t$user\t\t\tObject user\n\t *  @param\tint\t\t\t$mode\t\t\t0=Array with properties, 1=Array of id.\n\t *  @param\tstring\t\t$sortfield\t\tList of sort fields, separated by comma. Example: 't1.fielda,t2.fieldb'\n\t *  @param\tstring\t\t$sortorder\t\tSort order, separated by comma. Example: 'ASC,DESC';\n\t *  @return array       \t\t\t\tArray of sales representatives of third party\n\t */\n\tpublic function getSalesRepresentatives(User $user, $mode = 0, $sortfield = null, $sortorder = null)\n\t{\n\t\tglobal $conf;\n\n\t\t$reparray = array();\n\n\t\t$sql = \"SELECT DISTINCT u.rowid, u.login, u.lastname, u.firstname, u.office_phone, u.job, u.email, u.statut as status, u.entity, u.photo, u.gender\";\n\t\t$sql .= \", u.office_fax, u.user_mobile, u.personal_mobile\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"societe_commerciaux as sc, \".MAIN_DB_PREFIX.\"user as u\";\n\t\tif (!empty($conf->multicompany->enabled) && !empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE)) {\n\t\t\t$sql .= \", \".MAIN_DB_PREFIX.\"usergroup_user as ug\";\n\t\t\t$sql .= \" WHERE ((ug.fk_user = sc.fk_user\";\n\t\t\t$sql .= \" AND ug.entity = \".$conf->entity.\")\";\n\t\t\t$sql .= \" OR u.admin = 1)\";\n\t\t} else {\n\t\t\t$sql .= \" WHERE entity in (0, \".$conf->entity.\")\";\n\t\t}\n\n\t\t$sql .= \" AND u.rowid = sc.fk_user AND sc.fk_soc = \".$this->id;\n\t\tif (empty($sortfield) && empty($sortorder)) {\n\t\t\t$sortfield = 'u.lastname,u.firstname';\n\t\t\t$sortorder = 'ASC,ASC';\n\t\t}\n\t\t$sql .= $this->db->order($sortfield, $sortorder);\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\tif (empty($mode)) {\n\t\t\t\t\t$reparray[$i]['id'] = $obj->rowid;\n\t\t\t\t\t$reparray[$i]['lastname'] = $obj->lastname;\n\t\t\t\t\t$reparray[$i]['firstname'] = $obj->firstname;\n\t\t\t\t\t$reparray[$i]['email'] = $obj->email;\n\t\t\t\t\t$reparray[$i]['phone'] = $obj->office_phone;\n\t\t\t\t\t$reparray[$i]['office_phone'] = $obj->office_phone;\n\t\t\t\t\t$reparray[$i]['office_fax'] = $obj->office_fax;\n\t\t\t\t\t$reparray[$i]['user_mobile'] = $obj->user_mobile;\n\t\t\t\t\t$reparray[$i]['personal_mobile'] = $obj->personal_mobile;\n\t\t\t\t\t$reparray[$i]['job'] = $obj->job;\n\t\t\t\t\t$reparray[$i]['statut'] = $obj->status; // deprecated\n\t\t\t\t\t$reparray[$i]['status'] = $obj->status;\n\t\t\t\t\t$reparray[$i]['entity'] = $obj->entity;\n\t\t\t\t\t$reparray[$i]['login'] = $obj->login;\n\t\t\t\t\t$reparray[$i]['photo'] = $obj->photo;\n\t\t\t\t\t$reparray[$i]['gender'] = $obj->gender;\n\t\t\t\t} else {\n\t\t\t\t\t$reparray[] = $obj->rowid;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\treturn $reparray;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t * Set the price level\n\t *\n\t * @param \tint\t\t$price_level\tLevel of price\n\t * @param \tUser\t$user\t\t\tUse making change\n\t * @return\tint\t\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function setPriceLevel($price_level, User $user)\n\t{\n\t\tif ($this->id) {\n\t\t\t$now = dol_now();\n\n\t\t\t$sql  = \"UPDATE \".MAIN_DB_PREFIX.\"societe\";\n\t\t\t$sql .= \" SET price_level = \".((int) $price_level);\n\t\t\t$sql .= \" WHERE rowid = \".((int) $this->id);\n\n\t\t\tif (!$this->db->query($sql)) {\n\t\t\t\tdol_print_error($this->db);\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t$sql  = \"INSERT INTO \".MAIN_DB_PREFIX.\"societe_prices\";\n\t\t\t$sql .= \" (datec, fk_soc, price_level, fk_user_author)\";\n\t\t\t$sql .= \" VALUES ('\".$this->db->idate($now).\"', \".$this->id.\", \".((int) $price_level).\", \".$user->id.\")\";\n\n\t\t\tif (!$this->db->query($sql)) {\n\t\t\t\tdol_print_error($this->db);\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 1;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tAdd link to sales representative\n\t *\n\t *\t@param\tUser\t$user\t\tObject user\n\t *\t@param\tint\t\t$commid\t\tId of user\n\t *\t@return\tint\t\t\t\t\t<=0 if KO, >0 if OK\n\t */\n\tpublic function add_commercial(User $user, $commid)\n\t{\n\t\t// phpcs:enable\n\t\t$error = 0;\n\n\t\tif ($this->id > 0 && $commid > 0) {\n\t\t\t$this->db->begin();\n\n\t\t\tif (!$error) {\n\t\t\t\t$sql = \"DELETE FROM  \".MAIN_DB_PREFIX.\"societe_commerciaux\";\n\t\t\t\t$sql .= \" WHERE fk_soc = \".$this->id.\" AND fk_user = \".((int) $commid);\n\n\t\t\t\t$resql = $this->db->query($sql);\n\t\t\t\tif (!$resql) {\n\t\t\t\t\tdol_syslog(get_class($this).\"::add_commercial Error \".$this->db->lasterror());\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"societe_commerciaux\";\n\t\t\t\t$sql .= \" (fk_soc, fk_user)\";\n\t\t\t\t$sql .= \" VALUES (\".$this->id.\", \".$commid.\")\";\n\n\t\t\t\t$resql = $this->db->query($sql);\n\t\t\t\tif (!$resql) {\n\t\t\t\t\tdol_syslog(get_class($this).\"::add_commercial Error \".$this->db->lasterror());\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\t$this->context = array('commercial_modified'=>$commid);\n\n\t\t\t\t$result = $this->call_trigger('COMPANY_LINK_SALE_REPRESENTATIVE', $user);\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$error) {\n\t\t\t\t$this->db->commit();\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\t$this->db->rollback();\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *\tAdd link to sales representative\n\t *\n\t *\t@param\tUser\t$user\t\tObject user\n\t *\t@param\tint\t\t$commid\t\tId of user\n\t *\t@return\tvoid\n\t */\n\tpublic function del_commercial(User $user, $commid)\n\t{\n\t\t// phpcs:enable\n\t\t$error = 0;\n\t\t$this->context = array('commercial_modified'=>$commid);\n\n\t\t$result = $this->call_trigger('COMPANY_UNLINK_SALE_REPRESENTATIVE', $user);\n\t\tif ($result < 0) {\n\t\t\t$error++;\n\t\t}\n\n\t\tif ($this->id > 0 && $commid > 0) {\n\t\t\t$sql  = \"DELETE FROM  \".MAIN_DB_PREFIX.\"societe_commerciaux \";\n\t\t\t$sql .= \" WHERE fk_soc = \".$this->id.\" AND fk_user = \".((int) $commid);\n\n\t\t\tif (!$this->db->query($sql)) {\n\t\t\t\tdol_syslog(get_class($this).\"::del_commercial Erreur\");\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t *    \tReturn a link on thirdparty (with picto)\n\t *\n\t *\t\t@param\tint\t\t$withpicto\t\t          Add picto into link (0=No picto, 1=Include picto with link, 2=Picto only)\n\t *\t\t@param\tstring\t$option\t\t\t          Target of link ('', 'customer', 'prospect', 'supplier', 'project')\n\t *\t\t@param\tint\t\t$maxlen\t\t\t          Max length of name\n\t *      @param\tint  \t$notooltip\t\t          1=Disable tooltip\n\t *      @param  int     $save_lastsearch_value    -1=Auto, 0=No save of lastsearch_values when clicking, 1=Save lastsearch_values whenclicking\n\t *\t\t@return\tstring\t\t\t\t\t          String with URL\n\t */\n\tpublic function getNomUrl($withpicto = 0, $option = '', $maxlen = 0, $notooltip = 0, $save_lastsearch_value = -1)\n\t{\n\t\tglobal $conf, $langs, $hookmanager;\n\n\t\tif (!empty($conf->dol_no_mouse_hover)) {\n\t\t\t$notooltip = 1; // Force disable tooltips\n\t\t}\n\n\t\t$name = $this->name ? $this->name : $this->nom;\n\n\t\tif (!empty($conf->global->SOCIETE_ON_SEARCH_AND_LIST_GO_ON_CUSTOMER_OR_SUPPLIER_CARD)) {\n\t\t\tif (empty($option) && $this->client > 0) {\n\t\t\t\t$option = 'customer';\n\t\t\t}\n\t\t\tif (empty($option) && $this->fournisseur > 0) {\n\t\t\t\t$option = 'supplier';\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($conf->global->SOCIETE_ADD_REF_IN_LIST) && (!empty($withpicto))) {\n\t\t\t$code = '';\n\t\t\tif (($this->client) && (!empty($this->code_client)) && ($conf->global->SOCIETE_ADD_REF_IN_LIST == 1 || $conf->global->SOCIETE_ADD_REF_IN_LIST == 2)) {\n\t\t\t\t$code = $this->code_client.' - ';\n\t\t\t}\n\n\t\t\tif (($this->fournisseur) && (!empty($this->code_fournisseur)) && ($conf->global->SOCIETE_ADD_REF_IN_LIST == 1 || $conf->global->SOCIETE_ADD_REF_IN_LIST == 3)) {\n\t\t\t\t$code .= $this->code_fournisseur.' - ';\n\t\t\t}\n\n\t\t\tif ($code) {\n\t\t\t\tif ($conf->global->SOCIETE_ADD_REF_IN_LIST == 1) {\n\t\t\t\t\t$name = $code.' '.$name;\n\t\t\t\t} else {\n\t\t\t\t\t$name = $code;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($this->name_alias)) {\n\t\t\t$name .= ' ('.$this->name_alias.')';\n\t\t}\n\n\t\t$result = ''; $label = '';\n\t\t$linkstart = ''; $linkend = '';\n\n\t\tif (!empty($this->logo) && class_exists('Form')) {\n\t\t\t$label .= '<div class=\"photointooltip\">';\n\t\t\t$label .= Form::showphoto('societe', $this, 0, 40, 0, '', 'mini', 0); // Important, we must force height so image will have height tags and if image is inside a tooltip, the tooltip manager can calculate height and position correctly the tooltip.\n\t\t\t$label .= '</div><div style=\"clear: both;\"></div>';\n\t\t} elseif (!empty($this->logo_squarred) && class_exists('Form')) {\n\t\t\t/*$label.= '<div class=\"photointooltip\">';\n\t\t\t$label.= Form::showphoto('societe', $this, 0, 40, 0, 'photowithmargin', 'mini', 0);\t// Important, we must force height so image will have height tags and if image is inside a tooltip, the tooltip manager can calculate height and position correctly the tooltip.\n\t\t\t$label.= '</div><div style=\"clear: both;\"></div>';*/\n\t\t}\n\n\t\t$label .= '<div class=\"centpercent\">';\n\n\t\tif ($option == 'customer' || $option == 'compta' || $option == 'category') {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"Customer\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/comm/card.php?socid='.$this->id;\n\t\t} elseif ($option == 'prospect' && empty($conf->global->SOCIETE_DISABLE_PROSPECTS)) {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"Prospect\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/comm/card.php?socid='.$this->id;\n\t\t} elseif ($option == 'supplier' || $option == 'category_supplier') {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"Supplier\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/fourn/card.php?socid='.$this->id;\n\t\t} elseif ($option == 'agenda') {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"ThirdParty\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/societe/agenda.php?socid='.$this->id;\n\t\t} elseif ($option == 'project') {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"ThirdParty\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/societe/project.php?socid='.$this->id;\n\t\t} elseif ($option == 'margin') {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"ThirdParty\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/margin/tabs/thirdpartyMargins.php?socid='.$this->id.'&type=1';\n\t\t} elseif ($option == 'contact') {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"ThirdParty\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/societe/contact.php?socid='.$this->id;\n\t\t} elseif ($option == 'ban') {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"ThirdParty\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/societe/paymentmodes.php?socid='.$this->id;\n\t\t}\n\n\t\t// By default\n\t\tif (empty($linkstart)) {\n\t\t\t$label .= img_picto('', $this->picto).' <u class=\"paddingrightonly\">'.$langs->trans(\"ThirdParty\").'</u>';\n\t\t\t$linkstart = '<a href=\"'.DOL_URL_ROOT.'/societe/card.php?socid='.$this->id;\n\t\t}\n\t\tif (isset($this->status)) {\n\t\t\t$label .= ' '.$this->getLibStatut(5);\n\t\t}\n\n\t\tif (!empty($this->name)) {\n\t\t\t$label .= '<br><b>'.$langs->trans('Name').':</b> '.dol_escape_htmltag($this->name);\n\t\t\tif (!empty($this->name_alias)) {\n\t\t\t\t$label .= ' ('.dol_escape_htmltag($this->name_alias).')';\n\t\t\t}\n\t\t}\n\t\t$label .= '<br><b>'.$langs->trans('Email').':</b> '.$this->email;\n\t\tif (!empty($this->phone) || !empty($this->fax)) {\n\t\t\t$phonelist = array();\n\t\t\tif ($this->phone) {\n\t\t\t\t$phonelist[] = dol_print_phone($this->phone, $this->country_code, $this->id, 0, '', '&nbsp', 'phone');\n\t\t\t}\n\t\t\tif ($this->fax) {\n\t\t\t\t$phonelist[] = dol_print_phone($this->fax, $this->country_code, $this->id, 0, '', '&nbsp', 'fax');\n\t\t\t}\n\t\t\t$label .= '<br><b>'.$langs->trans('Phone').':</b> '.implode('&nbsp;', $phonelist);\n\t\t}\n\t\tif (!empty($this->address)) {\n\t\t\t$label .= '<br><b>'.$langs->trans(\"Address\").':</b> '.dol_format_address($this, 1, ' ', $langs);\t// Address + country\n\t\t} elseif (!empty($this->country_code)) {\n\t\t\t$label .= '<br><b>'.$langs->trans('Country').':</b> '.$this->country_code;\n\t\t}\n\t\tif (!empty($this->tva_intra) || (!empty($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP) && strpos($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP, 'vatnumber') !== false)) {\n\t\t\t$label .= '<br><b>'.$langs->trans('VATIntra').':</b> '.dol_escape_htmltag($this->tva_intra);\n\t\t}\n\t\tif (!empty($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP)) {\n\t\t\tif (strpos($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP, 'profid1') !== false) {\n\t\t\t\t$label .= '<br><b>'.$langs->trans('ProfId1'.$this->country_code).':</b> '.$this->idprof1;\n\t\t\t}\n\t\t\tif (strpos($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP, 'profid2') !== false) {\n\t\t\t\t$label .= '<br><b>'.$langs->trans('ProfId2'.$this->country_code).':</b> '.$this->idprof2;\n\t\t\t}\n\t\t\tif (strpos($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP, 'profid3') !== false) {\n\t\t\t\t$label .= '<br><b>'.$langs->trans('ProfId3'.$this->country_code).':</b> '.$this->idprof3;\n\t\t\t}\n\t\t\tif (strpos($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP, 'profid4') !== false) {\n\t\t\t\t$label .= '<br><b>'.$langs->trans('ProfId4'.$this->country_code).':</b> '.$this->idprof4;\n\t\t\t}\n\t\t\tif (strpos($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP, 'profid5') !== false) {\n\t\t\t\t$label .= '<br><b>'.$langs->trans('ProfId5'.$this->country_code).':</b> '.$this->idprof5;\n\t\t\t}\n\t\t\tif (strpos($conf->global->SOCIETE_SHOW_FIELD_IN_TOOLTIP, 'profid6') !== false) {\n\t\t\t\t$label .= '<br><b>'.$langs->trans('ProfId6'.$this->country_code).':</b> '.$this->idprof6;\n\t\t\t}\n\t\t}\n\t\tif (!empty($this->code_client) && ($this->client == 1 || $this->client == 3)) {\n\t\t\t$label .= '<br><b>'.$langs->trans('CustomerCode').':</b> '.$this->code_client;\n\t\t}\n\t\tif (!empty($this->code_fournisseur) && $this->fournisseur) {\n\t\t\t$label .= '<br><b>'.$langs->trans('SupplierCode').':</b> '.$this->code_fournisseur;\n\t\t}\n\t\tif (!empty($conf->accounting->enabled) && ($this->client == 1 || $this->client == 3)) {\n\t\t\t$label .= '<br><b>'.$langs->trans('CustomerAccountancyCode').':</b> '.($this->code_compta ? $this->code_compta : $this->code_compta_client);\n\t\t}\n\t\tif (!empty($conf->accounting->enabled) && $this->fournisseur) {\n\t\t\t$label .= '<br><b>'.$langs->trans('SupplierAccountancyCode').':</b> '.$this->code_compta_fournisseur;\n\t\t}\n\t\t$label .= '</div>';\n\n\t\t// Add type of canvas\n\t\t$linkstart .= (!empty($this->canvas) ? '&canvas='.$this->canvas : '');\n\t\t// Add param to save lastsearch_values or not\n\t\t$add_save_lastsearch_values = ($save_lastsearch_value == 1 ? 1 : 0);\n\t\tif ($save_lastsearch_value == -1 && preg_match('/list\\.php/', $_SERVER[\"PHP_SELF\"])) {\n\t\t\t$add_save_lastsearch_values = 1;\n\t\t}\n\t\tif ($add_save_lastsearch_values) {\n\t\t\t$linkstart .= '&save_lastsearch_values=1';\n\t\t}\n\t\t$linkstart .= '\"';\n\n\t\t$linkclose = '';\n\t\tif (empty($notooltip)) {\n\t\t\tif (!empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\t\t$label = $langs->trans(\"ShowCompany\");\n\t\t\t\t$linkclose .= ' alt=\"'.dol_escape_htmltag($label, 1).'\"';\n\t\t\t}\n\t\t\t$linkclose .= ' title=\"'.dol_escape_htmltag($label, 1).'\"';\n\t\t\t$linkclose .= ' class=\"classfortooltip refurl\"';\n\n\t\t\t/*\n\t\t\t$hookmanager->initHooks(array('thirdpartydao'));\n\t\t\t$parameters=array('id'=>$this->id);\n\t\t\t$reshook=$hookmanager->executeHooks('getnomurltooltip',$parameters,$this,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t\tif ($reshook > 0) $linkclose = $hookmanager->resPrint;\n\t\t\t*/\n\t\t}\n\t\t$linkstart .= $linkclose.'>';\n\t\t$linkend = '</a>';\n\n\t\tglobal $user;\n\t\tif (!$user->rights->societe->client->voir && $user->socid > 0 && $this->id != $user->socid) {\n\t\t\t$linkstart = '';\n\t\t\t$linkend = '';\n\t\t}\n\n\t\t$result .= $linkstart;\n\t\tif ($withpicto) {\n\t\t\t$result .= img_object(($notooltip ? '' : $label), ($this->picto ? $this->picto : 'generic'), ($notooltip ? (($withpicto != 2) ? 'class=\"paddingright\"' : '') : 'class=\"'.(($withpicto != 2) ? 'paddingright ' : '').'classfortooltip\"'), 0, 0, $notooltip ? 0 : 1);\n\t\t}\n\t\tif ($withpicto != 2) {\n\t\t\t$result .= dol_escape_htmltag($maxlen ? dol_trunc($name, $maxlen) : $name);\n\t\t}\n\t\t$result .= $linkend;\n\n\t\tglobal $action;\n\t\t$hookmanager->initHooks(array('thirdpartydao'));\n\t\t$parameters = array(\n\t\t\t'id'=>$this->id,\n\t\t\t'getnomurl'=>$result,\n\t\t\t'withpicto '=> $withpicto,\n\t\t\t'option'=> $option,\n\t\t\t'maxlen'=> $maxlen,\n\t\t\t'notooltip'=> $notooltip,\n\t\t\t'save_lastsearch_value'=> $save_lastsearch_value\n\t\t);\n\t\t$reshook = $hookmanager->executeHooks('getNomUrl', $parameters, $this, $action); // Note that $action and $object may have been modified by some hooks\n\t\tif ($reshook > 0) {\n\t\t\t$result = $hookmanager->resPrint;\n\t\t} else {\n\t\t\t$result .= $hookmanager->resPrint;\n\t\t}\n\n\t\treturn $result;\n\t}\n\n\t/**\n\t *    \tReturn link(s) on type of thirdparty (with picto)\n\t *\n\t *\t\t@param\tint\t\t$withpicto\t\t          Add picto into link (0=No picto, 1=Include picto with link, 2=Picto only)\n\t *\t\t@param\tstring\t$option\t\t\t\t\t  ''=All\n\t *      @param\tint  \t$notooltip\t\t          1=Disable tooltip\n\t *\t\t@return\tstring\t\t\t\t\t          String with URL\n\t */\n\tpublic function getTypeUrl($withpicto = 0, $option = '', $notooltip = 0)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$s = '';\n\t\tif (empty($option) || preg_match('/prospect/', $option)) {\n\t\t\tif (($this->client == 2 || $this->client == 3) && empty($conf->global->SOCIETE_DISABLE_PROSPECTS)) {\n\t\t\t\t$s .= '<a class=\"customer-back opacitymedium\" title=\"'.$langs->trans(\"Prospect\").'\" href=\"'.DOL_URL_ROOT.'/comm/card.php?socid='.$this->id.'\">'.dol_substr($langs->trans(\"Prospect\"), 0, 1).'</a>';\n\t\t\t}\n\t\t}\n\t\tif (empty($option) || preg_match('/customer/', $option)) {\n\t\t\tif (($this->client == 1 || $this->client == 3) && empty($conf->global->SOCIETE_DISABLE_CUSTOMERS)) {\n\t\t\t\t$s .= '<a class=\"customer-back\" title=\"'.$langs->trans(\"Customer\").'\" href=\"'.DOL_URL_ROOT.'/comm/card.php?socid='.$this->id.'\">'.dol_substr($langs->trans(\"Customer\"), 0, 1).'</a>';\n\t\t\t}\n\t\t}\n\t\tif (empty($option) || preg_match('/supplier/', $option)) {\n\t\t\tif (((!empty($conf->fournisseur->enabled) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD)) || !empty($conf->supplier_order->enabled) || !empty($conf->supplier_invoice->enabled)) && $this->fournisseur) {\n\t\t\t\t$s .= '<a class=\"vendor-back\" title=\"'.$langs->trans(\"Supplier\").'\" href=\"'.DOL_URL_ROOT.'/fourn/card.php?socid='.$this->id.'\">'.dol_substr($langs->trans(\"Supplier\"), 0, 1).'</a>';\n\t\t\t}\n\t\t}\n\t\treturn $s;\n\t}\n\n\n\t/**\n\t *    Return label of status (activity, closed)\n\t *\n\t *    @param  \tint\t\t$mode       0=long label, 1=short label, 2=Picto + short label, 3=Picto, 4=Picto + long label, 5=Short label + Picto, 6=Long label + Picto\n\t *    @return   string     \t   \t\tLabel of status\n\t */\n\tpublic function getLibStatut($mode = 0)\n\t{\n\t\treturn $this->LibStatut($this->status, $mode);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return the label of a given status\n\t *\n\t *  @param\tint\t\t$status         Status id\n\t *  @param\tint\t\t$mode           0=Long label, 1=Short label, 2=Picto + Short label, 3=Picto, 4=Picto + Long label, 5=Short label + Picto, 6=Long label + Picto\n\t *  @return\tstring          \t\tStatus label\n\t */\n\tpublic function LibStatut($status, $mode = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\t$langs->load('companies');\n\n\t\t$statusType = 'status4';\n\t\tif ($status == 0) {\n\t\t\t$statusType = 'status6';\n\t\t}\n\n\t\tif (empty($this->labelStatus) || empty($this->labelStatusShort)) {\n\t\t\t$this->labelStatus[0] = $langs->trans(\"ActivityCeased\");\n\t\t\t$this->labelStatus[1] = $langs->trans(\"InActivity\");\n\t\t\t$this->labelStatusShort[0] = $langs->trans(\"ActivityCeased\");\n\t\t\t$this->labelStatusShort[1] = $langs->trans(\"InActivity\");\n\t\t}\n\n\t\treturn dolGetStatus($this->labelStatus[$status], $this->labelStatusShort[$status], '', $statusType, $mode);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Return list of contacts emails existing for third party\n\t *\n\t *\t  @param\t  int\t\t$addthirdparty\t\t1=Add also a record for thirdparty email\n\t *    @return     array       \t\t\t\t\tArray of contacts emails\n\t */\n\tpublic function thirdparty_and_contact_email_array($addthirdparty = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$contact_emails = $this->contact_property_array('email', 1);\n\t\tif ($this->email && $addthirdparty) {\n\t\t\tif (empty($this->name)) {\n\t\t\t\t$this->name = $this->nom;\n\t\t\t}\n\t\t\t$contact_emails['thirdparty'] = $langs->transnoentitiesnoconv(\"ThirdParty\").': '.dol_trunc($this->name, 16).\" <\".$this->email.\">\";\n\t\t}\n\t\t//var_dump($contact_emails)\n\t\treturn $contact_emails;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Return list of contacts mobile phone existing for third party\n\t *\n\t *    @return     array       Array of contacts emails\n\t */\n\tpublic function thirdparty_and_contact_phone_array()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$contact_phone = $this->contact_property_array('mobile');\n\n\t\tif (!empty($this->phone)) {\t// If a phone of thirdparty is defined, we add it ot mobile of contacts\n\t\t\tif (empty($this->name)) {\n\t\t\t\t$this->name = $this->nom;\n\t\t\t}\n\t\t\t// TODO: Tester si tel non deja present dans tableau contact\n\t\t\t$contact_phone['thirdparty'] = $langs->transnoentitiesnoconv(\"ThirdParty\").': '.dol_trunc($this->name, 16).\" <\".$this->phone.\">\";\n\t\t}\n\t\treturn $contact_phone;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return list of contacts emails or mobile existing for third party\n\t *\n\t *  @param\tstring\t$mode       \t\t'email' or 'mobile'\n\t * \t@param\tint\t\t$hidedisabled\t\t1=Hide contact if disabled\n\t *  @return array       \t\t\t\tArray of contacts emails or mobile. Example: array(id=>'Name <email>')\n\t */\n\tpublic function contact_property_array($mode = 'email', $hidedisabled = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$contact_property = array();\n\n\n\t\t$sql = \"SELECT rowid, email, statut as status, phone_mobile, lastname, poste, firstname\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"socpeople\";\n\t\t$sql .= \" WHERE fk_soc = \".$this->id;\n\t\t$sql .= \" ORDER BY lastname, firstname\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$nump = $this->db->num_rows($resql);\n\t\t\tif ($nump) {\n\t\t\t\t$sepa = \"(\"; $sepb = \")\";\n\t\t\t\tif ($mode == 'email') {\n\t\t\t\t\t//$sepa=\"&lt;\"; $sepb=\"&gt;\";\n\t\t\t\t\t$sepa = \"<\"; $sepb = \">\";\n\t\t\t\t}\n\t\t\t\t$i = 0;\n\t\t\t\twhile ($i < $nump) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\tif ($mode == 'email') {\n\t\t\t\t\t\t$property = $obj->email;\n\t\t\t\t\t} elseif ($mode == 'mobile') {\n\t\t\t\t\t\t$property = $obj->phone_mobile;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$property = $obj->$mode;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Show all contact. If hidedisabled is 1, showonly contacts with status = 1\n\t\t\t\t\tif ($obj->status == 1 || empty($hidedisabled)) {\n\t\t\t\t\t\tif (empty($property)) {\n\t\t\t\t\t\t\tif ($mode == 'email') {\n\t\t\t\t\t\t\t\t$property = $langs->transnoentitiesnoconv(\"NoEMail\");\n\t\t\t\t\t\t\t} elseif ($mode == 'mobile') {\n\t\t\t\t\t\t\t\t$property = $langs->transnoentitiesnoconv(\"NoMobilePhone\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!empty($obj->poste)) {\n\t\t\t\t\t\t\t$contact_property[$obj->rowid] = trim(dolGetFirstLastname($obj->firstname, $obj->lastname)).($obj->poste ? \" - \".$obj->poste : \"\").(($mode != 'poste' && $property) ? \" \".$sepa.$property.$sepb : '');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$contact_property[$obj->rowid] = trim(dolGetFirstLastname($obj->firstname, $obj->lastname)).(($mode != 'poste' && $property) ? \" \".$sepa.$property.$sepb : '');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t\treturn $contact_property;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Returns the contact list of this company\n\t *\n\t *    @return     array      array of contacts\n\t */\n\tpublic function contact_array()\n\t{\n\t\t// phpcs:enable\n\t\t$contacts = array();\n\n\t\t$sql = \"SELECT rowid, lastname, firstname FROM \".MAIN_DB_PREFIX.\"socpeople WHERE fk_soc = \".$this->id;\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$nump = $this->db->num_rows($resql);\n\t\t\tif ($nump) {\n\t\t\t\t$i = 0;\n\t\t\t\twhile ($i < $nump) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$contacts[$obj->rowid] = dolGetFirstLastname($obj->firstname, $obj->lastname);\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t\treturn $contacts;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Returns the contact list of this company\n\t *\n\t *    @return    array    $contacts    array of contacts\n\t */\n\tpublic function contact_array_objects()\n\t{\n\t\t// phpcs:enable\n\t\trequire_once DOL_DOCUMENT_ROOT.'/contact/class/contact.class.php';\n\t\t$contacts = array();\n\n\t\t$sql = \"SELECT rowid FROM \".MAIN_DB_PREFIX.\"socpeople WHERE fk_soc = \".$this->id;\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$nump = $this->db->num_rows($resql);\n\t\t\tif ($nump) {\n\t\t\t\t$i = 0;\n\t\t\t\twhile ($i < $nump) {\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$contact = new Contact($this->db);\n\t\t\t\t\t$contact->fetch($obj->rowid);\n\t\t\t\t\t$contacts[] = $contact;\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t\treturn $contacts;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return property of contact from its id\n\t *\n\t *  @param\tint\t\t$rowid      id of contact\n\t *  @param  string\t$mode       'email' or 'mobile'\n\t *  @return string  \t\t\tEmail of contact with format: \"Full name <email>\"\n\t */\n\tpublic function contact_get_property($rowid, $mode)\n\t{\n\t\t// phpcs:enable\n\t\t$contact_property = '';\n\n\t\tif (empty($rowid)) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$sql = \"SELECT rowid, email, phone_mobile, lastname, firstname\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"socpeople\";\n\t\t$sql .= \" WHERE rowid = \".((int) $rowid);\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$nump = $this->db->num_rows($resql);\n\n\t\t\tif ($nump) {\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\tif ($mode == 'email') {\n\t\t\t\t\t$contact_property = dol_string_nospecial(dolGetFirstLastname($obj->firstname, $obj->lastname), ' ', array(\",\")).\" <\".$obj->email.\">\";\n\t\t\t\t} elseif ($mode == 'mobile') {\n\t\t\t\t\t$contact_property = $obj->phone_mobile;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $contact_property;\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return bank number property of thirdparty (label or rum)\n\t *\n\t *\t@param\tstring\t$mode\t'label' or 'rum' or 'format'\n\t *  @return\tstring\t\t\tBank label or RUM or '' if no bank account found\n\t */\n\tpublic function display_rib($mode = 'label')\n\t{\n\t\t// phpcs:enable\n\t\trequire_once DOL_DOCUMENT_ROOT.'/societe/class/companybankaccount.class.php';\n\n\t\t$bac = new CompanyBankAccount($this->db);\n\t\t$bac->fetch(0, $this->id);\n\n\t\tif ($bac->id > 0) {\t\t// If a bank account has been found for company $this->id\n\t\t\tif ($mode == 'label') {\n\t\t\t\treturn $bac->getRibLabel(true);\n\t\t\t} elseif ($mode == 'rum') {\n\t\t\t\tif (empty($bac->rum)) {\n\t\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/compta/prelevement/class/bonprelevement.class.php';\n\t\t\t\t\t$prelevement = new BonPrelevement($this->db);\n\t\t\t\t\t$bac->fetch_thirdparty();\n\t\t\t\t\t$bac->rum = $prelevement->buildRumNumber($bac->thirdparty->code_client, $bac->datec, $bac->id);\n\t\t\t\t}\n\t\t\t\treturn $bac->rum;\n\t\t\t} elseif ($mode == 'format') {\n\t\t\t\treturn $bac->frstrecur;\n\t\t\t} else {\n\t\t\t\treturn 'BadParameterToFunctionDisplayRib';\n\t\t\t}\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t * Return Array of RIB\n\t *\n\t * @return     array|int        0 if KO, Array of CompanyBanckAccount if OK\n\t */\n\tpublic function get_all_rib()\n\t{\n\t\t// phpcs:enable\n\t\trequire_once DOL_DOCUMENT_ROOT.'/societe/class/companybankaccount.class.php';\n\t\t$sql = \"SELECT rowid FROM \".MAIN_DB_PREFIX.\"societe_rib WHERE type='ban' AND fk_soc = \".$this->id;\n\t\t$result = $this->db->query($sql);\n\t\tif (!$result) {\n\t\t\t$this->error++;\n\t\t\t$this->errors[] = $this->db->lasterror;\n\t\t\treturn 0;\n\t\t} else {\n\t\t\t$num_rows = $this->db->num_rows($result);\n\t\t\t$rib_array = array();\n\t\t\tif ($num_rows) {\n\t\t\t\twhile ($obj = $this->db->fetch_object($result)) {\n\t\t\t\t\t$rib = new CompanyBankAccount($this->db);\n\t\t\t\t\t$rib->fetch($obj->rowid);\n\t\t\t\t\t$rib_array[] = $rib;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $rib_array;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Assigns a customer code from the code control module.\n\t *  Return value is stored into this->code_client\n\t *\n\t *\t@param\tSociete\t\t$objsoc\t\tObject thirdparty\n\t *\t@param\tint\t\t\t$type\t\tShould be 0 to say customer\n\t *  @return void\n\t */\n\tpublic function get_codeclient($objsoc = 0, $type = 0)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\t\tif (!empty($conf->global->SOCIETE_CODECLIENT_ADDON)) {\n\t\t\t$module = $conf->global->SOCIETE_CODECLIENT_ADDON;\n\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$mod = new $module();\n\n\t\t\t$this->code_client = $mod->getNextValue($objsoc, $type);\n\t\t\t$this->prefixCustomerIsRequired = $mod->prefixIsRequired;\n\n\t\t\tdol_syslog(get_class($this).\"::get_codeclient code_client=\".$this->code_client.\" module=\".$module);\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Assigns a vendor code from the code control module.\n\t *  Return value is stored into this->code_fournisseur\n\t *\n\t *\t@param\tSociete\t\t$objsoc\t\tObject thirdparty\n\t *\t@param\tint\t\t\t$type\t\tShould be 1 to say supplier\n\t *  @return void\n\t */\n\tpublic function get_codefournisseur($objsoc = 0, $type = 1)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\t\tif (!empty($conf->global->SOCIETE_CODECLIENT_ADDON)) {\n\t\t\t$module = $conf->global->SOCIETE_CODECLIENT_ADDON;\n\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$mod = new $module();\n\n\t\t\t$this->code_fournisseur = $mod->getNextValue($objsoc, $type);\n\n\t\t\tdol_syslog(get_class($this).\"::get_codefournisseur code_fournisseur=\".$this->code_fournisseur.\" module=\".$module);\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Check if a client code is editable based on the parameters of the\n\t *    code control module.\n\t *\n\t *    @return     int\t\t0=No, 1=Yes\n\t */\n\tpublic function codeclient_modifiable()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\t\tif (!empty($conf->global->SOCIETE_CODECLIENT_ADDON)) {\n\t\t\t$module = $conf->global->SOCIETE_CODECLIENT_ADDON;\n\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$mod = new $module();\n\n\t\t\tdol_syslog(get_class($this).\"::codeclient_modifiable code_client=\".$this->code_client.\" module=\".$module);\n\t\t\tif ($mod->code_modifiable_null && !$this->code_client) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif ($mod->code_modifiable_invalide && $this->check_codeclient() < 0) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif ($mod->code_modifiable) {\n\t\t\t\treturn 1; // A mettre en dernier\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Check if a vendor code is editable in the code control module configuration\n\t *\n\t *    @return     int\t\t0=No, 1=Yes\n\t */\n\tpublic function codefournisseur_modifiable()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\t\tif (!empty($conf->global->SOCIETE_CODECLIENT_ADDON)) {\n\t\t\t$module = $conf->global->SOCIETE_CODECLIENT_ADDON;\n\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$mod = new $module();\n\n\t\t\tdol_syslog(get_class($this).\"::codefournisseur_modifiable code_founisseur=\".$this->code_fournisseur.\" module=\".$module);\n\t\t\tif ($mod->code_modifiable_null && !$this->code_fournisseur) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif ($mod->code_modifiable_invalide && $this->check_codefournisseur() < 0) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif ($mod->code_modifiable) {\n\t\t\t\treturn 1; // A mettre en dernier\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Check customer code\n\t *\n\t *  @return     int\t\t\t\t0 if OK\n\t * \t\t\t\t\t\t\t\t-1 ErrorBadCustomerCodeSyntax\n\t * \t\t\t\t\t\t\t\t-2 ErrorCustomerCodeRequired\n\t * \t\t\t\t\t\t\t\t-3 ErrorCustomerCodeAlreadyUsed\n\t * \t\t\t\t\t\t\t\t-4 ErrorPrefixRequired\n\t * \t\t\t\t\t\t\t\t-5 NotConfigured - Setup empty so any value may be ok or not\n\t * \t\t\t\t\t\t\t\t-6 Other (see this->error)\n\t */\n\tpublic function check_codeclient()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\t\tif (!empty($conf->global->SOCIETE_CODECLIENT_ADDON)) {\n\t\t\t$module = $conf->global->SOCIETE_CODECLIENT_ADDON;\n\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$mod = new $module();\n\n\t\t\tdol_syslog(get_class($this).\"::check_codeclient code_client=\".$this->code_client.\" module=\".$module);\n\t\t\t$result = $mod->verif($this->db, $this->code_client, $this, 0);\n\t\t\tif ($result) {\t// If error\n\t\t\t\t$this->error = $mod->error;\n\t\t\t\t$this->errors = $mod->errors;\n\t\t\t}\n\t\t\treturn $result;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Check supplier code\n\t *\n\t *    @return     int\t\t0 if OK\n\t * \t\t\t\t\t\t\t-1 ErrorBadCustomerCodeSyntax\n\t * \t\t\t\t\t\t\t-2 ErrorCustomerCodeRequired\n\t * \t\t\t\t\t\t\t-3 ErrorCustomerCodeAlreadyUsed\n\t * \t\t\t\t\t\t\t-4 ErrorPrefixRequired\n\t * \t\t\t\t\t\t\t-5 NotConfigured - Setup empty so any value may be ok or not\n\t * \t\t\t\t\t\t\t-6 Other (see this->error)\n\t */\n\tpublic function check_codefournisseur()\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\t\tif (!empty($conf->global->SOCIETE_CODECLIENT_ADDON)) {\n\t\t\t$module = $conf->global->SOCIETE_CODECLIENT_ADDON;\n\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$module.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$mod = new $module();\n\n\t\t\tdol_syslog(get_class($this).\"::check_codefournisseur code_fournisseur=\".$this->code_fournisseur.\" module=\".$module);\n\t\t\t$result = $mod->verif($this->db, $this->code_fournisseur, $this, 1);\n\t\t\tif ($result) {\t// If error\n\t\t\t\t$this->error = $mod->error;\n\t\t\t\t$this->errors = $mod->errors;\n\t\t\t}\n\t\t\treturn $result;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    \tAssigns a accounting code from the accounting code module.\n\t *      Computed value is stored into this->code_compta or this->code_compta_fournisseur according to $type.\n\t *      May be identical to the one entered or generated automatically. Currently, only the automatic generation is implemented.\n\t *\n\t *    \t@param\tstring\t$type\t\tType of thirdparty ('customer' or 'supplier')\n\t *\t\t@return\tint\t\t\t\t\t0 if OK, <0 if $type is not valid\n\t */\n\tpublic function get_codecompta($type)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\n\t\tif (!empty($conf->global->SOCIETE_CODECOMPTA_ADDON)) {\n\t\t\t$res = false;\n\t\t\t$dirsociete = array_merge(array('/core/modules/societe/'), $conf->modules_parts['societe']);\n\t\t\tforeach ($dirsociete as $dirroot) {\n\t\t\t\t$res = dol_include_once($dirroot.$conf->global->SOCIETE_CODECOMPTA_ADDON.'.php');\n\t\t\t\tif ($res) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($res) {\n\t\t\t\t$classname = $conf->global->SOCIETE_CODECOMPTA_ADDON;\n\t\t\t\t$mod = new $classname;\n\n\t\t\t\t// Set code count in $mod->code\n\t\t\t\t$result = $mod->get_code($this->db, $this, $type);\n\n\t\t\t\tif ($type == 'customer') {\n\t\t\t\t\t$this->code_compta = $mod->code;\n\t\t\t\t} elseif ($type == 'supplier') {\n\t\t\t\t\t$this->code_compta_fournisseur = $mod->code;\n\t\t\t\t}\n\n\t\t\t\treturn $result;\n\t\t\t} else {\n\t\t\t\t$this->error = 'ErrorAccountancyCodeNotDefined';\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t} else {\n\t\t\tif ($type == 'customer') {\n\t\t\t\t$this->code_compta = '';\n\t\t\t} elseif ($type == 'supplier') {\n\t\t\t\t$this->code_compta_fournisseur = '';\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t *    Define parent commany of current company\n\t *\n\t *    @param\tint\t\t$id     Id of thirdparty to set or '' to remove\n\t *    @return\tint     \t\t<0 if KO, >0 if OK\n\t */\n\tpublic function setParent($id)\n\t{\n\t\tdol_syslog(get_class($this).'::setParent', LOG_DEBUG);\n\n\t\tif ($this->id) {\n\t\t\t// Check if the id we want to add as parent has not already one parent that is the current id we try to update\n\t\t\tif ($id > 0) {\n\t\t\t\t$sameparent\t= $this->validateFamilyTree($id, $this->id, 0);\n\t\t\t\tif ($sameparent < 0) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif ($sameparent == 1) {\n\t\t\t\t\tsetEventMessages('ParentCompanyToAddIsAlreadyAChildOfModifiedCompany', null, 'warnings');\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql = 'UPDATE '.MAIN_DB_PREFIX.'societe SET parent = '.($id > 0 ? $id : 'null').' WHERE rowid = '.((int) $this->id);\n\n\t\t\t$resql\t= $this->db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$this->parent = $id;\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *    Check if a thirdparty $idchild is or not inside the parents (or grand parents) of another thirdparty id $idparent.\n\t *\n\t *    @param\tint\t\t$idparent\tId of thirdparty to check\n\t *    @param\tint\t\t$idchild\tId of thirdparty to compare to\n\t *    @param    int     $counter    Counter to protect against infinite loops\n\t *    @return\tint     \t\t\t<0 if KO, 0 if OK or 1 if at some level a parent company was the child to compare to\n\t */\n\tpublic function validateFamilyTree($idparent, $idchild, $counter = 0)\n\t{\n\t\tif ($counter > 100) {\n\t\t\tdol_syslog(\"Too high level of parent - child for company. May be an infinite loop ?\", LOG_WARNING);\n\t\t}\n\n\t\t$sql = 'SELECT s.parent';\n\t\t$sql .= ' FROM '.MAIN_DB_PREFIX.'societe as s';\n\t\t$sql .= ' WHERE rowid = '.$idparent;\n\t\t$resql\t= $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj\t= $this->db->fetch_object($resql);\n\n\t\t\tif ($obj->parent == '')\t{\n\t\t\t\treturn 0;\n\t\t\t} elseif ($obj->parent == $idchild)\t{\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\t$sameparent\t= $this->validateFamilyTree($obj->parent, $idchild, ($counter + 1));\n\t\t\t}\n\t\t\treturn $sameparent;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Returns if a profid sould be verified to be unique\n\t *\n\t *  @param\tint\t\t$idprof\t\t1,2,3,4,5,6 (Example: 1=siren, 2=siret, 3=naf, 4=rcs/rm, 5=eori, 6=idprof6)\n\t *  @return boolean         \ttrue if the ID must be unique\n\t */\n\tpublic function id_prof_verifiable($idprof)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\n\t\tswitch ($idprof) {\n\t\t\tcase 1:\n\t\t\t\t$ret = (empty($conf->global->SOCIETE_IDPROF1_UNIQUE) ? false : true);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t$ret = (empty($conf->global->SOCIETE_IDPROF2_UNIQUE) ? false : true);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t$ret = (empty($conf->global->SOCIETE_IDPROF3_UNIQUE) ? false : true);\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\t$ret = (empty($conf->global->SOCIETE_IDPROF4_UNIQUE) ? false : true);\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\t$ret = (empty($conf->global->SOCIETE_IDPROF5_UNIQUE) ? false : true);\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\t$ret = (empty($conf->global->SOCIETE_IDPROF6_UNIQUE) ? false : true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$ret = false;\n\t\t}\n\n\t\treturn $ret;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *    Verify if a profid exists into database for others thirds\n\t *\n\t *    @param\tstring\t$idprof\t\t'idprof1','idprof2','idprof3','idprof4','idprof5','idprof6','email' (Example: idprof1=siren, idprof2=siret, idprof3=naf, idprof4=rcs/rm)\n\t *    @param\tstring\t$value\t\tValue of profid\n\t *    @param\tint\t\t$socid\t\tId of thirdparty to exclude (if update)\n\t *    @return   boolean\t\t\t\tTrue if exists, False if not\n\t */\n\tpublic function id_prof_exists($idprof, $value, $socid = 0)\n\t{\n\t\t// phpcs:enable\n\t\t$field = $idprof;\n\n\t\tswitch ($idprof) {\t// For backward compatibility\n\t\t\tcase '1':\n\t\t\tcase 'idprof1':\n\t\t\t\t$field = \"siren\";\n\t\t\t\tbreak;\n\t\t\tcase '2':\n\t\t\tcase 'idprof2':\n\t\t\t\t$field = \"siret\";\n\t\t\t\tbreak;\n\t\t\tcase '3':\n\t\t\tcase 'idprof3':\n\t\t\t\t$field = \"ape\";\n\t\t\t\tbreak;\n\t\t\tcase '4':\n\t\t\tcase 'idprof4':\n\t\t\t\t$field = \"idprof4\";\n\t\t\t\tbreak;\n\t\t\tcase '5':\n\t\t\t\t$field = \"idprof5\";\n\t\t\t\tbreak;\n\t\t\tcase '6':\n\t\t\t\t$field = \"idprof6\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\t //Verify duplicate entries\n\t\t$sql = \"SELECT COUNT(*) as idprof FROM \".MAIN_DB_PREFIX.\"societe WHERE \".$field.\" = '\".$this->db->escape($value).\"' AND entity IN (\".getEntity('societe').\")\";\n\t\tif ($socid) {\n\t\t\t$sql .= \" AND rowid <> \".$socid;\n\t\t}\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t$count = $obj->idprof;\n\t\t} else {\n\t\t\t$count = 0;\n\t\t\tprint $this->db->error();\n\t\t}\n\t\t$this->db->free($resql);\n\n\t\tif ($count > 0) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Check the validity of a professional identifier according to the country of the company (siren, siret, ...)\n\t *\n\t *  @param\tint\t\t\t$idprof         1,2,3,4 (Exemple: 1=siren,2=siret,3=naf,4=rcs/rm)\n\t *  @param  Societe\t\t$soc            Objet societe\n\t *  @return int             \t\t\t<=0 if KO, >0 if OK\n\t *  TODO better to have this in a lib than into a business class\n\t */\n\tpublic function id_prof_check($idprof, $soc)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf;\n\n\t\t$ok = 1;\n\n\t\tif (!empty($conf->global->MAIN_DISABLEPROFIDRULES)) {\n\t\t\treturn 1;\n\t\t}\n\n\t\t// Check SIREN if country FR\n\t\tif ($idprof == 1 && $soc->country_code == 'FR') {\n\t\t\t$chaine = trim($this->idprof1);\n\t\t\t$chaine = preg_replace('/(\\s)/', '', $chaine);\n\n\t\t\tif (!is_numeric($chaine)) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (dol_strlen($chaine) != 9) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// on prend chaque chiffre un par un\n\t\t\t// si son index (position dans la cha\u00eene en commence \u00e0 0 au premier caract\u00e8re) est impair\n\t\t\t// on double sa valeur et si cette derni\u00e8re est sup\u00e9rieure \u00e0 9, on lui retranche 9\n\t\t\t// on ajoute cette valeur \u00e0 la somme totale\n\t\t\t$sum = 0;\n\t\t\tfor ($index = 0; $index < 9; $index++) {\n\t\t\t\t$number = (int) $chaine[$index];\n\t\t\t\tif (($index % 2) != 0) {\n\t\t\t\t\tif (($number *= 2) > 9) {\n\t\t\t\t\t\t$number -= 9;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$sum += $number;\n\t\t\t}\n\n\t\t\t// le num\u00e9ro est valide si la somme des chiffres est multiple de 10\n\t\t\tif (($sum % 10) != 0) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\t// Verifie SIRET si pays FR\n\t\tif ($idprof == 2 && $soc->country_code == 'FR') {\n\t\t\t$chaine = trim($this->idprof2);\n\t\t\t$chaine = preg_replace('/(\\s)/', '', $chaine);\n\n\t\t\tif (!is_numeric($chaine)) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (dol_strlen($chaine) != 14) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// on prend chaque chiffre un par un\n\t\t\t// si son index (position dans la cha\u00eene en commence \u00e0 0 au premier caract\u00e8re) est pair\n\t\t\t// on double sa valeur et si cette derni\u00e8re est sup\u00e9rieure \u00e0 9, on lui retranche 9\n\t\t\t// on ajoute cette valeur \u00e0 la somme totale\n\t\t\t$sum = 0;\n\t\t\tfor ($index = 0; $index < 14; $index++) {\n\t\t\t\t$number = (int) $chaine[$index];\n\t\t\t\tif (($index % 2) == 0) {\n\t\t\t\t\tif (($number *= 2) > 9) {\n\t\t\t\t\t\t$number -= 9;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$sum += $number;\n\t\t\t}\n\n\t\t\t// le num\u00e9ro est valide si la somme des chiffres est multiple de 10\n\t\t\tif (($sum % 10) != 0) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\t//Verify CIF/NIF/NIE if pays ES\n\t\t//Returns: 1 if NIF ok, 2 if CIF ok, 3 if NIE ok, -1 if NIF bad, -2 if CIF bad, -3 if NIE bad, 0 if unexpected bad\n\t\tif ($idprof == 1 && $soc->country_code == 'ES') {\n\t\t\t$string = trim($this->idprof1);\n\t\t\t$string = preg_replace('/(\\s)/', '', $string);\n\t\t\t$string = strtoupper($string);\n\n\t\t\t//Check format\n\t\t\tif (!preg_match('/((^[A-Z]{1}[0-9]{7}[A-Z0-9]{1}$|^[T]{1}[A-Z0-9]{8}$)|^[0-9]{8}[A-Z]{1}$)/', $string)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t$num = array();\n\t\t\tfor ($i = 0; $i < 9; $i++) {\n\t\t\t\t$num[$i] = substr($string, $i, 1);\n\t\t\t}\n\n\t\t\t//Check NIF\n\t\t\tif (preg_match('/(^[0-9]{8}[A-Z]{1}$)/', $string)) {\n\t\t\t\tif ($num[8] == substr('TRWAGMYFPDXBNJZSQVHLCKE', substr($string, 0, 8) % 23, 1)) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//algorithm checking type code CIF\n\t\t\t$sum = $num[2] + $num[4] + $num[6];\n\t\t\tfor ($i = 1; $i < 8; $i += 2) {\n\t\t\t\t$sum += intval(substr((2 * $num[$i]), 0, 1)) + intval(substr((2 * $num[$i]), 1, 1));\n\t\t\t}\n\t\t\t$n = 10 - substr($sum, strlen($sum) - 1, 1);\n\n\t\t\t//Chek special NIF\n\t\t\tif (preg_match('/^[KLM]{1}/', $string)) {\n\t\t\t\tif ($num[8] == chr(64 + $n) || $num[8] == substr('TRWAGMYFPDXBNJZSQVHLCKE', substr($string, 1, 8) % 23, 1)) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Check CIF\n\t\t\tif (preg_match('/^[ABCDEFGHJNPQRSUVW]{1}/', $string)) {\n\t\t\t\tif ($num[8] == chr(64 + $n) || $num[8] == substr($n, strlen($n) - 1, 1)) {\n\t\t\t\t\treturn 2;\n\t\t\t\t} else {\n\t\t\t\t\treturn -2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Check NIE T\n\t\t\tif (preg_match('/^[T]{1}/', $string)) {\n\t\t\t\tif ($num[8] == preg_match('/^[T]{1}[A-Z0-9]{8}$/', $string)) {\n\t\t\t\t\treturn 3;\n\t\t\t\t} else {\n\t\t\t\t\treturn -3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Check NIE XYZ\n\t\t\tif (preg_match('/^[XYZ]{1}/', $string)) {\n\t\t\t\tif ($num[8] == substr('TRWAGMYFPDXBNJZSQVHLCKE', substr(str_replace(array('X', 'Y', 'Z'), array('0', '1', '2'), $string), 0, 8) % 23, 1)) {\n\t\t\t\t\treturn 3;\n\t\t\t\t} else {\n\t\t\t\t\treturn -3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Can not be verified\n\t\t\treturn -4;\n\t\t}\n\n\t\t//Verify NIF if country is PT\n\t\t//Returns: 1 if NIF ok, -1 if NIF bad, 0 if unexpected bad\n\t\tif ($idprof == 1 && $soc->country_code == 'PT') {\n\t\t\t$string = trim($this->idprof1);\n\t\t\t$string = preg_replace('/(\\s)/', '', $string);\n\n\t\t\t//Check NIF\n\t\t\tif (preg_match('/(^[0-9]{9}$)/', $string)) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\treturn $ok;\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *   Return an url to check online a professional id or empty string\n\t *\n\t *   @param\t\tint\t\t$idprof         1,2,3,4 (Example: 1=siren,2=siret,3=naf,4=rcs/rm)\n\t *   @param \tSociete\t$thirdparty     Object thirdparty\n\t *   @return\tstring          \t\tUrl or empty string if no URL known\n\t *   TODO better in a lib than into business class\n\t */\n\tpublic function id_prof_url($idprof, $thirdparty)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $conf, $langs, $hookmanager;\n\n\t\t$url = '';\n\t\t$action = '';\n\n\t\t$hookmanager->initHooks(array('idprofurl'));\n\t\t$parameters = array('idprof'=>$idprof, 'company'=>$thirdparty);\n\t\t$reshook = $hookmanager->executeHooks('getIdProfUrl', $parameters, $this, $action); // Note that $action and $object may have been modified by some hooks\n\t\tif (empty($reshook)) {\n\t\t\tif (!empty($conf->global->MAIN_DISABLEPROFIDRULES)) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\t// TODO Move links to validate professional ID into a dictionary table \"country\" + \"link\"\n\t\t\t$strippedIdProf1 = str_replace(' ', '', $thirdparty->idprof1);\n\t\t\tif ($idprof == 1 && $thirdparty->country_code == 'FR') {\n\t\t\t\t$url = 'http://www.societe.com/cgi-bin/search?champs='.$strippedIdProf1; // See also http://avis-situation-sirene.insee.fr/\n\t\t\t}\n\t\t\tif ($idprof == 1 && ($thirdparty->country_code == 'GB' || $thirdparty->country_code == 'UK')) {\n\t\t\t\t$url = 'https://beta.companieshouse.gov.uk/company/'.$strippedIdProf1;\n\t\t\t}\n\t\t\tif ($idprof == 1 && $thirdparty->country_code == 'ES') {\n\t\t\t\t$url = 'http://www.e-informa.es/servlet/app/portal/ENTP/screen/SProducto/prod/ETIQUETA_EMPRESA/nif/'.$strippedIdProf1;\n\t\t\t}\n\t\t\tif ($idprof == 1 && $thirdparty->country_code == 'IN') {\n\t\t\t\t$url = 'http://www.tinxsys.com/TinxsysInternetWeb/dealerControllerServlet?tinNumber='.$strippedIdProf1.';&searchBy=TIN&backPage=searchByTin_Inter.jsp';\n\t\t\t}\n\t\t\tif ($idprof == 1 && $thirdparty->country_code == 'PT') {\n\t\t\t\t$url = 'http://www.nif.pt/'.$strippedIdProf1;\n\t\t\t}\n\n\t\t\tif ($url) {\n\t\t\t\treturn '<a target=\"_blank\" href=\"'.$url.'\">'.$langs->trans(\"Check\").'</a>';\n\t\t\t}\n\t\t} else {\n\t\t\treturn $hookmanager->resPrint;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *   Indicates if the company has projects\n\t *\n\t *   @return     bool\t   true if the company has projects, false otherwise\n\t */\n\tpublic function has_projects()\n\t{\n\t\t// phpcs:enable\n\t\t$sql = 'SELECT COUNT(*) as numproj FROM '.MAIN_DB_PREFIX.'projet WHERE fk_soc = '.$this->id;\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t$count = $obj->numproj;\n\t\t} else {\n\t\t\t$count = 0;\n\t\t\tprint $this->db->error();\n\t\t}\n\t\t$this->db->free($resql);\n\t\treturn ($count > 0);\n\t}\n\n\n\t/**\n\t *  Load information for tab info\n\t *\n\t *  @param  int\t\t$id     Id of thirdparty to load\n\t *  @return\tvoid\n\t */\n\tpublic function info($id)\n\t{\n\t\t$sql = \"SELECT s.rowid, s.nom as name, s.datec as date_creation, tms as date_modification,\";\n\t\t$sql .= \" fk_user_creat, fk_user_modif\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"societe as s\";\n\t\t$sql .= \" WHERE s.rowid = \".((int) $id);\n\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\tif ($this->db->num_rows($result)) {\n\t\t\t\t$obj = $this->db->fetch_object($result);\n\n\t\t\t\t$this->id = $obj->rowid;\n\n\t\t\t\tif ($obj->fk_user_creat) {\n\t\t\t\t\t$cuser = new User($this->db);\n\t\t\t\t\t$cuser->fetch($obj->fk_user_creat);\n\t\t\t\t\t$this->user_creation = $cuser;\n\t\t\t\t}\n\n\t\t\t\tif ($obj->fk_user_modif) {\n\t\t\t\t\t$muser = new User($this->db);\n\t\t\t\t\t$muser->fetch($obj->fk_user_modif);\n\t\t\t\t\t$this->user_modification = $muser;\n\t\t\t\t}\n\n\t\t\t\t$this->ref = $obj->name;\n\t\t\t\t$this->date_creation     = $this->db->jdate($obj->date_creation);\n\t\t\t\t$this->date_modification = $this->db->jdate($obj->date_modification);\n\t\t\t}\n\n\t\t\t$this->db->free($result);\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *  Return if third party is a company (Business) or an end user (Consumer)\n\t *\n\t *  @return    boolean     true=is a company, false=a and user\n\t */\n\tpublic function isACompany()\n\t{\n\t\tglobal $conf;\n\n\t\t// Define if third party is treated as company (or not) when nature is unknown\n\t\t$isacompany = empty($conf->global->MAIN_UNKNOWN_CUSTOMERS_ARE_COMPANIES) ? 0 : 1; // 0 by default\n\t\tif (!empty($this->tva_intra)) {\n\t\t\t$isacompany = 1;\n\t\t} elseif (!empty($this->idprof1) || !empty($this->idprof2) || !empty($this->idprof3) || !empty($this->idprof4) || !empty($this->idprof5) || !empty($this->idprof6)) {\n\t\t\t$isacompany = 1;\n\t\t} elseif (!empty($this->typent_code) && $this->typent_code != 'TE_UNKNOWN') {\n\t\t\t// TODO Add a field is_a_company into dictionary\n\t\t\tif (preg_match('/^TE_PRIVATE/', $this->typent_code)) {\n\t\t\t\t$isacompany = 0;\n\t\t\t} else {\n\t\t\t\t$isacompany = 1;\n\t\t\t}\n\t\t}\n\n\t\treturn $isacompany;\n\t}\n\n\t/**\n\t *  Return if a company is inside the EEC (European Economic Community)\n\t *\n\t *  @return     boolean\t\ttrue = country inside EEC, false = country outside EEC\n\t */\n\tpublic function isInEEC()\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\t\treturn isInEEC($this);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Load the list of provider categories\n\t *\n\t *  @return    int      0 if success, <> 0 if error\n\t */\n\tpublic function LoadSupplierCateg()\n\t{\n\t\t// phpcs:enable\n\t\t$this->SupplierCategories = array();\n\t\t$sql = \"SELECT rowid, label\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"categorie\";\n\t\t$sql .= \" WHERE type = \".Categorie::TYPE_SUPPLIER;\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$this->SupplierCategories[$obj->rowid] = $obj->label;\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Insert link supplier - category\n\t *\n\t *\t@param\tint\t\t$categorie_id\t\tId of category\n\t *  @return int      \t\t\t\t\t0 if success, <> 0 if error\n\t */\n\tpublic function AddFournisseurInCategory($categorie_id)\n\t{\n\t\t// phpcs:enable\n\t\tif ($categorie_id > 0 && $this->id > 0) {\n\t\t\t$sql = \"INSERT INTO \".MAIN_DB_PREFIX.\"categorie_fournisseur (fk_categorie, fk_soc) \";\n\t\t\t$sql .= \" VALUES (\".$categorie_id.\", \".$this->id.\")\";\n\n\t\t\tif ($resql = $this->db->query($sql)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t\treturn -1;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Create a third party into database from a member object\n\t *\n\t *  @param\tAdherent\t$member\t\t\tObject member\n\t * \t@param\tstring\t\t$socname\t\tName of third party to force\n\t *\t@param\tstring\t\t$socalias\t\tAlias name of third party to force\n\t *  @param\tstring\t\t$customercode\tCustomer code\n\t *  @return int\t\t\t\t\t\t\t<0 if KO, id of created account if OK\n\t */\n\tpublic function create_from_member(Adherent $member, $socname = '', $socalias = '', $customercode = '')\n\t{\n        // phpcs:enable\n\t\tglobal $conf, $user, $langs;\n\n\t\tdol_syslog(get_class($this).\"::create_from_member\", LOG_DEBUG);\n\n\t\t$name = $socname ? $socname : $member->societe;\n\t\tif (empty($name)) {\n\t\t\t$name = $member->getFullName($langs);\n\t\t}\n\n\t\t$alias = $socalias ? $socalias : '';\n\n\t\t// Positionne parametres\n\t\t$this->nom = $name; // TODO deprecated\n\t\t$this->name = $name;\n\t\t$this->name_alias = $alias;\n\t\t$this->address = $member->address;\n\t\t$this->zip = $member->zip;\n\t\t$this->town = $member->town;\n\t\t$this->country_code = $member->country_code;\n\t\t$this->country_id = $member->country_id;\n\t\t$this->phone = $member->phone; // Prof phone\n\t\t$this->email = $member->email;\n\t\t$this->socialnetworks = $member->socialnetworks;\n\t\t$this->entity = $member->entity;\n\n\t\t$this->client = 1; // A member is a customer by default\n\t\t$this->code_client = ($customercode ? $customercode : -1);\n\t\t$this->code_fournisseur = -1;\n\t\t$this->typent_code = ($member->morphy == 'phy' ? 'TE_PRIVATE' : 0);\n\t\t$this->typent_id = $this->typent_code ? dol_getIdFromCode($this->db, $this->typent_code, 'c_typent', 'id', 'code') : 0;\n\n\t\t$this->db->begin();\n\n\t\t// Cree et positionne $this->id\n\t\t$result = $this->create($user);\n\n\t\tif ($result >= 0) {\n\t\t\t// Auto-create contact on thirdparty creation\n\t\t\tif (!empty($conf->global->THIRDPARTY_DEFAULT_CREATE_CONTACT)) {\n\t\t\t\t// Fill fields needed by contact\n\t\t\t\t$this->name_bis = $member->lastname;\n\t\t\t\t$this->firstname = $member->firstname;\n\t\t\t\t$this->civility_id = $member->civility_id;\n\n\t\t\t\tdol_syslog(\"We ask to create a contact/address too\", LOG_DEBUG);\n\t\t\t\t$result = $this->create_individual($user);\n\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\tsetEventMessages($this->error, $this->errors, 'errors');\n\t\t\t\t\t$this->db->rollback();\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"adherent\";\n\t\t\t$sql .= \" SET fk_soc = \".((int) $this->id);\n\t\t\t$sql .= \" WHERE rowid = \".((int) $member->id);\n\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$this->db->commit();\n\t\t\t\treturn $this->id;\n\t\t\t} else {\n\t\t\t\t$this->error = $this->db->error();\n\n\t\t\t\t$this->db->rollback();\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t} else {\n\t\t\t// $this->error deja positionne\n\t\t\tdol_syslog(get_class($this).\"::create_from_member - 2 - \".$this->error.\" - \".join(',', $this->errors), LOG_ERR);\n\n\t\t\t$this->db->rollback();\n\t\t\treturn $result;\n\t\t}\n\t}\n\n\t/**\n\t * \tSet properties with value into $conf\n\t *\n\t * \t@param\tConf\t$conf\t\tConf object (possibility to use another entity)\n\t * \t@return\tvoid\n\t */\n\tpublic function setMysoc(Conf $conf)\n\t{\n\t\tglobal $langs;\n\n\t\t$this->id = 0;\n\t\t$this->name = empty($conf->global->MAIN_INFO_SOCIETE_NOM) ? '' : $conf->global->MAIN_INFO_SOCIETE_NOM;\n\t\t$this->address = empty($conf->global->MAIN_INFO_SOCIETE_ADDRESS) ? '' : $conf->global->MAIN_INFO_SOCIETE_ADDRESS;\n\t\t$this->zip = empty($conf->global->MAIN_INFO_SOCIETE_ZIP) ? '' : $conf->global->MAIN_INFO_SOCIETE_ZIP;\n\t\t$this->town = empty($conf->global->MAIN_INFO_SOCIETE_TOWN) ? '' : $conf->global->MAIN_INFO_SOCIETE_TOWN;\n\t\t$this->region_code = empty($conf->global->MAIN_INFO_SOCIETE_REGION) ? '' : $conf->global->MAIN_INFO_SOCIETE_REGION;\n\t\t$this->object = empty($conf->global->MAIN_INFO_SOCIETE_OBJECT) ? '' : $conf->global->MAIN_INFO_SOCIETE_OBJECT;\n\n\t\t$this->note_private = empty($conf->global->MAIN_INFO_SOCIETE_NOTE) ? '' : $conf->global->MAIN_INFO_SOCIETE_NOTE;\n\n\t\t$this->nom = $this->name; // deprecated\n\n\t\t// We define country_id, country_code and country\n\t\t$country_id = $country_code = $country_label = '';\n\t\tif (!empty($conf->global->MAIN_INFO_SOCIETE_COUNTRY)) {\n\t\t\t$tmp = explode(':', $conf->global->MAIN_INFO_SOCIETE_COUNTRY);\n\t\t\t$country_id = $tmp[0];\n\t\t\tif (!empty($tmp[1])) {   // If $conf->global->MAIN_INFO_SOCIETE_COUNTRY is \"id:code:label\"\n\t\t\t\t$country_code = $tmp[1];\n\t\t\t\t$country_label = $tmp[2];\n\t\t\t} else // For backward compatibility\n\t\t\t{\n\t\t\t\tdol_syslog(\"Your country setup use an old syntax. Reedit it using setup area.\", LOG_WARNING);\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\t\t\t\t$country_code = getCountry($country_id, 2, $this->db); // This need a SQL request, but it's the old feature that should not be used anymore\n\t\t\t\t$country_label = getCountry($country_id, 0, $this->db); // This need a SQL request, but it's the old feature that should not be used anymore\n\t\t\t}\n\t\t}\n\t\t$this->country_id = $country_id;\n\t\t$this->country_code = $country_code;\n\t\t$this->country = $country_label;\n\t\tif (is_object($langs)) {\n\t\t\t$this->country = ($langs->trans('Country'.$country_code) != 'Country'.$country_code) ? $langs->trans('Country'.$country_code) : $country_label;\n\t\t}\n\n\t\t//TODO This could be replicated for region but function `getRegion` didn't exist, so I didn't added it.\n\t\t// We define state_id, state_code and state\n\t\t$state_id = 0; $state_code = $state_label = '';\n\t\tif (!empty($conf->global->MAIN_INFO_SOCIETE_STATE)) {\n\t\t\t$tmp = explode(':', $conf->global->MAIN_INFO_SOCIETE_STATE);\n\t\t\t$state_id = $tmp[0];\n\t\t\tif (!empty($tmp[1])) {   // If $conf->global->MAIN_INFO_SOCIETE_STATE is \"id:code:label\"\n\t\t\t\t$state_code = $tmp[1];\n\t\t\t\t$state_label = $tmp[2];\n\t\t\t} else { // For backward compatibility\n\t\t\t\tdol_syslog(\"Your setup of State an old syntax (entity=\".$conf->entity.\"). Go in Home - Setup - Organization then Save should remove this error.\", LOG_ERR);\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\t\t\t\t$state_code = getState($state_id, 2, $this->db); // This need a SQL request, but it's the old feature that should not be used anymore\n\t\t\t\t$state_label = getState($state_id, 0, $this->db); // This need a SQL request, but it's the old feature that should not be used anymore\n\t\t\t}\n\t\t}\n\t\t$this->state_id = $state_id;\n\t\t$this->state_code = $state_code;\n\t\t$this->state = $state_label;\n\t\tif (is_object($langs)) {\n\t\t\t$this->state = ($langs->trans('State'.$state_code) != 'State'.$state_code) ? $langs->trans('State'.$state_code) : $state_label;\n\t\t}\n\n\t\t$this->phone = empty($conf->global->MAIN_INFO_SOCIETE_TEL) ? '' : $conf->global->MAIN_INFO_SOCIETE_TEL;\n\t\t$this->fax = empty($conf->global->MAIN_INFO_SOCIETE_FAX) ? '' : $conf->global->MAIN_INFO_SOCIETE_FAX;\n\t\t$this->url = empty($conf->global->MAIN_INFO_SOCIETE_WEB) ? '' : $conf->global->MAIN_INFO_SOCIETE_WEB;\n\n\t\t// Social networks\n\t\t$this->facebook_url = empty($conf->global->MAIN_INFO_SOCIETE_FACEBOOK_URL) ? '' : $conf->global->MAIN_INFO_SOCIETE_FACEBOOK_URL;\n\t\t$this->twitter_url = empty($conf->global->MAIN_INFO_SOCIETE_TWITTER_URL) ? '' : $conf->global->MAIN_INFO_SOCIETE_TWITTER_URL;\n\t\t$this->linkedin_url = empty($conf->global->MAIN_INFO_SOCIETE_LINKEDIN_URL) ? '' : $conf->global->MAIN_INFO_SOCIETE_LINKEDIN_URL;\n\t\t$this->instagram_url = empty($conf->global->MAIN_INFO_SOCIETE_INSTAGRAM_URL) ? '' : $conf->global->MAIN_INFO_SOCIETE_INSTAGRAM_URL;\n\t\t$this->youtube_url = empty($conf->global->MAIN_INFO_SOCIETE_YOUTUBE_URL) ? '' : $conf->global->MAIN_INFO_SOCIETE_YOUTUBE_URL;\n\t\t$this->github_url = empty($conf->global->MAIN_INFO_SOCIETE_GITHUB_URL) ? '' : $conf->global->MAIN_INFO_SOCIETE_GITHUB_URL;\n\t\t$this->socialnetworks = array();\n\t\tif (!empty($this->facebook_url)) {\n\t\t\t$this->socialnetworks['facebook'] = $this->facebook_url;\n\t\t}\n\t\tif (!empty($this->twitter_url)) {\n\t\t\t$this->socialnetworks['twitter'] = $this->twitter_url;\n\t\t}\n\t\tif (!empty($this->linkedin_url)) {\n\t\t\t$this->socialnetworks['linkedin'] = $this->linkedin_url;\n\t\t}\n\t\tif (!empty($this->instagram_url)) {\n\t\t\t$this->socialnetworks['instagram'] = $this->instagram_url;\n\t\t}\n\t\tif (!empty($this->youtube_url)) {\n\t\t\t$this->socialnetworks['youtube'] = $this->youtube_url;\n\t\t}\n\t\tif (!empty($this->github_url)) {\n\t\t\t$this->socialnetworks['github'] = $this->github_url;\n\t\t}\n\n\t\t// Id prof generiques\n\t\t$this->idprof1 = empty($conf->global->MAIN_INFO_SIREN) ? '' : $conf->global->MAIN_INFO_SIREN;\n\t\t$this->idprof2 = empty($conf->global->MAIN_INFO_SIRET) ? '' : $conf->global->MAIN_INFO_SIRET;\n\t\t$this->idprof3 = empty($conf->global->MAIN_INFO_APE) ? '' : $conf->global->MAIN_INFO_APE;\n\t\t$this->idprof4 = empty($conf->global->MAIN_INFO_RCS) ? '' : $conf->global->MAIN_INFO_RCS;\n\t\t$this->idprof5 = empty($conf->global->MAIN_INFO_PROFID5) ? '' : $conf->global->MAIN_INFO_PROFID5;\n\t\t$this->idprof6 = empty($conf->global->MAIN_INFO_PROFID6) ? '' : $conf->global->MAIN_INFO_PROFID6;\n\t\t$this->tva_intra = empty($conf->global->MAIN_INFO_TVAINTRA) ? '' : $conf->global->MAIN_INFO_TVAINTRA; // VAT number, not necessarly INTRA.\n\t\t$this->managers = empty($conf->global->MAIN_INFO_SOCIETE_MANAGERS) ? '' : $conf->global->MAIN_INFO_SOCIETE_MANAGERS;\n\t\t$this->capital = empty($conf->global->MAIN_INFO_CAPITAL) ? '' : $conf->global->MAIN_INFO_CAPITAL;\n\t\t$this->forme_juridique_code = empty($conf->global->MAIN_INFO_SOCIETE_FORME_JURIDIQUE) ? '' : $conf->global->MAIN_INFO_SOCIETE_FORME_JURIDIQUE;\n\t\t$this->email = empty($conf->global->MAIN_INFO_SOCIETE_MAIL) ? '' : $conf->global->MAIN_INFO_SOCIETE_MAIL;\n\t\t$this->default_lang = (empty($conf->global->MAIN_LANG_DEFAULT) ? 'auto' : $conf->global->MAIN_LANG_DEFAULT);\n\t\t$this->logo = empty($conf->global->MAIN_INFO_SOCIETE_LOGO) ? '' : $conf->global->MAIN_INFO_SOCIETE_LOGO;\n\t\t$this->logo_small = empty($conf->global->MAIN_INFO_SOCIETE_LOGO_SMALL) ? '' : $conf->global->MAIN_INFO_SOCIETE_LOGO_SMALL;\n\t\t$this->logo_mini = empty($conf->global->MAIN_INFO_SOCIETE_LOGO_MINI) ? '' : $conf->global->MAIN_INFO_SOCIETE_LOGO_MINI;\n\t\t$this->logo_squarred = empty($conf->global->MAIN_INFO_SOCIETE_LOGO_SQUARRED) ? '' : $conf->global->MAIN_INFO_SOCIETE_LOGO_SQUARRED;\n\t\t$this->logo_squarred_small = empty($conf->global->MAIN_INFO_SOCIETE_LOGO_SQUARRED_SMALL) ? '' : $conf->global->MAIN_INFO_SOCIETE_LOGO_SQUARRED_SMALL;\n\t\t$this->logo_squarred_mini = empty($conf->global->MAIN_INFO_SOCIETE_LOGO_SQUARRED_MINI) ? '' : $conf->global->MAIN_INFO_SOCIETE_LOGO_SQUARRED_MINI;\n\n\t\t// Define if company use vat or not\n\t\t$this->tva_assuj = $conf->global->FACTURE_TVAOPTION;\n\n\t\t// Define if company use local taxes\n\t\t$this->localtax1_assuj = ((isset($conf->global->FACTURE_LOCAL_TAX1_OPTION) && ($conf->global->FACTURE_LOCAL_TAX1_OPTION == '1' || $conf->global->FACTURE_LOCAL_TAX1_OPTION == 'localtax1on')) ? 1 : 0);\n\t\t$this->localtax2_assuj = ((isset($conf->global->FACTURE_LOCAL_TAX2_OPTION) && ($conf->global->FACTURE_LOCAL_TAX2_OPTION == '1' || $conf->global->FACTURE_LOCAL_TAX2_OPTION == 'localtax2on')) ? 1 : 0);\n\t}\n\n\t/**\n\t *  Initialise an instance with random values.\n\t *  Used to build previews or test instances.\n\t *\tid must be 0 if object instance is a specimen.\n\t *\n\t *  @return\tint >0 if ok\n\t */\n\tpublic function initAsSpecimen()\n\t{\n\t\t$now = dol_now();\n\n\t\t// Initialize parameters\n\t\t$this->id = 0;\n\t\t$this->entity = 1;\n\t\t$this->name = 'THIRDPARTY SPECIMEN '.dol_print_date($now, 'dayhourlog');\n\t\t$this->nom = $this->name; // For backward compatibility\n\t\t$this->ref_ext = 'Ref ext';\n\t\t$this->specimen = 1;\n\t\t$this->address = '21 jump street';\n\t\t$this->zip = '99999';\n\t\t$this->town = 'MyTown';\n\t\t$this->state_id = 1;\n\t\t$this->state_code = 'AA';\n\t\t$this->state = 'MyState';\n\t\t$this->country_id = 1;\n\t\t$this->country_code = 'FR';\n\t\t$this->email = 'specimen@specimen.com';\n\t\t$this->socialnetworks = array(\n\t\t\t'skype' => 'tom.hanson',\n\t\t\t'twitter' => 'tomhanson',\n\t\t\t'facebook' => 'tomhanson',\n\t\t\t'linkedin' => 'tomhanson',\n\t\t);\n\t\t$this->url = 'http://www.specimen.com';\n\n\t\t$this->phone = '0909090901';\n\t\t$this->fax = '0909090909';\n\n\t\t$this->code_client = 'CC-'.dol_print_date($now, 'dayhourlog');\n\t\t$this->code_fournisseur = 'SC-'.dol_print_date($now, 'dayhourlog');\n\t\t$this->capital = 10000;\n\t\t$this->client = 1;\n\t\t$this->prospect = 1;\n\t\t$this->fournisseur = 1;\n\t\t$this->tva_assuj = 1;\n\t\t$this->tva_intra = 'EU1234567';\n\t\t$this->note_public = 'This is a comment (public)';\n\t\t$this->note_private = 'This is a comment (private)';\n\n\t\t$this->idprof1 = 'idprof1';\n\t\t$this->idprof2 = 'idprof2';\n\t\t$this->idprof3 = 'idprof3';\n\t\t$this->idprof4 = 'idprof4';\n\t\t$this->idprof5 = 'idprof5';\n\t\t$this->idprof6 = 'idprof6';\n\t\treturn 1;\n\t}\n\n\t/**\n\t *  Check if we must use localtax feature or not according to country (country of $mysoc in most cases).\n\t *\n\t *\t@param\t\tint\t\t$localTaxNum\tTo get info for only localtax1 or localtax2\n\t *  @return\t\tboolean\t\t\t\t\ttrue or false\n\t */\n\tpublic function useLocalTax($localTaxNum = 0)\n\t{\n\t\t$sql  = \"SELECT t.localtax1, t.localtax2\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t$sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$this->db->escape($this->country_code).\"'\";\n\t\t$sql .= \" AND t.active = 1\";\n\t\tif (empty($localTaxNum)) {\n\t\t\t$sql .= \" AND (t.localtax1_type <> '0' OR t.localtax2_type <> '0')\";\n\t\t} elseif ($localTaxNum == 1) {\n\t\t\t$sql .= \" AND t.localtax1_type <> '0'\";\n\t\t} elseif ($localTaxNum == 2) {\n\t\t\t$sql .= \" AND t.localtax2_type <> '0'\";\n\t\t}\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\treturn ($this->db->num_rows($resql) > 0);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t *  Check if we must use NPR Vat (french stupid rule) or not according to country (country of $mysoc in most cases).\n\t *\n\t *  @return\t\tboolean\t\t\t\t\ttrue or false\n\t */\n\tpublic function useNPR()\n\t{\n\t\t$sql  = \"SELECT t.rowid\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t$sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$this->db->escape($this->country_code).\"'\";\n\t\t$sql .= \" AND t.active = 1 AND t.recuperableonly = 1\";\n\n\t\tdol_syslog(\"useNPR\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\treturn ($this->db->num_rows($resql) > 0);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t *  Check if we must use revenue stamps feature or not according to country (country of $mysocin most cases).\n\t *  Table c_revenuestamp contains the country and value of stamp per invoice.\n\t *\n\t *  @return\t\tboolean\t\t\ttrue or false\n\t */\n\tpublic function useRevenueStamp()\n\t{\n\t\t$sql  = \"SELECT COUNT(*) as nb\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_revenuestamp as r, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t$sql .= \" WHERE r.fk_pays = c.rowid AND c.code = '\".$this->db->escape($this->country_code).\"'\";\n\t\t$sql .= \" AND r.active = 1\";\n\n\t\tdol_syslog(\"useRevenueStamp\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\treturn (($obj->nb > 0) ?true:false);\n\t\t} else {\n\t\t\t$this->error = $this->db->lasterror();\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn prostect level\n\t *\n\t *  @return     string        Libelle\n\t */\n\tpublic function getLibProspLevel()\n\t{\n\t\treturn $this->LibProspLevel($this->fk_prospectlevel);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return label of prospect level\n\t *\n\t *  @param\tint\t\t$fk_prospectlevel   \tProspect level\n\t *  @return string        \t\t\t\t\tlabel of level\n\t */\n\tpublic function LibProspLevel($fk_prospectlevel)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\n\t\t$lib = $langs->trans(\"ProspectLevel\".$fk_prospectlevel);\n\t\t// If lib not found in language file, we get label from cache/databse\n\t\tif ($lib == $langs->trans(\"ProspectLevel\".$fk_prospectlevel)) {\n\t\t\t$lib = $langs->getLabelFromKey($this->db, $fk_prospectlevel, 'c_prospectlevel', 'code', 'label');\n\t\t}\n\t\treturn $lib;\n\t}\n\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Set prospect level\n\t *\n\t *  @param  User\t$user\t\tUser who sets the discount\n\t *\t@return\tint\t\t\t\t\t<0 if KO, >0 if OK\n\t * @deprecated Use update function instead\n\t */\n\tpublic function set_prospect_level(User $user)\n\t{\n\t\t// phpcs:enable\n\t\treturn $this->update($this->id, $user);\n\t}\n\n\t/**\n\t *  Return status of prospect\n\t *\n\t *  @param\tint\t\t$mode       0=libelle long, 1=libelle court, 2=Picto + Libelle court, 3=Picto, 4=Picto + Libelle long\n\t *  @param\tstring\t$label\t\tLabel to use for status for added status\n\t *  @return string        \t\tLibelle\n\t */\n\tpublic function getLibProspCommStatut($mode = 0, $label = '')\n\t{\n\t\treturn $this->LibProspCommStatut($this->stcomm_id, $mode, $label, $this->stcomm_picto);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return label of a given status\n\t *\n\t *  @param\tint|string\t$status        \tId or code for prospection status\n\t *  @param  int\t\t\t$mode          \t0=long label, 1=short label, 2=Picto + short label, 3=Picto, 4=Picto + long label, 5=Short label + Picto\n\t *  @param\tstring\t\t$label\t\t\tLabel to use for status for added status\n\t *\t@param \tstring\t\t$picto      \tName of image file to show ('filenew', ...)\n\t *                                      If no extension provided, we use '.png'. Image must be stored into theme/xxx/img directory.\n\t *                                      Example: picto.png                  if picto.png is stored into htdocs/theme/mytheme/img\n\t *                                      Example: picto.png@mymodule         if picto.png is stored into htdocs/mymodule/img\n\t *                                      Example: /mydir/mysubdir/picto.png  if picto.png is stored into htdocs/mydir/mysubdir (pictoisfullpath must be set to 1)\n\t *  @return string       \t \t\t\tLabel of prospection status\n\t */\n\tpublic function LibProspCommStatut($status, $mode = 0, $label = '', $picto = '')\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\t$langs->load('customers');\n\n\t\tif ($mode == 2) {\n\t\t\tif ($status == '-1' || $status == 'ST_NO') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect-1\"), -1, $picto).' '.$langs->trans(\"StatusProspect-1\");\n\t\t\t} elseif ($status == '0' || $status == 'ST_NEVER') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect0\"), 0, $picto).' '.$langs->trans(\"StatusProspect0\");\n\t\t\t} elseif ($status == '1' || $status == 'ST_TODO') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect1\"), 1, $picto).' '.$langs->trans(\"StatusProspect1\");\n\t\t\t} elseif ($status == '2' || $status == 'ST_PEND') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect2\"), 2, $picto).' '.$langs->trans(\"StatusProspect2\");\n\t\t\t} elseif ($status == '3' || $status == 'ST_DONE') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect3\"), 3, $picto).' '.$langs->trans(\"StatusProspect3\");\n\t\t\t} else {\n\t\t\t\treturn img_action(($langs->trans(\"StatusProspect\".$status) != \"StatusProspect\".$status) ? $langs->trans(\"StatusProspect\".$status) : $label, 0, $picto).' '.(($langs->trans(\"StatusProspect\".$status) != \"StatusProspect\".$status) ? $langs->trans(\"StatusProspect\".$status) : $label);\n\t\t\t}\n\t\t} elseif ($mode == 3) {\n\t\t\tif ($status == '-1' || $status == 'ST_NO') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect-1\"), -1, $picto);\n\t\t\t} elseif ($status == '0' || $status == 'ST_NEVER') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect0\"), 0, $picto);\n\t\t\t} elseif ($status == '1' || $status == 'ST_TODO') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect1\"), 1, $picto);\n\t\t\t} elseif ($status == '2' || $status == 'ST_PEND') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect2\"), 2, $picto);\n\t\t\t} elseif ($status == '3' || $status == 'ST_DONE') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect3\"), 3, $picto);\n\t\t\t} else {\n\t\t\t\treturn img_action(($langs->trans(\"StatusProspect\".$status) != \"StatusProspect\".$status) ? $langs->trans(\"StatusProspect\".$status) : $label, 0, $picto);\n\t\t\t}\n\t\t} elseif ($mode == 4) {\n\t\t\tif ($status == '-1' || $status == 'ST_NO') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect-1\"), -1, $picto).' '.$langs->trans(\"StatusProspect-1\");\n\t\t\t} elseif ($status == '0' || $status == 'ST_NEVER') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect0\"), 0, $picto).' '.$langs->trans(\"StatusProspect0\");\n\t\t\t} elseif ($status == '1' || $status == 'ST_TODO') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect1\"), 1, $picto).' '.$langs->trans(\"StatusProspect1\");\n\t\t\t} elseif ($status == '2' || $status == 'ST_PEND') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect2\"), 2, $picto).' '.$langs->trans(\"StatusProspect2\");\n\t\t\t} elseif ($status == '3' || $status == 'ST_DONE') {\n\t\t\t\treturn img_action($langs->trans(\"StatusProspect3\"), 3, $picto).' '.$langs->trans(\"StatusProspect3\");\n\t\t\t} else {\n\t\t\t\treturn img_action(($langs->trans(\"StatusProspect\".$status) != \"StatusProspect\".$status) ? $langs->trans(\"StatusProspect\".$status) : $label, 0, $picto).' '.(($langs->trans(\"StatusProspect\".$status) != \"StatusProspect\".$status) ? $langs->trans(\"StatusProspect\".$status) : $label);\n\t\t\t}\n\t\t}\n\n\t\treturn \"Error, mode/status not found\";\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Set outstanding value\n\t *\n\t *  @param  User\t$user\t\tUser making change\n\t *\t@return\tint\t\t\t\t\t<0 if KO, >0 if OK\n\t * @deprecated Use update function instead\n\t */\n\tpublic function set_OutstandingBill(User $user)\n\t{\n\t\t// phpcs:enable\n\t\treturn $this->update($this->id, $user);\n\t}\n\n\t/**\n\t *  Return amount of order not paid and total\n\t *\n\t *  @param     string      $mode    'customer' or 'supplier'\n\t *  @return    array\t\t\t\tarray('opened'=>Amount, 'total'=>Total amount)\n\t */\n\tpublic function getOutstandingProposals($mode = 'customer')\n\t{\n\t\t$table = 'propal';\n\t\tif ($mode == 'supplier') {\n\t\t\t$table = 'supplier_proposal';\n\t\t}\n\n\t\t$sql  = \"SELECT rowid, ref, total_ht, total_ttc, fk_statut as status FROM \".MAIN_DB_PREFIX.$table.\" as f\";\n\t\t$sql .= \" WHERE fk_soc = \".((int) $this->id);\n\t\tif ($mode == 'supplier') {\n\t\t\t$sql .= \" AND entity IN (\".getEntity('supplier_proposal').\")\";\n\t\t} else {\n\t\t\t$sql .= \" AND entity IN (\".getEntity('propal').\")\";\n\t\t}\n\n\t\tdol_syslog(\"getOutstandingProposals for fk_soc = \".((int) $this->id), LOG_DEBUG);\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$outstandingOpened = 0;\n\t\t\t$outstandingTotal = 0;\n\t\t\t$outstandingTotalIncTax = 0;\n\t\t\t$arrayofref = array();\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$arrayofref[$obj->rowid] = $obj->ref;\n\t\t\t\t$outstandingTotal += $obj->total_ht;\n\t\t\t\t$outstandingTotalIncTax += $obj->total_ttc;\n\t\t\t\tif ($obj->status != 0) {\n\t\t\t\t\t// Not a draft\n\t\t\t\t\t$outstandingOpened += $obj->total_ttc;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn array('opened'=>$outstandingOpened, 'total_ht'=>$outstandingTotal, 'total_ttc'=>$outstandingTotalIncTax, 'refs'=>$arrayofref); // 'opened' is 'incl taxes'\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t/**\n\t *  Return amount of order not paid and total\n\t *\n\t *  @param     string      $mode    'customer' or 'supplier'\n\t *  @return\t\tarray\t\t\t\tarray('opened'=>Amount, 'total'=>Total amount)\n\t */\n\tpublic function getOutstandingOrders($mode = 'customer')\n\t{\n\t\t$table = 'commande';\n\t\tif ($mode == 'supplier') {\n\t\t\t$table = 'commande_fournisseur';\n\t\t}\n\n\t\t$sql  = \"SELECT rowid, ref, total_ht, total_ttc, fk_statut as status FROM \".MAIN_DB_PREFIX.$table.\" as f\";\n\t\t$sql .= \" WHERE fk_soc = \".((int) $this->id);\n\t\tif ($mode == 'supplier') {\n\t\t\t$sql .= \" AND entity IN (\".getEntity('supplier_order').\")\";\n\t\t} else {\n\t\t\t$sql .= \" AND entity IN (\".getEntity('commande').\")\";\n\t\t}\n\n\t\tdol_syslog(\"getOutstandingOrders\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$outstandingOpened = 0;\n\t\t\t$outstandingTotal = 0;\n\t\t\t$outstandingTotalIncTax = 0;\n\t\t\t$arrayofref = array();\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$arrayofref[$obj->rowid] = $obj->ref;\n\t\t\t\t$outstandingTotal += $obj->total_ht;\n\t\t\t\t$outstandingTotalIncTax += $obj->total_ttc;\n\t\t\t\tif ($obj->status != 0) {\n\t\t\t\t\t// Not a draft\n\t\t\t\t\t$outstandingOpened += $obj->total_ttc;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn array('opened'=>$outstandingOpened, 'total_ht'=>$outstandingTotal, 'total_ttc'=>$outstandingTotalIncTax, 'refs'=>$arrayofref); // 'opened' is 'incl taxes'\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t/**\n\t *  Return amount of bill not paid and total\n\t *\n\t *  @param     string      $mode    'customer' or 'supplier'\n\t *  @param     int      $late    \t0 => all invoice, 1=> only late\n\t *  @return\t\tarray\t\t\t\tarray('opened'=>Amount, 'total'=>Total amount)\n\t */\n\tpublic function getOutstandingBills($mode = 'customer', $late = 0)\n\t{\n\t\t$table = 'facture';\n\t\tif ($mode == 'supplier') {\n\t\t\t$table = 'facture_fourn';\n\t\t}\n\n\t\t/* Accurate value of remain to pay is to sum remaintopay for each invoice\n\t\t $paiement = $invoice->getSommePaiement();\n\t\t $creditnotes=$invoice->getSumCreditNotesUsed();\n\t\t $deposits=$invoice->getSumDepositsUsed();\n\t\t $alreadypayed=price2num($paiement + $creditnotes + $deposits,'MT');\n\t\t $remaintopay=price2num($invoice->total_ttc - $paiement - $creditnotes - $deposits,'MT');\n\t\t */\n\t\t$sql = \"SELECT rowid, ref, total_ht, total_ttc, paye, type, fk_statut as status, close_code FROM \".MAIN_DB_PREFIX.$table.\" as f\";\n\t\t$sql .= \" WHERE fk_soc = \".((int) $this->id);\n\t\tif (!empty($late)) {\n\t\t\t$sql .= \" AND date_lim_reglement < '\".$this->db->idate(dol_now()).\"'\";\n\t\t}\n\t\tif ($mode == 'supplier') {\n\t\t\t$sql .= \" AND entity IN (\".getEntity('facture_fourn').\")\";\n\t\t} else {\n\t\t\t$sql .= \" AND entity IN (\".getEntity('invoice').\")\";\n\t\t}\n\n\t\tdol_syslog(\"getOutstandingBills\", LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql) {\n\t\t\t$outstandingOpened = 0;\n\t\t\t$outstandingTotal = 0;\n\t\t\t$outstandingTotalIncTax = 0;\n\t\t\t$arrayofref = array();\n\t\t\tif ($mode == 'supplier') {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/fourn/class/fournisseur.facture.class.php';\n\t\t\t\t$tmpobject = new FactureFournisseur($this->db);\n\t\t\t} else {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/compta/facture/class/facture.class.php';\n\t\t\t\t$tmpobject = new Facture($this->db);\n\t\t\t}\n\t\t\twhile ($obj = $this->db->fetch_object($resql)) {\n\t\t\t\t$arrayofref[$obj->rowid] = $obj->ref;\n\t\t\t\t$tmpobject->id = $obj->rowid;\n\n\t\t\t\tif ($obj->status != $tmpobject::STATUS_DRAFT                                           // Not a draft\n\t\t\t\t\t&& !($obj->status == $tmpobject::STATUS_ABANDONED && $obj->close_code == 'replaced')  // Not a replaced invoice\n\t\t\t\t\t) {\n\t\t\t\t\t$outstandingTotal += $obj->total_ht;\n\t\t\t\t\t$outstandingTotalIncTax += $obj->total_ttc;\n\t\t\t\t}\n\t\t\t\tif ($obj->paye == 0\n\t\t\t\t\t&& $obj->status != $tmpobject::STATUS_DRAFT    \t\t// Not a draft\n\t\t\t\t\t&& $obj->status != $tmpobject::STATUS_ABANDONED\t    // Not abandonned\n\t\t\t\t\t&& $obj->status != $tmpobject::STATUS_CLOSED) {\t\t// Not classified as paid\n\t\t\t\t\t//$sql .= \" AND (status <> 3 OR close_code <> 'abandon')\";\t\t// Not abandonned for undefined reason\n\t\t\t\t\t$paiement = $tmpobject->getSommePaiement();\n\t\t\t\t\t$creditnotes = $tmpobject->getSumCreditNotesUsed();\n\t\t\t\t\t$deposits = $tmpobject->getSumDepositsUsed();\n\n\t\t\t\t\t$outstandingOpened += $obj->total_ttc - $paiement - $creditnotes - $deposits;\n\t\t\t\t}\n\n\t\t\t\t//if credit note is converted but not used\n\t\t\t\t// TODO Do this also for customer ?\n\t\t\t\tif ($mode == 'supplier' && $obj->type == FactureFournisseur::TYPE_CREDIT_NOTE && $tmpobject->isCreditNoteUsed()) {\n\t\t\t\t\t$outstandingOpened -= $tmpobject->getSumFromThisCreditNotesNotUsed();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn array('opened'=>$outstandingOpened, 'total_ht'=>$outstandingTotal, 'total_ttc'=>$outstandingTotalIncTax, 'refs'=>$arrayofref); // 'opened' is 'incl taxes'\n\t\t} else {\n\t\t\tdol_syslog(\"Sql error \".$this->db->lasterror, LOG_ERR);\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t/**\n\t * Return label of status customer is prospect/customer\n\t *\n\t * @return   string        \tLabel\n\t * @see getTypeUrl()\n\t */\n\tpublic function getLibCustProspStatut()\n\t{\n\t\treturn $this->LibCustProspStatut($this->client);\n\t}\n\n\t// phpcs:disable PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps\n\t/**\n\t *  Return the label of the customer/prospect status\n\t *\n\t *  @param\tint\t\t$status         Id of prospection status\n\t *  @return\tstring          \t\tLabel of prospection status\n\t */\n\tpublic function LibCustProspStatut($status)\n\t{\n\t\t// phpcs:enable\n\t\tglobal $langs;\n\t\t$langs->load('companies');\n\n\t\tif ($status == 0) {\n\t\t\treturn $langs->trans(\"NorProspectNorCustomer\");\n\t\t} elseif ($status == 1) {\n\t\t\treturn $langs->trans(\"Customer\");\n\t\t} elseif ($status == 2) {\n\t\t\treturn $langs->trans(\"Prospect\");\n\t\t} elseif ($status == 3) {\n\t\t\treturn $langs->trans(\"ProspectCustomer\");\n\t\t}\n\t}\n\n\n\t/**\n\t *  Create a document onto disk according to template module.\n\t *\n\t *\t@param\tstring\t\t$modele\t\t\tGenerator to use. Caller must set it to obj->model_pdf or GETPOST('model','alpha') for example.\n\t *\t@param\tTranslate\t$outputlangs\tobjet lang a utiliser pour traduction\n\t *  @param  int\t\t\t$hidedetails    Hide details of lines\n\t *  @param  int\t\t\t$hidedesc       Hide description\n\t *  @param  int\t\t\t$hideref        Hide ref\n\t *  @param  null|array  $moreparams     Array to provide more information\n\t *\t@return int        \t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function generateDocument($modele, $outputlangs, $hidedetails = 0, $hidedesc = 0, $hideref = 0, $moreparams = null)\n\t{\n\t\tglobal $conf, $user, $langs;\n\n\t\tif (!empty($moreparams) && !empty($moreparams['use_companybankid'])) {\n\t\t\t$modelpath = \"core/modules/bank/doc/\";\n\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/societe/class/companybankaccount.class.php';\n\t\t\t$companybankaccount = new CompanyBankAccount($this->db);\n\t\t\t$result = $companybankaccount->fetch($moreparams['use_companybankid']);\n\t\t\tif (!$result) {\n\t\t\t\tdol_print_error($this->db, $companybankaccount->error, $companybankaccount->errors);\n\t\t\t}\n\t\t\t$result = $companybankaccount->commonGenerateDocument($modelpath, $modele, $outputlangs, $hidedetails, $hidedesc, $hideref, $moreparams);\n\t\t} else {\n\t\t\t// Positionne le modele sur le nom du modele a utiliser\n\t\t\tif (!dol_strlen($modele)) {\n\t\t\t\tif (!empty($conf->global->COMPANY_ADDON_PDF)) {\n\t\t\t\t\t$modele = $conf->global->COMPANY_ADDON_PDF;\n\t\t\t\t} else {\n\t\t\t\t\tprint $langs->trans(\"Error\").\" \".$langs->trans(\"Error_COMPANY_ADDON_PDF_NotDefined\");\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!isset($this->bank_account)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/societe/class/companybankaccount.class.php';\n\t\t\t\t$bac = new CompanyBankAccount($this->db);\n\t\t\t\t$result = $bac->fetch(0, $this->id);\n\t\t\t\tif ($result > 0) {\n\t\t\t\t\t$this->bank_account = $bac;\n\t\t\t\t} else {\n\t\t\t\t\t$this->bank_account = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$modelpath = \"core/modules/societe/doc/\";\n\n\t\t\t$result = $this->commonGenerateDocument($modelpath, $modele, $outputlangs, $hidedetails, $hidedesc, $hideref, $moreparams);\n\t\t}\n\n\t\treturn $result;\n\t}\n\n\n\t/**\n\t * Sets object to supplied categories.\n\t *\n\t * Deletes object from existing categories not supplied.\n\t * Adds it to non existing supplied categories.\n\t * Existing categories are left untouch.\n\t *\n\t * @param \tint[]|int \t$categories \tCategory ID or array of Categories IDs\n\t * @param \tstring \t\t$type_categ \t\t\tCategory type ('customer' or 'supplier')\n\t * @return\tint\t\t\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function setCategories($categories, $type_categ)\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n\n\t\t// Decode type\n\t\tif (!in_array($type_categ, array(Categorie::TYPE_CUSTOMER, Categorie::TYPE_SUPPLIER))) {\n\t\t\tdol_syslog(__METHOD__.': Type '.$type_categ.'is an unknown company category type. Done nothing.', LOG_ERR);\n\t\t\treturn -1;\n\t\t}\n\n\t\treturn parent::setCategoriesCommon($categories, $type_categ);\n\t}\n\n\t/**\n\t * Sets sales representatives of the thirdparty\n\t *\n\t * @param \tint[]|int \t$salesrep\t \tUser ID or array of user IDs\n\t * @param   bool        $onlyAdd        Only add (no delete before)\n\t * @return\tint\t\t\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function setSalesRep($salesrep, $onlyAdd = false)\n\t{\n\t\tglobal $user;\n\n\t\t// Handle single user\n\t\tif (!is_array($salesrep)) {\n\t\t\t$salesrep = array($salesrep);\n\t\t}\n\n\t\t$to_del = array(); // Nothing to delete\n\t\t$to_add = $salesrep;\n\t\tif ($onlyAdd === false) {\n\t\t\t// Get current users\n\t\t\t$existing = $this->getSalesRepresentatives($user, 1);\n\n\t\t\t// Diff\n\t\t\tif (is_array($existing)) {\n\t\t\t\t$to_del = array_diff($existing, $salesrep);\n\t\t\t\t$to_add = array_diff($salesrep, $existing);\n\t\t\t}\n\t\t}\n\n\t\t$error = 0;\n\n\t\t// Process\n\t\tforeach ($to_del as $del) {\n\t\t\t$this->del_commercial($user, $del);\n\t\t}\n\t\tforeach ($to_add as $add) {\n\t\t\t$result = $this->add_commercial($user, $add);\n\t\t\tif ($result < 0) {\n\t\t\t\t$error++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $error ? -1 : 1;\n\t}\n\n\t/**\n\t *    Define third-party type of current company\n\t *\n\t *    @param\tint\t\t$typent_id\tthird party type rowid in llx_c_typent\n\t *    @return\tint     \t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function setThirdpartyType($typent_id)\n\t{\n\t\tif ($this->id) {\n\t\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.\"societe\";\n\t\t\t$sql .= \" SET fk_typent = \".($typent_id > 0 ? $typent_id : \"null\");\n\t\t\t$sql .= \" WHERE rowid = \".$this->id;\n\t\t\tdol_syslog(get_class($this).'::setThirdpartyType', LOG_DEBUG);\n\t\t\t$resql = $this->db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$this->typent_id = $typent_id;\n\t\t\t\t$this->typent_code = dol_getIdFromCode($this->db, $this->$typent_id, 'c_typent', 'id', 'code');\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t * Function used to replace a thirdparty id with another one.\n\t * It must be used within a transaction to avoid trouble\n\t *\n\t * @param \tDoliDB \t$db \t\tDatabase handler\n\t * @param \tint \t$origin_id \tOld thirdparty id (will be removed)\n\t * @param \tint \t$dest_id \tNew thirdparty id\n\t * @return \tbool\t\t\t\tTrue if success, False if error\n\t */\n\tpublic static function replaceThirdparty(DoliDB $db, $origin_id, $dest_id)\n\t{\n\t\tif ($origin_id == $dest_id) {\n\t\t\tdol_syslog('Error: Try to merge a thirdparty into itself');\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * Thirdparty commercials cannot be the same in both thirdparties so we look for them and remove some to avoid duplicate.\n\t\t * Because this function is meant to be executed within a transaction, we won't take care of begin/commit.\n\t\t */\n\t\t$sql = 'SELECT rowid FROM '.MAIN_DB_PREFIX.'societe_commerciaux ';\n\t\t$sql .= ' WHERE fk_soc = '.(int) $dest_id.' AND fk_user IN ( ';\n\t\t$sql .= ' SELECT fk_user ';\n\t\t$sql .= ' FROM '.MAIN_DB_PREFIX.'societe_commerciaux ';\n\t\t$sql .= ' WHERE fk_soc = '.(int) $origin_id.') ';\n\n\t\t$resql = $db->query($sql);\n\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t$db->query('DELETE FROM '.MAIN_DB_PREFIX.'societe_commerciaux WHERE rowid = '.((int) $obj->rowid));\n\t\t}\n\n\t\t/**\n\t\t * llx_societe_extrafields table must not be here because we don't care about the old thirdparty data\n\t\t * Do not include llx_societe because it will be replaced later\n\t\t */\n\t\t$tables = array(\n\t\t\t'societe_address',\n\t\t\t'societe_commerciaux',\n\t\t\t'societe_prices',\n\t\t\t'societe_remise',\n\t\t\t'societe_remise_except',\n\t\t\t'societe_rib'\n\t\t);\n\n\t\treturn CommonObject::commonReplaceThirdparty($db, $origin_id, $dest_id, $tables);\n\t}\n\n\t/**\n\t * Sets an accountancy code for a thirdparty.\n\t * Also calls COMPANY_MODIFY trigger when modified\n\t *\n\t * @param   string  $type   It can be only 'buy' or 'sell'\n\t * @param   string  $value  Accountancy code\n\t * @return  int             <0 KO >0 OK\n\t */\n\tpublic function setAccountancyCode($type, $value)\n\t{\n\t\tglobal $user, $langs, $conf;\n\n\t\t$this->db->begin();\n\n\t\tif ($type == 'buy') {\n\t\t\t$field = 'accountancy_code_buy';\n\t\t} elseif ($type == 'sell') {\n\t\t\t$field = 'accountancy_code_sell';\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\n\t\t$sql = \"UPDATE \".MAIN_DB_PREFIX.$this->table_element.\" SET \";\n\t\t$sql.= \"$field = '\".$this->db->escape($value).\"'\";\n\t\t$sql.= \" WHERE rowid = \".$this->id;\n\n\t\tdol_syslog(get_class($this).\"::\".__FUNCTION__.\" sql=\".$sql, LOG_DEBUG);\n\t\t$resql = $this->db->query($sql);\n\n\t\tif ($resql) {\n\t\t\t// Call triggers\n\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n\t\t\t$interface=new Interfaces($this->db);\n\t\t\t$result=$interface->run_triggers('COMPANY_MODIFY', $this, $user, $langs, $conf);\n\t\t\tif ($result < 0) {\n\t\t\t\t$this->errors=$interface->errors;\n\t\t\t\t$this->db->rollback();\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\t// End call triggers\n\n\t\t\t$this->$field = $value;\n\n\t\t\t$this->db->commit();\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t$this->error=$this->db->lasterror();\n\t\t\t$this->db->rollback();\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *\tFunction to get partnerships array\n\t *\n\t *  @param\t\tstring\t\t$mode\t\t'member' or 'thirdparty'\n\t *\t@return\t\tint\t\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tpublic function fetchPartnerships($mode)\n\t{\n\t\tglobal $langs;\n\n\t\trequire_once DOL_DOCUMENT_ROOT.'/parntership/class/partnership.class.php';\n\n\n\t\t$this->partnerships[] = array();\n\n\t\treturn 1;\n\t}\n}\n"], "filenames": ["htdocs/compta/bank/class/account.class.php", "htdocs/compta/sociales/class/cchargesociales.class.php", "htdocs/societe/card.php", "htdocs/societe/class/societe.class.php"], "buggy_code_start_loc": [832, 263, 557, 897], "buggy_code_end_loc": [834, 270, 558, 1379], "fixing_code_start_loc": [832, 263, 557, 897], "fixing_code_end_loc": [834, 270, 558, 1379], "type": "CWE-89", "message": "An SQL Injection vulnerability exists in Dolibarr ERP/CRM 13.0.2 (fixed version is 14.0.0) via a POST request to the country_id parameter in an UPDATE statement.", "other": {"cve": {"id": "CVE-2021-36625", "sourceIdentifier": "cve@mitre.org", "published": "2022-03-31T18:15:07.927", "lastModified": "2022-04-11T15:21:23.260", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "An SQL Injection vulnerability exists in Dolibarr ERP/CRM 13.0.2 (fixed version is 14.0.0) via a POST request to the country_id parameter in an UPDATE statement."}, {"lang": "es", "value": "Se presenta una vulnerabilidad de inyecci\u00f3n SQL en Dolibarr ERP/CRM versi\u00f3n 13.0.2 (la versi\u00f3n corregida es 14.0.0) por medio de una petici\u00f3n POST al par\u00e1metro country_id en una sentencia UPDATE"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:dolibarr:dolibarr_erp\\/crm:13.0.2:*:*:*:*:*:*:*", "matchCriteriaId": "1CC5DADA-7518-4BA3-A4E4-8672E3BB5901"}]}]}], "references": [{"url": "https://github.com/Dolibarr/dolibarr/commit/abb1ad6bf0469eccd2b58beb20bdabc18fc36e22", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Dolibarr/dolibarr/commit/abb1ad6bf0469eccd2b58beb20bdabc18fc36e22"}}