{"buggy_code": ["<?php\n/**\n * This file stores default settings for Kaltura html5 client library \"mwEmbed\"\n *\n * DO NOT MODIFY THIS FILE. Instead modify LocalSettings.php in the parent mwEmbd directory.\n *\n */\n\nif (isset($_SERVER[\"HTTP_X_FORWARDED_HOST\"]))\n{\n    // support multiple hosts (comma separated) in HTTP_X_FORWARDED_HOST\n    $xForwardedHosts = explode(',', $_SERVER['HTTP_X_FORWARDED_HOST']);\n    $_SERVER[\"HTTP_HOST\"] = $xForwardedHosts[0];\n    $_SERVER[\"SERVER_NAME\"] = $xForwardedHosts[0];\n}\n\n// The default cache directory\n$wgScriptCacheDirectory = realpath( dirname( __FILE__ ) ) . '/cache';\n\n$wgBaseMwEmbedPath = realpath( dirname( __FILE__ ) . '/../' );\n\n// The version of the library:\n$wgMwEmbedVersion = '2.96.rc1';\n\n// Default HTTP protocol from GET or SERVER parameters\nif( isset($_GET['protocol']) ) {\n\t$wgHTTPProtocol = ($_GET['protocol'] == 'https') ? 'https' : 'http';\n} else {\n\t$wgHTTPProtocol = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') ? 'https' : 'http';\n}\n// By default set timezone to UTC:\ndate_default_timezone_set('UTC');\n\n/**\n * Set the resource loader path to load.php based on server env.\n */\n$wgServerPort = (($_SERVER['SERVER_PORT']) != '80' && $_SERVER['SERVER_PORT'] != '443')?':'.$_SERVER['SERVER_PORT']:'';\n$wgServer = $wgHTTPProtocol . '://' . $_SERVER['SERVER_NAME'] .$wgServerPort. dirname( dirname( $_SERVER['SCRIPT_NAME'] ) ) .'/';\n\n$psRelativePath = '../kwidget-ps/';\n\n\n// By default set $wgScriptPath to empty\n$wgScriptPath = basename(dirname($_SERVER['SCRIPT_NAME'])) . '/';\n\n// Default Load Script path\n$wgLoadScript = $wgServer . $wgScriptPath . 'load.php';\n\n// Support legacy $wgResourceLoaderUrl url.\n$wgResourceLoaderUrl = $wgLoadScript;\n\n// The list of enabled modules\n// Added two base modules that must be included before others\n$wgMwEmbedEnabledModules = array( 'EmbedPlayer', 'KalturaSupport' );\n\n// By default we enable every module in the \"modules\" folder\n// Modules are registered after localsettings.php to give a chance\n// for local configuration to override the set of enabled modules\n$d = dir( realpath( dirname( __FILE__ ) )  . '/../modules' );\nwhile (false !== ($entry = $d->read())) {\n\tif( substr( $entry, 0, 1 ) != '.' && !in_array( $entry , $wgMwEmbedEnabledModules ) ){\n\t\t$wgMwEmbedEnabledModules[] = $entry;\n\t}\n}\n\n// Default debug mode\n$wgEnableScriptDebug = false;\n\n// The documentation hub makes use of git info for author and file modify time\n// $wgRepoPath allows you to provide a repo path to get this info\n// by default $wgRepoPath is false, and git checks are ignored.\n// in local settings when developing can set it to  dirname( __FILE__ );\n$wgGitRepoPath = false;\n\n// $wgMwEmbedModuleConfig allow setting of any mwEmbed configuration variable\n// ie $wgMwEmbedModuleConfig['ModuleName.Foo'] = 'bar';\n// For list of configuration variables see the .conf file in any given mwEmbed module\n$wgMwEmbedModuleConfig = array();\n\n// A special variable to note the stand alone resource loader mode:\n$wgStandAloneResourceLoaderMode = true;\n\n/**\n * Client-side resource modules.\n */\n$wgResourceModules = array();\n\n/* Default skin can be any jquery based skin */\n$wgDefaultSkin = 'no-theme';\n\n// If the resource loader is in 'debug mode'\n$wgResourceLoaderDebug = false;\n\n// If the resource loader should minify vertical space\n$wgResourceLoaderMinifyJSVerticalSpace = false;\n\n\n$wgMwEmbedProxyUrl =  $wgServer . $wgScriptPath . 'simplePhpXMLProxy.php';\n\n/**\n * Maximum time in seconds to cache resources served by the resource loader\n */\n$wgResourceLoaderMaxage = array(\n\t'versioned' => array(\n\t\t// Squid/Varnish but also any other public proxy cache between the client and MediaWiki\n\t\t'server' => 30 * 24 * 60 * 60, // 30 days\n\t\t// On the client side (e.g. in the browser cache).\n\t\t'client' => 30 * 24 * 60 * 60, // 30 days\n\t),\n\t'unversioned' => array(\n\t\t'server' => 60 * 60, // 1 hour\n\t\t'client' => 60 * 60, // 1 hour\n\t),\n);\n/***\n * External module config:\n */\n$wgExternalPlayersSupportedTypes = array('YouTube');\n\n/*********************************************************\n * Default Kaltura Configuration:\n * TODO move kaltura configuration to KalturaSupport module ( part of New ResourceLoader update )\n ********************************************************/\n\n//Embedded services\n//To enable service re routing for entryResult calls\n$wgEnableKalturaEmbedServicesRouting = false;\n\n// To include signed headers with user IPs for IP restriction lookups, input a salt string for\n// $wgKalturaRemoteAddressSalt configuration option.\n$wgKalturaRemoteAddressSalt = false;\n\n// If we should check for onPage resources per the external resources plugin\n$wgKalturaEnableEmbedUiConfJs = false;\n\n// Enables the result cache while in debug mode\n// This enables fast player rendering while scripts remain unminifed.\n// ( normally $wgEnableScriptDebug disables result cache )\n$wgKalturaForceResultCache = false;\n\n// For force ip testing geo restrictions\n$wgKalturaForceIP = false;\n\n// To test sites with referre restrictions:\n$wgKalturaForceReferer = false;\n\n// The default Kaltura service url:\n$wgKalturaServiceUrl = 'http://cdnapi.kaltura.com';\n// if https use cdnsecakmi\nif( $wgHTTPProtocol == 'https' ){\n\t$wgKalturaServiceUrl =  'https://cdnapisec.kaltura.com';\n}\n\n// Default Kaltura CDN url:\n$wgKalturaCDNUrl = 'http://cdnbakmi.kaltura.com';\n// if https use cdnsecakmi\nif( $wgHTTPProtocol == 'https' ){\n\t$wgKalturaCDNUrl =  'https://cdnsecakmi.kaltura.com';\n}\n\n// Default Kaltura Stats url\n$wgKalturaStatsServiceUrl = 'http://stats.kaltura.com';\nif( $wgHTTPProtocol == 'https' ){\n\t$wgKalturaStatsServiceUrl = 'https://stats.kaltura.com';\n}\n\n// Default Kaltura service url:\n$wgKalturaServiceBase = '/api_v3/index.php?service=';\n\n// Log Api Request\n$wgLogApiRequests = false;\n\n// Default CDN Asset Path\n$wgCDNAssetPath = $wgHTTPProtocol . '://' . $_SERVER['HTTP_HOST'];\n\n// Default api request timeout in seconds\n$wgKalturaServiceTimeout = 20;\n\n// If the iframe will accept 3rd party domain remote service requests\n// should be left \"off\" in production.\n$wgKalturaAllowIframeRemoteService = false;\n\n// Default expire time for ui conf api queries in seconds\n$wgKalturaUiConfCacheTime = 60*10; // 10 min\n\n// Cache errors for 30 seconds to avoid overloading apaches in CDN setups\n$wgKalturaErrorCacheTime = 30;\n\n// By default enable the iframe rewrite\n$wgKalturaIframeRewrite = true;\n\n$wgEnableIpadHTMLControls = true;\n\n$wgKalturaUseManifestUrls = true;\n\n// The admin secret should be set to an integration admin secret key for testing\n// api actions that require admin rights, like granting a ks for preview / play:\n$wgKalturaAdminSecret = null;\n\n// By default do allow custom resource includes.\n$wgAllowCustomResourceIncludes = true;\n\n// An array of partner ids for which apple adaptive should be disabled.\n$wgKalturaPartnerDisableAppleAdaptive = array();\n\n// By default use apple adaptive if we have the ability\n$wgKalturaUseAppleAdaptive = true;\n\n/********************************************************\n *  Authentication configuration variables\n *******************************************************/\n// If the kaltura authentication should run on https ( true by default )\n$wgKalturaAuthHTTPS = true;\n// What domains are allowed to host the auth page:\n$wgKalturaAuthDomains = array( 'www.kaltura.com', 'kmc.kaltura.com' );\n\n// If google anlytics should be enabled, set to the ua string\n$wgKalturaGoogleAnalyticsUA = false;\n\n// for additional script includes.\n$wgAdditionalDocsScriptInclude = false;\n\n//Remote web inspector URL such as: weinre, fireBug\n$wgRemoteWebInspector = false;\n\n// Kaltura Supported API Features\n$wgKalturaApiFeatures = array();\n\n/*********************************************************\n * Override Domain:\n********************************************************/\n$wgEnableKalturaOverrideDomain = true;\n\n/*********************************************************\n * A comma-delimited string of allowed flashavrs to be passed to server on dynamic embed call:\n********************************************************/\n$wgAllowedVars = \"inlineScript\";\n$wgAllowedVarsKeyPartials = \"onPageJs,onPageCss,IframeCustomPluginJs,IframeCustomPluginCss\";\n$wgAllowedPluginVars = \"plugin,templatePath,templates,iframeHTML5Js,iframeHTML5Css,loadInIframe\";\n$wgAllowedPluginVarsValPartials = \"{html5ps}\";\n// Kaltura cache TTL value in unix time for dynamic embed local storage caching of kWidget, default is 10 minutes\n$wgCacheTTL = (10 * 60 * 1000);\n// Kaltura max cache entries, limit max available cached entries per domain to avoid over populating localStorage\n$wgMaxCacheEntries = 1;\n\n/*********************************************************\n * Include local settings override:\n********************************************************/\n$wgLocalSettingsFile = realpath( dirname( __FILE__ ) ) . '/../LocalSettings.php';\n\nif( is_file( $wgLocalSettingsFile ) ){\n\trequire_once( $wgLocalSettingsFile );\n}\n\nif( isset( $_GET['pskwidgetpath'] ) ){\n\t$psRelativePath = htmlspecialchars( $_GET['pskwidgetpath'] );\n}\n// The html5-ps settings file path\n$wgKalturaPSHtml5SettingsPath =  realpath( dirname( __FILE__ ) ) . '/../' . $psRelativePath . '/includes/DefaultSettings.php';\n\n// The html5-ps modules dir\n$wgKalturaPSHtml5ModulesDir =  realpath(realpath( dirname( __FILE__ ) ) . '/../' . $psRelativePath . '/ps/modules');\n\n// Enable every module in the \"ps/modules\" folder of kwidget-ps\n$wgKwidgetPsEnabledModules = array();\nif (!empty($wgKalturaPSHtml5ModulesDir)){\n    $dPs = dir( $wgKalturaPSHtml5ModulesDir );\n    while (false !== ($entryPs = $dPs->read())) {\n        if( substr( $entryPs, 0, 1 ) != '.' && !in_array( $entryPs , $wgKwidgetPsEnabledModules ) ){\n            $wgKwidgetPsEnabledModules[] = $entryPs;\n        }\n    }\n}\n\n\n//Set global configs into $wgMwEmbedModuleConfig in order to enable\n//resource loader to output the config in the response\n// if Manifest urls should be used:\n$wgMwEmbedModuleConfig['Kaltura.UseManifestUrls'] = $wgKalturaUseManifestUrls;\n//Add license server config:\nglobal $wgKalturaLicenseServerUrl, $wgKalturaUdrmLicenseServerUrl;\n$wgMwEmbedModuleConfig['Kaltura.LicenseServerURL'] = $wgKalturaLicenseServerUrl;\n$wgMwEmbedModuleConfig['Kaltura.UdrmServerURL'] = $wgKalturaUdrmLicenseServerUrl;\n\n// Add Kaltura api services: ( should be part of kaltura module config)\ninclude_once( realpath( dirname( __FILE__ ) )  . '/../modules/KalturaSupport/apiServices/mweApiKSTest.php' );\ninclude_once( realpath( dirname( __FILE__ ) )  . '/../modules/KalturaSupport/apiServices/mweApiUiConfJs.php' );\ninclude_once( realpath( dirname( __FILE__ ) )  . '/../modules/KalturaSupport/apiServices/mweApiSleepTest.php' );\ninclude_once( realpath( dirname( __FILE__ ) )  . '/../modules/KalturaSupport/apiServices/mweFeaturesList.php' );\ninclude_once( realpath( dirname( __FILE__ ) )  . '/../modules/KalturaSupport/apiServices/mweApiLanguageSupport.php' );\ninclude_once( realpath( dirname( __FILE__ ) )  . '/../modules/KalturaSupport/apiServices/mweUpgradePlayer.php' );\ninclude_once( realpath( dirname( __FILE__ ) )  . '/../modules/KalturaSupport/apiServices/mweApiGetLicenseData.php' );\ninclude_once( realpath( dirname( __FILE__ ) )  . '/../studio/studioService.php');\n/**\n * Extensions should register foreign module sources here. 'local' is a\n * built-in source that is not in this array, but defined by\n * ResourceLoader::__construct() so that it cannot be unset.\n *\n * Example:\n *   $wgResourceLoaderSources['foo'] = array(\n *       'loadScript' => 'http://example.org/w/load.php',\n *       'apiScript' => 'http://example.org/w/api.php'\n *   );\n */\n$wgResourceLoaderSources = array();\n"], "fixing_code": ["<?php\n/**\n * This file stores default settings for Kaltura html5 client library \"mwEmbed\"\n *\n * DO NOT MODIFY THIS FILE. Instead modify LocalSettings.php in the parent mwEmbd directory.\n *\n */\n\nif (isset($_SERVER[\"HTTP_X_FORWARDED_HOST\"]))\n{\n    // support multiple hosts (comma separated) in HTTP_X_FORWARDED_HOST\n    $xForwardedHosts = explode(',', $_SERVER['HTTP_X_FORWARDED_HOST']);\n    $VALID_HOSTNAME_PATTERN = \"/^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\\\-]*[a-zA-Z0-9])\\\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\\\-]*[A-Za-z0-9])$/\";\n    if (preg_match($VALID_HOSTNAME_PATTERN, $xForwardedHosts[0]) === 1)\n    {\n        $_SERVER[\"HTTP_HOST\"] = $xForwardedHosts[0];\n        $_SERVER[\"SERVER_NAME\"] = $xForwardedHosts[0];\n    }\n}\n\n// The default cache directory\n$wgScriptCacheDirectory = realpath( dirname( __FILE__ ) ) . '/cache';\n\n$wgBaseMwEmbedPath = realpath( dirname( __FILE__ ) . '/../' );\n\n// The version of the library:\n$wgMwEmbedVersion = '2.96.rc1';\n\n// Default HTTP protocol from GET or SERVER parameters\nif( isset($_GET['protocol']) ) {\n\t$wgHTTPProtocol = ($_GET['protocol'] == 'https') ? 'https' : 'http';\n} else {\n\t$wgHTTPProtocol = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') ? 'https' : 'http';\n}\n// By default set timezone to UTC:\ndate_default_timezone_set('UTC');\n\n/**\n * Set the resource loader path to load.php based on server env.\n */\n$wgServerPort = (($_SERVER['SERVER_PORT']) != '80' && $_SERVER['SERVER_PORT'] != '443')?':'.$_SERVER['SERVER_PORT']:'';\n$wgServer = $wgHTTPProtocol . '://' . $_SERVER['SERVER_NAME'] .$wgServerPort. dirname( dirname( $_SERVER['SCRIPT_NAME'] ) ) .'/';\n\n$psRelativePath = '../kwidget-ps/';\n\n\n// By default set $wgScriptPath to empty\n$wgScriptPath = basename(dirname($_SERVER['SCRIPT_NAME'])) . '/';\n\n// Default Load Script path\n$wgLoadScript = $wgServer . $wgScriptPath . 'load.php';\n\n// Support legacy $wgResourceLoaderUrl url.\n$wgResourceLoaderUrl = $wgLoadScript;\n\n// The list of enabled modules\n// Added two base modules that must be included before others\n$wgMwEmbedEnabledModules = array( 'EmbedPlayer', 'KalturaSupport' );\n\n// By default we enable every module in the \"modules\" folder\n// Modules are registered after localsettings.php to give a chance\n// for local configuration to override the set of enabled modules\n$d = dir( realpath( dirname( __FILE__ ) )  . '/../modules' );\nwhile (false !== ($entry = $d->read())) {\n\tif( substr( $entry, 0, 1 ) != '.' && !in_array( $entry , $wgMwEmbedEnabledModules ) ){\n\t\t$wgMwEmbedEnabledModules[] = $entry;\n\t}\n}\n\n// Default debug mode\n$wgEnableScriptDebug = false;\n\n// The documentation hub makes use of git info for author and file modify time\n// $wgRepoPath allows you to provide a repo path to get this info\n// by default $wgRepoPath is false, and git checks are ignored.\n// in local settings when developing can set it to  dirname( __FILE__ );\n$wgGitRepoPath = false;\n\n// $wgMwEmbedModuleConfig allow setting of any mwEmbed configuration variable\n// ie $wgMwEmbedModuleConfig['ModuleName.Foo'] = 'bar';\n// For list of configuration variables see the .conf file in any given mwEmbed module\n$wgMwEmbedModuleConfig = array();\n\n// A special variable to note the stand alone resource loader mode:\n$wgStandAloneResourceLoaderMode = true;\n\n/**\n * Client-side resource modules.\n */\n$wgResourceModules = array();\n\n/* Default skin can be any jquery based skin */\n$wgDefaultSkin = 'no-theme';\n\n// If the resource loader is in 'debug mode'\n$wgResourceLoaderDebug = false;\n\n// If the resource loader should minify vertical space\n$wgResourceLoaderMinifyJSVerticalSpace = false;\n\n\n$wgMwEmbedProxyUrl =  $wgServer . $wgScriptPath . 'simplePhpXMLProxy.php';\n\n/**\n * Maximum time in seconds to cache resources served by the resource loader\n */\n$wgResourceLoaderMaxage = array(\n\t'versioned' => array(\n\t\t// Squid/Varnish but also any other public proxy cache between the client and MediaWiki\n\t\t'server' => 30 * 24 * 60 * 60, // 30 days\n\t\t// On the client side (e.g. in the browser cache).\n\t\t'client' => 30 * 24 * 60 * 60, // 30 days\n\t),\n\t'unversioned' => array(\n\t\t'server' => 60 * 60, // 1 hour\n\t\t'client' => 60 * 60, // 1 hour\n\t),\n);\n/***\n * External module config:\n */\n$wgExternalPlayersSupportedTypes = array('YouTube');\n\n/*********************************************************\n * Default Kaltura Configuration:\n * TODO move kaltura configuration to KalturaSupport module ( part of New ResourceLoader update )\n ********************************************************/\n\n//Embedded services\n//To enable service re routing for entryResult calls\n$wgEnableKalturaEmbedServicesRouting = false;\n\n// To include signed headers with user IPs for IP restriction lookups, input a salt string for\n// $wgKalturaRemoteAddressSalt configuration option.\n$wgKalturaRemoteAddressSalt = false;\n\n// If we should check for onPage resources per the external resources plugin\n$wgKalturaEnableEmbedUiConfJs = false;\n\n// Enables the result cache while in debug mode\n// This enables fast player rendering while scripts remain unminifed.\n// ( normally $wgEnableScriptDebug disables result cache )\n$wgKalturaForceResultCache = false;\n\n// For force ip testing geo restrictions\n$wgKalturaForceIP = false;\n\n// To test sites with referre restrictions:\n$wgKalturaForceReferer = false;\n\n// The default Kaltura service url:\n$wgKalturaServiceUrl = 'http://cdnapi.kaltura.com';\n// if https use cdnsecakmi\nif( $wgHTTPProtocol == 'https' ){\n\t$wgKalturaServiceUrl =  'https://cdnapisec.kaltura.com';\n}\n\n// Default Kaltura CDN url:\n$wgKalturaCDNUrl = 'http://cdnbakmi.kaltura.com';\n// if https use cdnsecakmi\nif( $wgHTTPProtocol == 'https' ){\n\t$wgKalturaCDNUrl =  'https://cdnsecakmi.kaltura.com';\n}\n\n// Default Kaltura Stats url\n$wgKalturaStatsServiceUrl = 'http://stats.kaltura.com';\nif( $wgHTTPProtocol == 'https' ){\n\t$wgKalturaStatsServiceUrl = 'https://stats.kaltura.com';\n}\n\n// Default Kaltura service url:\n$wgKalturaServiceBase = '/api_v3/index.php?service=';\n\n// Log Api Request\n$wgLogApiRequests = false;\n\n// Default CDN Asset Path\n$wgCDNAssetPath = $wgHTTPProtocol . '://' . $_SERVER['HTTP_HOST'];\n\n// Default api request timeout in seconds\n$wgKalturaServiceTimeout = 20;\n\n// If the iframe will accept 3rd party domain remote service requests\n// should be left \"off\" in production.\n$wgKalturaAllowIframeRemoteService = false;\n\n// Default expire time for ui conf api queries in seconds\n$wgKalturaUiConfCacheTime = 60*10; // 10 min\n\n// Cache errors for 30 seconds to avoid overloading apaches in CDN setups\n$wgKalturaErrorCacheTime = 30;\n\n// By default enable the iframe rewrite\n$wgKalturaIframeRewrite = true;\n\n$wgEnableIpadHTMLControls = true;\n\n$wgKalturaUseManifestUrls = true;\n\n// The admin secret should be set to an integration admin secret key for testing\n// api actions that require admin rights, like granting a ks for preview / play:\n$wgKalturaAdminSecret = null;\n\n// By default do allow custom resource includes.\n$wgAllowCustomResourceIncludes = true;\n\n// An array of partner ids for which apple adaptive should be disabled.\n$wgKalturaPartnerDisableAppleAdaptive = array();\n\n// By default use apple adaptive if we have the ability\n$wgKalturaUseAppleAdaptive = true;\n\n/********************************************************\n *  Authentication configuration variables\n *******************************************************/\n// If the kaltura authentication should run on https ( true by default )\n$wgKalturaAuthHTTPS = true;\n// What domains are allowed to host the auth page:\n$wgKalturaAuthDomains = array( 'www.kaltura.com', 'kmc.kaltura.com' );\n\n// If google anlytics should be enabled, set to the ua string\n$wgKalturaGoogleAnalyticsUA = false;\n\n// for additional script includes.\n$wgAdditionalDocsScriptInclude = false;\n\n//Remote web inspector URL such as: weinre, fireBug\n$wgRemoteWebInspector = false;\n\n// Kaltura Supported API Features\n$wgKalturaApiFeatures = array();\n\n/*********************************************************\n * Override Domain:\n********************************************************/\n$wgEnableKalturaOverrideDomain = true;\n\n/*********************************************************\n * A comma-delimited string of allowed flashavrs to be passed to server on dynamic embed call:\n********************************************************/\n$wgAllowedVars = \"inlineScript\";\n$wgAllowedVarsKeyPartials = \"onPageJs,onPageCss,IframeCustomPluginJs,IframeCustomPluginCss\";\n$wgAllowedPluginVars = \"plugin,templatePath,templates,iframeHTML5Js,iframeHTML5Css,loadInIframe\";\n$wgAllowedPluginVarsValPartials = \"{html5ps}\";\n// Kaltura cache TTL value in unix time for dynamic embed local storage caching of kWidget, default is 10 minutes\n$wgCacheTTL = (10 * 60 * 1000);\n// Kaltura max cache entries, limit max available cached entries per domain to avoid over populating localStorage\n$wgMaxCacheEntries = 1;\n\n/*********************************************************\n * Include local settings override:\n********************************************************/\n$wgLocalSettingsFile = realpath( dirname( __FILE__ ) ) . '/../LocalSettings.php';\n\nif( is_file( $wgLocalSettingsFile ) ){\n\trequire_once( $wgLocalSettingsFile );\n}\n\nif( isset( $_GET['pskwidgetpath'] ) ){\n\t$psRelativePath = htmlspecialchars( $_GET['pskwidgetpath'] );\n}\n// The html5-ps settings file path\n$wgKalturaPSHtml5SettingsPath =  realpath( dirname( __FILE__ ) ) . '/../' . $psRelativePath . '/includes/DefaultSettings.php';\n\n// The html5-ps modules dir\n$wgKalturaPSHtml5ModulesDir =  realpath(realpath( dirname( __FILE__ ) ) . '/../' . $psRelativePath . '/ps/modules');\n\n// Enable every module in the \"ps/modules\" folder of kwidget-ps\n$wgKwidgetPsEnabledModules = array();\nif (!empty($wgKalturaPSHtml5ModulesDir)){\n    $dPs = dir( $wgKalturaPSHtml5ModulesDir );\n    while (false !== ($entryPs = $dPs->read())) {\n        if( substr( $entryPs, 0, 1 ) != '.' && !in_array( $entryPs , $wgKwidgetPsEnabledModules ) ){\n            $wgKwidgetPsEnabledModules[] = $entryPs;\n        }\n    }\n}\n\n\n//Set global configs into $wgMwEmbedModuleConfig in order to enable\n//resource loader to output the config in the response\n// if Manifest urls should be used:\n$wgMwEmbedModuleConfig['Kaltura.UseManifestUrls'] = $wgKalturaUseManifestUrls;\n//Add license server config:\nglobal $wgKalturaLicenseServerUrl, $wgKalturaUdrmLicenseServerUrl;\n$wgMwEmbedModuleConfig['Kaltura.LicenseServerURL'] = $wgKalturaLicenseServerUrl;\n$wgMwEmbedModuleConfig['Kaltura.UdrmServerURL'] = $wgKalturaUdrmLicenseServerUrl;\n\n// Add Kaltura api services: ( should be part of kaltura module config)\ninclude_once( realpath( dirname( __FILE__ ) )  . '/../modules/KalturaSupport/apiServices/mweApiKSTest.php' );\ninclude_once( realpath( dirname( __FILE__ ) )  . '/../modules/KalturaSupport/apiServices/mweApiUiConfJs.php' );\ninclude_once( realpath( dirname( __FILE__ ) )  . '/../modules/KalturaSupport/apiServices/mweApiSleepTest.php' );\ninclude_once( realpath( dirname( __FILE__ ) )  . '/../modules/KalturaSupport/apiServices/mweFeaturesList.php' );\ninclude_once( realpath( dirname( __FILE__ ) )  . '/../modules/KalturaSupport/apiServices/mweApiLanguageSupport.php' );\ninclude_once( realpath( dirname( __FILE__ ) )  . '/../modules/KalturaSupport/apiServices/mweUpgradePlayer.php' );\ninclude_once( realpath( dirname( __FILE__ ) )  . '/../modules/KalturaSupport/apiServices/mweApiGetLicenseData.php' );\ninclude_once( realpath( dirname( __FILE__ ) )  . '/../studio/studioService.php');\n/**\n * Extensions should register foreign module sources here. 'local' is a\n * built-in source that is not in this array, but defined by\n * ResourceLoader::__construct() so that it cannot be unset.\n *\n * Example:\n *   $wgResourceLoaderSources['foo'] = array(\n *       'loadScript' => 'http://example.org/w/load.php',\n *       'apiScript' => 'http://example.org/w/api.php'\n *   );\n */\n$wgResourceLoaderSources = array();\n"], "filenames": ["includes/DefaultSettings.php"], "buggy_code_start_loc": [13], "buggy_code_end_loc": [15], "fixing_code_start_loc": [13], "fixing_code_end_loc": [19], "type": "CWE-79", "message": "A vulnerability was found in Kaltura mwEmbed up to 2.96.rc1 and classified as problematic. This issue affects some unknown processing of the file includes/DefaultSettings.php. The manipulation of the argument HTTP_X_FORWARDED_HOST leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 2.96.rc2 is able to address this issue. The name of the patch is 13b8812ebc8c9fa034eed91ab35ba8423a528c0b. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217427.", "other": {"cve": {"id": "CVE-2022-4876", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-04T23:15:20.037", "lastModified": "2023-01-30T16:37:16.607", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in Kaltura mwEmbed up to 2.96.rc1 and classified as problematic. This issue affects some unknown processing of the file includes/DefaultSettings.php. The manipulation of the argument HTTP_X_FORWARDED_HOST leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 2.96.rc2 is able to address this issue. The name of the patch is 13b8812ebc8c9fa034eed91ab35ba8423a528c0b. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217427."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:kaltura:mwembed:*:*:*:*:*:*:*:*", "versionEndIncluding": "2.95", "matchCriteriaId": "BA2D843F-1749-428D-B59D-1531D3109531"}, {"vulnerable": true, "criteria": "cpe:2.3:a:kaltura:mwembed:2.96:rc1:*:*:*:*:*:*", "matchCriteriaId": "602D25AE-FFD5-4714-909C-98B9B68093AC"}]}]}], "references": [{"url": "https://github.com/kaltura/mwEmbed/commit/13b8812ebc8c9fa034eed91ab35ba8423a528c0b", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/kaltura/mwEmbed/pull/4266", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/kaltura/mwEmbed/releases/tag/v2.96.rc2", "source": "cna@vuldb.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217427", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217427", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/kaltura/mwEmbed/commit/13b8812ebc8c9fa034eed91ab35ba8423a528c0b"}}