{"buggy_code": ["// Author: Thomas Gambet\n// (c) COPYRIGHT MIT, ERCIM and Keio, 2010.\n// Please first read the full copyright statement in file COPYRIGHT.html\npackage org.w3c.unicorn.response.impl;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport javax.json.JsonObject;\n\nimport org.w3c.unicorn.response.Context;\nimport org.w3c.unicorn.response.Message;\n\npublic class ValidatorNuMessage implements Message {\n\t\n\tprivate List<Context> contexts = new ArrayList<Context>();\n\t\n\tprivate String description;\n\t\n\tprivate String title;\n\t\n\tprivate int level;\n\t\n\tprivate int type;\n\t\n\tprivate String uri;\n\t\n\tprivate String group;\n\t\n\tprivate String lang;\n\n    public ValidatorNuMessage(JsonObject jsonMessage, String uri) {\n        this.uri = uri;\n      String respType = jsonMessage.getString(\"type\");\n      switch(respType) {\n      case \"info\":\n          type = Message.INFO;\n          try {\n              String subType  = jsonMessage.getString(\"subtype\");\n              if (subType == \"warning\") {\n                  type = Message.WARNING;\n              }\n          } catch(NullPointerException e) {\n              // No subtype, don't do anything\n          }\n          break;\n      case \"error\":\n          type = Message.ERROR;\n          break;\n      }\n      \n      title = jsonMessage.getString(\"message\");\n\n      contexts.add(new ValidatorNuContext(jsonMessage, uri));\n\t}\n\t\n\tpublic List<Context> getContexts() {\n\t\treturn contexts;\n\t}\n\n\tpublic String getDescription() {\n\t\treturn description;\n\t}\n\n\tpublic int getLevel() {\n\t\treturn level;\n\t}\n\n\tpublic String getTitle() {\n\t\treturn title;\n\t}\n\n\tpublic int getType() {\n\t\treturn type;\n\t}\n\n\tpublic String getURI() {\n\t\treturn uri;\n\t}\n\n\tpublic void setURI(String uri) {\n\t\tthis.uri = uri;\n\t}\n\n\tpublic String getGroupName() {\n\t\treturn group;\n\t}\n\n\tpublic void setGroupName(String group) {\n\t\tthis.group = group;\n\t}\n\n\tpublic String getLang() {\n\t\treturn lang;\n\t}\n}\n"], "fixing_code": ["// Author: Thomas Gambet\n// (c) COPYRIGHT MIT, ERCIM and Keio, 2010.\n// Please first read the full copyright statement in file COPYRIGHT.html\npackage org.w3c.unicorn.response.impl;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport javax.json.JsonObject;\n\nimport org.w3c.unicorn.response.Context;\nimport org.w3c.unicorn.response.Message;\n\npublic class ValidatorNuMessage implements Message {\n\t\n\tprivate List<Context> contexts = new ArrayList<Context>();\n\t\n\tprivate String description;\n\t\n\tprivate String title;\n\t\n\tprivate int level;\n\t\n\tprivate int type;\n\t\n\tprivate String uri;\n\t\n\tprivate String group;\n\t\n\tprivate String lang;\n\n    public ValidatorNuMessage(JsonObject jsonMessage, String uri) {\n        this.uri = uri;\n      String respType = jsonMessage.getString(\"type\");\n      switch(respType) {\n      case \"info\":\n          type = Message.INFO;\n          try {\n              String subType  = jsonMessage.getString(\"subtype\");\n              if (subType == \"warning\") {\n                  type = Message.WARNING;\n              }\n          } catch(NullPointerException e) {\n              // No subtype, don't do anything\n          }\n          break;\n      case \"error\":\n          type = Message.ERROR;\n          break;\n      }\n      \n      title = jsonMessage.getString(\"message\").replace(\"&\", \"&amp;\").replace(\"<\", \"&lt;\").replace(\">\", \"&gt;\").replace(\"'\", \"&apos;\").replace(\"\\\"\", \"&quot;\");\n\n      contexts.add(new ValidatorNuContext(jsonMessage, uri));\n\t}\n\t\n\tpublic List<Context> getContexts() {\n\t\treturn contexts;\n\t}\n\n\tpublic String getDescription() {\n\t\treturn description;\n\t}\n\n\tpublic int getLevel() {\n\t\treturn level;\n\t}\n\n\tpublic String getTitle() {\n\t\treturn title;\n\t}\n\n\tpublic int getType() {\n\t\treturn type;\n\t}\n\n\tpublic String getURI() {\n\t\treturn uri;\n\t}\n\n\tpublic void setURI(String uri) {\n\t\tthis.uri = uri;\n\t}\n\n\tpublic String getGroupName() {\n\t\treturn group;\n\t}\n\n\tpublic void setGroupName(String group) {\n\t\tthis.group = group;\n\t}\n\n\tpublic String getLang() {\n\t\treturn lang;\n\t}\n}\n"], "filenames": ["src/org/w3c/unicorn/response/impl/ValidatorNuMessage.java"], "buggy_code_start_loc": [51], "buggy_code_end_loc": [52], "fixing_code_start_loc": [51], "fixing_code_end_loc": [52], "type": "CWE-79", "message": "A vulnerability, which was classified as problematic, has been found in w3c Unicorn. This issue affects the function ValidatorNuMessage of the file src/org/w3c/unicorn/response/impl/ValidatorNuMessage.java. The manipulation of the argument message leads to cross site scripting. The attack may be initiated remotely. The name of the patch is 51f75c31f7fc33859a9a571311c67ae4e95d9c68. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217019.", "other": {"cve": {"id": "CVE-2021-4296", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-29T09:15:08.313", "lastModified": "2023-01-06T16:39:52.457", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability, which was classified as problematic, has been found in w3c Unicorn. This issue affects the function ValidatorNuMessage of the file src/org/w3c/unicorn/response/impl/ValidatorNuMessage.java. The manipulation of the argument message leads to cross site scripting. The attack may be initiated remotely. The name of the patch is 51f75c31f7fc33859a9a571311c67ae4e95d9c68. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217019."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:w3:unicorn:*:*:*:*:*:*:*:*", "versionEndExcluding": "2021-06-03", "matchCriteriaId": "D7EE7BCE-3357-41B2-8CC6-4EDC06D533CB"}]}]}], "references": [{"url": "https://github.com/w3c/Unicorn/commit/51f75c31f7fc33859a9a571311c67ae4e95d9c68", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/w3c/Unicorn/pull/212", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217019", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217019", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/w3c/Unicorn/commit/51f75c31f7fc33859a9a571311c67ae4e95d9c68"}}