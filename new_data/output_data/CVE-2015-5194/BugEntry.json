{"buggy_code": ["* [Bug 1581] from 4.2.6p3-beta1: ntp_intres.c size_t printf format\n  string mismatch.\n* [Bug 1586] ntpd 4.2.7p40 doesn't write to syslog after fork on QNX.\n* Avoid race with parallel builds using same source directory in\n  scripts/genver by using build directory for temporary files.\n* orphanwait documentation updates.\n(4.2.7p40) 2010/07/12 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1395] ease ntpdate elimination with ntpd -w/--wait-sync\n* [Bug 1396] allow servers on ntpd command line like ntpdate\n(4.2.7p39) 2010/07/09 Released by Harlan Stenn <stenn@ntp.org>\n* Fix typo in driver28.html.\n* [Bug 1581] from 4.2.6p2: size_t printf format string mismatches, IRIG\n  string buffers undersized.  Mostly backported from earlier ntp-dev\n  fixes by J\u00fcrgen Perlinger.\n(4.2.7p38) 2010/06/20 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1570] backported to 4.2.6p2-RC7.\n* [Bug 1575] from 4.2.6p2-RC7: use 'snprintf' with LIB_BUFLENGTH in\n  inttoa.c, tvtoa.c and utvtoa.c\n* [Bug 1576] backported to 4.2.6p2-RC7.\n* Typo fix in a comment in ntp_proto.c.\n(4.2.7p37) 2010/06/19 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1576] sys/sysctl.h depends on sys/param.h on OpenBSD.\n(4.2.7p36) 2010/06/15 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1560] Initial support for orphanwait, from Dave Mills.\n* clock_filter()/reachability fixes from Dave Mills.\n(4.2.7p35) 2010/06/12 Released by Harlan Stenn <stenn@ntp.org>\n* Rewrite of multiprecision macros in 'ntp_fp.h' from J. Perlinger\n  <perlinger@ntp.org>\n* [Bug 715] from 4.2.6p2-RC6: libisc Linux IPv6 interface iteration\n  drops multicast flags.\n(4.2.7p34) 2010/06/05 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1570] serial clock drivers get outdated input from kernel tty\n  line buffer after startup\n(4.2.7p33) 2010/06/04 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1561] from 4.2.6p2-RC5: ntpq, ntpdc \"passwd\" prompts for MD5\n  password w/SHA1.\n* [Bug 1565] from 4.2.6p2-RC5: sntp/crypto.c compile fails on MacOS over\n  vsnprintf().\n* from 4.2.6p2-RC5: Windows port: do not exit in\n  ntp_timestamp_from_counter() without first logging the reason.\n(4.2.7p32) 2010/05/19 Released by Harlan Stenn <stenn@ntp.org>\n* Copyright file cleanup from Dave Mills.\n* [Bug 1555] from 4.2.6p2-RC4: sntp illegal C (mixed code and\n  declarations).\n* [Bug 1558] pool prototype associations have 0.0.0.0 for remote addr.\n* configure.ac: add --disable-autokey, #define AUTOKEY to enable future\n  support for building without Autokey, but with OpenSSL for its digest\n  algorithms (hash functions).  Code must be modified to use #ifdef\n  AUTOKEY instead of #ifdef OPENSSL where appropriate to complete this.\n* include/ntp_crypto.h: make assumption AUTOKEY implies OPENSSL explicit.\n(4.2.7p31) 2010/05/11 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1325] from 4.2.6p2-RC3: unreachable code sntp recv_bcst_data().\n* [Bug 1459] from 4.2.6p2-RC3: sntp MD5 authentication does not work\n  with ntpd.\n* [Bug 1552] from 4.2.6p2-RC3: update and complete broadcast and crypto\n  features in sntp.\n* [Bug 1553] from 4.2.6p2-RC3: sntp/configure.ac OpenSSL support.\n* from 4.2.6p2-RC3: Escape unprintable characters in a refid in ntpq -p\n  billboard.\n* from 4.2.6p2-RC3: Simplify hash client code by providing OpenSSL\n  EVP_*() API when built without OpenSSL.  (already in 4.2.7)\n* from 4.2.6p2-RC3: Do not depend on ASCII in sntp.\n(4.2.7p30) 2010/05/06 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1526] ntpd DNS pipe read EINTR with no network at startup.\n* Update the ChangeLog entries when merging items from -stable.\n(4.2.7p29) 2010/05/04 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1542] ntpd mrulist response may have incorrect last.older.\n* [Bug 1543] ntpq mrulist must refresh nonce when retrying.\n* [Bug 1544] ntpq mrulist sscanf timestamp format mismatch on 64-bit.\n* Windows compiling hints/winnt.html update from G. Sunil Tej.\n(4.2.7p28) 2010/05/03 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1512] from 4.2.6p2-RC3: ntpsnmpd should connect to net-snmpd\n  via a unix-domain socket by default.\n  Provide a command-line 'socket name' option.\n* [Bug 1538] from 4.2.6p2-RC3: update refclock_nmea.c's call to\n  getprotobyname().\n* [Bug 1541] from 4.2.6p2-RC3: Fix wrong keyword for \"maxclock\".\n(4.2.7p27) 2010/04/27 Released by Harlan Stenn <stenn@ntp.org>\n(4.2.7p26) 2010/04/24 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1465] from 4.2.6p2-RC2: Make sure time from TS2100 is not\n  invalid (backport from -dev).\n* [Bug 1528] from 4.2.6p2-RC2: Fix EDITLINE_LIBS link order for ntpq\n  and ntpdc.\n* [Bug 1531] Require nonce with mrulist requests.\n* [Bug 1532] Remove ntpd support for ntpdc's monlist in favor of ntpq's\n  mrulist.\n* [Bug 1534] from 4.2.6p2-RC2: conflicts with VC++ 2010 errno.h.\n* [Bug 1535] from 4.2.6p2-RC2: \"restrict -4 default\" and \"restrict\n  -6 default\" ignored.\n(4.2.7p25) 2010/04/20 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1528] from 4.2.6p2-RC2: Remove --with-arlib from br-flock.\n* [Bug 1503] [Bug 1504] [Bug 1518] [Bug 1522] from 4.2.6p2-RC2:\n  all of which were fixed in 4.2.7 previously. \n(4.2.7p24) 2010/04/13 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1390] Control PPS on the Oncore M12.\n* [Bug 1518] Windows ntpd should lock to one processor more\n  conservatively.\n* [Bug 1520] '%u' formats for size_t gives warnings with 64-bit builds.\n* [Bug 1522] Enable range syntax \"trustedkey (301 ... 399)\".\n* Documentation updates for 4.2.7p22 changes and additions, updating\n  ntpdc.html, ntpq.html, accopt.html, confopt.html, manyopt.html,\n  miscopt.html, and miscopt.txt.\n* accopt.html: non-ntpport doc changes from Dave Mills.\n* Modify full MRU list preemption when full to match \"discard monitor\"\n  documentation, by removing exception for count == 1.\n(4.2.7p23) 2010/04/04 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1516] unpeer by IP address fails, DNS name works.\n* [Bug 1517] ntpq and ntpdc should verify reverse DNS before use.\n  ntpq and ntpdc now use the following format for showing purported\n  DNS names from IP address \"reverse\" DNS lookups when the DNS name\n  does not exist or does not include the original IP address among\n  the results: \"192.168.1.2 (fake.dns.local)\".\n(4.2.7p22) 2010/04/02 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1432] Don't set inheritable flag for linux capabilities.\n* [Bug 1465] Make sure time from TS2100 is not invalid.\n* [Bug 1483] AI_NUMERICSERV undefined in 4.2.7p20.\n* [Bug 1497] fudge is broken by getnetnum() change.\n* [Bug 1503] Auto-enabling of monitor for \"restrict ... limited\" wrong.\n* [Bug 1504] ntpdate tickles ntpd \"discard minimum 1\" rate limit if\n  \"restrict ... limited\" is used.\n* ntpdate: stop querying source after KoD packet response, log it.\n* ntpdate: rate limit each server to 2s between packets.\n* From J. N. Perlinger: avoid pointer wraparound warnings in dolfptoa(),\n  printf format mismatches with 64-bit size_t.\n* Broadcast client (ephemeral) associations should be demobilized only\n  if they are not heard from for 10 consecutive polls, regardless of\n  surviving the clock selection.  Fix from David Mills.\n* Add \"ntpq -c ifstats\" similar to \"ntpdc -c ifstats\".\n* Add \"ntpq -c sysstats\" similar to \"ntpdc -c sysstats\".\n* Add \"ntpq -c monstats\" to show monlist knobs and stats.\n* Add \"ntpq -c mrulist\" similar to \"ntpdc -c monlist\" but not\n  limited to 600 rows, and with filtering and sorting options:\n  ntpq -c \"mrulist mincount=2 laddr=192.168.1.2 sort=-avgint\"\n  ntpq -c \"mrulist sort=addr\"\n  ntpq -c \"mrulist mincount=2 sort=count\"\n  ntpq -c \"mrulist sort=-lstint\"\n* Modify internal representation of MRU list to use l_fp fixed-point\n  NTP timestamps instead of seconds since startup.  This increases the\n  resolution and substantially improves accuracy of sorts involving\n  timestamps, at the cost of flushing all MRU entries when the clock is\n  stepped, to ensure the timestamps can be compared with the current\n  get_systime() results.\n* Add ntp.conf \"mru\" directive to configure MRU parameters, such as\n  \"mru mindepth 600 maxage 64 maxdepth 5000 maxmem 1024\" or\n  \"mru initalloc 0 initmem 16 incalloc 99 incmem 4\".  Several pairs are\n  equivalent with one in units of MRU entries and its twin in units of\n  kilobytes of memory, so the last one used in ntp.conf controls:\n  maxdepth/maxmem, initalloc/initmem, incalloc/incmem.  With the above\n  values, ntpd will preallocate 16kB worth of MRU entries, allocating\n  4kB worth each time more are needed, with a hard limit of 1MB of MRU\n  entries.  Until there are more than 600 entries none would be reused.\n  Then only entries for addresses last seen 64 seconds or longer ago are\n  reused.\n* Limit \"ntpdc -c monlist\" response in ntpd to 600 entries, the previous\n  overall limit on the MRU list depth which was driven by the monlist\n  implementation limit of one request with a single multipacket\n  response.\n* New \"pool\" directive implementation modeled on manycastclient.\n* Do not abort on non-ASCII characters in ntp.conf, ignore them.\n* ntpq: increase response reassembly limit from 24 to 32 packets, add\n  discussion in comment regarding results with even larger MAXFRAGS.\n* ntpq: handle \"passwd MYPASSWORD\" (without prompting) as with ntpdc.\n* ntpdc: do not examine argument to \"passwd\" if not supplied.\n* configure: remove check for pointer type used with qsort(), we\n  require ANSI C which mandates void *.\n* Reset sys_kodsent to 0 in proto_clr_stats().\n* Add sptoa()/sockporttoa() similar to stoa()/socktoa() adding :port.\n* Use memcpy() instead of memmove() when buffers can not overlap.\n* Remove sockaddr_storage from our sockaddr_u union of sockaddr,\n  sockaddr_in, and sockaddr_in6, shaving about 100 bytes from its size\n  and substantially decreasing MRU entry memory consumption.\n* Extend ntpq readvar (alias rv) to allow fetching up to three named\n  variables in one operation:  ntpq -c \"rv 0 version offset frequency\".\n* ntpq: use srchost variable to show .POOL. prototype associations'\n  hostname instead of address 0.0.0.0.\n* \"restrict source ...\" configures override restrictions for time\n  sources, allows tight default restrictions to be used with the pool\n  directive (where server addresses are not known in advance).\n* Ignore \"preempt\" modifier on manycastclient and pool prototype\n  associations.  The resulting associations are preemptible, but the\n  prototype must not be.\n* Maintain and use linked list of associations (struct peer) in ntpd,\n  avoiding walking 128 hash table entries to iterate over peers.\n* Remove more workarounds unneeded since we require ISO C90 AKA ANSI C:\n  - remove fallback implementations for memmove(), memset, strstr().\n  - do not test for atexit() or memcpy().\n* Collapse a bunch of code duplication in ntpd/ntp_restrict.c added with\n  support for IPv6.\n* Correct some corner case failures in automatically enabling the MRU\n  list if any \"restrict ... limited\" is in effect, and in disabling MRU\n  maintenance. (ntp_monitor.c, ntp_restrict.c)\n* Reverse the internal sort order of the address restriction lists, but\n  preserve the same behavior.  This allows removal of special-case code\n  related to the default restrictions and more straightforward lookups\n  of restrictions for a given address (now, stop on first match).\n* Move ntp_restrict.c MRU doubly-linked list maintenance code into\n  ntp_lists.h macros, allowing more duplicated source excision.\n* Repair ntpdate.c to no longer test HAVE_TIMER_SETTIME.\n* Do not reference peer_node/unpeer_node after freeing when built with\n  --disable-saveconfig and using DNS.\n(4.2.7p21) 2010/03/31 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1514] from 4.2.6p1-RC6: Typo in ntp_proto.c: fabs(foo < .4)\n  should be fabs(foo) < .4.\n* [Bug 1464] from 4.2.6p1-RC6: synchronization source wrong for\n  refclocks ARCRON_MSF (27) and SHM (28).\n* From 4.2.6p1-RC6: Correct Windows port's refclock_open() to\n  return 0 on failure not -1.\n* From 4.2.6p1-RC6: Correct CHU, dumbclock, and WWVB drivers to\n  check for 0 returned from refclock_open() on failure.\n* From 4.2.6p1-RC6: Correct \"SIMUL=4 ./flock-build -1\" to\n  prioritize -1/--one.\n* [Bug 1306] constant conditionals in audio_gain().\n(4.2.7p20) 2010/02/13 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1483] hostname in ntp.conf \"restrict\" parameter rejected.\n* Use all addresses for each restrict by hostname.\n* Use async DNS to resolve trap directive hostnames.\n(4.2.7p19) 2010/02/09 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1338] Update the association type codes in ntpq.html.\n* [Bug 1478] from 4.2.6p1-RC5: linking fails: EVP_MD_pkey_type.\n* [Bug 1479] from 4.2.6p1-RC5: not finding readline headers.\n* [Bug 1484] from 4.2.6p1-RC5: ushort is not defined in QNX6.\n(4.2.7p18) 2010/02/07 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1480] from 4.2.6p1-RC5: snprintf() cleanup caused \n  unterminated refclock IDs.\n* Stop using getaddrinfo() to convert numeric address strings to on-wire\n  addresses in favor of is_ip_address() alone.\n(4.2.7p17) 2010/02/05 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1477] from 4.2.6p1-RC5: First non-gmake make in clone\n  w/VPATH can't make COPYRIGHT.\n* Attempts to cure CID 108 CID 118 CID 119 TAINTED_SCALAR warnings.\n* Broaden ylwrap workaround VPATH_HACK to all non-GNU make.\n(4.2.7p16) 2010/02/04 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1474] from 4.2.6p1-RC4: ntp_keygen LCRYPTO after libntp.a.\n* Include 4.2.6p1-RC4: Remove arlib.\n(4.2.7p15) 2010/02/03 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1455] from 4.2.6p1: ntpd does not try /etc/ntp.audio.\n* Include 4.2.6p1: Convert many sprintf() calls to snprintf(), also\n  strcpy(), strcat().\n* Include 4.2.6p1: Fix widely cut-n-pasted bug in refclock shutdown\n  after failed start.\n* Include 4.2.6p1: Remove some dead code checking for emalloc()\n  returning NULL.\n(4.2.7p14) 2010/02/02 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1338] ntpq displays incorrect association type codes.\n* [Bug 1469] u_int32, int32 changes broke HP-UX 10.20 build.\n* [Bug 1470] from 4.2.6p1: \"make distdir\" compiles keyword-gen.\n* [Bug 1471] CID 120 CID 121 CID 122 is_ip_address() uninit family.\n* [Bug 1472] CID 116 CID 117 minor warnings in new DNS code.\n* [Bug 1473] from 4.2.6p1: \"make distcheck\" version.m4 error.\n(4.2.7p13) 2010/01/31 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1467] from 4.2.6p1: Fix bogus rebuild of sntp/sntp.html.\n(4.2.7p12) 2010/01/30 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1468] 'make install' broken for root on default NFS mount.\n(4.2.7p11) 2010/01/28 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 47] Debugging and logging do not work after a fork.\n* [Bug 1010] getaddrinfo() could block and thus should not be called by\n  the main thread/process.\n* New async DNS resolver in ntpd allows nonblocking queries anytime,\n  instead of only once at startup.\n(4.2.7p10) 2010/01/24 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1140] from 4.2.6p1-RC5: Clean up debug.html, decode.html,\n  and ntpq.html.\n* Include 4.2.6p1-RC3: Use TZ=UTC instead of TZ= when calling date in\n  scripts/mkver.in .\n* [Bug 1448] from 4.2.6p1-RC3: Some macros not correctly conditionally\n  or absolutely defined on Windows.\n* [Bug 1449] from 4.2.6p1-RC3: ntpsim.h in ntp_config.c should be used\n  conditionally.\n* [Bug 1450] from 4.2.6p1-RC3: Option to exclude warnings not\n  unconditionally defined on Windows.\n(4.2.7p9) 2010/01/13 Released by Harlan Stenn <stenn@ntp.org>\n(4.2.7p8) 2010/01/12 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 702] ntpd service logic should use libopts to examine cmdline.\n* [Bug 1451] from 4.2.6p1-RC3: sntp leaks KoD entry updating.\n* [Bug 1453] from 4.2.6p1-RC3: Use $CC in config.cache filename.\n(4.2.7p7) 2009/12/30 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 620] ntpdc getresponse() esize != *rsize s/b size != *rsize.\n* [Bug 1446] 4.2.7p6 requires autogen, missing ntpd.1, *.texi, *.menu.\n(4.2.7p6) 2009/12/28 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1443] Remove unnecessary dependencies on ntp_io.h\n* [Bug 1442] Move Windows functions into libntp files\n* [Bug 1127] from 4.2.6p1-RC3: Check the return of X590_verify().\n* [Bug 1439] from 4.2.6p1-RC3: .texi gen after binary is linked.\n* [Bug 1440] from 4.2.6p1-RC3: Update configure.ac to support kfreebsd.\n* [Bug 1445] from 4.2.6p1-RC3: IRIX does not have -lcap or support\n  linux capabilities.\n(4.2.7p5) 2009/12/25 Released by Harlan Stenn <stenn@ntp.org>\n* Include 4.2.6p1-RC2\n(4.2.7p4) 2009/12/24 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1429] ntpd -4 option does not reliably force IPv4 resolution.\n* [Bug 1431] System headers must come before ntp headers in ntp_intres.c .\n(4.2.7p3) 2009/12/22 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1426] scripts/VersionName needs . on the search path.\n* [Bug 1427] quote missing in ./build - shows up on NetBSD.\n* [Bug 1428] Use AC_HEADER_RESOLV to fix breaks from resolv.h\n(4.2.7p2) 2009/12/20 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1419] ntpdate, ntpdc, sntp, ntpd ignore configure --bindir.\n* [Bug 1421] add util/tg2, a clone of tg that works on Linux, NetBSD, and\n  FreeBSD\n(4.2.7p1) 2009/12/15 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1348] ntpd Windows port should wait for sendto() completion.\n* [Bug 1413] test OpenSSL headers regarding -Wno-strict-prototypes.\n* [Bug 1418] building ntpd/ntpdc/ntpq statically with ssl fails.\n(4.2.7p0) 2009/12/13 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1412] m4/os_cflags.m4 caches results that depend on $CC.\n* [Bug 1414] Enable \"make distcheck\" success with BSD make.\n(4.2.7) 2009/12/09 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1407] configure.ac: recent GNU Make -v does not include \"version\".\n---\n(4.2.6p2) 2010/07/09 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1581] size_t printf format string mismatches, IRIG string buffers\n  undersized.  Mostly backported from earlier ntp-dev fixes by J\u00fcrgen\n  Perlinger.\n\n---\n(4.2.6p2-RC7) 2010/06/19 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1570] serial clock drivers get outdated input from kernel tty\n  line buffer after startup\n* [Bug 1575] use 'snprintf' with LIB_BUFLENGTH in inttoa.c, tvtoa.c and\n  utvtoa.c\n* [Bug 1576] sys/sysctl.h depends on sys/param.h on OpenBSD.\n\n---\n(4.2.6p2-RC6) 2010/06/12 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 715] libisc Linux IPv6 interface iteration drops multicast flags.\n\n---\n(4.2.6p2-RC5) 2010/06/03 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1561] ntpq, ntpdc \"passwd\" prompts for MD5 password w/SHA1.\n* [Bug 1565] sntp/crypto.c compile fails on MacOS over vsnprintf().\n* Windows port: do not exit in ntp_timestamp_from_counter() without\n  first logging the reason.\n* Support \"passwd blah\" syntax in ntpq.\n\n---\n(4.2.6p2-RC4) 2010/05/19 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1555] 4.2.6p2-RC3 sntp illegal C (mixed code and declarations).\n\n---\n(4.2.6p2-RC3) 2010/05/11 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1325] unreachable code in sntp recv_bcst_data().\n* [Bug 1459] sntp MD5 authentication does not work with ntpd.\n* [Bug 1512] ntpsnmpd should connect to net-snmpd via a unix-domain\n  socket by default.  Provide a command-line 'socket name' option.\n* [Bug 1538] update refclock_nmea.c's call to getprotobyname().\n* [Bug 1541] Fix wrong keyword for \"maxclock\".\n* [Bug 1552] update and complete broadcast and crypto features in sntp.\n* [Bug 1553] sntp/configure.ac OpenSSL support.\n* Escape unprintable characters in a refid in ntpq -p billboard.\n* Simplify hash client code by providing OpenSSL EVP_*() API when built\n  without OpenSSL.  (from ntp-dev)\n* Do not depend on ASCII values for ('A' - '0'), ('a' - '0') in sntp.\n* Windows compiling hints/winnt.html update from G. Sunil Tej.\n\n---\n(4.2.6p2-RC2) 2010/04/27 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1465] Make sure time from TS2100 is not invalid (backport from\n  ntp-dev).\n* [Bug 1528] Fix EDITLINE_LIBS link order for ntpq and ntpdc.\n* [Bug 1534] win32/include/isc/net.h conflicts with VC++ 2010 errno.h.\n* [Bug 1535] \"restrict -4 default\" and \"restrict -6 default\" ignored.\n* Remove --with-arlib from br-flock.\n\n---\n(4.2.6p2-RC1) 2010/04/18 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1503] Auto-enabling of monitor for \"restrict ... limited\" wrong.\n* [Bug 1504] ntpdate tickles ntpd \"discard minimum 1\" rate limit if\n  \"restrict ... limited\" is used.\n* [Bug 1518] Windows ntpd should lock to one processor more\n  conservatively.\n* [Bug 1522] Enable range syntax \"trustedkey (301 ... 399)\".\n* Update html/authopt.html controlkey, requestkey, and trustedkey docs.\n\n---\n(4.2.6p1) 2010/04/09 Released by Harlan Stenn <stenn@ntp.org>\n(4.2.6p1-RC6) 2010/03/31 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1514] Typo in ntp_proto.c: fabs(foo < .4) should be fabs(foo) < .4.\n* [Bug 1464] synchronization source wrong for refclocks ARCRON_MSF (27)\n  and SHM (28).\n* Correct Windows port's refclock_open() to return 0 on failure not -1.\n* Correct CHU, dumbclock, and WWVB drivers to check for 0 returned from\n  refclock_open() on failure.\n* Correct \"SIMUL=4 ./flock-build -1\" to prioritize -1/--one.\n\n---\n(4.2.6p1-RC5) 2010/02/09 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1140] Clean up debug.html, decode.html, and ntpq.html.\n* [Bug 1438] Remove dead code from sntp/networking.c.\n* [Bug 1477] 1st non-gmake make in clone w/VPATH can't make COPYRIGHT.\n* [Bug 1478] linking fails with undefined reference EVP_MD_pkey_type.\n* [Bug 1479] Compilation fails because of not finding readline headers.\n* [Bug 1480] snprintf() cleanup caused unterminated refclock IDs.\n* [Bug 1484] ushort is not defined in QNX6.\n\n---\n(4.2.6p1-RC4) 2010/02/04 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1455] ntpd does not try /etc/ntp.audio as documented.\n* [Bug 1467] Fix bogus rebuild of sntp/sntp.html\n* [Bug 1470] \"make distdir\" in $srcdir builds keyword-gen, libntp.a.\n* [Bug 1473] \"make distcheck\" before build can't make sntp/version.m4.\n* [Bug 1474] ntp_keygen needs LCRYPTO after libntp.a.\n* Convert many sprintf() calls to snprintf(), also strcpy(), strcat().\n* Fix widely cut-n-pasted bug in refclock shutdown after failed start.\n* Remove some dead code checking for emalloc() returning NULL.\n* Remove arlib.\n\n---\n(4.2.6p1-RC3) 2010/01/24 Released by Harlan Stenn <stenn@ntp.org>\n\n* Use TZ=UTC instead of TZ= when calling date in scripts/mkver.in .\n* [Bug 1448] Some macros not correctly conditionally or absolutely defined\n  on Windows.\n* [Bug 1449] ntpsim.h in ntp_config.c should be used conditionally.\n* [Bug 1450] Option to exclude warnings not unconditionally defined on Windows.\n* [Bug 1127] Properly check the return of X590_verify() - missed one.\n* [Bug 1439] .texi generation must wait until after binary is linked.\n* [Bug 1440] Update configure.ac to support kfreebsd.\n* [Bug 1445] IRIX does not have -lcap or support linux capabilities.\n* [Bug 1451] CID 115: sntp leaks KoD entry when updating existing.\n* [Bug 1453] Use $CC in config.cache filename in ./build script.\n\n---\n(4.2.6p1-RC2) 2009/12/25 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1411] Fix status messages in refclock_oncore.c.\n* [Bug 1416] MAXDNAME undefined on Solaris 2.6.\n* [Bug 1419] ntpdate, ntpdc, sntp, ntpd ignore configure --bindir.\n* [Bug 1424] Fix check for rtattr (rtnetlink.h).\n* [Bug 1425] unpeer by association ID sets up for duplicate free().\n* [Bug 1426] scripts/VersionName needs . on the search path.\n* [Bug 1427] quote missing in ./build - shows up on NetBSD.\n* [Bug 1428] Use AC_HEADER_RESOLV to fix breaks from resolv.h\n* [Bug 1429] ntpd -4 option does not reliably force IPv4 resolution.\n* [Bug 1431] System headers must come before ntp headers in ntp_intres.c .\n* [Bug 1434] HP-UX 11 ip_mreq undeclared, _HPUX_SOURCE helps some.\n* [Bug 1435] sntp: Test for -lresolv using the same tests as in ntp.\n\n---\n(4.2.6p1-RC1) 2009/12/20 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1409] Put refclock_neoclock4x.c under the NTP COPYRIGHT notice.\n  This should allow debian and other distros to add this refclock driver\n  in further distro releases.\n  Detect R2 hardware releases.\n* [Bug 1412] m4/os_cflags.m4 caches results that depend on $CC.\n* [Bug 1413] test OpenSSL headers regarding -Wno-strict-prototypes.\n* [Bug 1414] Enable \"make distcheck\" success with BSD make.\n* [Bug 1415] Fix Mac OS X link problem.\n* [Bug 1418] building ntpd/ntpdc/ntpq statically with ssl fails.\n* Build infrastructure updates to enable beta releases of ntp-stable.\n\n---\n(4.2.6) 2009/12/09 Released by Harlan Stenn <stenn@ntp.org>\n* [Sec 1331] from4.2.4p8: DoS with mode 7 packets - CVE-2009-3563.\n* [Bug 508] Fixed leap second handling for Windows.\n(4.2.5p250-RC) 2009/11/30 Released by Harlan Stenn <stenn@ntp.org>\n* sntp documentation updates.\n* [Bug 761] internal resolver does not seem to honor -4/-6 qualifiers\n* [Bug 1386] Deferred DNS doesn't work on NetBSD\n* [Bug 1391] avoid invoking autogen twice for .c and .h files.\n* [Bug 1397] shmget() refclock_shm failing because of file mode.\n* Pass no_needed to ntp_intres as first part of fixing [Bug 975].\n* Add ./configure --enable-force-defer-DNS to help debugging.\n(4.2.5p249-RC) 2009/11/28 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1400] An empty KOD DB file causes sntp to coredump.\n* sntp: documentation cleanup.\n* sntp: clean up some error messages.\n* sntp: Use the precision to control how many offset digits are shown.\n* sntp: Show root dispersion.\n* Cleanup from the automake/autoconf upgrades.\n(4.2.5p248-RC) 2009/11/26 Released by Harlan Stenn <stenn@ntp.org>\n* Prepare for the generation of sntp.html.\n* Documentation changes from Dave Mills.\n* [Bug 1387] Storage leak in ntp_intres (minor).\n* [Bug 1389] buffer overflow in refclock_oncore.c\n* [Bug 1391] .texi usage text from installed, not built binaries.\n* [Bug 1392] intres retries duplicate assocations endlessly.\n* Correct *-opts.h dependency so default 'get' action isn't used.\n(4.2.5p247-RC) 2009/11/20 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1142] nodebug builds shed no light on -d, -D option failure.\n* [Bug 1179] point out the problem with -i/--jaildir and -u/--user when\n  they are disabled by configure.\n* [Bug 1308] support systems that lack fork().\n* [Bug 1343] sntp doesn't link on Solaris 7, needs -lresolv.\n(4.2.5p246-RC) 2009/11/17 Released by Harlan Stenn <stenn@ntp.org>\n* Upgrade to autogen-5.10\n* [Bug 1378] Unnecessary resetting of peers during interface update.\n* [Bug 1382] p245 configure --disable-dependency-tracking won't build.\n* [Bug 1384] ntpq :config core dumped with a blank password.\n(4.2.5p245-RC) 2009/11/14 Released by Harlan Stenn <stenn@ntp.org>\n* Cleanup from Dave Mills.\n* [Bug 1343] sntp illegal C does not compile on Solaris 7.\n* [Bug 1381] Version .deps generated include file dependencies to allow\n  known dependency-breaking changes to force .deps to be cleaned,\n  triggered by changing the contents of deps-ver and/or sntp/deps-ver.\n(4.2.5p244-RC) 2009/11/12 Released by Harlan Stenn <stenn@ntp.org>\n* keygen.html updates from Dave Mills.\n* [Bug 1003] ntpdc unconfig command doesn't prompt for keyid.\n* [Bug 1376] Enable authenticated ntpq and ntpdc using newly-available\n  digest types.\n* ntp-keygen, Autokey OpenSSL build vs. run version mismatch is now a\n  non-fatal warning.\n(4.2.5p243-RC) 2009/11/11 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1226] Fix deferred DNS lookups.\n* new crypto signature cleanup.\n(4.2.5p242-RC) 2009/11/10 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1363] CID 92 clarify fallthrough case in clk_trimtsip.c\n* [Bug 1366] ioctl(TIOCSCTTY, 0) fails on NetBSD *[0-2].* > 3.99.7.\n* [Bug 1368] typos in libntp --without-crypto case\n* [Bug 1371] deferred DNS lookup failing with INFO_ERR_AUTH.\n* CID 87 dead code in ntpq.c atoascii().\n* Fix authenticated ntpdc, broken in p240.\n* Stub out isc/mem.h, shaving 47k from a MIPS ntpd binary.\n* Shrink keyword scanner FSM entries from 64 to 32 bits apiece.\n* Documention updates from Dave Mills.\n* authkeys.c cleanup from Dave Mills.\n(4.2.5p241-RC) 2009/11/07 Released by Harlan Stenn <stenn@ntp.org>\n* html/authopt.html update from Dave Mills.\n* Remove unused file from sntp/Makefile.am's distribution list.\n* new crypto signature cleanup.\n(4.2.5p240-RC) 2009/11/05 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1364] clock_gettime() not detected, need -lrt on Debian 5.0.3.\n* Provide all of OpenSSL's signature methods for ntp.keys (FIPS 140-2).\n(4.2.5p239-RC) 2009/10/30 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1357] bogus assert from refclock_shm.\n* [Bug 1359] Debug message cleanup.\n* CID 101: more pointer/array cleanup.\n* [Bug 1356] core dump from refclock_nmea when can't open /dev/gpsU.\n* [Bug 1358] AIX 4.3 sntp/networking.c IPV6_JOIN_GROUP undeclared.\n* CID 101: pointer/array cleanup.\n(4.2.5p238-RC) 2009/10/27 Released by Harlan Stenn <stenn@ntp.org>\n* Changes from Dave Mills.\n* driver4.html updates from Dave Mills.\n* [Bug 1252] PPSAPI cleanup on ntpd/refclock_wwvb.c.\n* [Bug 1354] libtool error building after bootstrap with Autoconf 2.64.\n* Allow NTP_VPATH_HACK configure test to handle newer gmake versions.\n* CIDs 94-99 make it more clearly impossible for sock_hash() to return\n  a negative number.\n* CID 105, 106 ensure ntpdc arrays are not overrun even if callers\n  misbehave.\n* CID 113 use va_end() in refclock_true.c true_debug().\n* Get rid of configure tests for __ss_family and __ss_len when the more\n  common ss_family and ss_len are present.\n(4.2.5p237-RC) 2009/10/26 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 610] NMEA support for using PPSAPI on a different device.\n* [Bug 1238] use only fudge time2 to offset NMEA serial timestamp.\n* [Bug 1355] ntp-dev won't compile on OpenBSD 4.6.\n(4.2.5p236-RC) 2009/10/22 Released by Harlan Stenn <stenn@ntp.org>\n* Cleanup from Dave Mills.\n* [Bug 1343] ntpd/ntp_io.c close_fd() does not compile on Solaris 7.\n* [Bug 1353] ntpq \"rv 0 settimeofday\" always shows UNKNOWN on unix.\n* Do not attempt to execute built binaries from ntpd/Makefile when\n  cross-compiling (keyword-gen and ntpd --saveconfigquit).\n* sntp/main.c: Remove duplicate global adr_buf[] (also defined in\n  networking.c) which Piotr Grudzinski identified breaking his build.\n* Correct in6addr_any test in configure.ac to attempt link too.\n(4.2.5p235-RC) 2009/10/18 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1343] lib/isc build breaks on systems without IPv6 headers.\n(4.2.5p234-RC) 2009/10/16 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1339] redux, use unmodified lib/isc/win32/strerror.c and\n  move #define strerror... to a header not used by lib/isc code.\n* [Bug 1345] illegal 'grep' option prevents compilation.\n* [Bug 1346] keyword scanner broken where char defaults to unsigned.\n* [Bug 1347] ntpd/complete.conf missing multicastclient test case.\n(4.2.5p233-RC) 2009/10/15 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1337] cast setsockopt() v4 address pointer to void *.\n* [Bug 1342] ignore|drop one IPv6 address on an interface blocks all\n  addresses on that interface.\n* Documentation cleanup and updates.\n(4.2.5p232-RC) 2009/10/14 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1302] OpenSSL under Windows needs applink support.\n* [Bug 1337] fix incorrect args to setsockopt(fd, IP_MULTICAST_IF,...).\n* [Bug 1339] Fix Windows-only ntp_strerror() infinite recursion.\n* [Bug 1341] NMEA driver requires working PPSAPI #ifdef HAVE_PPSAPI.\n* Construct ntpd keyword scanner finite state machine at compile time\n  rather than at runtime, shrink entries from 40+ to 8 bytes.\n* Update documentation for ntpq --old-rv, saveconfig, saveconfigdir,\n  ntpd -I -L and -M, and interface/nic rules. (From Dave Hart)\n* [Bug 1337] fix incorrect args to setsockopt(fd, IP_MULTICAST_IF,...)\n(4.2.5p231-RC) 2009/10/10 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1335] Broadcast client degraded by wildcard default change.\n(4.2.5p230-RC) 2009/10/09 Released by Harlan Stenn <stenn@ntp.org>\n* Start the 4.2.6 Release Candidate cycle.\n* Broadcast and transit phase cleanup from Dave Mills.\n(4.2.5p229) 2009/10/07 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1334] ntpsnmpd undefined reference to `ntpqOptions'.\n* Change ntpsnmpd/Makefile.am include file order to fix FreeBSD build.\n(4.2.5p228) 2009/10/06 Released by Harlan Stenn <stenn@ntp.org>\n* Reclaim syntax tree memory after application in ntpd built with\n  configure --disable-saveconfig.\n* [Bug 1135] ntpq uses sizeof(u_long) where sizeof(u_int32) is meant.\n* [Bug 1333] ntpd --interface precedence over --novirtualips lost.\n(4.2.5p227) 2009/10/05 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1135] :config fails with \"Server disallowed request\"\n* [Bug 1330] disallow interface/nic rules when --novirtualips or\n  --interface are used.\n* [Bug 1332] ntpq -c 'rv 0 variablename' returns extra stuff.\n* Add test of ntpd --saveconfigquit fidelity using new complete.conf.\n* Documentation updates from Dave Hart/Dave Mills.\n(4.2.5p226) 2009/10/04 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1318] Allow multiple -g options on ntpd command line.\n* [Bug 1327] ntpq, ntpdc, ntp-keygen -d & -D should work with configure\n  --disable-debugging.\n* Add ntpd --saveconfigquit <filename> option for future build-time\n  testing of saveconfig fidelity.\n* Clockhop and autokey cleanup from Dave Mills.\n* Documentation updates from Dave Mills.\n(4.2.5p225) 2009/09/30 Released by Harlan Stenn <stenn@ntp.org>\n* authopt documentation changes from Dave Mills/Dave Hart.\n* [Bug 1324] support bracketed IPv6 numeric addresses for restrict.\n(4.2.5p224) 2009/09/29 Released by Harlan Stenn <stenn@ntp.org>\n* Clockhop and documentation fixes from Dave Mills.\n* Remove \"tos maxhop\" ntp.conf knob.\n(4.2.5p223) 2009/09/28 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1321] build doesn't work if . isn't on $PATH.\n* [Bug 1323] Implement \"revoke #\" to match documentation, deprecate\n  \"crypto revoke #\".\n(4.2.5p222) 2009/09/27 Released by Harlan Stenn <stenn@ntp.org>\n* Update libisc code using bind-9.6.1-P1.tar.gz, rearrange our copy to\n  mirror the upstream layout (lib/isc/...), and merge in NTP-local\n  modifications to libisc.  There is a new procedure to ease future\n  libisc merges using a separate \"upstream\" bk repo.  That will enable\n  normal bk pull automerge to handle carrying forward any local changes\n  and should enable us to take updated libisc snapshots more often.\n* Updated build and flock-build scripts.  flock-build --one is a way\n  to perform a flock-build compatible solitary build, handy for a repo\n  clone's first build on a machine with autoconf, automake, etc.\n* Compiling ntp_parser.y using BSD make correctly places ntp_parser.h\n  in the top-level ntpd directory instead of A.*/ntpd.\n* bootstrap script updated to remove potentially stale .deps dirs.\n* Remove unneeded Makefile.am files from the lib/isc/include tree.\n(4.2.5p221) 2009/09/26 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1316] segfault if refclock_nmea can't open file.\n* [Bug 1317] Distribute cvo.sh.\n(4.2.5p220) 2009/09/25 Released by Harlan Stenn <stenn@ntp.org>\n* Rearrange libisc code to match the upstream layout in BIND.  This is\n  step one of two, changing the layout but keeping our existing libisc.\n(4.2.5p219) 2009/09/24 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1315] \"interface ignore 0.0.0.0\" is ignored.\n* add implicit \"nic ignore all\" rule before any rules from ntp.conf, so\n  \"nic listen eth0\" alone means the same as \"-I eth0\".\n* add wildcard match class for interface/nic rules.\n* fix mistaken carryover of prefixlen from one rule to the next.\n* Ensure IPv6 localhost address ::1 is included in libisc's Windows IPv6\n  address enumeration, allowing ntpq and ntpdc's hardcoding to 127.0.0.1 \n  on Windows to end.\n(4.2.5p218) 2009/09/21 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1314] saveconfig emits -4 and -6 on when not given.\n* correct parsing and processing of setvar directive.\n* highlight location of ntpq :config syntax errors with ^.\n* clarify (former) NO_ARG, SINGLE_ARG, MULTIPLE_ARG renaming to\n  FOLLBY_TOKEN, FOLLBY_STRING, FOLLBY_STRINGS_TO_EOC.\n* parser, saveconfig cleanup to store T_ identifiers in syntax tree.\n(4.2.5p217) 2009/09/20 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1300] reject remote configuration of dangerous items.\n(4.2.5p216) 2009/09/19 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1312] ntpq/ntpdc MD5 passwords truncated to 8 chars on Suns.\n* CID 10 missing free(up); in refclock_palisade.c error return, again.\n* CID 83 added assertion to demonstrate config_nic_rules() does not\n  call strchr(NULL, '/').\n(4.2.5p215) 2009/09/18 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1292] Workaround last VC6 unsigned __int64 kink.\n(4.2.5p214) 2009/09/17 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1303] remove top-level \"autokey\" directive.\n* use \"nic listen 192.168.0.0/16\" instead of\n  \"nic listen 192.168.0.0 prefixlen 16\".\n(4.2.5p213) 2009/09/16 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1310] fix Thunderbolt mode in refclock_palisade.c\n(4.2.5p212) 2009/09/15 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 983] add interface [listen | ignore | drop] ... directive.\n* [Bug 1243] MD5auth_setkey zero-fills key from first zero octet.\n* [Bug 1295] leftover fix, do not crash on exit in free_config_trap()\n  when \"trap 1.2.3.4\" is used without any further options.\n* [Bug 1311] 4.2.5p211 doesn't build in no-debug mode.\n* document interface (alias nic) and unpeer.\n* Correct syntax error line & column numbers.\n* CID 79: kod_init_kod_db() fails to fclose(db_s) in two error paths.\n* CID 80: attempt to quiet Coverity false positive re: leaking \"reason\"\n  in main().\n* Documentation updates from Dave Mills.\n* CID 81: savedconfig leaked in save_config().\n* Make the code agree with the spec and the book (Dave Mills).\n(4.2.5p211) 2009/09/14 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 663] respect ntpq -c and -p order on command line.\n* [Bug 1292] more VC6 unsigned __int64 workarounds.\n* [Bug 1296] Added Support for Trimble Acutime Gold.\n(4.2.5p210) 2009/09/06 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1294] Use OPENSSL_INC and OPENSSL_LIB macros for Windows\n  and remove unnecessary reference to applink.c for Windows\n* [Bug 1295] trap directive options are not optional.\n* [Bug 1297] yylex() must always set yylval before returning.\n(4.2.5p209) 2009/09/01 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1290] Fix to use GETTIMEOFDAY macro\n* [Bug 1289] Update project files for VC6, VS2003, VS2005, VS 2008\n(4.2.5p208) 2009/08/30 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1293] make configuration dumper ready for release, specifically:\n* rename ntpq dumpcfg command to \"saveconfig\".\n* require authentication for saveconfig.\n* \"restrict ... nomodify\" prevents saveconfig and :config.\n* \"saveconfig .\" shorthand to save to startup configuration file.\n* support strftime() substitution in saveconfig arg to timestamp\n  the output filename, for example \"saveconfig %Y%m%d-%H%M%S.conf\".\n* display saveconfig response message from ntpd in ntpq.\n* save output filename in \"savedconfig\" variable, fetched with ntpq -c\n  \"rv 0 savedconfig\".\n* document saveconfig in html/ntpq.html.\n* add ./configure --disable-saveconfig to build a smaller ntpd.\n* log saveconfig failures and successes to syslog.\n(4.2.5p207) 2009/08/29 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1292] Minor Windows source tweaks for VC6-era SDK headers.\n(4.2.5p206) 2009/08/26 Released by Harlan Stenn <stenn@ntp.org>\n* accopt.html typo fixes from Dave Mills.\n* [Bug 1283] default to remembering KoD in sntp.\n* clean up numerous sntp/kod_management.c bugs.\n* use all addresses resolved from each DNS name in sntp.\n(4.2.5p205) 2009/08/18 Released by Harlan Stenn <stenn@ntp.org>\n* accopt.html typo fixes from Dave Mills.\n* [Bug 1285] Log ntpq :config/config-from-file events.\n* [Bug 1286] dumpcfg omits statsdir, mangles filegen.\n(4.2.5p204) 2009/08/17 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1284] infinite loop in ntpd dumping more than one trustedkey\n(4.2.5p203) 2009/08/16 Released by Harlan Stenn <stenn@ntp.org>\n* Add ntpq -c dumpcfg, Google Summer of Code project of Max Kuehn\n(4.2.5p202) 2009/08/14 Released by Harlan Stenn <stenn@ntp.org>\n* install the binary and man page for sntp.\n(4.2.5p201) 2009/08/13 Released by Harlan Stenn <stenn@ntp.org>\n* sntp: out with the old, in with the new.\n(4.2.5p200) 2009/08/12 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1281] Build ntpd on Windows without big SDK download, burn,\n  and install by checking in essentially unchanging messages.mc build\n  products to avoid requiring mc.exe, which is not included with VC++\n  2008 EE.\n(4.2.5p199) 2009/08/09 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1279] Cleanup for warnings from Veracode static analysis.\n(4.2.5p198) 2009/08/03 Released by Harlan Stenn <stenn@ntp.org>\n* Upgrade to autogen-5.9.9-pre5.\n(4.2.5p197) 2009/07/30 Released by Harlan Stenn <stenn@ntp.org>\n* The build script now has . at the end of PATH for config.guess.\n(4.2.5p196) 2009/07/29 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1272] gsoc_sntp IPv6 build problems under HP-UX 10.\n* [Bug 1273] CID 10: Palisade leaks unit struct in error path.\n* [Bug 1274] CID 67: ensure resolve_hosts() output count and pointers\n  are consistent.\n* [Bug 1275] CID 45: CID 46: old sntp uses uninitialized guesses[0],\n  precs[0].\n* [Bug 1276] CID 52: crypto_xmit() may call crypto_alice[23]()\n  with NULL peer.\n(4.2.5p195) 2009/07/27 Released by Harlan Stenn <stenn@ntp.org>\n* cvo.sh: Add support for CentOS, Fedora, Slackware, SuSE, and QNX.\n(4.2.5p194) 2009/07/26 Released by Harlan Stenn <stenn@ntp.org>\n* Documentation updates from Dave Mills.\n* Use scripts/cvo.sh in the build script to get better subdir names.\n(4.2.5p193) 2009/07/25 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1261] CID 34: simulate_server() rbuf.msg_flags uninitialized.\n* [Bug 1262] CID 35: xpkt.mac uninitialized in simulate_server().\n* [Bug 1263] CID 37: CID 38: CID 40: CID 43: multiple refclocks \n  uninitialized tm_zone (arc, chronolog, dumbclock, pcf).\n* [Bug 1264] CID 64: gsoc_sntp on_wire() frees wrong ptr receiving KoD.\n* [Bug 1265] CID 65: CID 66: gsoc_sntp on_wire() leaks x_pkt, r_pkt.\n* [Bug 1266] CID 39: datum_pts_start() uninitialized arg.c_ospeed.\n* [Bug 1267] CID 44: old sntp handle_saving() writes stack garbage to\n  file when clearing.\n* [Bug 1268] CID 63: resolve_hosts() leaks error message buffer.\n* [Bug 1269] CID 74: use assertion to ensure move_fd() does not return\n  negative descriptors.\n* [Bug 1270] CID 70: gsoc_sntp recv_bcst_data mdevadr.ipv6mr_interface\n  uninitialized.\n(4.2.5p192) 2009/07/24 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 965] CID 42: ss_family uninitialized.\n* [Bug 1250] CID 53: kod_init_kod_db() overruns kod_db malloc'd buffer.\n* [Bug 1251] CID 68: search_entry() mishandles dst argument.\n* [Bug 1252] CID 32: Quiet Coverity warning with assertion.\n* [Bug 1253] CID 50: gsoc_sntp/crypto.c auth_init() always returns a \n  list with one entry.\n* [Bug 1254] CID 56: tv_to_str() leaks a struct tm each call.\n* [Bug 1255] CID 55: pkt_output() leaks a copy of each packet.\n* [Bug 1256] CID 51: Coverity doesn't recognize our assertion macros as\n  terminal.\n* [Bug 1257] CID 57: gsoc_sntp auth_init() fails to fclose(keyfile).\n* [Bug 1258] CID 54: gsoc_sntp resolve_hosts() needs simplification.\n* [Bug 1259] CID 59: gsoc_sntp recv_bcast_data() fails to free(rdata)\n  on error paths.\n* [Bug 1260] CID 60: gsoc_sntp recvpkt() fails to free(rdata).\n* Updated to AutoGen-5.9.9pre2.\n(4.2.5p191) 2009/07/21 Released by Harlan Stenn <stenn@ntp.org>\n* Updated to AutoGen-5.9.9pre1.\n(4.2.5p190) 2009/07/20 Released by Harlan Stenn <stenn@ntp.org>\n* Updated to AutoGen-5.9.8.\n* [Bug 1248] RES_MSSNTP typo in ntp_proto.c.\n* [Bug 1246] use a common template for singly-linked lists, convert most\n  doubly-linked lists to singly-linked.\n* Log warning about signd blocking when restrict mssntp used.\n(4.2.5p189) 2009/07/16 Released by Harlan Stenn <stenn@ntp.org>\n* Documentation cleanup from Dave Mills.\n(4.2.5p188) 2009/07/15 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1245] Broken xmt time sent in fast_xmit() of 4.2.5p187.\n(4.2.5p187) 2009/07/11 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1042] multicast listeners IPv4+6 ignore new interfaces.\n* [Bug 1237] Windows serial code treat CR and LF both as line\n  terminators.\n* [Bug 1238] use fudge time2 for serial timecode offset in NMEA driver.\n* [Bug 1242] Remove --enable-wintime, symmetric workaround is now\n  always enabled.\n* [Bug 1244] NTP_INSIST(fd != maxactivefd) failure in intres child\n* Added restrict keyword \"mssntp\" for Samba4 DC operation, by Dave Mills.\n(4.2.5p186) 2009/07/08 Released by Harlan Stenn <stenn@ntp.org>\n* ntp_proto.c cleanup from Dave Mills.\n(4.2.5p185) 2009/07/01 Released by Harlan Stenn <stenn@ntp.org>\n* Documentation updates from Dave Mills.\n* [Bug 1234] convert NMEA driver to use common PPSAPI code.\n* timepps-Solaris.h pps_handle_t changed from pointer to scalar\n* Spectracom refclock added to Windows port of ntpd\n* [Bug 1236] Declaration order fixed.\n* Bracket private ONCORE debug statements with #if 0 rather than #ifdef\n  DEBUG\n* Delete ONCORE debug statement that is now handled elsewhere.\n(4.2.5p184) 2009/06/24 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1233] atom refclock fudge time1 sign flipped in 4.2.5p164.\n(4.2.5p183) 2009/06/23 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1196] setsockopt(SO_EXCLUSIVEADDRUSE) can fail on Windows 2000\n  and earlier with WSAINVAL, do not log a complaint in that case.\n* [Bug 1210] ONCORE driver terminates ntpd without logging a reason.\n* [Bug 1218] Correct comment in refclock_oncore on /etc/ntp.oncore*\n  configuration file search order.\n* Change ONCORE driver to log using msyslog as well as to any\n  clockstats file.\n* [Bug 1231] ntpsnmpd build fails after sockaddr union changes.\n(4.2.5p182) 2009/06/18 Released by Harlan Stenn <stenn@ntp.org>\n* Add missing header dependencies to the ntpdc layout verification.\n* prefer.html updates from Dave Mills.\n* [Bug 1205] Add ntpd --usepcc and --pccfreq options on Windows\n* [Bug 1215] unpeer by association ID\n* [Bug 1225] Broadcast address miscalculated on Windows 4.2.5p180\n* [Bug 1229] autokey segfaults in cert_install().\n* Use a union for structs sockaddr, sockaddr_storage, sockaddr_in, and\n  sockaddr_in6 to remove casts and enable type checking.  Collapse\n  some previously separate IPv4/IPv6 paths into a single codepath.\n(4.2.5p181) 2009/06/06 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1206] Required compiler changes for Windows\n* [Bug 1084] PPSAPI for ntpd on Windows with DLL backends\n* [Bug 1204] Unix-style refclock device paths on Windows\n* [Bug 1205] partial fix, disable RDTSC use by default on Windows\n* [Bug 1208] decodenetnum() buffer overrun on [ with no ]\n* [Bug 1211] keysdir free()d twice #ifdef DEBUG\n* Enable ONCORE, ARCRON refclocks on Windows (untested)\n(4.2.5p180) 2009/05/29 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1200] Enable IPv6 in Windows port\n* Lose FLAG_FIXPOLL, from Dave Mills.\n(4.2.5p179) 2009/05/23 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1041] xmt -> aorg timestamp cleanup from Dave Mills,\n  reported by Dave Hart.\n* [Bug 1193] Compile error: conflicting types for emalloc.\n* [Bug 1196] VC6 winsock2.h does not define SO_EXCLUSIVEADDRUSE.\n* Leap/expire cleanup from Dave Mills.\n(4.2.5p178) 2009/05/21 Released by Harlan Stenn <stenn@ntp.org>\n* Provide erealloc() and estrdup(), a la emalloc().\n* Improve ntp.conf's parser error messages.\n* [Bug 320] \"restrict default ignore\" does not affect IPv6.\n* [Bug 1192] \"restrict -6 ...\" reports a syntax error.\n(4.2.5p177) 2009/05/18 Released by Harlan Stenn <stenn@ntp.org>\n* Include 4.2.4p7\n* [Bug 1174] nmea_shutdown assumes that nmea has a unit assigned\n* [Bug 1190] NMEA refclock fudge flag4 1 obscures position in timecode\n* Update NMEA refclock documentation in html/drivers/driver20.html\n(4.2.5p176) 2009/05/13 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1154] mDNS registration should be done later, repeatedly and only\n  if asked for. (second try for fix)\n(4.2.5p175) 2009/05/12 Released by Harlan Stenn <stenn@ntp.org>\n* Include 4.2.4p7-RC7\n* [Bug 1180] ntpd won't start with more than ~1000 interfaces\n* [Bug 1182] Documentation typos and missing bits.\n* [Bug 1183] COM port support should extend past COM3\n* [Bug 1184] ntpd is deaf when restricted to second IP on the same net\n* Clean up configure.ac NTP_CACHEVERSION interface, display cache\n  version when clearing.  Fixes a regression.\n(4.2.5p174) 2009/05/09 Released by Harlan Stenn <stenn@ntp.org>\n* Stale leapsecond file fixes from Dave Mills.\n(4.2.5p173) 2009/05/08 Released by Harlan Stenn <stenn@ntp.org>\n* Include 4.2.4p7-RC6\n(4.2.5p172) 2009/05/06 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1175] Instability in PLL daemon mode.\n* [Bug 1176] refclock_parse.c does not compile without PPSAPI.\n(4.2.5p171) 2009/05/04 Released by Harlan Stenn <stenn@ntp.org>\n* Autokey documentation cleanup from Dave Mills.\n* [Bug 1171] line editing libs found without headers (Solaris 11)\n* [Bug 1173] NMEA refclock fails with Solaris PPSAPI\n* Fix problem linking msntp on Solaris when sntp subdir is configured\n  before parent caused by different gethostent library search order.\n* Do not clear config.cache when it is  empty.\n(4.2.5p170) 2009/05/02 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1152] adjust PARSE to new refclock_pps logic\n* Include 4.2.4p7-RC5\n* loopfilter FLL/PLL crossover cleanup from Dave Mills.\n* Documentation updates from Dave Mills.\n* ntp-keygen cleanup from Dave Mills.\n* crypto API cleanup from Dave Mills.\n* Add NTP_CACHEVERSION mechanism to ignore incompatible config.cache\n* Enable gcc -Wstrict-overflow for gsoc_sntp as well\n(4.2.5p169) 2009/04/30 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1171] Note that we never look for -lreadline by default.\n* [Bug 1090] Fix bogus leap seconds in refclock_hpgps.\n(4.2.5p168) 2009/04/29 Released by Harlan Stenn <stenn@ntp.org>\n* Include 4.2.4p7-RC4\n* [Bug 1169] quiet compiler warnings\n* Re-enable gcc -Wstrict-prototypes when not building with OpenSSL\n* Enable gcc -Wstrict-overflow\n* ntpq/ntpdc emit newline after accepting password on Windows\n* Updates from Dave Mills:\n* ntp-keygen.c: Updates.\n* Fix the error return and syslog function ID in refclock_{param,ppsapi}.\n* Make sure syspoll is within the peer's minpoll/maxpoll bounds.\n* ntp_crypto.c: Use sign_siglen, not len. sign key filename cleanup.\n* Bump NTP_MAXEXTEN from 1024 to 2048, update values for some field lengths.\n* m4/ntp_lineeditlibs.m4: fix warnings from newer Autoconf\n* [Bug 1166] Remove truncation of position (blanking) code in refclock_nmea.c\n(4.2.5p167) 2009/04/26 Released by Harlan Stenn <stenn@ntp.org>\n* Crypto cleanup from Dave Mills.\n(4.2.5p166) 2009/04/25 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1165] Clean up small memory leaks in the  config file parser\n* Correct logconfig keyword declaration to MULTIPLE_ARG\n* Enable filename and line number leak reporting on Windows when built\n  DEBUG for all the typical C runtime allocators such as calloc,\n  malloc, and strdup.  Previously only emalloc calls were covered.\n* Add DEBUG-only code to free dynamically allocated memory that would\n  otherwise remain allocated at ntpd exit, to allow less forgivable\n  leaks to stand out in leaks reported after exit.\n* Ensure termination of strings in ports/winnt/libisc/isc_strerror.c\n  and quiet compiler warnings.\n* [Bug 1057] ntpdc unconfig failure\n* [Bug 1161] unpeer AKA unconfig command for ntpq :config\n* PPS and crypto cleanup in ntp_proto.c from Dave Mills.\n(4.2.5p165) 2009/04/23 Released by Harlan Stenn <stenn@ntp.org>\n* WWVB refclock cleanup from Dave Mills.\n* Code cleanup: requested_key -> request_key.\n* [Bug 833] ignore whitespace at end of remote configuration lines\n* [Bug 1033] ntpdc/ntpq crash prompting for keyid on Windows\n* [Bug 1028] Support for W32Time authentication via Samba.\n* quiet ntp_parser.c malloc redeclaration warning\n* Mitigation and PPS/PPSAPI cleanup from Dave Mills.\n* Documentation updates from Dave Mills.\n* timepps-Solaris.h patches from Dave Hart.\n(4.2.5p164) 2009/04/22 Released by Harlan Stenn <stenn@ntp.org>\n* Include 4.2.4p7-RC3\n* PPS/PPSAPI cleanup from Dave Mills.\n* Documentation updates from Dave Mills.\n* [Bug 1125] C runtime per-thread initialization on Windows\n* [Bug 1152] temporarily disable refclock_parse, refclock_true until\n  maintainers can repair build break from pps_sample()\n* [Bug 1153] refclock_nmea should not mix UTC with GPS time\n* [Bug 1159] ntpq overlap diagnostic message test buggy\n(4.2.5p163) 2009/04/10 Released by Harlan Stenn <stenn@ntp.org>\n(4.2.5p162) 2009/04/09 Released by Harlan Stenn <stenn@ntp.org>\n* Documentation updates from Dave Mills.\n* Mitigation and PPS cleanup from Dave Mills.\n* Include 4.2.4p7-RC2\n* [Bug 216] New interpolation scheme for Windows eliminates 1ms jitter\n* remove a bunch of #ifdef SYS_WINNT from portable code\n* 64-bit time_t cleanup for building on newer Windows compilers\n* Only set CMOS clock during ntpd exit on Windows if the computer is\n  shutting down or restarting.\n* [Bug 1148] NMEA reference clock improvements\n* remove deleted gsoc_sntp/utilities.o from repository so that .o build\n  products can be cleaned up without corrupting the repository.\n(4.2.5p161) 2009/03/31 Released by Harlan Stenn <stenn@ntp.org>\n* Documentation updates from Dave Mills.\n(4.2.5p160) 2009/03/30 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1141] refclock_report missing braces cause spurious \"peer event:\n  clock clk_unspec\" log entries\n* Include 4.2.4p7-RC1\n(4.2.5p159) 2009/03/28 Released by Harlan Stenn <stenn@ntp.org>\n* \"bias\" changes from Dave Mills.\n(4.2.5p158) 2009/01/30 Released by Harlan Stenn <stenn@ntp.org>\n* Fix [CID 72], a typo introduced at the latest fix to prettydate.c.\n(4.2.5p157) 2009/01/26 Released by Harlan Stenn <stenn@ntp.org>\n* Cleanup/fixes for ntp_proto.c and ntp_crypto.c from Dave Mills.\n(4.2.5p156) 2009/01/19 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1118] Fixed sign extension for 32 bit time_t in caljulian() and prettydate().\n  Fixed some compiler warnings about missing prototypes.\n  Fixed some other simple compiler warnings.\n* [Bug 1119] [CID 52] Avoid a possible null-dereference in ntp_crypto.c.\n* [Bug 1120] [CID 51] INSIST that peer is non-null before we dereference it.\n* [Bug 1121] [CID 47] double fclose() in ntp-keygen.c.\n(4.2.5p155) 2009/01/18 Released by Harlan Stenn <stenn@ntp.org>\n* Documentation updates from Dave Mills.\n* CHU frequency updates.\n* Design assertion fixes for ntp_crypto.c from Dave Mills.\n(4.2.5p154) 2009/01/13 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 992] support interface event change on Linux from\n  Miroslav Lichvar.\n(4.2.5p153) 2009/01/09 Released by Harlan Stenn <stenn@ntp.org>\n* Renamed gsoc_sntp/:fetch-stubs to gsoc_sntp/fetch-stubs to avoid\n  file name problems under Windows.\n  Removed German umlaut from log msg for 4.2.5p142.\n(4.2.5p152) 2009/01/08 Released by Harlan Stenn <stenn@ntp.org>\n* Include 4.2.4p6: 2009/01/08 Released by Harlan Stenn <stenn@ntp.org>\n(4.2.5p151) 2008/12/23 Released by Harlan Stenn <stenn@ntp.org>\n* Stats file logging cleanup from Dave Mills.\n(4.2.5p150) 2008/12/15 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1099] Fixed wrong behaviour in sntp's crypto.c.\n* [Bug 1103] Fix 64-bit issues in the new calendar code.\n(4.2.5p149) 2008/12/05 Released by Harlan Stenn <stenn@ntp.org>\n* Fixed mismatches in data types and OID definitions in ntpSnmpSubAgent.c\n* added a premliminary MIB file to ntpsnmpd (ntpv4-mib.mib)\n(4.2.5p148) 2008/12/04 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1070] Fix use of ntpq_parsestring() in ntpsnmpd.\n(4.2.5p147) 2008/11/27 Released by Harlan Stenn <stenn@ntp.org>\n* Update gsoc_sntp's GCC warning code.\n(4.2.5p146) 2008/11/26 Released by Harlan Stenn <stenn@ntp.org>\n* Update Solaris CFLAGS for gsoc_sntp.\n(4.2.5p145) 2008/11/20 Released by Harlan Stenn <stenn@ntp.org>\n* Deal with time.h for sntp under linux.\n* Provide rpl_malloc() for sntp for systems that need it.\n* Handle ss_len and socklen type for sntp.\n* Fixes to the sntp configure.ac script.\n* Provide INET6_ADDRSTRLEN if it is missing.\n* [Bug 1095] overflow in caljulian.c.\n(4.2.5p144) 2008/11/19 Released by Harlan Stenn <stenn@ntp.org>\n* Use int32, not int32_t.\n* Avoid the sched*() functions under OSF - link problems.\n(4.2.5p143) 2008/11/17 Released by Harlan Stenn <stenn@ntp.org>\n* sntp cleanup and fixes.\n(4.2.5p142) 2008/11/16 Released by Harlan Stenn <stenn@ntp.org>\n* Imported GSoC SNTP code from Johannes Maximilian Kuehn.\n(4.2.5p141) 2008/11/13 Released by Harlan Stenn <stenn@ntp.org>\n* New caltontp.c and calyearstart.c from Juergen Perlinger.\n(4.2.5p140) 2008/11/12 Released by Harlan Stenn <stenn@ntp.org>\n* Cleanup lint from the ntp_scanner files.\n* [Bug 1011] gmtime() returns NULL on windows where it would not under Unix.\n* Updated caljulian.c and prettydate.c from Juergen Perlinger.\n(4.2.5p139) 2008/11/11 Released by Harlan Stenn <stenn@ntp.org>\n* Typo fix to driver20.html.\n(4.2.5p138) 2008/11/10 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 474] --disable-ipv6 is broken.\n* IPv6 interfaces were being looked for twice.\n* SHM driver grabs more samples, add clockstats\n* decode.html and driver20.html updates from Dave Mills.\n(4.2.5p137) 2008/11/01 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1069] #undef netsnmp's PACKAGE_* macros.\n* [Bug 1068] Older versions of netsnmp do not have netsnmp_daemonize().\n(4.2.5p136) 2008/10/27 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1078] statsdir configuration parsing is broken.\n(4.2.5p135) 2008/09/23 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1072] clock_update should not allow updates older than sys_epoch.\n(4.2.5p134) 2008/09/17 Released by Harlan Stenn <stenn@ntp.org>\n* Clean up build process for ntpsnmpd.\n(4.2.5p133) 2008/09/16 Released by Harlan Stenn <stenn@ntp.org>\n* Add options processing to ntpsnmpd.\n* [Bug 1062] Check net-snmp headers before deciding to build ntpsnmpd.\n* Clean up the libntpq.a build.\n* Regenerate ntp_parser.[ch] from ntp_parser.y\n(4.2.5p132) 2008/09/15 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1067] Multicast DNS service registration must come after the fork\n  on Solaris.\n* [Bug 1066] Error messages should log as errors.\n(4.2.5p131) 2008/09/14 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1065] Re-enable support for the timingstats file.\n(4.2.5p130) 2008/09/13 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1064] Implement --with-net-snmp-config=progname\n* [Bug 1063] ntpSnmpSubagentObject.h is missing from the distribution.\n(4.2.5p129) 2008/09/11 Released by Harlan Stenn <stenn@ntp.org>\n* Quiet some libntpq-related warnings.\n(4.2.5p128) 2008/09/08 Released by Harlan Stenn <stenn@ntp.org>\n* Import Heiko Gerstung's GSoC2008 NTP MIB daemon.\n(4.2.5p127) 2008/09/01 Released by Harlan Stenn <stenn@ntp.org>\n* Regenerate ntpd/ntp_parser.c\n(4.2.5p126) 2008/08/31 Released by Harlan Stenn <stenn@ntp.org>\n* Stop libtool-1.5 from looking for C++ or Fortran.\n* [BUG 610] Documentation update for NMEA reference clock driver.\n* [Bug 828] Fix IPv4/IPv6 address parsing.\n* Changes from Dave Mills:\n  Documentation updates.\n  Fix a corner case where a frequency update was reported but not set.\n  When LEAP_NOTINSYNC->LEAP_NOWARNING, call crypto_update() if we have\n  crypto_flags.\n(4.2.5p125) 2008/08/18 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1052] Add linuxPPS support to ONCORE driver.\n(4.2.5p124) 2008/08/17 Released by Harlan Stenn <stenn@ntp.org>\n* Documentation updates from Dave Mills.\n* Include 4.2.4p5: 2008/08/17 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 861] leap info was not being transmitted.\n* [Bug 1046] refnumtoa.c is using the wrong header file.\n* [Bug 1047] enable/disable options processing fix.\n* header file cleanup.\n* [Bug 1037] buffer in subroutine was 1 byte short.\n* configure.ac: cleanup, add option for wintime, and lay the groundwork\n  for the changes needed for bug 1028.\n* Fixes from Dave Mills: 'bias' and 'interleave' work.  Separate\n  phase and frequency discipline (for long poll intervals).  Update\n  TAI function to match current leapsecond processing.\n* Documentation updates from Dave Mills.\n* [Bug 1037] Use all 16 of the MD5 passwords generated by ntp-keygen.\n* Fixed the incorrect edge parameter being passed to time_pps_kcbind in\n  NMEA refclock driver.\n* [Bug 399] NMEA refclock driver does not honor time1 offset if flag3 set.\n* [Bug 985] Modifications to NMEA reference clock driver to support Accord\n  GPS Clock.\n* poll time updates from Dave Mills.\n* local refclock documentation updates from Dave Mills.\n* [Bug 1022] Fix compilation problems with yesterday's commit.\n* Updates and cleanup from Dave Mills:\n  I've now spent eleven months of a sabbatical year - 7 days a week, 6-10\n  hours most days - working on NTP. I have carefully reviewed every major\n  algorithm, examined its original design and evolution from that design.\n  I've trimmed off dead code and briar patches and did zillions of tests\n  contrived to expose evil vulnerabilities. The development article is in\n  rather good shape and should be ready for prime time.\n\n  1. The protostats statistics files have been very useful in exposing\n  little twitches and turns when something hiccups, like a broken PPS\n  signal. Most of what used to be syslog messages are now repackaged as\n  protostats messages with optional syslog as well. These can also be sent\n  as traps which might be handy to tiggle a beeper or celltext. These, the\n  sysstats files and cryptostats files reveal the ambient health of a busy\n  server, monitor traffic and error counts and spot crypto attacks.\n\n  2. Close inspection of the clock discipline behavior at long poll\n  intervals (36 h) showed it not doing as well as it should. I redesigned\n  the FLL loop to improve nominal accuracy from  several tens of\n  milliseconds to something less than ten milliseconds.\n\n  3. Autokey (again). The enhanced error checking was becoming a major\n  pain. I found a way to toss out gobs of ugly fat code and replace the\n  function with a much simpler and more comprehensive scheme. It resists\n  bait-and-switch attacks and quickly detect cases when the protocol is\n  not correctly synchronized.\n\n  4. The interface code for the kernel PPS signal was not in sync with the\n  kernel code itself. Some error checks were duplicated and some\n  ineffective. I found none of the PPS-capable drivers, including the atom\n  driver, do anything when the prefer peer fails; the kernel PPS signal\n  remains in control. The atom driver now disables the kernel PPS when the\n  prefer peer comes bum. This is important when the prefer peer is not a\n  reference clock but a remote NTP server.\n\n  5. The flake restrict bit turned out to be really interesting,\n  especially with symmtric modes and of those especially those using\n  Autokey. Small changes in the recovery procedures when packets are lost\n  now avoid almost all scenarios which previously required protocol resets.\n\n  6. I've always been a little uncomfortable when using the clock filter\n  with long poll intervals because the samples become less and less\n  correlated as the sample age exceeds the Allan intercept. Various\n  schemes have been used over the years to cope with this fact. The latest\n  one and the one that works the best is to use a modified sort metric\n  where the delay is used when the age of the sample is less than the\n  intercept and the sum of delay and dispersion above that. The net result\n  is that, at small poll intervals the algorithm operates as a minimum\n  filter, while at larger poll intervals it morphs to FIFO. Left\n  unmodified, a sample could be used when twelve days old. This along with\n  the FLL modifications has made a dramatic improvement at large poll\n  intervals.\n\n- [Backward Incompatible] The 'state' variable is no longer reported or\n  available via ntpq output.  The following system status bit names\n  have been changed:\n  - sync_alarm -> leap_alarm\n  - sync_atomic -> sync_pps\n  - sync_lf_clock -> sync_lf_radio\n  - sync_hf_clock -> sync_hf_radio\n  - sync_uhf_clock -> sync_uhf_radio\n  - sync_local_proto -> sync_local\n  - sync_udp/time -> sync_other\n  Other names have been changed as well.  See the change history for\n  libntp/statestr.c for more details.\n  Other backward-incompatible changes in ntpq include:\n  - assID -> associd\n  - rootdispersion -> rootdisp\n  - pkt_head -> pkt_neader\n  See the change history for other details.\n\n* Updates and cleanup from Dave Mills.\n* [Bug 995] Remove spurious ; from ntp-keygen.c.\n* More cleanup and changes from Dave Mills.\n* [Bug 980] Direct help to stdout.\n---\n(4.2.4p8) 2009/12/08 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Sec 1331] DoS with mode 7 packets - CVE-2009-3563.\n\n---\n(4.2.4p7) 2009/05/18 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Sec 1151] Remote exploit if autokey is enabled - CVE-2009-1252.\n* [Bug 1187] Update the copyright date.\n* [Bug 1191] ntpd fails on Win2000 - \"Address already in use\" after fix\n  for [Sec 1149].\n\n---\n(4.2.4p7-RC7) 2009/05/12 Released by Harlan Stenn <stenn@ntp.org>\n\n* ntp.isc.org -> ntp.org cleanup.\n* [Bug 1178] Use prior FORCE_DNSRETRY behavior as needed at runtime,\n  add configure --enable-ignore-dns-errors to be even more stubborn\n\n---\n(4.2.4p7-RC6) 2009/05/08 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 784] Make --enable-linuxcaps the default when available\n* [Bug 1179] error messages for -u/--user and -i lacking droproot\n* Updated JJY reference clock driver from Takao Abe\n* [Bug 1071] Log a message and exit before trying to use FD_SET with a\n  descriptor larger than FD_SETSIZE, which will corrupt memory\n* On corruption of the iface list head in add_interface, log and exit\n\n---\n(4.2.4p7-RC5) 2009/05/02 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1172] 4.2.4p7-RC{3,4} fail to build on linux.\n* flock-build script unportable 'set -m' use removed\n\n---\n(4.2.4p7-RC4) 2009/04/29 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1167] use gcc -Winit-self only if it is understood\n\n---\n(4.2.4p7-RC3) 2009/04/22 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 787] Bug fixes for 64-bit time_t on Windows\n* [Bug 813] Conditional naming of Event\n* [Bug 1147] System errors should be logged to msyslog()\n* [Bug 1155] Fix compile problem on Windows with VS2005\n* [Bug 1156] lock_thread_to_processor() should be declared in header\n* [Bug 1157] quiet OpenSSL warnings, clean up configure.ac\n* [Bug 1158] support for aix6.1\n* [Bug 1160] MacOS X is like BSD regarding F_SETOWN\n\n---\n(4.2.4p7-RC2) 2009/04/09 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Sec 1144] limited buffer overflow in ntpq.  CVE-2009-0159\n* [Sec 1149] use SO_EXCLUSIVEADDRUSE on Windows\n\n---\n(4.2.4p7-RC1) 2009/03/30 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1131] UDP sockets should not use SIGPOLL on Solaris.\n* build system email address cleanup\n* [Bug 774] parsesolaris.c does not compile under the new Solaris\n* [Bug 873] Windows serial refclock proper TTY line discipline emulation\n* [Bug 1014] Enable building with VC9 (in Visual Studio 2008,\n  Visual C++ 2008, or SDK)\n* [Bug 1117] Deferred interface binding under Windows works only correctly\n  if FORCE_DNSRETRY is defined\n* [BUG 1124] Lock QueryPerformanceCounter() client threads to same CPU\n* DPRINTF macro made safer, always evaluates to a statement and will not\n  misassociate an else which follows the macro.\n\n---\n(4.2.4p6) 2009/01/08 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1113] Fixed build errors with recent versions of openSSL. \n* [Sec 1111] Fix incorrect check of EVP_VerifyFinal()'s return value.\n* Update the copyright year.\n\n---\n(4.2.4p5) 2008/08/17 Released by Harlan Stenn <stenn@ntp.org>\n\n* [BUG 1051] Month off by one in leap second message written to clockstats\n  file fixed.\n* [Bug 450] Windows only: Under original Windows NT we must not discard the\n  wildcard socket to workaround a bug in NT's getsockname().\n* [Bug 1038] Built-in getpass() function also prompts for password if\n  not built with DEBUG.\n* [Bug 841] Obsolete the \"dynamic\" keyword and make deferred binding\n  to local interfaces the default.\n  Emit a warning if that keyword is used for configuration.\n* [Bug 959] Refclock on Windows not properly releasing recvbuffs.\n* [Bug 993] Fix memory leak when fetching system messages.\n* much cleanup, fixes, and changes from Dave Mills.\n* ntp_control.c: LEAPTAB is a filestamp, not an unsigned.  From Dave Mills.\n* ntp_config.c: ntp_minpoll fixes from Dave Mills.\n* ntp-keygen updates from Dave Mills.\n* refresh epoch, throttle, and leap cleanup from Dave Mills.\n* Documentation cleanup from Dave Mills.\n* [Bug 918] Only use a native md5.h if MD5Init() is available.\n* [Bug 979] Provide ntptimeval if it is not otherwise present.\n* [Bug 634] Re-instantiate syslog() and logfiles after the daemon fork.\n* [Bug 952] Use md5 code with a friendlier license.\n* [Bug 977] Fix mismatching #ifdefs for builds without IPv6.\n* [Bug 830] Fix the checking order of the interface options.\n* Clean up the logfile/syslog setup.\n* [Bug 970] Lose obsolete -g flag to ntp-keygen.\n* The -e flag to ntp-keygen can write GQ keys now, too.\n* ntp_proto.c: sys_survivors and hpoll cleanup from Dave Mills.\n* ntp_loopfilter.c: sys_poll cleanup from Dave Mills.\n* refclock_wwv.c: maximum-likelihood digit and DSYNC fixes from Dave Mills.\n* [Bug 967] preemptable associations are lost forever on a step.\n* ntp_config.c: [CID 48] missing \"else\" clause.\n* [Bug 833] ntpq config keyword is quote-mark unfriendly.\n* Rename the ntpq \"config\" keyword to \":config\".\n* Dave Mills shifted some orphan processing.\n* Fix typos in the [Bug 963] patch.\n* bootstrap: squawk if genver fails.  Use -f with cp in case Dave does a chown.\n* Remove obsolete simulator command-line options.\n* ntp_request.c: [CID 36] zero sin_zero.\n* [Bug 963] get_systime() is too noisy.\n* [Bug 960] spurious syslog:crypto_setup:spurious crypto command\n* [Bug 964] Change *-*-linux* to *-*-*linux* to allow for uclinux.\n* Changes from Dave Mills:\n  - ntp_util.c: cleanup.\n  - ntp_timer.c: watch the non-burst packet rate.\n  - ntp_request.c: cleanup.\n  - ntp_restrict.c: RES_LIMITED cleanup.\n  - ntp_proto.c: RES_LIMITED, rate bucktes, counters, overall cleanup.\n  - ntp_peer.c: disallow peer_unconfig().\n  - ntp_monitor.c: RES_LIMITED cleanup.\n  - ntp_loopfilter.c: poll interval cleanup.\n  - ntp_crypto.c: volley -> retry.  Cleanup TAI leap message.\n  - ntp_config: average and minimum are ^2 values.\n  - ntpdc: unknownversion is really \"declined\", not \"bad version\".\n  - Packet retry cleanup.\n* [Bug 961] refclock_tpro.c:tpro_poll() calls refclock_receive() twice.\n* [Bug 957] Windows only: Let command line parameters from the Windows SCM GUI\n  override the standard parameters from the ImagePath registry key.\n* Added HAVE_INT32_T to the Windows config.h to avoid duplicate definitions.\n* Work around a VPATH difference in FreeBSD's 'make' command.\n* Update bugreport URL.\n* Update -I documentation.\n* [Bug 713] Fix bug reporting information.\n* A bug in the application of the negative-sawtooth for 12 channel receivers. \n* The removal of unneeded startup code used for the original LinuxPPS, it now\n  conforms to the PPSAPI and does not need special code.  \n* ntp-keygen.c: Coverity fixes [CID 33,47].\n* Volley cleanup from Dave Mills.\n* Fuzz cleanup from Dave Mills.\n* [Bug 861] Leap second cleanups from Dave Mills.\n* ntpsim.c: add missing protypes and fix [CID 34], a nit.\n* Upgraded bison at UDel.\n* Update br-flock and flock-build machine lists.\n* [Bug 752] QoS: add parse/config handling code. \n* Fix the #include order in tickadj.c for picky machines.\n* [Bug 752] QoS: On some systems, netinet/ip.h needs netinet/ip_systm.h.\n* [Bug 752] Update the QoS tagging (code only - configuration to follow).\n* Orphan mode and other protocol cleanup from Dave Mills.\n* Documentation cleanup from Dave Mills.\n* [Bug 940] ntp-keygen uses -v.  Disallow it as a shortcut for --version.\n* more cleanup to ntp_lineeditlibs.m4.\n* Documentation updates from Dave Mills.\n* -ledit cleanup for ntpdc and ntpq.\n* Association and other cleanup from Dave Mills.\n* NTP_UNREACH changes from Dave Mills.\n* Fix the readline history test.\n* [Bug 931] Require -lreadline to be asked for explicitly.\n* [Bug 764] When looking for -lreadline support, also try using -lncurses.\n* [Bug 909] Fix int32_t errors for ntohl().\n* [Bug 376/214] Enhancements to support multiple if names and IP addresses.\n* [Bug 929] int32_t is undefined on Windows.  Casting wrong.\n* [Bug 928] readlink missing braces.\n* [Bug 788] Update macros to support VS 2005.\n* ntpd/ntp_timer.c: add missing sys_tai parameter for debug printf\n* [Bug 917] config parse leaves files open\n* [Bug 912] detect conflicting enable/disable configuration on interfaces\n  sharing an IP address\n* [Bug 771] compare scopeid if available for IPv6 addresses\n* Lose obsolete crypto subcommands (Dave Mills).\n* WWV is an HF source, not an LF source (Dave Mills).\n* [Bug 899] Only show -i/--jaildir -u/--user options if we HAVE_DROPROOT.\n* [Bug 916] 'cryptosw' is undefined if built without OpenSSL.\n* [Bug 891] 'restrict' config file keyword does not work (partial fix).\n* [Bug 890] the crypto command seems to be required now.\n* [Bug 915] ntpd cores during processing of x509 certificates.\n* Crypto lint cleanup from Dave Mills.\n* [Bug 897] Check RAND_status() - we may not need a .rnd file.\n* Crypto cleanup from Dave Mills.\n* [Bug 911] Fix error message in cmd_args.c.\n* [Bug 895] Log assertion failures via syslog(), not stderr.\n* Documentation updates from Dave Mills.\n* Crypto cleanup from Dave Mills.\n* [Bug 905] ntp_crypto.c fails to compile without -DDEBUG.\n* Avoid double peer stats logging.\n* ntp-keygen cleanup from Dave Mills.\n* libopts needs to be built after ElectricFence.\n* [Bug 894] Initialize keysdir before calling crypto_setup().\n* Calysto cleanup for ntpq.\n* ntp-keygen -i takes an arg.\n* Cleanup and fixes from Dave Mills.\n* [Bug 887] Fix error in ntp_types.h (for sizeof int != 4).\n* Bug 880 bug fixes for Windows build\n* Improve Calysto support.\n* The \"revoke\" parameter is a crypto command.\n* The driftfile wander threshold is a real number.\n* [Bug 850] Fix the wander threshold parameter on the driftfile command.\n* ntp_io.c: Dead code cleanup - Coverity View 19.\n* Leap file related cleanup from Dave Mills.\n* ntp_peer.c: Set peer->srcadr before (not after) calling set_peerdstadr().\n* Initialize offset in leap_file() - Coverity View 17.\n* Use the correct stratum on KISS codes.\n* Fuzz bits cleanup.\n* Show more digits in some debug printf's.\n* Use drift_file_sw internally to control writing the drift file.\n* Implement the wander_threshold option for the driftfile config keyword.\n* reformat ntp_control.c; do not use c++ // comments.\n* [Bug 629] Undo bug #629 fixes as they cause more problems than were  being\n  solved\n* Changes from Dave Mills: in/out-bound data rates, leapsecond cleanup,\n  driftfile write cleanup, packet buffer length checks, documentation updates.\n* More assertion checks and malloc()->emalloc(), courtesy of Calysto.\n* [Bug 864] Place ntpd service in maintenance mode if using SMF on Solaris\n* [Bug 862] includefile nesting; preserve phonelist on reconfig.\n* [Bug 604] ntpd regularly dies on linux/alpha.\n* more leap second infrastructure fixes from Dave Mills.\n* [Bug 858] recent leapfile changes broke non-OpenSSL builds.\n* Use emalloc() instead of malloc() in refclock_datum.c (Calysto).\n* Start using 'design by contract' assertions.\n* [Bug 767] Fast sync to refclocks wanted.\n* Allow null driftfile.\n* Use YYERROR_VERBOSE for the new parser, and fix related BUILT_SOURCES.\n* [Bug 629] changes to ensure broadcast works including on wildcard addresses\n* [Bug 853] get_node() must return a pointer to maximally-aligned memory.\n* Initial leap file fixes from Dave Mills.\n* [Bug 858] Recent leapfile changes broke without OPENSSL.\n* Use a char for DIR_SEP, not a string.\n* [Bug 850] driftfile parsing changes.\n* driftfile maintenance changes from Dave Mills.  Use clock_phi instead of\n  stats_write_tolerance.\n* [Bug 828] refid string not being parsed correctly.\n* [Bug 846] Correct includefile parsing.\n* [Bug 827] New parsing code does not handle \"fudge\" correctly.\n* Enable debugging capability in the config parser.\n* [Bug 839] Crypto password not read from ntp.conf.\n* Have autogen produce writable output files.\n* [Bug 825] Correct logconfig -/+ keyword processing.\n* [Bug 828] Correct parsing of \" delimited strings.\n* Cleanup FILE * usage after fclose() in ntp_filegen.c.\n* [Bug 843] Windows Completion port code was incorrectly merged from -stable.\n* [Bug 840] do fudge configuration AFTER peers (thus refclocks) have been\n  configured.\n* [Bug 824] Added new parser modules to the Windows project file.\n* [Bug 832] Add libisc/log.c headers to the distribution.\n* [Bug 808] Only write the drift file if we are in state 4.\n* Initial import of libisc/log.c and friends.\n* [Bug 826] Fix redefinition of PI.\n* [Bug 825] ntp_scanner.c needs to #include <config.h> .\n* [Bug 824] New parser code has some build problems with the SIM code.\n* [Bug 817] Use longnames for setting ntp variables on the command-line;\n  Allowing '-v' with and without an arg to disambiguate usage is error-prone.\n* [Bug 822] set progname once, early.\n* [Bug 819] remove erroneous #if 0 in Windows completion port code.\n* The new config code missed an #ifdef for building without refclocks.\n* Distribute some files needed by the new config parsing code.\n* [Bug 819] Timeout for WaitForMultipleObjects was 500ms instead of INFINITE\n* Use autogen 5.9.1.\n* Fix clktest command-line arg processing.'\n* Audio documentation updates from Dave Mills.\n* New config file parsing code, from Sachin Kamboj.\n* fuzz bit cleanup from Dave Mills.\n* replay cleanup from Dave Mills.\n* [Bug 542] Tolerate missing directory separator at EO statsdir.\n* [Bug 812] ntpd should drop supplementary groups.\n* [Bug 815] Fix warning compiling 4.2.5p22 under Windows with VC6.\n* [Bug 740] Fix kernel/daemon startup drift anomaly.\n* refclock_wwv.c fixes from Dave Mills.\n* [Bug 810] Fix ntp-keygen documentation.\n* [Bug 787] Bug fixes for 64-bit time_t on Windows.\n* [Bug 796] Clean up duplicate #defines in ntp_control.c.\n* [Bug 569] Use the correct precision for the Leitch CSD-5300.\n* [Bug 795] Moved declaration of variable to top of function.\n* [Bug 798] ntpq [p typo crashes ntpq/ntpdc.\n* [Bug 786] Fix refclock_bancomm.c on Solaris.\n* [Bug 774] parsesolaris.c does not compile under the new Solaris.\n* [Bug 782] Remove P() macros from Windows files.\n* [Bug 778] ntpd fails to lock with drift=+500 when started with drift=-500.\n* [Bug 592] Trimble Thunderbolt GPS support.\n* IRIG, CHU, WWV, WWVB refclock improvements from Dave Mills.\n* [Bug 757] Lose ULONG_CONST().\n* [Bug 756] Require ANSI C (function prototypes).\n* codec (audio) and ICOM changes from Dave Mills.\n\n---\n\n* [Bug 450] Windows only: Under original Windows NT we must not discard the\n  wildcard socket to workaround a bug in NT's getsockname().\n* [Bug 1038] Built-in getpass() function also prompts for password if\n  not built with DEBUG.\n* [Bug 841] Obsolete the \"dynamic\" keyword and make deferred binding\n  to local interfaces the default.\n  Emit a warning if that keyword is used for configuration.\n* [Bug 959] Refclock on Windows not properly releasing recvbuffs.\n* [Bug 993] Fix memory leak when fetching system messages.\n* [Bug 987] Wake up the resolver thread/process when a new interface has\n  become available.\n* Correctly apply negative-sawtooth for oncore 12 channel receiver.\n* Startup code for original LinuxPPS removed.  LinuxPPS now conforms to\n  the PPSAPI.\n* [Bug 1000] allow implicit receive buffer allocation for Windows.\n  fixes startup for windows systems with many interfaces.\n  reduces dropped packets on network bursts.\n  additionally fix timer() starvation during high load.\n* [Bug 990] drop minimum time restriction for interface update interval.\n* [Bug 977] Fix mismatching #ifdefs for builds without IPv6.\n* Update the copyright year.\n* Build system cleanup (make autogen-generated files writable).\n* [Bug 957] Windows only: Let command line parameters from the Windows SCM GUI\n  override the standard parameters from the ImagePath registry key.\n* Fixes for ntpdate:\n* [Bug 532] nptdate timeout is too long if several servers are supplied.\n* [Bug 698] timeBeginPeriod is called without timeEndPeriod in some NTP tools.\n* [Bug 857] ntpdate debug mode adjusts system clock when it shouldn't.\n* [Bug 908] ntpdate crashes sometimes.\n* [Bug 982] ntpdate(and ntptimeset) buffer overrun if HAVE_POLL_H isn't set\n  (dup of 908).\n* [Bug 997] ntpdate buffer too small and unsafe.\n* ntpdate.c: Under Windows check whether NTP port in use under same conditions\n  as under other OSs.\n* ntpdate.c: Fixed some typos and indents (tabs/spaces).\n\n(4.2.4p4) Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 902] Fix problems with the -6 flag.\n* Updated include/copyright.def (owner and year).\n* [Bug 878] Avoid ntpdc use of refid value as unterminated string.\n* [Bug 881] Corrected display of pll offset on 64bit systems.\n* [Bug 886] Corrected sign handling on 64bit in ntpdc loopinfo command.\n* [Bug 889] avoid malloc() interrupted by SIGIO risk\n* ntpd/refclock_parse.c: cleanup shutdown while the file descriptor is still\n  open.\n* [Bug 885] use emalloc() to get a message at the end of the memory\n  unsigned types cannot be less than 0\n  default_ai_family is a short\n  lose trailing , from enum list\n  clarify ntp_restrict.c for easier automated analysis\n* [Bug 884] don't access recv buffers after having them passed to the free\n  list.\n* [Bug 882] allow loopback interfaces to share addresses with other\n  interfaces.\n\n---\n(4.2.4p3) Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 863] unable to stop ntpd on Windows as the handle reference for events\n  changed\n\n---\n(4.2.4p2) Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 854] Broadcast address was not correctly set for interface addresses\n* [Bug 829] reduce syslog noise, while there fix Enabled/Disable logging\n  to reflect the actual configuration.\n* [Bug 795] Moved declaration of variable to top of function.\n* [Bug 789] Fix multicast client crypto authentication and make sure arriving\n  multicast packets do not disturb the autokey dance.\n* [Bug 785] improve handling of multicast interfaces\n  (multicast routers still need to run a multicast routing software/daemon)\n* ntpd/refclock_parse.c: cleanup shutdown while the file descriptor is still\n  open.\n* [Bug 885] use emalloc() to get a message at the end of the memory\n  unsigned types cannot be less than 0\n  default_ai_family is a short\n  lose trailing , from enum list\n* [Bug 884] don't access recv buffers after having them passed to the free list.\n* [Bug 882] allow loopback interfaces to share addresses with other interfaces.\n* [Bug 527] Don't write from source address length to wrong location\n* Upgraded autogen and libopts.\n* [Bug 811] ntpd should not read a .ntprc file.\n\n---\n(4.2.4p1) (skipped)\n\n---\n(4.2.4p0) Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 793] Update Hans Lambermont's email address in ntpsweep.\n* [Bug 776] Remove unimplemented \"rate\" flag from ntpdate.\n* [Bug 586] Avoid lookups if AI_NUMERICHOST is set.\n* [Bug 770] Fix numeric parameters to ntp-keygen (Alain Guibert).\n* [Bug 768] Fix io_setbclient() error message.\n* [Bug 765] Use net_bind_service capability on linux.\n* [Bug 760] The background resolver must be aware of the 'dynamic' keyword.\n* [Bug 753] make union timestamp anonymous (Philip Prindeville).\n* confopt.html: move description for \"dynamic\" keyword into the right section.\n* pick the right type for the recv*() length argument.\n\n---\n(4.2.4) Released by Harlan Stenn <stenn@ntp.org>\n\n* monopt.html fixes from Dave Mills.\n* [Bug 452] Do not report kernel PLL/FLL flips.\n* [Bug 746] Expert mouseCLOCK USB v2.0 support added.'\n* driver8.html updates.\n* [Bug 747] Drop <NOBR> tags from ntpdc.html.\n* sntp now uses the returned precision to control decimal places.\n* sntp -u will use an unprivileged port for its queries.\n* [Bug 741] \"burst\" doesn't work with !unfit peers.\n* [Bug 735] Fix a make/gmake VPATH issue on Solaris.\n* [Bug 739] ntpd -x should not take an argument.\n* [Bug 737] Some systems need help providing struct iovec.\n* [Bug 717] Fix libopts compile problem.\n* [Bug 728] parse documentation fixes.\n* [Bug 734] setsockopt(..., IP_MULTICAST_IF, ...) fails on 64-bit platforms.\n* [Bug 732] C-DEX JST2000 patch from Hideo Kuramatsu.\n* [Bug 721] check for __ss_family and __ss_len separately.\n* [Bug 666] ntpq opeers displays jitter rather than dispersion.\n* [Bug 718] Use the recommended type for the saddrlen arg to getsockname().\n* [Bug 715] Fix a multicast issue under Linux.\n* [Bug 690] Fix a Windows DNS lookup buffer overflow.\n* [Bug 670] Resolved a Windows issue with the dynamic interface rescan code.\n* K&R C support is being deprecated.\n* [Bug 714] ntpq -p should conflict with -i, not -c.\n* WWV refclock improvements from Dave Mills.\n* [Bug 708] Use thread affinity only for the clock interpolation thread.\n* [Bug 706] ntpd can be running several times in parallel.\n* [Bug 704] Documentation typos.\n* [Bug 701] coverity: NULL dereference in ntp_peer.c\n* [Bug 695] libopts does not protect against macro collisions.\n* [Bug 693] __adjtimex is independent of ntp_{adj,get}time.\n* [Bug 692] sys_limitrejected was not being incremented.\n* [Bug 691] restrictions() assumption not always valid.\n* [Bug 689] Deprecate HEATH GC-1001 II; the driver never worked.\n* [Bug 688] Fix documentation typos.\n* [Bug 686] Handle leap seconds better under Windows.\n* [Bug 685] Use the Windows multimedia timer.\n* [Bug 684] Only allow debug options if debugging is enabled.\n* [Bug 683] Use the right version string.\n* [Bug 680] Fix the generated version string on Windows.\n* [Bug 678] Use the correct size for control messages.\n* [Bug 677] Do not check uint_t in configure.ac.\n* [Bug 676] Use the right value for msg_namelen.\n* [Bug 675] Make sure ntpd builds without debugging.\n* [Bug 672] Fix cross-platform structure padding/size differences.\n* [Bug 660] New TIMESTAMP code fails tp build on Solaris Express.\n* [Bug 659] libopts does not build under Windows.\n* [Bug 658] HP-UX with cc needs -Wp,-H8166 in CFLAGS.\n* [Bug 656] ntpdate doesn't work with multicast address.\n* [Bug 638] STREAMS_TLI is deprecated - remove it.\n* [Bug 635] Fix tOptions definition.\n* [Bug 628] Fallback to ntp discipline not working for large offsets.\n* [Bug 622] Dynamic interface tracking for ntpd.\n* [Bug 603] Don't link with libelf if it's not needed.\n* [Bug 523] ntpd service under Windows does't shut down properly.\n* [Bug 500] sntp should always be built.\n* [Bug 479] Fix the -P option.\n* [Bug 421] Support the bc637PCI-U card.\n* [Bug 342] Deprecate broken TRAK refclock driver.\n* [Bug 340] Deprecate broken MSF EES refclock driver.\n* [Bug 153] Don't do DNS lookups on address masks.\n* [Bug 143] Fix interrupted system call on HP-UX.\n* [Bug 42] Distribution tarballs should be signed.\n* Support separate PPS devices for PARSE refclocks.\n* [Bug 637, 51?] Dynamic interface scanning can now be done.\n* Options processing now uses GNU AutoGen.\n\n---\n(4.2.2p4) Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 710] compat getnameinfo() has off-by-one error\n* [Bug 690] Buffer overflow in Windows when doing DNS Lookups\n\n---\n(4.2.2p3) Released by Harlan Stenn <stenn@ntp.org>\n\n* Make the ChangeLog file cleaner and easier to read\n* [Bug 601] ntpq's decodeint uses an extra level of indirection\n* [Bug 657] Different OSes need different sized args for IP_MULTICAST_LOOP\n* release engineering/build changes\n* Documentation fixes\n* Get sntp working under AIX-5\n\n---\n(4.2.2p2) (broken)\n\n* Get sntp working under AIX-5\n\n---\n(4.2.2p1)\n\n* [Bug 661] Use environment variable to specify the base path to openssl.\n* Resolve an ambiguity in the copyright notice\n* Added some new documentation files\n* URL cleanup in the documentation\n* [Bug 657]: IP_MULTICAST_LOOP uses a u_char value/size\n* quiet gcc4 complaints\n* more Coverity fixes\n* [Bug 614] manage file descriptors better\n* [Bug 632] update kernel PPS offsets when PPS offset is re-configured\n* [Bug 637] Ignore UP in*addr_any interfaces\n* [Bug 633] Avoid writing files in srcdir\n* release engineering/build changes\n\n---\n(4.2.2)\n\n* SNTP\n* Many bugfixes\n* Implements the current \"goal state\" of NTPv4\n* Autokey improvements\n* Much better IPv6 support\n* [Bug 360] ntpd loses handles with LAN connection disabled.\n* [Bug 239] Fix intermittent autokey failure with multicast clients.\n* Rewrite of the multicast code\n* New version numbering scheme\n\n---\n(4.2.0)\n\n* More stuff than I have time to document\n* IPv6 support\n* Bugfixes\n* call-gap filtering\n* wwv and chu refclock improvements\n* OpenSSL integration\n\n---\n(4.1.2)\n\n* clock state machine bugfix\n* Lose the source port check on incoming packets\n* (x)ntpdc compatibility patch\n* Virtual IP improvements\n* ntp_loopfilter fixes and improvements\n* ntpdc improvements\n* GOES refclock fix\n* JJY driver\n* Jupiter refclock fixes\n* Neoclock4X refclock fixes\n* AIX 5 port\n* bsdi port fixes\n* Cray unicos port upgrade\n* HP MPE/iX port\n* Win/NT port upgrade\n* Dynix PTX port fixes\n* Document conversion from CVS to BK\n* readline support for ntpq\n\n---\n(4.1.0)\n\n* CERT problem fixed (99k23)\n\n* Huff-n-Puff filter\n* Preparation for OpenSSL support\n* Resolver changes/improvements are not backward compatible with mode 7\n  requests (which are implementation-specific anyway)\n* leap second stuff\n* manycast should work now\n* ntp-genkeys does new good things.\n* scripts/ntp-close\n* PPS cleanup and improvements\n* readline support for ntpdc\n* Crypto/authentication rewrite\n* WINNT builds with MD5 by default\n* WINNT no longer requires Perl for building with Visual C++ 6.0\n* algorithmic improvements, bugfixes\n* Solaris dosynctodr info update\n* html/pic/* is *lots* smaller\n* New/updated drivers: Forum Graphic GPS, WWV/H, Heath GC-100 II, HOPF\n  serial and PCI, ONCORE, ulink331\n* Rewrite of the audio drivers\n\n---\n(4.0.99)\n\n* Driver updates: CHU, DCF, GPS/VME, Oncore, PCF, Ulink, WWVB, burst\n  If you use the ONCORE driver with a HARDPPS kernel module,\n  you *must* have a properly specified:\n\tpps <filename> [assert/clear] [hardpps]\n  line in the /etc/ntp.conf file.\n* PARSE cleanup\n* PPS cleanup\n* ntpd, ntpq, ntpdate cleanup and fixes\n* NT port improvements\n* AIX, BSDI, DEC OSF, FreeBSD, NetBSD, Reliant, SCO, Solaris port improvements\n\n---\n(4.0.98)\n\n* Solaris kernel FLL bug is fixed in 106541-07\n* Bug/lint cleanup\n* PPS cleanup\n* ReliantUNIX patches\n* NetInfo support\n* Ultralink driver\n* Trimble OEM Ace-II support\n* DCF77 power choices\n* Oncore improvements\n\n---\n(4.0.97)\n\n* NT patches\n* AIX,SunOS,IRIX portability\n* NeXT portability\n* ntptimeset utility added\n* cygwin portability patches\n\n---\n(4.0.96)\n\n* -lnsl, -lsocket, -lgen configuration patches\n* Y2K patches from AT&T\n* Linux portability cruft\n\n---\n(4.0.95)\n\n* NT port cleanup/replacement\n* a few portability fixes\n* VARITEXT Parse clock added\n\n---\n(4.0.94)\n\n* PPS updates (including ntp.config options)\n* Lose the old DES stuff in favor of the (optional) RSAREF stuff\n* html cleanup/updates\n* numerous drivers cleaned up\n* numerous portability patches and code cleanup\n\n---\n(4.0.93)\n\n* Oncore refclock needs PPS or one of two ioctls.\n* Don't make ntptime under Linux.  It doesn't compile for too many folks.\n* Autokey cleanup\n* ReliantUnix patches\n* html cleanup\n* tickadj cleanup\n* PARSE cleanup\n* IRIX -n32 cleanup\n* byte order cleanup\n* ntptrace improvements and patches\n* ntpdc improvements and patches\n* PPS cleanup\n* mx4200 cleanup\n* New clock state machine\n* SCO cleanup\n* Skip alias interfaces\n\n---\n(4.0.92)\n\n* chronolog and dumbclock refclocks\n* SCO updates\n* Cleanup/bugfixes\n* Y2K patches\n* Updated palisade driver\n* Plug memory leak\n* wharton kernel clock\n* Oncore clock upgrades\n* NMEA clock improvements\n* PPS improvements\n* AIX portability patches\n\n---\n(4.0.91)\n\n* New ONCORE driver\n* New MX4200 driver\n* Palisade improvements\n* config file bugfixes and problem reporting\n* autoconf upgrade and cleanup\n* HP-UX, IRIX lint cleanup\n* AIX portability patches\n* NT cleanup\n\n---\n(4.0.90)\n\n* Nanoseconds\n* New palisade driver\n* New Oncore driver\n\n---\n(4.0.73)\n\n* README.hackers added\n* PARSE driver is working again\n* Solaris 2.6 has nasty kernel bugs.  DO NOT enable pll!\n* DES is out of the distribution.\n\n---\n(4.0.72)\n\n* K&R C compiling should work again.\n* IRIG patches.\n* MX4200 driver patches.\n* Jupiter driver added.\n* Palisade driver added.  Needs work (ANSI, ntoh/hton, sizeof double, ???)\n", "\n/* A Bison parser, made by GNU Bison 2.4.1.  */\n\n/* Skeleton implementation for Bison's Yacc-like parsers in C\n   \n      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n   Free Software Foundation, Inc.\n   \n   This program is free software: you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n   \n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n   \n   You should have received a copy of the GNU General Public License\n   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n\n/* As a special exception, you may create a larger work that contains\n   part or all of the Bison parser skeleton and distribute that work\n   under terms of your choice, so long as that work isn't itself a\n   parser generator using the skeleton or a modified version thereof\n   as a parser skeleton.  Alternatively, if you modify or redistribute\n   the parser skeleton itself, you may (at your option) remove this\n   special exception, which will cause the skeleton and the resulting\n   Bison output files to be licensed under the GNU General Public\n   License without this special exception.\n   \n   This special exception was added by the Free Software Foundation in\n   version 2.2 of Bison.  */\n\n/* C LALR(1) parser skeleton written by Richard Stallman, by\n   simplifying the original so-called \"semantic\" parser.  */\n\n/* All symbols defined below should begin with yy or YY, to avoid\n   infringing on user name space.  This should be done even for local\n   variables, as they might otherwise be expanded by user macros.\n   There are some unavoidable exceptions within include files to\n   define necessary library symbols; they are noted \"INFRINGES ON\n   USER NAME SPACE\" below.  */\n\n/* Identify Bison output.  */\n#define YYBISON 1\n\n/* Bison version.  */\n#define YYBISON_VERSION \"2.4.1\"\n\n/* Skeleton name.  */\n#define YYSKELETON_NAME \"yacc.c\"\n\n/* Pure parsers.  */\n#define YYPURE 0\n\n/* Push parsers.  */\n#define YYPUSH 0\n\n/* Pull parsers.  */\n#define YYPULL 1\n\n/* Using locations.  */\n#define YYLSP_NEEDED 0\n\n\n\n/* Copy the first part of user declarations.  */\n\n/* Line 189 of yacc.c  */\n#line 11 \"ntp_parser.y\"\n\n  #ifdef HAVE_CONFIG_H\n  # include <config.h>\n  #endif\n\n  #include \"ntpd.h\"\n  #include \"ntp_machine.h\"\n  #include \"ntp.h\"\n  #include \"ntp_stdlib.h\"\n  #include \"ntp_filegen.h\"\n  #include \"ntp_data_structures.h\"\n  #include \"ntp_scanner.h\"\n  #include \"ntp_config.h\"\n  #include \"ntp_crypto.h\"\n\n  #include \"ntpsim.h\"\t\t/* HMS: Do we really want this all the time? */\n\t\t\t\t/* SK: It might be a good idea to always\n\t\t\t\t   include the simulator code. That way\n\t\t\t\t   someone can use the same configuration file\n\t\t\t\t   for both the simulator and the daemon\n\t\t\t\t*/\n\n\n  struct FILE_INFO *ip_file;   /* Pointer to the configuration file stream */\n\n  #define YYMALLOC\temalloc\n  #define YYFREE\tfree\n  #define YYERROR_VERBOSE\n  #define YYMAXDEPTH\t1000   /* stop the madness sooner */\n  void yyerror (char *msg);\n  extern int input_from_file;  /* 0=input from ntpq :config */\n\n\n/* Line 189 of yacc.c  */\n#line 107 \"ntp_parser.c\"\n\n/* Enabling traces.  */\n#ifndef YYDEBUG\n# define YYDEBUG 1\n#endif\n\n/* Enabling verbose error messages.  */\n#ifdef YYERROR_VERBOSE\n# undef YYERROR_VERBOSE\n# define YYERROR_VERBOSE 1\n#else\n# define YYERROR_VERBOSE 0\n#endif\n\n/* Enabling the token table.  */\n#ifndef YYTOKEN_TABLE\n# define YYTOKEN_TABLE 1\n#endif\n\n\n/* Tokens.  */\n#ifndef YYTOKENTYPE\n# define YYTOKENTYPE\n   /* Put the tokens into the symbol table, so that GDB and other debuggers\n      know about them.  */\n   enum yytokentype {\n     T_Age = 258,\n     T_All = 259,\n     T_Allan = 260,\n     T_Auth = 261,\n     T_Autokey = 262,\n     T_Automax = 263,\n     T_Average = 264,\n     T_Bclient = 265,\n     T_Beacon = 266,\n     T_Bias = 267,\n     T_Broadcast = 268,\n     T_Broadcastclient = 269,\n     T_Broadcastdelay = 270,\n     T_Burst = 271,\n     T_Calibrate = 272,\n     T_Calldelay = 273,\n     T_Ceiling = 274,\n     T_Clockstats = 275,\n     T_Cohort = 276,\n     T_ControlKey = 277,\n     T_Crypto = 278,\n     T_Cryptostats = 279,\n     T_Day = 280,\n     T_Default = 281,\n     T_Digest = 282,\n     T_Disable = 283,\n     T_Discard = 284,\n     T_Dispersion = 285,\n     T_Double = 286,\n     T_Driftfile = 287,\n     T_Drop = 288,\n     T_Ellipsis = 289,\n     T_Enable = 290,\n     T_End = 291,\n     T_False = 292,\n     T_File = 293,\n     T_Filegen = 294,\n     T_Flag1 = 295,\n     T_Flag2 = 296,\n     T_Flag3 = 297,\n     T_Flag4 = 298,\n     T_Flake = 299,\n     T_Floor = 300,\n     T_Freq = 301,\n     T_Fudge = 302,\n     T_Host = 303,\n     T_Huffpuff = 304,\n     T_Iburst = 305,\n     T_Ident = 306,\n     T_Ignore = 307,\n     T_Incalloc = 308,\n     T_Incmem = 309,\n     T_Initalloc = 310,\n     T_Initmem = 311,\n     T_Includefile = 312,\n     T_Integer = 313,\n     T_Interface = 314,\n     T_Ipv4 = 315,\n     T_Ipv4_flag = 316,\n     T_Ipv6 = 317,\n     T_Ipv6_flag = 318,\n     T_Kernel = 319,\n     T_Key = 320,\n     T_Keys = 321,\n     T_Keysdir = 322,\n     T_Kod = 323,\n     T_Mssntp = 324,\n     T_Leapfile = 325,\n     T_Limited = 326,\n     T_Link = 327,\n     T_Listen = 328,\n     T_Logconfig = 329,\n     T_Logfile = 330,\n     T_Loopstats = 331,\n     T_Lowpriotrap = 332,\n     T_Manycastclient = 333,\n     T_Manycastserver = 334,\n     T_Mask = 335,\n     T_Maxage = 336,\n     T_Maxclock = 337,\n     T_Maxdepth = 338,\n     T_Maxdist = 339,\n     T_Maxmem = 340,\n     T_Maxpoll = 341,\n     T_Minclock = 342,\n     T_Mindepth = 343,\n     T_Mindist = 344,\n     T_Minimum = 345,\n     T_Minpoll = 346,\n     T_Minsane = 347,\n     T_Mode = 348,\n     T_Monitor = 349,\n     T_Month = 350,\n     T_Mru = 351,\n     T_Multicastclient = 352,\n     T_Nic = 353,\n     T_Nolink = 354,\n     T_Nomodify = 355,\n     T_None = 356,\n     T_Nopeer = 357,\n     T_Noquery = 358,\n     T_Noselect = 359,\n     T_Noserve = 360,\n     T_Notrap = 361,\n     T_Notrust = 362,\n     T_Ntp = 363,\n     T_Ntpport = 364,\n     T_NtpSignDsocket = 365,\n     T_Orphan = 366,\n     T_Orphanwait = 367,\n     T_Panic = 368,\n     T_Peer = 369,\n     T_Peerstats = 370,\n     T_Phone = 371,\n     T_Pid = 372,\n     T_Pidfile = 373,\n     T_Pool = 374,\n     T_Port = 375,\n     T_Preempt = 376,\n     T_Prefer = 377,\n     T_Protostats = 378,\n     T_Pw = 379,\n     T_Qos = 380,\n     T_Randfile = 381,\n     T_Rawstats = 382,\n     T_Refid = 383,\n     T_Requestkey = 384,\n     T_Restrict = 385,\n     T_Revoke = 386,\n     T_Saveconfigdir = 387,\n     T_Server = 388,\n     T_Setvar = 389,\n     T_Sign = 390,\n     T_Source = 391,\n     T_Statistics = 392,\n     T_Stats = 393,\n     T_Statsdir = 394,\n     T_Step = 395,\n     T_Stepout = 396,\n     T_Stratum = 397,\n     T_String = 398,\n     T_Sysstats = 399,\n     T_Tick = 400,\n     T_Time1 = 401,\n     T_Time2 = 402,\n     T_Timingstats = 403,\n     T_Tinker = 404,\n     T_Tos = 405,\n     T_Trap = 406,\n     T_True = 407,\n     T_Trustedkey = 408,\n     T_Ttl = 409,\n     T_Type = 410,\n     T_Unconfig = 411,\n     T_Unpeer = 412,\n     T_Version = 413,\n     T_WanderThreshold = 414,\n     T_Week = 415,\n     T_Wildcard = 416,\n     T_Xleave = 417,\n     T_Year = 418,\n     T_Flag = 419,\n     T_Void = 420,\n     T_EOC = 421,\n     T_Simulate = 422,\n     T_Beep_Delay = 423,\n     T_Sim_Duration = 424,\n     T_Server_Offset = 425,\n     T_Duration = 426,\n     T_Freq_Offset = 427,\n     T_Wander = 428,\n     T_Jitter = 429,\n     T_Prop_Delay = 430,\n     T_Proc_Delay = 431\n   };\n#endif\n/* Tokens.  */\n#define T_Age 258\n#define T_All 259\n#define T_Allan 260\n#define T_Auth 261\n#define T_Autokey 262\n#define T_Automax 263\n#define T_Average 264\n#define T_Bclient 265\n#define T_Beacon 266\n#define T_Bias 267\n#define T_Broadcast 268\n#define T_Broadcastclient 269\n#define T_Broadcastdelay 270\n#define T_Burst 271\n#define T_Calibrate 272\n#define T_Calldelay 273\n#define T_Ceiling 274\n#define T_Clockstats 275\n#define T_Cohort 276\n#define T_ControlKey 277\n#define T_Crypto 278\n#define T_Cryptostats 279\n#define T_Day 280\n#define T_Default 281\n#define T_Digest 282\n#define T_Disable 283\n#define T_Discard 284\n#define T_Dispersion 285\n#define T_Double 286\n#define T_Driftfile 287\n#define T_Drop 288\n#define T_Ellipsis 289\n#define T_Enable 290\n#define T_End 291\n#define T_False 292\n#define T_File 293\n#define T_Filegen 294\n#define T_Flag1 295\n#define T_Flag2 296\n#define T_Flag3 297\n#define T_Flag4 298\n#define T_Flake 299\n#define T_Floor 300\n#define T_Freq 301\n#define T_Fudge 302\n#define T_Host 303\n#define T_Huffpuff 304\n#define T_Iburst 305\n#define T_Ident 306\n#define T_Ignore 307\n#define T_Incalloc 308\n#define T_Incmem 309\n#define T_Initalloc 310\n#define T_Initmem 311\n#define T_Includefile 312\n#define T_Integer 313\n#define T_Interface 314\n#define T_Ipv4 315\n#define T_Ipv4_flag 316\n#define T_Ipv6 317\n#define T_Ipv6_flag 318\n#define T_Kernel 319\n#define T_Key 320\n#define T_Keys 321\n#define T_Keysdir 322\n#define T_Kod 323\n#define T_Mssntp 324\n#define T_Leapfile 325\n#define T_Limited 326\n#define T_Link 327\n#define T_Listen 328\n#define T_Logconfig 329\n#define T_Logfile 330\n#define T_Loopstats 331\n#define T_Lowpriotrap 332\n#define T_Manycastclient 333\n#define T_Manycastserver 334\n#define T_Mask 335\n#define T_Maxage 336\n#define T_Maxclock 337\n#define T_Maxdepth 338\n#define T_Maxdist 339\n#define T_Maxmem 340\n#define T_Maxpoll 341\n#define T_Minclock 342\n#define T_Mindepth 343\n#define T_Mindist 344\n#define T_Minimum 345\n#define T_Minpoll 346\n#define T_Minsane 347\n#define T_Mode 348\n#define T_Monitor 349\n#define T_Month 350\n#define T_Mru 351\n#define T_Multicastclient 352\n#define T_Nic 353\n#define T_Nolink 354\n#define T_Nomodify 355\n#define T_None 356\n#define T_Nopeer 357\n#define T_Noquery 358\n#define T_Noselect 359\n#define T_Noserve 360\n#define T_Notrap 361\n#define T_Notrust 362\n#define T_Ntp 363\n#define T_Ntpport 364\n#define T_NtpSignDsocket 365\n#define T_Orphan 366\n#define T_Orphanwait 367\n#define T_Panic 368\n#define T_Peer 369\n#define T_Peerstats 370\n#define T_Phone 371\n#define T_Pid 372\n#define T_Pidfile 373\n#define T_Pool 374\n#define T_Port 375\n#define T_Preempt 376\n#define T_Prefer 377\n#define T_Protostats 378\n#define T_Pw 379\n#define T_Qos 380\n#define T_Randfile 381\n#define T_Rawstats 382\n#define T_Refid 383\n#define T_Requestkey 384\n#define T_Restrict 385\n#define T_Revoke 386\n#define T_Saveconfigdir 387\n#define T_Server 388\n#define T_Setvar 389\n#define T_Sign 390\n#define T_Source 391\n#define T_Statistics 392\n#define T_Stats 393\n#define T_Statsdir 394\n#define T_Step 395\n#define T_Stepout 396\n#define T_Stratum 397\n#define T_String 398\n#define T_Sysstats 399\n#define T_Tick 400\n#define T_Time1 401\n#define T_Time2 402\n#define T_Timingstats 403\n#define T_Tinker 404\n#define T_Tos 405\n#define T_Trap 406\n#define T_True 407\n#define T_Trustedkey 408\n#define T_Ttl 409\n#define T_Type 410\n#define T_Unconfig 411\n#define T_Unpeer 412\n#define T_Version 413\n#define T_WanderThreshold 414\n#define T_Week 415\n#define T_Wildcard 416\n#define T_Xleave 417\n#define T_Year 418\n#define T_Flag 419\n#define T_Void 420\n#define T_EOC 421\n#define T_Simulate 422\n#define T_Beep_Delay 423\n#define T_Sim_Duration 424\n#define T_Server_Offset 425\n#define T_Duration 426\n#define T_Freq_Offset 427\n#define T_Wander 428\n#define T_Jitter 429\n#define T_Prop_Delay 430\n#define T_Proc_Delay 431\n\n\n\n\n#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED\ntypedef union YYSTYPE\n{\n\n/* Line 214 of yacc.c  */\n#line 50 \"ntp_parser.y\"\n\n    char   *String;\n    double  Double;\n    int     Integer;\n    void   *VoidPtr;\n    queue  *Queue;\n    struct attr_val *Attr_val;\n    struct address_node *Address_node;\n    struct setvar_node *Set_var;\n\n    /* Simulation types */\n    server_info *Sim_server;\n    script_info *Sim_script;\n\n\n\n/* Line 214 of yacc.c  */\n#line 512 \"ntp_parser.c\"\n} YYSTYPE;\n# define YYSTYPE_IS_TRIVIAL 1\n# define yystype YYSTYPE /* obsolescent; will be withdrawn */\n# define YYSTYPE_IS_DECLARED 1\n#endif\n\n\n/* Copy the second part of user declarations.  */\n\n\n/* Line 264 of yacc.c  */\n#line 524 \"ntp_parser.c\"\n\n#ifdef short\n# undef short\n#endif\n\n#ifdef YYTYPE_UINT8\ntypedef YYTYPE_UINT8 yytype_uint8;\n#else\ntypedef unsigned char yytype_uint8;\n#endif\n\n#ifdef YYTYPE_INT8\ntypedef YYTYPE_INT8 yytype_int8;\n#elif (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\ntypedef signed char yytype_int8;\n#else\ntypedef short int yytype_int8;\n#endif\n\n#ifdef YYTYPE_UINT16\ntypedef YYTYPE_UINT16 yytype_uint16;\n#else\ntypedef unsigned short int yytype_uint16;\n#endif\n\n#ifdef YYTYPE_INT16\ntypedef YYTYPE_INT16 yytype_int16;\n#else\ntypedef short int yytype_int16;\n#endif\n\n#ifndef YYSIZE_T\n# ifdef __SIZE_TYPE__\n#  define YYSIZE_T __SIZE_TYPE__\n# elif defined size_t\n#  define YYSIZE_T size_t\n# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\n#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */\n#  define YYSIZE_T size_t\n# else\n#  define YYSIZE_T unsigned int\n# endif\n#endif\n\n#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)\n\n#ifndef YY_\n# if YYENABLE_NLS\n#  if ENABLE_NLS\n#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */\n#   define YY_(msgid) dgettext (\"bison-runtime\", msgid)\n#  endif\n# endif\n# ifndef YY_\n#  define YY_(msgid) msgid\n# endif\n#endif\n\n/* Suppress unused-variable warnings by \"using\" E.  */\n#if ! defined lint || defined __GNUC__\n# define YYUSE(e) ((void) (e))\n#else\n# define YYUSE(e) /* empty */\n#endif\n\n/* Identity function, used to suppress warnings about constant conditions.  */\n#ifndef lint\n# define YYID(n) (n)\n#else\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nstatic int\nYYID (int yyi)\n#else\nstatic int\nYYID (yyi)\n    int yyi;\n#endif\n{\n  return yyi;\n}\n#endif\n\n#if ! defined yyoverflow || YYERROR_VERBOSE\n\n/* The parser invokes alloca or malloc; define the necessary symbols.  */\n\n# ifdef YYSTACK_USE_ALLOCA\n#  if YYSTACK_USE_ALLOCA\n#   ifdef __GNUC__\n#    define YYSTACK_ALLOC __builtin_alloca\n#   elif defined __BUILTIN_VA_ARG_INCR\n#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */\n#   elif defined _AIX\n#    define YYSTACK_ALLOC __alloca\n#   elif defined _MSC_VER\n#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */\n#    define alloca _alloca\n#   else\n#    define YYSTACK_ALLOC alloca\n#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\n#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */\n#     ifndef _STDLIB_H\n#      define _STDLIB_H 1\n#     endif\n#    endif\n#   endif\n#  endif\n# endif\n\n# ifdef YYSTACK_ALLOC\n   /* Pacify GCC's `empty if-body' warning.  */\n#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))\n#  ifndef YYSTACK_ALLOC_MAXIMUM\n    /* The OS might guarantee only one guard page at the bottom of the stack,\n       and a page size can be as small as 4096 bytes.  So we cannot safely\n       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number\n       to allow for a few compiler-allocated temporary stack slots.  */\n#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */\n#  endif\n# else\n#  define YYSTACK_ALLOC YYMALLOC\n#  define YYSTACK_FREE YYFREE\n#  ifndef YYSTACK_ALLOC_MAXIMUM\n#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM\n#  endif\n#  if (defined __cplusplus && ! defined _STDLIB_H \\\n       && ! ((defined YYMALLOC || defined malloc) \\\n\t     && (defined YYFREE || defined free)))\n#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */\n#   ifndef _STDLIB_H\n#    define _STDLIB_H 1\n#   endif\n#  endif\n#  ifndef YYMALLOC\n#   define YYMALLOC malloc\n#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nvoid *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */\n#   endif\n#  endif\n#  ifndef YYFREE\n#   define YYFREE free\n#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nvoid free (void *); /* INFRINGES ON USER NAME SPACE */\n#   endif\n#  endif\n# endif\n#endif /* ! defined yyoverflow || YYERROR_VERBOSE */\n\n\n#if (! defined yyoverflow \\\n     && (! defined __cplusplus \\\n\t || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))\n\n/* A type that is properly aligned for any stack member.  */\nunion yyalloc\n{\n  yytype_int16 yyss_alloc;\n  YYSTYPE yyvs_alloc;\n};\n\n/* The size of the maximum gap between one aligned stack and the next.  */\n# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)\n\n/* The size of an array large to enough to hold all stacks, each with\n   N elements.  */\n# define YYSTACK_BYTES(N) \\\n     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \\\n      + YYSTACK_GAP_MAXIMUM)\n\n/* Copy COUNT objects from FROM to TO.  The source and destination do\n   not overlap.  */\n# ifndef YYCOPY\n#  if defined __GNUC__ && 1 < __GNUC__\n#   define YYCOPY(To, From, Count) \\\n      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))\n#  else\n#   define YYCOPY(To, From, Count)\t\t\\\n      do\t\t\t\t\t\\\n\t{\t\t\t\t\t\\\n\t  YYSIZE_T yyi;\t\t\t\t\\\n\t  for (yyi = 0; yyi < (Count); yyi++)\t\\\n\t    (To)[yyi] = (From)[yyi];\t\t\\\n\t}\t\t\t\t\t\\\n      while (YYID (0))\n#  endif\n# endif\n\n/* Relocate STACK from its old location to the new one.  The\n   local variables YYSIZE and YYSTACKSIZE give the old and new number of\n   elements in the stack, and YYPTR gives the new location of the\n   stack.  Advance YYPTR to a properly aligned location for the next\n   stack.  */\n# define YYSTACK_RELOCATE(Stack_alloc, Stack)\t\t\t\t\\\n    do\t\t\t\t\t\t\t\t\t\\\n      {\t\t\t\t\t\t\t\t\t\\\n\tYYSIZE_T yynewbytes;\t\t\t\t\t\t\\\n\tYYCOPY (&yyptr->Stack_alloc, Stack, yysize);\t\t\t\\\n\tStack = &yyptr->Stack_alloc;\t\t\t\t\t\\\n\tyynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \\\n\tyyptr += yynewbytes / sizeof (*yyptr);\t\t\t\t\\\n      }\t\t\t\t\t\t\t\t\t\\\n    while (YYID (0))\n\n#endif\n\n/* YYFINAL -- State number of the termination state.  */\n#define YYFINAL  190\n/* YYLAST -- Last index in YYTABLE.  */\n#define YYLAST   718\n\n/* YYNTOKENS -- Number of terminals.  */\n#define YYNTOKENS  182\n/* YYNNTS -- Number of nonterminals.  */\n#define YYNNTS  73\n/* YYNRULES -- Number of rules.  */\n#define YYNRULES  263\n/* YYNRULES -- Number of states.  */\n#define YYNSTATES  417\n\n/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */\n#define YYUNDEFTOK  2\n#define YYMAXUTOK   431\n\n#define YYTRANSLATE(YYX)\t\t\t\t\t\t\\\n  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)\n\n/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */\nstatic const yytype_uint8 yytranslate[] =\n{\n       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n     178,   179,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,   177,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,   180,     2,   181,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,\n       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,\n      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,\n      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,\n      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,\n      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,\n      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,\n      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,\n      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,\n      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,\n      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,\n     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,\n     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,\n     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,\n     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,\n     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,\n     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,\n     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,\n     175,   176\n};\n\n#if YYDEBUG\n/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in\n   YYRHS.  */\nstatic const yytype_uint16 yyprhs[] =\n{\n       0,     0,     3,     5,     9,    12,    15,    16,    18,    20,\n      22,    24,    26,    28,    30,    32,    34,    36,    38,    40,\n      44,    47,    49,    51,    53,    55,    57,    59,    62,    65,\n      67,    70,    72,    74,    77,    79,    81,    84,    87,    90,\n      92,    94,    96,    98,   100,   103,   106,   109,   112,   114,\n     116,   118,   121,   124,   127,   130,   133,   136,   139,   142,\n     145,   148,   151,   153,   154,   157,   159,   162,   165,   168,\n     171,   174,   177,   180,   183,   186,   188,   191,   194,   197,\n     200,   203,   206,   209,   212,   215,   218,   221,   224,   227,\n     231,   234,   236,   238,   240,   242,   244,   246,   248,   250,\n     252,   255,   257,   260,   263,   265,   267,   269,   271,   273,\n     275,   277,   279,   281,   283,   285,   288,   291,   295,   301,\n     305,   310,   315,   319,   320,   323,   325,   327,   329,   331,\n     333,   335,   337,   339,   341,   343,   345,   347,   349,   351,\n     354,   356,   359,   362,   365,   368,   370,   373,   376,   379,\n     382,   385,   388,   391,   394,   398,   401,   403,   406,   409,\n     412,   415,   418,   421,   424,   427,   430,   433,   436,   438,\n     440,   442,   444,   446,   448,   450,   452,   455,   458,   460,\n     463,   466,   469,   472,   475,   478,   481,   483,   487,   489,\n     492,   495,   498,   501,   504,   507,   510,   513,   516,   519,\n     522,   525,   529,   532,   535,   537,   540,   541,   546,   550,\n     553,   555,   558,   561,   564,   566,   568,   572,   576,   578,\n     580,   582,   584,   586,   588,   590,   592,   594,   597,   599,\n     602,   604,   606,   608,   614,   617,   619,   622,   624,   626,\n     628,   630,   632,   634,   640,   642,   646,   649,   653,   657,\n     660,   662,   668,   673,   677,   680,   682,   689,   693,   696,\n     700,   704,   708,   712\n};\n\n/* YYRHS -- A `-1'-separated list of the rules' RHS.  */\nstatic const yytype_int16 yyrhs[] =\n{\n     183,     0,    -1,   184,    -1,   184,   185,   166,    -1,   185,\n     166,    -1,     1,   166,    -1,    -1,   186,    -1,   192,    -1,\n     194,    -1,   195,    -1,   202,    -1,   208,    -1,   199,    -1,\n     215,    -1,   218,    -1,   221,    -1,   224,    -1,   243,    -1,\n     187,   188,   190,    -1,   187,   188,    -1,   133,    -1,   119,\n      -1,   114,    -1,    13,    -1,    78,    -1,   189,    -1,    61,\n     143,    -1,    63,   143,    -1,   143,    -1,   190,   191,    -1,\n     191,    -1,     7,    -1,    12,   242,    -1,    16,    -1,    50,\n      -1,    65,    58,    -1,    91,    58,    -1,    86,    58,    -1,\n     104,    -1,   121,    -1,   122,    -1,   152,    -1,   162,    -1,\n     154,    58,    -1,    93,    58,    -1,   158,    58,    -1,   193,\n     188,    -1,   156,    -1,   157,    -1,    14,    -1,    79,   240,\n      -1,    97,   240,    -1,     8,    58,    -1,    22,    58,    -1,\n      23,   196,    -1,    66,   143,    -1,    67,   143,    -1,   129,\n      58,    -1,   131,    58,    -1,   153,   236,    -1,   110,   143,\n      -1,   197,    -1,    -1,   197,   198,    -1,   198,    -1,    48,\n     143,    -1,    51,   143,    -1,   124,   143,    -1,   126,   143,\n      -1,   135,   143,    -1,    27,   143,    -1,   131,    58,    -1,\n     150,   200,    -1,   200,   201,    -1,   201,    -1,    19,    58,\n      -1,    45,    58,    -1,    21,   241,    -1,   111,    58,    -1,\n     112,    58,    -1,    89,   242,    -1,    84,   242,    -1,    87,\n     242,    -1,    82,   242,    -1,    92,    58,    -1,    11,    58,\n      -1,   137,   203,    -1,   139,   143,    -1,    39,   204,   205,\n      -1,   203,   204,    -1,   204,    -1,    20,    -1,    24,    -1,\n      76,    -1,   115,    -1,   127,    -1,   144,    -1,   148,    -1,\n     123,    -1,   205,   206,    -1,   206,    -1,    38,   143,    -1,\n     155,   207,    -1,    72,    -1,    99,    -1,    35,    -1,    28,\n      -1,   101,    -1,   117,    -1,    25,    -1,   160,    -1,    95,\n      -1,   163,    -1,     3,    -1,    29,   211,    -1,    96,   213,\n      -1,   130,   188,   209,    -1,   130,   189,    80,   189,   209,\n      -1,   130,    26,   209,    -1,   130,    61,    26,   209,    -1,\n     130,    63,    26,   209,    -1,   130,   136,   209,    -1,    -1,\n     209,   210,    -1,    44,    -1,    52,    -1,    68,    -1,    69,\n      -1,    71,    -1,    77,    -1,   100,    -1,   102,    -1,   103,\n      -1,   105,    -1,   106,    -1,   107,    -1,   109,    -1,   158,\n      -1,   211,   212,    -1,   212,    -1,     9,    58,    -1,    90,\n      58,    -1,    94,    58,    -1,   213,   214,    -1,   214,    -1,\n      53,    58,    -1,    54,    58,    -1,    55,    58,    -1,    56,\n      58,    -1,    81,    58,    -1,    83,    58,    -1,    85,    58,\n      -1,    88,    58,    -1,    47,   188,   216,    -1,   216,   217,\n      -1,   217,    -1,   146,   242,    -1,   147,   242,    -1,   142,\n      58,    -1,   128,   143,    -1,    40,   241,    -1,    41,   241,\n      -1,    42,   241,    -1,    43,   241,    -1,    35,   219,    -1,\n      28,   219,    -1,   219,   220,    -1,   220,    -1,     6,    -1,\n      10,    -1,    17,    -1,    64,    -1,    94,    -1,   108,    -1,\n     138,    -1,   149,   222,    -1,   222,   223,    -1,   223,    -1,\n       5,   242,    -1,    30,   242,    -1,    46,   242,    -1,    49,\n     242,    -1,   113,   242,    -1,   140,   242,    -1,   141,   242,\n      -1,   231,    -1,    57,   143,   185,    -1,    36,    -1,    15,\n     242,    -1,    18,    58,    -1,   145,   242,    -1,    32,   225,\n      -1,    70,   143,    -1,   118,   143,    -1,    75,   143,    -1,\n      74,   229,    -1,   116,   239,    -1,   132,   143,    -1,   134,\n     226,    -1,   151,   189,    -1,   151,   189,   227,    -1,   154,\n     235,    -1,   125,   143,    -1,   143,    -1,   143,    31,    -1,\n      -1,   143,   177,   143,    26,    -1,   143,   177,   143,    -1,\n     227,   228,    -1,   228,    -1,   120,    58,    -1,    59,   189,\n      -1,   229,   230,    -1,   230,    -1,   143,    -1,   232,   234,\n     233,    -1,   232,   234,   143,    -1,    59,    -1,    98,    -1,\n       4,    -1,    60,    -1,    62,    -1,   161,    -1,    73,    -1,\n      52,    -1,    33,    -1,   235,    58,    -1,    58,    -1,   236,\n     237,    -1,   237,    -1,    58,    -1,   238,    -1,   178,    58,\n      34,    58,   179,    -1,   239,   143,    -1,   143,    -1,   240,\n     188,    -1,   188,    -1,    58,    -1,   152,    -1,    37,    -1,\n      58,    -1,    31,    -1,   244,   180,   245,   247,   181,    -1,\n     167,    -1,   245,   246,   166,    -1,   246,   166,    -1,   168,\n     177,   242,    -1,   169,   177,   242,    -1,   247,   248,    -1,\n     248,    -1,   250,   180,   249,   251,   181,    -1,   170,   177,\n     242,   166,    -1,   133,   177,   188,    -1,   251,   252,    -1,\n     252,    -1,   171,   177,   242,   180,   253,   181,    -1,   253,\n     254,   166,    -1,   254,   166,    -1,   172,   177,   242,    -1,\n     173,   177,   242,    -1,   174,   177,   242,    -1,   175,   177,\n     242,    -1,   176,   177,   242,    -1\n};\n\n/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */\nstatic const yytype_uint16 yyrline[] =\n{\n       0,   313,   313,   317,   318,   319,   333,   334,   335,   336,\n     337,   338,   339,   340,   341,   342,   343,   344,   345,   353,\n     359,   368,   369,   370,   371,   372,   376,   377,   378,   382,\n     386,   387,   391,   392,   393,   394,   395,   396,   397,   398,\n     399,   400,   401,   402,   403,   404,   405,   414,   422,   423,\n     433,   435,   437,   448,   450,   452,   457,   459,   461,   463,\n     465,   467,   472,   474,   478,   485,   495,   497,   499,   501,\n     503,   505,   507,   524,   529,   530,   534,   536,   538,   540,\n     542,   544,   546,   548,   550,   552,   554,   564,   566,   575,\n     583,   584,   588,   589,   590,   591,   592,   593,   594,   595,\n     599,   606,   616,   626,   635,   644,   653,   654,   658,   659,\n     660,   661,   662,   663,   664,   673,   677,   681,   686,   691,\n     696,   709,   722,   734,   735,   740,   741,   742,   743,   744,\n     745,   746,   747,   748,   749,   750,   751,   752,   753,   757,\n     759,   764,   765,   766,   770,   772,   777,   778,   779,   780,\n     781,   782,   783,   784,   792,   797,   799,   804,   805,   806,\n     807,   808,   809,   810,   811,   819,   821,   826,   833,   843,\n     844,   845,   846,   847,   848,   849,   865,   869,   870,   874,\n     875,   876,   877,   878,   879,   880,   889,   890,   906,   912,\n     914,   916,   918,   920,   923,   925,   936,   938,   940,   950,\n     952,   954,   956,   958,   963,   965,   969,   973,   975,   980,\n     982,   986,   987,   991,   992,   996,  1011,  1016,  1024,  1025,\n    1029,  1030,  1031,  1032,  1036,  1037,  1038,  1048,  1049,  1053,\n    1055,  1060,  1062,  1066,  1071,  1072,  1076,  1077,  1081,  1090,\n    1091,  1095,  1096,  1105,  1120,  1124,  1125,  1129,  1130,  1134,\n    1135,  1139,  1144,  1148,  1152,  1153,  1157,  1162,  1163,  1167,\n    1169,  1171,  1173,  1175\n};\n#endif\n\n#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE\n/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.\n   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */\nstatic const char *const yytname[] =\n{\n  \"$end\", \"error\", \"$undefined\", \"T_Age\", \"T_All\", \"T_Allan\", \"T_Auth\",\n  \"T_Autokey\", \"T_Automax\", \"T_Average\", \"T_Bclient\", \"T_Beacon\", \"T_Bias\",\n  \"T_Broadcast\", \"T_Broadcastclient\", \"T_Broadcastdelay\", \"T_Burst\",\n  \"T_Calibrate\", \"T_Calldelay\", \"T_Ceiling\", \"T_Clockstats\", \"T_Cohort\",\n  \"T_ControlKey\", \"T_Crypto\", \"T_Cryptostats\", \"T_Day\", \"T_Default\",\n  \"T_Digest\", \"T_Disable\", \"T_Discard\", \"T_Dispersion\", \"T_Double\",\n  \"T_Driftfile\", \"T_Drop\", \"T_Ellipsis\", \"T_Enable\", \"T_End\", \"T_False\",\n  \"T_File\", \"T_Filegen\", \"T_Flag1\", \"T_Flag2\", \"T_Flag3\", \"T_Flag4\",\n  \"T_Flake\", \"T_Floor\", \"T_Freq\", \"T_Fudge\", \"T_Host\", \"T_Huffpuff\",\n  \"T_Iburst\", \"T_Ident\", \"T_Ignore\", \"T_Incalloc\", \"T_Incmem\",\n  \"T_Initalloc\", \"T_Initmem\", \"T_Includefile\", \"T_Integer\", \"T_Interface\",\n  \"T_Ipv4\", \"T_Ipv4_flag\", \"T_Ipv6\", \"T_Ipv6_flag\", \"T_Kernel\", \"T_Key\",\n  \"T_Keys\", \"T_Keysdir\", \"T_Kod\", \"T_Mssntp\", \"T_Leapfile\", \"T_Limited\",\n  \"T_Link\", \"T_Listen\", \"T_Logconfig\", \"T_Logfile\", \"T_Loopstats\",\n  \"T_Lowpriotrap\", \"T_Manycastclient\", \"T_Manycastserver\", \"T_Mask\",\n  \"T_Maxage\", \"T_Maxclock\", \"T_Maxdepth\", \"T_Maxdist\", \"T_Maxmem\",\n  \"T_Maxpoll\", \"T_Minclock\", \"T_Mindepth\", \"T_Mindist\", \"T_Minimum\",\n  \"T_Minpoll\", \"T_Minsane\", \"T_Mode\", \"T_Monitor\", \"T_Month\", \"T_Mru\",\n  \"T_Multicastclient\", \"T_Nic\", \"T_Nolink\", \"T_Nomodify\", \"T_None\",\n  \"T_Nopeer\", \"T_Noquery\", \"T_Noselect\", \"T_Noserve\", \"T_Notrap\",\n  \"T_Notrust\", \"T_Ntp\", \"T_Ntpport\", \"T_NtpSignDsocket\", \"T_Orphan\",\n  \"T_Orphanwait\", \"T_Panic\", \"T_Peer\", \"T_Peerstats\", \"T_Phone\", \"T_Pid\",\n  \"T_Pidfile\", \"T_Pool\", \"T_Port\", \"T_Preempt\", \"T_Prefer\", \"T_Protostats\",\n  \"T_Pw\", \"T_Qos\", \"T_Randfile\", \"T_Rawstats\", \"T_Refid\", \"T_Requestkey\",\n  \"T_Restrict\", \"T_Revoke\", \"T_Saveconfigdir\", \"T_Server\", \"T_Setvar\",\n  \"T_Sign\", \"T_Source\", \"T_Statistics\", \"T_Stats\", \"T_Statsdir\", \"T_Step\",\n  \"T_Stepout\", \"T_Stratum\", \"T_String\", \"T_Sysstats\", \"T_Tick\", \"T_Time1\",\n  \"T_Time2\", \"T_Timingstats\", \"T_Tinker\", \"T_Tos\", \"T_Trap\", \"T_True\",\n  \"T_Trustedkey\", \"T_Ttl\", \"T_Type\", \"T_Unconfig\", \"T_Unpeer\", \"T_Version\",\n  \"T_WanderThreshold\", \"T_Week\", \"T_Wildcard\", \"T_Xleave\", \"T_Year\",\n  \"T_Flag\", \"T_Void\", \"T_EOC\", \"T_Simulate\", \"T_Beep_Delay\",\n  \"T_Sim_Duration\", \"T_Server_Offset\", \"T_Duration\", \"T_Freq_Offset\",\n  \"T_Wander\", \"T_Jitter\", \"T_Prop_Delay\", \"T_Proc_Delay\", \"'='\", \"'('\",\n  \"')'\", \"'{'\", \"'}'\", \"$accept\", \"configuration\", \"command_list\",\n  \"command\", \"server_command\", \"client_type\", \"address\", \"ip_address\",\n  \"option_list\", \"option\", \"unpeer_command\", \"unpeer_keyword\",\n  \"other_mode_command\", \"authentication_command\", \"crypto_command_line\",\n  \"crypto_command_list\", \"crypto_command\", \"orphan_mode_command\",\n  \"tos_option_list\", \"tos_option\", \"monitoring_command\", \"stats_list\",\n  \"stat\", \"filegen_option_list\", \"filegen_option\", \"filegen_type\",\n  \"access_control_command\", \"ac_flag_list\", \"access_control_flag\",\n  \"discard_option_list\", \"discard_option\", \"mru_option_list\", \"mru_option\",\n  \"fudge_command\", \"fudge_factor_list\", \"fudge_factor\",\n  \"system_option_command\", \"system_option_list\", \"system_option\",\n  \"tinker_command\", \"tinker_option_list\", \"tinker_option\",\n  \"miscellaneous_command\", \"drift_parm\", \"variable_assign\",\n  \"trap_option_list\", \"trap_option\", \"log_config_list\",\n  \"log_config_command\", \"interface_command\", \"interface_nic\",\n  \"nic_rule_class\", \"nic_rule_action\", \"integer_list\",\n  \"integer_list_range\", \"integer_list_range_elt\", \"integer_range\",\n  \"string_list\", \"address_list\", \"boolean\", \"number\", \"simulate_command\",\n  \"sim_conf_start\", \"sim_init_statement_list\", \"sim_init_statement\",\n  \"sim_server_list\", \"sim_server\", \"sim_server_offset\", \"sim_server_name\",\n  \"sim_act_list\", \"sim_act\", \"sim_act_stmt_list\", \"sim_act_stmt\", 0\n};\n#endif\n\n# ifdef YYPRINT\n/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to\n   token YYLEX-NUM.  */\nstatic const yytype_uint16 yytoknum[] =\n{\n       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,\n     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,\n     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,\n     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,\n     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,\n     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,\n     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,\n     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,\n     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,\n     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,\n     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,\n     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,\n     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,\n     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,\n     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,\n     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,\n     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,\n     425,   426,   427,   428,   429,   430,   431,    61,    40,    41,\n     123,   125\n};\n# endif\n\n/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */\nstatic const yytype_uint8 yyr1[] =\n{\n       0,   182,   183,   184,   184,   184,   185,   185,   185,   185,\n     185,   185,   185,   185,   185,   185,   185,   185,   185,   186,\n     186,   187,   187,   187,   187,   187,   188,   188,   188,   189,\n     190,   190,   191,   191,   191,   191,   191,   191,   191,   191,\n     191,   191,   191,   191,   191,   191,   191,   192,   193,   193,\n     194,   194,   194,   195,   195,   195,   195,   195,   195,   195,\n     195,   195,   196,   196,   197,   197,   198,   198,   198,   198,\n     198,   198,   198,   199,   200,   200,   201,   201,   201,   201,\n     201,   201,   201,   201,   201,   201,   201,   202,   202,   202,\n     203,   203,   204,   204,   204,   204,   204,   204,   204,   204,\n     205,   205,   206,   206,   206,   206,   206,   206,   207,   207,\n     207,   207,   207,   207,   207,   208,   208,   208,   208,   208,\n     208,   208,   208,   209,   209,   210,   210,   210,   210,   210,\n     210,   210,   210,   210,   210,   210,   210,   210,   210,   211,\n     211,   212,   212,   212,   213,   213,   214,   214,   214,   214,\n     214,   214,   214,   214,   215,   216,   216,   217,   217,   217,\n     217,   217,   217,   217,   217,   218,   218,   219,   219,   220,\n     220,   220,   220,   220,   220,   220,   221,   222,   222,   223,\n     223,   223,   223,   223,   223,   223,   224,   224,   224,   224,\n     224,   224,   224,   224,   224,   224,   224,   224,   224,   224,\n     224,   224,   224,   224,   225,   225,   225,   226,   226,   227,\n     227,   228,   228,   229,   229,   230,   231,   231,   232,   232,\n     233,   233,   233,   233,   234,   234,   234,   235,   235,   236,\n     236,   237,   237,   238,   239,   239,   240,   240,   241,   241,\n     241,   242,   242,   243,   244,   245,   245,   246,   246,   247,\n     247,   248,   249,   250,   251,   251,   252,   253,   253,   254,\n     254,   254,   254,   254\n};\n\n/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */\nstatic const yytype_uint8 yyr2[] =\n{\n       0,     2,     1,     3,     2,     2,     0,     1,     1,     1,\n       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,\n       2,     1,     1,     1,     1,     1,     1,     2,     2,     1,\n       2,     1,     1,     2,     1,     1,     2,     2,     2,     1,\n       1,     1,     1,     1,     2,     2,     2,     2,     1,     1,\n       1,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     1,     0,     2,     1,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     1,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     3,\n       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,\n       2,     1,     2,     2,     1,     1,     1,     1,     1,     1,\n       1,     1,     1,     1,     1,     2,     2,     3,     5,     3,\n       4,     4,     3,     0,     2,     1,     1,     1,     1,     1,\n       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,\n       1,     2,     2,     2,     2,     1,     2,     2,     2,     2,\n       2,     2,     2,     2,     3,     2,     1,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     1,     1,\n       1,     1,     1,     1,     1,     1,     2,     2,     1,     2,\n       2,     2,     2,     2,     2,     2,     1,     3,     1,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     3,     2,     2,     1,     2,     0,     4,     3,     2,\n       1,     2,     2,     2,     1,     1,     3,     3,     1,     1,\n       1,     1,     1,     1,     1,     1,     1,     2,     1,     2,\n       1,     1,     1,     5,     2,     1,     2,     1,     1,     1,\n       1,     1,     1,     5,     1,     3,     2,     3,     3,     2,\n       1,     5,     4,     3,     2,     1,     6,     3,     2,     3,\n       3,     3,     3,     3\n};\n\n/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state\n   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero\n   means the default is an error.  */\nstatic const yytype_uint16 yydefact[] =\n{\n       0,     0,     0,    24,    50,     0,     0,     0,    63,     0,\n       0,   206,     0,   188,     0,     0,     0,   218,     0,     0,\n       0,     0,     0,    25,     0,     0,     0,   219,     0,    23,\n       0,     0,    22,     0,     0,     0,     0,     0,    21,     0,\n       0,     0,     0,     0,     0,     0,     0,     0,    48,    49,\n     244,     0,     2,     0,     7,     0,     8,     0,     9,    10,\n      13,    11,    12,    14,    15,    16,    17,   186,     0,    18,\n       0,     5,    53,   242,   241,   189,   190,    54,     0,     0,\n       0,     0,     0,     0,     0,    55,    62,    65,   169,   170,\n     171,   172,   173,   174,   175,   166,   168,     0,     0,     0,\n     115,   140,   204,   192,   165,    92,    93,    94,    95,    99,\n      96,    97,    98,     0,     0,     0,    29,     0,    26,     6,\n      56,    57,   193,   215,   196,   214,   195,   237,    51,     0,\n       0,     0,     0,     0,     0,     0,     0,   116,   145,    52,\n      61,   235,   197,   194,   203,    58,   123,     0,     0,   123,\n     123,    26,    59,   198,     0,   199,    87,    91,    88,   191,\n       0,     0,     0,     0,     0,     0,     0,   176,   178,     0,\n       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n      73,    75,   200,   231,     0,    60,   230,   232,   228,   202,\n       1,     0,     4,    20,    47,   226,   225,   224,     0,     0,\n      71,    66,    67,    68,    69,    72,    70,    64,   167,   141,\n     142,   143,   139,   205,   107,   106,     0,   104,   105,     0,\n      89,   101,    27,    28,     0,     0,     0,     0,     0,     0,\n       0,     0,   154,   156,   187,   213,   236,   146,   147,   148,\n     149,   150,   151,   152,   153,   144,   234,   119,   123,   123,\n     122,   117,     0,     0,    90,   179,   180,   181,   182,   183,\n     184,   185,   177,    86,    76,   240,   238,   239,    78,    77,\n      84,    82,    83,    81,    85,    79,    80,    74,     0,     0,\n     201,   210,     0,   229,   227,     3,    32,     0,    34,    35,\n       0,     0,     0,     0,    39,    40,    41,    42,     0,     0,\n      43,    19,    31,   220,   221,   222,   217,   223,   216,     0,\n       0,     0,     0,   102,   114,   110,   112,   108,   109,   111,\n     113,   103,   100,   161,   162,   163,   164,   160,   159,   157,\n     158,   155,   125,   126,   127,   128,   129,   130,   131,   132,\n     133,   134,   135,   136,   137,   138,   124,   120,   121,   123,\n     208,   212,   211,   209,     0,    33,    36,    38,    37,    45,\n      44,    46,    30,     0,     0,     0,     0,     0,   250,     0,\n     246,   118,   207,     0,   247,   248,     0,   245,   243,   249,\n       0,   233,   253,     0,     0,     0,     0,     0,   255,     0,\n       0,   251,   254,   252,     0,     0,     0,     0,     0,     0,\n       0,     0,     0,     0,     0,     0,     0,     0,   256,     0,\n     258,   259,   260,   261,   262,   263,   257\n};\n\n/* YYDEFGOTO[NTERM-NUM].  */\nstatic const yytype_int16 yydefgoto[] =\n{\n      -1,    51,    52,    53,    54,    55,   127,   118,   301,   302,\n      56,    57,    58,    59,    85,    86,    87,    60,   180,   181,\n      61,   156,   113,   220,   221,   321,    62,   247,   346,   100,\n     101,   137,   138,    63,   232,   233,    64,    95,    96,    65,\n     167,   168,    66,   103,   155,   280,   281,   124,   125,    67,\n      68,   308,   198,   189,   185,   186,   187,   142,   128,   268,\n      75,    69,    70,   311,   312,   367,   368,   384,   369,   387,\n     388,   401,   402\n};\n\n/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing\n   STATE-NUM.  */\n#define YYPACT_NINF -148\nstatic const yytype_int16 yypact[] =\n{\n     137,  -132,   -20,  -148,  -148,    -7,   -17,   -16,    44,    -1,\n       9,   -99,    -1,  -148,   115,   -46,   -98,  -148,   -97,   -95,\n     -94,   -90,   -88,  -148,   -46,   144,   -46,  -148,   -85,  -148,\n     -84,   -78,  -148,   -77,    -2,    13,    12,   -71,  -148,   -70,\n     115,   -66,    -7,     1,   538,   -65,   -51,    32,  -148,  -148,\n    -148,    91,   310,   -68,  -148,   -46,  -148,   -46,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,   -12,  -148,\n     -80,  -148,  -148,  -148,  -148,  -148,  -148,  -148,   -47,   -39,\n     -38,   -28,   -27,    55,   -26,  -148,    44,  -148,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,    -1,  -148,    71,    72,    86,\n       9,  -148,   117,  -148,    -1,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,   -15,    10,    14,  -148,    39,  -148,   457,\n    -148,  -148,  -148,  -148,   -90,  -148,  -148,  -148,   -46,    96,\n     104,   105,   106,   119,   120,   122,   124,   144,  -148,   -46,\n    -148,  -148,    40,  -148,  -148,  -148,  -148,     3,     4,  -148,\n    -148,   107,  -148,  -148,    15,  -148,   115,  -148,  -148,  -148,\n      -7,    -7,    -7,    -7,    -7,    -7,    -7,     1,  -148,   132,\n     135,     6,   143,    -7,    -7,    -7,    -7,   147,   148,   150,\n     538,  -148,   -37,  -148,   151,   -51,  -148,  -148,  -148,   152,\n    -148,    29,  -148,   530,  -148,  -148,  -148,  -148,     0,  -142,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,  -148,    70,  -148,  -148,    11,\n     -15,  -148,  -148,  -148,     6,     6,     6,     6,    74,   156,\n      -7,    -7,    39,  -148,  -148,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148,   560,  -148,  -148,\n     560,   560,   -65,    81,  -148,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,   -65,   168,\n     -37,  -148,   194,  -148,  -148,  -148,  -148,    -7,  -148,  -148,\n     173,   178,   179,   181,  -148,  -148,  -148,  -148,   182,   183,\n    -148,   530,  -148,  -148,  -148,  -148,  -148,  -148,  -148,    66,\n      69,  -100,    82,  -148,  -148,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148,   560,   560,  -148,\n     223,  -148,  -148,  -148,   192,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,    -7,    -7,    75,    88,  -114,  -148,    77,\n    -148,   560,  -148,    79,  -148,  -148,   -46,  -148,  -148,  -148,\n      90,  -148,  -148,    84,    93,    -7,    95,  -146,  -148,    99,\n      -7,  -148,  -148,  -148,    97,    47,    98,   101,   102,   103,\n     108,   -87,   118,    -7,    -7,    -7,    -7,    -7,  -148,   123,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148\n};\n\n/* YYPGOTO[NTERM-NUM].  */\nstatic const yytype_int16 yypgoto[] =\n{\n    -148,  -148,  -148,   -44,  -148,  -148,    -3,   -34,  -148,   -18,\n    -148,  -148,  -148,  -148,  -148,  -148,   187,  -148,  -148,   112,\n    -148,  -148,   -30,  -148,    61,  -148,  -148,  -147,  -148,  -148,\n     195,  -148,   159,  -148,  -148,    65,  -148,   286,   -67,  -148,\n    -148,   133,  -148,  -148,  -148,  -148,    19,  -148,   177,  -148,\n    -148,  -148,  -148,  -148,  -148,   121,  -148,  -148,   276,  -116,\n     -42,  -148,  -148,  -148,    -6,  -148,   -60,  -148,  -148,  -148,\n     -79,  -148,   -92\n};\n\n/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If\n   positive, shift that token.  If negative, reduce the rule which\n   number is the opposite.  If zero, do what YYDEFACT says.\n   If YYTABLE_NINF, syntax error.  */\n#define YYTABLE_NINF -7\nstatic const yytype_int16 yytable[] =\n{\n     159,   151,   250,   251,   303,    88,   160,   183,   191,    89,\n     157,   182,   117,   214,   314,   114,    90,   115,    97,   365,\n     215,   195,   278,   216,    73,   386,   309,   310,   208,   248,\n     249,   161,   150,   365,    71,   391,   315,   208,    72,   146,\n     196,    76,    77,   265,   102,   119,   120,   162,   121,   122,\n     163,    74,   193,   123,   194,   126,   145,   217,   140,   141,\n     304,   197,   305,    91,   266,   143,   144,   378,   309,   310,\n     152,    78,   153,   154,   147,   234,   148,   158,   116,   224,\n     225,   226,   227,   279,   218,   396,   397,   398,   399,   400,\n     188,   190,    79,    92,   408,    80,   200,   116,   192,    98,\n     199,   347,   348,    99,   201,   202,   316,    93,   323,   324,\n     325,   326,   317,   205,   164,   203,   204,   206,   255,   256,\n     257,   258,   259,   260,   261,   236,   254,   184,   318,   209,\n     210,   270,   271,   272,   273,   105,   236,    94,     1,   106,\n     219,   165,   166,   306,   211,     2,   222,   223,   213,   149,\n       3,     4,     5,   222,   237,     6,   116,   223,   267,     7,\n       8,   307,   238,   239,   240,     9,    10,   228,    81,    11,\n      82,   319,    12,    13,   320,    83,    14,   241,   242,    84,\n     243,   229,   244,   246,    15,   230,   231,   252,   329,   330,\n     263,   107,   253,   264,    16,   285,    17,   129,   130,   131,\n     132,   269,   371,    18,    19,   274,   275,    20,   276,   282,\n     284,    21,    22,   313,   328,    23,    24,   327,   349,   396,\n     397,   398,   399,   400,   350,   133,   352,   134,   354,   135,\n     108,   356,   136,    25,    26,    27,   357,   358,   109,   359,\n     360,   361,   110,   363,   351,   355,   364,    28,   370,   372,\n     373,    29,   376,    30,   377,    31,    32,   380,   381,   111,\n     383,   385,    33,   112,   386,   393,    34,    35,    36,    37,\n      38,    39,   390,   207,    40,   403,    41,   395,   404,   405,\n     406,   322,    42,   362,   410,   407,    43,    44,    45,   416,\n      46,    47,   277,    48,    49,   212,   245,   331,   104,   353,\n     262,   235,   139,    -6,    50,   366,   283,   379,   392,   409,\n       0,     0,     0,     0,     0,     0,     0,     0,     2,     0,\n       0,   374,   375,     3,     4,     5,     0,     0,     6,     0,\n       0,     0,     7,     8,     0,     0,     0,     0,     9,    10,\n       0,     0,    11,   389,     0,    12,    13,     0,   394,    14,\n       0,     0,     0,     0,     0,     0,     0,    15,     0,     0,\n       0,   411,   412,   413,   414,   415,     0,    16,     0,    17,\n       0,     0,     0,   382,     0,     0,    18,    19,     0,     0,\n      20,     0,     0,     0,    21,    22,     0,     0,    23,    24,\n       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n       0,     0,     0,     0,     0,     0,    25,    26,    27,     0,\n       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n      28,     0,     0,     0,    29,     0,    30,     0,    31,    32,\n       0,     0,     0,     0,     0,    33,     0,     0,     0,    34,\n      35,    36,    37,    38,    39,     0,     0,    40,     0,    41,\n       0,     0,     0,     0,     0,    42,     0,     0,     0,    43,\n      44,    45,     0,    46,    47,     2,    48,    49,     0,     0,\n       3,     4,     5,     0,     0,     6,    -6,    50,     0,     7,\n       8,     0,     0,     0,     0,     9,    10,     0,     0,    11,\n       0,     0,    12,    13,     0,     0,    14,     0,     0,     0,\n       0,     0,     0,     0,    15,     0,     0,     0,     0,     0,\n       0,     0,     0,     0,    16,     0,    17,     0,     0,     0,\n       0,     0,     0,    18,    19,     0,     0,    20,     0,     0,\n       0,    21,    22,     0,     0,    23,    24,   286,     0,     0,\n       0,     0,   287,     0,     0,     0,   288,     0,     0,   169,\n       0,     0,     0,    25,    26,    27,     0,   170,     0,   171,\n       0,     0,     0,     0,     0,     0,     0,    28,     0,     0,\n       0,    29,     0,    30,     0,    31,    32,     0,     0,     0,\n     289,     0,    33,   172,     0,     0,    34,    35,    36,    37,\n      38,    39,     0,     0,    40,   290,    41,     0,     0,     0,\n       0,     0,    42,     0,   332,     0,    43,    44,    45,     0,\n      46,    47,   333,    48,    49,     0,   291,     0,     0,     0,\n     173,   292,   174,   293,    50,   175,     0,   176,   334,   335,\n     177,   336,     0,     0,   294,     0,     0,   337,     0,     0,\n       0,     0,     0,     0,     0,     0,     0,     0,     0,   178,\n     179,   295,   296,     0,     0,     0,     0,     0,     0,     0,\n     338,     0,   339,   340,     0,   341,   342,   343,     0,   344,\n       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n       0,     0,   297,     0,   298,     0,     0,     0,   299,     0,\n       0,     0,   300,     0,     0,     0,     0,     0,     0,     0,\n       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n       0,     0,     0,     0,     0,     0,     0,     0,   345\n};\n\nstatic const yytype_int16 yycheck[] =\n{\n      42,    35,   149,   150,     4,     6,     5,    58,    52,    10,\n      40,    45,    15,    28,     3,    61,    17,    63,     9,   133,\n      35,    33,    59,    38,    31,   171,   168,   169,    95,    26,\n      26,    30,    35,   133,   166,   181,    25,   104,    58,    26,\n      52,    58,    58,    37,   143,   143,   143,    46,   143,   143,\n      49,    58,    55,   143,    57,   143,    58,    72,   143,   143,\n      60,    73,    62,    64,    58,   143,   143,   181,   168,   169,\n      58,    27,   143,   143,    61,   119,    63,   143,   143,    40,\n      41,    42,    43,   120,    99,   172,   173,   174,   175,   176,\n      58,     0,    48,    94,   181,    51,   143,   143,   166,    90,\n     180,   248,   249,    94,   143,   143,    95,   108,   224,   225,\n     226,   227,   101,    58,   113,   143,   143,   143,   160,   161,\n     162,   163,   164,   165,   166,   128,   156,   178,   117,    58,\n      58,   173,   174,   175,   176,    20,   139,   138,     1,    24,\n     155,   140,   141,   143,    58,     8,   143,   143,    31,   136,\n      13,    14,    15,   143,    58,    18,   143,   143,   152,    22,\n      23,   161,    58,    58,    58,    28,    29,   128,   124,    32,\n     126,   160,    35,    36,   163,   131,    39,    58,    58,   135,\n      58,   142,    58,   143,    47,   146,   147,    80,   230,   231,\n      58,    76,   177,    58,    57,   166,    59,    53,    54,    55,\n      56,    58,   349,    66,    67,    58,    58,    70,    58,    58,\n      58,    74,    75,   143,    58,    78,    79,   143,   252,   172,\n     173,   174,   175,   176,   143,    81,    58,    83,    34,    85,\n     115,    58,    88,    96,    97,    98,    58,    58,   123,    58,\n      58,    58,   127,   177,   278,   287,   177,   110,   166,    26,\n      58,   114,   177,   116,   166,   118,   119,   180,   179,   144,\n     170,   177,   125,   148,   171,   166,   129,   130,   131,   132,\n     133,   134,   177,    86,   137,   177,   139,   180,   177,   177,\n     177,   220,   145,   301,   166,   177,   149,   150,   151,   166,\n     153,   154,   180,   156,   157,   100,   137,   232,    12,   280,\n     167,   124,    26,   166,   167,   311,   185,   367,   387,   401,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,\n      -1,   363,   364,    13,    14,    15,    -1,    -1,    18,    -1,\n      -1,    -1,    22,    23,    -1,    -1,    -1,    -1,    28,    29,\n      -1,    -1,    32,   385,    -1,    35,    36,    -1,   390,    39,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,\n      -1,   403,   404,   405,   406,   407,    -1,    57,    -1,    59,\n      -1,    -1,    -1,   376,    -1,    -1,    66,    67,    -1,    -1,\n      70,    -1,    -1,    -1,    74,    75,    -1,    -1,    78,    79,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,\n      -1,    -1,    -1,    -1,    -1,    -1,    96,    97,    98,    -1,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,\n     110,    -1,    -1,    -1,   114,    -1,   116,    -1,   118,   119,\n      -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,   129,\n     130,   131,   132,   133,   134,    -1,    -1,   137,    -1,   139,\n      -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,   149,\n     150,   151,    -1,   153,   154,     8,   156,   157,    -1,    -1,\n      13,    14,    15,    -1,    -1,    18,   166,   167,    -1,    22,\n      23,    -1,    -1,    -1,    -1,    28,    29,    -1,    -1,    32,\n      -1,    -1,    35,    36,    -1,    -1,    39,    -1,    -1,    -1,\n      -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,\n      -1,    -1,    -1,    -1,    57,    -1,    59,    -1,    -1,    -1,\n      -1,    -1,    -1,    66,    67,    -1,    -1,    70,    -1,    -1,\n      -1,    74,    75,    -1,    -1,    78,    79,     7,    -1,    -1,\n      -1,    -1,    12,    -1,    -1,    -1,    16,    -1,    -1,    11,\n      -1,    -1,    -1,    96,    97,    98,    -1,    19,    -1,    21,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,    -1,    -1,\n      -1,   114,    -1,   116,    -1,   118,   119,    -1,    -1,    -1,\n      50,    -1,   125,    45,    -1,    -1,   129,   130,   131,   132,\n     133,   134,    -1,    -1,   137,    65,   139,    -1,    -1,    -1,\n      -1,    -1,   145,    -1,    44,    -1,   149,   150,   151,    -1,\n     153,   154,    52,   156,   157,    -1,    86,    -1,    -1,    -1,\n      82,    91,    84,    93,   167,    87,    -1,    89,    68,    69,\n      92,    71,    -1,    -1,   104,    -1,    -1,    77,    -1,    -1,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,\n     112,   121,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,\n     100,    -1,   102,   103,    -1,   105,   106,   107,    -1,   109,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,\n      -1,    -1,   152,    -1,   154,    -1,    -1,    -1,   158,    -1,\n      -1,    -1,   162,    -1,    -1,    -1,    -1,    -1,    -1,    -1,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   158\n};\n\n/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing\n   symbol of state STATE-NUM.  */\nstatic const yytype_uint8 yystos[] =\n{\n       0,     1,     8,    13,    14,    15,    18,    22,    23,    28,\n      29,    32,    35,    36,    39,    47,    57,    59,    66,    67,\n      70,    74,    75,    78,    79,    96,    97,    98,   110,   114,\n     116,   118,   119,   125,   129,   130,   131,   132,   133,   134,\n     137,   139,   145,   149,   150,   151,   153,   154,   156,   157,\n     167,   183,   184,   185,   186,   187,   192,   193,   194,   195,\n     199,   202,   208,   215,   218,   221,   224,   231,   232,   243,\n     244,   166,    58,    31,    58,   242,    58,    58,    27,    48,\n      51,   124,   126,   131,   135,   196,   197,   198,     6,    10,\n      17,    64,    94,   108,   138,   219,   220,     9,    90,    94,\n     211,   212,   143,   225,   219,    20,    24,    76,   115,   123,\n     127,   144,   148,   204,    61,    63,   143,   188,   189,   143,\n     143,   143,   143,   143,   229,   230,   143,   188,   240,    53,\n      54,    55,    56,    81,    83,    85,    88,   213,   214,   240,\n     143,   143,   239,   143,   143,    58,    26,    61,    63,   136,\n     188,   189,    58,   143,   143,   226,   203,   204,   143,   242,\n       5,    30,    46,    49,   113,   140,   141,   222,   223,    11,\n      19,    21,    45,    82,    84,    87,    89,    92,   111,   112,\n     200,   201,   189,    58,   178,   236,   237,   238,    58,   235,\n       0,   185,   166,   188,   188,    33,    52,    73,   234,   180,\n     143,   143,   143,   143,   143,    58,   143,   198,   220,    58,\n      58,    58,   212,    31,    28,    35,    38,    72,    99,   155,\n     205,   206,   143,   143,    40,    41,    42,    43,   128,   142,\n     146,   147,   216,   217,   185,   230,   188,    58,    58,    58,\n      58,    58,    58,    58,    58,   214,   143,   209,    26,    26,\n     209,   209,    80,   177,   204,   242,   242,   242,   242,   242,\n     242,   242,   223,    58,    58,    37,    58,   152,   241,    58,\n     242,   242,   242,   242,    58,    58,    58,   201,    59,   120,\n     227,   228,    58,   237,    58,   166,     7,    12,    16,    50,\n      65,    86,    91,    93,   104,   121,   122,   152,   154,   158,\n     162,   190,   191,     4,    60,    62,   143,   161,   233,   168,\n     169,   245,   246,   143,     3,    25,    95,   101,   117,   160,\n     163,   207,   206,   241,   241,   241,   241,   143,    58,   242,\n     242,   217,    44,    52,    68,    69,    71,    77,   100,   102,\n     103,   105,   106,   107,   109,   158,   210,   209,   209,   189,\n     143,   189,    58,   228,    34,   242,    58,    58,    58,    58,\n      58,    58,   191,   177,   177,   133,   246,   247,   248,   250,\n     166,   209,    26,    58,   242,   242,   177,   166,   181,   248,\n     180,   179,   188,   170,   249,   177,   171,   251,   252,   242,\n     177,   181,   252,   166,   242,   180,   172,   173,   174,   175,\n     176,   253,   254,   177,   177,   177,   177,   177,   181,   254,\n     166,   242,   242,   242,   242,   242,   166\n};\n\n#define yyerrok\t\t(yyerrstatus = 0)\n#define yyclearin\t(yychar = YYEMPTY)\n#define YYEMPTY\t\t(-2)\n#define YYEOF\t\t0\n\n#define YYACCEPT\tgoto yyacceptlab\n#define YYABORT\t\tgoto yyabortlab\n#define YYERROR\t\tgoto yyerrorlab\n\n\n/* Like YYERROR except do call yyerror.  This remains here temporarily\n   to ease the transition to the new meaning of YYERROR, for GCC.\n   Once GCC version 2 has supplanted version 1, this can go.  */\n\n#define YYFAIL\t\tgoto yyerrlab\n\n#define YYRECOVERING()  (!!yyerrstatus)\n\n#define YYBACKUP(Token, Value)\t\t\t\t\t\\\ndo\t\t\t\t\t\t\t\t\\\n  if (yychar == YYEMPTY && yylen == 1)\t\t\t\t\\\n    {\t\t\t\t\t\t\t\t\\\n      yychar = (Token);\t\t\t\t\t\t\\\n      yylval = (Value);\t\t\t\t\t\t\\\n      yytoken = YYTRANSLATE (yychar);\t\t\t\t\\\n      YYPOPSTACK (1);\t\t\t\t\t\t\\\n      goto yybackup;\t\t\t\t\t\t\\\n    }\t\t\t\t\t\t\t\t\\\n  else\t\t\t\t\t\t\t\t\\\n    {\t\t\t\t\t\t\t\t\\\n      yyerror (YY_(\"syntax error: cannot back up\")); \\\n      YYERROR;\t\t\t\t\t\t\t\\\n    }\t\t\t\t\t\t\t\t\\\nwhile (YYID (0))\n\n\n#define YYTERROR\t1\n#define YYERRCODE\t256\n\n\n/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].\n   If N is 0, then set CURRENT to the empty location which ends\n   the previous symbol: RHS[0] (always defined).  */\n\n#define YYRHSLOC(Rhs, K) ((Rhs)[K])\n#ifndef YYLLOC_DEFAULT\n# define YYLLOC_DEFAULT(Current, Rhs, N)\t\t\t\t\\\n    do\t\t\t\t\t\t\t\t\t\\\n      if (YYID (N))                                                    \\\n\t{\t\t\t\t\t\t\t\t\\\n\t  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;\t\\\n\t  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;\t\\\n\t  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;\t\t\\\n\t  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;\t\\\n\t}\t\t\t\t\t\t\t\t\\\n      else\t\t\t\t\t\t\t\t\\\n\t{\t\t\t\t\t\t\t\t\\\n\t  (Current).first_line   = (Current).last_line   =\t\t\\\n\t    YYRHSLOC (Rhs, 0).last_line;\t\t\t\t\\\n\t  (Current).first_column = (Current).last_column =\t\t\\\n\t    YYRHSLOC (Rhs, 0).last_column;\t\t\t\t\\\n\t}\t\t\t\t\t\t\t\t\\\n    while (YYID (0))\n#endif\n\n\n/* YY_LOCATION_PRINT -- Print the location on the stream.\n   This macro was not mandated originally: define only if we know\n   we won't break user code: when these are the locations we know.  */\n\n#ifndef YY_LOCATION_PRINT\n# if YYLTYPE_IS_TRIVIAL\n#  define YY_LOCATION_PRINT(File, Loc)\t\t\t\\\n     fprintf (File, \"%d.%d-%d.%d\",\t\t\t\\\n\t      (Loc).first_line, (Loc).first_column,\t\\\n\t      (Loc).last_line,  (Loc).last_column)\n# else\n#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)\n# endif\n#endif\n\n\n/* YYLEX -- calling `yylex' with the right arguments.  */\n\n#ifdef YYLEX_PARAM\n# define YYLEX yylex (YYLEX_PARAM)\n#else\n# define YYLEX yylex ()\n#endif\n\n/* Enable debugging if requested.  */\n#if YYDEBUG\n\n# ifndef YYFPRINTF\n#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */\n#  define YYFPRINTF fprintf\n# endif\n\n# define YYDPRINTF(Args)\t\t\t\\\ndo {\t\t\t\t\t\t\\\n  if (yydebug)\t\t\t\t\t\\\n    YYFPRINTF Args;\t\t\t\t\\\n} while (YYID (0))\n\n# define YY_SYMBOL_PRINT(Title, Type, Value, Location)\t\t\t  \\\ndo {\t\t\t\t\t\t\t\t\t  \\\n  if (yydebug)\t\t\t\t\t\t\t\t  \\\n    {\t\t\t\t\t\t\t\t\t  \\\n      YYFPRINTF (stderr, \"%s \", Title);\t\t\t\t\t  \\\n      yy_symbol_print (stderr,\t\t\t\t\t\t  \\\n\t\t  Type, Value); \\\n      YYFPRINTF (stderr, \"\\n\");\t\t\t\t\t\t  \\\n    }\t\t\t\t\t\t\t\t\t  \\\n} while (YYID (0))\n\n\n/*--------------------------------.\n| Print this symbol on YYOUTPUT.  |\n`--------------------------------*/\n\n/*ARGSUSED*/\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nstatic void\nyy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)\n#else\nstatic void\nyy_symbol_value_print (yyoutput, yytype, yyvaluep)\n    FILE *yyoutput;\n    int yytype;\n    YYSTYPE const * const yyvaluep;\n#endif\n{\n  if (!yyvaluep)\n    return;\n# ifdef YYPRINT\n  if (yytype < YYNTOKENS)\n    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);\n# else\n  YYUSE (yyoutput);\n# endif\n  switch (yytype)\n    {\n      default:\n\tbreak;\n    }\n}\n\n\n/*--------------------------------.\n| Print this symbol on YYOUTPUT.  |\n`--------------------------------*/\n\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nstatic void\nyy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)\n#else\nstatic void\nyy_symbol_print (yyoutput, yytype, yyvaluep)\n    FILE *yyoutput;\n    int yytype;\n    YYSTYPE const * const yyvaluep;\n#endif\n{\n  if (yytype < YYNTOKENS)\n    YYFPRINTF (yyoutput, \"token %s (\", yytname[yytype]);\n  else\n    YYFPRINTF (yyoutput, \"nterm %s (\", yytname[yytype]);\n\n  yy_symbol_value_print (yyoutput, yytype, yyvaluep);\n  YYFPRINTF (yyoutput, \")\");\n}\n\n/*------------------------------------------------------------------.\n| yy_stack_print -- Print the state stack from its BOTTOM up to its |\n| TOP (included).                                                   |\n`------------------------------------------------------------------*/\n\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nstatic void\nyy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)\n#else\nstatic void\nyy_stack_print (yybottom, yytop)\n    yytype_int16 *yybottom;\n    yytype_int16 *yytop;\n#endif\n{\n  YYFPRINTF (stderr, \"Stack now\");\n  for (; yybottom <= yytop; yybottom++)\n    {\n      int yybot = *yybottom;\n      YYFPRINTF (stderr, \" %d\", yybot);\n    }\n  YYFPRINTF (stderr, \"\\n\");\n}\n\n# define YY_STACK_PRINT(Bottom, Top)\t\t\t\t\\\ndo {\t\t\t\t\t\t\t\t\\\n  if (yydebug)\t\t\t\t\t\t\t\\\n    yy_stack_print ((Bottom), (Top));\t\t\t\t\\\n} while (YYID (0))\n\n\n/*------------------------------------------------.\n| Report that the YYRULE is going to be reduced.  |\n`------------------------------------------------*/\n\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nstatic void\nyy_reduce_print (YYSTYPE *yyvsp, int yyrule)\n#else\nstatic void\nyy_reduce_print (yyvsp, yyrule)\n    YYSTYPE *yyvsp;\n    int yyrule;\n#endif\n{\n  int yynrhs = yyr2[yyrule];\n  int yyi;\n  unsigned long int yylno = yyrline[yyrule];\n  YYFPRINTF (stderr, \"Reducing stack by rule %d (line %lu):\\n\",\n\t     yyrule - 1, yylno);\n  /* The symbols being reduced.  */\n  for (yyi = 0; yyi < yynrhs; yyi++)\n    {\n      YYFPRINTF (stderr, \"   $%d = \", yyi + 1);\n      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],\n\t\t       &(yyvsp[(yyi + 1) - (yynrhs)])\n\t\t       \t\t       );\n      YYFPRINTF (stderr, \"\\n\");\n    }\n}\n\n# define YY_REDUCE_PRINT(Rule)\t\t\\\ndo {\t\t\t\t\t\\\n  if (yydebug)\t\t\t\t\\\n    yy_reduce_print (yyvsp, Rule); \\\n} while (YYID (0))\n\n/* Nonzero means print parse trace.  It is left uninitialized so that\n   multiple parsers can coexist.  */\nint yydebug;\n#else /* !YYDEBUG */\n# define YYDPRINTF(Args)\n# define YY_SYMBOL_PRINT(Title, Type, Value, Location)\n# define YY_STACK_PRINT(Bottom, Top)\n# define YY_REDUCE_PRINT(Rule)\n#endif /* !YYDEBUG */\n\n\n/* YYINITDEPTH -- initial size of the parser's stacks.  */\n#ifndef\tYYINITDEPTH\n# define YYINITDEPTH 200\n#endif\n\n/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only\n   if the built-in stack extension method is used).\n\n   Do not make this value too large; the results are undefined if\n   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)\n   evaluated with infinite-precision integer arithmetic.  */\n\n#ifndef YYMAXDEPTH\n# define YYMAXDEPTH 10000\n#endif\n\n\f\n\n#if YYERROR_VERBOSE\n\n# ifndef yystrlen\n#  if defined __GLIBC__ && defined _STRING_H\n#   define yystrlen strlen\n#  else\n/* Return the length of YYSTR.  */\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nstatic YYSIZE_T\nyystrlen (const char *yystr)\n#else\nstatic YYSIZE_T\nyystrlen (yystr)\n    const char *yystr;\n#endif\n{\n  YYSIZE_T yylen;\n  for (yylen = 0; yystr[yylen]; yylen++)\n    continue;\n  return yylen;\n}\n#  endif\n# endif\n\n# ifndef yystpcpy\n#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE\n#   define yystpcpy stpcpy\n#  else\n/* Copy YYSRC to YYDEST, returning the address of the terminating '\\0' in\n   YYDEST.  */\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nstatic char *\nyystpcpy (char *yydest, const char *yysrc)\n#else\nstatic char *\nyystpcpy (yydest, yysrc)\n    char *yydest;\n    const char *yysrc;\n#endif\n{\n  char *yyd = yydest;\n  const char *yys = yysrc;\n\n  while ((*yyd++ = *yys++) != '\\0')\n    continue;\n\n  return yyd - 1;\n}\n#  endif\n# endif\n\n# ifndef yytnamerr\n/* Copy to YYRES the contents of YYSTR after stripping away unnecessary\n   quotes and backslashes, so that it's suitable for yyerror.  The\n   heuristic is that double-quoting is unnecessary unless the string\n   contains an apostrophe, a comma, or backslash (other than\n   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is\n   null, do not copy; instead, return the length of what the result\n   would have been.  */\nstatic YYSIZE_T\nyytnamerr (char *yyres, const char *yystr)\n{\n  if (*yystr == '\"')\n    {\n      YYSIZE_T yyn = 0;\n      char const *yyp = yystr;\n\n      for (;;)\n\tswitch (*++yyp)\n\t  {\n\t  case '\\'':\n\t  case ',':\n\t    goto do_not_strip_quotes;\n\n\t  case '\\\\':\n\t    if (*++yyp != '\\\\')\n\t      goto do_not_strip_quotes;\n\t    /* Fall through.  */\n\t  default:\n\t    if (yyres)\n\t      yyres[yyn] = *yyp;\n\t    yyn++;\n\t    break;\n\n\t  case '\"':\n\t    if (yyres)\n\t      yyres[yyn] = '\\0';\n\t    return yyn;\n\t  }\n    do_not_strip_quotes: ;\n    }\n\n  if (! yyres)\n    return yystrlen (yystr);\n\n  return yystpcpy (yyres, yystr) - yyres;\n}\n# endif\n\n/* Copy into YYRESULT an error message about the unexpected token\n   YYCHAR while in state YYSTATE.  Return the number of bytes copied,\n   including the terminating null byte.  If YYRESULT is null, do not\n   copy anything; just return the number of bytes that would be\n   copied.  As a special case, return 0 if an ordinary \"syntax error\"\n   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during\n   size calculation.  */\nstatic YYSIZE_T\nyysyntax_error (char *yyresult, int yystate, int yychar)\n{\n  int yyn = yypact[yystate];\n\n  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))\n    return 0;\n  else\n    {\n      int yytype = YYTRANSLATE (yychar);\n      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);\n      YYSIZE_T yysize = yysize0;\n      YYSIZE_T yysize1;\n      int yysize_overflow = 0;\n      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };\n      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];\n      int yyx;\n\n# if 0\n      /* This is so xgettext sees the translatable formats that are\n\t constructed on the fly.  */\n      YY_(\"syntax error, unexpected %s\");\n      YY_(\"syntax error, unexpected %s, expecting %s\");\n      YY_(\"syntax error, unexpected %s, expecting %s or %s\");\n      YY_(\"syntax error, unexpected %s, expecting %s or %s or %s\");\n      YY_(\"syntax error, unexpected %s, expecting %s or %s or %s or %s\");\n# endif\n      char *yyfmt;\n      char const *yyf;\n      static char const yyunexpected[] = \"syntax error, unexpected %s\";\n      static char const yyexpecting[] = \", expecting %s\";\n      static char const yyor[] = \" or %s\";\n      char yyformat[sizeof yyunexpected\n\t\t    + sizeof yyexpecting - 1\n\t\t    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)\n\t\t       * (sizeof yyor - 1))];\n      char const *yyprefix = yyexpecting;\n\n      /* Start YYX at -YYN if negative to avoid negative indexes in\n\t YYCHECK.  */\n      int yyxbegin = yyn < 0 ? -yyn : 0;\n\n      /* Stay within bounds of both yycheck and yytname.  */\n      int yychecklim = YYLAST - yyn + 1;\n      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;\n      int yycount = 1;\n\n      yyarg[0] = yytname[yytype];\n      yyfmt = yystpcpy (yyformat, yyunexpected);\n\n      for (yyx = yyxbegin; yyx < yyxend; ++yyx)\n\tif (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)\n\t  {\n\t    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)\n\t      {\n\t\tyycount = 1;\n\t\tyysize = yysize0;\n\t\tyyformat[sizeof yyunexpected - 1] = '\\0';\n\t\tbreak;\n\t      }\n\t    yyarg[yycount++] = yytname[yyx];\n\t    yysize1 = yysize + yytnamerr (0, yytname[yyx]);\n\t    yysize_overflow |= (yysize1 < yysize);\n\t    yysize = yysize1;\n\t    yyfmt = yystpcpy (yyfmt, yyprefix);\n\t    yyprefix = yyor;\n\t  }\n\n      yyf = YY_(yyformat);\n      yysize1 = yysize + yystrlen (yyf);\n      yysize_overflow |= (yysize1 < yysize);\n      yysize = yysize1;\n\n      if (yysize_overflow)\n\treturn YYSIZE_MAXIMUM;\n\n      if (yyresult)\n\t{\n\t  /* Avoid sprintf, as that infringes on the user's name space.\n\t     Don't have undefined behavior even if the translation\n\t     produced a string with the wrong number of \"%s\"s.  */\n\t  char *yyp = yyresult;\n\t  int yyi = 0;\n\t  while ((*yyp = *yyf) != '\\0')\n\t    {\n\t      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)\n\t\t{\n\t\t  yyp += yytnamerr (yyp, yyarg[yyi++]);\n\t\t  yyf += 2;\n\t\t}\n\t      else\n\t\t{\n\t\t  yyp++;\n\t\t  yyf++;\n\t\t}\n\t    }\n\t}\n      return yysize;\n    }\n}\n#endif /* YYERROR_VERBOSE */\n\f\n\n/*-----------------------------------------------.\n| Release the memory associated to this symbol.  |\n`-----------------------------------------------*/\n\n/*ARGSUSED*/\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nstatic void\nyydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)\n#else\nstatic void\nyydestruct (yymsg, yytype, yyvaluep)\n    const char *yymsg;\n    int yytype;\n    YYSTYPE *yyvaluep;\n#endif\n{\n  YYUSE (yyvaluep);\n\n  if (!yymsg)\n    yymsg = \"Deleting\";\n  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);\n\n  switch (yytype)\n    {\n\n      default:\n\tbreak;\n    }\n}\n\n/* Prevent warnings from -Wmissing-prototypes.  */\n#ifdef YYPARSE_PARAM\n#if defined __STDC__ || defined __cplusplus\nint yyparse (void *YYPARSE_PARAM);\n#else\nint yyparse ();\n#endif\n#else /* ! YYPARSE_PARAM */\n#if defined __STDC__ || defined __cplusplus\nint yyparse (void);\n#else\nint yyparse ();\n#endif\n#endif /* ! YYPARSE_PARAM */\n\n\n/* The lookahead symbol.  */\nint yychar;\n\n/* The semantic value of the lookahead symbol.  */\nYYSTYPE yylval;\n\n/* Number of syntax errors so far.  */\nint yynerrs;\n\n\n\n/*-------------------------.\n| yyparse or yypush_parse.  |\n`-------------------------*/\n\n#ifdef YYPARSE_PARAM\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nint\nyyparse (void *YYPARSE_PARAM)\n#else\nint\nyyparse (YYPARSE_PARAM)\n    void *YYPARSE_PARAM;\n#endif\n#else /* ! YYPARSE_PARAM */\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nint\nyyparse (void)\n#else\nint\nyyparse ()\n\n#endif\n#endif\n{\n\n\n    int yystate;\n    /* Number of tokens to shift before error messages enabled.  */\n    int yyerrstatus;\n\n    /* The stacks and their tools:\n       `yyss': related to states.\n       `yyvs': related to semantic values.\n\n       Refer to the stacks thru separate pointers, to allow yyoverflow\n       to reallocate them elsewhere.  */\n\n    /* The state stack.  */\n    yytype_int16 yyssa[YYINITDEPTH];\n    yytype_int16 *yyss;\n    yytype_int16 *yyssp;\n\n    /* The semantic value stack.  */\n    YYSTYPE yyvsa[YYINITDEPTH];\n    YYSTYPE *yyvs;\n    YYSTYPE *yyvsp;\n\n    YYSIZE_T yystacksize;\n\n  int yyn;\n  int yyresult;\n  /* Lookahead token as an internal (translated) token number.  */\n  int yytoken;\n  /* The variables used to return semantic value and location from the\n     action routines.  */\n  YYSTYPE yyval;\n\n#if YYERROR_VERBOSE\n  /* Buffer for error messages, and its allocated size.  */\n  char yymsgbuf[128];\n  char *yymsg = yymsgbuf;\n  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;\n#endif\n\n#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))\n\n  /* The number of symbols on the RHS of the reduced rule.\n     Keep to zero when no symbol should be popped.  */\n  int yylen = 0;\n\n  yytoken = 0;\n  yyss = yyssa;\n  yyvs = yyvsa;\n  yystacksize = YYINITDEPTH;\n\n  YYDPRINTF ((stderr, \"Starting parse\\n\"));\n\n  yystate = 0;\n  yyerrstatus = 0;\n  yynerrs = 0;\n  yychar = YYEMPTY; /* Cause a token to be read.  */\n\n  /* Initialize stack pointers.\n     Waste one element of value and location stack\n     so that they stay on the same level as the state stack.\n     The wasted elements are never initialized.  */\n  yyssp = yyss;\n  yyvsp = yyvs;\n\n  goto yysetstate;\n\n/*------------------------------------------------------------.\n| yynewstate -- Push a new state, which is found in yystate.  |\n`------------------------------------------------------------*/\n yynewstate:\n  /* In all cases, when you get here, the value and location stacks\n     have just been pushed.  So pushing a state here evens the stacks.  */\n  yyssp++;\n\n yysetstate:\n  *yyssp = yystate;\n\n  if (yyss + yystacksize - 1 <= yyssp)\n    {\n      /* Get the current used size of the three stacks, in elements.  */\n      YYSIZE_T yysize = yyssp - yyss + 1;\n\n#ifdef yyoverflow\n      {\n\t/* Give user a chance to reallocate the stack.  Use copies of\n\t   these so that the &'s don't force the real ones into\n\t   memory.  */\n\tYYSTYPE *yyvs1 = yyvs;\n\tyytype_int16 *yyss1 = yyss;\n\n\t/* Each stack pointer address is followed by the size of the\n\t   data in use in that stack, in bytes.  This used to be a\n\t   conditional around just the two extra args, but that might\n\t   be undefined if yyoverflow is a macro.  */\n\tyyoverflow (YY_(\"memory exhausted\"),\n\t\t    &yyss1, yysize * sizeof (*yyssp),\n\t\t    &yyvs1, yysize * sizeof (*yyvsp),\n\t\t    &yystacksize);\n\n\tyyss = yyss1;\n\tyyvs = yyvs1;\n      }\n#else /* no yyoverflow */\n# ifndef YYSTACK_RELOCATE\n      goto yyexhaustedlab;\n# else\n      /* Extend the stack our own way.  */\n      if (YYMAXDEPTH <= yystacksize)\n\tgoto yyexhaustedlab;\n      yystacksize *= 2;\n      if (YYMAXDEPTH < yystacksize)\n\tyystacksize = YYMAXDEPTH;\n\n      {\n\tyytype_int16 *yyss1 = yyss;\n\tunion yyalloc *yyptr =\n\t  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));\n\tif (! yyptr)\n\t  goto yyexhaustedlab;\n\tYYSTACK_RELOCATE (yyss_alloc, yyss);\n\tYYSTACK_RELOCATE (yyvs_alloc, yyvs);\n#  undef YYSTACK_RELOCATE\n\tif (yyss1 != yyssa)\n\t  YYSTACK_FREE (yyss1);\n      }\n# endif\n#endif /* no yyoverflow */\n\n      yyssp = yyss + yysize - 1;\n      yyvsp = yyvs + yysize - 1;\n\n      YYDPRINTF ((stderr, \"Stack size increased to %lu\\n\",\n\t\t  (unsigned long int) yystacksize));\n\n      if (yyss + yystacksize - 1 <= yyssp)\n\tYYABORT;\n    }\n\n  YYDPRINTF ((stderr, \"Entering state %d\\n\", yystate));\n\n  if (yystate == YYFINAL)\n    YYACCEPT;\n\n  goto yybackup;\n\n/*-----------.\n| yybackup.  |\n`-----------*/\nyybackup:\n\n  /* Do appropriate processing given the current state.  Read a\n     lookahead token if we need one and don't already have one.  */\n\n  /* First try to decide what to do without reference to lookahead token.  */\n  yyn = yypact[yystate];\n  if (yyn == YYPACT_NINF)\n    goto yydefault;\n\n  /* Not known => get a lookahead token if don't already have one.  */\n\n  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */\n  if (yychar == YYEMPTY)\n    {\n      YYDPRINTF ((stderr, \"Reading a token: \"));\n      yychar = YYLEX;\n    }\n\n  if (yychar <= YYEOF)\n    {\n      yychar = yytoken = YYEOF;\n      YYDPRINTF ((stderr, \"Now at end of input.\\n\"));\n    }\n  else\n    {\n      yytoken = YYTRANSLATE (yychar);\n      YY_SYMBOL_PRINT (\"Next token is\", yytoken, &yylval, &yylloc);\n    }\n\n  /* If the proper action on seeing token YYTOKEN is to reduce or to\n     detect an error, take that action.  */\n  yyn += yytoken;\n  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)\n    goto yydefault;\n  yyn = yytable[yyn];\n  if (yyn <= 0)\n    {\n      if (yyn == 0 || yyn == YYTABLE_NINF)\n\tgoto yyerrlab;\n      yyn = -yyn;\n      goto yyreduce;\n    }\n\n  /* Count tokens shifted since error; after three, turn off error\n     status.  */\n  if (yyerrstatus)\n    yyerrstatus--;\n\n  /* Shift the lookahead token.  */\n  YY_SYMBOL_PRINT (\"Shifting\", yytoken, &yylval, &yylloc);\n\n  /* Discard the shifted token.  */\n  yychar = YYEMPTY;\n\n  yystate = yyn;\n  *++yyvsp = yylval;\n\n  goto yynewstate;\n\n\n/*-----------------------------------------------------------.\n| yydefault -- do the default action for the current state.  |\n`-----------------------------------------------------------*/\nyydefault:\n  yyn = yydefact[yystate];\n  if (yyn == 0)\n    goto yyerrlab;\n  goto yyreduce;\n\n\n/*-----------------------------.\n| yyreduce -- Do a reduction.  |\n`-----------------------------*/\nyyreduce:\n  /* yyn is the number of a rule to reduce with.  */\n  yylen = yyr2[yyn];\n\n  /* If YYLEN is nonzero, implement the default value of the action:\n     `$$ = $1'.\n\n     Otherwise, the following line sets YYVAL to garbage.\n     This behavior is undocumented and Bison\n     users should not rely upon it.  Assigning to YYVAL\n     unconditionally makes the parser a bit smaller, and it avoids a\n     GCC warning that YYVAL may be used uninitialized.  */\n  yyval = yyvsp[1-yylen];\n\n\n  YY_REDUCE_PRINT (yyn);\n  switch (yyn)\n    {\n        case 5:\n\n/* Line 1455 of yacc.c  */\n#line 320 \"ntp_parser.y\"\n    {\n\t\t\t/* I will need to incorporate much more fine grained\n\t\t\t * error messages. The following should suffice for\n\t\t\t * the time being.\n\t\t\t */\n\t\t\tmsyslog(LOG_ERR, \n\t\t\t\t\"syntax error in %s line %d, column %d\",\n\t\t\t\tip_file->fname,\n\t\t\t\tip_file->err_line_no,\n\t\t\t\tip_file->err_col_no);\n\t\t}\n    break;\n\n  case 19:\n\n/* Line 1455 of yacc.c  */\n#line 354 \"ntp_parser.y\"\n    {\n\t\t\tstruct peer_node *my_node =  create_peer_node((yyvsp[(1) - (3)].Integer), (yyvsp[(2) - (3)].Address_node), (yyvsp[(3) - (3)].Queue));\n\t\t\tif (my_node)\n\t\t\t\tenqueue(cfgt.peers, my_node);\n\t\t}\n    break;\n\n  case 20:\n\n/* Line 1455 of yacc.c  */\n#line 360 \"ntp_parser.y\"\n    {\n\t\t\tstruct peer_node *my_node = create_peer_node((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Address_node), NULL);\n\t\t\tif (my_node)\n\t\t\t\tenqueue(cfgt.peers, my_node);\n\t\t}\n    break;\n\n  case 27:\n\n/* Line 1455 of yacc.c  */\n#line 377 \"ntp_parser.y\"\n    { (yyval.Address_node) = create_address_node((yyvsp[(2) - (2)].String), AF_INET); }\n    break;\n\n  case 28:\n\n/* Line 1455 of yacc.c  */\n#line 378 \"ntp_parser.y\"\n    { (yyval.Address_node) = create_address_node((yyvsp[(2) - (2)].String), AF_INET6); }\n    break;\n\n  case 29:\n\n/* Line 1455 of yacc.c  */\n#line 382 \"ntp_parser.y\"\n    { (yyval.Address_node) = create_address_node((yyvsp[(1) - (1)].String), 0); }\n    break;\n\n  case 30:\n\n/* Line 1455 of yacc.c  */\n#line 386 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 31:\n\n/* Line 1455 of yacc.c  */\n#line 387 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 32:\n\n/* Line 1455 of yacc.c  */\n#line 391 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 33:\n\n/* Line 1455 of yacc.c  */\n#line 392 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 34:\n\n/* Line 1455 of yacc.c  */\n#line 393 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 35:\n\n/* Line 1455 of yacc.c  */\n#line 394 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 36:\n\n/* Line 1455 of yacc.c  */\n#line 395 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 37:\n\n/* Line 1455 of yacc.c  */\n#line 396 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 38:\n\n/* Line 1455 of yacc.c  */\n#line 397 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 39:\n\n/* Line 1455 of yacc.c  */\n#line 398 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 40:\n\n/* Line 1455 of yacc.c  */\n#line 399 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 41:\n\n/* Line 1455 of yacc.c  */\n#line 400 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 42:\n\n/* Line 1455 of yacc.c  */\n#line 401 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 43:\n\n/* Line 1455 of yacc.c  */\n#line 402 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 44:\n\n/* Line 1455 of yacc.c  */\n#line 403 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 45:\n\n/* Line 1455 of yacc.c  */\n#line 404 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 46:\n\n/* Line 1455 of yacc.c  */\n#line 405 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 47:\n\n/* Line 1455 of yacc.c  */\n#line 415 \"ntp_parser.y\"\n    {\n\t\t\tstruct unpeer_node *my_node = create_unpeer_node((yyvsp[(2) - (2)].Address_node));\n\t\t\tif (my_node)\n\t\t\t\tenqueue(cfgt.unpeers, my_node);\n\t\t}\n    break;\n\n  case 50:\n\n/* Line 1455 of yacc.c  */\n#line 434 \"ntp_parser.y\"\n    { cfgt.broadcastclient = 1; }\n    break;\n\n  case 51:\n\n/* Line 1455 of yacc.c  */\n#line 436 \"ntp_parser.y\"\n    { append_queue(cfgt.manycastserver, (yyvsp[(2) - (2)].Queue)); }\n    break;\n\n  case 52:\n\n/* Line 1455 of yacc.c  */\n#line 438 \"ntp_parser.y\"\n    { append_queue(cfgt.multicastclient, (yyvsp[(2) - (2)].Queue)); }\n    break;\n\n  case 53:\n\n/* Line 1455 of yacc.c  */\n#line 449 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer))); }\n    break;\n\n  case 54:\n\n/* Line 1455 of yacc.c  */\n#line 451 \"ntp_parser.y\"\n    { cfgt.auth.control_key = (yyvsp[(2) - (2)].Integer); }\n    break;\n\n  case 55:\n\n/* Line 1455 of yacc.c  */\n#line 453 \"ntp_parser.y\"\n    { \n\t\t\tcfgt.auth.cryptosw++;\n\t\t\tappend_queue(cfgt.auth.crypto_cmd_list, (yyvsp[(2) - (2)].Queue));\n\t\t}\n    break;\n\n  case 56:\n\n/* Line 1455 of yacc.c  */\n#line 458 \"ntp_parser.y\"\n    { cfgt.auth.keys = (yyvsp[(2) - (2)].String); }\n    break;\n\n  case 57:\n\n/* Line 1455 of yacc.c  */\n#line 460 \"ntp_parser.y\"\n    { cfgt.auth.keysdir = (yyvsp[(2) - (2)].String); }\n    break;\n\n  case 58:\n\n/* Line 1455 of yacc.c  */\n#line 462 \"ntp_parser.y\"\n    { cfgt.auth.request_key = (yyvsp[(2) - (2)].Integer); }\n    break;\n\n  case 59:\n\n/* Line 1455 of yacc.c  */\n#line 464 \"ntp_parser.y\"\n    { cfgt.auth.revoke = (yyvsp[(2) - (2)].Integer); }\n    break;\n\n  case 60:\n\n/* Line 1455 of yacc.c  */\n#line 466 \"ntp_parser.y\"\n    { cfgt.auth.trusted_key_list = (yyvsp[(2) - (2)].Queue); }\n    break;\n\n  case 61:\n\n/* Line 1455 of yacc.c  */\n#line 468 \"ntp_parser.y\"\n    { cfgt.auth.ntp_signd_socket = (yyvsp[(2) - (2)].String); }\n    break;\n\n  case 63:\n\n/* Line 1455 of yacc.c  */\n#line 474 \"ntp_parser.y\"\n    { (yyval.Queue) = create_queue(); }\n    break;\n\n  case 64:\n\n/* Line 1455 of yacc.c  */\n#line 479 \"ntp_parser.y\"\n    { \n\t\t\tif ((yyvsp[(2) - (2)].Attr_val) != NULL)\n\t\t\t\t(yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val));\n\t\t\telse\n\t\t\t\t(yyval.Queue) = (yyvsp[(1) - (2)].Queue);\n\t\t}\n    break;\n\n  case 65:\n\n/* Line 1455 of yacc.c  */\n#line 486 \"ntp_parser.y\"\n    {\n\t\t\tif ((yyvsp[(1) - (1)].Attr_val) != NULL)\n\t\t\t\t(yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val));\n\t\t\telse\n\t\t\t\t(yyval.Queue) = create_queue();\n\t\t}\n    break;\n\n  case 66:\n\n/* Line 1455 of yacc.c  */\n#line 496 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)); }\n    break;\n\n  case 67:\n\n/* Line 1455 of yacc.c  */\n#line 498 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)); }\n    break;\n\n  case 68:\n\n/* Line 1455 of yacc.c  */\n#line 500 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)); }\n    break;\n\n  case 69:\n\n/* Line 1455 of yacc.c  */\n#line 502 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)); }\n    break;\n\n  case 70:\n\n/* Line 1455 of yacc.c  */\n#line 504 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)); }\n    break;\n\n  case 71:\n\n/* Line 1455 of yacc.c  */\n#line 506 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)); }\n    break;\n\n  case 72:\n\n/* Line 1455 of yacc.c  */\n#line 508 \"ntp_parser.y\"\n    {\n\t\t\t(yyval.Attr_val) = NULL;\n\t\t\tcfgt.auth.revoke = (yyvsp[(2) - (2)].Integer);\n\t\t\tmsyslog(LOG_WARNING,\n\t\t\t\t\"'crypto revoke %d' is deprecated, \"\n\t\t\t\t\"please use 'revoke %d' instead.\",\n\t\t\t\tcfgt.auth.revoke, cfgt.auth.revoke);\n\t\t}\n    break;\n\n  case 73:\n\n/* Line 1455 of yacc.c  */\n#line 525 \"ntp_parser.y\"\n    { append_queue(cfgt.orphan_cmds,(yyvsp[(2) - (2)].Queue)); }\n    break;\n\n  case 74:\n\n/* Line 1455 of yacc.c  */\n#line 529 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 75:\n\n/* Line 1455 of yacc.c  */\n#line 530 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 76:\n\n/* Line 1455 of yacc.c  */\n#line 535 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (double)(yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 77:\n\n/* Line 1455 of yacc.c  */\n#line 537 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (double)(yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 78:\n\n/* Line 1455 of yacc.c  */\n#line 539 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (double)(yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 79:\n\n/* Line 1455 of yacc.c  */\n#line 541 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (double)(yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 80:\n\n/* Line 1455 of yacc.c  */\n#line 543 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (double)(yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 81:\n\n/* Line 1455 of yacc.c  */\n#line 545 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 82:\n\n/* Line 1455 of yacc.c  */\n#line 547 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 83:\n\n/* Line 1455 of yacc.c  */\n#line 549 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 84:\n\n/* Line 1455 of yacc.c  */\n#line 551 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 85:\n\n/* Line 1455 of yacc.c  */\n#line 553 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (double)(yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 86:\n\n/* Line 1455 of yacc.c  */\n#line 555 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (double)(yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 87:\n\n/* Line 1455 of yacc.c  */\n#line 565 \"ntp_parser.y\"\n    { append_queue(cfgt.stats_list, (yyvsp[(2) - (2)].Queue)); }\n    break;\n\n  case 88:\n\n/* Line 1455 of yacc.c  */\n#line 567 \"ntp_parser.y\"\n    {\n\t\t\tif (input_from_file)\n\t\t\t\tcfgt.stats_dir = (yyvsp[(2) - (2)].String);\n\t\t\telse {\n\t\t\t\tfree((yyvsp[(2) - (2)].String));\n\t\t\t\tyyerror(\"statsdir remote configuration ignored\");\n\t\t\t}\n\t\t}\n    break;\n\n  case 89:\n\n/* Line 1455 of yacc.c  */\n#line 576 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.filegen_opts,\n\t\t\t\tcreate_filegen_node((yyvsp[(2) - (3)].Integer), (yyvsp[(3) - (3)].Queue)));\n\t\t}\n    break;\n\n  case 90:\n\n/* Line 1455 of yacc.c  */\n#line 583 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), create_ival((yyvsp[(2) - (2)].Integer))); }\n    break;\n\n  case 91:\n\n/* Line 1455 of yacc.c  */\n#line 584 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue(create_ival((yyvsp[(1) - (1)].Integer))); }\n    break;\n\n  case 100:\n\n/* Line 1455 of yacc.c  */\n#line 600 \"ntp_parser.y\"\n    {\n\t\t\tif ((yyvsp[(2) - (2)].Attr_val) != NULL)\n\t\t\t\t(yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val));\n\t\t\telse\n\t\t\t\t(yyval.Queue) = (yyvsp[(1) - (2)].Queue);\n\t\t}\n    break;\n\n  case 101:\n\n/* Line 1455 of yacc.c  */\n#line 607 \"ntp_parser.y\"\n    {\n\t\t\tif ((yyvsp[(1) - (1)].Attr_val) != NULL)\n\t\t\t\t(yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val));\n\t\t\telse\n\t\t\t\t(yyval.Queue) = create_queue();\n\t\t}\n    break;\n\n  case 102:\n\n/* Line 1455 of yacc.c  */\n#line 617 \"ntp_parser.y\"\n    {\n\t\t\tif (input_from_file)\n\t\t\t\t(yyval.Attr_val) = create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String));\n\t\t\telse {\n\t\t\t\t(yyval.Attr_val) = NULL;\n\t\t\t\tfree((yyvsp[(2) - (2)].String));\n\t\t\t\tyyerror(\"filegen file remote configuration ignored\");\n\t\t\t}\n\t\t}\n    break;\n\n  case 103:\n\n/* Line 1455 of yacc.c  */\n#line 627 \"ntp_parser.y\"\n    {\n\t\t\tif (input_from_file)\n\t\t\t\t(yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer));\n\t\t\telse {\n\t\t\t\t(yyval.Attr_val) = NULL;\n\t\t\t\tyyerror(\"filegen type remote configuration ignored\");\n\t\t\t}\n\t\t}\n    break;\n\n  case 104:\n\n/* Line 1455 of yacc.c  */\n#line 636 \"ntp_parser.y\"\n    {\n\t\t\tif (input_from_file)\n\t\t\t\t(yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer));\n\t\t\telse {\n\t\t\t\t(yyval.Attr_val) = NULL;\n\t\t\t\tyyerror(\"filegen link remote configuration ignored\");\n\t\t\t}\n\t\t}\n    break;\n\n  case 105:\n\n/* Line 1455 of yacc.c  */\n#line 645 \"ntp_parser.y\"\n    {\n\t\t\tif (input_from_file)\n\t\t\t\t(yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer));\n\t\t\telse {\n\t\t\t\t(yyval.Attr_val) = NULL;\n\t\t\t\tyyerror(\"filegen nolink remote configuration ignored\");\n\t\t\t}\n\t\t}\n    break;\n\n  case 106:\n\n/* Line 1455 of yacc.c  */\n#line 653 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 107:\n\n/* Line 1455 of yacc.c  */\n#line 654 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 115:\n\n/* Line 1455 of yacc.c  */\n#line 674 \"ntp_parser.y\"\n    {\n\t\t\tappend_queue(cfgt.discard_opts, (yyvsp[(2) - (2)].Queue));\n\t\t}\n    break;\n\n  case 116:\n\n/* Line 1455 of yacc.c  */\n#line 678 \"ntp_parser.y\"\n    {\n\t\t\tappend_queue(cfgt.mru_opts, (yyvsp[(2) - (2)].Queue));\n\t\t}\n    break;\n\n  case 117:\n\n/* Line 1455 of yacc.c  */\n#line 682 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node((yyvsp[(2) - (3)].Address_node), NULL, (yyvsp[(3) - (3)].Queue), ip_file->line_no));\n\t\t}\n    break;\n\n  case 118:\n\n/* Line 1455 of yacc.c  */\n#line 687 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node((yyvsp[(2) - (5)].Address_node), (yyvsp[(4) - (5)].Address_node), (yyvsp[(5) - (5)].Queue), ip_file->line_no));\n\t\t}\n    break;\n\n  case 119:\n\n/* Line 1455 of yacc.c  */\n#line 692 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node(NULL, NULL, (yyvsp[(3) - (3)].Queue), ip_file->line_no));\n\t\t}\n    break;\n\n  case 120:\n\n/* Line 1455 of yacc.c  */\n#line 697 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node(\n\t\t\t\t\tcreate_address_node(\n\t\t\t\t\t\testrdup(\"0.0.0.0\"), \n\t\t\t\t\t\tAF_INET),\n\t\t\t\t\tcreate_address_node(\n\t\t\t\t\t\testrdup(\"0.0.0.0\"), \n\t\t\t\t\t\tAF_INET),\n\t\t\t\t\t(yyvsp[(4) - (4)].Queue), \n\t\t\t\t\tip_file->line_no));\n\t\t}\n    break;\n\n  case 121:\n\n/* Line 1455 of yacc.c  */\n#line 710 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node(\n\t\t\t\t\tcreate_address_node(\n\t\t\t\t\t\testrdup(\"::\"), \n\t\t\t\t\t\tAF_INET6),\n\t\t\t\t\tcreate_address_node(\n\t\t\t\t\t\testrdup(\"::\"), \n\t\t\t\t\t\tAF_INET6),\n\t\t\t\t\t(yyvsp[(4) - (4)].Queue), \n\t\t\t\t\tip_file->line_no));\n\t\t}\n    break;\n\n  case 122:\n\n/* Line 1455 of yacc.c  */\n#line 723 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node(\n\t\t\t\t\tNULL, NULL,\n\t\t\t\t\tenqueue((yyvsp[(3) - (3)].Queue), create_ival((yyvsp[(2) - (3)].Integer))),\n\t\t\t\t\tip_file->line_no));\n\t\t}\n    break;\n\n  case 123:\n\n/* Line 1455 of yacc.c  */\n#line 734 \"ntp_parser.y\"\n    { (yyval.Queue) = create_queue(); }\n    break;\n\n  case 124:\n\n/* Line 1455 of yacc.c  */\n#line 736 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), create_ival((yyvsp[(2) - (2)].Integer))); }\n    break;\n\n  case 139:\n\n/* Line 1455 of yacc.c  */\n#line 758 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 140:\n\n/* Line 1455 of yacc.c  */\n#line 760 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 141:\n\n/* Line 1455 of yacc.c  */\n#line 764 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 142:\n\n/* Line 1455 of yacc.c  */\n#line 765 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 143:\n\n/* Line 1455 of yacc.c  */\n#line 766 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 144:\n\n/* Line 1455 of yacc.c  */\n#line 771 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 145:\n\n/* Line 1455 of yacc.c  */\n#line 773 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 146:\n\n/* Line 1455 of yacc.c  */\n#line 777 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 147:\n\n/* Line 1455 of yacc.c  */\n#line 778 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 148:\n\n/* Line 1455 of yacc.c  */\n#line 779 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 149:\n\n/* Line 1455 of yacc.c  */\n#line 780 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 150:\n\n/* Line 1455 of yacc.c  */\n#line 781 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 151:\n\n/* Line 1455 of yacc.c  */\n#line 782 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 152:\n\n/* Line 1455 of yacc.c  */\n#line 783 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 153:\n\n/* Line 1455 of yacc.c  */\n#line 784 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 154:\n\n/* Line 1455 of yacc.c  */\n#line 793 \"ntp_parser.y\"\n    { enqueue(cfgt.fudge, create_addr_opts_node((yyvsp[(2) - (3)].Address_node), (yyvsp[(3) - (3)].Queue))); }\n    break;\n\n  case 155:\n\n/* Line 1455 of yacc.c  */\n#line 798 \"ntp_parser.y\"\n    { enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 156:\n\n/* Line 1455 of yacc.c  */\n#line 800 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 157:\n\n/* Line 1455 of yacc.c  */\n#line 804 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 158:\n\n/* Line 1455 of yacc.c  */\n#line 805 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 159:\n\n/* Line 1455 of yacc.c  */\n#line 806 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 160:\n\n/* Line 1455 of yacc.c  */\n#line 807 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)); }\n    break;\n\n  case 161:\n\n/* Line 1455 of yacc.c  */\n#line 808 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 162:\n\n/* Line 1455 of yacc.c  */\n#line 809 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 163:\n\n/* Line 1455 of yacc.c  */\n#line 810 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 164:\n\n/* Line 1455 of yacc.c  */\n#line 811 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 165:\n\n/* Line 1455 of yacc.c  */\n#line 820 \"ntp_parser.y\"\n    { append_queue(cfgt.enable_opts, (yyvsp[(2) - (2)].Queue));  }\n    break;\n\n  case 166:\n\n/* Line 1455 of yacc.c  */\n#line 822 \"ntp_parser.y\"\n    { append_queue(cfgt.disable_opts, (yyvsp[(2) - (2)].Queue));  }\n    break;\n\n  case 167:\n\n/* Line 1455 of yacc.c  */\n#line 827 \"ntp_parser.y\"\n    {\n\t\t\tif ((yyvsp[(2) - (2)].Attr_val) != NULL)\n\t\t\t\t(yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val));\n\t\t\telse\n\t\t\t\t(yyval.Queue) = (yyvsp[(1) - (2)].Queue);\n\t\t}\n    break;\n\n  case 168:\n\n/* Line 1455 of yacc.c  */\n#line 834 \"ntp_parser.y\"\n    {\n\t\t\tif ((yyvsp[(1) - (1)].Attr_val) != NULL)\n\t\t\t\t(yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val));\n\t\t\telse\n\t\t\t\t(yyval.Queue) = create_queue();\n\t\t}\n    break;\n\n  case 169:\n\n/* Line 1455 of yacc.c  */\n#line 843 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 170:\n\n/* Line 1455 of yacc.c  */\n#line 844 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 171:\n\n/* Line 1455 of yacc.c  */\n#line 845 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 172:\n\n/* Line 1455 of yacc.c  */\n#line 846 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 173:\n\n/* Line 1455 of yacc.c  */\n#line 847 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 174:\n\n/* Line 1455 of yacc.c  */\n#line 848 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 175:\n\n/* Line 1455 of yacc.c  */\n#line 850 \"ntp_parser.y\"\n    { \n\t\t\tif (input_from_file)\n\t\t\t\t(yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer));\n\t\t\telse {\n\t\t\t\t(yyval.Attr_val) = NULL;\n\t\t\t\tyyerror(\"enable/disable stats remote configuration ignored\");\n\t\t\t}\n\t\t}\n    break;\n\n  case 176:\n\n/* Line 1455 of yacc.c  */\n#line 865 \"ntp_parser.y\"\n    { append_queue(cfgt.tinker, (yyvsp[(2) - (2)].Queue)); }\n    break;\n\n  case 177:\n\n/* Line 1455 of yacc.c  */\n#line 869 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 178:\n\n/* Line 1455 of yacc.c  */\n#line 870 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 179:\n\n/* Line 1455 of yacc.c  */\n#line 874 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 180:\n\n/* Line 1455 of yacc.c  */\n#line 875 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 181:\n\n/* Line 1455 of yacc.c  */\n#line 876 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 182:\n\n/* Line 1455 of yacc.c  */\n#line 877 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 183:\n\n/* Line 1455 of yacc.c  */\n#line 878 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 184:\n\n/* Line 1455 of yacc.c  */\n#line 879 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 185:\n\n/* Line 1455 of yacc.c  */\n#line 880 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 187:\n\n/* Line 1455 of yacc.c  */\n#line 891 \"ntp_parser.y\"\n    {\n\t\t\tif (curr_include_level >= MAXINCLUDELEVEL) {\n\t\t\t\tfprintf(stderr, \"getconfig: Maximum include file level exceeded.\\n\");\n\t\t\t\tmsyslog(LOG_ERR, \"getconfig: Maximum include file level exceeded.\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfp[curr_include_level + 1] = F_OPEN(FindConfig((yyvsp[(2) - (3)].String)), \"r\");\n\t\t\t\tif (fp[curr_include_level + 1] == NULL) {\n\t\t\t\t\tfprintf(stderr, \"getconfig: Couldn't open <%s>\\n\", FindConfig((yyvsp[(2) - (3)].String)));\n\t\t\t\t\tmsyslog(LOG_ERR, \"getconfig: Couldn't open <%s>\", FindConfig((yyvsp[(2) - (3)].String)));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tip_file = fp[++curr_include_level];\n\t\t\t}\n\t\t}\n    break;\n\n  case 188:\n\n/* Line 1455 of yacc.c  */\n#line 907 \"ntp_parser.y\"\n    {\n\t\t\twhile (curr_include_level != -1)\n\t\t\t\tFCLOSE(fp[curr_include_level--]);\n\t\t}\n    break;\n\n  case 189:\n\n/* Line 1455 of yacc.c  */\n#line 913 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double))); }\n    break;\n\n  case 190:\n\n/* Line 1455 of yacc.c  */\n#line 915 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer))); }\n    break;\n\n  case 191:\n\n/* Line 1455 of yacc.c  */\n#line 917 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double))); }\n    break;\n\n  case 192:\n\n/* Line 1455 of yacc.c  */\n#line 919 \"ntp_parser.y\"\n    { /* Null action, possibly all null parms */ }\n    break;\n\n  case 193:\n\n/* Line 1455 of yacc.c  */\n#line 921 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String))); }\n    break;\n\n  case 194:\n\n/* Line 1455 of yacc.c  */\n#line 924 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String))); }\n    break;\n\n  case 195:\n\n/* Line 1455 of yacc.c  */\n#line 926 \"ntp_parser.y\"\n    {\n\t\t\tif (input_from_file)\n\t\t\t\tenqueue(cfgt.vars,\n\t\t\t\t\tcreate_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)));\n\t\t\telse {\n\t\t\t\tfree((yyvsp[(2) - (2)].String));\n\t\t\t\tyyerror(\"logfile remote configuration ignored\");\n\t\t\t}\n\t\t}\n    break;\n\n  case 196:\n\n/* Line 1455 of yacc.c  */\n#line 937 \"ntp_parser.y\"\n    { append_queue(cfgt.logconfig, (yyvsp[(2) - (2)].Queue)); }\n    break;\n\n  case 197:\n\n/* Line 1455 of yacc.c  */\n#line 939 \"ntp_parser.y\"\n    { append_queue(cfgt.phone, (yyvsp[(2) - (2)].Queue)); }\n    break;\n\n  case 198:\n\n/* Line 1455 of yacc.c  */\n#line 941 \"ntp_parser.y\"\n    {\n\t\t\tif (input_from_file)\n\t\t\t\tenqueue(cfgt.vars,\n\t\t\t\t\tcreate_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)));\n\t\t\telse {\n\t\t\t\tfree((yyvsp[(2) - (2)].String));\n\t\t\t\tyyerror(\"saveconfigdir remote configuration ignored\");\n\t\t\t}\n\t\t}\n    break;\n\n  case 199:\n\n/* Line 1455 of yacc.c  */\n#line 951 \"ntp_parser.y\"\n    { enqueue(cfgt.setvar, (yyvsp[(2) - (2)].Set_var)); }\n    break;\n\n  case 200:\n\n/* Line 1455 of yacc.c  */\n#line 953 \"ntp_parser.y\"\n    { enqueue(cfgt.trap, create_addr_opts_node((yyvsp[(2) - (2)].Address_node), NULL)); }\n    break;\n\n  case 201:\n\n/* Line 1455 of yacc.c  */\n#line 955 \"ntp_parser.y\"\n    { enqueue(cfgt.trap, create_addr_opts_node((yyvsp[(2) - (3)].Address_node), (yyvsp[(3) - (3)].Queue))); }\n    break;\n\n  case 202:\n\n/* Line 1455 of yacc.c  */\n#line 957 \"ntp_parser.y\"\n    { append_queue(cfgt.ttl, (yyvsp[(2) - (2)].Queue)); }\n    break;\n\n  case 203:\n\n/* Line 1455 of yacc.c  */\n#line 959 \"ntp_parser.y\"\n    { enqueue(cfgt.qos, create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String))); }\n    break;\n\n  case 204:\n\n/* Line 1455 of yacc.c  */\n#line 964 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_sval(T_Driftfile, (yyvsp[(1) - (1)].String))); }\n    break;\n\n  case 205:\n\n/* Line 1455 of yacc.c  */\n#line 966 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_dval(T_WanderThreshold, (yyvsp[(2) - (2)].Double)));\n\t\t\t  enqueue(cfgt.vars, create_attr_sval(T_Driftfile, (yyvsp[(1) - (2)].String))); }\n    break;\n\n  case 206:\n\n/* Line 1455 of yacc.c  */\n#line 969 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_sval(T_Driftfile, \"\\0\")); }\n    break;\n\n  case 207:\n\n/* Line 1455 of yacc.c  */\n#line 974 \"ntp_parser.y\"\n    { (yyval.Set_var) = create_setvar_node((yyvsp[(1) - (4)].String), (yyvsp[(3) - (4)].String), (yyvsp[(4) - (4)].Integer)); }\n    break;\n\n  case 208:\n\n/* Line 1455 of yacc.c  */\n#line 976 \"ntp_parser.y\"\n    { (yyval.Set_var) = create_setvar_node((yyvsp[(1) - (3)].String), (yyvsp[(3) - (3)].String), 0); }\n    break;\n\n  case 209:\n\n/* Line 1455 of yacc.c  */\n#line 981 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 210:\n\n/* Line 1455 of yacc.c  */\n#line 982 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 211:\n\n/* Line 1455 of yacc.c  */\n#line 986 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 212:\n\n/* Line 1455 of yacc.c  */\n#line 987 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_pval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Address_node)); }\n    break;\n\n  case 213:\n\n/* Line 1455 of yacc.c  */\n#line 991 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 214:\n\n/* Line 1455 of yacc.c  */\n#line 992 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 215:\n\n/* Line 1455 of yacc.c  */\n#line 997 \"ntp_parser.y\"\n    {\n\t\t\tchar prefix = (yyvsp[(1) - (1)].String)[0];\n\t\t\tchar *type = (yyvsp[(1) - (1)].String) + 1;\n\t\t\t\n\t\t\tif (prefix != '+' && prefix != '-' && prefix != '=') {\n\t\t\t\tyyerror(\"Logconfig prefix is not '+', '-' or '='\\n\");\n\t\t\t}\n\t\t\telse\n\t\t\t\t(yyval.Attr_val) = create_attr_sval(prefix, estrdup(type));\n\t\t\tYYFREE((yyvsp[(1) - (1)].String));\n\t\t}\n    break;\n\n  case 216:\n\n/* Line 1455 of yacc.c  */\n#line 1012 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.nic_rules,\n\t\t\t\tcreate_nic_rule_node((yyvsp[(3) - (3)].Integer), NULL, (yyvsp[(2) - (3)].Integer)));\n\t\t}\n    break;\n\n  case 217:\n\n/* Line 1455 of yacc.c  */\n#line 1017 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.nic_rules,\n\t\t\t\tcreate_nic_rule_node(0, (yyvsp[(3) - (3)].String), (yyvsp[(2) - (3)].Integer)));\n\t\t}\n    break;\n\n  case 227:\n\n/* Line 1455 of yacc.c  */\n#line 1048 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), create_ival((yyvsp[(2) - (2)].Integer))); }\n    break;\n\n  case 228:\n\n/* Line 1455 of yacc.c  */\n#line 1049 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue(create_ival((yyvsp[(1) - (1)].Integer))); }\n    break;\n\n  case 229:\n\n/* Line 1455 of yacc.c  */\n#line 1054 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 230:\n\n/* Line 1455 of yacc.c  */\n#line 1056 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 231:\n\n/* Line 1455 of yacc.c  */\n#line 1061 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival('i', (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 233:\n\n/* Line 1455 of yacc.c  */\n#line 1067 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_shorts('-', (yyvsp[(2) - (5)].Integer), (yyvsp[(4) - (5)].Integer)); }\n    break;\n\n  case 234:\n\n/* Line 1455 of yacc.c  */\n#line 1071 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), create_pval((yyvsp[(2) - (2)].String))); }\n    break;\n\n  case 235:\n\n/* Line 1455 of yacc.c  */\n#line 1072 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue(create_pval((yyvsp[(1) - (1)].String))); }\n    break;\n\n  case 236:\n\n/* Line 1455 of yacc.c  */\n#line 1076 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Address_node)); }\n    break;\n\n  case 237:\n\n/* Line 1455 of yacc.c  */\n#line 1077 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Address_node)); }\n    break;\n\n  case 238:\n\n/* Line 1455 of yacc.c  */\n#line 1082 \"ntp_parser.y\"\n    {\n\t\t\tif ((yyvsp[(1) - (1)].Integer) != 0 && (yyvsp[(1) - (1)].Integer) != 1) {\n\t\t\t\tyyerror(\"Integer value is not boolean (0 or 1). Assuming 1\");\n\t\t\t\t(yyval.Integer) = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\t(yyval.Integer) = (yyvsp[(1) - (1)].Integer);\n\t\t}\n    break;\n\n  case 239:\n\n/* Line 1455 of yacc.c  */\n#line 1090 \"ntp_parser.y\"\n    { (yyval.Integer) = 1; }\n    break;\n\n  case 240:\n\n/* Line 1455 of yacc.c  */\n#line 1091 \"ntp_parser.y\"\n    { (yyval.Integer) = 0; }\n    break;\n\n  case 241:\n\n/* Line 1455 of yacc.c  */\n#line 1095 \"ntp_parser.y\"\n    { (yyval.Double) = (double)(yyvsp[(1) - (1)].Integer); }\n    break;\n\n  case 243:\n\n/* Line 1455 of yacc.c  */\n#line 1106 \"ntp_parser.y\"\n    {\n\t\t\tcfgt.sim_details = create_sim_node((yyvsp[(3) - (5)].Queue), (yyvsp[(4) - (5)].Queue));\n\n\t\t\t/* Reset the old_config_style variable */\n\t\t\told_config_style = 1;\n\t\t}\n    break;\n\n  case 244:\n\n/* Line 1455 of yacc.c  */\n#line 1120 \"ntp_parser.y\"\n    { old_config_style = 0; }\n    break;\n\n  case 245:\n\n/* Line 1455 of yacc.c  */\n#line 1124 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (3)].Queue), (yyvsp[(2) - (3)].Attr_val)); }\n    break;\n\n  case 246:\n\n/* Line 1455 of yacc.c  */\n#line 1125 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (2)].Attr_val)); }\n    break;\n\n  case 247:\n\n/* Line 1455 of yacc.c  */\n#line 1129 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (3)].Integer), (yyvsp[(3) - (3)].Double)); }\n    break;\n\n  case 248:\n\n/* Line 1455 of yacc.c  */\n#line 1130 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (3)].Integer), (yyvsp[(3) - (3)].Double)); }\n    break;\n\n  case 249:\n\n/* Line 1455 of yacc.c  */\n#line 1134 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Sim_server)); }\n    break;\n\n  case 250:\n\n/* Line 1455 of yacc.c  */\n#line 1135 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Sim_server)); }\n    break;\n\n  case 251:\n\n/* Line 1455 of yacc.c  */\n#line 1140 \"ntp_parser.y\"\n    { (yyval.Sim_server) = create_sim_server((yyvsp[(1) - (5)].Address_node), (yyvsp[(3) - (5)].Double), (yyvsp[(4) - (5)].Queue)); }\n    break;\n\n  case 252:\n\n/* Line 1455 of yacc.c  */\n#line 1144 \"ntp_parser.y\"\n    { (yyval.Double) = (yyvsp[(3) - (4)].Double); }\n    break;\n\n  case 253:\n\n/* Line 1455 of yacc.c  */\n#line 1148 \"ntp_parser.y\"\n    { (yyval.Address_node) = (yyvsp[(3) - (3)].Address_node); }\n    break;\n\n  case 254:\n\n/* Line 1455 of yacc.c  */\n#line 1152 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Sim_script)); }\n    break;\n\n  case 255:\n\n/* Line 1455 of yacc.c  */\n#line 1153 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Sim_script)); }\n    break;\n\n  case 256:\n\n/* Line 1455 of yacc.c  */\n#line 1158 \"ntp_parser.y\"\n    { (yyval.Sim_script) = create_sim_script_info((yyvsp[(3) - (6)].Double), (yyvsp[(5) - (6)].Queue)); }\n    break;\n\n  case 257:\n\n/* Line 1455 of yacc.c  */\n#line 1162 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (3)].Queue), (yyvsp[(2) - (3)].Attr_val)); }\n    break;\n\n  case 258:\n\n/* Line 1455 of yacc.c  */\n#line 1163 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (2)].Attr_val)); }\n    break;\n\n  case 259:\n\n/* Line 1455 of yacc.c  */\n#line 1168 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (3)].Integer), (yyvsp[(3) - (3)].Double)); }\n    break;\n\n  case 260:\n\n/* Line 1455 of yacc.c  */\n#line 1170 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (3)].Integer), (yyvsp[(3) - (3)].Double)); }\n    break;\n\n  case 261:\n\n/* Line 1455 of yacc.c  */\n#line 1172 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (3)].Integer), (yyvsp[(3) - (3)].Double)); }\n    break;\n\n  case 262:\n\n/* Line 1455 of yacc.c  */\n#line 1174 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (3)].Integer), (yyvsp[(3) - (3)].Double)); }\n    break;\n\n  case 263:\n\n/* Line 1455 of yacc.c  */\n#line 1176 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (3)].Integer), (yyvsp[(3) - (3)].Double)); }\n    break;\n\n\n\n/* Line 1455 of yacc.c  */\n#line 3826 \"ntp_parser.c\"\n      default: break;\n    }\n  YY_SYMBOL_PRINT (\"-> $$ =\", yyr1[yyn], &yyval, &yyloc);\n\n  YYPOPSTACK (yylen);\n  yylen = 0;\n  YY_STACK_PRINT (yyss, yyssp);\n\n  *++yyvsp = yyval;\n\n  /* Now `shift' the result of the reduction.  Determine what state\n     that goes to, based on the state we popped back to and the rule\n     number reduced by.  */\n\n  yyn = yyr1[yyn];\n\n  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;\n  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)\n    yystate = yytable[yystate];\n  else\n    yystate = yydefgoto[yyn - YYNTOKENS];\n\n  goto yynewstate;\n\n\n/*------------------------------------.\n| yyerrlab -- here on detecting error |\n`------------------------------------*/\nyyerrlab:\n  /* If not already recovering from an error, report this error.  */\n  if (!yyerrstatus)\n    {\n      ++yynerrs;\n#if ! YYERROR_VERBOSE\n      yyerror (YY_(\"syntax error\"));\n#else\n      {\n\tYYSIZE_T yysize = yysyntax_error (0, yystate, yychar);\n\tif (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)\n\t  {\n\t    YYSIZE_T yyalloc = 2 * yysize;\n\t    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))\n\t      yyalloc = YYSTACK_ALLOC_MAXIMUM;\n\t    if (yymsg != yymsgbuf)\n\t      YYSTACK_FREE (yymsg);\n\t    yymsg = (char *) YYSTACK_ALLOC (yyalloc);\n\t    if (yymsg)\n\t      yymsg_alloc = yyalloc;\n\t    else\n\t      {\n\t\tyymsg = yymsgbuf;\n\t\tyymsg_alloc = sizeof yymsgbuf;\n\t      }\n\t  }\n\n\tif (0 < yysize && yysize <= yymsg_alloc)\n\t  {\n\t    (void) yysyntax_error (yymsg, yystate, yychar);\n\t    yyerror (yymsg);\n\t  }\n\telse\n\t  {\n\t    yyerror (YY_(\"syntax error\"));\n\t    if (yysize != 0)\n\t      goto yyexhaustedlab;\n\t  }\n      }\n#endif\n    }\n\n\n\n  if (yyerrstatus == 3)\n    {\n      /* If just tried and failed to reuse lookahead token after an\n\t error, discard it.  */\n\n      if (yychar <= YYEOF)\n\t{\n\t  /* Return failure if at end of input.  */\n\t  if (yychar == YYEOF)\n\t    YYABORT;\n\t}\n      else\n\t{\n\t  yydestruct (\"Error: discarding\",\n\t\t      yytoken, &yylval);\n\t  yychar = YYEMPTY;\n\t}\n    }\n\n  /* Else will try to reuse lookahead token after shifting the error\n     token.  */\n  goto yyerrlab1;\n\n\n/*---------------------------------------------------.\n| yyerrorlab -- error raised explicitly by YYERROR.  |\n`---------------------------------------------------*/\nyyerrorlab:\n\n  /* Pacify compilers like GCC when the user code never invokes\n     YYERROR and the label yyerrorlab therefore never appears in user\n     code.  */\n  if (/*CONSTCOND*/ 0)\n     goto yyerrorlab;\n\n  /* Do not reclaim the symbols of the rule which action triggered\n     this YYERROR.  */\n  YYPOPSTACK (yylen);\n  yylen = 0;\n  YY_STACK_PRINT (yyss, yyssp);\n  yystate = *yyssp;\n  goto yyerrlab1;\n\n\n/*-------------------------------------------------------------.\n| yyerrlab1 -- common code for both syntax error and YYERROR.  |\n`-------------------------------------------------------------*/\nyyerrlab1:\n  yyerrstatus = 3;\t/* Each real token shifted decrements this.  */\n\n  for (;;)\n    {\n      yyn = yypact[yystate];\n      if (yyn != YYPACT_NINF)\n\t{\n\t  yyn += YYTERROR;\n\t  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)\n\t    {\n\t      yyn = yytable[yyn];\n\t      if (0 < yyn)\n\t\tbreak;\n\t    }\n\t}\n\n      /* Pop the current state because it cannot handle the error token.  */\n      if (yyssp == yyss)\n\tYYABORT;\n\n\n      yydestruct (\"Error: popping\",\n\t\t  yystos[yystate], yyvsp);\n      YYPOPSTACK (1);\n      yystate = *yyssp;\n      YY_STACK_PRINT (yyss, yyssp);\n    }\n\n  *++yyvsp = yylval;\n\n\n  /* Shift the error token.  */\n  YY_SYMBOL_PRINT (\"Shifting\", yystos[yyn], yyvsp, yylsp);\n\n  yystate = yyn;\n  goto yynewstate;\n\n\n/*-------------------------------------.\n| yyacceptlab -- YYACCEPT comes here.  |\n`-------------------------------------*/\nyyacceptlab:\n  yyresult = 0;\n  goto yyreturn;\n\n/*-----------------------------------.\n| yyabortlab -- YYABORT comes here.  |\n`-----------------------------------*/\nyyabortlab:\n  yyresult = 1;\n  goto yyreturn;\n\n#if !defined(yyoverflow) || YYERROR_VERBOSE\n/*-------------------------------------------------.\n| yyexhaustedlab -- memory exhaustion comes here.  |\n`-------------------------------------------------*/\nyyexhaustedlab:\n  yyerror (YY_(\"memory exhausted\"));\n  yyresult = 2;\n  /* Fall through.  */\n#endif\n\nyyreturn:\n  if (yychar != YYEMPTY)\n     yydestruct (\"Cleanup: discarding lookahead\",\n\t\t yytoken, &yylval);\n  /* Do not reclaim the symbols of the rule which action triggered\n     this YYABORT or YYACCEPT.  */\n  YYPOPSTACK (yylen);\n  YY_STACK_PRINT (yyss, yyssp);\n  while (yyssp != yyss)\n    {\n      yydestruct (\"Cleanup: popping\",\n\t\t  yystos[*yyssp], yyvsp);\n      YYPOPSTACK (1);\n    }\n#ifndef yyoverflow\n  if (yyss != yyssa)\n    YYSTACK_FREE (yyss);\n#endif\n#if YYERROR_VERBOSE\n  if (yymsg != yymsgbuf)\n    YYSTACK_FREE (yymsg);\n#endif\n  /* Make sure YYID is used.  */\n  return YYID (yyresult);\n}\n\n\n\n/* Line 1675 of yacc.c  */\n#line 1180 \"ntp_parser.y\"\n\n\nvoid yyerror (char *msg)\n{\n\tint retval;\n\n\tip_file->err_line_no = ip_file->prev_token_line_no;\n\tip_file->err_col_no = ip_file->prev_token_col_no;\n\t\n\tmsyslog(LOG_ERR, \n\t\t\"line %d column %d %s\", \n\t\tip_file->err_line_no,\n\t\tip_file->err_col_no,\n\t\tmsg);\n\tif (!input_from_file) {\n\t\t/* Save the error message in the correct buffer */\n\t\tretval = snprintf(remote_config.err_msg + remote_config.err_pos,\n\t\t\t\t  MAXLINE - remote_config.err_pos,\n\t\t\t\t  \"column %d %s\",\n\t\t\t\t  ip_file->err_col_no, msg);\n\n\t\t/* Increment the value of err_pos */\n\t\tif (retval > 0)\n\t\t\tremote_config.err_pos += retval;\n\n\t\t/* Increment the number of errors */\n\t\t++remote_config.no_errors;\n\t}\n}\n\n\n/*\n * token_name - convert T_ token integers to text\n *\t\texample: token_name(T_Server) returns \"T_Server\"\n */\nconst char *\ntoken_name(\n\tint token\n\t)\n{\n\treturn yytname[YYTRANSLATE(token)];\n}\n\n\n/* Initial Testing function -- ignore\nint main(int argc, char *argv[])\n{\n\tip_file = FOPEN(argv[1], \"r\");\n\tif (!ip_file) {\n\t\tfprintf(stderr, \"ERROR!! Could not open file: %s\\n\", argv[1]);\n\t}\n\tkey_scanner = create_keyword_scanner(keyword_list);\n\tprint_keyword_scanner(key_scanner, 0);\n\tyyparse();\n\treturn 0;\n}\n*/\n\n\n", "/* ntp_parser.y\n *\n * The parser for the NTP configuration file.\n *\n * Written By:\tSachin Kamboj\n *\t\tUniversity of Delaware\n *\t\tNewark, DE 19711\n * Copyright (c) 2006\n */\n\n%{\n  #ifdef HAVE_CONFIG_H\n  # include <config.h>\n  #endif\n\n  #include \"ntpd.h\"\n  #include \"ntp_machine.h\"\n  #include \"ntp.h\"\n  #include \"ntp_stdlib.h\"\n  #include \"ntp_filegen.h\"\n  #include \"ntp_data_structures.h\"\n  #include \"ntp_scanner.h\"\n  #include \"ntp_config.h\"\n  #include \"ntp_crypto.h\"\n\n  #include \"ntpsim.h\"\t\t/* HMS: Do we really want this all the time? */\n\t\t\t\t/* SK: It might be a good idea to always\n\t\t\t\t   include the simulator code. That way\n\t\t\t\t   someone can use the same configuration file\n\t\t\t\t   for both the simulator and the daemon\n\t\t\t\t*/\n\n\n  struct FILE_INFO *ip_file;   /* Pointer to the configuration file stream */\n\n  #define YYMALLOC\temalloc\n  #define YYFREE\tfree\n  #define YYERROR_VERBOSE\n  #define YYMAXDEPTH\t1000   /* stop the madness sooner */\n  void yyerror (char *msg);\n  extern int input_from_file;  /* 0=input from ntpq :config */\n%}\n\n/* \n * Enable generation of token names array even without YYDEBUG.\n * We access via token_name() defined below.\n */\n%token-table\n\n%union {\n    char   *String;\n    double  Double;\n    int     Integer;\n    void   *VoidPtr;\n    queue  *Queue;\n    struct attr_val *Attr_val;\n    struct address_node *Address_node;\n    struct setvar_node *Set_var;\n\n    /* Simulation types */\n    server_info *Sim_server;\n    script_info *Sim_script;\n}\n\n/* TERMINALS (do not appear left of colon) */\n%token\t<Integer>\tT_Age\n%token\t<Integer>\tT_All\n%token\t<Integer>\tT_Allan\n%token\t<Integer>\tT_Auth\n%token\t<Integer>\tT_Autokey\n%token\t<Integer>\tT_Automax\n%token\t<Integer>\tT_Average\n%token\t<Integer>\tT_Bclient\n%token\t<Integer>\tT_Beacon\n%token\t<Integer>\tT_Bias\n%token\t<Integer>\tT_Broadcast\n%token\t<Integer>\tT_Broadcastclient\n%token\t<Integer>\tT_Broadcastdelay\n%token\t<Integer>\tT_Burst\n%token\t<Integer>\tT_Calibrate\n%token\t<Integer>\tT_Calldelay\n%token\t<Integer>\tT_Ceiling\n%token\t<Integer>\tT_Clockstats\n%token\t<Integer>\tT_Cohort\n%token\t<Integer>\tT_ControlKey\n%token\t<Integer>\tT_Crypto\n%token\t<Integer>\tT_Cryptostats\n%token\t<Integer>\tT_Day\n%token\t<Integer>\tT_Default\n%token\t<Integer>\tT_Digest\n%token\t<Integer>\tT_Disable\n%token\t<Integer>\tT_Discard\n%token\t<Integer>\tT_Dispersion\n%token\t<Double>\tT_Double\n%token\t<Integer>\tT_Driftfile\n%token\t<Integer>\tT_Drop\n%token\t<Integer>\tT_Ellipsis\t/* \"...\" not \"ellipsis\" */\n%token\t<Integer>\tT_Enable\n%token\t<Integer>\tT_End\n%token\t<Integer>\tT_False\n%token\t<Integer>\tT_File\n%token\t<Integer>\tT_Filegen\n%token\t<Integer>\tT_Flag1\n%token\t<Integer>\tT_Flag2\n%token\t<Integer>\tT_Flag3\n%token\t<Integer>\tT_Flag4\n%token\t<Integer>\tT_Flake\n%token\t<Integer>\tT_Floor\n%token\t<Integer>\tT_Freq\n%token\t<Integer>\tT_Fudge\n%token\t<Integer>\tT_Host\n%token\t<Integer>\tT_Huffpuff\n%token\t<Integer>\tT_Iburst\n%token\t<Integer>\tT_Ident\n%token\t<Integer>\tT_Ignore\n%token\t<Integer>\tT_Incalloc\n%token\t<Integer>\tT_Incmem\n%token\t<Integer>\tT_Initalloc\n%token\t<Integer>\tT_Initmem\n%token\t<Integer>\tT_Includefile\n%token\t<Integer>\tT_Integer\n%token\t<Integer>\tT_Interface\n%token\t<Integer>\tT_Ipv4\n%token\t<Integer>\tT_Ipv4_flag\n%token\t<Integer>\tT_Ipv6\n%token\t<Integer>\tT_Ipv6_flag\n%token\t<Integer>\tT_Kernel\n%token\t<Integer>\tT_Key\n%token\t<Integer>\tT_Keys\n%token\t<Integer>\tT_Keysdir\n%token\t<Integer>\tT_Kod\n%token\t<Integer>\tT_Mssntp\n%token\t<Integer>\tT_Leapfile\n%token\t<Integer>\tT_Limited\n%token\t<Integer>\tT_Link\n%token\t<Integer>\tT_Listen\n%token\t<Integer>\tT_Logconfig\n%token\t<Integer>\tT_Logfile\n%token\t<Integer>\tT_Loopstats\n%token\t<Integer>\tT_Lowpriotrap\n%token\t<Integer>\tT_Manycastclient\n%token\t<Integer>\tT_Manycastserver\n%token\t<Integer>\tT_Mask\n%token\t<Integer>\tT_Maxage\n%token\t<Integer>\tT_Maxclock\n%token\t<Integer>\tT_Maxdepth\n%token\t<Integer>\tT_Maxdist\n%token\t<Integer>\tT_Maxmem\n%token\t<Integer>\tT_Maxpoll\n%token\t<Integer>\tT_Minclock\n%token\t<Integer>\tT_Mindepth\n%token\t<Integer>\tT_Mindist\n%token\t<Integer>\tT_Minimum\n%token\t<Integer>\tT_Minpoll\n%token\t<Integer>\tT_Minsane\n%token\t<Integer>\tT_Mode\n%token\t<Integer>\tT_Monitor\n%token\t<Integer>\tT_Month\n%token\t<Integer>\tT_Mru\n%token\t<Integer>\tT_Multicastclient\n%token\t<Integer>\tT_Nic\n%token\t<Integer>\tT_Nolink\n%token\t<Integer>\tT_Nomodify\n%token\t<Integer>\tT_None\n%token\t<Integer>\tT_Nopeer\n%token\t<Integer>\tT_Noquery\n%token\t<Integer>\tT_Noselect\n%token\t<Integer>\tT_Noserve\n%token\t<Integer>\tT_Notrap\n%token\t<Integer>\tT_Notrust\n%token\t<Integer>\tT_Ntp\n%token\t<Integer>\tT_Ntpport\n%token\t<Integer>\tT_NtpSignDsocket\n%token\t<Integer>\tT_Orphan\n%token\t<Integer>\tT_Orphanwait\n%token\t<Integer>\tT_Panic\n%token\t<Integer>\tT_Peer\n%token\t<Integer>\tT_Peerstats\n%token\t<Integer>\tT_Phone\n%token\t<Integer>\tT_Pid\n%token\t<Integer>\tT_Pidfile\n%token\t<Integer>\tT_Pool\n%token\t<Integer>\tT_Port\n%token\t<Integer>\tT_Preempt\n%token\t<Integer>\tT_Prefer\n%token\t<Integer>\tT_Protostats\n%token\t<Integer>\tT_Pw\n%token\t<Integer>\tT_Qos\n%token\t<Integer>\tT_Randfile\n%token\t<Integer>\tT_Rawstats\n%token\t<Integer>\tT_Refid\n%token\t<Integer>\tT_Requestkey\n%token\t<Integer>\tT_Restrict\n%token\t<Integer>\tT_Revoke\n%token\t<Integer>\tT_Saveconfigdir\n%token\t<Integer>\tT_Server\n%token\t<Integer>\tT_Setvar\n%token\t<Integer>\tT_Sign\n%token\t<Integer>\tT_Source\n%token\t<Integer>\tT_Statistics\n%token\t<Integer>\tT_Stats\n%token\t<Integer>\tT_Statsdir\n%token\t<Integer>\tT_Step\n%token\t<Integer>\tT_Stepout\n%token\t<Integer>\tT_Stratum\n%token\t<String>\tT_String\n%token\t<Integer>\tT_Sysstats\n%token\t<Integer>\tT_Tick\n%token\t<Integer>\tT_Time1\n%token\t<Integer>\tT_Time2\n%token\t<Integer>\tT_Timingstats\n%token\t<Integer>\tT_Tinker\n%token\t<Integer>\tT_Tos\n%token\t<Integer>\tT_Trap\n%token\t<Integer>\tT_True\n%token\t<Integer>\tT_Trustedkey\n%token\t<Integer>\tT_Ttl\n%token\t<Integer>\tT_Type\n%token\t<Integer>\tT_Unconfig\n%token\t<Integer>\tT_Unpeer\n%token\t<Integer>\tT_Version\n%token\t<Integer>\tT_WanderThreshold\t/* Not a token */\n%token\t<Integer>\tT_Week\n%token\t<Integer>\tT_Wildcard\n%token\t<Integer>\tT_Xleave\n%token\t<Integer>\tT_Year\n%token\t<Integer>\tT_Flag\t\t/* Not an actual token */\n%token\t<Integer>\tT_Void\t\t/* Not an actual token */\n%token\t<Integer>\tT_EOC\n\n\n/* NTP Simulator Tokens */\n%token\t<Integer>\tT_Simulate\n%token\t<Integer>\tT_Beep_Delay\n%token\t<Integer>\tT_Sim_Duration\n%token\t<Integer>\tT_Server_Offset\n%token\t<Integer>\tT_Duration\n%token\t<Integer>\tT_Freq_Offset\n%token\t<Integer>\tT_Wander\n%token\t<Integer>\tT_Jitter\n%token\t<Integer>\tT_Prop_Delay\n%token\t<Integer>\tT_Proc_Delay\n\n\n\n/*** NON-TERMINALS ***/\n%type\t<Integer>\taccess_control_flag\n%type\t<Queue>\t\tac_flag_list\n%type\t<Address_node>\taddress\n%type\t<Queue>\t\taddress_list\n%type\t<Integer>\tboolean\n%type\t<Integer>\tclient_type\n%type\t<Attr_val>\tcrypto_command\n%type\t<Queue>\t\tcrypto_command_line\n%type\t<Queue>\t\tcrypto_command_list\n%type\t<Attr_val>\tdiscard_option\n%type\t<Queue>\t\tdiscard_option_list\n%type\t<Attr_val>\tfilegen_option\n%type\t<Queue>\t\tfilegen_option_list\n%type\t<Integer>\tfilegen_type\n%type\t<Attr_val>\tfudge_factor\n%type\t<Queue>\t\tfudge_factor_list\n%type\t<Queue>\t\tinteger_list\n%type\t<Queue>\t\tinteger_list_range\n%type\t<Attr_val>\tinteger_list_range_elt\n%type\t<Attr_val>\tinteger_range\n%type\t<Integer>\tnic_rule_action\n%type\t<Queue>\t\tinterface_command\n%type\t<Integer>\tinterface_nic\n%type\t<Address_node>\tip_address\n%type\t<Attr_val>\tlog_config_command\n%type\t<Queue>\t\tlog_config_list\n%type\t<Attr_val>\tmru_option\n%type\t<Queue>\t\tmru_option_list\n%type\t<Integer>\tnic_rule_class\n%type\t<Double>\tnumber\n%type\t<Attr_val>\toption\n%type\t<Queue>\t\toption_list\n%type\t<Integer>\tstat\n%type\t<Queue>\t\tstats_list\n%type\t<Queue>\t\tstring_list\n%type\t<Attr_val>\tsystem_option\n%type\t<Queue>\t\tsystem_option_list\n%type\t<Attr_val>\ttinker_option\n%type\t<Queue>\t\ttinker_option_list\n%type\t<Attr_val>\ttos_option\n%type\t<Queue>\t\ttos_option_list\n%type\t<Attr_val>\ttrap_option\n%type\t<Queue>\t\ttrap_option_list\n%type\t<Integer>\tunpeer_keyword\n%type\t<Set_var>\tvariable_assign\n\n/* NTP Simulator non-terminals */\n%type\t<Queue>\t\tsim_init_statement_list\n%type\t<Attr_val>\tsim_init_statement\n%type\t<Queue>\t\tsim_server_list\n%type\t<Sim_server>\tsim_server\n%type\t<Double>\tsim_server_offset\n%type\t<Address_node>\tsim_server_name\n%type\t<Queue>\t\tsim_act_list\n%type\t<Sim_script>\tsim_act\n%type\t<Queue>\t\tsim_act_stmt_list\n%type\t<Attr_val>\tsim_act_stmt\n\n%%\n\n/* ntp.conf\n * Configuration File Grammar\n * --------------------------\n */\n\nconfiguration\n\t:\tcommand_list\n\t;\n\ncommand_list\n\t:\tcommand_list command T_EOC\n\t|\tcommand T_EOC\n\t|\terror T_EOC\n\t\t{\n\t\t\t/* I will need to incorporate much more fine grained\n\t\t\t * error messages. The following should suffice for\n\t\t\t * the time being.\n\t\t\t */\n\t\t\tmsyslog(LOG_ERR, \n\t\t\t\t\"syntax error in %s line %d, column %d\",\n\t\t\t\tip_file->fname,\n\t\t\t\tip_file->err_line_no,\n\t\t\t\tip_file->err_col_no);\n\t\t}\n\t;\n\ncommand :\t/* NULL STATEMENT */\n\t|\tserver_command\n\t|\tunpeer_command\n\t|\tother_mode_command\n\t|\tauthentication_command\n\t|\tmonitoring_command\n\t|\taccess_control_command\n\t|\torphan_mode_command\n\t|\tfudge_command\n\t|\tsystem_option_command\n\t|\ttinker_command\n\t|\tmiscellaneous_command\n\t|\tsimulate_command\n\t;\n\n/* Server Commands\n * ---------------\n */\n\nserver_command\n\t:\tclient_type address option_list\n\t\t{\n\t\t\tstruct peer_node *my_node =  create_peer_node($1, $2, $3);\n\t\t\tif (my_node)\n\t\t\t\tenqueue(cfgt.peers, my_node);\n\t\t}\n\t|\tclient_type address\n\t\t{\n\t\t\tstruct peer_node *my_node = create_peer_node($1, $2, NULL);\n\t\t\tif (my_node)\n\t\t\t\tenqueue(cfgt.peers, my_node);\n\t\t}\n\t;\n\nclient_type\n\t:\tT_Server\n\t|\tT_Pool\n\t|\tT_Peer\n\t|\tT_Broadcast\n\t|\tT_Manycastclient\n\t;\n\naddress\n\t:\tip_address\n\t|\tT_Ipv4_flag T_String\t{ $$ = create_address_node($2, AF_INET); }\n\t|\tT_Ipv6_flag T_String\t{ $$ = create_address_node($2, AF_INET6); }\n\t;\n\nip_address\n\t:\tT_String { $$ = create_address_node($1, 0); }\n\t;\n\noption_list\n\t:\toption_list option { $$ = enqueue($1, $2); }\n\t|\toption { $$ = enqueue_in_new_queue($1); }\n\t;\n\noption\n\t:\tT_Autokey\t\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Bias number\t\t{ $$ = create_attr_dval($1, $2); }\n\t|\tT_Burst\t\t\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Iburst\t\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Key T_Integer\t\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Minpoll T_Integer\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Maxpoll T_Integer\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Noselect\t\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Preempt\t\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Prefer\t\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_True\t\t\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Xleave\t\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Ttl T_Integer\t\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Mode T_Integer\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Version T_Integer\t{ $$ = create_attr_ival($1, $2); }\n\t;\n\n\n/* unpeer commands\n * ---------------\n */\n\nunpeer_command\n\t:\tunpeer_keyword address\n\t\t{\n\t\t\tstruct unpeer_node *my_node = create_unpeer_node($2);\n\t\t\tif (my_node)\n\t\t\t\tenqueue(cfgt.unpeers, my_node);\n\t\t}\n\t;\t\nunpeer_keyword\t\n\t:\tT_Unconfig\n\t|\tT_Unpeer\n\t;\n\t\n\t\n/* Other Modes\n * (broadcastclient manycastserver multicastclient)\n * ------------------------------------------------\n */\n\nother_mode_command\n\t:\tT_Broadcastclient\n\t\t\t{ cfgt.broadcastclient = 1; }\n\t|\tT_Manycastserver address_list\n\t\t\t{ append_queue(cfgt.manycastserver, $2); }\n\t|\tT_Multicastclient address_list\n\t\t\t{ append_queue(cfgt.multicastclient, $2); }\n\t;\n\n\n\n/* Authentication Commands\n * -----------------------\n */\n\nauthentication_command\n\t:\tT_Automax T_Integer\n\t\t\t{ enqueue(cfgt.vars, create_attr_ival($1, $2)); }\n\t|\tT_ControlKey T_Integer\n\t\t\t{ cfgt.auth.control_key = $2; }\n\t|\tT_Crypto crypto_command_line\n\t\t{ \n\t\t\tcfgt.auth.cryptosw++;\n\t\t\tappend_queue(cfgt.auth.crypto_cmd_list, $2);\n\t\t}\n\t|\tT_Keys T_String\n\t\t\t{ cfgt.auth.keys = $2; }\n\t|\tT_Keysdir T_String\n\t\t\t{ cfgt.auth.keysdir = $2; }\n\t|\tT_Requestkey T_Integer\n\t\t\t{ cfgt.auth.request_key = $2; }\n\t|\tT_Revoke T_Integer\n\t\t\t{ cfgt.auth.revoke = $2; }\n\t|\tT_Trustedkey integer_list_range\n\t\t\t{ cfgt.auth.trusted_key_list = $2; }\n\t|\tT_NtpSignDsocket T_String\n\t\t\t{ cfgt.auth.ntp_signd_socket = $2; }\n\t;\n\ncrypto_command_line\n\t:\tcrypto_command_list\n\t|\t/* Null list */\n\t\t\t{ $$ = create_queue(); }\n\t;\n\ncrypto_command_list\n\t:\tcrypto_command_list crypto_command\n\t\t{ \n\t\t\tif ($2 != NULL)\n\t\t\t\t$$ = enqueue($1, $2);\n\t\t\telse\n\t\t\t\t$$ = $1;\n\t\t}\n\t|\tcrypto_command\n\t\t{\n\t\t\tif ($1 != NULL)\n\t\t\t\t$$ = enqueue_in_new_queue($1);\n\t\t\telse\n\t\t\t\t$$ = create_queue();\n\t\t}\n\t;\n\ncrypto_command\n\t:\tT_Host\tT_String\n\t\t\t{ $$ = create_attr_sval($1, $2); }\n\t|\tT_Ident\tT_String\n\t\t\t{ $$ = create_attr_sval($1, $2); }\n\t|\tT_Pw T_String\n\t\t\t{ $$ = create_attr_sval($1, $2); }\n\t|\tT_Randfile T_String\n\t\t\t{ $$ = create_attr_sval($1, $2); }\n\t|\tT_Sign\tT_String\n\t\t\t{ $$ = create_attr_sval($1, $2); }\n\t|\tT_Digest T_String\n\t\t\t{ $$ = create_attr_sval($1, $2); }\n\t|\tT_Revoke T_Integer\n\t\t{\n\t\t\t$$ = NULL;\n\t\t\tcfgt.auth.revoke = $2;\n\t\t\tmsyslog(LOG_WARNING,\n\t\t\t\t\"'crypto revoke %d' is deprecated, \"\n\t\t\t\t\"please use 'revoke %d' instead.\",\n\t\t\t\tcfgt.auth.revoke, cfgt.auth.revoke);\n\t\t}\n\t;\n\n\n/* Orphan Mode Commands\n * --------------------\n */\n\norphan_mode_command\n\t:\tT_Tos tos_option_list\n\t\t\t{ append_queue(cfgt.orphan_cmds,$2); }\n\t;\n\ntos_option_list\n\t:\ttos_option_list tos_option { $$ = enqueue($1, $2); }\n\t|\ttos_option { $$ = enqueue_in_new_queue($1); }\n\t;\n\ntos_option\n\t:\tT_Ceiling T_Integer\n\t\t\t{ $$ = create_attr_dval($1, (double)$2); }\n\t|\tT_Floor T_Integer\n\t\t\t{ $$ = create_attr_dval($1, (double)$2); }\n\t|\tT_Cohort boolean\n\t\t\t{ $$ = create_attr_dval($1, (double)$2); }\n\t|\tT_Orphan T_Integer\n\t\t\t{ $$ = create_attr_dval($1, (double)$2); }\n\t|\tT_Orphanwait T_Integer\n\t\t\t{ $$ = create_attr_dval($1, (double)$2); }\n\t|\tT_Mindist number\n\t\t\t{ $$ = create_attr_dval($1, $2); }\n\t|\tT_Maxdist number\n\t\t\t{ $$ = create_attr_dval($1, $2); }\n\t|\tT_Minclock number\n\t\t\t{ $$ = create_attr_dval($1, $2); }\n\t|\tT_Maxclock number\n\t\t\t{ $$ = create_attr_dval($1, $2); }\n\t|\tT_Minsane T_Integer\n\t\t\t{ $$ = create_attr_dval($1, (double)$2); }\n\t|\tT_Beacon T_Integer\n\t\t\t{ $$ = create_attr_dval($1, (double)$2); }\n\t;\n\n\n/* Monitoring Commands\n * -------------------\n */\n\nmonitoring_command\n\t:\tT_Statistics stats_list\n\t\t\t{ append_queue(cfgt.stats_list, $2); }\n\t|\tT_Statsdir T_String\n\t\t{\n\t\t\tif (input_from_file)\n\t\t\t\tcfgt.stats_dir = $2;\n\t\t\telse {\n\t\t\t\tfree($2);\n\t\t\t\tyyerror(\"statsdir remote configuration ignored\");\n\t\t\t}\n\t\t}\n\t|\tT_Filegen stat filegen_option_list\n\t\t{\n\t\t\tenqueue(cfgt.filegen_opts,\n\t\t\t\tcreate_filegen_node($2, $3));\n\t\t}\n\t;\n\nstats_list\n\t:\tstats_list stat { $$ = enqueue($1, create_ival($2)); }\n\t|\tstat { $$ = enqueue_in_new_queue(create_ival($1)); }\n\t;\n\nstat\n\t:\tT_Clockstats\n\t|\tT_Cryptostats\n\t|\tT_Loopstats\n\t|\tT_Peerstats\n\t|\tT_Rawstats\n\t|\tT_Sysstats\n\t|\tT_Timingstats\n\t|\tT_Protostats\n\t;\n\nfilegen_option_list\n\t:\tfilegen_option_list filegen_option\n\t\t{\n\t\t\tif ($2 != NULL)\n\t\t\t\t$$ = enqueue($1, $2);\n\t\t\telse\n\t\t\t\t$$ = $1;\n\t\t}\n\t|\tfilegen_option\n\t\t{\n\t\t\tif ($1 != NULL)\n\t\t\t\t$$ = enqueue_in_new_queue($1);\n\t\t\telse\n\t\t\t\t$$ = create_queue();\n\t\t}\n\t;\n\nfilegen_option\n\t:\tT_File T_String\n\t\t{\n\t\t\tif (input_from_file)\n\t\t\t\t$$ = create_attr_sval($1, $2);\n\t\t\telse {\n\t\t\t\t$$ = NULL;\n\t\t\t\tfree($2);\n\t\t\t\tyyerror(\"filegen file remote configuration ignored\");\n\t\t\t}\n\t\t}\n\t|\tT_Type filegen_type\n\t\t{\n\t\t\tif (input_from_file)\n\t\t\t\t$$ = create_attr_ival($1, $2);\n\t\t\telse {\n\t\t\t\t$$ = NULL;\n\t\t\t\tyyerror(\"filegen type remote configuration ignored\");\n\t\t\t}\n\t\t}\n\t|\tT_Link\n\t\t{\n\t\t\tif (input_from_file)\n\t\t\t\t$$ = create_attr_ival(T_Flag, $1);\n\t\t\telse {\n\t\t\t\t$$ = NULL;\n\t\t\t\tyyerror(\"filegen link remote configuration ignored\");\n\t\t\t}\n\t\t}\n\t|\tT_Nolink\n\t\t{\n\t\t\tif (input_from_file)\n\t\t\t\t$$ = create_attr_ival(T_Flag, $1);\n\t\t\telse {\n\t\t\t\t$$ = NULL;\n\t\t\t\tyyerror(\"filegen nolink remote configuration ignored\");\n\t\t\t}\n\t\t}\n\t|\tT_Enable\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Disable\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t;\n\nfilegen_type\n\t:\tT_None\n\t|\tT_Pid\n\t|\tT_Day\n\t|\tT_Week\n\t|\tT_Month\n\t|\tT_Year\n\t|\tT_Age\n\t;\n\n\n/* Access Control Commands\n * -----------------------\n */\n\naccess_control_command\n\t:\tT_Discard discard_option_list\n\t\t{\n\t\t\tappend_queue(cfgt.discard_opts, $2);\n\t\t}\n\t|\tT_Mru mru_option_list\n\t\t{\n\t\t\tappend_queue(cfgt.mru_opts, $2);\n\t\t}\n\t|\tT_Restrict address ac_flag_list\n\t\t{\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node($2, NULL, $3, ip_file->line_no));\n\t\t}\n\t|\tT_Restrict ip_address T_Mask ip_address ac_flag_list\n\t\t{\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node($2, $4, $5, ip_file->line_no));\n\t\t}\n\t|\tT_Restrict T_Default ac_flag_list\n\t\t{\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node(NULL, NULL, $3, ip_file->line_no));\n\t\t}\n\t|\tT_Restrict T_Ipv4_flag T_Default ac_flag_list\n\t\t{\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node(\n\t\t\t\t\tcreate_address_node(\n\t\t\t\t\t\testrdup(\"0.0.0.0\"), \n\t\t\t\t\t\tAF_INET),\n\t\t\t\t\tcreate_address_node(\n\t\t\t\t\t\testrdup(\"0.0.0.0\"), \n\t\t\t\t\t\tAF_INET),\n\t\t\t\t\t$4, \n\t\t\t\t\tip_file->line_no));\n\t\t}\n\t|\tT_Restrict T_Ipv6_flag T_Default ac_flag_list\n\t\t{\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node(\n\t\t\t\t\tcreate_address_node(\n\t\t\t\t\t\testrdup(\"::\"), \n\t\t\t\t\t\tAF_INET6),\n\t\t\t\t\tcreate_address_node(\n\t\t\t\t\t\testrdup(\"::\"), \n\t\t\t\t\t\tAF_INET6),\n\t\t\t\t\t$4, \n\t\t\t\t\tip_file->line_no));\n\t\t}\n\t|\tT_Restrict T_Source ac_flag_list\n\t\t{\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node(\n\t\t\t\t\tNULL, NULL,\n\t\t\t\t\tenqueue($3, create_ival($2)),\n\t\t\t\t\tip_file->line_no));\n\t\t}\n\t;\n\nac_flag_list\n\t:\t/* Null statement */\n\t\t\t{ $$ = create_queue(); }\n\t|\tac_flag_list access_control_flag\n\t\t\t{ $$ = enqueue($1, create_ival($2)); }\n\t;\n\naccess_control_flag\n\t:\tT_Flake\n\t|\tT_Ignore\n\t|\tT_Kod\n\t|\tT_Mssntp\n\t|\tT_Limited\n\t|\tT_Lowpriotrap\n\t|\tT_Nomodify\n\t|\tT_Nopeer\n\t|\tT_Noquery\n\t|\tT_Noserve\n\t|\tT_Notrap\n\t|\tT_Notrust\n\t|\tT_Ntpport\n\t|\tT_Version\n\t;\n\ndiscard_option_list\n\t:\tdiscard_option_list discard_option\n\t\t\t{ $$ = enqueue($1, $2); }\n\t|\tdiscard_option \n\t\t\t{ $$ = enqueue_in_new_queue($1); }\n\t;\n\ndiscard_option\n\t:\tT_Average T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Minimum T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Monitor T_Integer { $$ = create_attr_ival($1, $2); }\n\t;\n\nmru_option_list\n\t:\tmru_option_list mru_option\n\t\t\t{ $$ = enqueue($1, $2); }\n\t|\tmru_option \n\t\t\t{ $$ = enqueue_in_new_queue($1); }\n\t;\n\nmru_option\n\t:\tT_Incalloc  T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Incmem    T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Initalloc T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Initmem   T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Maxage    T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Maxdepth  T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Maxmem    T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Mindepth  T_Integer { $$ = create_attr_ival($1, $2); }\n\t;\n\n/* Fudge Commands\n * --------------\n */\n\nfudge_command\n\t:\tT_Fudge address fudge_factor_list\n\t\t\t{ enqueue(cfgt.fudge, create_addr_opts_node($2, $3)); }\n\t;\n\nfudge_factor_list\n\t:\tfudge_factor_list fudge_factor\n\t\t\t{ enqueue($1, $2); }\n\t|\tfudge_factor\n\t\t\t{ $$ = enqueue_in_new_queue($1); }\n\t;\n\t\nfudge_factor\n\t:\tT_Time1 number\t\t{ $$ = create_attr_dval($1, $2); }\n\t|\tT_Time2 number\t\t{ $$ = create_attr_dval($1, $2); }\n\t|\tT_Stratum T_Integer\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Refid T_String\t{ $$ = create_attr_sval($1, $2); }\n\t|\tT_Flag1 boolean\t\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Flag2\tboolean\t\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Flag3\tboolean\t\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Flag4 boolean\t\t{ $$ = create_attr_ival($1, $2); }\n\t;\n\n/* Command for System Options\n * --------------------------\n */\n\nsystem_option_command\n\t:\tT_Enable system_option_list\n\t\t\t{ append_queue(cfgt.enable_opts, $2);  }\n\t|\tT_Disable system_option_list\n\t\t\t{ append_queue(cfgt.disable_opts, $2);  }\n\t;\n\nsystem_option_list\n\t:\tsystem_option_list system_option\n\t\t{\n\t\t\tif ($2 != NULL)\n\t\t\t\t$$ = enqueue($1, $2);\n\t\t\telse\n\t\t\t\t$$ = $1;\n\t\t}\n\t|\tsystem_option\n\t\t{\n\t\t\tif ($1 != NULL)\n\t\t\t\t$$ = enqueue_in_new_queue($1);\n\t\t\telse\n\t\t\t\t$$ = create_queue();\n\t\t}\n\t;\n\nsystem_option\n\t:\tT_Auth      { $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Bclient   { $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Calibrate { $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Kernel    { $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Monitor   { $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Ntp       { $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Stats     \n\t\t{ \n\t\t\tif (input_from_file)\n\t\t\t\t$$ = create_attr_ival(T_Flag, $1);\n\t\t\telse {\n\t\t\t\t$$ = NULL;\n\t\t\t\tyyerror(\"enable/disable stats remote configuration ignored\");\n\t\t\t}\n\t\t}\n\t;\n\n/* Tinker Commands\n * ---------------\n */\n\ntinker_command\n\t:\tT_Tinker tinker_option_list  { append_queue(cfgt.tinker, $2); }\n\t;\n\ntinker_option_list\n\t:\ttinker_option_list tinker_option  { $$ = enqueue($1, $2); }\n\t|\ttinker_option { $$ = enqueue_in_new_queue($1); }\n\t;\n\ntinker_option\n\t:\tT_Allan number\t    { $$ = create_attr_dval($1, $2); }\n\t|\tT_Dispersion number { $$ = create_attr_dval($1, $2); }\n\t|\tT_Freq number\t    { $$ = create_attr_dval($1, $2); }\n\t|\tT_Huffpuff number   { $$ = create_attr_dval($1, $2); }\n\t|\tT_Panic number\t    { $$ = create_attr_dval($1, $2); }\n\t|\tT_Step number\t    { $$ = create_attr_dval($1, $2); }\n\t|\tT_Stepout number    { $$ = create_attr_dval($1, $2); }\n\t;\n\n\n/* Miscellaneous Commands\n * ----------------------\n */\n\nmiscellaneous_command\n\t:\tinterface_command\n\t|\tT_Includefile T_String command\n\t\t{\n\t\t\tif (curr_include_level >= MAXINCLUDELEVEL) {\n\t\t\t\tfprintf(stderr, \"getconfig: Maximum include file level exceeded.\\n\");\n\t\t\t\tmsyslog(LOG_ERR, \"getconfig: Maximum include file level exceeded.\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfp[curr_include_level + 1] = F_OPEN(FindConfig($2), \"r\");\n\t\t\t\tif (fp[curr_include_level + 1] == NULL) {\n\t\t\t\t\tfprintf(stderr, \"getconfig: Couldn't open <%s>\\n\", FindConfig($2));\n\t\t\t\t\tmsyslog(LOG_ERR, \"getconfig: Couldn't open <%s>\", FindConfig($2));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tip_file = fp[++curr_include_level];\n\t\t\t}\n\t\t}\n\t|\tT_End\n\t\t{\n\t\t\twhile (curr_include_level != -1)\n\t\t\t\tFCLOSE(fp[curr_include_level--]);\n\t\t}\n\n\t|\tT_Broadcastdelay number\n\t\t\t{ enqueue(cfgt.vars, create_attr_dval($1, $2)); }\n\t|\tT_Calldelay T_Integer\n\t\t\t{ enqueue(cfgt.vars, create_attr_ival($1, $2)); }\n\t|\tT_Tick number\n\t\t\t{ enqueue(cfgt.vars, create_attr_dval($1, $2)); }\n\t|\tT_Driftfile drift_parm\n\t\t\t{ /* Null action, possibly all null parms */ }\n\t|\tT_Leapfile T_String\n\t\t\t{ enqueue(cfgt.vars, create_attr_sval($1, $2)); }\n\n\t|\tT_Pidfile T_String\n\t\t\t{ enqueue(cfgt.vars, create_attr_sval($1, $2)); }\n\t|\tT_Logfile T_String\n\t\t{\n\t\t\tif (input_from_file)\n\t\t\t\tenqueue(cfgt.vars,\n\t\t\t\t\tcreate_attr_sval($1, $2));\n\t\t\telse {\n\t\t\t\tfree($2);\n\t\t\t\tyyerror(\"logfile remote configuration ignored\");\n\t\t\t}\n\t\t}\n\n\t|\tT_Logconfig log_config_list\n\t\t\t{ append_queue(cfgt.logconfig, $2); }\n\t|\tT_Phone string_list\n\t\t\t{ append_queue(cfgt.phone, $2); }\n\t|\tT_Saveconfigdir\tT_String\n\t\t{\n\t\t\tif (input_from_file)\n\t\t\t\tenqueue(cfgt.vars,\n\t\t\t\t\tcreate_attr_sval($1, $2));\n\t\t\telse {\n\t\t\t\tfree($2);\n\t\t\t\tyyerror(\"saveconfigdir remote configuration ignored\");\n\t\t\t}\n\t\t}\n\t|\tT_Setvar variable_assign\n\t\t\t{ enqueue(cfgt.setvar, $2); }\n\t|\tT_Trap ip_address\n\t\t\t{ enqueue(cfgt.trap, create_addr_opts_node($2, NULL)); }\n\t|\tT_Trap ip_address trap_option_list\n\t\t\t{ enqueue(cfgt.trap, create_addr_opts_node($2, $3)); }\n\t|\tT_Ttl integer_list\n\t\t\t{ append_queue(cfgt.ttl, $2); }\n\t|\tT_Qos T_String\n\t\t\t{ enqueue(cfgt.qos, create_attr_sval($1, $2)); }\n\t;\n\t\ndrift_parm\n\t:\tT_String\n\t\t\t{ enqueue(cfgt.vars, create_attr_sval(T_Driftfile, $1)); }\n\t|\tT_String T_Double\n\t\t\t{ enqueue(cfgt.vars, create_attr_dval(T_WanderThreshold, $2));\n\t\t\t  enqueue(cfgt.vars, create_attr_sval(T_Driftfile, $1)); }\n\t|\t/* Null driftfile,  indicated by null string \"\\0\" */\n\t\t\t{ enqueue(cfgt.vars, create_attr_sval(T_Driftfile, \"\\0\")); }\n\t;\n\nvariable_assign\n\t:\tT_String '=' T_String T_Default\n\t\t\t{ $$ = create_setvar_node($1, $3, $4); }\n\t|\tT_String '=' T_String\n\t\t\t{ $$ = create_setvar_node($1, $3, 0); }\n\t;\n\ntrap_option_list\n\t:\ttrap_option_list trap_option\n\t\t\t\t{ $$ = enqueue($1, $2); }\n\t|\ttrap_option\t{ $$ = enqueue_in_new_queue($1); }\n\t;\n\ntrap_option\n\t:\tT_Port T_Integer\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Interface ip_address\t{ $$ = create_attr_pval($1, $2); }\n\t;\n\nlog_config_list\n\t:\tlog_config_list log_config_command { $$ = enqueue($1, $2); }\n\t|\tlog_config_command  { $$ = enqueue_in_new_queue($1); }\n\t;\n\nlog_config_command\n\t:\tT_String\n\t\t{\n\t\t\tchar prefix = $1[0];\n\t\t\tchar *type = $1 + 1;\n\t\t\t\n\t\t\tif (prefix != '+' && prefix != '-' && prefix != '=') {\n\t\t\t\tyyerror(\"Logconfig prefix is not '+', '-' or '='\\n\");\n\t\t\t}\n\t\t\telse\n\t\t\t\t$$ = create_attr_sval(prefix, estrdup(type));\n\t\t\tYYFREE($1);\n\t\t}\n\t;\n\ninterface_command\n\t:\tinterface_nic nic_rule_action nic_rule_class\n\t\t{\n\t\t\tenqueue(cfgt.nic_rules,\n\t\t\t\tcreate_nic_rule_node($3, NULL, $2));\n\t\t}\n\t|\tinterface_nic nic_rule_action T_String\n\t\t{\n\t\t\tenqueue(cfgt.nic_rules,\n\t\t\t\tcreate_nic_rule_node(0, $3, $2));\n\t\t}\n\t;\n\ninterface_nic\n\t:\tT_Interface\n\t|\tT_Nic\n\t;\n\nnic_rule_class\n\t:\tT_All\n\t|\tT_Ipv4\n\t|\tT_Ipv6\n\t|\tT_Wildcard\n\t;\n\nnic_rule_action\n\t:\tT_Listen\n\t|\tT_Ignore\n\t|\tT_Drop\n\t;\n\n\n\n/* Miscellaneous Rules\n * -------------------\n */\n\ninteger_list\n\t:\tinteger_list T_Integer { $$ = enqueue($1, create_ival($2)); }\n\t|\tT_Integer { $$ = enqueue_in_new_queue(create_ival($1)); }\n\t;\n\ninteger_list_range\n\t:\tinteger_list_range integer_list_range_elt\n\t\t\t{ $$ = enqueue($1, $2); }\n\t|\tinteger_list_range_elt\n\t\t\t{ $$ = enqueue_in_new_queue($1); }\n\t;\n\ninteger_list_range_elt\n\t:\tT_Integer\n\t\t\t{ $$ = create_attr_ival('i', $1); }\n\t|\tinteger_range\t\t/* default of $$ = $1 is good */\n\t;\n\ninteger_range\t\t/* limited to unsigned shorts */\n\t:\t'(' T_Integer T_Ellipsis T_Integer ')'\n\t\t\t{ $$ = create_attr_shorts('-', $2, $4); }\n\t;\n\nstring_list\n\t:\tstring_list T_String { $$ = enqueue($1, create_pval($2)); }\n\t|\tT_String { $$ = enqueue_in_new_queue(create_pval($1)); }\n\t;\n\naddress_list\n\t:\taddress_list address { $$ = enqueue($1, $2); }\n\t|\taddress { $$ = enqueue_in_new_queue($1); }\n\t;\n\nboolean\n\t:\tT_Integer\n\t\t{\n\t\t\tif ($1 != 0 && $1 != 1) {\n\t\t\t\tyyerror(\"Integer value is not boolean (0 or 1). Assuming 1\");\n\t\t\t\t$$ = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\t$$ = $1;\n\t\t}\n\t|\tT_True    { $$ = 1; }\n\t|\tT_False   { $$ = 0; }\n\t;\n\nnumber\n\t:\tT_Integer { $$ = (double)$1; }\n\t|\tT_Double\n\t;\n\n\n/* Simulator Configuration Commands\n * --------------------------------\n */\n\nsimulate_command\n\t:\tsim_conf_start '{' sim_init_statement_list sim_server_list '}'\n\t\t{\n\t\t\tcfgt.sim_details = create_sim_node($3, $4);\n\n\t\t\t/* Reset the old_config_style variable */\n\t\t\told_config_style = 1;\n\t\t}\n\t;\n\n/* The following is a terrible hack to get the configuration file to\n * treat newlines as whitespace characters within the simulation.\n * This is needed because newlines are significant in the rest of the\n * configuration file.\n */\nsim_conf_start\n\t:\tT_Simulate { old_config_style = 0; }\n\t;\n\nsim_init_statement_list\n\t:\tsim_init_statement_list sim_init_statement T_EOC { $$ = enqueue($1, $2); }\n\t|\tsim_init_statement T_EOC\t\t\t { $$ = enqueue_in_new_queue($1); }\n\t;\n\nsim_init_statement\n\t:\tT_Beep_Delay '=' number   { $$ = create_attr_dval($1, $3); }\n\t|\tT_Sim_Duration '=' number { $$ = create_attr_dval($1, $3); }\n\t;\n\nsim_server_list\n\t:\tsim_server_list sim_server { $$ = enqueue($1, $2); }\n\t|\tsim_server\t\t   { $$ = enqueue_in_new_queue($1); }\n\t;\n\nsim_server\n\t:\tsim_server_name '{' sim_server_offset sim_act_list '}'\n\t\t{ $$ = create_sim_server($1, $3, $4); }\n\t;\n\nsim_server_offset\n\t:\tT_Server_Offset '=' number T_EOC { $$ = $3; }\n\t;\n\nsim_server_name\n\t:\tT_Server '=' address { $$ = $3; }\n\t;\n\nsim_act_list\n\t:\tsim_act_list sim_act { $$ = enqueue($1, $2); }\n\t|\tsim_act\t\t     { $$ = enqueue_in_new_queue($1); }\n\t;\n\nsim_act\n\t:\tT_Duration '=' number '{' sim_act_stmt_list '}'\n\t\t\t{ $$ = create_sim_script_info($3, $5); }\n\t;\n\nsim_act_stmt_list\n\t:\tsim_act_stmt_list sim_act_stmt T_EOC { $$ = enqueue($1, $2); }\n\t|\tsim_act_stmt T_EOC\t\t     { $$ = enqueue_in_new_queue($1); }\n\t;\n\nsim_act_stmt\n\t:\tT_Freq_Offset '=' number\n\t\t\t{ $$ = create_attr_dval($1, $3); }\n\t|\tT_Wander '=' number\n\t\t\t{ $$ = create_attr_dval($1, $3); }\n\t|\tT_Jitter '=' number\n\t\t\t{ $$ = create_attr_dval($1, $3); }\n\t|\tT_Prop_Delay '=' number\n\t\t\t{ $$ = create_attr_dval($1, $3); }\n\t|\tT_Proc_Delay '=' number\n\t\t\t{ $$ = create_attr_dval($1, $3); }\n\t;\n\n\n%%\n\nvoid yyerror (char *msg)\n{\n\tint retval;\n\n\tip_file->err_line_no = ip_file->prev_token_line_no;\n\tip_file->err_col_no = ip_file->prev_token_col_no;\n\t\n\tmsyslog(LOG_ERR, \n\t\t\"line %d column %d %s\", \n\t\tip_file->err_line_no,\n\t\tip_file->err_col_no,\n\t\tmsg);\n\tif (!input_from_file) {\n\t\t/* Save the error message in the correct buffer */\n\t\tretval = snprintf(remote_config.err_msg + remote_config.err_pos,\n\t\t\t\t  MAXLINE - remote_config.err_pos,\n\t\t\t\t  \"column %d %s\",\n\t\t\t\t  ip_file->err_col_no, msg);\n\n\t\t/* Increment the value of err_pos */\n\t\tif (retval > 0)\n\t\t\tremote_config.err_pos += retval;\n\n\t\t/* Increment the number of errors */\n\t\t++remote_config.no_errors;\n\t}\n}\n\n\n/*\n * token_name - convert T_ token integers to text\n *\t\texample: token_name(T_Server) returns \"T_Server\"\n */\nconst char *\ntoken_name(\n\tint token\n\t)\n{\n\treturn yytname[YYTRANSLATE(token)];\n}\n\n\n/* Initial Testing function -- ignore\nint main(int argc, char *argv[])\n{\n\tip_file = FOPEN(argv[1], \"r\");\n\tif (!ip_file) {\n\t\tfprintf(stderr, \"ERROR!! Could not open file: %s\\n\", argv[1]);\n\t}\n\tkey_scanner = create_keyword_scanner(keyword_list);\n\tprint_keyword_scanner(key_scanner, 0);\n\tyyparse();\n\treturn 0;\n}\n*/\n\n"], "fixing_code": ["* [Bug 1593] ntpd abort in free() with logconfig syntax error.\n* [Bug 1581] from 4.2.6p3-beta1: ntp_intres.c size_t printf format\n  string mismatch.\n* [Bug 1586] ntpd 4.2.7p40 doesn't write to syslog after fork on QNX.\n* Avoid race with parallel builds using same source directory in\n  scripts/genver by using build directory for temporary files.\n* orphanwait documentation updates.\n(4.2.7p40) 2010/07/12 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1395] ease ntpdate elimination with ntpd -w/--wait-sync\n* [Bug 1396] allow servers on ntpd command line like ntpdate\n(4.2.7p39) 2010/07/09 Released by Harlan Stenn <stenn@ntp.org>\n* Fix typo in driver28.html.\n* [Bug 1581] from 4.2.6p2: size_t printf format string mismatches, IRIG\n  string buffers undersized.  Mostly backported from earlier ntp-dev\n  fixes by J\u00fcrgen Perlinger.\n(4.2.7p38) 2010/06/20 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1570] backported to 4.2.6p2-RC7.\n* [Bug 1575] from 4.2.6p2-RC7: use 'snprintf' with LIB_BUFLENGTH in\n  inttoa.c, tvtoa.c and utvtoa.c\n* [Bug 1576] backported to 4.2.6p2-RC7.\n* Typo fix in a comment in ntp_proto.c.\n(4.2.7p37) 2010/06/19 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1576] sys/sysctl.h depends on sys/param.h on OpenBSD.\n(4.2.7p36) 2010/06/15 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1560] Initial support for orphanwait, from Dave Mills.\n* clock_filter()/reachability fixes from Dave Mills.\n(4.2.7p35) 2010/06/12 Released by Harlan Stenn <stenn@ntp.org>\n* Rewrite of multiprecision macros in 'ntp_fp.h' from J. Perlinger\n  <perlinger@ntp.org>\n* [Bug 715] from 4.2.6p2-RC6: libisc Linux IPv6 interface iteration\n  drops multicast flags.\n(4.2.7p34) 2010/06/05 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1570] serial clock drivers get outdated input from kernel tty\n  line buffer after startup\n(4.2.7p33) 2010/06/04 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1561] from 4.2.6p2-RC5: ntpq, ntpdc \"passwd\" prompts for MD5\n  password w/SHA1.\n* [Bug 1565] from 4.2.6p2-RC5: sntp/crypto.c compile fails on MacOS over\n  vsnprintf().\n* from 4.2.6p2-RC5: Windows port: do not exit in\n  ntp_timestamp_from_counter() without first logging the reason.\n(4.2.7p32) 2010/05/19 Released by Harlan Stenn <stenn@ntp.org>\n* Copyright file cleanup from Dave Mills.\n* [Bug 1555] from 4.2.6p2-RC4: sntp illegal C (mixed code and\n  declarations).\n* [Bug 1558] pool prototype associations have 0.0.0.0 for remote addr.\n* configure.ac: add --disable-autokey, #define AUTOKEY to enable future\n  support for building without Autokey, but with OpenSSL for its digest\n  algorithms (hash functions).  Code must be modified to use #ifdef\n  AUTOKEY instead of #ifdef OPENSSL where appropriate to complete this.\n* include/ntp_crypto.h: make assumption AUTOKEY implies OPENSSL explicit.\n(4.2.7p31) 2010/05/11 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1325] from 4.2.6p2-RC3: unreachable code sntp recv_bcst_data().\n* [Bug 1459] from 4.2.6p2-RC3: sntp MD5 authentication does not work\n  with ntpd.\n* [Bug 1552] from 4.2.6p2-RC3: update and complete broadcast and crypto\n  features in sntp.\n* [Bug 1553] from 4.2.6p2-RC3: sntp/configure.ac OpenSSL support.\n* from 4.2.6p2-RC3: Escape unprintable characters in a refid in ntpq -p\n  billboard.\n* from 4.2.6p2-RC3: Simplify hash client code by providing OpenSSL\n  EVP_*() API when built without OpenSSL.  (already in 4.2.7)\n* from 4.2.6p2-RC3: Do not depend on ASCII in sntp.\n(4.2.7p30) 2010/05/06 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1526] ntpd DNS pipe read EINTR with no network at startup.\n* Update the ChangeLog entries when merging items from -stable.\n(4.2.7p29) 2010/05/04 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1542] ntpd mrulist response may have incorrect last.older.\n* [Bug 1543] ntpq mrulist must refresh nonce when retrying.\n* [Bug 1544] ntpq mrulist sscanf timestamp format mismatch on 64-bit.\n* Windows compiling hints/winnt.html update from G. Sunil Tej.\n(4.2.7p28) 2010/05/03 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1512] from 4.2.6p2-RC3: ntpsnmpd should connect to net-snmpd\n  via a unix-domain socket by default.\n  Provide a command-line 'socket name' option.\n* [Bug 1538] from 4.2.6p2-RC3: update refclock_nmea.c's call to\n  getprotobyname().\n* [Bug 1541] from 4.2.6p2-RC3: Fix wrong keyword for \"maxclock\".\n(4.2.7p27) 2010/04/27 Released by Harlan Stenn <stenn@ntp.org>\n(4.2.7p26) 2010/04/24 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1465] from 4.2.6p2-RC2: Make sure time from TS2100 is not\n  invalid (backport from -dev).\n* [Bug 1528] from 4.2.6p2-RC2: Fix EDITLINE_LIBS link order for ntpq\n  and ntpdc.\n* [Bug 1531] Require nonce with mrulist requests.\n* [Bug 1532] Remove ntpd support for ntpdc's monlist in favor of ntpq's\n  mrulist.\n* [Bug 1534] from 4.2.6p2-RC2: conflicts with VC++ 2010 errno.h.\n* [Bug 1535] from 4.2.6p2-RC2: \"restrict -4 default\" and \"restrict\n  -6 default\" ignored.\n(4.2.7p25) 2010/04/20 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1528] from 4.2.6p2-RC2: Remove --with-arlib from br-flock.\n* [Bug 1503] [Bug 1504] [Bug 1518] [Bug 1522] from 4.2.6p2-RC2:\n  all of which were fixed in 4.2.7 previously. \n(4.2.7p24) 2010/04/13 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1390] Control PPS on the Oncore M12.\n* [Bug 1518] Windows ntpd should lock to one processor more\n  conservatively.\n* [Bug 1520] '%u' formats for size_t gives warnings with 64-bit builds.\n* [Bug 1522] Enable range syntax \"trustedkey (301 ... 399)\".\n* Documentation updates for 4.2.7p22 changes and additions, updating\n  ntpdc.html, ntpq.html, accopt.html, confopt.html, manyopt.html,\n  miscopt.html, and miscopt.txt.\n* accopt.html: non-ntpport doc changes from Dave Mills.\n* Modify full MRU list preemption when full to match \"discard monitor\"\n  documentation, by removing exception for count == 1.\n(4.2.7p23) 2010/04/04 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1516] unpeer by IP address fails, DNS name works.\n* [Bug 1517] ntpq and ntpdc should verify reverse DNS before use.\n  ntpq and ntpdc now use the following format for showing purported\n  DNS names from IP address \"reverse\" DNS lookups when the DNS name\n  does not exist or does not include the original IP address among\n  the results: \"192.168.1.2 (fake.dns.local)\".\n(4.2.7p22) 2010/04/02 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1432] Don't set inheritable flag for linux capabilities.\n* [Bug 1465] Make sure time from TS2100 is not invalid.\n* [Bug 1483] AI_NUMERICSERV undefined in 4.2.7p20.\n* [Bug 1497] fudge is broken by getnetnum() change.\n* [Bug 1503] Auto-enabling of monitor for \"restrict ... limited\" wrong.\n* [Bug 1504] ntpdate tickles ntpd \"discard minimum 1\" rate limit if\n  \"restrict ... limited\" is used.\n* ntpdate: stop querying source after KoD packet response, log it.\n* ntpdate: rate limit each server to 2s between packets.\n* From J. N. Perlinger: avoid pointer wraparound warnings in dolfptoa(),\n  printf format mismatches with 64-bit size_t.\n* Broadcast client (ephemeral) associations should be demobilized only\n  if they are not heard from for 10 consecutive polls, regardless of\n  surviving the clock selection.  Fix from David Mills.\n* Add \"ntpq -c ifstats\" similar to \"ntpdc -c ifstats\".\n* Add \"ntpq -c sysstats\" similar to \"ntpdc -c sysstats\".\n* Add \"ntpq -c monstats\" to show monlist knobs and stats.\n* Add \"ntpq -c mrulist\" similar to \"ntpdc -c monlist\" but not\n  limited to 600 rows, and with filtering and sorting options:\n  ntpq -c \"mrulist mincount=2 laddr=192.168.1.2 sort=-avgint\"\n  ntpq -c \"mrulist sort=addr\"\n  ntpq -c \"mrulist mincount=2 sort=count\"\n  ntpq -c \"mrulist sort=-lstint\"\n* Modify internal representation of MRU list to use l_fp fixed-point\n  NTP timestamps instead of seconds since startup.  This increases the\n  resolution and substantially improves accuracy of sorts involving\n  timestamps, at the cost of flushing all MRU entries when the clock is\n  stepped, to ensure the timestamps can be compared with the current\n  get_systime() results.\n* Add ntp.conf \"mru\" directive to configure MRU parameters, such as\n  \"mru mindepth 600 maxage 64 maxdepth 5000 maxmem 1024\" or\n  \"mru initalloc 0 initmem 16 incalloc 99 incmem 4\".  Several pairs are\n  equivalent with one in units of MRU entries and its twin in units of\n  kilobytes of memory, so the last one used in ntp.conf controls:\n  maxdepth/maxmem, initalloc/initmem, incalloc/incmem.  With the above\n  values, ntpd will preallocate 16kB worth of MRU entries, allocating\n  4kB worth each time more are needed, with a hard limit of 1MB of MRU\n  entries.  Until there are more than 600 entries none would be reused.\n  Then only entries for addresses last seen 64 seconds or longer ago are\n  reused.\n* Limit \"ntpdc -c monlist\" response in ntpd to 600 entries, the previous\n  overall limit on the MRU list depth which was driven by the monlist\n  implementation limit of one request with a single multipacket\n  response.\n* New \"pool\" directive implementation modeled on manycastclient.\n* Do not abort on non-ASCII characters in ntp.conf, ignore them.\n* ntpq: increase response reassembly limit from 24 to 32 packets, add\n  discussion in comment regarding results with even larger MAXFRAGS.\n* ntpq: handle \"passwd MYPASSWORD\" (without prompting) as with ntpdc.\n* ntpdc: do not examine argument to \"passwd\" if not supplied.\n* configure: remove check for pointer type used with qsort(), we\n  require ANSI C which mandates void *.\n* Reset sys_kodsent to 0 in proto_clr_stats().\n* Add sptoa()/sockporttoa() similar to stoa()/socktoa() adding :port.\n* Use memcpy() instead of memmove() when buffers can not overlap.\n* Remove sockaddr_storage from our sockaddr_u union of sockaddr,\n  sockaddr_in, and sockaddr_in6, shaving about 100 bytes from its size\n  and substantially decreasing MRU entry memory consumption.\n* Extend ntpq readvar (alias rv) to allow fetching up to three named\n  variables in one operation:  ntpq -c \"rv 0 version offset frequency\".\n* ntpq: use srchost variable to show .POOL. prototype associations'\n  hostname instead of address 0.0.0.0.\n* \"restrict source ...\" configures override restrictions for time\n  sources, allows tight default restrictions to be used with the pool\n  directive (where server addresses are not known in advance).\n* Ignore \"preempt\" modifier on manycastclient and pool prototype\n  associations.  The resulting associations are preemptible, but the\n  prototype must not be.\n* Maintain and use linked list of associations (struct peer) in ntpd,\n  avoiding walking 128 hash table entries to iterate over peers.\n* Remove more workarounds unneeded since we require ISO C90 AKA ANSI C:\n  - remove fallback implementations for memmove(), memset, strstr().\n  - do not test for atexit() or memcpy().\n* Collapse a bunch of code duplication in ntpd/ntp_restrict.c added with\n  support for IPv6.\n* Correct some corner case failures in automatically enabling the MRU\n  list if any \"restrict ... limited\" is in effect, and in disabling MRU\n  maintenance. (ntp_monitor.c, ntp_restrict.c)\n* Reverse the internal sort order of the address restriction lists, but\n  preserve the same behavior.  This allows removal of special-case code\n  related to the default restrictions and more straightforward lookups\n  of restrictions for a given address (now, stop on first match).\n* Move ntp_restrict.c MRU doubly-linked list maintenance code into\n  ntp_lists.h macros, allowing more duplicated source excision.\n* Repair ntpdate.c to no longer test HAVE_TIMER_SETTIME.\n* Do not reference peer_node/unpeer_node after freeing when built with\n  --disable-saveconfig and using DNS.\n(4.2.7p21) 2010/03/31 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1514] from 4.2.6p1-RC6: Typo in ntp_proto.c: fabs(foo < .4)\n  should be fabs(foo) < .4.\n* [Bug 1464] from 4.2.6p1-RC6: synchronization source wrong for\n  refclocks ARCRON_MSF (27) and SHM (28).\n* From 4.2.6p1-RC6: Correct Windows port's refclock_open() to\n  return 0 on failure not -1.\n* From 4.2.6p1-RC6: Correct CHU, dumbclock, and WWVB drivers to\n  check for 0 returned from refclock_open() on failure.\n* From 4.2.6p1-RC6: Correct \"SIMUL=4 ./flock-build -1\" to\n  prioritize -1/--one.\n* [Bug 1306] constant conditionals in audio_gain().\n(4.2.7p20) 2010/02/13 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1483] hostname in ntp.conf \"restrict\" parameter rejected.\n* Use all addresses for each restrict by hostname.\n* Use async DNS to resolve trap directive hostnames.\n(4.2.7p19) 2010/02/09 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1338] Update the association type codes in ntpq.html.\n* [Bug 1478] from 4.2.6p1-RC5: linking fails: EVP_MD_pkey_type.\n* [Bug 1479] from 4.2.6p1-RC5: not finding readline headers.\n* [Bug 1484] from 4.2.6p1-RC5: ushort is not defined in QNX6.\n(4.2.7p18) 2010/02/07 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1480] from 4.2.6p1-RC5: snprintf() cleanup caused \n  unterminated refclock IDs.\n* Stop using getaddrinfo() to convert numeric address strings to on-wire\n  addresses in favor of is_ip_address() alone.\n(4.2.7p17) 2010/02/05 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1477] from 4.2.6p1-RC5: First non-gmake make in clone\n  w/VPATH can't make COPYRIGHT.\n* Attempts to cure CID 108 CID 118 CID 119 TAINTED_SCALAR warnings.\n* Broaden ylwrap workaround VPATH_HACK to all non-GNU make.\n(4.2.7p16) 2010/02/04 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1474] from 4.2.6p1-RC4: ntp_keygen LCRYPTO after libntp.a.\n* Include 4.2.6p1-RC4: Remove arlib.\n(4.2.7p15) 2010/02/03 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1455] from 4.2.6p1: ntpd does not try /etc/ntp.audio.\n* Include 4.2.6p1: Convert many sprintf() calls to snprintf(), also\n  strcpy(), strcat().\n* Include 4.2.6p1: Fix widely cut-n-pasted bug in refclock shutdown\n  after failed start.\n* Include 4.2.6p1: Remove some dead code checking for emalloc()\n  returning NULL.\n(4.2.7p14) 2010/02/02 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1338] ntpq displays incorrect association type codes.\n* [Bug 1469] u_int32, int32 changes broke HP-UX 10.20 build.\n* [Bug 1470] from 4.2.6p1: \"make distdir\" compiles keyword-gen.\n* [Bug 1471] CID 120 CID 121 CID 122 is_ip_address() uninit family.\n* [Bug 1472] CID 116 CID 117 minor warnings in new DNS code.\n* [Bug 1473] from 4.2.6p1: \"make distcheck\" version.m4 error.\n(4.2.7p13) 2010/01/31 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1467] from 4.2.6p1: Fix bogus rebuild of sntp/sntp.html.\n(4.2.7p12) 2010/01/30 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1468] 'make install' broken for root on default NFS mount.\n(4.2.7p11) 2010/01/28 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 47] Debugging and logging do not work after a fork.\n* [Bug 1010] getaddrinfo() could block and thus should not be called by\n  the main thread/process.\n* New async DNS resolver in ntpd allows nonblocking queries anytime,\n  instead of only once at startup.\n(4.2.7p10) 2010/01/24 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1140] from 4.2.6p1-RC5: Clean up debug.html, decode.html,\n  and ntpq.html.\n* Include 4.2.6p1-RC3: Use TZ=UTC instead of TZ= when calling date in\n  scripts/mkver.in .\n* [Bug 1448] from 4.2.6p1-RC3: Some macros not correctly conditionally\n  or absolutely defined on Windows.\n* [Bug 1449] from 4.2.6p1-RC3: ntpsim.h in ntp_config.c should be used\n  conditionally.\n* [Bug 1450] from 4.2.6p1-RC3: Option to exclude warnings not\n  unconditionally defined on Windows.\n(4.2.7p9) 2010/01/13 Released by Harlan Stenn <stenn@ntp.org>\n(4.2.7p8) 2010/01/12 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 702] ntpd service logic should use libopts to examine cmdline.\n* [Bug 1451] from 4.2.6p1-RC3: sntp leaks KoD entry updating.\n* [Bug 1453] from 4.2.6p1-RC3: Use $CC in config.cache filename.\n(4.2.7p7) 2009/12/30 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 620] ntpdc getresponse() esize != *rsize s/b size != *rsize.\n* [Bug 1446] 4.2.7p6 requires autogen, missing ntpd.1, *.texi, *.menu.\n(4.2.7p6) 2009/12/28 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1443] Remove unnecessary dependencies on ntp_io.h\n* [Bug 1442] Move Windows functions into libntp files\n* [Bug 1127] from 4.2.6p1-RC3: Check the return of X590_verify().\n* [Bug 1439] from 4.2.6p1-RC3: .texi gen after binary is linked.\n* [Bug 1440] from 4.2.6p1-RC3: Update configure.ac to support kfreebsd.\n* [Bug 1445] from 4.2.6p1-RC3: IRIX does not have -lcap or support\n  linux capabilities.\n(4.2.7p5) 2009/12/25 Released by Harlan Stenn <stenn@ntp.org>\n* Include 4.2.6p1-RC2\n(4.2.7p4) 2009/12/24 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1429] ntpd -4 option does not reliably force IPv4 resolution.\n* [Bug 1431] System headers must come before ntp headers in ntp_intres.c .\n(4.2.7p3) 2009/12/22 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1426] scripts/VersionName needs . on the search path.\n* [Bug 1427] quote missing in ./build - shows up on NetBSD.\n* [Bug 1428] Use AC_HEADER_RESOLV to fix breaks from resolv.h\n(4.2.7p2) 2009/12/20 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1419] ntpdate, ntpdc, sntp, ntpd ignore configure --bindir.\n* [Bug 1421] add util/tg2, a clone of tg that works on Linux, NetBSD, and\n  FreeBSD\n(4.2.7p1) 2009/12/15 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1348] ntpd Windows port should wait for sendto() completion.\n* [Bug 1413] test OpenSSL headers regarding -Wno-strict-prototypes.\n* [Bug 1418] building ntpd/ntpdc/ntpq statically with ssl fails.\n(4.2.7p0) 2009/12/13 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1412] m4/os_cflags.m4 caches results that depend on $CC.\n* [Bug 1414] Enable \"make distcheck\" success with BSD make.\n(4.2.7) 2009/12/09 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1407] configure.ac: recent GNU Make -v does not include \"version\".\n---\n(4.2.6p2) 2010/07/09 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1581] size_t printf format string mismatches, IRIG string buffers\n  undersized.  Mostly backported from earlier ntp-dev fixes by J\u00fcrgen\n  Perlinger.\n\n---\n(4.2.6p2-RC7) 2010/06/19 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1570] serial clock drivers get outdated input from kernel tty\n  line buffer after startup\n* [Bug 1575] use 'snprintf' with LIB_BUFLENGTH in inttoa.c, tvtoa.c and\n  utvtoa.c\n* [Bug 1576] sys/sysctl.h depends on sys/param.h on OpenBSD.\n\n---\n(4.2.6p2-RC6) 2010/06/12 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 715] libisc Linux IPv6 interface iteration drops multicast flags.\n\n---\n(4.2.6p2-RC5) 2010/06/03 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1561] ntpq, ntpdc \"passwd\" prompts for MD5 password w/SHA1.\n* [Bug 1565] sntp/crypto.c compile fails on MacOS over vsnprintf().\n* Windows port: do not exit in ntp_timestamp_from_counter() without\n  first logging the reason.\n* Support \"passwd blah\" syntax in ntpq.\n\n---\n(4.2.6p2-RC4) 2010/05/19 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1555] 4.2.6p2-RC3 sntp illegal C (mixed code and declarations).\n\n---\n(4.2.6p2-RC3) 2010/05/11 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1325] unreachable code in sntp recv_bcst_data().\n* [Bug 1459] sntp MD5 authentication does not work with ntpd.\n* [Bug 1512] ntpsnmpd should connect to net-snmpd via a unix-domain\n  socket by default.  Provide a command-line 'socket name' option.\n* [Bug 1538] update refclock_nmea.c's call to getprotobyname().\n* [Bug 1541] Fix wrong keyword for \"maxclock\".\n* [Bug 1552] update and complete broadcast and crypto features in sntp.\n* [Bug 1553] sntp/configure.ac OpenSSL support.\n* Escape unprintable characters in a refid in ntpq -p billboard.\n* Simplify hash client code by providing OpenSSL EVP_*() API when built\n  without OpenSSL.  (from ntp-dev)\n* Do not depend on ASCII values for ('A' - '0'), ('a' - '0') in sntp.\n* Windows compiling hints/winnt.html update from G. Sunil Tej.\n\n---\n(4.2.6p2-RC2) 2010/04/27 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1465] Make sure time from TS2100 is not invalid (backport from\n  ntp-dev).\n* [Bug 1528] Fix EDITLINE_LIBS link order for ntpq and ntpdc.\n* [Bug 1534] win32/include/isc/net.h conflicts with VC++ 2010 errno.h.\n* [Bug 1535] \"restrict -4 default\" and \"restrict -6 default\" ignored.\n* Remove --with-arlib from br-flock.\n\n---\n(4.2.6p2-RC1) 2010/04/18 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1503] Auto-enabling of monitor for \"restrict ... limited\" wrong.\n* [Bug 1504] ntpdate tickles ntpd \"discard minimum 1\" rate limit if\n  \"restrict ... limited\" is used.\n* [Bug 1518] Windows ntpd should lock to one processor more\n  conservatively.\n* [Bug 1522] Enable range syntax \"trustedkey (301 ... 399)\".\n* Update html/authopt.html controlkey, requestkey, and trustedkey docs.\n\n---\n(4.2.6p1) 2010/04/09 Released by Harlan Stenn <stenn@ntp.org>\n(4.2.6p1-RC6) 2010/03/31 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1514] Typo in ntp_proto.c: fabs(foo < .4) should be fabs(foo) < .4.\n* [Bug 1464] synchronization source wrong for refclocks ARCRON_MSF (27)\n  and SHM (28).\n* Correct Windows port's refclock_open() to return 0 on failure not -1.\n* Correct CHU, dumbclock, and WWVB drivers to check for 0 returned from\n  refclock_open() on failure.\n* Correct \"SIMUL=4 ./flock-build -1\" to prioritize -1/--one.\n\n---\n(4.2.6p1-RC5) 2010/02/09 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1140] Clean up debug.html, decode.html, and ntpq.html.\n* [Bug 1438] Remove dead code from sntp/networking.c.\n* [Bug 1477] 1st non-gmake make in clone w/VPATH can't make COPYRIGHT.\n* [Bug 1478] linking fails with undefined reference EVP_MD_pkey_type.\n* [Bug 1479] Compilation fails because of not finding readline headers.\n* [Bug 1480] snprintf() cleanup caused unterminated refclock IDs.\n* [Bug 1484] ushort is not defined in QNX6.\n\n---\n(4.2.6p1-RC4) 2010/02/04 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1455] ntpd does not try /etc/ntp.audio as documented.\n* [Bug 1467] Fix bogus rebuild of sntp/sntp.html\n* [Bug 1470] \"make distdir\" in $srcdir builds keyword-gen, libntp.a.\n* [Bug 1473] \"make distcheck\" before build can't make sntp/version.m4.\n* [Bug 1474] ntp_keygen needs LCRYPTO after libntp.a.\n* Convert many sprintf() calls to snprintf(), also strcpy(), strcat().\n* Fix widely cut-n-pasted bug in refclock shutdown after failed start.\n* Remove some dead code checking for emalloc() returning NULL.\n* Remove arlib.\n\n---\n(4.2.6p1-RC3) 2010/01/24 Released by Harlan Stenn <stenn@ntp.org>\n\n* Use TZ=UTC instead of TZ= when calling date in scripts/mkver.in .\n* [Bug 1448] Some macros not correctly conditionally or absolutely defined\n  on Windows.\n* [Bug 1449] ntpsim.h in ntp_config.c should be used conditionally.\n* [Bug 1450] Option to exclude warnings not unconditionally defined on Windows.\n* [Bug 1127] Properly check the return of X590_verify() - missed one.\n* [Bug 1439] .texi generation must wait until after binary is linked.\n* [Bug 1440] Update configure.ac to support kfreebsd.\n* [Bug 1445] IRIX does not have -lcap or support linux capabilities.\n* [Bug 1451] CID 115: sntp leaks KoD entry when updating existing.\n* [Bug 1453] Use $CC in config.cache filename in ./build script.\n\n---\n(4.2.6p1-RC2) 2009/12/25 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1411] Fix status messages in refclock_oncore.c.\n* [Bug 1416] MAXDNAME undefined on Solaris 2.6.\n* [Bug 1419] ntpdate, ntpdc, sntp, ntpd ignore configure --bindir.\n* [Bug 1424] Fix check for rtattr (rtnetlink.h).\n* [Bug 1425] unpeer by association ID sets up for duplicate free().\n* [Bug 1426] scripts/VersionName needs . on the search path.\n* [Bug 1427] quote missing in ./build - shows up on NetBSD.\n* [Bug 1428] Use AC_HEADER_RESOLV to fix breaks from resolv.h\n* [Bug 1429] ntpd -4 option does not reliably force IPv4 resolution.\n* [Bug 1431] System headers must come before ntp headers in ntp_intres.c .\n* [Bug 1434] HP-UX 11 ip_mreq undeclared, _HPUX_SOURCE helps some.\n* [Bug 1435] sntp: Test for -lresolv using the same tests as in ntp.\n\n---\n(4.2.6p1-RC1) 2009/12/20 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1409] Put refclock_neoclock4x.c under the NTP COPYRIGHT notice.\n  This should allow debian and other distros to add this refclock driver\n  in further distro releases.\n  Detect R2 hardware releases.\n* [Bug 1412] m4/os_cflags.m4 caches results that depend on $CC.\n* [Bug 1413] test OpenSSL headers regarding -Wno-strict-prototypes.\n* [Bug 1414] Enable \"make distcheck\" success with BSD make.\n* [Bug 1415] Fix Mac OS X link problem.\n* [Bug 1418] building ntpd/ntpdc/ntpq statically with ssl fails.\n* Build infrastructure updates to enable beta releases of ntp-stable.\n\n---\n(4.2.6) 2009/12/09 Released by Harlan Stenn <stenn@ntp.org>\n* [Sec 1331] from4.2.4p8: DoS with mode 7 packets - CVE-2009-3563.\n* [Bug 508] Fixed leap second handling for Windows.\n(4.2.5p250-RC) 2009/11/30 Released by Harlan Stenn <stenn@ntp.org>\n* sntp documentation updates.\n* [Bug 761] internal resolver does not seem to honor -4/-6 qualifiers\n* [Bug 1386] Deferred DNS doesn't work on NetBSD\n* [Bug 1391] avoid invoking autogen twice for .c and .h files.\n* [Bug 1397] shmget() refclock_shm failing because of file mode.\n* Pass no_needed to ntp_intres as first part of fixing [Bug 975].\n* Add ./configure --enable-force-defer-DNS to help debugging.\n(4.2.5p249-RC) 2009/11/28 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1400] An empty KOD DB file causes sntp to coredump.\n* sntp: documentation cleanup.\n* sntp: clean up some error messages.\n* sntp: Use the precision to control how many offset digits are shown.\n* sntp: Show root dispersion.\n* Cleanup from the automake/autoconf upgrades.\n(4.2.5p248-RC) 2009/11/26 Released by Harlan Stenn <stenn@ntp.org>\n* Prepare for the generation of sntp.html.\n* Documentation changes from Dave Mills.\n* [Bug 1387] Storage leak in ntp_intres (minor).\n* [Bug 1389] buffer overflow in refclock_oncore.c\n* [Bug 1391] .texi usage text from installed, not built binaries.\n* [Bug 1392] intres retries duplicate assocations endlessly.\n* Correct *-opts.h dependency so default 'get' action isn't used.\n(4.2.5p247-RC) 2009/11/20 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1142] nodebug builds shed no light on -d, -D option failure.\n* [Bug 1179] point out the problem with -i/--jaildir and -u/--user when\n  they are disabled by configure.\n* [Bug 1308] support systems that lack fork().\n* [Bug 1343] sntp doesn't link on Solaris 7, needs -lresolv.\n(4.2.5p246-RC) 2009/11/17 Released by Harlan Stenn <stenn@ntp.org>\n* Upgrade to autogen-5.10\n* [Bug 1378] Unnecessary resetting of peers during interface update.\n* [Bug 1382] p245 configure --disable-dependency-tracking won't build.\n* [Bug 1384] ntpq :config core dumped with a blank password.\n(4.2.5p245-RC) 2009/11/14 Released by Harlan Stenn <stenn@ntp.org>\n* Cleanup from Dave Mills.\n* [Bug 1343] sntp illegal C does not compile on Solaris 7.\n* [Bug 1381] Version .deps generated include file dependencies to allow\n  known dependency-breaking changes to force .deps to be cleaned,\n  triggered by changing the contents of deps-ver and/or sntp/deps-ver.\n(4.2.5p244-RC) 2009/11/12 Released by Harlan Stenn <stenn@ntp.org>\n* keygen.html updates from Dave Mills.\n* [Bug 1003] ntpdc unconfig command doesn't prompt for keyid.\n* [Bug 1376] Enable authenticated ntpq and ntpdc using newly-available\n  digest types.\n* ntp-keygen, Autokey OpenSSL build vs. run version mismatch is now a\n  non-fatal warning.\n(4.2.5p243-RC) 2009/11/11 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1226] Fix deferred DNS lookups.\n* new crypto signature cleanup.\n(4.2.5p242-RC) 2009/11/10 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1363] CID 92 clarify fallthrough case in clk_trimtsip.c\n* [Bug 1366] ioctl(TIOCSCTTY, 0) fails on NetBSD *[0-2].* > 3.99.7.\n* [Bug 1368] typos in libntp --without-crypto case\n* [Bug 1371] deferred DNS lookup failing with INFO_ERR_AUTH.\n* CID 87 dead code in ntpq.c atoascii().\n* Fix authenticated ntpdc, broken in p240.\n* Stub out isc/mem.h, shaving 47k from a MIPS ntpd binary.\n* Shrink keyword scanner FSM entries from 64 to 32 bits apiece.\n* Documention updates from Dave Mills.\n* authkeys.c cleanup from Dave Mills.\n(4.2.5p241-RC) 2009/11/07 Released by Harlan Stenn <stenn@ntp.org>\n* html/authopt.html update from Dave Mills.\n* Remove unused file from sntp/Makefile.am's distribution list.\n* new crypto signature cleanup.\n(4.2.5p240-RC) 2009/11/05 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1364] clock_gettime() not detected, need -lrt on Debian 5.0.3.\n* Provide all of OpenSSL's signature methods for ntp.keys (FIPS 140-2).\n(4.2.5p239-RC) 2009/10/30 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1357] bogus assert from refclock_shm.\n* [Bug 1359] Debug message cleanup.\n* CID 101: more pointer/array cleanup.\n* [Bug 1356] core dump from refclock_nmea when can't open /dev/gpsU.\n* [Bug 1358] AIX 4.3 sntp/networking.c IPV6_JOIN_GROUP undeclared.\n* CID 101: pointer/array cleanup.\n(4.2.5p238-RC) 2009/10/27 Released by Harlan Stenn <stenn@ntp.org>\n* Changes from Dave Mills.\n* driver4.html updates from Dave Mills.\n* [Bug 1252] PPSAPI cleanup on ntpd/refclock_wwvb.c.\n* [Bug 1354] libtool error building after bootstrap with Autoconf 2.64.\n* Allow NTP_VPATH_HACK configure test to handle newer gmake versions.\n* CIDs 94-99 make it more clearly impossible for sock_hash() to return\n  a negative number.\n* CID 105, 106 ensure ntpdc arrays are not overrun even if callers\n  misbehave.\n* CID 113 use va_end() in refclock_true.c true_debug().\n* Get rid of configure tests for __ss_family and __ss_len when the more\n  common ss_family and ss_len are present.\n(4.2.5p237-RC) 2009/10/26 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 610] NMEA support for using PPSAPI on a different device.\n* [Bug 1238] use only fudge time2 to offset NMEA serial timestamp.\n* [Bug 1355] ntp-dev won't compile on OpenBSD 4.6.\n(4.2.5p236-RC) 2009/10/22 Released by Harlan Stenn <stenn@ntp.org>\n* Cleanup from Dave Mills.\n* [Bug 1343] ntpd/ntp_io.c close_fd() does not compile on Solaris 7.\n* [Bug 1353] ntpq \"rv 0 settimeofday\" always shows UNKNOWN on unix.\n* Do not attempt to execute built binaries from ntpd/Makefile when\n  cross-compiling (keyword-gen and ntpd --saveconfigquit).\n* sntp/main.c: Remove duplicate global adr_buf[] (also defined in\n  networking.c) which Piotr Grudzinski identified breaking his build.\n* Correct in6addr_any test in configure.ac to attempt link too.\n(4.2.5p235-RC) 2009/10/18 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1343] lib/isc build breaks on systems without IPv6 headers.\n(4.2.5p234-RC) 2009/10/16 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1339] redux, use unmodified lib/isc/win32/strerror.c and\n  move #define strerror... to a header not used by lib/isc code.\n* [Bug 1345] illegal 'grep' option prevents compilation.\n* [Bug 1346] keyword scanner broken where char defaults to unsigned.\n* [Bug 1347] ntpd/complete.conf missing multicastclient test case.\n(4.2.5p233-RC) 2009/10/15 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1337] cast setsockopt() v4 address pointer to void *.\n* [Bug 1342] ignore|drop one IPv6 address on an interface blocks all\n  addresses on that interface.\n* Documentation cleanup and updates.\n(4.2.5p232-RC) 2009/10/14 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1302] OpenSSL under Windows needs applink support.\n* [Bug 1337] fix incorrect args to setsockopt(fd, IP_MULTICAST_IF,...).\n* [Bug 1339] Fix Windows-only ntp_strerror() infinite recursion.\n* [Bug 1341] NMEA driver requires working PPSAPI #ifdef HAVE_PPSAPI.\n* Construct ntpd keyword scanner finite state machine at compile time\n  rather than at runtime, shrink entries from 40+ to 8 bytes.\n* Update documentation for ntpq --old-rv, saveconfig, saveconfigdir,\n  ntpd -I -L and -M, and interface/nic rules. (From Dave Hart)\n* [Bug 1337] fix incorrect args to setsockopt(fd, IP_MULTICAST_IF,...)\n(4.2.5p231-RC) 2009/10/10 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1335] Broadcast client degraded by wildcard default change.\n(4.2.5p230-RC) 2009/10/09 Released by Harlan Stenn <stenn@ntp.org>\n* Start the 4.2.6 Release Candidate cycle.\n* Broadcast and transit phase cleanup from Dave Mills.\n(4.2.5p229) 2009/10/07 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1334] ntpsnmpd undefined reference to `ntpqOptions'.\n* Change ntpsnmpd/Makefile.am include file order to fix FreeBSD build.\n(4.2.5p228) 2009/10/06 Released by Harlan Stenn <stenn@ntp.org>\n* Reclaim syntax tree memory after application in ntpd built with\n  configure --disable-saveconfig.\n* [Bug 1135] ntpq uses sizeof(u_long) where sizeof(u_int32) is meant.\n* [Bug 1333] ntpd --interface precedence over --novirtualips lost.\n(4.2.5p227) 2009/10/05 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1135] :config fails with \"Server disallowed request\"\n* [Bug 1330] disallow interface/nic rules when --novirtualips or\n  --interface are used.\n* [Bug 1332] ntpq -c 'rv 0 variablename' returns extra stuff.\n* Add test of ntpd --saveconfigquit fidelity using new complete.conf.\n* Documentation updates from Dave Hart/Dave Mills.\n(4.2.5p226) 2009/10/04 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1318] Allow multiple -g options on ntpd command line.\n* [Bug 1327] ntpq, ntpdc, ntp-keygen -d & -D should work with configure\n  --disable-debugging.\n* Add ntpd --saveconfigquit <filename> option for future build-time\n  testing of saveconfig fidelity.\n* Clockhop and autokey cleanup from Dave Mills.\n* Documentation updates from Dave Mills.\n(4.2.5p225) 2009/09/30 Released by Harlan Stenn <stenn@ntp.org>\n* authopt documentation changes from Dave Mills/Dave Hart.\n* [Bug 1324] support bracketed IPv6 numeric addresses for restrict.\n(4.2.5p224) 2009/09/29 Released by Harlan Stenn <stenn@ntp.org>\n* Clockhop and documentation fixes from Dave Mills.\n* Remove \"tos maxhop\" ntp.conf knob.\n(4.2.5p223) 2009/09/28 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1321] build doesn't work if . isn't on $PATH.\n* [Bug 1323] Implement \"revoke #\" to match documentation, deprecate\n  \"crypto revoke #\".\n(4.2.5p222) 2009/09/27 Released by Harlan Stenn <stenn@ntp.org>\n* Update libisc code using bind-9.6.1-P1.tar.gz, rearrange our copy to\n  mirror the upstream layout (lib/isc/...), and merge in NTP-local\n  modifications to libisc.  There is a new procedure to ease future\n  libisc merges using a separate \"upstream\" bk repo.  That will enable\n  normal bk pull automerge to handle carrying forward any local changes\n  and should enable us to take updated libisc snapshots more often.\n* Updated build and flock-build scripts.  flock-build --one is a way\n  to perform a flock-build compatible solitary build, handy for a repo\n  clone's first build on a machine with autoconf, automake, etc.\n* Compiling ntp_parser.y using BSD make correctly places ntp_parser.h\n  in the top-level ntpd directory instead of A.*/ntpd.\n* bootstrap script updated to remove potentially stale .deps dirs.\n* Remove unneeded Makefile.am files from the lib/isc/include tree.\n(4.2.5p221) 2009/09/26 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1316] segfault if refclock_nmea can't open file.\n* [Bug 1317] Distribute cvo.sh.\n(4.2.5p220) 2009/09/25 Released by Harlan Stenn <stenn@ntp.org>\n* Rearrange libisc code to match the upstream layout in BIND.  This is\n  step one of two, changing the layout but keeping our existing libisc.\n(4.2.5p219) 2009/09/24 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1315] \"interface ignore 0.0.0.0\" is ignored.\n* add implicit \"nic ignore all\" rule before any rules from ntp.conf, so\n  \"nic listen eth0\" alone means the same as \"-I eth0\".\n* add wildcard match class for interface/nic rules.\n* fix mistaken carryover of prefixlen from one rule to the next.\n* Ensure IPv6 localhost address ::1 is included in libisc's Windows IPv6\n  address enumeration, allowing ntpq and ntpdc's hardcoding to 127.0.0.1 \n  on Windows to end.\n(4.2.5p218) 2009/09/21 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1314] saveconfig emits -4 and -6 on when not given.\n* correct parsing and processing of setvar directive.\n* highlight location of ntpq :config syntax errors with ^.\n* clarify (former) NO_ARG, SINGLE_ARG, MULTIPLE_ARG renaming to\n  FOLLBY_TOKEN, FOLLBY_STRING, FOLLBY_STRINGS_TO_EOC.\n* parser, saveconfig cleanup to store T_ identifiers in syntax tree.\n(4.2.5p217) 2009/09/20 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1300] reject remote configuration of dangerous items.\n(4.2.5p216) 2009/09/19 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1312] ntpq/ntpdc MD5 passwords truncated to 8 chars on Suns.\n* CID 10 missing free(up); in refclock_palisade.c error return, again.\n* CID 83 added assertion to demonstrate config_nic_rules() does not\n  call strchr(NULL, '/').\n(4.2.5p215) 2009/09/18 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1292] Workaround last VC6 unsigned __int64 kink.\n(4.2.5p214) 2009/09/17 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1303] remove top-level \"autokey\" directive.\n* use \"nic listen 192.168.0.0/16\" instead of\n  \"nic listen 192.168.0.0 prefixlen 16\".\n(4.2.5p213) 2009/09/16 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1310] fix Thunderbolt mode in refclock_palisade.c\n(4.2.5p212) 2009/09/15 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 983] add interface [listen | ignore | drop] ... directive.\n* [Bug 1243] MD5auth_setkey zero-fills key from first zero octet.\n* [Bug 1295] leftover fix, do not crash on exit in free_config_trap()\n  when \"trap 1.2.3.4\" is used without any further options.\n* [Bug 1311] 4.2.5p211 doesn't build in no-debug mode.\n* document interface (alias nic) and unpeer.\n* Correct syntax error line & column numbers.\n* CID 79: kod_init_kod_db() fails to fclose(db_s) in two error paths.\n* CID 80: attempt to quiet Coverity false positive re: leaking \"reason\"\n  in main().\n* Documentation updates from Dave Mills.\n* CID 81: savedconfig leaked in save_config().\n* Make the code agree with the spec and the book (Dave Mills).\n(4.2.5p211) 2009/09/14 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 663] respect ntpq -c and -p order on command line.\n* [Bug 1292] more VC6 unsigned __int64 workarounds.\n* [Bug 1296] Added Support for Trimble Acutime Gold.\n(4.2.5p210) 2009/09/06 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1294] Use OPENSSL_INC and OPENSSL_LIB macros for Windows\n  and remove unnecessary reference to applink.c for Windows\n* [Bug 1295] trap directive options are not optional.\n* [Bug 1297] yylex() must always set yylval before returning.\n(4.2.5p209) 2009/09/01 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1290] Fix to use GETTIMEOFDAY macro\n* [Bug 1289] Update project files for VC6, VS2003, VS2005, VS 2008\n(4.2.5p208) 2009/08/30 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1293] make configuration dumper ready for release, specifically:\n* rename ntpq dumpcfg command to \"saveconfig\".\n* require authentication for saveconfig.\n* \"restrict ... nomodify\" prevents saveconfig and :config.\n* \"saveconfig .\" shorthand to save to startup configuration file.\n* support strftime() substitution in saveconfig arg to timestamp\n  the output filename, for example \"saveconfig %Y%m%d-%H%M%S.conf\".\n* display saveconfig response message from ntpd in ntpq.\n* save output filename in \"savedconfig\" variable, fetched with ntpq -c\n  \"rv 0 savedconfig\".\n* document saveconfig in html/ntpq.html.\n* add ./configure --disable-saveconfig to build a smaller ntpd.\n* log saveconfig failures and successes to syslog.\n(4.2.5p207) 2009/08/29 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1292] Minor Windows source tweaks for VC6-era SDK headers.\n(4.2.5p206) 2009/08/26 Released by Harlan Stenn <stenn@ntp.org>\n* accopt.html typo fixes from Dave Mills.\n* [Bug 1283] default to remembering KoD in sntp.\n* clean up numerous sntp/kod_management.c bugs.\n* use all addresses resolved from each DNS name in sntp.\n(4.2.5p205) 2009/08/18 Released by Harlan Stenn <stenn@ntp.org>\n* accopt.html typo fixes from Dave Mills.\n* [Bug 1285] Log ntpq :config/config-from-file events.\n* [Bug 1286] dumpcfg omits statsdir, mangles filegen.\n(4.2.5p204) 2009/08/17 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1284] infinite loop in ntpd dumping more than one trustedkey\n(4.2.5p203) 2009/08/16 Released by Harlan Stenn <stenn@ntp.org>\n* Add ntpq -c dumpcfg, Google Summer of Code project of Max Kuehn\n(4.2.5p202) 2009/08/14 Released by Harlan Stenn <stenn@ntp.org>\n* install the binary and man page for sntp.\n(4.2.5p201) 2009/08/13 Released by Harlan Stenn <stenn@ntp.org>\n* sntp: out with the old, in with the new.\n(4.2.5p200) 2009/08/12 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1281] Build ntpd on Windows without big SDK download, burn,\n  and install by checking in essentially unchanging messages.mc build\n  products to avoid requiring mc.exe, which is not included with VC++\n  2008 EE.\n(4.2.5p199) 2009/08/09 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1279] Cleanup for warnings from Veracode static analysis.\n(4.2.5p198) 2009/08/03 Released by Harlan Stenn <stenn@ntp.org>\n* Upgrade to autogen-5.9.9-pre5.\n(4.2.5p197) 2009/07/30 Released by Harlan Stenn <stenn@ntp.org>\n* The build script now has . at the end of PATH for config.guess.\n(4.2.5p196) 2009/07/29 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1272] gsoc_sntp IPv6 build problems under HP-UX 10.\n* [Bug 1273] CID 10: Palisade leaks unit struct in error path.\n* [Bug 1274] CID 67: ensure resolve_hosts() output count and pointers\n  are consistent.\n* [Bug 1275] CID 45: CID 46: old sntp uses uninitialized guesses[0],\n  precs[0].\n* [Bug 1276] CID 52: crypto_xmit() may call crypto_alice[23]()\n  with NULL peer.\n(4.2.5p195) 2009/07/27 Released by Harlan Stenn <stenn@ntp.org>\n* cvo.sh: Add support for CentOS, Fedora, Slackware, SuSE, and QNX.\n(4.2.5p194) 2009/07/26 Released by Harlan Stenn <stenn@ntp.org>\n* Documentation updates from Dave Mills.\n* Use scripts/cvo.sh in the build script to get better subdir names.\n(4.2.5p193) 2009/07/25 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1261] CID 34: simulate_server() rbuf.msg_flags uninitialized.\n* [Bug 1262] CID 35: xpkt.mac uninitialized in simulate_server().\n* [Bug 1263] CID 37: CID 38: CID 40: CID 43: multiple refclocks \n  uninitialized tm_zone (arc, chronolog, dumbclock, pcf).\n* [Bug 1264] CID 64: gsoc_sntp on_wire() frees wrong ptr receiving KoD.\n* [Bug 1265] CID 65: CID 66: gsoc_sntp on_wire() leaks x_pkt, r_pkt.\n* [Bug 1266] CID 39: datum_pts_start() uninitialized arg.c_ospeed.\n* [Bug 1267] CID 44: old sntp handle_saving() writes stack garbage to\n  file when clearing.\n* [Bug 1268] CID 63: resolve_hosts() leaks error message buffer.\n* [Bug 1269] CID 74: use assertion to ensure move_fd() does not return\n  negative descriptors.\n* [Bug 1270] CID 70: gsoc_sntp recv_bcst_data mdevadr.ipv6mr_interface\n  uninitialized.\n(4.2.5p192) 2009/07/24 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 965] CID 42: ss_family uninitialized.\n* [Bug 1250] CID 53: kod_init_kod_db() overruns kod_db malloc'd buffer.\n* [Bug 1251] CID 68: search_entry() mishandles dst argument.\n* [Bug 1252] CID 32: Quiet Coverity warning with assertion.\n* [Bug 1253] CID 50: gsoc_sntp/crypto.c auth_init() always returns a \n  list with one entry.\n* [Bug 1254] CID 56: tv_to_str() leaks a struct tm each call.\n* [Bug 1255] CID 55: pkt_output() leaks a copy of each packet.\n* [Bug 1256] CID 51: Coverity doesn't recognize our assertion macros as\n  terminal.\n* [Bug 1257] CID 57: gsoc_sntp auth_init() fails to fclose(keyfile).\n* [Bug 1258] CID 54: gsoc_sntp resolve_hosts() needs simplification.\n* [Bug 1259] CID 59: gsoc_sntp recv_bcast_data() fails to free(rdata)\n  on error paths.\n* [Bug 1260] CID 60: gsoc_sntp recvpkt() fails to free(rdata).\n* Updated to AutoGen-5.9.9pre2.\n(4.2.5p191) 2009/07/21 Released by Harlan Stenn <stenn@ntp.org>\n* Updated to AutoGen-5.9.9pre1.\n(4.2.5p190) 2009/07/20 Released by Harlan Stenn <stenn@ntp.org>\n* Updated to AutoGen-5.9.8.\n* [Bug 1248] RES_MSSNTP typo in ntp_proto.c.\n* [Bug 1246] use a common template for singly-linked lists, convert most\n  doubly-linked lists to singly-linked.\n* Log warning about signd blocking when restrict mssntp used.\n(4.2.5p189) 2009/07/16 Released by Harlan Stenn <stenn@ntp.org>\n* Documentation cleanup from Dave Mills.\n(4.2.5p188) 2009/07/15 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1245] Broken xmt time sent in fast_xmit() of 4.2.5p187.\n(4.2.5p187) 2009/07/11 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1042] multicast listeners IPv4+6 ignore new interfaces.\n* [Bug 1237] Windows serial code treat CR and LF both as line\n  terminators.\n* [Bug 1238] use fudge time2 for serial timecode offset in NMEA driver.\n* [Bug 1242] Remove --enable-wintime, symmetric workaround is now\n  always enabled.\n* [Bug 1244] NTP_INSIST(fd != maxactivefd) failure in intres child\n* Added restrict keyword \"mssntp\" for Samba4 DC operation, by Dave Mills.\n(4.2.5p186) 2009/07/08 Released by Harlan Stenn <stenn@ntp.org>\n* ntp_proto.c cleanup from Dave Mills.\n(4.2.5p185) 2009/07/01 Released by Harlan Stenn <stenn@ntp.org>\n* Documentation updates from Dave Mills.\n* [Bug 1234] convert NMEA driver to use common PPSAPI code.\n* timepps-Solaris.h pps_handle_t changed from pointer to scalar\n* Spectracom refclock added to Windows port of ntpd\n* [Bug 1236] Declaration order fixed.\n* Bracket private ONCORE debug statements with #if 0 rather than #ifdef\n  DEBUG\n* Delete ONCORE debug statement that is now handled elsewhere.\n(4.2.5p184) 2009/06/24 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1233] atom refclock fudge time1 sign flipped in 4.2.5p164.\n(4.2.5p183) 2009/06/23 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1196] setsockopt(SO_EXCLUSIVEADDRUSE) can fail on Windows 2000\n  and earlier with WSAINVAL, do not log a complaint in that case.\n* [Bug 1210] ONCORE driver terminates ntpd without logging a reason.\n* [Bug 1218] Correct comment in refclock_oncore on /etc/ntp.oncore*\n  configuration file search order.\n* Change ONCORE driver to log using msyslog as well as to any\n  clockstats file.\n* [Bug 1231] ntpsnmpd build fails after sockaddr union changes.\n(4.2.5p182) 2009/06/18 Released by Harlan Stenn <stenn@ntp.org>\n* Add missing header dependencies to the ntpdc layout verification.\n* prefer.html updates from Dave Mills.\n* [Bug 1205] Add ntpd --usepcc and --pccfreq options on Windows\n* [Bug 1215] unpeer by association ID\n* [Bug 1225] Broadcast address miscalculated on Windows 4.2.5p180\n* [Bug 1229] autokey segfaults in cert_install().\n* Use a union for structs sockaddr, sockaddr_storage, sockaddr_in, and\n  sockaddr_in6 to remove casts and enable type checking.  Collapse\n  some previously separate IPv4/IPv6 paths into a single codepath.\n(4.2.5p181) 2009/06/06 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1206] Required compiler changes for Windows\n* [Bug 1084] PPSAPI for ntpd on Windows with DLL backends\n* [Bug 1204] Unix-style refclock device paths on Windows\n* [Bug 1205] partial fix, disable RDTSC use by default on Windows\n* [Bug 1208] decodenetnum() buffer overrun on [ with no ]\n* [Bug 1211] keysdir free()d twice #ifdef DEBUG\n* Enable ONCORE, ARCRON refclocks on Windows (untested)\n(4.2.5p180) 2009/05/29 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1200] Enable IPv6 in Windows port\n* Lose FLAG_FIXPOLL, from Dave Mills.\n(4.2.5p179) 2009/05/23 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1041] xmt -> aorg timestamp cleanup from Dave Mills,\n  reported by Dave Hart.\n* [Bug 1193] Compile error: conflicting types for emalloc.\n* [Bug 1196] VC6 winsock2.h does not define SO_EXCLUSIVEADDRUSE.\n* Leap/expire cleanup from Dave Mills.\n(4.2.5p178) 2009/05/21 Released by Harlan Stenn <stenn@ntp.org>\n* Provide erealloc() and estrdup(), a la emalloc().\n* Improve ntp.conf's parser error messages.\n* [Bug 320] \"restrict default ignore\" does not affect IPv6.\n* [Bug 1192] \"restrict -6 ...\" reports a syntax error.\n(4.2.5p177) 2009/05/18 Released by Harlan Stenn <stenn@ntp.org>\n* Include 4.2.4p7\n* [Bug 1174] nmea_shutdown assumes that nmea has a unit assigned\n* [Bug 1190] NMEA refclock fudge flag4 1 obscures position in timecode\n* Update NMEA refclock documentation in html/drivers/driver20.html\n(4.2.5p176) 2009/05/13 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1154] mDNS registration should be done later, repeatedly and only\n  if asked for. (second try for fix)\n(4.2.5p175) 2009/05/12 Released by Harlan Stenn <stenn@ntp.org>\n* Include 4.2.4p7-RC7\n* [Bug 1180] ntpd won't start with more than ~1000 interfaces\n* [Bug 1182] Documentation typos and missing bits.\n* [Bug 1183] COM port support should extend past COM3\n* [Bug 1184] ntpd is deaf when restricted to second IP on the same net\n* Clean up configure.ac NTP_CACHEVERSION interface, display cache\n  version when clearing.  Fixes a regression.\n(4.2.5p174) 2009/05/09 Released by Harlan Stenn <stenn@ntp.org>\n* Stale leapsecond file fixes from Dave Mills.\n(4.2.5p173) 2009/05/08 Released by Harlan Stenn <stenn@ntp.org>\n* Include 4.2.4p7-RC6\n(4.2.5p172) 2009/05/06 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1175] Instability in PLL daemon mode.\n* [Bug 1176] refclock_parse.c does not compile without PPSAPI.\n(4.2.5p171) 2009/05/04 Released by Harlan Stenn <stenn@ntp.org>\n* Autokey documentation cleanup from Dave Mills.\n* [Bug 1171] line editing libs found without headers (Solaris 11)\n* [Bug 1173] NMEA refclock fails with Solaris PPSAPI\n* Fix problem linking msntp on Solaris when sntp subdir is configured\n  before parent caused by different gethostent library search order.\n* Do not clear config.cache when it is  empty.\n(4.2.5p170) 2009/05/02 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1152] adjust PARSE to new refclock_pps logic\n* Include 4.2.4p7-RC5\n* loopfilter FLL/PLL crossover cleanup from Dave Mills.\n* Documentation updates from Dave Mills.\n* ntp-keygen cleanup from Dave Mills.\n* crypto API cleanup from Dave Mills.\n* Add NTP_CACHEVERSION mechanism to ignore incompatible config.cache\n* Enable gcc -Wstrict-overflow for gsoc_sntp as well\n(4.2.5p169) 2009/04/30 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1171] Note that we never look for -lreadline by default.\n* [Bug 1090] Fix bogus leap seconds in refclock_hpgps.\n(4.2.5p168) 2009/04/29 Released by Harlan Stenn <stenn@ntp.org>\n* Include 4.2.4p7-RC4\n* [Bug 1169] quiet compiler warnings\n* Re-enable gcc -Wstrict-prototypes when not building with OpenSSL\n* Enable gcc -Wstrict-overflow\n* ntpq/ntpdc emit newline after accepting password on Windows\n* Updates from Dave Mills:\n* ntp-keygen.c: Updates.\n* Fix the error return and syslog function ID in refclock_{param,ppsapi}.\n* Make sure syspoll is within the peer's minpoll/maxpoll bounds.\n* ntp_crypto.c: Use sign_siglen, not len. sign key filename cleanup.\n* Bump NTP_MAXEXTEN from 1024 to 2048, update values for some field lengths.\n* m4/ntp_lineeditlibs.m4: fix warnings from newer Autoconf\n* [Bug 1166] Remove truncation of position (blanking) code in refclock_nmea.c\n(4.2.5p167) 2009/04/26 Released by Harlan Stenn <stenn@ntp.org>\n* Crypto cleanup from Dave Mills.\n(4.2.5p166) 2009/04/25 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1165] Clean up small memory leaks in the  config file parser\n* Correct logconfig keyword declaration to MULTIPLE_ARG\n* Enable filename and line number leak reporting on Windows when built\n  DEBUG for all the typical C runtime allocators such as calloc,\n  malloc, and strdup.  Previously only emalloc calls were covered.\n* Add DEBUG-only code to free dynamically allocated memory that would\n  otherwise remain allocated at ntpd exit, to allow less forgivable\n  leaks to stand out in leaks reported after exit.\n* Ensure termination of strings in ports/winnt/libisc/isc_strerror.c\n  and quiet compiler warnings.\n* [Bug 1057] ntpdc unconfig failure\n* [Bug 1161] unpeer AKA unconfig command for ntpq :config\n* PPS and crypto cleanup in ntp_proto.c from Dave Mills.\n(4.2.5p165) 2009/04/23 Released by Harlan Stenn <stenn@ntp.org>\n* WWVB refclock cleanup from Dave Mills.\n* Code cleanup: requested_key -> request_key.\n* [Bug 833] ignore whitespace at end of remote configuration lines\n* [Bug 1033] ntpdc/ntpq crash prompting for keyid on Windows\n* [Bug 1028] Support for W32Time authentication via Samba.\n* quiet ntp_parser.c malloc redeclaration warning\n* Mitigation and PPS/PPSAPI cleanup from Dave Mills.\n* Documentation updates from Dave Mills.\n* timepps-Solaris.h patches from Dave Hart.\n(4.2.5p164) 2009/04/22 Released by Harlan Stenn <stenn@ntp.org>\n* Include 4.2.4p7-RC3\n* PPS/PPSAPI cleanup from Dave Mills.\n* Documentation updates from Dave Mills.\n* [Bug 1125] C runtime per-thread initialization on Windows\n* [Bug 1152] temporarily disable refclock_parse, refclock_true until\n  maintainers can repair build break from pps_sample()\n* [Bug 1153] refclock_nmea should not mix UTC with GPS time\n* [Bug 1159] ntpq overlap diagnostic message test buggy\n(4.2.5p163) 2009/04/10 Released by Harlan Stenn <stenn@ntp.org>\n(4.2.5p162) 2009/04/09 Released by Harlan Stenn <stenn@ntp.org>\n* Documentation updates from Dave Mills.\n* Mitigation and PPS cleanup from Dave Mills.\n* Include 4.2.4p7-RC2\n* [Bug 216] New interpolation scheme for Windows eliminates 1ms jitter\n* remove a bunch of #ifdef SYS_WINNT from portable code\n* 64-bit time_t cleanup for building on newer Windows compilers\n* Only set CMOS clock during ntpd exit on Windows if the computer is\n  shutting down or restarting.\n* [Bug 1148] NMEA reference clock improvements\n* remove deleted gsoc_sntp/utilities.o from repository so that .o build\n  products can be cleaned up without corrupting the repository.\n(4.2.5p161) 2009/03/31 Released by Harlan Stenn <stenn@ntp.org>\n* Documentation updates from Dave Mills.\n(4.2.5p160) 2009/03/30 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1141] refclock_report missing braces cause spurious \"peer event:\n  clock clk_unspec\" log entries\n* Include 4.2.4p7-RC1\n(4.2.5p159) 2009/03/28 Released by Harlan Stenn <stenn@ntp.org>\n* \"bias\" changes from Dave Mills.\n(4.2.5p158) 2009/01/30 Released by Harlan Stenn <stenn@ntp.org>\n* Fix [CID 72], a typo introduced at the latest fix to prettydate.c.\n(4.2.5p157) 2009/01/26 Released by Harlan Stenn <stenn@ntp.org>\n* Cleanup/fixes for ntp_proto.c and ntp_crypto.c from Dave Mills.\n(4.2.5p156) 2009/01/19 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1118] Fixed sign extension for 32 bit time_t in caljulian() and prettydate().\n  Fixed some compiler warnings about missing prototypes.\n  Fixed some other simple compiler warnings.\n* [Bug 1119] [CID 52] Avoid a possible null-dereference in ntp_crypto.c.\n* [Bug 1120] [CID 51] INSIST that peer is non-null before we dereference it.\n* [Bug 1121] [CID 47] double fclose() in ntp-keygen.c.\n(4.2.5p155) 2009/01/18 Released by Harlan Stenn <stenn@ntp.org>\n* Documentation updates from Dave Mills.\n* CHU frequency updates.\n* Design assertion fixes for ntp_crypto.c from Dave Mills.\n(4.2.5p154) 2009/01/13 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 992] support interface event change on Linux from\n  Miroslav Lichvar.\n(4.2.5p153) 2009/01/09 Released by Harlan Stenn <stenn@ntp.org>\n* Renamed gsoc_sntp/:fetch-stubs to gsoc_sntp/fetch-stubs to avoid\n  file name problems under Windows.\n  Removed German umlaut from log msg for 4.2.5p142.\n(4.2.5p152) 2009/01/08 Released by Harlan Stenn <stenn@ntp.org>\n* Include 4.2.4p6: 2009/01/08 Released by Harlan Stenn <stenn@ntp.org>\n(4.2.5p151) 2008/12/23 Released by Harlan Stenn <stenn@ntp.org>\n* Stats file logging cleanup from Dave Mills.\n(4.2.5p150) 2008/12/15 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1099] Fixed wrong behaviour in sntp's crypto.c.\n* [Bug 1103] Fix 64-bit issues in the new calendar code.\n(4.2.5p149) 2008/12/05 Released by Harlan Stenn <stenn@ntp.org>\n* Fixed mismatches in data types and OID definitions in ntpSnmpSubAgent.c\n* added a premliminary MIB file to ntpsnmpd (ntpv4-mib.mib)\n(4.2.5p148) 2008/12/04 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1070] Fix use of ntpq_parsestring() in ntpsnmpd.\n(4.2.5p147) 2008/11/27 Released by Harlan Stenn <stenn@ntp.org>\n* Update gsoc_sntp's GCC warning code.\n(4.2.5p146) 2008/11/26 Released by Harlan Stenn <stenn@ntp.org>\n* Update Solaris CFLAGS for gsoc_sntp.\n(4.2.5p145) 2008/11/20 Released by Harlan Stenn <stenn@ntp.org>\n* Deal with time.h for sntp under linux.\n* Provide rpl_malloc() for sntp for systems that need it.\n* Handle ss_len and socklen type for sntp.\n* Fixes to the sntp configure.ac script.\n* Provide INET6_ADDRSTRLEN if it is missing.\n* [Bug 1095] overflow in caljulian.c.\n(4.2.5p144) 2008/11/19 Released by Harlan Stenn <stenn@ntp.org>\n* Use int32, not int32_t.\n* Avoid the sched*() functions under OSF - link problems.\n(4.2.5p143) 2008/11/17 Released by Harlan Stenn <stenn@ntp.org>\n* sntp cleanup and fixes.\n(4.2.5p142) 2008/11/16 Released by Harlan Stenn <stenn@ntp.org>\n* Imported GSoC SNTP code from Johannes Maximilian Kuehn.\n(4.2.5p141) 2008/11/13 Released by Harlan Stenn <stenn@ntp.org>\n* New caltontp.c and calyearstart.c from Juergen Perlinger.\n(4.2.5p140) 2008/11/12 Released by Harlan Stenn <stenn@ntp.org>\n* Cleanup lint from the ntp_scanner files.\n* [Bug 1011] gmtime() returns NULL on windows where it would not under Unix.\n* Updated caljulian.c and prettydate.c from Juergen Perlinger.\n(4.2.5p139) 2008/11/11 Released by Harlan Stenn <stenn@ntp.org>\n* Typo fix to driver20.html.\n(4.2.5p138) 2008/11/10 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 474] --disable-ipv6 is broken.\n* IPv6 interfaces were being looked for twice.\n* SHM driver grabs more samples, add clockstats\n* decode.html and driver20.html updates from Dave Mills.\n(4.2.5p137) 2008/11/01 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1069] #undef netsnmp's PACKAGE_* macros.\n* [Bug 1068] Older versions of netsnmp do not have netsnmp_daemonize().\n(4.2.5p136) 2008/10/27 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1078] statsdir configuration parsing is broken.\n(4.2.5p135) 2008/09/23 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1072] clock_update should not allow updates older than sys_epoch.\n(4.2.5p134) 2008/09/17 Released by Harlan Stenn <stenn@ntp.org>\n* Clean up build process for ntpsnmpd.\n(4.2.5p133) 2008/09/16 Released by Harlan Stenn <stenn@ntp.org>\n* Add options processing to ntpsnmpd.\n* [Bug 1062] Check net-snmp headers before deciding to build ntpsnmpd.\n* Clean up the libntpq.a build.\n* Regenerate ntp_parser.[ch] from ntp_parser.y\n(4.2.5p132) 2008/09/15 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1067] Multicast DNS service registration must come after the fork\n  on Solaris.\n* [Bug 1066] Error messages should log as errors.\n(4.2.5p131) 2008/09/14 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1065] Re-enable support for the timingstats file.\n(4.2.5p130) 2008/09/13 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1064] Implement --with-net-snmp-config=progname\n* [Bug 1063] ntpSnmpSubagentObject.h is missing from the distribution.\n(4.2.5p129) 2008/09/11 Released by Harlan Stenn <stenn@ntp.org>\n* Quiet some libntpq-related warnings.\n(4.2.5p128) 2008/09/08 Released by Harlan Stenn <stenn@ntp.org>\n* Import Heiko Gerstung's GSoC2008 NTP MIB daemon.\n(4.2.5p127) 2008/09/01 Released by Harlan Stenn <stenn@ntp.org>\n* Regenerate ntpd/ntp_parser.c\n(4.2.5p126) 2008/08/31 Released by Harlan Stenn <stenn@ntp.org>\n* Stop libtool-1.5 from looking for C++ or Fortran.\n* [BUG 610] Documentation update for NMEA reference clock driver.\n* [Bug 828] Fix IPv4/IPv6 address parsing.\n* Changes from Dave Mills:\n  Documentation updates.\n  Fix a corner case where a frequency update was reported but not set.\n  When LEAP_NOTINSYNC->LEAP_NOWARNING, call crypto_update() if we have\n  crypto_flags.\n(4.2.5p125) 2008/08/18 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 1052] Add linuxPPS support to ONCORE driver.\n(4.2.5p124) 2008/08/17 Released by Harlan Stenn <stenn@ntp.org>\n* Documentation updates from Dave Mills.\n* Include 4.2.4p5: 2008/08/17 Released by Harlan Stenn <stenn@ntp.org>\n* [Bug 861] leap info was not being transmitted.\n* [Bug 1046] refnumtoa.c is using the wrong header file.\n* [Bug 1047] enable/disable options processing fix.\n* header file cleanup.\n* [Bug 1037] buffer in subroutine was 1 byte short.\n* configure.ac: cleanup, add option for wintime, and lay the groundwork\n  for the changes needed for bug 1028.\n* Fixes from Dave Mills: 'bias' and 'interleave' work.  Separate\n  phase and frequency discipline (for long poll intervals).  Update\n  TAI function to match current leapsecond processing.\n* Documentation updates from Dave Mills.\n* [Bug 1037] Use all 16 of the MD5 passwords generated by ntp-keygen.\n* Fixed the incorrect edge parameter being passed to time_pps_kcbind in\n  NMEA refclock driver.\n* [Bug 399] NMEA refclock driver does not honor time1 offset if flag3 set.\n* [Bug 985] Modifications to NMEA reference clock driver to support Accord\n  GPS Clock.\n* poll time updates from Dave Mills.\n* local refclock documentation updates from Dave Mills.\n* [Bug 1022] Fix compilation problems with yesterday's commit.\n* Updates and cleanup from Dave Mills:\n  I've now spent eleven months of a sabbatical year - 7 days a week, 6-10\n  hours most days - working on NTP. I have carefully reviewed every major\n  algorithm, examined its original design and evolution from that design.\n  I've trimmed off dead code and briar patches and did zillions of tests\n  contrived to expose evil vulnerabilities. The development article is in\n  rather good shape and should be ready for prime time.\n\n  1. The protostats statistics files have been very useful in exposing\n  little twitches and turns when something hiccups, like a broken PPS\n  signal. Most of what used to be syslog messages are now repackaged as\n  protostats messages with optional syslog as well. These can also be sent\n  as traps which might be handy to tiggle a beeper or celltext. These, the\n  sysstats files and cryptostats files reveal the ambient health of a busy\n  server, monitor traffic and error counts and spot crypto attacks.\n\n  2. Close inspection of the clock discipline behavior at long poll\n  intervals (36 h) showed it not doing as well as it should. I redesigned\n  the FLL loop to improve nominal accuracy from  several tens of\n  milliseconds to something less than ten milliseconds.\n\n  3. Autokey (again). The enhanced error checking was becoming a major\n  pain. I found a way to toss out gobs of ugly fat code and replace the\n  function with a much simpler and more comprehensive scheme. It resists\n  bait-and-switch attacks and quickly detect cases when the protocol is\n  not correctly synchronized.\n\n  4. The interface code for the kernel PPS signal was not in sync with the\n  kernel code itself. Some error checks were duplicated and some\n  ineffective. I found none of the PPS-capable drivers, including the atom\n  driver, do anything when the prefer peer fails; the kernel PPS signal\n  remains in control. The atom driver now disables the kernel PPS when the\n  prefer peer comes bum. This is important when the prefer peer is not a\n  reference clock but a remote NTP server.\n\n  5. The flake restrict bit turned out to be really interesting,\n  especially with symmtric modes and of those especially those using\n  Autokey. Small changes in the recovery procedures when packets are lost\n  now avoid almost all scenarios which previously required protocol resets.\n\n  6. I've always been a little uncomfortable when using the clock filter\n  with long poll intervals because the samples become less and less\n  correlated as the sample age exceeds the Allan intercept. Various\n  schemes have been used over the years to cope with this fact. The latest\n  one and the one that works the best is to use a modified sort metric\n  where the delay is used when the age of the sample is less than the\n  intercept and the sum of delay and dispersion above that. The net result\n  is that, at small poll intervals the algorithm operates as a minimum\n  filter, while at larger poll intervals it morphs to FIFO. Left\n  unmodified, a sample could be used when twelve days old. This along with\n  the FLL modifications has made a dramatic improvement at large poll\n  intervals.\n\n- [Backward Incompatible] The 'state' variable is no longer reported or\n  available via ntpq output.  The following system status bit names\n  have been changed:\n  - sync_alarm -> leap_alarm\n  - sync_atomic -> sync_pps\n  - sync_lf_clock -> sync_lf_radio\n  - sync_hf_clock -> sync_hf_radio\n  - sync_uhf_clock -> sync_uhf_radio\n  - sync_local_proto -> sync_local\n  - sync_udp/time -> sync_other\n  Other names have been changed as well.  See the change history for\n  libntp/statestr.c for more details.\n  Other backward-incompatible changes in ntpq include:\n  - assID -> associd\n  - rootdispersion -> rootdisp\n  - pkt_head -> pkt_neader\n  See the change history for other details.\n\n* Updates and cleanup from Dave Mills.\n* [Bug 995] Remove spurious ; from ntp-keygen.c.\n* More cleanup and changes from Dave Mills.\n* [Bug 980] Direct help to stdout.\n---\n(4.2.4p8) 2009/12/08 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Sec 1331] DoS with mode 7 packets - CVE-2009-3563.\n\n---\n(4.2.4p7) 2009/05/18 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Sec 1151] Remote exploit if autokey is enabled - CVE-2009-1252.\n* [Bug 1187] Update the copyright date.\n* [Bug 1191] ntpd fails on Win2000 - \"Address already in use\" after fix\n  for [Sec 1149].\n\n---\n(4.2.4p7-RC7) 2009/05/12 Released by Harlan Stenn <stenn@ntp.org>\n\n* ntp.isc.org -> ntp.org cleanup.\n* [Bug 1178] Use prior FORCE_DNSRETRY behavior as needed at runtime,\n  add configure --enable-ignore-dns-errors to be even more stubborn\n\n---\n(4.2.4p7-RC6) 2009/05/08 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 784] Make --enable-linuxcaps the default when available\n* [Bug 1179] error messages for -u/--user and -i lacking droproot\n* Updated JJY reference clock driver from Takao Abe\n* [Bug 1071] Log a message and exit before trying to use FD_SET with a\n  descriptor larger than FD_SETSIZE, which will corrupt memory\n* On corruption of the iface list head in add_interface, log and exit\n\n---\n(4.2.4p7-RC5) 2009/05/02 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1172] 4.2.4p7-RC{3,4} fail to build on linux.\n* flock-build script unportable 'set -m' use removed\n\n---\n(4.2.4p7-RC4) 2009/04/29 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1167] use gcc -Winit-self only if it is understood\n\n---\n(4.2.4p7-RC3) 2009/04/22 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 787] Bug fixes for 64-bit time_t on Windows\n* [Bug 813] Conditional naming of Event\n* [Bug 1147] System errors should be logged to msyslog()\n* [Bug 1155] Fix compile problem on Windows with VS2005\n* [Bug 1156] lock_thread_to_processor() should be declared in header\n* [Bug 1157] quiet OpenSSL warnings, clean up configure.ac\n* [Bug 1158] support for aix6.1\n* [Bug 1160] MacOS X is like BSD regarding F_SETOWN\n\n---\n(4.2.4p7-RC2) 2009/04/09 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Sec 1144] limited buffer overflow in ntpq.  CVE-2009-0159\n* [Sec 1149] use SO_EXCLUSIVEADDRUSE on Windows\n\n---\n(4.2.4p7-RC1) 2009/03/30 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1131] UDP sockets should not use SIGPOLL on Solaris.\n* build system email address cleanup\n* [Bug 774] parsesolaris.c does not compile under the new Solaris\n* [Bug 873] Windows serial refclock proper TTY line discipline emulation\n* [Bug 1014] Enable building with VC9 (in Visual Studio 2008,\n  Visual C++ 2008, or SDK)\n* [Bug 1117] Deferred interface binding under Windows works only correctly\n  if FORCE_DNSRETRY is defined\n* [BUG 1124] Lock QueryPerformanceCounter() client threads to same CPU\n* DPRINTF macro made safer, always evaluates to a statement and will not\n  misassociate an else which follows the macro.\n\n---\n(4.2.4p6) 2009/01/08 Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 1113] Fixed build errors with recent versions of openSSL. \n* [Sec 1111] Fix incorrect check of EVP_VerifyFinal()'s return value.\n* Update the copyright year.\n\n---\n(4.2.4p5) 2008/08/17 Released by Harlan Stenn <stenn@ntp.org>\n\n* [BUG 1051] Month off by one in leap second message written to clockstats\n  file fixed.\n* [Bug 450] Windows only: Under original Windows NT we must not discard the\n  wildcard socket to workaround a bug in NT's getsockname().\n* [Bug 1038] Built-in getpass() function also prompts for password if\n  not built with DEBUG.\n* [Bug 841] Obsolete the \"dynamic\" keyword and make deferred binding\n  to local interfaces the default.\n  Emit a warning if that keyword is used for configuration.\n* [Bug 959] Refclock on Windows not properly releasing recvbuffs.\n* [Bug 993] Fix memory leak when fetching system messages.\n* much cleanup, fixes, and changes from Dave Mills.\n* ntp_control.c: LEAPTAB is a filestamp, not an unsigned.  From Dave Mills.\n* ntp_config.c: ntp_minpoll fixes from Dave Mills.\n* ntp-keygen updates from Dave Mills.\n* refresh epoch, throttle, and leap cleanup from Dave Mills.\n* Documentation cleanup from Dave Mills.\n* [Bug 918] Only use a native md5.h if MD5Init() is available.\n* [Bug 979] Provide ntptimeval if it is not otherwise present.\n* [Bug 634] Re-instantiate syslog() and logfiles after the daemon fork.\n* [Bug 952] Use md5 code with a friendlier license.\n* [Bug 977] Fix mismatching #ifdefs for builds without IPv6.\n* [Bug 830] Fix the checking order of the interface options.\n* Clean up the logfile/syslog setup.\n* [Bug 970] Lose obsolete -g flag to ntp-keygen.\n* The -e flag to ntp-keygen can write GQ keys now, too.\n* ntp_proto.c: sys_survivors and hpoll cleanup from Dave Mills.\n* ntp_loopfilter.c: sys_poll cleanup from Dave Mills.\n* refclock_wwv.c: maximum-likelihood digit and DSYNC fixes from Dave Mills.\n* [Bug 967] preemptable associations are lost forever on a step.\n* ntp_config.c: [CID 48] missing \"else\" clause.\n* [Bug 833] ntpq config keyword is quote-mark unfriendly.\n* Rename the ntpq \"config\" keyword to \":config\".\n* Dave Mills shifted some orphan processing.\n* Fix typos in the [Bug 963] patch.\n* bootstrap: squawk if genver fails.  Use -f with cp in case Dave does a chown.\n* Remove obsolete simulator command-line options.\n* ntp_request.c: [CID 36] zero sin_zero.\n* [Bug 963] get_systime() is too noisy.\n* [Bug 960] spurious syslog:crypto_setup:spurious crypto command\n* [Bug 964] Change *-*-linux* to *-*-*linux* to allow for uclinux.\n* Changes from Dave Mills:\n  - ntp_util.c: cleanup.\n  - ntp_timer.c: watch the non-burst packet rate.\n  - ntp_request.c: cleanup.\n  - ntp_restrict.c: RES_LIMITED cleanup.\n  - ntp_proto.c: RES_LIMITED, rate bucktes, counters, overall cleanup.\n  - ntp_peer.c: disallow peer_unconfig().\n  - ntp_monitor.c: RES_LIMITED cleanup.\n  - ntp_loopfilter.c: poll interval cleanup.\n  - ntp_crypto.c: volley -> retry.  Cleanup TAI leap message.\n  - ntp_config: average and minimum are ^2 values.\n  - ntpdc: unknownversion is really \"declined\", not \"bad version\".\n  - Packet retry cleanup.\n* [Bug 961] refclock_tpro.c:tpro_poll() calls refclock_receive() twice.\n* [Bug 957] Windows only: Let command line parameters from the Windows SCM GUI\n  override the standard parameters from the ImagePath registry key.\n* Added HAVE_INT32_T to the Windows config.h to avoid duplicate definitions.\n* Work around a VPATH difference in FreeBSD's 'make' command.\n* Update bugreport URL.\n* Update -I documentation.\n* [Bug 713] Fix bug reporting information.\n* A bug in the application of the negative-sawtooth for 12 channel receivers. \n* The removal of unneeded startup code used for the original LinuxPPS, it now\n  conforms to the PPSAPI and does not need special code.  \n* ntp-keygen.c: Coverity fixes [CID 33,47].\n* Volley cleanup from Dave Mills.\n* Fuzz cleanup from Dave Mills.\n* [Bug 861] Leap second cleanups from Dave Mills.\n* ntpsim.c: add missing protypes and fix [CID 34], a nit.\n* Upgraded bison at UDel.\n* Update br-flock and flock-build machine lists.\n* [Bug 752] QoS: add parse/config handling code. \n* Fix the #include order in tickadj.c for picky machines.\n* [Bug 752] QoS: On some systems, netinet/ip.h needs netinet/ip_systm.h.\n* [Bug 752] Update the QoS tagging (code only - configuration to follow).\n* Orphan mode and other protocol cleanup from Dave Mills.\n* Documentation cleanup from Dave Mills.\n* [Bug 940] ntp-keygen uses -v.  Disallow it as a shortcut for --version.\n* more cleanup to ntp_lineeditlibs.m4.\n* Documentation updates from Dave Mills.\n* -ledit cleanup for ntpdc and ntpq.\n* Association and other cleanup from Dave Mills.\n* NTP_UNREACH changes from Dave Mills.\n* Fix the readline history test.\n* [Bug 931] Require -lreadline to be asked for explicitly.\n* [Bug 764] When looking for -lreadline support, also try using -lncurses.\n* [Bug 909] Fix int32_t errors for ntohl().\n* [Bug 376/214] Enhancements to support multiple if names and IP addresses.\n* [Bug 929] int32_t is undefined on Windows.  Casting wrong.\n* [Bug 928] readlink missing braces.\n* [Bug 788] Update macros to support VS 2005.\n* ntpd/ntp_timer.c: add missing sys_tai parameter for debug printf\n* [Bug 917] config parse leaves files open\n* [Bug 912] detect conflicting enable/disable configuration on interfaces\n  sharing an IP address\n* [Bug 771] compare scopeid if available for IPv6 addresses\n* Lose obsolete crypto subcommands (Dave Mills).\n* WWV is an HF source, not an LF source (Dave Mills).\n* [Bug 899] Only show -i/--jaildir -u/--user options if we HAVE_DROPROOT.\n* [Bug 916] 'cryptosw' is undefined if built without OpenSSL.\n* [Bug 891] 'restrict' config file keyword does not work (partial fix).\n* [Bug 890] the crypto command seems to be required now.\n* [Bug 915] ntpd cores during processing of x509 certificates.\n* Crypto lint cleanup from Dave Mills.\n* [Bug 897] Check RAND_status() - we may not need a .rnd file.\n* Crypto cleanup from Dave Mills.\n* [Bug 911] Fix error message in cmd_args.c.\n* [Bug 895] Log assertion failures via syslog(), not stderr.\n* Documentation updates from Dave Mills.\n* Crypto cleanup from Dave Mills.\n* [Bug 905] ntp_crypto.c fails to compile without -DDEBUG.\n* Avoid double peer stats logging.\n* ntp-keygen cleanup from Dave Mills.\n* libopts needs to be built after ElectricFence.\n* [Bug 894] Initialize keysdir before calling crypto_setup().\n* Calysto cleanup for ntpq.\n* ntp-keygen -i takes an arg.\n* Cleanup and fixes from Dave Mills.\n* [Bug 887] Fix error in ntp_types.h (for sizeof int != 4).\n* Bug 880 bug fixes for Windows build\n* Improve Calysto support.\n* The \"revoke\" parameter is a crypto command.\n* The driftfile wander threshold is a real number.\n* [Bug 850] Fix the wander threshold parameter on the driftfile command.\n* ntp_io.c: Dead code cleanup - Coverity View 19.\n* Leap file related cleanup from Dave Mills.\n* ntp_peer.c: Set peer->srcadr before (not after) calling set_peerdstadr().\n* Initialize offset in leap_file() - Coverity View 17.\n* Use the correct stratum on KISS codes.\n* Fuzz bits cleanup.\n* Show more digits in some debug printf's.\n* Use drift_file_sw internally to control writing the drift file.\n* Implement the wander_threshold option for the driftfile config keyword.\n* reformat ntp_control.c; do not use c++ // comments.\n* [Bug 629] Undo bug #629 fixes as they cause more problems than were  being\n  solved\n* Changes from Dave Mills: in/out-bound data rates, leapsecond cleanup,\n  driftfile write cleanup, packet buffer length checks, documentation updates.\n* More assertion checks and malloc()->emalloc(), courtesy of Calysto.\n* [Bug 864] Place ntpd service in maintenance mode if using SMF on Solaris\n* [Bug 862] includefile nesting; preserve phonelist on reconfig.\n* [Bug 604] ntpd regularly dies on linux/alpha.\n* more leap second infrastructure fixes from Dave Mills.\n* [Bug 858] recent leapfile changes broke non-OpenSSL builds.\n* Use emalloc() instead of malloc() in refclock_datum.c (Calysto).\n* Start using 'design by contract' assertions.\n* [Bug 767] Fast sync to refclocks wanted.\n* Allow null driftfile.\n* Use YYERROR_VERBOSE for the new parser, and fix related BUILT_SOURCES.\n* [Bug 629] changes to ensure broadcast works including on wildcard addresses\n* [Bug 853] get_node() must return a pointer to maximally-aligned memory.\n* Initial leap file fixes from Dave Mills.\n* [Bug 858] Recent leapfile changes broke without OPENSSL.\n* Use a char for DIR_SEP, not a string.\n* [Bug 850] driftfile parsing changes.\n* driftfile maintenance changes from Dave Mills.  Use clock_phi instead of\n  stats_write_tolerance.\n* [Bug 828] refid string not being parsed correctly.\n* [Bug 846] Correct includefile parsing.\n* [Bug 827] New parsing code does not handle \"fudge\" correctly.\n* Enable debugging capability in the config parser.\n* [Bug 839] Crypto password not read from ntp.conf.\n* Have autogen produce writable output files.\n* [Bug 825] Correct logconfig -/+ keyword processing.\n* [Bug 828] Correct parsing of \" delimited strings.\n* Cleanup FILE * usage after fclose() in ntp_filegen.c.\n* [Bug 843] Windows Completion port code was incorrectly merged from -stable.\n* [Bug 840] do fudge configuration AFTER peers (thus refclocks) have been\n  configured.\n* [Bug 824] Added new parser modules to the Windows project file.\n* [Bug 832] Add libisc/log.c headers to the distribution.\n* [Bug 808] Only write the drift file if we are in state 4.\n* Initial import of libisc/log.c and friends.\n* [Bug 826] Fix redefinition of PI.\n* [Bug 825] ntp_scanner.c needs to #include <config.h> .\n* [Bug 824] New parser code has some build problems with the SIM code.\n* [Bug 817] Use longnames for setting ntp variables on the command-line;\n  Allowing '-v' with and without an arg to disambiguate usage is error-prone.\n* [Bug 822] set progname once, early.\n* [Bug 819] remove erroneous #if 0 in Windows completion port code.\n* The new config code missed an #ifdef for building without refclocks.\n* Distribute some files needed by the new config parsing code.\n* [Bug 819] Timeout for WaitForMultipleObjects was 500ms instead of INFINITE\n* Use autogen 5.9.1.\n* Fix clktest command-line arg processing.'\n* Audio documentation updates from Dave Mills.\n* New config file parsing code, from Sachin Kamboj.\n* fuzz bit cleanup from Dave Mills.\n* replay cleanup from Dave Mills.\n* [Bug 542] Tolerate missing directory separator at EO statsdir.\n* [Bug 812] ntpd should drop supplementary groups.\n* [Bug 815] Fix warning compiling 4.2.5p22 under Windows with VC6.\n* [Bug 740] Fix kernel/daemon startup drift anomaly.\n* refclock_wwv.c fixes from Dave Mills.\n* [Bug 810] Fix ntp-keygen documentation.\n* [Bug 787] Bug fixes for 64-bit time_t on Windows.\n* [Bug 796] Clean up duplicate #defines in ntp_control.c.\n* [Bug 569] Use the correct precision for the Leitch CSD-5300.\n* [Bug 795] Moved declaration of variable to top of function.\n* [Bug 798] ntpq [p typo crashes ntpq/ntpdc.\n* [Bug 786] Fix refclock_bancomm.c on Solaris.\n* [Bug 774] parsesolaris.c does not compile under the new Solaris.\n* [Bug 782] Remove P() macros from Windows files.\n* [Bug 778] ntpd fails to lock with drift=+500 when started with drift=-500.\n* [Bug 592] Trimble Thunderbolt GPS support.\n* IRIG, CHU, WWV, WWVB refclock improvements from Dave Mills.\n* [Bug 757] Lose ULONG_CONST().\n* [Bug 756] Require ANSI C (function prototypes).\n* codec (audio) and ICOM changes from Dave Mills.\n\n---\n\n* [Bug 450] Windows only: Under original Windows NT we must not discard the\n  wildcard socket to workaround a bug in NT's getsockname().\n* [Bug 1038] Built-in getpass() function also prompts for password if\n  not built with DEBUG.\n* [Bug 841] Obsolete the \"dynamic\" keyword and make deferred binding\n  to local interfaces the default.\n  Emit a warning if that keyword is used for configuration.\n* [Bug 959] Refclock on Windows not properly releasing recvbuffs.\n* [Bug 993] Fix memory leak when fetching system messages.\n* [Bug 987] Wake up the resolver thread/process when a new interface has\n  become available.\n* Correctly apply negative-sawtooth for oncore 12 channel receiver.\n* Startup code for original LinuxPPS removed.  LinuxPPS now conforms to\n  the PPSAPI.\n* [Bug 1000] allow implicit receive buffer allocation for Windows.\n  fixes startup for windows systems with many interfaces.\n  reduces dropped packets on network bursts.\n  additionally fix timer() starvation during high load.\n* [Bug 990] drop minimum time restriction for interface update interval.\n* [Bug 977] Fix mismatching #ifdefs for builds without IPv6.\n* Update the copyright year.\n* Build system cleanup (make autogen-generated files writable).\n* [Bug 957] Windows only: Let command line parameters from the Windows SCM GUI\n  override the standard parameters from the ImagePath registry key.\n* Fixes for ntpdate:\n* [Bug 532] nptdate timeout is too long if several servers are supplied.\n* [Bug 698] timeBeginPeriod is called without timeEndPeriod in some NTP tools.\n* [Bug 857] ntpdate debug mode adjusts system clock when it shouldn't.\n* [Bug 908] ntpdate crashes sometimes.\n* [Bug 982] ntpdate(and ntptimeset) buffer overrun if HAVE_POLL_H isn't set\n  (dup of 908).\n* [Bug 997] ntpdate buffer too small and unsafe.\n* ntpdate.c: Under Windows check whether NTP port in use under same conditions\n  as under other OSs.\n* ntpdate.c: Fixed some typos and indents (tabs/spaces).\n\n(4.2.4p4) Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 902] Fix problems with the -6 flag.\n* Updated include/copyright.def (owner and year).\n* [Bug 878] Avoid ntpdc use of refid value as unterminated string.\n* [Bug 881] Corrected display of pll offset on 64bit systems.\n* [Bug 886] Corrected sign handling on 64bit in ntpdc loopinfo command.\n* [Bug 889] avoid malloc() interrupted by SIGIO risk\n* ntpd/refclock_parse.c: cleanup shutdown while the file descriptor is still\n  open.\n* [Bug 885] use emalloc() to get a message at the end of the memory\n  unsigned types cannot be less than 0\n  default_ai_family is a short\n  lose trailing , from enum list\n  clarify ntp_restrict.c for easier automated analysis\n* [Bug 884] don't access recv buffers after having them passed to the free\n  list.\n* [Bug 882] allow loopback interfaces to share addresses with other\n  interfaces.\n\n---\n(4.2.4p3) Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 863] unable to stop ntpd on Windows as the handle reference for events\n  changed\n\n---\n(4.2.4p2) Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 854] Broadcast address was not correctly set for interface addresses\n* [Bug 829] reduce syslog noise, while there fix Enabled/Disable logging\n  to reflect the actual configuration.\n* [Bug 795] Moved declaration of variable to top of function.\n* [Bug 789] Fix multicast client crypto authentication and make sure arriving\n  multicast packets do not disturb the autokey dance.\n* [Bug 785] improve handling of multicast interfaces\n  (multicast routers still need to run a multicast routing software/daemon)\n* ntpd/refclock_parse.c: cleanup shutdown while the file descriptor is still\n  open.\n* [Bug 885] use emalloc() to get a message at the end of the memory\n  unsigned types cannot be less than 0\n  default_ai_family is a short\n  lose trailing , from enum list\n* [Bug 884] don't access recv buffers after having them passed to the free list.\n* [Bug 882] allow loopback interfaces to share addresses with other interfaces.\n* [Bug 527] Don't write from source address length to wrong location\n* Upgraded autogen and libopts.\n* [Bug 811] ntpd should not read a .ntprc file.\n\n---\n(4.2.4p1) (skipped)\n\n---\n(4.2.4p0) Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 793] Update Hans Lambermont's email address in ntpsweep.\n* [Bug 776] Remove unimplemented \"rate\" flag from ntpdate.\n* [Bug 586] Avoid lookups if AI_NUMERICHOST is set.\n* [Bug 770] Fix numeric parameters to ntp-keygen (Alain Guibert).\n* [Bug 768] Fix io_setbclient() error message.\n* [Bug 765] Use net_bind_service capability on linux.\n* [Bug 760] The background resolver must be aware of the 'dynamic' keyword.\n* [Bug 753] make union timestamp anonymous (Philip Prindeville).\n* confopt.html: move description for \"dynamic\" keyword into the right section.\n* pick the right type for the recv*() length argument.\n\n---\n(4.2.4) Released by Harlan Stenn <stenn@ntp.org>\n\n* monopt.html fixes from Dave Mills.\n* [Bug 452] Do not report kernel PLL/FLL flips.\n* [Bug 746] Expert mouseCLOCK USB v2.0 support added.'\n* driver8.html updates.\n* [Bug 747] Drop <NOBR> tags from ntpdc.html.\n* sntp now uses the returned precision to control decimal places.\n* sntp -u will use an unprivileged port for its queries.\n* [Bug 741] \"burst\" doesn't work with !unfit peers.\n* [Bug 735] Fix a make/gmake VPATH issue on Solaris.\n* [Bug 739] ntpd -x should not take an argument.\n* [Bug 737] Some systems need help providing struct iovec.\n* [Bug 717] Fix libopts compile problem.\n* [Bug 728] parse documentation fixes.\n* [Bug 734] setsockopt(..., IP_MULTICAST_IF, ...) fails on 64-bit platforms.\n* [Bug 732] C-DEX JST2000 patch from Hideo Kuramatsu.\n* [Bug 721] check for __ss_family and __ss_len separately.\n* [Bug 666] ntpq opeers displays jitter rather than dispersion.\n* [Bug 718] Use the recommended type for the saddrlen arg to getsockname().\n* [Bug 715] Fix a multicast issue under Linux.\n* [Bug 690] Fix a Windows DNS lookup buffer overflow.\n* [Bug 670] Resolved a Windows issue with the dynamic interface rescan code.\n* K&R C support is being deprecated.\n* [Bug 714] ntpq -p should conflict with -i, not -c.\n* WWV refclock improvements from Dave Mills.\n* [Bug 708] Use thread affinity only for the clock interpolation thread.\n* [Bug 706] ntpd can be running several times in parallel.\n* [Bug 704] Documentation typos.\n* [Bug 701] coverity: NULL dereference in ntp_peer.c\n* [Bug 695] libopts does not protect against macro collisions.\n* [Bug 693] __adjtimex is independent of ntp_{adj,get}time.\n* [Bug 692] sys_limitrejected was not being incremented.\n* [Bug 691] restrictions() assumption not always valid.\n* [Bug 689] Deprecate HEATH GC-1001 II; the driver never worked.\n* [Bug 688] Fix documentation typos.\n* [Bug 686] Handle leap seconds better under Windows.\n* [Bug 685] Use the Windows multimedia timer.\n* [Bug 684] Only allow debug options if debugging is enabled.\n* [Bug 683] Use the right version string.\n* [Bug 680] Fix the generated version string on Windows.\n* [Bug 678] Use the correct size for control messages.\n* [Bug 677] Do not check uint_t in configure.ac.\n* [Bug 676] Use the right value for msg_namelen.\n* [Bug 675] Make sure ntpd builds without debugging.\n* [Bug 672] Fix cross-platform structure padding/size differences.\n* [Bug 660] New TIMESTAMP code fails tp build on Solaris Express.\n* [Bug 659] libopts does not build under Windows.\n* [Bug 658] HP-UX with cc needs -Wp,-H8166 in CFLAGS.\n* [Bug 656] ntpdate doesn't work with multicast address.\n* [Bug 638] STREAMS_TLI is deprecated - remove it.\n* [Bug 635] Fix tOptions definition.\n* [Bug 628] Fallback to ntp discipline not working for large offsets.\n* [Bug 622] Dynamic interface tracking for ntpd.\n* [Bug 603] Don't link with libelf if it's not needed.\n* [Bug 523] ntpd service under Windows does't shut down properly.\n* [Bug 500] sntp should always be built.\n* [Bug 479] Fix the -P option.\n* [Bug 421] Support the bc637PCI-U card.\n* [Bug 342] Deprecate broken TRAK refclock driver.\n* [Bug 340] Deprecate broken MSF EES refclock driver.\n* [Bug 153] Don't do DNS lookups on address masks.\n* [Bug 143] Fix interrupted system call on HP-UX.\n* [Bug 42] Distribution tarballs should be signed.\n* Support separate PPS devices for PARSE refclocks.\n* [Bug 637, 51?] Dynamic interface scanning can now be done.\n* Options processing now uses GNU AutoGen.\n\n---\n(4.2.2p4) Released by Harlan Stenn <stenn@ntp.org>\n\n* [Bug 710] compat getnameinfo() has off-by-one error\n* [Bug 690] Buffer overflow in Windows when doing DNS Lookups\n\n---\n(4.2.2p3) Released by Harlan Stenn <stenn@ntp.org>\n\n* Make the ChangeLog file cleaner and easier to read\n* [Bug 601] ntpq's decodeint uses an extra level of indirection\n* [Bug 657] Different OSes need different sized args for IP_MULTICAST_LOOP\n* release engineering/build changes\n* Documentation fixes\n* Get sntp working under AIX-5\n\n---\n(4.2.2p2) (broken)\n\n* Get sntp working under AIX-5\n\n---\n(4.2.2p1)\n\n* [Bug 661] Use environment variable to specify the base path to openssl.\n* Resolve an ambiguity in the copyright notice\n* Added some new documentation files\n* URL cleanup in the documentation\n* [Bug 657]: IP_MULTICAST_LOOP uses a u_char value/size\n* quiet gcc4 complaints\n* more Coverity fixes\n* [Bug 614] manage file descriptors better\n* [Bug 632] update kernel PPS offsets when PPS offset is re-configured\n* [Bug 637] Ignore UP in*addr_any interfaces\n* [Bug 633] Avoid writing files in srcdir\n* release engineering/build changes\n\n---\n(4.2.2)\n\n* SNTP\n* Many bugfixes\n* Implements the current \"goal state\" of NTPv4\n* Autokey improvements\n* Much better IPv6 support\n* [Bug 360] ntpd loses handles with LAN connection disabled.\n* [Bug 239] Fix intermittent autokey failure with multicast clients.\n* Rewrite of the multicast code\n* New version numbering scheme\n\n---\n(4.2.0)\n\n* More stuff than I have time to document\n* IPv6 support\n* Bugfixes\n* call-gap filtering\n* wwv and chu refclock improvements\n* OpenSSL integration\n\n---\n(4.1.2)\n\n* clock state machine bugfix\n* Lose the source port check on incoming packets\n* (x)ntpdc compatibility patch\n* Virtual IP improvements\n* ntp_loopfilter fixes and improvements\n* ntpdc improvements\n* GOES refclock fix\n* JJY driver\n* Jupiter refclock fixes\n* Neoclock4X refclock fixes\n* AIX 5 port\n* bsdi port fixes\n* Cray unicos port upgrade\n* HP MPE/iX port\n* Win/NT port upgrade\n* Dynix PTX port fixes\n* Document conversion from CVS to BK\n* readline support for ntpq\n\n---\n(4.1.0)\n\n* CERT problem fixed (99k23)\n\n* Huff-n-Puff filter\n* Preparation for OpenSSL support\n* Resolver changes/improvements are not backward compatible with mode 7\n  requests (which are implementation-specific anyway)\n* leap second stuff\n* manycast should work now\n* ntp-genkeys does new good things.\n* scripts/ntp-close\n* PPS cleanup and improvements\n* readline support for ntpdc\n* Crypto/authentication rewrite\n* WINNT builds with MD5 by default\n* WINNT no longer requires Perl for building with Visual C++ 6.0\n* algorithmic improvements, bugfixes\n* Solaris dosynctodr info update\n* html/pic/* is *lots* smaller\n* New/updated drivers: Forum Graphic GPS, WWV/H, Heath GC-100 II, HOPF\n  serial and PCI, ONCORE, ulink331\n* Rewrite of the audio drivers\n\n---\n(4.0.99)\n\n* Driver updates: CHU, DCF, GPS/VME, Oncore, PCF, Ulink, WWVB, burst\n  If you use the ONCORE driver with a HARDPPS kernel module,\n  you *must* have a properly specified:\n\tpps <filename> [assert/clear] [hardpps]\n  line in the /etc/ntp.conf file.\n* PARSE cleanup\n* PPS cleanup\n* ntpd, ntpq, ntpdate cleanup and fixes\n* NT port improvements\n* AIX, BSDI, DEC OSF, FreeBSD, NetBSD, Reliant, SCO, Solaris port improvements\n\n---\n(4.0.98)\n\n* Solaris kernel FLL bug is fixed in 106541-07\n* Bug/lint cleanup\n* PPS cleanup\n* ReliantUNIX patches\n* NetInfo support\n* Ultralink driver\n* Trimble OEM Ace-II support\n* DCF77 power choices\n* Oncore improvements\n\n---\n(4.0.97)\n\n* NT patches\n* AIX,SunOS,IRIX portability\n* NeXT portability\n* ntptimeset utility added\n* cygwin portability patches\n\n---\n(4.0.96)\n\n* -lnsl, -lsocket, -lgen configuration patches\n* Y2K patches from AT&T\n* Linux portability cruft\n\n---\n(4.0.95)\n\n* NT port cleanup/replacement\n* a few portability fixes\n* VARITEXT Parse clock added\n\n---\n(4.0.94)\n\n* PPS updates (including ntp.config options)\n* Lose the old DES stuff in favor of the (optional) RSAREF stuff\n* html cleanup/updates\n* numerous drivers cleaned up\n* numerous portability patches and code cleanup\n\n---\n(4.0.93)\n\n* Oncore refclock needs PPS or one of two ioctls.\n* Don't make ntptime under Linux.  It doesn't compile for too many folks.\n* Autokey cleanup\n* ReliantUnix patches\n* html cleanup\n* tickadj cleanup\n* PARSE cleanup\n* IRIX -n32 cleanup\n* byte order cleanup\n* ntptrace improvements and patches\n* ntpdc improvements and patches\n* PPS cleanup\n* mx4200 cleanup\n* New clock state machine\n* SCO cleanup\n* Skip alias interfaces\n\n---\n(4.0.92)\n\n* chronolog and dumbclock refclocks\n* SCO updates\n* Cleanup/bugfixes\n* Y2K patches\n* Updated palisade driver\n* Plug memory leak\n* wharton kernel clock\n* Oncore clock upgrades\n* NMEA clock improvements\n* PPS improvements\n* AIX portability patches\n\n---\n(4.0.91)\n\n* New ONCORE driver\n* New MX4200 driver\n* Palisade improvements\n* config file bugfixes and problem reporting\n* autoconf upgrade and cleanup\n* HP-UX, IRIX lint cleanup\n* AIX portability patches\n* NT cleanup\n\n---\n(4.0.90)\n\n* Nanoseconds\n* New palisade driver\n* New Oncore driver\n\n---\n(4.0.73)\n\n* README.hackers added\n* PARSE driver is working again\n* Solaris 2.6 has nasty kernel bugs.  DO NOT enable pll!\n* DES is out of the distribution.\n\n---\n(4.0.72)\n\n* K&R C compiling should work again.\n* IRIG patches.\n* MX4200 driver patches.\n* Jupiter driver added.\n* Palisade driver added.  Needs work (ANSI, ntoh/hton, sizeof double, ???)\n", "\n/* A Bison parser, made by GNU Bison 2.4.1.  */\n\n/* Skeleton implementation for Bison's Yacc-like parsers in C\n   \n      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n   Free Software Foundation, Inc.\n   \n   This program is free software: you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n   \n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n   \n   You should have received a copy of the GNU General Public License\n   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n\n/* As a special exception, you may create a larger work that contains\n   part or all of the Bison parser skeleton and distribute that work\n   under terms of your choice, so long as that work isn't itself a\n   parser generator using the skeleton or a modified version thereof\n   as a parser skeleton.  Alternatively, if you modify or redistribute\n   the parser skeleton itself, you may (at your option) remove this\n   special exception, which will cause the skeleton and the resulting\n   Bison output files to be licensed under the GNU General Public\n   License without this special exception.\n   \n   This special exception was added by the Free Software Foundation in\n   version 2.2 of Bison.  */\n\n/* C LALR(1) parser skeleton written by Richard Stallman, by\n   simplifying the original so-called \"semantic\" parser.  */\n\n/* All symbols defined below should begin with yy or YY, to avoid\n   infringing on user name space.  This should be done even for local\n   variables, as they might otherwise be expanded by user macros.\n   There are some unavoidable exceptions within include files to\n   define necessary library symbols; they are noted \"INFRINGES ON\n   USER NAME SPACE\" below.  */\n\n/* Identify Bison output.  */\n#define YYBISON 1\n\n/* Bison version.  */\n#define YYBISON_VERSION \"2.4.1\"\n\n/* Skeleton name.  */\n#define YYSKELETON_NAME \"yacc.c\"\n\n/* Pure parsers.  */\n#define YYPURE 0\n\n/* Push parsers.  */\n#define YYPUSH 0\n\n/* Pull parsers.  */\n#define YYPULL 1\n\n/* Using locations.  */\n#define YYLSP_NEEDED 0\n\n\n\n/* Copy the first part of user declarations.  */\n\n/* Line 189 of yacc.c  */\n#line 11 \"ntp_parser.y\"\n\n  #ifdef HAVE_CONFIG_H\n  # include <config.h>\n  #endif\n\n  #include \"ntpd.h\"\n  #include \"ntp_machine.h\"\n  #include \"ntp.h\"\n  #include \"ntp_stdlib.h\"\n  #include \"ntp_filegen.h\"\n  #include \"ntp_data_structures.h\"\n  #include \"ntp_scanner.h\"\n  #include \"ntp_config.h\"\n  #include \"ntp_crypto.h\"\n\n  #include \"ntpsim.h\"\t\t/* HMS: Do we really want this all the time? */\n\t\t\t\t/* SK: It might be a good idea to always\n\t\t\t\t   include the simulator code. That way\n\t\t\t\t   someone can use the same configuration file\n\t\t\t\t   for both the simulator and the daemon\n\t\t\t\t*/\n\n\n  struct FILE_INFO *ip_file;   /* Pointer to the configuration file stream */\n\n  #define YYMALLOC\temalloc\n  #define YYFREE\tfree\n  #define YYERROR_VERBOSE\n  #define YYMAXDEPTH\t1000   /* stop the madness sooner */\n  void yyerror (char *msg);\n  extern int input_from_file;  /* 0=input from ntpq :config */\n\n\n/* Line 189 of yacc.c  */\n#line 107 \"ntp_parser.c\"\n\n/* Enabling traces.  */\n#ifndef YYDEBUG\n# define YYDEBUG 1\n#endif\n\n/* Enabling verbose error messages.  */\n#ifdef YYERROR_VERBOSE\n# undef YYERROR_VERBOSE\n# define YYERROR_VERBOSE 1\n#else\n# define YYERROR_VERBOSE 0\n#endif\n\n/* Enabling the token table.  */\n#ifndef YYTOKEN_TABLE\n# define YYTOKEN_TABLE 1\n#endif\n\n\n/* Tokens.  */\n#ifndef YYTOKENTYPE\n# define YYTOKENTYPE\n   /* Put the tokens into the symbol table, so that GDB and other debuggers\n      know about them.  */\n   enum yytokentype {\n     T_Age = 258,\n     T_All = 259,\n     T_Allan = 260,\n     T_Auth = 261,\n     T_Autokey = 262,\n     T_Automax = 263,\n     T_Average = 264,\n     T_Bclient = 265,\n     T_Beacon = 266,\n     T_Bias = 267,\n     T_Broadcast = 268,\n     T_Broadcastclient = 269,\n     T_Broadcastdelay = 270,\n     T_Burst = 271,\n     T_Calibrate = 272,\n     T_Calldelay = 273,\n     T_Ceiling = 274,\n     T_Clockstats = 275,\n     T_Cohort = 276,\n     T_ControlKey = 277,\n     T_Crypto = 278,\n     T_Cryptostats = 279,\n     T_Day = 280,\n     T_Default = 281,\n     T_Digest = 282,\n     T_Disable = 283,\n     T_Discard = 284,\n     T_Dispersion = 285,\n     T_Double = 286,\n     T_Driftfile = 287,\n     T_Drop = 288,\n     T_Ellipsis = 289,\n     T_Enable = 290,\n     T_End = 291,\n     T_False = 292,\n     T_File = 293,\n     T_Filegen = 294,\n     T_Flag1 = 295,\n     T_Flag2 = 296,\n     T_Flag3 = 297,\n     T_Flag4 = 298,\n     T_Flake = 299,\n     T_Floor = 300,\n     T_Freq = 301,\n     T_Fudge = 302,\n     T_Host = 303,\n     T_Huffpuff = 304,\n     T_Iburst = 305,\n     T_Ident = 306,\n     T_Ignore = 307,\n     T_Incalloc = 308,\n     T_Incmem = 309,\n     T_Initalloc = 310,\n     T_Initmem = 311,\n     T_Includefile = 312,\n     T_Integer = 313,\n     T_Interface = 314,\n     T_Ipv4 = 315,\n     T_Ipv4_flag = 316,\n     T_Ipv6 = 317,\n     T_Ipv6_flag = 318,\n     T_Kernel = 319,\n     T_Key = 320,\n     T_Keys = 321,\n     T_Keysdir = 322,\n     T_Kod = 323,\n     T_Mssntp = 324,\n     T_Leapfile = 325,\n     T_Limited = 326,\n     T_Link = 327,\n     T_Listen = 328,\n     T_Logconfig = 329,\n     T_Logfile = 330,\n     T_Loopstats = 331,\n     T_Lowpriotrap = 332,\n     T_Manycastclient = 333,\n     T_Manycastserver = 334,\n     T_Mask = 335,\n     T_Maxage = 336,\n     T_Maxclock = 337,\n     T_Maxdepth = 338,\n     T_Maxdist = 339,\n     T_Maxmem = 340,\n     T_Maxpoll = 341,\n     T_Minclock = 342,\n     T_Mindepth = 343,\n     T_Mindist = 344,\n     T_Minimum = 345,\n     T_Minpoll = 346,\n     T_Minsane = 347,\n     T_Mode = 348,\n     T_Monitor = 349,\n     T_Month = 350,\n     T_Mru = 351,\n     T_Multicastclient = 352,\n     T_Nic = 353,\n     T_Nolink = 354,\n     T_Nomodify = 355,\n     T_None = 356,\n     T_Nopeer = 357,\n     T_Noquery = 358,\n     T_Noselect = 359,\n     T_Noserve = 360,\n     T_Notrap = 361,\n     T_Notrust = 362,\n     T_Ntp = 363,\n     T_Ntpport = 364,\n     T_NtpSignDsocket = 365,\n     T_Orphan = 366,\n     T_Orphanwait = 367,\n     T_Panic = 368,\n     T_Peer = 369,\n     T_Peerstats = 370,\n     T_Phone = 371,\n     T_Pid = 372,\n     T_Pidfile = 373,\n     T_Pool = 374,\n     T_Port = 375,\n     T_Preempt = 376,\n     T_Prefer = 377,\n     T_Protostats = 378,\n     T_Pw = 379,\n     T_Qos = 380,\n     T_Randfile = 381,\n     T_Rawstats = 382,\n     T_Refid = 383,\n     T_Requestkey = 384,\n     T_Restrict = 385,\n     T_Revoke = 386,\n     T_Saveconfigdir = 387,\n     T_Server = 388,\n     T_Setvar = 389,\n     T_Sign = 390,\n     T_Source = 391,\n     T_Statistics = 392,\n     T_Stats = 393,\n     T_Statsdir = 394,\n     T_Step = 395,\n     T_Stepout = 396,\n     T_Stratum = 397,\n     T_String = 398,\n     T_Sysstats = 399,\n     T_Tick = 400,\n     T_Time1 = 401,\n     T_Time2 = 402,\n     T_Timingstats = 403,\n     T_Tinker = 404,\n     T_Tos = 405,\n     T_Trap = 406,\n     T_True = 407,\n     T_Trustedkey = 408,\n     T_Ttl = 409,\n     T_Type = 410,\n     T_Unconfig = 411,\n     T_Unpeer = 412,\n     T_Version = 413,\n     T_WanderThreshold = 414,\n     T_Week = 415,\n     T_Wildcard = 416,\n     T_Xleave = 417,\n     T_Year = 418,\n     T_Flag = 419,\n     T_Void = 420,\n     T_EOC = 421,\n     T_Simulate = 422,\n     T_Beep_Delay = 423,\n     T_Sim_Duration = 424,\n     T_Server_Offset = 425,\n     T_Duration = 426,\n     T_Freq_Offset = 427,\n     T_Wander = 428,\n     T_Jitter = 429,\n     T_Prop_Delay = 430,\n     T_Proc_Delay = 431\n   };\n#endif\n/* Tokens.  */\n#define T_Age 258\n#define T_All 259\n#define T_Allan 260\n#define T_Auth 261\n#define T_Autokey 262\n#define T_Automax 263\n#define T_Average 264\n#define T_Bclient 265\n#define T_Beacon 266\n#define T_Bias 267\n#define T_Broadcast 268\n#define T_Broadcastclient 269\n#define T_Broadcastdelay 270\n#define T_Burst 271\n#define T_Calibrate 272\n#define T_Calldelay 273\n#define T_Ceiling 274\n#define T_Clockstats 275\n#define T_Cohort 276\n#define T_ControlKey 277\n#define T_Crypto 278\n#define T_Cryptostats 279\n#define T_Day 280\n#define T_Default 281\n#define T_Digest 282\n#define T_Disable 283\n#define T_Discard 284\n#define T_Dispersion 285\n#define T_Double 286\n#define T_Driftfile 287\n#define T_Drop 288\n#define T_Ellipsis 289\n#define T_Enable 290\n#define T_End 291\n#define T_False 292\n#define T_File 293\n#define T_Filegen 294\n#define T_Flag1 295\n#define T_Flag2 296\n#define T_Flag3 297\n#define T_Flag4 298\n#define T_Flake 299\n#define T_Floor 300\n#define T_Freq 301\n#define T_Fudge 302\n#define T_Host 303\n#define T_Huffpuff 304\n#define T_Iburst 305\n#define T_Ident 306\n#define T_Ignore 307\n#define T_Incalloc 308\n#define T_Incmem 309\n#define T_Initalloc 310\n#define T_Initmem 311\n#define T_Includefile 312\n#define T_Integer 313\n#define T_Interface 314\n#define T_Ipv4 315\n#define T_Ipv4_flag 316\n#define T_Ipv6 317\n#define T_Ipv6_flag 318\n#define T_Kernel 319\n#define T_Key 320\n#define T_Keys 321\n#define T_Keysdir 322\n#define T_Kod 323\n#define T_Mssntp 324\n#define T_Leapfile 325\n#define T_Limited 326\n#define T_Link 327\n#define T_Listen 328\n#define T_Logconfig 329\n#define T_Logfile 330\n#define T_Loopstats 331\n#define T_Lowpriotrap 332\n#define T_Manycastclient 333\n#define T_Manycastserver 334\n#define T_Mask 335\n#define T_Maxage 336\n#define T_Maxclock 337\n#define T_Maxdepth 338\n#define T_Maxdist 339\n#define T_Maxmem 340\n#define T_Maxpoll 341\n#define T_Minclock 342\n#define T_Mindepth 343\n#define T_Mindist 344\n#define T_Minimum 345\n#define T_Minpoll 346\n#define T_Minsane 347\n#define T_Mode 348\n#define T_Monitor 349\n#define T_Month 350\n#define T_Mru 351\n#define T_Multicastclient 352\n#define T_Nic 353\n#define T_Nolink 354\n#define T_Nomodify 355\n#define T_None 356\n#define T_Nopeer 357\n#define T_Noquery 358\n#define T_Noselect 359\n#define T_Noserve 360\n#define T_Notrap 361\n#define T_Notrust 362\n#define T_Ntp 363\n#define T_Ntpport 364\n#define T_NtpSignDsocket 365\n#define T_Orphan 366\n#define T_Orphanwait 367\n#define T_Panic 368\n#define T_Peer 369\n#define T_Peerstats 370\n#define T_Phone 371\n#define T_Pid 372\n#define T_Pidfile 373\n#define T_Pool 374\n#define T_Port 375\n#define T_Preempt 376\n#define T_Prefer 377\n#define T_Protostats 378\n#define T_Pw 379\n#define T_Qos 380\n#define T_Randfile 381\n#define T_Rawstats 382\n#define T_Refid 383\n#define T_Requestkey 384\n#define T_Restrict 385\n#define T_Revoke 386\n#define T_Saveconfigdir 387\n#define T_Server 388\n#define T_Setvar 389\n#define T_Sign 390\n#define T_Source 391\n#define T_Statistics 392\n#define T_Stats 393\n#define T_Statsdir 394\n#define T_Step 395\n#define T_Stepout 396\n#define T_Stratum 397\n#define T_String 398\n#define T_Sysstats 399\n#define T_Tick 400\n#define T_Time1 401\n#define T_Time2 402\n#define T_Timingstats 403\n#define T_Tinker 404\n#define T_Tos 405\n#define T_Trap 406\n#define T_True 407\n#define T_Trustedkey 408\n#define T_Ttl 409\n#define T_Type 410\n#define T_Unconfig 411\n#define T_Unpeer 412\n#define T_Version 413\n#define T_WanderThreshold 414\n#define T_Week 415\n#define T_Wildcard 416\n#define T_Xleave 417\n#define T_Year 418\n#define T_Flag 419\n#define T_Void 420\n#define T_EOC 421\n#define T_Simulate 422\n#define T_Beep_Delay 423\n#define T_Sim_Duration 424\n#define T_Server_Offset 425\n#define T_Duration 426\n#define T_Freq_Offset 427\n#define T_Wander 428\n#define T_Jitter 429\n#define T_Prop_Delay 430\n#define T_Proc_Delay 431\n\n\n\n\n#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED\ntypedef union YYSTYPE\n{\n\n/* Line 214 of yacc.c  */\n#line 50 \"ntp_parser.y\"\n\n    char   *String;\n    double  Double;\n    int     Integer;\n    void   *VoidPtr;\n    queue  *Queue;\n    struct attr_val *Attr_val;\n    struct address_node *Address_node;\n    struct setvar_node *Set_var;\n\n    /* Simulation types */\n    server_info *Sim_server;\n    script_info *Sim_script;\n\n\n\n/* Line 214 of yacc.c  */\n#line 512 \"ntp_parser.c\"\n} YYSTYPE;\n# define YYSTYPE_IS_TRIVIAL 1\n# define yystype YYSTYPE /* obsolescent; will be withdrawn */\n# define YYSTYPE_IS_DECLARED 1\n#endif\n\n\n/* Copy the second part of user declarations.  */\n\n\n/* Line 264 of yacc.c  */\n#line 524 \"ntp_parser.c\"\n\n#ifdef short\n# undef short\n#endif\n\n#ifdef YYTYPE_UINT8\ntypedef YYTYPE_UINT8 yytype_uint8;\n#else\ntypedef unsigned char yytype_uint8;\n#endif\n\n#ifdef YYTYPE_INT8\ntypedef YYTYPE_INT8 yytype_int8;\n#elif (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\ntypedef signed char yytype_int8;\n#else\ntypedef short int yytype_int8;\n#endif\n\n#ifdef YYTYPE_UINT16\ntypedef YYTYPE_UINT16 yytype_uint16;\n#else\ntypedef unsigned short int yytype_uint16;\n#endif\n\n#ifdef YYTYPE_INT16\ntypedef YYTYPE_INT16 yytype_int16;\n#else\ntypedef short int yytype_int16;\n#endif\n\n#ifndef YYSIZE_T\n# ifdef __SIZE_TYPE__\n#  define YYSIZE_T __SIZE_TYPE__\n# elif defined size_t\n#  define YYSIZE_T size_t\n# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\n#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */\n#  define YYSIZE_T size_t\n# else\n#  define YYSIZE_T unsigned int\n# endif\n#endif\n\n#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)\n\n#ifndef YY_\n# if YYENABLE_NLS\n#  if ENABLE_NLS\n#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */\n#   define YY_(msgid) dgettext (\"bison-runtime\", msgid)\n#  endif\n# endif\n# ifndef YY_\n#  define YY_(msgid) msgid\n# endif\n#endif\n\n/* Suppress unused-variable warnings by \"using\" E.  */\n#if ! defined lint || defined __GNUC__\n# define YYUSE(e) ((void) (e))\n#else\n# define YYUSE(e) /* empty */\n#endif\n\n/* Identity function, used to suppress warnings about constant conditions.  */\n#ifndef lint\n# define YYID(n) (n)\n#else\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nstatic int\nYYID (int yyi)\n#else\nstatic int\nYYID (yyi)\n    int yyi;\n#endif\n{\n  return yyi;\n}\n#endif\n\n#if ! defined yyoverflow || YYERROR_VERBOSE\n\n/* The parser invokes alloca or malloc; define the necessary symbols.  */\n\n# ifdef YYSTACK_USE_ALLOCA\n#  if YYSTACK_USE_ALLOCA\n#   ifdef __GNUC__\n#    define YYSTACK_ALLOC __builtin_alloca\n#   elif defined __BUILTIN_VA_ARG_INCR\n#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */\n#   elif defined _AIX\n#    define YYSTACK_ALLOC __alloca\n#   elif defined _MSC_VER\n#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */\n#    define alloca _alloca\n#   else\n#    define YYSTACK_ALLOC alloca\n#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\n#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */\n#     ifndef _STDLIB_H\n#      define _STDLIB_H 1\n#     endif\n#    endif\n#   endif\n#  endif\n# endif\n\n# ifdef YYSTACK_ALLOC\n   /* Pacify GCC's `empty if-body' warning.  */\n#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))\n#  ifndef YYSTACK_ALLOC_MAXIMUM\n    /* The OS might guarantee only one guard page at the bottom of the stack,\n       and a page size can be as small as 4096 bytes.  So we cannot safely\n       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number\n       to allow for a few compiler-allocated temporary stack slots.  */\n#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */\n#  endif\n# else\n#  define YYSTACK_ALLOC YYMALLOC\n#  define YYSTACK_FREE YYFREE\n#  ifndef YYSTACK_ALLOC_MAXIMUM\n#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM\n#  endif\n#  if (defined __cplusplus && ! defined _STDLIB_H \\\n       && ! ((defined YYMALLOC || defined malloc) \\\n\t     && (defined YYFREE || defined free)))\n#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */\n#   ifndef _STDLIB_H\n#    define _STDLIB_H 1\n#   endif\n#  endif\n#  ifndef YYMALLOC\n#   define YYMALLOC malloc\n#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nvoid *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */\n#   endif\n#  endif\n#  ifndef YYFREE\n#   define YYFREE free\n#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nvoid free (void *); /* INFRINGES ON USER NAME SPACE */\n#   endif\n#  endif\n# endif\n#endif /* ! defined yyoverflow || YYERROR_VERBOSE */\n\n\n#if (! defined yyoverflow \\\n     && (! defined __cplusplus \\\n\t || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))\n\n/* A type that is properly aligned for any stack member.  */\nunion yyalloc\n{\n  yytype_int16 yyss_alloc;\n  YYSTYPE yyvs_alloc;\n};\n\n/* The size of the maximum gap between one aligned stack and the next.  */\n# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)\n\n/* The size of an array large to enough to hold all stacks, each with\n   N elements.  */\n# define YYSTACK_BYTES(N) \\\n     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \\\n      + YYSTACK_GAP_MAXIMUM)\n\n/* Copy COUNT objects from FROM to TO.  The source and destination do\n   not overlap.  */\n# ifndef YYCOPY\n#  if defined __GNUC__ && 1 < __GNUC__\n#   define YYCOPY(To, From, Count) \\\n      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))\n#  else\n#   define YYCOPY(To, From, Count)\t\t\\\n      do\t\t\t\t\t\\\n\t{\t\t\t\t\t\\\n\t  YYSIZE_T yyi;\t\t\t\t\\\n\t  for (yyi = 0; yyi < (Count); yyi++)\t\\\n\t    (To)[yyi] = (From)[yyi];\t\t\\\n\t}\t\t\t\t\t\\\n      while (YYID (0))\n#  endif\n# endif\n\n/* Relocate STACK from its old location to the new one.  The\n   local variables YYSIZE and YYSTACKSIZE give the old and new number of\n   elements in the stack, and YYPTR gives the new location of the\n   stack.  Advance YYPTR to a properly aligned location for the next\n   stack.  */\n# define YYSTACK_RELOCATE(Stack_alloc, Stack)\t\t\t\t\\\n    do\t\t\t\t\t\t\t\t\t\\\n      {\t\t\t\t\t\t\t\t\t\\\n\tYYSIZE_T yynewbytes;\t\t\t\t\t\t\\\n\tYYCOPY (&yyptr->Stack_alloc, Stack, yysize);\t\t\t\\\n\tStack = &yyptr->Stack_alloc;\t\t\t\t\t\\\n\tyynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \\\n\tyyptr += yynewbytes / sizeof (*yyptr);\t\t\t\t\\\n      }\t\t\t\t\t\t\t\t\t\\\n    while (YYID (0))\n\n#endif\n\n/* YYFINAL -- State number of the termination state.  */\n#define YYFINAL  190\n/* YYLAST -- Last index in YYTABLE.  */\n#define YYLAST   718\n\n/* YYNTOKENS -- Number of terminals.  */\n#define YYNTOKENS  182\n/* YYNNTS -- Number of nonterminals.  */\n#define YYNNTS  73\n/* YYNRULES -- Number of rules.  */\n#define YYNRULES  263\n/* YYNRULES -- Number of states.  */\n#define YYNSTATES  417\n\n/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */\n#define YYUNDEFTOK  2\n#define YYMAXUTOK   431\n\n#define YYTRANSLATE(YYX)\t\t\t\t\t\t\\\n  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)\n\n/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */\nstatic const yytype_uint8 yytranslate[] =\n{\n       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n     178,   179,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,   177,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,   180,     2,   181,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,\n       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,\n      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,\n      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,\n      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,\n      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,\n      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,\n      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,\n      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,\n      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,\n      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,\n     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,\n     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,\n     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,\n     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,\n     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,\n     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,\n     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,\n     175,   176\n};\n\n#if YYDEBUG\n/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in\n   YYRHS.  */\nstatic const yytype_uint16 yyprhs[] =\n{\n       0,     0,     3,     5,     9,    12,    15,    16,    18,    20,\n      22,    24,    26,    28,    30,    32,    34,    36,    38,    40,\n      44,    47,    49,    51,    53,    55,    57,    59,    62,    65,\n      67,    70,    72,    74,    77,    79,    81,    84,    87,    90,\n      92,    94,    96,    98,   100,   103,   106,   109,   112,   114,\n     116,   118,   121,   124,   127,   130,   133,   136,   139,   142,\n     145,   148,   151,   153,   154,   157,   159,   162,   165,   168,\n     171,   174,   177,   180,   183,   186,   188,   191,   194,   197,\n     200,   203,   206,   209,   212,   215,   218,   221,   224,   227,\n     231,   234,   236,   238,   240,   242,   244,   246,   248,   250,\n     252,   255,   257,   260,   263,   265,   267,   269,   271,   273,\n     275,   277,   279,   281,   283,   285,   288,   291,   295,   301,\n     305,   310,   315,   319,   320,   323,   325,   327,   329,   331,\n     333,   335,   337,   339,   341,   343,   345,   347,   349,   351,\n     354,   356,   359,   362,   365,   368,   370,   373,   376,   379,\n     382,   385,   388,   391,   394,   398,   401,   403,   406,   409,\n     412,   415,   418,   421,   424,   427,   430,   433,   436,   438,\n     440,   442,   444,   446,   448,   450,   452,   455,   458,   460,\n     463,   466,   469,   472,   475,   478,   481,   483,   487,   489,\n     492,   495,   498,   501,   504,   507,   510,   513,   516,   519,\n     522,   525,   529,   532,   535,   537,   540,   541,   546,   550,\n     553,   555,   558,   561,   564,   566,   568,   572,   576,   578,\n     580,   582,   584,   586,   588,   590,   592,   594,   597,   599,\n     602,   604,   606,   608,   614,   617,   619,   622,   624,   626,\n     628,   630,   632,   634,   640,   642,   646,   649,   653,   657,\n     660,   662,   668,   673,   677,   680,   682,   689,   693,   696,\n     700,   704,   708,   712\n};\n\n/* YYRHS -- A `-1'-separated list of the rules' RHS.  */\nstatic const yytype_int16 yyrhs[] =\n{\n     183,     0,    -1,   184,    -1,   184,   185,   166,    -1,   185,\n     166,    -1,     1,   166,    -1,    -1,   186,    -1,   192,    -1,\n     194,    -1,   195,    -1,   202,    -1,   208,    -1,   199,    -1,\n     215,    -1,   218,    -1,   221,    -1,   224,    -1,   243,    -1,\n     187,   188,   190,    -1,   187,   188,    -1,   133,    -1,   119,\n      -1,   114,    -1,    13,    -1,    78,    -1,   189,    -1,    61,\n     143,    -1,    63,   143,    -1,   143,    -1,   190,   191,    -1,\n     191,    -1,     7,    -1,    12,   242,    -1,    16,    -1,    50,\n      -1,    65,    58,    -1,    91,    58,    -1,    86,    58,    -1,\n     104,    -1,   121,    -1,   122,    -1,   152,    -1,   162,    -1,\n     154,    58,    -1,    93,    58,    -1,   158,    58,    -1,   193,\n     188,    -1,   156,    -1,   157,    -1,    14,    -1,    79,   240,\n      -1,    97,   240,    -1,     8,    58,    -1,    22,    58,    -1,\n      23,   196,    -1,    66,   143,    -1,    67,   143,    -1,   129,\n      58,    -1,   131,    58,    -1,   153,   236,    -1,   110,   143,\n      -1,   197,    -1,    -1,   197,   198,    -1,   198,    -1,    48,\n     143,    -1,    51,   143,    -1,   124,   143,    -1,   126,   143,\n      -1,   135,   143,    -1,    27,   143,    -1,   131,    58,    -1,\n     150,   200,    -1,   200,   201,    -1,   201,    -1,    19,    58,\n      -1,    45,    58,    -1,    21,   241,    -1,   111,    58,    -1,\n     112,    58,    -1,    89,   242,    -1,    84,   242,    -1,    87,\n     242,    -1,    82,   242,    -1,    92,    58,    -1,    11,    58,\n      -1,   137,   203,    -1,   139,   143,    -1,    39,   204,   205,\n      -1,   203,   204,    -1,   204,    -1,    20,    -1,    24,    -1,\n      76,    -1,   115,    -1,   127,    -1,   144,    -1,   148,    -1,\n     123,    -1,   205,   206,    -1,   206,    -1,    38,   143,    -1,\n     155,   207,    -1,    72,    -1,    99,    -1,    35,    -1,    28,\n      -1,   101,    -1,   117,    -1,    25,    -1,   160,    -1,    95,\n      -1,   163,    -1,     3,    -1,    29,   211,    -1,    96,   213,\n      -1,   130,   188,   209,    -1,   130,   189,    80,   189,   209,\n      -1,   130,    26,   209,    -1,   130,    61,    26,   209,    -1,\n     130,    63,    26,   209,    -1,   130,   136,   209,    -1,    -1,\n     209,   210,    -1,    44,    -1,    52,    -1,    68,    -1,    69,\n      -1,    71,    -1,    77,    -1,   100,    -1,   102,    -1,   103,\n      -1,   105,    -1,   106,    -1,   107,    -1,   109,    -1,   158,\n      -1,   211,   212,    -1,   212,    -1,     9,    58,    -1,    90,\n      58,    -1,    94,    58,    -1,   213,   214,    -1,   214,    -1,\n      53,    58,    -1,    54,    58,    -1,    55,    58,    -1,    56,\n      58,    -1,    81,    58,    -1,    83,    58,    -1,    85,    58,\n      -1,    88,    58,    -1,    47,   188,   216,    -1,   216,   217,\n      -1,   217,    -1,   146,   242,    -1,   147,   242,    -1,   142,\n      58,    -1,   128,   143,    -1,    40,   241,    -1,    41,   241,\n      -1,    42,   241,    -1,    43,   241,    -1,    35,   219,    -1,\n      28,   219,    -1,   219,   220,    -1,   220,    -1,     6,    -1,\n      10,    -1,    17,    -1,    64,    -1,    94,    -1,   108,    -1,\n     138,    -1,   149,   222,    -1,   222,   223,    -1,   223,    -1,\n       5,   242,    -1,    30,   242,    -1,    46,   242,    -1,    49,\n     242,    -1,   113,   242,    -1,   140,   242,    -1,   141,   242,\n      -1,   231,    -1,    57,   143,   185,    -1,    36,    -1,    15,\n     242,    -1,    18,    58,    -1,   145,   242,    -1,    32,   225,\n      -1,    70,   143,    -1,   118,   143,    -1,    75,   143,    -1,\n      74,   229,    -1,   116,   239,    -1,   132,   143,    -1,   134,\n     226,    -1,   151,   189,    -1,   151,   189,   227,    -1,   154,\n     235,    -1,   125,   143,    -1,   143,    -1,   143,    31,    -1,\n      -1,   143,   177,   143,    26,    -1,   143,   177,   143,    -1,\n     227,   228,    -1,   228,    -1,   120,    58,    -1,    59,   189,\n      -1,   229,   230,    -1,   230,    -1,   143,    -1,   232,   234,\n     233,    -1,   232,   234,   143,    -1,    59,    -1,    98,    -1,\n       4,    -1,    60,    -1,    62,    -1,   161,    -1,    73,    -1,\n      52,    -1,    33,    -1,   235,    58,    -1,    58,    -1,   236,\n     237,    -1,   237,    -1,    58,    -1,   238,    -1,   178,    58,\n      34,    58,   179,    -1,   239,   143,    -1,   143,    -1,   240,\n     188,    -1,   188,    -1,    58,    -1,   152,    -1,    37,    -1,\n      58,    -1,    31,    -1,   244,   180,   245,   247,   181,    -1,\n     167,    -1,   245,   246,   166,    -1,   246,   166,    -1,   168,\n     177,   242,    -1,   169,   177,   242,    -1,   247,   248,    -1,\n     248,    -1,   250,   180,   249,   251,   181,    -1,   170,   177,\n     242,   166,    -1,   133,   177,   188,    -1,   251,   252,    -1,\n     252,    -1,   171,   177,   242,   180,   253,   181,    -1,   253,\n     254,   166,    -1,   254,   166,    -1,   172,   177,   242,    -1,\n     173,   177,   242,    -1,   174,   177,   242,    -1,   175,   177,\n     242,    -1,   176,   177,   242,    -1\n};\n\n/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */\nstatic const yytype_uint16 yyrline[] =\n{\n       0,   313,   313,   317,   318,   319,   333,   334,   335,   336,\n     337,   338,   339,   340,   341,   342,   343,   344,   345,   353,\n     359,   368,   369,   370,   371,   372,   376,   377,   378,   382,\n     386,   387,   391,   392,   393,   394,   395,   396,   397,   398,\n     399,   400,   401,   402,   403,   404,   405,   414,   422,   423,\n     433,   435,   437,   448,   450,   452,   457,   459,   461,   463,\n     465,   467,   472,   474,   478,   485,   495,   497,   499,   501,\n     503,   505,   507,   524,   529,   530,   534,   536,   538,   540,\n     542,   544,   546,   548,   550,   552,   554,   564,   566,   575,\n     583,   584,   588,   589,   590,   591,   592,   593,   594,   595,\n     599,   606,   616,   626,   635,   644,   653,   654,   658,   659,\n     660,   661,   662,   663,   664,   673,   677,   681,   686,   691,\n     696,   709,   722,   734,   735,   740,   741,   742,   743,   744,\n     745,   746,   747,   748,   749,   750,   751,   752,   753,   757,\n     759,   764,   765,   766,   770,   772,   777,   778,   779,   780,\n     781,   782,   783,   784,   792,   797,   799,   804,   805,   806,\n     807,   808,   809,   810,   811,   819,   821,   826,   833,   843,\n     844,   845,   846,   847,   848,   849,   865,   869,   870,   874,\n     875,   876,   877,   878,   879,   880,   889,   890,   906,   912,\n     914,   916,   918,   920,   923,   925,   936,   938,   940,   950,\n     952,   954,   956,   958,   963,   965,   969,   973,   975,   980,\n     982,   986,   987,   991,   992,   996,  1021,  1026,  1034,  1035,\n    1039,  1040,  1041,  1042,  1046,  1047,  1048,  1058,  1059,  1063,\n    1065,  1070,  1072,  1076,  1081,  1082,  1086,  1087,  1091,  1100,\n    1101,  1105,  1106,  1115,  1130,  1134,  1135,  1139,  1140,  1144,\n    1145,  1149,  1154,  1158,  1162,  1163,  1167,  1172,  1173,  1177,\n    1179,  1181,  1183,  1185\n};\n#endif\n\n#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE\n/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.\n   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */\nstatic const char *const yytname[] =\n{\n  \"$end\", \"error\", \"$undefined\", \"T_Age\", \"T_All\", \"T_Allan\", \"T_Auth\",\n  \"T_Autokey\", \"T_Automax\", \"T_Average\", \"T_Bclient\", \"T_Beacon\", \"T_Bias\",\n  \"T_Broadcast\", \"T_Broadcastclient\", \"T_Broadcastdelay\", \"T_Burst\",\n  \"T_Calibrate\", \"T_Calldelay\", \"T_Ceiling\", \"T_Clockstats\", \"T_Cohort\",\n  \"T_ControlKey\", \"T_Crypto\", \"T_Cryptostats\", \"T_Day\", \"T_Default\",\n  \"T_Digest\", \"T_Disable\", \"T_Discard\", \"T_Dispersion\", \"T_Double\",\n  \"T_Driftfile\", \"T_Drop\", \"T_Ellipsis\", \"T_Enable\", \"T_End\", \"T_False\",\n  \"T_File\", \"T_Filegen\", \"T_Flag1\", \"T_Flag2\", \"T_Flag3\", \"T_Flag4\",\n  \"T_Flake\", \"T_Floor\", \"T_Freq\", \"T_Fudge\", \"T_Host\", \"T_Huffpuff\",\n  \"T_Iburst\", \"T_Ident\", \"T_Ignore\", \"T_Incalloc\", \"T_Incmem\",\n  \"T_Initalloc\", \"T_Initmem\", \"T_Includefile\", \"T_Integer\", \"T_Interface\",\n  \"T_Ipv4\", \"T_Ipv4_flag\", \"T_Ipv6\", \"T_Ipv6_flag\", \"T_Kernel\", \"T_Key\",\n  \"T_Keys\", \"T_Keysdir\", \"T_Kod\", \"T_Mssntp\", \"T_Leapfile\", \"T_Limited\",\n  \"T_Link\", \"T_Listen\", \"T_Logconfig\", \"T_Logfile\", \"T_Loopstats\",\n  \"T_Lowpriotrap\", \"T_Manycastclient\", \"T_Manycastserver\", \"T_Mask\",\n  \"T_Maxage\", \"T_Maxclock\", \"T_Maxdepth\", \"T_Maxdist\", \"T_Maxmem\",\n  \"T_Maxpoll\", \"T_Minclock\", \"T_Mindepth\", \"T_Mindist\", \"T_Minimum\",\n  \"T_Minpoll\", \"T_Minsane\", \"T_Mode\", \"T_Monitor\", \"T_Month\", \"T_Mru\",\n  \"T_Multicastclient\", \"T_Nic\", \"T_Nolink\", \"T_Nomodify\", \"T_None\",\n  \"T_Nopeer\", \"T_Noquery\", \"T_Noselect\", \"T_Noserve\", \"T_Notrap\",\n  \"T_Notrust\", \"T_Ntp\", \"T_Ntpport\", \"T_NtpSignDsocket\", \"T_Orphan\",\n  \"T_Orphanwait\", \"T_Panic\", \"T_Peer\", \"T_Peerstats\", \"T_Phone\", \"T_Pid\",\n  \"T_Pidfile\", \"T_Pool\", \"T_Port\", \"T_Preempt\", \"T_Prefer\", \"T_Protostats\",\n  \"T_Pw\", \"T_Qos\", \"T_Randfile\", \"T_Rawstats\", \"T_Refid\", \"T_Requestkey\",\n  \"T_Restrict\", \"T_Revoke\", \"T_Saveconfigdir\", \"T_Server\", \"T_Setvar\",\n  \"T_Sign\", \"T_Source\", \"T_Statistics\", \"T_Stats\", \"T_Statsdir\", \"T_Step\",\n  \"T_Stepout\", \"T_Stratum\", \"T_String\", \"T_Sysstats\", \"T_Tick\", \"T_Time1\",\n  \"T_Time2\", \"T_Timingstats\", \"T_Tinker\", \"T_Tos\", \"T_Trap\", \"T_True\",\n  \"T_Trustedkey\", \"T_Ttl\", \"T_Type\", \"T_Unconfig\", \"T_Unpeer\", \"T_Version\",\n  \"T_WanderThreshold\", \"T_Week\", \"T_Wildcard\", \"T_Xleave\", \"T_Year\",\n  \"T_Flag\", \"T_Void\", \"T_EOC\", \"T_Simulate\", \"T_Beep_Delay\",\n  \"T_Sim_Duration\", \"T_Server_Offset\", \"T_Duration\", \"T_Freq_Offset\",\n  \"T_Wander\", \"T_Jitter\", \"T_Prop_Delay\", \"T_Proc_Delay\", \"'='\", \"'('\",\n  \"')'\", \"'{'\", \"'}'\", \"$accept\", \"configuration\", \"command_list\",\n  \"command\", \"server_command\", \"client_type\", \"address\", \"ip_address\",\n  \"option_list\", \"option\", \"unpeer_command\", \"unpeer_keyword\",\n  \"other_mode_command\", \"authentication_command\", \"crypto_command_line\",\n  \"crypto_command_list\", \"crypto_command\", \"orphan_mode_command\",\n  \"tos_option_list\", \"tos_option\", \"monitoring_command\", \"stats_list\",\n  \"stat\", \"filegen_option_list\", \"filegen_option\", \"filegen_type\",\n  \"access_control_command\", \"ac_flag_list\", \"access_control_flag\",\n  \"discard_option_list\", \"discard_option\", \"mru_option_list\", \"mru_option\",\n  \"fudge_command\", \"fudge_factor_list\", \"fudge_factor\",\n  \"system_option_command\", \"system_option_list\", \"system_option\",\n  \"tinker_command\", \"tinker_option_list\", \"tinker_option\",\n  \"miscellaneous_command\", \"drift_parm\", \"variable_assign\",\n  \"trap_option_list\", \"trap_option\", \"log_config_list\",\n  \"log_config_command\", \"interface_command\", \"interface_nic\",\n  \"nic_rule_class\", \"nic_rule_action\", \"integer_list\",\n  \"integer_list_range\", \"integer_list_range_elt\", \"integer_range\",\n  \"string_list\", \"address_list\", \"boolean\", \"number\", \"simulate_command\",\n  \"sim_conf_start\", \"sim_init_statement_list\", \"sim_init_statement\",\n  \"sim_server_list\", \"sim_server\", \"sim_server_offset\", \"sim_server_name\",\n  \"sim_act_list\", \"sim_act\", \"sim_act_stmt_list\", \"sim_act_stmt\", 0\n};\n#endif\n\n# ifdef YYPRINT\n/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to\n   token YYLEX-NUM.  */\nstatic const yytype_uint16 yytoknum[] =\n{\n       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,\n     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,\n     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,\n     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,\n     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,\n     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,\n     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,\n     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,\n     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,\n     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,\n     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,\n     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,\n     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,\n     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,\n     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,\n     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,\n     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,\n     425,   426,   427,   428,   429,   430,   431,    61,    40,    41,\n     123,   125\n};\n# endif\n\n/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */\nstatic const yytype_uint8 yyr1[] =\n{\n       0,   182,   183,   184,   184,   184,   185,   185,   185,   185,\n     185,   185,   185,   185,   185,   185,   185,   185,   185,   186,\n     186,   187,   187,   187,   187,   187,   188,   188,   188,   189,\n     190,   190,   191,   191,   191,   191,   191,   191,   191,   191,\n     191,   191,   191,   191,   191,   191,   191,   192,   193,   193,\n     194,   194,   194,   195,   195,   195,   195,   195,   195,   195,\n     195,   195,   196,   196,   197,   197,   198,   198,   198,   198,\n     198,   198,   198,   199,   200,   200,   201,   201,   201,   201,\n     201,   201,   201,   201,   201,   201,   201,   202,   202,   202,\n     203,   203,   204,   204,   204,   204,   204,   204,   204,   204,\n     205,   205,   206,   206,   206,   206,   206,   206,   207,   207,\n     207,   207,   207,   207,   207,   208,   208,   208,   208,   208,\n     208,   208,   208,   209,   209,   210,   210,   210,   210,   210,\n     210,   210,   210,   210,   210,   210,   210,   210,   210,   211,\n     211,   212,   212,   212,   213,   213,   214,   214,   214,   214,\n     214,   214,   214,   214,   215,   216,   216,   217,   217,   217,\n     217,   217,   217,   217,   217,   218,   218,   219,   219,   220,\n     220,   220,   220,   220,   220,   220,   221,   222,   222,   223,\n     223,   223,   223,   223,   223,   223,   224,   224,   224,   224,\n     224,   224,   224,   224,   224,   224,   224,   224,   224,   224,\n     224,   224,   224,   224,   225,   225,   225,   226,   226,   227,\n     227,   228,   228,   229,   229,   230,   231,   231,   232,   232,\n     233,   233,   233,   233,   234,   234,   234,   235,   235,   236,\n     236,   237,   237,   238,   239,   239,   240,   240,   241,   241,\n     241,   242,   242,   243,   244,   245,   245,   246,   246,   247,\n     247,   248,   249,   250,   251,   251,   252,   253,   253,   254,\n     254,   254,   254,   254\n};\n\n/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */\nstatic const yytype_uint8 yyr2[] =\n{\n       0,     2,     1,     3,     2,     2,     0,     1,     1,     1,\n       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,\n       2,     1,     1,     1,     1,     1,     1,     2,     2,     1,\n       2,     1,     1,     2,     1,     1,     2,     2,     2,     1,\n       1,     1,     1,     1,     2,     2,     2,     2,     1,     1,\n       1,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     2,     1,     0,     2,     1,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     1,     2,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     3,\n       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,\n       2,     1,     2,     2,     1,     1,     1,     1,     1,     1,\n       1,     1,     1,     1,     1,     2,     2,     3,     5,     3,\n       4,     4,     3,     0,     2,     1,     1,     1,     1,     1,\n       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,\n       1,     2,     2,     2,     2,     1,     2,     2,     2,     2,\n       2,     2,     2,     2,     3,     2,     1,     2,     2,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     1,     1,\n       1,     1,     1,     1,     1,     1,     2,     2,     1,     2,\n       2,     2,     2,     2,     2,     2,     1,     3,     1,     2,\n       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n       2,     3,     2,     2,     1,     2,     0,     4,     3,     2,\n       1,     2,     2,     2,     1,     1,     3,     3,     1,     1,\n       1,     1,     1,     1,     1,     1,     1,     2,     1,     2,\n       1,     1,     1,     5,     2,     1,     2,     1,     1,     1,\n       1,     1,     1,     5,     1,     3,     2,     3,     3,     2,\n       1,     5,     4,     3,     2,     1,     6,     3,     2,     3,\n       3,     3,     3,     3\n};\n\n/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state\n   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero\n   means the default is an error.  */\nstatic const yytype_uint16 yydefact[] =\n{\n       0,     0,     0,    24,    50,     0,     0,     0,    63,     0,\n       0,   206,     0,   188,     0,     0,     0,   218,     0,     0,\n       0,     0,     0,    25,     0,     0,     0,   219,     0,    23,\n       0,     0,    22,     0,     0,     0,     0,     0,    21,     0,\n       0,     0,     0,     0,     0,     0,     0,     0,    48,    49,\n     244,     0,     2,     0,     7,     0,     8,     0,     9,    10,\n      13,    11,    12,    14,    15,    16,    17,   186,     0,    18,\n       0,     5,    53,   242,   241,   189,   190,    54,     0,     0,\n       0,     0,     0,     0,     0,    55,    62,    65,   169,   170,\n     171,   172,   173,   174,   175,   166,   168,     0,     0,     0,\n     115,   140,   204,   192,   165,    92,    93,    94,    95,    99,\n      96,    97,    98,     0,     0,     0,    29,     0,    26,     6,\n      56,    57,   193,   215,   196,   214,   195,   237,    51,     0,\n       0,     0,     0,     0,     0,     0,     0,   116,   145,    52,\n      61,   235,   197,   194,   203,    58,   123,     0,     0,   123,\n     123,    26,    59,   198,     0,   199,    87,    91,    88,   191,\n       0,     0,     0,     0,     0,     0,     0,   176,   178,     0,\n       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n      73,    75,   200,   231,     0,    60,   230,   232,   228,   202,\n       1,     0,     4,    20,    47,   226,   225,   224,     0,     0,\n      71,    66,    67,    68,    69,    72,    70,    64,   167,   141,\n     142,   143,   139,   205,   107,   106,     0,   104,   105,     0,\n      89,   101,    27,    28,     0,     0,     0,     0,     0,     0,\n       0,     0,   154,   156,   187,   213,   236,   146,   147,   148,\n     149,   150,   151,   152,   153,   144,   234,   119,   123,   123,\n     122,   117,     0,     0,    90,   179,   180,   181,   182,   183,\n     184,   185,   177,    86,    76,   240,   238,   239,    78,    77,\n      84,    82,    83,    81,    85,    79,    80,    74,     0,     0,\n     201,   210,     0,   229,   227,     3,    32,     0,    34,    35,\n       0,     0,     0,     0,    39,    40,    41,    42,     0,     0,\n      43,    19,    31,   220,   221,   222,   217,   223,   216,     0,\n       0,     0,     0,   102,   114,   110,   112,   108,   109,   111,\n     113,   103,   100,   161,   162,   163,   164,   160,   159,   157,\n     158,   155,   125,   126,   127,   128,   129,   130,   131,   132,\n     133,   134,   135,   136,   137,   138,   124,   120,   121,   123,\n     208,   212,   211,   209,     0,    33,    36,    38,    37,    45,\n      44,    46,    30,     0,     0,     0,     0,     0,   250,     0,\n     246,   118,   207,     0,   247,   248,     0,   245,   243,   249,\n       0,   233,   253,     0,     0,     0,     0,     0,   255,     0,\n       0,   251,   254,   252,     0,     0,     0,     0,     0,     0,\n       0,     0,     0,     0,     0,     0,     0,     0,   256,     0,\n     258,   259,   260,   261,   262,   263,   257\n};\n\n/* YYDEFGOTO[NTERM-NUM].  */\nstatic const yytype_int16 yydefgoto[] =\n{\n      -1,    51,    52,    53,    54,    55,   127,   118,   301,   302,\n      56,    57,    58,    59,    85,    86,    87,    60,   180,   181,\n      61,   156,   113,   220,   221,   321,    62,   247,   346,   100,\n     101,   137,   138,    63,   232,   233,    64,    95,    96,    65,\n     167,   168,    66,   103,   155,   280,   281,   124,   125,    67,\n      68,   308,   198,   189,   185,   186,   187,   142,   128,   268,\n      75,    69,    70,   311,   312,   367,   368,   384,   369,   387,\n     388,   401,   402\n};\n\n/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing\n   STATE-NUM.  */\n#define YYPACT_NINF -148\nstatic const yytype_int16 yypact[] =\n{\n     137,  -132,   -20,  -148,  -148,    -7,   -17,   -16,    44,    -1,\n       9,   -99,    -1,  -148,   115,   -46,   -98,  -148,   -97,   -95,\n     -94,   -90,   -88,  -148,   -46,   144,   -46,  -148,   -85,  -148,\n     -84,   -78,  -148,   -77,    -2,    13,    12,   -71,  -148,   -70,\n     115,   -66,    -7,     1,   538,   -65,   -51,    32,  -148,  -148,\n    -148,    91,   310,   -68,  -148,   -46,  -148,   -46,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,   -12,  -148,\n     -80,  -148,  -148,  -148,  -148,  -148,  -148,  -148,   -47,   -39,\n     -38,   -28,   -27,    55,   -26,  -148,    44,  -148,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,    -1,  -148,    71,    72,    86,\n       9,  -148,   117,  -148,    -1,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,   -15,    10,    14,  -148,    39,  -148,   457,\n    -148,  -148,  -148,  -148,   -90,  -148,  -148,  -148,   -46,    96,\n     104,   105,   106,   119,   120,   122,   124,   144,  -148,   -46,\n    -148,  -148,    40,  -148,  -148,  -148,  -148,     3,     4,  -148,\n    -148,   107,  -148,  -148,    15,  -148,   115,  -148,  -148,  -148,\n      -7,    -7,    -7,    -7,    -7,    -7,    -7,     1,  -148,   132,\n     135,     6,   143,    -7,    -7,    -7,    -7,   147,   148,   150,\n     538,  -148,   -37,  -148,   151,   -51,  -148,  -148,  -148,   152,\n    -148,    29,  -148,   530,  -148,  -148,  -148,  -148,     0,  -142,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,  -148,    70,  -148,  -148,    11,\n     -15,  -148,  -148,  -148,     6,     6,     6,     6,    74,   156,\n      -7,    -7,    39,  -148,  -148,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148,   560,  -148,  -148,\n     560,   560,   -65,    81,  -148,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,   -65,   168,\n     -37,  -148,   194,  -148,  -148,  -148,  -148,    -7,  -148,  -148,\n     173,   178,   179,   181,  -148,  -148,  -148,  -148,   182,   183,\n    -148,   530,  -148,  -148,  -148,  -148,  -148,  -148,  -148,    66,\n      69,  -100,    82,  -148,  -148,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148,   560,   560,  -148,\n     223,  -148,  -148,  -148,   192,  -148,  -148,  -148,  -148,  -148,\n    -148,  -148,  -148,    -7,    -7,    75,    88,  -114,  -148,    77,\n    -148,   560,  -148,    79,  -148,  -148,   -46,  -148,  -148,  -148,\n      90,  -148,  -148,    84,    93,    -7,    95,  -146,  -148,    99,\n      -7,  -148,  -148,  -148,    97,    47,    98,   101,   102,   103,\n     108,   -87,   118,    -7,    -7,    -7,    -7,    -7,  -148,   123,\n    -148,  -148,  -148,  -148,  -148,  -148,  -148\n};\n\n/* YYPGOTO[NTERM-NUM].  */\nstatic const yytype_int16 yypgoto[] =\n{\n    -148,  -148,  -148,   -44,  -148,  -148,    -3,   -34,  -148,   -18,\n    -148,  -148,  -148,  -148,  -148,  -148,   187,  -148,  -148,   112,\n    -148,  -148,   -30,  -148,    61,  -148,  -148,  -147,  -148,  -148,\n     195,  -148,   159,  -148,  -148,    65,  -148,   286,   -67,  -148,\n    -148,   133,  -148,  -148,  -148,  -148,    19,  -148,   177,  -148,\n    -148,  -148,  -148,  -148,  -148,   121,  -148,  -148,   276,  -116,\n     -42,  -148,  -148,  -148,    -6,  -148,   -60,  -148,  -148,  -148,\n     -79,  -148,   -92\n};\n\n/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If\n   positive, shift that token.  If negative, reduce the rule which\n   number is the opposite.  If zero, do what YYDEFACT says.\n   If YYTABLE_NINF, syntax error.  */\n#define YYTABLE_NINF -7\nstatic const yytype_int16 yytable[] =\n{\n     159,   151,   250,   251,   303,    88,   160,   183,   191,    89,\n     157,   182,   117,   214,   314,   114,    90,   115,    97,   365,\n     215,   195,   278,   216,    73,   386,   309,   310,   208,   248,\n     249,   161,   150,   365,    71,   391,   315,   208,    72,   146,\n     196,    76,    77,   265,   102,   119,   120,   162,   121,   122,\n     163,    74,   193,   123,   194,   126,   145,   217,   140,   141,\n     304,   197,   305,    91,   266,   143,   144,   378,   309,   310,\n     152,    78,   153,   154,   147,   234,   148,   158,   116,   224,\n     225,   226,   227,   279,   218,   396,   397,   398,   399,   400,\n     188,   190,    79,    92,   408,    80,   200,   116,   192,    98,\n     199,   347,   348,    99,   201,   202,   316,    93,   323,   324,\n     325,   326,   317,   205,   164,   203,   204,   206,   255,   256,\n     257,   258,   259,   260,   261,   236,   254,   184,   318,   209,\n     210,   270,   271,   272,   273,   105,   236,    94,     1,   106,\n     219,   165,   166,   306,   211,     2,   222,   223,   213,   149,\n       3,     4,     5,   222,   237,     6,   116,   223,   267,     7,\n       8,   307,   238,   239,   240,     9,    10,   228,    81,    11,\n      82,   319,    12,    13,   320,    83,    14,   241,   242,    84,\n     243,   229,   244,   246,    15,   230,   231,   252,   329,   330,\n     263,   107,   253,   264,    16,   285,    17,   129,   130,   131,\n     132,   269,   371,    18,    19,   274,   275,    20,   276,   282,\n     284,    21,    22,   313,   328,    23,    24,   327,   349,   396,\n     397,   398,   399,   400,   350,   133,   352,   134,   354,   135,\n     108,   356,   136,    25,    26,    27,   357,   358,   109,   359,\n     360,   361,   110,   363,   351,   355,   364,    28,   370,   372,\n     373,    29,   376,    30,   377,    31,    32,   380,   381,   111,\n     383,   385,    33,   112,   386,   393,    34,    35,    36,    37,\n      38,    39,   390,   207,    40,   403,    41,   395,   404,   405,\n     406,   322,    42,   362,   410,   407,    43,    44,    45,   416,\n      46,    47,   277,    48,    49,   212,   245,   331,   104,   353,\n     262,   235,   139,    -6,    50,   366,   283,   379,   392,   409,\n       0,     0,     0,     0,     0,     0,     0,     0,     2,     0,\n       0,   374,   375,     3,     4,     5,     0,     0,     6,     0,\n       0,     0,     7,     8,     0,     0,     0,     0,     9,    10,\n       0,     0,    11,   389,     0,    12,    13,     0,   394,    14,\n       0,     0,     0,     0,     0,     0,     0,    15,     0,     0,\n       0,   411,   412,   413,   414,   415,     0,    16,     0,    17,\n       0,     0,     0,   382,     0,     0,    18,    19,     0,     0,\n      20,     0,     0,     0,    21,    22,     0,     0,    23,    24,\n       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n       0,     0,     0,     0,     0,     0,    25,    26,    27,     0,\n       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n      28,     0,     0,     0,    29,     0,    30,     0,    31,    32,\n       0,     0,     0,     0,     0,    33,     0,     0,     0,    34,\n      35,    36,    37,    38,    39,     0,     0,    40,     0,    41,\n       0,     0,     0,     0,     0,    42,     0,     0,     0,    43,\n      44,    45,     0,    46,    47,     2,    48,    49,     0,     0,\n       3,     4,     5,     0,     0,     6,    -6,    50,     0,     7,\n       8,     0,     0,     0,     0,     9,    10,     0,     0,    11,\n       0,     0,    12,    13,     0,     0,    14,     0,     0,     0,\n       0,     0,     0,     0,    15,     0,     0,     0,     0,     0,\n       0,     0,     0,     0,    16,     0,    17,     0,     0,     0,\n       0,     0,     0,    18,    19,     0,     0,    20,     0,     0,\n       0,    21,    22,     0,     0,    23,    24,   286,     0,     0,\n       0,     0,   287,     0,     0,     0,   288,     0,     0,   169,\n       0,     0,     0,    25,    26,    27,     0,   170,     0,   171,\n       0,     0,     0,     0,     0,     0,     0,    28,     0,     0,\n       0,    29,     0,    30,     0,    31,    32,     0,     0,     0,\n     289,     0,    33,   172,     0,     0,    34,    35,    36,    37,\n      38,    39,     0,     0,    40,   290,    41,     0,     0,     0,\n       0,     0,    42,     0,   332,     0,    43,    44,    45,     0,\n      46,    47,   333,    48,    49,     0,   291,     0,     0,     0,\n     173,   292,   174,   293,    50,   175,     0,   176,   334,   335,\n     177,   336,     0,     0,   294,     0,     0,   337,     0,     0,\n       0,     0,     0,     0,     0,     0,     0,     0,     0,   178,\n     179,   295,   296,     0,     0,     0,     0,     0,     0,     0,\n     338,     0,   339,   340,     0,   341,   342,   343,     0,   344,\n       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n       0,     0,   297,     0,   298,     0,     0,     0,   299,     0,\n       0,     0,   300,     0,     0,     0,     0,     0,     0,     0,\n       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n       0,     0,     0,     0,     0,     0,     0,     0,   345\n};\n\nstatic const yytype_int16 yycheck[] =\n{\n      42,    35,   149,   150,     4,     6,     5,    58,    52,    10,\n      40,    45,    15,    28,     3,    61,    17,    63,     9,   133,\n      35,    33,    59,    38,    31,   171,   168,   169,    95,    26,\n      26,    30,    35,   133,   166,   181,    25,   104,    58,    26,\n      52,    58,    58,    37,   143,   143,   143,    46,   143,   143,\n      49,    58,    55,   143,    57,   143,    58,    72,   143,   143,\n      60,    73,    62,    64,    58,   143,   143,   181,   168,   169,\n      58,    27,   143,   143,    61,   119,    63,   143,   143,    40,\n      41,    42,    43,   120,    99,   172,   173,   174,   175,   176,\n      58,     0,    48,    94,   181,    51,   143,   143,   166,    90,\n     180,   248,   249,    94,   143,   143,    95,   108,   224,   225,\n     226,   227,   101,    58,   113,   143,   143,   143,   160,   161,\n     162,   163,   164,   165,   166,   128,   156,   178,   117,    58,\n      58,   173,   174,   175,   176,    20,   139,   138,     1,    24,\n     155,   140,   141,   143,    58,     8,   143,   143,    31,   136,\n      13,    14,    15,   143,    58,    18,   143,   143,   152,    22,\n      23,   161,    58,    58,    58,    28,    29,   128,   124,    32,\n     126,   160,    35,    36,   163,   131,    39,    58,    58,   135,\n      58,   142,    58,   143,    47,   146,   147,    80,   230,   231,\n      58,    76,   177,    58,    57,   166,    59,    53,    54,    55,\n      56,    58,   349,    66,    67,    58,    58,    70,    58,    58,\n      58,    74,    75,   143,    58,    78,    79,   143,   252,   172,\n     173,   174,   175,   176,   143,    81,    58,    83,    34,    85,\n     115,    58,    88,    96,    97,    98,    58,    58,   123,    58,\n      58,    58,   127,   177,   278,   287,   177,   110,   166,    26,\n      58,   114,   177,   116,   166,   118,   119,   180,   179,   144,\n     170,   177,   125,   148,   171,   166,   129,   130,   131,   132,\n     133,   134,   177,    86,   137,   177,   139,   180,   177,   177,\n     177,   220,   145,   301,   166,   177,   149,   150,   151,   166,\n     153,   154,   180,   156,   157,   100,   137,   232,    12,   280,\n     167,   124,    26,   166,   167,   311,   185,   367,   387,   401,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,\n      -1,   363,   364,    13,    14,    15,    -1,    -1,    18,    -1,\n      -1,    -1,    22,    23,    -1,    -1,    -1,    -1,    28,    29,\n      -1,    -1,    32,   385,    -1,    35,    36,    -1,   390,    39,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,\n      -1,   403,   404,   405,   406,   407,    -1,    57,    -1,    59,\n      -1,    -1,    -1,   376,    -1,    -1,    66,    67,    -1,    -1,\n      70,    -1,    -1,    -1,    74,    75,    -1,    -1,    78,    79,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,\n      -1,    -1,    -1,    -1,    -1,    -1,    96,    97,    98,    -1,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,\n     110,    -1,    -1,    -1,   114,    -1,   116,    -1,   118,   119,\n      -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,   129,\n     130,   131,   132,   133,   134,    -1,    -1,   137,    -1,   139,\n      -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,   149,\n     150,   151,    -1,   153,   154,     8,   156,   157,    -1,    -1,\n      13,    14,    15,    -1,    -1,    18,   166,   167,    -1,    22,\n      23,    -1,    -1,    -1,    -1,    28,    29,    -1,    -1,    32,\n      -1,    -1,    35,    36,    -1,    -1,    39,    -1,    -1,    -1,\n      -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,\n      -1,    -1,    -1,    -1,    57,    -1,    59,    -1,    -1,    -1,\n      -1,    -1,    -1,    66,    67,    -1,    -1,    70,    -1,    -1,\n      -1,    74,    75,    -1,    -1,    78,    79,     7,    -1,    -1,\n      -1,    -1,    12,    -1,    -1,    -1,    16,    -1,    -1,    11,\n      -1,    -1,    -1,    96,    97,    98,    -1,    19,    -1,    21,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,    -1,    -1,\n      -1,   114,    -1,   116,    -1,   118,   119,    -1,    -1,    -1,\n      50,    -1,   125,    45,    -1,    -1,   129,   130,   131,   132,\n     133,   134,    -1,    -1,   137,    65,   139,    -1,    -1,    -1,\n      -1,    -1,   145,    -1,    44,    -1,   149,   150,   151,    -1,\n     153,   154,    52,   156,   157,    -1,    86,    -1,    -1,    -1,\n      82,    91,    84,    93,   167,    87,    -1,    89,    68,    69,\n      92,    71,    -1,    -1,   104,    -1,    -1,    77,    -1,    -1,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,\n     112,   121,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,\n     100,    -1,   102,   103,    -1,   105,   106,   107,    -1,   109,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,\n      -1,    -1,   152,    -1,   154,    -1,    -1,    -1,   158,    -1,\n      -1,    -1,   162,    -1,    -1,    -1,    -1,    -1,    -1,    -1,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,\n      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   158\n};\n\n/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing\n   symbol of state STATE-NUM.  */\nstatic const yytype_uint8 yystos[] =\n{\n       0,     1,     8,    13,    14,    15,    18,    22,    23,    28,\n      29,    32,    35,    36,    39,    47,    57,    59,    66,    67,\n      70,    74,    75,    78,    79,    96,    97,    98,   110,   114,\n     116,   118,   119,   125,   129,   130,   131,   132,   133,   134,\n     137,   139,   145,   149,   150,   151,   153,   154,   156,   157,\n     167,   183,   184,   185,   186,   187,   192,   193,   194,   195,\n     199,   202,   208,   215,   218,   221,   224,   231,   232,   243,\n     244,   166,    58,    31,    58,   242,    58,    58,    27,    48,\n      51,   124,   126,   131,   135,   196,   197,   198,     6,    10,\n      17,    64,    94,   108,   138,   219,   220,     9,    90,    94,\n     211,   212,   143,   225,   219,    20,    24,    76,   115,   123,\n     127,   144,   148,   204,    61,    63,   143,   188,   189,   143,\n     143,   143,   143,   143,   229,   230,   143,   188,   240,    53,\n      54,    55,    56,    81,    83,    85,    88,   213,   214,   240,\n     143,   143,   239,   143,   143,    58,    26,    61,    63,   136,\n     188,   189,    58,   143,   143,   226,   203,   204,   143,   242,\n       5,    30,    46,    49,   113,   140,   141,   222,   223,    11,\n      19,    21,    45,    82,    84,    87,    89,    92,   111,   112,\n     200,   201,   189,    58,   178,   236,   237,   238,    58,   235,\n       0,   185,   166,   188,   188,    33,    52,    73,   234,   180,\n     143,   143,   143,   143,   143,    58,   143,   198,   220,    58,\n      58,    58,   212,    31,    28,    35,    38,    72,    99,   155,\n     205,   206,   143,   143,    40,    41,    42,    43,   128,   142,\n     146,   147,   216,   217,   185,   230,   188,    58,    58,    58,\n      58,    58,    58,    58,    58,   214,   143,   209,    26,    26,\n     209,   209,    80,   177,   204,   242,   242,   242,   242,   242,\n     242,   242,   223,    58,    58,    37,    58,   152,   241,    58,\n     242,   242,   242,   242,    58,    58,    58,   201,    59,   120,\n     227,   228,    58,   237,    58,   166,     7,    12,    16,    50,\n      65,    86,    91,    93,   104,   121,   122,   152,   154,   158,\n     162,   190,   191,     4,    60,    62,   143,   161,   233,   168,\n     169,   245,   246,   143,     3,    25,    95,   101,   117,   160,\n     163,   207,   206,   241,   241,   241,   241,   143,    58,   242,\n     242,   217,    44,    52,    68,    69,    71,    77,   100,   102,\n     103,   105,   106,   107,   109,   158,   210,   209,   209,   189,\n     143,   189,    58,   228,    34,   242,    58,    58,    58,    58,\n      58,    58,   191,   177,   177,   133,   246,   247,   248,   250,\n     166,   209,    26,    58,   242,   242,   177,   166,   181,   248,\n     180,   179,   188,   170,   249,   177,   171,   251,   252,   242,\n     177,   181,   252,   166,   242,   180,   172,   173,   174,   175,\n     176,   253,   254,   177,   177,   177,   177,   177,   181,   254,\n     166,   242,   242,   242,   242,   242,   166\n};\n\n#define yyerrok\t\t(yyerrstatus = 0)\n#define yyclearin\t(yychar = YYEMPTY)\n#define YYEMPTY\t\t(-2)\n#define YYEOF\t\t0\n\n#define YYACCEPT\tgoto yyacceptlab\n#define YYABORT\t\tgoto yyabortlab\n#define YYERROR\t\tgoto yyerrorlab\n\n\n/* Like YYERROR except do call yyerror.  This remains here temporarily\n   to ease the transition to the new meaning of YYERROR, for GCC.\n   Once GCC version 2 has supplanted version 1, this can go.  */\n\n#define YYFAIL\t\tgoto yyerrlab\n\n#define YYRECOVERING()  (!!yyerrstatus)\n\n#define YYBACKUP(Token, Value)\t\t\t\t\t\\\ndo\t\t\t\t\t\t\t\t\\\n  if (yychar == YYEMPTY && yylen == 1)\t\t\t\t\\\n    {\t\t\t\t\t\t\t\t\\\n      yychar = (Token);\t\t\t\t\t\t\\\n      yylval = (Value);\t\t\t\t\t\t\\\n      yytoken = YYTRANSLATE (yychar);\t\t\t\t\\\n      YYPOPSTACK (1);\t\t\t\t\t\t\\\n      goto yybackup;\t\t\t\t\t\t\\\n    }\t\t\t\t\t\t\t\t\\\n  else\t\t\t\t\t\t\t\t\\\n    {\t\t\t\t\t\t\t\t\\\n      yyerror (YY_(\"syntax error: cannot back up\")); \\\n      YYERROR;\t\t\t\t\t\t\t\\\n    }\t\t\t\t\t\t\t\t\\\nwhile (YYID (0))\n\n\n#define YYTERROR\t1\n#define YYERRCODE\t256\n\n\n/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].\n   If N is 0, then set CURRENT to the empty location which ends\n   the previous symbol: RHS[0] (always defined).  */\n\n#define YYRHSLOC(Rhs, K) ((Rhs)[K])\n#ifndef YYLLOC_DEFAULT\n# define YYLLOC_DEFAULT(Current, Rhs, N)\t\t\t\t\\\n    do\t\t\t\t\t\t\t\t\t\\\n      if (YYID (N))                                                    \\\n\t{\t\t\t\t\t\t\t\t\\\n\t  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;\t\\\n\t  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;\t\\\n\t  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;\t\t\\\n\t  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;\t\\\n\t}\t\t\t\t\t\t\t\t\\\n      else\t\t\t\t\t\t\t\t\\\n\t{\t\t\t\t\t\t\t\t\\\n\t  (Current).first_line   = (Current).last_line   =\t\t\\\n\t    YYRHSLOC (Rhs, 0).last_line;\t\t\t\t\\\n\t  (Current).first_column = (Current).last_column =\t\t\\\n\t    YYRHSLOC (Rhs, 0).last_column;\t\t\t\t\\\n\t}\t\t\t\t\t\t\t\t\\\n    while (YYID (0))\n#endif\n\n\n/* YY_LOCATION_PRINT -- Print the location on the stream.\n   This macro was not mandated originally: define only if we know\n   we won't break user code: when these are the locations we know.  */\n\n#ifndef YY_LOCATION_PRINT\n# if YYLTYPE_IS_TRIVIAL\n#  define YY_LOCATION_PRINT(File, Loc)\t\t\t\\\n     fprintf (File, \"%d.%d-%d.%d\",\t\t\t\\\n\t      (Loc).first_line, (Loc).first_column,\t\\\n\t      (Loc).last_line,  (Loc).last_column)\n# else\n#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)\n# endif\n#endif\n\n\n/* YYLEX -- calling `yylex' with the right arguments.  */\n\n#ifdef YYLEX_PARAM\n# define YYLEX yylex (YYLEX_PARAM)\n#else\n# define YYLEX yylex ()\n#endif\n\n/* Enable debugging if requested.  */\n#if YYDEBUG\n\n# ifndef YYFPRINTF\n#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */\n#  define YYFPRINTF fprintf\n# endif\n\n# define YYDPRINTF(Args)\t\t\t\\\ndo {\t\t\t\t\t\t\\\n  if (yydebug)\t\t\t\t\t\\\n    YYFPRINTF Args;\t\t\t\t\\\n} while (YYID (0))\n\n# define YY_SYMBOL_PRINT(Title, Type, Value, Location)\t\t\t  \\\ndo {\t\t\t\t\t\t\t\t\t  \\\n  if (yydebug)\t\t\t\t\t\t\t\t  \\\n    {\t\t\t\t\t\t\t\t\t  \\\n      YYFPRINTF (stderr, \"%s \", Title);\t\t\t\t\t  \\\n      yy_symbol_print (stderr,\t\t\t\t\t\t  \\\n\t\t  Type, Value); \\\n      YYFPRINTF (stderr, \"\\n\");\t\t\t\t\t\t  \\\n    }\t\t\t\t\t\t\t\t\t  \\\n} while (YYID (0))\n\n\n/*--------------------------------.\n| Print this symbol on YYOUTPUT.  |\n`--------------------------------*/\n\n/*ARGSUSED*/\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nstatic void\nyy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)\n#else\nstatic void\nyy_symbol_value_print (yyoutput, yytype, yyvaluep)\n    FILE *yyoutput;\n    int yytype;\n    YYSTYPE const * const yyvaluep;\n#endif\n{\n  if (!yyvaluep)\n    return;\n# ifdef YYPRINT\n  if (yytype < YYNTOKENS)\n    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);\n# else\n  YYUSE (yyoutput);\n# endif\n  switch (yytype)\n    {\n      default:\n\tbreak;\n    }\n}\n\n\n/*--------------------------------.\n| Print this symbol on YYOUTPUT.  |\n`--------------------------------*/\n\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nstatic void\nyy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)\n#else\nstatic void\nyy_symbol_print (yyoutput, yytype, yyvaluep)\n    FILE *yyoutput;\n    int yytype;\n    YYSTYPE const * const yyvaluep;\n#endif\n{\n  if (yytype < YYNTOKENS)\n    YYFPRINTF (yyoutput, \"token %s (\", yytname[yytype]);\n  else\n    YYFPRINTF (yyoutput, \"nterm %s (\", yytname[yytype]);\n\n  yy_symbol_value_print (yyoutput, yytype, yyvaluep);\n  YYFPRINTF (yyoutput, \")\");\n}\n\n/*------------------------------------------------------------------.\n| yy_stack_print -- Print the state stack from its BOTTOM up to its |\n| TOP (included).                                                   |\n`------------------------------------------------------------------*/\n\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nstatic void\nyy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)\n#else\nstatic void\nyy_stack_print (yybottom, yytop)\n    yytype_int16 *yybottom;\n    yytype_int16 *yytop;\n#endif\n{\n  YYFPRINTF (stderr, \"Stack now\");\n  for (; yybottom <= yytop; yybottom++)\n    {\n      int yybot = *yybottom;\n      YYFPRINTF (stderr, \" %d\", yybot);\n    }\n  YYFPRINTF (stderr, \"\\n\");\n}\n\n# define YY_STACK_PRINT(Bottom, Top)\t\t\t\t\\\ndo {\t\t\t\t\t\t\t\t\\\n  if (yydebug)\t\t\t\t\t\t\t\\\n    yy_stack_print ((Bottom), (Top));\t\t\t\t\\\n} while (YYID (0))\n\n\n/*------------------------------------------------.\n| Report that the YYRULE is going to be reduced.  |\n`------------------------------------------------*/\n\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nstatic void\nyy_reduce_print (YYSTYPE *yyvsp, int yyrule)\n#else\nstatic void\nyy_reduce_print (yyvsp, yyrule)\n    YYSTYPE *yyvsp;\n    int yyrule;\n#endif\n{\n  int yynrhs = yyr2[yyrule];\n  int yyi;\n  unsigned long int yylno = yyrline[yyrule];\n  YYFPRINTF (stderr, \"Reducing stack by rule %d (line %lu):\\n\",\n\t     yyrule - 1, yylno);\n  /* The symbols being reduced.  */\n  for (yyi = 0; yyi < yynrhs; yyi++)\n    {\n      YYFPRINTF (stderr, \"   $%d = \", yyi + 1);\n      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],\n\t\t       &(yyvsp[(yyi + 1) - (yynrhs)])\n\t\t       \t\t       );\n      YYFPRINTF (stderr, \"\\n\");\n    }\n}\n\n# define YY_REDUCE_PRINT(Rule)\t\t\\\ndo {\t\t\t\t\t\\\n  if (yydebug)\t\t\t\t\\\n    yy_reduce_print (yyvsp, Rule); \\\n} while (YYID (0))\n\n/* Nonzero means print parse trace.  It is left uninitialized so that\n   multiple parsers can coexist.  */\nint yydebug;\n#else /* !YYDEBUG */\n# define YYDPRINTF(Args)\n# define YY_SYMBOL_PRINT(Title, Type, Value, Location)\n# define YY_STACK_PRINT(Bottom, Top)\n# define YY_REDUCE_PRINT(Rule)\n#endif /* !YYDEBUG */\n\n\n/* YYINITDEPTH -- initial size of the parser's stacks.  */\n#ifndef\tYYINITDEPTH\n# define YYINITDEPTH 200\n#endif\n\n/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only\n   if the built-in stack extension method is used).\n\n   Do not make this value too large; the results are undefined if\n   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)\n   evaluated with infinite-precision integer arithmetic.  */\n\n#ifndef YYMAXDEPTH\n# define YYMAXDEPTH 10000\n#endif\n\n\f\n\n#if YYERROR_VERBOSE\n\n# ifndef yystrlen\n#  if defined __GLIBC__ && defined _STRING_H\n#   define yystrlen strlen\n#  else\n/* Return the length of YYSTR.  */\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nstatic YYSIZE_T\nyystrlen (const char *yystr)\n#else\nstatic YYSIZE_T\nyystrlen (yystr)\n    const char *yystr;\n#endif\n{\n  YYSIZE_T yylen;\n  for (yylen = 0; yystr[yylen]; yylen++)\n    continue;\n  return yylen;\n}\n#  endif\n# endif\n\n# ifndef yystpcpy\n#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE\n#   define yystpcpy stpcpy\n#  else\n/* Copy YYSRC to YYDEST, returning the address of the terminating '\\0' in\n   YYDEST.  */\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nstatic char *\nyystpcpy (char *yydest, const char *yysrc)\n#else\nstatic char *\nyystpcpy (yydest, yysrc)\n    char *yydest;\n    const char *yysrc;\n#endif\n{\n  char *yyd = yydest;\n  const char *yys = yysrc;\n\n  while ((*yyd++ = *yys++) != '\\0')\n    continue;\n\n  return yyd - 1;\n}\n#  endif\n# endif\n\n# ifndef yytnamerr\n/* Copy to YYRES the contents of YYSTR after stripping away unnecessary\n   quotes and backslashes, so that it's suitable for yyerror.  The\n   heuristic is that double-quoting is unnecessary unless the string\n   contains an apostrophe, a comma, or backslash (other than\n   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is\n   null, do not copy; instead, return the length of what the result\n   would have been.  */\nstatic YYSIZE_T\nyytnamerr (char *yyres, const char *yystr)\n{\n  if (*yystr == '\"')\n    {\n      YYSIZE_T yyn = 0;\n      char const *yyp = yystr;\n\n      for (;;)\n\tswitch (*++yyp)\n\t  {\n\t  case '\\'':\n\t  case ',':\n\t    goto do_not_strip_quotes;\n\n\t  case '\\\\':\n\t    if (*++yyp != '\\\\')\n\t      goto do_not_strip_quotes;\n\t    /* Fall through.  */\n\t  default:\n\t    if (yyres)\n\t      yyres[yyn] = *yyp;\n\t    yyn++;\n\t    break;\n\n\t  case '\"':\n\t    if (yyres)\n\t      yyres[yyn] = '\\0';\n\t    return yyn;\n\t  }\n    do_not_strip_quotes: ;\n    }\n\n  if (! yyres)\n    return yystrlen (yystr);\n\n  return yystpcpy (yyres, yystr) - yyres;\n}\n# endif\n\n/* Copy into YYRESULT an error message about the unexpected token\n   YYCHAR while in state YYSTATE.  Return the number of bytes copied,\n   including the terminating null byte.  If YYRESULT is null, do not\n   copy anything; just return the number of bytes that would be\n   copied.  As a special case, return 0 if an ordinary \"syntax error\"\n   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during\n   size calculation.  */\nstatic YYSIZE_T\nyysyntax_error (char *yyresult, int yystate, int yychar)\n{\n  int yyn = yypact[yystate];\n\n  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))\n    return 0;\n  else\n    {\n      int yytype = YYTRANSLATE (yychar);\n      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);\n      YYSIZE_T yysize = yysize0;\n      YYSIZE_T yysize1;\n      int yysize_overflow = 0;\n      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };\n      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];\n      int yyx;\n\n# if 0\n      /* This is so xgettext sees the translatable formats that are\n\t constructed on the fly.  */\n      YY_(\"syntax error, unexpected %s\");\n      YY_(\"syntax error, unexpected %s, expecting %s\");\n      YY_(\"syntax error, unexpected %s, expecting %s or %s\");\n      YY_(\"syntax error, unexpected %s, expecting %s or %s or %s\");\n      YY_(\"syntax error, unexpected %s, expecting %s or %s or %s or %s\");\n# endif\n      char *yyfmt;\n      char const *yyf;\n      static char const yyunexpected[] = \"syntax error, unexpected %s\";\n      static char const yyexpecting[] = \", expecting %s\";\n      static char const yyor[] = \" or %s\";\n      char yyformat[sizeof yyunexpected\n\t\t    + sizeof yyexpecting - 1\n\t\t    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)\n\t\t       * (sizeof yyor - 1))];\n      char const *yyprefix = yyexpecting;\n\n      /* Start YYX at -YYN if negative to avoid negative indexes in\n\t YYCHECK.  */\n      int yyxbegin = yyn < 0 ? -yyn : 0;\n\n      /* Stay within bounds of both yycheck and yytname.  */\n      int yychecklim = YYLAST - yyn + 1;\n      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;\n      int yycount = 1;\n\n      yyarg[0] = yytname[yytype];\n      yyfmt = yystpcpy (yyformat, yyunexpected);\n\n      for (yyx = yyxbegin; yyx < yyxend; ++yyx)\n\tif (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)\n\t  {\n\t    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)\n\t      {\n\t\tyycount = 1;\n\t\tyysize = yysize0;\n\t\tyyformat[sizeof yyunexpected - 1] = '\\0';\n\t\tbreak;\n\t      }\n\t    yyarg[yycount++] = yytname[yyx];\n\t    yysize1 = yysize + yytnamerr (0, yytname[yyx]);\n\t    yysize_overflow |= (yysize1 < yysize);\n\t    yysize = yysize1;\n\t    yyfmt = yystpcpy (yyfmt, yyprefix);\n\t    yyprefix = yyor;\n\t  }\n\n      yyf = YY_(yyformat);\n      yysize1 = yysize + yystrlen (yyf);\n      yysize_overflow |= (yysize1 < yysize);\n      yysize = yysize1;\n\n      if (yysize_overflow)\n\treturn YYSIZE_MAXIMUM;\n\n      if (yyresult)\n\t{\n\t  /* Avoid sprintf, as that infringes on the user's name space.\n\t     Don't have undefined behavior even if the translation\n\t     produced a string with the wrong number of \"%s\"s.  */\n\t  char *yyp = yyresult;\n\t  int yyi = 0;\n\t  while ((*yyp = *yyf) != '\\0')\n\t    {\n\t      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)\n\t\t{\n\t\t  yyp += yytnamerr (yyp, yyarg[yyi++]);\n\t\t  yyf += 2;\n\t\t}\n\t      else\n\t\t{\n\t\t  yyp++;\n\t\t  yyf++;\n\t\t}\n\t    }\n\t}\n      return yysize;\n    }\n}\n#endif /* YYERROR_VERBOSE */\n\f\n\n/*-----------------------------------------------.\n| Release the memory associated to this symbol.  |\n`-----------------------------------------------*/\n\n/*ARGSUSED*/\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nstatic void\nyydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)\n#else\nstatic void\nyydestruct (yymsg, yytype, yyvaluep)\n    const char *yymsg;\n    int yytype;\n    YYSTYPE *yyvaluep;\n#endif\n{\n  YYUSE (yyvaluep);\n\n  if (!yymsg)\n    yymsg = \"Deleting\";\n  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);\n\n  switch (yytype)\n    {\n\n      default:\n\tbreak;\n    }\n}\n\n/* Prevent warnings from -Wmissing-prototypes.  */\n#ifdef YYPARSE_PARAM\n#if defined __STDC__ || defined __cplusplus\nint yyparse (void *YYPARSE_PARAM);\n#else\nint yyparse ();\n#endif\n#else /* ! YYPARSE_PARAM */\n#if defined __STDC__ || defined __cplusplus\nint yyparse (void);\n#else\nint yyparse ();\n#endif\n#endif /* ! YYPARSE_PARAM */\n\n\n/* The lookahead symbol.  */\nint yychar;\n\n/* The semantic value of the lookahead symbol.  */\nYYSTYPE yylval;\n\n/* Number of syntax errors so far.  */\nint yynerrs;\n\n\n\n/*-------------------------.\n| yyparse or yypush_parse.  |\n`-------------------------*/\n\n#ifdef YYPARSE_PARAM\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nint\nyyparse (void *YYPARSE_PARAM)\n#else\nint\nyyparse (YYPARSE_PARAM)\n    void *YYPARSE_PARAM;\n#endif\n#else /* ! YYPARSE_PARAM */\n#if (defined __STDC__ || defined __C99__FUNC__ \\\n     || defined __cplusplus || defined _MSC_VER)\nint\nyyparse (void)\n#else\nint\nyyparse ()\n\n#endif\n#endif\n{\n\n\n    int yystate;\n    /* Number of tokens to shift before error messages enabled.  */\n    int yyerrstatus;\n\n    /* The stacks and their tools:\n       `yyss': related to states.\n       `yyvs': related to semantic values.\n\n       Refer to the stacks thru separate pointers, to allow yyoverflow\n       to reallocate them elsewhere.  */\n\n    /* The state stack.  */\n    yytype_int16 yyssa[YYINITDEPTH];\n    yytype_int16 *yyss;\n    yytype_int16 *yyssp;\n\n    /* The semantic value stack.  */\n    YYSTYPE yyvsa[YYINITDEPTH];\n    YYSTYPE *yyvs;\n    YYSTYPE *yyvsp;\n\n    YYSIZE_T yystacksize;\n\n  int yyn;\n  int yyresult;\n  /* Lookahead token as an internal (translated) token number.  */\n  int yytoken;\n  /* The variables used to return semantic value and location from the\n     action routines.  */\n  YYSTYPE yyval;\n\n#if YYERROR_VERBOSE\n  /* Buffer for error messages, and its allocated size.  */\n  char yymsgbuf[128];\n  char *yymsg = yymsgbuf;\n  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;\n#endif\n\n#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))\n\n  /* The number of symbols on the RHS of the reduced rule.\n     Keep to zero when no symbol should be popped.  */\n  int yylen = 0;\n\n  yytoken = 0;\n  yyss = yyssa;\n  yyvs = yyvsa;\n  yystacksize = YYINITDEPTH;\n\n  YYDPRINTF ((stderr, \"Starting parse\\n\"));\n\n  yystate = 0;\n  yyerrstatus = 0;\n  yynerrs = 0;\n  yychar = YYEMPTY; /* Cause a token to be read.  */\n\n  /* Initialize stack pointers.\n     Waste one element of value and location stack\n     so that they stay on the same level as the state stack.\n     The wasted elements are never initialized.  */\n  yyssp = yyss;\n  yyvsp = yyvs;\n\n  goto yysetstate;\n\n/*------------------------------------------------------------.\n| yynewstate -- Push a new state, which is found in yystate.  |\n`------------------------------------------------------------*/\n yynewstate:\n  /* In all cases, when you get here, the value and location stacks\n     have just been pushed.  So pushing a state here evens the stacks.  */\n  yyssp++;\n\n yysetstate:\n  *yyssp = yystate;\n\n  if (yyss + yystacksize - 1 <= yyssp)\n    {\n      /* Get the current used size of the three stacks, in elements.  */\n      YYSIZE_T yysize = yyssp - yyss + 1;\n\n#ifdef yyoverflow\n      {\n\t/* Give user a chance to reallocate the stack.  Use copies of\n\t   these so that the &'s don't force the real ones into\n\t   memory.  */\n\tYYSTYPE *yyvs1 = yyvs;\n\tyytype_int16 *yyss1 = yyss;\n\n\t/* Each stack pointer address is followed by the size of the\n\t   data in use in that stack, in bytes.  This used to be a\n\t   conditional around just the two extra args, but that might\n\t   be undefined if yyoverflow is a macro.  */\n\tyyoverflow (YY_(\"memory exhausted\"),\n\t\t    &yyss1, yysize * sizeof (*yyssp),\n\t\t    &yyvs1, yysize * sizeof (*yyvsp),\n\t\t    &yystacksize);\n\n\tyyss = yyss1;\n\tyyvs = yyvs1;\n      }\n#else /* no yyoverflow */\n# ifndef YYSTACK_RELOCATE\n      goto yyexhaustedlab;\n# else\n      /* Extend the stack our own way.  */\n      if (YYMAXDEPTH <= yystacksize)\n\tgoto yyexhaustedlab;\n      yystacksize *= 2;\n      if (YYMAXDEPTH < yystacksize)\n\tyystacksize = YYMAXDEPTH;\n\n      {\n\tyytype_int16 *yyss1 = yyss;\n\tunion yyalloc *yyptr =\n\t  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));\n\tif (! yyptr)\n\t  goto yyexhaustedlab;\n\tYYSTACK_RELOCATE (yyss_alloc, yyss);\n\tYYSTACK_RELOCATE (yyvs_alloc, yyvs);\n#  undef YYSTACK_RELOCATE\n\tif (yyss1 != yyssa)\n\t  YYSTACK_FREE (yyss1);\n      }\n# endif\n#endif /* no yyoverflow */\n\n      yyssp = yyss + yysize - 1;\n      yyvsp = yyvs + yysize - 1;\n\n      YYDPRINTF ((stderr, \"Stack size increased to %lu\\n\",\n\t\t  (unsigned long int) yystacksize));\n\n      if (yyss + yystacksize - 1 <= yyssp)\n\tYYABORT;\n    }\n\n  YYDPRINTF ((stderr, \"Entering state %d\\n\", yystate));\n\n  if (yystate == YYFINAL)\n    YYACCEPT;\n\n  goto yybackup;\n\n/*-----------.\n| yybackup.  |\n`-----------*/\nyybackup:\n\n  /* Do appropriate processing given the current state.  Read a\n     lookahead token if we need one and don't already have one.  */\n\n  /* First try to decide what to do without reference to lookahead token.  */\n  yyn = yypact[yystate];\n  if (yyn == YYPACT_NINF)\n    goto yydefault;\n\n  /* Not known => get a lookahead token if don't already have one.  */\n\n  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */\n  if (yychar == YYEMPTY)\n    {\n      YYDPRINTF ((stderr, \"Reading a token: \"));\n      yychar = YYLEX;\n    }\n\n  if (yychar <= YYEOF)\n    {\n      yychar = yytoken = YYEOF;\n      YYDPRINTF ((stderr, \"Now at end of input.\\n\"));\n    }\n  else\n    {\n      yytoken = YYTRANSLATE (yychar);\n      YY_SYMBOL_PRINT (\"Next token is\", yytoken, &yylval, &yylloc);\n    }\n\n  /* If the proper action on seeing token YYTOKEN is to reduce or to\n     detect an error, take that action.  */\n  yyn += yytoken;\n  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)\n    goto yydefault;\n  yyn = yytable[yyn];\n  if (yyn <= 0)\n    {\n      if (yyn == 0 || yyn == YYTABLE_NINF)\n\tgoto yyerrlab;\n      yyn = -yyn;\n      goto yyreduce;\n    }\n\n  /* Count tokens shifted since error; after three, turn off error\n     status.  */\n  if (yyerrstatus)\n    yyerrstatus--;\n\n  /* Shift the lookahead token.  */\n  YY_SYMBOL_PRINT (\"Shifting\", yytoken, &yylval, &yylloc);\n\n  /* Discard the shifted token.  */\n  yychar = YYEMPTY;\n\n  yystate = yyn;\n  *++yyvsp = yylval;\n\n  goto yynewstate;\n\n\n/*-----------------------------------------------------------.\n| yydefault -- do the default action for the current state.  |\n`-----------------------------------------------------------*/\nyydefault:\n  yyn = yydefact[yystate];\n  if (yyn == 0)\n    goto yyerrlab;\n  goto yyreduce;\n\n\n/*-----------------------------.\n| yyreduce -- Do a reduction.  |\n`-----------------------------*/\nyyreduce:\n  /* yyn is the number of a rule to reduce with.  */\n  yylen = yyr2[yyn];\n\n  /* If YYLEN is nonzero, implement the default value of the action:\n     `$$ = $1'.\n\n     Otherwise, the following line sets YYVAL to garbage.\n     This behavior is undocumented and Bison\n     users should not rely upon it.  Assigning to YYVAL\n     unconditionally makes the parser a bit smaller, and it avoids a\n     GCC warning that YYVAL may be used uninitialized.  */\n  yyval = yyvsp[1-yylen];\n\n\n  YY_REDUCE_PRINT (yyn);\n  switch (yyn)\n    {\n        case 5:\n\n/* Line 1455 of yacc.c  */\n#line 320 \"ntp_parser.y\"\n    {\n\t\t\t/* I will need to incorporate much more fine grained\n\t\t\t * error messages. The following should suffice for\n\t\t\t * the time being.\n\t\t\t */\n\t\t\tmsyslog(LOG_ERR, \n\t\t\t\t\"syntax error in %s line %d, column %d\",\n\t\t\t\tip_file->fname,\n\t\t\t\tip_file->err_line_no,\n\t\t\t\tip_file->err_col_no);\n\t\t}\n    break;\n\n  case 19:\n\n/* Line 1455 of yacc.c  */\n#line 354 \"ntp_parser.y\"\n    {\n\t\t\tstruct peer_node *my_node =  create_peer_node((yyvsp[(1) - (3)].Integer), (yyvsp[(2) - (3)].Address_node), (yyvsp[(3) - (3)].Queue));\n\t\t\tif (my_node)\n\t\t\t\tenqueue(cfgt.peers, my_node);\n\t\t}\n    break;\n\n  case 20:\n\n/* Line 1455 of yacc.c  */\n#line 360 \"ntp_parser.y\"\n    {\n\t\t\tstruct peer_node *my_node = create_peer_node((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Address_node), NULL);\n\t\t\tif (my_node)\n\t\t\t\tenqueue(cfgt.peers, my_node);\n\t\t}\n    break;\n\n  case 27:\n\n/* Line 1455 of yacc.c  */\n#line 377 \"ntp_parser.y\"\n    { (yyval.Address_node) = create_address_node((yyvsp[(2) - (2)].String), AF_INET); }\n    break;\n\n  case 28:\n\n/* Line 1455 of yacc.c  */\n#line 378 \"ntp_parser.y\"\n    { (yyval.Address_node) = create_address_node((yyvsp[(2) - (2)].String), AF_INET6); }\n    break;\n\n  case 29:\n\n/* Line 1455 of yacc.c  */\n#line 382 \"ntp_parser.y\"\n    { (yyval.Address_node) = create_address_node((yyvsp[(1) - (1)].String), 0); }\n    break;\n\n  case 30:\n\n/* Line 1455 of yacc.c  */\n#line 386 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 31:\n\n/* Line 1455 of yacc.c  */\n#line 387 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 32:\n\n/* Line 1455 of yacc.c  */\n#line 391 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 33:\n\n/* Line 1455 of yacc.c  */\n#line 392 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 34:\n\n/* Line 1455 of yacc.c  */\n#line 393 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 35:\n\n/* Line 1455 of yacc.c  */\n#line 394 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 36:\n\n/* Line 1455 of yacc.c  */\n#line 395 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 37:\n\n/* Line 1455 of yacc.c  */\n#line 396 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 38:\n\n/* Line 1455 of yacc.c  */\n#line 397 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 39:\n\n/* Line 1455 of yacc.c  */\n#line 398 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 40:\n\n/* Line 1455 of yacc.c  */\n#line 399 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 41:\n\n/* Line 1455 of yacc.c  */\n#line 400 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 42:\n\n/* Line 1455 of yacc.c  */\n#line 401 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 43:\n\n/* Line 1455 of yacc.c  */\n#line 402 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 44:\n\n/* Line 1455 of yacc.c  */\n#line 403 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 45:\n\n/* Line 1455 of yacc.c  */\n#line 404 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 46:\n\n/* Line 1455 of yacc.c  */\n#line 405 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 47:\n\n/* Line 1455 of yacc.c  */\n#line 415 \"ntp_parser.y\"\n    {\n\t\t\tstruct unpeer_node *my_node = create_unpeer_node((yyvsp[(2) - (2)].Address_node));\n\t\t\tif (my_node)\n\t\t\t\tenqueue(cfgt.unpeers, my_node);\n\t\t}\n    break;\n\n  case 50:\n\n/* Line 1455 of yacc.c  */\n#line 434 \"ntp_parser.y\"\n    { cfgt.broadcastclient = 1; }\n    break;\n\n  case 51:\n\n/* Line 1455 of yacc.c  */\n#line 436 \"ntp_parser.y\"\n    { append_queue(cfgt.manycastserver, (yyvsp[(2) - (2)].Queue)); }\n    break;\n\n  case 52:\n\n/* Line 1455 of yacc.c  */\n#line 438 \"ntp_parser.y\"\n    { append_queue(cfgt.multicastclient, (yyvsp[(2) - (2)].Queue)); }\n    break;\n\n  case 53:\n\n/* Line 1455 of yacc.c  */\n#line 449 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer))); }\n    break;\n\n  case 54:\n\n/* Line 1455 of yacc.c  */\n#line 451 \"ntp_parser.y\"\n    { cfgt.auth.control_key = (yyvsp[(2) - (2)].Integer); }\n    break;\n\n  case 55:\n\n/* Line 1455 of yacc.c  */\n#line 453 \"ntp_parser.y\"\n    { \n\t\t\tcfgt.auth.cryptosw++;\n\t\t\tappend_queue(cfgt.auth.crypto_cmd_list, (yyvsp[(2) - (2)].Queue));\n\t\t}\n    break;\n\n  case 56:\n\n/* Line 1455 of yacc.c  */\n#line 458 \"ntp_parser.y\"\n    { cfgt.auth.keys = (yyvsp[(2) - (2)].String); }\n    break;\n\n  case 57:\n\n/* Line 1455 of yacc.c  */\n#line 460 \"ntp_parser.y\"\n    { cfgt.auth.keysdir = (yyvsp[(2) - (2)].String); }\n    break;\n\n  case 58:\n\n/* Line 1455 of yacc.c  */\n#line 462 \"ntp_parser.y\"\n    { cfgt.auth.request_key = (yyvsp[(2) - (2)].Integer); }\n    break;\n\n  case 59:\n\n/* Line 1455 of yacc.c  */\n#line 464 \"ntp_parser.y\"\n    { cfgt.auth.revoke = (yyvsp[(2) - (2)].Integer); }\n    break;\n\n  case 60:\n\n/* Line 1455 of yacc.c  */\n#line 466 \"ntp_parser.y\"\n    { cfgt.auth.trusted_key_list = (yyvsp[(2) - (2)].Queue); }\n    break;\n\n  case 61:\n\n/* Line 1455 of yacc.c  */\n#line 468 \"ntp_parser.y\"\n    { cfgt.auth.ntp_signd_socket = (yyvsp[(2) - (2)].String); }\n    break;\n\n  case 63:\n\n/* Line 1455 of yacc.c  */\n#line 474 \"ntp_parser.y\"\n    { (yyval.Queue) = create_queue(); }\n    break;\n\n  case 64:\n\n/* Line 1455 of yacc.c  */\n#line 479 \"ntp_parser.y\"\n    { \n\t\t\tif ((yyvsp[(2) - (2)].Attr_val) != NULL)\n\t\t\t\t(yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val));\n\t\t\telse\n\t\t\t\t(yyval.Queue) = (yyvsp[(1) - (2)].Queue);\n\t\t}\n    break;\n\n  case 65:\n\n/* Line 1455 of yacc.c  */\n#line 486 \"ntp_parser.y\"\n    {\n\t\t\tif ((yyvsp[(1) - (1)].Attr_val) != NULL)\n\t\t\t\t(yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val));\n\t\t\telse\n\t\t\t\t(yyval.Queue) = create_queue();\n\t\t}\n    break;\n\n  case 66:\n\n/* Line 1455 of yacc.c  */\n#line 496 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)); }\n    break;\n\n  case 67:\n\n/* Line 1455 of yacc.c  */\n#line 498 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)); }\n    break;\n\n  case 68:\n\n/* Line 1455 of yacc.c  */\n#line 500 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)); }\n    break;\n\n  case 69:\n\n/* Line 1455 of yacc.c  */\n#line 502 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)); }\n    break;\n\n  case 70:\n\n/* Line 1455 of yacc.c  */\n#line 504 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)); }\n    break;\n\n  case 71:\n\n/* Line 1455 of yacc.c  */\n#line 506 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)); }\n    break;\n\n  case 72:\n\n/* Line 1455 of yacc.c  */\n#line 508 \"ntp_parser.y\"\n    {\n\t\t\t(yyval.Attr_val) = NULL;\n\t\t\tcfgt.auth.revoke = (yyvsp[(2) - (2)].Integer);\n\t\t\tmsyslog(LOG_WARNING,\n\t\t\t\t\"'crypto revoke %d' is deprecated, \"\n\t\t\t\t\"please use 'revoke %d' instead.\",\n\t\t\t\tcfgt.auth.revoke, cfgt.auth.revoke);\n\t\t}\n    break;\n\n  case 73:\n\n/* Line 1455 of yacc.c  */\n#line 525 \"ntp_parser.y\"\n    { append_queue(cfgt.orphan_cmds,(yyvsp[(2) - (2)].Queue)); }\n    break;\n\n  case 74:\n\n/* Line 1455 of yacc.c  */\n#line 529 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 75:\n\n/* Line 1455 of yacc.c  */\n#line 530 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 76:\n\n/* Line 1455 of yacc.c  */\n#line 535 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (double)(yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 77:\n\n/* Line 1455 of yacc.c  */\n#line 537 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (double)(yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 78:\n\n/* Line 1455 of yacc.c  */\n#line 539 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (double)(yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 79:\n\n/* Line 1455 of yacc.c  */\n#line 541 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (double)(yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 80:\n\n/* Line 1455 of yacc.c  */\n#line 543 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (double)(yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 81:\n\n/* Line 1455 of yacc.c  */\n#line 545 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 82:\n\n/* Line 1455 of yacc.c  */\n#line 547 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 83:\n\n/* Line 1455 of yacc.c  */\n#line 549 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 84:\n\n/* Line 1455 of yacc.c  */\n#line 551 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 85:\n\n/* Line 1455 of yacc.c  */\n#line 553 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (double)(yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 86:\n\n/* Line 1455 of yacc.c  */\n#line 555 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (double)(yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 87:\n\n/* Line 1455 of yacc.c  */\n#line 565 \"ntp_parser.y\"\n    { append_queue(cfgt.stats_list, (yyvsp[(2) - (2)].Queue)); }\n    break;\n\n  case 88:\n\n/* Line 1455 of yacc.c  */\n#line 567 \"ntp_parser.y\"\n    {\n\t\t\tif (input_from_file)\n\t\t\t\tcfgt.stats_dir = (yyvsp[(2) - (2)].String);\n\t\t\telse {\n\t\t\t\tfree((yyvsp[(2) - (2)].String));\n\t\t\t\tyyerror(\"statsdir remote configuration ignored\");\n\t\t\t}\n\t\t}\n    break;\n\n  case 89:\n\n/* Line 1455 of yacc.c  */\n#line 576 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.filegen_opts,\n\t\t\t\tcreate_filegen_node((yyvsp[(2) - (3)].Integer), (yyvsp[(3) - (3)].Queue)));\n\t\t}\n    break;\n\n  case 90:\n\n/* Line 1455 of yacc.c  */\n#line 583 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), create_ival((yyvsp[(2) - (2)].Integer))); }\n    break;\n\n  case 91:\n\n/* Line 1455 of yacc.c  */\n#line 584 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue(create_ival((yyvsp[(1) - (1)].Integer))); }\n    break;\n\n  case 100:\n\n/* Line 1455 of yacc.c  */\n#line 600 \"ntp_parser.y\"\n    {\n\t\t\tif ((yyvsp[(2) - (2)].Attr_val) != NULL)\n\t\t\t\t(yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val));\n\t\t\telse\n\t\t\t\t(yyval.Queue) = (yyvsp[(1) - (2)].Queue);\n\t\t}\n    break;\n\n  case 101:\n\n/* Line 1455 of yacc.c  */\n#line 607 \"ntp_parser.y\"\n    {\n\t\t\tif ((yyvsp[(1) - (1)].Attr_val) != NULL)\n\t\t\t\t(yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val));\n\t\t\telse\n\t\t\t\t(yyval.Queue) = create_queue();\n\t\t}\n    break;\n\n  case 102:\n\n/* Line 1455 of yacc.c  */\n#line 617 \"ntp_parser.y\"\n    {\n\t\t\tif (input_from_file)\n\t\t\t\t(yyval.Attr_val) = create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String));\n\t\t\telse {\n\t\t\t\t(yyval.Attr_val) = NULL;\n\t\t\t\tfree((yyvsp[(2) - (2)].String));\n\t\t\t\tyyerror(\"filegen file remote configuration ignored\");\n\t\t\t}\n\t\t}\n    break;\n\n  case 103:\n\n/* Line 1455 of yacc.c  */\n#line 627 \"ntp_parser.y\"\n    {\n\t\t\tif (input_from_file)\n\t\t\t\t(yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer));\n\t\t\telse {\n\t\t\t\t(yyval.Attr_val) = NULL;\n\t\t\t\tyyerror(\"filegen type remote configuration ignored\");\n\t\t\t}\n\t\t}\n    break;\n\n  case 104:\n\n/* Line 1455 of yacc.c  */\n#line 636 \"ntp_parser.y\"\n    {\n\t\t\tif (input_from_file)\n\t\t\t\t(yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer));\n\t\t\telse {\n\t\t\t\t(yyval.Attr_val) = NULL;\n\t\t\t\tyyerror(\"filegen link remote configuration ignored\");\n\t\t\t}\n\t\t}\n    break;\n\n  case 105:\n\n/* Line 1455 of yacc.c  */\n#line 645 \"ntp_parser.y\"\n    {\n\t\t\tif (input_from_file)\n\t\t\t\t(yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer));\n\t\t\telse {\n\t\t\t\t(yyval.Attr_val) = NULL;\n\t\t\t\tyyerror(\"filegen nolink remote configuration ignored\");\n\t\t\t}\n\t\t}\n    break;\n\n  case 106:\n\n/* Line 1455 of yacc.c  */\n#line 653 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 107:\n\n/* Line 1455 of yacc.c  */\n#line 654 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 115:\n\n/* Line 1455 of yacc.c  */\n#line 674 \"ntp_parser.y\"\n    {\n\t\t\tappend_queue(cfgt.discard_opts, (yyvsp[(2) - (2)].Queue));\n\t\t}\n    break;\n\n  case 116:\n\n/* Line 1455 of yacc.c  */\n#line 678 \"ntp_parser.y\"\n    {\n\t\t\tappend_queue(cfgt.mru_opts, (yyvsp[(2) - (2)].Queue));\n\t\t}\n    break;\n\n  case 117:\n\n/* Line 1455 of yacc.c  */\n#line 682 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node((yyvsp[(2) - (3)].Address_node), NULL, (yyvsp[(3) - (3)].Queue), ip_file->line_no));\n\t\t}\n    break;\n\n  case 118:\n\n/* Line 1455 of yacc.c  */\n#line 687 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node((yyvsp[(2) - (5)].Address_node), (yyvsp[(4) - (5)].Address_node), (yyvsp[(5) - (5)].Queue), ip_file->line_no));\n\t\t}\n    break;\n\n  case 119:\n\n/* Line 1455 of yacc.c  */\n#line 692 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node(NULL, NULL, (yyvsp[(3) - (3)].Queue), ip_file->line_no));\n\t\t}\n    break;\n\n  case 120:\n\n/* Line 1455 of yacc.c  */\n#line 697 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node(\n\t\t\t\t\tcreate_address_node(\n\t\t\t\t\t\testrdup(\"0.0.0.0\"), \n\t\t\t\t\t\tAF_INET),\n\t\t\t\t\tcreate_address_node(\n\t\t\t\t\t\testrdup(\"0.0.0.0\"), \n\t\t\t\t\t\tAF_INET),\n\t\t\t\t\t(yyvsp[(4) - (4)].Queue), \n\t\t\t\t\tip_file->line_no));\n\t\t}\n    break;\n\n  case 121:\n\n/* Line 1455 of yacc.c  */\n#line 710 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node(\n\t\t\t\t\tcreate_address_node(\n\t\t\t\t\t\testrdup(\"::\"), \n\t\t\t\t\t\tAF_INET6),\n\t\t\t\t\tcreate_address_node(\n\t\t\t\t\t\testrdup(\"::\"), \n\t\t\t\t\t\tAF_INET6),\n\t\t\t\t\t(yyvsp[(4) - (4)].Queue), \n\t\t\t\t\tip_file->line_no));\n\t\t}\n    break;\n\n  case 122:\n\n/* Line 1455 of yacc.c  */\n#line 723 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node(\n\t\t\t\t\tNULL, NULL,\n\t\t\t\t\tenqueue((yyvsp[(3) - (3)].Queue), create_ival((yyvsp[(2) - (3)].Integer))),\n\t\t\t\t\tip_file->line_no));\n\t\t}\n    break;\n\n  case 123:\n\n/* Line 1455 of yacc.c  */\n#line 734 \"ntp_parser.y\"\n    { (yyval.Queue) = create_queue(); }\n    break;\n\n  case 124:\n\n/* Line 1455 of yacc.c  */\n#line 736 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), create_ival((yyvsp[(2) - (2)].Integer))); }\n    break;\n\n  case 139:\n\n/* Line 1455 of yacc.c  */\n#line 758 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 140:\n\n/* Line 1455 of yacc.c  */\n#line 760 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 141:\n\n/* Line 1455 of yacc.c  */\n#line 764 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 142:\n\n/* Line 1455 of yacc.c  */\n#line 765 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 143:\n\n/* Line 1455 of yacc.c  */\n#line 766 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 144:\n\n/* Line 1455 of yacc.c  */\n#line 771 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 145:\n\n/* Line 1455 of yacc.c  */\n#line 773 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 146:\n\n/* Line 1455 of yacc.c  */\n#line 777 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 147:\n\n/* Line 1455 of yacc.c  */\n#line 778 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 148:\n\n/* Line 1455 of yacc.c  */\n#line 779 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 149:\n\n/* Line 1455 of yacc.c  */\n#line 780 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 150:\n\n/* Line 1455 of yacc.c  */\n#line 781 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 151:\n\n/* Line 1455 of yacc.c  */\n#line 782 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 152:\n\n/* Line 1455 of yacc.c  */\n#line 783 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 153:\n\n/* Line 1455 of yacc.c  */\n#line 784 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 154:\n\n/* Line 1455 of yacc.c  */\n#line 793 \"ntp_parser.y\"\n    { enqueue(cfgt.fudge, create_addr_opts_node((yyvsp[(2) - (3)].Address_node), (yyvsp[(3) - (3)].Queue))); }\n    break;\n\n  case 155:\n\n/* Line 1455 of yacc.c  */\n#line 798 \"ntp_parser.y\"\n    { enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 156:\n\n/* Line 1455 of yacc.c  */\n#line 800 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 157:\n\n/* Line 1455 of yacc.c  */\n#line 804 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 158:\n\n/* Line 1455 of yacc.c  */\n#line 805 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 159:\n\n/* Line 1455 of yacc.c  */\n#line 806 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 160:\n\n/* Line 1455 of yacc.c  */\n#line 807 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)); }\n    break;\n\n  case 161:\n\n/* Line 1455 of yacc.c  */\n#line 808 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 162:\n\n/* Line 1455 of yacc.c  */\n#line 809 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 163:\n\n/* Line 1455 of yacc.c  */\n#line 810 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 164:\n\n/* Line 1455 of yacc.c  */\n#line 811 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 165:\n\n/* Line 1455 of yacc.c  */\n#line 820 \"ntp_parser.y\"\n    { append_queue(cfgt.enable_opts, (yyvsp[(2) - (2)].Queue));  }\n    break;\n\n  case 166:\n\n/* Line 1455 of yacc.c  */\n#line 822 \"ntp_parser.y\"\n    { append_queue(cfgt.disable_opts, (yyvsp[(2) - (2)].Queue));  }\n    break;\n\n  case 167:\n\n/* Line 1455 of yacc.c  */\n#line 827 \"ntp_parser.y\"\n    {\n\t\t\tif ((yyvsp[(2) - (2)].Attr_val) != NULL)\n\t\t\t\t(yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val));\n\t\t\telse\n\t\t\t\t(yyval.Queue) = (yyvsp[(1) - (2)].Queue);\n\t\t}\n    break;\n\n  case 168:\n\n/* Line 1455 of yacc.c  */\n#line 834 \"ntp_parser.y\"\n    {\n\t\t\tif ((yyvsp[(1) - (1)].Attr_val) != NULL)\n\t\t\t\t(yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val));\n\t\t\telse\n\t\t\t\t(yyval.Queue) = create_queue();\n\t\t}\n    break;\n\n  case 169:\n\n/* Line 1455 of yacc.c  */\n#line 843 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 170:\n\n/* Line 1455 of yacc.c  */\n#line 844 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 171:\n\n/* Line 1455 of yacc.c  */\n#line 845 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 172:\n\n/* Line 1455 of yacc.c  */\n#line 846 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 173:\n\n/* Line 1455 of yacc.c  */\n#line 847 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 174:\n\n/* Line 1455 of yacc.c  */\n#line 848 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 175:\n\n/* Line 1455 of yacc.c  */\n#line 850 \"ntp_parser.y\"\n    { \n\t\t\tif (input_from_file)\n\t\t\t\t(yyval.Attr_val) = create_attr_ival(T_Flag, (yyvsp[(1) - (1)].Integer));\n\t\t\telse {\n\t\t\t\t(yyval.Attr_val) = NULL;\n\t\t\t\tyyerror(\"enable/disable stats remote configuration ignored\");\n\t\t\t}\n\t\t}\n    break;\n\n  case 176:\n\n/* Line 1455 of yacc.c  */\n#line 865 \"ntp_parser.y\"\n    { append_queue(cfgt.tinker, (yyvsp[(2) - (2)].Queue)); }\n    break;\n\n  case 177:\n\n/* Line 1455 of yacc.c  */\n#line 869 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 178:\n\n/* Line 1455 of yacc.c  */\n#line 870 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 179:\n\n/* Line 1455 of yacc.c  */\n#line 874 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 180:\n\n/* Line 1455 of yacc.c  */\n#line 875 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 181:\n\n/* Line 1455 of yacc.c  */\n#line 876 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 182:\n\n/* Line 1455 of yacc.c  */\n#line 877 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 183:\n\n/* Line 1455 of yacc.c  */\n#line 878 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 184:\n\n/* Line 1455 of yacc.c  */\n#line 879 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 185:\n\n/* Line 1455 of yacc.c  */\n#line 880 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double)); }\n    break;\n\n  case 187:\n\n/* Line 1455 of yacc.c  */\n#line 891 \"ntp_parser.y\"\n    {\n\t\t\tif (curr_include_level >= MAXINCLUDELEVEL) {\n\t\t\t\tfprintf(stderr, \"getconfig: Maximum include file level exceeded.\\n\");\n\t\t\t\tmsyslog(LOG_ERR, \"getconfig: Maximum include file level exceeded.\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfp[curr_include_level + 1] = F_OPEN(FindConfig((yyvsp[(2) - (3)].String)), \"r\");\n\t\t\t\tif (fp[curr_include_level + 1] == NULL) {\n\t\t\t\t\tfprintf(stderr, \"getconfig: Couldn't open <%s>\\n\", FindConfig((yyvsp[(2) - (3)].String)));\n\t\t\t\t\tmsyslog(LOG_ERR, \"getconfig: Couldn't open <%s>\", FindConfig((yyvsp[(2) - (3)].String)));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tip_file = fp[++curr_include_level];\n\t\t\t}\n\t\t}\n    break;\n\n  case 188:\n\n/* Line 1455 of yacc.c  */\n#line 907 \"ntp_parser.y\"\n    {\n\t\t\twhile (curr_include_level != -1)\n\t\t\t\tFCLOSE(fp[curr_include_level--]);\n\t\t}\n    break;\n\n  case 189:\n\n/* Line 1455 of yacc.c  */\n#line 913 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double))); }\n    break;\n\n  case 190:\n\n/* Line 1455 of yacc.c  */\n#line 915 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer))); }\n    break;\n\n  case 191:\n\n/* Line 1455 of yacc.c  */\n#line 917 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_dval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Double))); }\n    break;\n\n  case 192:\n\n/* Line 1455 of yacc.c  */\n#line 919 \"ntp_parser.y\"\n    { /* Null action, possibly all null parms */ }\n    break;\n\n  case 193:\n\n/* Line 1455 of yacc.c  */\n#line 921 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String))); }\n    break;\n\n  case 194:\n\n/* Line 1455 of yacc.c  */\n#line 924 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String))); }\n    break;\n\n  case 195:\n\n/* Line 1455 of yacc.c  */\n#line 926 \"ntp_parser.y\"\n    {\n\t\t\tif (input_from_file)\n\t\t\t\tenqueue(cfgt.vars,\n\t\t\t\t\tcreate_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)));\n\t\t\telse {\n\t\t\t\tfree((yyvsp[(2) - (2)].String));\n\t\t\t\tyyerror(\"logfile remote configuration ignored\");\n\t\t\t}\n\t\t}\n    break;\n\n  case 196:\n\n/* Line 1455 of yacc.c  */\n#line 937 \"ntp_parser.y\"\n    { append_queue(cfgt.logconfig, (yyvsp[(2) - (2)].Queue)); }\n    break;\n\n  case 197:\n\n/* Line 1455 of yacc.c  */\n#line 939 \"ntp_parser.y\"\n    { append_queue(cfgt.phone, (yyvsp[(2) - (2)].Queue)); }\n    break;\n\n  case 198:\n\n/* Line 1455 of yacc.c  */\n#line 941 \"ntp_parser.y\"\n    {\n\t\t\tif (input_from_file)\n\t\t\t\tenqueue(cfgt.vars,\n\t\t\t\t\tcreate_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String)));\n\t\t\telse {\n\t\t\t\tfree((yyvsp[(2) - (2)].String));\n\t\t\t\tyyerror(\"saveconfigdir remote configuration ignored\");\n\t\t\t}\n\t\t}\n    break;\n\n  case 199:\n\n/* Line 1455 of yacc.c  */\n#line 951 \"ntp_parser.y\"\n    { enqueue(cfgt.setvar, (yyvsp[(2) - (2)].Set_var)); }\n    break;\n\n  case 200:\n\n/* Line 1455 of yacc.c  */\n#line 953 \"ntp_parser.y\"\n    { enqueue(cfgt.trap, create_addr_opts_node((yyvsp[(2) - (2)].Address_node), NULL)); }\n    break;\n\n  case 201:\n\n/* Line 1455 of yacc.c  */\n#line 955 \"ntp_parser.y\"\n    { enqueue(cfgt.trap, create_addr_opts_node((yyvsp[(2) - (3)].Address_node), (yyvsp[(3) - (3)].Queue))); }\n    break;\n\n  case 202:\n\n/* Line 1455 of yacc.c  */\n#line 957 \"ntp_parser.y\"\n    { append_queue(cfgt.ttl, (yyvsp[(2) - (2)].Queue)); }\n    break;\n\n  case 203:\n\n/* Line 1455 of yacc.c  */\n#line 959 \"ntp_parser.y\"\n    { enqueue(cfgt.qos, create_attr_sval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].String))); }\n    break;\n\n  case 204:\n\n/* Line 1455 of yacc.c  */\n#line 964 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_sval(T_Driftfile, (yyvsp[(1) - (1)].String))); }\n    break;\n\n  case 205:\n\n/* Line 1455 of yacc.c  */\n#line 966 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_dval(T_WanderThreshold, (yyvsp[(2) - (2)].Double)));\n\t\t\t  enqueue(cfgt.vars, create_attr_sval(T_Driftfile, (yyvsp[(1) - (2)].String))); }\n    break;\n\n  case 206:\n\n/* Line 1455 of yacc.c  */\n#line 969 \"ntp_parser.y\"\n    { enqueue(cfgt.vars, create_attr_sval(T_Driftfile, \"\\0\")); }\n    break;\n\n  case 207:\n\n/* Line 1455 of yacc.c  */\n#line 974 \"ntp_parser.y\"\n    { (yyval.Set_var) = create_setvar_node((yyvsp[(1) - (4)].String), (yyvsp[(3) - (4)].String), (yyvsp[(4) - (4)].Integer)); }\n    break;\n\n  case 208:\n\n/* Line 1455 of yacc.c  */\n#line 976 \"ntp_parser.y\"\n    { (yyval.Set_var) = create_setvar_node((yyvsp[(1) - (3)].String), (yyvsp[(3) - (3)].String), 0); }\n    break;\n\n  case 209:\n\n/* Line 1455 of yacc.c  */\n#line 981 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 210:\n\n/* Line 1455 of yacc.c  */\n#line 982 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 211:\n\n/* Line 1455 of yacc.c  */\n#line 986 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Integer)); }\n    break;\n\n  case 212:\n\n/* Line 1455 of yacc.c  */\n#line 987 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_pval((yyvsp[(1) - (2)].Integer), (yyvsp[(2) - (2)].Address_node)); }\n    break;\n\n  case 213:\n\n/* Line 1455 of yacc.c  */\n#line 991 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 214:\n\n/* Line 1455 of yacc.c  */\n#line 992 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 215:\n\n/* Line 1455 of yacc.c  */\n#line 997 \"ntp_parser.y\"\n    {\n\t\t\tchar\tprefix;\n\t\t\tchar *\ttype;\n\t\t\t\n\t\t\tswitch ((yyvsp[(1) - (1)].String)[0]) {\n\t\t\t\n\t\t\tcase '+':\n\t\t\tcase '-':\n\t\t\tcase '=':\n\t\t\t\tprefix = (yyvsp[(1) - (1)].String)[0];\n\t\t\t\ttype = (yyvsp[(1) - (1)].String) + 1;\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\tdefault:\n\t\t\t\tprefix = '=';\n\t\t\t\ttype = (yyvsp[(1) - (1)].String);\n\t\t\t}\t\n\t\t\t\n\t\t\t(yyval.Attr_val) = create_attr_sval(prefix, estrdup(type));\n\t\t\tYYFREE((yyvsp[(1) - (1)].String));\n\t\t}\n    break;\n\n  case 216:\n\n/* Line 1455 of yacc.c  */\n#line 1022 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.nic_rules,\n\t\t\t\tcreate_nic_rule_node((yyvsp[(3) - (3)].Integer), NULL, (yyvsp[(2) - (3)].Integer)));\n\t\t}\n    break;\n\n  case 217:\n\n/* Line 1455 of yacc.c  */\n#line 1027 \"ntp_parser.y\"\n    {\n\t\t\tenqueue(cfgt.nic_rules,\n\t\t\t\tcreate_nic_rule_node(0, (yyvsp[(3) - (3)].String), (yyvsp[(2) - (3)].Integer)));\n\t\t}\n    break;\n\n  case 227:\n\n/* Line 1455 of yacc.c  */\n#line 1058 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), create_ival((yyvsp[(2) - (2)].Integer))); }\n    break;\n\n  case 228:\n\n/* Line 1455 of yacc.c  */\n#line 1059 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue(create_ival((yyvsp[(1) - (1)].Integer))); }\n    break;\n\n  case 229:\n\n/* Line 1455 of yacc.c  */\n#line 1064 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Attr_val)); }\n    break;\n\n  case 230:\n\n/* Line 1455 of yacc.c  */\n#line 1066 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Attr_val)); }\n    break;\n\n  case 231:\n\n/* Line 1455 of yacc.c  */\n#line 1071 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_ival('i', (yyvsp[(1) - (1)].Integer)); }\n    break;\n\n  case 233:\n\n/* Line 1455 of yacc.c  */\n#line 1077 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_shorts('-', (yyvsp[(2) - (5)].Integer), (yyvsp[(4) - (5)].Integer)); }\n    break;\n\n  case 234:\n\n/* Line 1455 of yacc.c  */\n#line 1081 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), create_pval((yyvsp[(2) - (2)].String))); }\n    break;\n\n  case 235:\n\n/* Line 1455 of yacc.c  */\n#line 1082 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue(create_pval((yyvsp[(1) - (1)].String))); }\n    break;\n\n  case 236:\n\n/* Line 1455 of yacc.c  */\n#line 1086 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Address_node)); }\n    break;\n\n  case 237:\n\n/* Line 1455 of yacc.c  */\n#line 1087 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Address_node)); }\n    break;\n\n  case 238:\n\n/* Line 1455 of yacc.c  */\n#line 1092 \"ntp_parser.y\"\n    {\n\t\t\tif ((yyvsp[(1) - (1)].Integer) != 0 && (yyvsp[(1) - (1)].Integer) != 1) {\n\t\t\t\tyyerror(\"Integer value is not boolean (0 or 1). Assuming 1\");\n\t\t\t\t(yyval.Integer) = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\t(yyval.Integer) = (yyvsp[(1) - (1)].Integer);\n\t\t}\n    break;\n\n  case 239:\n\n/* Line 1455 of yacc.c  */\n#line 1100 \"ntp_parser.y\"\n    { (yyval.Integer) = 1; }\n    break;\n\n  case 240:\n\n/* Line 1455 of yacc.c  */\n#line 1101 \"ntp_parser.y\"\n    { (yyval.Integer) = 0; }\n    break;\n\n  case 241:\n\n/* Line 1455 of yacc.c  */\n#line 1105 \"ntp_parser.y\"\n    { (yyval.Double) = (double)(yyvsp[(1) - (1)].Integer); }\n    break;\n\n  case 243:\n\n/* Line 1455 of yacc.c  */\n#line 1116 \"ntp_parser.y\"\n    {\n\t\t\tcfgt.sim_details = create_sim_node((yyvsp[(3) - (5)].Queue), (yyvsp[(4) - (5)].Queue));\n\n\t\t\t/* Reset the old_config_style variable */\n\t\t\told_config_style = 1;\n\t\t}\n    break;\n\n  case 244:\n\n/* Line 1455 of yacc.c  */\n#line 1130 \"ntp_parser.y\"\n    { old_config_style = 0; }\n    break;\n\n  case 245:\n\n/* Line 1455 of yacc.c  */\n#line 1134 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (3)].Queue), (yyvsp[(2) - (3)].Attr_val)); }\n    break;\n\n  case 246:\n\n/* Line 1455 of yacc.c  */\n#line 1135 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (2)].Attr_val)); }\n    break;\n\n  case 247:\n\n/* Line 1455 of yacc.c  */\n#line 1139 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (3)].Integer), (yyvsp[(3) - (3)].Double)); }\n    break;\n\n  case 248:\n\n/* Line 1455 of yacc.c  */\n#line 1140 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (3)].Integer), (yyvsp[(3) - (3)].Double)); }\n    break;\n\n  case 249:\n\n/* Line 1455 of yacc.c  */\n#line 1144 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Sim_server)); }\n    break;\n\n  case 250:\n\n/* Line 1455 of yacc.c  */\n#line 1145 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Sim_server)); }\n    break;\n\n  case 251:\n\n/* Line 1455 of yacc.c  */\n#line 1150 \"ntp_parser.y\"\n    { (yyval.Sim_server) = create_sim_server((yyvsp[(1) - (5)].Address_node), (yyvsp[(3) - (5)].Double), (yyvsp[(4) - (5)].Queue)); }\n    break;\n\n  case 252:\n\n/* Line 1455 of yacc.c  */\n#line 1154 \"ntp_parser.y\"\n    { (yyval.Double) = (yyvsp[(3) - (4)].Double); }\n    break;\n\n  case 253:\n\n/* Line 1455 of yacc.c  */\n#line 1158 \"ntp_parser.y\"\n    { (yyval.Address_node) = (yyvsp[(3) - (3)].Address_node); }\n    break;\n\n  case 254:\n\n/* Line 1455 of yacc.c  */\n#line 1162 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (2)].Queue), (yyvsp[(2) - (2)].Sim_script)); }\n    break;\n\n  case 255:\n\n/* Line 1455 of yacc.c  */\n#line 1163 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (1)].Sim_script)); }\n    break;\n\n  case 256:\n\n/* Line 1455 of yacc.c  */\n#line 1168 \"ntp_parser.y\"\n    { (yyval.Sim_script) = create_sim_script_info((yyvsp[(3) - (6)].Double), (yyvsp[(5) - (6)].Queue)); }\n    break;\n\n  case 257:\n\n/* Line 1455 of yacc.c  */\n#line 1172 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue((yyvsp[(1) - (3)].Queue), (yyvsp[(2) - (3)].Attr_val)); }\n    break;\n\n  case 258:\n\n/* Line 1455 of yacc.c  */\n#line 1173 \"ntp_parser.y\"\n    { (yyval.Queue) = enqueue_in_new_queue((yyvsp[(1) - (2)].Attr_val)); }\n    break;\n\n  case 259:\n\n/* Line 1455 of yacc.c  */\n#line 1178 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (3)].Integer), (yyvsp[(3) - (3)].Double)); }\n    break;\n\n  case 260:\n\n/* Line 1455 of yacc.c  */\n#line 1180 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (3)].Integer), (yyvsp[(3) - (3)].Double)); }\n    break;\n\n  case 261:\n\n/* Line 1455 of yacc.c  */\n#line 1182 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (3)].Integer), (yyvsp[(3) - (3)].Double)); }\n    break;\n\n  case 262:\n\n/* Line 1455 of yacc.c  */\n#line 1184 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (3)].Integer), (yyvsp[(3) - (3)].Double)); }\n    break;\n\n  case 263:\n\n/* Line 1455 of yacc.c  */\n#line 1186 \"ntp_parser.y\"\n    { (yyval.Attr_val) = create_attr_dval((yyvsp[(1) - (3)].Integer), (yyvsp[(3) - (3)].Double)); }\n    break;\n\n\n\n/* Line 1455 of yacc.c  */\n#line 3836 \"ntp_parser.c\"\n      default: break;\n    }\n  YY_SYMBOL_PRINT (\"-> $$ =\", yyr1[yyn], &yyval, &yyloc);\n\n  YYPOPSTACK (yylen);\n  yylen = 0;\n  YY_STACK_PRINT (yyss, yyssp);\n\n  *++yyvsp = yyval;\n\n  /* Now `shift' the result of the reduction.  Determine what state\n     that goes to, based on the state we popped back to and the rule\n     number reduced by.  */\n\n  yyn = yyr1[yyn];\n\n  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;\n  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)\n    yystate = yytable[yystate];\n  else\n    yystate = yydefgoto[yyn - YYNTOKENS];\n\n  goto yynewstate;\n\n\n/*------------------------------------.\n| yyerrlab -- here on detecting error |\n`------------------------------------*/\nyyerrlab:\n  /* If not already recovering from an error, report this error.  */\n  if (!yyerrstatus)\n    {\n      ++yynerrs;\n#if ! YYERROR_VERBOSE\n      yyerror (YY_(\"syntax error\"));\n#else\n      {\n\tYYSIZE_T yysize = yysyntax_error (0, yystate, yychar);\n\tif (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)\n\t  {\n\t    YYSIZE_T yyalloc = 2 * yysize;\n\t    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))\n\t      yyalloc = YYSTACK_ALLOC_MAXIMUM;\n\t    if (yymsg != yymsgbuf)\n\t      YYSTACK_FREE (yymsg);\n\t    yymsg = (char *) YYSTACK_ALLOC (yyalloc);\n\t    if (yymsg)\n\t      yymsg_alloc = yyalloc;\n\t    else\n\t      {\n\t\tyymsg = yymsgbuf;\n\t\tyymsg_alloc = sizeof yymsgbuf;\n\t      }\n\t  }\n\n\tif (0 < yysize && yysize <= yymsg_alloc)\n\t  {\n\t    (void) yysyntax_error (yymsg, yystate, yychar);\n\t    yyerror (yymsg);\n\t  }\n\telse\n\t  {\n\t    yyerror (YY_(\"syntax error\"));\n\t    if (yysize != 0)\n\t      goto yyexhaustedlab;\n\t  }\n      }\n#endif\n    }\n\n\n\n  if (yyerrstatus == 3)\n    {\n      /* If just tried and failed to reuse lookahead token after an\n\t error, discard it.  */\n\n      if (yychar <= YYEOF)\n\t{\n\t  /* Return failure if at end of input.  */\n\t  if (yychar == YYEOF)\n\t    YYABORT;\n\t}\n      else\n\t{\n\t  yydestruct (\"Error: discarding\",\n\t\t      yytoken, &yylval);\n\t  yychar = YYEMPTY;\n\t}\n    }\n\n  /* Else will try to reuse lookahead token after shifting the error\n     token.  */\n  goto yyerrlab1;\n\n\n/*---------------------------------------------------.\n| yyerrorlab -- error raised explicitly by YYERROR.  |\n`---------------------------------------------------*/\nyyerrorlab:\n\n  /* Pacify compilers like GCC when the user code never invokes\n     YYERROR and the label yyerrorlab therefore never appears in user\n     code.  */\n  if (/*CONSTCOND*/ 0)\n     goto yyerrorlab;\n\n  /* Do not reclaim the symbols of the rule which action triggered\n     this YYERROR.  */\n  YYPOPSTACK (yylen);\n  yylen = 0;\n  YY_STACK_PRINT (yyss, yyssp);\n  yystate = *yyssp;\n  goto yyerrlab1;\n\n\n/*-------------------------------------------------------------.\n| yyerrlab1 -- common code for both syntax error and YYERROR.  |\n`-------------------------------------------------------------*/\nyyerrlab1:\n  yyerrstatus = 3;\t/* Each real token shifted decrements this.  */\n\n  for (;;)\n    {\n      yyn = yypact[yystate];\n      if (yyn != YYPACT_NINF)\n\t{\n\t  yyn += YYTERROR;\n\t  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)\n\t    {\n\t      yyn = yytable[yyn];\n\t      if (0 < yyn)\n\t\tbreak;\n\t    }\n\t}\n\n      /* Pop the current state because it cannot handle the error token.  */\n      if (yyssp == yyss)\n\tYYABORT;\n\n\n      yydestruct (\"Error: popping\",\n\t\t  yystos[yystate], yyvsp);\n      YYPOPSTACK (1);\n      yystate = *yyssp;\n      YY_STACK_PRINT (yyss, yyssp);\n    }\n\n  *++yyvsp = yylval;\n\n\n  /* Shift the error token.  */\n  YY_SYMBOL_PRINT (\"Shifting\", yystos[yyn], yyvsp, yylsp);\n\n  yystate = yyn;\n  goto yynewstate;\n\n\n/*-------------------------------------.\n| yyacceptlab -- YYACCEPT comes here.  |\n`-------------------------------------*/\nyyacceptlab:\n  yyresult = 0;\n  goto yyreturn;\n\n/*-----------------------------------.\n| yyabortlab -- YYABORT comes here.  |\n`-----------------------------------*/\nyyabortlab:\n  yyresult = 1;\n  goto yyreturn;\n\n#if !defined(yyoverflow) || YYERROR_VERBOSE\n/*-------------------------------------------------.\n| yyexhaustedlab -- memory exhaustion comes here.  |\n`-------------------------------------------------*/\nyyexhaustedlab:\n  yyerror (YY_(\"memory exhausted\"));\n  yyresult = 2;\n  /* Fall through.  */\n#endif\n\nyyreturn:\n  if (yychar != YYEMPTY)\n     yydestruct (\"Cleanup: discarding lookahead\",\n\t\t yytoken, &yylval);\n  /* Do not reclaim the symbols of the rule which action triggered\n     this YYABORT or YYACCEPT.  */\n  YYPOPSTACK (yylen);\n  YY_STACK_PRINT (yyss, yyssp);\n  while (yyssp != yyss)\n    {\n      yydestruct (\"Cleanup: popping\",\n\t\t  yystos[*yyssp], yyvsp);\n      YYPOPSTACK (1);\n    }\n#ifndef yyoverflow\n  if (yyss != yyssa)\n    YYSTACK_FREE (yyss);\n#endif\n#if YYERROR_VERBOSE\n  if (yymsg != yymsgbuf)\n    YYSTACK_FREE (yymsg);\n#endif\n  /* Make sure YYID is used.  */\n  return YYID (yyresult);\n}\n\n\n\n/* Line 1675 of yacc.c  */\n#line 1190 \"ntp_parser.y\"\n\n\nvoid yyerror (char *msg)\n{\n\tint retval;\n\n\tip_file->err_line_no = ip_file->prev_token_line_no;\n\tip_file->err_col_no = ip_file->prev_token_col_no;\n\t\n\tmsyslog(LOG_ERR, \n\t\t\"line %d column %d %s\", \n\t\tip_file->err_line_no,\n\t\tip_file->err_col_no,\n\t\tmsg);\n\tif (!input_from_file) {\n\t\t/* Save the error message in the correct buffer */\n\t\tretval = snprintf(remote_config.err_msg + remote_config.err_pos,\n\t\t\t\t  MAXLINE - remote_config.err_pos,\n\t\t\t\t  \"column %d %s\",\n\t\t\t\t  ip_file->err_col_no, msg);\n\n\t\t/* Increment the value of err_pos */\n\t\tif (retval > 0)\n\t\t\tremote_config.err_pos += retval;\n\n\t\t/* Increment the number of errors */\n\t\t++remote_config.no_errors;\n\t}\n}\n\n\n/*\n * token_name - convert T_ token integers to text\n *\t\texample: token_name(T_Server) returns \"T_Server\"\n */\nconst char *\ntoken_name(\n\tint token\n\t)\n{\n\treturn yytname[YYTRANSLATE(token)];\n}\n\n\n/* Initial Testing function -- ignore\nint main(int argc, char *argv[])\n{\n\tip_file = FOPEN(argv[1], \"r\");\n\tif (!ip_file) {\n\t\tfprintf(stderr, \"ERROR!! Could not open file: %s\\n\", argv[1]);\n\t}\n\tkey_scanner = create_keyword_scanner(keyword_list);\n\tprint_keyword_scanner(key_scanner, 0);\n\tyyparse();\n\treturn 0;\n}\n*/\n\n\n", "/* ntp_parser.y\n *\n * The parser for the NTP configuration file.\n *\n * Written By:\tSachin Kamboj\n *\t\tUniversity of Delaware\n *\t\tNewark, DE 19711\n * Copyright (c) 2006\n */\n\n%{\n  #ifdef HAVE_CONFIG_H\n  # include <config.h>\n  #endif\n\n  #include \"ntpd.h\"\n  #include \"ntp_machine.h\"\n  #include \"ntp.h\"\n  #include \"ntp_stdlib.h\"\n  #include \"ntp_filegen.h\"\n  #include \"ntp_data_structures.h\"\n  #include \"ntp_scanner.h\"\n  #include \"ntp_config.h\"\n  #include \"ntp_crypto.h\"\n\n  #include \"ntpsim.h\"\t\t/* HMS: Do we really want this all the time? */\n\t\t\t\t/* SK: It might be a good idea to always\n\t\t\t\t   include the simulator code. That way\n\t\t\t\t   someone can use the same configuration file\n\t\t\t\t   for both the simulator and the daemon\n\t\t\t\t*/\n\n\n  struct FILE_INFO *ip_file;   /* Pointer to the configuration file stream */\n\n  #define YYMALLOC\temalloc\n  #define YYFREE\tfree\n  #define YYERROR_VERBOSE\n  #define YYMAXDEPTH\t1000   /* stop the madness sooner */\n  void yyerror (char *msg);\n  extern int input_from_file;  /* 0=input from ntpq :config */\n%}\n\n/* \n * Enable generation of token names array even without YYDEBUG.\n * We access via token_name() defined below.\n */\n%token-table\n\n%union {\n    char   *String;\n    double  Double;\n    int     Integer;\n    void   *VoidPtr;\n    queue  *Queue;\n    struct attr_val *Attr_val;\n    struct address_node *Address_node;\n    struct setvar_node *Set_var;\n\n    /* Simulation types */\n    server_info *Sim_server;\n    script_info *Sim_script;\n}\n\n/* TERMINALS (do not appear left of colon) */\n%token\t<Integer>\tT_Age\n%token\t<Integer>\tT_All\n%token\t<Integer>\tT_Allan\n%token\t<Integer>\tT_Auth\n%token\t<Integer>\tT_Autokey\n%token\t<Integer>\tT_Automax\n%token\t<Integer>\tT_Average\n%token\t<Integer>\tT_Bclient\n%token\t<Integer>\tT_Beacon\n%token\t<Integer>\tT_Bias\n%token\t<Integer>\tT_Broadcast\n%token\t<Integer>\tT_Broadcastclient\n%token\t<Integer>\tT_Broadcastdelay\n%token\t<Integer>\tT_Burst\n%token\t<Integer>\tT_Calibrate\n%token\t<Integer>\tT_Calldelay\n%token\t<Integer>\tT_Ceiling\n%token\t<Integer>\tT_Clockstats\n%token\t<Integer>\tT_Cohort\n%token\t<Integer>\tT_ControlKey\n%token\t<Integer>\tT_Crypto\n%token\t<Integer>\tT_Cryptostats\n%token\t<Integer>\tT_Day\n%token\t<Integer>\tT_Default\n%token\t<Integer>\tT_Digest\n%token\t<Integer>\tT_Disable\n%token\t<Integer>\tT_Discard\n%token\t<Integer>\tT_Dispersion\n%token\t<Double>\tT_Double\n%token\t<Integer>\tT_Driftfile\n%token\t<Integer>\tT_Drop\n%token\t<Integer>\tT_Ellipsis\t/* \"...\" not \"ellipsis\" */\n%token\t<Integer>\tT_Enable\n%token\t<Integer>\tT_End\n%token\t<Integer>\tT_False\n%token\t<Integer>\tT_File\n%token\t<Integer>\tT_Filegen\n%token\t<Integer>\tT_Flag1\n%token\t<Integer>\tT_Flag2\n%token\t<Integer>\tT_Flag3\n%token\t<Integer>\tT_Flag4\n%token\t<Integer>\tT_Flake\n%token\t<Integer>\tT_Floor\n%token\t<Integer>\tT_Freq\n%token\t<Integer>\tT_Fudge\n%token\t<Integer>\tT_Host\n%token\t<Integer>\tT_Huffpuff\n%token\t<Integer>\tT_Iburst\n%token\t<Integer>\tT_Ident\n%token\t<Integer>\tT_Ignore\n%token\t<Integer>\tT_Incalloc\n%token\t<Integer>\tT_Incmem\n%token\t<Integer>\tT_Initalloc\n%token\t<Integer>\tT_Initmem\n%token\t<Integer>\tT_Includefile\n%token\t<Integer>\tT_Integer\n%token\t<Integer>\tT_Interface\n%token\t<Integer>\tT_Ipv4\n%token\t<Integer>\tT_Ipv4_flag\n%token\t<Integer>\tT_Ipv6\n%token\t<Integer>\tT_Ipv6_flag\n%token\t<Integer>\tT_Kernel\n%token\t<Integer>\tT_Key\n%token\t<Integer>\tT_Keys\n%token\t<Integer>\tT_Keysdir\n%token\t<Integer>\tT_Kod\n%token\t<Integer>\tT_Mssntp\n%token\t<Integer>\tT_Leapfile\n%token\t<Integer>\tT_Limited\n%token\t<Integer>\tT_Link\n%token\t<Integer>\tT_Listen\n%token\t<Integer>\tT_Logconfig\n%token\t<Integer>\tT_Logfile\n%token\t<Integer>\tT_Loopstats\n%token\t<Integer>\tT_Lowpriotrap\n%token\t<Integer>\tT_Manycastclient\n%token\t<Integer>\tT_Manycastserver\n%token\t<Integer>\tT_Mask\n%token\t<Integer>\tT_Maxage\n%token\t<Integer>\tT_Maxclock\n%token\t<Integer>\tT_Maxdepth\n%token\t<Integer>\tT_Maxdist\n%token\t<Integer>\tT_Maxmem\n%token\t<Integer>\tT_Maxpoll\n%token\t<Integer>\tT_Minclock\n%token\t<Integer>\tT_Mindepth\n%token\t<Integer>\tT_Mindist\n%token\t<Integer>\tT_Minimum\n%token\t<Integer>\tT_Minpoll\n%token\t<Integer>\tT_Minsane\n%token\t<Integer>\tT_Mode\n%token\t<Integer>\tT_Monitor\n%token\t<Integer>\tT_Month\n%token\t<Integer>\tT_Mru\n%token\t<Integer>\tT_Multicastclient\n%token\t<Integer>\tT_Nic\n%token\t<Integer>\tT_Nolink\n%token\t<Integer>\tT_Nomodify\n%token\t<Integer>\tT_None\n%token\t<Integer>\tT_Nopeer\n%token\t<Integer>\tT_Noquery\n%token\t<Integer>\tT_Noselect\n%token\t<Integer>\tT_Noserve\n%token\t<Integer>\tT_Notrap\n%token\t<Integer>\tT_Notrust\n%token\t<Integer>\tT_Ntp\n%token\t<Integer>\tT_Ntpport\n%token\t<Integer>\tT_NtpSignDsocket\n%token\t<Integer>\tT_Orphan\n%token\t<Integer>\tT_Orphanwait\n%token\t<Integer>\tT_Panic\n%token\t<Integer>\tT_Peer\n%token\t<Integer>\tT_Peerstats\n%token\t<Integer>\tT_Phone\n%token\t<Integer>\tT_Pid\n%token\t<Integer>\tT_Pidfile\n%token\t<Integer>\tT_Pool\n%token\t<Integer>\tT_Port\n%token\t<Integer>\tT_Preempt\n%token\t<Integer>\tT_Prefer\n%token\t<Integer>\tT_Protostats\n%token\t<Integer>\tT_Pw\n%token\t<Integer>\tT_Qos\n%token\t<Integer>\tT_Randfile\n%token\t<Integer>\tT_Rawstats\n%token\t<Integer>\tT_Refid\n%token\t<Integer>\tT_Requestkey\n%token\t<Integer>\tT_Restrict\n%token\t<Integer>\tT_Revoke\n%token\t<Integer>\tT_Saveconfigdir\n%token\t<Integer>\tT_Server\n%token\t<Integer>\tT_Setvar\n%token\t<Integer>\tT_Sign\n%token\t<Integer>\tT_Source\n%token\t<Integer>\tT_Statistics\n%token\t<Integer>\tT_Stats\n%token\t<Integer>\tT_Statsdir\n%token\t<Integer>\tT_Step\n%token\t<Integer>\tT_Stepout\n%token\t<Integer>\tT_Stratum\n%token\t<String>\tT_String\n%token\t<Integer>\tT_Sysstats\n%token\t<Integer>\tT_Tick\n%token\t<Integer>\tT_Time1\n%token\t<Integer>\tT_Time2\n%token\t<Integer>\tT_Timingstats\n%token\t<Integer>\tT_Tinker\n%token\t<Integer>\tT_Tos\n%token\t<Integer>\tT_Trap\n%token\t<Integer>\tT_True\n%token\t<Integer>\tT_Trustedkey\n%token\t<Integer>\tT_Ttl\n%token\t<Integer>\tT_Type\n%token\t<Integer>\tT_Unconfig\n%token\t<Integer>\tT_Unpeer\n%token\t<Integer>\tT_Version\n%token\t<Integer>\tT_WanderThreshold\t/* Not a token */\n%token\t<Integer>\tT_Week\n%token\t<Integer>\tT_Wildcard\n%token\t<Integer>\tT_Xleave\n%token\t<Integer>\tT_Year\n%token\t<Integer>\tT_Flag\t\t/* Not an actual token */\n%token\t<Integer>\tT_Void\t\t/* Not an actual token */\n%token\t<Integer>\tT_EOC\n\n\n/* NTP Simulator Tokens */\n%token\t<Integer>\tT_Simulate\n%token\t<Integer>\tT_Beep_Delay\n%token\t<Integer>\tT_Sim_Duration\n%token\t<Integer>\tT_Server_Offset\n%token\t<Integer>\tT_Duration\n%token\t<Integer>\tT_Freq_Offset\n%token\t<Integer>\tT_Wander\n%token\t<Integer>\tT_Jitter\n%token\t<Integer>\tT_Prop_Delay\n%token\t<Integer>\tT_Proc_Delay\n\n\n\n/*** NON-TERMINALS ***/\n%type\t<Integer>\taccess_control_flag\n%type\t<Queue>\t\tac_flag_list\n%type\t<Address_node>\taddress\n%type\t<Queue>\t\taddress_list\n%type\t<Integer>\tboolean\n%type\t<Integer>\tclient_type\n%type\t<Attr_val>\tcrypto_command\n%type\t<Queue>\t\tcrypto_command_line\n%type\t<Queue>\t\tcrypto_command_list\n%type\t<Attr_val>\tdiscard_option\n%type\t<Queue>\t\tdiscard_option_list\n%type\t<Attr_val>\tfilegen_option\n%type\t<Queue>\t\tfilegen_option_list\n%type\t<Integer>\tfilegen_type\n%type\t<Attr_val>\tfudge_factor\n%type\t<Queue>\t\tfudge_factor_list\n%type\t<Queue>\t\tinteger_list\n%type\t<Queue>\t\tinteger_list_range\n%type\t<Attr_val>\tinteger_list_range_elt\n%type\t<Attr_val>\tinteger_range\n%type\t<Integer>\tnic_rule_action\n%type\t<Queue>\t\tinterface_command\n%type\t<Integer>\tinterface_nic\n%type\t<Address_node>\tip_address\n%type\t<Attr_val>\tlog_config_command\n%type\t<Queue>\t\tlog_config_list\n%type\t<Attr_val>\tmru_option\n%type\t<Queue>\t\tmru_option_list\n%type\t<Integer>\tnic_rule_class\n%type\t<Double>\tnumber\n%type\t<Attr_val>\toption\n%type\t<Queue>\t\toption_list\n%type\t<Integer>\tstat\n%type\t<Queue>\t\tstats_list\n%type\t<Queue>\t\tstring_list\n%type\t<Attr_val>\tsystem_option\n%type\t<Queue>\t\tsystem_option_list\n%type\t<Attr_val>\ttinker_option\n%type\t<Queue>\t\ttinker_option_list\n%type\t<Attr_val>\ttos_option\n%type\t<Queue>\t\ttos_option_list\n%type\t<Attr_val>\ttrap_option\n%type\t<Queue>\t\ttrap_option_list\n%type\t<Integer>\tunpeer_keyword\n%type\t<Set_var>\tvariable_assign\n\n/* NTP Simulator non-terminals */\n%type\t<Queue>\t\tsim_init_statement_list\n%type\t<Attr_val>\tsim_init_statement\n%type\t<Queue>\t\tsim_server_list\n%type\t<Sim_server>\tsim_server\n%type\t<Double>\tsim_server_offset\n%type\t<Address_node>\tsim_server_name\n%type\t<Queue>\t\tsim_act_list\n%type\t<Sim_script>\tsim_act\n%type\t<Queue>\t\tsim_act_stmt_list\n%type\t<Attr_val>\tsim_act_stmt\n\n%%\n\n/* ntp.conf\n * Configuration File Grammar\n * --------------------------\n */\n\nconfiguration\n\t:\tcommand_list\n\t;\n\ncommand_list\n\t:\tcommand_list command T_EOC\n\t|\tcommand T_EOC\n\t|\terror T_EOC\n\t\t{\n\t\t\t/* I will need to incorporate much more fine grained\n\t\t\t * error messages. The following should suffice for\n\t\t\t * the time being.\n\t\t\t */\n\t\t\tmsyslog(LOG_ERR, \n\t\t\t\t\"syntax error in %s line %d, column %d\",\n\t\t\t\tip_file->fname,\n\t\t\t\tip_file->err_line_no,\n\t\t\t\tip_file->err_col_no);\n\t\t}\n\t;\n\ncommand :\t/* NULL STATEMENT */\n\t|\tserver_command\n\t|\tunpeer_command\n\t|\tother_mode_command\n\t|\tauthentication_command\n\t|\tmonitoring_command\n\t|\taccess_control_command\n\t|\torphan_mode_command\n\t|\tfudge_command\n\t|\tsystem_option_command\n\t|\ttinker_command\n\t|\tmiscellaneous_command\n\t|\tsimulate_command\n\t;\n\n/* Server Commands\n * ---------------\n */\n\nserver_command\n\t:\tclient_type address option_list\n\t\t{\n\t\t\tstruct peer_node *my_node =  create_peer_node($1, $2, $3);\n\t\t\tif (my_node)\n\t\t\t\tenqueue(cfgt.peers, my_node);\n\t\t}\n\t|\tclient_type address\n\t\t{\n\t\t\tstruct peer_node *my_node = create_peer_node($1, $2, NULL);\n\t\t\tif (my_node)\n\t\t\t\tenqueue(cfgt.peers, my_node);\n\t\t}\n\t;\n\nclient_type\n\t:\tT_Server\n\t|\tT_Pool\n\t|\tT_Peer\n\t|\tT_Broadcast\n\t|\tT_Manycastclient\n\t;\n\naddress\n\t:\tip_address\n\t|\tT_Ipv4_flag T_String\t{ $$ = create_address_node($2, AF_INET); }\n\t|\tT_Ipv6_flag T_String\t{ $$ = create_address_node($2, AF_INET6); }\n\t;\n\nip_address\n\t:\tT_String { $$ = create_address_node($1, 0); }\n\t;\n\noption_list\n\t:\toption_list option { $$ = enqueue($1, $2); }\n\t|\toption { $$ = enqueue_in_new_queue($1); }\n\t;\n\noption\n\t:\tT_Autokey\t\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Bias number\t\t{ $$ = create_attr_dval($1, $2); }\n\t|\tT_Burst\t\t\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Iburst\t\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Key T_Integer\t\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Minpoll T_Integer\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Maxpoll T_Integer\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Noselect\t\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Preempt\t\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Prefer\t\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_True\t\t\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Xleave\t\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Ttl T_Integer\t\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Mode T_Integer\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Version T_Integer\t{ $$ = create_attr_ival($1, $2); }\n\t;\n\n\n/* unpeer commands\n * ---------------\n */\n\nunpeer_command\n\t:\tunpeer_keyword address\n\t\t{\n\t\t\tstruct unpeer_node *my_node = create_unpeer_node($2);\n\t\t\tif (my_node)\n\t\t\t\tenqueue(cfgt.unpeers, my_node);\n\t\t}\n\t;\t\nunpeer_keyword\t\n\t:\tT_Unconfig\n\t|\tT_Unpeer\n\t;\n\t\n\t\n/* Other Modes\n * (broadcastclient manycastserver multicastclient)\n * ------------------------------------------------\n */\n\nother_mode_command\n\t:\tT_Broadcastclient\n\t\t\t{ cfgt.broadcastclient = 1; }\n\t|\tT_Manycastserver address_list\n\t\t\t{ append_queue(cfgt.manycastserver, $2); }\n\t|\tT_Multicastclient address_list\n\t\t\t{ append_queue(cfgt.multicastclient, $2); }\n\t;\n\n\n\n/* Authentication Commands\n * -----------------------\n */\n\nauthentication_command\n\t:\tT_Automax T_Integer\n\t\t\t{ enqueue(cfgt.vars, create_attr_ival($1, $2)); }\n\t|\tT_ControlKey T_Integer\n\t\t\t{ cfgt.auth.control_key = $2; }\n\t|\tT_Crypto crypto_command_line\n\t\t{ \n\t\t\tcfgt.auth.cryptosw++;\n\t\t\tappend_queue(cfgt.auth.crypto_cmd_list, $2);\n\t\t}\n\t|\tT_Keys T_String\n\t\t\t{ cfgt.auth.keys = $2; }\n\t|\tT_Keysdir T_String\n\t\t\t{ cfgt.auth.keysdir = $2; }\n\t|\tT_Requestkey T_Integer\n\t\t\t{ cfgt.auth.request_key = $2; }\n\t|\tT_Revoke T_Integer\n\t\t\t{ cfgt.auth.revoke = $2; }\n\t|\tT_Trustedkey integer_list_range\n\t\t\t{ cfgt.auth.trusted_key_list = $2; }\n\t|\tT_NtpSignDsocket T_String\n\t\t\t{ cfgt.auth.ntp_signd_socket = $2; }\n\t;\n\ncrypto_command_line\n\t:\tcrypto_command_list\n\t|\t/* Null list */\n\t\t\t{ $$ = create_queue(); }\n\t;\n\ncrypto_command_list\n\t:\tcrypto_command_list crypto_command\n\t\t{ \n\t\t\tif ($2 != NULL)\n\t\t\t\t$$ = enqueue($1, $2);\n\t\t\telse\n\t\t\t\t$$ = $1;\n\t\t}\n\t|\tcrypto_command\n\t\t{\n\t\t\tif ($1 != NULL)\n\t\t\t\t$$ = enqueue_in_new_queue($1);\n\t\t\telse\n\t\t\t\t$$ = create_queue();\n\t\t}\n\t;\n\ncrypto_command\n\t:\tT_Host\tT_String\n\t\t\t{ $$ = create_attr_sval($1, $2); }\n\t|\tT_Ident\tT_String\n\t\t\t{ $$ = create_attr_sval($1, $2); }\n\t|\tT_Pw T_String\n\t\t\t{ $$ = create_attr_sval($1, $2); }\n\t|\tT_Randfile T_String\n\t\t\t{ $$ = create_attr_sval($1, $2); }\n\t|\tT_Sign\tT_String\n\t\t\t{ $$ = create_attr_sval($1, $2); }\n\t|\tT_Digest T_String\n\t\t\t{ $$ = create_attr_sval($1, $2); }\n\t|\tT_Revoke T_Integer\n\t\t{\n\t\t\t$$ = NULL;\n\t\t\tcfgt.auth.revoke = $2;\n\t\t\tmsyslog(LOG_WARNING,\n\t\t\t\t\"'crypto revoke %d' is deprecated, \"\n\t\t\t\t\"please use 'revoke %d' instead.\",\n\t\t\t\tcfgt.auth.revoke, cfgt.auth.revoke);\n\t\t}\n\t;\n\n\n/* Orphan Mode Commands\n * --------------------\n */\n\norphan_mode_command\n\t:\tT_Tos tos_option_list\n\t\t\t{ append_queue(cfgt.orphan_cmds,$2); }\n\t;\n\ntos_option_list\n\t:\ttos_option_list tos_option { $$ = enqueue($1, $2); }\n\t|\ttos_option { $$ = enqueue_in_new_queue($1); }\n\t;\n\ntos_option\n\t:\tT_Ceiling T_Integer\n\t\t\t{ $$ = create_attr_dval($1, (double)$2); }\n\t|\tT_Floor T_Integer\n\t\t\t{ $$ = create_attr_dval($1, (double)$2); }\n\t|\tT_Cohort boolean\n\t\t\t{ $$ = create_attr_dval($1, (double)$2); }\n\t|\tT_Orphan T_Integer\n\t\t\t{ $$ = create_attr_dval($1, (double)$2); }\n\t|\tT_Orphanwait T_Integer\n\t\t\t{ $$ = create_attr_dval($1, (double)$2); }\n\t|\tT_Mindist number\n\t\t\t{ $$ = create_attr_dval($1, $2); }\n\t|\tT_Maxdist number\n\t\t\t{ $$ = create_attr_dval($1, $2); }\n\t|\tT_Minclock number\n\t\t\t{ $$ = create_attr_dval($1, $2); }\n\t|\tT_Maxclock number\n\t\t\t{ $$ = create_attr_dval($1, $2); }\n\t|\tT_Minsane T_Integer\n\t\t\t{ $$ = create_attr_dval($1, (double)$2); }\n\t|\tT_Beacon T_Integer\n\t\t\t{ $$ = create_attr_dval($1, (double)$2); }\n\t;\n\n\n/* Monitoring Commands\n * -------------------\n */\n\nmonitoring_command\n\t:\tT_Statistics stats_list\n\t\t\t{ append_queue(cfgt.stats_list, $2); }\n\t|\tT_Statsdir T_String\n\t\t{\n\t\t\tif (input_from_file)\n\t\t\t\tcfgt.stats_dir = $2;\n\t\t\telse {\n\t\t\t\tfree($2);\n\t\t\t\tyyerror(\"statsdir remote configuration ignored\");\n\t\t\t}\n\t\t}\n\t|\tT_Filegen stat filegen_option_list\n\t\t{\n\t\t\tenqueue(cfgt.filegen_opts,\n\t\t\t\tcreate_filegen_node($2, $3));\n\t\t}\n\t;\n\nstats_list\n\t:\tstats_list stat { $$ = enqueue($1, create_ival($2)); }\n\t|\tstat { $$ = enqueue_in_new_queue(create_ival($1)); }\n\t;\n\nstat\n\t:\tT_Clockstats\n\t|\tT_Cryptostats\n\t|\tT_Loopstats\n\t|\tT_Peerstats\n\t|\tT_Rawstats\n\t|\tT_Sysstats\n\t|\tT_Timingstats\n\t|\tT_Protostats\n\t;\n\nfilegen_option_list\n\t:\tfilegen_option_list filegen_option\n\t\t{\n\t\t\tif ($2 != NULL)\n\t\t\t\t$$ = enqueue($1, $2);\n\t\t\telse\n\t\t\t\t$$ = $1;\n\t\t}\n\t|\tfilegen_option\n\t\t{\n\t\t\tif ($1 != NULL)\n\t\t\t\t$$ = enqueue_in_new_queue($1);\n\t\t\telse\n\t\t\t\t$$ = create_queue();\n\t\t}\n\t;\n\nfilegen_option\n\t:\tT_File T_String\n\t\t{\n\t\t\tif (input_from_file)\n\t\t\t\t$$ = create_attr_sval($1, $2);\n\t\t\telse {\n\t\t\t\t$$ = NULL;\n\t\t\t\tfree($2);\n\t\t\t\tyyerror(\"filegen file remote configuration ignored\");\n\t\t\t}\n\t\t}\n\t|\tT_Type filegen_type\n\t\t{\n\t\t\tif (input_from_file)\n\t\t\t\t$$ = create_attr_ival($1, $2);\n\t\t\telse {\n\t\t\t\t$$ = NULL;\n\t\t\t\tyyerror(\"filegen type remote configuration ignored\");\n\t\t\t}\n\t\t}\n\t|\tT_Link\n\t\t{\n\t\t\tif (input_from_file)\n\t\t\t\t$$ = create_attr_ival(T_Flag, $1);\n\t\t\telse {\n\t\t\t\t$$ = NULL;\n\t\t\t\tyyerror(\"filegen link remote configuration ignored\");\n\t\t\t}\n\t\t}\n\t|\tT_Nolink\n\t\t{\n\t\t\tif (input_from_file)\n\t\t\t\t$$ = create_attr_ival(T_Flag, $1);\n\t\t\telse {\n\t\t\t\t$$ = NULL;\n\t\t\t\tyyerror(\"filegen nolink remote configuration ignored\");\n\t\t\t}\n\t\t}\n\t|\tT_Enable\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Disable\t{ $$ = create_attr_ival(T_Flag, $1); }\n\t;\n\nfilegen_type\n\t:\tT_None\n\t|\tT_Pid\n\t|\tT_Day\n\t|\tT_Week\n\t|\tT_Month\n\t|\tT_Year\n\t|\tT_Age\n\t;\n\n\n/* Access Control Commands\n * -----------------------\n */\n\naccess_control_command\n\t:\tT_Discard discard_option_list\n\t\t{\n\t\t\tappend_queue(cfgt.discard_opts, $2);\n\t\t}\n\t|\tT_Mru mru_option_list\n\t\t{\n\t\t\tappend_queue(cfgt.mru_opts, $2);\n\t\t}\n\t|\tT_Restrict address ac_flag_list\n\t\t{\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node($2, NULL, $3, ip_file->line_no));\n\t\t}\n\t|\tT_Restrict ip_address T_Mask ip_address ac_flag_list\n\t\t{\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node($2, $4, $5, ip_file->line_no));\n\t\t}\n\t|\tT_Restrict T_Default ac_flag_list\n\t\t{\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node(NULL, NULL, $3, ip_file->line_no));\n\t\t}\n\t|\tT_Restrict T_Ipv4_flag T_Default ac_flag_list\n\t\t{\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node(\n\t\t\t\t\tcreate_address_node(\n\t\t\t\t\t\testrdup(\"0.0.0.0\"), \n\t\t\t\t\t\tAF_INET),\n\t\t\t\t\tcreate_address_node(\n\t\t\t\t\t\testrdup(\"0.0.0.0\"), \n\t\t\t\t\t\tAF_INET),\n\t\t\t\t\t$4, \n\t\t\t\t\tip_file->line_no));\n\t\t}\n\t|\tT_Restrict T_Ipv6_flag T_Default ac_flag_list\n\t\t{\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node(\n\t\t\t\t\tcreate_address_node(\n\t\t\t\t\t\testrdup(\"::\"), \n\t\t\t\t\t\tAF_INET6),\n\t\t\t\t\tcreate_address_node(\n\t\t\t\t\t\testrdup(\"::\"), \n\t\t\t\t\t\tAF_INET6),\n\t\t\t\t\t$4, \n\t\t\t\t\tip_file->line_no));\n\t\t}\n\t|\tT_Restrict T_Source ac_flag_list\n\t\t{\n\t\t\tenqueue(cfgt.restrict_opts,\n\t\t\t\tcreate_restrict_node(\n\t\t\t\t\tNULL, NULL,\n\t\t\t\t\tenqueue($3, create_ival($2)),\n\t\t\t\t\tip_file->line_no));\n\t\t}\n\t;\n\nac_flag_list\n\t:\t/* Null statement */\n\t\t\t{ $$ = create_queue(); }\n\t|\tac_flag_list access_control_flag\n\t\t\t{ $$ = enqueue($1, create_ival($2)); }\n\t;\n\naccess_control_flag\n\t:\tT_Flake\n\t|\tT_Ignore\n\t|\tT_Kod\n\t|\tT_Mssntp\n\t|\tT_Limited\n\t|\tT_Lowpriotrap\n\t|\tT_Nomodify\n\t|\tT_Nopeer\n\t|\tT_Noquery\n\t|\tT_Noserve\n\t|\tT_Notrap\n\t|\tT_Notrust\n\t|\tT_Ntpport\n\t|\tT_Version\n\t;\n\ndiscard_option_list\n\t:\tdiscard_option_list discard_option\n\t\t\t{ $$ = enqueue($1, $2); }\n\t|\tdiscard_option \n\t\t\t{ $$ = enqueue_in_new_queue($1); }\n\t;\n\ndiscard_option\n\t:\tT_Average T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Minimum T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Monitor T_Integer { $$ = create_attr_ival($1, $2); }\n\t;\n\nmru_option_list\n\t:\tmru_option_list mru_option\n\t\t\t{ $$ = enqueue($1, $2); }\n\t|\tmru_option \n\t\t\t{ $$ = enqueue_in_new_queue($1); }\n\t;\n\nmru_option\n\t:\tT_Incalloc  T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Incmem    T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Initalloc T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Initmem   T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Maxage    T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Maxdepth  T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Maxmem    T_Integer { $$ = create_attr_ival($1, $2); }\n\t|\tT_Mindepth  T_Integer { $$ = create_attr_ival($1, $2); }\n\t;\n\n/* Fudge Commands\n * --------------\n */\n\nfudge_command\n\t:\tT_Fudge address fudge_factor_list\n\t\t\t{ enqueue(cfgt.fudge, create_addr_opts_node($2, $3)); }\n\t;\n\nfudge_factor_list\n\t:\tfudge_factor_list fudge_factor\n\t\t\t{ enqueue($1, $2); }\n\t|\tfudge_factor\n\t\t\t{ $$ = enqueue_in_new_queue($1); }\n\t;\n\t\nfudge_factor\n\t:\tT_Time1 number\t\t{ $$ = create_attr_dval($1, $2); }\n\t|\tT_Time2 number\t\t{ $$ = create_attr_dval($1, $2); }\n\t|\tT_Stratum T_Integer\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Refid T_String\t{ $$ = create_attr_sval($1, $2); }\n\t|\tT_Flag1 boolean\t\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Flag2\tboolean\t\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Flag3\tboolean\t\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Flag4 boolean\t\t{ $$ = create_attr_ival($1, $2); }\n\t;\n\n/* Command for System Options\n * --------------------------\n */\n\nsystem_option_command\n\t:\tT_Enable system_option_list\n\t\t\t{ append_queue(cfgt.enable_opts, $2);  }\n\t|\tT_Disable system_option_list\n\t\t\t{ append_queue(cfgt.disable_opts, $2);  }\n\t;\n\nsystem_option_list\n\t:\tsystem_option_list system_option\n\t\t{\n\t\t\tif ($2 != NULL)\n\t\t\t\t$$ = enqueue($1, $2);\n\t\t\telse\n\t\t\t\t$$ = $1;\n\t\t}\n\t|\tsystem_option\n\t\t{\n\t\t\tif ($1 != NULL)\n\t\t\t\t$$ = enqueue_in_new_queue($1);\n\t\t\telse\n\t\t\t\t$$ = create_queue();\n\t\t}\n\t;\n\nsystem_option\n\t:\tT_Auth      { $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Bclient   { $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Calibrate { $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Kernel    { $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Monitor   { $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Ntp       { $$ = create_attr_ival(T_Flag, $1); }\n\t|\tT_Stats     \n\t\t{ \n\t\t\tif (input_from_file)\n\t\t\t\t$$ = create_attr_ival(T_Flag, $1);\n\t\t\telse {\n\t\t\t\t$$ = NULL;\n\t\t\t\tyyerror(\"enable/disable stats remote configuration ignored\");\n\t\t\t}\n\t\t}\n\t;\n\n/* Tinker Commands\n * ---------------\n */\n\ntinker_command\n\t:\tT_Tinker tinker_option_list  { append_queue(cfgt.tinker, $2); }\n\t;\n\ntinker_option_list\n\t:\ttinker_option_list tinker_option  { $$ = enqueue($1, $2); }\n\t|\ttinker_option { $$ = enqueue_in_new_queue($1); }\n\t;\n\ntinker_option\n\t:\tT_Allan number\t    { $$ = create_attr_dval($1, $2); }\n\t|\tT_Dispersion number { $$ = create_attr_dval($1, $2); }\n\t|\tT_Freq number\t    { $$ = create_attr_dval($1, $2); }\n\t|\tT_Huffpuff number   { $$ = create_attr_dval($1, $2); }\n\t|\tT_Panic number\t    { $$ = create_attr_dval($1, $2); }\n\t|\tT_Step number\t    { $$ = create_attr_dval($1, $2); }\n\t|\tT_Stepout number    { $$ = create_attr_dval($1, $2); }\n\t;\n\n\n/* Miscellaneous Commands\n * ----------------------\n */\n\nmiscellaneous_command\n\t:\tinterface_command\n\t|\tT_Includefile T_String command\n\t\t{\n\t\t\tif (curr_include_level >= MAXINCLUDELEVEL) {\n\t\t\t\tfprintf(stderr, \"getconfig: Maximum include file level exceeded.\\n\");\n\t\t\t\tmsyslog(LOG_ERR, \"getconfig: Maximum include file level exceeded.\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfp[curr_include_level + 1] = F_OPEN(FindConfig($2), \"r\");\n\t\t\t\tif (fp[curr_include_level + 1] == NULL) {\n\t\t\t\t\tfprintf(stderr, \"getconfig: Couldn't open <%s>\\n\", FindConfig($2));\n\t\t\t\t\tmsyslog(LOG_ERR, \"getconfig: Couldn't open <%s>\", FindConfig($2));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tip_file = fp[++curr_include_level];\n\t\t\t}\n\t\t}\n\t|\tT_End\n\t\t{\n\t\t\twhile (curr_include_level != -1)\n\t\t\t\tFCLOSE(fp[curr_include_level--]);\n\t\t}\n\n\t|\tT_Broadcastdelay number\n\t\t\t{ enqueue(cfgt.vars, create_attr_dval($1, $2)); }\n\t|\tT_Calldelay T_Integer\n\t\t\t{ enqueue(cfgt.vars, create_attr_ival($1, $2)); }\n\t|\tT_Tick number\n\t\t\t{ enqueue(cfgt.vars, create_attr_dval($1, $2)); }\n\t|\tT_Driftfile drift_parm\n\t\t\t{ /* Null action, possibly all null parms */ }\n\t|\tT_Leapfile T_String\n\t\t\t{ enqueue(cfgt.vars, create_attr_sval($1, $2)); }\n\n\t|\tT_Pidfile T_String\n\t\t\t{ enqueue(cfgt.vars, create_attr_sval($1, $2)); }\n\t|\tT_Logfile T_String\n\t\t{\n\t\t\tif (input_from_file)\n\t\t\t\tenqueue(cfgt.vars,\n\t\t\t\t\tcreate_attr_sval($1, $2));\n\t\t\telse {\n\t\t\t\tfree($2);\n\t\t\t\tyyerror(\"logfile remote configuration ignored\");\n\t\t\t}\n\t\t}\n\n\t|\tT_Logconfig log_config_list\n\t\t\t{ append_queue(cfgt.logconfig, $2); }\n\t|\tT_Phone string_list\n\t\t\t{ append_queue(cfgt.phone, $2); }\n\t|\tT_Saveconfigdir\tT_String\n\t\t{\n\t\t\tif (input_from_file)\n\t\t\t\tenqueue(cfgt.vars,\n\t\t\t\t\tcreate_attr_sval($1, $2));\n\t\t\telse {\n\t\t\t\tfree($2);\n\t\t\t\tyyerror(\"saveconfigdir remote configuration ignored\");\n\t\t\t}\n\t\t}\n\t|\tT_Setvar variable_assign\n\t\t\t{ enqueue(cfgt.setvar, $2); }\n\t|\tT_Trap ip_address\n\t\t\t{ enqueue(cfgt.trap, create_addr_opts_node($2, NULL)); }\n\t|\tT_Trap ip_address trap_option_list\n\t\t\t{ enqueue(cfgt.trap, create_addr_opts_node($2, $3)); }\n\t|\tT_Ttl integer_list\n\t\t\t{ append_queue(cfgt.ttl, $2); }\n\t|\tT_Qos T_String\n\t\t\t{ enqueue(cfgt.qos, create_attr_sval($1, $2)); }\n\t;\n\t\ndrift_parm\n\t:\tT_String\n\t\t\t{ enqueue(cfgt.vars, create_attr_sval(T_Driftfile, $1)); }\n\t|\tT_String T_Double\n\t\t\t{ enqueue(cfgt.vars, create_attr_dval(T_WanderThreshold, $2));\n\t\t\t  enqueue(cfgt.vars, create_attr_sval(T_Driftfile, $1)); }\n\t|\t/* Null driftfile,  indicated by null string \"\\0\" */\n\t\t\t{ enqueue(cfgt.vars, create_attr_sval(T_Driftfile, \"\\0\")); }\n\t;\n\nvariable_assign\n\t:\tT_String '=' T_String T_Default\n\t\t\t{ $$ = create_setvar_node($1, $3, $4); }\n\t|\tT_String '=' T_String\n\t\t\t{ $$ = create_setvar_node($1, $3, 0); }\n\t;\n\ntrap_option_list\n\t:\ttrap_option_list trap_option\n\t\t\t\t{ $$ = enqueue($1, $2); }\n\t|\ttrap_option\t{ $$ = enqueue_in_new_queue($1); }\n\t;\n\ntrap_option\n\t:\tT_Port T_Integer\t{ $$ = create_attr_ival($1, $2); }\n\t|\tT_Interface ip_address\t{ $$ = create_attr_pval($1, $2); }\n\t;\n\nlog_config_list\n\t:\tlog_config_list log_config_command { $$ = enqueue($1, $2); }\n\t|\tlog_config_command  { $$ = enqueue_in_new_queue($1); }\n\t;\n\nlog_config_command\n\t:\tT_String\n\t\t{\n\t\t\tchar\tprefix;\n\t\t\tchar *\ttype;\n\t\t\t\n\t\t\tswitch ($1[0]) {\n\t\t\t\n\t\t\tcase '+':\n\t\t\tcase '-':\n\t\t\tcase '=':\n\t\t\t\tprefix = $1[0];\n\t\t\t\ttype = $1 + 1;\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\tdefault:\n\t\t\t\tprefix = '=';\n\t\t\t\ttype = $1;\n\t\t\t}\t\n\t\t\t\n\t\t\t$$ = create_attr_sval(prefix, estrdup(type));\n\t\t\tYYFREE($1);\n\t\t}\n\t;\n\ninterface_command\n\t:\tinterface_nic nic_rule_action nic_rule_class\n\t\t{\n\t\t\tenqueue(cfgt.nic_rules,\n\t\t\t\tcreate_nic_rule_node($3, NULL, $2));\n\t\t}\n\t|\tinterface_nic nic_rule_action T_String\n\t\t{\n\t\t\tenqueue(cfgt.nic_rules,\n\t\t\t\tcreate_nic_rule_node(0, $3, $2));\n\t\t}\n\t;\n\ninterface_nic\n\t:\tT_Interface\n\t|\tT_Nic\n\t;\n\nnic_rule_class\n\t:\tT_All\n\t|\tT_Ipv4\n\t|\tT_Ipv6\n\t|\tT_Wildcard\n\t;\n\nnic_rule_action\n\t:\tT_Listen\n\t|\tT_Ignore\n\t|\tT_Drop\n\t;\n\n\n\n/* Miscellaneous Rules\n * -------------------\n */\n\ninteger_list\n\t:\tinteger_list T_Integer { $$ = enqueue($1, create_ival($2)); }\n\t|\tT_Integer { $$ = enqueue_in_new_queue(create_ival($1)); }\n\t;\n\ninteger_list_range\n\t:\tinteger_list_range integer_list_range_elt\n\t\t\t{ $$ = enqueue($1, $2); }\n\t|\tinteger_list_range_elt\n\t\t\t{ $$ = enqueue_in_new_queue($1); }\n\t;\n\ninteger_list_range_elt\n\t:\tT_Integer\n\t\t\t{ $$ = create_attr_ival('i', $1); }\n\t|\tinteger_range\t\t/* default of $$ = $1 is good */\n\t;\n\ninteger_range\t\t/* limited to unsigned shorts */\n\t:\t'(' T_Integer T_Ellipsis T_Integer ')'\n\t\t\t{ $$ = create_attr_shorts('-', $2, $4); }\n\t;\n\nstring_list\n\t:\tstring_list T_String { $$ = enqueue($1, create_pval($2)); }\n\t|\tT_String { $$ = enqueue_in_new_queue(create_pval($1)); }\n\t;\n\naddress_list\n\t:\taddress_list address { $$ = enqueue($1, $2); }\n\t|\taddress { $$ = enqueue_in_new_queue($1); }\n\t;\n\nboolean\n\t:\tT_Integer\n\t\t{\n\t\t\tif ($1 != 0 && $1 != 1) {\n\t\t\t\tyyerror(\"Integer value is not boolean (0 or 1). Assuming 1\");\n\t\t\t\t$$ = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\t$$ = $1;\n\t\t}\n\t|\tT_True    { $$ = 1; }\n\t|\tT_False   { $$ = 0; }\n\t;\n\nnumber\n\t:\tT_Integer { $$ = (double)$1; }\n\t|\tT_Double\n\t;\n\n\n/* Simulator Configuration Commands\n * --------------------------------\n */\n\nsimulate_command\n\t:\tsim_conf_start '{' sim_init_statement_list sim_server_list '}'\n\t\t{\n\t\t\tcfgt.sim_details = create_sim_node($3, $4);\n\n\t\t\t/* Reset the old_config_style variable */\n\t\t\told_config_style = 1;\n\t\t}\n\t;\n\n/* The following is a terrible hack to get the configuration file to\n * treat newlines as whitespace characters within the simulation.\n * This is needed because newlines are significant in the rest of the\n * configuration file.\n */\nsim_conf_start\n\t:\tT_Simulate { old_config_style = 0; }\n\t;\n\nsim_init_statement_list\n\t:\tsim_init_statement_list sim_init_statement T_EOC { $$ = enqueue($1, $2); }\n\t|\tsim_init_statement T_EOC\t\t\t { $$ = enqueue_in_new_queue($1); }\n\t;\n\nsim_init_statement\n\t:\tT_Beep_Delay '=' number   { $$ = create_attr_dval($1, $3); }\n\t|\tT_Sim_Duration '=' number { $$ = create_attr_dval($1, $3); }\n\t;\n\nsim_server_list\n\t:\tsim_server_list sim_server { $$ = enqueue($1, $2); }\n\t|\tsim_server\t\t   { $$ = enqueue_in_new_queue($1); }\n\t;\n\nsim_server\n\t:\tsim_server_name '{' sim_server_offset sim_act_list '}'\n\t\t{ $$ = create_sim_server($1, $3, $4); }\n\t;\n\nsim_server_offset\n\t:\tT_Server_Offset '=' number T_EOC { $$ = $3; }\n\t;\n\nsim_server_name\n\t:\tT_Server '=' address { $$ = $3; }\n\t;\n\nsim_act_list\n\t:\tsim_act_list sim_act { $$ = enqueue($1, $2); }\n\t|\tsim_act\t\t     { $$ = enqueue_in_new_queue($1); }\n\t;\n\nsim_act\n\t:\tT_Duration '=' number '{' sim_act_stmt_list '}'\n\t\t\t{ $$ = create_sim_script_info($3, $5); }\n\t;\n\nsim_act_stmt_list\n\t:\tsim_act_stmt_list sim_act_stmt T_EOC { $$ = enqueue($1, $2); }\n\t|\tsim_act_stmt T_EOC\t\t     { $$ = enqueue_in_new_queue($1); }\n\t;\n\nsim_act_stmt\n\t:\tT_Freq_Offset '=' number\n\t\t\t{ $$ = create_attr_dval($1, $3); }\n\t|\tT_Wander '=' number\n\t\t\t{ $$ = create_attr_dval($1, $3); }\n\t|\tT_Jitter '=' number\n\t\t\t{ $$ = create_attr_dval($1, $3); }\n\t|\tT_Prop_Delay '=' number\n\t\t\t{ $$ = create_attr_dval($1, $3); }\n\t|\tT_Proc_Delay '=' number\n\t\t\t{ $$ = create_attr_dval($1, $3); }\n\t;\n\n\n%%\n\nvoid yyerror (char *msg)\n{\n\tint retval;\n\n\tip_file->err_line_no = ip_file->prev_token_line_no;\n\tip_file->err_col_no = ip_file->prev_token_col_no;\n\t\n\tmsyslog(LOG_ERR, \n\t\t\"line %d column %d %s\", \n\t\tip_file->err_line_no,\n\t\tip_file->err_col_no,\n\t\tmsg);\n\tif (!input_from_file) {\n\t\t/* Save the error message in the correct buffer */\n\t\tretval = snprintf(remote_config.err_msg + remote_config.err_pos,\n\t\t\t\t  MAXLINE - remote_config.err_pos,\n\t\t\t\t  \"column %d %s\",\n\t\t\t\t  ip_file->err_col_no, msg);\n\n\t\t/* Increment the value of err_pos */\n\t\tif (retval > 0)\n\t\t\tremote_config.err_pos += retval;\n\n\t\t/* Increment the number of errors */\n\t\t++remote_config.no_errors;\n\t}\n}\n\n\n/*\n * token_name - convert T_ token integers to text\n *\t\texample: token_name(T_Server) returns \"T_Server\"\n */\nconst char *\ntoken_name(\n\tint token\n\t)\n{\n\treturn yytname[YYTRANSLATE(token)];\n}\n\n\n/* Initial Testing function -- ignore\nint main(int argc, char *argv[])\n{\n\tip_file = FOPEN(argv[1], \"r\");\n\tif (!ip_file) {\n\t\tfprintf(stderr, \"ERROR!! Could not open file: %s\\n\", argv[1]);\n\t}\n\tkey_scanner = create_keyword_scanner(keyword_list);\n\tprint_keyword_scanner(key_scanner, 0);\n\tyyparse();\n\treturn 0;\n}\n*/\n\n"], "filenames": ["ChangeLog", "ntpd/ntp_parser.c", "ntpd/ntp_parser.y"], "buggy_code_start_loc": [0, 940, 998], "buggy_code_end_loc": [0, 4040, 1006], "fixing_code_start_loc": [1, 940, 998], "fixing_code_end_loc": [2, 4050, 1016], "type": "CWE-20", "message": "The log_config_command function in ntp_parser.y in ntpd in NTP before 4.2.7p42 allows remote attackers to cause a denial of service (ntpd crash) via crafted logconfig commands.", "other": {"cve": {"id": "CVE-2015-5194", "sourceIdentifier": "secalert@redhat.com", "published": "2017-07-21T14:29:00.757", "lastModified": "2023-02-13T00:51:06.883", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "The log_config_command function in ntp_parser.y in ntpd in NTP before 4.2.7p42 allows remote attackers to cause a denial of service (ntpd crash) via crafted logconfig commands."}, {"lang": "es", "value": "La funci\u00f3n log_config_command en el archivo ntp_parser.y en ntpd en NTP anterior a versi\u00f3n 4.2.7p42, permite a los atacantes remotos causar una denegaci\u00f3n de servicio (bloqueo de ntpd) por medio de comandos logconfig creados."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-20"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:21:*:*:*:*:*:*:*", "matchCriteriaId": "56BDB5A0-0839-4A20-A003-B8CD56F48171"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:22:*:*:*:*:*:*:*", "matchCriteriaId": "253C303A-E577-4488-93E6-68A8DD942C38"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:suse:linux_enterprise_debuginfo:11:sp2:*:*:*:*:*:*", "matchCriteriaId": "D5900A25-FDD7-4900-BF7C-F3ECCB714D2B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:suse:linux_enterprise_debuginfo:11:sp3:*:*:*:*:*:*", "matchCriteriaId": "58D3B6FD-B474-4B09-B644-A8634A629280"}, {"vulnerable": true, "criteria": "cpe:2.3:o:suse:linux_enterprise_server:10:sp4:*:*:ltss:*:*:*", "matchCriteriaId": "35BBD83D-BDC7-4678-BE94-639F59281139"}, {"vulnerable": true, "criteria": "cpe:2.3:o:suse:linux_enterprise_server:11:sp2:*:*:ltss:*:*:*", "matchCriteriaId": "CB6476C7-03F2-4939-AB85-69AA524516D9"}, {"vulnerable": true, "criteria": "cpe:2.3:o:suse:linux_enterprise_server:11:sp3:*:*:ltss:*:*:*", "matchCriteriaId": "B12243B2-D726-404C-ABFF-F1AB51BA1783"}, {"vulnerable": true, "criteria": "cpe:2.3:o:suse:manager:2.1:*:*:*:*:*:*:*", "matchCriteriaId": "2A33B9F5-E0D1-4A3E-9FFB-5602A25F3227"}, {"vulnerable": true, "criteria": "cpe:2.3:o:suse:manager_proxy:2.1:*:*:*:*:*:*:*", "matchCriteriaId": "53F0F5A0-70D9-4305-A834-B6FF71E27B30"}, {"vulnerable": true, "criteria": "cpe:2.3:o:suse:openstack_cloud:5:*:*:*:*:*:*:*", "matchCriteriaId": "88BCD7DC-0FEF-477D-8698-F8D8F1A49D90"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:redhat:enterprise_linux_desktop:6.0:*:*:*:*:*:*:*", "matchCriteriaId": "EE249E1B-A1FD-4E08-AA71-A0E1F10FFE97"}, {"vulnerable": true, "criteria": "cpe:2.3:o:redhat:enterprise_linux_desktop:7.0:*:*:*:*:*:*:*", "matchCriteriaId": "33C068A4-3780-4EAB-A937-6082DF847564"}, {"vulnerable": true, "criteria": "cpe:2.3:o:redhat:enterprise_linux_hpc_node:6.0:*:*:*:*:*:*:*", "matchCriteriaId": "C2FAC325-6EEB-466D-9EBA-8ED4DBC9CFBF"}, {"vulnerable": true, "criteria": "cpe:2.3:o:redhat:enterprise_linux_hpc_node:7.0:*:*:*:*:*:*:*", "matchCriteriaId": "3C84489B-B08C-4854-8A12-D01B6E45CF79"}, {"vulnerable": true, "criteria": "cpe:2.3:o:redhat:enterprise_linux_server:6.0:*:*:*:*:*:*:*", "matchCriteriaId": "9BBCD86A-E6C7-4444-9D74-F861084090F0"}, {"vulnerable": true, "criteria": "cpe:2.3:o:redhat:enterprise_linux_server:7.0:*:*:*:*:*:*:*", "matchCriteriaId": "51EF4996-72F4-4FA4-814F-F5991E7A8318"}, {"vulnerable": true, "criteria": "cpe:2.3:o:redhat:enterprise_linux_workstation:6.0:*:*:*:*:*:*:*", "matchCriteriaId": "E5ED5807-55B7-47C5-97A6-03233F4FBC3A"}, {"vulnerable": true, "criteria": "cpe:2.3:o:redhat:enterprise_linux_workstation:7.0:*:*:*:*:*:*:*", "matchCriteriaId": "825ECE2D-E232-46E0-A047-074B34DB1E97"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:7.0:*:*:*:*:*:*:*", "matchCriteriaId": "16F59A04-14CF-49E2-9973-645477EA09DA"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:8.0:*:*:*:*:*:*:*", "matchCriteriaId": "C11E6FB0-C8C0-4527-9AA0-CB9B316F8F43"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:12.04:*:*:*:lts:*:*:*", "matchCriteriaId": "B6B7CAD7-9D4E-4FDB-88E3-1E583210A01F"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:14.04:*:*:*:lts:*:*:*", "matchCriteriaId": "B5A6F2F3-4894-4392-8296-3B8DD2679084"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:15.04:*:*:*:*:*:*:*", "matchCriteriaId": "F38D3B7E-8429-473F-BB31-FC3583EE5A5B"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:15.10:*:*:*:*:*:*:*", "matchCriteriaId": "E88A537F-F4D0-46B9-9E37-965233C2A355"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:ntp:ntp:*:p40:*:*:*:*:*:*", "versionEndIncluding": "4.2.7", "matchCriteriaId": "C38BE66F-08C3-4351-BFFF-0A79EE89612E"}]}]}], "references": [{"url": "http://bk1.ntp.org/ntp-dev/?PAGE=patch&REV=4c4fc141LwvcoGp-lLGhkAFp3ZvtrA", "source": "secalert@redhat.com", "tags": ["Issue Tracking", "Patch", "Vendor Advisory"]}, {"url": "http://lists.fedoraproject.org/pipermail/package-announce/2015-November/170926.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://lists.fedoraproject.org/pipermail/package-announce/2015-October/169167.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://lists.opensuse.org/opensuse-security-announce/2016-05/msg00048.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://lists.opensuse.org/opensuse-security-announce/2016-07/msg00026.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://lists.opensuse.org/opensuse-security-announce/2016-08/msg00042.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://rhn.redhat.com/errata/RHSA-2016-0780.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://rhn.redhat.com/errata/RHSA-2016-2583.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://www.debian.org/security/2015/dsa-3388", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2015/08/25/3", "source": "secalert@redhat.com", "tags": ["Mailing List", "Patch", "Third Party Advisory"]}, {"url": "http://www.oracle.com/technetwork/topics/security/linuxbulletinapr2016-2952096.html", "source": "secalert@redhat.com"}, {"url": "http://www.securityfocus.com/bid/76475", "source": "secalert@redhat.com", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "http://www.ubuntu.com/usn/USN-2783-1", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1254542", "source": "secalert@redhat.com", "tags": ["Issue Tracking", "Patch"]}, {"url": "https://github.com/ntp-project/ntp/commit/553f2fa65865c31c5e3c48812cfd46176cffdd27", "source": "secalert@redhat.com", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://www-01.ibm.com/support/docview.wss?uid=isg3T1024157", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://www-01.ibm.com/support/docview.wss?uid=swg21985122", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://www-01.ibm.com/support/docview.wss?uid=swg21986956", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://www-01.ibm.com/support/docview.wss?uid=swg21988706", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://www-01.ibm.com/support/docview.wss?uid=swg21989542", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/ntp-project/ntp/commit/553f2fa65865c31c5e3c48812cfd46176cffdd27"}}