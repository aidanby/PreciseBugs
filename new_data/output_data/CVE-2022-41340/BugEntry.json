{"buggy_code": ["{\n  \"name\": \"@enumatech/secp256k1-js\",\n  \"version\": \"1.0.0\",\n  \"lockfileVersion\": 1,\n  \"requires\": true,\n  \"dependencies\": {\n    \"@ungap/promise-all-settled\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@ungap/promise-all-settled/-/promise-all-settled-1.1.2.tgz\",\n      \"integrity\": \"sha512-sL/cEvJWAnClXw0wHk85/2L0G6Sj8UB0Ctc1TEMbKSsmpRosqhwj9gWgFRZSrBr2f9tiXISwNhCPmlfqUqyb9Q==\",\n      \"dev\": true\n    },\n    \"ansi-colors\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-colors/-/ansi-colors-4.1.1.tgz\",\n      \"integrity\": \"sha512-JoX0apGbHaUJBNl6yF+p6JAFYZ666/hhCGKN5t9QFjbJQKUU/g8MNbFDbvfrgKXvI1QpZplPOnwIo99lX/AAmA==\",\n      \"dev\": true\n    },\n    \"ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"dev\": true\n    },\n    \"ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-convert\": \"^2.0.1\"\n      }\n    },\n    \"anymatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      }\n    },\n    \"argparse\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\",\n      \"dev\": true\n    },\n    \"assertion-error\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/assertion-error/-/assertion-error-1.1.0.tgz\",\n      \"integrity\": \"sha512-jgsaNduz+ndvGyFt3uSuWqvy4lCnIJiovtouQN5JZHOKCS2QuhEdbcQHFhVksz2N2U9hXJo8odG7ETyWlEeuDw==\",\n      \"dev\": true\n    },\n    \"balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true\n    },\n    \"binary-extensions\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz\",\n      \"integrity\": \"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\",\n      \"dev\": true\n    },\n    \"bindings\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/bindings/-/bindings-1.3.0.tgz\",\n      \"integrity\": \"sha512-DpLh5EzMR2kzvX1KIlVC0VkC3iZtHKTgdtZ0a3pglBZdaQFjt5S9g9xd1lE+YvXyfd6mtCeRnrUfOLYiTMlNSw==\",\n      \"dev\": true\n    },\n    \"bip66\": {\n      \"version\": \"1.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/bip66/-/bip66-1.1.5.tgz\",\n      \"integrity\": \"sha1-AfqHSHhcpwlV1QESF9GzE5lpyiI=\",\n      \"dev\": true,\n      \"requires\": {\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"bn.js\": {\n      \"version\": \"4.11.8\",\n      \"resolved\": \"https://registry.npmjs.org/bn.js/-/bn.js-4.11.8.tgz\",\n      \"integrity\": \"sha512-ItfYfPLkWHUjckQCk8xC+LwxgK8NYcXywGigJgSwOP8Y2iyWT4f2vsZnoOXTTbo+o5yXmIUJ4gn5538SO5S3gA==\"\n    },\n    \"brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"braces\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.2.tgz\",\n      \"integrity\": \"sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"fill-range\": \"^7.0.1\"\n      }\n    },\n    \"brorand\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/brorand/-/brorand-1.1.0.tgz\",\n      \"integrity\": \"sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8=\",\n      \"dev\": true\n    },\n    \"browser-stdout\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/browser-stdout/-/browser-stdout-1.3.1.tgz\",\n      \"integrity\": \"sha512-qhAVI1+Av2X7qelOfAIYwXONood6XlZE/fXaBSmW/T5SzLAmCgzi+eiWE7fUvbHaeNBQH13UftjpXxsfLkMpgw==\",\n      \"dev\": true\n    },\n    \"browserify-aes\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/browserify-aes/-/browserify-aes-1.2.0.tgz\",\n      \"integrity\": \"sha512-+7CHXqGuspUn/Sl5aO7Ea0xWGAtETPXNSAjHo48JfLdPWcMng33Xe4znFvQweqc/uzk5zSOI3H52CYnjCfb5hA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"buffer-xor\": \"^1.0.3\",\n        \"cipher-base\": \"^1.0.0\",\n        \"create-hash\": \"^1.1.0\",\n        \"evp_bytestokey\": \"^1.0.3\",\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"buffer-xor\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-xor/-/buffer-xor-1.0.3.tgz\",\n      \"integrity\": \"sha1-JuYe0UIvtw3ULm42cp7VHYVf6Nk=\",\n      \"dev\": true\n    },\n    \"camelcase\": {\n      \"version\": \"6.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-6.3.0.tgz\",\n      \"integrity\": \"sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==\",\n      \"dev\": true\n    },\n    \"chai\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chai/-/chai-4.1.2.tgz\",\n      \"integrity\": \"sha1-D2RYS6ZC8PKs4oBiefTwbKI61zw=\",\n      \"dev\": true,\n      \"requires\": {\n        \"assertion-error\": \"^1.0.1\",\n        \"check-error\": \"^1.0.1\",\n        \"deep-eql\": \"^3.0.0\",\n        \"get-func-name\": \"^2.0.0\",\n        \"pathval\": \"^1.0.0\",\n        \"type-detect\": \"^4.0.0\"\n      }\n    },\n    \"chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"dependencies\": {\n        \"supports-color\": {\n          \"version\": \"7.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n          \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n          \"dev\": true,\n          \"requires\": {\n            \"has-flag\": \"^4.0.0\"\n          }\n        }\n      }\n    },\n    \"check-error\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/check-error/-/check-error-1.0.2.tgz\",\n      \"integrity\": \"sha1-V00xLt2Iu13YkS6Sht1sCu1KrII=\",\n      \"dev\": true\n    },\n    \"chokidar\": {\n      \"version\": \"3.5.3\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz\",\n      \"integrity\": \"sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"fsevents\": \"~2.3.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      }\n    },\n    \"cipher-base\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz\",\n      \"integrity\": \"sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"cliui\": {\n      \"version\": \"7.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz\",\n      \"integrity\": \"sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"wrap-ansi\": \"^7.0.0\"\n      }\n    },\n    \"color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-name\": \"~1.1.4\"\n      }\n    },\n    \"color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n      \"dev\": true\n    },\n    \"create-hash\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz\",\n      \"integrity\": \"sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"cipher-base\": \"^1.0.1\",\n        \"inherits\": \"^2.0.1\",\n        \"md5.js\": \"^1.3.4\",\n        \"ripemd160\": \"^2.0.1\",\n        \"sha.js\": \"^2.4.0\"\n      }\n    },\n    \"create-hmac\": {\n      \"version\": \"1.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz\",\n      \"integrity\": \"sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"cipher-base\": \"^1.0.3\",\n        \"create-hash\": \"^1.1.0\",\n        \"inherits\": \"^2.0.1\",\n        \"ripemd160\": \"^2.0.0\",\n        \"safe-buffer\": \"^5.0.1\",\n        \"sha.js\": \"^2.4.8\"\n      }\n    },\n    \"debug\": {\n      \"version\": \"4.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\n      \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"dependencies\": {\n        \"ms\": {\n          \"version\": \"2.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n          \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"decamelize\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-4.0.0.tgz\",\n      \"integrity\": \"sha512-9iE1PgSik9HeIIw2JO94IidnE3eBoQrFJ3w7sFuzSX4DpmZ3v5sZpUiV5Swcf6mQEF+Y0ru8Neo+p+nyh2J+hQ==\",\n      \"dev\": true\n    },\n    \"deep-eql\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/deep-eql/-/deep-eql-3.0.1.tgz\",\n      \"integrity\": \"sha512-+QeIQyN5ZuO+3Uk5DYh6/1eKO0m0YmJFGNmFHGACpf1ClL1nmlV/p4gNgbl2pJGxgXb4faqo6UE+M5ACEMyVcw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"type-detect\": \"^4.0.0\"\n      }\n    },\n    \"diff\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/diff/-/diff-5.0.0.tgz\",\n      \"integrity\": \"sha512-/VTCrvm5Z0JGty/BWHljh+BAiw3IK+2j87NGMu8Nwc/f48WoDAC395uomO9ZD117ZOBaHmkX1oyLvkVM/aIT3w==\",\n      \"dev\": true\n    },\n    \"drbg.js\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/drbg.js/-/drbg.js-1.0.1.tgz\",\n      \"integrity\": \"sha1-Pja2xCs3BDgjzbwzLVjzHiRFSAs=\",\n      \"dev\": true,\n      \"requires\": {\n        \"browserify-aes\": \"^1.0.6\",\n        \"create-hash\": \"^1.1.2\",\n        \"create-hmac\": \"^1.1.4\"\n      }\n    },\n    \"elliptic\": {\n      \"version\": \"6.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.5.4.tgz\",\n      \"integrity\": \"sha512-iLhC6ULemrljPZb+QutR5TQGB+pdW6KGD5RSegS+8sorOZT+rdQFbsQFJgvN3eRqNALqJer4oQ16YvJHlU8hzQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"bn.js\": \"^4.11.9\",\n        \"brorand\": \"^1.1.0\",\n        \"hash.js\": \"^1.0.0\",\n        \"hmac-drbg\": \"^1.0.1\",\n        \"inherits\": \"^2.0.4\",\n        \"minimalistic-assert\": \"^1.0.1\",\n        \"minimalistic-crypto-utils\": \"^1.0.1\"\n      },\n      \"dependencies\": {\n        \"bn.js\": {\n          \"version\": \"4.12.0\",\n          \"resolved\": \"https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz\",\n          \"integrity\": \"sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==\",\n          \"dev\": true\n        },\n        \"inherits\": {\n          \"version\": \"2.0.4\",\n          \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n          \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"escalade\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz\",\n      \"integrity\": \"sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==\",\n      \"dev\": true\n    },\n    \"escape-string-regexp\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n      \"dev\": true\n    },\n    \"evp_bytestokey\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/evp_bytestokey/-/evp_bytestokey-1.0.3.tgz\",\n      \"integrity\": \"sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"md5.js\": \"^1.3.4\",\n        \"safe-buffer\": \"^5.1.1\"\n      }\n    },\n    \"fill-range\": {\n      \"version\": \"7.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz\",\n      \"integrity\": \"sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"to-regex-range\": \"^5.0.1\"\n      }\n    },\n    \"find-up\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz\",\n      \"integrity\": \"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\",\n      \"dev\": true,\n      \"requires\": {\n        \"locate-path\": \"^6.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      }\n    },\n    \"flat\": {\n      \"version\": \"5.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/flat/-/flat-5.0.2.tgz\",\n      \"integrity\": \"sha512-b6suED+5/3rTpUBdG1gupIl8MPFCAMA0QXwmljLhvCUKcUvdE4gWky9zpuGCcXHOsz4J9wPGNWq6OKpmIzz3hQ==\",\n      \"dev\": true\n    },\n    \"fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n      \"dev\": true\n    },\n    \"fsevents\": {\n      \"version\": \"2.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz\",\n      \"integrity\": \"sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"dev\": true\n    },\n    \"get-func-name\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-func-name/-/get-func-name-2.0.0.tgz\",\n      \"integrity\": \"sha1-6td0q+5y4gQJQzoGY2YCPdaIekE=\",\n      \"dev\": true\n    },\n    \"glob\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.0.tgz\",\n      \"integrity\": \"sha512-lmLf6gtyrPq8tTjSmrO94wBeQbFR3HbLHbuyD69wuyQkImp2hWqMGB47OX65FBkPffO641IP9jWa1z4ivqG26Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.0.4\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"dependencies\": {\n        \"minimatch\": {\n          \"version\": \"3.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n          \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n          \"dev\": true,\n          \"requires\": {\n            \"brace-expansion\": \"^1.1.7\"\n          }\n        }\n      }\n    },\n    \"glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-glob\": \"^4.0.1\"\n      }\n    },\n    \"has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true\n    },\n    \"hash-base\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/hash-base/-/hash-base-3.0.4.tgz\",\n      \"integrity\": \"sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"hash.js\": {\n      \"version\": \"1.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/hash.js/-/hash.js-1.1.5.tgz\",\n      \"integrity\": \"sha512-eWI5HG9Np+eHV1KQhisXWwM+4EPPYe5dFX1UZZH7k/E3JzDEazVH+VGlZi6R94ZqImq+A3D1mCEtrFIfg/E7sA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"^2.0.3\",\n        \"minimalistic-assert\": \"^1.0.1\"\n      }\n    },\n    \"he\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/he/-/he-1.2.0.tgz\",\n      \"integrity\": \"sha512-F/1DnUGPopORZi0ni+CvrCgHQ5FyEAHRLSApuYWMmrbSwoN2Mn/7k+Gl38gJnR7yyDZk6WLXwiGod1JOWNDKGw==\",\n      \"dev\": true\n    },\n    \"hmac-drbg\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/hmac-drbg/-/hmac-drbg-1.0.1.tgz\",\n      \"integrity\": \"sha1-0nRXAQJabHdabFRXk+1QL8DGSaE=\",\n      \"dev\": true,\n      \"requires\": {\n        \"hash.js\": \"^1.0.3\",\n        \"minimalistic-assert\": \"^1.0.0\",\n        \"minimalistic-crypto-utils\": \"^1.0.1\"\n      }\n    },\n    \"inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"inherits\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz\",\n      \"integrity\": \"sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\",\n      \"dev\": true\n    },\n    \"is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"binary-extensions\": \"^2.0.0\"\n      }\n    },\n    \"is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"dev\": true\n    },\n    \"is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"dev\": true\n    },\n    \"is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-extglob\": \"^2.1.1\"\n      }\n    },\n    \"is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true\n    },\n    \"is-plain-obj\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-2.1.0.tgz\",\n      \"integrity\": \"sha512-YWnfyRwxL/+SsrWYfOpUtz5b3YD+nyfkHvjbcanzk8zgyO4ASD67uVMRt8k5bM4lLMDnXfriRhOpemw+NfT1eA==\",\n      \"dev\": true\n    },\n    \"is-unicode-supported\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-0.1.0.tgz\",\n      \"integrity\": \"sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==\",\n      \"dev\": true\n    },\n    \"js-yaml\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n      \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"argparse\": \"^2.0.1\"\n      }\n    },\n    \"locate-path\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz\",\n      \"integrity\": \"sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"p-locate\": \"^5.0.0\"\n      }\n    },\n    \"log-symbols\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/log-symbols/-/log-symbols-4.1.0.tgz\",\n      \"integrity\": \"sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"chalk\": \"^4.1.0\",\n        \"is-unicode-supported\": \"^0.1.0\"\n      }\n    },\n    \"md5.js\": {\n      \"version\": \"1.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/md5.js/-/md5.js-1.3.4.tgz\",\n      \"integrity\": \"sha1-6b296UogpawYsENA/Fdk1bCdkB0=\",\n      \"dev\": true,\n      \"requires\": {\n        \"hash-base\": \"^3.0.0\",\n        \"inherits\": \"^2.0.1\"\n      }\n    },\n    \"minimalistic-assert\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz\",\n      \"integrity\": \"sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==\",\n      \"dev\": true\n    },\n    \"minimalistic-crypto-utils\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/minimalistic-crypto-utils/-/minimalistic-crypto-utils-1.0.1.tgz\",\n      \"integrity\": \"sha1-9sAMHAsIIkblxNmd+4x8CDsrWCo=\",\n      \"dev\": true\n    },\n    \"minimatch\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-5.0.1.tgz\",\n      \"integrity\": \"sha512-nLDxIFRyhDblz3qMuq+SoRZED4+miJ/G+tdDrjkkkRnjAsBexeGpgjLEQ0blJy7rHhR2b93rhQY4SvyWu9v03g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"dependencies\": {\n        \"brace-expansion\": {\n          \"version\": \"2.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n          \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"balanced-match\": \"^1.0.0\"\n          }\n        }\n      }\n    },\n    \"mocha\": {\n      \"version\": \"10.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/mocha/-/mocha-10.0.0.tgz\",\n      \"integrity\": \"sha512-0Wl+elVUD43Y0BqPZBzZt8Tnkw9CMUdNYnUsTfOM1vuhJVZL+kiesFYsqwBkEEuEixaiPe5ZQdqDgX2jddhmoA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@ungap/promise-all-settled\": \"1.1.2\",\n        \"ansi-colors\": \"4.1.1\",\n        \"browser-stdout\": \"1.3.1\",\n        \"chokidar\": \"3.5.3\",\n        \"debug\": \"4.3.4\",\n        \"diff\": \"5.0.0\",\n        \"escape-string-regexp\": \"4.0.0\",\n        \"find-up\": \"5.0.0\",\n        \"glob\": \"7.2.0\",\n        \"he\": \"1.2.0\",\n        \"js-yaml\": \"4.1.0\",\n        \"log-symbols\": \"4.1.0\",\n        \"minimatch\": \"5.0.1\",\n        \"ms\": \"2.1.3\",\n        \"nanoid\": \"3.3.3\",\n        \"serialize-javascript\": \"6.0.0\",\n        \"strip-json-comments\": \"3.1.1\",\n        \"supports-color\": \"8.1.1\",\n        \"workerpool\": \"6.2.1\",\n        \"yargs\": \"16.2.0\",\n        \"yargs-parser\": \"20.2.4\",\n        \"yargs-unparser\": \"2.0.0\"\n      }\n    },\n    \"ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"dev\": true\n    },\n    \"nan\": {\n      \"version\": \"2.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/nan/-/nan-2.10.0.tgz\",\n      \"integrity\": \"sha512-bAdJv7fBLhWC+/Bls0Oza+mvTaNQtP+1RyhhhvD95pgUJz6XM5IzgmxOkItJ9tkoCiplvAnXI1tNmmUD/eScyA==\",\n      \"dev\": true\n    },\n    \"nanoid\": {\n      \"version\": \"3.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/nanoid/-/nanoid-3.3.3.tgz\",\n      \"integrity\": \"sha512-p1sjXuopFs0xg+fPASzQ28agW1oHD7xDsd9Xkf3T15H3c/cifrFHVwrh74PdoklAPi+i7MdRsE47vm2r6JoB+w==\",\n      \"dev\": true\n    },\n    \"normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"dev\": true\n    },\n    \"once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"p-limit\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n      \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"yocto-queue\": \"^0.1.0\"\n      }\n    },\n    \"p-locate\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz\",\n      \"integrity\": \"sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"p-limit\": \"^3.0.2\"\n      }\n    },\n    \"path-exists\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n      \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n      \"dev\": true\n    },\n    \"path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n      \"integrity\": \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\",\n      \"dev\": true\n    },\n    \"pathval\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/pathval/-/pathval-1.1.1.tgz\",\n      \"integrity\": \"sha512-Dp6zGqpTdETdR63lehJYPeIOqpiNBNtc7BpWSLrOje7UaIsE5aY92r/AunQA7rsXvet3lrJ3JnZX29UPTKXyKQ==\",\n      \"dev\": true\n    },\n    \"picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true\n    },\n    \"randombytes\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz\",\n      \"integrity\": \"sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"safe-buffer\": \"^5.1.0\"\n      }\n    },\n    \"readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"picomatch\": \"^2.2.1\"\n      }\n    },\n    \"require-directory\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n      \"integrity\": \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\",\n      \"dev\": true\n    },\n    \"ripemd160\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.2.tgz\",\n      \"integrity\": \"sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"hash-base\": \"^3.0.0\",\n        \"inherits\": \"^2.0.1\"\n      }\n    },\n    \"safe-buffer\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\n      \"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\",\n      \"dev\": true\n    },\n    \"secp256k1\": {\n      \"version\": \"3.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/secp256k1/-/secp256k1-3.5.0.tgz\",\n      \"integrity\": \"sha512-e5QIJl8W7Y4tT6LHffVcZAxJjvpgE5Owawv6/XCYPQljE9aP2NFFddQ8OYMKhdLshNu88FfL3qCN3/xYkXGRsA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"bindings\": \"^1.2.1\",\n        \"bip66\": \"^1.1.3\",\n        \"bn.js\": \"^4.11.3\",\n        \"create-hash\": \"^1.1.2\",\n        \"drbg.js\": \"^1.0.1\",\n        \"elliptic\": \"^6.2.3\",\n        \"nan\": \"^2.2.1\",\n        \"safe-buffer\": \"^5.1.0\"\n      }\n    },\n    \"serialize-javascript\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-6.0.0.tgz\",\n      \"integrity\": \"sha512-Qr3TosvguFt8ePWqsvRfrKyQXIiW+nGbYpy8XK24NQHE83caxWt+mIymTT19DGFbNWNLfEwsrkSmN64lVWB9ag==\",\n      \"dev\": true,\n      \"requires\": {\n        \"randombytes\": \"^2.1.0\"\n      }\n    },\n    \"sha.js\": {\n      \"version\": \"2.4.11\",\n      \"resolved\": \"https://registry.npmjs.org/sha.js/-/sha.js-2.4.11.tgz\",\n      \"integrity\": \"sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      }\n    },\n    \"strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-regex\": \"^5.0.1\"\n      }\n    },\n    \"strip-json-comments\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n      \"integrity\": \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\",\n      \"dev\": true\n    },\n    \"supports-color\": {\n      \"version\": \"8.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz\",\n      \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"has-flag\": \"^4.0.0\"\n      }\n    },\n    \"to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-number\": \"^7.0.0\"\n      }\n    },\n    \"type-detect\": {\n      \"version\": \"4.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/type-detect/-/type-detect-4.0.8.tgz\",\n      \"integrity\": \"sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==\",\n      \"dev\": true\n    },\n    \"workerpool\": {\n      \"version\": \"6.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/workerpool/-/workerpool-6.2.1.tgz\",\n      \"integrity\": \"sha512-ILEIE97kDZvF9Wb9f6h5aXK4swSlKGUcOEGiIYb2OOu/IrDU9iwj0fD//SsA6E5ibwJxpEvhullJY4Sl4GcpAw==\",\n      \"dev\": true\n    },\n    \"wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      }\n    },\n    \"wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n      \"dev\": true\n    },\n    \"y18n\": {\n      \"version\": \"5.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz\",\n      \"integrity\": \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\",\n      \"dev\": true\n    },\n    \"yargs\": {\n      \"version\": \"16.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz\",\n      \"integrity\": \"sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"cliui\": \"^7.0.2\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.0\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^20.2.2\"\n      }\n    },\n    \"yargs-parser\": {\n      \"version\": \"20.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.4.tgz\",\n      \"integrity\": \"sha512-WOkpgNhPTlE73h4VFAFsOnomJVaovO8VqLDzy5saChRBFQFBoMYirowyW+Q9HB4HFF4Z7VZTiG3iSzJJA29yRA==\",\n      \"dev\": true\n    },\n    \"yargs-unparser\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-unparser/-/yargs-unparser-2.0.0.tgz\",\n      \"integrity\": \"sha512-7pRTIA9Qc1caZ0bZ6RYRGbHJthJWuakf+WmHK0rVeLkNrrGhfoabBNdue6kdINI6r4if7ocq9aD/n7xwKOdzOA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"camelcase\": \"^6.0.0\",\n        \"decamelize\": \"^4.0.0\",\n        \"flat\": \"^5.0.2\",\n        \"is-plain-obj\": \"^2.1.0\"\n      }\n    },\n    \"yocto-queue\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz\",\n      \"integrity\": \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\",\n      \"dev\": true\n    }\n  }\n}\n", "{\n  \"name\": \"@enumatech/secp256k1-js\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Pure JS implementation of secp256k1 signing, verification, recovery ECDSA.\",\n  \"engines\": {\n    \"node\": \">=14.0.0\"\n  },\n  \"main\": \"src/secp256k1.js\",\n  \"scripts\": {\n    \"test\": \"mocha test\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/enumatech/secp256k1-js.git\"\n  },\n  \"keywords\": [],\n  \"author\": \"Lionello Lunesu\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/enumatech/secp256k1-js/issues\"\n  },\n  \"homepage\": \"https://github.com/enumatech/secp256k1-js#readme\",\n  \"devDependencies\": {\n    \"chai\": \"^4.1.2\",\n    \"mocha\": \"^10.0.0\",\n    \"secp256k1\": \"^3.5.0\"\n  },\n  \"dependencies\": {\n    \"bn.js\": \"^4.11.8\"\n  }\n}\n", "(function () {\n    if (typeof module !== 'undefined') {\n        BN = module.require('bn.js')\n        randomBytes = module.require('crypto').randomBytes\n    } else {\n        // bn.js must have been included by the main html file\n        randomBytes = length => window.crypto.getRandomValues(new Uint8Array(length))\n        window.Secp256k1 = exports = {}\n    }\n\n    function uint256(x, base) {\n        return new BN(x, base)\n    }\n\n    function rnd(P) {\n        return uint256(randomBytes(32)).umod(P)//TODO red\n    }\n\n    const A  = uint256(0)\n    const B  = uint256(7)\n    const GX = uint256(\"79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798\", 16)\n    const GY = uint256(\"483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8\", 16)\n    const P  = uint256(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F\", 16)\n    const N  = uint256(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\", 16)\n    //const RED = BN.red(P)\n    const _0 = uint256(0)\n    const _1 = uint256(1)\n\n    // function for elliptic curve multiplication in jacobian coordinates using Double-and-add method\n    function ecmul(_p, _d) {\n        let R = [_0,_0,_0]\n\n        //return (0,0) if d=0 or (x1,y1)=(0,0)\n        if (_d == 0 || ((_p[0] == 0) && (_p[1] == 0)) ) {\n            return R\n        }\n        let T = [\n            _p[0], //x-coordinate temp\n            _p[1], //y-coordinate temp\n            _p[2], //z-coordinate temp\n        ]\n\n        const d = _d.clone()\n        while (d != 0) {\n            if (d.testn(0)) {  //if last bit is 1 add T to result\n                R = ecadd(T,R)\n            }\n            T = ecdouble(T);    //double temporary coordinates\n            d.iushrn(1);      //\"cut off\" last bit\n        }\n\n        return R\n    }\n\n    function mulmod(a, b, P) {\n        return a.mul(b).umod(P)//TODO red\n    }\n\n    function addmod(a, b, P) {\n        return a.add(b).umod(P)//TODO red\n    }\n\n    function invmod(a, P) {\n        return a.invm(P)//TODO redq\n    }\n\n    function mulG(k) {\n        const GinJ = AtoJ(GX, GY)\n        const PUBinJ = ecmul(GinJ, k)\n        return JtoA(PUBinJ)\n    }\n\n    function ecsign(d, z) {\n        while (true) {\n            const k = rnd(P)\n            const R = mulG(k)\n            if (R[0] == 0) continue\n            const s = mulmod(invmod(k, N), addmod(z, mulmod(R[0], d, N), N), N)\n            if (s == 0) continue\n            //FIXME: why do I need this\n            if (s.testn(255)) continue\n            return {r: toHex(R[0]), s: toHex(s), v: R[1].testn(0) ? 1 : 0}\n        }\n    }\n\n    function JtoA(p) {\n        const zInv = invmod(p[2], P)\n        const zInv2 = mulmod(zInv, zInv, P)\n        return [mulmod(p[0], zInv2, P), mulmod(p[1], mulmod(zInv, zInv2, P), P)]\n    }\n\n    //point doubling for elliptic curve in jacobian coordinates\n    //formula from https://en.wikibooks.org/wiki/Cryptography/Prime_Curve/Jacobian_Coordinates\n    function ecdouble(_p) {\n        if (_p[1] == 0) {\n            //return point at infinity\n            return [_1, _1, _0]\n        }\n\n        const z2 = mulmod(_p[2], _p[2], P)\n        const m = addmod(mulmod(A, mulmod(z2, z2, P), P), mulmod(uint256(3), mulmod(_p[0], _p[0], P), P), P)\n        const y2 = mulmod(_p[1], _p[1], P)\n        const s = mulmod(uint256(4), mulmod(_p[0], y2, P), P)\n\n        const x = addmod(mulmod(m, m, P), negmod(mulmod(s, uint256(2), P), P), P)\n        return [\n            x,\n            addmod(mulmod(m, addmod(s, negmod(x, P), P), P), negmod(mulmod(uint256(8), mulmod(y2, y2, P), P), P), P),\n            mulmod(uint256(2), mulmod(_p[1], _p[2], P), P)\n        ]\n    }\n\n    function negmod(a, P) {\n        return P.sub(a)\n    }\n\n    // point addition for elliptic curve in jacobian coordinates\n    // formula from https://en.wikibooks.org/wiki/Cryptography/Prime_Curve/Jacobian_Coordinates\n    function ecadd(_p, _q) {\n        if (_q[0] == 0 && _q[1] == 0 && _q[2] == 0) {\n            return _p\n        }\n\n        let z2 = mulmod(_q[2], _q[2], P)\n        const u1 = mulmod(_p[0], z2, P)\n        const s1 = mulmod(_p[1], mulmod(z2, _q[2], P), P)\n        z2 = mulmod(_p[2], _p[2], P)\n        let u2 = mulmod(_q[0], z2, P)\n        let s2 = mulmod(_q[1], mulmod(z2, _p[2], P), P)\n\n        if (u1.eq(u2)) {\n            if (!s1.eq(s2)) {\n                //return point at infinity\n                return [_1, _1, _0]\n            }\n            else {\n                return ecdouble(_p)\n            }\n        }\n\n        u2 = addmod(u2, negmod(u1, P), P)\n        z2 = mulmod(u2, u2, P)\n        const t2 = mulmod(u1, z2, P)\n        z2 = mulmod(u2, z2, P)\n        s2 = addmod(s2, negmod(s1, P), P)\n        const x = addmod(addmod(mulmod(s2, s2, P), negmod(z2, P), P), negmod(mulmod(uint256(2), t2, P), P), P)\n        return [\n            x,\n            addmod(mulmod(s2, addmod(t2, negmod(x, P), P), P), negmod(mulmod(s1, z2, P), P), P),\n            mulmod(u2, mulmod(_p[2], _q[2], P), P)\n        ]\n    }\n\n    function AtoJ(x, y) {\n        return [\n            uint256(x),\n            uint256(y),\n            _1\n        ]\n    }\n\n    function isValidPoint(x, y) {\n        const yy = addmod(mulmod(mulmod(x, x, P), x, P), B, P)\n        return yy.eq(mulmod(y, y, P))\n    }\n\n    function toHex(bn) {\n        return ('00000000000000000000000000000000000000000000000000000000000000000000000000000000' + bn.toString(16)).slice(-64)\n    }\n\n    function decompressKey(x, yBit) {\n        let redP = BN.red('k256');\n        x = x.toRed(redP)\n        const y = x.redMul(x).redMul(x).redAdd(B.toRed(redP)).redSqrt()\n        const sign = y.testn(0)\n        return (sign != yBit ? y.redNeg() : y).fromRed()\n    }\n\n    function generatePublicKeyFromPrivateKeyData(pk) {\n        const p = mulG(pk)\n        return {x: toHex(p[0]), y: toHex(p[1])}\n    }\n\n    function ecrecover(recId, sigr, sigs, message) {\n        // 1.0 For j from 0 to h   (h == recId here and the loop is outside this function)\n        //   1.1 Let x = r + jn\n        const x = addmod(uint256(sigr), P.muln(recId >> 1), P)\n        //   1.2. Convert the integer x to an octet string X of length mlen using the conversion routine\n        //        specified in Section 2.3.7, where mlen = \u2308(log2 p)/8\u2309 or mlen = \u2308m/8\u2309.\n        //   1.3. Convert the octet string (16 set binary digits)||X to an elliptic curve point R using the\n        //        conversion routine specified in Section 2.3.4. If this conversion routine outputs \u201cinvalid\u201d, then\n        //        do another iteration of Step 1.\n        //\n        // More concisely, what these points mean is to use X as a compressed public key.\n        if (x.gte(P)) {\n            // Cannot have point co-ordinates larger than this as everything takes place modulo Q.\n            return null\n        }\n        // Compressed keys require you to know an extra bit of data about the y-coord as there are two possibilities.\n        // So it's encoded in the recId.\n        const y = decompressKey(x, (recId & 1) == 1)\n        //   1.4. If nR != point at infinity, then do another iteration of Step 1 (callers responsibility).\n        // if (!R.mul(N).isInfinity())\n        //     return null\n        //   1.5. Compute e from M using Steps 2 and 3 of ECDSA signature verification.\n        const e = uint256(message)\n        //   1.6. For k from 1 to 2 do the following.   (loop is outside this function via iterating recId)\n        //   1.6.1. Compute a candidate public key as:\n        //               Q = mi(r) * (sR - eG)\n        //\n        // Where mi(x) is the modular multiplicative inverse. We transform this into the following:\n        //               Q = (mi(r) * s ** R) + (mi(r) * -e ** G)\n        // Where -e is the modular additive inverse of e, that is z such that z + e = 0 (mod n). In the above equation\n        // ** is point multiplication and + is point addition (the EC group operator).\n        //\n        // We can find the additive inverse by subtracting e from zero then taking the mod. For example the additive\n        // inverse of 3 modulo 11 is 8 because 3 + 8 mod 11 = 0, and -3 mod 11 = 8.\n        const eNeg = negmod(e, N)\n        const rInv = invmod(sigr, N)\n        const srInv = mulmod(rInv, sigs, N)\n        const eNegrInv = mulmod(rInv, eNeg, N)\n        const R = AtoJ(x, y)\n        const G = AtoJ(GX, GY)\n        const qinJ = ecadd(ecmul(G, eNegrInv), ecmul(R, srInv))\n        const p = JtoA(qinJ)\n        return {x: toHex(p[0]), y: toHex(p[1])}\n    }\n\n    function ecverify (Qx, Qy, sigr, sigs, z) {\n        const w = invmod(sigs, N)\n        const u1 = mulmod(z, w, N)\n        const u2 = mulmod(sigr, w, N)\n        const Q = AtoJ(Qx, Qy)\n        const G = AtoJ(GX, GY)\n        const RinJ = ecadd(ecmul(G, u1), ecmul(Q, u2))\n        const r = JtoA(RinJ)\n        return sigr.eq(r[0])\n    }\n\n    exports.uint256 = uint256\n    exports.ecsign = ecsign\n    exports.ecrecover = ecrecover\n    exports.generatePublicKeyFromPrivateKeyData = generatePublicKeyFromPrivateKeyData\n    exports.decompressKey = decompressKey\n    exports.isValidPoint = isValidPoint\n    exports.ecverify = ecverify\n})()\n", "/* eslint-env mocha */\nif (typeof module !== 'undefined') {\n    Secp256k1 = module.require('../src/secp256k1')\n    chai = module.require('chai')\n    var B = bn => Buffer.from(('00000000'+bn.toString(16)).slice(-64), 'hex')\n    var Secp256k1Node = require('secp256k1')\n}\n\nconst Assert = chai.assert\n\ndescribe('secp256k1', () => {\n    const P = Secp256k1.uint256(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F\", 16)\n    const d = Secp256k1.uint256(\"79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798\", 16)\n    const pubX = Secp256k1.uint256('5b75fd5f49e78191a45e1c9438644fe5d065ea98920c63e9eef86e151e99b809', 16)\n    const pubY = Secp256k1.uint256('4eef2a826f1e6d13a4dde4e54800e8d282a2089a873072002e0a3a21eae5763a', 16)\n    const z = Secp256k1.uint256(\"483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8\", 16)\n    const N  = Secp256k1.uint256(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\", 16)\n\n    // Known good sig\n    let r = 'c9861bad8887039fa990d24f2cc7ded1027e79ca1c5033741345c4aeb4b2fbe4'\n    let s = '303eee7b176509f6a48d66ec1bf891a2826c04b1a99790a33b96d2606ae75c60'\n    let v = 0\n\n    it('valid point', () => {\n        Assert.ok(Secp256k1.isValidPoint(pubX, pubY))\n    })\n\n    it('decompress', () => {\n        Assert.equal(Secp256k1.decompressKey(pubX, 0).toString(16), pubY.toString(16))\n    })\n\n    it('can gen pubkey', () => {\n        const pub = Secp256k1.generatePublicKeyFromPrivateKeyData(d)\n        Assert.deepStrictEqual(pub, {x: pubX.toString(16), y: pubY.toString(16)})\n        // if (Secp256k1Node) {\n        //     const pub = Secp256k1Node.publicKeyCreate(B(d), true)\n        //     console.log(pub.toString('hex'))\n        //     const pubd = Secp256k1Node.publicKeyCreate(B(d), false)\n        //     console.log(pubd.toString('hex'))\n        // }\n    })\n\n    it('test vector', () => {\n        const pub = Secp256k1.generatePublicKeyFromPrivateKeyData(Secp256k1.uint256('D30519BCAE8D180DBFCC94FE0B8383DC310185B0BE97B4365083EBCECCD75759',16))\n        Assert.deepStrictEqual(pub, {x: \"3af1e1efa4d1e1ad5cb9e3967e98e901dafcd37c44cf0bfb6c216997f5ee51df\", y: \"e4acac3e6f139e0c7db2bd736824f51392bda176965a1c59eb9c3c5ff9e85d7a\"})\n    })\n\n    it('can sign', () => {\n        const sig = Secp256k1.ecsign(d, z)\n        Assert.ok(/^[0-9a-f]{64}$/.test(sig.r), 'sig.r is not a hex string')\n        Assert.ok(/^[0-9a-f]{64}$/.test(sig.s), 'sig.s is not a hex string')\n        Assert.ok(sig.v===0 || sig.v===1, 'sig.v is not a 0 or 1')\n        if (Secp256k1Node) {\n            const success = Secp256k1Node.verify(B(z), Buffer.concat([B(sig.r), B(sig.s)]), Buffer.concat([Buffer('\\04'), B(pubX), B(pubY)]))\n            Assert.ok(success, JSON.stringify(sig))\n        }\n    })\n\n    it('has recovery bit', () => {\n        const sig = Secp256k1.ecsign(d, z)\n        if (Secp256k1Node) {\n            const success = Secp256k1Node.verify(B(z), Buffer.concat([B(sig.r), B(sig.s)]), Buffer.concat([Buffer('\\04'), B(pubX), B(pubY)]))\n            Assert.ok(success, JSON.stringify(sig))\n            const Q = Secp256k1Node.recover(B(z), Buffer.concat([B(sig.r), B(sig.s)]), sig.v, false)\n            Assert.deepStrictEqual({x: Q.toString('hex').substr(2,64), y: Q.toString('hex').slice(-64)}, {x: pubX.toString(16), y: pubY.toString(16)})\n        }\n    })\n\n    it('can verify self', () =>  {\n        const sig = Secp256k1.ecsign(d, z)\n        Assert.ok(Secp256k1.ecverify(pubX, pubY, Secp256k1.uint256(sig.r,16), Secp256k1.uint256(sig.s,16), z))\n    })\n\n    it('can verify fff...', () =>  {\n        const z = Secp256k1.uint256(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\", 16)\n        const sig = Secp256k1.ecsign(d, z)\n        Assert.ok(Secp256k1.ecverify(pubX, pubY, Secp256k1.uint256(sig.r,16), Secp256k1.uint256(sig.s,16), z))\n    })\n\n    it('can verify other sig', () => {\n        if (Secp256k1Node) {\n            const sig = Secp256k1Node.sign(B(z), B(d))\n            r = sig.signature.toString('hex').substr(0,64)\n            s = sig.signature.toString('hex').slice(-64)\n        }\n        Assert.ok(Secp256k1.ecverify(pubX, pubY, Secp256k1.uint256(r,16), Secp256k1.uint256(s,16), z))\n    })\n\n    it('can recover other sig', () => {\n        if (Secp256k1Node) {\n            const sig = Secp256k1Node.sign(B(z), B(d))\n            r = sig.signature.toString('hex').substr(0,64)\n            s = sig.signature.toString('hex').slice(-64)\n            v = sig.recovery\n        }\n        const Q = Secp256k1.ecrecover(v, Secp256k1.uint256(r,16), Secp256k1.uint256(s,16), z)\n        Assert.deepStrictEqual(Q, {x: pubX.toString(16), y: pubY.toString(16)})\n    })\n\n    it('can recover self', () =>  {\n        const sig = Secp256k1.ecsign(d, z)\n        const Q = Secp256k1.ecrecover(sig.v, Secp256k1.uint256(sig.r,16), Secp256k1.uint256(sig.s,16), z)\n        Assert.deepStrictEqual(Q, {x: pubX.toString(16), y: pubY.toString(16)})\n    })\n})\n"], "fixing_code": ["{\n  \"name\": \"@enumatech/secp256k1-js\",\n  \"version\": \"1.0.1\",\n  \"lockfileVersion\": 1,\n  \"requires\": true,\n  \"dependencies\": {\n    \"@ungap/promise-all-settled\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@ungap/promise-all-settled/-/promise-all-settled-1.1.2.tgz\",\n      \"integrity\": \"sha512-sL/cEvJWAnClXw0wHk85/2L0G6Sj8UB0Ctc1TEMbKSsmpRosqhwj9gWgFRZSrBr2f9tiXISwNhCPmlfqUqyb9Q==\",\n      \"dev\": true\n    },\n    \"ansi-colors\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-colors/-/ansi-colors-4.1.1.tgz\",\n      \"integrity\": \"sha512-JoX0apGbHaUJBNl6yF+p6JAFYZ666/hhCGKN5t9QFjbJQKUU/g8MNbFDbvfrgKXvI1QpZplPOnwIo99lX/AAmA==\",\n      \"dev\": true\n    },\n    \"ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"dev\": true\n    },\n    \"ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-convert\": \"^2.0.1\"\n      }\n    },\n    \"anymatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      }\n    },\n    \"argparse\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\",\n      \"dev\": true\n    },\n    \"assertion-error\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/assertion-error/-/assertion-error-1.1.0.tgz\",\n      \"integrity\": \"sha512-jgsaNduz+ndvGyFt3uSuWqvy4lCnIJiovtouQN5JZHOKCS2QuhEdbcQHFhVksz2N2U9hXJo8odG7ETyWlEeuDw==\",\n      \"dev\": true\n    },\n    \"balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true\n    },\n    \"binary-extensions\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz\",\n      \"integrity\": \"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\",\n      \"dev\": true\n    },\n    \"bindings\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/bindings/-/bindings-1.3.0.tgz\",\n      \"integrity\": \"sha512-DpLh5EzMR2kzvX1KIlVC0VkC3iZtHKTgdtZ0a3pglBZdaQFjt5S9g9xd1lE+YvXyfd6mtCeRnrUfOLYiTMlNSw==\",\n      \"dev\": true\n    },\n    \"bip66\": {\n      \"version\": \"1.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/bip66/-/bip66-1.1.5.tgz\",\n      \"integrity\": \"sha1-AfqHSHhcpwlV1QESF9GzE5lpyiI=\",\n      \"dev\": true,\n      \"requires\": {\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"bn.js\": {\n      \"version\": \"4.11.8\",\n      \"resolved\": \"https://registry.npmjs.org/bn.js/-/bn.js-4.11.8.tgz\",\n      \"integrity\": \"sha512-ItfYfPLkWHUjckQCk8xC+LwxgK8NYcXywGigJgSwOP8Y2iyWT4f2vsZnoOXTTbo+o5yXmIUJ4gn5538SO5S3gA==\"\n    },\n    \"brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"braces\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.2.tgz\",\n      \"integrity\": \"sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"fill-range\": \"^7.0.1\"\n      }\n    },\n    \"brorand\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/brorand/-/brorand-1.1.0.tgz\",\n      \"integrity\": \"sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8=\",\n      \"dev\": true\n    },\n    \"browser-stdout\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/browser-stdout/-/browser-stdout-1.3.1.tgz\",\n      \"integrity\": \"sha512-qhAVI1+Av2X7qelOfAIYwXONood6XlZE/fXaBSmW/T5SzLAmCgzi+eiWE7fUvbHaeNBQH13UftjpXxsfLkMpgw==\",\n      \"dev\": true\n    },\n    \"browserify-aes\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/browserify-aes/-/browserify-aes-1.2.0.tgz\",\n      \"integrity\": \"sha512-+7CHXqGuspUn/Sl5aO7Ea0xWGAtETPXNSAjHo48JfLdPWcMng33Xe4znFvQweqc/uzk5zSOI3H52CYnjCfb5hA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"buffer-xor\": \"^1.0.3\",\n        \"cipher-base\": \"^1.0.0\",\n        \"create-hash\": \"^1.1.0\",\n        \"evp_bytestokey\": \"^1.0.3\",\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"buffer-xor\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-xor/-/buffer-xor-1.0.3.tgz\",\n      \"integrity\": \"sha1-JuYe0UIvtw3ULm42cp7VHYVf6Nk=\",\n      \"dev\": true\n    },\n    \"camelcase\": {\n      \"version\": \"6.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-6.3.0.tgz\",\n      \"integrity\": \"sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==\",\n      \"dev\": true\n    },\n    \"chai\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chai/-/chai-4.1.2.tgz\",\n      \"integrity\": \"sha1-D2RYS6ZC8PKs4oBiefTwbKI61zw=\",\n      \"dev\": true,\n      \"requires\": {\n        \"assertion-error\": \"^1.0.1\",\n        \"check-error\": \"^1.0.1\",\n        \"deep-eql\": \"^3.0.0\",\n        \"get-func-name\": \"^2.0.0\",\n        \"pathval\": \"^1.0.0\",\n        \"type-detect\": \"^4.0.0\"\n      }\n    },\n    \"chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"dependencies\": {\n        \"supports-color\": {\n          \"version\": \"7.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n          \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n          \"dev\": true,\n          \"requires\": {\n            \"has-flag\": \"^4.0.0\"\n          }\n        }\n      }\n    },\n    \"check-error\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/check-error/-/check-error-1.0.2.tgz\",\n      \"integrity\": \"sha1-V00xLt2Iu13YkS6Sht1sCu1KrII=\",\n      \"dev\": true\n    },\n    \"chokidar\": {\n      \"version\": \"3.5.3\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz\",\n      \"integrity\": \"sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"fsevents\": \"~2.3.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      }\n    },\n    \"cipher-base\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz\",\n      \"integrity\": \"sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"cliui\": {\n      \"version\": \"7.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz\",\n      \"integrity\": \"sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"wrap-ansi\": \"^7.0.0\"\n      }\n    },\n    \"color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-name\": \"~1.1.4\"\n      }\n    },\n    \"color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n      \"dev\": true\n    },\n    \"create-hash\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz\",\n      \"integrity\": \"sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"cipher-base\": \"^1.0.1\",\n        \"inherits\": \"^2.0.1\",\n        \"md5.js\": \"^1.3.4\",\n        \"ripemd160\": \"^2.0.1\",\n        \"sha.js\": \"^2.4.0\"\n      }\n    },\n    \"create-hmac\": {\n      \"version\": \"1.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz\",\n      \"integrity\": \"sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"cipher-base\": \"^1.0.3\",\n        \"create-hash\": \"^1.1.0\",\n        \"inherits\": \"^2.0.1\",\n        \"ripemd160\": \"^2.0.0\",\n        \"safe-buffer\": \"^5.0.1\",\n        \"sha.js\": \"^2.4.8\"\n      }\n    },\n    \"debug\": {\n      \"version\": \"4.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\n      \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"dependencies\": {\n        \"ms\": {\n          \"version\": \"2.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n          \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"decamelize\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-4.0.0.tgz\",\n      \"integrity\": \"sha512-9iE1PgSik9HeIIw2JO94IidnE3eBoQrFJ3w7sFuzSX4DpmZ3v5sZpUiV5Swcf6mQEF+Y0ru8Neo+p+nyh2J+hQ==\",\n      \"dev\": true\n    },\n    \"deep-eql\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/deep-eql/-/deep-eql-3.0.1.tgz\",\n      \"integrity\": \"sha512-+QeIQyN5ZuO+3Uk5DYh6/1eKO0m0YmJFGNmFHGACpf1ClL1nmlV/p4gNgbl2pJGxgXb4faqo6UE+M5ACEMyVcw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"type-detect\": \"^4.0.0\"\n      }\n    },\n    \"diff\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/diff/-/diff-5.0.0.tgz\",\n      \"integrity\": \"sha512-/VTCrvm5Z0JGty/BWHljh+BAiw3IK+2j87NGMu8Nwc/f48WoDAC395uomO9ZD117ZOBaHmkX1oyLvkVM/aIT3w==\",\n      \"dev\": true\n    },\n    \"drbg.js\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/drbg.js/-/drbg.js-1.0.1.tgz\",\n      \"integrity\": \"sha1-Pja2xCs3BDgjzbwzLVjzHiRFSAs=\",\n      \"dev\": true,\n      \"requires\": {\n        \"browserify-aes\": \"^1.0.6\",\n        \"create-hash\": \"^1.1.2\",\n        \"create-hmac\": \"^1.1.4\"\n      }\n    },\n    \"elliptic\": {\n      \"version\": \"6.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.5.4.tgz\",\n      \"integrity\": \"sha512-iLhC6ULemrljPZb+QutR5TQGB+pdW6KGD5RSegS+8sorOZT+rdQFbsQFJgvN3eRqNALqJer4oQ16YvJHlU8hzQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"bn.js\": \"^4.11.9\",\n        \"brorand\": \"^1.1.0\",\n        \"hash.js\": \"^1.0.0\",\n        \"hmac-drbg\": \"^1.0.1\",\n        \"inherits\": \"^2.0.4\",\n        \"minimalistic-assert\": \"^1.0.1\",\n        \"minimalistic-crypto-utils\": \"^1.0.1\"\n      },\n      \"dependencies\": {\n        \"bn.js\": {\n          \"version\": \"4.12.0\",\n          \"resolved\": \"https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz\",\n          \"integrity\": \"sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==\",\n          \"dev\": true\n        },\n        \"inherits\": {\n          \"version\": \"2.0.4\",\n          \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n          \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"escalade\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz\",\n      \"integrity\": \"sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==\",\n      \"dev\": true\n    },\n    \"escape-string-regexp\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n      \"dev\": true\n    },\n    \"evp_bytestokey\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/evp_bytestokey/-/evp_bytestokey-1.0.3.tgz\",\n      \"integrity\": \"sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"md5.js\": \"^1.3.4\",\n        \"safe-buffer\": \"^5.1.1\"\n      }\n    },\n    \"fill-range\": {\n      \"version\": \"7.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz\",\n      \"integrity\": \"sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"to-regex-range\": \"^5.0.1\"\n      }\n    },\n    \"find-up\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz\",\n      \"integrity\": \"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\",\n      \"dev\": true,\n      \"requires\": {\n        \"locate-path\": \"^6.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      }\n    },\n    \"flat\": {\n      \"version\": \"5.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/flat/-/flat-5.0.2.tgz\",\n      \"integrity\": \"sha512-b6suED+5/3rTpUBdG1gupIl8MPFCAMA0QXwmljLhvCUKcUvdE4gWky9zpuGCcXHOsz4J9wPGNWq6OKpmIzz3hQ==\",\n      \"dev\": true\n    },\n    \"fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n      \"dev\": true\n    },\n    \"fsevents\": {\n      \"version\": \"2.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz\",\n      \"integrity\": \"sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"dev\": true\n    },\n    \"get-func-name\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-func-name/-/get-func-name-2.0.0.tgz\",\n      \"integrity\": \"sha1-6td0q+5y4gQJQzoGY2YCPdaIekE=\",\n      \"dev\": true\n    },\n    \"glob\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.0.tgz\",\n      \"integrity\": \"sha512-lmLf6gtyrPq8tTjSmrO94wBeQbFR3HbLHbuyD69wuyQkImp2hWqMGB47OX65FBkPffO641IP9jWa1z4ivqG26Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.0.4\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"dependencies\": {\n        \"minimatch\": {\n          \"version\": \"3.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n          \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n          \"dev\": true,\n          \"requires\": {\n            \"brace-expansion\": \"^1.1.7\"\n          }\n        }\n      }\n    },\n    \"glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-glob\": \"^4.0.1\"\n      }\n    },\n    \"has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true\n    },\n    \"hash-base\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/hash-base/-/hash-base-3.0.4.tgz\",\n      \"integrity\": \"sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"hash.js\": {\n      \"version\": \"1.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/hash.js/-/hash.js-1.1.5.tgz\",\n      \"integrity\": \"sha512-eWI5HG9Np+eHV1KQhisXWwM+4EPPYe5dFX1UZZH7k/E3JzDEazVH+VGlZi6R94ZqImq+A3D1mCEtrFIfg/E7sA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"^2.0.3\",\n        \"minimalistic-assert\": \"^1.0.1\"\n      }\n    },\n    \"he\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/he/-/he-1.2.0.tgz\",\n      \"integrity\": \"sha512-F/1DnUGPopORZi0ni+CvrCgHQ5FyEAHRLSApuYWMmrbSwoN2Mn/7k+Gl38gJnR7yyDZk6WLXwiGod1JOWNDKGw==\",\n      \"dev\": true\n    },\n    \"hmac-drbg\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/hmac-drbg/-/hmac-drbg-1.0.1.tgz\",\n      \"integrity\": \"sha1-0nRXAQJabHdabFRXk+1QL8DGSaE=\",\n      \"dev\": true,\n      \"requires\": {\n        \"hash.js\": \"^1.0.3\",\n        \"minimalistic-assert\": \"^1.0.0\",\n        \"minimalistic-crypto-utils\": \"^1.0.1\"\n      }\n    },\n    \"inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"inherits\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz\",\n      \"integrity\": \"sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\",\n      \"dev\": true\n    },\n    \"is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"binary-extensions\": \"^2.0.0\"\n      }\n    },\n    \"is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"dev\": true\n    },\n    \"is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"dev\": true\n    },\n    \"is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-extglob\": \"^2.1.1\"\n      }\n    },\n    \"is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true\n    },\n    \"is-plain-obj\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-2.1.0.tgz\",\n      \"integrity\": \"sha512-YWnfyRwxL/+SsrWYfOpUtz5b3YD+nyfkHvjbcanzk8zgyO4ASD67uVMRt8k5bM4lLMDnXfriRhOpemw+NfT1eA==\",\n      \"dev\": true\n    },\n    \"is-unicode-supported\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-0.1.0.tgz\",\n      \"integrity\": \"sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==\",\n      \"dev\": true\n    },\n    \"js-yaml\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n      \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"argparse\": \"^2.0.1\"\n      }\n    },\n    \"locate-path\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz\",\n      \"integrity\": \"sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"p-locate\": \"^5.0.0\"\n      }\n    },\n    \"log-symbols\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/log-symbols/-/log-symbols-4.1.0.tgz\",\n      \"integrity\": \"sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"chalk\": \"^4.1.0\",\n        \"is-unicode-supported\": \"^0.1.0\"\n      }\n    },\n    \"md5.js\": {\n      \"version\": \"1.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/md5.js/-/md5.js-1.3.4.tgz\",\n      \"integrity\": \"sha1-6b296UogpawYsENA/Fdk1bCdkB0=\",\n      \"dev\": true,\n      \"requires\": {\n        \"hash-base\": \"^3.0.0\",\n        \"inherits\": \"^2.0.1\"\n      }\n    },\n    \"minimalistic-assert\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz\",\n      \"integrity\": \"sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==\",\n      \"dev\": true\n    },\n    \"minimalistic-crypto-utils\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/minimalistic-crypto-utils/-/minimalistic-crypto-utils-1.0.1.tgz\",\n      \"integrity\": \"sha1-9sAMHAsIIkblxNmd+4x8CDsrWCo=\",\n      \"dev\": true\n    },\n    \"minimatch\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-5.0.1.tgz\",\n      \"integrity\": \"sha512-nLDxIFRyhDblz3qMuq+SoRZED4+miJ/G+tdDrjkkkRnjAsBexeGpgjLEQ0blJy7rHhR2b93rhQY4SvyWu9v03g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"dependencies\": {\n        \"brace-expansion\": {\n          \"version\": \"2.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n          \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"balanced-match\": \"^1.0.0\"\n          }\n        }\n      }\n    },\n    \"mocha\": {\n      \"version\": \"10.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/mocha/-/mocha-10.0.0.tgz\",\n      \"integrity\": \"sha512-0Wl+elVUD43Y0BqPZBzZt8Tnkw9CMUdNYnUsTfOM1vuhJVZL+kiesFYsqwBkEEuEixaiPe5ZQdqDgX2jddhmoA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@ungap/promise-all-settled\": \"1.1.2\",\n        \"ansi-colors\": \"4.1.1\",\n        \"browser-stdout\": \"1.3.1\",\n        \"chokidar\": \"3.5.3\",\n        \"debug\": \"4.3.4\",\n        \"diff\": \"5.0.0\",\n        \"escape-string-regexp\": \"4.0.0\",\n        \"find-up\": \"5.0.0\",\n        \"glob\": \"7.2.0\",\n        \"he\": \"1.2.0\",\n        \"js-yaml\": \"4.1.0\",\n        \"log-symbols\": \"4.1.0\",\n        \"minimatch\": \"5.0.1\",\n        \"ms\": \"2.1.3\",\n        \"nanoid\": \"3.3.3\",\n        \"serialize-javascript\": \"6.0.0\",\n        \"strip-json-comments\": \"3.1.1\",\n        \"supports-color\": \"8.1.1\",\n        \"workerpool\": \"6.2.1\",\n        \"yargs\": \"16.2.0\",\n        \"yargs-parser\": \"20.2.4\",\n        \"yargs-unparser\": \"2.0.0\"\n      }\n    },\n    \"ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"dev\": true\n    },\n    \"nan\": {\n      \"version\": \"2.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/nan/-/nan-2.10.0.tgz\",\n      \"integrity\": \"sha512-bAdJv7fBLhWC+/Bls0Oza+mvTaNQtP+1RyhhhvD95pgUJz6XM5IzgmxOkItJ9tkoCiplvAnXI1tNmmUD/eScyA==\",\n      \"dev\": true\n    },\n    \"nanoid\": {\n      \"version\": \"3.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/nanoid/-/nanoid-3.3.3.tgz\",\n      \"integrity\": \"sha512-p1sjXuopFs0xg+fPASzQ28agW1oHD7xDsd9Xkf3T15H3c/cifrFHVwrh74PdoklAPi+i7MdRsE47vm2r6JoB+w==\",\n      \"dev\": true\n    },\n    \"normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"dev\": true\n    },\n    \"once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"p-limit\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n      \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"yocto-queue\": \"^0.1.0\"\n      }\n    },\n    \"p-locate\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz\",\n      \"integrity\": \"sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"p-limit\": \"^3.0.2\"\n      }\n    },\n    \"path-exists\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n      \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n      \"dev\": true\n    },\n    \"path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n      \"integrity\": \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\",\n      \"dev\": true\n    },\n    \"pathval\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/pathval/-/pathval-1.1.1.tgz\",\n      \"integrity\": \"sha512-Dp6zGqpTdETdR63lehJYPeIOqpiNBNtc7BpWSLrOje7UaIsE5aY92r/AunQA7rsXvet3lrJ3JnZX29UPTKXyKQ==\",\n      \"dev\": true\n    },\n    \"picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true\n    },\n    \"randombytes\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz\",\n      \"integrity\": \"sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"safe-buffer\": \"^5.1.0\"\n      }\n    },\n    \"readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"picomatch\": \"^2.2.1\"\n      }\n    },\n    \"require-directory\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n      \"integrity\": \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\",\n      \"dev\": true\n    },\n    \"ripemd160\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.2.tgz\",\n      \"integrity\": \"sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"hash-base\": \"^3.0.0\",\n        \"inherits\": \"^2.0.1\"\n      }\n    },\n    \"safe-buffer\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\n      \"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\",\n      \"dev\": true\n    },\n    \"secp256k1\": {\n      \"version\": \"3.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/secp256k1/-/secp256k1-3.5.0.tgz\",\n      \"integrity\": \"sha512-e5QIJl8W7Y4tT6LHffVcZAxJjvpgE5Owawv6/XCYPQljE9aP2NFFddQ8OYMKhdLshNu88FfL3qCN3/xYkXGRsA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"bindings\": \"^1.2.1\",\n        \"bip66\": \"^1.1.3\",\n        \"bn.js\": \"^4.11.3\",\n        \"create-hash\": \"^1.1.2\",\n        \"drbg.js\": \"^1.0.1\",\n        \"elliptic\": \"^6.2.3\",\n        \"nan\": \"^2.2.1\",\n        \"safe-buffer\": \"^5.1.0\"\n      }\n    },\n    \"serialize-javascript\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-6.0.0.tgz\",\n      \"integrity\": \"sha512-Qr3TosvguFt8ePWqsvRfrKyQXIiW+nGbYpy8XK24NQHE83caxWt+mIymTT19DGFbNWNLfEwsrkSmN64lVWB9ag==\",\n      \"dev\": true,\n      \"requires\": {\n        \"randombytes\": \"^2.1.0\"\n      }\n    },\n    \"sha.js\": {\n      \"version\": \"2.4.11\",\n      \"resolved\": \"https://registry.npmjs.org/sha.js/-/sha.js-2.4.11.tgz\",\n      \"integrity\": \"sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"inherits\": \"^2.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      }\n    },\n    \"strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-regex\": \"^5.0.1\"\n      }\n    },\n    \"strip-json-comments\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n      \"integrity\": \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\",\n      \"dev\": true\n    },\n    \"supports-color\": {\n      \"version\": \"8.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz\",\n      \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"has-flag\": \"^4.0.0\"\n      }\n    },\n    \"to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-number\": \"^7.0.0\"\n      }\n    },\n    \"type-detect\": {\n      \"version\": \"4.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/type-detect/-/type-detect-4.0.8.tgz\",\n      \"integrity\": \"sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==\",\n      \"dev\": true\n    },\n    \"workerpool\": {\n      \"version\": \"6.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/workerpool/-/workerpool-6.2.1.tgz\",\n      \"integrity\": \"sha512-ILEIE97kDZvF9Wb9f6h5aXK4swSlKGUcOEGiIYb2OOu/IrDU9iwj0fD//SsA6E5ibwJxpEvhullJY4Sl4GcpAw==\",\n      \"dev\": true\n    },\n    \"wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      }\n    },\n    \"wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n      \"dev\": true\n    },\n    \"y18n\": {\n      \"version\": \"5.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz\",\n      \"integrity\": \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\",\n      \"dev\": true\n    },\n    \"yargs\": {\n      \"version\": \"16.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz\",\n      \"integrity\": \"sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"cliui\": \"^7.0.2\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.0\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^20.2.2\"\n      }\n    },\n    \"yargs-parser\": {\n      \"version\": \"20.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.4.tgz\",\n      \"integrity\": \"sha512-WOkpgNhPTlE73h4VFAFsOnomJVaovO8VqLDzy5saChRBFQFBoMYirowyW+Q9HB4HFF4Z7VZTiG3iSzJJA29yRA==\",\n      \"dev\": true\n    },\n    \"yargs-unparser\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-unparser/-/yargs-unparser-2.0.0.tgz\",\n      \"integrity\": \"sha512-7pRTIA9Qc1caZ0bZ6RYRGbHJthJWuakf+WmHK0rVeLkNrrGhfoabBNdue6kdINI6r4if7ocq9aD/n7xwKOdzOA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"camelcase\": \"^6.0.0\",\n        \"decamelize\": \"^4.0.0\",\n        \"flat\": \"^5.0.2\",\n        \"is-plain-obj\": \"^2.1.0\"\n      }\n    },\n    \"yocto-queue\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz\",\n      \"integrity\": \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\",\n      \"dev\": true\n    }\n  }\n}\n", "{\n  \"name\": \"@enumatech/secp256k1-js\",\n  \"version\": \"1.0.1\",\n  \"description\": \"Pure JS implementation of secp256k1 signing, verification, recovery ECDSA.\",\n  \"engines\": {\n    \"node\": \">=14.0.0\"\n  },\n  \"main\": \"src/secp256k1.js\",\n  \"scripts\": {\n    \"test\": \"mocha test\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/enumatech/secp256k1-js.git\"\n  },\n  \"keywords\": [],\n  \"author\": \"Lionello Lunesu\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/enumatech/secp256k1-js/issues\"\n  },\n  \"homepage\": \"https://github.com/enumatech/secp256k1-js#readme\",\n  \"devDependencies\": {\n    \"chai\": \"^4.1.2\",\n    \"mocha\": \"^10.0.0\",\n    \"secp256k1\": \"^3.5.0\"\n  },\n  \"dependencies\": {\n    \"bn.js\": \"^4.11.8\"\n  }\n}\n", "(function () {\n    if (typeof module !== 'undefined') {\n        BN = module.require('bn.js')\n        randomBytes = module.require('crypto').randomBytes\n    } else {\n        // bn.js must have been included by the main html file\n        randomBytes = length => window.crypto.getRandomValues(new Uint8Array(length))\n        window.Secp256k1 = exports = {}\n    }\n\n    function uint256(x, base) {\n        return new BN(x, base)\n    }\n\n    function rnd(P) {\n        return uint256(randomBytes(32)).umod(P)//TODO red\n    }\n\n    const A  = uint256(0)\n    const B  = uint256(7)\n    const GX = uint256(\"79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798\", 16)\n    const GY = uint256(\"483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8\", 16)\n    const P  = uint256(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F\", 16)\n    const N  = uint256(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\", 16)\n    //const RED = BN.red(P)\n    const _0 = uint256(0)\n    const _1 = uint256(1)\n\n    // function for elliptic curve multiplication in jacobian coordinates using Double-and-add method\n    function ecmul(_p, _d) {\n        let R = [_0,_0,_0]\n\n        //return (0,0) if d=0 or (x1,y1)=(0,0)\n        if (_d == 0 || ((_p[0] == 0) && (_p[1] == 0)) ) {\n            return R\n        }\n        let T = [\n            _p[0], //x-coordinate temp\n            _p[1], //y-coordinate temp\n            _p[2], //z-coordinate temp\n        ]\n\n        const d = _d.clone()\n        while (d != 0) {\n            if (d.testn(0)) {  //if last bit is 1 add T to result\n                R = ecadd(T,R)\n            }\n            T = ecdouble(T);    //double temporary coordinates\n            d.iushrn(1);      //\"cut off\" last bit\n        }\n\n        return R\n    }\n\n    function mulmod(a, b, P) {\n        return a.mul(b).umod(P)//TODO red\n    }\n\n    function addmod(a, b, P) {\n        return a.add(b).umod(P)//TODO red\n    }\n\n    function invmod(a, P) {\n        return a.invm(P)//TODO redq\n    }\n\n    function mulG(k) {\n        const GinJ = AtoJ(GX, GY)\n        const PUBinJ = ecmul(GinJ, k)\n        return JtoA(PUBinJ)\n    }\n\n    function assert(cond, msg) {\n        if (!cond) {\n            throw Error(\"assertion failed: \" + msg)\n        }\n    }\n\n    function ecsign(d, z) {\n        assert(d != 0, \"d must not be 0\")\n        assert(z != 0, \"z must not be 0\")\n        while (true) {\n            const k = rnd(P)\n            const R = mulG(k)\n            if (R[0] == 0) continue\n            const s = mulmod(invmod(k, N), addmod(z, mulmod(R[0], d, N), N), N)\n            if (s == 0) continue\n            //FIXME: why do I need this\n            if (s.testn(255)) continue\n            return {r: toHex(R[0]), s: toHex(s), v: R[1].testn(0) ? 1 : 0}\n        }\n    }\n\n    function JtoA(p) {\n        const zInv = invmod(p[2], P)\n        const zInv2 = mulmod(zInv, zInv, P)\n        return [mulmod(p[0], zInv2, P), mulmod(p[1], mulmod(zInv, zInv2, P), P)]\n    }\n\n    //point doubling for elliptic curve in jacobian coordinates\n    //formula from https://en.wikibooks.org/wiki/Cryptography/Prime_Curve/Jacobian_Coordinates\n    function ecdouble(_p) {\n        if (_p[1] == 0) {\n            //return point at infinity\n            return [_1, _1, _0]\n        }\n\n        const z2 = mulmod(_p[2], _p[2], P)\n        const m = addmod(mulmod(A, mulmod(z2, z2, P), P), mulmod(uint256(3), mulmod(_p[0], _p[0], P), P), P)\n        const y2 = mulmod(_p[1], _p[1], P)\n        const s = mulmod(uint256(4), mulmod(_p[0], y2, P), P)\n\n        const x = addmod(mulmod(m, m, P), negmod(mulmod(s, uint256(2), P), P), P)\n        return [\n            x,\n            addmod(mulmod(m, addmod(s, negmod(x, P), P), P), negmod(mulmod(uint256(8), mulmod(y2, y2, P), P), P), P),\n            mulmod(uint256(2), mulmod(_p[1], _p[2], P), P)\n        ]\n    }\n\n    function negmod(a, P) {\n        return P.sub(a)\n    }\n\n    // point addition for elliptic curve in jacobian coordinates\n    // formula from https://en.wikibooks.org/wiki/Cryptography/Prime_Curve/Jacobian_Coordinates\n    function ecadd(_p, _q) {\n        if (_q[0] == 0 && _q[1] == 0 && _q[2] == 0) {\n            return _p\n        }\n\n        let z2 = mulmod(_q[2], _q[2], P)\n        const u1 = mulmod(_p[0], z2, P)\n        const s1 = mulmod(_p[1], mulmod(z2, _q[2], P), P)\n        z2 = mulmod(_p[2], _p[2], P)\n        let u2 = mulmod(_q[0], z2, P)\n        let s2 = mulmod(_q[1], mulmod(z2, _p[2], P), P)\n\n        if (u1.eq(u2)) {\n            if (!s1.eq(s2)) {\n                //return point at infinity\n                return [_1, _1, _0]\n            }\n            else {\n                return ecdouble(_p)\n            }\n        }\n\n        u2 = addmod(u2, negmod(u1, P), P)\n        z2 = mulmod(u2, u2, P)\n        const t2 = mulmod(u1, z2, P)\n        z2 = mulmod(u2, z2, P)\n        s2 = addmod(s2, negmod(s1, P), P)\n        const x = addmod(addmod(mulmod(s2, s2, P), negmod(z2, P), P), negmod(mulmod(uint256(2), t2, P), P), P)\n        return [\n            x,\n            addmod(mulmod(s2, addmod(t2, negmod(x, P), P), P), negmod(mulmod(s1, z2, P), P), P),\n            mulmod(u2, mulmod(_p[2], _q[2], P), P)\n        ]\n    }\n\n    function AtoJ(x, y) {\n        return [\n            uint256(x),\n            uint256(y),\n            _1\n        ]\n    }\n\n    function isValidPoint(x, y) {\n        const yy = addmod(mulmod(mulmod(x, x, P), x, P), B, P)\n        return yy.eq(mulmod(y, y, P))\n    }\n\n    function toHex(bn) {\n        return ('00000000000000000000000000000000000000000000000000000000000000000000000000000000' + bn.toString(16)).slice(-64)\n    }\n\n    function decompressKey(x, yBit) {\n        let redP = BN.red('k256');\n        x = x.toRed(redP)\n        const y = x.redMul(x).redMul(x).redAdd(B.toRed(redP)).redSqrt()\n        const sign = y.testn(0)\n        return (sign != yBit ? y.redNeg() : y).fromRed()\n    }\n\n    function generatePublicKeyFromPrivateKeyData(pk) {\n        const p = mulG(pk)\n        return {x: toHex(p[0]), y: toHex(p[1])}\n    }\n\n    function ecrecover(recId, sigr, sigs, message) {\n        assert(recId >= 0 && recId <= 3, \"recId must be 0..3\")\n        assert(sigr != 0, \"sigr must not be 0\")\n        assert(sigs != 0, \"sigs must not be 0\")\n        // 1.0 For j from 0 to h   (h == recId here and the loop is outside this function)\n        //   1.1 Let x = r + jn\n        const x = addmod(uint256(sigr), P.muln(recId >> 1), P)\n        //   1.2. Convert the integer x to an octet string X of length mlen using the conversion routine\n        //        specified in Section 2.3.7, where mlen = \u2308(log2 p)/8\u2309 or mlen = \u2308m/8\u2309.\n        //   1.3. Convert the octet string (16 set binary digits)||X to an elliptic curve point R using the\n        //        conversion routine specified in Section 2.3.4. If this conversion routine outputs \u201cinvalid\u201d, then\n        //        do another iteration of Step 1.\n        //\n        // More concisely, what these points mean is to use X as a compressed public key.\n        if (x.gte(P)) {\n            // Cannot have point co-ordinates larger than this as everything takes place modulo Q.\n            return null\n        }\n        // Compressed keys require you to know an extra bit of data about the y-coord as there are two possibilities.\n        // So it's encoded in the recId.\n        const y = decompressKey(x, (recId & 1) == 1)\n        //   1.4. If nR != point at infinity, then do another iteration of Step 1 (callers responsibility).\n        // if (!R.mul(N).isInfinity())\n        //     return null\n        //   1.5. Compute e from M using Steps 2 and 3 of ECDSA signature verification.\n        const e = uint256(message)\n        //   1.6. For k from 1 to 2 do the following.   (loop is outside this function via iterating recId)\n        //   1.6.1. Compute a candidate public key as:\n        //               Q = mi(r) * (sR - eG)\n        //\n        // Where mi(x) is the modular multiplicative inverse. We transform this into the following:\n        //               Q = (mi(r) * s ** R) + (mi(r) * -e ** G)\n        // Where -e is the modular additive inverse of e, that is z such that z + e = 0 (mod n). In the above equation\n        // ** is point multiplication and + is point addition (the EC group operator).\n        //\n        // We can find the additive inverse by subtracting e from zero then taking the mod. For example the additive\n        // inverse of 3 modulo 11 is 8 because 3 + 8 mod 11 = 0, and -3 mod 11 = 8.\n        const eNeg = negmod(e, N)\n        const rInv = invmod(sigr, N)\n        const srInv = mulmod(rInv, sigs, N)\n        const eNegrInv = mulmod(rInv, eNeg, N)\n        const R = AtoJ(x, y)\n        const G = AtoJ(GX, GY)\n        const qinJ = ecadd(ecmul(G, eNegrInv), ecmul(R, srInv))\n        const p = JtoA(qinJ)\n        return {x: toHex(p[0]), y: toHex(p[1])}\n    }\n\n    function ecverify (Qx, Qy, sigr, sigs, z) {\n        if (sigs == 0 || sigr == 0) {\n            return false\n        }\n        const w = invmod(sigs, N)\n        const u1 = mulmod(z, w, N)\n        const u2 = mulmod(sigr, w, N)\n        const Q = AtoJ(Qx, Qy)\n        const G = AtoJ(GX, GY)\n        const RinJ = ecadd(ecmul(G, u1), ecmul(Q, u2))\n        const r = JtoA(RinJ)\n        return sigr.eq(r[0])\n    }\n\n    exports.uint256 = uint256\n    exports.ecsign = ecsign\n    exports.ecrecover = ecrecover\n    exports.generatePublicKeyFromPrivateKeyData = generatePublicKeyFromPrivateKeyData\n    exports.decompressKey = decompressKey\n    exports.isValidPoint = isValidPoint\n    exports.ecverify = ecverify\n})()\n", "/* eslint-env mocha */\nif (typeof module !== 'undefined') {\n    Secp256k1 = module.require('../src/secp256k1')\n    chai = module.require('chai')\n    var B = bn => Buffer.from(('00000000'+bn.toString(16)).slice(-64), 'hex')\n    var Secp256k1Node = require('secp256k1')\n}\n\nconst Assert = chai.assert\n\ndescribe('secp256k1', () => {\n    const P = Secp256k1.uint256(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F\", 16)\n    const d = Secp256k1.uint256(\"79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798\", 16)\n    const pubX = Secp256k1.uint256('5b75fd5f49e78191a45e1c9438644fe5d065ea98920c63e9eef86e151e99b809', 16)\n    const pubY = Secp256k1.uint256('4eef2a826f1e6d13a4dde4e54800e8d282a2089a873072002e0a3a21eae5763a', 16)\n    const z = Secp256k1.uint256(\"483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8\", 16)\n    const N  = Secp256k1.uint256(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\", 16)\n\n    // Known good sig\n    let r = 'c9861bad8887039fa990d24f2cc7ded1027e79ca1c5033741345c4aeb4b2fbe4'\n    let s = '303eee7b176509f6a48d66ec1bf891a2826c04b1a99790a33b96d2606ae75c60'\n    let v = 0\n\n    it('valid point', () => {\n        Assert.ok(Secp256k1.isValidPoint(pubX, pubY))\n    })\n\n    it('decompress', () => {\n        Assert.equal(Secp256k1.decompressKey(pubX, 0).toString(16), pubY.toString(16))\n    })\n\n    it('can gen pubkey', () => {\n        const pub = Secp256k1.generatePublicKeyFromPrivateKeyData(d)\n        Assert.deepStrictEqual(pub, {x: pubX.toString(16), y: pubY.toString(16)})\n        // if (Secp256k1Node) {\n        //     const pub = Secp256k1Node.publicKeyCreate(B(d), true)\n        //     console.log(pub.toString('hex'))\n        //     const pubd = Secp256k1Node.publicKeyCreate(B(d), false)\n        //     console.log(pubd.toString('hex'))\n        // }\n    })\n\n    it('test vector', () => {\n        const pub = Secp256k1.generatePublicKeyFromPrivateKeyData(Secp256k1.uint256('D30519BCAE8D180DBFCC94FE0B8383DC310185B0BE97B4365083EBCECCD75759',16))\n        Assert.deepStrictEqual(pub, {x: \"3af1e1efa4d1e1ad5cb9e3967e98e901dafcd37c44cf0bfb6c216997f5ee51df\", y: \"e4acac3e6f139e0c7db2bd736824f51392bda176965a1c59eb9c3c5ff9e85d7a\"})\n    })\n\n    it('can sign', () => {\n        const sig = Secp256k1.ecsign(d, z)\n        Assert.ok(/^[0-9a-f]{64}$/.test(sig.r), 'sig.r is not a hex string')\n        Assert.ok(/^[0-9a-f]{64}$/.test(sig.s), 'sig.s is not a hex string')\n        Assert.ok(sig.v===0 || sig.v===1, 'sig.v is not a 0 or 1')\n        if (Secp256k1Node) {\n            const success = Secp256k1Node.verify(B(z), Buffer.concat([B(sig.r), B(sig.s)]), Buffer.concat([Buffer.from('\\04'), B(pubX), B(pubY)]))\n            Assert.ok(success, JSON.stringify(sig))\n        }\n    })\n\n    it('has recovery bit', () => {\n        const sig = Secp256k1.ecsign(d, z)\n        if (Secp256k1Node) {\n            const success = Secp256k1Node.verify(B(z), Buffer.concat([B(sig.r), B(sig.s)]), Buffer.concat([Buffer.from('\\04'), B(pubX), B(pubY)]))\n            Assert.ok(success, JSON.stringify(sig))\n            const Q = Secp256k1Node.recover(B(z), Buffer.concat([B(sig.r), B(sig.s)]), sig.v, false)\n            Assert.deepStrictEqual({x: Q.toString('hex').substr(2,64), y: Q.toString('hex').slice(-64)}, {x: pubX.toString(16), y: pubY.toString(16)})\n        }\n    })\n\n    it('can verify ours', () =>  {\n        const sig = Secp256k1.ecsign(d, z)\n        Assert.ok(Secp256k1.ecverify(pubX, pubY, Secp256k1.uint256(sig.r,16), Secp256k1.uint256(sig.s,16), z))\n    })\n\n    it('can verify known sig', () =>  {\n        Assert.ok(Secp256k1.ecverify(pubX, pubY, Secp256k1.uint256(r,16), Secp256k1.uint256(s,16), z))\n    })\n\n    it('can verify fff...', () =>  {\n        const z = Secp256k1.uint256(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\", 16)\n        const sig = Secp256k1.ecsign(d, z)\n        Assert.ok(Secp256k1.ecverify(pubX, pubY, Secp256k1.uint256(sig.r,16), Secp256k1.uint256(sig.s,16), z))\n    })\n\n    it('cannot sign 000...', () =>  {\n        const z = Secp256k1.uint256(\"0000000000000000000000000000000000000000000000000000000000000000\", 16)\n        Assert.throws(() => Secp256k1.ecsign(d, z), \"assertion failed: z must not be 0\")\n    })\n\n    it('can verify other sig', () => {\n        if (Secp256k1Node) {\n            const sig = Secp256k1Node.sign(B(z), B(d))\n            r = sig.signature.toString('hex').substr(0,64)\n            s = sig.signature.toString('hex').slice(-64)\n        }\n        Assert.ok(Secp256k1.ecverify(pubX, pubY, Secp256k1.uint256(r,16), Secp256k1.uint256(s,16), z))\n    })\n\n    it('verify fails if r=0', () => {\n        Assert.isFalse(Secp256k1.ecverify(pubX, pubY, Secp256k1.uint256(0), Secp256k1.uint256(s,16), z))\n    })\n\n    it('verify fails if s=0', () => {\n        Assert.isFalse(Secp256k1.ecverify(pubX, pubY, Secp256k1.uint256(r,16), Secp256k1.uint256(0), z))\n    })\n\n    it('can recover other sig', () => {\n        if (Secp256k1Node) {\n            const sig = Secp256k1Node.sign(B(z), B(d))\n            r = sig.signature.toString('hex').substr(0,64)\n            s = sig.signature.toString('hex').slice(-64)\n            v = sig.recovery\n        }\n        const Q = Secp256k1.ecrecover(v, Secp256k1.uint256(r,16), Secp256k1.uint256(s,16), z)\n        Assert.deepStrictEqual(Q, {x: pubX.toString(16), y: pubY.toString(16)})\n    })\n\n    it('can recover ours', () =>  {\n        const sig = Secp256k1.ecsign(d, z)\n        const Q = Secp256k1.ecrecover(sig.v, Secp256k1.uint256(sig.r,16), Secp256k1.uint256(sig.s,16), z)\n        Assert.deepStrictEqual(Q, {x: pubX.toString(16), y: pubY.toString(16)})\n    })\n\n    it('can recover known sig', () =>  {\n        const Q = Secp256k1.ecrecover(v, Secp256k1.uint256(r,16), Secp256k1.uint256(s,16), z)\n        Assert.deepStrictEqual(Q, {x: pubX.toString(16), y: pubY.toString(16)})\n    })\n\n    it('recover fails if r=0', () => {\n        Assert.throws(() => Secp256k1.ecrecover(v, Secp256k1.uint256(0), Secp256k1.uint256(s,16), z), \"assertion failed: sigr must not be 0\")\n    })\n\n    it('recover fails if s=0', () => {\n        Assert.throws(() => Secp256k1.ecrecover(v, Secp256k1.uint256(r,16), Secp256k1.uint256(0), z), \"assertion failed: sigs must not be 0\")\n    })\n\n    it('recover fails if recId<0', () => {\n        Assert.throws(() => Secp256k1.ecrecover(-1, Secp256k1.uint256(r,16), Secp256k1.uint256(s,16), z), \"assertion failed: recId must be 0..3\")\n    })\n\n    it('recover fails if recId>3', () => {\n        Assert.throws(() => Secp256k1.ecrecover(4, Secp256k1.uint256(r,16), Secp256k1.uint256(s,16), z), \"assertion failed: recId must be 0..3\")\n    })\n})\n"], "filenames": ["package-lock.json", "package.json", "src/secp256k1.js", "test/test.js"], "buggy_code_start_loc": [3, 3, 72, 54], "buggy_code_end_loc": [4, 4, 229, 104], "fixing_code_start_loc": [3, 3, 73, 54], "fixing_code_end_loc": [4, 4, 244, 143], "type": "CWE-347", "message": "The secp256k1-js package before 1.1.0 for Node.js implements ECDSA without required r and s validation, leading to signature forgery.", "other": {"cve": {"id": "CVE-2022-41340", "sourceIdentifier": "cve@mitre.org", "published": "2022-09-24T19:15:08.960", "lastModified": "2022-09-28T15:55:41.803", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The secp256k1-js package before 1.1.0 for Node.js implements ECDSA without required r and s validation, leading to signature forgery."}, {"lang": "es", "value": "El paquete secp256k1-js versiones anteriores a 1.1.0 para Node.js implementa ECDSA sin la comprobaci\u00f3n de r y s requerida, conllevando a una falsificaci\u00f3n de firmas.\n"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-347"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:secp256k1-js_project:secp256k1-js:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "1.1.0", "matchCriteriaId": "F018F199-A11C-4DA8-9B5A-571D1EEA160A"}]}]}], "references": [{"url": "https://github.com/lionello/secp256k1-js/commit/302800f0370b42e360a33774bb808274ac729c2e", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/lionello/secp256k1-js/compare/1.0.1...1.1.0", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/lionello/secp256k1-js/issues/11", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Third Party Advisory"]}, {"url": "https://www.npmjs.com/package/@lionello/secp256k1-js", "source": "cve@mitre.org", "tags": ["Product", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/lionello/secp256k1-js/commit/302800f0370b42e360a33774bb808274ac729c2e"}}