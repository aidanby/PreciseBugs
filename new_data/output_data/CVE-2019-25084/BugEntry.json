{"buggy_code": ["/* globals chrome */\n'use strict';\n\nconst HideFilesOnGitHub = {};\n\nHideFilesOnGitHub.defaults = {\n\tfilesPreview: true,\n\thideRegExp: `\n\t\t^\\\\.\n\t\t^license\n\t\t^cname$\n\t\t^version$\n\t\t^(patents|authors|contributors|acknowledgments|backers)(\\\\.|$)\n\t\t^(issue|pull_request)_template\\\\.md$\n\t\t^(appveyor|circle|codecov)\\\\.yml$\n\t\t^(yarn|Gemfile)\\\\.lock$\n\t\t^package-lock\\\\.json$\n\t\t^npm-shrinkwrap\\\\.json$\n\t\t\\\\.sublime-project$\n\t\t^(tsconfig|typings|tslint|tsfmt)\\\\.json$\n\t\t^coffeelint\\\\.json$\n\t\t^(karma|protractor|sauce).*\\\\.js$\n\t\t^testem(\\\\.[\\\\w-]+)?\\\\.(json|js)$\n\t\t^yuidoc\\\\.json$\n\t\t^stylelint-config\\\\.json$\n\t\t^humans\\\\.txt$\n\t\t^readme\\\\.md$\n\t`.replace(/\\n\\t+/g, '\\n').trim()\n};\n\nHideFilesOnGitHub.storage = {\n\tget: () => new Promise(resolve => {\n\t\tchrome.storage.sync.get(HideFilesOnGitHub.defaults, resolve);\n\t}),\n\tset: object => {\n\t\tchrome.storage.sync.set(object);\n\t}\n};\n", "/* global HideFilesOnGitHub */\n'use strict';\nconst regexField = document.querySelector('#hideRegExp');\nconst errorMessage = document.querySelector('#errorMessage');\nconst delimiters = /^\\/|\\/$/;\n\nrestoreOptions();\ndocument.addEventListener('input', update);\ndocument.addEventListener('change', update);\n\n/* Native validation tooltips don't seem to work */\nfunction setValidity(text = '') {\n\terrorMessage.innerHTML = text;\n\tregexField.setCustomValidity(text); /* Triggers :invalid */\n}\n\nfunction update() {\n\tfor (const line of regexField.value.split('\\n')) {\n\t\t// Don't allow delimiters in RegExp string\n\t\tif (delimiters.test(line)) {\n\t\t\treturn setValidity(`Use <code>${line.replace(/^\\/|\\/$/g, '')}</code> instead of <code>${line}</code>. Slashes are not required.`);\n\t\t}\n\n\t\t// Fully test each RegExp\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-new\n\t\t\tnew RegExp(line);\n\t\t} catch (error) {\n\t\t\treturn setValidity(error.message);\n\t\t}\n\t}\n\n\tsetValidity();\n\tsaveOptions();\n}\n\nfunction saveOptions() {\n\tconst previewField = document.querySelector('[name=\"filesPreview\"]:checked');\n\n\tHideFilesOnGitHub.storage.set({\n\t\tfilesPreview: previewField.value === 'true',\n\t\thideRegExp: regexField.value.trim() || HideFilesOnGitHub.defaults.hideRegExp\n\t});\n}\n\nfunction restoreOptions() {\n\t(async () => {\n\t\tconst items = await HideFilesOnGitHub.storage.get();\n\t\tconst previewField = document.querySelector(`[name=\"filesPreview\"][value=\"${String(items.filesPreview)}\"]`);\n\t\tregexField.value = items.hideRegExp;\n\t\tpreviewField.checked = true;\n\t})();\n}\n"], "fixing_code": ["/* globals chrome */\n'use strict';\n\nconst HideFilesOnGitHub = {};\n\nHideFilesOnGitHub.defaults = {\n\tfilesPreview: true,\n\thideRegExp: `\n\t\t^\\\\.\n\t\t^license\n\t\t^cname$\n\t\t^version$\n\t\t^(patents|authors|contributors|acknowledgments|backers)(\\\\.|$)\n\t\t^(issue|pull_request)_template\\\\.md$\n\t\t^(appveyor|circle|codecov)\\\\.yml$\n\t\t^(yarn|Gemfile)\\\\.lock$\n\t\t^package-lock\\\\.json$\n\t\t^npm-shrinkwrap\\\\.json$\n\t\t\\\\.sublime-project$\n\t\t^(tsconfig|typings|tslint|tsfmt)\\\\.json$\n\t\t^coffeelint\\\\.json$\n\t\t^(karma|protractor|sauce).*\\\\.js$\n\t\t^testem(\\\\.[\\\\w-]+)?\\\\.(json|js)$\n\t\t^yuidoc\\\\.json$\n\t\t^stylelint-config\\\\.json$\n\t\t^humans\\\\.txt$\n\t\t^readme\\\\.md$\n\t`.replace(/\\n\\t+/g, '\\n').trim()\n};\n\nHideFilesOnGitHub.storage = {\n\tget: () => new Promise(resolve => {\n\t\tchrome.storage.sync.get(HideFilesOnGitHub.defaults, resolve);\n\t}),\n\tset: object => {\n\t\tchrome.storage.sync.set(object);\n\t}\n};\n\n// Inlined partial `escape-goat` package\nconst escapeHTML = input => input\n\t.replace(/&/g, '&amp;')\n\t.replace(/\"/g, '&quot;')\n\t.replace(/'/g, '&#39;')\n\t.replace(/</g, '&lt;')\n\t.replace(/>/g, '&gt;');\n\nwindow.escapeTag = (input, ...parts) => {\n\tlet output = input[0];\n\tfor (let i = 0; i < parts.length; i++) {\n\t\toutput = output + escapeHTML(parts[i]) + input[i + 1];\n\t}\n\n\treturn output;\n};\n", "/* global HideFilesOnGitHub, escapeTag */\n'use strict';\nconst regexField = document.querySelector('#hideRegExp');\nconst errorMessage = document.querySelector('#errorMessage');\nconst delimiters = /^\\/|\\/$/;\n\nrestoreOptions();\ndocument.addEventListener('input', update);\ndocument.addEventListener('change', update);\n\n/* Native validation tooltips don't seem to work */\nfunction setValidity(text = '') {\n\terrorMessage.innerHTML = text;\n\tregexField.setCustomValidity(errorMessage.textContent); /* Triggers :invalid */\n}\n\nfunction update() {\n\tfor (const line of regexField.value.split('\\n')) {\n\t\t// Don't allow delimiters in RegExp string\n\t\tif (delimiters.test(line)) {\n\t\t\treturn setValidity(escapeTag`Use <code>${line.replace(/^\\/|\\/$/g, '')}</code> instead of <code>${line}</code>. Slashes are not required.`);\n\t\t}\n\n\t\t// Fully test each RegExp\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-new\n\t\t\tnew RegExp(line);\n\t\t} catch (error) {\n\t\t\treturn setValidity(error.message);\n\t\t}\n\t}\n\n\tsetValidity();\n\tsaveOptions();\n}\n\nfunction saveOptions() {\n\tconst previewField = document.querySelector('[name=\"filesPreview\"]:checked');\n\n\tHideFilesOnGitHub.storage.set({\n\t\tfilesPreview: previewField.value === 'true',\n\t\thideRegExp: regexField.value.trim() || HideFilesOnGitHub.defaults.hideRegExp\n\t});\n}\n\nfunction restoreOptions() {\n\t(async () => {\n\t\tconst items = await HideFilesOnGitHub.storage.get();\n\t\tconst previewField = document.querySelector(`[name=\"filesPreview\"][value=\"${String(items.filesPreview)}\"]`);\n\t\tregexField.value = items.hideRegExp;\n\t\tpreviewField.checked = true;\n\t})();\n}\n"], "filenames": ["extension/api.js", "extension/options.js"], "buggy_code_start_loc": [38, 1], "buggy_code_end_loc": [38, 22], "fixing_code_start_loc": [39, 1], "fixing_code_end_loc": [56, 22], "type": "CWE-79", "message": "A vulnerability, which was classified as problematic, has been found in Hide Files on GitHub up to 2.x. This issue affects the function addEventListener of the file extension/options.js. The manipulation leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.0.0 is able to address this issue. The name of the patch is 9de0c57df81db1178e0e79431d462f6d9842742e. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216767.", "other": {"cve": {"id": "CVE-2019-25084", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-25T18:15:10.363", "lastModified": "2023-01-05T01:45:43.913", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability, which was classified as problematic, has been found in Hide Files on GitHub up to 2.x. This issue affects the function addEventListener of the file extension/options.js. The manipulation leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.0.0 is able to address this issue. The name of the patch is 9de0c57df81db1178e0e79431d462f6d9842742e. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216767."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:hide_files_on_github_project:hide_files_on_github:*:*:*:*:*:chrome:*:*", "versionEndExcluding": "3.0.0", "matchCriteriaId": "3A4E0BE9-5D5C-4A5D-A6D7-DC5AADB7129B"}]}]}], "references": [{"url": "https://github.com/sindresorhus/hide-files-on-github/commit/9de0c57df81db1178e0e79431d462f6d9842742e", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/sindresorhus/hide-files-on-github/pull/73", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/sindresorhus/hide-files-on-github/releases/tag/3.0.0", "source": "cna@vuldb.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.216767", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.216767", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/sindresorhus/hide-files-on-github/commit/9de0c57df81db1178e0e79431d462f6d9842742e"}}