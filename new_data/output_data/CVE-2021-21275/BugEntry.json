{"buggy_code": ["<?php\n\nclass SpecialReport extends SpecialPage {\n\n\tpublic function __construct() {\n\t\tparent::__construct( 'Report' );\n\t}\n\n\tpublic function execute( $par ) {\n\t\t$user = $this->getUser();\n\t\t$out = $this->getOutput();\n\t\t$out->setPageTitle( wfMessage('report-title')->escaped() );\n\t\t$out->addModules( 'ext.report' );\n\t\t$this->checkReadOnly();\n\t\tif ( !$user->isAllowed( 'report' ) ) {\n\t\t\t$out->addHTML(Html::rawElement(\n\t\t\t\t'p',\n\t\t\t\t[ 'class' => 'error' ],\n\t\t\t\twfMessage( 'report-error-missing-perms' )->escaped()\n\t\t\t));\n\t\t\treturn;\n\t\t}\n\t\tif ( $user->isBlocked() ) {\n\t\t\t$out->addHTML(Html::rawElement(\n\t\t\t\t'p', [ 'class' => 'error' ],\n\t\t\t\twfMessage( 'report-error-missing-perms' )->escaped()\n\t\t\t));\n\t\t}\n\t\tif (!ctype_digit( $par )) {\n\t\t\t$out->addHTML(Html::rawElement(\n\t\t\t\t'p',\n\t\t\t\t[ 'class' => 'error' ],\n\t\t\t\twfMessage( 'report-error-invalid-revid', $par )->escaped()\n\t\t\t));\n\t\t\treturn;\n\t\t}\n\t\t$rev = Revision::newFromId( (int)$par );\n\t\tif (!$rev) {\n\t\t\t$out->addHTML(Html::rawElement(\n\t\t\t\t'p',\n\t\t\t\t[ 'class' => 'error' ],\n\t\t\t\twfMessage( 'report-error-invalid-revid', $par )->escaped()\n\t\t\t));\n\t\t\treturn;\n\t\t}\n\t\t$dbr = wfGetDB( DB_REPLICA );\n\t\tif ($dbr->selectRow( 'report_reports', [ 'report_id' ], [\n\t\t\t'report_revid' => $rev->getId(),\n\t\t\t'report_user' => $user->getId()\n\t\t], __METHOD__ )) {\n\t\t\t$out->addHTML(Html::rawElement( 'p', [],\n\t\t\t\twfMessage( 'report-already-reported' )->escaped()\n\t\t\t));\n\t\t\treturn;\n\t\t}\n\t\t$request = $this->getRequest();\n\t\tif ($request->wasPosted()) {\n\t\t\treturn self::onPost( $par, $out, $request );\n\t\t}\n\t\t$out->setIndexPolicy( 'noindex' );\n\t\t$out->addHTML(\n\t\t\tHtml::rawElement(\n\t\t\t\t'p',\n\t\t\t\t[ 'class' => 'mw-report-intro' ],\n\t\t\t\twfMessage( 'report-intro' )\n\t\t\t\t\t->params( $par )\n\t\t\t\t\t->parse()\n\t\t\t)\n\t\t);\n\t\t$out->addHTML(Html::openElement(\n\t\t\t\t'form',\n\t\t\t\t[ 'method' => 'POST' ]\n\t\t));\n\t\t$out->addHTML(Html::rawElement(\n\t\t\t'input',\n\t\t\t[\n\t\t\t\t'type' => 'hidden',\n\t\t\t\t'name' => 'revid',\n\t\t\t\t'id' => 'mw-report-form-revid',\n\t\t\t\t'value' => $par\n\t\t\t]\n\t\t));\n\t\t$out->addHTML(Html::rawElement(\n\t\t\t'textarea',\n\t\t\t[\n\t\t\t\t'name' => 'reason',\n\t\t\t\t'id' => 'mw-report-form-reason'\n\t\t\t]\n\t\t));\n\t\t$out->addHTML(Html::rawElement(\n\t\t\t'input',\n\t\t\t[\n\t\t\t\t'type' => 'submit',\n\t\t\t\t'id' => 'mw-report-form-submit',\n\t\t\t\t'value' => wfMessage( 'report-submit' )\n\t\t\t]\n\t\t));\n\t\t$out->addHTML(Html::closeElement( 'form' ));\n\t}\n\n\tstatic public function onPost( $par, $out, $request ) {\n\t\tglobal $wgUser;\n\t\tif (!$request->getText('reason')) {\n\t\t\t$out->addHTML(Html::rawElement(\n\t\t\t\t'p',\n\t\t\t\t[ 'class' => 'error '],\n\t\t\t\twfMessage( 'report-error-missing-reason' )->escaped()\n\t\t\t));\n\t\t} else {\n\t\t\t$dbw = wfGetDB( DB_MASTER );\n\t\t\t$dbw->startAtomic(__METHOD__);\n\t\t\t$dbw->insert( 'report_reports', [\n\t\t\t\t'report_revid' => (int)$par,\n\t\t\t\t'report_reason' => $request->getText('reason'),\n\t\t\t\t'report_user' => $wgUser->getId(),\n\t\t\t\t'report_user_text' => $wgUser->getName(),\n\t\t\t\t'report_timestamp' => wfTimestampNow()\n\t\t\t], __METHOD__ );\n\t\t\t$dbw->endAtomic(__METHOD__);\n\t\t\t$out->addWikiMsg( 'report-success' );\n\t\t\t$out->addWikiMsg( 'returnto', '[[' . SpecialPage::getTitleFor('Diff', $par)->getPrefixedText() . ']]' );\n\t\t\treturn;\n\t\t}\n\t}\n\n\tpublic function getGroupName() {\n\t\treturn 'wiki';\n\t}\n\n}\n"], "fixing_code": ["<?php\n\nclass SpecialReport extends SpecialPage {\n\n\tpublic function __construct() {\n\t\tparent::__construct( 'Report' );\n\t}\n\n\tpublic function execute( $par ) {\n\t\t$user = $this->getUser();\n\t\t$out = $this->getOutput();\n\t\t$out->setPageTitle( wfMessage('report-title')->escaped() );\n\t\t$out->addModules( 'ext.report' );\n\t\t$this->checkReadOnly();\n\t\tif ( !$user->isAllowed( 'report' ) ) {\n\t\t\t$out->addHTML(Html::rawElement(\n\t\t\t\t'p',\n\t\t\t\t[ 'class' => 'error' ],\n\t\t\t\twfMessage( 'report-error-missing-perms' )->escaped()\n\t\t\t));\n\t\t\treturn;\n\t\t}\n\t\tif ( $user->isBlocked() ) {\n\t\t\t$out->addHTML(Html::rawElement(\n\t\t\t\t'p', [ 'class' => 'error' ],\n\t\t\t\twfMessage( 'report-error-missing-perms' )->escaped()\n\t\t\t));\n\t\t}\n\t\tif (!ctype_digit( $par )) {\n\t\t\t$out->addHTML(Html::rawElement(\n\t\t\t\t'p',\n\t\t\t\t[ 'class' => 'error' ],\n\t\t\t\twfMessage( 'report-error-invalid-revid', $par )->escaped()\n\t\t\t));\n\t\t\treturn;\n\t\t}\n\t\t$rev = Revision::newFromId( (int)$par );\n\t\tif (!$rev) {\n\t\t\t$out->addHTML(Html::rawElement(\n\t\t\t\t'p',\n\t\t\t\t[ 'class' => 'error' ],\n\t\t\t\twfMessage( 'report-error-invalid-revid', $par )->escaped()\n\t\t\t));\n\t\t\treturn;\n\t\t}\n\t\t$dbr = wfGetDB( DB_REPLICA );\n\t\tif ($dbr->selectRow( 'report_reports', [ 'report_id' ], [\n\t\t\t'report_revid' => $rev->getId(),\n\t\t\t'report_user' => $user->getId()\n\t\t], __METHOD__ )) {\n\t\t\t$out->addHTML(Html::rawElement( 'p', [],\n\t\t\t\twfMessage( 'report-already-reported' )->escaped()\n\t\t\t));\n\t\t\treturn;\n\t\t}\n\t\t$request = $this->getRequest();\n\t\tif ($request->wasPosted()) {\n\t\t\treturn self::onPost( $par, $out, $request, $user );\n\t\t}\n\t\t$out->setIndexPolicy( 'noindex' );\n\t\t$out->addHTML(\n\t\t\tHtml::rawElement(\n\t\t\t\t'p',\n\t\t\t\t[ 'class' => 'mw-report-intro' ],\n\t\t\t\twfMessage( 'report-intro' )\n\t\t\t\t\t->params( $par )\n\t\t\t\t\t->parse()\n\t\t\t)\n\t\t);\n\t\t$out->addHTML(Html::openElement(\n\t\t\t\t'form',\n\t\t\t\t[ 'method' => 'POST' ]\n\t\t));\n\t\t$out->addHTML(Html::rawElement(\n\t\t\t'input',\n\t\t\t[\n\t\t\t\t'type' => 'hidden',\n\t\t\t\t'name' => 'revid',\n\t\t\t\t'id' => 'mw-report-form-revid',\n\t\t\t\t'value' => $par\n\t\t\t]\n\t\t));\n\t\t$out->addHTML(Html::rawElement(\n\t\t\t'textarea',\n\t\t\t[\n\t\t\t\t'name' => 'reason',\n\t\t\t\t'id' => 'mw-report-form-reason'\n\t\t\t]\n\t\t));\n\t\t$out->addHTML(Html::rawElement(\n\t\t\t'input',\n\t\t\t[\n\t\t\t\t'type' => 'hidden',\n\t\t\t\t'name' => 'token',\n\t\t\t\t'value' => $user->getEditToken()\n\t\t\t]\n\t\t));\n\t\t$out->addHTML(Html::rawElement(\n\t\t\t'input',\n\t\t\t[\n\t\t\t\t'type' => 'submit',\n\t\t\t\t'id' => 'mw-report-form-submit',\n\t\t\t\t'value' => wfMessage( 'report-submit' )\n\t\t\t]\n\t\t));\n\t\t$out->addHTML(Html::closeElement( 'form' ));\n\t}\n\n\tstatic public function onPost( $par, $out, $request, $user ) {\n\t\tif (!$user->matchEditToken($request->getText( 'token' ))) {\n\t\t\t$out->addWikiMsg( 'sessionfailure' );\n\t\t\treturn;\n\t\t}\n\t\tif (!$request->getText('reason')) {\n\t\t\t$out->addHTML(Html::rawElement(\n\t\t\t\t'p',\n\t\t\t\t[ 'class' => 'error '],\n\t\t\t\twfMessage( 'report-error-missing-reason' )->escaped()\n\t\t\t));\n\t\t\treturn;\n\t\t}\n\t\t$dbw = wfGetDB( DB_MASTER );\n\t\t$dbw->startAtomic(__METHOD__);\n\t\t$dbw->insert( 'report_reports', [\n\t\t\t'report_revid' => (int)$par,\n\t\t\t'report_reason' => $request->getText('reason'),\n\t\t\t'report_user' => $user->getId(),\n\t\t\t'report_user_text' => $user->getName(),\n\t\t\t'report_timestamp' => wfTimestampNow()\n\t\t], __METHOD__ );\n\t\t$dbw->endAtomic(__METHOD__);\n\t\t$out->addWikiMsg( 'report-success' );\n\t\t$out->addWikiMsg( 'returnto', '[[' . SpecialPage::getTitleFor('Diff', $par)->getPrefixedText() . ']]' );\n\t}\n\n\tpublic function getGroupName() {\n\t\treturn 'wiki';\n\t}\n\n}\n"], "filenames": ["SpecialReport.php"], "buggy_code_start_loc": [58], "buggy_code_end_loc": [123], "fixing_code_start_loc": [58], "fixing_code_end_loc": [134], "type": "CWE-352", "message": "The MediaWiki \"Report\" extension has a Cross-Site Request Forgery (CSRF) vulnerability. Before fixed version, there was no protection against CSRF checks on Special:Report, so requests to report a revision could be forged. The problem has been fixed in commit f828dc6 by making use of MediaWiki edit tokens.", "other": {"cve": {"id": "CVE-2021-21275", "sourceIdentifier": "security-advisories@github.com", "published": "2021-01-25T23:15:11.887", "lastModified": "2022-04-26T14:45:10.577", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The MediaWiki \"Report\" extension has a Cross-Site Request Forgery (CSRF) vulnerability. Before fixed version, there was no protection against CSRF checks on Special:Report, so requests to report a revision could be forged. The problem has been fixed in commit f828dc6 by making use of MediaWiki edit tokens."}, {"lang": "es", "value": "La extensi\u00f3n \"Report\" de MediaWiki presenta una vulnerabilidad de tipo Cross-Site Request Forgery (CSRF). Antes de la versi\u00f3n corregida, no hab\u00eda protecci\u00f3n contra las comprobaciones de CSRF en Special:Report, por lo que las peticiones para reportar una revisi\u00f3n podr\u00edan ser falsificadas. El problema ha sido corregido en el commit f828dc6 al hacer uso de los tokens de edici\u00f3n de MediaWiki"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:report_project:report:*:*:*:*:*:mediawiki:*:*", "versionEndExcluding": "2021-01-21", "matchCriteriaId": "E3403B6D-74B4-4DCB-ACE0-11BE197602A4"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:oracle:communications_cloud_native_core_network_slice_selection_function:1.2.1:*:*:*:*:*:*:*", "matchCriteriaId": "ADE6EF8F-1F05-429B-A916-76FDB20CEB81"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:communications_pricing_design_center:12.0.0.4.0:*:*:*:*:*:*:*", "matchCriteriaId": "A28F42F0-FBDA-4574-AD30-7A04F27FEA3E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:communications_pricing_design_center:12.0.0.5.0:*:*:*:*:*:*:*", "matchCriteriaId": "129CA55C-C770-4D42-BD17-9011F3AC93C4"}]}]}], "references": [{"url": "https://github.com/Kenny2github/Report/commit/f828dc6f73cdfaea5639edbf8ac7b326eeefb117", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/Kenny2github/Report/security/advisories/GHSA-9f3w-c334-jm2h", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.oracle.com//security-alerts/cpujul2021.html", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://www.oracle.com/security-alerts/cpuapr2022.html", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Kenny2github/Report/commit/f828dc6f73cdfaea5639edbf8ac7b326eeefb117"}}