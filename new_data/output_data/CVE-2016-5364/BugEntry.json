{"buggy_code": ["<?php\n# MantisBT - A PHP based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * HTML API\n *\n * These functions control the HTML output of each page.\n *\n * This is the call order of these functions, should you need to figure out\n * which to modify or which to leave out:\n *\n * html_page_top\n *   html_page_top1\n *     html_begin\n *     html_head_begin\n *     html_content_type\n *     (Additional META tags: {@see $g_meta_include_file} and {@see robots_meta config})\n *     html_title\n *     html_css\n *     html_rss_link\n *     html_head_javascript\n *   (html_meta_redirect)\n *   html_page_top2\n *     html_page_top2a\n *       html_head_end\n *       html_body_begin\n *       html_top_banner\n *     html_login_info\n *     (print_project_menu_bar)\n *     print_menu\n *\n * ...Page content here...\n *\n * html_page_bottom\n *   html_page_bottom1\n *     (print_menu)\n *     html_page_bottom1a\n *       html_bottom_banner\n *       html_footer\n *       html_body_end\n *       html_end\n *\n * @package CoreAPI\n * @subpackage HTMLAPI\n * @copyright Copyright 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n * @copyright Copyright 2002  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n * @link http://www.mantisbt.org\n *\n * @uses access_api.php\n * @uses authentication_api.php\n * @uses bug_api.php\n * @uses config_api.php\n * @uses constant_inc.php\n * @uses current_user_api.php\n * @uses database_api.php\n * @uses error_api.php\n * @uses event_api.php\n * @uses file_api.php\n * @uses filter_api.php\n * @uses filter_constants_inc.php\n * @uses form_api.php\n * @uses helper_api.php\n * @uses lang_api.php\n * @uses news_api.php\n * @uses php_api.php\n * @uses print_api.php\n * @uses project_api.php\n * @uses rss_api.php\n * @uses string_api.php\n * @uses user_api.php\n * @uses utility_api.php\n */\n\nrequire_api( 'access_api.php' );\nrequire_api( 'authentication_api.php' );\nrequire_api( 'bug_api.php' );\nrequire_api( 'config_api.php' );\nrequire_api( 'constant_inc.php' );\nrequire_api( 'current_user_api.php' );\nrequire_api( 'database_api.php' );\nrequire_api( 'error_api.php' );\nrequire_api( 'event_api.php' );\nrequire_api( 'file_api.php' );\nrequire_api( 'filter_api.php' );\nrequire_api( 'filter_constants_inc.php' );\nrequire_api( 'form_api.php' );\nrequire_api( 'helper_api.php' );\nrequire_api( 'lang_api.php' );\nrequire_api( 'news_api.php' );\nrequire_api( 'php_api.php' );\nrequire_api( 'print_api.php' );\nrequire_api( 'project_api.php' );\nrequire_api( 'rss_api.php' );\nrequire_api( 'string_api.php' );\nrequire_api( 'user_api.php' );\nrequire_api( 'utility_api.php' );\n\n$g_rss_feed_url = null;\n\n$g_robots_meta = '';\n\n# flag for error handler to skip header menus\n$g_error_send_page_header = true;\n\n$g_stylesheets_included = array();\n$g_scripts_included = array();\n\n/**\n * Sets the url for the rss link associated with the current page.\n * null: means no feed (default).\n * @param string $p_rss_feed_url RSS feed URL.\n * @return void\n */\nfunction html_set_rss_link( $p_rss_feed_url ) {\n\tif( OFF != config_get( 'rss_enabled' ) ) {\n\t\tglobal $g_rss_feed_url;\n\t\t$g_rss_feed_url = $p_rss_feed_url;\n\t}\n}\n\n/**\n * This method must be called before the html_page_top* methods.  It marks the page as not\n * for indexing.\n * @return void\n */\nfunction html_robots_noindex() {\n\tglobal $g_robots_meta;\n\t$g_robots_meta = 'noindex,follow';\n}\n\n/**\n * Prints the link that allows auto-detection of the associated feed.\n * @return void\n */\nfunction html_rss_link() {\n\tglobal $g_rss_feed_url;\n\n\tif( $g_rss_feed_url !== null ) {\n\t\techo '<link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS\" href=\"' . string_attribute( $g_rss_feed_url ) . '\" />' . \"\\n\";\n\t}\n}\n\n/**\n * Prints a <script> tag to include a JavaScript file.\n * @param string $p_filename Name of JavaScript file (with extension) to include.\n * @return void\n */\nfunction html_javascript_link( $p_filename ) {\n\techo \"\\t\", '<script type=\"text/javascript\" src=\"', helper_mantis_url( 'js/' . $p_filename ), '\"></script>' . \"\\n\";\n}\n\n/**\n * Defines the top of a HTML page\n * @param string $p_page_title   Html page title.\n * @param string $p_redirect_url URL to redirect to if necessary.\n * @return void\n */\nfunction html_page_top( $p_page_title = null, $p_redirect_url = null ) {\n\thtml_page_top1( $p_page_title );\n\tif( $p_redirect_url !== null ) {\n\t\thtml_meta_redirect( $p_redirect_url );\n\t}\n\thtml_page_top2();\n}\n\n/**\n * Print the part of the page that comes before meta redirect tags should be inserted\n * @param string $p_page_title Page title.\n * @return void\n */\nfunction html_page_top1( $p_page_title = null ) {\n\thtml_begin();\n\thtml_head_begin();\n\n\thtml_content_type();\n\t$t_meta = config_get_global( 'meta_include_file' );\n\tif( !is_blank( $t_meta ) ) {\n\t\tinclude( $t_meta );\n\t}\n\tglobal $g_robots_meta;\n\tif( !is_blank( $g_robots_meta ) ) {\n\t\techo \"\\t\", '<meta name=\"robots\" content=\"', $g_robots_meta, '\" />', \"\\n\";\n\t}\n\n\thtml_title( $p_page_title );\n\thtml_css();\n\thtml_rss_link();\n\n\t$t_favicon_image = config_get( 'favicon_image' );\n\tif( !is_blank( $t_favicon_image ) ) {\n\t\techo \"\\t\", '<link rel=\"shortcut icon\" href=\"', helper_mantis_url( $t_favicon_image ), '\" type=\"image/x-icon\" />', \"\\n\";\n\t}\n\n\t# Advertise the availability of the browser search plug-ins.\n\techo \"\\t\", '<link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"MantisBT: Text Search\" href=\"' . string_sanitize_url( 'browser_search_plugin.php?type=text', true ) . '\" />' . \"\\n\";\n\techo \"\\t\", '<link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"MantisBT: Issue Id\" href=\"' . string_sanitize_url( 'browser_search_plugin.php?type=id', true ) . '\" />' . \"\\n\";\n\n\thtml_head_javascript();\n}\n\n/**\n * Print the part of the page that comes after meta tags, but before the actual page content\n * @return void\n */\nfunction html_page_top2() {\n\thtml_page_top2a();\n\n\tif( !db_is_connected() ) {\n\t\treturn;\n\t}\n\n\tif( auth_is_user_authenticated() ) {\n\t\thtml_login_info();\n\n\t\tif( ON == config_get( 'show_project_menu_bar' ) ) {\n\t\t\tprint_project_menu_bar();\n\t\t\techo '<br />';\n\t\t}\n\t}\n\tprint_menu();\n\techo '<div id=\"content\">', \"\\n\";\n\tevent_signal( 'EVENT_LAYOUT_CONTENT_BEGIN' );\n}\n\n/**\n * Print the part of the page that comes after meta tags and before the\n *  actual page content, but without login info or menus.  This is used\n *  directly during the login process and other times when the user may\n *  not be authenticated\n * @return void\n */\nfunction html_page_top2a() {\n\tglobal $g_error_send_page_header;\n\n\thtml_head_end();\n\thtml_body_begin();\n\t$g_error_send_page_header = false;\n\thtml_top_banner();\n}\n\n/**\n * Print the part of the page that comes below the page content\n * $p_file should always be the __FILE__ variable. This is passed to show source\n * @param string $p_file Should always be the __FILE__ variable. This is passed to show source.\n * @return void\n */\nfunction html_page_bottom( $p_file = null ) {\n\thtml_page_bottom1( $p_file );\n}\n\n/**\n * Print the part of the page that comes below the page content\n * $p_file should always be the __FILE__ variable. This is passed to show source\n * @param string $p_file Should always be the __FILE__ variable. This is passed to show source.\n * @return void\n */\nfunction html_page_bottom1( $p_file = null ) {\n\tif( !db_is_connected() ) {\n\t\treturn;\n\t}\n\n\tevent_signal( 'EVENT_LAYOUT_CONTENT_END' );\n\techo '</div>', \"\\n\";\n\tif( config_get( 'show_footer_menu' ) ) {\n\t\techo '<br />';\n\t\tprint_menu();\n\t}\n\n\thtml_page_bottom1a( $p_file );\n}\n\n/**\n * Print the part of the page that comes below the page content but leave off\n * the menu.  This is used during the login process and other times when the\n * user may not be authenticated.\n * @param string $p_file Should always be the __FILE__ variable.\n * @return void\n */\nfunction html_page_bottom1a( $p_file = null ) {\n\tif( null === $p_file ) {\n\t\t$p_file = basename( $_SERVER['SCRIPT_NAME'] );\n\t}\n\n\terror_print_delayed();\n\n\thtml_bottom_banner();\n\thtml_footer();\n\thtml_body_end();\n\thtml_end();\n}\n\n/**\n * (1) Print the document type and the opening <html> tag\n * @return void\n */\nfunction html_begin() {\n\techo '<!DOCTYPE html>', \"\\n\";\n\techo '<html>', \"\\n\";\n}\n\n/**\n * (2) Begin the <head> section\n * @return void\n */\nfunction html_head_begin() {\n\techo '<head>', \"\\n\";\n}\n\n/**\n * (3) Print the content-type\n * @return void\n */\nfunction html_content_type() {\n\techo \"\\t\", '<meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />', \"\\n\";\n}\n\n/**\n * (4) Print the window title\n * @param string $p_page_title Window title.\n * @return void\n */\nfunction html_title( $p_page_title = null ) {\n\t$t_page_title = string_html_specialchars( $p_page_title );\n\t$t_title = string_html_specialchars( config_get( 'window_title' ) );\n\techo \"\\t\", '<title>';\n\tif( empty( $t_page_title ) ) {\n\t\techo $t_title;\n\t} else {\n\t\tif( empty( $t_title ) ) {\n\t\t\techo $t_page_title;\n\t\t} else {\n\t\t\techo $t_page_title . ' - ' . $t_title;\n\t\t}\n\t}\n\techo '</title>', \"\\n\";\n}\n\n/**\n * Require a CSS file to be in html page headers\n * @param string $p_stylesheet_path Path to CSS style sheet.\n * @return void\n */\nfunction require_css( $p_stylesheet_path ) {\n\tglobal $g_stylesheets_included;\n\t$g_stylesheets_included[$p_stylesheet_path] = $p_stylesheet_path;\n}\n\n/**\n * (5) Print the link to include the CSS file\n * @return void\n */\nfunction html_css() {\n\tglobal $g_stylesheets_included;\n\thtml_css_link( config_get( 'css_include_file' ) );\n\n\tif ( config_get_global( 'cdn_enabled' ) == ON ) {\n\t\techo '<link rel=\"stylesheet\" href=\"https://ajax.googleapis.com/ajax/libs/jqueryui/' . JQUERY_UI_VERSION . '/themes/smoothness/jquery-ui.css\">' . \"\\n\";\n\t} else {\n\t\thtml_css_link( 'jquery-ui-' . JQUERY_UI_VERSION . '.min.css' );\n\t}\n\n\thtml_css_link( 'common_config.php' );\n\t# Add right-to-left css if needed\n\tif( lang_get( 'directionality' ) == 'rtl' ) {\n\t\thtml_css_link( config_get( 'css_rtl_include_file' ) );\n\t}\n\tforeach( $g_stylesheets_included as $t_stylesheet_path ) {\n\t\thtml_css_link( $t_stylesheet_path );\n\t}\n}\n\n/**\n * Prints a CSS link\n * @param string $p_filename Filename.\n * @return void\n */\nfunction html_css_link( $p_filename ) {\n\techo \"\\t\", '<link rel=\"stylesheet\" type=\"text/css\" href=\"', string_sanitize_url( helper_mantis_url( 'css/' . $p_filename ), true ), '\" />' . \"\\n\";\n}\n\n\n/**\n * (6) Print an HTML meta tag to redirect to another page\n * This function is optional and may be called by pages that need a redirect.\n * $p_time is the number of seconds to wait before redirecting.\n * If we have handled any errors on this page return false and don't redirect.\n *\n * @param string  $p_url      The page to redirect: has to be a relative path.\n * @param integer $p_time     Seconds to wait for before redirecting.\n * @param boolean $p_sanitize Apply string_sanitize_url to passed URL.\n * @return boolean\n */\nfunction html_meta_redirect( $p_url, $p_time = null, $p_sanitize = true ) {\n\tif( ON == config_get_global( 'stop_on_errors' ) && error_handled() ) {\n\t\treturn false;\n\t}\n\n\tif( null === $p_time ) {\n\t\t$p_time = current_user_get_pref( 'redirect_delay' );\n\t}\n\n\t$t_url = config_get( 'path' );\n\tif( $p_sanitize ) {\n\t\t$t_url .= string_sanitize_url( $p_url );\n\t} else {\n\t\t$t_url .= $p_url;\n\t}\n\n\t$t_url = htmlspecialchars( $t_url );\n\n\techo \"\\t\" . '<meta http-equiv=\"Refresh\" content=\"' . $p_time . ';URL=' . $t_url . '\" />' . \"\\n\";\n\n\treturn true;\n}\n\n/**\n * Require a javascript file to be in html page headers\n * @param string $p_script_path Path to javascript file.\n * @return void\n */\nfunction require_js( $p_script_path ) {\n\tglobal $g_scripts_included;\n\t$g_scripts_included[$p_script_path] = $p_script_path;\n}\n\n/**\n * (6a) Javascript...\n * @return void\n */\nfunction html_head_javascript() {\n\tglobal $g_scripts_included;\n\n\techo \"\\t\" . '<script type=\"text/javascript\" src=\"' . helper_mantis_url( 'javascript_config.php' ) . '\"></script>' . \"\\n\";\n\techo \"\\t\" . '<script type=\"text/javascript\" src=\"' . helper_mantis_url( 'javascript_translations.php' ) . '\"></script>' . \"\\n\";\n\n\tif ( config_get_global( 'cdn_enabled' ) == ON ) {\n\t\techo \"\\t\" . '<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/' . JQUERY_VERSION . '/jquery.min.js\"></script>' . \"\\n\";\n\t\techo \"\\t\" . '<script src=\"https://ajax.googleapis.com/ajax/libs/jqueryui/' . JQUERY_UI_VERSION . '/jquery-ui.min.js\"></script>' . \"\\n\";\n\t} else {\n\t\thtml_javascript_link( 'jquery-' . JQUERY_VERSION . '.min.js' );\n\t\thtml_javascript_link( 'jquery-ui-' . JQUERY_UI_VERSION . '.min.js' );\n\t}\n\n\thtml_javascript_link( 'common.js' );\n\tforeach ( $g_scripts_included as $t_script_path ) {\n\t\thtml_javascript_link( $t_script_path );\n\t}\n}\n\n/**\n * (7) End the <head> section\n * @return void\n */\nfunction html_head_end() {\n\tevent_signal( 'EVENT_LAYOUT_RESOURCES' );\n\n\techo '</head>', \"\\n\";\n}\n\n/**\n * (8) Begin the <body> section\n * @return void\n */\nfunction html_body_begin() {\n\t$t_centered_page = is_page_name( 'login_page' ) || is_page_name( 'signup_page' ) || is_page_name( 'signup' ) || is_page_name( 'lost_pwd_page' );\n\n\techo '<body>', \"\\n\";\n\n\tif( $t_centered_page ) {\n\t\techo '<div id=\"mantis\" class=\"centered_page\">', \"\\n\";\n\t} else {\n\t\techo '<div id=\"mantis\">', \"\\n\";\n\t}\n\n\tevent_signal( 'EVENT_LAYOUT_BODY_BEGIN' );\n}\n\n/**\n * (9) Print a user-defined banner at the top of the page if there is one.\n * @return void\n */\nfunction html_top_banner() {\n\t$t_page = config_get( 'top_include_page' );\n\t$t_logo_image = config_get( 'logo_image' );\n\t$t_logo_url = config_get( 'logo_url' );\n\n\tif( is_blank( $t_logo_image ) ) {\n\t\t$t_show_logo = false;\n\t} else {\n\t\t$t_show_logo = true;\n\t\tif( is_blank( $t_logo_url ) ) {\n\t\t\t$t_show_url = false;\n\t\t} else {\n\t\t\t$t_show_url = true;\n\t\t}\n\t}\n\n\tif( !is_blank( $t_page ) && file_exists( $t_page ) && !is_dir( $t_page ) ) {\n\t\tinclude( $t_page );\n\t} else if( $t_show_logo ) {\n\t\techo '<div id=\"banner\">';\n\t\tif( $t_show_url ) {\n\t\t\techo '<a id=\"logo-link\" href=\"', config_get( 'logo_url' ), '\">';\n\t\t}\n\t\t$t_alternate_text = string_html_specialchars( config_get( 'window_title' ) );\n\t\techo '<img id=\"logo-image\" alt=\"', $t_alternate_text, '\" src=\"' . helper_mantis_url( $t_logo_image ) . '\" />';\n\t\tif( $t_show_url ) {\n\t\t\techo '</a>';\n\t\t}\n\t\techo '</div>';\n\t}\n\n\tevent_signal( 'EVENT_LAYOUT_PAGE_HEADER' );\n}\n\n/**\n * (10) Print the user's account information\n * Also print the select box where users can switch projects\n * @return void\n */\nfunction html_login_info() {\n\t$t_username = current_user_get_field( 'username' );\n\t$t_access_level = get_enum_element( 'access_levels', current_user_get_access_level() );\n\t$t_now = date( config_get( 'complete_date_format' ) );\n\t$t_realname = current_user_get_field( 'realname' );\n\n\techo '<div class=\"info-bar\">' . \"\\n\";\n\n\t# Login information\n\techo '<div id=\"login-info\">' . \"\\n\";\n\tif( current_user_is_anonymous() ) {\n\t\t$t_return_page = $_SERVER['SCRIPT_NAME'];\n\t\tif( isset( $_SERVER['QUERY_STRING'] ) ) {\n\t\t\t$t_return_page .= '?' . $_SERVER['QUERY_STRING'];\n\t\t}\n\n\t\t$t_return_page = string_url( $t_return_page );\n\n\t\techo \"\\t\" . '<span id=\"logged-anon-label\">' . lang_get( 'anonymous' ) . '</span>' . \"\\n\";\n\t\techo \"\\t\" . '<span id=\"login-link\"><a href=\"' . helper_mantis_url( 'login_page.php?return=' . $t_return_page ) . '\">' . lang_get( 'login_link' ) . '</a></span>' . \"\\n\";\n\t\tif( config_get_global( 'allow_signup' ) == ON ) {\n\t\t\techo \"\\t\" . '<span id=\"signup-link\"><a href=\"' . helper_mantis_url( 'signup_page.php' ) . '\">' . lang_get( 'signup_link' ) . '</a></span>' . \"\\n\";\n\t\t}\n\t} else {\n\t\techo \"\\t\" . '<span id=\"logged-in-label\">' . lang_get( 'logged_in_as' ) . '</span>' . \"\\n\";\n\t\techo \"\\t\" . '<span id=\"logged-in-user\">' . string_html_specialchars( $t_username ) . '</span>' . \"\\n\";\n\t\techo \"\\t\" . '<span id=\"logged-in\">';\n\t\techo !is_blank( $t_realname ) ?  \"\\t\" . '<span id=\"logged-in-realname\">' . string_html_specialchars( $t_realname ) . '</span>' . \"\\n\" : '';\n\t\techo \"\\t\" . '<span id=\"logged-in-accesslevel\" class=\"' . $t_access_level . '\">' . $t_access_level . '</span>' . \"\\n\";\n\t\techo \"\\t\" . '</span>' . \"\\n\";\n\t}\n\techo '</div>' . \"\\n\";\n\n\t# RSS feed\n\tif( OFF != config_get( 'rss_enabled' ) ) {\n\t\techo '<div id=\"rss-feed\">' . \"\\n\";\n\t\t# Link to RSS issues feed for the selected project, including authentication details.\n\t\techo \"\\t\" . '<a href=\"' . htmlspecialchars( rss_get_issues_feed_url() ) . '\">' . \"\\n\";\n\t\techo \"\\t\" . '<img src=\"' . helper_mantis_url( 'images/rss.png' ) . '\" alt=\"' . lang_get( 'rss' ) . '\" title=\"' . lang_get( 'rss' ) . '\" />' . \"\\n\";\n\t\techo \"\\t\" . '</a>' . \"\\n\";\n\t\techo '</div>' . \"\\n\";\n\t}\n\n\t# Project Selector (hidden if only one project visisble to user)\n\t$t_show_project_selector = true;\n\t$t_project_ids = current_user_get_accessible_projects();\n\tif( count( $t_project_ids ) == 1 ) {\n\t\t$t_project_id = (int)$t_project_ids[0];\n\t\tif( count( current_user_get_accessible_subprojects( $t_project_id ) ) == 0 ) {\n\t\t\t$t_show_project_selector = false;\n\t\t}\n\t}\n\n\tif( $t_show_project_selector ) {\n\t\techo '<div id=\"project-selector-div\">';\n\t\techo '<form method=\"post\" id=\"form-set-project\" action=\"' . helper_mantis_url( 'set_project.php' ) . '\">';\n\t\techo '<fieldset id=\"project-selector\">';\n\t\t# CSRF protection not required here - form does not result in modifications\n\n\t\techo '<label for=\"form-set-project-id\">' . lang_get( 'email_project' ) . '</label>';\n\t\techo '<select id=\"form-set-project-id\" name=\"project_id\">';\n\t\tprint_project_option_list( join( ';', helper_get_current_project_trace() ), true, null, true );\n\t\techo '</select> ';\n\t\techo '<input type=\"submit\" class=\"button\" value=\"' . lang_get( 'switch' ) . '\" />';\n\t\techo '</fieldset>';\n\t\techo '</form>';\n\t\techo '</div>';\n\t} else {\n\t\t# User has only one project, set it as both current and default\n\t\tif( ALL_PROJECTS == helper_get_current_project() ) {\n\t\t\thelper_set_current_project( $t_project_id );\n\n\t\t\tif( !current_user_is_protected() ) {\n\t\t\t\tcurrent_user_set_default_project( $t_project_id );\n\t\t\t}\n\n\t\t\t# Force reload of current page, except if we got here after\n\t\t\t# creating the first project\n\t\t\t$t_redirect_url = str_replace( config_get( 'short_path' ), '', $_SERVER['REQUEST_URI'] );\n\t\t\tif( 'manage_proj_create.php' != $t_redirect_url ) {\n\t\t\t\thtml_meta_redirect( $t_redirect_url, 0, false );\n\t\t\t}\n\t\t}\n\t}\n\n\t# Current time\n\techo '<div id=\"current-time\">' . $t_now . '</div>';\n\techo '</div>' . \"\\n\";\n}\n\n/**\n * (11) Print a user-defined banner at the bottom of the page if there is one.\n * @return void\n */\nfunction html_bottom_banner() {\n\t$t_page = config_get( 'bottom_include_page' );\n\n\tif( !is_blank( $t_page ) && file_exists( $t_page ) && !is_dir( $t_page ) ) {\n\t\tinclude( $t_page );\n\t}\n}\n\n/**\n * A function that outputs that an operation was successful and provides a redirect link.\n * @param string $p_redirect_url The url to redirect to.\n * @param string $p_message      Message to display to the user.\n * @return void\n */\nfunction html_operation_successful( $p_redirect_url, $p_message = '' ) {\n\techo '<div class=\"success-msg\">';\n\n\tif( !is_blank( $p_message ) ) {\n\t\techo $p_message . '<br />';\n\t}\n\n\techo lang_get( 'operation_successful' ).'<br />';\n\tprint_bracket_link( $p_redirect_url, lang_get( 'proceed' ) );\n\techo '</div>';\n}\n\n/**\n * Checks if the current page load was triggered by auto-refresh or real activity\n * @return bool true: auto-refresh, false: triggered by user.\n */\nfunction html_is_auto_refresh() {\n\treturn gpc_get_bool( 'refresh' );\n}\n\n/**\n * (13) Print the page footer information\n * @return void\n */\nfunction html_footer() {\n\tglobal $g_queries_array, $g_request_time;\n\n\t# If a user is logged in, update their last visit time.\n\t# We do this at the end of the page so that:\n\t#  1) we can display the user's last visit time on a page before updating it\n\t#  2) we don't invalidate the user cache immediately after fetching it\n\t#  3) don't do this on the password verification or update page, as it causes the\n\t#    verification comparison to fail\n\t#  4) don't do that on pages that auto-refresh (View Issues page).\n\tif( auth_is_user_authenticated() &&\n\t\t!current_user_is_anonymous() &&\n\t\t!( is_page_name( 'verify.php' ) || is_page_name( 'account_update.php' ) ) &&\n\t\t!html_is_auto_refresh() ) {\n\t\t$t_user_id = auth_get_current_user_id();\n\t\tuser_update_last_visit( $t_user_id );\n\t}\n\n\techo '<div id=\"footer\">' . \"\\n\";\n\techo '<hr />' . \"\\n\";\n\n\t# We don't have a button anymore, so for now we will only show the resized\n\t# version of the logo when not on login page.\n\tif( !is_page_name( 'login_page' ) ) {\n\t\techo \"\\t\" . '<div id=\"powered-by-mantisbt-logo\">' . \"\\n\";\n\t\t$t_mantisbt_logo_url = helper_mantis_url( 'images/mantis_logo.png' );\n\t\techo \"\\t\\t\" . '<a href=\"http://www.mantisbt.org\"\n\t\t\ttitle=\"Mantis Bug Tracker: a free and open source web based bug tracking system.\">\n\t\t\t<img src=\"' . $t_mantisbt_logo_url . '\" width=\"102\" height=\"35\"\n\t\t\t\talt=\"Powered by Mantis Bug Tracker: a free and open source web based bug tracking system.\" />\n\t\t\t</a>' . \"\\n\";\n\t\techo \"\\t\" . '</div>' . \"\\n\";\n\t}\n\n\t# Show MantisBT version and copyright statement\n\t$t_version_suffix = '';\n\t$t_copyright_years = ' 2000 - ' . date( 'Y' );\n\tif( config_get( 'show_version' ) == ON ) {\n\t\t$t_version_suffix = ' ' . htmlentities( MANTIS_VERSION . config_get_global( 'version_suffix' ) );\n\t}\n\n\techo '<address id=\"mantisbt-copyright\">' . \"\\n\";\n\techo '<address id=\"version\">Powered by <a href=\"http://www.mantisbt.org\" title=\"bug tracking software\">MantisBT ' . $t_version_suffix . \"</a></address>\\n\";\n\techo 'Copyright &copy;' . $t_copyright_years . ' MantisBT Team';\n\n\t# Show optional user-specified custom copyright statement\n\t$t_copyright_statement = config_get( 'copyright_statement' );\n\tif( $t_copyright_statement ) {\n\t\techo \"\\t\" . '<address id=\"user-copyright\">' . $t_copyright_statement . '</address>' . \"\\n\";\n\t}\n\n\techo '</address>' . \"\\n\";\n\n\t# Show contact information\n\tif( !is_page_name( 'login_page' ) ) {\n\t\t$t_webmaster_email = config_get( 'webmaster_email' );\n\t\tif( !is_blank( $t_webmaster_email ) ) {\n\t\t\t$t_webmaster_contact_information = sprintf( lang_get( 'webmaster_contact_information' ), string_html_specialchars( $t_webmaster_email ) );\n\t\t\techo \"\\t\" . '<address id=\"webmaster-contact-information\">' . $t_webmaster_contact_information . '</address>' . \"\\n\";\n\t\t}\n\t}\n\n\tevent_signal( 'EVENT_LAYOUT_PAGE_FOOTER' );\n\n\t# Print horizontal rule if any debugging statistics follow\n\tif( config_get( 'show_timer' ) || config_get( 'show_memory_usage' ) || config_get( 'show_queries_count' ) ) {\n\t\techo \"\\t\" . '<hr />' . \"\\n\";\n\t}\n\n\t# Print the page execution time\n\tif( config_get( 'show_timer' ) ) {\n\t\t$t_page_execution_time = sprintf( lang_get( 'page_execution_time' ), number_format( microtime( true ) - $g_request_time, 4 ) );\n\t\techo \"\\t\" . '<p id=\"page-execution-time\">' . $t_page_execution_time . '</p>' . \"\\n\";\n\t}\n\n\t# Print the page memory usage\n\tif( config_get( 'show_memory_usage' ) ) {\n\t\t$t_page_memory_usage = sprintf( lang_get( 'memory_usage_in_kb' ), number_format( memory_get_peak_usage() / 1024 ) );\n\t\techo \"\\t\" . '<p id=\"page-memory-usage\">' . $t_page_memory_usage . '</p>' . \"\\n\";\n\t}\n\n\t# Determine number of unique queries executed\n\tif( config_get( 'show_queries_count' ) ) {\n\t\t$t_total_queries_count = count( $g_queries_array );\n\t\t$t_unique_queries_count = 0;\n\t\t$t_total_query_execution_time = 0;\n\t\t$t_unique_queries = array();\n\t\tfor( $i = 0; $i < $t_total_queries_count; $i++ ) {\n\t\t\tif( !in_array( $g_queries_array[$i][0], $t_unique_queries ) ) {\n\t\t\t\t$t_unique_queries_count++;\n\t\t\t\t$g_queries_array[$i][3] = false;\n\t\t\t\tarray_push( $t_unique_queries, $g_queries_array[$i][0] );\n\t\t\t} else {\n\t\t\t\t$g_queries_array[$i][3] = true;\n\t\t\t}\n\t\t\t$t_total_query_execution_time += $g_queries_array[$i][1];\n\t\t}\n\n\t\t$t_total_queries_executed = sprintf( lang_get( 'total_queries_executed' ), $t_total_queries_count );\n\t\techo \"\\t\" . '<p id=\"total-queries-count\">' . $t_total_queries_executed . '</p>' . \"\\n\";\n\t\tif( config_get_global( 'db_log_queries' ) ) {\n\t\t\t$t_unique_queries_executed = sprintf( lang_get( 'unique_queries_executed' ), $t_unique_queries_count );\n\t\t\techo \"\\t\" . '<p id=\"unique-queries-count\">' . $t_unique_queries_executed . '</p>' . \"\\n\";\n\t\t}\n\t\t$t_total_query_time = sprintf( lang_get( 'total_query_execution_time' ), $t_total_query_execution_time );\n\t\techo \"\\t\" . '<p id=\"total-query-execution-time\">' . $t_total_query_time . '</p>' . \"\\n\";\n\t}\n\n\t# Print table of log events\n\tlog_print_to_page();\n\n\techo '</div>' . \"\\n\";\n}\n\n/**\n * (14) End the <body> section\n * @return void\n */\nfunction html_body_end() {\n\t# Should code need to be added to this function in the future, it should be\n\t# placed *above* this event, which needs to be the last thing to occur\n\t# before the actual body ends (see #20084)\n\tevent_signal( 'EVENT_LAYOUT_BODY_END' );\n\n\techo '</div>', \"\\n\";\n\n\techo '</body>', \"\\n\";\n}\n\n/**\n * (15) Print the closing <html> tag\n * @return void\n */\nfunction html_end() {\n\techo '</html>', \"\\n\";\n\n\tif( function_exists( 'fastcgi_finish_request' ) ) {\n\t\tfastcgi_finish_request();\n\t}\n}\n\n/**\n * Prepare an array of additional menu options from a configuration variable\n * @param string $p_config Configuration variable name.\n * @return array\n */\nfunction prepare_custom_menu_options( $p_config ) {\n\t$t_custom_menu_options = config_get( $p_config );\n\t$t_options = array();\n\n\tforeach( $t_custom_menu_options as $t_custom_option ) {\n\t\t$t_access_level = $t_custom_option[1];\n\t\tif( access_has_project_level( $t_access_level ) ) {\n\t\t\t$t_caption = string_html_specialchars( lang_get_defaulted( $t_custom_option[0] ) );\n\t\t\t$t_link = string_attribute( $t_custom_option[2] );\n\t\t\t$t_options[] = '<a href=\"' . $t_link . '\">' . $t_caption . '</a>';\n\t\t}\n\t}\n\n\treturn $t_options;\n}\n\n/**\n * Print the main menu\n * @return void\n */\nfunction print_menu() {\n\tif( auth_is_user_authenticated() ) {\n\t\t$t_protected = current_user_get_field( 'protected' );\n\t\t$t_current_project = helper_get_current_project();\n\n\t\t$t_menu_options = array();\n\n\t\t# Main Page\n\t\tif( config_get( 'news_enabled' ) == ON ) {\n\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'main_page.php' ) . '\">' . lang_get( 'main_link' ) . '</a>';\n\t\t}\n\n\t\t# Plugin / Event added options\n\t\t$t_event_menu_options = event_signal( 'EVENT_MENU_MAIN_FRONT' );\n\t\tforeach( $t_event_menu_options as $t_plugin => $t_plugin_menu_options ) {\n\t\t\tforeach( $t_plugin_menu_options as $t_callback => $t_callback_menu_options ) {\n\t\t\t\tif( is_array( $t_callback_menu_options ) ) {\n\t\t\t\t\t$t_menu_options = array_merge( $t_menu_options, $t_callback_menu_options );\n\t\t\t\t} else {\n\t\t\t\t\tif( !is_null( $t_callback_menu_options ) ) {\n\t\t\t\t\t\t$t_menu_options[] = $t_callback_menu_options;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t# My View\n\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'my_view_page.php\">' ) . lang_get( 'my_view_link' ) . '</a>';\n\n\t\t# View Bugs\n\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'view_all_bug_page.php\">' ) . lang_get( 'view_bugs_link' ) . '</a>';\n\n\t\t# Report Bugs\n\t\tif( access_has_project_level( config_get( 'report_bug_threshold' ) ) ) {\n\t\t\t$t_menu_options[] = string_get_bug_report_link();\n\t\t}\n\n\t\t# Changelog Page\n\t\tif( access_has_project_level( config_get( 'view_changelog_threshold' ) ) ) {\n\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'changelog_page.php\">' ) . lang_get( 'changelog_link' ) . '</a>';\n\t\t}\n\n\t\t# Roadmap Page\n\t\tif( access_has_project_level( config_get( 'roadmap_view_threshold' ) ) ) {\n\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'roadmap_page.php\">' ) . lang_get( 'roadmap_link' ) . '</a>';\n\t\t}\n\n\t\t# Summary Page\n\t\tif( access_has_project_level( config_get( 'view_summary_threshold' ) ) ) {\n\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'summary_page.php\">' ) . lang_get( 'summary_link' ) . '</a>';\n\t\t}\n\n\t\t# Project Documentation Page\n\t\tif( ON == config_get( 'enable_project_documentation' ) ) {\n\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'proj_doc_page.php\">' ) . lang_get( 'docs_link' ) . '</a>';\n\t\t}\n\n\t\t# Project Wiki\n\t\tif( config_get_global( 'wiki_enable' ) == ON ) {\n\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'wiki.php?type=project&amp;id=' ) . $t_current_project . '\">' . lang_get( 'wiki' ) . '</a>';\n\t\t}\n\n\t\t# Plugin / Event added options\n\t\t$t_event_menu_options = event_signal( 'EVENT_MENU_MAIN' );\n\t\tforeach( $t_event_menu_options as $t_plugin => $t_plugin_menu_options ) {\n\t\t\tforeach( $t_plugin_menu_options as $t_callback => $t_callback_menu_options ) {\n\t\t\t\tif( is_array( $t_callback_menu_options ) ) {\n\t\t\t\t\t$t_menu_options = array_merge( $t_menu_options, $t_callback_menu_options );\n\t\t\t\t} else {\n\t\t\t\t\tif( !is_null( $t_callback_menu_options ) ) {\n\t\t\t\t\t\t$t_menu_options[] = $t_callback_menu_options;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t# Manage Users (admins) or Manage Project (managers) or Manage Custom Fields\n\t\tif( access_has_global_level( config_get( 'manage_site_threshold' ) ) ) {\n\t\t\t$t_link = helper_mantis_url( 'manage_overview_page.php' );\n\t\t\t$t_menu_options[] = '<a class=\"manage-menu-link\" href=\"' . $t_link . '\">' . lang_get( 'manage_link' ) . '</a>';\n\t\t} else {\n\t\t\t$t_show_access = min( config_get( 'manage_user_threshold' ), config_get( 'manage_project_threshold' ), config_get( 'manage_custom_fields_threshold' ) );\n\t\t\tif( access_has_global_level( $t_show_access ) || access_has_any_project( $t_show_access ) ) {\n\t\t\t\t$t_current_project = helper_get_current_project();\n\t\t\t\tif( access_has_global_level( config_get( 'manage_user_threshold' ) ) ) {\n\t\t\t\t\t$t_link = helper_mantis_url( 'manage_user_page.php' );\n\t\t\t\t} else {\n\t\t\t\t\tif( access_has_project_level( config_get( 'manage_project_threshold' ), $t_current_project ) && ( $t_current_project <> ALL_PROJECTS ) ) {\n\t\t\t\t\t\t$t_link = helper_mantis_url( 'manage_proj_edit_page.php?project_id=' ) . $t_current_project;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_link = helper_mantis_url( 'manage_proj_page.php' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$t_menu_options[] = '<a href=\"' . $t_link . '\">' . lang_get( 'manage_link' ) . '</a>';\n\t\t\t}\n\t\t}\n\n\t\t# News Page\n\t\tif( news_is_enabled() && access_has_project_level( config_get( 'manage_news_threshold' ) ) ) {\n\t\t\t# Admin can edit news for All Projects (site-wide)\n\t\t\tif( ALL_PROJECTS != helper_get_current_project() || current_user_is_administrator() ) {\n\t\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'news_menu_page.php\">' ) . lang_get( 'edit_news_link' ) . '</a>';\n\t\t\t} else {\n\t\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'login_select_proj_page.php\">' ) . lang_get( 'edit_news_link' ) . '</a>';\n\t\t\t}\n\t\t}\n\n\t\t# Account Page (only show accounts that are NOT protected)\n\t\tif( OFF == $t_protected ) {\n\t\t\t$t_menu_options[] = '<a class=\"account-menu-link\" href=\"' . helper_mantis_url( 'account_page.php\">' ) . lang_get( 'account_link' ) . '</a>';\n\t\t}\n\n\t\t# Add custom options\n\t\t$t_custom_options = prepare_custom_menu_options( 'main_menu_custom_options' );\n\t\t$t_menu_options = array_merge( $t_menu_options, $t_custom_options );\n\n\t\t# Time Tracking / Billing\n\t\tif( config_get( 'time_tracking_enabled' ) && access_has_project_level( config_get( 'time_tracking_reporting_threshold' ) ) ) {\n\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'billing_page.php\">' ) . lang_get( 'time_tracking_billing_link' ) . '</a>';\n\t\t}\n\n\t\t# Logout (no if anonymously logged in)\n\t\tif( !current_user_is_anonymous() ) {\n\t\t\t$t_menu_options[] = '<a id=\"logout-link\" href=\"' . helper_mantis_url( 'logout_page.php\">' ) . lang_get( 'logout_link' ) . '</a>';\n\t\t}\n\n\t\t# Display main menu\n\t\techo \"\\n\" . '<div class=\"main-menu\">'. \"\\n\";\n\n\t\t# Menu items\n\t\techo '<ul id=\"menu-items\">' . \"\\n\";\n\t\techo \"\\t\" . '<li>' . implode( $t_menu_options, '</li>' . \"\\n\\t\" . '<li>' ) . '</li>' . \"\\n\";\n\t\techo '</ul>' . \"\\n\";\n\n\t\t# Bug Jump form\n\t\techo '<div id=\"bug-jump\" >';\n\t\techo '<form method=\"post\" class=\"bug-jump-form\" action=\"' . helper_mantis_url( 'jump_to_bug.php' ) . '\">';\n\t\techo '<fieldset class=\"bug-jump\">';\n\t\t# CSRF protection not required here - form does not result in modifications\n\t\techo '<input type=\"hidden\" name=\"bug_label\" value=\"' . lang_get( 'issue_id' ) . '\" />';\n\t\techo '<input type=\"text\" name=\"bug_id\" size=\"8\" />&#160;';\n\t\techo '<input type=\"submit\" value=\"' . lang_get( 'jump' ) . '\" />&#160;';\n\t\techo '</fieldset>';\n\t\techo '</form>';\n\t\techo '</div>' . \"\\n\";\n\n\t\techo '</div>' . \"\\n\";\n\t}\n}\n\n/**\n * Print the menu bar with a list of projects to which the user has access\n * @return void\n */\nfunction print_project_menu_bar() {\n\t$t_project_ids = current_user_get_accessible_projects();\n\n\techo '<table class=\"width100\" cellspacing=\"0\">';\n\techo '<tr>';\n\techo '<td class=\"menu\">';\n\techo '<a href=\"' . helper_mantis_url( 'set_project.php?project_id=' . ALL_PROJECTS ) . '\">' . lang_get( 'all_projects' ) . '</a>';\n\n\tforeach( $t_project_ids as $t_id ) {\n\t\techo ' | <a href=\"' . helper_mantis_url( 'set_project.php?project_id=' . $t_id ) . '\">' . string_html_specialchars( project_get_field( $t_id, 'name' ) ) . '</a>';\n\t\tprint_subproject_menu_bar( $t_id, $t_id . ';' );\n\t}\n\n\techo '</td>';\n\techo '</tr>';\n\techo '</table>';\n}\n\n/**\n * Print the menu bar with a list of projects to which the user has access\n * @todo check parents param - set_project.php?project_id=' . $p_parents . $t_subproject\n * @param integer $p_project_id A Project id.\n * @param string  $p_parents    Parent project identifiers.\n * @return void\n */\nfunction print_subproject_menu_bar( $p_project_id, $p_parents = '' ) {\n\t$t_subprojects = current_user_get_accessible_subprojects( $p_project_id );\n\t$t_char = ':';\n\tforeach( $t_subprojects as $t_subproject ) {\n\t\techo $t_char . ' <a href=\"' . helper_mantis_url( 'set_project.php?project_id=' . $p_parents . $t_subproject ) . '\">' . string_html_specialchars( project_get_field( $t_subproject, 'name' ) ) . '</a>';\n\t\tprint_subproject_menu_bar( $t_subproject, $p_parents . $t_subproject . ';' );\n\t\t$t_char = ',';\n\t}\n}\n\n/**\n * Print the menu for the graph summary section\n * @return void\n */\nfunction print_summary_submenu() {\n\t# Plugin / Event added options\n\t$t_event_menu_options = event_signal( 'EVENT_SUBMENU_SUMMARY' );\n\t$t_menu_options = array();\n\tforeach( $t_event_menu_options as $t_plugin => $t_plugin_menu_options ) {\n\t\tforeach( $t_plugin_menu_options as $t_callback => $t_callback_menu_options ) {\n\t\t\tif( is_array( $t_callback_menu_options ) ) {\n\t\t\t\t$t_menu_options = array_merge( $t_menu_options, $t_callback_menu_options );\n\t\t\t} else {\n\t\t\t\tif( !is_null( $t_callback_menu_options ) ) {\n\t\t\t\t\t$t_menu_options[] = $t_callback_menu_options;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif( sizeof( $t_menu_options ) > 0 ) {\n\t\techo \"\\t\" . '<div id=\"summary-submenu\">' . \"\\n\";\n\t\techo \"\\t\\t\" . '<ul class=\"menu\">' . \"\\n\";\n\t\t# Plugins menu items - these are cooked links\n\t\tforeach ( $t_menu_options as $t_menu_item ) {\n\t\t\techo \"\\t\\t\\t\" . '<li>', $t_menu_item, '</li>' . \"\\n\";\n\t\t}\n\t\techo \"\\t\\t\" . '</ul>' . \"\\n\";\n\t\techo \"\\t\" . '</div>' . \"\\n\";\n\t}\n}\n\n/**\n * Print the menu for the manage section\n *\n * @param string $p_page Specifies the current page name so it's link can be disabled.\n * @return void\n */\nfunction print_manage_menu( $p_page = '' ) {\n\t$t_pages = array();\n\tif( access_has_global_level( config_get( 'manage_user_threshold' ) ) ) {\n\t\t$t_pages['manage_user_page.php'] = array( 'url'   => 'manage_user_page.php', 'label' => 'manage_users_link' );\n\t}\n\tif( access_has_project_level( config_get( 'manage_project_threshold' ) ) ) {\n\t\t$t_pages['manage_proj_page.php'] = array( 'url'   => 'manage_proj_page.php', 'label' => 'manage_projects_link' );\n\t}\n\tif( access_has_global_level( config_get( 'tag_edit_threshold' ) ) ) {\n\t\t$t_pages['manage_tags_page.php'] = array( 'url'   => 'manage_tags_page.php', 'label' => 'manage_tags_link' );\n\t}\n\tif( access_has_global_level( config_get( 'manage_custom_fields_threshold' ) ) ) {\n\t\t$t_pages['manage_custom_field_page.php'] = array( 'url'   => 'manage_custom_field_page.php', 'label' => 'manage_custom_field_link' );\n\t}\n\tif( config_get( 'enable_profiles' ) == ON && access_has_global_level( config_get( 'manage_global_profile_threshold' ) ) ) {\n\t\t$t_pages['manage_prof_menu_page.php'] = array( 'url'   => 'manage_prof_menu_page.php', 'label' => 'manage_global_profiles_link' );\n\t}\n\tif( access_has_global_level( config_get( 'manage_plugin_threshold' ) ) ) {\n\t\t$t_pages['manage_plugin_page.php'] = array( 'url'   => 'manage_plugin_page.php', 'label' => 'manage_plugin_link' );\n\t}\n\n\tif( access_has_project_level( config_get( 'manage_configuration_threshold' ) ) ) {\n\t\t$t_pages['adm_permissions_report.php'] = array(\n\t\t\t'url'   => 'adm_permissions_report.php',\n\t\t\t'label' => 'manage_config_link'\n\t\t);\n\t}\n\t# Remove the link from the current page\n\tif( isset( $t_pages[$p_page] ) ) {\n\t\t$t_pages[$p_page]['url'] = '';\n\t}\n\n\t# Plugin / Event added options\n\t$t_event_menu_options = event_signal( 'EVENT_MENU_MANAGE' );\n\t$t_menu_options = array();\n\tforeach( $t_event_menu_options as $t_plugin => $t_plugin_menu_options ) {\n\t\tforeach( $t_plugin_menu_options as $t_callback => $t_callback_menu_options ) {\n\t\t\tif( is_array( $t_callback_menu_options ) ) {\n\t\t\t\t$t_menu_options = array_merge( $t_menu_options, $t_callback_menu_options );\n\t\t\t} else {\n\t\t\t\tif( !is_null( $t_callback_menu_options ) ) {\n\t\t\t\t\t$t_menu_options[] = $t_callback_menu_options;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\techo \"\\n\" . '<div id=\"manage-menu\">' . \"\\n\";\n\techo '<ul class=\"menu\">';\n\tforeach( $t_pages as $t_page ) {\n\t\tif( $t_page['url'] == '' ) {\n\t\t\techo '<li><span>', lang_get( $t_page['label'] ), '</span></li>';\n\t\t} else {\n\t\t\techo '<li><a href=\"'. helper_mantis_url( $t_page['url'] ) .'\">' . lang_get( $t_page['label'] ) . '</a></li>';\n\t\t}\n\t}\n\n\t# Plugins menu items - these are cooked links\n\tforeach( $t_menu_options as $t_menu_item ) {\n\t\techo '<li>', $t_menu_item, '</li>';\n\t}\n\n\techo '</ul>';\n\techo '</div>';\n}\n\n/**\n * Print the menu for the manage configuration section\n * @param string $p_page Specifies the current page name so it's link can be disabled.\n * @return void\n */\nfunction print_manage_config_menu( $p_page = '' ) {\n\tif( !access_has_project_level( config_get( 'manage_configuration_threshold' ) ) ) {\n\t\treturn;\n\t}\n\n\t$t_pages = array();\n\n\t$t_pages['adm_permissions_report.php'] = array( 'url'   => 'adm_permissions_report.php',\n\t                                                'label' => 'permissions_summary_report' );\n\n\tif( access_has_global_level( config_get( 'view_configuration_threshold' ) ) ) {\n\t\t$t_pages['adm_config_report.php'] = array( 'url'   => 'adm_config_report.php',\n\t\t                                           'label' => 'configuration_report' );\n\t}\n\n\t$t_pages['manage_config_work_threshold_page.php'] = array( 'url'   => 'manage_config_work_threshold_page.php',\n\t                                                           'label' => 'manage_threshold_config' );\n\n\t$t_pages['manage_config_workflow_page.php'] = array( 'url'   => 'manage_config_workflow_page.php',\n\t                                                     'label' => 'manage_workflow_config' );\n\n\tif( config_get( 'relationship_graph_enable' ) ) {\n\t\t$t_pages['manage_config_workflow_graph_page.php'] = array( 'url'   => 'manage_config_workflow_graph_page.php',\n\t\t                                                           'label' => 'manage_workflow_graph' );\n\t}\n\n\tif( config_get( 'enable_email_notification' ) == ON ) {\n\t\t$t_pages['manage_config_email_page.php'] = array( 'url'   => 'manage_config_email_page.php',\n\t\t                                                  'label' => 'manage_email_config' );\n\t}\n\n\t$t_pages['manage_config_columns_page.php'] = array( 'url'   => 'manage_config_columns_page.php',\n\t                                                    'label' => 'manage_columns_config' );\n\n\t# Remove the link from the current page\n\tif( isset( $t_pages[$p_page] ) ) {\n\t\t$t_pages[$p_page]['url'] = '';\n\t}\n\n\t# Plugin / Event added options\n\t$t_event_menu_options = event_signal( 'EVENT_MENU_MANAGE_CONFIG' );\n\t$t_menu_options = array();\n\tforeach ( $t_event_menu_options as $t_plugin => $t_plugin_menu_options ) {\n\t\tforeach ( $t_plugin_menu_options as $t_callback => $t_callback_menu_options ) {\n\t\t\tif( is_array( $t_callback_menu_options ) ) {\n\t\t\t\t$t_menu_options = array_merge( $t_menu_options, $t_callback_menu_options );\n\t\t\t} else {\n\t\t\t\tif( !is_null( $t_callback_menu_options ) ) {\n\t\t\t\t\t$t_menu_options[] = $t_callback_menu_options;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\techo '<div id=\"manage-config-menu\">';\n\techo '<ul class=\"menu\">';\n\tforeach ( $t_pages as $t_page ) {\n\t\tif( $t_page['url'] == '' ) {\n\t\t\techo '<li><span>', lang_get( $t_page['label'] ), '</span></li>';\n\t\t} else {\n\t\t\techo '<li><a href=\"'. helper_mantis_url( $t_page['url'] ) .'\">' . lang_get( $t_page['label'] ) . '</a></li>';\n\t\t}\n\t}\n\n\tforeach ( $t_menu_options as $t_menu_item ) {\n\t\techo '<li><span>', $t_menu_item, '</span></li>';\n\t}\n\n\techo '</ul>';\n\techo '</div>';\n}\n\n/**\n * Print the menu for the account section\n * @param string $p_page Specifies the current page name so it's link can be disabled.\n * @return void\n */\nfunction print_account_menu( $p_page = '' ) {\n\t$t_pages['account_page.php'] = array( 'url'=>'account_page.php', 'label'=>'account_link' );\n\t$t_pages['account_prefs_page.php'] = array( 'url'=>'account_prefs_page.php', 'label'=>'change_preferences_link' );\n\t$t_pages['account_manage_columns_page.php'] = array( 'url'=>'account_manage_columns_page.php', 'label'=>'manage_columns_config' );\n\n\tif( config_get( 'enable_profiles' ) == ON && access_has_project_level( config_get( 'add_profile_threshold' ) ) ) {\n\t\t$t_pages['account_prof_menu_page.php'] = array( 'url'=>'account_prof_menu_page.php', 'label'=>'manage_profiles_link' );\n\t}\n\n\tif( config_get( 'enable_sponsorship' ) == ON && access_has_project_level( config_get( 'view_sponsorship_total_threshold' ) ) && !current_user_is_anonymous() ) {\n\t\t$t_pages['account_sponsor_page.php'] = array( 'url'=>'account_sponsor_page.php', 'label'=>'my_sponsorship' );\n\t}\n\n\t$t_pages['api_tokens_page.php'] = array( 'url' => 'api_tokens_page.php', 'label' => 'api_tokens_link' );\n\n\t# Remove the link from the current page\n\tif( isset( $t_pages[$p_page] ) ) {\n\t\t$t_pages[$p_page]['url'] = '';\n\t}\n\n\t# Plugin / Event added options\n\t$t_event_menu_options = event_signal( 'EVENT_MENU_ACCOUNT' );\n\t$t_menu_options = array();\n\tforeach( $t_event_menu_options as $t_plugin => $t_plugin_menu_options ) {\n\t\tforeach( $t_plugin_menu_options as $t_callback => $t_callback_menu_options ) {\n\t\t\tif( is_array( $t_callback_menu_options ) ) {\n\t\t\t\t$t_menu_options = array_merge( $t_menu_options, $t_callback_menu_options );\n\t\t\t} else {\n\t\t\t\tif( !is_null( $t_callback_menu_options ) ) {\n\t\t\t\t\t$t_menu_options[] = $t_callback_menu_options;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\techo '<div id=\"account-menu\">';\n\techo '<ul class=\"menu\">';\n\tforeach ( $t_pages as $t_page ) {\n\t\tif( $t_page['url'] == '' ) {\n\t\t\techo '<li><span>', lang_get( $t_page['label'] ), '</span></li>';\n\t\t} else {\n\t\t\techo '<li><a href=\"'. helper_mantis_url( $t_page['url'] ) .'\">' . lang_get( $t_page['label'] ) . '</a></li>';\n\t\t}\n\t}\n\n\t# Plugins menu items - these are cooked links\n\tforeach ( $t_menu_options as $t_menu_item ) {\n\t\techo '<li>', $t_menu_item, '</li>';\n\t}\n\techo '</ul>';\n\techo '</div>';\n}\n\n/**\n * Print the menu for the documentation section\n * @param string $p_page Specifies the current page name so it's link can be disabled.\n * @return void\n */\nfunction print_doc_menu( $p_page = '' ) {\n\t# User Documentation\n\t$t_doc_url = config_get( 'manual_url' );\n\tif( is_null( parse_url( $t_doc_url, PHP_URL_SCHEME ) ) ) {\n\t\t# URL has no scheme, so it is relative to MantisBT root\n\t\tif( is_blank( $t_doc_url ) ||\n\t\t\t!file_exists( config_get_global( 'absolute_path' ) . $t_doc_url )\n\t\t) {\n\t\t\t# Local documentation not available, use online docs\n\t\t\t$t_doc_url = 'http://www.mantisbt.org/documentation.php';\n\t\t} else {\n\t\t\t$t_doc_url = helper_mantis_url( $t_doc_url );\n\t\t}\n\t}\n\n\t$t_pages[$t_doc_url] = array(\n\t\t'url'   => $t_doc_url,\n\t\t'label' => 'user_documentation'\n\t);\n\n\t# Project Documentation\n\t$t_pages['proj_doc_page.php'] = array(\n\t\t'url'   => helper_mantis_url( 'proj_doc_page.php' ),\n\t\t'label' => 'project_documentation'\n\t);\n\n\t# Add File\n\tif( file_allow_project_upload() ) {\n\t\t$t_pages['proj_doc_add_page.php'] = array(\n\t\t\t'url'   => helper_mantis_url( 'proj_doc_add_page.php' ),\n\t\t\t'label' => 'add_file'\n\t\t);\n\t}\n\n\t# Remove the link from the current page\n\tif( isset( $t_pages[$p_page] ) ) {\n\t\t$t_pages[$p_page]['url'] = '';\n\t}\n\n\techo '<div id=\"doc-menu\">';\n\techo '<ul class=\"menu\">';\n\tforeach ( $t_pages as $t_page ) {\n\t\tif( $t_page['url'] == '' ) {\n\t\t\techo '<li>', lang_get( $t_page['label'] ), '</li>';\n\t\t} else {\n\t\t\techo '<li><a href=\"'. $t_page['url'] .'\">' . lang_get( $t_page['label'] ) . '</a></li>';\n\t\t}\n\t}\n\techo '</ul>';\n\techo '</div>';\n}\n\n/**\n * Print the menu for the summary section\n * @param string $p_page Specifies the current page name so it's link can be disabled.\n * @return void\n */\nfunction print_summary_menu( $p_page = '' ) {\n\t# Plugin / Event added options\n\t$t_event_menu_options = event_signal( 'EVENT_MENU_SUMMARY' );\n\t$t_menu_options = array();\n\tforeach( $t_event_menu_options as $t_plugin => $t_plugin_menu_options ) {\n\t\tforeach( $t_plugin_menu_options as $t_callback => $t_callback_menu_options ) {\n\t\t\tif( is_array( $t_callback_menu_options ) ) {\n\t\t\t\t$t_menu_options = array_merge( $t_menu_options, $t_callback_menu_options );\n\t\t\t} else {\n\t\t\t\tif( !is_null( $t_callback_menu_options ) ) {\n\t\t\t\t\t$t_menu_options[] = $t_callback_menu_options;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$t_pages['summary_page.php'] = array( 'url'=>'summary_page.php', 'label'=>'summary_link' );\n\t# Remove the link from the current page\n\tif( isset( $t_pages[$p_page] ) ) {\n\t\t$t_pages[$p_page]['url'] = '';\n\t}\n\n\techo '<div id=\"summary-menu\">';\n\techo '<ul class=\"menu\">';\n\n\tforeach ( $t_pages as $t_page ) {\n\t\tif( $t_page['url'] == '' ) {\n\t\t\techo '<li>', lang_get( $t_page['label'] ), '</li>';\n\t\t} else {\n\t\t\techo '<li><a href=\"'. helper_mantis_url( $t_page['url'] ) .'\">' . lang_get( $t_page['label'] ) . '</a></li>';\n\t\t}\n\t}\n\n\t# Plugins menu items - these are cooked links\n\tforeach ( $t_menu_options as $t_menu_item ) {\n\t\techo '<li>', $t_menu_item, '</li>';\n\t}\n\techo '</ul>';\n\techo '</div>';\n}\n\n/**\n * Print the color legend for the status colors at the requested position\n * @param int  $p_display_position   STATUS_LEGEND_POSITION_TOP or STATUS_LEGEND_POSITION_BOTTOM\n * @param bool $p_restrict_by_filter If true, only display status visible in current filter\n * @return void\n */\nfunction html_status_legend( $p_display_position, $p_restrict_by_filter = false ) {\n\n\tif( $p_restrict_by_filter ) {\n\t\t# Don't show the legend if only one status is selected by the current filter\n\t\t$t_current_filter = current_user_get_bug_filter();\n\t\tif( $t_current_filter === false ) {\n\t\t\t$t_current_filter = filter_get_default();\n\t\t}\n\t\t$t_simple_filter = $t_current_filter['_view_type'] == 'simple';\n\t\tif( $t_simple_filter ) {\n\t\t\tif( !filter_field_is_any( $t_current_filter[FILTER_PROPERTY_STATUS][0] ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t$t_status_array = MantisEnum::getAssocArrayIndexedByValues( config_get( 'status_enum_string' ) );\n\t$t_status_names = MantisEnum::getAssocArrayIndexedByValues( lang_get( 'status_enum_string' ) );\n\n\t# read through the list and eliminate unused ones for the selected project\n\t# assumes that all status are are in the enum array\n\t$t_workflow = config_get( 'status_enum_workflow' );\n\tif( !empty( $t_workflow ) ) {\n\t\tforeach( $t_status_array as $t_status => $t_name ) {\n\t\t\t# Check if the workflow allows leaving the state\n\t\t\tif( !isset( $t_workflow[$t_status] ) ) {\n\t\t\t\t# Check if the workflow allows entering the state\n\t\t\t\t$t_can_enter = false;\n\t\t\t\tforeach( $t_workflow as $t_values ) {\n\t\t\t\t\tif( MantisEnum::hasValue( $t_values, $t_status ) ) {\n\t\t\t\t\t\t$t_can_enter = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t# drop elements that are not in the workflow\n\t\t\t\tif( !$t_can_enter ) {\n\t\t\t\t\tunset( $t_status_array[$t_status] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif( $p_restrict_by_filter ) {\n\t\t# Remove status values that won't appear as a result of the current filter\n\t\tforeach( $t_status_array as $t_status => $t_name ) {\n\t\t\tif( $t_simple_filter ) {\n\t\t\t\tif( !filter_field_is_none( $t_current_filter[FILTER_PROPERTY_HIDE_STATUS][0] ) &&\n\t\t\t\t\t$t_status >= $t_current_filter[FILTER_PROPERTY_HIDE_STATUS][0] ) {\n\t\t\t\t\tunset( $t_status_array[$t_status] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif( !in_array( META_FILTER_ANY, $t_current_filter[FILTER_PROPERTY_STATUS] ) &&\n\t\t\t\t\t!in_array( $t_status, $t_current_filter[FILTER_PROPERTY_STATUS] ) ) {\n\t\t\t\t\tunset( $t_status_array[$t_status] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t# If there aren't at least two statuses showable by the current filter,\n\t\t# don't draw the status bar\n\t\tif( count( $t_status_array ) <= 1 ) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\t# Display the legend\n\t$t_legend_position = config_get( 'status_legend_position' ) & $p_display_position;\n\n\tif( STATUS_LEGEND_POSITION_NONE != $t_legend_position ) {\n\t\techo '<br />';\n\t\techo '<table class=\"status-legend width100\" cellspacing=\"1\">';\n\t\techo '<tr>';\n\n\t\t# draw the status bar\n\t\tforeach( $t_status_array as $t_status => $t_name ) {\n\t\t\t$t_val = isset( $t_status_names[$t_status] )\n\t\t\t\t? $t_status_names[$t_status]\n\t\t\t\t: $t_status_array[$t_status];\n\n\t\t\techo '<td class=\"small-caption status-legend-width '\n\t\t\t\t. html_get_status_css_class( $t_status ) . '\">'\n\t\t\t\t. $t_val . '</td>';\n\t\t}\n\n\t\techo '</tr>';\n\t\techo '</table>';\n\t\tif( ON == config_get( 'status_percentage_legend' ) ) {\n\t\t\thtml_status_percentage_legend();\n\t\t}\n\t}\n\tif( STATUS_LEGEND_POSITION_TOP == $t_legend_position ) {\n\t\techo '<br />';\n\t}\n}\n\n/**\n * Print the legend for the status percentage\n * @return void\n */\nfunction html_status_percentage_legend() {\n\t$t_status_percents = get_percentage_by_status();\n\t$t_status_enum_string = config_get( 'status_enum_string' );\n\t$t_enum_values = MantisEnum::getValues( $t_status_enum_string );\n\t$t_enum_count = count( $t_enum_values );\n\n\t$t_bug_count = array_sum( $t_status_percents );\n\n\tif( $t_bug_count > 0 ) {\n\t\techo '<br />';\n\t\techo '<table class=\"width100\" cellspacing=\"1\">';\n\t\techo '<tr>';\n\t\techo '<td class=\"form-title\" colspan=\"' . $t_enum_count . '\">' . lang_get( 'issue_status_percentage' ) . '</td>';\n\t\techo '</tr>';\n\t\techo '<tr>';\n\n\t\tforeach ( $t_enum_values as $t_status ) {\n\t\t\t$t_percent = ( isset( $t_status_percents[$t_status] ) ?  $t_status_percents[$t_status] : 0 );\n\n\t\t\tif( $t_percent > 0 ) {\n\t\t\t\t$t_class = html_get_status_css_class( $t_status );\n\t\t\t\techo '<td class=\"small-caption-center '\n\t\t\t\t\t. $t_class . ' '\n\t\t\t\t\t. str_replace( 'color', 'percentage', $t_class ) . '\">'\n\t\t\t\t\t. $t_percent . '%</td>';\n\t\t\t}\n\t\t}\n\n\t\techo '</tr>';\n\t\techo '</table>';\n\t}\n}\n\n/**\n * Print an html button inside a form\n * @param string $p_action      Form Action.\n * @param string $p_button_text Button Text.\n * @param array  $p_fields      An array of hidden fields to include on the form.\n * @param string $p_method      Form submit method - default post.\n * @return void\n */\nfunction html_button( $p_action, $p_button_text, array $p_fields = array(), $p_method = 'post' ) {\n\t$t_form_name = explode( '.php', $p_action, 2 );\n\t$p_action = urlencode( $p_action );\n\t$p_button_text = string_attribute( $p_button_text );\n\n\tif( strtolower( $p_method ) == 'get' ) {\n\t\t$t_method = 'get';\n\t} else {\n\t\t$t_method = 'post';\n\t}\n\n\techo '<form method=\"' . $t_method . '\" action=\"' . $p_action . '\" class=\"action-button\">' . \"\\n\";\n\techo \"\\t\" . '<fieldset>';\n\t# Add a CSRF token only when the form is being sent via the POST method\n\tif( $t_method == 'post' ) {\n\t\techo form_security_field( $t_form_name[0] );\n\t}\n\n\tforeach( $p_fields as $t_key => $t_val ) {\n\t\t$t_key = string_attribute( $t_key );\n\t\t$t_val = string_attribute( $t_val );\n\n\t\techo \"\\t\\t\" . '<input type=\"hidden\" name=\"' . $t_key . '\" value=\"' . $t_val . '\" />' . \"\\n\";\n\t}\n\n\techo \"\\t\\t\" . '<input type=\"submit\" class=\"button\" value=\"' . $p_button_text . '\" />' . \"\\n\";\n\techo \"\\t\" . '</fieldset>';\n\techo '</form>' . \"\\n\";\n}\n\n/**\n * Print a button to update the given bug\n * @param integer $p_bug_id A Bug identifier.\n * @return void\n */\nfunction html_button_bug_update( $p_bug_id ) {\n\tif( access_has_bug_level( config_get( 'update_bug_threshold' ), $p_bug_id ) ) {\n\t\thtml_button( string_get_bug_update_page(), lang_get( 'update_bug_button' ), array( 'bug_id' => $p_bug_id ) );\n\t}\n}\n\n/**\n * Print Change Status to: button\n * This code is similar to print_status_option_list except\n * there is no masking, except for the current state\n *\n * @param BugData $p_bug A valid bug object.\n * @return void\n */\nfunction html_button_bug_change_status( BugData $p_bug ) {\n\t$t_current_access = access_get_project_level( $p_bug->project_id );\n\n\t# User must have rights to change status to use this button\n\tif( !access_has_bug_level( config_get( 'update_bug_status_threshold' ), $p_bug->id ) ) {\n\t\treturn;\n\t}\n\n\t$t_enum_list = get_status_option_list(\n\t\t$t_current_access,\n\t\t$p_bug->status,\n\t\tfalse,\n\t\t# Add close if user is bug's reporter, still has rights to report issues\n\t\t# (to prevent users downgraded to viewers from updating issues) and\n\t\t# reporters are allowed to close their own issues\n\t\t(  bug_is_user_reporter( $p_bug->id, auth_get_current_user_id() )\n\t\t&& access_has_bug_level( config_get( 'report_bug_threshold' ), $p_bug->id )\n\t\t&& ON == config_get( 'allow_reporter_close' )\n\t\t),\n\t\t$p_bug->project_id );\n\n\tif( count( $t_enum_list ) > 0 ) {\n\t\t# resort the list into ascending order after noting the key from the first element (the default)\n\t\t$t_default_arr = each( $t_enum_list );\n\t\t$t_default = $t_default_arr['key'];\n\t\tksort( $t_enum_list );\n\t\treset( $t_enum_list );\n\n\t\techo '<form method=\"post\" action=\"bug_change_status_page.php\">';\n\t\t# CSRF protection not required here - form does not result in modifications\n\n\t\t$t_button_text = lang_get( 'bug_status_to_button' );\n\t\techo '<input type=\"submit\" class=\"button\" value=\"' . $t_button_text . '\" />';\n\n\t\techo ' <select name=\"new_status\">';\n\n\t\t# space at beginning of line is important\n\t\tforeach( $t_enum_list as $t_key => $t_val ) {\n\t\t\techo '<option value=\"' . $t_key . '\" ';\n\t\t\tcheck_selected( $t_key, $t_default );\n\t\t\techo '>' . $t_val . '</option>';\n\t\t}\n\t\techo '</select>';\n\n\t\t$t_bug_id = string_attribute( $p_bug->id );\n\t\techo '<input type=\"hidden\" name=\"id\" value=\"' . $t_bug_id . '\" />' . \"\\n\";\n\t\techo '<input type=\"hidden\" name=\"change_type\" value=\"' . BUG_UPDATE_TYPE_CHANGE_STATUS . '\" />' . \"\\n\";\n\n\t\techo '</form>' . \"\\n\";\n\t}\n}\n\n/**\n * Print Assign To: combo box of possible handlers\n * @param BugData $p_bug Bug object.\n * @return void\n */\nfunction html_button_bug_assign_to( BugData $p_bug ) {\n\t# make sure status is allowed of assign would cause auto-set-status\n\t# workflow implementation\n\tif( ON == config_get( 'auto_set_status_to_assigned' )\n\t\t&& !bug_check_workflow( $p_bug->status, config_get( 'bug_assigned_status' ) )\n\t) {\n\t\treturn;\n\t}\n\n\t# make sure current user has access to modify bugs.\n\tif( !access_has_bug_level( config_get( 'update_bug_assign_threshold', config_get( 'update_bug_threshold' ) ), $p_bug->id ) ) {\n\t\treturn;\n\t}\n\n\t$t_current_user_id = auth_get_current_user_id();\n\t$t_options = array();\n\t$t_default_assign_to = null;\n\n\tif( ( $p_bug->handler_id != $t_current_user_id )\n\t\t&& access_has_bug_level( config_get( 'handle_bug_threshold' ), $p_bug->id, $t_current_user_id )\n\t) {\n\t\t$t_options[] = array(\n\t\t\t$t_current_user_id,\n\t\t\t'[' . lang_get( 'myself' ) . ']',\n\t\t);\n\t\t$t_default_assign_to = $t_current_user_id;\n\t}\n\n\tif( ( $p_bug->handler_id != $p_bug->reporter_id )\n\t\t&& user_exists( $p_bug->reporter_id )\n\t\t&& access_has_bug_level( config_get( 'handle_bug_threshold' ), $p_bug->id, $p_bug->reporter_id )\n\t) {\n\t\t$t_options[] = array(\n\t\t\t$p_bug->reporter_id,\n\t\t\t'[' . lang_get( 'reporter' ) . ']',\n\t\t);\n\n\t\tif( $t_default_assign_to === null ) {\n\t\t\t$t_default_assign_to = $p_bug->reporter_id;\n\t\t}\n\t}\n\n\techo '<form method=\"post\" action=\"bug_update.php\">';\n\techo form_security_field( 'bug_update' );\n\techo '<input type=\"hidden\" name=\"last_updated\" value=\"' . $p_bug->last_updated . '\" />';\n\techo '<input type=\"hidden\" name=\"action_type\" value=\"' . BUG_UPDATE_TYPE_ASSIGN . '\" />';\n\n\t$t_button_text = lang_get( 'bug_assign_to_button' );\n\techo '<input type=\"submit\" class=\"button\" value=\"' . $t_button_text . '\" />';\n\n\techo ' <select name=\"handler_id\">';\n\n\t# space at beginning of line is important\n\n\t$t_already_selected = false;\n\n\tforeach( $t_options as $t_entry ) {\n\t\t$t_id = (int)$t_entry[0];\n\t\t$t_caption = string_attribute( $t_entry[1] );\n\n\t\t# if current user and reporter can't be selected, then select the first\n\t\t# user in the list.\n\t\tif( $t_default_assign_to === null ) {\n\t\t\t$t_default_assign_to = $t_id;\n\t\t}\n\n\t\techo '<option value=\"' . $t_id . '\" ';\n\n\t\tif( ( $t_id == $t_default_assign_to ) && !$t_already_selected ) {\n\t\t\tcheck_selected( $t_id, $t_default_assign_to );\n\t\t\t$t_already_selected = true;\n\t\t}\n\n\t\techo '>' . $t_caption . '</option>';\n\t}\n\n\t# allow un-assigning if already assigned.\n\tif( $p_bug->handler_id != 0 ) {\n\t\techo '<option value=\"0\"></option>';\n\t}\n\n\t# 0 means currently selected\n\tprint_assign_to_option_list( 0, $p_bug->project_id );\n\techo '</select>';\n\n\t$t_bug_id = string_attribute( $p_bug->id );\n\techo '<input type=\"hidden\" name=\"bug_id\" value=\"' . $t_bug_id . '\" />' . \"\\n\";\n\n\techo '</form>' . \"\\n\";\n}\n\n/**\n * Print a button to move the given bug to a different project\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_button_bug_move( $p_bug_id ) {\n\tif( access_has_bug_level( config_get( 'move_bug_threshold' ), $p_bug_id ) ) {\n\t\thtml_button( 'bug_actiongroup_page.php', lang_get( 'move_bug_button' ), array( 'bug_arr[]' => $p_bug_id, 'action' => 'MOVE' ) );\n\t}\n}\n\n/**\n * Print a button to clone the given bug\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_button_bug_create_child( $p_bug_id ) {\n\tif( access_has_bug_level( config_get( 'report_bug_threshold' ), $p_bug_id ) ) {\n\t\thtml_button( string_get_bug_report_url(), lang_get( 'create_child_bug_button' ), array( 'm_id' => $p_bug_id ) );\n\t}\n}\n\n/**\n * Print a button to reopen the given bug\n * @param BugData $p_bug A valid bug object.\n * @return void\n */\nfunction html_button_bug_reopen( BugData $p_bug ) {\n\tif( access_can_reopen_bug( $p_bug ) ) {\n\t\t$t_reopen_status = config_get( 'bug_reopen_status', null, null, $p_bug->project_id );\n\t\thtml_button(\n\t\t\t'bug_change_status_page.php',\n\t\t\tlang_get( 'reopen_bug_button' ),\n\t\t\tarray( 'id' => $p_bug->id, 'new_status' => $t_reopen_status, 'change_type' => BUG_UPDATE_TYPE_REOPEN ) );\n\t}\n}\n\n/**\n * Print a button to close the given bug\n * Only if user can close bugs and workflow allows moving them to that status\n * @param BugData $p_bug A valid bug object.\n * @return void\n */\nfunction html_button_bug_close( BugData $p_bug ) {\n\t$t_closed_status = config_get( 'bug_closed_status_threshold', null, null, $p_bug->project_id );\n\tif( access_can_close_bug( $p_bug )\n\t\t&& bug_check_workflow( $p_bug->status, $t_closed_status )\n\t) {\n\t\thtml_button(\n\t\t\t'bug_change_status_page.php',\n\t\t\tlang_get( 'close_bug_button' ),\n\t\t\tarray( 'id' => $p_bug->id, 'new_status' => $t_closed_status, 'change_type' => BUG_UPDATE_TYPE_CLOSE ) );\n\t}\n}\n\n/**\n * Print a button to monitor the given bug\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_button_bug_monitor( $p_bug_id ) {\n\tif( access_has_bug_level( config_get( 'monitor_bug_threshold' ), $p_bug_id ) ) {\n\t\thtml_button( 'bug_monitor_add.php', lang_get( 'monitor_bug_button' ), array( 'bug_id' => $p_bug_id ) );\n\t}\n}\n\n/**\n * Print a button to unmonitor the given bug\n * no reason to ever disallow someone from unmonitoring a bug\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_button_bug_unmonitor( $p_bug_id ) {\n\thtml_button( 'bug_monitor_delete.php', lang_get( 'unmonitor_bug_button' ), array( 'bug_id' => $p_bug_id ) );\n}\n\n/**\n * Print a button to stick the given bug\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_button_bug_stick( $p_bug_id ) {\n\tif( access_has_bug_level( config_get( 'set_bug_sticky_threshold' ), $p_bug_id ) ) {\n\t\thtml_button( 'bug_stick.php', lang_get( 'stick_bug_button' ), array( 'bug_id' => $p_bug_id, 'action' => 'stick' ) );\n\t}\n}\n\n/**\n * Print a button to unstick the given bug\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_button_bug_unstick( $p_bug_id ) {\n\tif( access_has_bug_level( config_get( 'set_bug_sticky_threshold' ), $p_bug_id ) ) {\n\t\thtml_button( 'bug_stick.php', lang_get( 'unstick_bug_button' ), array( 'bug_id' => $p_bug_id, 'action' => 'unstick' ) );\n\t}\n}\n\n/**\n * Print a button to delete the given bug\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_button_bug_delete( $p_bug_id ) {\n\tif( access_has_bug_level( config_get( 'delete_bug_threshold' ), $p_bug_id ) ) {\n\t\thtml_button( 'bug_actiongroup_page.php', lang_get( 'delete_bug_button' ), array( 'bug_arr[]' => $p_bug_id, 'action' => 'DELETE' ) );\n\t}\n}\n\n/**\n * Print a button to create a wiki page\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_button_wiki( $p_bug_id ) {\n\tif( config_get_global( 'wiki_enable' ) == ON ) {\n\t\tif( access_has_bug_level( config_get( 'update_bug_threshold' ), $p_bug_id ) ) {\n\t\t\thtml_button( 'wiki.php', lang_get_defaulted( 'Wiki' ), array( 'id' => $p_bug_id, 'type' => 'issue' ), 'get' );\n\t\t}\n\t}\n}\n\n/**\n * Print all buttons for view bug pages\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_buttons_view_bug_page( $p_bug_id ) {\n\t$t_readonly = bug_is_readonly( $p_bug_id );\n\t$t_sticky = config_get( 'set_bug_sticky_threshold' );\n\n\t$t_bug = bug_get( $p_bug_id );\n\n\techo '<table><tr class=\"details-buttons\">';\n\tif( !$t_readonly ) {\n\t\t# UPDATE button\n\t\techo '<td>';\n\t\thtml_button_bug_update( $p_bug_id );\n\t\techo '</td>';\n\n\t\t# ASSIGN button\n\t\techo '<td>';\n\t\thtml_button_bug_assign_to( $t_bug );\n\t\techo '</td>';\n\t}\n\n\t# Change status button/dropdown\n\tif( !$t_readonly ) {\n\t\techo '<td>';\n\t\thtml_button_bug_change_status( $t_bug );\n\t\techo '</td>';\n\t}\n\n\t# MONITOR/UNMONITOR button\n\tif( !current_user_is_anonymous() ) {\n\t\techo '<td>';\n\t\tif( user_is_monitoring_bug( auth_get_current_user_id(), $p_bug_id ) ) {\n\t\t\thtml_button_bug_unmonitor( $p_bug_id );\n\t\t} else {\n\t\t\thtml_button_bug_monitor( $p_bug_id );\n\t\t}\n\t\techo '</td>';\n\t}\n\n\t# STICK/UNSTICK button\n\tif( access_has_bug_level( $t_sticky, $p_bug_id ) ) {\n\t\techo '<td>';\n\t\tif( !bug_get_field( $p_bug_id, 'sticky' ) ) {\n\t\t\thtml_button_bug_stick( $p_bug_id );\n\t\t} else {\n\t\t\thtml_button_bug_unstick( $p_bug_id );\n\t\t}\n\t\techo '</td>';\n\t}\n\n\t# CLONE button\n\tif( !$t_readonly ) {\n\t\techo '<td>';\n\t\thtml_button_bug_create_child( $p_bug_id );\n\t\techo '</td>';\n\t}\n\n\t# REOPEN button\n\techo '<td>';\n\thtml_button_bug_reopen( $t_bug );\n\techo '</td>';\n\n\t# CLOSE button\n\techo '<td>';\n\thtml_button_bug_close( $t_bug );\n\techo '</td>';\n\n\t# MOVE button\n\techo '<td>';\n\thtml_button_bug_move( $p_bug_id );\n\techo '</td>';\n\n\t# DELETE button\n\techo '<td>';\n\thtml_button_bug_delete( $p_bug_id );\n\techo '</td>';\n\n\thelper_call_custom_function( 'print_bug_view_page_custom_buttons', array( $p_bug_id ) );\n\n\techo '</tr></table>';\n}\n\n/**\n * get the css class name for the given status, user and project\n * @param integer $p_status  An enumeration value.\n * @param integer $p_user    A valid user identifier.\n * @param integer $p_project A valid project identifier.\n * @return string\n *\n * @todo This does not work properly when displaying issues from a project other\n * than then current one, if the other project has custom status or colors.\n * This is due to the dynamic css for color coding (css/status_config.php).\n * Build CSS including project or even user-specific colors ?\n */\nfunction html_get_status_css_class( $p_status, $p_user = null, $p_project = null ) {\n\t$t_status_enum = config_get( 'status_enum_string', null, $p_user, $p_project );\n\tif( MantisEnum::hasValue( $t_status_enum, $p_status ) ) {\n\t\treturn 'status-' . $p_status . '-color';\n\t} else {\n\t\treturn '';\n\t}\n}\n", "<?php\n# MantisBT - A PHP based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Custom Field Configuration\n *\n * @package MantisBT\n * @copyright Copyright 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n * @copyright Copyright 2002  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n * @link http://www.mantisbt.org\n *\n * @uses core.php\n * @uses access_api.php\n * @uses authentication_api.php\n * @uses config_api.php\n * @uses custom_field_api.php\n * @uses form_api.php\n * @uses gpc_api.php\n * @uses helper_api.php\n * @uses html_api.php\n * @uses lang_api.php\n * @uses print_api.php\n * @uses string_api.php\n */\n\nrequire_once( 'core.php' );\nrequire_api( 'access_api.php' );\nrequire_api( 'authentication_api.php' );\nrequire_api( 'config_api.php' );\nrequire_api( 'custom_field_api.php' );\nrequire_api( 'form_api.php' );\nrequire_api( 'gpc_api.php' );\nrequire_api( 'helper_api.php' );\nrequire_api( 'html_api.php' );\nrequire_api( 'lang_api.php' );\nrequire_api( 'print_api.php' );\nrequire_api( 'string_api.php' );\n\nauth_reauthenticate();\n\naccess_ensure_global_level( config_get( 'manage_custom_fields_threshold' ) );\n\n$f_field_id\t= gpc_get_int( 'field_id' );\n$f_return\t= strip_tags( gpc_get_string( 'return', 'manage_custom_field_page.php' ) );\n\ncustom_field_ensure_exists( $f_field_id );\n\nrequire_js( 'manage_custom_field_edit_page.js' );\n\nhtml_page_top();\n\nprint_manage_menu( 'manage_custom_field_edit_page.php' );\n\n$t_definition = custom_field_get_definition( $f_field_id );\n?>\n\n<div id=\"manage-custom-field-update-div\" class=\"form-container\">\n\t<form id=\"manage-custom-field-update-form\" method=\"post\" action=\"manage_custom_field_update.php\">\n\t\t<fieldset>\n\t\t\t<legend><span><?php echo lang_get( 'edit_custom_field_title' ) ?></span></legend>\n\t\t\t<?php echo form_security_field( 'manage_custom_field_update' ); ?>\n\t\t\t<input type=\"hidden\" name=\"field_id\" value=\"<?php echo $f_field_id ?>\" />\n\t\t\t<input type=\"hidden\" name=\"return\" value=\"<?php echo $f_return ?>\" />\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-name\"><span><?php echo lang_get( 'custom_field_name' ) ?></span></label>\n\t\t\t\t<span class=\"input\"><input type=\"text\" id=\"custom-field-name\" name=\"name\" size=\"32\" maxlength=\"64\" value=\"<?php echo string_attribute( $t_definition['name'] ) ?>\" /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-type\"><span><?php echo lang_get( 'custom_field_type' ) ?></span></label>\n\t\t\t\t<span class=\"select\">\n\t\t\t\t\t<select id=\"custom-field-type\" name=\"type\">\n\t\t\t\t\t\t<?php print_enum_string_option_list( 'custom_field_type', (int)$t_definition['type'] ) ?>\n\t\t\t\t\t</select>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-possible-values\"><span><?php echo lang_get( 'custom_field_possible_values' ) ?></span></label>\n\t\t\t\t<span class=\"input\"><input type=\"text\" id=\"custom-field-possible-values\" name=\"possible_values\" size=\"100\" value=\"<?php echo string_attribute( $t_definition['possible_values'] ) ?>\" />\n\t\t\t\t\t<?php echo sprintf( lang_get( 'separate_list_items_by' ), '|' ) ?>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-default-value\"><span><?php echo lang_get( 'custom_field_default_value' ) ?></span></label>\n\t\t\t\t<span class=\"input\">\n\t\t\t\t\t<input type=\"text\" id=\"custom-field-default-value\" name=\"default_value\" size=\"32\" maxlength=\"255\" value=\"<?php echo string_attribute( $t_definition['default_value'] ) ?>\" />\n\t\t\t\t</span>\n\t\t\t\t<span class=\"textarea\">\n\t\t\t\t\t<textarea disabled=\"disabled\" id=\"custom-field-default-value-textarea\" name=\"default_value\" cols=\"80\" rows=\"10\"><?php echo string_attribute( $t_definition['default_value'] ) ?></textarea>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-valid-regexp\"><span><?php echo lang_get( 'custom_field_valid_regexp' ) ?></span></label>\n\t\t\t\t<span class=\"input\"><input type=\"text\" id=\"custom-field-valid-regexp\" name=\"valid_regexp\" size=\"32\" maxlength=\"255\" value=\"<?php echo string_attribute( $t_definition['valid_regexp'] ) ?>\" /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-access-level-r\"><span><?php echo lang_get( 'custom_field_access_level_r' ) ?></span></label>\n\t\t\t\t<span class=\"select\">\n\t\t\t\t\t<select id=\"custom-field-access-level-r\" name=\"access_level_r\">\n\t\t\t\t\t\t<?php print_enum_string_option_list( 'access_levels', (int)$t_definition['access_level_r'] ) ?>\n\t\t\t\t\t</select>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-access-level-rw\"><span><?php echo lang_get( 'custom_field_access_level_rw' ) ?></span></label>\n\t\t\t\t<span class=\"select\">\n\t\t\t\t\t<select id=\"custom-field-access-level-rw\" name=\"access_level_rw\">\n\t\t\t\t\t\t<?php print_enum_string_option_list( 'access_levels', (int)$t_definition['access_level_rw'] ) ?>\n\t\t\t\t\t</select>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-length-min\"><span><?php echo lang_get( 'custom_field_length_min' ) ?></span></label>\n\t\t\t\t<span class=\"input\"><input type=\"text\" id=\"custom-field-length-min\" name=\"length_min\" size=\"32\" maxlength=\"64\" value=\"<?php echo $t_definition['length_min'] ?>\" /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-length-max\"><span><?php echo lang_get( 'custom_field_length_max' ) ?></span></label>\n\t\t\t\t<span class=\"input\"><input type=\"text\" id=\"custom-field-length-max\" name=\"length_max\" size=\"32\" maxlength=\"64\" value=\"<?php echo $t_definition['length_max'] ?>\" /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-filter-by\"><span><?php echo lang_get( 'custom_field_filter_by' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\">\n\t\t\t\t\t<input type=\"checkbox\" id=\"custom-field-filter-by\" name=\"filter_by\"\n\t\t\t\t\t<?php\n\t\t\t\t\t\tif( $t_definition['filter_by'] ) {\n\t\t\t\t\t\t\techo 'checked=\"checked\"';\n\t\t\t\t\t\t}\n\t\t\t\t\t?> />\n\t\t\t\t</span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-display-report\"><span><?php echo lang_get( 'custom_field_display_report' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\"><input type=\"checkbox\" id=\"custom-field-display-report\" name=\"display_report\" value=\"1\" <?php check_checked( (bool)$t_definition['display_report'] ) ?> /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-display-update\"><span><?php echo lang_get( 'custom_field_display_update' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\"><input type=\"checkbox\" id=\"custom-field-display-update\" name=\"display_update\" value=\"1\" <?php check_checked( (bool)$t_definition['display_update'] ) ?> /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-display-resolved\"><span><?php echo lang_get( 'custom_field_display_resolved' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\"><input type=\"checkbox\" id=\"custom-field-display-resolved\" name=\"display_resolved\" value=\"1\" <?php check_checked( (bool)$t_definition['display_resolved'] ) ?> /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-display-closed\"><span><?php echo lang_get( 'custom_field_display_closed' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\"><input type=\"checkbox\" id=\"custom-field-display-closed\" name=\"display_closed\" value=\"1\" <?php check_checked( (bool)$t_definition['display_closed'] ) ?> /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-require-report\"><span><?php echo lang_get( 'custom_field_require_report' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\"><input type=\"checkbox\" id=\"custom-field-require-report\" name=\"require_report\" value=\"1\" <?php check_checked( (bool)$t_definition['require_report'] ) ?> /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-require-update\"><span><?php echo lang_get( 'custom_field_require_update' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\"><input type=\"checkbox\" id=\"custom-field-require-update\" name=\"require_update\" value=\"1\" <?php check_checked( (bool)$t_definition['require_update'] ) ?> /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-require-resolved\"><span><?php echo lang_get( 'custom_field_require_resolved' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\"><input type=\"checkbox\" id=\"custom-field-require-resolved\" name=\"require_resolved\" value=\"1\" <?php check_checked( (bool)$t_definition['require_resolved'] ) ?> /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-require-closed\"><span><?php echo lang_get( 'custom_field_require_closed' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\"><input type=\"checkbox\" id=\"custom-field-require-closed\" name=\"require_closed\" value=\"1\" <?php check_checked( (bool)$t_definition['require_closed'] ) ?> /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<span class=\"submit-button\"><input type=\"submit\" class=\"button\" value=\"<?php echo lang_get( 'update_custom_field_button' ) ?>\" /></span>\n\t\t</fieldset>\n\t</form>\n</div>\n\n<br />\n\n<div class=\"form-container center\">\n\t<form method=\"post\" action=\"manage_custom_field_delete.php\" class=\"action-button\">\n\t\t<fieldset>\n\t\t\t<?php echo form_security_field( 'manage_custom_field_delete' ); ?>\n\t\t\t<input type=\"hidden\" name=\"field_id\" value=\"<?php echo $f_field_id ?>\" />\n\t\t\t<input type=\"hidden\" name=\"return\" value=\"<?php echo string_attribute( $f_return ) ?>\" />\n\t\t\t<input type=\"submit\" class=\"button\" value=\"<?php echo lang_get( 'delete_custom_field_button' ) ?>\" />\n\t\t</fieldset>\n\t</form>\n</div>\n\n<?php /** @todo There is access checking in the ADD action page and at the top of this file.\n           * We may need to add extra checks to exclude projects from the list that the user\n\t\t   * can't link/unlink fields from/to. */\n?>\n<div id=\"manage-custom-field-link-div\" class=\"form-container\">\n\t<form id=\"manage-custom-field-link-form\" method=\"post\" action=\"manage_custom_field_proj_add.php\">\n\t\t<fieldset>\n\t\t\t<legend><span><?php echo lang_get( 'link_custom_field_to_project_title' ) ?></span></legend>\n\n\t\t\t<div id=\"custom-field-link-project\" class=\"field-container\">\n\t\t\t\t<span class=\"display-label\">\n\t\t\t\t\t<span><?php echo lang_get( 'linked_projects_label' ) ?></span>\n\t\t\t\t</span>\n\t\t\t\t<div class=\"display-value\">\n\t\t\t\t\t<?php print_custom_field_projects_list( $f_field_id ) ?>\n\t\t\t\t</div>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\n\t\t\t<input type=\"hidden\" name=\"field_id\" value=\"<?php echo $f_field_id ?>\" />\n\t\t\t<?php echo form_security_field( 'manage_custom_field_proj_add' ); ?>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-project-id\"><span><?php echo lang_get( 'projects_title_label' ) ?></span></label>\n\t\t\t\t<span class=\"select\">\n\t\t\t\t\t<select id=\"custom-field-project-id\" name=\"project_id[]\" multiple=\"multiple\" size=\"5\">\n\t\t\t\t\t\t<?php print_project_option_list( null, false ); ?>\n\t\t\t\t\t</select>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-sequence\"><span><?php echo lang_get( 'custom_field_sequence_label' ) ?></span></label>\n\t\t\t\t<span class=\"input\"><input type=\"text\" id=\"custom-field-sequence\" name=\"sequence\" value=\"0\" /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<span class=\"submit-button\"><input type=\"submit\" class=\"button\" value=\"<?php echo lang_get( 'link_custom_field_to_project_button' ) ?>\" /></span>\n\t\t</fieldset>\n\t</form>\n</div><?php\n\nhtml_page_bottom();\n"], "fixing_code": ["<?php\n# MantisBT - A PHP based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * HTML API\n *\n * These functions control the HTML output of each page.\n *\n * This is the call order of these functions, should you need to figure out\n * which to modify or which to leave out:\n *\n * html_page_top\n *   html_page_top1\n *     html_begin\n *     html_head_begin\n *     html_content_type\n *     (Additional META tags: {@see $g_meta_include_file} and {@see robots_meta config})\n *     html_title\n *     html_css\n *     html_rss_link\n *     html_head_javascript\n *   (html_meta_redirect)\n *   html_page_top2\n *     html_page_top2a\n *       html_head_end\n *       html_body_begin\n *       html_top_banner\n *     html_login_info\n *     (print_project_menu_bar)\n *     print_menu\n *\n * ...Page content here...\n *\n * html_page_bottom\n *   html_page_bottom1\n *     (print_menu)\n *     html_page_bottom1a\n *       html_bottom_banner\n *       html_footer\n *       html_body_end\n *       html_end\n *\n * @package CoreAPI\n * @subpackage HTMLAPI\n * @copyright Copyright 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n * @copyright Copyright 2002  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n * @link http://www.mantisbt.org\n *\n * @uses access_api.php\n * @uses authentication_api.php\n * @uses bug_api.php\n * @uses config_api.php\n * @uses constant_inc.php\n * @uses current_user_api.php\n * @uses database_api.php\n * @uses error_api.php\n * @uses event_api.php\n * @uses file_api.php\n * @uses filter_api.php\n * @uses filter_constants_inc.php\n * @uses form_api.php\n * @uses helper_api.php\n * @uses lang_api.php\n * @uses news_api.php\n * @uses php_api.php\n * @uses print_api.php\n * @uses project_api.php\n * @uses rss_api.php\n * @uses string_api.php\n * @uses user_api.php\n * @uses utility_api.php\n */\n\nrequire_api( 'access_api.php' );\nrequire_api( 'authentication_api.php' );\nrequire_api( 'bug_api.php' );\nrequire_api( 'config_api.php' );\nrequire_api( 'constant_inc.php' );\nrequire_api( 'current_user_api.php' );\nrequire_api( 'database_api.php' );\nrequire_api( 'error_api.php' );\nrequire_api( 'event_api.php' );\nrequire_api( 'file_api.php' );\nrequire_api( 'filter_api.php' );\nrequire_api( 'filter_constants_inc.php' );\nrequire_api( 'form_api.php' );\nrequire_api( 'helper_api.php' );\nrequire_api( 'lang_api.php' );\nrequire_api( 'news_api.php' );\nrequire_api( 'php_api.php' );\nrequire_api( 'print_api.php' );\nrequire_api( 'project_api.php' );\nrequire_api( 'rss_api.php' );\nrequire_api( 'string_api.php' );\nrequire_api( 'user_api.php' );\nrequire_api( 'utility_api.php' );\n\n$g_rss_feed_url = null;\n\n$g_robots_meta = '';\n\n# flag for error handler to skip header menus\n$g_error_send_page_header = true;\n\n$g_stylesheets_included = array();\n$g_scripts_included = array();\n\n/**\n * Sets the url for the rss link associated with the current page.\n * null: means no feed (default).\n * @param string $p_rss_feed_url RSS feed URL.\n * @return void\n */\nfunction html_set_rss_link( $p_rss_feed_url ) {\n\tif( OFF != config_get( 'rss_enabled' ) ) {\n\t\tglobal $g_rss_feed_url;\n\t\t$g_rss_feed_url = $p_rss_feed_url;\n\t}\n}\n\n/**\n * This method must be called before the html_page_top* methods.  It marks the page as not\n * for indexing.\n * @return void\n */\nfunction html_robots_noindex() {\n\tglobal $g_robots_meta;\n\t$g_robots_meta = 'noindex,follow';\n}\n\n/**\n * Prints the link that allows auto-detection of the associated feed.\n * @return void\n */\nfunction html_rss_link() {\n\tglobal $g_rss_feed_url;\n\n\tif( $g_rss_feed_url !== null ) {\n\t\techo '<link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS\" href=\"' . string_attribute( $g_rss_feed_url ) . '\" />' . \"\\n\";\n\t}\n}\n\n/**\n * Prints a <script> tag to include a JavaScript file.\n * @param string $p_filename Name of JavaScript file (with extension) to include.\n * @return void\n */\nfunction html_javascript_link( $p_filename ) {\n\techo \"\\t\", '<script type=\"text/javascript\" src=\"', helper_mantis_url( 'js/' . $p_filename ), '\"></script>' . \"\\n\";\n}\n\n/**\n * Defines the top of a HTML page\n * @param string $p_page_title   Html page title.\n * @param string $p_redirect_url URL to redirect to if necessary.\n * @return void\n */\nfunction html_page_top( $p_page_title = null, $p_redirect_url = null ) {\n\thtml_page_top1( $p_page_title );\n\tif( $p_redirect_url !== null ) {\n\t\thtml_meta_redirect( $p_redirect_url );\n\t}\n\thtml_page_top2();\n}\n\n/**\n * Print the part of the page that comes before meta redirect tags should be inserted\n * @param string $p_page_title Page title.\n * @return void\n */\nfunction html_page_top1( $p_page_title = null ) {\n\thtml_begin();\n\thtml_head_begin();\n\n\thtml_content_type();\n\t$t_meta = config_get_global( 'meta_include_file' );\n\tif( !is_blank( $t_meta ) ) {\n\t\tinclude( $t_meta );\n\t}\n\tglobal $g_robots_meta;\n\tif( !is_blank( $g_robots_meta ) ) {\n\t\techo \"\\t\", '<meta name=\"robots\" content=\"', $g_robots_meta, '\" />', \"\\n\";\n\t}\n\n\thtml_title( $p_page_title );\n\thtml_css();\n\thtml_rss_link();\n\n\t$t_favicon_image = config_get( 'favicon_image' );\n\tif( !is_blank( $t_favicon_image ) ) {\n\t\techo \"\\t\", '<link rel=\"shortcut icon\" href=\"', helper_mantis_url( $t_favicon_image ), '\" type=\"image/x-icon\" />', \"\\n\";\n\t}\n\n\t# Advertise the availability of the browser search plug-ins.\n\techo \"\\t\", '<link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"MantisBT: Text Search\" href=\"' . string_sanitize_url( 'browser_search_plugin.php?type=text', true ) . '\" />' . \"\\n\";\n\techo \"\\t\", '<link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"MantisBT: Issue Id\" href=\"' . string_sanitize_url( 'browser_search_plugin.php?type=id', true ) . '\" />' . \"\\n\";\n\n\thtml_head_javascript();\n}\n\n/**\n * Print the part of the page that comes after meta tags, but before the actual page content\n * @return void\n */\nfunction html_page_top2() {\n\thtml_page_top2a();\n\n\tif( !db_is_connected() ) {\n\t\treturn;\n\t}\n\n\tif( auth_is_user_authenticated() ) {\n\t\thtml_login_info();\n\n\t\tif( ON == config_get( 'show_project_menu_bar' ) ) {\n\t\t\tprint_project_menu_bar();\n\t\t\techo '<br />';\n\t\t}\n\t}\n\tprint_menu();\n\techo '<div id=\"content\">', \"\\n\";\n\tevent_signal( 'EVENT_LAYOUT_CONTENT_BEGIN' );\n}\n\n/**\n * Print the part of the page that comes after meta tags and before the\n *  actual page content, but without login info or menus.  This is used\n *  directly during the login process and other times when the user may\n *  not be authenticated\n * @return void\n */\nfunction html_page_top2a() {\n\tglobal $g_error_send_page_header;\n\n\thtml_head_end();\n\thtml_body_begin();\n\t$g_error_send_page_header = false;\n\thtml_top_banner();\n}\n\n/**\n * Print the part of the page that comes below the page content\n * $p_file should always be the __FILE__ variable. This is passed to show source\n * @param string $p_file Should always be the __FILE__ variable. This is passed to show source.\n * @return void\n */\nfunction html_page_bottom( $p_file = null ) {\n\thtml_page_bottom1( $p_file );\n}\n\n/**\n * Print the part of the page that comes below the page content\n * $p_file should always be the __FILE__ variable. This is passed to show source\n * @param string $p_file Should always be the __FILE__ variable. This is passed to show source.\n * @return void\n */\nfunction html_page_bottom1( $p_file = null ) {\n\tif( !db_is_connected() ) {\n\t\treturn;\n\t}\n\n\tevent_signal( 'EVENT_LAYOUT_CONTENT_END' );\n\techo '</div>', \"\\n\";\n\tif( config_get( 'show_footer_menu' ) ) {\n\t\techo '<br />';\n\t\tprint_menu();\n\t}\n\n\thtml_page_bottom1a( $p_file );\n}\n\n/**\n * Print the part of the page that comes below the page content but leave off\n * the menu.  This is used during the login process and other times when the\n * user may not be authenticated.\n * @param string $p_file Should always be the __FILE__ variable.\n * @return void\n */\nfunction html_page_bottom1a( $p_file = null ) {\n\tif( null === $p_file ) {\n\t\t$p_file = basename( $_SERVER['SCRIPT_NAME'] );\n\t}\n\n\terror_print_delayed();\n\n\thtml_bottom_banner();\n\thtml_footer();\n\thtml_body_end();\n\thtml_end();\n}\n\n/**\n * (1) Print the document type and the opening <html> tag\n * @return void\n */\nfunction html_begin() {\n\techo '<!DOCTYPE html>', \"\\n\";\n\techo '<html>', \"\\n\";\n}\n\n/**\n * (2) Begin the <head> section\n * @return void\n */\nfunction html_head_begin() {\n\techo '<head>', \"\\n\";\n}\n\n/**\n * (3) Print the content-type\n * @return void\n */\nfunction html_content_type() {\n\techo \"\\t\", '<meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />', \"\\n\";\n}\n\n/**\n * (4) Print the window title\n * @param string $p_page_title Window title.\n * @return void\n */\nfunction html_title( $p_page_title = null ) {\n\t$t_page_title = string_html_specialchars( $p_page_title );\n\t$t_title = string_html_specialchars( config_get( 'window_title' ) );\n\techo \"\\t\", '<title>';\n\tif( empty( $t_page_title ) ) {\n\t\techo $t_title;\n\t} else {\n\t\tif( empty( $t_title ) ) {\n\t\t\techo $t_page_title;\n\t\t} else {\n\t\t\techo $t_page_title . ' - ' . $t_title;\n\t\t}\n\t}\n\techo '</title>', \"\\n\";\n}\n\n/**\n * Require a CSS file to be in html page headers\n * @param string $p_stylesheet_path Path to CSS style sheet.\n * @return void\n */\nfunction require_css( $p_stylesheet_path ) {\n\tglobal $g_stylesheets_included;\n\t$g_stylesheets_included[$p_stylesheet_path] = $p_stylesheet_path;\n}\n\n/**\n * (5) Print the link to include the CSS file\n * @return void\n */\nfunction html_css() {\n\tglobal $g_stylesheets_included;\n\thtml_css_link( config_get( 'css_include_file' ) );\n\n\tif ( config_get_global( 'cdn_enabled' ) == ON ) {\n\t\techo '<link rel=\"stylesheet\" href=\"https://ajax.googleapis.com/ajax/libs/jqueryui/' . JQUERY_UI_VERSION . '/themes/smoothness/jquery-ui.css\">' . \"\\n\";\n\t} else {\n\t\thtml_css_link( 'jquery-ui-' . JQUERY_UI_VERSION . '.min.css' );\n\t}\n\n\thtml_css_link( 'common_config.php' );\n\t# Add right-to-left css if needed\n\tif( lang_get( 'directionality' ) == 'rtl' ) {\n\t\thtml_css_link( config_get( 'css_rtl_include_file' ) );\n\t}\n\tforeach( $g_stylesheets_included as $t_stylesheet_path ) {\n\t\thtml_css_link( $t_stylesheet_path );\n\t}\n}\n\n/**\n * Prints a CSS link\n * @param string $p_filename Filename.\n * @return void\n */\nfunction html_css_link( $p_filename ) {\n\techo \"\\t\", '<link rel=\"stylesheet\" type=\"text/css\" href=\"', string_sanitize_url( helper_mantis_url( 'css/' . $p_filename ), true ), '\" />' . \"\\n\";\n}\n\n\n/**\n * (6) Print an HTML meta tag to redirect to another page\n * This function is optional and may be called by pages that need a redirect.\n * $p_time is the number of seconds to wait before redirecting.\n * If we have handled any errors on this page return false and don't redirect.\n *\n * @param string  $p_url      The page to redirect: has to be a relative path.\n * @param integer $p_time     Seconds to wait for before redirecting.\n * @param boolean $p_sanitize Apply string_sanitize_url to passed URL.\n * @return boolean\n */\nfunction html_meta_redirect( $p_url, $p_time = null, $p_sanitize = true ) {\n\tif( ON == config_get_global( 'stop_on_errors' ) && error_handled() ) {\n\t\treturn false;\n\t}\n\n\tif( null === $p_time ) {\n\t\t$p_time = current_user_get_pref( 'redirect_delay' );\n\t}\n\n\t$t_url = config_get( 'path' );\n\tif( $p_sanitize ) {\n\t\t$t_url .= string_sanitize_url( $p_url );\n\t} else {\n\t\t$t_url .= $p_url;\n\t}\n\n\t$t_url = htmlspecialchars( $t_url );\n\n\techo \"\\t\" . '<meta http-equiv=\"Refresh\" content=\"' . $p_time . ';URL=' . $t_url . '\" />' . \"\\n\";\n\n\treturn true;\n}\n\n/**\n * Require a javascript file to be in html page headers\n * @param string $p_script_path Path to javascript file.\n * @return void\n */\nfunction require_js( $p_script_path ) {\n\tglobal $g_scripts_included;\n\t$g_scripts_included[$p_script_path] = $p_script_path;\n}\n\n/**\n * (6a) Javascript...\n * @return void\n */\nfunction html_head_javascript() {\n\tglobal $g_scripts_included;\n\n\techo \"\\t\" . '<script type=\"text/javascript\" src=\"' . helper_mantis_url( 'javascript_config.php' ) . '\"></script>' . \"\\n\";\n\techo \"\\t\" . '<script type=\"text/javascript\" src=\"' . helper_mantis_url( 'javascript_translations.php' ) . '\"></script>' . \"\\n\";\n\n\tif ( config_get_global( 'cdn_enabled' ) == ON ) {\n\t\techo \"\\t\" . '<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/' . JQUERY_VERSION . '/jquery.min.js\"></script>' . \"\\n\";\n\t\techo \"\\t\" . '<script src=\"https://ajax.googleapis.com/ajax/libs/jqueryui/' . JQUERY_UI_VERSION . '/jquery-ui.min.js\"></script>' . \"\\n\";\n\t} else {\n\t\thtml_javascript_link( 'jquery-' . JQUERY_VERSION . '.min.js' );\n\t\thtml_javascript_link( 'jquery-ui-' . JQUERY_UI_VERSION . '.min.js' );\n\t}\n\n\thtml_javascript_link( 'common.js' );\n\tforeach ( $g_scripts_included as $t_script_path ) {\n\t\thtml_javascript_link( $t_script_path );\n\t}\n}\n\n/**\n * (7) End the <head> section\n * @return void\n */\nfunction html_head_end() {\n\tevent_signal( 'EVENT_LAYOUT_RESOURCES' );\n\n\techo '</head>', \"\\n\";\n}\n\n/**\n * (8) Begin the <body> section\n * @return void\n */\nfunction html_body_begin() {\n\t$t_centered_page = is_page_name( 'login_page' ) || is_page_name( 'signup_page' ) || is_page_name( 'signup' ) || is_page_name( 'lost_pwd_page' );\n\n\techo '<body>', \"\\n\";\n\n\tif( $t_centered_page ) {\n\t\techo '<div id=\"mantis\" class=\"centered_page\">', \"\\n\";\n\t} else {\n\t\techo '<div id=\"mantis\">', \"\\n\";\n\t}\n\n\tevent_signal( 'EVENT_LAYOUT_BODY_BEGIN' );\n}\n\n/**\n * (9) Print a user-defined banner at the top of the page if there is one.\n * @return void\n */\nfunction html_top_banner() {\n\t$t_page = config_get( 'top_include_page' );\n\t$t_logo_image = config_get( 'logo_image' );\n\t$t_logo_url = config_get( 'logo_url' );\n\n\tif( is_blank( $t_logo_image ) ) {\n\t\t$t_show_logo = false;\n\t} else {\n\t\t$t_show_logo = true;\n\t\tif( is_blank( $t_logo_url ) ) {\n\t\t\t$t_show_url = false;\n\t\t} else {\n\t\t\t$t_show_url = true;\n\t\t}\n\t}\n\n\tif( !is_blank( $t_page ) && file_exists( $t_page ) && !is_dir( $t_page ) ) {\n\t\tinclude( $t_page );\n\t} else if( $t_show_logo ) {\n\t\techo '<div id=\"banner\">';\n\t\tif( $t_show_url ) {\n\t\t\techo '<a id=\"logo-link\" href=\"', config_get( 'logo_url' ), '\">';\n\t\t}\n\t\t$t_alternate_text = string_html_specialchars( config_get( 'window_title' ) );\n\t\techo '<img id=\"logo-image\" alt=\"', $t_alternate_text, '\" src=\"' . helper_mantis_url( $t_logo_image ) . '\" />';\n\t\tif( $t_show_url ) {\n\t\t\techo '</a>';\n\t\t}\n\t\techo '</div>';\n\t}\n\n\tevent_signal( 'EVENT_LAYOUT_PAGE_HEADER' );\n}\n\n/**\n * (10) Print the user's account information\n * Also print the select box where users can switch projects\n * @return void\n */\nfunction html_login_info() {\n\t$t_username = current_user_get_field( 'username' );\n\t$t_access_level = get_enum_element( 'access_levels', current_user_get_access_level() );\n\t$t_now = date( config_get( 'complete_date_format' ) );\n\t$t_realname = current_user_get_field( 'realname' );\n\n\techo '<div class=\"info-bar\">' . \"\\n\";\n\n\t# Login information\n\techo '<div id=\"login-info\">' . \"\\n\";\n\tif( current_user_is_anonymous() ) {\n\t\t$t_return_page = $_SERVER['SCRIPT_NAME'];\n\t\tif( isset( $_SERVER['QUERY_STRING'] ) ) {\n\t\t\t$t_return_page .= '?' . $_SERVER['QUERY_STRING'];\n\t\t}\n\n\t\t$t_return_page = string_url( $t_return_page );\n\n\t\techo \"\\t\" . '<span id=\"logged-anon-label\">' . lang_get( 'anonymous' ) . '</span>' . \"\\n\";\n\t\techo \"\\t\" . '<span id=\"login-link\"><a href=\"' . helper_mantis_url( 'login_page.php?return=' . $t_return_page ) . '\">' . lang_get( 'login_link' ) . '</a></span>' . \"\\n\";\n\t\tif( config_get_global( 'allow_signup' ) == ON ) {\n\t\t\techo \"\\t\" . '<span id=\"signup-link\"><a href=\"' . helper_mantis_url( 'signup_page.php' ) . '\">' . lang_get( 'signup_link' ) . '</a></span>' . \"\\n\";\n\t\t}\n\t} else {\n\t\techo \"\\t\" . '<span id=\"logged-in-label\">' . lang_get( 'logged_in_as' ) . '</span>' . \"\\n\";\n\t\techo \"\\t\" . '<span id=\"logged-in-user\">' . string_html_specialchars( $t_username ) . '</span>' . \"\\n\";\n\t\techo \"\\t\" . '<span id=\"logged-in\">';\n\t\techo !is_blank( $t_realname ) ?  \"\\t\" . '<span id=\"logged-in-realname\">' . string_html_specialchars( $t_realname ) . '</span>' . \"\\n\" : '';\n\t\techo \"\\t\" . '<span id=\"logged-in-accesslevel\" class=\"' . $t_access_level . '\">' . $t_access_level . '</span>' . \"\\n\";\n\t\techo \"\\t\" . '</span>' . \"\\n\";\n\t}\n\techo '</div>' . \"\\n\";\n\n\t# RSS feed\n\tif( OFF != config_get( 'rss_enabled' ) ) {\n\t\techo '<div id=\"rss-feed\">' . \"\\n\";\n\t\t# Link to RSS issues feed for the selected project, including authentication details.\n\t\techo \"\\t\" . '<a href=\"' . htmlspecialchars( rss_get_issues_feed_url() ) . '\">' . \"\\n\";\n\t\techo \"\\t\" . '<img src=\"' . helper_mantis_url( 'images/rss.png' ) . '\" alt=\"' . lang_get( 'rss' ) . '\" title=\"' . lang_get( 'rss' ) . '\" />' . \"\\n\";\n\t\techo \"\\t\" . '</a>' . \"\\n\";\n\t\techo '</div>' . \"\\n\";\n\t}\n\n\t# Project Selector (hidden if only one project visisble to user)\n\t$t_show_project_selector = true;\n\t$t_project_ids = current_user_get_accessible_projects();\n\tif( count( $t_project_ids ) == 1 ) {\n\t\t$t_project_id = (int)$t_project_ids[0];\n\t\tif( count( current_user_get_accessible_subprojects( $t_project_id ) ) == 0 ) {\n\t\t\t$t_show_project_selector = false;\n\t\t}\n\t}\n\n\tif( $t_show_project_selector ) {\n\t\techo '<div id=\"project-selector-div\">';\n\t\techo '<form method=\"post\" id=\"form-set-project\" action=\"' . helper_mantis_url( 'set_project.php' ) . '\">';\n\t\techo '<fieldset id=\"project-selector\">';\n\t\t# CSRF protection not required here - form does not result in modifications\n\n\t\techo '<label for=\"form-set-project-id\">' . lang_get( 'email_project' ) . '</label>';\n\t\techo '<select id=\"form-set-project-id\" name=\"project_id\">';\n\t\tprint_project_option_list( join( ';', helper_get_current_project_trace() ), true, null, true );\n\t\techo '</select> ';\n\t\techo '<input type=\"submit\" class=\"button\" value=\"' . lang_get( 'switch' ) . '\" />';\n\t\techo '</fieldset>';\n\t\techo '</form>';\n\t\techo '</div>';\n\t} else {\n\t\t# User has only one project, set it as both current and default\n\t\tif( ALL_PROJECTS == helper_get_current_project() ) {\n\t\t\thelper_set_current_project( $t_project_id );\n\n\t\t\tif( !current_user_is_protected() ) {\n\t\t\t\tcurrent_user_set_default_project( $t_project_id );\n\t\t\t}\n\n\t\t\t# Force reload of current page, except if we got here after\n\t\t\t# creating the first project\n\t\t\t$t_redirect_url = str_replace( config_get( 'short_path' ), '', $_SERVER['REQUEST_URI'] );\n\t\t\tif( 'manage_proj_create.php' != $t_redirect_url ) {\n\t\t\t\thtml_meta_redirect( $t_redirect_url, 0, false );\n\t\t\t}\n\t\t}\n\t}\n\n\t# Current time\n\techo '<div id=\"current-time\">' . $t_now . '</div>';\n\techo '</div>' . \"\\n\";\n}\n\n/**\n * (11) Print a user-defined banner at the bottom of the page if there is one.\n * @return void\n */\nfunction html_bottom_banner() {\n\t$t_page = config_get( 'bottom_include_page' );\n\n\tif( !is_blank( $t_page ) && file_exists( $t_page ) && !is_dir( $t_page ) ) {\n\t\tinclude( $t_page );\n\t}\n}\n\n/**\n * A function that outputs that an operation was successful and provides a redirect link.\n * @param string $p_redirect_url The url to redirect to.\n * @param string $p_message      Message to display to the user.\n * @return void\n */\nfunction html_operation_successful( $p_redirect_url, $p_message = '' ) {\n\techo '<div class=\"success-msg\">';\n\n\tif( !is_blank( $p_message ) ) {\n\t\techo $p_message . '<br />';\n\t}\n\n\techo lang_get( 'operation_successful' ).'<br />';\n\tprint_bracket_link( string_sanitize_url( $p_redirect_url ), lang_get( 'proceed' ) );\n\techo '</div>';\n}\n\n/**\n * Checks if the current page load was triggered by auto-refresh or real activity\n * @return bool true: auto-refresh, false: triggered by user.\n */\nfunction html_is_auto_refresh() {\n\treturn gpc_get_bool( 'refresh' );\n}\n\n/**\n * (13) Print the page footer information\n * @return void\n */\nfunction html_footer() {\n\tglobal $g_queries_array, $g_request_time;\n\n\t# If a user is logged in, update their last visit time.\n\t# We do this at the end of the page so that:\n\t#  1) we can display the user's last visit time on a page before updating it\n\t#  2) we don't invalidate the user cache immediately after fetching it\n\t#  3) don't do this on the password verification or update page, as it causes the\n\t#    verification comparison to fail\n\t#  4) don't do that on pages that auto-refresh (View Issues page).\n\tif( auth_is_user_authenticated() &&\n\t\t!current_user_is_anonymous() &&\n\t\t!( is_page_name( 'verify.php' ) || is_page_name( 'account_update.php' ) ) &&\n\t\t!html_is_auto_refresh() ) {\n\t\t$t_user_id = auth_get_current_user_id();\n\t\tuser_update_last_visit( $t_user_id );\n\t}\n\n\techo '<div id=\"footer\">' . \"\\n\";\n\techo '<hr />' . \"\\n\";\n\n\t# We don't have a button anymore, so for now we will only show the resized\n\t# version of the logo when not on login page.\n\tif( !is_page_name( 'login_page' ) ) {\n\t\techo \"\\t\" . '<div id=\"powered-by-mantisbt-logo\">' . \"\\n\";\n\t\t$t_mantisbt_logo_url = helper_mantis_url( 'images/mantis_logo.png' );\n\t\techo \"\\t\\t\" . '<a href=\"http://www.mantisbt.org\"\n\t\t\ttitle=\"Mantis Bug Tracker: a free and open source web based bug tracking system.\">\n\t\t\t<img src=\"' . $t_mantisbt_logo_url . '\" width=\"102\" height=\"35\"\n\t\t\t\talt=\"Powered by Mantis Bug Tracker: a free and open source web based bug tracking system.\" />\n\t\t\t</a>' . \"\\n\";\n\t\techo \"\\t\" . '</div>' . \"\\n\";\n\t}\n\n\t# Show MantisBT version and copyright statement\n\t$t_version_suffix = '';\n\t$t_copyright_years = ' 2000 - ' . date( 'Y' );\n\tif( config_get( 'show_version' ) == ON ) {\n\t\t$t_version_suffix = ' ' . htmlentities( MANTIS_VERSION . config_get_global( 'version_suffix' ) );\n\t}\n\n\techo '<address id=\"mantisbt-copyright\">' . \"\\n\";\n\techo '<address id=\"version\">Powered by <a href=\"http://www.mantisbt.org\" title=\"bug tracking software\">MantisBT ' . $t_version_suffix . \"</a></address>\\n\";\n\techo 'Copyright &copy;' . $t_copyright_years . ' MantisBT Team';\n\n\t# Show optional user-specified custom copyright statement\n\t$t_copyright_statement = config_get( 'copyright_statement' );\n\tif( $t_copyright_statement ) {\n\t\techo \"\\t\" . '<address id=\"user-copyright\">' . $t_copyright_statement . '</address>' . \"\\n\";\n\t}\n\n\techo '</address>' . \"\\n\";\n\n\t# Show contact information\n\tif( !is_page_name( 'login_page' ) ) {\n\t\t$t_webmaster_email = config_get( 'webmaster_email' );\n\t\tif( !is_blank( $t_webmaster_email ) ) {\n\t\t\t$t_webmaster_contact_information = sprintf( lang_get( 'webmaster_contact_information' ), string_html_specialchars( $t_webmaster_email ) );\n\t\t\techo \"\\t\" . '<address id=\"webmaster-contact-information\">' . $t_webmaster_contact_information . '</address>' . \"\\n\";\n\t\t}\n\t}\n\n\tevent_signal( 'EVENT_LAYOUT_PAGE_FOOTER' );\n\n\t# Print horizontal rule if any debugging statistics follow\n\tif( config_get( 'show_timer' ) || config_get( 'show_memory_usage' ) || config_get( 'show_queries_count' ) ) {\n\t\techo \"\\t\" . '<hr />' . \"\\n\";\n\t}\n\n\t# Print the page execution time\n\tif( config_get( 'show_timer' ) ) {\n\t\t$t_page_execution_time = sprintf( lang_get( 'page_execution_time' ), number_format( microtime( true ) - $g_request_time, 4 ) );\n\t\techo \"\\t\" . '<p id=\"page-execution-time\">' . $t_page_execution_time . '</p>' . \"\\n\";\n\t}\n\n\t# Print the page memory usage\n\tif( config_get( 'show_memory_usage' ) ) {\n\t\t$t_page_memory_usage = sprintf( lang_get( 'memory_usage_in_kb' ), number_format( memory_get_peak_usage() / 1024 ) );\n\t\techo \"\\t\" . '<p id=\"page-memory-usage\">' . $t_page_memory_usage . '</p>' . \"\\n\";\n\t}\n\n\t# Determine number of unique queries executed\n\tif( config_get( 'show_queries_count' ) ) {\n\t\t$t_total_queries_count = count( $g_queries_array );\n\t\t$t_unique_queries_count = 0;\n\t\t$t_total_query_execution_time = 0;\n\t\t$t_unique_queries = array();\n\t\tfor( $i = 0; $i < $t_total_queries_count; $i++ ) {\n\t\t\tif( !in_array( $g_queries_array[$i][0], $t_unique_queries ) ) {\n\t\t\t\t$t_unique_queries_count++;\n\t\t\t\t$g_queries_array[$i][3] = false;\n\t\t\t\tarray_push( $t_unique_queries, $g_queries_array[$i][0] );\n\t\t\t} else {\n\t\t\t\t$g_queries_array[$i][3] = true;\n\t\t\t}\n\t\t\t$t_total_query_execution_time += $g_queries_array[$i][1];\n\t\t}\n\n\t\t$t_total_queries_executed = sprintf( lang_get( 'total_queries_executed' ), $t_total_queries_count );\n\t\techo \"\\t\" . '<p id=\"total-queries-count\">' . $t_total_queries_executed . '</p>' . \"\\n\";\n\t\tif( config_get_global( 'db_log_queries' ) ) {\n\t\t\t$t_unique_queries_executed = sprintf( lang_get( 'unique_queries_executed' ), $t_unique_queries_count );\n\t\t\techo \"\\t\" . '<p id=\"unique-queries-count\">' . $t_unique_queries_executed . '</p>' . \"\\n\";\n\t\t}\n\t\t$t_total_query_time = sprintf( lang_get( 'total_query_execution_time' ), $t_total_query_execution_time );\n\t\techo \"\\t\" . '<p id=\"total-query-execution-time\">' . $t_total_query_time . '</p>' . \"\\n\";\n\t}\n\n\t# Print table of log events\n\tlog_print_to_page();\n\n\techo '</div>' . \"\\n\";\n}\n\n/**\n * (14) End the <body> section\n * @return void\n */\nfunction html_body_end() {\n\t# Should code need to be added to this function in the future, it should be\n\t# placed *above* this event, which needs to be the last thing to occur\n\t# before the actual body ends (see #20084)\n\tevent_signal( 'EVENT_LAYOUT_BODY_END' );\n\n\techo '</div>', \"\\n\";\n\n\techo '</body>', \"\\n\";\n}\n\n/**\n * (15) Print the closing <html> tag\n * @return void\n */\nfunction html_end() {\n\techo '</html>', \"\\n\";\n\n\tif( function_exists( 'fastcgi_finish_request' ) ) {\n\t\tfastcgi_finish_request();\n\t}\n}\n\n/**\n * Prepare an array of additional menu options from a configuration variable\n * @param string $p_config Configuration variable name.\n * @return array\n */\nfunction prepare_custom_menu_options( $p_config ) {\n\t$t_custom_menu_options = config_get( $p_config );\n\t$t_options = array();\n\n\tforeach( $t_custom_menu_options as $t_custom_option ) {\n\t\t$t_access_level = $t_custom_option[1];\n\t\tif( access_has_project_level( $t_access_level ) ) {\n\t\t\t$t_caption = string_html_specialchars( lang_get_defaulted( $t_custom_option[0] ) );\n\t\t\t$t_link = string_attribute( $t_custom_option[2] );\n\t\t\t$t_options[] = '<a href=\"' . $t_link . '\">' . $t_caption . '</a>';\n\t\t}\n\t}\n\n\treturn $t_options;\n}\n\n/**\n * Print the main menu\n * @return void\n */\nfunction print_menu() {\n\tif( auth_is_user_authenticated() ) {\n\t\t$t_protected = current_user_get_field( 'protected' );\n\t\t$t_current_project = helper_get_current_project();\n\n\t\t$t_menu_options = array();\n\n\t\t# Main Page\n\t\tif( config_get( 'news_enabled' ) == ON ) {\n\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'main_page.php' ) . '\">' . lang_get( 'main_link' ) . '</a>';\n\t\t}\n\n\t\t# Plugin / Event added options\n\t\t$t_event_menu_options = event_signal( 'EVENT_MENU_MAIN_FRONT' );\n\t\tforeach( $t_event_menu_options as $t_plugin => $t_plugin_menu_options ) {\n\t\t\tforeach( $t_plugin_menu_options as $t_callback => $t_callback_menu_options ) {\n\t\t\t\tif( is_array( $t_callback_menu_options ) ) {\n\t\t\t\t\t$t_menu_options = array_merge( $t_menu_options, $t_callback_menu_options );\n\t\t\t\t} else {\n\t\t\t\t\tif( !is_null( $t_callback_menu_options ) ) {\n\t\t\t\t\t\t$t_menu_options[] = $t_callback_menu_options;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t# My View\n\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'my_view_page.php\">' ) . lang_get( 'my_view_link' ) . '</a>';\n\n\t\t# View Bugs\n\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'view_all_bug_page.php\">' ) . lang_get( 'view_bugs_link' ) . '</a>';\n\n\t\t# Report Bugs\n\t\tif( access_has_project_level( config_get( 'report_bug_threshold' ) ) ) {\n\t\t\t$t_menu_options[] = string_get_bug_report_link();\n\t\t}\n\n\t\t# Changelog Page\n\t\tif( access_has_project_level( config_get( 'view_changelog_threshold' ) ) ) {\n\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'changelog_page.php\">' ) . lang_get( 'changelog_link' ) . '</a>';\n\t\t}\n\n\t\t# Roadmap Page\n\t\tif( access_has_project_level( config_get( 'roadmap_view_threshold' ) ) ) {\n\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'roadmap_page.php\">' ) . lang_get( 'roadmap_link' ) . '</a>';\n\t\t}\n\n\t\t# Summary Page\n\t\tif( access_has_project_level( config_get( 'view_summary_threshold' ) ) ) {\n\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'summary_page.php\">' ) . lang_get( 'summary_link' ) . '</a>';\n\t\t}\n\n\t\t# Project Documentation Page\n\t\tif( ON == config_get( 'enable_project_documentation' ) ) {\n\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'proj_doc_page.php\">' ) . lang_get( 'docs_link' ) . '</a>';\n\t\t}\n\n\t\t# Project Wiki\n\t\tif( config_get_global( 'wiki_enable' ) == ON ) {\n\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'wiki.php?type=project&amp;id=' ) . $t_current_project . '\">' . lang_get( 'wiki' ) . '</a>';\n\t\t}\n\n\t\t# Plugin / Event added options\n\t\t$t_event_menu_options = event_signal( 'EVENT_MENU_MAIN' );\n\t\tforeach( $t_event_menu_options as $t_plugin => $t_plugin_menu_options ) {\n\t\t\tforeach( $t_plugin_menu_options as $t_callback => $t_callback_menu_options ) {\n\t\t\t\tif( is_array( $t_callback_menu_options ) ) {\n\t\t\t\t\t$t_menu_options = array_merge( $t_menu_options, $t_callback_menu_options );\n\t\t\t\t} else {\n\t\t\t\t\tif( !is_null( $t_callback_menu_options ) ) {\n\t\t\t\t\t\t$t_menu_options[] = $t_callback_menu_options;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t# Manage Users (admins) or Manage Project (managers) or Manage Custom Fields\n\t\tif( access_has_global_level( config_get( 'manage_site_threshold' ) ) ) {\n\t\t\t$t_link = helper_mantis_url( 'manage_overview_page.php' );\n\t\t\t$t_menu_options[] = '<a class=\"manage-menu-link\" href=\"' . $t_link . '\">' . lang_get( 'manage_link' ) . '</a>';\n\t\t} else {\n\t\t\t$t_show_access = min( config_get( 'manage_user_threshold' ), config_get( 'manage_project_threshold' ), config_get( 'manage_custom_fields_threshold' ) );\n\t\t\tif( access_has_global_level( $t_show_access ) || access_has_any_project( $t_show_access ) ) {\n\t\t\t\t$t_current_project = helper_get_current_project();\n\t\t\t\tif( access_has_global_level( config_get( 'manage_user_threshold' ) ) ) {\n\t\t\t\t\t$t_link = helper_mantis_url( 'manage_user_page.php' );\n\t\t\t\t} else {\n\t\t\t\t\tif( access_has_project_level( config_get( 'manage_project_threshold' ), $t_current_project ) && ( $t_current_project <> ALL_PROJECTS ) ) {\n\t\t\t\t\t\t$t_link = helper_mantis_url( 'manage_proj_edit_page.php?project_id=' ) . $t_current_project;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_link = helper_mantis_url( 'manage_proj_page.php' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$t_menu_options[] = '<a href=\"' . $t_link . '\">' . lang_get( 'manage_link' ) . '</a>';\n\t\t\t}\n\t\t}\n\n\t\t# News Page\n\t\tif( news_is_enabled() && access_has_project_level( config_get( 'manage_news_threshold' ) ) ) {\n\t\t\t# Admin can edit news for All Projects (site-wide)\n\t\t\tif( ALL_PROJECTS != helper_get_current_project() || current_user_is_administrator() ) {\n\t\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'news_menu_page.php\">' ) . lang_get( 'edit_news_link' ) . '</a>';\n\t\t\t} else {\n\t\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'login_select_proj_page.php\">' ) . lang_get( 'edit_news_link' ) . '</a>';\n\t\t\t}\n\t\t}\n\n\t\t# Account Page (only show accounts that are NOT protected)\n\t\tif( OFF == $t_protected ) {\n\t\t\t$t_menu_options[] = '<a class=\"account-menu-link\" href=\"' . helper_mantis_url( 'account_page.php\">' ) . lang_get( 'account_link' ) . '</a>';\n\t\t}\n\n\t\t# Add custom options\n\t\t$t_custom_options = prepare_custom_menu_options( 'main_menu_custom_options' );\n\t\t$t_menu_options = array_merge( $t_menu_options, $t_custom_options );\n\n\t\t# Time Tracking / Billing\n\t\tif( config_get( 'time_tracking_enabled' ) && access_has_project_level( config_get( 'time_tracking_reporting_threshold' ) ) ) {\n\t\t\t$t_menu_options[] = '<a href=\"' . helper_mantis_url( 'billing_page.php\">' ) . lang_get( 'time_tracking_billing_link' ) . '</a>';\n\t\t}\n\n\t\t# Logout (no if anonymously logged in)\n\t\tif( !current_user_is_anonymous() ) {\n\t\t\t$t_menu_options[] = '<a id=\"logout-link\" href=\"' . helper_mantis_url( 'logout_page.php\">' ) . lang_get( 'logout_link' ) . '</a>';\n\t\t}\n\n\t\t# Display main menu\n\t\techo \"\\n\" . '<div class=\"main-menu\">'. \"\\n\";\n\n\t\t# Menu items\n\t\techo '<ul id=\"menu-items\">' . \"\\n\";\n\t\techo \"\\t\" . '<li>' . implode( $t_menu_options, '</li>' . \"\\n\\t\" . '<li>' ) . '</li>' . \"\\n\";\n\t\techo '</ul>' . \"\\n\";\n\n\t\t# Bug Jump form\n\t\techo '<div id=\"bug-jump\" >';\n\t\techo '<form method=\"post\" class=\"bug-jump-form\" action=\"' . helper_mantis_url( 'jump_to_bug.php' ) . '\">';\n\t\techo '<fieldset class=\"bug-jump\">';\n\t\t# CSRF protection not required here - form does not result in modifications\n\t\techo '<input type=\"hidden\" name=\"bug_label\" value=\"' . lang_get( 'issue_id' ) . '\" />';\n\t\techo '<input type=\"text\" name=\"bug_id\" size=\"8\" />&#160;';\n\t\techo '<input type=\"submit\" value=\"' . lang_get( 'jump' ) . '\" />&#160;';\n\t\techo '</fieldset>';\n\t\techo '</form>';\n\t\techo '</div>' . \"\\n\";\n\n\t\techo '</div>' . \"\\n\";\n\t}\n}\n\n/**\n * Print the menu bar with a list of projects to which the user has access\n * @return void\n */\nfunction print_project_menu_bar() {\n\t$t_project_ids = current_user_get_accessible_projects();\n\n\techo '<table class=\"width100\" cellspacing=\"0\">';\n\techo '<tr>';\n\techo '<td class=\"menu\">';\n\techo '<a href=\"' . helper_mantis_url( 'set_project.php?project_id=' . ALL_PROJECTS ) . '\">' . lang_get( 'all_projects' ) . '</a>';\n\n\tforeach( $t_project_ids as $t_id ) {\n\t\techo ' | <a href=\"' . helper_mantis_url( 'set_project.php?project_id=' . $t_id ) . '\">' . string_html_specialchars( project_get_field( $t_id, 'name' ) ) . '</a>';\n\t\tprint_subproject_menu_bar( $t_id, $t_id . ';' );\n\t}\n\n\techo '</td>';\n\techo '</tr>';\n\techo '</table>';\n}\n\n/**\n * Print the menu bar with a list of projects to which the user has access\n * @todo check parents param - set_project.php?project_id=' . $p_parents . $t_subproject\n * @param integer $p_project_id A Project id.\n * @param string  $p_parents    Parent project identifiers.\n * @return void\n */\nfunction print_subproject_menu_bar( $p_project_id, $p_parents = '' ) {\n\t$t_subprojects = current_user_get_accessible_subprojects( $p_project_id );\n\t$t_char = ':';\n\tforeach( $t_subprojects as $t_subproject ) {\n\t\techo $t_char . ' <a href=\"' . helper_mantis_url( 'set_project.php?project_id=' . $p_parents . $t_subproject ) . '\">' . string_html_specialchars( project_get_field( $t_subproject, 'name' ) ) . '</a>';\n\t\tprint_subproject_menu_bar( $t_subproject, $p_parents . $t_subproject . ';' );\n\t\t$t_char = ',';\n\t}\n}\n\n/**\n * Print the menu for the graph summary section\n * @return void\n */\nfunction print_summary_submenu() {\n\t# Plugin / Event added options\n\t$t_event_menu_options = event_signal( 'EVENT_SUBMENU_SUMMARY' );\n\t$t_menu_options = array();\n\tforeach( $t_event_menu_options as $t_plugin => $t_plugin_menu_options ) {\n\t\tforeach( $t_plugin_menu_options as $t_callback => $t_callback_menu_options ) {\n\t\t\tif( is_array( $t_callback_menu_options ) ) {\n\t\t\t\t$t_menu_options = array_merge( $t_menu_options, $t_callback_menu_options );\n\t\t\t} else {\n\t\t\t\tif( !is_null( $t_callback_menu_options ) ) {\n\t\t\t\t\t$t_menu_options[] = $t_callback_menu_options;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif( sizeof( $t_menu_options ) > 0 ) {\n\t\techo \"\\t\" . '<div id=\"summary-submenu\">' . \"\\n\";\n\t\techo \"\\t\\t\" . '<ul class=\"menu\">' . \"\\n\";\n\t\t# Plugins menu items - these are cooked links\n\t\tforeach ( $t_menu_options as $t_menu_item ) {\n\t\t\techo \"\\t\\t\\t\" . '<li>', $t_menu_item, '</li>' . \"\\n\";\n\t\t}\n\t\techo \"\\t\\t\" . '</ul>' . \"\\n\";\n\t\techo \"\\t\" . '</div>' . \"\\n\";\n\t}\n}\n\n/**\n * Print the menu for the manage section\n *\n * @param string $p_page Specifies the current page name so it's link can be disabled.\n * @return void\n */\nfunction print_manage_menu( $p_page = '' ) {\n\t$t_pages = array();\n\tif( access_has_global_level( config_get( 'manage_user_threshold' ) ) ) {\n\t\t$t_pages['manage_user_page.php'] = array( 'url'   => 'manage_user_page.php', 'label' => 'manage_users_link' );\n\t}\n\tif( access_has_project_level( config_get( 'manage_project_threshold' ) ) ) {\n\t\t$t_pages['manage_proj_page.php'] = array( 'url'   => 'manage_proj_page.php', 'label' => 'manage_projects_link' );\n\t}\n\tif( access_has_global_level( config_get( 'tag_edit_threshold' ) ) ) {\n\t\t$t_pages['manage_tags_page.php'] = array( 'url'   => 'manage_tags_page.php', 'label' => 'manage_tags_link' );\n\t}\n\tif( access_has_global_level( config_get( 'manage_custom_fields_threshold' ) ) ) {\n\t\t$t_pages['manage_custom_field_page.php'] = array( 'url'   => 'manage_custom_field_page.php', 'label' => 'manage_custom_field_link' );\n\t}\n\tif( config_get( 'enable_profiles' ) == ON && access_has_global_level( config_get( 'manage_global_profile_threshold' ) ) ) {\n\t\t$t_pages['manage_prof_menu_page.php'] = array( 'url'   => 'manage_prof_menu_page.php', 'label' => 'manage_global_profiles_link' );\n\t}\n\tif( access_has_global_level( config_get( 'manage_plugin_threshold' ) ) ) {\n\t\t$t_pages['manage_plugin_page.php'] = array( 'url'   => 'manage_plugin_page.php', 'label' => 'manage_plugin_link' );\n\t}\n\n\tif( access_has_project_level( config_get( 'manage_configuration_threshold' ) ) ) {\n\t\t$t_pages['adm_permissions_report.php'] = array(\n\t\t\t'url'   => 'adm_permissions_report.php',\n\t\t\t'label' => 'manage_config_link'\n\t\t);\n\t}\n\t# Remove the link from the current page\n\tif( isset( $t_pages[$p_page] ) ) {\n\t\t$t_pages[$p_page]['url'] = '';\n\t}\n\n\t# Plugin / Event added options\n\t$t_event_menu_options = event_signal( 'EVENT_MENU_MANAGE' );\n\t$t_menu_options = array();\n\tforeach( $t_event_menu_options as $t_plugin => $t_plugin_menu_options ) {\n\t\tforeach( $t_plugin_menu_options as $t_callback => $t_callback_menu_options ) {\n\t\t\tif( is_array( $t_callback_menu_options ) ) {\n\t\t\t\t$t_menu_options = array_merge( $t_menu_options, $t_callback_menu_options );\n\t\t\t} else {\n\t\t\t\tif( !is_null( $t_callback_menu_options ) ) {\n\t\t\t\t\t$t_menu_options[] = $t_callback_menu_options;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\techo \"\\n\" . '<div id=\"manage-menu\">' . \"\\n\";\n\techo '<ul class=\"menu\">';\n\tforeach( $t_pages as $t_page ) {\n\t\tif( $t_page['url'] == '' ) {\n\t\t\techo '<li><span>', lang_get( $t_page['label'] ), '</span></li>';\n\t\t} else {\n\t\t\techo '<li><a href=\"'. helper_mantis_url( $t_page['url'] ) .'\">' . lang_get( $t_page['label'] ) . '</a></li>';\n\t\t}\n\t}\n\n\t# Plugins menu items - these are cooked links\n\tforeach( $t_menu_options as $t_menu_item ) {\n\t\techo '<li>', $t_menu_item, '</li>';\n\t}\n\n\techo '</ul>';\n\techo '</div>';\n}\n\n/**\n * Print the menu for the manage configuration section\n * @param string $p_page Specifies the current page name so it's link can be disabled.\n * @return void\n */\nfunction print_manage_config_menu( $p_page = '' ) {\n\tif( !access_has_project_level( config_get( 'manage_configuration_threshold' ) ) ) {\n\t\treturn;\n\t}\n\n\t$t_pages = array();\n\n\t$t_pages['adm_permissions_report.php'] = array( 'url'   => 'adm_permissions_report.php',\n\t                                                'label' => 'permissions_summary_report' );\n\n\tif( access_has_global_level( config_get( 'view_configuration_threshold' ) ) ) {\n\t\t$t_pages['adm_config_report.php'] = array( 'url'   => 'adm_config_report.php',\n\t\t                                           'label' => 'configuration_report' );\n\t}\n\n\t$t_pages['manage_config_work_threshold_page.php'] = array( 'url'   => 'manage_config_work_threshold_page.php',\n\t                                                           'label' => 'manage_threshold_config' );\n\n\t$t_pages['manage_config_workflow_page.php'] = array( 'url'   => 'manage_config_workflow_page.php',\n\t                                                     'label' => 'manage_workflow_config' );\n\n\tif( config_get( 'relationship_graph_enable' ) ) {\n\t\t$t_pages['manage_config_workflow_graph_page.php'] = array( 'url'   => 'manage_config_workflow_graph_page.php',\n\t\t                                                           'label' => 'manage_workflow_graph' );\n\t}\n\n\tif( config_get( 'enable_email_notification' ) == ON ) {\n\t\t$t_pages['manage_config_email_page.php'] = array( 'url'   => 'manage_config_email_page.php',\n\t\t                                                  'label' => 'manage_email_config' );\n\t}\n\n\t$t_pages['manage_config_columns_page.php'] = array( 'url'   => 'manage_config_columns_page.php',\n\t                                                    'label' => 'manage_columns_config' );\n\n\t# Remove the link from the current page\n\tif( isset( $t_pages[$p_page] ) ) {\n\t\t$t_pages[$p_page]['url'] = '';\n\t}\n\n\t# Plugin / Event added options\n\t$t_event_menu_options = event_signal( 'EVENT_MENU_MANAGE_CONFIG' );\n\t$t_menu_options = array();\n\tforeach ( $t_event_menu_options as $t_plugin => $t_plugin_menu_options ) {\n\t\tforeach ( $t_plugin_menu_options as $t_callback => $t_callback_menu_options ) {\n\t\t\tif( is_array( $t_callback_menu_options ) ) {\n\t\t\t\t$t_menu_options = array_merge( $t_menu_options, $t_callback_menu_options );\n\t\t\t} else {\n\t\t\t\tif( !is_null( $t_callback_menu_options ) ) {\n\t\t\t\t\t$t_menu_options[] = $t_callback_menu_options;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\techo '<div id=\"manage-config-menu\">';\n\techo '<ul class=\"menu\">';\n\tforeach ( $t_pages as $t_page ) {\n\t\tif( $t_page['url'] == '' ) {\n\t\t\techo '<li><span>', lang_get( $t_page['label'] ), '</span></li>';\n\t\t} else {\n\t\t\techo '<li><a href=\"'. helper_mantis_url( $t_page['url'] ) .'\">' . lang_get( $t_page['label'] ) . '</a></li>';\n\t\t}\n\t}\n\n\tforeach ( $t_menu_options as $t_menu_item ) {\n\t\techo '<li><span>', $t_menu_item, '</span></li>';\n\t}\n\n\techo '</ul>';\n\techo '</div>';\n}\n\n/**\n * Print the menu for the account section\n * @param string $p_page Specifies the current page name so it's link can be disabled.\n * @return void\n */\nfunction print_account_menu( $p_page = '' ) {\n\t$t_pages['account_page.php'] = array( 'url'=>'account_page.php', 'label'=>'account_link' );\n\t$t_pages['account_prefs_page.php'] = array( 'url'=>'account_prefs_page.php', 'label'=>'change_preferences_link' );\n\t$t_pages['account_manage_columns_page.php'] = array( 'url'=>'account_manage_columns_page.php', 'label'=>'manage_columns_config' );\n\n\tif( config_get( 'enable_profiles' ) == ON && access_has_project_level( config_get( 'add_profile_threshold' ) ) ) {\n\t\t$t_pages['account_prof_menu_page.php'] = array( 'url'=>'account_prof_menu_page.php', 'label'=>'manage_profiles_link' );\n\t}\n\n\tif( config_get( 'enable_sponsorship' ) == ON && access_has_project_level( config_get( 'view_sponsorship_total_threshold' ) ) && !current_user_is_anonymous() ) {\n\t\t$t_pages['account_sponsor_page.php'] = array( 'url'=>'account_sponsor_page.php', 'label'=>'my_sponsorship' );\n\t}\n\n\t$t_pages['api_tokens_page.php'] = array( 'url' => 'api_tokens_page.php', 'label' => 'api_tokens_link' );\n\n\t# Remove the link from the current page\n\tif( isset( $t_pages[$p_page] ) ) {\n\t\t$t_pages[$p_page]['url'] = '';\n\t}\n\n\t# Plugin / Event added options\n\t$t_event_menu_options = event_signal( 'EVENT_MENU_ACCOUNT' );\n\t$t_menu_options = array();\n\tforeach( $t_event_menu_options as $t_plugin => $t_plugin_menu_options ) {\n\t\tforeach( $t_plugin_menu_options as $t_callback => $t_callback_menu_options ) {\n\t\t\tif( is_array( $t_callback_menu_options ) ) {\n\t\t\t\t$t_menu_options = array_merge( $t_menu_options, $t_callback_menu_options );\n\t\t\t} else {\n\t\t\t\tif( !is_null( $t_callback_menu_options ) ) {\n\t\t\t\t\t$t_menu_options[] = $t_callback_menu_options;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\techo '<div id=\"account-menu\">';\n\techo '<ul class=\"menu\">';\n\tforeach ( $t_pages as $t_page ) {\n\t\tif( $t_page['url'] == '' ) {\n\t\t\techo '<li><span>', lang_get( $t_page['label'] ), '</span></li>';\n\t\t} else {\n\t\t\techo '<li><a href=\"'. helper_mantis_url( $t_page['url'] ) .'\">' . lang_get( $t_page['label'] ) . '</a></li>';\n\t\t}\n\t}\n\n\t# Plugins menu items - these are cooked links\n\tforeach ( $t_menu_options as $t_menu_item ) {\n\t\techo '<li>', $t_menu_item, '</li>';\n\t}\n\techo '</ul>';\n\techo '</div>';\n}\n\n/**\n * Print the menu for the documentation section\n * @param string $p_page Specifies the current page name so it's link can be disabled.\n * @return void\n */\nfunction print_doc_menu( $p_page = '' ) {\n\t# User Documentation\n\t$t_doc_url = config_get( 'manual_url' );\n\tif( is_null( parse_url( $t_doc_url, PHP_URL_SCHEME ) ) ) {\n\t\t# URL has no scheme, so it is relative to MantisBT root\n\t\tif( is_blank( $t_doc_url ) ||\n\t\t\t!file_exists( config_get_global( 'absolute_path' ) . $t_doc_url )\n\t\t) {\n\t\t\t# Local documentation not available, use online docs\n\t\t\t$t_doc_url = 'http://www.mantisbt.org/documentation.php';\n\t\t} else {\n\t\t\t$t_doc_url = helper_mantis_url( $t_doc_url );\n\t\t}\n\t}\n\n\t$t_pages[$t_doc_url] = array(\n\t\t'url'   => $t_doc_url,\n\t\t'label' => 'user_documentation'\n\t);\n\n\t# Project Documentation\n\t$t_pages['proj_doc_page.php'] = array(\n\t\t'url'   => helper_mantis_url( 'proj_doc_page.php' ),\n\t\t'label' => 'project_documentation'\n\t);\n\n\t# Add File\n\tif( file_allow_project_upload() ) {\n\t\t$t_pages['proj_doc_add_page.php'] = array(\n\t\t\t'url'   => helper_mantis_url( 'proj_doc_add_page.php' ),\n\t\t\t'label' => 'add_file'\n\t\t);\n\t}\n\n\t# Remove the link from the current page\n\tif( isset( $t_pages[$p_page] ) ) {\n\t\t$t_pages[$p_page]['url'] = '';\n\t}\n\n\techo '<div id=\"doc-menu\">';\n\techo '<ul class=\"menu\">';\n\tforeach ( $t_pages as $t_page ) {\n\t\tif( $t_page['url'] == '' ) {\n\t\t\techo '<li>', lang_get( $t_page['label'] ), '</li>';\n\t\t} else {\n\t\t\techo '<li><a href=\"'. $t_page['url'] .'\">' . lang_get( $t_page['label'] ) . '</a></li>';\n\t\t}\n\t}\n\techo '</ul>';\n\techo '</div>';\n}\n\n/**\n * Print the menu for the summary section\n * @param string $p_page Specifies the current page name so it's link can be disabled.\n * @return void\n */\nfunction print_summary_menu( $p_page = '' ) {\n\t# Plugin / Event added options\n\t$t_event_menu_options = event_signal( 'EVENT_MENU_SUMMARY' );\n\t$t_menu_options = array();\n\tforeach( $t_event_menu_options as $t_plugin => $t_plugin_menu_options ) {\n\t\tforeach( $t_plugin_menu_options as $t_callback => $t_callback_menu_options ) {\n\t\t\tif( is_array( $t_callback_menu_options ) ) {\n\t\t\t\t$t_menu_options = array_merge( $t_menu_options, $t_callback_menu_options );\n\t\t\t} else {\n\t\t\t\tif( !is_null( $t_callback_menu_options ) ) {\n\t\t\t\t\t$t_menu_options[] = $t_callback_menu_options;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$t_pages['summary_page.php'] = array( 'url'=>'summary_page.php', 'label'=>'summary_link' );\n\t# Remove the link from the current page\n\tif( isset( $t_pages[$p_page] ) ) {\n\t\t$t_pages[$p_page]['url'] = '';\n\t}\n\n\techo '<div id=\"summary-menu\">';\n\techo '<ul class=\"menu\">';\n\n\tforeach ( $t_pages as $t_page ) {\n\t\tif( $t_page['url'] == '' ) {\n\t\t\techo '<li>', lang_get( $t_page['label'] ), '</li>';\n\t\t} else {\n\t\t\techo '<li><a href=\"'. helper_mantis_url( $t_page['url'] ) .'\">' . lang_get( $t_page['label'] ) . '</a></li>';\n\t\t}\n\t}\n\n\t# Plugins menu items - these are cooked links\n\tforeach ( $t_menu_options as $t_menu_item ) {\n\t\techo '<li>', $t_menu_item, '</li>';\n\t}\n\techo '</ul>';\n\techo '</div>';\n}\n\n/**\n * Print the color legend for the status colors at the requested position\n * @param int  $p_display_position   STATUS_LEGEND_POSITION_TOP or STATUS_LEGEND_POSITION_BOTTOM\n * @param bool $p_restrict_by_filter If true, only display status visible in current filter\n * @return void\n */\nfunction html_status_legend( $p_display_position, $p_restrict_by_filter = false ) {\n\n\tif( $p_restrict_by_filter ) {\n\t\t# Don't show the legend if only one status is selected by the current filter\n\t\t$t_current_filter = current_user_get_bug_filter();\n\t\tif( $t_current_filter === false ) {\n\t\t\t$t_current_filter = filter_get_default();\n\t\t}\n\t\t$t_simple_filter = $t_current_filter['_view_type'] == 'simple';\n\t\tif( $t_simple_filter ) {\n\t\t\tif( !filter_field_is_any( $t_current_filter[FILTER_PROPERTY_STATUS][0] ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t$t_status_array = MantisEnum::getAssocArrayIndexedByValues( config_get( 'status_enum_string' ) );\n\t$t_status_names = MantisEnum::getAssocArrayIndexedByValues( lang_get( 'status_enum_string' ) );\n\n\t# read through the list and eliminate unused ones for the selected project\n\t# assumes that all status are are in the enum array\n\t$t_workflow = config_get( 'status_enum_workflow' );\n\tif( !empty( $t_workflow ) ) {\n\t\tforeach( $t_status_array as $t_status => $t_name ) {\n\t\t\t# Check if the workflow allows leaving the state\n\t\t\tif( !isset( $t_workflow[$t_status] ) ) {\n\t\t\t\t# Check if the workflow allows entering the state\n\t\t\t\t$t_can_enter = false;\n\t\t\t\tforeach( $t_workflow as $t_values ) {\n\t\t\t\t\tif( MantisEnum::hasValue( $t_values, $t_status ) ) {\n\t\t\t\t\t\t$t_can_enter = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t# drop elements that are not in the workflow\n\t\t\t\tif( !$t_can_enter ) {\n\t\t\t\t\tunset( $t_status_array[$t_status] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif( $p_restrict_by_filter ) {\n\t\t# Remove status values that won't appear as a result of the current filter\n\t\tforeach( $t_status_array as $t_status => $t_name ) {\n\t\t\tif( $t_simple_filter ) {\n\t\t\t\tif( !filter_field_is_none( $t_current_filter[FILTER_PROPERTY_HIDE_STATUS][0] ) &&\n\t\t\t\t\t$t_status >= $t_current_filter[FILTER_PROPERTY_HIDE_STATUS][0] ) {\n\t\t\t\t\tunset( $t_status_array[$t_status] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif( !in_array( META_FILTER_ANY, $t_current_filter[FILTER_PROPERTY_STATUS] ) &&\n\t\t\t\t\t!in_array( $t_status, $t_current_filter[FILTER_PROPERTY_STATUS] ) ) {\n\t\t\t\t\tunset( $t_status_array[$t_status] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t# If there aren't at least two statuses showable by the current filter,\n\t\t# don't draw the status bar\n\t\tif( count( $t_status_array ) <= 1 ) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\t# Display the legend\n\t$t_legend_position = config_get( 'status_legend_position' ) & $p_display_position;\n\n\tif( STATUS_LEGEND_POSITION_NONE != $t_legend_position ) {\n\t\techo '<br />';\n\t\techo '<table class=\"status-legend width100\" cellspacing=\"1\">';\n\t\techo '<tr>';\n\n\t\t# draw the status bar\n\t\tforeach( $t_status_array as $t_status => $t_name ) {\n\t\t\t$t_val = isset( $t_status_names[$t_status] )\n\t\t\t\t? $t_status_names[$t_status]\n\t\t\t\t: $t_status_array[$t_status];\n\n\t\t\techo '<td class=\"small-caption status-legend-width '\n\t\t\t\t. html_get_status_css_class( $t_status ) . '\">'\n\t\t\t\t. $t_val . '</td>';\n\t\t}\n\n\t\techo '</tr>';\n\t\techo '</table>';\n\t\tif( ON == config_get( 'status_percentage_legend' ) ) {\n\t\t\thtml_status_percentage_legend();\n\t\t}\n\t}\n\tif( STATUS_LEGEND_POSITION_TOP == $t_legend_position ) {\n\t\techo '<br />';\n\t}\n}\n\n/**\n * Print the legend for the status percentage\n * @return void\n */\nfunction html_status_percentage_legend() {\n\t$t_status_percents = get_percentage_by_status();\n\t$t_status_enum_string = config_get( 'status_enum_string' );\n\t$t_enum_values = MantisEnum::getValues( $t_status_enum_string );\n\t$t_enum_count = count( $t_enum_values );\n\n\t$t_bug_count = array_sum( $t_status_percents );\n\n\tif( $t_bug_count > 0 ) {\n\t\techo '<br />';\n\t\techo '<table class=\"width100\" cellspacing=\"1\">';\n\t\techo '<tr>';\n\t\techo '<td class=\"form-title\" colspan=\"' . $t_enum_count . '\">' . lang_get( 'issue_status_percentage' ) . '</td>';\n\t\techo '</tr>';\n\t\techo '<tr>';\n\n\t\tforeach ( $t_enum_values as $t_status ) {\n\t\t\t$t_percent = ( isset( $t_status_percents[$t_status] ) ?  $t_status_percents[$t_status] : 0 );\n\n\t\t\tif( $t_percent > 0 ) {\n\t\t\t\t$t_class = html_get_status_css_class( $t_status );\n\t\t\t\techo '<td class=\"small-caption-center '\n\t\t\t\t\t. $t_class . ' '\n\t\t\t\t\t. str_replace( 'color', 'percentage', $t_class ) . '\">'\n\t\t\t\t\t. $t_percent . '%</td>';\n\t\t\t}\n\t\t}\n\n\t\techo '</tr>';\n\t\techo '</table>';\n\t}\n}\n\n/**\n * Print an html button inside a form\n * @param string $p_action      Form Action.\n * @param string $p_button_text Button Text.\n * @param array  $p_fields      An array of hidden fields to include on the form.\n * @param string $p_method      Form submit method - default post.\n * @return void\n */\nfunction html_button( $p_action, $p_button_text, array $p_fields = array(), $p_method = 'post' ) {\n\t$t_form_name = explode( '.php', $p_action, 2 );\n\t$p_action = urlencode( $p_action );\n\t$p_button_text = string_attribute( $p_button_text );\n\n\tif( strtolower( $p_method ) == 'get' ) {\n\t\t$t_method = 'get';\n\t} else {\n\t\t$t_method = 'post';\n\t}\n\n\techo '<form method=\"' . $t_method . '\" action=\"' . $p_action . '\" class=\"action-button\">' . \"\\n\";\n\techo \"\\t\" . '<fieldset>';\n\t# Add a CSRF token only when the form is being sent via the POST method\n\tif( $t_method == 'post' ) {\n\t\techo form_security_field( $t_form_name[0] );\n\t}\n\n\tforeach( $p_fields as $t_key => $t_val ) {\n\t\t$t_key = string_attribute( $t_key );\n\t\t$t_val = string_attribute( $t_val );\n\n\t\techo \"\\t\\t\" . '<input type=\"hidden\" name=\"' . $t_key . '\" value=\"' . $t_val . '\" />' . \"\\n\";\n\t}\n\n\techo \"\\t\\t\" . '<input type=\"submit\" class=\"button\" value=\"' . $p_button_text . '\" />' . \"\\n\";\n\techo \"\\t\" . '</fieldset>';\n\techo '</form>' . \"\\n\";\n}\n\n/**\n * Print a button to update the given bug\n * @param integer $p_bug_id A Bug identifier.\n * @return void\n */\nfunction html_button_bug_update( $p_bug_id ) {\n\tif( access_has_bug_level( config_get( 'update_bug_threshold' ), $p_bug_id ) ) {\n\t\thtml_button( string_get_bug_update_page(), lang_get( 'update_bug_button' ), array( 'bug_id' => $p_bug_id ) );\n\t}\n}\n\n/**\n * Print Change Status to: button\n * This code is similar to print_status_option_list except\n * there is no masking, except for the current state\n *\n * @param BugData $p_bug A valid bug object.\n * @return void\n */\nfunction html_button_bug_change_status( BugData $p_bug ) {\n\t$t_current_access = access_get_project_level( $p_bug->project_id );\n\n\t# User must have rights to change status to use this button\n\tif( !access_has_bug_level( config_get( 'update_bug_status_threshold' ), $p_bug->id ) ) {\n\t\treturn;\n\t}\n\n\t$t_enum_list = get_status_option_list(\n\t\t$t_current_access,\n\t\t$p_bug->status,\n\t\tfalse,\n\t\t# Add close if user is bug's reporter, still has rights to report issues\n\t\t# (to prevent users downgraded to viewers from updating issues) and\n\t\t# reporters are allowed to close their own issues\n\t\t(  bug_is_user_reporter( $p_bug->id, auth_get_current_user_id() )\n\t\t&& access_has_bug_level( config_get( 'report_bug_threshold' ), $p_bug->id )\n\t\t&& ON == config_get( 'allow_reporter_close' )\n\t\t),\n\t\t$p_bug->project_id );\n\n\tif( count( $t_enum_list ) > 0 ) {\n\t\t# resort the list into ascending order after noting the key from the first element (the default)\n\t\t$t_default_arr = each( $t_enum_list );\n\t\t$t_default = $t_default_arr['key'];\n\t\tksort( $t_enum_list );\n\t\treset( $t_enum_list );\n\n\t\techo '<form method=\"post\" action=\"bug_change_status_page.php\">';\n\t\t# CSRF protection not required here - form does not result in modifications\n\n\t\t$t_button_text = lang_get( 'bug_status_to_button' );\n\t\techo '<input type=\"submit\" class=\"button\" value=\"' . $t_button_text . '\" />';\n\n\t\techo ' <select name=\"new_status\">';\n\n\t\t# space at beginning of line is important\n\t\tforeach( $t_enum_list as $t_key => $t_val ) {\n\t\t\techo '<option value=\"' . $t_key . '\" ';\n\t\t\tcheck_selected( $t_key, $t_default );\n\t\t\techo '>' . $t_val . '</option>';\n\t\t}\n\t\techo '</select>';\n\n\t\t$t_bug_id = string_attribute( $p_bug->id );\n\t\techo '<input type=\"hidden\" name=\"id\" value=\"' . $t_bug_id . '\" />' . \"\\n\";\n\t\techo '<input type=\"hidden\" name=\"change_type\" value=\"' . BUG_UPDATE_TYPE_CHANGE_STATUS . '\" />' . \"\\n\";\n\n\t\techo '</form>' . \"\\n\";\n\t}\n}\n\n/**\n * Print Assign To: combo box of possible handlers\n * @param BugData $p_bug Bug object.\n * @return void\n */\nfunction html_button_bug_assign_to( BugData $p_bug ) {\n\t# make sure status is allowed of assign would cause auto-set-status\n\t# workflow implementation\n\tif( ON == config_get( 'auto_set_status_to_assigned' )\n\t\t&& !bug_check_workflow( $p_bug->status, config_get( 'bug_assigned_status' ) )\n\t) {\n\t\treturn;\n\t}\n\n\t# make sure current user has access to modify bugs.\n\tif( !access_has_bug_level( config_get( 'update_bug_assign_threshold', config_get( 'update_bug_threshold' ) ), $p_bug->id ) ) {\n\t\treturn;\n\t}\n\n\t$t_current_user_id = auth_get_current_user_id();\n\t$t_options = array();\n\t$t_default_assign_to = null;\n\n\tif( ( $p_bug->handler_id != $t_current_user_id )\n\t\t&& access_has_bug_level( config_get( 'handle_bug_threshold' ), $p_bug->id, $t_current_user_id )\n\t) {\n\t\t$t_options[] = array(\n\t\t\t$t_current_user_id,\n\t\t\t'[' . lang_get( 'myself' ) . ']',\n\t\t);\n\t\t$t_default_assign_to = $t_current_user_id;\n\t}\n\n\tif( ( $p_bug->handler_id != $p_bug->reporter_id )\n\t\t&& user_exists( $p_bug->reporter_id )\n\t\t&& access_has_bug_level( config_get( 'handle_bug_threshold' ), $p_bug->id, $p_bug->reporter_id )\n\t) {\n\t\t$t_options[] = array(\n\t\t\t$p_bug->reporter_id,\n\t\t\t'[' . lang_get( 'reporter' ) . ']',\n\t\t);\n\n\t\tif( $t_default_assign_to === null ) {\n\t\t\t$t_default_assign_to = $p_bug->reporter_id;\n\t\t}\n\t}\n\n\techo '<form method=\"post\" action=\"bug_update.php\">';\n\techo form_security_field( 'bug_update' );\n\techo '<input type=\"hidden\" name=\"last_updated\" value=\"' . $p_bug->last_updated . '\" />';\n\techo '<input type=\"hidden\" name=\"action_type\" value=\"' . BUG_UPDATE_TYPE_ASSIGN . '\" />';\n\n\t$t_button_text = lang_get( 'bug_assign_to_button' );\n\techo '<input type=\"submit\" class=\"button\" value=\"' . $t_button_text . '\" />';\n\n\techo ' <select name=\"handler_id\">';\n\n\t# space at beginning of line is important\n\n\t$t_already_selected = false;\n\n\tforeach( $t_options as $t_entry ) {\n\t\t$t_id = (int)$t_entry[0];\n\t\t$t_caption = string_attribute( $t_entry[1] );\n\n\t\t# if current user and reporter can't be selected, then select the first\n\t\t# user in the list.\n\t\tif( $t_default_assign_to === null ) {\n\t\t\t$t_default_assign_to = $t_id;\n\t\t}\n\n\t\techo '<option value=\"' . $t_id . '\" ';\n\n\t\tif( ( $t_id == $t_default_assign_to ) && !$t_already_selected ) {\n\t\t\tcheck_selected( $t_id, $t_default_assign_to );\n\t\t\t$t_already_selected = true;\n\t\t}\n\n\t\techo '>' . $t_caption . '</option>';\n\t}\n\n\t# allow un-assigning if already assigned.\n\tif( $p_bug->handler_id != 0 ) {\n\t\techo '<option value=\"0\"></option>';\n\t}\n\n\t# 0 means currently selected\n\tprint_assign_to_option_list( 0, $p_bug->project_id );\n\techo '</select>';\n\n\t$t_bug_id = string_attribute( $p_bug->id );\n\techo '<input type=\"hidden\" name=\"bug_id\" value=\"' . $t_bug_id . '\" />' . \"\\n\";\n\n\techo '</form>' . \"\\n\";\n}\n\n/**\n * Print a button to move the given bug to a different project\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_button_bug_move( $p_bug_id ) {\n\tif( access_has_bug_level( config_get( 'move_bug_threshold' ), $p_bug_id ) ) {\n\t\thtml_button( 'bug_actiongroup_page.php', lang_get( 'move_bug_button' ), array( 'bug_arr[]' => $p_bug_id, 'action' => 'MOVE' ) );\n\t}\n}\n\n/**\n * Print a button to clone the given bug\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_button_bug_create_child( $p_bug_id ) {\n\tif( access_has_bug_level( config_get( 'report_bug_threshold' ), $p_bug_id ) ) {\n\t\thtml_button( string_get_bug_report_url(), lang_get( 'create_child_bug_button' ), array( 'm_id' => $p_bug_id ) );\n\t}\n}\n\n/**\n * Print a button to reopen the given bug\n * @param BugData $p_bug A valid bug object.\n * @return void\n */\nfunction html_button_bug_reopen( BugData $p_bug ) {\n\tif( access_can_reopen_bug( $p_bug ) ) {\n\t\t$t_reopen_status = config_get( 'bug_reopen_status', null, null, $p_bug->project_id );\n\t\thtml_button(\n\t\t\t'bug_change_status_page.php',\n\t\t\tlang_get( 'reopen_bug_button' ),\n\t\t\tarray( 'id' => $p_bug->id, 'new_status' => $t_reopen_status, 'change_type' => BUG_UPDATE_TYPE_REOPEN ) );\n\t}\n}\n\n/**\n * Print a button to close the given bug\n * Only if user can close bugs and workflow allows moving them to that status\n * @param BugData $p_bug A valid bug object.\n * @return void\n */\nfunction html_button_bug_close( BugData $p_bug ) {\n\t$t_closed_status = config_get( 'bug_closed_status_threshold', null, null, $p_bug->project_id );\n\tif( access_can_close_bug( $p_bug )\n\t\t&& bug_check_workflow( $p_bug->status, $t_closed_status )\n\t) {\n\t\thtml_button(\n\t\t\t'bug_change_status_page.php',\n\t\t\tlang_get( 'close_bug_button' ),\n\t\t\tarray( 'id' => $p_bug->id, 'new_status' => $t_closed_status, 'change_type' => BUG_UPDATE_TYPE_CLOSE ) );\n\t}\n}\n\n/**\n * Print a button to monitor the given bug\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_button_bug_monitor( $p_bug_id ) {\n\tif( access_has_bug_level( config_get( 'monitor_bug_threshold' ), $p_bug_id ) ) {\n\t\thtml_button( 'bug_monitor_add.php', lang_get( 'monitor_bug_button' ), array( 'bug_id' => $p_bug_id ) );\n\t}\n}\n\n/**\n * Print a button to unmonitor the given bug\n * no reason to ever disallow someone from unmonitoring a bug\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_button_bug_unmonitor( $p_bug_id ) {\n\thtml_button( 'bug_monitor_delete.php', lang_get( 'unmonitor_bug_button' ), array( 'bug_id' => $p_bug_id ) );\n}\n\n/**\n * Print a button to stick the given bug\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_button_bug_stick( $p_bug_id ) {\n\tif( access_has_bug_level( config_get( 'set_bug_sticky_threshold' ), $p_bug_id ) ) {\n\t\thtml_button( 'bug_stick.php', lang_get( 'stick_bug_button' ), array( 'bug_id' => $p_bug_id, 'action' => 'stick' ) );\n\t}\n}\n\n/**\n * Print a button to unstick the given bug\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_button_bug_unstick( $p_bug_id ) {\n\tif( access_has_bug_level( config_get( 'set_bug_sticky_threshold' ), $p_bug_id ) ) {\n\t\thtml_button( 'bug_stick.php', lang_get( 'unstick_bug_button' ), array( 'bug_id' => $p_bug_id, 'action' => 'unstick' ) );\n\t}\n}\n\n/**\n * Print a button to delete the given bug\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_button_bug_delete( $p_bug_id ) {\n\tif( access_has_bug_level( config_get( 'delete_bug_threshold' ), $p_bug_id ) ) {\n\t\thtml_button( 'bug_actiongroup_page.php', lang_get( 'delete_bug_button' ), array( 'bug_arr[]' => $p_bug_id, 'action' => 'DELETE' ) );\n\t}\n}\n\n/**\n * Print a button to create a wiki page\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_button_wiki( $p_bug_id ) {\n\tif( config_get_global( 'wiki_enable' ) == ON ) {\n\t\tif( access_has_bug_level( config_get( 'update_bug_threshold' ), $p_bug_id ) ) {\n\t\t\thtml_button( 'wiki.php', lang_get_defaulted( 'Wiki' ), array( 'id' => $p_bug_id, 'type' => 'issue' ), 'get' );\n\t\t}\n\t}\n}\n\n/**\n * Print all buttons for view bug pages\n * @param integer $p_bug_id A valid bug identifier.\n * @return void\n */\nfunction html_buttons_view_bug_page( $p_bug_id ) {\n\t$t_readonly = bug_is_readonly( $p_bug_id );\n\t$t_sticky = config_get( 'set_bug_sticky_threshold' );\n\n\t$t_bug = bug_get( $p_bug_id );\n\n\techo '<table><tr class=\"details-buttons\">';\n\tif( !$t_readonly ) {\n\t\t# UPDATE button\n\t\techo '<td>';\n\t\thtml_button_bug_update( $p_bug_id );\n\t\techo '</td>';\n\n\t\t# ASSIGN button\n\t\techo '<td>';\n\t\thtml_button_bug_assign_to( $t_bug );\n\t\techo '</td>';\n\t}\n\n\t# Change status button/dropdown\n\tif( !$t_readonly ) {\n\t\techo '<td>';\n\t\thtml_button_bug_change_status( $t_bug );\n\t\techo '</td>';\n\t}\n\n\t# MONITOR/UNMONITOR button\n\tif( !current_user_is_anonymous() ) {\n\t\techo '<td>';\n\t\tif( user_is_monitoring_bug( auth_get_current_user_id(), $p_bug_id ) ) {\n\t\t\thtml_button_bug_unmonitor( $p_bug_id );\n\t\t} else {\n\t\t\thtml_button_bug_monitor( $p_bug_id );\n\t\t}\n\t\techo '</td>';\n\t}\n\n\t# STICK/UNSTICK button\n\tif( access_has_bug_level( $t_sticky, $p_bug_id ) ) {\n\t\techo '<td>';\n\t\tif( !bug_get_field( $p_bug_id, 'sticky' ) ) {\n\t\t\thtml_button_bug_stick( $p_bug_id );\n\t\t} else {\n\t\t\thtml_button_bug_unstick( $p_bug_id );\n\t\t}\n\t\techo '</td>';\n\t}\n\n\t# CLONE button\n\tif( !$t_readonly ) {\n\t\techo '<td>';\n\t\thtml_button_bug_create_child( $p_bug_id );\n\t\techo '</td>';\n\t}\n\n\t# REOPEN button\n\techo '<td>';\n\thtml_button_bug_reopen( $t_bug );\n\techo '</td>';\n\n\t# CLOSE button\n\techo '<td>';\n\thtml_button_bug_close( $t_bug );\n\techo '</td>';\n\n\t# MOVE button\n\techo '<td>';\n\thtml_button_bug_move( $p_bug_id );\n\techo '</td>';\n\n\t# DELETE button\n\techo '<td>';\n\thtml_button_bug_delete( $p_bug_id );\n\techo '</td>';\n\n\thelper_call_custom_function( 'print_bug_view_page_custom_buttons', array( $p_bug_id ) );\n\n\techo '</tr></table>';\n}\n\n/**\n * get the css class name for the given status, user and project\n * @param integer $p_status  An enumeration value.\n * @param integer $p_user    A valid user identifier.\n * @param integer $p_project A valid project identifier.\n * @return string\n *\n * @todo This does not work properly when displaying issues from a project other\n * than then current one, if the other project has custom status or colors.\n * This is due to the dynamic css for color coding (css/status_config.php).\n * Build CSS including project or even user-specific colors ?\n */\nfunction html_get_status_css_class( $p_status, $p_user = null, $p_project = null ) {\n\t$t_status_enum = config_get( 'status_enum_string', null, $p_user, $p_project );\n\tif( MantisEnum::hasValue( $t_status_enum, $p_status ) ) {\n\t\treturn 'status-' . $p_status . '-color';\n\t} else {\n\t\treturn '';\n\t}\n}\n", "<?php\n# MantisBT - A PHP based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Custom Field Configuration\n *\n * @package MantisBT\n * @copyright Copyright 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n * @copyright Copyright 2002  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n * @link http://www.mantisbt.org\n *\n * @uses core.php\n * @uses access_api.php\n * @uses authentication_api.php\n * @uses config_api.php\n * @uses custom_field_api.php\n * @uses form_api.php\n * @uses gpc_api.php\n * @uses helper_api.php\n * @uses html_api.php\n * @uses lang_api.php\n * @uses print_api.php\n * @uses string_api.php\n */\n\nrequire_once( 'core.php' );\nrequire_api( 'access_api.php' );\nrequire_api( 'authentication_api.php' );\nrequire_api( 'config_api.php' );\nrequire_api( 'custom_field_api.php' );\nrequire_api( 'form_api.php' );\nrequire_api( 'gpc_api.php' );\nrequire_api( 'helper_api.php' );\nrequire_api( 'html_api.php' );\nrequire_api( 'lang_api.php' );\nrequire_api( 'print_api.php' );\nrequire_api( 'string_api.php' );\n\nauth_reauthenticate();\n\naccess_ensure_global_level( config_get( 'manage_custom_fields_threshold' ) );\n\n$f_field_id\t= gpc_get_int( 'field_id' );\n$f_return\t= strip_tags( gpc_get_string( 'return', 'manage_custom_field_page.php' ) );\n\ncustom_field_ensure_exists( $f_field_id );\n\nrequire_js( 'manage_custom_field_edit_page.js' );\n\nhtml_page_top();\n\nprint_manage_menu( 'manage_custom_field_edit_page.php' );\n\n$t_definition = custom_field_get_definition( $f_field_id );\n?>\n\n<div id=\"manage-custom-field-update-div\" class=\"form-container\">\n\t<form id=\"manage-custom-field-update-form\" method=\"post\" action=\"manage_custom_field_update.php\">\n\t\t<fieldset>\n\t\t\t<legend><span><?php echo lang_get( 'edit_custom_field_title' ) ?></span></legend>\n\t\t\t<?php echo form_security_field( 'manage_custom_field_update' ); ?>\n\t\t\t<input type=\"hidden\" name=\"field_id\" value=\"<?php echo $f_field_id ?>\" />\n\t\t\t<input type=\"hidden\" name=\"return\" value=\"<?php echo string_attribute( $f_return ); ?>\" />\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-name\"><span><?php echo lang_get( 'custom_field_name' ) ?></span></label>\n\t\t\t\t<span class=\"input\"><input type=\"text\" id=\"custom-field-name\" name=\"name\" size=\"32\" maxlength=\"64\" value=\"<?php echo string_attribute( $t_definition['name'] ) ?>\" /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-type\"><span><?php echo lang_get( 'custom_field_type' ) ?></span></label>\n\t\t\t\t<span class=\"select\">\n\t\t\t\t\t<select id=\"custom-field-type\" name=\"type\">\n\t\t\t\t\t\t<?php print_enum_string_option_list( 'custom_field_type', (int)$t_definition['type'] ) ?>\n\t\t\t\t\t</select>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-possible-values\"><span><?php echo lang_get( 'custom_field_possible_values' ) ?></span></label>\n\t\t\t\t<span class=\"input\"><input type=\"text\" id=\"custom-field-possible-values\" name=\"possible_values\" size=\"100\" value=\"<?php echo string_attribute( $t_definition['possible_values'] ) ?>\" />\n\t\t\t\t\t<?php echo sprintf( lang_get( 'separate_list_items_by' ), '|' ) ?>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-default-value\"><span><?php echo lang_get( 'custom_field_default_value' ) ?></span></label>\n\t\t\t\t<span class=\"input\">\n\t\t\t\t\t<input type=\"text\" id=\"custom-field-default-value\" name=\"default_value\" size=\"32\" maxlength=\"255\" value=\"<?php echo string_attribute( $t_definition['default_value'] ) ?>\" />\n\t\t\t\t</span>\n\t\t\t\t<span class=\"textarea\">\n\t\t\t\t\t<textarea disabled=\"disabled\" id=\"custom-field-default-value-textarea\" name=\"default_value\" cols=\"80\" rows=\"10\"><?php echo string_attribute( $t_definition['default_value'] ) ?></textarea>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-valid-regexp\"><span><?php echo lang_get( 'custom_field_valid_regexp' ) ?></span></label>\n\t\t\t\t<span class=\"input\"><input type=\"text\" id=\"custom-field-valid-regexp\" name=\"valid_regexp\" size=\"32\" maxlength=\"255\" value=\"<?php echo string_attribute( $t_definition['valid_regexp'] ) ?>\" /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-access-level-r\"><span><?php echo lang_get( 'custom_field_access_level_r' ) ?></span></label>\n\t\t\t\t<span class=\"select\">\n\t\t\t\t\t<select id=\"custom-field-access-level-r\" name=\"access_level_r\">\n\t\t\t\t\t\t<?php print_enum_string_option_list( 'access_levels', (int)$t_definition['access_level_r'] ) ?>\n\t\t\t\t\t</select>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-access-level-rw\"><span><?php echo lang_get( 'custom_field_access_level_rw' ) ?></span></label>\n\t\t\t\t<span class=\"select\">\n\t\t\t\t\t<select id=\"custom-field-access-level-rw\" name=\"access_level_rw\">\n\t\t\t\t\t\t<?php print_enum_string_option_list( 'access_levels', (int)$t_definition['access_level_rw'] ) ?>\n\t\t\t\t\t</select>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-length-min\"><span><?php echo lang_get( 'custom_field_length_min' ) ?></span></label>\n\t\t\t\t<span class=\"input\"><input type=\"text\" id=\"custom-field-length-min\" name=\"length_min\" size=\"32\" maxlength=\"64\" value=\"<?php echo $t_definition['length_min'] ?>\" /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-length-max\"><span><?php echo lang_get( 'custom_field_length_max' ) ?></span></label>\n\t\t\t\t<span class=\"input\"><input type=\"text\" id=\"custom-field-length-max\" name=\"length_max\" size=\"32\" maxlength=\"64\" value=\"<?php echo $t_definition['length_max'] ?>\" /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-filter-by\"><span><?php echo lang_get( 'custom_field_filter_by' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\">\n\t\t\t\t\t<input type=\"checkbox\" id=\"custom-field-filter-by\" name=\"filter_by\"\n\t\t\t\t\t<?php\n\t\t\t\t\t\tif( $t_definition['filter_by'] ) {\n\t\t\t\t\t\t\techo 'checked=\"checked\"';\n\t\t\t\t\t\t}\n\t\t\t\t\t?> />\n\t\t\t\t</span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-display-report\"><span><?php echo lang_get( 'custom_field_display_report' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\"><input type=\"checkbox\" id=\"custom-field-display-report\" name=\"display_report\" value=\"1\" <?php check_checked( (bool)$t_definition['display_report'] ) ?> /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-display-update\"><span><?php echo lang_get( 'custom_field_display_update' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\"><input type=\"checkbox\" id=\"custom-field-display-update\" name=\"display_update\" value=\"1\" <?php check_checked( (bool)$t_definition['display_update'] ) ?> /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-display-resolved\"><span><?php echo lang_get( 'custom_field_display_resolved' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\"><input type=\"checkbox\" id=\"custom-field-display-resolved\" name=\"display_resolved\" value=\"1\" <?php check_checked( (bool)$t_definition['display_resolved'] ) ?> /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-display-closed\"><span><?php echo lang_get( 'custom_field_display_closed' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\"><input type=\"checkbox\" id=\"custom-field-display-closed\" name=\"display_closed\" value=\"1\" <?php check_checked( (bool)$t_definition['display_closed'] ) ?> /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-require-report\"><span><?php echo lang_get( 'custom_field_require_report' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\"><input type=\"checkbox\" id=\"custom-field-require-report\" name=\"require_report\" value=\"1\" <?php check_checked( (bool)$t_definition['require_report'] ) ?> /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-require-update\"><span><?php echo lang_get( 'custom_field_require_update' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\"><input type=\"checkbox\" id=\"custom-field-require-update\" name=\"require_update\" value=\"1\" <?php check_checked( (bool)$t_definition['require_update'] ) ?> /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-require-resolved\"><span><?php echo lang_get( 'custom_field_require_resolved' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\"><input type=\"checkbox\" id=\"custom-field-require-resolved\" name=\"require_resolved\" value=\"1\" <?php check_checked( (bool)$t_definition['require_resolved'] ) ?> /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-require-closed\"><span><?php echo lang_get( 'custom_field_require_closed' ) ?></span></label>\n\t\t\t\t<span class=\"checkbox\"><input type=\"checkbox\" id=\"custom-field-require-closed\" name=\"require_closed\" value=\"1\" <?php check_checked( (bool)$t_definition['require_closed'] ) ?> /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<span class=\"submit-button\"><input type=\"submit\" class=\"button\" value=\"<?php echo lang_get( 'update_custom_field_button' ) ?>\" /></span>\n\t\t</fieldset>\n\t</form>\n</div>\n\n<br />\n\n<div class=\"form-container center\">\n\t<form method=\"post\" action=\"manage_custom_field_delete.php\" class=\"action-button\">\n\t\t<fieldset>\n\t\t\t<?php echo form_security_field( 'manage_custom_field_delete' ); ?>\n\t\t\t<input type=\"hidden\" name=\"field_id\" value=\"<?php echo $f_field_id ?>\" />\n\t\t\t<input type=\"hidden\" name=\"return\" value=\"<?php echo string_attribute( $f_return ) ?>\" />\n\t\t\t<input type=\"submit\" class=\"button\" value=\"<?php echo lang_get( 'delete_custom_field_button' ) ?>\" />\n\t\t</fieldset>\n\t</form>\n</div>\n\n<?php /** @todo There is access checking in the ADD action page and at the top of this file.\n           * We may need to add extra checks to exclude projects from the list that the user\n\t\t   * can't link/unlink fields from/to. */\n?>\n<div id=\"manage-custom-field-link-div\" class=\"form-container\">\n\t<form id=\"manage-custom-field-link-form\" method=\"post\" action=\"manage_custom_field_proj_add.php\">\n\t\t<fieldset>\n\t\t\t<legend><span><?php echo lang_get( 'link_custom_field_to_project_title' ) ?></span></legend>\n\n\t\t\t<div id=\"custom-field-link-project\" class=\"field-container\">\n\t\t\t\t<span class=\"display-label\">\n\t\t\t\t\t<span><?php echo lang_get( 'linked_projects_label' ) ?></span>\n\t\t\t\t</span>\n\t\t\t\t<div class=\"display-value\">\n\t\t\t\t\t<?php print_custom_field_projects_list( $f_field_id ) ?>\n\t\t\t\t</div>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\n\t\t\t<input type=\"hidden\" name=\"field_id\" value=\"<?php echo $f_field_id ?>\" />\n\t\t\t<?php echo form_security_field( 'manage_custom_field_proj_add' ); ?>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-project-id\"><span><?php echo lang_get( 'projects_title_label' ) ?></span></label>\n\t\t\t\t<span class=\"select\">\n\t\t\t\t\t<select id=\"custom-field-project-id\" name=\"project_id[]\" multiple=\"multiple\" size=\"5\">\n\t\t\t\t\t\t<?php print_project_option_list( null, false ); ?>\n\t\t\t\t\t</select>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"field-container\">\n\t\t\t\t<label for=\"custom-field-sequence\"><span><?php echo lang_get( 'custom_field_sequence_label' ) ?></span></label>\n\t\t\t\t<span class=\"input\"><input type=\"text\" id=\"custom-field-sequence\" name=\"sequence\" value=\"0\" /></span>\n\t\t\t\t<span class=\"label-style\"></span>\n\t\t\t</div>\n\t\t\t<span class=\"submit-button\"><input type=\"submit\" class=\"button\" value=\"<?php echo lang_get( 'link_custom_field_to_project_button' ) ?>\" /></span>\n\t\t</fieldset>\n\t</form>\n</div><?php\n\nhtml_page_bottom();\n"], "filenames": ["core/html_api.php", "manage_custom_field_edit_page.php"], "buggy_code_start_loc": [650, 76], "buggy_code_end_loc": [651, 77], "fixing_code_start_loc": [650, 76], "fixing_code_end_loc": [651, 77], "type": "CWE-79", "message": "Cross-site scripting (XSS) vulnerability in manage_custom_field_edit_page.php in MantisBT 1.2.19 and earlier allows remote attackers to inject arbitrary web script or HTML via the return parameter.", "other": {"cve": {"id": "CVE-2016-5364", "sourceIdentifier": "cve@mitre.org", "published": "2017-02-17T17:59:00.763", "lastModified": "2017-02-22T17:49:37.563", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site scripting (XSS) vulnerability in manage_custom_field_edit_page.php in MantisBT 1.2.19 and earlier allows remote attackers to inject arbitrary web script or HTML via the return parameter."}, {"lang": "es", "value": "Vulnerabilidad de XSS en manage_custom_field_edit_page.php en MantisBT 1.2.19 y versiones anteriores permite a atacantes remotos inyectar secuencias de comandos web o HTML arbitrarios a trav\u00e9s del par\u00e1metro return."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.2.19", "matchCriteriaId": "5A815259-BA9C-4040-9E81-E8961F0716CA"}]}]}], "references": [{"url": "http://www.openwall.com/lists/oss-security/2016/06/11/5", "source": "cve@mitre.org", "tags": ["Mailing List", "Patch", "Third Party Advisory"]}, {"url": "https://github.com/mantisbt/mantisbt/commit/11ab3d6c82a1d3a89b1024f77349fb60a83743c5", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://github.com/mantisbt/mantisbt/commit/5068df2dcf79c34741c746c9b27e0083f2a374da", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://mantisbt.org/bugs/view.php?id=20956", "source": "cve@mitre.org", "tags": ["Exploit", "Patch", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/mantisbt/mantisbt/commit/11ab3d6c82a1d3a89b1024f77349fb60a83743c5"}}