{"buggy_code": ["'use strict';\n\nvar ar = require('appium-running');\nvar cp = require('child_process');\nvar debug = require('debug');\nvar log = debug('nemo-appium:log');\nvar error = debug('nemo-appium:error');\n\n\nmodule.exports.setup = function (apath, nemo, cb) {\n    var once = function () {\n        cb.apply(null, arguments);\n        once = function () {\n            error('once called more than once');\n        };\n    };\n    //check if appium is already running\n    ar(4723, function (success) {\n        if (success) {\n            log(\"Appium is running, move on!\");\n            once(null);\n            // run test\n        } else {\n            log(\"Appium is not running, exec appium &\");\n            //start it\n            var appiumPath = apath;\n            var appiumProcess = cp.exec(appiumPath, function (err) {\n                if (err) {\n                    error(err);\n                    once(err);\n                }\n            });\n            nemo.appium = {\n                process: appiumProcess,\n                kill: function () {\n                    log(\"attempt to kill appium\");\n                    appiumProcess.kill();\n                }\n            };\n            appiumProcess.stdout.on('data', function (data) {\n                if (data.indexOf('Appium REST http interface listener started on 0.0.0.0:4723') !== -1) {\n                    once(null);\n                }\n                log(data);\n            });\n            appiumProcess.stderr.on('data', function (data) {\n                error(data);\n            });\n            appiumProcess.on('exit', function (code) {\n                log('appium exited with code', code);\n            });\n        }\n    });\n};\n\n\n\n", "{\n  \"name\": \"nemo-appium\",\n  \"version\": \"0.0.8\",\n  \"description\": \"Start an appium server during nemo startup, kill upon driver.quit\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"node test/index.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/paypal/nemo-appium.git\"\n  },\n  \"keywords\": [\n    \"Nemo.js\",\n    \"node.js\",\n    \"Appium\",\n    \"selenium-webdriver\"\n  ],\n  \"author\": \"Matt Edelman <medelman@paypal.com>\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/paypal/nemo-appium/issues\"\n  },\n  \"homepage\": \"https://github.com/paypal/nemo-appium#readme\",\n  \"dependencies\": {\n    \"appium-running\": \"^0.1.3\",\n    \"debug\": \"^2.2.0\"\n  }\n}\n", "var naPlugin = require('../index');\nvar nemo = {};\n///Users/medelman/.nvm/current/bin/appium\nvar appiumPath = process.env.APPIUM_PATH;\n\nnaPlugin.setup(appiumPath, nemo, function (err, out) {\n    if (err) {\n        return console.error(err);\n    }\n    setTimeout(function () {\n        nemo.appium && nemo.appium.process && nemo.appium.process.kill();\n        console.log('things seem fine but somebody should write better unit tests');\n    }, 1000);\n});"], "fixing_code": ["'use strict';\n\nvar ar = require('appium-running');\nvar cp = require('child_process');\nvar debug = require('debug');\nvar log = debug('nemo-appium:log');\nvar error = debug('nemo-appium:error');\n\n\nmodule.exports.setup = function (apath, nemo, cb) {\n    // validate apath since we are going to execute it\n    // should end in appium, and contain no spaces\n    if (apath.indexOf('appium') !== apath.length - 6 || apath.indexOf(' ') > -1) {\n        return cb(new Error('Invalid path to appium executable'))\n    }\n    var once = function () {\n        cb.apply(null, arguments);\n        once = function () {\n            error('once called more than once');\n        };\n    };\n    //check if appium is already running\n    ar(4723, function (success) {\n        if (success) {\n            log(\"Appium is running, move on!\");\n            once(null);\n            // run test\n        } else {\n            log(\"Appium is not running, exec appium &\");\n            //start it\n            var appiumPath = apath;\n            var appiumProcess = cp.exec(appiumPath, function (err) {\n                if (err) {\n                    error(err);\n                    once(err);\n                }\n            });\n            nemo.appium = {\n                process: appiumProcess,\n                kill: function () {\n                    log(\"attempt to kill appium\");\n                    appiumProcess.kill();\n                }\n            };\n            appiumProcess.stdout.on('data', function (data) {\n                if (data.indexOf('Appium REST http interface listener started on 0.0.0.0:4723') !== -1) {\n                    once(null);\n                }\n                log(data);\n            });\n            appiumProcess.stderr.on('data', function (data) {\n                error(data);\n            });\n            appiumProcess.on('exit', function (code) {\n                log('appium exited with code', code);\n            });\n        }\n    });\n};\n\n\n\n", "{\n  \"name\": \"nemo-appium\",\n  \"version\": \"0.0.8\",\n  \"description\": \"Start an appium server during nemo startup, kill upon driver.quit\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"node test/index.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/paypal/nemo-appium.git\"\n  },\n  \"keywords\": [\n    \"Nemo.js\",\n    \"node.js\",\n    \"Appium\",\n    \"selenium-webdriver\"\n  ],\n  \"author\": \"Matt Edelman <medelman@paypal.com>\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/paypal/nemo-appium/issues\"\n  },\n  \"homepage\": \"https://github.com/paypal/nemo-appium#readme\",\n  \"dependencies\": {\n    \"appium-running\": \"0.1.3\",\n    \"debug\": \"^2.2.0\"\n  }\n}\n", "var naPlugin = require('../index');\nvar nemo = {};\n///Users/medelman/.nvm/current/bin/appium\nvar appiumPath ='touch HACKED && ~/bin/appium';\n\nnaPlugin.setup(appiumPath, nemo, function (err, out) {\n    if (err) {\n        console.log('You want to see this error. It means the setup function is validating the appium path for potential OS commands');\n        return console.error(err);\n    }\n    setTimeout(function () {\n        nemo.appium && nemo.appium.process && nemo.appium.process.kill();\n        console.log('things seem fine but somebody should write better unit tests');\n    }, 1000);\n});"], "filenames": ["index.js", "package.json", "test/index.js"], "buggy_code_start_loc": [10, 26, 4], "buggy_code_end_loc": [10, 27, 7], "fixing_code_start_loc": [11, 26, 4], "fixing_code_end_loc": [16, 27, 9], "type": "CWE-77", "message": "Versions of the package nemo-appium before 0.0.9 are vulnerable to Command Injection due to improper input sanitization in the 'module.exports.setup' function. **Note:** In order to exploit this vulnerability appium-running 0.1.3 has to be installed as one of nemo-appium dependencies.", "other": {"cve": {"id": "CVE-2022-21129", "sourceIdentifier": "report@snyk.io", "published": "2023-01-31T05:15:11.060", "lastModified": "2023-02-07T16:22:34.503", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Versions of the package nemo-appium before 0.0.9 are vulnerable to Command Injection due to improper input sanitization in the 'module.exports.setup' function. **Note:** In order to exploit this vulnerability appium-running 0.1.3 has to be installed as one of nemo-appium dependencies."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "report@snyk.io", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.4, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.4, "impactScore": 5.9}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-77"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:paypal:nemo-appium:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "0.0.9", "matchCriteriaId": "E01871A6-DA86-4302-8ED0-E5A0CC50482D"}]}]}], "references": [{"url": "https://github.com/paypal/nemo-appium/blob/master/index.js%23L27", "source": "report@snyk.io", "tags": ["Broken Link"]}, {"url": "https://github.com/paypal/nemo-appium/commit/aa271d36dd5c81baae3c43aa2616c84f0ee4195f", "source": "report@snyk.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://security.snyk.io/vuln/SNYK-JS-NEMOAPPIUM-3183747", "source": "report@snyk.io", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/paypal/nemo-appium/commit/aa271d36dd5c81baae3c43aa2616c84f0ee4195f"}}