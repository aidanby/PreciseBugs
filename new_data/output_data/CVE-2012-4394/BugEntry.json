{"buggy_code": ["FileList={\n\tuseUndo:true,\n\tupdate:function(fileListHtml) {\n\t\t$('#fileList').empty().html(fileListHtml);\n\t},\n\taddFile:function(name,size,lastModified,loading){\n\t\tvar img=(loading)?OC.imagePath('core', 'loading.gif'):OC.imagePath('core', 'filetypes/file.png');\n\t\tvar html='<tr data-type=\"file\" data-size=\"'+size+'\">';\n\t\tif(name.indexOf('.')!=-1){\n\t\t\tvar basename=name.substr(0,name.lastIndexOf('.'));\n\t\t\tvar extension=name.substr(name.lastIndexOf('.'));\n\t\t}else{\n\t\t\tvar basename=name;\n\t\t\tvar extension=false;\n\t\t}\n\t\thtml+='<td class=\"filename\" style=\"background-image:url('+img+')\"><input type=\"checkbox\" />';\n\t\thtml+='<a class=\"name\" href=\"download.php?file='+$('#dir').val()+'/'+name+'\"><span class=\"nametext\">'+basename\n\t\tif(extension){\n\t\t\thtml+='<span class=\"extension\">'+extension+'</span>';\n\t\t}\n\t\thtml+='</span></a></td>';\n\t\tif(size!='Pending'){\n\t\t\tsimpleSize=simpleFileSize(size);\n\t\t}else{\n\t\t\tsimpleSize='Pending';\n\t\t}\n\t\tsizeColor = Math.round(200-size/(1024*1024)*2);\n\t\tlastModifiedTime=Math.round(lastModified.getTime() / 1000);\n\t\tmodifiedColor=Math.round((Math.round((new Date()).getTime() / 1000)-lastModifiedTime)/60/60/24*14);\n\t\thtml+='<td class=\"filesize\" title=\"'+humanFileSize(size)+'\" style=\"color:rgb('+sizeColor+','+sizeColor+','+sizeColor+')\">'+simpleSize+'</td>';\n\t\thtml+='<td class=\"date\"><span class=\"modified\" title=\"'+formatDate(lastModified)+'\" style=\"color:rgb('+modifiedColor+','+modifiedColor+','+modifiedColor+')\">'+relative_modified_date(lastModified.getTime() / 1000)+'</span></td>';\n\t\thtml+='</tr>';\n\t\tFileList.insertElement(name,'file',$(html).attr('data-file',name));\n\t\tif(loading){\n\t\t\t$('tr').filterAttr('data-file',name).data('loading',true);\n\t\t}else{\n\t\t\t$('tr').filterAttr('data-file',name).find('td.filename').draggable(dragOptions);\n\t\t}\n\t},\n\taddDir:function(name,size,lastModified){\n\t\thtml = $('<tr></tr>').attr({ \"data-type\": \"dir\", \"data-size\": size, \"data-file\": name});\n\t\ttd = $('<td></td>').attr({\"class\": \"filename\", \"style\": 'background-image:url('+OC.imagePath('core', 'filetypes/folder.png')+')' });\n\t\ttd.append('<input type=\"checkbox\" />');\n\t\tvar link_elem = $('<a></a>').attr({ \"class\": \"name\", \"href\": OC.linkTo('files', 'index.php')+\"&dir=\"+ encodeURIComponent($('#dir').val()+'/'+name).replace(/%2F/g, '/') });\n\t\tlink_elem.append($('<span></span>').addClass('nametext').text(name));\n\t\tlink_elem.append($('<span></span>').attr({'class': 'uploadtext', 'currentUploads': 0}));\n\t\ttd.append(link_elem);\n\t\thtml.append(td);\n\t\tif(size!='Pending'){\n\t\t\tsimpleSize=simpleFileSize(size);\n\t\t}else{\n\t\t\tsimpleSize='Pending';\n\t\t}\n\t\tsizeColor = Math.round(200-Math.pow((size/(1024*1024)),2));\n\t\tlastModifiedTime=Math.round(lastModified.getTime() / 1000);\n\t\tmodifiedColor=Math.round((Math.round((new Date()).getTime() / 1000)-lastModifiedTime)/60/60/24*5);\n\t\ttd = $('<td></td>').attr({ \"class\": \"filesize\", \"title\": humanFileSize(size), \"style\": 'color:rgb('+sizeColor+','+sizeColor+','+sizeColor+')'}).text(simpleSize);\n\t\thtml.append(td);\n\n\t\ttd = $('<td></td>').attr({ \"class\": \"date\" });\n\t\ttd.append($('<span></span>').attr({ \"class\": \"modified\", \"title\": formatDate(lastModified), \"style\": 'color:rgb('+modifiedColor+','+modifiedColor+','+modifiedColor+')' }).text( relative_modified_date(lastModified.getTime() / 1000) ));\n\t\thtml.append(td);\n\t\tFileList.insertElement(name,'dir',html);\n\t\t$('tr').filterAttr('data-file',name).find('td.filename').draggable(dragOptions);\n\t\t$('tr').filterAttr('data-file',name).find('td.filename').droppable(folderDropOptions);\n\t},\n\trefresh:function(data) {\n\t\tresult = jQuery.parseJSON(data.responseText);\n\t\tif(typeof(result.data.breadcrumb) != 'undefined'){\n\t\t\tupdateBreadcrumb(result.data.breadcrumb);\n\t\t}\n\t\tFileList.update(result.data.files);\n\t\tresetFileActionPanel();\n\t},\n\tremove:function(name){\n\t\t$('tr').filterAttr('data-file',name).find('td.filename').draggable('destroy');\n\t\t$('tr').filterAttr('data-file',name).remove();\n\t\tif($('tr[data-file]').length==0){\n\t\t\t$('#emptyfolder').show();\n\t\t\t$('.file_upload_filename').addClass('highlight');\n\t\t}\n\t},\n\tinsertElement:function(name,type,element){\n\t\t//find the correct spot to insert the file or folder\n\t\tvar fileElements=$('tr[data-file][data-type=\"'+type+'\"]');\n\t\tvar pos;\n\t\tif(name.localeCompare($(fileElements[0]).attr('data-file'))<0){\n\t\t\tpos=-1;\n\t\t}else if(name.localeCompare($(fileElements[fileElements.length-1]).attr('data-file'))>0){\n\t\t\tpos=fileElements.length-1;\n\t\t}else{\n\t\t\tfor(var pos=0;pos<fileElements.length-1;pos++){\n\t\t\t\tif(name.localeCompare($(fileElements[pos]).attr('data-file'))>0 && name.localeCompare($(fileElements[pos+1]).attr('data-file'))<0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(fileElements.length){\n\t\t\tif(pos==-1){\n\t\t\t\t$(fileElements[0]).before(element);\n\t\t\t}else{\n\t\t\t\t$(fileElements[pos]).after(element);\n\t\t\t}\n\t\t}else if(type=='dir' && $('tr[data-file]').length>0){\n\t\t\t$('tr[data-file]').first().before(element);\n\t\t}else{\n\t\t\t$('#fileList').append(element);\n\t\t}\n\t\t$('#emptyfolder').hide();\n\t\t$('.file_upload_filename').removeClass('highlight');\n\t},\n\tloadingDone:function(name){\n\t\tvar tr=$('tr').filterAttr('data-file',name);\n\t\ttr.data('loading',false);\n\t\tvar mime=tr.data('mime');\n\t\ttr.attr('data-mime',mime);\n\t\tgetMimeIcon(mime,function(path){\n\t\t\ttr.find('td.filename').attr('style','background-image:url('+path+')');\n\t\t});\n\t\ttr.find('td.filename').draggable(dragOptions);\n\t},\n\tisLoading:function(name){\n\t\treturn $('tr').filterAttr('data-file',name).data('loading');\n\t},\n\trename:function(name){\n\t\tvar tr=$('tr').filterAttr('data-file',name);\n\t\ttr.data('renaming',true);\n\t\tvar td=tr.children('td.filename');\n\t\tvar input=$('<input class=\"filename\"></input>').val(name);\n\t\tvar form=$('<form></form>')\n\t\tform.append(input);\n\t\ttd.children('a.name').text('');\n\t\ttd.children('a.name').append(form)\n\t\tinput.focus();\n\t\tform.submit(function(event){\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t\tvar newname=input.val();\n\t\t\ttr.attr('data-file',newname);\n\t\t\ttd.children('a.name').empty();\n\t\t\tvar path = td.children('a.name').attr('href');\n\t\t\ttd.children('a.name').attr('href', path.replace(encodeURIComponent(name), encodeURIComponent(newname)));\n\t\t\tif(newname.indexOf('.')>0){\n\t\t\t\tbasename=newname.substr(0,newname.lastIndexOf('.'));\n\t\t\t}else{\n\t\t\t\tbasename=newname;\n\t\t\t}\n\t\t\tvar span=$('<span class=\"nametext\"></span>');\n\t\t\tspan.text(basename);\n\t\t\ttd.children('a.name').append(span);\n\t\t\tif(newname.indexOf('.')>0){\n\t\t\t\tspan.append($('<span class=\"extension\">'+newname.substr(newname.lastIndexOf('.'))+'</span>'));\n\t\t\t}\n\t\t\t$.get(OC.filePath('files','ajax','rename.php'), { dir : $('#dir').val(), newname: newname, file: name },function(){\n\t\t\t\ttr.data('renaming',false);\n\t\t\t});\n\t\t\treturn false;\n\t\t});\n\t\tinput.click(function(event){\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tinput.blur(function(){\n\t\t\tform.trigger('submit');\n\t\t});\n\t},\n\tdo_delete:function(files){\n\t\tif(FileList.deleteFiles || !FileList.useUndo){//finish any ongoing deletes first\n\t\t\tFileList.finishDelete(function(){\n\t\t\t\tFileList.do_delete(files);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tif(files.substr){\n\t\t\tfiles=[files];\n\t\t}\n\t\t$.each(files,function(index,file){\n\t\t\tvar files = $('tr').filterAttr('data-file',file);\n\t\t\tfiles.hide();\n\t\t\tfiles.find('input[type=\"checkbox\"]').removeAttr('checked');\n\t\t\tfiles.removeClass('selected');\n\t\t});\n\t\tprocesSelection();\n\t\tFileList.deleteCanceled=false;\n\t\tFileList.deleteFiles=files;\n\t\t$('#notification').text(t('files','undo deletion'));\n\t\t$('#notification').data('deletefile',true);\n\t\t$('#notification').fadeIn();\n\t},\n\tfinishDelete:function(ready,sync){\n\t\tif(!FileList.deleteCanceled && FileList.deleteFiles){\n\t\t\tvar fileNames=FileList.deleteFiles.join(';');\n\t\t\t$.ajax({\n\t\t\t\turl: OC.filePath('files', 'ajax', 'delete.php'),\n\t\t\t\tasync:!sync,\n\t\t\t\tdata: {dir:$('#dir').val(),files:fileNames},\n\t\t\t\tcomplete: function(data){\n\t\t\t\t\tboolOperationFinished(data, function(){\n\t\t\t\t\t\t$('#notification').fadeOut();\n\t\t\t\t\t\t$.each(FileList.deleteFiles,function(index,file){\n\t\t\t\t\t\t\tFileList.remove(file);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tFileList.deleteCanceled=true;\n\t\t\t\t\t\tFileList.deleteFiles=null;\n\t\t\t\t\t\tif(ready){\n\t\t\t\t\t\t\tready();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n$(document).ready(function(){\n\t$('#notification').hide();\n\t$('#notification').click(function(){\n\t\tif($('#notification').data('deletefile'))\n\t\t{\n\t\t\t$.each(FileList.deleteFiles,function(index,file){\n\t\t\t\t$('tr').filterAttr('data-file',file).show();\n// \t\t\talert(file);\n\t\t\t});\n\t\t\tFileList.deleteCanceled=true;\n\t\t\tFileList.deleteFiles=null;\n\t\t}\n\t\t$('#notification').fadeOut();\n\t});\n\tFileList.useUndo=('onbeforeunload' in window)\n\t$(window).bind('beforeunload', function (){\n\t\tFileList.finishDelete(null,true);\n\t});\n});\n"], "fixing_code": ["FileList={\n\tuseUndo:true,\n\tupdate:function(fileListHtml) {\n\t\t$('#fileList').empty().html(fileListHtml);\n\t},\n\taddFile:function(name,size,lastModified,loading){\n\t\tvar img=(loading)?OC.imagePath('core', 'loading.gif'):OC.imagePath('core', 'filetypes/file.png');\n\t\tvar html='<tr data-type=\"file\" data-size=\"'+size+'\">';\n\t\tif(name.indexOf('.')!=-1){\n\t\t\tvar basename=name.substr(0,name.lastIndexOf('.'));\n\t\t\tvar extension=name.substr(name.lastIndexOf('.'));\n\t\t}else{\n\t\t\tvar basename=name;\n\t\t\tvar extension=false;\n\t\t}\n\t\thtml+='<td class=\"filename\" style=\"background-image:url('+img+')\"><input type=\"checkbox\" />';\n\t\thtml+='<a class=\"name\" href=\"download.php?file='+$('#dir').val().replace(/</, '&lt;').replace(/>/, '&gt;')+'/'+name+'\"><span class=\"nametext\">'+basename\n\t\tif(extension){\n\t\t\thtml+='<span class=\"extension\">'+extension+'</span>';\n\t\t}\n\t\thtml+='</span></a></td>';\n\t\tif(size!='Pending'){\n\t\t\tsimpleSize=simpleFileSize(size);\n\t\t}else{\n\t\t\tsimpleSize='Pending';\n\t\t}\n\t\tsizeColor = Math.round(200-size/(1024*1024)*2);\n\t\tlastModifiedTime=Math.round(lastModified.getTime() / 1000);\n\t\tmodifiedColor=Math.round((Math.round((new Date()).getTime() / 1000)-lastModifiedTime)/60/60/24*14);\n\t\thtml+='<td class=\"filesize\" title=\"'+humanFileSize(size)+'\" style=\"color:rgb('+sizeColor+','+sizeColor+','+sizeColor+')\">'+simpleSize+'</td>';\n\t\thtml+='<td class=\"date\"><span class=\"modified\" title=\"'+formatDate(lastModified)+'\" style=\"color:rgb('+modifiedColor+','+modifiedColor+','+modifiedColor+')\">'+relative_modified_date(lastModified.getTime() / 1000)+'</span></td>';\n\t\thtml+='</tr>';\n\t\tFileList.insertElement(name,'file',$(html).attr('data-file',name));\n\t\tif(loading){\n\t\t\t$('tr').filterAttr('data-file',name).data('loading',true);\n\t\t}else{\n\t\t\t$('tr').filterAttr('data-file',name).find('td.filename').draggable(dragOptions);\n\t\t}\n\t},\n\taddDir:function(name,size,lastModified){\n\t\thtml = $('<tr></tr>').attr({ \"data-type\": \"dir\", \"data-size\": size, \"data-file\": name});\n\t\ttd = $('<td></td>').attr({\"class\": \"filename\", \"style\": 'background-image:url('+OC.imagePath('core', 'filetypes/folder.png')+')' });\n\t\ttd.append('<input type=\"checkbox\" />');\n\t\tvar link_elem = $('<a></a>').attr({ \"class\": \"name\", \"href\": OC.linkTo('files', 'index.php')+\"&dir=\"+ encodeURIComponent($('#dir').val()+'/'+name).replace(/%2F/g, '/') });\n\t\tlink_elem.append($('<span></span>').addClass('nametext').text(name));\n\t\tlink_elem.append($('<span></span>').attr({'class': 'uploadtext', 'currentUploads': 0}));\n\t\ttd.append(link_elem);\n\t\thtml.append(td);\n\t\tif(size!='Pending'){\n\t\t\tsimpleSize=simpleFileSize(size);\n\t\t}else{\n\t\t\tsimpleSize='Pending';\n\t\t}\n\t\tsizeColor = Math.round(200-Math.pow((size/(1024*1024)),2));\n\t\tlastModifiedTime=Math.round(lastModified.getTime() / 1000);\n\t\tmodifiedColor=Math.round((Math.round((new Date()).getTime() / 1000)-lastModifiedTime)/60/60/24*5);\n\t\ttd = $('<td></td>').attr({ \"class\": \"filesize\", \"title\": humanFileSize(size), \"style\": 'color:rgb('+sizeColor+','+sizeColor+','+sizeColor+')'}).text(simpleSize);\n\t\thtml.append(td);\n\n\t\ttd = $('<td></td>').attr({ \"class\": \"date\" });\n\t\ttd.append($('<span></span>').attr({ \"class\": \"modified\", \"title\": formatDate(lastModified), \"style\": 'color:rgb('+modifiedColor+','+modifiedColor+','+modifiedColor+')' }).text( relative_modified_date(lastModified.getTime() / 1000) ));\n\t\thtml.append(td);\n\t\tFileList.insertElement(name,'dir',html);\n\t\t$('tr').filterAttr('data-file',name).find('td.filename').draggable(dragOptions);\n\t\t$('tr').filterAttr('data-file',name).find('td.filename').droppable(folderDropOptions);\n\t},\n\trefresh:function(data) {\n\t\tresult = jQuery.parseJSON(data.responseText);\n\t\tif(typeof(result.data.breadcrumb) != 'undefined'){\n\t\t\tupdateBreadcrumb(result.data.breadcrumb);\n\t\t}\n\t\tFileList.update(result.data.files);\n\t\tresetFileActionPanel();\n\t},\n\tremove:function(name){\n\t\t$('tr').filterAttr('data-file',name).find('td.filename').draggable('destroy');\n\t\t$('tr').filterAttr('data-file',name).remove();\n\t\tif($('tr[data-file]').length==0){\n\t\t\t$('#emptyfolder').show();\n\t\t\t$('.file_upload_filename').addClass('highlight');\n\t\t}\n\t},\n\tinsertElement:function(name,type,element){\n\t\t//find the correct spot to insert the file or folder\n\t\tvar fileElements=$('tr[data-file][data-type=\"'+type+'\"]');\n\t\tvar pos;\n\t\tif(name.localeCompare($(fileElements[0]).attr('data-file'))<0){\n\t\t\tpos=-1;\n\t\t}else if(name.localeCompare($(fileElements[fileElements.length-1]).attr('data-file'))>0){\n\t\t\tpos=fileElements.length-1;\n\t\t}else{\n\t\t\tfor(var pos=0;pos<fileElements.length-1;pos++){\n\t\t\t\tif(name.localeCompare($(fileElements[pos]).attr('data-file'))>0 && name.localeCompare($(fileElements[pos+1]).attr('data-file'))<0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(fileElements.length){\n\t\t\tif(pos==-1){\n\t\t\t\t$(fileElements[0]).before(element);\n\t\t\t}else{\n\t\t\t\t$(fileElements[pos]).after(element);\n\t\t\t}\n\t\t}else if(type=='dir' && $('tr[data-file]').length>0){\n\t\t\t$('tr[data-file]').first().before(element);\n\t\t}else{\n\t\t\t$('#fileList').append(element);\n\t\t}\n\t\t$('#emptyfolder').hide();\n\t\t$('.file_upload_filename').removeClass('highlight');\n\t},\n\tloadingDone:function(name){\n\t\tvar tr=$('tr').filterAttr('data-file',name);\n\t\ttr.data('loading',false);\n\t\tvar mime=tr.data('mime');\n\t\ttr.attr('data-mime',mime);\n\t\tgetMimeIcon(mime,function(path){\n\t\t\ttr.find('td.filename').attr('style','background-image:url('+path+')');\n\t\t});\n\t\ttr.find('td.filename').draggable(dragOptions);\n\t},\n\tisLoading:function(name){\n\t\treturn $('tr').filterAttr('data-file',name).data('loading');\n\t},\n\trename:function(name){\n\t\tvar tr=$('tr').filterAttr('data-file',name);\n\t\ttr.data('renaming',true);\n\t\tvar td=tr.children('td.filename');\n\t\tvar input=$('<input class=\"filename\"></input>').val(name);\n\t\tvar form=$('<form></form>')\n\t\tform.append(input);\n\t\ttd.children('a.name').text('');\n\t\ttd.children('a.name').append(form)\n\t\tinput.focus();\n\t\tform.submit(function(event){\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t\tvar newname=input.val();\n\t\t\ttr.attr('data-file',newname);\n\t\t\ttd.children('a.name').empty();\n\t\t\tvar path = td.children('a.name').attr('href');\n\t\t\ttd.children('a.name').attr('href', path.replace(encodeURIComponent(name), encodeURIComponent(newname)));\n\t\t\tif(newname.indexOf('.')>0){\n\t\t\t\tbasename=newname.substr(0,newname.lastIndexOf('.'));\n\t\t\t}else{\n\t\t\t\tbasename=newname;\n\t\t\t}\n\t\t\tvar span=$('<span class=\"nametext\"></span>');\n\t\t\tspan.text(basename);\n\t\t\ttd.children('a.name').append(span);\n\t\t\tif(newname.indexOf('.')>0){\n\t\t\t\tspan.append($('<span class=\"extension\">'+newname.substr(newname.lastIndexOf('.'))+'</span>'));\n\t\t\t}\n\t\t\t$.get(OC.filePath('files','ajax','rename.php'), { dir : $('#dir').val(), newname: newname, file: name },function(){\n\t\t\t\ttr.data('renaming',false);\n\t\t\t});\n\t\t\treturn false;\n\t\t});\n\t\tinput.click(function(event){\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tinput.blur(function(){\n\t\t\tform.trigger('submit');\n\t\t});\n\t},\n\tdo_delete:function(files){\n\t\tif(FileList.deleteFiles || !FileList.useUndo){//finish any ongoing deletes first\n\t\t\tFileList.finishDelete(function(){\n\t\t\t\tFileList.do_delete(files);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tif(files.substr){\n\t\t\tfiles=[files];\n\t\t}\n\t\t$.each(files,function(index,file){\n\t\t\tvar files = $('tr').filterAttr('data-file',file);\n\t\t\tfiles.hide();\n\t\t\tfiles.find('input[type=\"checkbox\"]').removeAttr('checked');\n\t\t\tfiles.removeClass('selected');\n\t\t});\n\t\tprocesSelection();\n\t\tFileList.deleteCanceled=false;\n\t\tFileList.deleteFiles=files;\n\t\t$('#notification').text(t('files','undo deletion'));\n\t\t$('#notification').data('deletefile',true);\n\t\t$('#notification').fadeIn();\n\t},\n\tfinishDelete:function(ready,sync){\n\t\tif(!FileList.deleteCanceled && FileList.deleteFiles){\n\t\t\tvar fileNames=FileList.deleteFiles.join(';');\n\t\t\t$.ajax({\n\t\t\t\turl: OC.filePath('files', 'ajax', 'delete.php'),\n\t\t\t\tasync:!sync,\n\t\t\t\tdata: {dir:$('#dir').val(),files:fileNames},\n\t\t\t\tcomplete: function(data){\n\t\t\t\t\tboolOperationFinished(data, function(){\n\t\t\t\t\t\t$('#notification').fadeOut();\n\t\t\t\t\t\t$.each(FileList.deleteFiles,function(index,file){\n\t\t\t\t\t\t\tFileList.remove(file);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tFileList.deleteCanceled=true;\n\t\t\t\t\t\tFileList.deleteFiles=null;\n\t\t\t\t\t\tif(ready){\n\t\t\t\t\t\t\tready();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n$(document).ready(function(){\n\t$('#notification').hide();\n\t$('#notification').click(function(){\n\t\tif($('#notification').data('deletefile'))\n\t\t{\n\t\t\t$.each(FileList.deleteFiles,function(index,file){\n\t\t\t\t$('tr').filterAttr('data-file',file).show();\n// \t\t\talert(file);\n\t\t\t});\n\t\t\tFileList.deleteCanceled=true;\n\t\t\tFileList.deleteFiles=null;\n\t\t}\n\t\t$('#notification').fadeOut();\n\t});\n\tFileList.useUndo=('onbeforeunload' in window)\n\t$(window).bind('beforeunload', function (){\n\t\tFileList.finishDelete(null,true);\n\t});\n});\n"], "filenames": ["apps/files/js/filelist.js"], "buggy_code_start_loc": [17], "buggy_code_end_loc": [18], "fixing_code_start_loc": [17], "fixing_code_end_loc": [18], "type": "CWE-79", "message": "Cross-site scripting (XSS) vulnerability in apps/files/js/filelist.js in ownCloud before 4.0.5 allows remote attackers to inject arbitrary web script or HTML via the file parameter.", "other": {"cve": {"id": "CVE-2012-4394", "sourceIdentifier": "secalert@redhat.com", "published": "2012-09-05T23:55:02.960", "lastModified": "2012-09-06T15:36:40.737", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site scripting (XSS) vulnerability in apps/files/js/filelist.js in ownCloud before 4.0.5 allows remote attackers to inject arbitrary web script or HTML via the file parameter."}, {"lang": "es", "value": "M\u00faltiples vulnerabilidades de ejecuci\u00f3n de secuencias de comandos en sitios cruzados (XSS) en apps/files/js/filelist.js en ownCloud anterior a v4.0.5, permite a atacantes remotos inyectar secuencias de comandos web o HTML a trav\u00e9s del par\u00e1metro file"}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:owncloud:owncloud:*:*:*:*:*:*:*:*", "versionEndIncluding": "4.0.4", "matchCriteriaId": "B453672C-6C78-4DD9-8C5C-BBC45AF66576"}, {"vulnerable": true, "criteria": "cpe:2.3:a:owncloud:owncloud:3.0.0:*:*:*:*:*:*:*", "matchCriteriaId": "0A1021FF-2A5A-49AA-A376-09C98FECC519"}, {"vulnerable": true, "criteria": "cpe:2.3:a:owncloud:owncloud:3.0.1:*:*:*:*:*:*:*", "matchCriteriaId": "3F6C12F7-5897-4DBB-A9AB-8180101F37C3"}, {"vulnerable": true, "criteria": "cpe:2.3:a:owncloud:owncloud:3.0.2:*:*:*:*:*:*:*", "matchCriteriaId": "E9CC055C-CFA3-4A23-AF91-83F7F087F282"}, {"vulnerable": true, "criteria": "cpe:2.3:a:owncloud:owncloud:3.0.3:*:*:*:*:*:*:*", "matchCriteriaId": "AA5445B4-9115-4D31-9DF9-E7E30CAF1FFD"}, {"vulnerable": true, "criteria": "cpe:2.3:a:owncloud:owncloud:4.0.0:*:*:*:*:*:*:*", "matchCriteriaId": "8FAE7D90-6190-44E2-B4EA-F47FF3263BE6"}, {"vulnerable": true, "criteria": "cpe:2.3:a:owncloud:owncloud:4.0.1:*:*:*:*:*:*:*", "matchCriteriaId": "C7BAB402-B6A0-4314-A37A-C9465157BF5E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:owncloud:owncloud:4.0.2:*:*:*:*:*:*:*", "matchCriteriaId": "8A32BED8-F428-44D3-BEAC-E0BB0208B6B6"}, {"vulnerable": true, "criteria": "cpe:2.3:a:owncloud:owncloud:4.0.3:*:*:*:*:*:*:*", "matchCriteriaId": "F46F53A9-52B2-41D6-859B-9062B1F02B86"}]}]}], "references": [{"url": "http://www.openwall.com/lists/oss-security/2012/08/11/1", "source": "secalert@redhat.com"}, {"url": "http://www.openwall.com/lists/oss-security/2012/09/02/2", "source": "secalert@redhat.com"}, {"url": "https://github.com/owncloud/core/commit/d203fa2c50f4b2791e68e2b8ab9a0f8b94f9c9f8", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch"]}]}, "github_commit_url": "https://github.com/owncloud/core/commit/d203fa2c50f4b2791e68e2b8ab9a0f8b94f9c9f8"}}