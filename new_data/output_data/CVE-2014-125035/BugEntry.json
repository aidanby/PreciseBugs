{"buggy_code": ["<?php\n/**\n * Plugin Name: Job Postings\n * Plugin URI: http://hatrackmedia.com\n * Description: A plugin for creating and displaying job opportunities.\n * Author: Bobby Bryant\n * Author URI: http://hatrackmedia.com\n * Version: 0.0.1\n * License: GPLv2\n */\n\n// Exit if accessed directly\nif ( ! defined( 'ABSPATH' ) ) {\n\texit;\n}\n\n/**\n * Enqueue PLugin Styles and scripts\n */\n\nfunction hrm_jobs_enqueue_scripts() {\n\n$screen = get_current_screen();\n\nif ( is_object($screen) && 'job' == $screen->post_type ) {\n\n\twp_enqueue_style( 'jobs-admin', plugins_url( '/css/jobs-admin.css', __FILE__) );\n\n\twp_enqueue_script( 'jquery-ui-sortable' );\n\twp_enqueue_script( 'reorder-js', plugins_url( '/js/reorder.js', __FILE__), array('jquery'), '', true );\n\twp_enqueue_script( 'jquery-ui-datepicker' );\n  \twp_enqueue_script( 'field-date-js', plugins_url('js/Field_Date.js', __FILE__), array('jquery-core', 'jquery-ui-core', 'jquery-ui-datepicker'), '', true );\n\twp_enqueue_style('jquery-style', 'http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.2/themes/smoothness/jquery-ui.css');\n  }\n}\nadd_action( 'admin_enqueue_scripts', 'hrm_jobs_enqueue_scripts' );\n\n/**\n * Require project specific files\n */\nrequire_once 'jobs-cpt.php';\nrequire_once 'jobs-fields.php';\nrequire_once 'render-admin.php';\n\n/**\n * Create Sorting Admin Page\n */\nfunction hrm_jobs_add_menu_page() {\n\tadd_submenu_page( \n\t\t'edit.php?post_type=job', \n\t\t'Reorder Jobs', \n\t\t'Reorder Jobs', \n\t\t'edit_pages', \n\t\t'reorder_jobs', \n\t\t'hrm_jobs_render_admin' \n\t);\n}\n\n/**\n * Create Jobs Shortcode\n */\n\nfunction hrm_jobs_list_shortcode ( $atts, $content = null ) {\n\t$args = array(\n\t\t'post_type' => 'job',\n\t\t'orderby' => 'menu_order',\n\t\t'order' => 'ASC'\n\t);\n\n\t$jobs = new WP_Query( $args );\n\t?>\n\t\t\n\t<?php   if ( $jobs->have_posts() ) : ?>\n\t    \t\n\t\t\t<table id=\"job-list\">\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Job Title</th>\n\t\t\t\t\t<th>Location</th>\n\t\t\t\t\t<th></th>\n\t\t\t\t</tr>\n\t\t\t\t<?php while ( $jobs->have_posts() ) : $jobs->the_post(); ?>\n\t\t\t\t\t\n\t\t\t\t\t<?php $jobUrl = get_permalink(); ?>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<td id=\"<?php the_id(); ?>\"><?php the_title(); ?></td>\n\t\t\t\t\t<td><?php the_terms( $post->ID, 'location') ?></td>\n\t\t\t\t\t<td><a href=\"<?php echo esc_url($jobUrl) ?>\">Learn More</a></td>\n\t\t\t\t</tr>\n\t\t\t\t\t\n\t\t\t\t<?php endwhile; ?>\n\t    \t</table>\n\n\t\t\t<?php else: ?>\n\t\t\t<p><?php _e('You have no Jobs to display.', 'hrm_jobs'); ?></p>\n\t\t\t<?php endif; ?>\n\t\t</div>\n\n\t<?php\n\n}\n\nadd_shortcode ( 'hrm_job_list', 'hrm_jobs_list_shortcode');\n\n\n", "<?php\nfunction hrm_jobs_posttype() {\n    \n    $labels = array(\n        'name'               => 'Jobs',\n        'singular_name'      => 'Job',\n        'menu_name'          => 'Jobs',\n        'name_admin_bar'     => 'Jobs',\n        'add_new'            => 'Add New Job',\n        'add_new_item'       => 'Add New Job',\n        'new_item'           => 'New Job',\n        'edit_item'          => 'Edit Job',\n        'view_item'          => 'View Job',\n        'all_items'          => 'All Jobs',\n        'search_items'       => 'Search Jobs',\n        'parent_item_colon'  => 'Parent Jobs:',\n        'not_found'          => 'No jobs found.',\n        'not_found_in_trash' => 'No jobs found in Trash.',\n    );\n    \n    $args = array(\n        'labels'             => $labels,\n        'public'             => true,\n        'publicly_queryable' => true,\n        'show_ui'            => true,\n        'show_in_menu'       => true,\n        'menu_icon'          => 'dashicons-businessman',\n        'query_var'          => true,\n        'rewrite'            => array( 'slug' => 'jobs' ),\n        'capability_type'    => 'post',\n        'has_archive'        => true,\n        'hierarchical'       => false,\n        'menu_position'      => 5,\n        'supports'           => array( 'title' )\n    );\n    register_post_type( 'job', $args );\n}\nadd_action( 'init', 'hrm_jobs_posttype' );\n\n// Flush rewrite rules to add \"jobs\" as a permalink slug\nfunction hrm_jobs_my_rewrite_flush() {\n    hrm_jobs_posttype();\n    flush_rewrite_rules();\n}\nregister_activation_hook( __FILE__, 'hrm_jobs_my_rewrite_flush' );\n\nfunction hrm_location_tax() {\n    \n    $labels = array(\n            'name'                       => _x( 'Locations', 'taxonomy general name' ),\n            'singular_name'              => _x( 'Location', 'taxonomy singular name' ),\n            'search_items'               => __( 'Search Locations' ),\n            'popular_items'              => __( 'Popular Locations' ),\n            'all_items'                  => __( 'All Locations' ),\n            'parent_item'                => null,\n            'parent_item_colon'          => null,\n            'edit_item'                  => __( 'Edit Location' ),\n            'update_item'                => __( 'Update Location' ),\n            'add_new_item'               => __( 'Add New Location' ),\n            'new_item_name'              => __( 'New Location Name' ),\n            'separate_items_with_commas' => __( 'Separate locations with commas' ),\n            'add_or_remove_items'        => __( 'Add or remove locations' ),\n            'choose_from_most_used'      => __( 'Choose from the most used locations' ),\n            'not_found'                  => __( 'No locations found.' ),\n            'menu_name'                  => __( 'Locations' ),\n        );\n\n        $args = array(\n            'hierarchical'          => false,\n            'labels'                => $labels,\n            'show_ui'               => true,\n            'show_admin_column'     => true,\n            'update_count_callback' => '_update_post_term_count',\n            'query_var'             => true,\n            'rewrite'               => array( 'slug' => 'location' ),\n        );\n\n        register_taxonomy( 'location', 'job', $args );\n}\nadd_action( 'init', 'hrm_location_tax');", "<?php \n\n/**\n * Adds a meta box to the post editing screen\n */\nfunction hrm_custom_meta() {\n    add_meta_box( \n      'hrm_meta', \n      __( 'Job Listing', 'hrm-jobs' ), \n      'hrm_meta_callback', \n      'job' \n    );\n}\nadd_action( 'add_meta_boxes', 'hrm_custom_meta' );\n\n/**\n * Outputs the content of the meta box\n */\nfunction hrm_meta_callback( $post ) {\n    wp_nonce_field( basename( __FILE__ ), 'hrm_nonce' );\n    $hrm_stored_meta = get_post_meta( $post->ID );\n    ?>\n    <div>\n      <div class=\"meta-row\">\n          <div class=\"meta-th\">\n            <label for=\"job-id\" class=\"hrm-row-title\"><?php _e( 'Job ID', 'hrm-textdomain' )?></label>\n          </div>\n          <div class=\"meta-td\">  \n            <input type=\"text\" name=\"job-id\" id=\"job-id\" value=\"<?php if ( isset ( $hrm_stored_meta['job-id'] ) ) echo $hrm_stored_meta['job-id'][0]; ?>\" />\n          </div>\n      </div>\n      <div class=\"meta-row\">\n          <div class=\"meta-th\">\n            <label for=\"date_listed\" class=\"wpdt-row-title\"><?php _e( 'Date Listed', 'hrm-textdomain' )?></label>\n          </div>\n          <div class=\"meta-td\">\n            <input type=\"text\" size=\"10\" class=\"wpdt-row-content datepicker\" name=\"date_listed\" id=\"date_listed\" value=\"<?php if ( isset ( $hrm_stored_meta['date_listed'] ) ) echo $hrm_stored_meta['date_listed'][0]; ?>\" />\n          </div>\n      </div>\n      <div class=\"meta-row\">\n          <div class=\"meta-th\">\n            <label for=\"application_deadline\" class=\"wpdt-row-title\"><?php _e( 'Application Deadline', 'hrm-textdomain' )?></label>\n          </div>\n          <div class=\"meta-td\">\n            <input type=\"text\" size=\"10\" class=\"wpdt-row-content datepicker\" name=\"application_deadline\" id=\"application_deadline\" value=\"<?php if ( isset ( $hrm_stored_meta['application_deadline'] ) ) echo $hrm_stored_meta['application_deadline'][0]; ?>\" />\n          </div>\n      </div>\n      <div class=\"meta-row\">\n          <div class=\"meta-th\">\n            <span>Principle Duties</span>\n          </div>\n          <div  class=\"meta-editor\">\n            <?php\n\n              $content = get_post_meta( $post->ID, 'principle_duties', true );\n              $editor_id = 'principle_duties';\n              $settings = array( \n                'textarea_rows' => 5,\n              );\n\n              wp_editor( $content, $editor_id, $settings );\n\n            ?>\n          </div>\n        </div>\n      <div class=\"meta-row\">\n        <div class=\"meta-th\">\n          <label for=\"minimum-requirements\" class=\"wpdt-row-title\"><?php _e( 'Minimum Requirements', 'hrm-textdomain' )?></label>\n        </div>\n        <div class=\"meta-td\">\n          <textarea name=\"minimum-requirements\" class =\"hrm-textarea\" id=\"minimum-requirements\"><?php if ( isset ( $hrm_stored_meta['minimum-requirements'] ) ) echo $hrm_stored_meta['minimum-requirements'][0]; ?></textarea>\n        </div>\n      </div>\n      <div class=\"meta-row\">\n        <div class=\"meta-th\">\n          <label for=\"preferred-requirements\" class=\"wpdt-row-title\"><?php _e( 'Preferred Requirements', 'hrm-textdomain' )?></label>\n        </div>\n        <div class=\"meta-td\">\n          <textarea name=\"preferred-requirements\" class =\"hrm-textarea\" id=\"preferred-requirements\"><?php if ( isset ( $hrm_stored_meta['preferred-requirements'] ) ) echo $hrm_stored_meta['preferred-requirements'][0]; ?></textarea>\n        </div>\n      </div>\n      <div class=\"meta-row\">\n        <div class=\"meta-th\">\n          <label for=\"relocation-assistance\" class=\"prfx-row-title\"><?php _e( 'Relocation Assistance', 'hrm-textdomain' )?></label>\n        </div>\n        <div class=\"meta-td\">\n          <select name=\"relocation-assistance\" id=\"relocation-assistance\">\n              <option value=\"select-yes\" <?php if ( isset ( $hrm_stored_meta['relocation-assistance'] ) ) selected( $hrm_stored_meta['relocation-assistance'][0], 'select-yes' ); ?>><?php _e( 'Yes', 'prfx-textdomain' )?></option>';\n              <option value=\"select-no\" <?php if ( isset ( $hrm_stored_meta['relocation-assistance'] ) ) selected( $hrm_stored_meta['relocation-assistance'][0], 'select-no' ); ?>><?php _e( 'No', 'prfx-textdomain' )?></option>';\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <?php\n}\n\n/**\n * Saves the custom meta input\n */\nfunction hrm_meta_save( $post_id ) {\n \n    // Checks save status\n    $is_autosave = wp_is_post_autosave( $post_id );\n    $is_revision = wp_is_post_revision( $post_id );\n    $is_valid_nonce = ( isset( $_POST[ 'hrm_nonce' ] ) && wp_verify_nonce( $_POST[ 'hrm_nonce' ], basename( __FILE__ ) ) ) ? 'true' : 'false';\n \n    // Exits script depending on save status\n    if ( $is_autosave || $is_revision || !$is_valid_nonce ) {\n        return;\n    }\n \n    // Checks for input and sanitizes/saves if needed\n    if( isset( $_POST[ 'job-id' ] ) ) {\n        update_post_meta( $post_id, 'job-id', sanitize_text_field( $_POST[ 'job-id' ] ) );\n    }\n\n    if( isset( $_POST[ 'principle_duties' ] ) ) {\n        update_post_meta( $post_id, 'principle_duties', sanitize_text_field( $_POST[ 'principle_duties' ] ) );\n    }\n\n    if( isset( $_POST[ 'minimum-requirements' ] ) ) {\n        update_post_meta( $post_id, 'minimum-requirements', sanitize_text_field( $_POST[ 'minimum-requirements' ] ) );\n    }\n    \n    if( isset( $_POST[ 'date_listed' ] ) ) {\n        update_post_meta( $post_id, 'date_listed', sanitize_text_field( $_POST[ 'date_listed' ] ) );\n    }\n\n    if( isset( $_POST[ 'application_deadline' ] ) ) {\n        update_post_meta( $post_id, 'application_deadline', sanitize_text_field( $_POST[ 'application_deadline' ] ) );\n    }\n\n    if( isset( $_POST[ 'preferred-requirements' ] ) ) {\n        update_post_meta( $post_id, 'preferred-requirements', sanitize_text_field( $_POST[ 'preferred-requirements' ] ) );\n    }\n\n    if( isset( $_POST[ 'relocation-assistance' ] ) ) {\n        update_post_meta( $post_id, 'relocation-assistance', sanitize_text_field( $_POST[ 'relocation-assistance' ] ) );\n    }\n}\nadd_action( 'save_post', 'hrm_meta_save' );\n\n/**\n * Change Placeholder text in Default title field.\n */\nfunction change_default_title( $title ){\n \n    $screen = get_current_screen();\n \n    if ( 'job' == $screen->post_type ){\n        $title = \"Enter Job Title Here\";\n    }\n \n    return $title;\n}\n \nadd_filter( 'enter_title_here', 'change_default_title' );\n\n", "jQuery(document).ready(function($) {\n\t$('div#jobs-admin-sort').each(function() {\n\n\t\tvar sortList = $('ul#custom-type-list');\n\n\t\tsortList.sortable({\n\t\t\tupdate: function(event, ui) {\n\t\t\t\t$('#loading-animation').show(); // Show the animate loading gif while waiting\n\n\t\t\t\topts = {\n\t\t\t\t\turl: ajaxurl, // ajaxurl is defined by WordPress and points to /wp-admin/admin-ajax.php\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tasync: true,\n\t\t\t\t\tcache: false,\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\tdata:{\n\t\t\t\t\t\taction: 'save_sort', // Tell WordPress how to handle this ajax request\n\t\t\t\t\t\torder: sortList.sortable('toArray').toString() // Passes ID's of list items in\t1,3,2 format\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function(response) {\n\t\t\t\t\t\t$('div#message').remove();\n\t\t\t\t\t\t$('#loading-animation').hide(); // Hide the loading animation\n\t\t\t\t\t\t$('div#jobs-admin-sort h2:first').after('<div id=\"message\" class=\"updated below-h2\"><p>Jobs sort order has been saved</p></div>');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t},\n\t\t\t\t\terror: function(xhr,textStatus,e) {\n\t\t\t\t\t\t$('#loading-animation').hide(); // Hide the loading animation\n\t\t\t\t\t\t$('div#jobs-admin-sort h2:first').after('<div id=\"message\" class=\"error below-h2\"><p>There was an error saving the sort order. Please try again later.</p></div>');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t$.ajax(opts);\n\t\t\t}\n\t\t});\n\n\t});\n});", "<?php\n\nfunction hrm_jobs_render_admin() {\n\t$args = array(\n\t\t'post_type' => 'job',\n\t\t'orderby' => 'menu_order',\n\t\t'order' => 'ASC'\n\t);\n\n\t$jobs = new WP_Query( $args );\n\t?>\n\t\t<div id=\"jobs-admin-sort\" class=\"wrap\">\n\t\t<div id=\"icon-job-admin\" class=\"icon32\"><br /></div>\n\t\t<h2><?php _e('Sort Job Positions', 'hrm_jobs'); ?> <img src=\" <?php echo admin_url(); ?>/images/loading.gif\" id=\"loading-animation\" /></h2>\n\t\t\t<?php if ( $jobs->have_posts() ) : ?>\n\t    \t<p><?php _e('<strong>Note:</strong> this only affects the Jobs listed using the shortcode functions', 'hrm_jobs'); ?></p>\n\t\t\t<ul id=\"custom-type-list\">\n\t\t\t\t<?php while ( $jobs->have_posts() ) : $jobs->the_post(); ?>\n\t\t\t\t\t<li id=\"<?php the_id(); ?>\"><?php the_title(); ?></li>\n\t\t\t\t<?php endwhile; ?>\n\t    \t</ul>\n\t\t\t<?php else: ?>\n\t\t\t<p><?php _e('You have no Jobs to sort.', 'hrm_jobs'); ?></p>\n\t\t\t<?php endif; ?>\n\t\t</div>\n\n\t<?php\n}\n\nadd_action( 'admin_menu', 'hrm_jobs_add_menu_page');\n\nfunction hrm_jobs_save_order() {\n\n\tglobal $wpdb; // WordPress database class\n\t\t$order = explode(',', $_POST['order']);\n\t\t$counter = 0;\n\t\tforeach ($order as $item_id) {\n\t\t\t$wpdb->update($wpdb->posts, array( 'menu_order' => $counter ), array( 'ID' => $item_id) );\n\t\t\t$counter++;\n\t\t}\n\t\tdie(1);\n\n}\n\nadd_action( 'wp_ajax_save_sort', 'hrm_jobs_save_order' );"], "fixing_code": ["<?php\n/**\n * Plugin Name: Job Postings\n * Plugin URI: http://hatrackmedia.com\n * Description: A plugin for creating and displaying job opportunities.\n * Author: Bobby Bryant\n * Author URI: http://hatrackmedia.com\n * Version: 0.0.1\n * License: GPLv2\n */\n\n// Exit if accessed directly\nif ( ! defined( 'ABSPATH' ) ) {\n\texit;\n}\n\n/**\n * Enqueue PLugin Styles and scripts\n */\n\nfunction hrm_jobs_enqueue_scripts() {\n\n$screen = get_current_screen();\n\nif ( is_object($screen) && 'job' == $screen->post_type ) {\n\n\twp_enqueue_style( 'jobs-admin', plugins_url( '/css/jobs-admin.css', __FILE__) );\n\n\twp_enqueue_script( 'jquery-ui-sortable' );\n\twp_enqueue_script( 'reorder-js', plugins_url( '/js/reorder.js', __FILE__), array('jquery'), '', true );\n\twp_enqueue_script( 'jquery-ui-datepicker' );\n  \twp_enqueue_script( 'field-date-js', plugins_url('js/Field_Date.js', __FILE__), array('jquery-core', 'jquery-ui-core', 'jquery-ui-datepicker'), '', true );\n\twp_enqueue_style( 'jquery-style', 'http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.2/themes/smoothness/jquery-ui.css' );\n  }\n}\nadd_action( 'admin_enqueue_scripts', 'hrm_jobs_enqueue_scripts' );\n\n/**\n * Require project specific files\n */\nrequire_once 'jobs-cpt.php';\nrequire_once 'jobs-fields.php';\nrequire_once 'render-admin.php';\n\n/**\n * Create Sorting Admin Page\n */\nfunction hrm_jobs_add_menu_page() {\n\tadd_submenu_page(\n\t\t'edit.php?post_type=job',\n\t\t'Reorder Jobs',\n\t\t'Reorder Jobs',\n\t\t'edit_pages',\n\t\t'reorder_jobs',\n\t\t'hrm_jobs_render_admin'\n\t);\n}\n\n/**\n * Create Jobs Shortcode\n */\n\nfunction hrm_jobs_list_shortcode ( $atts, $content = null ) {\n\t$args = array(\n\t\t'post_type' => 'job',\n\t\t'orderby' => 'menu_order',\n\t\t'order' => 'ASC',\n\t\t'post_per_page' => 100, /* add a reasonable max # rows */\n\t\t'no_found_rows' => true, /* don't generate a count as part of query */\n\t);\n\n\t$jobs = new WP_Query( $args );\n\t?>\n\n\t<?php   if ( $jobs->have_posts() ) : ?>\n\n\t\t\t<table id=\"job-list\">\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Job Title</th>\n\t\t\t\t\t<th>Location</th>\n\t\t\t\t\t<th></th>\n\t\t\t\t</tr>\n\t\t\t\t<?php while ( $jobs->have_posts() ) : $jobs->the_post(); ?>\n\n\t\t\t\t\t<?php $jobUrl = get_permalink(); ?>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<td id=\"<?php the_id(); ?>\"><?php the_title(); ?></td>\n\t\t\t\t\t<td><?php the_terms( $post->ID, 'location') ?></td>\n\t\t\t\t\t<td><a href=\"<?php echo esc_url( $jobUrl ) ?>\">Learn More</a></td>\n\t\t\t\t</tr>\n\n\t\t\t\t<?php endwhile; ?>\n\t\t\t</table>\n\n\t\t\t<?php else: ?>\n\t\t\t<p><?php _e( 'You have no Jobs to display.', 'hrm_jobs' ); ?></p>\n\t\t\t<?php endif; ?>\n\t\t</div>\n\n\t<?php\n\n}\n\nadd_shortcode ( 'hrm_job_list', 'hrm_jobs_list_shortcode');\n\n\n", "<?php\nfunction hrm_jobs_posttype() {\n\n    $labels = array(\n        'name'               => 'Jobs',\n        'singular_name'      => 'Job',\n        'menu_name'          => 'Jobs',\n        'name_admin_bar'     => 'Jobs',\n        'add_new'            => 'Add New Job',\n        'add_new_item'       => 'Add New Job',\n        'new_item'           => 'New Job',\n        'edit_item'          => 'Edit Job',\n        'view_item'          => 'View Job',\n        'all_items'          => 'All Jobs',\n        'search_items'       => 'Search Jobs',\n        'parent_item_colon'  => 'Parent Jobs:',\n        'not_found'          => 'No jobs found.',\n        'not_found_in_trash' => 'No jobs found in Trash.',\n    );\n\n    $args = array(\n        'labels'             => $labels,\n        'public'             => true,\n        'publicly_queryable' => true,\n        'show_ui'            => true,\n        'show_in_menu'       => true,\n        'menu_icon'          => 'dashicons-businessman',\n        'query_var'          => true,\n        'rewrite'            => array( 'slug' => 'jobs' ),\n        'capability_type'    => 'post',\n        'has_archive'        => true,\n        'hierarchical'       => false,\n        'menu_position'      => 5,\n        'supports'           => array( 'title' )\n    );\n    register_post_type( 'job', $args );\n}\nadd_action( 'init', 'hrm_jobs_posttype' );\n\n// Flush rewrite rules to add \"jobs\" as a permalink slug\nfunction hrm_jobs_my_rewrite_flush() {\n    hrm_jobs_posttype();\n    flush_rewrite_rules();\n}\nregister_activation_hook( __FILE__, 'hrm_jobs_my_rewrite_flush' );\n\nfunction hrm_location_tax() {\n\n    $labels = array(\n            'name'                       => _x( 'Locations', 'taxonomy general name' ),\n            'singular_name'              => _x( 'Location', 'taxonomy singular name' ),\n            'search_items'               => __( 'Search Locations' ),\n            'popular_items'              => __( 'Popular Locations' ),\n            'all_items'                  => __( 'All Locations' ),\n            'parent_item'                => null,\n            'parent_item_colon'          => null,\n            'edit_item'                  => __( 'Edit Location' ),\n            'update_item'                => __( 'Update Location' ),\n            'add_new_item'               => __( 'Add New Location' ),\n            'new_item_name'              => __( 'New Location Name' ),\n            'separate_items_with_commas' => __( 'Separate locations with commas' ),\n            'add_or_remove_items'        => __( 'Add or remove locations' ),\n            'choose_from_most_used'      => __( 'Choose from the most used locations' ),\n            'not_found'                  => __( 'No locations found.' ),\n            'menu_name'                  => __( 'Locations' ),\n        );\n\n        $args = array(\n            'hierarchical'          => false,\n            'labels'                => $labels,\n            'show_ui'               => true,\n            'show_admin_column'     => true,\n            'update_count_callback' => '_update_post_term_count',\n            'query_var'             => true,\n            'rewrite'               => array( 'slug' => 'location' ),\n        );\n\n        register_taxonomy( 'location', 'job', $args );\n}\nadd_action( 'init', 'hrm_location_tax');", "<?php\n\n/**\n * Adds a meta box to the post editing screen\n */\nfunction hrm_custom_meta() {\n    add_meta_box(\n      'hrm_meta',\n      __( 'Job Listing', 'hrm-jobs' ),\n      'hrm_meta_callback',\n      'job'\n    );\n}\nadd_action( 'add_meta_boxes', 'hrm_custom_meta' );\n\n/**\n * Outputs the content of the meta box\n */\nfunction hrm_meta_callback( $post ) {\n    wp_nonce_field( basename( __FILE__ ), 'hrm_nonce' );\n    $hrm_stored_meta = get_post_meta( $post->ID );\n    ?>\n    <div>\n      <div class=\"meta-row\">\n          <div class=\"meta-th\">\n            <label for=\"job-id\" class=\"hrm-row-title\"><?php _e( 'Job ID', 'hrm-textdomain' )?></label>\n          </div>\n          <div class=\"meta-td\">\n            <input type=\"text\" name=\"job-id\" id=\"job-id\" value=\"<?php if ( isset ( $hrm_stored_meta['job-id'] ) ) echo esc_attr( $hrm_stored_meta['job-id'][0] ); ?>\" />\n          </div>\n      </div>\n      <div class=\"meta-row\">\n          <div class=\"meta-th\">\n            <label for=\"date_listed\" class=\"wpdt-row-title\"><?php _e( 'Date Listed', 'hrm-textdomain' )?></label>\n          </div>\n          <div class=\"meta-td\">\n            <input type=\"text\" size=\"10\" class=\"wpdt-row-content datepicker\" name=\"date_listed\" id=\"date_listed\" value=\"<?php if ( isset ( $hrm_stored_meta['date_listed'] ) ) echo esc_attr( $hrm_stored_meta['date_listed'][0] ); ?>\" />\n          </div>\n      </div>\n      <div class=\"meta-row\">\n          <div class=\"meta-th\">\n            <label for=\"application_deadline\" class=\"wpdt-row-title\"><?php _e( 'Application Deadline', 'hrm-textdomain' )?></label>\n          </div>\n          <div class=\"meta-td\">\n            <input type=\"text\" size=\"10\" class=\"wpdt-row-content datepicker\" name=\"application_deadline\" id=\"application_deadline\" value=\"<?php if ( isset ( $hrm_stored_meta['application_deadline'] ) ) echo esc_attr( $hrm_stored_meta['application_deadline'][0] ); ?>\" />\n          </div>\n      </div>\n      <div class=\"meta-row\">\n          <div class=\"meta-th\">\n            <span>Principle Duties</span>\n          </div>\n          <div  class=\"meta-editor\">\n            <?php\n\n              $content = get_post_meta( $post->ID, 'principle_duties', true );\n              $editor_id = 'principle_duties';\n              $settings = array(\n                'textarea_rows' => 5,\n              );\n\n              wp_editor( $content, $editor_id, $settings );\n\n            ?>\n          </div>\n        </div>\n      <div class=\"meta-row\">\n        <div class=\"meta-th\">\n          <label for=\"minimum-requirements\" class=\"wpdt-row-title\"><?php _e( 'Minimum Requirements', 'hrm-textdomain' )?></label>\n        </div>\n        <div class=\"meta-td\">\n          <textarea name=\"minimum-requirements\" class =\"hrm-textarea\" id=\"minimum-requirements\"><?php if ( isset ( $hrm_stored_meta['minimum-requirements'] ) ) echo esc_attr( $hrm_stored_meta['minimum-requirements'][0] ); ?></textarea>\n        </div>\n      </div>\n      <div class=\"meta-row\">\n        <div class=\"meta-th\">\n          <label for=\"preferred-requirements\" class=\"wpdt-row-title\"><?php _e( 'Preferred Requirements', 'hrm-textdomain' )?></label>\n        </div>\n        <div class=\"meta-td\">\n          <textarea name=\"preferred-requirements\" class =\"hrm-textarea\" id=\"preferred-requirements\"><?php if ( isset ( $hrm_stored_meta['preferred-requirements'] ) ) echo esc_attr( $hrm_stored_meta['preferred-requirements'][0] ); ?></textarea>\n        </div>\n      </div>\n      <div class=\"meta-row\">\n        <div class=\"meta-th\">\n          <label for=\"relocation-assistance\" class=\"prfx-row-title\"><?php _e( 'Relocation Assistance', 'hrm-textdomain' )?></label>\n        </div>\n        <div class=\"meta-td\">\n          <select name=\"relocation-assistance\" id=\"relocation-assistance\">\n              <option value=\"select-yes\" <?php if ( isset ( $hrm_stored_meta['relocation-assistance'] ) ) selected( $hrm_stored_meta['relocation-assistance'][0], 'select-yes' ); ?>><?php _e( 'Yes', 'prfx-textdomain' )?></option>';\n              <option value=\"select-no\" <?php if ( isset ( $hrm_stored_meta['relocation-assistance'] ) ) selected( $hrm_stored_meta['relocation-assistance'][0], 'select-no' ); ?>><?php _e( 'No', 'prfx-textdomain' )?></option>';\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <?php\n}\n\n/**\n * Saves the custom meta input\n */\nfunction hrm_meta_save( $post_id ) {\n\n    // Checks save status\n    $is_autosave = wp_is_post_autosave( $post_id );\n    $is_revision = wp_is_post_revision( $post_id );\n    $is_valid_nonce = ( isset( $_POST[ 'hrm_nonce' ] ) && wp_verify_nonce( $_POST[ 'hrm_nonce' ], basename( __FILE__ ) ) ) ? 'true' : 'false';\n\n    // Exits script depending on save status\n    if ( $is_autosave || $is_revision || !$is_valid_nonce ) {\n        return;\n    }\n\n    // Checks for input and sanitizes/saves if needed\n    if( isset( $_POST[ 'job-id' ] ) ) {\n        update_post_meta( $post_id, 'job-id', sanitize_text_field( $_POST[ 'job-id' ] ) );\n    }\n\n    if( isset( $_POST[ 'principle_duties' ] ) ) {\n        update_post_meta( $post_id, 'principle_duties', sanitize_text_field( $_POST[ 'principle_duties' ] ) );\n    }\n\n    if( isset( $_POST[ 'minimum-requirements' ] ) ) {\n        update_post_meta( $post_id, 'minimum-requirements', sanitize_text_field( $_POST[ 'minimum-requirements' ] ) );\n    }\n\n    if( isset( $_POST[ 'date_listed' ] ) ) {\n        update_post_meta( $post_id, 'date_listed', sanitize_text_field( $_POST[ 'date_listed' ] ) );\n    }\n\n    if( isset( $_POST[ 'application_deadline' ] ) ) {\n        update_post_meta( $post_id, 'application_deadline', sanitize_text_field( $_POST[ 'application_deadline' ] ) );\n    }\n\n    if( isset( $_POST[ 'preferred-requirements' ] ) ) {\n        update_post_meta( $post_id, 'preferred-requirements', sanitize_text_field( $_POST[ 'preferred-requirements' ] ) );\n    }\n\n    if( isset( $_POST[ 'relocation-assistance' ] ) ) {\n        update_post_meta( $post_id, 'relocation-assistance', sanitize_text_field( $_POST[ 'relocation-assistance' ] ) );\n    }\n}\nadd_action( 'save_post', 'hrm_meta_save' );\n\n/**\n * Change Placeholder text in Default title field.\n */\nfunction change_default_title( $title ){\n\n    $screen = get_current_screen();\n\n    if ( 'job' == $screen->post_type ){\n        $title = \"Enter Job Title Here\";\n    }\n\n    return $title;\n}\n\nadd_filter( 'enter_title_here', 'change_default_title' );\n\n", "jQuery(document).ready(function($) {\n\t$( 'div#jobs-admin-sort' ).each(function() {\n\n\t\tvar sortList = $( 'ul#custom-type-list' );\n\n\t\tsortList.sortable({\n\t\t\tupdate: function(event, ui) {\n\t\t\t\t$( '#loading-animation' ).show(); // Show the animate loading gif while waiting\n\n\t\t\t\topts = {\n\t\t\t\t\turl: ajaxurl, // ajaxurl is defined by WordPress and points to /wp-admin/admin-ajax.php\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tasync: true,\n\t\t\t\t\tcache: false,\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\tdata:{\n\t\t\t\t\t\taction: 'save_sort', // Tell WordPress how to handle this ajax request\n\t\t\t\t\t\torder: sortList.sortable( 'toArray' ).toString() // Passes ID's of list items in\t1,3,2 format\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function(response) {\n\t\t\t\t\t\t$( 'div#message' ).remove();\n\t\t\t\t\t\t$( '#loading-animation' ).hide(); // Hide the loading animation\n\t\t\t\t\t\t$( 'div#jobs-admin-sort h2:first' ).after( '<div id=\"message\" class=\"updated below-h2\"><p>Jobs sort order has been saved</p></div>' );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t},\n\t\t\t\t\terror: function(xhr,textStatus,e) {\n\t\t\t\t\t\t$( '#loading-animation' ).hide(); // Hide the loading animation\n\t\t\t\t\t\t$( 'div#jobs-admin-sort h2:first' ).after( '<div id=\"message\" class=\"error below-h2\"><p>There was an error saving the sort order. Please try again later.</p></div>' );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t$.ajax(opts);\n\t\t\t}\n\t\t});\n\n\t});\n});", "<?php\n\nfunction hrm_jobs_render_admin() {\n\t$args = array(\n\t\t'post_type' => 'job',\n\t\t'orderby' => 'menu_order',\n\t\t'order' => 'ASC',\n\t\t'post_per_page' => 100, /* add a reasonable max # rows */\n\t\t'no_found_rows' => true, /* don't generate a count as part of query */\n\n\t);\n\n\t$jobs = new WP_Query( $args );\n\t?>\n\t\t<div id=\"jobs-admin-sort\" class=\"wrap\">\n\t\t<div id=\"icon-job-admin\" class=\"icon32\"><br /></div>\n\t\t<h2><?php _e('Sort Job Positions', 'hrm_jobs'); ?> <img src=\"<?php echo esc_url( admin_url() . '/images/loading.gif' ); ?>\" id=\"loading-animation\" /></h2>\n\t\t\t<?php if ( $jobs->have_posts() ) : ?>\n\t\t\t<p><?php _e('<strong>Note:</strong> this only affects the Jobs listed using the shortcode functions', 'hrm_jobs'); ?></p>\n\t\t\t<ul id=\"custom-type-list\">\n\t\t\t\t<?php while ( $jobs->have_posts() ) : $jobs->the_post(); ?>\n\t\t\t\t\t<li id=\"<?php the_id(); ?>\"><?php the_title(); ?></li>\n\t\t\t\t<?php endwhile; ?>\n\t\t\t</ul>\n\t\t\t<?php else: ?>\n\t\t\t<p><?php _e( 'You have no Jobs to sort.', 'hrm_jobs' ); ?></p>\n\t\t\t<?php endif; ?>\n\t\t</div>\n\n\t<?php\n}\n\nadd_action( 'admin_menu', 'hrm_jobs_add_menu_page');\n\nfunction hrm_jobs_save_order() {\n\n\t//@todo add a nonce here to verify user intent\n\t//@todo add a capability check to ensure use caps\n\n\tglobal $wpdb; // WordPress database class\n\t\t$order = explode(',', $_POST['order']);\n\t\t$counter = 0;\n\t\tforeach ($order as $item_id) {\n\t\t\t$wpdb->update( $wpdb->posts, array( 'menu_order' => $counter ), array( 'ID' => (int) $item_id) );\n\t\t\t$counter++;\n\t\t}\n\t\tdie(1);\n\n}\n\nadd_action( 'wp_ajax_save_sort', 'hrm_jobs_save_order' );"], "filenames": ["hrm-jobs.php", "jobs-cpt.php", "jobs-fields.php", "js/reorder.js", "render-admin.php"], "buggy_code_start_loc": [33, 3, 1, 2, 7], "buggy_code_end_loc": [96, 49, 158, 29, 39], "fixing_code_start_loc": [33, 3, 1, 2, 7], "fixing_code_end_loc": [98, 49, 158, 29, 45], "type": "CWE-79", "message": "A vulnerability classified as problematic was found in Jobs-Plugin. Affected by this vulnerability is an unknown functionality. The manipulation leads to cross site scripting. The attack can be launched remotely. The name of the patch is b8a56718b1d42834c6ec51d9c489c5dc20471d7b. It is recommended to apply a patch to fix this issue. The identifier VDB-217189 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2014-125035", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-02T16:15:10.330", "lastModified": "2023-01-09T18:29:06.930", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability classified as problematic was found in Jobs-Plugin. Affected by this vulnerability is an unknown functionality. The manipulation leads to cross site scripting. The attack can be launched remotely. The name of the patch is b8a56718b1d42834c6ec51d9c489c5dc20471d7b. It is recommended to apply a patch to fix this issue. The identifier VDB-217189 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:jobs-plugin_project:jobs-plugin:*:*:*:*:*:*:*:*", "versionEndExcluding": "2014-12-01", "matchCriteriaId": "C3AEEBFA-618D-49E7-8E58-81FBE17F3D14"}]}]}], "references": [{"url": "https://github.com/mrbobbybryant/Jobs-Plugin/commit/b8a56718b1d42834c6ec51d9c489c5dc20471d7b", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/mrbobbybryant/Jobs-Plugin/pull/2", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217189", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217189", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/mrbobbybryant/Jobs-Plugin/commit/b8a56718b1d42834c6ec51d9c489c5dc20471d7b"}}