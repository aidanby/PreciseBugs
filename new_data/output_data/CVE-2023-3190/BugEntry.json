{"buggy_code": ["/*\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n * @project   Teampass\n * @version   \n * @file      functions.js\n * ---\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n * @copyright 2009-2023 Teampass.net\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n * @see       https://www.teampass.net\n */\n\n/**\n*   Countdown before session expiration\n**/\nfunction countdown()\n{\n    // if a process is in progress then do not decrease the time counter.\n    if (typeof ProcessInProgress !== 'undefined' && ProcessInProgress === true) {\n        $('.countdown-icon')\n            .addClass('fas fa-history')\n            .removeClass('far fa-clock');\n        \n        $(this).delay(1000).queue(function()\n        {\n            countdown();\n            $(this).dequeue();\n        });\n\n        return false;\n    }\n\n    // Continue\n    let DayTill;\n    let hoursInDay = 24;\n    let limitTen = 10;\n    let oneSecondsMs = 1000;\n    let theDay =  $('#temps_restant').val();\n    let today = new Date();\n    let second = Math.floor(theDay - today.getTime() / oneSecondsMs);\n    let minute = Math.floor(second / hourInMinutes);\n    let hour = Math.floor(minute / hourInMinutes);\n    let CHour= hour % hoursInDay;\n    if (CHour < limitTen) {\n        CHour = '0' + CHour;\n    }\n    let CMinute= minute % hourInMinutes;\n    if (CMinute < limitTen) {\n        CMinute = '0' + CMinute;\n    }\n    let CSecond= second % hourInMinutes;\n    if (CSecond < limitTen) {\n        CSecond = '0' + CSecond;\n    }\n    DayTill = CHour + ':' + CMinute + ':' + CSecond;\n\n    // Session will soon be closed\n    if (DayTill === '00:00:50') {\n        showExtendSession();\n        $('#countdown').css('color', 'red');\n    }\n\n    // Manage end of session\n    if ($('#temps_restant').val() !== '' && DayTill <= '00:00:00' && parseInt($('#please_login').val()) !== 1) {\n        $('#please_login').val('1');\n        $(location).attr('href','index.php?session=expired');\n    }\n\n    //Rewrite the string to the correct information.\n    if ($('#countdown')) {\n        $('#countdown').html('<i class=\"far fa-clock countdown-icon mr-1\"></i>' + DayTill);\n    }\n\n    //Create the timer 'counter' that will automatic restart function countdown() again every second.\n    $(this).delay(1000).queue(function()\n    {\n        countdown();\n        $(this).dequeue();\n    });\n}\n\n\n/**\n*\n**/\nfunction unsanitizeString(string) {\n    if(string !== \"\" && string !== null) {\n        string = string.replace(/\\\\/g,\"\").replace(/&#92;/g, \"\\\\\").replace(/&quot;/g, '\"');\n    }\n    return string;\n}\n\n/**\n*   Clean up a string and delete any scripting tags\n**/\nfunction sanitizeString(string) {\n    if(string !== \"\" && string !== null && string !== undefined) {\n        string = string.replace(/\\\\/g,\"&#92;\").replace(/\"/g,\"&quot;\");\n        string = string.replace(new RegExp(\"\\\\s*<script[^>]*>[\\\\s\\\\S]*?</script>\\\\s*\",\"ig\"), \"\");\n    }\n    return string;\n}\n\n/**\n*   Checks if URL has expected format\n**/\nfunction validateURL(url) {\n    let urlregex = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n    return urlregex.test(url);\n}\n\n\nfunction split( val ) {\n    return val.split( / \\s*/ );\n}\n\nfunction extractLast( term ) {\n    return split( term ).pop();\n}\n\n/**\n * Shows error message\n * @param  {string} message  Message to display\n * @return {boolean}         False\n */\nfunction jsonErrorHdl(message)\n{\n    //show as confirm\n    // Prepare modal\n    showModalDialogBox(\n        '#warningModal',\n        '<i class=\"fas fa-warning fa-lg warning mr-2\"></i>Caution',\n        message,\n        '',\n        'Close',\n        true,\n        true\n    );\n\n    // Actions on modal buttons\n    $(document).on('click', '#warningModalButtonClose', function() {\n        \n    });\n    $(document).on('click', '#warningModalButtonAction', function() {\n        // SHow user\n    });\n    return false;\n}\n\n/**\n * [prepareExchangedData description]\n * @param  {[type]} data [description]\n * @param  {[type]} type [description]\n * @param  {[type]} key  [description]\n * @param  {[type]} fileName  [description]\n * @param  {[type]} functionName  [description]\n * @return {[type]}      [description]\n */\nfunction prepareExchangedData(data, type, key, fileName = '', functionName = '')\n{\n    if (type === 'decode') {\n        if (parseInt($('#encryptClientServer').val()) === 0) {\n            try {\n                return $.parseJSON(data);\n            }\n            catch (e) {\n                return jsonErrorHdl(data);\n            }\n        } else {\n            try {\n                let encryption = new Encryption();\n                return JSON.parse(encryption.decrypt(data, key));\n            }\n            catch (e) {\n                return jsonErrorHdl('<b>Next error occurred</b><div>' + e + '</div>'\n                    + (fileName !== '' ? '<br><b>Informations:</b><div>  - File: ' + fileName + '<br>  - Function: ' + functionName + '</div>': '')\n                    + '<div><br><b>Raw answer from server:</b><br>'+data+'</div>');\n            }\n        }\n    } else if (type === 'encode') {\n        if (parseInt($('#encryptClientServer').val()) === 0) {\n            return stripHtml(data);\n        } else {\n            let encryption = new Encryption();\n            return encryption.encrypt(data, key);\n        }\n    } else {\n        return false;\n    }\n}\n\nfunction isJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n/**\n * Returns the text from a HTML string\n * \n * @param {string} String The html string\n */\nfunction stripHtml(html) {\n    // Create a new div element\n    let temporalDivElement = document.createElement('div');\n    // Set the HTML content with the providen\n    temporalDivElement.innerHTML = html;\n    // Retrieve the text property of the element (cross-browser support)\n    return temporalDivElement.textContent || temporalDivElement.innerText || '';\n}\n\n\n/**\n * \n * @param {string} data Crypted string\n * @param {string} key  Session key\n */\nfunction unCryptData(data, key)\n{\n    if (data !== undefined && data.substr(0, 7) === 'crypted') {\n        let uncryptedData = prepareExchangedData(\n            data.substr(7),\n            'decode',\n            key\n        )\n        \n        if (uncryptedData.password.length > 0)\n            return uncryptedData.password;\n        else\n            return false;\n    }\n    return false;\n}\n\n/**\n * \n * @param {string}data Crypted string\n * @param {string}key  Session key\n * @param  {[type]} fileName  [description]\n * @param  {[type]} functionName  [description]\n */\nfunction decodeQueryReturn(data, key, fileName = '', functionName = '')\n{\n    try {\n        return prepareExchangedData(data , \"decode\", key, fileName, functionName);\n    } catch (e) {\n        // error\n        toastr.remove();\n        toastr.error(\n            'An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />' + data,\n            'Error', {\n                timeOut: 5000,\n                progressBar: true\n            }\n        );\n        return false;\n    }\n}\n\n/**\n * \n * @param {string} action Action\n * @param {string} name   Name\n * @param {array} data    Data\n */\nfunction browserSession(action, name, data)\n{\n    // Initialize the session\n    if (action === 'init') {\n        if (store.get(name) === 'undefined'\n            || store.get(name) === undefined\n        ) {\n            store.set(\n                name,\n                data\n            );\n        } else {\n            // Ensure all entries exist\n            $(data).each(function(value, key) {\n                store.update(\n                    name,\n                    function(bSession)\n                    {\n                        bSession.key = value;\n                    }\n                )\n            });\n        }\n    }\n}\n\n/**\n * \n * @param {string} modalId      Modal id\n * @param {string} title        Title\n * @param {string} body         Body\n * @param {string} actionButton Action Button\n * @param {string} closeButton  Close Button\n * @param {string} xlSize       Size\n * @param {string} warningModal Warning Modal\n * @param {string} closeCross   Close on cross\n */\nfunction showModalDialogBox(\n    modalId,\n    title,\n    body,\n    actionButton,\n    closeButton,\n    xlSize = false,\n    warningModal = false,\n    closeCross = true\n) {\n    $(modalId + 'Title').html(title);\n    $(modalId + 'Body').html(body);\n    if (actionButton === '') {\n        $(modalId + 'ButtonAction').addClass('hidden');\n    } else {\n        $(modalId + 'ButtonAction').removeClass('hidden');\n        $(modalId + 'ButtonAction').html(actionButton);\n    }\n    if (closeButton === '') {\n        $(modalId + 'ButtonClose').addClass('hidden');\n    } else {\n        $(modalId + 'ButtonClose').removeClass('hidden');\n        $(modalId + 'ButtonClose').html(closeButton);\n    }\n    if (xlSize === true) {\n        $(modalId + ' div:first').addClass('modal-xl');\n    } else {\n        $(modalId + ' div:first').removeClass('modal-xl');\n    }\n    if (warningModal === true) {\n        $(modalId + ':eq(1)').addClass('bg-warning');\n    } else {\n        $(modalId + ':eq(1)').removeClass('bg-warning');\n    }\n    if (closeCross === false) {\n        $(modalId + 'CrossClose').addClass('hidden');\n    } else {\n        $(modalId + 'CrossClose').removeClass('hidden');\n    }\n    $(modalId).modal({\n        backdrop : 'static',\n        keyboard : false,\n        show: true,\n        focus: true\n    });\n    $(modalId).modal('handleUpdate');\n}\n\n/**\n * Sanitize a string\n * \n * @param {string} str  The string\n */\nfunction htmlEncode(str){\n    return String(str).replace(/[^\\w. ]/gi, function(c){\n        return '&#'+c.charCodeAt(0)+';';\n    });\n}\n\n/* Extend String object with method to encode multi-byte string to utf8\n * - monsur.hossa.in/2012/07/20/utf-8-in-javascript.html\n * - note utf8Encode is an identity function with 7-bit ascii strings, but not with 8-bit strings;\n * - utf8Encode('x') = 'x', but utf8Encode('\u00e7a') = '\u00c3\u00a7a', and utf8Encode('\u00c3\u00a7a') = '\u00c3\u0083\u00c2\u00a7a'*/\nif (typeof String.prototype.utf8Encode == 'undefined') {\n    String.prototype.utf8Encode = function() {\n        return unescape( encodeURIComponent( this ) );\n    };\n}\n\n/* Extend String object with method to decode utf8 string to multi-byte */\nif (typeof String.prototype.utf8Decode == 'undefined') {\n    String.prototype.utf8Decode = function() {\n        try {\n            return decodeURIComponent( escape( this ) );\n        } catch (e) {\n            return this; // invalid UTF-8? return as-is\n        }\n    };\n}\n\nfunction fieldSanitizeStep1(\n    field,\n    bHtml=true,\n    bSvg=true,\n    bSvgFilters=true,\n    text=''\n)\n{\n    if (field === undefined ||field === '') {\n        return false;\n    }\n    let string = '';\n    text = (text === '') ? $(field).val() : text;\n/*\n    // Sanitize string\n    var tagsToReplace = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        \"'\" : '&#39;',\n        '\"' : '&quot;'\n    };\n    text = text.replace(/[&<>'\"]/g, function(tag) {\n        return tagsToReplace[tag] || tag;\n    });\n    */\n    // Purify string\n    string = DOMPurify.sanitize(\n        text\n            .replaceAll('&lt;', '<')\n            .replaceAll('&gt;', '>')\n            .replaceAll('&amp;', '&')\n            .replaceAll('&quot;', '\"')\n            .replaceAll('&#39;', \"'\"),\n        {USE_PROFILES: {html:bHtml, svg:bSvg, svgFilters: bSvgFilters}}\n    );\n    \n    // Clear field if string is empty and warn user\n    if (string === '' && text !== '') {\n        $(field).val('');\n        return false;\n    }\n\n    return string;\n}", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      admin.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\n?>\n\n<script type=\"text/javascript\">\n    var requestRunning = false;\n\n    /**\n     * ADMIN\n     */\n    // <- PREPARE TOGGLES\n    $('.toggle').toggles({\n        drag: true,\n        click: true,\n        text: {\n            on: '<?php echo langHdl('yes'); ?>',\n            off: '<?php echo langHdl('no'); ?>'\n        },\n        on: true,\n        animate: 250,\n        easing: 'swing',\n        width: 50,\n        height: 20,\n        type: 'compact'\n    });\n    $('.toggle').on('toggle', function(e, active) {\n        if (active) {\n            $(\"#\" + e.target.id + \"_input\").val(1);\n            if (e.target.id == \"allow_print\") {\n                $(\"#roles_allowed_to_print_select\").prop(\"disabled\", false);\n            }\n            if (e.target.id == \"anyone_can_modify\") {\n                $(\"#form-item-row-modify\").removeClass('hidden');\n            }\n            if (e.target.id == \"restricted_to\") {\n                $(\"#form-item-row-restricted\").removeClass('hidden');\n            }\n        } else {\n            $(\"#\" + e.target.id + \"_input\").val(0);\n            if (e.target.id == \"allow_print\") {\n                $(\"#roles_allowed_to_print_select\").prop(\"disabled\", true);\n            }\n            if (e.target.id == \"anyone_can_modify\") {\n                $(\"#form-item-row-modify\").addClass('hidden');\n            }\n            if (e.target.id == \"restricted_to\") {\n                $(\"#form-item-row-restricted\").addClass('hidden');\n            }\n        }\n\n        var data = {\n            \"field\": e.target.id,\n            \"value\": $(\"#\" + e.target.id + \"_input\").val(),\n        }\n        console.log(data)\n        // Store in DB   \n        $.post(\n            \"sources/admin.queries.php\", {\n                type: \"save_option_change\",\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                // Handle server answer\n                try {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                } catch (e) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('server_answer_error') . '<br />' . langHdl('server_returned_data') . ':<br />'; ?>' + data.error,\n                        '', {\n                            closeButton: true,\n                            positionClass: 'toastr-top-right'\n                        }\n                    );\n                    return false;\n                }\n                console.log(data)\n                if (data.error === false) {\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('saved'); ?>',\n                        '', {\n                            timeOut: 2000,\n                            progressBar: true\n                        }\n                    );\n                }\n            }\n        );\n    });\n    // .-> END. TOGGLES\n\n    // <- PREPARE SELECT2\n    $('.select2').select2({\n        language: '<?php echo isset($_SESSION['user_language_code']) === true ? $_SESSION['user_language_code'] : 'EN'; ?>'\n    });\n\n    /**\n     */\n    $(document).on('change', '.form-control-sm, .setting-ldap', function() {\n        var field = $(this).attr('id'),\n            value = $.isArray($(this).val()) === false ? $(this).val() : JSON.stringify($(this).val().map(Number));\n\n        if (field === '' || field === undefined || $(this).hasClass('no-save') === true) return false;\n        \n        // prevent launch of similar query in case of doubleclick\n        if (requestRunning === true) {\n            return false;\n        }\n\n        requestRunning = true;\n\n        var data = {\n            \"field\": field,\n            \"value\": value,\n        }\n        console.log(data);\n\n        // Store in DB   \n        $.post(\n            \"sources/admin.queries.php\", {\n                type: \"save_option_change\",\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                // Handle server answer\n                try {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                } catch (e) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('server_answer_error') . '<br />' . langHdl('server_returned_data') . ':<br />'; ?>' + data.error,\n                        '', {\n                            closeButton: true,\n                            positionClass: 'toastr-top-right'\n                        }\n                    );\n                    return false;\n                }\n                console.log(data)\n                if (data.error === false) {\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('saved'); ?>',\n                        '', {\n                            timeOut: 2000,\n                            progressBar: true\n                        }\n                    );\n                }\n                requestRunning = false;\n            }\n        );\n    });\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      api.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'api', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n\n    $('[data-mask]').inputmask();\n\n    /**\n     * Adding a new KEY\n     */\n    $(document).on('click', '#button-new-api-key', function() {\n        // IS form field?\n        if ($('#new_api_key_label') === '') {\n            return false;\n        }\n\n        // Prepare data\n        var data = {\n            'label': $('#new_api_key_label').val(),\n            'action': 'add',\n        }\n\n        $('#table-api-keys').removeClass('hidden');\n        $('#api-no-keys').addClass('hidden');\n\n        // Launch action\n        $.post(\n            'sources/admin.queries.php', {\n                type: 'admin_action_api_save_key',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.warning(\n                        '<?php echo langHdl('none_selected_text'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $('#table-api-keys')\n                        .append(\n                            '<tr data-id(\"' + data.keyId + '\")>' +\n                            '<td width=\"50px\"><i class=\"fas fa-trash infotip pointer\" title=\"<?php echo langHdl('del_button'); ?>\"></i></td>' +\n                            '<td><span class=\"edit-api-key\">' + $('#new_api_key_label').val() + '</span></td>' +\n                            '<td>' + data.key + '</td>' +\n                            '</tr>'\n                        );\n\n                    $('#new_api_key_label').val('');\n                }\n            }\n        );\n    });\n\n    /**\n     * DELETING AN EXISTING KEY\n     */\n    $(document).on('click', '.delete-api-key', function() {\n        var row = $(this).closest('tr'),\n            keyId = row.data('id');\n\n        if (keyId !== '') {\n            // Confirm\n            // Prepare modal\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-minus-square fa-lg warning mr-2\"></i><?php echo langHdl('please_confirm'); ?>',\n                '<?php echo langHdl('please_confirm_deletion'); ?>',\n                '<?php echo langHdl('confirm'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n\n            // Actions on modal buttons\n            $(document).on('click', '#warningModalButtonClose', function() {\n                // Nothing\n            });\n            $(document).on('click', '#warningModalButtonAction', function() {\n                // SHow user\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n                // Prepare data\n                var data = {\n                    'id': keyId,\n                    'action': 'delete',\n                }\n\n                // Launch action\n                $.post(\n                    'sources/admin.queries.php', {\n                        type: 'admin_action_api_save_key',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                        if (data.error === true) {\n                            // ERROR\n                            toastr.remove();\n                            toastr.warning(\n                                '<?php echo langHdl('none_selected_text'); ?>',\n                                '', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            $(row).remove();\n                            toastr.remove();\n                        }\n                    }\n                );\n            });\n        }\n    });\n\n    /**\n     * EDITING THE LABEL OF A KEY\n     */\n    var oldLabel;\n    $(document).on('click', '.edit-api-key', function() {\n        var cell = $(this).closest('td');\n        oldLabel = $(this).html();\n\n        $(this).remove();\n\n        $(cell).html(\n            '<input type=\"text\" class=\"form-control new-api-key\">' +\n            '<button class=\"btn btn-default\" id=\"new-api-key-save\"><i class=\"fa fa-save\"></i></button>' +\n            '<button class=\"btn btn-default ml-2\" id=\"new-api-key-cancel\"><i class=\"fa fa-times\"></i></button>'\n        );\n        $('.new-api-key').val(oldLabel);\n    });\n\n    $(document).on('click', '#new-api-key-save', function() {\n        var keyId = $(this).closest('tr').data('id'),\n            label = $(this).prev('input').val(),\n            cell = $(this).closest('td');\n\n        // Prepare data\n        var data = {\n            'id': keyId,\n            'label': label,\n            'action': 'update',\n        }\n\n        // Launch action\n        $.post(\n            'sources/admin.queries.php', {\n                type: 'admin_action_api_save_key',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                if (data.error === true) {\n                    $(cell).html('<span class=\"edit-api-key pointer\">' + oldLabel + '</span>');\n                    // ERROR\n                    toastr.remove();\n                    toastr.warning(\n                        '<?php echo langHdl('none_selected_text'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $(cell).html('<span class=\"edit-api-key pointer\">' + label + '</span>');\n                }\n            }\n        );\n\n    });\n\n    $(document).on('click', '#new-api-key-cancel', function() {\n\n        $(this).closest('td').html('<span class=\"edit-api-key pointer\">' + oldLabel + '</span>');\n\n    });\n\n    //----- WHITELIST IPS\n\n\n    $(document).on('click', '#button-new-api-ip', function() {\n        if ($('#new_api_ip_value').val() === '' || $('#new_api_ip_label').val() === '') {\n            toastr.remove();\n            toastr.warning(\n                '<?php echo langHdl('fields_with_mandatory_information_are_missing'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Prepare data\n        var data = {\n            'label': $('#new_api_ip_label').val(),\n            'ip': $('#new_api_ip_value').val(),\n            'action': 'add',\n        }\n\n        $('#table-api-ips').removeClass('hidden');\n        $('#api-no-ips').addClass('hidden');\n\n        // Launch action\n        $.post(\n            'sources/admin.queries.php', {\n                type: 'admin_action_api_save_ip',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.warning(\n                        '<?php echo langHdl('none_selected_text'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $('#table-api-ips')\n                        .append(\n                            '<tr data-id=\"' + data.ipId + '\">' +\n                            '<td width=\"50px\"><i class=\"fas fa-trash infotip pointer\" title=\"<?php echo langHdl('del_button'); ?>\"></i></td>' +\n                            '<td><span class=\"edit-api-ip pointer\" data-field=\"label\">' + $('#new_api_ip_label').val() + '</span></td>' +\n                            '<td><span class=\"edit-api-ip pointer\" data-field=\"value\">' + $('#new_api_ip_value').val() + '</span></td>' +\n                            '</tr>'\n                        );\n\n                    $('#new_api_ip_label, #new_api_ip_value').val('');\n                }\n            }\n        );\n    });\n\n    /**\n     * DELETING AN EXISTING IP\n     */\n    $(document).on('click', '.delete-api-ip', function() {\n        var row = $(this).closest('tr'),\n            ipId = row.data('id');\n\n        if (ipId !== '') {\n            // Confirm\n            // Prepare modal\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-minus-square fa-lg warning mr-2\"></i><?php echo langHdl('please_confirm'); ?>',\n                '<?php echo langHdl('please_confirm_deletion'); ?>',\n                '<?php echo langHdl('confirm'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n\n            // Actions on modal buttons\n            $(document).on('click', '#warningModalButtonClose', function() {\n                // Nothing\n            });\n            $(document).on('click', '#warningModalButtonAction', function() {\n                // SHow user\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n                // Prepare data\n                var data = {\n                    'id': ipId,\n                    'action': 'delete',\n                }\n\n                // Launch action\n                $.post(\n                    'sources/admin.queries.php', {\n                        type: 'admin_action_api_save_ip',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                        if (data.error === true) {\n                            // ERROR\n                            toastr.remove();\n                            toastr.warning(\n                                '<?php echo langHdl('none_selected_text'); ?>',\n                                '', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            $(row).remove();\n                            toastr.remove();\n                        }\n                    }\n                );\n            });\n        }\n    });\n\n\n\n    /**\n     * EDITING THE LABEL OF AN IP\n     */\n    $(document).on('click', '.edit-api-ip', function() {\n        var cell = $(this).closest('td'),\n            field = $(this).data('field');\n        oldLabel = $(this).html();\n\n        $(this).remove();\n\n        $(cell).html(\n            '<input type=\"text\" class=\"form-control new-api-ip\" data-field=\"' + field + '\">' +\n            '<button class=\"btn btn-default\" id=\"new-api-ip-save\"><i class=\"fa fa-save\"></i></button>' +\n            '<button class=\"btn btn-default ml-2\" id=\"new-api-ip-cancel\"><i class=\"fa fa-times\"></i></button>'\n        );\n        $('.new-api-ip').val(oldLabel);\n    });\n\n    $(document).on('click', '#new-api-ip-save', function() {\n        var ipId = $(this).closest('tr').data('id'),\n            label = $(this).prev('input').val(),\n            field = $(this).prev('input').data('field'),\n            cell = $(this).closest('td');\n\n        // Prepare data\n        var data = {\n            'id': ipId,\n            'value': label,\n            'field': field,\n            'action': 'update',\n        }\n\n        // Launch action\n        $.post(\n            'sources/admin.queries.php', {\n                type: 'admin_action_api_save_ip',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                if (data.error === true) {\n                    $(cell).html('<span class=\"edit-api-ip pointer\">' + oldLabel + '</span>');\n                    // ERROR\n                    toastr.remove();\n                    toastr.warning(\n                        '<?php echo langHdl('none_selected_text'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $(cell).html('<span class=\"edit-api-ip pointer\">' + label + '</span>');\n                }\n            }\n        );\n\n    });\n\n    $(document).on('click', '#new-api-ip-cancel', function() {\n\n        $(this).closest('td').html('<span class=\"edit-api-ip pointer\">' + oldLabel + '</span>');\n\n    });\n\n    //]]>\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      api.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception(\"Error file '/includes/config/tp.config.php' not exists\", 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'api', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n\n// Load template\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n\n?>\n\n<!-- Content Header (Page header) -->\n<div class=\"content-header\">\n    <div class=\"container-fluid\">\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-6\">\n                <h1 class=\"m-0 text-dark\">\n                    <i class=\"fas fa-cubes mr-2\"></i><?php echo langHdl('api'); ?>\n                </h1>\n            </div><!-- /.col -->\n        </div><!-- /.row -->\n    </div><!-- /.container-fluid -->\n</div>\n<!-- /.content-header -->\n\n<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class='card card-primary'>\n                    <div class='card-header'>\n                        <h3 class='card-title'><?php echo langHdl('api_configuration'); ?></h3>\n                    </div>\n                    <!-- /.card-header -->\n                    <!-- form start -->\n                    <div class='card-body'>\n\n                        <div class='row mb-5'>\n                            <div class='col-10'>\n                                <?php echo langHdl('settings_api'); ?>\n                                <small id='passwordHelpBlock' class='form-text text-muted'>\n                                    <?php echo langHdl('settings_api_tip'); ?>\n                                </small>\n                            </div>\n                            <div class='col-2'>\n                                <div class='toggle toggle-modern' id='api' data-toggle-on='<?php echo isset($SETTINGS['api']) === true && (int) $SETTINGS['api'] === 1 ? 'true' : 'false'; ?>'></div><input type='hidden' id='api_input' value='<?php echo isset($SETTINGS['api']) === true && (int) $SETTINGS['api'] === 1 ? '1' : '0'; ?>' />\n                            </div>\n                        </div>\n\n                        <div class='row mb-5'>\n                            <div class='col-10'>\n                                <?php echo langHdl('settings_api_token_duration'); ?>\n                                <small id='passwordHelpBlock' class='form-text text-muted'>\n                                    <?php echo langHdl('settings_api_token_duration_tip'); ?>\n                                </small>\n                            </div>\n                            <div class='col-2'>\n                            <input type='text' class='form-control form-control-sm' id='api_token_duration' value='<?php echo isset($SETTINGS['api_token_duration']) === true ? (int) $SETTINGS['api_token_duration'] : 60; ?>'>\n                            </div>\n                        </div>\n\n                        <ul class=\"nav nav-tabs\">\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#keys\" role=\"tab\" aria-controls=\"keys\"><?php echo langHdl('settings_api_keys_list'); ?></a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" data-toggle=\"tab\" href=\"#ips\" role=\"tab\" aria-controls=\"ips\"><?php echo langHdl('api_whitelist_ips'); ?></a>\n                            </li>\n                        </ul>\n\n                        <div class=\"tab-content\">\n                            <div class=\"tab-pane fade show active\" id=\"keys\" role=\"tabpanel\" aria-labelledby=\"keys-tab\">\n                                <small id=\"passwordHelpBlock\" class=\"form-text text-muted mt-4\">\n                                    <?php echo langHdl('settings_api_keys_list_tip'); ?>\n                                </small>\n                                <div class=\"mt-4\">\n                                    <?php\n                                    $rows = DB::query(\n                                        'SELECT increment_id, label, timestamp, user_id, value \n                                        FROM ' . prefixTable('api') . '\n                                        WHERE type = %s\n                                        ORDER BY timestamp ASC',\n                                        'key'\n                                    );\n                                    ?>\n                                    <table class=\"table table-hover table-striped<?php echo DB::count() > 0 ? '' : ' hidden'; ?> table-responsive\" style=\"width:100%\" id=\"table-api-keys\">\n                                        <thead>\n                                            <tr>\n                                                <th width=\"50px\"></th>\n                                                <th><?php echo langHdl('label'); ?></th>\n                                                <th><?php echo langHdl('settings_api_key'); ?></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <?php\n                                            foreach ($rows as $record) {\n                                                //$apiKey = (int) $record['user_id'] === -1 ? doDataDecryption($record['value'], base64_encode(SECUREFILE.':'.$record['timestamp'])) : $record['value'];\n                                                echo '\n                                                    <tr data-id=\"' . $record['increment_id'] . '\">\n                                                    <td width=\"50px\"><i class=\"fa fa-trash infotip pointer delete-api-key\" title=\"' . langHdl('del_button') . '\"></i></td>\n                                                    <td><span class=\"edit-api-key pointer\">' . $record['label'] . '</span></td>\n                                                    <td>' . $record['value']. '</td>                        \n                                                </tr>';\n                                            } ?>\n                                        </tbody>\n                                    </table>\n\n                                    <div class=\"mt-2<?php echo DB::count() > 0 ? ' hidden' : ''; ?>\" id=\"api-no-keys\">\n                                        <i class=\"fas fa-info mr-2 text-warning\"></i><?php echo langHdl('no_data_defined'); ?>\n                                    </div>\n\n                                </div>\n\n                                <div class=\"form-group mt-4\">\n                                    <div class=\"callout callout-info\">\n                                        <span class=\"text-bold\"><?php echo langHdl('adding_new_api_key'); ?></span>\n\n                                        <div class=\"row mt-1 ml-1\">\n                                            <input type=\"text\" placeholder=\"<?php echo langHdl('label'); ?>\" class=\"col-4 form-control form-control-sm\" id=\"new_api_key_label\">\n                                            <span class=\"fa-stack ml-2 infotip pointer\" title=\"<?php echo langHdl('adding_new_api_key'); ?>\" id=\"button-new-api-key\">\n                                                <i class=\"fas fa-square fa-stack-2x\"></i>\n                                                <i class=\"fas fa-plus fa-stack-1x fa-inverse\"></i>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div class=\"tab-pane fade show mb-4\" id=\"ips\" role=\"tabpanel\" aria-labelledby=\"ips-tab\">\n                                <small id=\"passwordHelpBlock\" class=\"form-text text-muted mt-4\">\n                                    <?php echo langHdl('api_whitelist_ips_tip'); ?>\n                                </small>\n                                <div class=\"col-12 mt-4\" id=\"table-api-ip\">\n                                    <?php\n                                    $rows = DB::query(\n                                                'SELECT increment_id, label, timestamp value FROM ' . prefixTable('api') . '\n                                        WHERE type = %s\n                                        ORDER BY timestamp ASC',\n                                                'ip'\n                                            );\n                                    ?>\n                                    <table class=\"table table-hover table-striped<?php echo DB::count() > 0 ? '' : ' hidden'; ?> table-responsive\" style=\"width:100%\" id=\"table-api-ips\">\n                                        <thead>\n                                            <tr>\n                                                <th width=\"50px\"></th>\n                                                <th><?php echo langHdl('label'); ?></th>\n                                                <th><?php echo langHdl('settings_api_ip'); ?></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <?php\n                                            foreach ($rows as $record) {\n                                                echo '\n                                                <tr data-id=\"' . $record['increment_id'] . '\">\n                                                    <td width=\"50px\"><i class=\"fa fa-trash infotip pointer delete-api-ip\" title=\"' . langHdl('del_button') . '\"></i></td>\n                                                    <td><span class=\"edit-api-ip pointer\" data-field=\"label\">' . $record['label'] . '</span></td>\n                                                    <td><span class=\"edit-api-ip pointer\" data-field=\"value\">' . $record['value'] . '</span></td>                        \n                                                </tr>';\n                                            } ?>\n                                        </tbody>\n                                    </table>\n\n                                    <div class=\"mt-2<?php echo DB::count() > 0 ? ' hidden' : ''; ?>\" id=\"api-no-ips\">\n                                        <i class=\"fas fa-info mr-2 text-warning\"></i><?php echo langHdl('no_data_defined'); ?>\n                                    </div>\n                                </div>\n\n                                <div class=\"form-group mt-4\">\n                                    <div class=\"callout callout-info\">\n                                        <span class=\"text-bold\"><?php echo langHdl('adding_new_api_ip'); ?></span>\n\n                                        <div class=\"row mt-1 ml-1\">\n                                            <input type=\"text\" placeholder=\"<?php echo langHdl('ip'); ?>\" class=\"col-4 form-control\" id=\"new_api_ip_value\" data-inputmask=\"'alias': 'ip'\" data-mask>\n                                            <input type=\"text\" placeholder=\"<?php echo langHdl('label'); ?>\" class=\"col-4 form-control ml-2\" id=\"new_api_ip_label\">\n                                            <span class=\"fa-stack ml-2 infotip pointer\" title=\"<?php echo langHdl('settings_api_add_ip'); ?>\" id=\"button-new-api-ip\">\n                                                <i class=\"fas fa-square fa-stack-2x\"></i>\n                                                <i class=\"fas fa-plus fa-stack-1x fa-inverse\"></i>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class=\"form-group\">\n\n                        </div>\n\n                        <div class=\"form-group mt-8\">\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      backups.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], '2fa', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n\n    $(document).on('click', '.key-generate', function() {\n        $.post(\n            \"sources/main.queries.php\", {\n                type: \"generate_password\",\n                type_category: 'action_user',\n                size: \"<?php echo $SETTINGS['pwd_maximum_length']; ?>\",\n                lowercase: \"true\",\n                numerals: \"true\",\n                capitalize: \"true\",\n                symbols: \"false\",\n                secure: \"true\",\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n\n                if (data.key !== \"\") {\n                    $('#onthefly-backup-key').val(data.key);\n                }\n            }\n        );\n    });\n\n    $(document).on('click', '.btn-choose-file', function() {\n        $('#onthefly-restore-progress, #onthefly-backup-progress')\n            .addClass('hidden')\n            .html('');\n    });\n\n    $(document).on('click', '.start', function() {\n        var action = $(this).data('action');\n\n        if (action === 'onthefly-backup') {\n            // PERFORM ONE BACKUP\n            if ($('#onthefly-backup-key').val() !== '') {\n                // Show cog\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n                // Prepare data\n                var data = {\n                    'encryptionKey': $('#onthefly-backup-key').val(),\n                };\n\n                //send query\n                $.post(\n                    \"sources/backups.queries.php\", {\n                        type: \"onthefly_backup\",\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                        console.log(data);\n\n                        if (data.error === true) {\n                            // ERROR\n                            toastr.remove();\n                            toastr.error(\n                                '<?php echo langHdl('server_answer_error') . '<br />' . langHdl('server_returned_data') . ':<br />'; ?>' + data.error,\n                                '<?php echo langHdl('error'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            // Store KEY in DB\n                            var newData = {\n                                \"field\": 'bck_script_passkey',\n                                \"value\": $('#onthefly-backup-key').val(),\n                            }\n\n                            $.post(\n                                \"sources/admin.queries.php\", {\n                                    type: \"save_option_change\",\n                                    data: prepareExchangedData(JSON.stringify(newData), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                                    key: \"<?php echo $_SESSION['key']; ?>\"\n                                },\n                                function(data) {\n                                    // Handle server answer\n                                    try {\n                                        data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                                    } catch (e) {\n                                        // error\n                                        toastr.remove();\n                                        toastr.error(\n                                            '<?php echo langHdl('server_answer_error') . '<br />' . langHdl('server_returned_data') . ':<br />'; ?>' + data.error,\n                                            '<?php echo langHdl('error'); ?>', {\n                                                timeOut: 5000,\n                                                progressBar: true\n                                            }\n                                        );\n                                        return false;\n                                    }\n\n                                    if (data.error === false) {\n                                        toastr.remove();\n                                        toastr.success(\n                                            '<?php echo langHdl('done'); ?>',\n                                            '', {\n                                                timeOut: 1000\n                                            }\n                                        );\n                                    }\n                                }\n                            );\n                            // SHOW LINK\n                            $('#onthefly-backup-progress')\n                                .removeClass('hidden')\n                                .html('<div class=\"alert alert-success alert-dismissible ml-2\">' +\n                                    '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>' +\n                                    '<h5><i class=\"icon fa fa-check mr-2\"></i><?php echo langHdl('done'); ?></h5>' +\n                                    '<i class=\"fas fa-file-download mr-2\"></i><a href=\"' + data.download + '\"><?php echo langHdl('pdf_download'); ?></a>' +\n                                    '</div>');\n\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n                        }\n                    }\n                );\n\n            }\n        } else if (action === 'onthefly-restore') {\n            // PERFORM A RESTORE\n            if ($('#onthefly-restore-key').val() !== '') {\n                // Show cog\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n                // Prepare data\n                var data = {\n                    'encryptionKey': $('#onthefly-restore-key').val(),\n                    'backupFile': $('#onthefly-restore-file').data('operation-id')\n                };\n                console.log(data);\n                //send query\n                $.post(\n                    \"sources/backups.queries.php\", {\n                        type: \"onthefly_restore\",\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                        console.log(data);\n\n                        if (data.error === true) {\n                            // ERROR\n                            toastr.remove();\n                            toastr.error(\n                                '<?php echo langHdl('server_answer_error') . '<br />' . langHdl('server_returned_data') . ':<br />'; ?>' + data.error,\n                                '<?php echo langHdl('error'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            // SHOW LINK\n                            $('#onthefly-restore-progress')\n                                .removeClass('hidden')\n                                .html('<div class=\"alert alert-success alert-dismissible ml-2\">' +\n                                    '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>' +\n                                    '<h5><i class=\"icon fa fa-check mr-2\"></i><?php echo langHdl('done'); ?></h5>' +\n                                    '<?php echo langHdl('restore_done_now_logout'); ?>' +\n                                    '</div>');\n\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        }\n    });\n\n\n\n    // PREPARE UPLOADER with plupload\n    var restoreOperationId = '',\n        uploader_restoreDB = new plupload.Uploader({\n            runtimes: \"gears,html5,flash,silverlight,browserplus\",\n            browse_button: \"onthefly-restore-file-select\",\n            container: \"onthefly-restore-file\",\n            max_file_size: '<?php\n            if (strrpos($SETTINGS['upload_maxfilesize'], 'mb') === false) {\n                echo $SETTINGS['upload_maxfilesize'] . 'mb';\n            } else {\n                echo $SETTINGS['upload_maxfilesize'];\n            }\n            ?>',\n            chunk_size: '5mb',\n            unique_names: true,\n            dragdrop: true,\n            multiple_queues: false,\n            multi_selection: false,\n            max_file_count: 1,\n            url: \"<?php echo $SETTINGS['cpassman_url']; ?>/sources/upload.files.php\",\n            flash_swf_url: \"<?php echo $SETTINGS['cpassman_url']; ?>/includes/libraries/Plupload/plupload.flash.swf\",\n            silverlight_xap_url: \"<?php echo $SETTINGS['cpassman_url']; ?>/includes/libraries/Plupload/plupload.silverlight.xap\",\n            filters: [{\n                title: \"SQL files\",\n                extensions: \"sql\"\n                //mime_types : \"application/zip\"\n            }],\n            init: {\n                FilesAdded: function(up, files) {\n                    // generate and save token\n                    $.post(\n                        \"sources/main.queries.php\", {\n                            type: \"save_token\",\n                            type_category: 'action_system',\n                            size: 25,\n                            capital: true,\n                            numeric: true,\n                            ambiguous: true,\n                            reason: \"restore_db\",\n                            duration: 10,\n                            key: '<?php echo $_SESSION['key']; ?>'\n                        },\n                        function(data) {\n                            console.log(data);\n                            store.update(\n                                'teampassUser',\n                                function(teampassUser) {\n                                    teampassUser.uploadToken = data[0].token;\n                                }\n                            );\n                            up.start();\n                        },\n                        \"json\"\n                    );\n                },\n                BeforeUpload: function(up, file) {\n                    // Show cog\n                    toastr.remove();\n                    toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                    console.log(\"Upload token: \"+store.get('teampassUser').uploadToken);\n\n                    up.settings.multipart_params = {\n                        \"PHPSESSID\": \"<?php echo $_SESSION['user_id']; ?>\",\n                        \"File\": file.name,\n                        \"type_upload\": \"restore_db\",\n                        \"user_token\": store.get('teampassUser').uploadToken\n                    };\n                },\n                UploadComplete: function(up, files) {console.log(files)\n                    store.update(\n                        'teampassUser',\n                        function(teampassUser) {\n                            teampassUser.uploadFileObject = restoreOperationId;\n                        }\n                    );\n                    $('#onthefly-restore-file-text').text(files[0].name);\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                },\n                Error: function(up, args) {\n                    console.log(args);\n                }\n            }\n        });\n\n    // Uploader options\n    uploader_restoreDB.bind('FileUploaded', function(upldr, file, object) {\n        var myData = prepareExchangedData(object.response, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n        $('#onthefly-restore-file').data('operation-id', myData.operation_id);\n    });\n\n    uploader_restoreDB.bind(\"Error\", function(up, err) {\n        //var myData = prepareExchangedData(err, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n        $(\"#onthefly-restore-progress\")\n            .removeClass('hidden')\n            .html('<div class=\"alert alert-danger alert-dismissible ml-2\">' +\n                '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>' +\n                '<h5><i class=\"icon fas fa-ban mr-2\"></i><?php echo langHdl('done'); ?></h5>' +\n                '' + err.message +\n                '</div>');\n                up.refresh(); // Reposition Flash/Silverlight\n    });\n\n    uploader_restoreDB.init();\n\n    //]]>\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      emails.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], '2fa', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n\n    $(document).on('click', '.button', function() {\n        var action = $(this).data('action');\n\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        if (action === 'send-test-email') {\n            $.post(\n                'sources/admin.queries.php', {\n                    type: 'admin_email_test_configuration',\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                    console.log(data);\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.warning(\n                            '<?php echo langHdl('none_selected_text'); ?>',\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n        } else if (action === 'send-waiting-emails') {\n            $('#unsent-emails')\n                .append('<span id=\"unsent-emails-progress\" class=\"ml-3\"></span>');\n            sendEmailsBacklog();\n        }\n    });\n\n\n    function sendEmailsBacklog(counter = \"\") {\n        $('#unsent-emails-progress')\n            .html('<i class=\"fas fa-cog fa-spin ml-2\"></i>' +\n                '<?php echo langHdl('remaining_emails_to_send'); ?> ' + counter);\n        $.post(\n            'sources/admin.queries.php', {\n                type: 'admin_email_send_backlog',\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.warning(\n                        '<?php echo langHdl('none_selected_text'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    if (data.counter > 0) {\n                        sendEmailsBacklog(data.counter);\n                    } else {\n                        $('#unsent-emails-progress')\n                            .html('<i class=\"fas fa-check ml-2 text-success mr-2\"></i>' +\n                                '<?php echo langHdl('done'); ?>');\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            }\n        );\n    }\n\n\n    $(document).on('click', '#button-duo-save', function() {\n        // Prepare data\n        var data = {\n            'akey': $('#duo_akey').val(),\n            'ikey': $('#duo_ikey').val(),\n            'skey': $('#duo_skey').val(),\n            'host': $('#duo_host').val(),\n        }\n        console.log(data);\n\n        // Launch action\n        $.post(\n            'sources/admin.queries.php', {\n                type: 'save_duo_in_sk_file',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.warning(\n                        '<?php echo langHdl('none_selected_text'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    //]]>\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      folders.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'folders', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n\n    // Clear\n    $('#folders-search').val('');\n\n    buildTable();\n\n    browserSession(\n        'init',\n        'teampassApplication', {\n            foldersSelect: '',\n            complexityOptions: '',\n        }\n    );\n\n    // Prepare iCheck format for checkboxes\n    $('input[type=\"checkbox\"].form-check-input').iCheck({\n        checkboxClass: 'icheckbox_flat-blue',\n    });\n\n    $('input[type=\"checkbox\"].form-check-red-input').iCheck({\n        checkboxClass: 'icheckbox_flat-red',\n    });\n\n    // Prepare buttons\n    var deletionList = [];\n    $('.tp-action').click(function() {\n        if ($(this).data('action') === 'new') {\n            //--- NEW FOLDER FORM\n            // Prepare form\n            $('.form-check-input').iCheck('uncheck');\n            $('.clear-me').val('');\n            $('#new-parent').val('na').change();\n            $('#new-minimal-complexity').val(0).change();\n\n            // Show\n            $('.form').addClass('hidden');\n            $('#folder-new').removeClass('hidden');\n            $('#folders-list').addClass('hidden');\n            $('#new-title').focus();\n\n        } else if ($(this).data('action') === 'new-submit') {\n            //--- SAVE NEW FOLDER\n            // Prepare data\n            var data = {\n                'title': DOMPurify.sanitize($('#new-title').val()),\n                'parentId': parseInt($('#new-parent').val()),\n                'complexity': parseInt($('#new-complexity').val()),\n                'accessRight': $('#new-access-right').val(),\n                'renewalPeriod': DOMPurify.sanitize($('#new-renewal').val() === '' ? 0 : parseInt($('#new-renewal').val())),\n                'addRestriction': $('#new-add-restriction').prop(\"checked\") === true ? 1 : 0,\n                'editRestriction': $('#new-edit-restriction').prop(\"checked\") === true ? 1 : 0,\n                'icon': DOMPurify.sanitize($('#new-folder-add-icon').val(), {USE_PROFILES: {html: true}}),\n                'iconSelected': DOMPurify.sanitize($('#new-folder-add-icon-selected').val(), {USE_PROFILES: {html: true}}),\n            }\n            console.log(data)\n            // Launch action\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'add_folder',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                    console.log(data)\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('error'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        buildTable();\n\n                        // Add new folder to the list 'new-parent'\n                        // Launch action\n                        $.post(\n                            'sources/folders.queries.php', {\n                                type: 'refresh_folders_list',\n                                key: '<?php echo $_SESSION['key']; ?>'\n                            },\n                            function(data) { //decrypt data\n                                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                                console.log(data);\n\n                                // prepare options list\n                                var prev_level = 0,\n                                    droplist = '';\n\n                                $(data.subfolders).each(function(i, folder) {\n                                    droplist += '<option value=\"' + folder['id'] + '\">' +\n                                        folder['label'] +\n                                        folder['path'] +\n                                        '</option>';\n                                });\n\n                                $('#new-parent')\n                                    .empty()\n                                    .append(droplist);\n                            }\n                        );\n\n                        $('.form').addClass('hidden');\n                        $('#folders-list').removeClass('hidden');\n                    }\n                }\n            );\n\n        } else if ($(this).data('action') === 'cancel') {\n            //--- NEW FORM CANCEL\n            $('.form').addClass('hidden');\n            $('#folders-list').removeClass('hidden');\n\n        } else if ($(this).data('action') === 'delete') {\n            //--- DELETE FORM SHOW\n            if ($('#table-folders input[type=checkbox]:checked').length === 0) {\n                toastr.remove();\n                toastr.warning(\n                    '<?php echo langHdl('you_need_to_select_at_least_one_folder'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Prepare\n            $('#delete-confirm').iCheck('uncheck');\n\n            // Build list\n            var selectedFolders = '<ul>';\n            $(\"input:checkbox[class=checkbox-folder]:checked\").each(function() {\n                selectedFolders += '<li>' + $('#folder-' + $(this).data('id')).text() + '</li>';\n            });\n            $('#delete-list').html(selectedFolders + '</ul>');\n\n\n            // Show\n            $('.form').addClass('hidden');\n            $('#folder-delete').removeClass('hidden');\n            $('#folders-list').addClass('hidden');\n\n        } else if ($(this).data('action') === 'delete-submit') {\n            console.log('delete-submit')\n            //--- DELETE FOLDERS\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Get list of selected folders\n            var selectedFolders = [];\n            $(\"input:checkbox[class=checkbox-folder]:checked\").each(function() {\n                selectedFolders.push($(this).data('id'));\n            });\n\n            // Prepare data\n            var data = {\n                'selectedFolders': selectedFolders,\n            }\n\n            console.log(data)\n\n            // Launch action\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'delete_folders',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) { //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('error'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // refresh\n                        buildTable();\n\n                        // Show list\n                        $('.form').addClass('hidden');\n                        $('#folders-list').removeClass('hidden');\n\n                        // OK\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n\n        } else if ($(this).data('action') === 'refresh') {\n            //--- REFRESH FOLDERS LIST\n            $('.form').addClass('hidden');\n            $('#folders-list').removeClass('hidden');\n\n            // Build matrix\n            buildTable();\n        }\n    });\n\n    /**\n     * Handle delete button status\n     */\n    $(document).on('ifChecked', '#delete-confirm', function() {\n        $('#delete-submit').removeClass('disabled');\n    });\n    $(document).on('ifUnchecked', '#delete-confirm', function() {\n        $('#delete-submit').addClass('disabled');\n    });\n\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function buildTable() {\n        // Clear\n        $('#table-folders > tbody').html('');\n\n        // Show spinner\n        toastr.remove();\n        toastr.info('<?php echo langHdl('loading_data'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Build matrix\n        $.post(\n            'sources/folders.queries.php', {\n                type: 'build_matrix',\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                console.log(data);\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('error'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Build html\n                    var newHtml = '',\n                        ident = '',\n                        path = '',\n                        columns = '',\n                        rowCounter = 0,\n                        path = '',\n                        parentsClass = '',\n                        max_folder_depth = 0,\n                        foldersSelect = '<option value=\"0\"><?php echo langHdl('root'); ?></option>';\n\n                    $(data.matrix).each(function(i, value) {\n                        // List of parents\n                        parentsClass = '';\n                        $(value.parents).each(function(i, id) {\n                            parentsClass += 'p' + id + ' ';\n                        });\n\n                        // Row\n                        columns += '<tr data-id=\"' + value.id + '\" data-level=\"' + value.level + '\" class=\"' + parentsClass + '\"><td>';\n\n                        // Column 1\n                        if ((value.parentId === 0 &&\n                                (data.userIsAdmin === 1 || data.userCanCreateRootFolder === 1)) ||\n                            value.parentId !== 0\n                        ) {\n                            columns += '<input type=\"checkbox\" class=\"checkbox-folder\" id=\"cb-' + value.id + '\" data-id=\"' + value.id + '\">';\n\n                            if (value.numOfChildren > 0) {\n                                columns += '<i class=\"fas fa-folder-minus infotip ml-2 pointer icon-collapse\" data-id=\"' + value.id + '\" title=\"<?php echo langHdl('collapse'); ?>\"></i>';\n                            }\n                        }\n                        columns += '</td>';\n\n                        // Column 2\n                        columns += '<td class=\"modify pointer\" min-width=\"200px\">' +\n                            '<span id=\"folder-' + value.id + '\" data-id=\"' + value.id + '\" class=\"infotip folder-name\" data-html=\"true\" title=\"<?php echo langHdl('id'); ?>: ' + value.id + '<br><?php echo langHdl('level'); ?>: ' + value.level + '<br><?php echo langHdl('nb_items'); ?>: ' + value.nbItems + '\">' + value.title + '</span></td>';\n\n\n                        // Column 3\n                        path = '';\n                        $(value.path).each(function(i, folder) {\n                            if (path === '') {\n                                path = folder;\n                            } else {\n                                path += '<i class=\"fas fa-angle-right fa-sm ml-1 mr-1\"></i>' + folder;\n                            }\n                        });\n                        columns += '<td class=\"modify pointer\" min-width=\"200px\" data-value=\"' + value.parentId + '\">' +\n                            '<small class=\"text-muted\">' + path + '</small></td>';\n\n\n                        // Column 4\n                        columns += '<td class=\"modify pointer text-center\">';\n                        if (value.folderComplexity.value !== undefined) {\n                            columns += '<i class=\"' + value.folderComplexity.class + ' infotip\" data-value=\"' + value.folderComplexity.value + '\" title=\"' + value.folderComplexity.text + '\"></i>';\n                        } else {\n                            columns += '<i class=\"fas fa-exclamation-triangle text-danger infotip\" data-value=\"\" title=\"<?php echo langHdl('no_value_defined_please_fix'); ?>\"></i>';\n                        }\n                        columns += '</td>';\n\n\n                        // Column 5\n                        columns += '<td class=\"modify pointer text-center\">' + value.renewalPeriod + '</td>';\n\n\n                        // Column 6\n                        columns += '<td class=\"modify pointer text-center\" data-value=\"' + value.add_is_blocked + '\">';\n                        if (value.add_is_blocked === 1) {\n                            columns += '<i class=\"fa fa-toggle-on text-info\"></i>';\n                        } else {\n                            columns += '<i class=\"fa fa-toggle-off\"></i>';\n                        }\n                        columns += '</td>';\n\n                        // Column 7\n                        columns += '<td class=\"modify pointer text-center\" data-value=\"' + value.edit_is_blocked + '\">';\n                        if (value.edit_is_blocked === 1) {\n                            columns += '<i class=\"fa fa-toggle-on text-info\"></i>';\n                        } else {\n                            columns += '<i class=\"fa fa-toggle-off\"></i>';\n                        }\n                        columns += '</td>';\n\n                        // Column \n                        columns += '<td class=\"modify pointer text-center\" data-value=\"' + value.icon + '\"><i class=\"' + value.icon + '\"></td>';\n\n                        // Column 9\n                        columns += '<td class=\"modify pointer text-center\" data-value=\"' + value.iconSelected + '\">';\n                        if (value.iconSelected !== \"\") {\n                            columns += '<i class=\"' + value.iconSelected + '\">';\n                        }\n                        columns += '</td></tr>';\n\n\n                        // Folder Select\n                        foldersSelect += '<option value=\"' + value.id + '\">' + value.title + '</option>';\n\n                        // Max depth\n                        if (parseInt(value.level) > max_folder_depth) {\n                            max_folder_depth = parseInt(value.level);\n                        }\n\n                        rowCounter++;\n                    });\n\n                    // Show result\n                    $('#table-folders > tbody').html(columns);\n\n                    //iCheck for checkbox and radio inputs\n                    $('#table-folders input[type=\"checkbox\"]').iCheck({\n                        checkboxClass: 'icheckbox_flat-blue'\n                    });\n\n                    $('.infotip').tooltip();\n\n                    // store list of folders\n\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.foldersSelect = foldersSelect;\n                        }\n                    );\n\n                    // store list of Complexity\n                    complexity = '';\n                    $(data.fullComplexity).each(function(i, option) {\n                        complexity += '<option value=\"' + option.value + '\">' + option.text + '</option>';\n                    });\n\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.complexityOptions = complexity;\n                        }\n                    );\n\n                    // Adapt select\n                    $('#folders-depth').empty();\n                    $('#folders-depth').append('<option value=\"all\"><?php echo langHdl('all'); ?></option>');\n                    for (x = 1; x < max_folder_depth; x++) {\n                        $('#folders-depth').append('<option value=\"' + x + '\">' + x + '</option>');\n                    }\n                    $('#folders-depth').val('all').change();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n    }\n\n\n    /**\n     * Build list of folders\n     */\n    function refreshFoldersList() {\n        // Launch action\n        $.post(\n            'sources/folders.queries.php', {\n                type: 'select_sub_folders',\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) { //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n            }\n        );\n    }\n\n\n    /**\n     * Handle option when role is displayed\n     */\n    $(document).on('change', '#folders-depth', function() {\n        if ($('#folders-depth').val() === 'all') {\n            $('tr').removeClass('hidden');\n        } else {\n            $('tr').filter(function() {\n                if ($(this).data('level') <= $('#folders-depth').val()) {\n                    $(this).removeClass('hidden');\n                } else {\n                    $(this).addClass('hidden');\n                }\n            });\n        }\n    });\n\n    /**\n     * Handle search criteria\n     */\n    $('#folders-search').on('keyup', function() {\n        var criteria = $(this).val();\n        $('.folder-name').filter(function() {\n            if ($(this).text().toLowerCase().indexOf(criteria) !== -1) {\n                $(this).closest('tr').removeClass('hidden');\n            } else {\n                $(this).closest('tr').addClass('hidden');\n            }\n        });\n    });\n\n    /**\n     * Check / Uncheck children folders\n     */\n    var operationOngoin = false;\n    $(document).on('ifChecked', '.checkbox-folder', function() {\n        if (operationOngoin === false) {\n            operationOngoin = true;\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Show selection of folders\n            var selected_cb = $(this),\n                id = $(this).data('id');\n\n            // Now get subfolders\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'select_sub_folders',\n                    id: id,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    console.log(data)\n                    // check/uncheck checkbox\n                    if (data.subfolders !== '') {\n                        $.each(JSON.parse(data.subfolders), function(i, value) {\n                            $('#cb-' + value).iCheck('check');\n                        });\n                    }\n                    operationOngoin = false;\n\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            );\n        }\n    });\n\n    $(document).on('ifUnchecked', '.checkbox-folder', function() {\n        if (operationOngoin === false) {\n            operationOngoin = true;\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('loading_data'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Show selection of folders\n            var selected_cb = $(this),\n                id = $(this).data('id');\n\n            // Now get subfolders\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'select_sub_folders',\n                    id: id,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    // check/uncheck checkbox\n                    if (data.subfolders !== '') {\n                        $.each(JSON.parse(data.subfolders), function(i, value) {\n                            $('#cb-' + value).iCheck('uncheck');\n                        });\n                    }\n                    operationOngoin = false;\n\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            );\n        }\n    });\n\n\n    /**\n     * Handle the form for folder edit\n     */\n    var currentFolderEdited = '';\n    $('#table-folders').on('click', '.modify', function() {\n        // Manage edition of rights card\n        if ((currentFolderEdited !== '' && currentFolderEdited !== $(this).data('id')) ||\n            $('.temp-row').length > 0\n        ) {\n            $('.temp-row').remove();\n        } else if (currentFolderEdited === $(this).data('id')) {\n            return false;\n        }\n\n        // Init\n        var currentRow = $(this).closest('tr'),\n            folderTitle = $(currentRow).find(\"td:eq(1)\").text(),\n            folderParent = $(currentRow).find(\"td:eq(2)\").data('value'),\n            folderComplexity = $(currentRow).find(\"td:eq(3) > i\").data('value'),\n            folderRenewal = $(currentRow).find(\"td:eq(4)\").text(),\n            folderAddRestriction = $(currentRow).find(\"td:eq(5)\").data('value'),\n            folderEditRestriction = $(currentRow).find(\"td:eq(6)\").data('value'),\n            folderIcon = $(currentRow).find(\"td:eq(7)\").data('value'),\n            folderIconSelection = $(currentRow).find(\"td:eq(8)\").data('value');\n        currentFolderEdited = currentRow.data('id');\n\n\n        // Now show\n        $(currentRow).after(\n            '<tr class=\"temp-row\"><td colspan=\"' + $(currentRow).children('td').length + '\">' +\n            '<div class=\"card card-warning card-outline form\">' +\n            '<div class=\"card-body\">' +\n            '<div class=\"form-group ml-2\">' +\n            '<label for=\"folder-edit-title\"><?php echo langHdl('label'); ?></label>' +\n            '<input type=\"text\" class=\"form-control clear-me\" id=\"folder-edit-title\" value=\"' + folderTitle + '\">' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label for=\"folder-edit-parent\"><?php echo langHdl('parent'); ?></label><br>' +\n            '<select id=\"folder-edit-parent\" class=\"form-control form-item-control select2 clear-me\">' + store.get('teampassApplication').foldersSelect + '</select>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label for=\"folder-edit-complexity\"><?php echo langHdl('password_minimal_complexity_target'); ?></label><br>' +\n            '<select id=\"folder-edit-complexity\" class=\"form-control form-item-control select2 clear-me\">' + store.get('teampassApplication').complexityOptions + '</select>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label for=\"folder-edit-renewal\"><?php echo langHdl('renewal_delay'); ?></label>' +\n            '<input type=\"text\" class=\"form-control clear-me\" id=\"folder-edit-renewal\" value=\"' + folderRenewal + '\">' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label><?php echo langHdl('icon'); ?></label>' +\n            '<input type=\"text\" class=\"form-control form-folder-control\" id=\"folder-edit-icon\" value=\"'+folderIcon+'\">' +\n            '<small class=\"form-text text-muted\">' +\n            '<?php echo langHdl('fontawesome_icon_tip'); ?><a href=\"<?php echo FONTAWESOME_URL;?>\" target=\"_blank\"><i class=\"fas fa-external-link-alt ml-1\"></i></a>' +\n            '</small>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label><?php echo langHdl('icon_on_selection'); ?></label>' +\n            '<input type=\"text\" class=\"form-control form-folder-control\" id=\"folder-edit-icon-selected\" value=\"'+folderIconSelection+'\">' +\n            '<small class=\"form-text text-muted\">' +\n            '<?php echo langHdl('fontawesome_icon_tip'); ?><a href=\"<?php echo FONTAWESOME_URL;?>\" target=\"_blank\"><i class=\"fas fa-external-link-alt ml-1\"></i></a>' +\n            '</small>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\" id=\"folder-rights-tuned\">' +\n            '<label><?php echo langHdl('special'); ?></label>' +\n            '<div class=\"form-check\">' +\n            '<input type=\"checkbox\" class=\"form-check-input form-control\" id=\"folder-edit-add-restriction\">' +\n            '<label class=\"form-check-label pointer ml-2\" for=\"folder-edit-add-restriction\"><?php echo langHdl('create_without_password_minimal_complexity_target'); ?></label>' +\n            '</div>' +\n            '<div class=\"form-check\">' +\n            '<input type=\"checkbox\" class=\"form-check-input form-control\" id=\"folder-edit-edit-restriction\">' +\n            '<label class=\"form-check-label pointer ml-2\" for=\"folder-edit-edit-restriction\"><?php echo langHdl('edit_without_password_minimal_complexity_target'); ?></label>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '<div class=\"card-footer\">' +\n            '<button type=\"button\" class=\"btn btn-warning tp-action-edit\" data-action=\"submit\" data-id=\"' + currentFolderEdited + '\"><?php echo langHdl('submit'); ?></button>' +\n            '<button type=\"button\" class=\"btn btn-default float-right tp-action-edit\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>' +\n            '</div>' +\n            '</div>' +\n            '</td></tr>'\n        );\n\n        // Prepare iCheck format for checkboxes\n        $('input[type=\"checkbox\"].form-check-input, input[type=\"radio\"].form-radio-input').iCheck({\n            radioClass: 'iradio_flat-orange',\n            checkboxClass: 'icheckbox_flat-orange',\n        });\n\n        $('.select2').select2({\n            language: '<?php echo $_SESSION['user_language_code']; ?>'\n        });\n\n        // Manage status of the checkboxes\n        if (folderAddRestriction === 0) {\n            $('#folder-edit-add-restriction').iCheck('uncheck');\n        } else {\n            $('#folder-edit-add-restriction').iCheck('check');\n        }\n        if (folderEditRestriction === 0) {\n            $('#folder-edit-edit-restriction').iCheck('uncheck');\n        } else {\n            $('#folder-edit-edit-restriction').iCheck('check');\n        }\n\n        // Prepare select2\n        $('#folder-edit-parent').val(folderParent).change();\n        $('#folder-edit-complexity').val(folderComplexity).change();\n\n        currentFolderEdited = '';\n    });\n\n\n    $(document).on('click', '.tp-action-edit', function() {\n        if ($(this).data('action') === 'cancel') {\n            $('.temp-row').remove();\n        } else if ($(this).data('action') === 'submit') {\n            // STORE CHANGES\n            var currentFolderId = $(this).data('id');\n\n            // loop on all checked folders\n            var selectedFolders = [];\n            $(\"input:checkbox[class=checkbox-folder]:checked\").each(function() {\n                selectedFolders.push($(this).data('id'));\n            });\n\n            // Prepare data\n            var data = {\n                'id': currentFolderId,\n                'title': DOMPurify.sanitize($('#folder-edit-title').val()),\n                'parentId': $('#folder-edit-parent').val(),\n                'complexity': $('#folder-edit-complexity').val(),\n                'renewalPeriod': DOMPurify.sanitize($('#folder-edit-renewal').val()),\n                'addRestriction': $('#folder-edit-add-restriction').prop(\"checked\") === true ? 1 : 0,\n                'editRestriction': $('#folder-edit-edit-restriction').prop(\"checked\") === true ? 1 : 0,\n                'icon': DOMPurify.sanitize($('#folder-edit-icon').val(), {USE_PROFILES: {html: true}}),\n                'iconSelected': DOMPurify.sanitize($('#folder-edit-icon-selected').val(), {USE_PROFILES: {html: true}})\n            }\n            console.log(data)\n            // Launch action\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'update_folder',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('error'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        buildTable();\n                        /* TODO\n                        if (data.info_parent_changed === 0) {\n                            // Update\n                            var row = $('tr[data-id=\"' + currentFolderId + '\"]');\n                            console.log(row)\n\n                            $(row).find()\n\n                        } else {\n                            buildTable();\n                        }*/\n                    }\n                }\n            );\n        }\n    });\n\n    // Close on escape key\n    $(document).keyup(function(e) {\n        if (e.keyCode === 27) {\n            if ($('.temp-row').length > 0) {\n                $('.temp-row').remove();\n            }\n        }\n    });\n\n\n    // Manage collapse/expend\n    $(document).on('click', '.icon-collapse', function() {\n        if ($(this).hasClass('fa-folder-minus') === true) {\n            $(this)\n                .removeClass('fa-folder-minus')\n                .addClass('fa-folder-plus text-primary');\n\n            $('.p' + $(this).data('id')).addClass('hidden');\n        } else {\n            $(this)\n                .removeClass('fa-folder-plus  text-primary')\n                .addClass('fa-folder-minus');\n            $('.p' + $(this).data('id')).removeClass('hidden');\n        }\n    });\n\n\n    //]]>\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      folders.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception(\"Error file '/includes/config/tp.config.php' not exists\", 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'folders', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n\n// Load template\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n// Ensure Complexity levels are translated\nif (defined('TP_PW_COMPLEXITY') === false) {\n    define(\n        'TP_PW_COMPLEXITY',\n        [\n            TP_PW_STRENGTH_1 => [TP_PW_STRENGTH_1, langHdl('complex_level1'), 'fas fa-thermometer-empty text-danger'],\n            TP_PW_STRENGTH_2 => [TP_PW_STRENGTH_2, langHdl('complex_level2'), 'fas fa-thermometer-quarter text-warning'],\n            TP_PW_STRENGTH_3 => [TP_PW_STRENGTH_3, langHdl('complex_level3'), 'fas fa-thermometer-half text-warning'],\n            TP_PW_STRENGTH_4 => [TP_PW_STRENGTH_4, langHdl('complex_level4'), 'fas fa-thermometer-three-quarters text-success'],\n            TP_PW_STRENGTH_5 => [TP_PW_STRENGTH_5, langHdl('complex_level5'), 'fas fa-thermometer-full text-success'],\n        ]\n    );\n}\n\n$complexityHtml = '<div id=\"hidden-select-complexity\" class=\"hidden\"><select id=\"select-complexity\" class=\"form-control form-item-control save-me\">';\n$complexitySelect = '';\nforeach (TP_PW_COMPLEXITY as $level) {\n    $complexitySelect .= '<option value=\"' . $level[0] . '\">' . $level[1] . '</option>';\n}\n$complexityHtml .= $complexitySelect . '</select></div>';\n// Prepare folders\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/SplClassLoader.php';\n//Build tree\n$tree = new SplClassLoader('Tree\\NestedTree', $SETTINGS['cpassman_dir'] . '/includes/libraries');\n$tree->register();\n$tree = new Tree\\NestedTree\\NestedTree(prefixTable('nested_tree'), 'id', 'parent_id', 'title');\n/* Get full tree structure */\n$tst = $tree->getDescendants();\n// prepare options list\n$droplist = '<option value=\"na\">---' . langHdl('select') . '---</option>';\nif ((int) $_SESSION['is_admin'] === 1 || (int) $_SESSION['user_manager'] === 1 || (int) $_SESSION['can_create_root_folder'] === 1) {\n    $droplist .= '<option value=\"0\">' . langHdl('root') . '</option>';\n}\nforeach ($tst as $t) {\n    if (\n        in_array($t->id, $_SESSION['groupes_visibles']) === true\n        && in_array($t->id, $_SESSION['personal_visible_groups']) === false\n    ) {\n        $droplist .= '<option value=\"' . $t->id . '\">' . addslashes($t->title);\n        $text = '';\n        foreach ($tree->getPath($t->id, false) as $fld) {\n            $text .= empty($text) === true ? '     [' . $fld->title : ' > ' . $fld->title;\n        }\n        $droplist .= (empty($text) === true ? '' : $text . '</i>]') . '</option>';\n    }\n}\n\n?>\n\n<!-- Content Header (Page header) -->\n<div class=\"content-header\">\n    <div class=\"container-fluid\">\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-6\">\n                <h1 class=\"m-0 text-dark\">\n                    <i class=\"fa fa-folder-open mr-2\"></i><?php echo langHdl('folders'); ?>\n                </h1>\n            </div><!-- /.col -->\n        </div><!-- /.row -->\n    </div><!-- /.container-fluid -->\n</div>\n<!-- /.content-header -->\n\n<section class=\"content\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"card\">\n                <div class=\"card-header align-middle\">\n                    <h3 class=\"card-title\">\n                        <button type=\"button\" class=\"btn btn-primary btn-sm tp-action mr-2\" data-action=\"new\">\n                            <i class=\"fa fa-plus mr-2\"></i><?php echo langHdl('new'); ?>\n                        </button>\n                        <button type=\"button\" class=\"btn btn-primary btn-sm tp-action mr-2\" data-action=\"delete\">\n                            <i class=\"fa fa-trash mr-2\"></i><?php echo langHdl('delete'); ?>\n                        </button>\n                        <button type=\"button\" class=\"btn btn-primary btn-sm tp-action mr-2\" data-action=\"refresh\">\n                            <i class=\"fa fa-refresh mr-2\"></i><?php echo langHdl('refresh'); ?>\n                        </button>\n                    </h3>\n                </div>\n\n                <div class=\"card-body form hidden\" id=\"folder-new\">\n                    <div class=\"card card-primary\">\n                        <div class=\"card-header\">\n                            <h3 class=\"card-title\"><?php echo langHdl('add_new_folder'); ?></h3>\n                        </div>\n                        <!-- /.card-header -->\n                        <!-- form start -->\n                        <form role=\"form\">\n                            <div class=\"card-body\">\n                                <div class=\"form-group\">\n                                    <label for=\"new-title\"><?php echo langHdl('label'); ?></label>\n                                    <input type=\"text\" class=\"form-control clear-me\" id=\"new-title\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"new-parent\"><?php echo langHdl('parent'); ?></label>\n                                    <select id=\"new-parent\" class=\"form-control form-item-control select2 no-root\" style=\"width:100%;\">\n                                        <?php echo $droplist; ?>\n                                    </select>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"new-complexity\"><?php echo langHdl('password_minimal_complexity_target'); ?></label>\n                                    <select id=\"new-complexity\" class=\"form-control form-item-control select2 no-root\" style=\"width:100%;\">\n                                        <?php echo $complexitySelect; ?>\n                                    </select>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"new-access-right\"><?php echo langHdl('access_right_for_roles'); ?></label>\n                                    <select id=\"new-access-right\" class=\"form-control form-item-control select2 no-root\" style=\"width:100%;\">\n                                        <option value=\"\"><?php echo langHdl('no_access'); ?></option>\n                                        <option value=\"R\"><?php echo langHdl('read'); ?></option>\n                                        <option value=\"W\"><?php echo langHdl('write'); ?></option>\n                                    </select>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"new-renewal\"><?php echo langHdl('renewal_delay'); ?></label>\n                                    <input type=\"number\" class=\"form-control clear-me\" id=\"new-renewal\" value=\"0\" min=\"0\" data-bind=\"value:replyNumber\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <label><?php echo langHdl('icon'); ?></label>\n                                    <input type=\"text\" class=\"form-control form-folder-control\" id=\"new-folder-add-icon\">\n                                    <small class='form-text text-muted'>\n                                        <?php echo langHdl('fontawesome_icon_tip'); ?><a href=\"<?php echo FONTAWESOME_URL;?>\" target=\"_blank\"><i class=\"fas fa-external-link-alt ml-1\"></i></a>\n                                    </small>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label><?php echo langHdl('icon_on_selection'); ?></label>\n                                    <input type=\"text\" class=\"form-control form-folder-control\" id=\"new-folder-add-icon-selected\">\n                                    <small class='form-text text-muted'>\n                                        <?php echo langHdl('fontawesome_icon_tip'); ?><a href=\"<?php echo FONTAWESOME_URL;?>\" target=\"_blank\"><i class=\"fas fa-external-link-alt ml-1\"></i></a>\n                                    </small>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label><?php echo langHdl('special'); ?></label>\n                                    <div class=\"form-check\">\n                                        <input type=\"checkbox\" class=\"form-check-input form-control\" id=\"new-add-restriction\">\n                                        <label for=\"new-add-restriction\" class=\"form-check-label pointer ml-2\"><?php echo langHdl('create_without_password_minimal_complexity_target'); ?></label>\n                                    </div>\n                                    <div class=\"form-check\">\n                                        <input type=\"checkbox\" class=\"form-check-input form-control\" id=\"new-edit-restriction\">\n                                        <label for=\"new-edit-restriction\" class=\"form-check-label pointer ml-2\"><?php echo langHdl('edit_without_password_minimal_complexity_target'); ?></label>\n                                    </div>\n</div>\n                            </div>\n                            <!-- /.card-body -->\n\n                            <div class=\"card-footer\">\n                                <button type=\"button\" class=\"btn btn-primary tp-action\" data-action=\"new-submit\"><?php echo langHdl('submit'); ?></button>\n                                <button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n                <div class=\"card-body form hidden\" id=\"folder-delete\">\n                    <div class=\"card card-warning\">\n                        <div class=\"card-header\">\n                            <h3 class=\"card-title\"><?php echo langHdl('delete_folders'); ?></h3>\n                        </div>\n                        <!-- /.card-header -->\n                        <!-- form start -->\n                        <form role=\"form\">\n                            <div class=\"card-body\">\n                                <div class=\"form-group\">\n                                    <h5><i class=\"fa fa-warning mr-2\"></i><?php echo langHdl('next_list_to_be_deleted'); ?></h5>\n                                    <div id=\"delete-list\" class=\"clear-me\"></div>\n                                </div>\n                            </div>\n\n                            <div class=\"card-body\">\n                                <div class=\"alert alert-danger\">\n                                    <h5><i class=\"icon fa fa-warning mr-2\"></i><?php echo langHdl('caution'); ?></h5>\n                                    <div class=\"form-check mb-3\">\n                                        <input type=\"checkbox\" class=\"form-check-red-input form-item-control flat-red required\" id=\"delete-confirm\">\n                                        <label class=\"form-check-label ml-3\" for=\"delete-confirm\"><?php echo langHdl('folder_delete_confirm'); ?></label>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- /.card-body -->\n\n                            <div class=\"card-footer\">\n                                <button type=\"button\" class=\"btn btn-danger disabled tp-action\" data-action=\"delete-submit\" id=\"delete-submit\"><?php echo langHdl('confirm'); ?></button>\n                                <button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n                <!--<div class=\"card-header\">\n                    <h3 class=\"card-title\" id=\"folders-alphabet\"></h3>\n                </div>-->\n                <!-- /.card-header -->\n\n                <div class=\"card-body form table-responsive1\" id=\"folders-list\">\n                    <div class=\"callout callout-info mt-3\">\n                        <div class=\"callout-body row\">\n                            <div class=\"input-group input-group-sm col-8\">\n                                <div class=\"input-group-prepend\">\n                                    <div class=\"input-group-text\"><?php echo langHdl('only_display_folders_to_depth'); ?></div>\n                                </div>\n                                <select class=\"form-control form-control-sm w-10\" id=\"folders-depth\">\n                                </select>\n                            </div>\n                            <div class=\"input-group input-group-sm col-4\">\n                                <div class=\"input-group-prepend\">\n                                    <div class=\"input-group-text\">\n                                        <i class=\"fas fa-search\"></i>\n                                    </div>\n                                </div>\n                                <input type=\"text\" class=\"form-control\" placeholder=\"<?php echo langHdl('find'); ?>\" id=\"folders-search\">\n                            </div>\n                        </div>\n                    </div>\n                    <table id=\"table-folders\" class=\"table table-hover table-striped table-responsive\" style=\"width:100%\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\" width=\"80px\"></th>\n                                <th scope=\"col\" min-width=\"200px\"><?php echo langHdl('group'); ?></th>\n                                <th scope=\"col\" min-width=\"200px\"><?php echo langHdl('group_parent'); ?></th>\n                                <th scope=\"col\" width=\"50px\"><i class=\"fas fa-gavel fa-lg infotip\" title=\"<?php echo langHdl('password_strength'); ?>\"></i></th>\n                                <th scope=\"col\" width=\"50px\"><i class=\"fas fa-recycle fa-lg infotip\" title=\"<?php echo langHdl('group_pw_duration') . ' ' . langHdl('group_pw_duration_tip'); ?>\"></i></th>\n                                <th scope=\"col\" width=\"50px\"><i class=\"fas fa-pen fa-lg infotip\" title=\"<?php echo langHdl('auth_creation_without_complexity'); ?>\"></i></th>\n                                <th scope=\"col\" width=\"50px\"><i class=\"fas fa-edit fa-lg infotip\" title=\"<?php echo langHdl('auth_modification_without_complexity'); ?>\"></i></th>\n                                <th scope=\"col\" width=\"50px\"><i class=\"fas fa-folder fa-lg infotip\" title=\"<?php echo langHdl('icon'); ?>\"></i></th>\n                                <th scope=\"col\" width=\"50px\"><i class=\"fas fa-folder-open fa-lg infotip\" title=\"<?php echo langHdl('icon_on_selection'); ?>\"></i></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n<!-- hidden -->\n<?php echo $complexityHtml; ?>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      items.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (! checkUser($_SESSION['user_id'], $_SESSION['key'], curPage($SETTINGS), $SETTINGS)) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n\n$var = [];\n$var['hidden_asterisk'] = '<i class=\"fas fa-asterisk mr-2\"></i><i class=\"fas fa-asterisk mr-2\"></i><i class=\"fas fa-asterisk mr-2\"></i><i class=\"fas fa-asterisk mr-2\"></i><i class=\"fas fa-asterisk\"></i>';\n\n?>\n\n\n<script type=\"text/javascript\">\n    var requestRunning = false,\n        clipboardForLogin,\n        clipboardForPassword,\n        clipboardForLink,\n        query_in_progress = 0,\n        screenHeight = $(window).height(),\n        quick_icon_query_status = true,\n        first_group = 1,\n        folderSearchCriteria = $('#jstree_search').val(),\n        userDidAChange = false,\n        userUploadedFile = false,\n        selectedFolder = false,\n        selectedFolderId = false,\n        itemClipboard,\n        startedItemsListQuery = false,\n        itemStorageInformation = '',\n        applicationVars,\n        initialPageLoad = true,\n        previousSelectedFolder=-1,\n        debugJavascript = false;\n\n    // Manage memory\n    browserSession(\n        'init',\n        'teampassApplication', {\n            lastItemSeen: false,\n            itemsListStop: '',\n            itemsListStart: '',\n            selectedFolder: '',\n            itemsListFolderId: false,\n            itemsListRestricted: '',\n            itemsShownByQuery: '',\n            foldersList: [],\n            personalSaltkeyRequired: 0,\n            uploadedFileId: '',\n            tempScrollTop: 0,\n        }\n    );\n\n    browserSession(\n        'init',\n        'teampassItem', {\n            IsPersonalFolder: '',\n            hasAccessLevel: '',\n            hasCustomCategories: '',\n            id: '',\n            timestamp: '',\n            folderId: ''\n        }\n    );\n\n    if (debugJavascript === true) {\n        console.log('User information')\n        console.log(store.get('teampassUser'))\n    }\n\n    // Show loader\n    toastr.remove();\n    toastr.info('<?php echo langHdl('loading_data'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n    // Build tree\n    $('#jstree').jstree({\n        'core': {\n            'animation': 0,\n            'check_callback': true,\n            'data': {\n                'url': './sources/tree.php',\n                'dataType': 'json',\n                'icons': false,\n                'data': function(node) {\n                    if (debugJavascript === true) {\n                        console.info('Les r\u00e9pertoires sont charg\u00e9s');\n                        console.log(node);\n                    }\n                    return {\n                        'id': node.id.split('_')[1],\n                        'force_refresh': store.get('teampassApplication') !== undefined ?\n                            store.get('teampassApplication').jstreeForceRefresh : 0\n                    };\n                }\n            },\n            'strings': {\n                'Loading ...': '<?php echo langHdl('loading'); ?>...'\n            },\n            'themes': {\n                'icons': false,\n            },\n        },\n        'plugins': [\n            'state', 'search'\n        ]\n    })\n    // On node select\n    .bind('select_node.jstree', function(e, data) {\n        if (debugJavascript === true) console.log('JSTREE BIND');\n        selectedFolder = $('#jstree').jstree('get_selected', true)[0]\n        selectedFolderId = parseInt(selectedFolder.id.split('_')[1]);\n\n        // manage icon open/closed\n        var selectedFolderIcon = $('#fld_'+selectedFolderId).children('.tree-folder').attr('data-folder'),\n            selectedFolderIconSelected = $('#fld_'+selectedFolderId).children('.tree-folder').attr('data-folder-selected');\n\n        // remove selected on previous folder\n        $($('#fld_'+previousSelectedFolder).children('.tree-folder'))\n            .removeClass($('#fld_'+previousSelectedFolder).children('.tree-folder').attr('data-folder-selected'))\n            .addClass($('#fld_'+previousSelectedFolder).children('.tree-folder').attr('data-folder'));\n        // show selected icon\n        $('#fld_'+selectedFolderId).children('.tree-folder')\n            .removeClass(selectedFolderIcon)\n            .addClass(selectedFolderIconSelected);\n\n        if (debugJavascript === true) {\n            console.info('SELECTED NODE ' + selectedFolderId + \" -- \" + startedItemsListQuery);\n            console.log(selectedFolder);\n            console.log(selectedFolder.original.is_pf)\n        }\n\n        store.update(\n            'teampassApplication',\n            function(teampassApplication) {\n                teampassApplication.selectedFolder = selectedFolderId,\n                teampassApplication.selectedFolderTitle = selectedFolder.a_attr['data-title'],\n                teampassApplication.selectedFolderParentId = selectedFolder.parent !== \"#\" ? selectedFolder.parent.split('_')[1] : 0,\n                teampassApplication.selectedFolderParentTitle = selectedFolder.a_attr['data-title'],\n                teampassApplication.selectedFolderIcon = selectedFolderIcon,\n                teampassApplication.selectedFolderIconSelected = selectedFolderIconSelected,\n                teampassApplication.selectedFolderIsPF = selectedFolder.original.is_pf,\n                teampassApplication.userCanEdit = selectedFolder.original.can_edit\n            }\n        )\n        store.update(\n            'teampassItem',\n            function(teampassItem) {\n                teampassItem.folderId = selectedFolderId\n            }\n        );\n\n        // Prepare list of items\n        if (startedItemsListQuery === false) {\n            startedItemsListQuery = true;\n            ListerItems(selectedFolderId, '', 0);\n        }\n\n        previousSelectedFolder = selectedFolderId;\n        initialPageLoad = false;\n    })\n    // Search in tree\n    .bind('search.jstree', function(e, data) {\n        if (data.nodes.length == 1) {\n            //open the folder\n            ListerItems($('#jstree li>a.jstree-search').attr('id').split('_')[1], '', 0);\n        }\n    });\n\n    // Find folders in jstree\n    $('#jstree_search')\n        .keypress(function(e) {\n            if (e.keyCode === 13) {\n                $('#jstree').jstree('search', $('#jstree_search').val());\n            }\n        })\n        .focus(function() {\n            $(this).val('');\n        })\n        .blur(function() {\n            $(this).val(folderSearchCriteria);\n        });\n\n    // Is this a short url\n    var queryDict = {},\n        showItemOnPageLoad = false,\n        itemIdToShow = '';\n    location.search.substr(1).split(\"&\").forEach(function(item) {\n        queryDict[item.split(\"=\")[0]] = item.split(\"=\")[1]\n    });\n\n    if (queryDict['group'] !== undefined && queryDict['group'] !== '' &&\n        queryDict['id'] !== undefined && queryDict['id'] !== ''\n    ) {\n        // Show cog\n        toastr.remove();\n        toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Store current view\n        savePreviousView();\n\n        // Store the folder to open\n        store.set(\n            'teampassApplication', {\n                selectedFolder: parseInt(queryDict['group']),\n                selectedItem: parseInt(queryDict['id'])\n            }\n        );\n        store.update(\n            'teampassItem',\n            function(teampassItem) {\n                teampassItem.folderId = parseInt(queryDict['group'])\n            }\n        );\n\n        showItemOnPageLoad = true;\n        itemIdToShow = queryDict['id'];\n        startedItemsListQuery = true;\n\n        $('.item-details-card').removeClass('hidden');\n        $('#folders-tree-card, .columns-position').addClass('hidden');\n\n        // refresh selection in jstree\n        $('#jstree').jstree('deselect_all');\n        $('#jstree').jstree('select_node', '#li_' + itemIdToShow);\n        $('#jstree').jstree(true).hide_icons()\n\n        // Get list of items in this folder\n        startedItemsListQuery = true;\n        ListerItems(store.get('teampassApplication').selectedFolder, '', 0);\n\n        // Show details\n        $.when(\n            Details(itemIdToShow, 'show', true)\n        ).then(function() {\n            //requestRunning = false;\n            console.log('Item detail affich\u00e9')\n            // Force previous view to Tree folders\n            store.update(\n                'teampassUser',\n                function(teampassUser) {\n                    teampassUser.previousView = '#folders-tree-card';\n                }\n            );\n        });\n    }\n\n    // Preload list of items\n    if (store.get('teampassApplication') !== undefined &&\n        store.get('teampassApplication').selectedFolder !== undefined &&\n        store.get('teampassApplication').selectedFolder !== ''\n    ) {\n        startedItemsListQuery = true;\n\n        ListerItems(store.get('teampassApplication').selectedFolder, '', 0);\n\n    }\n\n\n\n    // Close on escape key\n    $(document).keyup(function(e) {\n        if (e.keyCode == 27) {\n            closeItemDetailsCard();\n        }\n    });\n\n    /*// Edit on e key\n    $(document).keyup(function(e) {\n        if (e.keyCode == 69 && $('.item-details-card').is(':visible') === true) {\n            if ($('#form-item').hasClass('hidden') === false) {\n                showItemEditForm(store.get('teampassItem').id);\n            }\n        }\n    });\n    */\n\n    // load list of visible folders for current user\n    $(this).delay(500).queue(function() {\n        refreshVisibleFolders();\n\n        $(this).dequeue();\n    });\n\n    // Keep the scroll position\n    $(window).on(\"scroll\", function() {\n        if ($('#folders-tree-card').hasClass('hidden') === false) {\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    tempScrollTop: $(window).scrollTop()\n                }\n            );\n        }\n    });\n\n\n    // Ensure correct height of folders tree\n    $('#jstree').height(screenHeight - 200);\n\n    // Prepare iCheck format for checkboxes\n    $('input[type=\"checkbox\"].flat-blue, input[type=\"radio\"].flat-blue').iCheck({\n        checkboxClass: 'icheckbox_flat-blue',\n        radioClass: 'iradio_flat-blue'\n    });\n\n    // Prepare some UI elements\n    $('#limited-search').prop('checked', false);\n\n    $(document).on('blur', '#form-item-icon', function() {\n        $('#form-item-icon-show').html('<i class=\"fas '+$(this).val()+'\"></i>');\n    });\n\n    // Manage the password show button\n    // including autohide after a couple of seconds\n    $(document).on('click', '#card-item-pwd-show-button', function() {\n        if ($(this).hasClass('pwd-shown') === false) {\n            $(this).addClass('pwd-shown');\n            // Prepare data to show\n            // Is data crypted?\n            var data = unCryptData($('#hidden-item-pwd').val(), '<?php echo $_SESSION['key']; ?>');\n            if (data !== false && data !== undefined) {\n                $('#hidden-item-pwd').val(\n                    data.password\n                );\n            }\n\n            // Change class and show spinner\n            $('.pwd-show-spinner')\n                .removeClass('far fa-eye')\n                .addClass('fas fa-circle-notch fa-spin text-warning');\n\n            // display raw password\n            $('#card-item-pwd')\n                .text($('#hidden-item-pwd').val())\n                .addClass('pointer_none');\n\n            // log password is shown\n            itemLog(\n                'at_password_shown',\n                store.get('teampassItem').id,\n                $('#card-item-label').text()\n            );\n\n            // Autohide\n            setTimeout(() => {\n                $(this).removeClass('pwd-shown');\n                $('#card-item-pwd')\n                    .html('<?php echo $var['hidden_asterisk']; ?>')\n                    .removeClass('pointer_none');\n                $('.pwd-show-spinner')\n                    .removeClass('fas fa-circle-notch fa-spin text-warning')\n                    .addClass('far fa-eye');\n            }, <?php echo isset($SETTINGS['password_overview_delay']) === true ? $SETTINGS['password_overview_delay'] * 1000 : 4000; ?>);\n        } else {\n            $('#card-item-pwd').html('<?php echo $var['hidden_asterisk']; ?>');\n        }\n    });\n\n\n    // Manage folders action\n    $('.tp-action').click(function() {\n        // SHow user\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?><i class=\"fas fa-circle-notch fa-spin fa-2x ml-3\"></i>');\n\n        if ($(this).data('folder-action') === 'refresh') {\n            // Force refresh\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.jstreeForceRefresh = 1\n                }\n            );\n            if (selectedFolderId !== '') {\n                refreshTree(selectedFolderId, true);\n            } else {\n                refreshTree();\n            }\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.jstreeForceRefresh = 0\n                }\n            );\n            toastr.remove();\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'expand') {\n            $('#jstree').jstree('open_all');\n            toastr.remove();\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'collapse') {\n            $('#jstree').jstree('close_all');\n            toastr.remove();\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'add') {\n            if (debugJavascript === true) console.info('SHOW ADD FOLDER');\n            toastr.remove();\n\n            // Check privileges\n            if (store.get('teampassItem').hasAccessLevel < 20 &&\n                store.get('teampassUser').can_create_root_folder === 0\n            ) {\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Store current view\n            savePreviousView('.form-folder-add');\n\n            // Store last\n            // Show copy form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-add').removeClass('hidden');\n\n            // Prepare some data in the form\n            if (selectedFolder.parent !== undefined && selectedFolder.parent !== '') {\n                $('#form-folder-add-parent').val(selectedFolder.parent.split('_')[1]).change();\n            }\n\n            $('#form-folder-add-label, #form-folder-add-parent').prop('disabled', false);\n\n            $('#form-folder-add-label')\n                .val('')\n                .focus();\n            $('#form-folder-add-icon-selected, #form-folder-add-icon').val('');\n            // Set type of action for the form\n            $('#form-folder-add').data('action', 'add');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'edit') {\n            if (debugJavascript === true) console.info('SHOW EDIT FOLDER');\n            toastr.remove();\n            // Check privileges\n            if (store.get('teampassItem').hasAccessLevel < 20) {\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n            if (debugJavascript === true) console.log(store.get('teampassApplication'));\n\n            // Store current view\n            savePreviousView('.form-folder-add');\n\n            // Show edit form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-add').removeClass('hidden');\n            // Prepare some data in the form\n            $(\"#form-folder-add-parent option[value='\" + store.get('teampassApplication').selectedFolder + \"']\")\n                .prop('disabled', true);\n            $('#form-folder-add-parent').val(store.get('teampassApplication').selectedFolderParentId).change();\n            $(\"#form-folder-add-parent option[value='\" + store.get('teampassApplication').selectedFolderParentId + \"']\")\n                .prop('disabled', false);\n            $('#form-folder-add-label')\n                .val(store.get('teampassApplication').selectedFolderParentTitle)\n                .focus();\n            // is PF 1st level\n            if (store.get('teampassApplication').selectedFolderIsPF === 1 && store.get('teampassApplication').selectedFolderParentId !== 0) {\n                $('#form-folder-add-label, #form-folder-add-parent').prop('disabled', false);\n            } else if (store.get('teampassApplication').userCanEdit === 0) {\n                $('#form-folder-add-label, #form-folder-add-parent').prop('disabled', true);\n            } else {\n                $('#form-folder-add-label, #form-folder-add-parent').prop('disabled', false);\n            }\n\n            $('#form-folder-add-complexicity').val(store.get('teampassItem').folderComplexity).change();\n            $('#form-folder-add-icon')\n                .val(store.get('teampassApplication').selectedFolderIcon);\n            $('#form-folder-add-icon-selected')\n                .val(store.get('teampassApplication').selectedFolderIconSelected);\n            // Set type of action for the form\n            $('#form-folder-add').data('action', 'update');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'copy') {\n            if (debugJavascript === true) console.info('SHOW COPY FOLDER');\n            toastr.remove();\n            // Check privileges\n            if (store.get('teampassItem').hasAccessLevel < 20) {\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Store current view\n            savePreviousView('.form-folder-copy');\n\n            // Show copy form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-copy').removeClass('hidden');\n            // Prepare some data in the form\n            $('#form-folder-copy-source').val(store.get('teampassApplication').selectedFolder).change();\n            //$(\"#form-folder-copy-destination option[value='\"+selectedFolder.id.split('_')[1]+\"']\")\n            //.prop('disabled', true);\n            $('#form-folder-copy-destination').val(0).change();\n            $('#form-folder-copy-label')\n                .val(store.get('teampassApplication').selectedFolderTitle + ' <?php echo strtolower(langHdl('copy')); ?>')\n                .focus();\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'delete') {\n            if (debugJavascript === true) console.info('SHOW DELETE FOLDER');\n            toastr.remove();\n            // Check privileges\n            if (store.get('teampassItem').hasAccessLevel < 30) {\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Store current view\n            savePreviousView('.form-folder-delete');\n\n            // Show copy form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-delete').removeClass('hidden');\n\n            // Prepare some data in the form\n            $('#form-folder-delete-selection').val(store.get('teampassApplication').selectedFolder).change();\n            $('#form-folder-confirm-delete').iCheck('uncheck');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'import') {\n            // IMPORT ITEMS\n            if (debugJavascript === true) console.info('SHOW IMPORT ITEMS');\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-folder-import');\n\n\n            // Show import form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-import').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'new') {\n            if (debugJavascript === true) console.info('SHOW NEW ITEM');\n            toastr.remove();\n            // Store current view\n            savePreviousView();\n\n            // Remove validated class\n            $('#form-item').removeClass('was-validated');\n\n            // Get some info\n            $.when(\n                retPrivileges = getPrivilegesOnItem(store.get('teampassApplication').itemsListFolderId, 0)\n            ).then(function() {\n                if (retPrivileges === false) {\n                    return false;\n                }\n                // If previous item was seen then clean session\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.isNewItem = 1,\n                        teampassItem.id = ''\n                    }\n                );\n\n                // Show Visibility and minimum complexity\n                $('#card-item-visibility').html(store.get('teampassItem').itemVisibility);\n                $('#card-item-minimum-complexity').html(store.get('teampassItem').itemMinimumComplexity);\n\n                // HIde\n                $('.form-item-copy, #folders-tree-card, .columns-position, #form-item-password-options, .form-item-action, #form-item-attachments-zone')\n                    .addClass('hidden');\n                // Destroy editor\n                $('#form-item-description').summernote('destroy');\n\n                // Clean select2 lists\n                $('.select2').val('');\n                /*if ($('.select2') !== null) {if (debugJavascript === true) console.log($('.select2').length)\n                    $('.select2').change();\n                }*/\n                // Do some form cleaning\n                $('.clear-me-val').val('');\n                $('.item-details-card').find('.form-control').val('');\n                $('.clear-me-html').html('');\n                $('.form-item-control').val('');\n                // Show edition form\n                $('.form-item').removeClass('hidden');\n                $('.item-details-card').addClass('hidden');\n                // Force update of simplepassmeter\n                $('#form-item-password').focus();\n                $('#form-item-label').focus();\n                // Prepare editor\n                $('#form-item-description').summernote({\n                    toolbar: [\n                        ['style', ['style']],\n                        ['font', ['bold', 'italic', 'underline', 'strikethrough', 'clear']],\n                        ['fontsize', ['fontsize']],\n                        ['color', ['color']],\n                        ['para', ['ul', 'ol', 'paragraph']],\n                        ['insert', ['link', 'picture']],\n                        //['height', ['height']],\n                        ['view', ['codeview']]\n                    ],\n                    codeviewFilter: true,\n                    codeviewIframeFilter: true\n                });\n\n                // Set folder\n                $('#form-item-folder').val(selectedFolderId).change();\n                // Select tab#1\n                $('#form-item-nav-pills li:first-child a').tab('show');\n                // Preselect\n                $('#pwd-definition-size').val(12);\n                // Set type of action\n                $('#form-item-button-save').data('action', 'new_item');\n                // Does this folder contain Custom Fields\n                if (store.get('teampassItem').hasCustomCategories.length > 0) {\n                    $('#form-item-field').removeClass('hidden');\n                    $.each(store.get('teampassItem').hasCustomCategories, function(i, category) {\n                        $('#form-item-category-' + category).removeClass('hidden');\n                    })\n                } else {\n                    $('#form-item-field, .form-item-category').addClass('hidden');\n                }\n                \n                // Add track-change class\n                //$('#form-item-label, #form-item-description, #form-item-login, #form-item-password, #form-item-email, #form-item-url, #form-item-folder, #form-item-restrictedto, #form-item-tags, #form-item-anyoneCanModify, #form-item-deleteAfterShown, #form-item-deleteAfterDate, #form-item-anounce, .form-item-field-custom').addClass('track-change');\n\n                // Update variable\n                userDidAChange = false;\n\n                toastr.remove();\n            });\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'edit') {\n            if (debugJavascript === true) console.info('SHOW EDIT ITEM');\n            $.when(\n                getPrivilegesOnItem(selectedFolderId, 1)\n            ).then(function() {\n                // Is user allowed\n                if (store.get('teampassItem').item_rights < 20) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('error_not_allowed_to'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n\n                // Store current view\n                savePreviousView();\n\n                // Store not a new item\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.isNewItem = 0\n                    }\n                );\n\n                // Remove validated class\n                $('#form-item').removeClass('was-validated');\n\n                // Now manage edtion\n                showItemEditForm(selectedFolderId);\n            });\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'copy') {\n            if (debugJavascript === true) console.info('SHOW COPY ITEM');\n            toastr.remove();\n            // Store current view\n            savePreviousView('.form-item-copy');\n\n            if (store.get('teampassItem').user_can_modify === 1) {\n                // Show copy form\n                $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n                $('.form-item-copy, .item-details-card-menu').removeClass('hidden');\n                // Prepare some data in the form\n                $('#form-item-copy-new-label').val($('#form-item-label').val());\n                $('#form-item-copy-destination').val($('#form-item-folder').val()).change();\n            } else {\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n            }\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'delete') {\n            // Is user allowed\n            var levels = [50, 70];\n            if (levels.includes(store.get('teampassItem').item_rights) === false) {\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-item-delete');\n\n            if (debugJavascript === true) console.info('SHOW DELETE ITEM');\n            if (store.get('teampassItem').user_can_modify === 1) {\n                // Show delete form\n                $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n                $('.form-item-delete, .item-details-card-menu').removeClass('hidden');\n            } else {\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n            }\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'share') {\n            if (debugJavascript === true) console.info('SHOW SHARE ITEM');\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-item-share');\n\n            // Show share form\n            $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n            $('.form-item-share, .item-details-card-menu').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'notify') {\n            if (debugJavascript === true) console.info('SHOW NOTIFY ITEM');\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-item-notify');\n\n            $('#form-item-notify-checkbox').iCheck('uncheck');\n            // Show notify form\n            $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n            $('.form-item-notify, .item-details-card-menu').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'otv') {\n            if (debugJavascript === true) console.info('SHOW OTV ITEM');\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-item-otv');\n\n            // Generate link\n            prepareOneTimeView();\n\n            $('#form-item-otv-link').val('');\n            // Show notify form\n            $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n            $('.form-item-otv, .item-details-card-menu').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'server') {\n            if (debugJavascript === true) console.info('SHOW SERVER UPDATE ITEM');\n            toastr.remove();\n\n            // Is user allowed\n            var levels = [50, 70];\n            if (levels.includes(store.get('teampassItem').item_rights) === false) {\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Store current view\n            savePreviousView('.form-item-server');\n\n            $('#form-item-notify-checkbox').iCheck('uncheck');\n            // Show notify form\n            $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n            $('.form-item-server, .item-details-card-menu').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        }\n\n        return false;\n    });\n\n    /**\n     * Saves the current view of user\n     */\n    function savePreviousView(newElement = '') {\n        var element = '';\n        if ($('#folders-tree-card').hasClass('hidden') === false) {\n            element = '#folders-tree-card';\n        } else if ($('.form-item').hasClass('hidden') === false) {\n            element = '.form-item';\n        } else if ($('.item-details-card-menu').hasClass('hidden') === false) {\n            element = '.item-details-card';\n        }\n        \n        if (debugJavascript === true) {console.log('>>> ' + element + ' -- ' + newElement);}\n\n        if (element === '.item-details-card') element = '#folders-tree-card';\n\n        // Store current view\n        store.update(\n            'teampassUser',\n            function(teampassUser) {\n                teampassUser.previousView = element;\n            }\n        );\n\n        // Store the new one to display\n        store.update(\n            'teampassUser',\n            function(teampassUser) {\n                teampassUser.currentView = newElement;\n            }\n        );\n    }\n\n\n    $('.but-back').click(function() {\n        userDidAChange = false;\n        if ($(this).hasClass('but-back-to-item') === false) {\n            // Is this form the edition one?\n            if ($(this).hasClass('item-edit') === true && userUploadedFile === true) {\n                // Do some operation such as cancel file upload\n                var data = {\n                    'item_id': store.get('teampassItem').id,\n                }\n\n                $.post(\n                    \"sources/items.queries.php\", {\n                        type: 'delete_uploaded_files_but_not_saved',\n                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'delete_uploaded_files_but_not_saved');\n                        if (debugJavascript === true) console.log(data);\n                    }\n                );\n            }\n\n            // Clear pickfiles div\n            $('#form-item-upload-pickfilesList').html('');\n\n            // Hide all\n            $('.form-item, .form-item-action, .form-folder-action, .item-details-card, #folders-tree-card, .columns-position, #item-details-card-categories, #form-item-upload-pickfilesList, #card-item-expired')\n                .addClass('hidden');\n\n            // Show expected one\n            $(store.get('teampassUser').previousView).removeClass('hidden');\n\n            closeItemDetailsCard();\n        } else {\n            $(store.get('teampassUser').previousView).removeClass('hidden');\n            $(store.get('teampassUser').currentView).addClass('hidden');\n        }\n        $('.but-prev-item, .but-next-item').addClass('hidden').text('');\n    });\n\n\n    // Quit item details card back to items list\n    $('.but-back-to-list').click(function() {\n        closeItemDetailsCard();\n    });\n\n\n\n    // Manage if change is performed by user\n    $('#form-item .form-item-control')\n        .on('change', function() {\n            if (requestRunning === false) {\n                userDidAChange = true;\n                if (debugJavascript === true) console.log('User did a change on #form-item > ' + userDidAChange + \" - Element \" + $(this).attr('id'));\n                //$(this).attr('data-change-ongoing', true);\n            }\n        })\n        .on('ifToggled', function() {\n            if (requestRunning === false) {\n                userDidAChange = true;\n                if (debugJavascript === true) console.log('User did a change on ifToggled > ' + userDidAChange);\n                //$(this).attr('data-change-ongoing', true);\n            }\n        });\n\n    /**\n     * Click on perform IMPORT\n     */\n    $(document).on('click', '#form-item-import-perform', function() {\n        if (debugJavascript === true) console.log('START IMPORT');\n    });\n\n\n    /**\n     * Click on ITEM REQUEST ACCESS\n     */\n    $(document).on('click', '.fa-clickable-access-request', function() {\n        // Store current view\n        savePreviousView();\n\n        // Adapt the form\n        $('#form-item-request-access-label')\n            .html($(this).closest('.list-item-description').find('.list-item-row-description').text());\n\n        // Store current item ID\n        var selectedItemId = $(this).closest('.list-item-row').data('item-id');\n        store.update(\n            'teampassItem',\n            function(teampassItem) {\n                teampassItem.id = selectedItemId;\n            }\n        );\n\n        // Show user\n        $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n        $('.form-item-request-access').removeClass('hidden');\n    });\n\n    /**\n     * Send an access request to author\n     */\n    $(document).on('click', '#form-item-request-access-perform', function() {\n        // No reason is provided\n        if ($('#form-item-request-access-reason').val() === '') {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_provide_reason'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        var data = {\n            'id': store.get('teampassItem').id,\n            'email': DOMPurify.sanitize($('#form-item-request-access-reason').val()),\n        }\n        // NOw send the email\n        $.post(\n            \"sources/items.queries.php\", {\n                type: 'send_request_access',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'send_request_access');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Change view\n                    $('.form-item-request-access').addClass('hidden');\n                    $('#folders-tree-card, .columns-position').removeClass('hidden');\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n\n        scrollBackToPosition();\n    });\n\n\n    /**\n     * Show/Hide the Password generation options\n     */\n    $('#item-button-password-showOptions').click(function() {\n        if ($('#form-item-password-options').hasClass('hidden') === true) {\n            $('#form-item-password-options').removeClass('hidden');\n        } else {\n            $('#form-item-password-options').addClass('hidden');\n        }\n    });\n\n\n\n    /**\n     * Adapt the top rules of item form on change of folders\n     */\n    $('#form-item-folder').change(function() {\n        if ($(this).val() !== null && store.get('teampass-folders') !== undefined) {\n            if (debugJavascript === true) {\n                console.log('teampass-folders');\n                console.log(store.get('teampass-folders'))\n            }\n            var folders = JSON.parse(store.get('teampass-folders'));\n            $('#card-item-visibility').html(folders[$(this).val()].visibilityRoles);\n            $('#card-item-minimum-complexity').html(folders[$(this).val()].complexity.text);\n        }\n\n    });\n\n    /**\n     * NOTIFY - Perform save\n     */\n    $('#form-item-notify-perform').click(function() {\n        var form = $('#form-item-notify');\n\n\n        var data = {\n            'notification_status': $('#form-item-notify-checkbox').is(':checked') === true ? 1 : 0,\n            'item_id': store.get('teampassItem').id,\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'save_notification_status',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'save_notification_status');\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Change the icon for Notification\n                    if ($('#form-item-notify-checkbox').is(':checked') === true) {\n                        $('#card-item-misc-notification')\n                            .html('<span class=\"far fa-bell infotip text-success\" title=\"<?php echo langHdl('notification_engaged'); ?>\"></span>');\n                    } else {\n                        $('#card-item-misc-notification')\n                            .html('<span class=\"far fa-bell-slash infotip text-warning\" title=\"<?php echo langHdl('notification_not_engaged'); ?>\"></span>');\n                    }\n\n                    // Show/hide forms\n                    $('.item-details-card').removeClass('hidden');\n                    $('.form-item-notify').addClass('hidden');\n\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n                    // Clear\n                    $('#form-item-notify-checkbox').iCheck('uncheck');\n                }\n            }\n        );\n    });\n\n\n\n    /**\n     * SHARE - validate the email\n     */\n    $('#form-item-share-perform').click(function() {\n        var form = $('#form-item-share');\n\n        if (form[0].checkValidity() === false) {\n            form.addClass('was-validated');\n            return false;\n        }\n\n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Prepare data\n        var data = {\n            'id': store.get('teampassItem').id,\n            'receipt': DOMPurify.sanitize($('#form-item-share-email').val()),\n            'cat': 'share_this_item',\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'send_email',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'send_email');\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $('.item-details-card').removeClass('hidden');\n                    $('.form-item-share').addClass('hidden');\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n                    // Clear\n                    $('#form-item-share-email').val('');\n                }\n            }\n        );\n    });\n\n\n    /**\n     * DELETE - recycle item\n     */\n    $('#form-item-delete-perform').click(function() {\n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Force user did a change to false\n        userDidAChange = false;\n        userUploadedFile = false;\n\n        var data = {\n            'item_id': store.get('teampassItem').id,\n            'folder_id': selectedFolderId,\n            'label': DOMPurify.sanitize($('#form-item-copy-new-label').val()),\n            'access_level': store.get('teampassItem').hasAccessLevel,\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'delete_item',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'delete_item');\n\n                if (typeof data !== 'undefined' && data.error !== true) {\n                    $('.form-item-action, .item-details-card-menu').addClass('hidden');\n                    // Warn user\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    // Refresh tree\n                    refreshTree(selectedFolderId, true);\n                    // Load list of items\n                    ListerItems(selectedFolderId, '', 0);\n                    // Close\n                    closeItemDetailsCard();\n                } else {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * NOTIFY - save status\n     */\n    $('#form-item-share-perform').click(function() {\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'notify_user_on_item_change',\n                id: store.get('teampassItem').id,\n                value: $('#form-item-anyoneCanModify').is(':checked') === true ? 1 : 0,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                if (data[0].error === '') {\n                    $('.form-item, .item-details-card, .form-item-action').removeClass('hidden');\n                    $('.form-item-share, .item-details-card-menu').addClass('hidden');\n                    // Warn user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    // Clear\n                    $('#form-item-anyoneCanModify').attr('checked', '');\n                } else {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                }\n            },\n            'json'\n        );\n    });\n\n\n    /**\n     * COPY - perform copy item\n     */\n    $('#form-item-copy-perform').click(function() {\n        // Do check\n        if ($('#form-item-copy-new-label').val() === '') {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Show cog\n        toastr.remove();\n        toastr.info('<?php echo langHdl('item_copying'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Force user did a change to false\n        userDidAChange = false;\n        userUploadedFile = false;\n\n        var data = {\n            'item_id': store.get('teampassItem').id,\n            'source_id': selectedFolderId,\n            'dest_id': $('#form-item-copy-destination').val(),\n            'new_label': DOMPurify.sanitize($('#form-item-copy-new-label').val()),\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'copy_item',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n\n                if (typeof data !== 'undefined' && data.error !== true) {\n                    // Warn user\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    // Refresh tree\n                    refreshTree(parseInt($('#form-item-copy-destination').val()), true);\n                    // Load list of items\n                    ListerItems(parseInt($('#form-item-copy-destination').val()), '', 0);\n\n                    // Reopen Item details form\n                    Details(\n                        data.new_id,\n                        'show',\n                        true\n                    );\n                    \n                    // Close\n                    $('.item-details-card').removeClass('hidden');\n                    $('.form-item-copy').addClass('hidden');\n                } else {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * SERVER - perform server update\n     */\n    $('#form-item-server-perform').click(function() {\n        // Decide what action is performing the user\n\n        if ($('#tab-one-shot').hasClass('active') === true) {\n            // Do check\n            if ($('#form-item-server-login').val() === '' ||\n                $('#form-item-server-old-password').val() === '' ||\n                $('#form-item-server-password').val() === ''\n            ) {\n                toastr.error(\n                    '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Show cog\n            toastr.remove();\n            toastr.info(\n                '<i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>',\n            );\n\n            // Force user did a change to false\n            userDidAChange = false;\n            userUploadedFile = false;\n\n            var data = {\n                'item_id': store.get('teampassItem').id,\n                'new_pwd': DOMPurify.sanitize($('#form-item-server-password').val()),\n                'ssh_root': DOMPurify.sanitize($('#form-item-server-login').val()),\n                'ssh_pwd': DOMPurify.sanitize($('#form-item-server-old-password').val()),\n                'user_id': <?php echo $_SESSION['user_id']; ?>,\n            }\n\n            $.post(\n                \"sources/utils.queries.php\", {\n                    type: \"server_auto_update_password\",\n                    data: prepareExchangedData(data, \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                    if (debugJavascript === true) console.log(data);\n                    //check if format error\n                    if (data.error === true) {\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Warn user\n                        toastr.success(\n                            '<?php echo langHdl('success'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n\n                        // Info\n                        $(\"#form-item-server-status\")\n                            .html(\"<?php echo langHdl('done'); ?> \" + data.text)\n                            .removeClass('hidden');\n                    }\n                }\n            );\n        } else if ($('#tab-scheduled').hasClass('active') === true) {\n            $.post(\n                \"sources/utils.queries.php\", {\n                    type: \"server_auto_update_password_frequency\",\n                    id: store.get('teampassItem').id,\n                    freq: $('#form-item-server-cron-frequency').val(),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    if (data[0].error != \"\") {\n                        toastr.remove();\n                        toastr.error(\n                            data[0].error,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        $('#form-item-server-cron-frequency').val(0).change();\n                        toastr.success(\n                            '<?php echo langHdl('success'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                },\n                \"json\"\n            );\n        }\n    });\n\n\n    /**\n     * SUGGESTION - perform new suggestion on item\n     */\n    $('#form-item-suggestion-perform').click(function() {\n        var form = $('#form-item-suggestion');\n\n        if (form[0].checkValidity() === false) {\n            form.addClass('was-validated');\n\n            // Send alert to user\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('form_presents_inconsistencies'); ?>',\n                '', {\n                    timeOut: 10000,\n                    progressBar: true\n                }\n            );\n\n            return false;\n        }\n\n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Force user did a change to false\n        userDidAChange = false;\n        userUploadedFile = false;\n\n        var data = {\n            'label': DOMPurify.sanitize($('#form-item-suggestion-label').val()),\n            'login': DOMPurify.sanitize($('#form-item-suggestion-login').val()),\n            'password': DOMPurify.sanitize($('#form-item-suggestion-password').val()),\n            'email': DOMPurify.sanitize($('#form-item-suggestion-email').val()),\n            'url': DOMPurify.sanitize($('#form-item-suggestion-url').val()),\n            'description': DOMPurify.sanitize($('#form-item-suggestion-description').summernote('code'), {USE_PROFILES: {html: true}}),\n            'comment': DOMPurify.sanitize($('#form-item-suggestion-comment').val(), {USE_PROFILES: {html: true}}),\n            'folder_id': selectedFolderId,\n            'item_id': store.get('teampassItem').id\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'suggest_item_change',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data//decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'suggest_item_change');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Warn user\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    // Clear form\n                    $('.form-item-suggestion').html('');\n\n                    // Collapse form\n                    //$('.card-item-extra').collapse('toggle');\n                }\n            }\n        );\n    });\n\n\n    /**\n     * FOLDER NEW - Add a new folder\n     */\n    $('#form-folder-add-perform').click(function() {\n        var form = $('#form-folder-add');\n        if (debugJavascript === true) {\n            console.log(form[0]);\n            console.log(form[0].checkValidity());\n        }\n        if (form[0].checkValidity() === false) {\n            form.addClass('was-validated');\n\n            // Send alert to user\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('form_presents_inconsistencies'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            return false;\n        }\n\n        // Error if folder text is only numeric\n        if (/^\\d+$/.test($('#form-folder-add-label').val())) {\n            $('#form-folder-add-label').addClass('is-invalid');\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_only_numbers_in_folder_name'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            return false;\n        }\n\n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Force user did a change to false\n        userDidAChange = false;\n        userUploadedFile = false;\n\n        // Sanitize text fields\n        let formLabel = fieldSanitizeStep1('#form-folder-add-label', false, false, false),\n            formIcon = fieldSanitizeStep1('#form-folder-add-icon', false, false, false),\n            formIconSelected = fieldSanitizeStep1('#form-folder-add-icon-selected', false, false, false);\n        if (formLabel === false || formIcon === false || formIconSelected === false) {\n            // Label is empty\n            toastr.remove();\n            toastr.warning(\n                'XSS attempt detected. Field has been emptied.',\n                'Error', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        var data = {\n            'title': formLabel,\n            'parentId': $('#form-folder-add-parent option:selected').val(),\n            'complexity': $('#form-folder-add-complexicity option:selected').val(),\n            //'access_rights_strategy': $('#form-folder-add-rights option:selected').val(),\n            'icon': formIcon,\n            'iconSelected': formIconSelected,\n            'id': selectedFolderId,\n        }\n        if (debugJavascript === true) console.log(data);\n\n        // Launch action\n        $.post(\n            'sources/folders.queries.php', {\n                type: $('#form-folder-add').data('action') + '_folder',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data//decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'folders.queries.php', $('#form-folder-add').data('action') + '_folder');\n                if (debugJavascript === true) {\n                    console.log(data);\n                }\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Refresh list of folders\n                    refreshVisibleFolders(true);\n                    if ($('#form-folder-add').data('action') === 'add') {\n                        // Refresh tree\n                        refreshTree(data.newId, true);\n                        // Refresh list of items inside the folder\n                        ListerItems(data.newId, '', 0);\n                    } else {\n                        // Refresh tree\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.jstreeForceRefresh = 1;\n                            }\n                        );\n                        refreshTree(selectedFolderId, true);\n                        // Refresh list of items inside the folder\n                        ListerItems(selectedFolderId, '', 0);\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.jstreeForceRefresh = 0;\n                            }\n                        );\n                    }\n                    // Back to list\n                    closeItemDetailsCard();\n                    // Warn user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n                // Enable the parent in select\n                if (selectedFolder.id !== undefined) {\n                    $(\"#form-folder-add-parent option[value='\" + selectedFolder.id.split('_')[1] + \"']\")\n                        .prop('disabled', false);\n                }\n            }\n        );\n    });\n\n\n    /**\n     * FOLDER DELETE - Delete an existing folder\n     */\n    $('#form-folder-delete-perform').click(function() {\n        // Do check\n        if ($('#form-folder-confirm-delete').is(':checked') === false) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('please_confirm'); ?>',\n                '',\n                {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        } else if ($('#form-folder-delete-selection option:selected').text() === '<?php echo $_SESSION['login']; ?>') {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_not_allowed_to'); ?>',\n                '',\n                {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Is a folder selected\n        if ($('#form-folder-delete-selection option:selected').val() === '') {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('please_select_a_folder'); ?>',\n                '',\n                {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        \n        // Ensure Root is not selected\n        } else if (parseInt($('#form-folder-delete-selection option:selected').val()) === 0) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('please_select_a_folder'); ?>',\n                '',\n                {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n        \n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n\n        var selectedFolders = [],\n            data = {\n                'selectedFolders': [$('#form-folder-delete-selection option:selected').val()]\n            }\n        if (debugJavascript === true) console.log(data)\n\n        // Launch action\n        $.post(\n            'sources/folders.queries.php', {\n                type: 'delete_folders',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'folders.queries.php', 'delete_folders');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Refresh list of folders\n                    refreshVisibleFolders(true);\n                    // Refresh tree\n                    refreshTree(data.parent_id, true);\n                    // Refresh list of items inside the folder\n                    ListerItems(data.parent_id, '', 0);\n                    // Back to list\n                    closeItemDetailsCard();\n                    // Warn user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n\n                $('#form-folder-confirm-delete').iCheck('uncheck');\n            }\n        );\n    });\n\n\n    /**\n     * FOLDER COPY - Copy an existing folder\n     */\n    $('#form-folder-copy-perform').click(function() {\n        // Do check\n        if ($(\"#form-folder-copy-source\").val() === \"\" || $(\"#form-folder-copy-destination\").val() === \"\") {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_must_enter_all_fields'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        } else if ($(\"#form-folder-copy-source\").val() === $(\"#form-folder-copy-destination\").val()) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_source_and_destination_are_equal'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Show cog\n        toastr.remove();\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        var data = {\n            'source_folder_id': $('#form-folder-copy-source option:selected').val(),\n            'target_folder_id': $('#form-folder-copy-destination option:selected').val(),\n            'folder_label': DOMPurify.sanitize($('#form-folder-copy-label').val(), {USE_PROFILES: {html: false}}),\n        }\n\n        // Launch action\n        $.post(\n            'sources/folders.queries.php', {\n                type: 'copy_folder',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'folders.queries.php', 'copy_folder');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Refresh list of folders\n                    refreshVisibleFolders(true);\n                    // Refresh tree\n                    refreshTree($('#form-folder-copy-destination option:selected').val(), true);\n                    // Refresh list of items inside the folder\n                    ListerItems($('#form-folder-copy-destination option:selected').val(), '', 0);\n                    // Back to list\n                    closeItemDetailsCard();\n                    // Warn user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n    $(document).on('change', '#form-folder-copy-source', function() {\n        $('#form-folder-copy-label')\n            .val($('#form-folder-copy-source option:selected').text()\n                .substring(0, $('#form-folder-copy-source option:selected').text().lastIndexOf('[')).trim() +\n                ' <?php echo strtolower(langHdl('copy')); ?>');\n    });\n\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function closeItemDetailsCard() {\n        if (debugJavascript === true) console.log('CLOSE - user did a change? ' + userDidAChange + \" - User previous view: \" + store.get('teampassUser').previousView);\n        if (userDidAChange === true) {\n            toastr\n                .warning(\n                    '<?php echo langHdl('changes_ongoing'); ?><br>' +\n                    '<button type=\"button\" class=\"btn clear\" id=\"discard-changes\"><?php echo langHdl('yes'); ?></button>' +\n                    '<button type=\"button\" class=\"btn clear ml-2\" id=\"keep-changes\"><?php echo langHdl('no'); ?></button>',\n                    '<?php echo langHdl('caution'); ?>', {\n                        closeButton: true\n                    }\n                );\n            $(document).on('click', '#discard-changes', function() {\n                userDidAChange = false;\n                //$('.form-item-control').attr('data-change-ongoing', \"\");\n                closeItemDetailsCard();\n            });\n        } else {\n            if (store.get('teampassUser').previousView === '.item-details-card' &&\n                $('.item-details-card').hasClass('hidden') === false\n            ) {\n                $('.item-details-card').removeClass('hidden');\n                $('#folders-tree-card, .columns-position, .form-item-action, .form-item, .form-folder-action, #card-item-expired')\n                    .addClass('hidden');\n\n                // Force previous view to folders list\n                store.update(\n                    'teampassUser',\n                    function(teampassUser) {\n                        teampassUser.previousView = '#folders-tree-card';\n                    }\n                );\n            } else {\n                if (store.get('teampassUser').previousView === '.item-details-card') {\n                    // Force previous view to folders list\n                    store.update(\n                        'teampassUser',\n                        function(teampassUser) {\n                            teampassUser.previousView = '#folders-tree-card';\n                        }\n                    );\n                    // Reopen Item details form\n                    Details(\n                        store.get('teampassItem').id,\n                        'show',\n                        true\n                    );\n\n                    return false;\n                }\n                if (store.get('teampassUser').previousView === '#folders-tree-card' ||\n                    $('.item-details-card').hasClass('hidden') === false\n                ) {\n                    $('#folders-tree-card, .columns-position').removeClass('hidden');\n                    $('.item-details-card, .form-item-action, .form-item, .form-folder-action, #card-item-expired')\n                        .addClass('hidden');\n                } else {\n                    // Hide all\n                    $('.form-item, .form-item-action, .form-folder-action, .item-details-card, #folders-tree-card, #card-item-expired')\n                        .addClass('hidden');\n\n                    // Show expected one\n                    $(store.get('teampassUser').previousView).removeClass('hidden');\n                }\n\n                // Do some form cleaning\n                $('.clear-me-val, .form-item-control').val('');\n                $('.item-details-card').find('.form-control').val('');\n                $('.clear-me-html, .card-item-field-value').html('');\n                $('.form-check-input').attr('checked', '');\n                //$('.card-item-extra').collapse();\n                $('.collapse').removeClass('show');\n                $('.to_be_deleted').remove();\n                $('#card-item-attachments, #card-item-history').html('');\n                $('#card-item-attachments-badge').html('<?php echo langHdl('none'); ?>');\n\n                // Move back fields\n                $('.fields-to-move')\n                    .detach()\n                    .appendTo('#card-item-fields');\n\n                // Ensure the form is correct\n                $('#list-group-item-main, #item-details-card-categories')\n                    .children('.list-group')\n                    .removeClass('hidden');\n\n                // SHow save button in card\n                //$('#form-item-buttons').removeClass('sticky-footer');\n\n                // Destroy editors\n                $('#form-item-description').summernote('destroy');\n                $('#form-item-suggestion-description').summernote('destroy');\n\n                // Show loading\n                $('.overlay').removeClass('hidden');\n\n                // Collapse accordion\n                //$('.collapseme').addClass('collapsed-card');\n\n                // Restore scroll position\n                $(window).scrollTop(userScrollPosition);\n\n                userDidAChange = false;                \n                //$('.form-item-control').attr('data-change-ongoing', \"\");\n\n                // Enable the parent in select\n                if (selectedFolder.id !== undefined) {\n                    $(\"#form-folder-add-parent option[value='\" + selectedFolder.id.split('_')[1] + \"']\")\n                        .prop('disabled', false);\n                }\n            }\n            if (debugJavascript === true) console.log('Edit for closed');\n        }\n\n\n\n        // Scroll back to position\n        scrollBackToPosition();\n    }\n\n\n    /**\n     * Click on button with class but-navigate-item\n     */\n    $(document)\n        .on('click', '.but-navigate-item', function() {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Load item info\n            Details(\n                $(this).hasClass('but-prev-item') === true ? $('#list-item-row_' + $(this).attr('data-prev-item-id')) : $('#list-item-row_' + $(this).attr('data-next-item-id')),\n                'show'\n            );\n\n            $('.but-navigate-item').addClass('hidden');\n        });\n\n\n    /**\n     * Click on item\n     */\n    $(document)\n        .on('click', '.list-item-clicktoshow', function() {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Load item info\n            Details($(this).closest('tr'), 'show');\n        })\n        .on('click', '.list-item-clicktoedit', function() {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            if (debugJavascript === true) console.log('EDIT ME');\n            // Set type of action\n            $('#form-item-button-save').data('action', 'update_item');\n            \n            // Load item info\n            Details($(this).closest('tr'), 'edit');\n        });\n\n    /**\n     *  Manage mini icons on mouse over\n     */\n    $(document)\n        .on('mouseenter', '.list-item-row', function() {\n            $(this).find(\".list-item-actions\").removeClass('hidden');\n        })\n        .on('mouseleave', '.list-item-row', function() {\n            $(this).find(\".list-item-actions\").addClass('hidden');\n        });\n\n    $(document)\n        .on('change', '.form-check-input-template', function() {\n            $('.form-check-input-template').not(this).prop('checked', false);\n            userDidAChange = true;\n            if (debugJavascript === true) console.log('User did a change on .form-check-input-template > ' + userDidAChange);\n        });\n\n    $('.form-check-input-template').on('ifChecked', function() {\n        $('.form-check-input-template').not(this).iCheck('uncheck');\n        userDidAChange = true;\n        if (debugJavascript === true) console.log('User did a change on .form-check-input-template > ' + userDidAChange);\n        //$('.form-check-input-template').attr('data-change-ongoing', true);;\n    });\n\n    /**\n     * Manage change of color\n     */\n    $(document)\n        .on('mouseenter', '.fa-clickable', function() {\n            $(this).addClass('text-info');\n        })\n        .on('mouseleave', '.fa-clickable', function() {\n            $(this).removeClass('text-info');\n        });\n\n    $('#form-item-label').change(function() {\n        $('#form-item-title').html($(this).val());\n    });\n\n    /**\n     * Make the item favourite by clicking on icon\n     */\n    $(document)\n        .on('click', '.item-favourite', function() {\n            if (quick_icon_query_status === true) {\n                quick_icon_query_status = false;\n                var elem = $(this);\n\n                //Send query\n                toastr.remove();\n                toastr.info(\n                    '<?php echo langHdl('success'); ?>',\n                    '', {\n                        timeOut: 1000\n                    }\n                );\n\n                var data = {\n                    item_id: $(this).data('item-id'),\n                    action: $(this).data('item-favourited'),\n                }\n\n                console.log(data)\n\n                $.post('sources/items.queries.php', {\n                        type: 'action_on_quick_icon',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(ret) {\n                        //change quick icon\n                        if (elem.data('item-favourited') === 0) {\n                            $(elem)\n                                .html('<span class=\"fa-stack fa-clickable item-favourite pointer infotip mr-2\" title=\"<?php echo langHdl('unfavorite'); ?>\" data-item-id=\"' + elem.item_id + '\" data-item-favourited=\"1\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-star fa-stack-1x fa-inverse text-warning\"></i></span>');\n                        } else {\n                            $(elem)\n                                .html('<span class=\"fa-stack fa-clickable item-favourite pointer infotip mr-2\" title=\"<?php echo langHdl('favorite'); ?>\" data-item-id=\"' + elem.item_id + '\" data-item-favourited=\"0\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-star fa-stack-1x fa-inverse\"></i></span>');\n                        }\n\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('success'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                        quick_icon_query_status = true;\n                    }\n                );\n            }\n        });\n\n    // Click to reaveal password\n    $('#item-button-password-show')\n        .mouseup(function() {\n            $('#form-item-password').attr('type', 'password');\n        })\n        .mousedown(function() {\n            $('#form-item-password').attr('type', 'text');\n        });\n    $('.btn-no-click')\n        .click(function(e) {\n            e.preventDefault();\n        });\n\n\n\n    // show password during longpress\n    var mouseStillDown = false;\n    $('.item-details-card').on('mousedown', '.unhide_masked_data', function(event) {\n            mouseStillDown = true;\n            showPwdContinuous();\n        })\n        .on('mouseup', '.unhide_masked_data', function(event) {\n            mouseStillDown = false;\n            showPwdContinuous();\n        })\n        .on('mouseleave', '.unhide_masked_data', function(event) {\n            mouseStillDown = false;\n            showPwdContinuous();\n        });\n    var showPwdContinuous = function() {\n        if (mouseStillDown === true) {\n            // Prepare data to show\n            // Is data crypted?\n            var data = unCryptData($('#hidden-item-pwd').val(), '<?php echo $_SESSION['key']; ?>');\n            if (data !== false && data !== undefined) {\n                $('#hidden-item-pwd').val(\n                    data.password\n                );\n            }\n\n            $('#card-item-pwd')\n                .html(\n                    '<span style=\"cursor:none;\">' +\n                    $('#hidden-item-pwd').val()\n                    .replace(/</g, '&lt;')\n                    .replace(/>/g, '&gt;') +\n                    '</span>'\n                );\n\n            setTimeout('showPwdContinuous(\"card-item-pwd\")', 50);\n            // log password is shown\n            if ($('#card-item-pwd').hasClass('pwd-shown') === false) {\n                itemLog(\n                    'at_password_shown',\n                    store.get('teampassItem').id,\n                    $('#card-item-label').text()\n                );\n                $('#card-item-pwd').addClass('pwd-shown');\n            }\n        } else {\n            $('#card-item-pwd')\n                .html('<?php echo $var['hidden_asterisk']; ?>')\n                .removeClass('pwd-shown');\n        }\n    };\n\n    // Fields - show masked field\n    var selectedElement;\n    $('.item-details-card').on('mousedown', '.replace-asterisk', function(event) {\n            mouseStillDown = true;\n            selectedElement = $(this);\n            showContinuousMasked();\n        })\n        .on('mouseup', '.replace-asterisk', function(event) {\n            mouseStillDown = false;\n        })\n        .on('mouseleave', '.replace-asterisk', function(event) {\n            mouseStillDown = false;\n        });\n    var showContinuousMasked = function() {\n        if (mouseStillDown) {\n            $(selectedElement)\n                .text($('#hidden-card-item-field-value-' + selectedElement.data('field-id')).val());\n\n            setTimeout('showContinuousMasked()', 50);\n        } else {\n            $(selectedElement).html('<?php echo $var['hidden_asterisk']; ?>');\n        }\n    };\n\n\n    /**\n     * Launch the items search\n     */\n    $('#find_items').bind('keypress', function(e) {\n        var code = e.keyCode || e.which;\n        if (code == 13) {\n            searchItems($(this).val());\n        }\n    });\n\n    $('#find_items_button').click(function() {\n        if ($('#find_items').val() !== '') {\n            searchItems($('#find_items').val());\n        }\n    });\n\n\n    // Password strength\n    var pwdOptions = {};\n    pwdOptions = {\n        common: {\n            zxcvbn: true,\n            debug: false,\n            minChar: 4,\n            onScore: function (options, word, totalScoreCalculated) {\n                if (word.length === 20 && totalScoreCalculated < options.ui.scores[1]) {\n                    // Score doesn't meet the score[1]. So we will return the min\n                    // numbers of points to get that score instead.\n                    return options.ui.score[1]\n                }\n                $(\"#form-item-password-complex\").val(totalScoreCalculated);\n                return totalScoreCalculated;\n            },\n            usernameField: \"#form-item-login\",\n        },\n        rules: {},\n        ui: {\n            colorClasses: [\"text-danger\", \"text-danger\", \"text-danger\", \"text-warning\", \"text-warning\", \"text-success\"],\n            showPopover: false,\n            showStatus: true,\n            showErrors: false,\n            showVerdictsInsideProgressBar: true,\n            container: \"#tab_1\",\n            viewports: {\n                progress: \"#form-item-password-strength\",\n                score: \"#form-item-password-strength\"\n            },\n            scores: [<?php echo TP_PW_STRENGTH_1;?>, <?php echo TP_PW_STRENGTH_2;?>, <?php echo TP_PW_STRENGTH_3;?>, <?php echo TP_PW_STRENGTH_4;?>, <?php echo TP_PW_STRENGTH_5;?>],\n        },\n        i18n : {\n            t: function (key) {\n                var phrases = {\n                    weak: '<?php echo langHdl('complex_level1'); ?>',\n                    normal: '<?php echo langHdl('complex_level2'); ?>',\n                    medium: '<?php echo langHdl('complex_level3'); ?>',\n                    strong: '<?php echo langHdl('complex_level4'); ?>',\n                    veryStrong: '<?php echo langHdl('complex_level5'); ?>'\n                };\n                var result = phrases[key];\n\n                return result === key ? '' : result;\n            }\n        }\n    };\n    $('#form-item-password').pwstrength(pwdOptions);\n    \n\n\n    /**\n     * PLUPLOAD\n     */\n    var uploader_attachments = new plupload.Uploader({\n        runtimes: 'html5,flash,silverlight,html4',\n        browse_button: 'form-item-attach-pickfiles',\n        container: 'form-item-upload-zone',\n        max_file_size: '<?php\n            if (strrpos($SETTINGS['upload_maxfilesize'], 'mb') === false) {\n                echo $SETTINGS['upload_maxfilesize'] . 'mb';\n            } else {\n                echo $SETTINGS['upload_maxfilesize'];\n            }\n            ?>',\n        chunk_size: '1mb',\n        dragdrop: true,\n        url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/upload.attachments.php',\n        flash_swf_url: '<?php echo $SETTINGS['cpassman_url']; ?>/includes/libraries/Plupload/Moxie.swf',\n        silverlight_xap_url: '<?php echo $SETTINGS['cpassman_url']; ?>/includes/libraries/Plupload/Moxie.xap',\n        filters: {\n            mime_types: [\n                <?php\n                if (\n                    isset($SETTINGS['upload_all_extensions_file']) === false\n                    || (isset($SETTINGS['upload_all_extensions_file']) === true\n                        && (int) $SETTINGS['upload_all_extensions_file'] === 0)\n                ) {\n                    ?> {\n                        title: 'Image files',\n                        extensions: '<?php echo $SETTINGS['upload_imagesext']; ?>'\n                    },\n                    {\n                        title: 'Package files',\n                        extensions: '<?php echo $SETTINGS['upload_pkgext']; ?>'\n                    },\n                    {\n                        title: 'Documents files',\n                        extensions: '<?php echo $SETTINGS['upload_docext']; ?>'\n                    },\n                    {\n                        title: 'Other files',\n                        extensions: '<?php echo $SETTINGS['upload_otherext']; ?>'\n                    }\n                <?php\n                }\n                ?>\n            ],\n            <?php\n            if (isset($SETTINGS['upload_zero_byte_file']) === true && (int) $SETTINGS['upload_zero_byte_file'] === 1) {\n                ?>\n                prevent_empty: false\n            <?php\n            }\n            ?>\n        },\n        <?php\n        if ((int) $SETTINGS['upload_imageresize_options'] === 1) {\n            ?>\n            resize: {\n                width: <?php echo $SETTINGS['upload_imageresize_width']; ?>,\n                height: <?php echo $SETTINGS['upload_imageresize_height']; ?>,\n                quality: <?php echo $SETTINGS['upload_imageresize_quality']; ?>\n            },\n        <?php\n        }\n        ?>\n        init: {\n            BeforeUpload: function(up, file) {\n                toastr.info(\n                    '<i class=\"fa-solid fa-cloud-arrow-up fa-bounce mr-2\"></i><?php echo langHdl('uploading'); ?>',\n                    '', {\n                        timeOut: 0\n                    }\n                );\n\n                // Get random number\n                if (store.get('teampassApplication').uploadedFileId === '') {\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.uploadedFileId = CreateRandomString(9, 'num_no_0');\n                        }\n                    );\n                }\n\n                up.setOption('multipart_params', {\n                    PHPSESSID: '<?php echo $_SESSION['user_id']; ?>',\n                    itemId: store.get('teampassItem').id,\n                    type_upload: 'item_attachments',\n                    isNewItem: store.get('teampassItem').isNewItem,\n                    isPersonal: store.get('teampassItem').folderIsPersonal,\n                    edit_item: false,\n                    user_token: store.get('teampassApplication').attachmentToken,\n                    randomId: store.get('teampassApplication').uploadedFileId,\n                    files_number: $('#form-item-hidden-pickFilesNumber').val(),\n                    file_size: file.size\n                });\n                console.log('DEBUG IMAGE - BeforeUpload')\n                console.log(up);\n            }\n        }\n    });\n\n    // Uploader options\n    uploader_attachments.bind('UploadProgress', function(up, file) {\n        //console.log('uploader_attachments.bind')\n        $('#upload-file_' + file.id).html('<i class=\"fas fa-file fa-sm mr-2\"></i>' + htmlEncode(file.name) + '<span id=\"fileStatus_'+file.id+'\">- ' + file.percent + '%</span>');\n        if (file.percent === 100) {\n            $('#fileStatus_'+file.id).html('<i class=\"fa-solid fa-circle-check text-success ml-2 fa-1x\"></i>');\n            userUploadedFile = true;\n            userDidAChange = true;\n            toastr.remove();\n        }\n    });\n    uploader_attachments.bind('Error', function(up, err) {\n        toastr.remove();\n        toastr.error(\n            err.message + (err.file ? ', File: ' + err.file.name : ''),\n            '', {\n                timeOut: 5000,\n                progressBar: true\n            }\n        );\n\n        up.refresh(); // Reposition Flash/Silverlight\n    });\n\n    $(\"#form-item-upload-pickfiles\").click(function(e) {\n        if ($('#form-item-upload-pickfilesList').text() !== '') {\n            // generate and save token\n            $.post(\n                \"sources/main.queries.php\", {\n                    type: \"save_token\",\n                    type_category: 'action_system',\n                    size: 25,\n                    capital: true,\n                    numeric: true,\n                    ambiguous: true,\n                    reason: \"item_attachments\",\n                    duration: 10,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.attachmentToken = data[0].token;\n                        }\n                    );\n                    console.log('start upload')\n                    uploader_attachments.start();\n                },\n                \"json\"\n            );\n            e.preventDefault();\n        } else {\n            toastr.remove();\n            toastr.warning(\n                '<?php echo langHdl('no_file_to_upload'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n        }\n    });\n    uploader_attachments.init();\n    uploader_attachments.bind('FilesAdded', function(up, files) {\n        if (debugJavascript === true) {\n            console.log('uploader_attachments.FilesAdded')\n        }\n        $('#form-item-upload-pickfilesList').removeClass('hidden');\n        var addedFiles = '';\n        $.each(files, function(i, file) {\n            $('#form-item-upload-pickfilesList').append(\n                '<div id=\"upload-file_' + file.id + '\">' +\n                '<span id=\"upload-file-remove_' + file.id +\n                '><a href=\"#\" onclick=\"$(this).closest(\\'div\\').remove();\"><i class=\" fa fa-trash mr-2 pointer\"></i></a></span> ' +\n                htmlEncode(file.name) + ' (' + plupload.formatSize(file.size) + ')' +\n                '</div>');\n            $(\"#form-item-hidden-pickFilesNumber\").val(\n                parseInt($(\"#form-item-hidden-pickFilesNumber\").val()) + 1\n            );\n            if (debugJavascript === true) {\n                console.info('Info du fichier :');\n                console.log(file);\n            }\n        });\n        up.refresh(); // Reposition Flash/Silverlight\n    });\n    //->\n\n\n\n    /**\n     * Save item changes\n     */\n    $('#form-item-button-save').click(function() {\n        var arrayQuery = [],\n            originalFolderId = $('#form-item-folder').val(),\n            itemsList = [],\n            userItemRight = '';\n\n        // What action is this?\n        if ($('#form-item-button-save').data('action') === '' ||\n            $('#form-item-button-save').data('action') === undefined\n        ) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_no_action_identified'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Don't save if no change\n        if (userDidAChange === false && userUploadedFile === false) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('no_change_performed'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Validate form\n        var form = $('#form-item');\n        if (form[0].checkValidity() === false) {\n            form.addClass('was-validated');\n            // Send alert to user\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('form_presents_inconsistencies'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            return false;\n        }\n\n        // Loop on all changed fields\n        $('.form-item-field-custom').each(function(i, obj) {\n            if ($(this).data('change-ongoing') === true) {\n                // Create an array with changed inputs\n                arrayQuery.push({\n                    'input': $(this).attr('id'),\n                    'field': $(this).data('field-name'),\n                    'value': $(this).val(),\n                });\n            }\n        });\n        if (debugJavascript === true) {\n            console.log('CHANGED FIELDS '+userUploadedFile + ' ' + userDidAChange);\n            console.log(arrayQuery);\n        }\n\n        // is user allowed to edit this item\n        if (typeof store.get('teampassApplication').itemsList !== 'undefined') {\n            itemsList = JSON.parse(store.get('teampassApplication').itemsList);\n        }\n        if (itemsList.length > 0) {\n            userItemRight = itemsList[store.get('teampassItem').id]?.rights;\n        }\n\n        \n\n        // Do checks\n        if (arrayQuery.length > 0 || userDidAChange === true) {\n            var reg = new RegExp(\"[.|,|;|:|!|=|+|-|*|/|#|\\\"|'|&]\");\n\n            // Sanitize text fields\n            let formLabel = fieldSanitizeStep1('#form-item-label', false, false, false),\n                formDescription = $('#form-item-description').summernote('code') !== \"<p><br></p>\" ? fieldSanitizeStep1('#form-item-description', true, false, false, $('#form-item-description').summernote('code')) : '',\n                formEmail = fieldSanitizeStep1('#form-item-email'),\n                formTags = fieldSanitizeStep1('#form-item-tags'),\n                formUrl = fieldSanitizeStep1('#form-item-url'),\n                formIcon = fieldSanitizeStep1('#form-item-icon');\n            if (formLabel === false || formDescription === false || formEmail === false || formTags === false || formUrl === false || formIcon === false) {\n                // Label is empty\n                toastr.remove();\n                toastr.warning(\n                    'XSS attempt detected. Field has been emptied.',\n                    'Error', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n            \n            // Do some easy checks\n            if (formLabel === '') {\n                // Label is empty\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_label'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            } else if (formTags !== '' &&\n                reg.test(formTags)\n            ) {\n                // Tags not wel formated\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_tags'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            } else if ($('#form-item-folder option:selected').val() === '' ||\n                typeof $('#form-item-folder option:selected').val() === 'undefined'\n            ) {\n                // No folder selected\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_no_selected_folder'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            } else if ($('#form-item-folder option:selected').attr('disabled') === 'disabled' && userItemRight && userItemRight <= 40) {\n                // Folder is not allowed\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_folder_not_allowed'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            } else {\n                // Continue preparation of saving query\n\n                //Manage restriction\n                var restriction = new Array(),\n                    restrictionRole = new Array(),\n                    userInRestrictionList = false;\n                $('#form-item-restrictedto option:selected').each(function() {\n                    if ($(this).val() !== '') {\n                        if ($(this).hasClass('restriction_is_role') === true) {\n                            restrictionRole.push($(this).val().substring(5));\n                        } else {\n                            restriction.push($(this).val());\n                            // Is the user part of the restriction option\n                            if ($(this).val() === '<?php echo $_SESSION['user_id']; ?>') {\n                                userInRestrictionList = true;\n                            }\n                        }\n                    }\n                });\n                // IF any restriction, then ensure the author is in\n                if (userInRestrictionList === false && restriction.length > 0) {\n                    restriction.push('<?php echo $_SESSION['user_id']; ?>;');\n                }\n\n                // Manage diffusion list\n                var diffusion = new Array();\n                var diffusionNames = new Array();\n                $('#form-item-anounce option:selected').each(function() {\n                    diffusion.push($(this).val());\n                    diffusionNames.push($(this).text());\n                });\n\n                // Get item field values\n                // Ensure that mandatory ones are filled in too\n                // and they are compliant to regexes\n                var fields = [];\n                var errorExit = false;\n                var reason = '';\n                $('.form-item-field-custom').each(function(key, data) {\n                    fields.push({\n                        'id': $(this).data('field-name'),\n                        'value': $(this).val(),\n                    });\n\n                    // Mandatory?\n                    if (parseInt($(this).data('field-mandatory')) === 1 &&\n                        $(this).val() === '' &&\n                        $('#form-item-field-' + $(this).data('field-name')).parent().hasClass('hidden') === false\n                    ) {\n                        //if (debugJavascript === true) console.log($(this))\n                        errorExit = true;\n                        return false;\n                    }\n                    if ($(this).val().length > 0 && $(this).data('field-regex').length > 0 &&\n                        !$(this).val().match($(this).data('field-regex'))\n                    ) {\n                        //if (debugJavascript === true) console.log($(this))\n                        errorExit = true;\n                        reason = 'regex';\n                        return false;\n                    }\n                });\n                if (errorExit === true) {\n                    toastr.remove();\n                    if (reason === 'regex') {\n                        toastr.error(\n                            '<?php echo langHdl('error_field_regex'); ?>',\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        toastr.error(\n                            '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    }\n                    return false;\n                }\n                    \n                //prepare data\n                var data = {\n                    'anyone_can_modify': $('#form-item-anyoneCanModify').is(':checked') ? 1 : 0,\n                    'complexity_level': parseInt($('#form-item-password-complex').val()),\n                    'description': formDescription,\n                    'diffusion_list': diffusion,\n                    'diffusion_list_names': diffusionNames,\n                    'folder': parseInt($('#form-item-folder').val()),\n                    'email': formEmail,\n                    'fields': fields,\n                    'folder_is_personal': store.get('teampassItem').IsPersonalFolder === 1 ? 1 : 0,\n                    'id': store.get('teampassItem').id,\n                    'label': formLabel,\n                    'login': DOMPurify.sanitize($('#form-item-login').val()),\n                    'pw': $('#form-item-password').val(),\n                    'restricted_to': restriction,\n                    'restricted_to_roles': restrictionRole,\n                    'tags': formTags,\n                    'template_id': parseInt($('input.form-check-input-template:checkbox:checked').data('category-id')),\n                    'to_be_deleted_after_date': ($('#form-item-deleteAfterDate').length !== 0 &&\n                        $('#form-item-deleteAfterDate').val() !== '') ? $('#form-item-deleteAfterDate').val() : '',\n                    'to_be_deleted_after_x_views': ($('#form-item-deleteAfterShown').length !== 0 &&\n                            $('#form-item-deleteAfterShown').val() !== '' && $('#form-item-deleteAfterShown').val() >= 1) ?\n                        parseInt($('#form-item-deleteAfterShown').val()) : '',\n                    'url': formUrl,\n                    'user_id': parseInt('<?php echo $_SESSION['user_id']; ?>'),\n                    'uploaded_file_id': store.get('teampassApplication').uploadedFileId === undefined ? '' : store.get('teampassApplication').uploadedFileId,\n                    'fa_icon': formIcon,\n                };\n                if (debugJavascript === true) {\n                    console.log('SAVING DATA');\n                    console.log(data);\n                }\n\n                // Inform user\n                toastr.remove();\n                toastr.info(\n                    '<?php echo langHdl('opening_folder'); ?><i class=\"fas fa-circle-notch fa-spin ml-2\"></i>'\n                );\n\n                // CLear tempo var\n                store.update(\n                    'teampassApplication',\n                    function(teampassApplication) {\n                        teampassApplication.uploadedFileId = '';\n                    }\n                );\n\n                //Send query\n                $.post(\n                    \"sources/items.queries.php\", {\n                        type: $('#form-item-button-save').data('action'),\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data) {\n                        //decrypt data\n                        try {\n                            data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                        } catch (e) {\n                            // error\n                            $(\"#div_loading\").addClass(\"hidden\");\n                            //requestRunning = false;\n                            $(\"#div_dialog_message_text\").html(\"An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />\" + data);\n                            $(\"#div_dialog_message\").dialog(\"open\");\n\n                            toastr.remove();\n                            toastr.error(\n                                'An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />' + data,\n                                '', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                            return false;\n                        }\n                        if (debugJavascript === true) console.log('RETURNED DATA');\n                        if (debugJavascript === true) console.log(data);\n                        if (data.error === true) {\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                            return false;\n                        } else {\n                            // Refresh tree\n                            if ($('#form-item-button-save').data('action') === 'update_item') {\n                                if ($('#form-item-folder').val() !== '' &&\n                                    originalFolderId !== $('#form-item-folder').val()\n                                ) {\n                                    refreshTree($('#form-item-folder').val(), false);\n                                }\n                                // Send query to confirm attachments\n                                var data = {\n                                    'item_id': store.get('teampassItem').id,\n                                }\n                                $.post(\n                                    \"sources/items.queries.php\", {\n                                        type: 'confirm_attachments',\n                                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                                        key: '<?php echo $_SESSION['key']; ?>'\n                                    }\n                                );\n                            } else {\n                                refreshTree($('#form-item-folder').val(), true);\n                            }\n\n                            // Refresh list of items inside the folder\n                            ListerItems($('#form-item-folder').val(), '', 0);\n\n                            // Inform user\n                            toastr.info(\n                                '<?php echo langHdl('success'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n\n                            // Close\n                            userDidAChange = false;\n                            userUploadedFile = false;\n\n                            closeItemDetailsCard();\n                            /*\n                            // Hide all\n                            $('.form-item, .form-item-action, .form-folder-action, .item-details-card, #folders-tree-card, #card-item-expired').addClass('hidden');\n\n                            // Show expected one\n                            $(store.get('teampassUser').previousView).removeClass('hidden');\n                            */\n                        }\n                    }\n                );\n            }\n        } else if (userUploadedFile === true) {\n            // Send query to confirm attachments\n            var data = {\n                'item_id': store.get('teampassItem').id,\n            }\n\n            $.post(\n                \"sources/items.queries.php\", {\n                    type: 'confirm_attachments',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                }\n            );\n\n            store.update(\n                'teampassItem',\n                function(teampassItem) {\n                    teampassItem.isNewItem = 0\n                }\n            );\n\n            // Inform user\n            toastr.info(\n                '<?php echo langHdl('done'); ?>',\n                '', {\n                    timeOut: 1000\n                }\n            );\n\n            // Close\n            userUploadedFile = false;\n            closeItemDetailsCard();\n        } else {\n            if (debugJavascript === true) console.info('NOTHING TO SAVE');\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('nothing_to_save'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n        }\n    });\n    //->\n\n\n    //autocomplete for TAGS\n    $(\"#form-item-tags\")\n        //.focus()\n        .bind(\"keydown\", function(event) {\n            if (event.keyCode === $.ui.keyCode.TAB &&\n                $(this).data(\"autocomplete\").menu.active) {\n                event.preventDefault();\n            }\n        })\n        .autocomplete({\n            source: function(request, response) {\n                $.getJSON(\"sources/items.queries.php?type=autocomplete_tags&t=1\", {\n                    term: extractLast(request.term)\n                }, response);\n            },\n            focus: function() {\n                // prevent value inserted on focus\n                return false;\n            },\n            search: function() {\n                var term = extractLast(this.value);\n            },\n            select: function(event, ui) {\n                var terms = split(this.value);\n                // remove the current input\n                terms.pop();\n                // add the selected item\n                terms.push(ui.item.value);\n                // add placeholder to get the comma-and-space at the end\n                terms.push(\"\");\n                this.value = terms.join(\" \");\n\n                return false;\n            }\n        });\n\n    // Warn in case of limited search\n    $(document).on('click', '#limited-search', function() {\n        if ($(this).is(\":checked\") === true) {\n            $('#find_items').css({\n                \"background-color\": \"#f56954\"\n            });\n        } else {\n            $('#find_items').css({\n                \"background-color\": \"#FFF\"\n            })\n        }\n    });\n\n\n    function showItemEditForm(selectedFolderId) {\n        if (debugJavascript === true) console.info('SHOW EDIT ITEM ' + selectedFolderId);\n        \n        //$.when(\n        //    getPrivilegesOnItem(selectedFolderId, 0)\n        //).then(function() {\n        // Now read\n        if (store.get('teampassItem').error === true) {\n            toastr.remove();\n            toastr.error(\n                store.get('teampassItem').message,\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n        } else {\n            $('#card-item-visibility').html(store.get('teampassItem').itemVisibility);\n            $('#card-item-minimum-complexity').html(store.get('teampassItem').itemMinimumComplexity);\n\n            // Show edition form\n            $('.form-item, #form-item-attachments-zone')\n                .removeClass('hidden');\n            $('.item-details-card, .form-item-copy, #form-item-password-options, .form-item-action, #item-details-card-categories, #folders-tree-card, .columns-position')\n                .addClass('hidden');\n\n            // Initial 'user did a change'\n            userDidAChange = false;\n\n            // Force update of simplepassmeter\n            $('#form-item-password').pwstrength(\"forceUpdate\");\n            $('#form-item-label').focus();\n\n            // Set type of action\n            $('#form-item-button-save').data('action', 'update_item');\n\n            // Does this folder contain Custom Fields\n            if (store.get('teampassItem').hasCustomCategories.length > 0) {\n                $('#form-item-field').removeClass('hidden');\n                $.each(store.get('teampassItem').hasCustomCategories, function(i, category) {\n                    $('#form-item-category-' + category).removeClass('hidden');\n                })\n            } else {\n                $('#form-item-field, .form-item-category').addClass('hidden');\n            }            \n\n            // is user allowed to edit this item - overpass readonly folder\n            if (typeof store.get('teampassApplication').itemsList !== 'undefined') {\n                var itemsList = JSON.parse(store.get('teampassApplication').itemsList);\n                userItemRight = itemsList[store.get('teampassItem').id]?.rights;\n                if (userItemRight && userItemRight > 40 && $('#form-item-folder option:selected').attr('disabled') === 'disabled') {\n                    $('#form-item-folder option:selected').removeAttr('disabled');\n                }\n            }\n\n            toastr.remove();\n            // ---\n        }\n        //});\n    }\n\n\n    /**\n     * Start items search\n     */\n    function searchItems(criteria) {\n        if (criteria !== '') {\n            // stop items loading (if on-going)\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStop = 1;\n                }\n            );\n\n            // wait\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('searching'); ?>'\n            );\n\n            // clean\n            $('#id_label, #id_desc, #id_pw, #id_login, #id_email, #id_url, #id_files, #id_restricted_to ,#id_tags, #id_kbs, .fields_div, .fields, #item_extra_info').html('');\n            $('#button_quick_login_copy, #button_quick_pw_copy').addClass('hidden');\n            $('#teampass_items_list').html('');\n\n            // Continu the list of results\n            finishingItemsFind(\n                'search_for_items',\n                $('#limited-search').is(\":checked\") === true ? store.get('teampassApplication').selectedFolder : false,\n                criteria,\n                0\n            );\n        }\n    }\n\n    /**\n     * \n     */\n    function finishingItemsFind(type, limited, criteria, start) {\n        // send query\n        $.get(\n            'sources/find.queries.php', {\n                type: type,\n                limited: limited,\n                search: criteria,\n                start: start,\n                length: 10,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                var pwd_error = '',\n                    icon_login,\n                    incon_link,\n                    icon_pwd,\n                    icon_favorite;\n\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'find.queries.php', type);\n                if (debugJavascript === true) console.log(data);\n\n                // Ensure correct div is not hidden\n                $('#info_teampass_items_list').addClass('hidden');\n                $('#table_teampass_items_list').removeClass('hidden');\n\n                // Show Items list\n                sList(data.html_json);\n\n                if (data.start !== -1 && (data.start <= data.total)) {\n                    // Continu the list of results\n                    finishingItemsFind(\n                        'search_for_items',\n                        $('#limited-search').is(\":checked\") === true ?\n                        store.get('teampassApplication').selectedFolder : false,\n                        criteria,\n                        data.start\n                    )\n                } else {\n                    toastr.remove();\n                    toastr.info(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    // Do some post treatments\n                    $('#form-folder-path').html('');\n                    $('#find_items').val('');\n\n                    // Do drag'n'drop for the folders\n                    prepareFolderDragNDrop();\n\n                    adjustElemsSize();\n                }\n            }\n        );\n    }\n\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function refreshVisibleFolders(forceRefreshCache = false) {\n        var data = {\n            'force_refresh_cache': forceRefreshCache,\n        }\n        if (debugJavascript === true) {\n            console.log('Refresh visible folders');\n            console.log(data);\n        }\n\n        $.post(\n            'sources/items.queries.php', {\n                type: 'refresh_visible_folders',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'refresh_visible_folders');\n                if (debugJavascript === true) {\n                    console.log('TREE');\n                    console.log(data);\n                }\n                //check if format error\n                if (typeof data !== 'undefined' && data.error !== true) {\n                    // Build html lists\n                    var html_visible = '',\n                        html_full_visible = '',\n                        html_active_visible = '',\n                        indentation = '',\n                        disabled = '';\n\n                    if (typeof data.html_json === 'undefined' || typeof data.html_json.folders === 'undefined') {\n                        $('#jstree').html('<div class=\"alert alert-warning mt-3 mr-1 ml-1\"><i class=\"fas fa-exclamation-triangle mr-2\"></i>' +\n                            '<?php echo langHdl('no_data_to_display'); ?>' +\n                            '</div>');\n                        //return false;\n                    } else {\n                        refreshFoldersInfo(data.html_json.folders, 'clear');\n                    }\n\n                    // Shall we show the root folder\n                    if (data.html_json.can_create_root_folder === 1) {\n                        html_visible = '<option value=\"0\"><?php echo langHdl('root'); ?></option>';\n                        html_full_visible = '<option value=\"0\"><?php echo langHdl('root'); ?></option>';\n                        html_active_visible = '<option value=\"0\"><?php echo langHdl('root'); ?></option>';\n                    } else {\n                        html_visible = '<option value=\"0\" disabled=\"disabled\"><?php echo langHdl('root'); ?></option>';\n                    }\n\n                    //\n                    $.each(data.html_json.folders, function(i, value) {\n                        // Prepare options lists\n                        html_visible += '<option value=\"' + value.id + '\"' +\n                            ((value.disabled === 1) ? ' disabled=\"disabled\"' : '') +\n                            ' data-parent-id=\"' + value.parent_id + '\">' +\n                            '&nbsp;'.repeat(value.level) +\n                            value.title + (value.path !== '' ? ' [' + value.path + ']' : '') + '</option>';\n                    });\n\n                    // Append new list\n                    $('#form-item-folder, #form-item-copy-destination, #form-folder-add-parent,' +\n                            '#form-folder-delete-selection, #form-folder-copy-source, #form-folder-copy-destination')\n                        .find('option')\n                        .remove()\n                        .end()\n                        .append(html_visible);\n                    $(\".no-root option[value='0']\").remove();\n\n                    if (debugJavascript === true) {\n                        console.info('HTML VISIBLE:')\n                        console.log(html_visible);\n                    }\n\n                    // Store in teampassUser\n                    store.update(\n                        'teampassUser',\n                        function(teampassUser) {\n                            teampassUser.folders = html_visible;\n                        }\n                    );\n\n\n                    // remove ROOT option if exists\n                    $('#form-item-copy-destination option[value=\"0\"]').remove();\n                } else {\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n            }\n        );\n    }\n\n\n    /**\n     * Get more info about folders (Categories)\n     *\n     * @return void\n     */\n    function refreshFoldersInfo(folders, action) {\n        var action = action || '',\n            sending = '';\n\n        if (null === folders) return false;\n\n        if (action === 'clear') {\n            sending = JSON.stringify(folders.map(a => parseInt(a.id)));\n        } else if (action === 'update') {\n            sending = JSON.stringify([folders]);\n        }\n\n        if (debugJavascript === true) {\n            console.info('INPUTS for refresh_folders_other_info');\n            console.log(sending);\n        }\n        \n        $.post(\n            'sources/items.queries.php', {\n                type: 'refresh_folders_other_info',\n                data: sending,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'refresh_folders_other_info');\n                if (debugJavascript === true) {\n                    console.info('RESULTS for refresh_folders_other_info');\n                    console.log(data);\n                }\n\n                //check if format error\n                if (typeof data !== 'undefined' && data.error !== true) {\n                    // Store in session\n                    if (action === 'clear') {\n                        // Handle the data\n                        $.each(folders, function(index, item) {\n                            if (typeof data.result !== 'undefined' && typeof data.result[item.id] !== 'undefined') {\n                                folders[index]['categories'] = data.result[item.id].categories;\n                                folders[index]['complexity'] = data.result[item.id].complexity;\n                                folders[index]['visibilityRoles'] = data.result[item.id].visibilityRoles;\n                            }\n                        });\n                        // Stare the data\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.foldersList = folders;\n                            }\n                        );\n                    } else if (action === 'update') {\n                        // Store the data\n                        var currentFoldersList = store.get('teampassApplication').foldersList;\n                        $.each(currentFoldersList, function(index, item) {\n                            if (item.id === parseInt(folders) && typeof data.result[folders] !== 'undefined') {\n                                currentFoldersList[index].categories = data.result[folders].categories;\n                                currentFoldersList[index].complexity = data.result[folders].complexity;\n                                currentFoldersList[index].visibilityRoles = data.result[folders].visibilityRoles;\n\n                                store.update(\n                                    'teampassApplication',\n                                    function(teampassApplication) {\n                                        foldersList = currentFoldersList;\n                                    }\n                                );\n                                return true;\n                            }\n                        });\n\n                    }\n                } else {\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n                toastr.remove();\n            }\n        );\n    }\n\n\n    /*\n     * builds the folders tree\n     */\n    function refreshTree(node_to_select, do_refresh, refresh_visible_folders) {\n        do_refresh = do_refresh || ''\n        node_to_select = node_to_select || '';\n        refresh_visible_folders = refresh_visible_folders || true;\n\n        if (refresh_visible_folders !== true) {\n            $('#jstree').jstree('deselect_all');\n            $('#jstree').jstree('select_node', '#li_' + groupe_id);\n            return false;\n        }\n\n        if (do_refresh === true || store.get('teampassApplication').jstreeForceRefresh === 1) {\n            $('#jstree').jstree(true).refresh();\n        }\n\n        if (node_to_select !== '') {\n            $('#jstree').jstree('deselect_all');\n\n            $('#jstree')\n                .one('refresh.jstree', function(e, data) {\n                    data.instance.select_node('#li_' + node_to_select);\n                });\n        }\n\n        $(this).delay(500).queue(function() {\n            refreshVisibleFolders(true);\n            $(this).dequeue();\n        });\n    }\n\n    /**\n     * \n     */\n    function ListerItems(groupe_id, restricted, start, stop_listing_current_folder) {\n        var me = $(this);\n        stop_listing_current_folder = stop_listing_current_folder || '0';\n        if (debugJavascript === true) console.log('LIST OF ITEMS FOR FOLDER ' + groupe_id)\n        // Exit if no folder is selected\n        if (groupe_id === undefined) return false;\n\n        // case where we should stop listing the items\n        if (store.get('teampassApplication') !== undefined && store.get('teampassApplication').itemsListStop === 1) {\n            //requestRunning = false;\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStop = 0;\n                }\n            );\n        }\n\n        //Evaluate number of items to display - depends on screen height\n        //adapt to the screen height\n        store.update(\n            'teampassApplication',\n            function(teampassApplication) {\n                teampassApplication.itemsShownByQuery = Math.max(Math.round((screenHeight - 450) / 23), 2);\n            }\n        );\n\n        if (stop_listing_current_folder === 1) {\n            me.data('requestRunning', false);\n            // Store listing criteria\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListFolderId = parseInt(groupe_id),\n                        teampassApplication.itemsListRestricted = restricted,\n                        teampassApplication.itemsListStart = start,\n                        teampassApplication.itemsListStop = 0\n                }\n            );\n        } else {\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStop = 0\n                }\n            );\n        }\n\n\n        // prevent launch of similar query in case of doubleclick\n        if (requestRunning === true) {\n            return false;\n        }\n        requestRunning = true;\n\n        // Hide any info\n        $('#info_teampass_items_list').addClass('hidden');\n\n        if (groupe_id !== undefined || groupe_id !== '') {\n            //refreshTree(groupe_id);\n            if (query_in_progress != 0 && query_in_progress != groupe_id && request !== undefined) {\n                request.abort(); //kill previous query if needed\n            }\n            query_in_progress = groupe_id;\n            if (start == 0) {\n                //clean form\n                $('#teampass_items_list, #items_folder_path').html('');\n            }\n\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.selectedFolder = parseInt(groupe_id),\n                    teampassApplication.itemsList = ''\n                }\n            );\n\n            if ($('.tr_fields') !== undefined) {\n                $('.tr_fields, .newItemCat, .editItemCat').addClass('hidden');\n            }\n\n            // Inform user\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('opening_folder'); ?><i class=\"fas fa-circle-notch fa-spin ml-2\"></i>'\n            );\n\n            // clear storage \n            store.update(\n                'teampassUser',\n                function(teampassUser) {\n                    teampassUser.itemsList = '';\n                }\n            );\n\n            // Prepare data to be sent\n            var dataArray = {\n                id: store.get('teampassApplication').selectedFolder,\n                restricted: restricted === \"\" ? \"\" : restricted,\n                start: start !== undefined ? start : 0,\n                uniqueLoadData: store.get('teampassApplication').queryUniqueLoad !== undefined ? store.get('teampassApplication').queryUniqueLoad : \"\",\n                nb_items_to_display_once: store.get('teampassApplication').itemsShownByQuery,\n            };\n\n            if (debugJavascript === true) {\n                console.log('Do list of items in folder with next parameters:');\n                console.log(JSON.stringify(dataArray));\n            }\n            \n            //ajax query\n            var request = $.post('sources/items.queries.php', {\n                    type: 'do_items_list_in_folder',\n                    data: prepareExchangedData(JSON.stringify(dataArray), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>',\n                },\n                function(retData) {\n                    //get data\n                    data = decodeQueryReturn(retData, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'do_items_list_in_folder');\n\n                    if (debugJavascript === true) {\n                        console.log('LIST ITEMS');\n                        console.log(data);\n                    }\n\n                    // reset doubleclick prevention\n                    requestRunning = false;\n\n                    // manage not allowed\n                    if (data.error === true) {\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                        return false;\n                    }\n\n                    // Hide New button if restricted folder\n                    if (data.access_level === 10) {\n                        $('#btn-new-item').addClass('hidden');\n                    } else {\n                        $('#btn-new-item').removeClass('hidden');\n                    }\n\n                    // to be done only in 1st list load\n                    if (data.list_to_be_continued === 'end') {\n                        var initialQueryData = $.parseJSON(data.uniqueLoadData);\n\n                        // Update hidden variables\n                        store.update(\n                            'teampassItem',\n                            function(teampassItem) {\n                                teampassItem.IsPersonalFolder = parseInt(data.IsPersonalFolder),\n                                    teampassItem.hasAccessLevel = parseInt(data.access_level),\n                                    teampassItem.folderComplexity = parseInt(data.folder_complexity),\n                                    teampassItem.hasCustomCategories = data.categoriesStructure\n                            }\n                        );\n                        \n\n                        // display path of folders\n                        if ((initialQueryData.path.length > 0)) {\n                            $('#form-folder-path')\n                                .html('')\n                                .append(rebuildPath(initialQueryData.path));\n                        } else {\n                            $('#form-folder-path').html('');\n                        }\n\n                        /*\n                        // PSK is requested but not set\n                        if (data.folder_requests_psk === 1\n                            && (store.get('teampassUser').pskSetForSession === ''\n                            || store.get('teampassUser').pskSetForSession === undefined)\n                        ) {\n                            showPersonalSKDialog();\n                        }\n                        */\n\n                        // show correct fodler in Tree\n                        if ($('#jstree').jstree('get_selected', true)[0] !== undefined &&\n                            'li_' + groupe_id !== $('#jstree').jstree('get_selected', true)[0].id\n                        ) {\n                            $('#jstree').jstree('deselect_all');\n                            $('#jstree').jstree('select_node', '#li_' + groupe_id);\n                        }\n\n                        // Delete existing clipboard\n                        if (clipboardForPassword) {\n                            clipboardForPassword.destroy();\n                        }\n                        if (clipboardForLogin) {\n                            clipboardForLogin.destroy();\n                        }\n\n                        // Prepare clipboard items\n                        clipboardForLogin = new ClipboardJS('.fa-clickable-login');\n                        clipboardForLogin.on('success', function(e) {\n                            toastr.info(\n                                '<?php echo langHdl('copy_to_clipboard'); ?>',\n                                '', {\n                                    timeOut: 2000,\n                                    positionClass: 'toast-top-right',\n                                    progressBar: true\n                                }\n                            );\n                            e.clearSelection();\n                        });\n\n                        // Prepare clipboard for PAssword\n                        // This will request a query to server to get the pwd\n                        clipboardForPassword = new ClipboardJS('.fa-clickable-password', {\n                            text: function(trigger) {\n                                // Send query and get password\n                                var result = '',\n                                    error = false;\n\n                                // Warn user that it starts\n                                toastr.remove();\n                                toastr.info(\n                                    '<i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>'\n                                );\n\n                                $.ajax({\n                                    type: \"POST\",\n                                    async: false,\n                                    url: 'sources/items.queries.php',\n                                    data: 'type=show_item_password&item_key=' + trigger.getAttribute('data-item-key') +\n                                        '&key=<?php echo $_SESSION['key']; ?>',\n                                    dataType: \"\",\n                                    success: function(data) {\n                                        //decrypt data\n                                        try {\n                                            data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                                        } catch (e) {\n                                            // error\n                                            toastr.remove();\n                                            toastr.warning(\n                                                '<?php echo langHdl('no_item_to_display'); ?>'\n                                            );\n                                            return false;\n                                        }\n                                        if (data.error === true) {\n                                            error = true;\n                                        } else {\n                                            if (data.password_error !== '') {\n                                                error = true;\n                                            } else {\n                                                result = atob(data.password).utf8Decode();\n                                            }\n                                        }\n\n                                        // Remove cog\n                                        toastr.remove();\n                                    }\n                                });\n                                return result;\n                            }\n                        });\n                        clipboardForPassword.on('success', function(e) {\n                            itemLog(\n                                'at_password_copied',\n                                e.trigger.dataset.itemId,\n                                e.trigger.dataset.itemLabel\n                            );\n                            \n                            // Warn user about clipboard clear\n                            if (store.get('teampassSettings').clipboard_life_duration === undefined || parseInt(store.get('teampassSettings').clipboard_life_duration) === 0) {\n                                toastr.remove();\n                                toastr.info(\n                                    '<?php echo langHdl('copy_to_clipboard'); ?>',\n                                    '', {\n                                        timeOut: 2000,\n                                        positionClass: 'toast-top-right',\n                                        progressBar: true\n                                    }\n                                );\n                            } else {\n                                toastr.remove();\n                                toastr.warning(\n                                    '<?php echo langHdl('clipboard_will_be_cleared'); ?>',\n                                    '', {\n                                        timeOut: store.get('teampassSettings').clipboard_life_duration * 1000,\n                                        progressBar: true\n                                    }\n                                );\n\n                                // Set clipboard eraser\n                                clearClipboardTimeout(\n                                    store.get('teampassSettings').clipboard_life_duration\n                                );\n                            }\n\n                            e.clearSelection();\n                        });\n                    } else if (data.error === 'not_authorized') {\n                        $('#items_folder_path').html('<i class=\"fas fa-folder-open-o\"></i>&nbsp;' + rebuildPath(data.arborescence));\n                    } else {\n                        // Store query results\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.queryUniqueLoad = data.uniqueLoadData;\n                            }\n                        );\n                        if ($('#items_loading_progress').length == 0) {\n                            $('#items_list_loader').after('<span id=\"items_loading_progress\">' + Math.round(data.next_start * 100 / data.counter_full, 0) + '%</span>');\n                        } else {\n                            $('#items_loading_progress').html(Math.round(data.next_start * 100 / data.counter_full, 0) + '%');\n                        }\n                    }\n                    //-----\n                    if (data.array_items !== undefined &&\n                        data.array_items.length === 0 &&\n                        $('#teampass_items_list').html() === ''\n                    ) {\n                        // Show warning to user\n                        $('#info_teampass_items_list')\n                            .html('<div class=\"alert alert-info text-center col col-10\" role=\"alert\">' +\n                                '<i class=\"fas fa-info-circle mr-2\"></i><?php echo langHdl('no_item_to_display'); ?></b>' +\n                                '</div>')\n                            .removeClass('hidden');\n                    }\n\n                    if (data.error === 'is_pf_but_no_saltkey') {\n                        //warn user about his saltkey\n                        toastr.remove();\n                        toastr.warning(\n                            '<?php echo langHdl('home_personal_saltkey_label'); ?>',\n                            '', {\n                                timeOut: 10000\n                            }\n                        );\n                        return false;\n                    } else if (data.error === 'not_authorized' || data.access_level === '') {\n                        // Show warning to user\n                        $('#info_teampass_items_list')\n                            .html('<div class=\"alert alert-info text-center col col-lg-10\" role=\"alert\">' +\n                                '<i class=\"fas fa-warning mr-2\"></i><?php echo langHdl('not_allowed_to_see_pw'); ?></b>' +\n                                '</div>')\n                            .removeClass('hidden');\n\n                    } else if ((store.get('teampassApplication').userIsReadOnly === 1) //&& data.folder_requests_psk == 0\n                        ||\n                        data.access_level === 10\n                    ) {\n                        //readonly user\n                        $('#item_details_no_personal_saltkey, #item_details_nok').addClass('hidden');\n                        $('#item_details_ok, #items_list').removeClass('hidden');\n                        //$('#more_items').remove();\n\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.bypassComplexityOnCreation = parseInt(data.bloquer_creation_complexite);\n                                teampassApplication.bypassComplexityOnEdition = parseInt(data.bloquer_modification_complexite);\n                                //teampassApplication.personalSaltkeyRequired = parseInt(data.saltkey_is_required);\n                            }\n                        );\n\n                        // show items\n                        sList(data.html_json);\n\n                        if (data.list_to_be_continued === 'yes') {\n                            //set next start for query\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.itemsListStart = parseInt(data.next_start);\n                                }\n                            );\n                        } else {\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.itemsListStart = data.list_to_be_continued;\n                                }\n                            );\n                            $('.card-item-category').addClass('hidden');\n                        }\n\n                        proceed_list_update(stop_listing_current_folder);\n                    } else {\n                        //Display items\n                        $('#item_details_no_personal_saltkey, #item_details_nok').addClass('hidden');\n                        $('#item_details_ok, #items_list').removeClass('hidden');\n\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.bypassComplexityOnCreation = parseInt(data.bloquer_creation_complexite);\n                                teampassApplication.bypassComplexityOnEdition = parseInt(data.bloquer_modification_complexite);\n                                //teampassApplication.personalSaltkeyRequired = parseInt(data.saltkey_is_required);\n                            }\n                        );\n\n                        // show items\n                        sList(data.html_json);\n\n                        // Prepare next iteration if needed\n                        if (data.list_to_be_continued === 'yes') {\n                            //set next start for query\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.itemsListStart = parseInt(data.next_start);\n                                }\n                            );\n                        } else {\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.itemsListStart = data.list_to_be_continued;\n                                }\n                            );\n                            $('.card-item-category').addClass('hidden');\n\n                            if (debugJavascript === true) {\n                                console.log('Liste complete des items')\n                                console.log(JSON.parse(store.get('teampassApplication').itemsList));\n                            }\n                        }\n\n                        proceed_list_update(stop_listing_current_folder);\n                    }\n                }\n            );\n        }\n    }\n\n    function sList(listOfItems) {\n        if (debugJavascript === true) {\n            console.log(listOfItems);\n        }\n        var counter = 0,\n            prevIdForNextItem = -1;\n\n        // Manage store\n        if (store.get('teampassApplication').itemsList === '' || store.get('teampassApplication').itemsList === undefined) {\n            var stored_datas = listOfItems;\n        } else {\n            var stored_datas = String(JSON.parse(store.get('teampassApplication').itemsList)).concat(listOfItems);\n        }\n        store.update(\n            'teampassApplication',\n            function(teampassApplication) {\n                teampassApplication.itemsList = JSON.stringify(stored_datas);\n            }\n        );\n        \n        $.each(listOfItems, function(i, value) {\n            var new_line = '',\n                pwd_error = '',\n                icon_all_can_modify = '',\n                icon_cannot_see = '',\n                icon_login = '',\n                icon_link = '',\n                icon_pwd = '',\n                icon_favorite = '',\n                item_flag = '',\n                item_grippy = '',\n                visible_by_user = '';\n\n            counter += 1;\n\n            // ENsure numbers are ints\n            value.anyone_can_modify = parseInt(value.anyone_can_modify);\n            value.canMove = parseInt(value.canMove);\n            value.expired = parseInt(value.expired);\n            value.is_favorite = parseInt(value.is_favorite);\n            value.is_result_of_search = parseInt(value.is_result_of_search);\n            value.item_id = parseInt(value.item_id);\n            value.open_edit = parseInt(value.open_edit);\n            value.rights = parseInt(value.rights);\n            value.tree_id = parseInt(value.tree_id);\n            value.display = parseInt(value.display);\n            value.display_item = parseInt(value.display_item);\n            value.enable_favourites = parseInt(value.enable_favourites);\n\n            // Check access restriction\n            if (value.rights > 0) {\n                // Should I populate previous item with this new id\n                if (debugJavascript === true) {\n                    console.log('current id: '+value.item_id);\n                    console.log(prevIdForNextItem);\n                }\n                if (prevIdForNextItem !== -1) {\n                    $('#list-item-row_' + value.item_id).attr('data-next-item-id', prevIdForNextItem.item_id);\n                    $('#list-item-row_' + value.item_id).attr('data-next-item-label', value.label);\n                }\n                \n                // Prepare anyone can modify icon\n                if (value.anyone_can_modify === 1 || value.open_edit === 1) {\n                    icon_all_can_modify = '<span class=\"fa-stack fa-clickable pointer infotip list-item-clicktoedit mr-2\" title=\"<?php echo langHdl('edit'); ?>\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-pen fa-stack-1x fa-inverse\"></i></span>';\n                }\n\n                // Prepare mini icons\n                if (store.get('teampassSettings') !== undefined && parseInt(store.get('teampassSettings').copy_to_clipboard_small_icons) === 1 &&\n                    value.rights > 10\n                ) {\n                    // Login icon\n                    if (value.login !== '') {\n                        icon_login = '<span class=\"fa-stack fa-clickable fa-clickable-login pointer infotip mr-2\" title=\"<?php echo langHdl('item_menu_copy_login'); ?>\" data-clipboard-text=\"' + sanitizeString(value.login) + '\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-user fa-stack-1x fa-inverse\"></i></span>';\n                    }\n                    // Pwd icon\n                    if (value.pw_status !== 'pw_is_empty' && value.pw_status !== 'encryption_error') {\n                        icon_pwd = '<span class=\"fa-stack fa-clickable fa-clickable-password pointer infotip mr-2\" title=\"<?php echo langHdl('item_menu_copy_pw'); ?>\" data-item-key=\"' + value.item_key + '\" data-item-label=\"' + value.label + '\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-key fa-stack-1x fa-inverse\"></i></span>';\n                    }\n\n                    // Now check if pwd is empty. If it is then warn user\n                    if (value.pw_status === 'pw_is_empty') {\n                        pwd_error = '<span class=\"fa-stack fa-clickable fa-clickable-password pointer infotip mr-2\" title=\"<?php echo langHdl('password_is_empty'); ?>\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-exclamation-triangle text-warning fa-stack-1x fa-inverse\"></i></span>';\n                    }\n                }\n\n                // Link icon\n                if (value.link !== '') {\n                    icon_link = '<span class=\"fa-stack fa-clickable pointer infotip mr-2\" title=\"<?php echo langHdl('open_website'); ?>\"><a href=\"' + sanitizeString(value.link) + '\" target=\"_blank\" class=\"no-link\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-link fa-stack-1x fa-inverse\"></i></a></span>';\n                }\n\n                // Prepare Favorite icon\n                if (store.get('teampassSettings') !== undefined && parseInt(store.get('teampassSettings').enable_favourites) === 1 &&\n                    value.rights > 10\n                ) {\n                    if (value.is_favourited === 1) {\n                        icon_favorite = '<span class=\"fa-stack fa-clickable item-favourite pointer infotip mr-2\" title=\"<?php echo langHdl('unfavorite'); ?>\" data-item-id=\"' + value.item_id + '\" data-item-favourited=\"1\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-star fa-stack-1x fa-inverse text-warning\"></i></span>';\n                    } else {\n                        icon_favorite = '<span class=\"fa-stack fa-clickable item-favourite pointer infotip mr-2\" title=\"<?php echo langHdl('favorite'); ?>\" data-item-id=\"' + value.item_id + '\" data-item-favourited=\"0\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"far fa-star fa-stack-1x fa-inverse\"></i></span>';\n                    }\n                }\n\n                // Prepare Description\n                if (value.desc !== '') {\n                    value.desc = ' <span class=\"text-secondary small\">- ' + value.desc + '</span>';\n                }\n\n                $('#teampass_items_list').append(\n                    '<tr class=\"list-item-row' + (value.canMove === 1 ? ' is-draggable' : '') + '\" id=\"list-item-row_' + value.item_id + '\" data-item-edition=\"' + value.open_edit + '\" data-item-id=\"' + value.item_id + '\" data-item-sk=\"' + value.sk + '\" data-item-expired=\"' + value.expired + '\" data-item-rights=\"' + value.rights + '\" data-item-display=\"' + value.display + '\" data-item-open-edit=\"' + value.open_edit + '\" data-item-tree-id=\"' + value.tree_id + '\" data-is-search-result=\"' + value.is_result_of_search + '\" data-label=\"' + escape(value.label) + '\">' +\n                    '<td class=\"list-item-description\" style=\"width: 100%;\">' +\n                    // Show user a grippy bar to move item\n                    (value.canMove === 1  ? '<i class=\"fas fa-ellipsis-v mr-2 dragndrop\"></i>' : '') + //&& value.is_result_of_search === 0\n                    // Show user a ban icon if expired\n                    (value.expired === 1 ? '<i class=\"far fa-calendar-times mr-2 text-warning infotip\" title=\"<?php echo langHdl('not_allowed_to_see_pw_is_expired'); ?>\"></i>' : '') +\n                    // Show user that Item is not accessible\n                    (value.rights === 10 ? '<i class=\"far fa-eye-slash fa-xs mr-2 text-primary infotip\" title=\"<?php echo langHdl('item_with_restricted_access'); ?>\"></i>' : '') +\n                    // Show user that password is badly encrypted\n                    (value.pw_status === 'encryption_error' ? '<i class=\"fas fa-exclamation-triangle fa-xs text-danger infotip mr-1\" title=\"<?php echo langHdl('pw_encryption_error'); ?>\"></i>' : '') +\n                    // Show item fa_icon if set\n                    (value.fa_icon !== '' ? '<i class=\"'+value.fa_icon+' mr-1\"></i>' : '') +\n                    // Prepare item info\n                    '<span class=\"list-item-clicktoshow' + (value.rights === 10 ? '' : ' pointer') + '\" data-item-id=\"' + value.item_id + '\">' +\n                    '<span class=\"list-item-row-description' + (value.rights === 10 ? ' font-weight-light' : '') + '\">' + value.label + '</span>' + (value.rights === 10 ? '' : value.desc) + '</span>' +\n                    '<span class=\"list-item-actions hidden\">' +\n                    (value.rights === 10 ?\n                        '<span class=\"fa-stack fa-clickable fa-clickable-access-request pointer infotip mr-2\" title=\"<?php echo langHdl('need_access'); ?>\"><i class=\"fas fa-circle fa-stack-2x text-danger\"></i><i class=\"far fa-handshake fa-stack-1x fa-inverse\"></i></span>' :\n                        pwd_error + icon_all_can_modify + icon_login + icon_pwd + icon_link + icon_favorite) +\n                    '</span>' +\n                    (value.folder !== undefined ?\n                        '<br><span class=\"text-secondary small font-italic pointer open-folder\" data-tree-id=\"' +\n                        value.tree_id + '\"\">[' + value.folder + ']</span>' : '') +\n                    '</td>' +\n                    '</tr>'\n                );\n\n                // Save id for usage\n                prevIdForNextItem = {\n                    'item_id' : value.item_id,\n                    'label': value.label,\n                };\n\n                //---------------------\n            }\n        });\n\n        // Sort entries\n        var $tbody = $('#teampass_items_list');\n        $tbody.find('tr').sort(function(a, b) {\n            var tda = $(a).find('.list-item-row-description').text();\n            var tdb = $(b).find('.list-item-row-description').text();\n            // if a < b return 1\n            return tda > tdb ? 1 :\n                tda < tdb ? -1 :\n                0;\n        }).appendTo($tbody);\n\n        // Trick for list with only one entry\n        if (counter === 1) {\n            $('#teampass_items_list')\n                .append('<tr class=\"row\"><td class=\"\">&nbsp;</td></tr>');\n        }\n        adjustElemsSize();\n\n        // Show tooltips\n        $('.infotip').tooltip();\n    }\n\n    $(document).on('click', '.open-folder', function() {\n        if ($(this).data('tree-id') !== undefined) {\n            if (debugJavascript === true) console.log($(this).data('tree-id'))\n\n            // Prepare\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListFolderId = parseInt($(this).data('tree-id'));\n                }\n            );\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.selectedFolder = parseInt($(this).data('tree-id'));\n                }\n            );\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStart = 0;\n                }\n            );\n\n            // Show\n            ListerItems(\n                $(this).data('tree-id'),\n                '',\n                0\n            );\n\n            $('#jstree').jstree('deselect_all');\n            $('#jstree').jstree('select_node', '#li_' + $(this).data('tree-id'));\n        }\n    });\n\n\n    function adjustElemsSize() {\n        // Adjust height of folders tree\n        if ($('#teampass_items_list').height() > (screenHeight - 215)) {\n            $('#jstree').height($('#teampass_items_list').height() + 75);\n        } else {\n            $('#jstree').height($(window).height() - 215);\n        }\n    }\n\n    /**\n     * Builds the HTML path\n     * @param  {[type]} data [description]\n     * @return {[type]}      [description]\n     */\n    function rebuildPath(data) {\n        var new_path = new_path_elem = '';\n        $.each((data), function(i, value) {\n            new_path_elem = '';\n            if (value['visible'] === 1) {\n                new_path_elem = ' class=\"pointer\" onclick=\"ListerItems(' + value['id'] + ', \\'\\', 0)\"';\n            }\n\n            new_path += '<li class=\"breadcrumb-item\" id=\"path_elem_' + value['id'] + '\"' + new_path_elem + '>' + value['title'] + '</li>';\n        });\n\n        return new_path;\n    }\n\n    /**\n\n     */\n    function proceed_list_update(stop_proceeding) {\n        stop_proceeding = stop_proceeding || '';\n\n        if (stop_proceeding === '1' ||\n            (store.get('teampassApplication').itemsListFolderId !== '' &&\n                store.get('teampassApplication').itemsListStart !== 'end')\n        ) {\n            // Clear storage\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStop = 0;\n                }\n            );\n            // Perform listing\n            ListerItems(\n                store.get('teampassApplication').itemsListFolderId,\n                store.get('teampassApplication').itemsListRestricted,\n                store.get('teampassApplication').itemsListStart,\n                store.get('teampassApplication').itemsListStop\n            );\n            return false;\n        }\n\n        if (store.get('teampassApplication').itemsListStart !== 'end') {\n            //Check if nb of items do display > to 0\n            if (store.get('teampassApplication').itemsShownByQuery > 0) {\n                ListerItems(\n                    store.get('teampassApplication').selectedFolder,\n                    '',\n                    store.get('teampassApplication').itemsListStart\n                );\n            }\n        } else {\n            // Show tooltips\n            $('.infotip').tooltip();\n\n            // Update silently the info about the folder\n            refreshFoldersInfo(\n                store.get('teampassApplication').selectedFolder,\n                'update'\n            );\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('data_refreshed'); ?>',\n                '', {\n                    timeOut: 1000\n                }\n            );\n\n            // Do drag'n'drop for the folders\n            prepareFolderDragNDrop();\n        }\n    }\n\n\n    function checkAccess(itemId, treeId, userId)\n    {\n        var data = {\n            'itemId': parseInt(itemId),\n            'treeId': parseInt(treeId),\n            'userId': parseInt(userId),\n        };\n\n        //Send query\n        $.post(\n            'sources/items.queries.php', {\n                type: 'check_current_access_rights',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'show_details_item');\n                requestRunning = true;\n                if (debugJavascript === true) {\n                    console.log(\"DEBUG: checkAccess\");\n                    console.log(data);\n                }\n\n\n                return false;\n            }\n        );\n    }\n\n\n    /**\n     *\n     */\n    function Details(itemDefinition, actionType, hotlink = false) {\n        if (debugJavascript === true) console.info('EXPECTED ACTION on ' + itemDefinition + ' is ' + actionType + ' -- ')\n\n        // Init\n        if (hotlink === false) {\n            var itemId = parseInt($(itemDefinition).data('item-id')) || '';\n            var itemTreeId = parseInt($(itemDefinition).data('item-tree-id')) || '';\n            var itemSk = parseInt($(itemDefinition).data('item-sk')) || 0;\n            var itemExpired = parseInt($(itemDefinition).data('item-expired')) || '';\n            var itemRestricted = parseInt($(itemDefinition).data('item-restricted-id')) || '';\n            var itemDisplay = parseInt($(itemDefinition).data('item-display')) || 0;\n            var itemOpenEdit = parseInt($(itemDefinition).data('item-open-edit')) || 0;\n            var itemReload = parseInt($(itemDefinition).data('item-reload')) || 0;\n            var itemRights = parseInt($(itemDefinition).data('item-rights')) || 10;\n        } else {\n            var itemId = itemDefinition || '';\n            var itemTreeId = store.get('teampassApplication').selectedFolder || '';\n            var itemSk = 0;\n            var itemExpired = '';\n            var itemRestricted = '';\n            var itemDisplay = 1;\n            var itemOpenEdit = 0;\n            var itemReload = 0;\n            var itemRights = parseInt($(itemDefinition).data('item-rights')) || 10;\n        }\n\n        // check if user still has access\n        if (checkAccess(itemId, itemTreeId, <?php echo $_SESSION['user_id']; ?>) === false) {\n            toastr.remove();\n            toastr.warning(\n                '<?php echo langHdl('no_item_to_display'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            // Finished\n            return false;\n        }\n\n        // Store current view\n        savePreviousView();\n        \n        if (debugJavascript === true) console.log(\"Request is running: \" + requestRunning)\n\n        // Store status query running\n        requestRunning = true;\n        userDidAChange = false;\n\n        // Select tab#1\n        $('#form-item-nav-pills li:first-child a').tab('show');\n\n        // Don't show details\n        if (itemDisplay === 'no_display') {\n            // Inform user\n            toastr.remove();\n            toastr.warning(\n                '<?php echo langHdl('no_item_to_display'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            // Clear ongoing request status\n            requestRunning = false;\n\n            // Finished\n            return false;\n        }\n\n        // If opening new item, reinit hidden fields\n        if (store.get('teampassApplication').lastItemSeen !== itemId) {\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.lastItemSeen = parseInt(itemId);\n                }\n            );\n            if (debugJavascript === true) console.log(\"Last seen item \" + store.get('teampassApplication').lastItemSeen)\n        }\n\n        // Prepare data to be sent\n        var data = {\n            'id': parseInt(itemId),\n            'folder_id': parseInt(itemTreeId),\n            'salt_key_required': itemSk,\n            'expired_item': itemExpired,\n            'restricted': itemRestricted,\n            'folder_access_level': store.get('teampassItem').hasAccessLevel,\n            'page': 'items',\n            'rights': itemRights,\n        };\n\n        if (debugJavascript === true) console.log(\"SEND\");\n        if (debugJavascript === true) console.log(data);\n\n        //Send query\n        $.post(\n            'sources/items.queries.php', {\n                type: 'show_details_item',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'show_details_item');\n                requestRunning = true;\n                if (debugJavascript === true) {\n                    console.log(\"RECEIVED object details\");\n                    console.log(data);\n                }\n\n                // Store not a new item\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.isNewItem = 0\n                    }\n                );\n\n                // remove any track-change class on item form\n                //$('.form-item-control').removeClass('track-change');\n\n                if (data.error === true) {\n                    toastr.remove();\n                    requestRunning = false;\n\n                    // Manage personal items key error\n                    if (data.error_type !== 'undefined' && data.error_type === 'private_items_to_encrypt') {\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n\n                        store.update(\n                            'teampassUser', {},\n                            function(teampassUser) {\n                                teampassUser.special = 'private_items_to_encrypt';\n                            }\n                        );\n                        document.location.href = \"index.php?page=items\";\n                    } else if (data.error_type !== 'undefined' && data.error_type === 'user_should_reencrypt_private_key' && store.get('teampassUser').temporary_code === '') {\n                        // we have to ask the user to re-encrypt his privatekey\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 10000,\n                                progressBar: true\n                            }\n                        );\n                        \n                        if (debugJavascript === true) console.log('LDAP user password has to encrypt his private key with hos new LDAP password')\n                        // HIde\n                        $('.content-header, .content').addClass('hidden');\n\n                        // Show passwords inputs and form\n                        $('#dialog-ldap-user-change-password-info')\n                            .html('<i class=\"icon fas fa-info mr-2\"></i><?php echo langHdl('ldap_user_has_changed_his_password');?>')\n                            .removeClass('hidden');\n                        $('#dialog-ldap-user-change-password').removeClass('hidden');\n                    }\n\n\n                    return false;\n                } else if ((data.user_can_modify === 0 && actionType === 'edit') ||\n                    parseInt(data.show_details) === 0\n                ) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('error_not_allowed_to'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    requestRunning = false;\n                    return false;\n                }\n\n\n                // Store scroll position\n                userScrollPosition = $(window).scrollTop();\n\n                // Scroll to top\n                $(window).scrollTop(0);\n\n                // SHould we show?\n                if (parseInt(data.show_detail_option) === 1 || itemExpired === 1) {\n                    // SHow expiration alert\n                    $('#card-item-expired').removeClass('hidden');\n                } else if (parseInt(data.show_detail_option) === 2) {\n                    // Don't show anything\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('not_allowed_to_see_pw'); ?>',\n                        '<?php echo langHdl('warning'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    return false;\n                }\n\n                // Show header info\n                $('#card-item-visibility').html(store.get('teampassItem').itemVisibility);\n                $('#card-item-minimum-complexity').html(store.get('teampassItem').itemMinimumComplexity);\n\n                // Hide NEW button in case access_level < 30\n                if (store.get('teampassItem').hasAccessLevel === 10) {\n                    $('#item-form-new-button').addClass('hidden');\n                } else {\n                    $('#item-form-new-button').removeClass('hidden');\n                }\n\n                // Uncrypt the pwd\n                if (data.pw !== undefined) {\n                    data.pw = atob(data.pw).utf8Decode();\n                }\n\n                // Update hidden variables\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.id = parseInt(data.id),\n                            teampassItem.timestamp = data.timestamp,\n                            teampassItem.user_can_modify = data.user_can_modify,\n                            teampassItem.anyone_can_modify = data.anyone_can_modify,\n                            teampassItem.edit_item_salt_key = data.edit_item_salt_key,\n                            teampassItem.id_restricted_to = data.id_restricted_to,\n                            teampassItem.id_restricted_to_roles = data.id_restricted_to_roles,\n                            teampassItem.item_rights = itemRights\n                    }\n                );\n\n                // Prepare forms\n                $('#folders-tree-card, .columns-position').addClass('hidden');\n                if (actionType === 'show') {\n                    // Prepare Views\n                    $('.item-details-card, #item-details-card-categories').removeClass('hidden');\n                    $('.form-item').addClass('hidden');\n\n                    $('#form-item-suggestion-password').focus();\n                    // If Description empty then remove it\n                    if (data.description === '<p>&nbsp;</p>') {\n                        $('#card-item-description')\n                            .parents('.item-details-card')\n                            .addClass('hidden');\n                    } else {\n                        $('#card-item-description')\n                            .parents('.item-details-card')\n                            .removeClass('hidden');\n                    }\n                } else {\n                    $('.form-item').removeClass('hidden');\n                    $('.item-details-card, #item-details-card-categories').addClass('hidden');\n                }\n                $('#pwd-definition-size').val(data.pw.length);\n\n                // Prepare card\n                const itemIcon = (data.fa_icon !== \"\") ? '<i class=\"'+data.fa_icon+' mr-1\"></i>' : '';\n                $('#card-item-label, #form-item-title').html(itemIcon + data.label);\n                $('#form-item-label, #form-item-suggestion-label').val(data.label);\n                $('#card-item-description, #form-item-suggestion-description').html(data.description);\n                if (data.description === '') {\n                    $('#card-item-description').addClass('hidden');\n                } else {\n                    $('#card-item-description').removeClass('hidden');\n                }\n                $('#card-item-pwd').html('<?php echo $var['hidden_asterisk']; ?>');\n                $('#hidden-item-pwd, #form-item-suggestion-password').val(data.pw);\n                $('#form-item-password, #form-item-password-confirmation, #form-item-server-old-password').val(data.pw);\n                $('#card-item-login').html(data.login);\n                $('#form-item-login, #form-item-suggestion-login, #form-item-server-login').val(data.login);\n\n                $('#card-item-email').text(data.email);\n                $('#form-item-email, #form-item-suggestion-email').val(data.email);\n                $('#card-item-url').html(data.url);\n                $('#form-item-url, #form-item-suggestion-url').val($(data.url).text());\n                $('#form-item-restrictedToUsers').val(JSON.stringify(data.id_restricted_to));\n                $('#form-item-restrictedToRoles').val(JSON.stringify(data.id_restricted_to_roles));\n                $('#form-item-folder').val(data.folder);\n                $('#form-item-tags').val(data.tags.join(' '));\n                $('#form-item-icon').val(data.fa_icon);\n                $('#form-item-icon-show').html(itemIcon);\n\n                $('#form-item-password').pwstrength(\"forceUpdate\");\n                $('#form-item-label').focus();\n\n                // Editor for description field\n                if (debugJavascript === true) {console.log('>>>> create summernote');}\n                $('#form-item-description')\n                    .html(data.description)\n                    .summernote({\n                        toolbar: [\n                            ['style', ['style']],\n                            ['font', ['bold', 'italic', 'underline', 'strikethrough', 'clear']],\n                            ['fontsize', ['fontsize']],\n                            ['color', ['color']],\n                            ['para', ['ul', 'ol', 'paragraph']],\n                            ['insert', ['link', 'picture']],\n                            //['height', ['height']],\n                            ['view', ['codeview']]\n                        ],\n                        codeviewFilter: true,\n                        codeviewIframeFilter: true,\n                        callbacks: {\n                            onChange: function(contents, $editable) {\n                                if (debugJavascript === true) console.log('Editor onChange:' + userDidAChange + \" - \" + requestRunning);\n                                if (userDidAChange === false && requestRunning === false) {\n                                    if (debugJavascript === true) console.log('onChange:', contents, $editable);\n                                    userDidAChange = true;\n                                    if (debugJavascript === true) console.log('User did a change on #form-item-description > ' + userDidAChange);\n                                    //$('#form-item-description').attr('data-change-ongoing', true);;\n                                }\n                            }\n                        }\n                    })\n                //.summernote('editor.insertText', data.description);\n\n                $('#form-item-suggestion-description')\n                    .html(data.description)\n                    .summernote({\n                        toolbar: [\n                            ['style', ['style']],\n                            ['font', ['bold', 'italic', 'underline', 'strikethrough', 'clear']],\n                            ['fontsize', ['fontsize']],\n                            ['color', ['color']],\n                            ['para', ['ul', 'ol', 'paragraph']],\n                            ['insert', ['link', 'picture']],\n                            //['height', ['height']],\n                            ['view', ['codeview']]\n                        ],\n                        codeviewFilter: true,\n                        codeviewIframeFilter: true,\n                        callbacks: {\n                            onChange: function(contents, $editable) {\n                                if (userDidAChange === false && requestRunning === false) {\n                                    if (debugJavascript === true) console.log('onChange:', contents, $editable);\n                                    userDidAChange = true;\n                                    if (debugJavascript === true) console.log('User did a change on #form-item-suggestion-description > ' + userDidAChange);\n                                    //$('#form-item-suggestion-description').attr('data-change-ongoing', true);;\n                                }\n                            }\n                        }\n                    });\n\n\n                //prepare nice list of users / groups\n                var html_users = '',\n                    html_groups = '',\n                    html_tags = '',\n                    html_kbs = '';\n\n                $(data.tags).each(function(index, value) {\n                    html_tags += '<span class=\"badge badge-success pointer tip mr-2\" title=\"<?php echo langHdl('list_items_with_tag'); ?>\" onclick=\"searchItemsWithTags(\\'' + value + '\\')\"><i class=\"fas fa-tag fa-sm\"></i>&nbsp;<span class=\"item_tag\">' + value + '</span></span>';\n                });\n                if (html_tags === '') {\n                    $('#card-item-tags').html('<?php echo langHdl('none'); ?>');\n                } else {\n                    $('#card-item-tags').html(html_tags);\n                }\n\n                $(data.links_to_kbs).each(function(index, value) {\n                    html_kbs += '<a class=\"badge badge-primary pointer tip mr-2\" href=\"<?php echo $SETTINGS['cpassman_url']; ?>/index.php?page=kb&id=' + value['id'] + '\"><i class=\"fas fa-map-pin fa-sm\"></i>&nbsp;' + value['label'] + '</a>';\n\n                });\n                if (html_kbs === '') {\n                    $('#card-item-kbs').html('<?php echo langHdl('none'); ?>');\n                } else {\n                    $('#card-item-kbs').html(html_kbs);\n                }\n\n\n                // Manage CATEGORIES / CUSTOM FIELDS\n                if (data.categories.length === 0) {\n                    $('.card-item-category, .card-item-field, .form-item-category, #item-details-card-categories')\n                        .addClass('hidden');\n                    $('.no-item-fields').removeClass('hidden');\n                    $('#card-item-fields').closest().addClass('collapsed');\n                } else {\n                    // \n                    if (data.template_id === '') {\n                        $('#list-group-item-main')\n                            .children('.list-group')\n                            .removeClass('hidden');\n                        $('#card-item-category').removeClass('hidden');\n                    }\n\n                    if (data.fields.length === 0) {\n                        if (actionType === 'show') {\n                            $('#item-details-card-categories').addClass('hidden');\n                            // Refresh last item seen\n                            refreshListLastSeenItems();\n                        } else {\n                            // Show the inputs for EDITION\n                            $(data.categories).each(function(index, category) {\n                                $('#form-item-field, #form-item-category-' + category).removeClass('hidden');\n                            });\n                        }\n                    } else {\n                        // Show expected categories\n                        $('.no-item-fields, .form-item-category').addClass('hidden');\n\n                        // In edition mode, show all fields in expected Categories\n                        $(data.categories).each(function(index, category) {\n                            $('#form-item-field, #form-item-category-' + category).removeClass('hidden');\n                        });\n\n                        // Now show expected fields and values\n                        $(data.fields).each(function(index, field) {\n                            // Show cateogry\n                            $('#card-item-category-' + field.parent_id).removeClass('hidden');\n\n                            // Is data encrypted\n                            // Then base64 decode is required\n                            if (field.encrypted === 1) {\n                                field.value = atob(field.value);\n                            }\n\n                            // Show field\n                            if (field.masked === 1) {\n                                // Item card\n                                $('#card-item-field-' + field.id)\n                                    .removeClass('hidden')\n                                    .children(\".card-item-field-value\")\n                                    .html(\n                                        '<span data-field-id=\"' + field.id + '\" class=\"pointer replace-asterisk\"><?php echo $var['hidden_asterisk']; ?></span>' +\n                                        '<input type=\"text\" style=\"width:0px; height:0px; border:0px;\" id=\"hidden-card-item-field-value-' + field.id + '\" value=\"' + (field.value) + '\">'\n                                    )\n                                $('#card-item-field-' + field.id)\n                                    .children(\".btn-copy-clipboard-clear\")\n                                    .attr('data-clipboard-target', '#hidden-card-item-field-value-' + field.id);\n                            } else {\n                                // Show Field\n                                $('#card-item-field-' + field.id)\n                                    .removeClass('hidden')\n                                    .children(\".card-item-field-value\")\n                                    .html(field.value);\n                            }\n                            // Item edit form\n                            $('#form-item-field-' + field.id)\n                                .children(\".form-item-field-custom\")\n                                .val(field.value);\n                        });\n\n                        // Manage template to show\n                        if (data.template_id !== '' && $.inArray(data.template_id, data.categories) > -1) {\n                            // Tick the box in edit mode\n                            $('#template_' + data.template_id).iCheck('check');\n\n                            // Hide existing data as replaced by Category template                                \n                            $('#list-group-item-main, #item-details-card-categories')\n                                .children('.list-group')\n                                .addClass('hidden');\n\n                            // Move the template in place of item main  \n                            $('#card-item-category-' + data.template_id)\n                                .addClass('fields-to-move')\n                                .detach()\n                                .appendTo('#list-group-item-main');\n\n                            // If only one category of Custom Fields\n                            // Then hide the CustomFields div\n                            if (actionType === 'show') {\n                                if (data.categories.length === 1) {\n                                    $('#item-details-card-categories').addClass('hidden');\n                                } else {\n                                    $('#item-details-card-categories').removeClass('hidden');\n                                }\n                            }\n                        }\n                    }\n                }\n\n\n                // Waiting\n                $('#card-item-attachments').html(\"<?php echo langHdl('please_wait'); ?>\");\n\n                // Manage clipboard for link\n                if (clipboardForLink) clipboardForLink.destroy();\n                clipboardForLink = new ClipboardJS(\n                    '#get_item_link',\n                    {\n                        text: function(e) {\n                            return (\"<?php echo $SETTINGS['cpassman_url'];?>/index.php?page=items&group=\"+store.get('teampassItem').folderId+\"&id=\"+store.get('teampassItem').id);\n                        }\n                    })\n                    .on('success', function(e) {\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('copy_to_clipboard'); ?>',\n                            '', {\n                                timeOut: 2000,\n                                progressBar: true,\n                                positionClass: 'toast-top-right'\n                            }\n                        );\n                        e.clearSelection();\n                    });\n\n                // Manage clipboard button\n                if (itemClipboard) itemClipboard.destroy();\n                itemClipboard = new ClipboardJS('.btn-copy-clipboard-clear', {\n                    text: function(e) {\n                        return ($($(e).data('clipboard-target')).val());\n                    }\n                })\n                .on('success', function(e) {\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('copy_to_clipboard'); ?>',\n                        '', {\n                            timeOut: 2000,\n                            progressBar: true,\n                            positionClass: 'toast-top-right'\n                        }\n                    );\n                    e.clearSelection();\n                });\n\n                // Prepare clipboard - COPY LOGIN\n                if (data.login !== '') {\n                    $('#card-item-login-btn').removeClass('hidden');\n                } else {\n                    $('#card-item-login-btn').addClass('hidden');\n                }\n\n                // Prepare clipboard - COPY PASSWORD\n                if (data.pw !== '') {\n                    new ClipboardJS('#card-item-pwd-button', {\n                            text: function() {\n                                return (data.pw);\n                            }\n                        })\n                        .on('success', function(e) {\n                            itemLog(\n                                'at_password_copied',\n                                e.trigger.dataset.clipboardId,\n                                $('#card-item-label').text()\n                            );\n\n                            // Warn user about clipboard clear\n                            if (store.get('teampassSettings').clipboard_life_duration === undefined || parseInt(store.get('teampassSettings').clipboard_life_duration) === 0) {\n                                toastr.remove();\n                                toastr.info(\n                                    '<?php echo langHdl('copy_to_clipboard'); ?>',\n                                    '', {\n                                        timeOut: 2000,\n                                        positionClass: 'toast-top-right',\n                                        progressBar: true\n                                    }\n                                );\n                            } else {\n                                toastr.warning(\n                                    '<?php echo langHdl('clipboard_will_be_cleared'); ?>',\n                                    '', {\n                                        timeOut: store.get('teampassSettings').clipboard_life_duration * 1000,\n                                        progressBar: true\n                                    }\n                                );\n\n                                // Set clipboard eraser\n                                clearClipboardTimeout(\n                                    store.get('teampassSettings').clipboard_life_duration\n                                );\n                            }\n\n                            e.clearSelection();\n                        });\n                    $('#card-item-pwd-button').removeClass('hidden');\n                } else {\n                    $('#card-item-pwd-button').addClass('hidden');\n                }\n\n                // Prepare clipboard - COPY EMAIL\n                if (data.email !== '') {\n                    $('#card-item-email-btn').removeClass('hidden');\n                } else {\n                    $('#card-item-email-btn').addClass('hidden');\n                }\n\n                // Prepare auto_update info\n                $('#card-item-misc').html('');\n                if (parseInt(data.auto_update_pwd_frequency) !== '0') {\n                    $('#card-item-misc')\n                        .append('<span class=\"fas fa-shield infotip mr-4\" title=\"<?php echo langHdl('auto_update_enabled'); ?>&nbsp;' + data.auto_update_pwd_frequency + '\"></span>');\n                }\n\n                // Show Notification engaged\n                if (data.notification_status === true) {\n                    $('#card-item-misc')\n                        .append('<span class=\"mr-4 icon-badge\" id=\"card-item-misc-notification\"><span class=\"far fa-bell infotip text-success\" title=\"<?php echo langHdl('notification_engaged'); ?>\"></span></span>');\n                } else {\n                    $('#card-item-misc')\n                        .append('<span class=\"mr-4 icon-badge\" id=\"card-item-misc-notification\"><span class=\"far fa-bell-slash infotip text-warning\" title=\"<?php echo langHdl('notification_not_engaged'); ?>\"></span></span>');\n                }\n\n                // Prepare counter\n                $('#card-item-misc')\n                    .append('<span class=\"icon-badge mr-4\"><span class=\"far fa-eye infotip\" title=\"<?php echo langHdl('viewed_number'); ?>\"></span><span class=\"badge badge-info icon-badge-text icon-badge-far\">' + data.viewed_no + '</span></span>');\n\n                // Delete after X views\n                if (data.to_be_deleted !== '') {\n                    if (parseInt(data.to_be_deleted_type) === 1) {\n                        $('#form-item-deleteAfterShown').val(data.to_be_deleted);\n                        $('#form-item-deleteAfterDate').val('');\n                    } else {\n                        $('#form-item-deleteAfterShown').val('');\n                        $('#form-item-deleteAfterDate').val(data.to_be_deleted);\n                    }\n                    // Show icon\n                    $('#card-item-misc')\n                        .append('<span class=\"icon-badge mr-5\"><span class=\"far fa-trash-alt infotip\" title=\"<?php echo langHdl('automatic_deletion_engaged'); ?>\"></span><span class=\"badge badge-danger icon-badge-text-bottom-right\">' + data.to_be_deleted + '</span></span>');\n                }\n\n                // reset password shown info\n                $('#card-item-pwd').removeClass('pwd-shown');\n\n                //Anyone can modify button\n                if (parseInt(data.anyone_can_modify) === 1) {\n                    $('#form-item-anyoneCanModify').iCheck('check');\n                } else {\n                    $('#form-item-anyoneCanModify').iCheck('uncheck');\n                }\n\n                if (parseInt(data.show_details) === 1 && parseInt(data.show_detail_option) !== 2) {\n                    // continue loading data\n                    showDetailsStep2(itemId, actionType);\n                } else if (parseInt(data.show_details) === 1 && parseInt(data.show_detail_option) === 2) {\n                    $('#item_details_nok').addClass('hidden');\n                    $('#item_details_ok').addClass('hidden');\n                    $('#item_details_expired_full').show();\n                    $('#menu_button_edit_item, #menu_button_del_item, #menu_button_copy_item, #menu_button_add_fav, #menu_button_del_fav, #menu_button_show_pw, #menu_button_copy_pw, #menu_button_copy_login, #menu_button_copy_link').attr('disabled', 'disabled');\n                    $('#div_loading').addClass('hidden');\n                } else {\n                    //Dont show details\n                    $('#item_details_nok').removeClass('hidden');\n                    $('#item_details_nok_restriction_list').html('<div style=\"margin:10px 0 0 20px;\"><b><?php echo langHdl('author'); ?>: </b>' + data.author + '<br /><b><?php echo langHdl('restricted_to'); ?>: </b>' + data.restricted_to + '<br /><br /><u><a href=\"#\" onclick=\"openReasonToAccess()\"><?php echo langHdl('request_access_ot_item'); ?></a></u></div>');\n\n                    $('#reason_to_access').remove();\n                    $('#item_details_nok')\n                        .append('<input type=\"hidden\" id=\"reason_to_access\" value=\"' + data.id + ',' + data.id_user + '\">');\n\n                    // Protect\n                    $('#item_details_ok').addClass('hidden');\n                    $('#item_details_expired').addClass('hidden');\n                    $('#item_details_expired_full').addClass('hidden');\n                    $('#menu_button_edit_item, #menu_button_del_item, #menu_button_copy_item, #menu_button_add_fav, #menu_button_del_fav, #menu_button_show_pw, #menu_button_copy_pw, #menu_button_copy_login, #menu_button_copy_link').attr('disabled', 'disabled');\n                    $('#div_loading').addClass('hidden');\n                }\n\n                // Prepare bottom buttons\n                if ($('#list-item-row_'+data.id).prev('.list-item-row').attr('data-item-id') !== undefined) {\n                    $('.but-prev-item')\n                        .html('<i class=\"fas fa-arrow-left mr-2\"></i>' + unescape($('#list-item-row_'+data.id).prev('.list-item-row').attr('data-label')))\n                        .attr('data-prev-item-id', $('#list-item-row_'+data.id).prev('.list-item-row').attr('data-item-id'))\n                        .removeClass('hidden');\n                }\n                if ($('#list-item-row_'+data.id).next('.list-item-row').attr('data-item-id') !== undefined) {\n                    $('.but-next-item')\n                        .html('<i class=\"fas fa-arrow-right mr-2\"></i>' + unescape($('#list-item-row_'+data.id).next('.list-item-row').attr('data-label')))\n                        .attr('data-next-item-id', $('#list-item-row_'+data.id).next('.list-item-row').attr('data-item-id'))\n                        .removeClass('hidden');\n                }\n                if (debugJavascript === true) {\n                    console.log(\"PREV: \" + $('#list-item-row_'+data.id).prev('.list-item-row').attr('data-item-id') + \" - NEXT: \" + $('#list-item-row_'+data.id).next('.list-item-row').attr('data-item-id'));\n                }\n\n                // Inform user\n                toastr.remove();\n                toastr.info(\n                    '<?php echo langHdl('done'); ?>',\n                    '', {\n                        timeOut: 1000\n                    }\n                );\n\n                return true;\n            }\n        );\n    }\n\n\n    /*\n     * Loading Item details step 2\n     */\n    function showDetailsStep2(id, actionType) {\n        requestRunning = true;\n        $.post(\n            'sources/items.queries.php', {\n                type: 'showDetailsStep2',\n                id: id,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'showDetailsStep2');\n\n                if (debugJavascript === true) {\n                    console.log('RECEIVED STEP2 - used key: <?php echo $_SESSION['key']; ?>');\n                    console.log(data);\n                }\n\n                // Attachments\n                if (data !== false) {\n                    if (data.attachments.length === 0) {\n                        $('#card-item-attachments-badge').html('<?php echo langHdl('none'); ?>');\n                        $('#card-item-attachments')\n                            .html('<?php echo langHdl('no_attachment'); ?>')\n                            .parent()\n                            .addClass('collapsed');\n                    } else {\n                        var html = '',\n                            htmlFull = '',\n                            counter = 1,\n                            nbFiles = 0;\n                        $.each(data.attachments, function(i, value) {\n                            // Manage new row\n                            if (counter === 1) {\n                                htmlFull += '<div class=\"row\">';\n                                html += '<div class=\"row\">';\n                            }\n\n                            html += '<div class=\"col-6\">' +\n                                '<div class=\"callout callout-info\">' +\n                                '<i class=\"' + value.icon + ' mr-2 text-info\"></i>';\n\n                            // Show VIEW image icon\n                            if (value.is_image === 1) {\n                                html +=\n                                    '<i class=\"fas fa-eye infotip preview-image pointer mr-2\" ' +\n                                    'title=\"<?php echo langHdl('see'); ?>\" ' +\n                                    'data-file-id=\"' + value.id + '\" data-file-title=\"' +\n                                    (isBase64(value.filename) === true ? atob(value.filename) : value.filename) + '\"></i>';\n                            }\n\n                            // Show DOWNLOAD icon\n                            downloadIcon =\n                                '<a class=\"text-secondary infotip mr-2\" href=\"sources/downloadFile.php?name=' + encodeURI(value.filename) + '&key=<?php echo $_SESSION['key']; ?>&key_tmp=' + value.key + '&fileid=' + value.id + '\" title=\"<?php echo langHdl('download'); ?>\">' +\n                                '<i class=\"fas fa-file-download\"></i></a>';\n                            html += downloadIcon;\n\n                            // Show other info\n                            html +=\n                                '<span class=\"font-weight-bold mr-3\">' +\n                                (isBase64(value.filename) === true ? atob(value.filename) : value.filename) + '</span>' +\n                                '<span class=\"mr-2 font-weight-light\">(' + value.extension + ')</span>' +\n                                '<span class=\"font-italic\">' + value.size + '</span>' +\n                                '</div></div>';\n\n                            htmlFull += '<div class=\"col-6 edit-attachment-div\"><div class=\"info-box bg-secondary-gradient\">' +\n                                '<span class=\"info-box-icon bg-info\"><i class=\"' + value.icon + '\"></i></span>' +\n                                '<div class=\"info-box-content\"><span class=\"info-box-text\">' +\n                                (isBase64(value.filename) === true ? atob(value.filename) : value.filename) + '.' + value.extension + '</span>' +\n                                '<span class=\"info-box-text\">' + downloadIcon +'</span>' +\n                                '<span class=\"info-box-text\"><i class=\"fas fa-trash pointer delete-file\" data-file-id=\"' + value.id + '\"></i></span></div>' +\n                                '</div></div>';\n\n                            if (counter === 2) {\n                                htmlFull += '</div>';\n                                html += '</div>';\n                                counter = 1;\n                            } else {\n                                counter += 1;\n                            }\n                            nbFiles += 1;\n                        });\n                        $('#card-item-attachments').html(html);\n                        $('#card-item-attachments-badge').html(nbFiles);\n                        $('#form-item-attachments').html(htmlFull);\n                        $('#form-item-attachments-zone').removeClass('hidden');\n                    }\n                }\n                // Hide loading state\n                $('#card-item-attachments').nextAll().addClass('hidden');\n\n                // Show restrictions with Badges\n                var html_restrictions = '';\n                $.each(store.get('teampassItem').id_restricted_to, function(i, value) {\n                    html_restrictions +=\n                        '<span class=\"badge badge-info mr-2 mb-1\"><i class=\"fas fa-group fa-sm mr-1\"></i>' +\n                        data.users_list.find(x => x.id === parseInt(value)).name + '</span>';\n                });\n                $.each(store.get('teampassItem').id_restricted_to_roles, function(i, value) {\n                    html_restrictions +=\n                        '<span class=\"badge badge-info mr-2 mb-1\"><i class=\"fas fa-group fa-sm mr-1\"></i>' +\n                        data.roles_list.find(x => x.id === parseInt(value)).title + '</span>';\n                });\n                if (html_restrictions === '') {\n                    $('#card-item-restrictedto').html('<?php echo langHdl('no_special_restriction'); ?>');\n                } else {\n                    $('#card-item-restrictedto').html(html_restrictions);\n                }\n\n\n                $('#edit_past_pwds').attr('title', (data.history_of_pwds)); //htmlspecialchars_decode \n                $('#edit_past_pwds_div').html((data.history_of_pwds)); //htmlspecialchars_decode \n\n                //$('#id_files').html(data.files_id);\n                //$('#hid_files').val(data.files_id);\n                //$('#item_edit_list_files').html(data.files_edit);\n\n                //$('#index-last-pwds').html(htmlspecialchars_decode(data.div_last_items));\n\n                // function calling image lightbox when clicking on link\n                $('a.image_dialog').click(function(event) {\n                    event.preventDefault();\n                    PreviewImage($(this).attr('href'), $(this).attr('title'));\n                });\n\n\n                // set indicator if item has change proposal\n                if (parseInt(data.has_change_proposal) > 0) {\n                    $('#item_extra_info').prepend('<i class=\"fas fa-lightbulb-o fa-sm mi-yellow tip\" title=\"<?php echo langHdl('item_has_change_proposal'); ?>\"></i>&nbsp;');\n                }\n\n\n                $('.infotip').tooltip();\n\n                // Now load History\n                if (actionType === 'show') {\n                    $.post(\n                        \"sources/items.queries.php\", {\n                            type: \"load_item_history\",\n                            item_id: store.get('teampassItem').id,\n                            key: \"<?php echo $_SESSION['key']; ?>\"\n                        },\n                        function(data) {\n                            //decrypt data\n                            data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'load_item_history');\n                            if (debugJavascript === true) {\n                                console.info('History:');\n                                console.log(data);\n                            }\n                            if (data.error === '') {\n                                var html = '',\n                                    nbHistoryEvents = 0;\n                                $.each(data.history, function(i, value) {\n                                    html += '<div class=\"direct-chat-msg\"><div class=\"direct-chat-info clearfix\">' +\n                                        '<span class=\"direct-chat-name float-left\">' + value.name + '</span>' +\n                                        '<span class=\"direct-chat-timestamp float-right\">' + value.date + '</span>' +\n                                        '</div>' +\n                                        '<img class=\"direct-chat-img\" src=\"' + value.avatar + '\" alt=\"Message User Image\">' +\n                                        '<div class=\"direct-chat-text\"><span class=\"text-capitalize\">' +\n                                        (value.action === '' ? '' : (value.action)) + '</span> ' +\n                                        (value.detail === '' ? '' : (' | ' + value.detail)) + '</div></div>';\n                                    nbHistoryEvents += 1;\n                                });\n                                // Display\n                                $('#card-item-history').html(html);\n                                $('#card-item-history-badge').html(nbHistoryEvents);\n                            }\n\n                            // Collapse History\n                            $('#card-item-history').closest().addClass('collapsed');\n\n                            // Hide loading state\n                            $('#card-item-history').nextAll().addClass('hidden');\n                        }\n                    );\n                } else if (actionType === 'edit') {\n                    getPrivilegesOnItem(\n                        selectedFolderId,\n                        0\n                    );\n                }\n\n                // Prepare Select2 inputs\n                $('.select2').select2({\n                    language: '<?php echo isset($_SESSION['user_language_code']) === true ? $_SESSION['user_language_code'] : 'en'; ?>'\n                });\n\n                // Prepare datePicker\n                $('#form-item-deleteAfterDate, .datepicker').datepicker({\n                    format: '<?php echo str_replace(['Y', 'M'], ['yyyy', 'mm'], $SETTINGS['date_format']); ?>',\n                    todayHighlight: true,\n                    todayBtn: true,\n                    language: '<?php echo isset($_SESSION['user_language_code']) === true ? $_SESSION['user_language_code'] : 'en'; ?>'\n                });\n\n                // Prepare Date range picker with time picker\n                $('.timepicker').timepicker({\n                    minuteStep: 5,\n                    template: false,\n                    showSeconds: true,\n                    showMeridian: false,\n                    showInputs: false,\n                    explicitMode: true\n                });\n\n                // Delete inputs related files uploaded but not confirmed\n                var data = {\n                    'item_id': store.get('teampassItem').id,\n                }\n\n                $.post(\n                    \"sources/items.queries.php\", {\n                        type: 'delete_uploaded_files_but_not_saved',\n                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function (data) {\n                        /*// add track-change class on item form\n                        setTimeout(\n                            $('#form-item-label, #form-item-description, #form-item-login, #form-item-password, #form-item-email, #form-item-url, #form-item-folder, #form-item-restrictedto, #form-item-tags, #form-item-anyoneCanModify, #form-item-deleteAfterShown, #form-item-deleteAfterDate, #form-item-anounce, .form-item-field-custom').addClass('track-change'),\n                            2000\n                        );*/\n\n                        requestRunning = false;\n                    }\n                );\n            }\n        );\n    };\n\n    // Clear history form\n    $(document)\n        .on('click', '#form-item-history-clear', function() {\n            $('.history').val('');\n        })\n        .on('click', '#form-item-history-insert', function() {\n            if ($('#form-item-history-label').val() === '' ||\n                $('#form-item-history-date').val() === '' ||\n                $('#form-item-history-time').val() === ''\n            ) {\n                // Inform user\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('all_fields_mandatory'); ?>',\n                    '<?php echo langHdl('warning'); ?>', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Insert new entry\n            var data = {\n                'item_id': store.get('teampassItem').id,\n                'label': DOMPurify.sanitize($('#form-item-history-label').val()),\n                'date': DOMPurify.sanitize($('#form-item-history-date').val()),\n                'time': DOMPurify.sanitize($('#form-item-history-time').val()),\n            }\n            $.post(\n                \"sources/items.queries.php\", {\n                    type: 'history_entry_add',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'history_entry_add');\n                    if (debugJavascript === true) console.log(data);\n                    $('.history').val('');\n\n                    // Inform user\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            );\n        })\n        .on('click', '.nav-link', function() {\n            if ($(this).attr('href') === '#tab_5') {\n                $('#form-item-buttons').addClass('hidden');\n            } else {\n                $('#form-item-buttons').removeClass('hidden');\n            }\n\n        });\n\n    // When click on Trash attachment icon\n    $(document).on('click', '.delete-file', function() {\n        var thisButton = $(this),\n            thisFileId = thisButton.data('file-id');\n\n        if (thisFileId !== undefined && thisFileId !== '') {\n            // Delete the file\n            var data = {\n                'file_id': thisFileId,\n            };\n\n            $.post(\n                'sources/items.queries.php', {\n                    type: 'delete_attached_file',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'delete_attached_file');\n                    if (debugJavascript === true) console.log(data);\n\n                    //check if format error\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Remove the file in UI\n                        thisButton.closest('.edit-attachment-div').remove();\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n        }\n    });\n\n    //calling image lightbox when clicking on link\n    $(document).on('click', '.preview-image', function(event) {\n        event.preventDefault();\n        PreviewImage($(this).data('file-id'));\n    });\n\n    PreviewImage = function(fileId) {\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('loading_image'); ?>...<i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-2\"></i>'\n        );\n\n        $.post(\n            \"sources/items.queries.php\", {\n                type: \"image_preview_preparation\",\n                id: fileId,\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //decrypt data\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'image_preview_preparation');\n                //if (debugJavascript === true) console.log(data);\n\n                //check if format error\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $(\"#card-item-preview\").html('<img id=\"image_files\" src=\"\">');\n                    //Get the HTML Elements\n                    imageDialog = $(\"#card-item-preview\");\n                    imageTag = $('#image_files');\n\n                    //Set the image src\n                    imageTag.attr(\"src\", \"data:\" + data.file_type + \";base64,\" + data.file_content);\n                    imageTag.attr(\"class\", \"img-fluid\");\n\n                    //When the image has loaded, display the dialog\n                    showModalDialogBox(\n                        '#warningModal',\n                        data.filename,\n                        $(imageDialog).html(),\n                        '',\n                        'Close',\n                        'modal-xl'\n                    );\n\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n\n                    /*\n                                        var pre = document.createElement('pre');\n                                        pre.style.textAlign = \"center\";\n                                        $(pre).append($(imageDialog).html());\n                                        alertify\n                                            .alert(pre)\n                                            .set({\n                                                label: '<?php echo langHdl('close'); ?>',\n                                                closable: false,\n                                                padding: false,\n                                                title: data.filename,\n                                                resizable: true,\n                                            })\n                                            .resizeTo('90%', '250px');*/\n                }\n            }\n        );\n    };\n\n    /**\n     */\n    function itemLog(logCase, itemId, itemLabel) {\n        itemId = itemId || $('#id_item').val();\n\n        var data = {\n            \"id\": itemId,\n            \"label\": DOMPurify.sanitize(itemLabel),\n            \"user_id\": \"<?php echo $_SESSION['user_id']; ?>\",\n            \"action\": logCase,\n            \"login\": \"<?php echo $_SESSION['login']; ?>\"\n        };\n\n        $.post(\n            \"sources/items.logs.php\", {\n                type: \"log_action_on_item\",\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            }\n        );\n    }\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function prepareOneTimeView() {\n        //Send query\n        $.post(\n            \"sources/items.queries.php\", {\n                type: \"generate_OTV_url\",\n                id: store.get('teampassItem').id,\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //check if format error\n                if (data.error == \"\") {\n                    $('#form-item-otv-link').val(data.url);\n                    // prepare clipboard\n                    var clipboard = new ClipboardJS(\"#form-item-otv-copy-button\", {\n                        text: function() {\n                            return data.url;\n                        }\n                    });\n                    clipboard.on('success', function(e) {\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('copy_to_clipboard'); ?>',\n                            '', {\n                                timeOut: 2000,\n                                positionClass: 'toast-top-right',\n                                progressBar: true\n                            }\n                        );\n                        e.clearSelection();\n                    });\n                }\n            },\n            \"json\"\n        );\n    }\n\n    /**\n     */\n    function getPrivilegesOnItem(val, edit, context) {\n        context = context || \"\"; // make context optional\n\n        // make sure to use correct selected folder\n        if (val === false) {\n            val = selectedFolderId;\n        }\n        if (debugJavascript === true) console.log('Get privilege for folder ' + val);\n            \n        if (val === \"\" || typeof val === \"undefined\" || val === false) {\n            toastr.remove();\n            toastr.error(\n                '',\n                '<?php echo langHdl('please_select_a_folder'); ?>',\n                {\n                    timeOut: 5000,\n                    positionClass: 'toast-top-right',\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        return $.post(\n            \"sources/items.queries.php\", {\n                type: \"get_complixity_level\",\n                folder_id: val,\n                context: context,\n                item_id: store.get('teampassItem').id,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'get_complixity_level');\n\n                if (debugJavascript === true) {\n                    console.info('GET COMPLEXITY LEVEL');\n                    console.log(data);\n                }\n                var executionStatus = true;\n\n                if (data.error === false) {\n                    // Do some prepartion\n\n                    // Prepare list of users where needed\n                    $('#form-item-restrictedto, #form-item-anounce').empty().change(); //.val('')\n                    // Users restriction list\n                    var html_restrictions = '';\n\n                    $(data.usersList).each(function(index, value) {\n                        // Prepare list for FORM\n                        $(\"#form-item-restrictedto\")\n                            .append('<option value=\"' + value.id + '\" class=\"restriction_is_user\">' + value.name + '</option>');\n\n                        // Prepare list of emailers\n                        $('#form-item-anounce').append('<option value=\"' + value.email + '\">' + value.name + '</option>');\n                    });\n                    if (data.setting_restricted_to_roles === 1) {\n                        //add optgroup\n                        var optgroup = $('<optgroup label=\"<?php echo langHdl('users'); ?>\">');\n                        $(\".restriction_is_user\").wrapAll(optgroup);\n\n                        // Now add the roles to the list\n                        $(data.rolesList).each(function(index, value) {\n                            $(\"#form-item-restrictedto\")\n                                .append('<option value=\"role_' + value.id + '\" class=\"restriction_is_role\">' +\n                                    value.title + '</option>');\n                        });\n                        /// Add a group label for Groups\n                        $('.restriction_is_role').wrapAll($('<optgroup label=\"<?php echo langHdl('roles'); ?>\">'));\n                    }\n\n\n                    //\n                    $('#card-item-visibility').html(data.visibility);\n\n                    // Prepare Select2\n                    $('.select2').select2({\n                        language: '<?php echo $_SESSION['user_language_code']; ?>'\n                    });\n\n                    // Show selected restricted inputs\n                    $('#form-item-restrictedto')\n                        .val(data.usersList.concat(\n                            data.rolesList.map(i => 'role_' + i)))\n                        .change();\n\n                    // If restricted to Users then select them\n                    if (store.get('teampassItem').id_restricted_to !== undefined) {\n                        $('#form-item-restrictedto')\n                            .val(store.get('teampassItem').id_restricted_to)\n                            .trigger('change');\n                    }\n\n                }\n\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.folderId = val,\n                            teampassItem.error = data.error === undefined ? '' : data.error,\n                            teampassItem.message = data.message === undefined ? '' : data.message,\n                            teampassItem.folderComplexity = data.val === undefined ? '' : parseInt(data.val),\n                            teampassItem.folderIsPersonal = data.personal === undefined ? '' : parseInt(data.personal),\n                            teampassItem.itemMinimumComplexity = data.complexity === undefined ? '' : data.complexity,\n                            teampassItem.itemVisibility = data.visibility === undefined ? '' : data.visibility,\n                            teampassItem.id_restricted_to = data.usersList === undefined ? '' : data.usersList,\n                            teampassItem.id_restricted_to_roles = data.rolesList === undefined ? '' : data.rolesList,\n                            teampassItem.item_rights = data.itemAccessRight === undefined ? '' : data.itemAccessRight\n                    }\n                );\n                //if (debugJavascript === true) console.log('Content of teampassItem;')\n                //if (debugJavascript === true) console.log(store.get('teampassItem'))\n            }\n        );\n    }\n\n    $('.password-generate').click(function() {\n        var elementId = $(this).data('id');\n        $('#' + elementId).focus();\n        if (debugJavascript === true) console.log(elementId);\n\n        // If no criteria is set then do secure\n        var secure_pwd = false;\n        var anyBoxesChecked = false;\n        if ($('.password-definition:checked').length > 0) {\n            anyBoxesChecked = true;\n        }\n        if (anyBoxesChecked === false || $('#pwd-definition-secure').prop('checked') === true) {\n            secure_pwd = true;\n        }\n        \n        $.post(\n            \"sources/main.queries.php\", {\n                type: \"generate_password\",\n                type_category: 'action_user',\n                size: $('#pwd-definition-size').val(),\n                lowercase: $('#pwd-definition-lcl').prop(\"checked\"),\n                numerals: $('#pwd-definition-numeric').prop(\"checked\"),\n                capitalize: $('#pwd-definition-ucl').prop(\"checked\"),\n                symbols: $('#pwd-definition-symbols').prop(\"checked\"),\n                secure_pwd: secure_pwd,\n                force: \"false\",\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                if (debugJavascript === true) console.log(data)\n                if (data.error == \"true\") {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        data.error_msg,\n                        '<?php echo langHdl('error'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                } else {\n                    $(\"#\" + elementId).val(data.key).focus();\n\n                    // Form has changed\n                    userDidAChange = true;\n                    if (debugJavascript === true) console.log('User did a change during generate_password > ' + userDidAChange);\n                    //$('#' + elementId).attr('data-change-ongoing', true);;\n\n                    $(\"#form-item-password\").pwstrength(\"forceUpdate\");\n\n                    // SHow button in sticky footer\n                    //$('#form-item-buttons').addClass('sticky-footer');\n                }\n            }\n        );\n    });\n\n    $('#item-button-password-copy').click(function() {\n        $('#form-item-password-confirmation').val($('#form-item-password').val());\n    });\n\n    /**\n     * On tag badge click, launch the search query\n     */\n    function searchItemsWithTags(criteria) {\n        if (criteria !== '') {\n            $('#folders-tree-card, .columns-position').removeClass('hidden');\n            $('.item-details-card, .form-item-action, .form-item, .form-folder-action').addClass('hidden');\n\n            $('#find_items').val(criteria);\n\n            searchItems(criteria);\n        }\n    }\n\n    /**\n     * Checks if string is base64 encoded\n     *\n     * @return bool\n     */\n    function isBase64(str) {\n        try {\n            return btoa(atob(str)) == str;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    /**\n     * Scroll back to previous vertical position\n     *\n     * @return void\n     */\n    function scrollBackToPosition() {\n        // Scroll back to position\n        if (store.get('teampassApplication').tempScrollTop > 0) {\n            window.scrollTo({\n                top: store.get('teampassApplication').tempScrollTop\n            });\n        }\n    }\n\n\n    function prepareFolderDragNDrop()\n    {\n        $('.is-draggable').draggable({\n            cursor: 'move',\n            cursorAt: {\n                top: -5,\n                left: -5\n            },\n            opacity: 0.8,\n            appendTo: 'body',\n            stop: function(event, ui) {\n                $(this).removeClass('bg-warning');\n            },\n            start: function(event, ui) {\n                $(this).addClass('bg-warning');\n            },\n            helper: function(event) {\n                return $('<div class=\"bg-gray p-2 font-weight-light\">' + $(this).find('.list-item-row-description').text() + '</div>');\n            }\n        });\n        $('.folder').droppable({\n            hoverClass: 'bg-warning',\n            tolerance: 'pointer',\n            drop: function(event, ui) {\n                // Check if same folder\n                if (parseInt($(this).attr('id').substring(4)) === parseInt(ui.draggable.data('item-tree-id'))) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('error_not_allowed_to'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n\n                // Warn user that it starts\n                toastr.info(\n                    '<i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>'\n                );\n\n                // Hide helper\n                ui.draggable.addClass('hidden');\n\n                //move item\n                var data = {\n                    'item_id': ui.draggable.data('item-id'),\n                    'folder_id': $(this).attr('id').substring(4)\n                }\n                $.post(\n                    'sources/items.queries.php', {\n                        type: 'move_item',\n                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'move_item');\n\n                        if (debugJavascript === true) console.log(data)\n\n                        if (data.error === true) {\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                            ui.draggable.removeClass('hidden');\n                            return false;\n                        }\n                        \n                        //increment / decrement number of items in folders\n                        $('#itcount_' + data.from_folder).text(refreshFolderCounters($('#itcount_' + data.from_folder).text(), 'decrement'));\n                        $('#itcount_' + data.to_folder).text(refreshFolderCounters($('#itcount_' + data.to_folder).text(), 'increment'));\n\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('success'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                );\n            }\n        });\n    }\n\n    /**\n     * Permits to refresh the folder counters when performing an item drag and drop\n     */\n    function refreshFolderCounters(counter, operation)\n    {\n        var splitCounter = counter.split('/');\n        if (splitCounter.length <= 3) {\n            if (operation === 'increment') {\n                splitCounter[0]++;\n                if (splitCounter.length === 3) {\n                    splitCounter[1]++;\n                }\n            } else {\n                splitCounter[0]--;\n                if (splitCounter.length === 3) {\n                    splitCounter[1]--;\n                }\n            }\n        }\n        \n        return splitCounter.join('/');\n    }\n\n    /*\n    // Get parameters from url\n    var currentTeampassUrl = new URL(window.location.href);\n    var actionFromUrl = currentTeampassUrl.searchParams.get('action');\n    if (actionFromUrl !== undefined && atob(actionFromUrl) === 'reset_private_key') {\n        // Case where we need to re-encrypt all share keys\n        if (debugJavascript === true) console.log(\"ACTION RE-ENCRYPTION OF SHAREKEYS\");\n\n        $('#dialog-encryption-keys').removeClass('hidden');    \n\n        // Hide other\n        $('.content-header, .content').addClass('hidden');\n\n        alertify.dismissAll();\n    }\n    */\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      profile.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'profile', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    <?php if (isset($SETTINGS['api']) === true && (int) $SETTINGS['api'] === 1) : ?>\n        // If user api is empty then generate one\n        if ($('#profile-user-api-token').text() === '') {\n            generateNewUserApiKey('profile-user-api-token', true);\n        }\n\n        $('#profile-button-api_token').click(function() {\n            generateNewUserApiKey('profile-user-api-token', false);\n        });\n    <?php endif; ?>\n\n    //iCheck for checkbox and radio inputs\n    $('#tab_reset_psk input[type=\"checkbox\"]').iCheck({\n        checkboxClass: 'icheckbox_flat-blue'\n    })\n\n    // Select user properties\n    $('#profile-user-language option[value=<?php echo $_SESSION['user']['user_language'];?>').attr('selected','selected');\n\n\n    // AVATAR IMPORT\n    var uploader_photo = new plupload.Uploader({\n        runtimes: 'gears,html5,flash,silverlight,browserplus',\n        browse_button: 'profile-avatar-file',\n        container: 'profile-avatar-file-container',\n        max_file_size: '2mb',\n        chunk_size: '1mb',\n        unique_names: true,\n        dragdrop: true,\n        multiple_queues: false,\n        multi_selection: false,\n        max_file_count: 1,\n        filters: [{\n            title: 'PNG files',\n            extensions: 'png'\n        }],\n        resize: {\n            width: '90',\n            height: '90',\n            quality: '90'\n        },\n        url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/upload.files.php',\n        flash_swf_url: '<?php echo $SETTINGS['cpassman_url']; ?>/includes/libraries/Plupload/Moxie.swf',\n        silverlight_xap_url: '<?php echo $SETTINGS['cpassman_url']; ?>/includes/libraries/Plupload/Moxie.xap',\n        init: {\n            FilesAdded: function(up, files) {\n                // generate and save token\n                $.post(\n                    'sources/main.queries.php', {\n                        type: 'save_token',\n                        type_category: 'action_system',\n                        size: 25,\n                        capital: true,\n                        secure: true,\n                        numeric: true,\n                        symbols: true,\n                        lowercase: true,\n                        reason: 'avatar_profile_upload',\n                        duration: 10,\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        $('#profile-user-token').val(data[0].token);\n                        up.start();\n                    },\n                    'json'\n                );\n            },\n            BeforeUpload: function(up, file) {\n                var tmp = Math.random().toString(36).substring(7);\n\n                up.settings.multipart_params = {\n                    'PHPSESSID': '<?php echo $_SESSION['user_id']; ?>',\n                    'type_upload': 'upload_profile_photo',\n                    'user_token': $('#profile-user-token').val()\n                };\n            },\n            FileUploaded: function(upldr, file, object) {\n                // Decode returned data\n                var myData = prepareExchangedData(object.response, 'decode', '<?php echo $_SESSION['key']; ?>');\n                // update form\n                $('#profile-user-avatar').attr('src', 'includes/avatars/' + myData.filename);\n                $('#profile-avatar-file-list').html('').addClass('hidden');\n            }\n        }\n    });\n\n    // Show runtime status\n    uploader_photo.bind('Init', function(up, params) {\n        $('#profile-plupload-runtime')\n            .html(params.runtime)\n            .removeClass('text-danger')\n            .addClass('text-info')\n            .data('enabled', 1);\n    });\n\n    // get error\n    uploader_photo.bind('Error', function(up, err) {\n        $('#profile-avatar-file-list').html('<div class=\"ui-state-error ui-corner-all\">Error: ' + err.code +\n            ', Message: ' + err.message +\n            (err.file ? ', File: ' + err.file.name : '') +\n            '</div>'\n        );\n        up.refresh(); // Reposition Flash/Silverlight\n    });\n\n    uploader_photo.init();\n\n\n    // Save user settings\n    $('#profile-user-save-settings').click(function() {\n        // Sanitize text fields\n        let formName = fieldSanitizeStep1('#profile-user-name', false, false, false),\n            formLastname = fieldSanitizeStep1('#profile-user-lastname', false, false, false),\n            formEmail = fieldSanitizeStep1('#profile-user-email', false, false, false);\n        if (formName === false || formLastname === false || formEmail === false) {\n            // Label is empty\n            toastr.remove();\n            toastr.warning(\n                'XSS attempt detected. Field has been emptied.',\n                'Error', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Prepare data\n        var data = {\n            'name': formName,\n            'lastname': formLastname,\n            'email': formEmail,\n            'timezone': $('#profile-user-timezone').val(),\n            'language': $('#profile-user-language').val().toLowerCase(),\n            'treeloadstrategy': $('#profile-user-treeloadstrategy').val().toLowerCase(),\n            'agsescardid': $('#profile-user-agsescardid').length > 0 ? $('#profile-user-agsescardid').val() : '',\n        }\n        console.log(data);\n        //return false;\n        // \" onmouseover=\"confirm(document.cookie)\"\n        // Inform user\n        toastr.remove();\n        toastr.info('<i class=\"fas fa-cog fa-spin fa-2x\"></i>');\n\n        //Send query\n        $.post(\n            \"sources/users.queries.php\", {\n                type: 'user_profile_update',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                isprofileupdate: true,\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //decrypt data\n                try {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                } catch (e) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        'An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />' + data,\n                        '', {\n                            closeButton: true\n                        }\n                    );\n                    return false;\n                }\n\n                if (data.error === true) {\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            closeButton: true\n                        }\n                    );\n                } else {\n                    $('#profile-username').html(data.name + ' ' + data.lastname);\n                    $('#profile-user-name').val(data.name)\n                    $('#profile-user-lastname').val(data.lastname)\n                    $('#profile-user-email').val(data.email)\n\n                    // reload page in case of language change\n                    if ($('#profile-user-language').val().toLowerCase() !== '<?php echo $_SESSION['user']['user_language'];?>') {\n                        // prepare reload\n                        $(this).delay(3000).queue(function() {\n                            document.location.href = \"index.php?page=profile\";\n\n                            $(this).dequeue();\n                        });\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('alert_page_will_reload') . ' ... ' . langHdl('please_wait'); ?>',\n                            '', {\n                                timeOut: 3000,\n                                progressBar: true\n                            }\n                        );\n\n                    } else {\n                        // just inform user\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 2000,\n                                progressBar: true\n                            }\n                        );\n\n                        // Force tree refresh\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.jstreeForceRefresh = 1\n                            }\n                        );\n                    }\n                }\n\n            }\n        );\n    });\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function generateNewUserApiKey(target, silent) {\n        var newApiKey = \"\";\n\n        // Generate key\n        $.post(\n            \"sources/main.queries.php\", {\n                type: \"generate_password\",\n                type_category: 'action_user',\n                size: \"39\",\n                lowercase: \"true\",\n                numerals: \"true\",\n                capitalize: \"true\",\n                symbols: \"false\",\n                secure: \"false\",\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n\n                if (data.key !== \"\") {\n                    newApiKey = data.key;\n\n                    // Save key in session and database\n                    var data = {\n                        'field' : 'user_api_key',\n                        'value' : newApiKey[0],\n                        'user_id' : <?php echo $_SESSION['user_id']; ?>,\n                        'context' : '',\n                    };\n                    console.log(data)\n                    \n                    $.post(\n                        \"sources/users.queries.php\", {\n                            type: \"save_user_change\",\n                            data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                            isprofileupdate: true,\n                            key: \"<?php echo $_SESSION['key']; ?>\"\n                        },\n                        function(data) {\n                            data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                            $(\"#\" + target).text(newApiKey);\n                            if (silent === false) {\n                                $('#profile-tabs a[href=\"#tab_information\"]').tab('show');\n                                toastr.remove();\n                                toastr.info(\n                                    '<?php echo langHdl('done'); ?>',\n                                    '', {\n                                        timeOut: 2000,\n                                        progressBar: true\n                                    }\n                                );\n                            }\n                        }\n                    );\n                }\n            }\n        );\n    }\n\n\n    //-------------------\n    $(\"#profile-password\").simplePassMeter({\n        \"requirements\": {},\n        \"container\": \"#profile-password-strength\",\n        \"defaultText\": \"<?php echo langHdl('index_pw_level_txt'); ?>\",\n        \"ratings\": [\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_1;?>,\n                \"className\": \"meterWarn\",\n                \"text\": \"<?php echo langHdl('complex_level1'); ?>\"\n            },\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_2;?>,\n                \"className\": \"meterWarn\",\n                \"text\": \"<?php echo langHdl('complex_level2'); ?>\"\n            },\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_3;?>,\n                \"className\": \"meterGood\",\n                \"text\": \"<?php echo langHdl('complex_level3'); ?>\"\n            },\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_4;?>,\n                \"className\": \"meterGood\",\n                \"text\": \"<?php echo langHdl('complex_level4'); ?>\"\n            },\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_5;?>,\n                \"className\": \"meterExcel\",\n                \"text\": \"<?php echo langHdl('complex_level5'); ?>\"\n            }\n        ]\n    });\n    $(\"#profile-password\").bind({\n        \"score.simplePassMeter\": function(jQEvent, score) {\n            $(\"#profile-password-complex\").val(score);\n        }\n    }).change({\n        \"score.simplePassMeter\": function(jQEvent, score) {\n            $(\"#profile-password-complex\").val(score);\n        }\n    });\n\n    $('#profile-save-password-change').click(function() {\n        // Check if passwords are the same\n        if ($('#profile-password').val() !== $('#profile-password-confirm').val() ||\n            $('#profile-password').val() === '' ||\n            $('#profile-password-confirm').val() === ''\n        ) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('index_pw_error_identical'); ?>',\n                '', {\n                    timeOut: 10000,\n                    closeButton: true,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n        // Inform user\n        toastr.remove();\n        toastr.info('<i class=\"fas fa-cog fa-spin fa-2x\"></i>');\n\n        var data = {\n            'new_pw': DOMPurify.sanitize($('#profile-password').val()),\n            'complexity': $('#profile-password-complex').val(),\n            \"change_request\": 'user_decides_to_change_password',\n            \"user_id\": store.get('teampassUser').user_id,\n        };\n\n        //Send query\n        $.post(\n            \"sources/main.queries.php\", {\n                type: \"change_pw\",\n                type_category: 'action_password',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                console.log(data);\n\n                if (data.error === true) {\n                    $('#profile-password').focus();\n                    toastr.remove();\n                    toastr.warning(\n                        '<?php echo langHdl('your_attention_is_required'); ?>',\n                        data.message, {\n                            timeOut: 10000,\n                            closeButton: true,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $('#profile-password, #profile-password-confirm').val('');\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        data.message, {\n                            timeOut: 2000,\n                            progressBar: true\n                        }\n                    );\n\n                    window.location.href = \"index.php\";\n                }\n\n            }\n        );\n    });\n\n\n    // ----\n    $(\"#profile-saltkey\").simplePassMeter({\n        \"requirements\": {},\n        \"container\": \"#profile-saltkey-strength\",\n        \"defaultText\": \"<?php echo langHdl('index_pw_level_txt'); ?>\",\n        \"ratings\": [\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_1;?>,\n                \"className\": \"meterWarn\",\n                \"text\": \"<?php echo langHdl('complex_level1'); ?>\"\n            },\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_2;?>,\n                \"className\": \"meterWarn\",\n                \"text\": \"<?php echo langHdl('complex_level2'); ?>\"\n            },\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_3;?>,\n                \"className\": \"meterGood\",\n                \"text\": \"<?php echo langHdl('complex_level3'); ?>\"\n            },\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_4;?>,\n                \"className\": \"meterGood\",\n                \"text\": \"<?php echo langHdl('complex_level4'); ?>\"\n            },\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_5;?>,\n                \"className\": \"meterExcel\",\n                \"text\": \"<?php echo langHdl('complex_level5'); ?>\"\n            }\n        ]\n    });\n    $(\"#profile-saltkey\").bind({\n        \"score.simplePassMeter\": function(jQEvent, score) {\n            $(\"#profile-saltkey-complex\").val(score);\n        }\n    }).change({\n        \"score.simplePassMeter\": function(jQEvent, score) {\n            $(\"#profile-saltkey-complex\").val(score);\n        }\n    });\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      roles.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'profile', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    // Manage memory\n    browserSession(\n        'init',\n        'teampassApplication', {\n            lastItemSeen: '',\n            selectedFolder: '',\n            itemsListStop: '',\n            itemsListStart: '',\n            selectedFolder: '',\n            itemsListFolderId: '',\n            itemsListRestricted: '',\n            itemsShownByQuery: '',\n            foldersList: [],\n            personalSaltkeyRequired: 0,\n            uploadedFileId: '',\n            rolesSelectOptions: '',\n        }\n    );\n\n    // Globals\n    var currentThis = '';\n\n    // Preapre select drop list\n    $('#roles-list.select2').select2({\n        language: '<?php echo $_SESSION['user_language_code']; ?>',\n        placeholder: '<?php echo langHdl('select_a_role'); ?>',\n        allowClear: true\n    });\n    $('#roles-list').val('').change();\n\n    // Populate\n    var $options = $(\"#roles-list > option\").clone();\n    $('#folders-compare').append($options);\n\n\n\n    $('#form-complexity-list.select2').select2({\n        language: '<?php echo $_SESSION['user_language_code']; ?>'\n    });\n\n    //iCheck for checkbox and radio inputs\n    $('input[type=\"checkbox\"]').iCheck({\n        checkboxClass: 'icheckbox_flat-blue'\n    });\n\n    // On role selection\n    $(document).on('change', '#roles-list', function() {\n        // initi checkboxes\n        $('input[type=\"checkbox\"]').iCheck('uncheck');\n        if ($(this).find(':selected').text() === '') {\n            // Hide\n            $('#card-role-details').addClass('hidden');\n            $('#button-edit, #button-delete').addClass('disabled');\n        } else {\n            var selectedRoleId = $(this).find(':selected').val();\n            $('#button-edit, #button-delete').removeClass('disabled');\n\n            // Prepare card header\n            $('#role-detail-header').html(\n                $(this).find(':selected').text() +\n                ' <i class=\"' + $(this).find(':selected').data('complexity-icon') + ' infotip ml-3\" ' +\n                'title=\"<?php echo langHdl('complexity'); ?>: ' +\n                $(this).find(':selected').data('complexity-text') + '\"></i>' +\n                (parseInt($(this).find(':selected').data('allow-edit-all')) === 1 ?\n                    '<i class=\"ml-3 fas fa-exclamation-triangle text-warning infotip\" ' +\n                    'title=\"<?php echo langHdl('role_can_edit_any_visible_item'); ?>\"></i>' :\n                    '')\n            );\n\n            $('.infotip').tooltip();\n\n            refreshMatrix(selectedRoleId);\n        }\n    });\n\n    /**\n     */\n    function refreshMatrix(selectedRoleId) {\n        // Show\n        $('#card-role-details').removeClass('hidden');\n\n        // \n        $('#role-details').html('');\n\n        // Show spinner\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Build matrix\n        $.post(\n            'sources/roles.queries.php', {\n                type: 'build_matrix',\n                role_id: selectedRoleId,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                console.log(data);\n                if (data.error === true) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Build html\n                    var newHtml = '',\n                        ident = '',\n                        path = '',\n                        max_folder_depth = 1;\n                    $(data.matrix).each(function(i, value) {\n                        // Access\n                        access = '';\n                        if (value.access === 'W') {\n                            access = '<i class=\"fas fa-indent mr-2 text-success infotip\" title=\"<?php echo langHdl('add_allowed'); ?>\"></i>' +\n                                '<i class=\"fas fa-pen mr-2 text-success infotip\" title=\"<?php echo langHdl('edit_allowed'); ?>\"></i>' +\n                                '<i class=\"fas fa-eraser mr-2 text-success infotip\" title=\"<?php echo langHdl('delete_allowed'); ?>\"></i>';\n                        } else if (value.access === 'ND') {\n                            access = '<i class=\"fas fa-indent mr-2 text-success infotip\" title=\"<?php echo langHdl('add_allowed'); ?>\"></i>' +\n                                '<i class=\"fas fa-pen mr-2 text-success infotip\" title=\"<?php echo langHdl('edit_allowed'); ?>\"></i>' +\n                                '<i class=\"fas fa-eraser mr-2 text-danger infotip\" title=\"<?php echo langHdl('delete_not_allowed'); ?>\"></i>';\n                        } else if (value.access === 'NE') {\n                            access = '<i class=\"fas fa-indent mr-2 text-success infotip\" title=\"<?php echo langHdl('add_allowed'); ?>\"></i>' +\n                                '<i class=\"fas fa-pen mr-2 text-danger infotip\" title=\"<?php echo langHdl('edit_not_allowed'); ?>\"></i>' +\n                                '<i class=\"fas fa-eraser mr-2 text-success infotip\" title=\"<?php echo langHdl('delete_allowed'); ?>\"></i>';\n                        } else if (value.access === 'NDNE') {\n                            access = '<i class=\"fas fa-indent mr-2 text-success infotip\" title=\"<?php echo langHdl('add_allowed'); ?>\"></i>' +\n                                '<i class=\"fas fa-pen mr-2 text-danger infotip\" title=\"<?php echo langHdl('edit_not_allowed'); ?>\"></i>' +\n                                '<i class=\"fas fa-eraser mr-2 text-danger infotip\" title=\"<?php echo langHdl('delete_not_allowed'); ?>\"></i>';\n                        } else if (value.access === 'R') {\n                            access = '<i class=\"fas fa-book-reader mr-2 text-warning infotip\" title=\"<?php echo langHdl('read_only'); ?>\"></i>';\n                        } else {\n                            access = '<i class=\"fas fa-ban mr-2 text-danger infotip\" title=\"<?php echo langHdl('no_access'); ?>\"></i>';\n                        }\n\n                        // Build path\n                        path = '';\n                        $(value.path).each(function(j, valuePath) {\n                            if (path === '') {\n                                path = valuePath;\n                            } else {\n                                path += ' / ' + valuePath;\n                            }\n                        });\n\n                        // Max depth\n                        if (parseInt(value.ident) > max_folder_depth) {\n                            max_folder_depth = parseInt(value.ident);\n                        }\n\n                        // Finalize\n                        newHtml += '<tr data-level=\"' + value.ident + '\" class=\"' + (value.ident === 1 ? 'parent' : 'descendant') + '\" data-id=\"' + value.id + '\">' +\n                            '<td width=\"35px\"><input type=\"checkbox\" id=\"cb-' + value.id + '\" data-id=\"' + value.id + '\" class=\"folder-select\"></td>' +\n                            '<td class=\"pointer modify folder-name\" data-id=\"' + value.id + '\" data-access=\"' + value.access + '\">' + value.title + '</td>' +\n                            '<td class=\"font-italic pointer modify\" data-id=\"' + value.id + '\" data-access=\"' + value.access + '\"><small class=\"text-muted\">' + path + '</small></td>' +\n                            '<td class=\"pointer modify td-100 text-center\" data-id=\"' + value.id + '\" data-access=\"' + value.access + '\">' + access + '</td>' +\n                            '<td class=\"hidden compare tp-borders td-100 text-center\"></td>'\n                        '</tr>'\n                    });\n\n                    // Show result\n                    $('#role-details').html(\n                        '<table id=\"table-role-details\" class=\"table table-hover table-striped table-responsive\" style=\"width:100%\"><tbody>' +\n                        newHtml +\n                        '</tbody></table>'\n                    );\n\n                    //iCheck for checkbox and radio inputs\n                    $('#role-details input[type=\"checkbox\"]').iCheck({\n                        checkboxClass: 'icheckbox_flat-blue'\n                    });\n\n                    $('.infotip').tooltip();\n\n                    // Adapt select\n                    $('#folders-depth').val('').change();\n                    $('#folders-depth').append('<option value=\"all\"><?php echo langHdl('all'); ?></option>');\n                    for (x = 1; x < max_folder_depth; x++) {\n                        $('#folders-depth').append('<option value=\"' + x + '\">' + x + '</option>');\n                    }\n                    $('#folders-depth').val('all').change();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n                    // Now check if role comparision is enabled\n                    if ($('#folders-compare').val() !== '') {\n                        buildRoleCompare(store.get('teampassUser').compareRole);\n                    }\n                }\n            }\n        );\n    }\n\n    var operationOngoin = false;\n    $(document).on('ifChecked', '.folder-select', function() {\n        if (operationOngoin === false) {\n            operationOngoin = true;\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Show selection of folders\n            var selected_cb = $(this),\n                id = $(this).data('id');\n\n            // change language string\n            if ($(this).attr('id') === 'cb-all-selection') {\n                $('#cb-all-selection-lang').html('<?php echo langHdl('unselect_all'); ?>');\n            }\n\n            // Now get subfolders\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'select_sub_folders',\n                    id: id,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    // check/uncheck checkbox\n                    if (data.subfolders !== '') {\n                        $.each(JSON.parse(data.subfolders), function(i, value) {\n                            $('#cb-' + value).iCheck('check');\n                        });\n                    }\n                    operationOngoin = false;\n\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            );\n        }\n    });\n\n    $(document).on('ifUnchecked', '.folder-select', function() {\n        if (operationOngoin === false) {\n            operationOngoin = true;\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Show selection of folders\n            var selected_cb = $(this),\n                id = $(this).data('id');\n\n            // change language string\n            if ($(this).attr('id') === 'cb-all-selection') {\n                $('#cb-all-selection-lang').html('<?php echo langHdl('select_all'); ?>');\n            }\n\n            // Now get subfolders\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'select_sub_folders',\n                    id: id,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    // check/uncheck checkbox\n                    if (data.subfolders !== '') {\n                        $.each(JSON.parse(data.subfolders), function(i, value) {\n                            $('#cb-' + value).iCheck('uncheck');\n                        });\n                    }\n                    operationOngoin = false;\n\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            );\n        }\n    });\n\n    /**\n     * Handle the form for folder access rights change\n     */\n    var currentFolderEdited = '';\n    $(document).on('click', '.modify', function() {\n        // Manage edition of rights card\n        if (currentFolderEdited !== '' && currentFolderEdited !== $(this).data('id')) {\n            $('.temp-row').remove();\n        } else if (currentFolderEdited === $(this).data('id')) {\n            $('.temp-row').remove();\n            currentFolderEdited = '';\n            return false;\n        }\n\n        // Init\n        var currentRow = $(this).closest('tr'),\n            folderAccess = $(this).data('access');\n        currentFolderEdited = $(this).data('id');\n\n        // Now show\n        $(currentRow).after(\n            '<tr class=\"temp-row\"><td colspan=\"' + $(currentRow).children('td').length + '\">' +\n            '<div class=\"card card-warning card-outline\">' +\n            '<div class=\"card-body\">' +\n            '<div class=\"form-group ml-2 mt-2\"><?php echo langHdl('right_types_label'); ?></div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<input type=\"radio\" class=\"form-radio-input form-control ml-1\" id=\"right-write\" name=\"right\" data-type=\"W\">' +\n            '<label class=\"form-radio-label pointer mr-2\" for=\"right-write\"><?php echo langHdl('write'); ?></label>' +\n            '<input type=\"radio\" class=\"form-radio-input form-control ml-1\" id=\"right-read\" name=\"right\" data-type=\"R\">' +\n            '<label class=\"form-radio-label pointer mr-2\" for=\"right-read\"><?php echo langHdl('read'); ?></label>' +\n            '<input type=\"radio\" class=\"form-radio-input form-control ml-1\" id=\"right-noaccess\" name=\"right\" data-type=\"\">' +\n            '<label class=\"form-radio-label pointer\" for=\"right-noaccess\"><?php echo langHdl('no_access'); ?></label>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\" id=\"folder-rights-tuned\">' +\n            '<div class=\"form-check\">' +\n            '<input type=\"checkbox\" class=\"form-check-input form-control cb-right\" id=\"right-no-delete\">' +\n            '<label class=\"form-check-label pointer ml-2\" for=\"right-no-delete\"><?php echo langHdl('role_cannot_delete_item'); ?></label>' +\n            '</div>' +\n            '<div class=\"form-check\">' +\n            '<input type=\"checkbox\" class=\"form-check-input form-control cb-right\" id=\"right-no-edit\">' +\n            '<label class=\"form-check-label pointer ml-2\" for=\"right-no-edit\"><?php echo langHdl('role_cannot_edit_item'); ?></label>' +\n            '</div>' +\n            '</div>' +\n            '<div class=\"callout callout-danger\">' +\n            '<div class=\"form-group mt-2\">' +\n            '<input type=\"checkbox\" class=\"form-check-input form-item-control\" id=\"propagate-rights-to-descendants\">' +\n            '<label class=\"form-check-label ml-2\" for=\"propagate-rights-to-descendants\">' +\n            '<?php echo langHdl('propagate_rights_to_descendants'); ?>' +\n            '</label>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '<div class=\"card-footer\">' +\n            '<button type=\"button\" class=\"btn btn-warning tp-action\" data-action=\"submit\" data-id=\"' + currentFolderEdited + '\"><?php echo langHdl('submit'); ?></button>' +\n            '<button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>' +\n            '</div>' +\n            '</div>' +\n            '</td></tr>'\n        );\n\n        // Prepare iCheck format for checkboxes\n        $('input[type=\"checkbox\"].form-check-input, input[type=\"radio\"].form-radio-input').iCheck({\n            radioClass: 'iradio_flat-orange',\n            checkboxClass: 'icheckbox_flat-orange',\n        });\n\n        // Uncheck the checkboxes\n        $('#right-no-delete').iCheck('uncheck');\n        $('#right-no-edit').iCheck('uncheck');\n\n        // Prepare radio and checkboxes depending on existing right on selected folder\n        if (folderAccess === 'R') {\n            $('#right-read').iCheck('check');\n            $('.cb-right').iCheck('disable');\n        } else if (folderAccess === 'none') {\n            $('#right-noaccess').iCheck('check');\n            $('.cb-right').iCheck('disable');\n        } else if (folderAccess === 'W') {\n            $('#right-write').iCheck('check');\n        } else if (folderAccess === 'ND') {\n            $('#right-write').iCheck('check');\n            $('#right-no-delete').iCheck('check');\n        } else if (folderAccess === 'NE') {\n            $('#right-write').iCheck('check');\n            $('#right-no-edit').iCheck('check');\n        } else if (folderAccess === 'NDNE') {\n            $('#right-write').iCheck('check');\n            $('#right-no-edit, #right-no-delete').iCheck('check');\n        }\n    });\n\n    /**\n     * Handle the rights change buttons\n     */\n    $(document).on('click', 'button', function() {\n        // Init\n        var selectedFolderText = $('#roles-list').find(':selected').text();\n        console.log(\"Click: \"+$(this).data('action'));\n\n        if ($(this).data('action') === 'cancel-edition') {\n            $('#card-role-definition').addClass('hidden');\n            $('#card-role-details, #card-role-selection').removeClass('hidden');\n            $('#form-role-label').val('');\n            $('#form-role-delete').iCheck('uncheck');\n\n        } else if ($(this).data('action') === 'cancel-deletion') {\n            $('#card-role-details, #card-role-selection').removeClass('hidden');\n            $('#card-role-deletion').addClass('hidden');\n            $('#form-role-delete').iCheck('uncheck');\n            $('#form-role-delete').iCheck('uncheck');\n\n        } else if ($(this).data('action') === 'cancel-ldap') {\n            $('#card-role-selection').removeClass('hidden');\n            $('#card-roles-ldap-sync').addClass('hidden');\n            //$('#form-role-delete').iCheck('uncheck');\n            //$('#form-role-delete').iCheck('uncheck');\n\n        } else if ($(this).data('action') === 'submit-edition') {\n            // STORE ROLE CHANGES\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Prepare data\n            var data = {\n                'label': DOMPurify.sanitize($('#form-role-label').val()),\n                'complexity': $('#form-complexity-list').val() === null ? 0 : $('#form-complexity-list').val(),\n                'folderId': $('#roles-list').find(':selected').val(),\n                'allowEdit': $('#form-role-privilege').is(\":checked\") === true ? 1 : 0,\n                'action': store.get('teampassApplication').formUserAction\n            }\n            var oldLabel = selectedFolderText;\n            console.log(data);\n\n            // Launch action\n            $.post(\n                'sources/roles.queries.php', {\n                    type: 'change_role_definition',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) { //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');                    \n                    console.log('DID CHANGES')\n                    console.log(data);\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        if (store.get('teampassApplication').formUserAction === 'edit_role') {\n                            // Adapt card header\n                            $('#role-detail-header').html(\n                                $('#form-role-label').val() +\n                                '<i class=\"' + data.icon + ' infotip ml-3\" ' +\n                                'title=\"<?php echo langHdl('complexity'); ?>: ' +\n                                $('#form-complexity-list').find(':selected').text() + '\"></i>' +\n                                (parseInt(data.allow_pw_change) === 1 ?\n                                    '<i class=\"ml-3 fas fa-exclamation-triangle text-warning infotip\" ' +\n                                    'title=\"<?php echo langHdl('role_can_edit_any_visible_item'); ?>\"></i>' :\n                                    '')\n                            );\n                            $('.infotip').tooltip();\n                        } else {\n                            // Add new folder to roles listbox\n                            var newOption = new Option(\n                                $('#form-role-label').val(),\n                                data.new_role_id,\n                                false,\n                                true\n                            );\n                            $('#roles-list').append(newOption).trigger('change');\n                        }\n\n                        // Manage change in select\n                        $(\"#roles-list\").select2(\"destroy\");\n                        var selectedOption = $('#roles-list option[value=' + $('#roles-list').find(':selected').val() + ']');\n                        selectedOption.text($('#form-role-label').val());\n                        selectedOption.data('allow-edit-all', data.allow_pw_change);\n                        selectedOption.data('complexity-text', data.text);\n                        selectedOption.data('complexity-icon', data.icon);\n                        selectedOption.data('complexity', data.value);\n                        $(\"#roles-list\").select2();\n\n                        // Misc\n                        $('#card-role-definition').addClass('hidden');\n                        $('#card-role-details, #card-role-selection').removeClass('hidden');\n                        $('#form-role-label').val('');\n\n                        // OK\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //---\n        } else if ($(this).data('action') === 'edit' && $('#button-edit').hasClass('disabled') === false) {\n            // SHOW ROLE EDITION FORM\n            if ($('#card-role-details').hasClass('hidden') === false) {\n                $('#form-role-label').val(selectedFolderText);\n                $('#form-complexity-list').val($('#roles-list').find(':selected').data('complexity')).trigger('change');\n\n                if (parseInt($('#roles-list').find(':selected').data('allow-edit-all')) === 1) {\n                    $('#form-role-privilege').iCheck('check');\n                } else {\n                    $('#form-role-privilege').iCheck('uncheck');\n                }\n\n                // What type of form? Edit or new user\n                store.update(\n                    'teampassApplication',\n                    function(teampassApplication) {\n                        teampassApplication.formUserAction = 'edit_role';\n                    }\n                );\n\n                // Show form\n                $('#card-role-definition').removeClass('hidden');                \n                $('#card-role-deletion, #card-role-details, #card-role-selection').addClass('hidden');\n                $('#form-role-label').focus();\n            }\n            //---\n        } else if ($(this).data('action') === 'delete' && $('#button-delete').hasClass('disabled') === false) {\n            // SHOW ROLE DELETION FORM\n            if ($('#card-role-details').hasClass('hidden') === false) {\n                $('#span-role-delete').html('- <?php echo langHdl('role'); ?> <b>' + selectedFolderText + '</b>');\n\n                $('#card-role-deletion').removeClass('hidden');\n                $('#card-role-definition, #card-role-details, #card-role-selection').addClass('hidden');\n            }\n        \n        } else if ($(this).data('action') === 'ldap') {\n            // SHOW LDAP SYNC FORM\n            console.log('LDAP SYNC');\n            if ($('#card-roles-ldap-sync').hasClass('hidden') === true) {\n                //$('#span-role-delete').html('- <?php echo langHdl('role'); ?> <b>' + selectedFolderText + '</b>');\n\n                $('#card-roles-ldap-sync').removeClass('hidden');\n                $('#card-role-definition, #card-role-details, #card-role-selection').addClass('hidden');\n\n                refreshLdapGroups();\n            }\n\n        } else if ($(this).data('action') === 'ldap-refresh') {\n            // REFRESH LDAP GROUPS LIST\n            refreshLdapGroups();\n\n        } else if ($(this).data('action') === 'new') {\n            // SHOW NEW FOLDER DEFINITION\n            $('#form-role-label').val('');\n            $('#form-role-privilege').iCheck('uncheck');\n            $(\"#form-complexity-list\").val('').trigger('change');\n\n            // What type of form? Edit or new user\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = 'add_role';\n                }\n            );\n\n            $('#card-role-definition').removeClass('hidden');\n            $('#card-role-deletion, #card-role-details, #card-role-selection').addClass('hidden');\n            $('#form-role-label').focus();\n            //---\n        } else if ($(this).data('action') === 'cancel') {\n            $('.temp-row').remove();\n            //---\n        } else if ($(this).data('action') === 'submit') {\n            // Store the new access rights for the selected folder(s)\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Get list of selected folders\n            var selectedFolders = [];\n            $(\"input:checkbox[class=folder-select]:checked\").each(function() {\n                selectedFolders.push($(this).data('id'));\n            });\n            if (selectedFolders.length === 0) {\n                selectedFolders.push($(this).data('id'));\n            }\n\n            // Get defined rights\n            var access = $('input[name=right]:checked').data('type');\n            if ($('#right-no-delete').is(':checked') === true &&\n                $('#right-no-edit').is(':checked') === true\n            ) {\n                access = 'NDNE';\n            } else if ($('#right-no-delete').is(':checked') === true &&\n                $('#right-no-edit').is(':checked') === false\n            ) {\n                access = 'ND';\n            } else if ($('#right-no-delete').is(':checked') === false &&\n                $('#right-no-edit').is(':checked') === true\n            ) {\n                access = 'NE';\n            }\n\n            // Prepare data\n            var data = {\n                'roleId': $('#roles-list').val(),\n                'selectedFolders': selectedFolders,\n                'access': access,\n                'propagate': $('#propagate-rights-to-descendants').is(':checked') === true ? 1 : 0,\n            }\n            console.log(data)\n            // Launch action\n            $.post(\n                'sources/roles.queries.php', {\n                    type: 'change_access_right_on_folder',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) { //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        refreshMatrix($('#roles-list').val());\n\n                        // OK\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n        } else if ($(this).data('action') === 'submit-deletion') {\n            // DELETE SELECTED ROLE\n\n            if ($('#form-role-delete').is(':checked') === false) {\n                return false;\n            }\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Prepare data\n            var data = {\n                'roleId': $('#roles-list').find(':selected').val(),\n            }\n\n            // Launch action\n            $.post(\n                'sources/roles.queries.php', {\n                    type: 'delete_role',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Manage change in select\n                        $(\"#roles-list\").select2(\"destroy\");\n                        var selectedOption = $('#roles-list option[value=' + $('#roles-list').find(':selected').val() + ']');\n                        selectedOption.remove();\n                        $(\"#roles-list\").select2({\n                            language: '<?php echo $_SESSION['user_language_code']; ?>',\n                            placeholder: '<?php echo langHdl('select_a_role'); ?>',\n                            allowClear: true\n                        });\n\n                        // Misc\n                        $('#card-role-deletion, #card-role-details').addClass('hidden');\n                        $('#card-role-selection').removeClass('hidden');\n                        $('#form-role-delete').iCheck('uncheck');\n\n                        // OK\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //---\n\n        } else if ($(this).data('action') === 'do-adgroup-role-mapping') {\n            var groupId = parseInt($(this).data('id')),\n                roleId = parseInt($('.select-role').val()),\n                groupTitle = $('.select-role option:selected').text();\n\n            if (roleId === '') {\n                return false;\n            }\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Prepare data\n            var data = {\n                'roleId': roleId,\n                'adGroupId': groupId,\n                'adGroupLabel': groupTitle,\n            }\n            console.log(data)\n\n            // Launch action\n            $.post(\n                'sources/roles.queries.php', {\n                    type: 'map_role_with_adgroup',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Manage change in select\n                        currentThis.html(groupTitle);\n\n                        // Clean\n                        $('.temp-row').remove();\n\n                        // OK\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //---\n        }\n        currentFolderEdited = '';\n    });\n\n\n    /**\n     * Refreshing list of groups from LDAP\n     *\n     * @return void\n     */\n    function refreshLdapGroups() {\n        // FIND ALL USERS IN LDAP\n        //toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n        $('#row-ldap-body')\n            .addClass('overlay')\n            .html('');\n\n        $.post(\n            \"sources/roles.queries.php\", {\n                type: \"get_list_of_groups_in_ldap\",\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                console.log(data)\n\n                if (data.error === true) {\n                    // ERROR\n                    //toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // loop on groups list\n                    var html = '',\n                        groupsNumber = 0,\n                        group,\n                        group_id;\n                    var entry;\n                    $.each(data.ldap_groups, function(i, ad_group) {\n                        // Get group name\n                        html += '<tr>' +\n                            '<td>' + ad_group.ad_group_title + '</td>' +\n                            '<td><i class=\"fa-solid fa-arrow-right-long\"></i></td>' +\n                            '<td class=\"pointer change_adgroup_mapping\" data-id=\"'+ad_group.ad_group_id+'\">' + \n                                (ad_group.role_title === \"\" ? '<i class=\"fa-solid fa-xmark text-danger infotip\" title=\"<?php echo langHdl('none'); ?>\"></i>' : ad_group.role_title) + \n                            '</td>' +\n                            '</tr>';\n                    });\n\n                    $('#row-ldap-body').html(html);\n                    $('#row-ldap-body').removeClass('overlay');\n                    $('.infotip').tooltip('update');\n\n                    // prepare select\n                    rolesSelectOptions = '<option value=\"-1\"><?php echo langHdl('none'); ?></option>';;\n                    $.each(data.teampass_groups, function(i, role) {\n                        rolesSelectOptions += '<option value=\"' + role.id + '\">' + role.title + '</option>';\n                    });\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.rolesSelectOptions = rolesSelectOptions;\n                        }\n                    );\n\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    $('.close-toastr-progress').closest('.toast').remove();\n                }\n            }\n        );\n    }\n\n    /**\n     * Refreshing list of groups from LDAP\n     *\n     * @return void\n     */\n    $(document).on('click', '.change_adgroup_mapping', function() {\n        // Init\n        currentThis = $(this);\n        var currentRow = $(this).closest('tr'),\n            groupId = $(this).data('id');\n\n        // Now show\n        $(currentRow).after(\n            '<tr class=\"temp-row\"><td colspan=\"' + $(currentRow).children('td').length + '\">' +\n            '<div class=\"card card-warning card-outline\">' +\n            '<div class=\"card-body\">' +\n            '<div class=\"form-group ml-2 mt-2\"><?php echo langHdl('select_adgroup_mapping'); ?></div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<select class=\"select-role form-control form-item-control\">' +\n                store.get('teampassApplication').rolesSelectOptions + '</select>' +\n            '</div>' +\n            '<div class=\"card-footer\">' +\n            '<button type=\"button\" class=\"btn btn-warning tp-action\" data-action=\"do-adgroup-role-mapping\" data-id=\"' + groupId + '\"><?php echo langHdl('submit'); ?></button>' +\n            '<button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>' +\n            '</div>' +\n            '</div>' +\n            '</td></tr>'\n        );\n    });\n\n    /**\n     * Handle the user rights choices\n     */\n    $(document).on('ifChecked', '.form-radio-input', function() {\n        if ($(this).data('type') === 'W') {\n            $('.cb-right').iCheck('enable');\n        } else {\n            $('.cb-right').iCheck('disable');\n            $('.cb-right').iCheck('uncheck');\n        }\n    });\n\n    /**\n     * Handle option when role is displayed\n     */\n    $(document).on('change', '#folders-depth', function() {\n        if ($('#folders-depth').val() === 'all') {\n            $('tr').removeClass('hidden');\n        } else {\n            $('tr').filter(function() {\n                if ($(this).data('level') <= $('#folders-depth').val()) {\n                    $(this).removeClass('hidden');\n                } else {\n                    $(this).addClass('hidden');\n                }\n            });\n        }\n    });\n\n    /**\n     * Handle search criteria\n     */\n    $('#folders-search').on('keyup', function() {\n        var criteria = $(this).val();\n        $('.folder-name').filter(function() {\n            if ($(this).text().toLowerCase().indexOf(criteria) !== -1) {\n                $(this).closest('tr').removeClass('hidden');\n            } else {\n                $(this).closest('tr').addClass('hidden');\n            }\n        });\n    });\n\n    $(document).on('change', '#folders-compare', function() {\n        if ($(this).val() === '') {\n            $('#table-role-details tr').find('th:last-child, td:last-child').addClass('hidden');\n        } else {\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Load the rights for this folder\n            $.post(\n                'sources/roles.queries.php', {\n                    type: 'build_matrix',\n                    role_id: $('#folders-compare').val(),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        buildRoleCompare(data.matrix);\n\n                        // Store in teampassUser\n                        store.update(\n                            'teampassUser',\n                            function(teampassUser) {\n                                teampassUser.compareRole = data.matrix;\n                            }\n                        );\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n        }\n    });\n\n    function buildRoleCompare(data) {\n        // Loop on array\n        $(data).each(function(i, value) {\n            var row = $('tr[data-id=\"' + value.id + '\"]');\n            if (row !== undefined) {\n                // Access\n                access = '';\n                if (value.access === 'W') {\n                    access = '<i class=\"fas fa-indent mr-2 text-success infotip\" title=\"<?php echo langHdl('add_allowed'); ?>\"></i>' +\n                        '<i class=\"fas fa-pen mr-2 text-success infotip\" title=\"<?php echo langHdl('edit_allowed'); ?>\"></i>' +\n                        '<i class=\"fas fa-eraser mr-2 text-success infotip\" title=\"<?php echo langHdl('delete_allowed'); ?>\"></i>';\n                } else if (value.access === 'ND') {\n                    access = '<i class=\"fas fa-indent mr-2 text-success infotip\" title=\"<?php echo langHdl('add_allowed'); ?>\"></i>' +\n                        '<i class=\"fas fa-pen mr-2 text-success infotip\" title=\"<?php echo langHdl('edit_allowed'); ?>\"></i>' +\n                        '<i class=\"fas fa-eraser mr-2 text-danger infotip\" title=\"<?php echo langHdl('delete_not_allowed'); ?>\"></i>';\n                } else if (value.access === 'NE') {\n                    access = '<i class=\"fas fa-indent mr-2 text-success infotip\" title=\"<?php echo langHdl('add_allowed'); ?>\"></i>' +\n                        '<i class=\"fas fa-pen mr-2 text-danger infotip\" title=\"<?php echo langHdl('edit_not_allowed'); ?>\"></i>' +\n                        '<i class=\"fas fa-eraser mr-2 text-success infotip\" title=\"<?php echo langHdl('delete_allowed'); ?>\"></i>';\n                } else if (value.access === 'NDNE') {\n                    access = '<i class=\"fas fa-indent mr-2 text-success infotip\" title=\"<?php echo langHdl('add_allowed'); ?>\"></i>' +\n                        '<i class=\"fas fa-pen mr-2 text-danger infotip\" title=\"<?php echo langHdl('edit_not_allowed'); ?>\"></i>' +\n                        '<i class=\"fas fa-eraser mr-2 text-danger infotip\" title=\"<?php echo langHdl('delete_not_allowed'); ?>\"></i>';\n                } else if (value.access === 'R') {\n                    access = '<i class=\"fas fa-book-reader mr-2 text-warning infotip\" title=\"<?php echo langHdl('read_only'); ?>\"></i>';\n                } else {\n                    access = '<i class=\"fas fa-ban mr-2 text-danger infotip\" title=\"<?php echo langHdl('no_access'); ?>\"></i>';\n                }\n                row.find('td:last-child').html(access).removeClass('hidden');\n            }\n        });\n\n        // Tooltips\n        $('.infotip').tooltip();\n    }\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      users.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'folders', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n    // Initialization\n    var userDidAChange = false,\n        userTemporaryCode = '',\n        constVisibleOTP = false,\n        userClipboard,\n        ProcessInProgress = false,\n        debugJavascript = false;\n\n    browserSession(\n        'init',\n        'teampassApplication', {\n            foldersSelect: '',\n            complexityOptions: '',\n        }\n    );\n\n    // Prepare tooltips\n    $('.infotip').tooltip();\n\n    // Prepare Select2\n    $('.select2').select2({\n        language: '<?php echo $_SESSION['user_language_code']; ?>'\n    });\n\n    // Prepare iCheck format for checkboxes\n    $('input[type=\"checkbox\"].flat-blue, input[type=\"radio\"].flat-blue').iCheck({\n        radioClass: 'iradio_flat-blue',\n        checkboxClass: 'icheckbox_flat-blue',\n    });\n    $('#form-create-special-folder').iCheck('disable');\n\n    // Prevent submit on button\n    $('.btn-no-click')\n        .click(function(e) {\n            e.preventDefault();\n        });\n\n\n    //Launch the datatables pluggin\n    var oTable = $('#table-users').DataTable({\n        'paging': true,\n        'searching': true,\n        'order': [\n            [1, 'asc']\n        ],\n        'info': true,\n        'processing': false,\n        'serverSide': true,\n        'responsive': false,\n        'select': false,\n        'stateSave': true,\n        'autoWidth': true,\n        'ajax': {\n            url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/users.datatable.php',\n        },\n        'language': {\n            'url': '<?php echo $SETTINGS['cpassman_url']; ?>/includes/language/datatables.<?php echo $_SESSION['user']['user_language']; ?>.txt'\n        },\n        'columns': [{\n                'width': '80px',\n                className: 'details-control',\n                'render': function(data, type, row, meta) {\n                    return '<div class=\"group-btn btn-user-action\">' +\n                        '' +\n                        '<button type=\"button\" class=\"btn btn-info dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fas fa-cog\"></i>&nbsp;' +\n                        '</button>' +\n                        '<ul class=\"dropdown-menu\" role=\"menu\">' +\n                        ($(data).data('auth-type') === 'local' ?\n                            '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"new-password\"><i class=\"fas fa-lock mr-2\"></i><?php echo langHdl('change_login_password'); ?></li>' :\n                            ''\n                        ) +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"edit\"><i class=\"fas fa-pen mr-2\"></i><?php echo langHdl('edit'); ?></li>' +\n                        ($(data).data('otp-provided') !== \"\"?\n                            '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"new-otp\"><i class=\"fas fa-mask mr-2\"></i><?php echo langHdl('generate_new_otp'); ?></li>' :\n                            ''\n                        ) +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\" data-action=\"logs\"><i class=\"fas fa-newspaper mr-2\"></i><?php echo langHdl('see_logs'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"qrcode\"><i class=\"fas fa-qrcode mr-2\"></i><?php echo langHdl('user_ga_code'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"access-rights\"><i class=\"fas fa-sitemap mr-2\"></i><?php echo langHdl('user_folders_rights'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"disable-user\"><i class=\"fas fa-user-slash text-warning mr-2\" disabled></i><?php echo langHdl('disable_enable'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"delete-user\"><i class=\"fas fa-user-minus text-danger mr-2\" disabled></i><?php echo langHdl('delete'); ?></li>' +\n                        '</ul>' +\n                        '</div>';\n                }\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            }\n        ],\n        'preDrawCallback': function() {\n            toastr.info(\n                '<?php echo langHdl('loading'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>',\n                ''\n            );\n        },\n        'drawCallback': function() {\n            // Tooltips\n            $('.infotip').tooltip();\n\n            // Remove progress toast\n            $('.toast').remove();\n        },\n        /*'createdRow': function( row, data, dataIndex ) {\n            var newClasses = $(data[6]).filter('#row-class-' + dataIndex).val();\n            $(row).addClass(newClasses);\n        }*/\n    });\n\n\n\n    $('#form-email').change(function() {\n        //extract domain from email\n        var domain = $(this).val().split('@')[1];\n        if (domain === undefined) {\n            return false;\n        }\n        domain = domain.toLowerCase()\n\n        //check if domain exists\n        $.post(\"sources/users.queries.php\", {\n                type: \"check_domain\",\n                domain: domain\n            },\n            function(data) {\n                data = $.parseJSON(data);\n                if (debugJavascript === true) console.log(data);\n\n                $(\"#new_folder_role_domain\").attr(\"disabled\", \"disabled\");\n                if (data.folder === 'not_exists' && data.role === 'not_exists' && domain !== '') {\n                    $('#form-create-special-folder').iCheck('enable');\n                    $('#form-special-folder').val(domain);\n                } else {\n                    $('#form-create-special-folder').iCheck('disable');\n                    $('#form-special-folder').val('');\n                }\n            }\n        );\n    });\n\n\n\n    /**\n     * \n     */\n    // Fires when user click on button SEND\n    $(document).on('click', '#warningModalButtonClose', function() {\n        // check if uform is the one expected\n        if ($('#warningModal-button-user-pwd').length === 0) {\n            return false;\n        } \n        if (debugJavascript === true) console.log('Closing warning dialog')\n        toastr.remove();\n        $('#warningModal').modal('hide');\n\n        // Fianlize UI\n        // clear form fields\n        $(\".clear-me\").val('');\n        $('.select2').val('').change();\n        //$('#privilege-user').iCheck('check');\n        $('.form-check-input')\n            .iCheck('disable')\n            .iCheck('uncheck');\n\n        // refresh table content\n        oTable.ajax.reload();\n\n        // Show list of users\n        $('#row-form').addClass('hidden');\n        $('#row-list').removeClass('hidden');\n    });\n\n\n    /**\n     * \n     */\n    // Fires when user click on button SEND\n    $(document).on('click', '#warningModalButtonAction', function() {\n        // check if uform is the one expected\n        if ($('#warningModal-button-user-pwd').length === 0) {\n            return false;\n        } \n        //console.log('send email for '+store.get('teampassUser').admin_new_user_temporary_encryption_code)\n        //console.log(store.get('teampassUser'))\n        //console.log(store.get('teampassApplication'))\n\n        showModalDialogBox(\n            '#warningModal',\n            '<i class=\"fas fa-user-shield fa-lg warning mr-2\"></i><?php echo langHdl('caution'); ?>',\n            '<?php echo langHdl('sending_email_message'); ?>',\n            '',\n            '',\n            true,\n            false,\n            false\n        );\n\n        // Prepare data\n        if (store.get('teampassApplication').formUserAction === \"add_new_user\") {\n            var data = {\n                'receipt': $('#form-email').val(),\n                'subject': 'TEAMPASS - <?php echo langHdl('temporary_encryption_code');?>',\n                'body': '<?php echo langHdl('email_body_new_user');?>',\n                'pre_replace' : {\n                    '#code#' : store.get('teampassUser').admin_new_user_temporary_encryption_code,\n                    '#login#' : store.get('teampassUser').admin_new_user_login,\n                    '#password#' : store.get('teampassUser').admin_new_user_password,\n                }\n            }\n        } else {\n            var data = {\n                'receipt': $('#form-email').val(),\n                'subject': 'TEAMPASS - <?php echo langHdl('temporary_encryption_code');?>',\n                'body': '<?php echo langHdl('email_body_temporary_encryption_code');?>',\n                'pre_replace' : {\n                    '#enc_code#' : store.get('teampassUser').admin_new_user_temporary_encryption_code,\n                }\n            }\n        }\n\n        // Launch action\n        $.post(\n            'sources/main.queries.php', {\n                type: 'mail_me',\n                type_category: 'action_mail',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                //console.log(data);\n\n                if (data.error !== false) {\n                    $('#warningModal').modal('hide');\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Fianlize UI\n                    // clear form fields\n                    $(\".clear-me\").val('');\n                    $('.select2').val('').change();\n                    //$('#privilege-user').iCheck('check');\n                    $('.form-check-input')\n                        .iCheck('disable')\n                        .iCheck('uncheck');\n\n                    // Show list of users\n                    $('#row-form').addClass('hidden');\n                    $('#row-list').removeClass('hidden');\n\n                    // Hide dialogbox\n                    $('#warningModal').modal('hide');\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n                    // change the user status to ready to use\n                    data = {\n                        'user_id': store.get('teampassUser').admin_new_user_id,\n                    }\n\n                    $.post(\n                        'sources/main.queries.php', {\n                            type: 'user_is_ready',\n                            type_category: 'action_user',\n                            data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                            key: '<?php echo $_SESSION['key']; ?>'\n                        },\n                        function(data) {\n                            if (debugJavascript === true) console.log('User has been created');\n\n                            // refresh table content\n                            oTable.ajax.reload();\n\n                            // Remove action from store\n                            if (debugJavascript === true) console.log('Clear Store variables')\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                                }\n                            );\n                            store.update(\n                                'teampassUser',\n                                function(teampassUser) {\n                                    teampassUser.admin_new_user_password = '',\n                                    teampassUser.admin_new_user_temporary_encryption_code = '',\n                                    teampassUser.admin_new_user_login = '';\n                                }\n                            );\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * BUILD AND CHECK THE USER LOGIN\n     */\n    $('.build-login').change(function() {\n        // Build login only if it is empty\n        if ($(\"#form-login\").val() === '') {\n            //return false;\n        }\n        // Build login\n        if ($(this).attr('id') !== 'form-login') {\n            $(\"#form-login\").val(\n                $(\"#form-name\")\n                .val()\n                .toLowerCase()\n                .replace(/ /g, \"\") + \".\" + $(\"#form-lastname\").val().toLowerCase().replace(/ /g, \"\")\n            );\n        }\n\n        // Check if login exists\n        $.post(\n            'sources/users.queries.php', {\n                type: 'is_login_available',\n                login: $('#form-login').val(),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Show result\n                    if (data.login_exists === 0) {\n                        $('#form-login')\n                            .removeClass('is-invalid')\n                            .addClass('is-valid');\n                        $('#form-login-conform').val(true);\n                    } else {\n                        $('#form-login')\n                            .removeClass('is-valid')\n                            .addClass('is-invalid');\n                        $('#form-login-conform').val(false);\n                    }\n                }\n            }\n        );\n    });\n\n\n    function userTasksCreation(userId, userPassword, userTemporaryCode)\n    {\n        var data = {\n            user_id: userId,\n            user_pwd: userPassword,\n            user_code: userTemporaryCode,\n        }\n\n        // Do query\n        $.post(\n            \"sources/users.queries.php\", {\n                type: \"create_new_user_tasks\",\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                if (debugJavascript === true)  {\n                    console.info(\"R\u00e9ception des donn\u00e9es :\")\n                    console.log(data);\n                }\n                \n                if (data.error === true) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    dfd.reject();\n                } else {\n                    // show message to user\n                    $('#warningModal').modal('hide');\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 2000\n                        }\n                    );\n\n                    // Reload list of users\n                    oTable.ajax.reload();\n\n                    // Prepare UI\n                    $('#row-list, #group-create-special-folder, #group-delete-user').removeClass('hidden');\n                    $('#row-form').addClass('hidden');\n                }\n            }\n        );\n    }\n\n    /**\n     * \n     */\n    // Launch recursive action to encrypt the keys\n    function callRecursiveUserDataEncryption(\n        userId,\n        step,\n        start\n    ) {\n        var dfd = $.Deferred();\n        ProcessInProgress = true;\n        \n        var stepText = '';\n        if (debugJavascript === true) console.log('Performing '+step)\n\n        // Prepare progress string\n        if (step === 'step0') {\n            stepText = '<?php echo langHdl('inititialization'); ?>';\n        } else if (step === 'step1') {\n            stepText = '<?php echo langHdl('items'); ?>';\n        } else if (step === 'step2') {\n            stepText = '<?php echo langHdl('logs'); ?>';\n        } else if (step === 'step3') {\n            stepText = '<?php echo langHdl('suggestions'); ?>';\n        } else if (step === 'step4') {\n            stepText = '<?php echo langHdl('fields'); ?>';\n        } else if (step === 'step5') {\n            stepText = '<?php echo langHdl('files'); ?>';\n        } else if (step === 'step6') {\n            stepText = '<?php echo langHdl('personal_items'); ?>';\n        }\n\n        if (step !== 'finished') {\n            if (store.get('teampassUser').related_items_number !== null) {\n                $nbItemsToConvert = \" / \" + store.get('teampassUser').related_items_number;\n            } else {\n                $nbItemsToConvert = '';\n            }\n            // Inform user\n            $(\"#warningModalBody\").html('<b><?php echo langHdl('encryption_keys'); ?> - ' +\n                stepText + '</b> [' + start + ' - ' + (parseInt(start) + <?php echo NUMBER_ITEMS_IN_BATCH;?>) + ']<span id=\"warningModalBody_extra\">' + $nbItemsToConvert + '</span> ' +\n                '... <?php echo langHdl('please_wait'); ?><i class=\"fas fa-spinner fa-pulse ml-3 text-primary\"></i>');\n\n            // If expected, show the OPT to the admin\n            if (constVisibleOTP === true) {\n                toastr.info(\n                    '<?php echo langHdl('show_encryption_code_to_admin');?> <div><input class=\"form-control form-item-control flex-nowrap\" value=\"' + userTemporaryCode + '\" readonly></div>'\n                    + '<br /><button type=\"button\" class=\"btn clear\"><?php echo langHdl('close');?></button>',\n                    '<?php echo langHdl('information'); ?>',\n                    {\n                        extendedTimeOut: 0,\n                        timeOut: 0,\n                        tapToDismiss: false,\n                        newestOnTop: true,\n                        preventDuplicates: true,\n                        onHidden: (toast) => {\n                            // prevent against multiple occurances (#3305)\n                            constVisibleOTP = false;\n                        },\n                    }\n                );\n            }\n\n            var data = {\n                action: step,\n                start: start,\n                length: <?php echo NUMBER_ITEMS_IN_BATCH;?>,\n                user_id: userId,\n            }\n            if (debugJavascript === true) {\n                console.info(\"Envoi des donn\u00e9es :\")\n                console.log(data);\n            }\n\n            // Do query\n            $.post(\n                \"sources/main.queries.php\", {\n                    type: \"user_sharekeys_reencryption_next\",\n                    type_category: 'action_key',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                    if (debugJavascript === true) {\n                        console.info(\"R\u00e9ception des donn\u00e9es :\")\n                        console.log(data);\n                    }\n                    \n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n\n                        dfd.reject();\n                    } else {\n                        // Prepare variables\n                        userId = data.userId;\n                        step = data.step;\n                        start = data.start;\n\n                        // Do recursive call until step = finished\n                        callRecursiveUserDataEncryption(\n                            userId,\n                            step,\n                            start\n                        ).done(function(response) {\n                            dfd.resolve(response);\n                        });\n                    }\n                }\n            );\n        } else {\n            // Ask user\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-envelope-open-text fa-lg warning mr-2\"></i><?php echo langHdl('information'); ?>',\n                '<i class=\"fas fa-info-circle mr-2\"></i><?php echo langHdl('send_user_password_by_email'); ?>'+\n                '<div class=\"row\">'+\n                    (store.get('teampassApplication').formUserAction === \"add_new_user\" ?\n                    '<div class=\"col-lg-2\"><button type=\"button\" class=\"btn btn-block btn-secondary mr-2\"  id=\"warningModal-button-user-pwd\"><?php echo langHdl('show_user_password'); ?></button></div>'+\n                    '<div class=\"col-lg-4 hidden\" id=\"warningModal-user-pwd\"><div><?php echo langHdl('user_password'); ?><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_password+'\"></div>'+\n                    '<div><?php echo langHdl('user_temporary_encryption_code'); ?><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_temporary_encryption_code+'\"></div></div>'\n                    :\n                    '<div class=\"col-lg-2\"><button type=\"button\" class=\"btn btn-block btn-secondary mr-2\"  id=\"warningModal-button-user-pwd\"><?php echo langHdl('show_user_temporary_encryption_code'); ?></button></div>'+\n                    '<div class=\"col-lg-4 hidden\" id=\"warningModal-user-pwd\"><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_temporary_encryption_code+'\"></div></div>'\n                    )+\n                '</div>',\n                '<?php echo langHdl('send_by_email'); ?>',\n                '<?php echo langHdl('close'); ?>',\n                true,\n                false,\n                false\n            );\n            $('#warningModal').modal('show');\n\n            $(document).on('click', '#warningModal-button-user-pwd', function() {\n                $('#warningModal-user-pwd').removeClass('hidden');\n                $('#warningModal-button-user-pwd').prop( \"disabled\", true );\n                setTimeout(\n                    () => {\n                        $('#warningModal-user-pwd').addClass('hidden');\n                        $('#warningModal-button-user-pwd').prop( \"disabled\", false );\n                    },\n                    5000\n                );\n            });\n\n            ProcessInProgress = false;\n        }\n        return dfd.promise();\n    }\n\n\n\n    /**\n     * TOP MENU BUTTONS ACTIONS\n     */\n    $(document).on('click', '.tp-action', function() {\n        // Ensure that password strength indicator is reseted\n        //$('#form-password').focus();\n\n        // Hide if user is not admin\n        if (parseInt(store.get('teampassUser').user_admin) === 1 || parseInt(store.get('teampassUser').user_can_manage_all_users) === 1) {\n            $('.only-admin').removeClass('hidden');\n        } else {\n            $('.only-admin').addClass('hidden');\n        }\n\n        if ($(this).data('action') === 'new') {\n            // ADD NEW USER\n            $('#row-list').addClass('hidden');\n            $('#row-form, #group-create-special-folder, .not-for-admin').removeClass('hidden');\n\n            // HIDE FROM FORM ELEMENTS ONLY FOR ADMIN\n            if (parseInt(store.get('teampassUser').user_admin) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n            } else if (parseInt(store.get('teampassUser').user_can_manage_all_users) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n                $('#privilege-admin').iCheck('disable');\n                $('#privilege-hr').iCheck('disable');\n            } else {\n                $('#privilege-admin').iCheck('disable');\n                $('#privilege-hr').iCheck('disable');\n                $('#privilege-manager').iCheck('disable');\n            }\n\n            // Prepare checks\n            $('#privilege-user').iCheck('check');\n            $('#form-create-special-folder').iCheck('disable');\n\n            // Personal folder\n            if (store.get('teampassSettings').enable_pf_feature === '1') {\n                $('#form-create-personal-folder')\n                    .iCheck('enable')\n                    .iCheck('check');\n            } else {\n                $('#form-create-personal-folder').iCheck('disable');\n            }\n            \n            // MFA enabled\n            if (store.get('teampassSettings').duo === '1' || store.get('teampassSettings').google_authentication === '1') {\n                $('#form-create-mfa-enabled')\n                    .iCheck('enable')\n                    .iCheck('check');\n                $('#form-create-mfa-enabled-div').removeClass('hidden');\n            } else {\n                $('#form-create-mfa-enabled').iCheck('disable');\n                $('#form-create-mfa-enabled-div').addClass('hidden');\n            }\n\n            // What type of form? Edit or new user\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = 'add_new_user';\n                }\n            );\n\n        } else if ($(this).data('action') === 'edit') {\n            // SHow user\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // EDIT EXISTING USER\n            $('#row-list, #group-create-special-folder, #group-delete-user').addClass('hidden');\n            $('#row-form').removeClass('hidden');\n            $('.form-check-input').iCheck('enable');\n\n            // Personal folder\n            if (parseInt(store.get('teampassSettings').enable_pf_feature) === 0) {\n                $('#form-create-personal-folder').iCheck('disable');\n            }\n\n            // HIDE FROM FORM ELEMENTS ONLY FOR ADMIN\n            if (parseInt(store.get('teampassUser').user_admin) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n            } else {\n                $('input[type=radio].only-admin').iCheck('disable');\n            }\n\n            // What type of form? Edit or new user\n            var userID = $(this).data('id');\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = 'store_user_changes',\n                        teampassApplication.formUserId = userID; // Store user ID   \n                }\n            );\n\n            var data = {\n                'user_id': userID,\n            };\n\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get_user_info\",\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error === false) {\n                        // Prefil with user data\n                        $('#form-login').val(data.login);\n                        $('#form-email').val(data.email);\n                        $('#form-name').val(data.name);\n                        $('#form-lastname').val(data.lastname);\n                        $('#form-create-root-folder').iCheck(data.can_create_root_folder === 1 ? 'check' : 'uncheck');\n                        $('#form-create-personal-folder').iCheck(data.personal_folder === 1 ? 'check' : 'uncheck');\n                        $('#form-create-mfa-enabled').iCheck(data.mfa_enabled === 1 ? 'check' : 'uncheck');\n\n                        // Case of user locked\n                        if (data.disabled === 1) {\n                            $('#group-delete-user').removeClass('hidden');\n                            $('#form-delete-user-confirm').iCheck('uncheck');\n                        }\n\n                        // Clear selects\n                        $('#form-roles, #form-managedby, #form-auth, #form-forbid')\n                            .find('option')\n                            .remove();\n\n                        var tmp = '';\n                        $(data.foldersAllow).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-auth').append(tmp);\n\n                        tmp = '';\n                        $(data.foldersForbid).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-forbid').append(tmp);\n\n                        tmp = '';\n                        $(data.managedby).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-managedby').append(tmp);\n\n                        tmp = '';\n                        $(data.function).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-roles').append(tmp);\n\n                        // Generate select2\n                        $('#form-roles, #form-managedby, #form-auth, #form-forbid').select2();\n\n                        // User's current privilege\n                        if (data.admin === 1) {\n                            $('#privilege-admin').iCheck('check');\n                            $('.not-for-admin').addClass('hidden');\n                        } else if (data.can_manage_all_users === 1) {\n                            $('#privilege-hr').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else if (data.gestionnaire === 1) {\n                            $('#privilege-manager').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else if (data.read_only === 1) {\n                            $('#privilege-ro').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else {\n                            $('#privilege-user').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        }\n\n                        $('input:radio[name=privilege]').on('ifChanged', function() {\n                            userDidAChange = true;\n                            $(this).data('change-ongoing', true);\n                        });\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    } else {\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                        return false;\n                    }\n                }\n            );\n        } else if ($(this).data('action') === 'submit') {\n            // Loop on all changed fields\n            var arrayQuery = [];\n            $('.form-control').each(function(i, obj) {\n                if ($(this).data('change-ongoing') === true\n                    //|| $('#form-password').val() !== 'do_not_change'\n                ) {\n                    arrayQuery.push({\n                        'field': $(this).prop('id'),\n                        'value': $(this).val(),\n                    });\n                }\n            });\n\n            // Sanitize text fields\n            let formLogin = fieldSanitizeStep1('#form-login', false, false, false),\n                formName = fieldSanitizeStep1('#form-name', false, false, false),\n                formLastname = fieldSanitizeStep1('#form-lastname', false, false, false),\n                formEmail = fieldSanitizeStep1('#form-email', false, false, false);\n            if (formLogin === false || formName === false || formLastname === false || formEmail === false) {\n                // Label is empty\n                toastr.remove();\n                toastr.warning(\n                    'XSS attempt detected. Field has been emptied.',\n                    'Error', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            if (arrayQuery.length > 0) {\n                // Now save\n                // get lists\n                var forbidFld = [],\n                    authFld = [],\n                    groups = [];\n                $(\"#form-roles option:selected\").each(function() {\n                    groups.push($(this).val())\n                });\n                $(\"#form-auth option:selected\").each(function() {\n                    authFld.push($(this).val())\n                });\n                $(\"#form-forbid option:selected\").each(function() {\n                    forbidFld.push($(this).val())\n                });\n\n                // Mandatory?\n                var validated = true,\n                    validEmailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n                $('.required').each(function(i, obj) {\n                    if ($(this).val() === '' && $(this).hasClass('select2') === false) {\n                        $(this).addClass('is-invalid');\n                        validated = false;\n                    } else if ($('#' + $(this).attr('id') + ' :selected').length === 0 && $(this).hasClass('select2') === true) {\n                        $('#' + $(this).attr('id') + ' + span').addClass('is-invalid');\n                        validated = false;\n                    } else if ($(this).hasClass('validate-email') === true) {\n                        if ($(this).val().match(validEmailRegex)) {\n                            $(this).removeClass('is-invalid');\n                        } else {\n                            $(this).addClass('is-invalid');\n                            validated = false;\n                        }\n                    } else {\n                        $(this).removeClass('is-invalid');\n                        $('#' + $(this).attr('id') + ' + span').removeClass('is-invalid');\n                    }\n                });\n                if (validated === false) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('fields_with_mandatory_information_are_missing'); ?>',\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n\n                // SHow user\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n                // Get number of items to treat\n                data_tmp = {\n                    'user_id': <?php echo $_SESSION['user_id']; ?>,\n                }\n                $.post(\n                    'sources/main.queries.php', {\n                        type: 'get_number_of_items_to_treat',\n                        type_category: 'action_system',\n                        data: prepareExchangedData(JSON.stringify(data_tmp), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data_tmp) {\n                        data_tmp = prepareExchangedData(data_tmp, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                        store.update(\n                            'teampassUser',\n                            function(teampassUser) {\n                                teampassUser.related_items_number = data_tmp.nbItems;\n                            }\n                        );\n                    }\n                );\n\n                //prepare data\n                var data = {\n                    'user_id': store.get('teampassApplication').formUserId,\n                    'login': formLogin,\n                    'name': formName,\n                    'lastname': formLastname,\n                    'email': formEmail,\n                    'admin': $('#privilege-admin').prop('checked'),\n                    'manager': $('#privilege-manager').prop('checked'),\n                    'hr': $('#privilege-hr').prop('checked'),\n                    'read_only': $('#privilege-ro').prop('checked'),\n                    'personal_folder': $('#form-create-personal-folder').prop('checked'),\n                    'new_folder_role_domain': $('#form-create-special-folder').prop('checked'),\n                    'domain': $('#form-special-folder').val(),\n                    'isAdministratedByRole': $('#form-managedby').val(),\n                    'groups': groups,\n                    'allowed_flds': authFld,\n                    'forbidden_flds': forbidFld,\n                    'action_on_user': 'update',\n                    'form-create-root-folder': $('#form-create-root-folder').prop('checked'),\n                    'form-user-disabled': $('#form-user-disabled').prop('checked'),\n                    'mfa_enabled': $('#form-create-mfa-enabled').prop('checked'),\n                };\n                if (debugJavascript === true) {\n                    console.log(data);\n                    console.log(store.get('teampassApplication').formUserAction);\n                }                \n                var formUserId = store.get('teampassApplication').formUserId;\n                \n                $.post(\n                    'sources/users.queries.php', {\n                        type: store.get('teampassApplication').formUserAction,\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else if (store.get('teampassApplication').formUserAction === 'add_new_user') {\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('new_user_info_by_mail'); ?>',\n                                '', {\n                                    timeOut: 4000\n                                }\n                            );\n                            // ---\n                        } else {\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 2000\n                                }\n                            );\n                        }\n\n                        // Reload list of users\n                        oTable.ajax.reload();\n\n                        // Prepare UI\n                        $('#row-list, #group-create-special-folder, #group-delete-user').removeClass('hidden');\n                        $('#row-form').addClass('hidden');\n\n                        // Clean form\n                        $('.clear-me').val('');\n                        $('.select2').val('').change();\n                        $('.extra-form, #row-folders').addClass('hidden');\n                        $('#row-list').removeClass('hidden');\n\n                        // Prepare checks\n                        $('.form-check-input').iCheck('uncheck');\n\n                        // Remove action from store\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                            }\n                        );\n                    }\n                )\n            } else {\n                // No change performed on form\n                toastr.remove();\n                toastr.success(\n                    '<?php echo langHdl('no_change_performed'); ?>',\n                    '', {\n                        timeOut: 1000\n                    }\n                );\n            }\n        } else if ($(this).data('action') === 'cancel') {\n            $('.clear-me').val('');\n            $('.select2').val('').change();\n            $('.extra-form, #row-folders').addClass('hidden');\n            $('#row-list').removeClass('hidden');\n\n            // Prepare checks\n            $('.form-check-input').iCheck('uncheck');\n\n            // Remove action from store\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = '',\n                        teampassApplication.formUserId = '';\n                }\n            );\n        } else if ($(this).data('action') === 'qrcode') {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // This sends a GA Code by email to user\n            data = {\n                'user_id': $(this).data('id'),\n                'demand_origin': 'users_management_list',\n                'send_email': 1\n            }\n\n            $.post(\n                'sources/main.queries.php', {\n                    type: 'ga_generate_qr',\n                    type_category: 'action_user',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('share_sent_ok'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            // ---\n        } else if ($(this).data('action') === 'new-password') {\n            var userId = $(this).data('id');\n            // Check if no tasks on-going for this user\n            data_to_send = {\n                'user_id': userId,\n            }\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get-user-infos\",\n                    data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    \n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Continue   \n                        if (data.user_infos.ongoing_process_id !== null) {  \n                            toastr.remove();\n                            toastr.warning(\n                                data.message,\n                                '<?php echo langHdl('user_encryption_ongoing'); ?>', {\n                                    timeOut: 10000,\n                                    progressBar: true\n                                }\n                            ); \n                        } else {                 \n                            // HIde\n                            $('.content-header, .content').addClass('hidden');\n\n                            // PRepare info\n                            $('#dialog-admin-change-user-password-info')\n                                .html('<i class=\"icon fas fa-info mr-2\"></i><?php echo langHdl('admin_change_user_password_info'); ?>');\n                            $(\"#dialog-admin-change-user-password-progress\").html('<?php echo langHdl('provide_current_psk_and_click_launch'); ?>');\n\n                            // SHow form\n                            $('#dialog-admin-change-user-password').removeClass('hidden');\n\n                            $('#admin_change_user_password_target_user').val(userId);\n                        }\n                    }\n                }\n            );\n\n            // ---\n        } else if ($(this).data('action') === 'new-enc-code') {\n            // HIde\n            $('.content-header, .content').addClass('hidden');\n\n            // PRepare info\n            $('#dialog-admin-change-user-password-info')\n                .html('<i class=\"icon fas fa-info mr-2\"></i><?php echo langHdl('admin_change_user_encryption_code_info'); ?>');\n            $(\"#dialog-admin-change-user-password-progress\").html('<?php echo langHdl('provide_current_psk_and_click_launch'); ?>');\n\n            // SHow form\n            $('#dialog-admin-change-user-password').removeClass('hidden');\n\n            $('#admin_change_user_encryption_code_target_user').val($(this).data('id'));\n            // ---\n        } else if ($(this).data('action') === 'logs') {\n            $('#row-list, #row-folders').addClass('hidden');\n            $('#row-logs').removeClass('hidden');\n            $('#row-logs-title').text(\n                $(this).data('fullname')\n            )\n            var userID = $(this).data('id');\n\n            //Launch the datatables pluggin\n            var oTableLogs = $('#table-logs').DataTable({\n                'destroy': true,\n                'paging': true,\n                'searching': true,\n                'order': [\n                    [1, 'asc']\n                ],\n                'info': true,\n                'processing': false,\n                'serverSide': true,\n                'responsive': true,\n                'select': true,\n                'stateSave': false,\n                'retrieve': false,\n                'autoWidth': true,\n                'ajax': {\n                    url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/user.logs.datatables.php',\n                    data: function(d) {\n                        d.userId = userID;\n                    }\n                },\n                'language': {\n                    'url': '<?php echo $SETTINGS['cpassman_url']; ?>/includes/language/datatables.<?php echo $_SESSION['user']['user_language']; ?>.txt'\n                },\n                'columns': [{\n                        className: 'dt-body-left'\n                    },\n                    {\n                        className: 'dt-body-left'\n                    },\n                    {\n                        className: 'dt-body-left'\n                    }\n                ],\n                'preDrawCallback': function() {\n                    toastr.remove();\n                    toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                },\n                'drawCallback': function() {\n                    // Tooltips\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                },\n            });\n\n\n        } else if ($(this).data('action') === 'access-rights') {\n            $('#row-list, #row-logs').addClass('hidden');\n            $('#row-folders').removeClass('hidden');\n            $('#row-folders-title').text(\n                $(this).data('fullname')\n            )\n            var userID = $(this).data('id');\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            $('#row-folders-results').html('');\n\n            // Send query\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'user_folders_rights',\n                    user_id: userID,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Show table\n                        $('#row-folders-results').html(data.html);\n\n                        // Prepare tooltips\n                        $('.infotip').tooltip();\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'disable-user') {\n            var userID = $(this).data('id');\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                '<div class=\"form-group\">'+\n                    '<span class=\"mr-3\"><?php echo langHdl('user_disable_status'); ?></span>'+\n                    '<input type=\"checkbox\" class=\"form-check-input form-control flat-blue\" id=\"user-disabled\">' +\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $('input[type=\"checkbox\"].flat-blue').iCheck({\n                checkboxClass: 'icheckbox_flat-blue',\n            });\n            $(document).on('click', '#warningModalButtonAction', function() {                \n\n                // Show spinner\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                $('#warningModal').modal('hide');\n\n                var data = {\n                    'user_id': userID,\n                    'disabled_status': $('#user-disabled').prop('checked') === true ? 1 : 0,\n                };\n\n                // Send query\n                $.post(\n                    'sources/users.queries.php', {\n                        type: 'manage_user_disable_status',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            // Show icon or not\n                            if ($('#user-disabled').prop('checked') === true) {\n                                $('#user-login-'+userID).before('<i class=\"fas fa-user-slash infotip text-danger mr-2\" title=\"<?php echo langHdl('account_is_locked');?>\" id=\"user-disable-'+userID+'\"></i>');\n                            } else {\n                                $('#user-disable-'+userID).remove();\n                            }\n                            \n\n                            // Prepare tooltips\n                            $('.infotip').tooltip();\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n                        }\n                    }\n                );\n            });\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'delete-user') {\n            var userID = $(this).data('id');\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                '<div class=\"form-group\">'+\n                    '<span class=\"mr-3\"><?php echo langHdl('by_clicking_this_checkbox_confirm_user_deletion'); ?></span>'+\n                    '<input type=\"checkbox\" class=\"form-check-input form-control flat-blue\" id=\"user-to-delete\">' +\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $('input[type=\"checkbox\"].flat-blue').iCheck({\n                checkboxClass: 'icheckbox_flat-blue',\n            });\n            $(document).on('click', '#warningModalButtonAction', function() {\n                if ($('#user-to-delete').prop('checked') === false) {\n                    $('#warningModal').modal('hide');\n                    return false;\n                }             \n\n                // Show spinner\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                $('#warningModal').modal('hide');\n\n                var data = {\n                    'user_id': userID,\n                };\n\n                // Send query\n                $.post(\n                    'sources/users.queries.php', {\n                        type: 'delete_user',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            // refresh table content\n                            oTable.ajax.reload();\n\n                            // Prepare tooltips\n                            $('.infotip').tooltip();\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n                        }\n                    }\n                );\n            });\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'refresh') {\n            $('.form').addClass('hidden');\n            $('#users-list').removeClass('hidden');\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n            oTable.ajax.reload();\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'propagate') {\n            $('#row-list, #row-folders').addClass('hidden');\n            $('#row-propagate').removeClass('hidden');\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Load list of users\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'get_list_of_users_for_sharing',\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Build select\n                        var html = '';\n                        $.each(data.values, function(i, value) {\n                            html += '<option value=\"' + value.id + '\" data-groups=\"' + value.groups + '\" data-managed-by=\"' + value.managedBy + '\" data-folders-allowed=\"' + value.foldersAllowed + '\" data-folders-forbidden=\"' + value.foldersForbidden + '\" data-groups-id=\"' + value.groupIds + '\" data-managed-by-id=\"' + value.managedById + '\" data-folders-allowed-id=\"' + value.foldersAllowedIds + '\" data-folders-forbidden-id=\"' + value.foldersForbiddenIds + '\" data-admin=\"' + value.admin + '\" data-manager=\"' + value.manager + '\" data-hr=\"' + value.hr + '\" data-read-only=\"' + value.readOnly + '\" data-personal-folder=\"' + value.personalFolder + '\" data-root-folder=\"' + value.rootFolder + '\">' + value.name + ' ' + value.lastname + ' [' + value.login + ']</option>';\n                        });\n\n                        $('#propagate-from, #propagate-to')\n                            .find('option')\n                            .remove()\n                            .end()\n                            .append(html)\n                            .change();\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'do-propagate') {\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n\n            // destination users\n            var userIds = $('#propagate-to').val();\n\n            if (userIds.length === 0) return false;\n\n            // Prepare data\n            var data = {\n                source_id: $(\"#propagate-from option:selected\").val(),\n                destination_ids: userIds,\n                user_functions: $(\"#propagate-from option:selected\").data('groups-id'),\n                user_managedby: $(\"#propagate-from option:selected\").data('managed-by-id'),\n                user_fldallowed: $(\"#propagate-from option:selected\").data('folders-allowed-id'),\n                user_fldforbid: $(\"#propagate-from option:selected\").data('folders-forbidden-id'),\n                user_admin: $(\"#propagate-from option:selected\").data('admin'),\n                user_manager: $(\"#propagate-from option:selected\").data('manager'),\n                user_hr: $(\"#propagate-from option:selected\").data('hr'),\n                user_readonly: $(\"#propagate-from option:selected\").data('read-only'),\n                user_personalfolder: $(\"#propagate-from option:selected\").data('personal-folder'),\n                user_rootfolder: $(\"#propagate-from option:selected\").data('root-folder'),\n            };\n            if (debugJavascript === true) console.log(data);\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"update_users_rights_sharing\",\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        $('.clear-me').val('');\n                        $('.select2').val('').change();\n                        $('.extra-form, #row-folders').addClass('hidden');\n                        $('#row-list').removeClass('hidden');\n\n                        // Prepare checks\n                        $('.form-check-input')\n                            .iCheck('disable')\n                            .iCheck('uncheck');\n\n                        // Remove action from store\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                            }\n                        );\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-sync') {\n            $('.form').addClass('hidden');\n            $('#row-ldap').removeClass('hidden');\n\n            refreshListUsersLDAP();\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'close') {\n            $('.extra-form').addClass('hidden');\n            $('#users-list').removeClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-existing-users') {\n            refreshListUsersLDAP();\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-add-role') {\n            $('#ldap-users-table').addClass('hidden');\n            $('#ldap-new-role').removeClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'close-new-role') {\n            $('#ldap-users-table').removeClass('hidden');\n            $('#ldap-new-role').addClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'add-new-role') {\n            if ($('#ldap-new-role-selection').val() === '') {\n                // ERROR\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                    '<?php echo langHdl('caution'); ?>', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n            } else {\n                // Add new role to Teampass\n\n                // Prepare data\n                var data = {\n                    'label': DOMPurify.sanitize($('#ldap-new-role-selection').val()),\n                    'complexity': $('#ldap-new-role-complexity').val(),\n                    'allowEdit': 0,\n                    'action': 'add_role',\n                    'folderId' : -1,\n                }\n\n                if (debugJavascript === true) console.log(data);\n                \n                $.post(\n                    'sources/roles.queries.php', {\n                        type: 'change_role_definition',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error === true) {\n                            // ERROR\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            $('#ldap-new-role-selection').val('');\n                            $('#ldap-users-table').removeClass('hidden');\n                            $('#row-ldap-body').html('');\n                            $('#ldap-new-role').addClass('hidden');\n\n                            refreshListUsersLDAP();\n                        }\n                    }\n                );\n\n            }\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'new-otp') {// Check if no tasks on-going for this user\n            data_to_send = {\n                'user_id': $(this).data('id'),\n            }\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get-user-infos\",\n                    data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Continue   \n                        if (data.user_infos.ongoing_process_id !== null) {  \n                            toastr.remove();\n                            toastr.warning(\n                                data.message,\n                                '<?php echo langHdl('user_encryption_ongoing'); ?>', {\n                                    timeOut: 10000,\n                                    progressBar: true\n                                }\n                            ); \n                        } else {  \n                            var userID = data.user_infos.id;\n                            showModalDialogBox(\n                                '#warningModal',\n                                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                                '<div class=\"form-group\">'+\n                                    '<span class=\"mr-3\"><?php echo langHdl('generate_new_otp_informations'); ?></span>'+\n                                '</div>',\n                                '<?php echo langHdl('perform'); ?>',\n                                '<?php echo langHdl('cancel'); ?>'\n                            );\n                            \n                            $(document).on('click', '#warningModalButtonAction', function() {                \n                                // prepare user\n\n                                // Show spinner\n                                toastr.remove();\n                                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n                                // generate keys\n                                generateUserKeys(\n                                    {\n                                        'user_id': userID,\n                                    },\n                                    ''\n                                );\n                            });\n                        }\n                    }\n                }\n            );\n\n            /**/\n            //\n            // --- END\n            //\n        }\n    });\n\n\n    /**\n     * Permit to show some info while selecting a  User\n     */\n    $(document).on('change', '#propagate-from', function() {\n        var selectedOption = $(this).find('option:selected');\n        $('#propagate-user-roles').html($(selectedOption).data('groups'));\n        $('#propagate-user-managedby').html($(selectedOption).data('managed-by'));\n        $('#propagate-user-allowed').html($(selectedOption).data('folders-allowed'));\n        $('#propagate-user-fordidden').html($(selectedOption).data('folders-forbidden'));\n    });\n\n\n    /**\n     * TRACK CHANGES IN FORM\n     */\n    $('#form-user .track-change')\n        .on('change', function() {\n            if ($(this).val() !== null && $(this).val().length > 0) {\n                userDidAChange = true;\n                $(this).data('change-ongoing', true);\n            } else {\n                $(this).data('change-ongoing', false);\n            }\n        })\n        .on('ifChecked', function() {\n            userDidAChange = true;\n            $(this).data('change-ongoing', true);\n        });\n\n    //************************************************************* */\n\n\n\n    /**\n     * EDIT EACH ROW\n     */\n    var currentText = '',\n        item = '',\n        initialColumnWidth = '',\n        actionOnGoing = false,\n        field = '',\n        columnId = '',\n        tableDef = {\n            'login': {\n                'column': 2\n            },\n            'name': {\n                'column': 3\n            },\n            'lastname': {\n                'column': 4\n            },\n            'isAdministratedByRole': {\n                'column': 5\n            },\n            'fonction_id': {\n                'column': 6\n            }\n        };\n\n    /**\n     * EDIT TEXT INPUT\n     */\n    $(document).on('click', '.edit-text', function() {\n        currentText = $(this).text();\n        item = $(this);\n        field = $(this).data('field');\n        columnId = tableDef[field].column;\n\n        $(this)\n            .addClass('hidden')\n            .after('<input type=\"text\" class=\"form-control form-item-control remove-me save-me\" value=\"' + currentText + '\">');\n\n        // Store current width and change it\n        initialColumnWidth = $('#table-users thead th:eq(' + (columnId - 1) + ')').width();\n        $('#table-users thead th:eq(' + (columnId - 1) + ')').width('300');\n        if (debugJavascript === true) console.log('Width ' + initialColumnWidth)\n\n        // Launch save on focus lost\n        $('.save-me')\n            .focus()\n            .focusout(function() {\n                if (actionOnGoing === false) {\n                    actionOnGoing = true;\n                    saveChange(item, currentText, $(this), field);\n                }\n            });\n    });\n\n    /**\n     * EDIT SELECT LIST\n     */\n    $(document).on('click', '.edit-select', function() {\n        currentText = $(this).text();\n        item = $(this);\n        field = $(this).data('field');\n        columnId = tableDef[field].column;\n        if (debugJavascript === true) console.log(columnId)\n\n        $(this).addClass('hidden');\n\n        // Show select\n        $(\"#select-managedBy\")\n            .insertAfter('#' + $(this).attr('id'))\n            .after('<i class=\"fa fa-close text-danger pointer temp-button mr-3\" id=\"select-managedBy-close\"></i>');\n        $('#select-managedBy option[value=\"' + $(this).data('value') + '\"]').prop('selected', true);\n\n        // Store current width and change it\n        initialColumnWidth = $('#table-users thead th:eq(' + (columnId - 1) + ')').width();\n        $('#table-users thead th:eq(' + (columnId - 1) + ')').width('300');\n\n        // Launch save on focus lost\n        $('.save-me')\n            .focus()\n            .focusout(function() {\n                if (actionOnGoing === false) {\n                    actionOnGoing = true;\n                    saveChange(item, currentText, $(this), field);\n                }\n            });\n\n        $('#select-managedBy-close').click(function() {\n            $(\"#select-managedBy\").detach().appendTo('#hidden-managedBy');\n            $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth);\n            $('.edit-select').removeClass('hidden');\n            $('.tmp-loader, .temp-button').remove();\n        });\n    });\n\n\n    /**\n     * MANAGE USER KEYS PRESSED\n     */\n    $(document).keyup(function(e) {\n        if (e.keyCode === 27) {\n            // Escape Key\n            $('.remove-me, .tmp-loader').remove();\n            $('.edit-text').removeClass('hidden');\n        }\n        if (e.keyCode === 13 && actionOnGoing === false) {\n            // Enter key\n            actionOnGoing = true;\n            saveChange(item, currentText, $(':focus'), field);\n        }\n    });\n\n\n    function saveChange(item, currentText, change, field) {\n        if (change.val() !== currentText) {\n            change\n                .after('<i class=\"fa fa-refresh fa-spin fa-fw tmp-loader\"></i>');\n\n            // prepare data\n            var data = {\n                'user_id': item.data('id'),\n                'field': field,\n                'value': change.val()\n            };\n            \n            // Save\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'save_user_change',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    if (change.is('input') === true) {\n                        change.remove();\n                        $('.tmp-loader').remove();\n                        item\n                            .text(change.val())\n                            .removeClass('hidden');\n                        $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n                    } else if (change.is('select') === true) {\n                        $(\"#select-managedBy\").detach().appendTo('#hidden-managedBy');\n                        $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n                        $('.tmp-loader, .temp-button').remove();\n\n                        // Show change\n                        if (debugJavascript === true) console.log(change)\n                        item\n                            .html(change.text())\n                            .attr('data-value', change.val())\n                            .removeClass('hidden');\n                    }\n                    actionOnGoing = false;\n                },\n                'json'\n            );\n        } else {\n            change.remove();\n            $('.tmp-loader').remove();\n            item\n                .text(change.val())\n                .removeClass('hidden');\n            $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n        }\n    }\n\n    /**\n     * Refreshing list of users from LDAP\n     *\n     * @return void\n     */\n    function refreshListUsersLDAP() {\n        // FIND ALL USERS IN LDAP\n        //toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n        $('#row-ldap-body')\n            .addClass('overlay')\n            .html('');\n\n        $.post(\n            \"sources/users.queries.php\", {\n                type: \"get_list_of_users_in_ldap\",\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data)\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // loop on users list\n                    var html = '',\n                        groupsNumber = 0,\n                        userLogin,\n                        group;\n                    var entry;\n                    $.each(data.entries, function(i, entry) {\n                        userLogin = entry[store.get('teampassSettings').ldap_user_attribute] !== undefined ? entry[store.get('teampassSettings').ldap_user_attribute][0] : '';\n                        // CHeck if not empty\n                        if (userLogin !== '') {\n                            html += '<tr>' +\n                                '<td>' + userLogin +\n                                '</td>' +\n                                '<td>' +\n                                '<i class=\"fas fa-info-circle ml-3 infotip text-info pointer text-center\" data-toggle=\"tooltip\" data-html=\"true\" title=\"' +\n                                '<p class=\\'text-left\\'><i class=\\'fas fa-user mr-1\\'></i>' +\n                                (entry.displayname !== undefined ? '' + entry.displayname[0] + '' : '') + '</p>' +\n                                '<p class=\\'text-left\\'><i class=\\'fas fa-envelope mr-1\\'></i>' + (entry.mail !== undefined ? '' + entry.mail[0] + '' : '') + '</p>' +\n                                '\"></i>' +\n                                '</td><td>' +\n                                (entry.userInTeampass === 0 ? '' :\n                                '<i class=\"fas ' + (entry.userAuthType !== undefined && entry.userAuthType === 'ldap' ? 'fa-toggle-on text-info ' : 'fa-toggle-off ') + 'mr-1 text-center pointer action-change-ldap-synchronization\" data-user-id=\"' + entry.userInTeampass + '\" data-user-auth-type=\"' + entry.userAuthType + '\"></i>') +\n                                '</td><td>';\n                            groupsNumber = 0;\n                            $.each(entry.memberof, function(j, group) {\n                                var regex = String(group).replace('CN=', 'cn').match(/(cn=)(.*?),/g);\n                                if (regex !== null) {\n                                    group = regex[0].replace('cn=', '').replace(',', '');\n                                    // Check if this user has this group in Teampass\n                                    if (entry.teampass !== undefined && entry.ldap_groups.filter(p => p.title === group).length > 0) {\n                                        html += group + '<i class=\"far fa-check-circle text-success ml-2 infotip\" title=\"<?php echo langHdl('user_has_this_role_in_teampass'); ?>\"></i><br>';\n                                    } else {\n                                        // Check if this group exists in Teampass and propose to add it\n                                        tmp = data.teampass_groups.filter(p => p.title === group);\n                                        if (tmp.length > 0 && entry.userInTeampass === 0) {\n                                            html += group + '<i class=\"fas fa-user-graduate text-primary ml-2 pointer infotip action-add-role-to-user\" title=\"<?php echo langHdl('add_user_to_role'); ?>\" data-user-id=\"' + entry.userInTeampass + '\" data-role-id=\"' + tmp[0].id + '\"></i><br>';\n                                        } else {\n                                            html += group + '<br>';\n                                        }\n                                    }\n                                    groupsNumber++;\n                                }\n                            });\n                            html += '</td><td>';\n                            // Action icons\n                            html += (entry.userInTeampass === 0 ? '<i class=\"fas fa-user-plus text-warning ml-2 infotip pointer add-user-icon\" title=\"<?php echo langHdl('add_user_in_teampass'); ?>\" data-user-login=\"' + userLogin + '\" data-user-email=\"' + (entry.mail !== undefined ? entry.mail[0] : '') + '\" data-user-name=\"' + (entry.givenname !== undefined ? entry.givenname[0] : '') + '\" data-user-lastname=\"' + (entry.sn !== undefined ? entry.sn[0] : '') + '\"></i>' : '');\n\n                            // Only of not admin\n                            /*if (userLogin !== 'admin') {\n                                html += (entry.teampass.auth === 'ldap' ? '<i class=\"fas fa-link text-success ml-2 infotip pointer auth-local\" title=\"<?php echo langHdl('ldap_user_password_is_used_for_authentication'); ?>\" data-user-id=\"' + entry.teampass.id + '\"></i>' : '<i class=\"fas fa-unlink text-orange ml-2 infotip pointer auth-ldap\" title=\"<?php echo langHdl('local_user_password_is_used_for_authentication'); ?>\" data-user-id=\"' + entry.teampass.id + '\"></i>');\n                            }*/\n\n                            html += '</td></tr>';\n                        }\n                    });\n\n                    $('#row-ldap-body').html(html);\n\n                    $('#row-ldap-body').removeClass('overlay');\n\n                    $('.infotip').tooltip('update');\n\n                    // Build list box of new roles that could be created\n                    $('#ldap-new-role-selection')\n                        .empty()\n                        .append('<option value=\"\">--- <?php echo langHdl('select'); ?> ---</option>');\n                    $.each(data.ldap_groups, function(i, group) {\n                        tmp = data.teampass_groups.filter(p => p.title === group);\n                        if (tmp.length === 0) {\n                            $('#ldap-new-role-selection').append(\n                                '<option value=\"' + group + '\">' + group + '</option>'\n                            );\n                        }\n                    });\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    $('.close-toastr-progress').closest('.toast').remove();\n                }\n            }\n        );\n    }\n\n    /**\n     * Permits to add a role to a Teampass user\n     *\n     * @return void\n     */\n    function addRoleToUser() {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'user_id': $('.selected-role').data('user-id'),\n            'field': 'fonction_id',\n            'value': $('.selected-role').data('role-id'),\n            'context': 'add_one_role_to_user'\n        };\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'save_user_change',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // CHange icon\n                    $('.selected-role')\n                        .removeClass('fas fa-user-graduate text-primary pointer action-add-role-to-user')\n                        .addClass('far fa-check-circle text-success')\n                        .prop('title', '<?php echo langHdl('user_has_this_role_in_teampass'); ?>');\n\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n                $('.selected-role').removeClass('selected-role');\n            }\n        );\n    }\n\n    $(document).on('click', '.action-add-role-to-user', function() {\n        $(this).addClass('selected-role');\n\n        toastr.warning(\n            '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"addRoleToUser()\"><?php echo langHdl('please_confirm'); ?></button>',\n            '<?php echo langHdl('info'); ?>', {\n                positionClass: 'toast-top-center',\n                closeButton: true\n            }\n        );\n    });\n\n    // Enable/disable ldap sync on user\n    $(document).on('click', '.action-change-ldap-synchronization', function() {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'user_id': $(this).data('user-id'),\n            'field': 'auth_type',\n            'value': $(this).hasClass('fa-toggle-off') === true ? 'ldap' : 'local',\n            'context': ''\n        },\n        selectedIcon = $(this);\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'save_user_change',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // CHange icon format\n                    if (selectedIcon.hasClass('fa-toggle-off') === true) {\n                        selectedIcon\n                            .removeClass('fa-toggle-off')\n                            .addClass('fa-toggle-on text-info')\n                            .prop('data-user-auth-type', 'ldap');\n                    } else {\n                        selectedIcon\n                            .removeClass('fa-toggle-on text-info')\n                            .addClass('fa-toggle-off')\n                            .prop('data-user-auth-type', 'local');\n                    }\n\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * Permits to add an AD user in Teampass\n     *\n     * @return void\n     */\n    function addUserInTeampass() {\n        $('#warningModal').modal('hide');\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n        // what roles\n        var roles = [];\n        $(\"#ldap-user-roles option:selected\").each(function() {\n            roles.push($(this).val())\n        });\n\n        // prepare data\n        var data = {\n            'login': DOMPurify.sanitize($('.selected-user').data('user-login')),\n            'name': DOMPurify.sanitize($('.selected-user').data('user-name') === '' ? $('#ldap-user-name').val() : $('.selected-user').data('user-name')),\n            'lastname': DOMPurify.sanitize($('.selected-user').data('user-lastname')),\n            'email': DOMPurify.sanitize($('.selected-user').data('user-email')),\n            'roles' : roles,\n        };\n        if (debugJavascript === true) console.log(data)\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'add_user_from_ldap',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n                userTemporaryCode = data.user_code;\n                constVisibleOTP = data.visible_otp;\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {                    \n                    generateUserKeys(data, userTemporaryCode);\n                }\n            }\n        );\n    }\n\n\n    function generateUserKeys(data, userTemporaryCode)\n    {\n        // manage keys encryption for new user\n        // Case where we need to encrypt new keys for the user\n        // Process is: \n        // 2/ clear all keys for this user\n        // 3/ generate keys for this user with encryption key\n\n        \n        // If expected to create new encryption key\n        var parameters = {\n            'user_id': data.user_id,\n        };\n\n        if (debugJavascript === true) {\n            console.log(parameters);\n            console.info('Prepare TASK for new user encryption keys')\n        }\n        $.post(\n            'sources/main.queries.php', {\n                type: 'generate_temporary_encryption_key',\n                type_category: 'action_key',\n                data: prepareExchangedData(JSON.stringify(parameters), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data_otc) {\n                data_otc = prepareExchangedData(data_otc, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                if (data_otc.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data_otc.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // If expected, show the OPT to the admin\n                    if (data_otc.visible_otp === true) {\n                        showModalDialogBox(\n                            '#warningModal',\n                            '<i class=\"fa-solid fa-user-secret mr-2\"></i><<?php echo langHdl('your_attention_is_required'); ?>',\n                            '<?php echo langHdl('show_encryption_code_to_admin'); ?>' +\n                            '<div><input class=\"form-control form-item-control flex-nowrap ml-2\" value=\"' + data_otc.code + '\" readonly></div>',\n                            '',\n                            '<?php echo langHdl('close'); ?>'\n                        );\n                    }\n\n                    // update the process\n                    // add all tasks\n                    var data_to_send = {\n                        user_id: data.user_id,\n                        user_code: data_otc.code,\n                    }\n\n                    //console.log(data_to_send);\n                    //return false;\n\n                    // Do query\n                    $.post(\n                        \"sources/users.queries.php\", {\n                            type: \"create_new_user_tasks\",\n                            data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                            key: '<?php echo $_SESSION['key']; ?>'\n                        },\n                        function(data_tasks) {\n                            data_tasks = prepareExchangedData(data_tasks, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                            \n                            if (data_tasks.error === true) {\n                                // error\n                                toastr.remove();\n                                toastr.error(\n                                    data_tasks.message,\n                                    '<?php echo langHdl('caution'); ?>', {\n                                        timeOut: 5000,\n                                        progressBar: true\n                                    }\n                                );\n                            } else {\n                                // show message to user\n                                // Finalizing\n                                //$('#warningModal').modal('hide');\n\n                                // Now close in progress toast\n                                $('.close-toastr-progress').closest('.toast').remove();\n                                \n                                // refresh the list of users in LDAP not added in Teampass\n                                refreshListUsersLDAP();    \n\n                                // Rrefresh list of users in Teampass\n                                oTable.ajax.reload();\n\n                                toastr.success(\n                                    '<?php echo langHdl('done'); ?>',\n                                    '', {\n                                        timeOut: 1000\n                                    }\n                                );\n                            }\n                        }\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Permits to change the auth type of the user\n     *\n     * @return void\n     */\n    function changeUserAuthType(auth) {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'id': $('.selected-user').data('user-id'),\n            'auth_type': auth\n        };\n        if (debugJavascript === true) console.log(data)\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'change_user_auth_type',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    refreshListUsersLDAP();\n                }\n            }\n        );\n    }\n\n    $(document)\n        .on('click', '.add-user-icon', function() {\n            var thisElement = $(this);\n            $(thisElement).addClass('selected-user');\n\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-user-plus fa-lg warning mr-2\"></i><?php echo langHdl('new_ldap_user_info'); ?> <b>'+$(this)[0].dataset.userLogin+'</b>',\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('name'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-name\" value=\"'+ $(this).attr('data-user-name')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('lastname'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-lastname\" value=\"'+ $(this).attr('data-user-lastname')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('email'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-email\" value=\"'+ $(this).attr('data-user-email')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-roles\"><?php echo langHdl('roles'); ?></label>'+\n                    '<select id=\"ldap-user-roles\" class=\"form-control form-item-control select2 required\" style=\"width:100%;\" multiple=\"multiple\">'+\n                    '<?php echo $optionsRoles; ?></select>'+\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $(document).on('click', '#warningModalButtonAction', function() {\n                if ($('#ldap-user-name').val() !== \"\" && $('#ldap-user-roles :selected').length > 0) {\n                    addUserInTeampass();\n                    $(thisElement).removeClass('selected-user');\n                }\n            });\n            $(document).on('click', '#warningModalButtonClose', function() {\n                $(thisElement).removeClass('selected-user');\n            });\n        })\n        .on('click', '.auth-ldap', function() {\n            $(this).addClass('selected-user');\n\n            toastr.warning(\n                '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"changeUserAuthType(\\'ldap\\')\"><?php echo langHdl('please_confirm'); ?></button>',\n                '<?php echo langHdl('change_authentification_type_to_ldap'); ?>', {\n                    positionClass: 'toast-top-center',\n                    closeButton: true\n                }\n            );\n        })\n        .on('click', '.auth-local', function() {\n            $(this).addClass('selected-user');\n\n            toastr.warning(\n                '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"changeUserAuthType(\\'local\\')\"><?php echo langHdl('please_confirm'); ?></button>',\n                '<?php echo langHdl('change_authentification_type_to_local'); ?>', {\n                    positionClass: 'toast-top-center',\n                    closeButton: true\n                }\n            );\n        });\n\n\n\n    //]]>\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      users.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception(\"Error file '/includes/config/tp.config.php' not exists\", 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'users', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n// Load superGlobals\ninclude_once $SETTINGS['cpassman_dir'] . '/includes/libraries/protect/SuperGlobal/SuperGlobal.php';\n$superGlobal = new protect\\SuperGlobal\\SuperGlobal();\n// Connect to mysql server\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Database/Meekrodb/db.class.php';\nif (defined('DB_PASSWD_CLEAR') === false) {\n    define('DB_PASSWD_CLEAR', defuseReturnDecrypted(DB_PASSWD, $SETTINGS));\n}\nDB::$host = DB_HOST;\nDB::$user = DB_USER;\nDB::$password = DB_PASSWD_CLEAR;\nDB::$dbName = DB_NAME;\nDB::$port = DB_PORT;\nDB::$encoding = DB_ENCODING;\nDB::$ssl = DB_SSL;\nDB::$connect_options = DB_CONNECT_OPTIONS;\n// PREPARE LIST OF OPTIONS\n$optionsManagedBy = '';\n$optionsRoles = '';\n$userRoles = explode(';', $_SESSION['fonction_id']);\n// If administrator then all roles are shown\n// else only the Roles the users is associated to.\nif ((int) $_SESSION['is_admin'] === 1) {\n    $optionsManagedBy .= '<option value=\"0\">' . langHdl('administrators_only') . '</option>';\n}\n\n$rows = DB::query(\n    'SELECT id, title, creator_id\n    FROM ' . prefixTable('roles_title') . '\n    ORDER BY title ASC'\n);\nforeach ($rows as $record) {\n    if ((int) $_SESSION['is_admin'] === 1 || in_array($record['id'], $_SESSION['user_roles']) === true) {\n        $optionsManagedBy .= '<option value=\"' . $record['id'] . '\">' . langHdl('managers_of') . ' ' . addslashes($record['title']) . '</option>';\n    }\n    if (\n        (int) $_SESSION['is_admin'] === 1\n        || (((int) $superGlobal->get('user_manager', 'SESSION') === 1 || (int) $_SESSION['user_can_manage_all_users'] === 1)\n            && (in_array($record['id'], $userRoles) === true) || (int) $record['creator_id'] === (int) $_SESSION['user_id'])\n    ) {\n        $optionsRoles .= '<option value=\"' . $record['id'] . '\">' . addslashes($record['title']) . '</option>';\n    }\n}\n\n//Build tree\n$tree = new SplClassLoader('Tree\\NestedTree', $SETTINGS['cpassman_dir'] . '/includes/libraries');\n$tree->register();\n$tree = new Tree\\NestedTree\\NestedTree(prefixTable('nested_tree'), 'id', 'parent_id', 'title');\n$treeDesc = $tree->getDescendants();\n$foldersList = '';\nforeach ($treeDesc as $t) {\n    if (\n        in_array($t->id, $_SESSION['groupes_visibles']) === true\n        && in_array($t->id, $_SESSION['personal_visible_groups']) === false\n    ) {\n        $ident = '';\n        for ($y = 1; $y < $t->nlevel; ++$y) {\n            $ident .= '&nbsp;&nbsp;';\n        }\n        $foldersList .= '<option value=\"' . $t->id . '\">' . $ident . htmlspecialchars($t->title, ENT_COMPAT, 'UTF-8') . '</option>';\n    }\n}\n\n?>\n\n<!-- Content Header (Page header) -->\n<div class=\"content-header\">\n    <div class=\"container-fluid\">\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-6\">\n                <h1 class=\"m-0 text-dark\">\n                    <i class=\"fa-solid fa-users mr-2\"></i><?php echo langHdl('users'); ?>\n                </h1>\n            </div><!-- /.col -->\n        </div><!-- /.row -->\n    </div><!-- /.container-fluid -->\n</div>\n<!-- /.content-header -->\n\n<section class=\"content\">\n    <div class=\"row\" id=\"row-list\">\n        <div class=\"col-12\">\n            <div class=\"card\">\n                <div class=\"card-header align-middle\">\n                    <h3 class=\"card-title\">\n                        <button type=\"button\" class=\"btn btn-primary btn-sm tp-action mr-2\" data-action=\"new\">\n                            <i class=\"fa-solid fa-plus mr-2\"></i><?php echo langHdl('new'); ?>\n                        </button>\n                        <button type=\"button\" class=\"btn btn-primary btn-sm tp-action mr-2\" data-action=\"propagate\">\n                            <i class=\"fa-solid fa-share-alt mr-2\"></i><?php echo langHdl('propagate'); ?>\n                        </button>\n                        <button type=\"button\" class=\"btn btn-primary btn-sm tp-action mr-2\" data-action=\"refresh\">\n                            <i class=\"fa-solid fa-sync-alt mr-2\"></i><?php echo langHdl('refresh'); ?>\n                        </button><?php\n                                    echo isset($SETTINGS['ldap_mode']) === true && (int) $SETTINGS['ldap_mode'] === 1 && (int) $_SESSION['is_admin'] === 1 ?\n                                        '<button type=\"button\" class=\"btn btn-primary btn-sm tp-action mr-2\" data-action=\"ldap-sync\">\n                            <i class=\"fa-solid fa-address-card mr-2\"></i>' . langHdl('ldap_synchronization') . '\n                        </button>' : '';\n                                    ?>\n                    </h3>\n                </div>\n\n                <!-- /.card-header -->\n                <div class=\"card-body form\" id=\"users-list\">\n                    <table id=\"table-users\" class=\"table table-striped nowrap table-responsive-sm\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\"></th>\n                                <th scope=\"col\"><?php echo langHdl('user_login'); ?></th>\n                                <th scope=\"col\"><?php echo langHdl('name'); ?></th>\n                                <th scope=\"col\"><?php echo langHdl('lastname'); ?></th>\n                                <th scope=\"col\"><?php echo langHdl('managed_by'); ?></th>\n                                <th scope=\"col\"><?php echo langHdl('functions'); ?></th>\n                                <th scope=\"col\"><i class=\"fa-solid fa-theater-masks fa-lg fa-fw infotip\" title=\"<?php echo langHdl('privileges'); ?>\"></i></th>\n                                <th scope=\"col\"><i class=\"fa-solid fa-code-branch fa-lg fa-fw infotip\" title=\"<?php echo langHdl('can_create_root_folder'); ?>\"></i></th>\n                                <th scope=\"col\"><i class=\"fa-solid fa-hand-holding-heart fa-lg fa-fw infotip\" title=\"<?php echo langHdl('enable_personal_folder'); ?>\"></i></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n\n    <!-- USER LDAP SYNCHRONIZATION -->\n    <div class=\"row hidden extra-form\" id=\"row-ldap\">\n        <div class=\"col-12\">\n            <div class=\"card card-primary\">\n                <div class=\"card-header\">\n                    <h3 class=\"card-title\"><?php echo langHdl('ldap_synchronization'); ?> <span id=\"row-logs-title\"></span></h3>\n                </div>\n\n                <!-- /.card-header -->\n                <!-- table start -->\n                <div class=\"card-body\">\n                    <div class=\"row col-12\">\n                        <button type=\"button\" class=\"btn btn-secondary btn-sm tp-action mr-2\" data-action=\"ldap-existing-users\">\n                            <i class=\"fa-solid fa-sync-alt mr-2\"></i><?php echo langHdl('list_users'); ?>\n                        </button>\n                        <button type=\"button\" class=\"btn btn-secondary btn-sm tp-action mr-2\" data-action=\"ldap-add-role\">\n                            <i class=\"fa-solid fa-graduation-cap mr-2\"></i><?php echo langHdl('add_role_tip'); ?>\n                        </button>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"card hidden mt-4 mb-5 card-info\" id=\"ldap-new-role\">\n                                <div class=\"card-header\">\n                                    <i class=\"fa-solid fa-graduation-cap mr-2\"></i><?php echo langHdl('add_role_tip'); ?>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"callout callout-info\">\n                                        <i class=\"fa-solid fa-info-circle text-info mr-2\"></i><?php echo langHdl('adding_ldap_role_to_teampass'); ?>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <label for=\"ldap-new-role-selection\"><?php echo langHdl('select_role_to_create'); ?></label>\n                                        <select class=\"form-control form-item-control\" style=\"width:100%;\" id=\"ldap-new-role-selection\"></select>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <label for=\"ldap-new-role-complexity\"><?php echo langHdl('complexity'); ?></label>\n                                        <select id=\"ldap-new-role-complexity\" class=\"form-control form-item-control\" style=\"width:100%;\">\n                                            <?php\n                                            foreach (TP_PW_COMPLEXITY as $entry) {\n                                                echo '\n                                            <option value=\"' . $entry[0] . '\">' . addslashes($entry[1]) . '</option>';\n                                            }\n                                            ?>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class=\"card-footer\">\n                                    <button type=\"button\" class=\"btn btn-default float-left tp-action btn-info\" data-action=\"add-new-role\"><?php echo langHdl('submit'); ?></button>\n                                    <button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"close-new-role\"><?php echo langHdl('close'); ?></button>\n                                </div>\n                            </div>\n                            <div class=\"card-body table-responsive p-0\" id=\"ldap-users-table\">\n                                <table class=\"table table-hover table-responsive\">\n                                    <thead>\n                                        <tr>\n                                            <th style=\"width: 25%;\"><i class=\"fa-solid fa-id-badge mr-1\"></i><?php echo langHdl('login'); ?></th>\n                                            <th style=\"width: 60px; text-align:center;\"><i class=\"fa-solid fa-info infotip pointer\" title=\"<?php echo langHdl('more_information'); ?>\"></i></th>\n                                            <th style=\"width: 60px;\"><i class=\"fa-solid fa-sync-alt infotip pointer\" title=\"<?php echo langHdl('synchronized'); ?>\"></i></th>\n                                            <th style=\"\"><i class=\"fa-solid fa-graduation-cap mr-1\"></i><?php echo langHdl('roles'); ?></th>\n                                            <th style=\"width: 15%;\"><i class=\"fa-solid fa-wrench mr-1\"></i><?php echo langHdl('action'); ?></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody id=\"row-ldap-body\">\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"card-footer\">\n                        <button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"close\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- USER FORM -->\n    <div class=\"row hidden extra-form\" id=\"row-form\">\n        <div class=\"col-12\">\n            <div class=\"card card-primary\">\n                <div class=\"card-header\">\n                    <h3 class=\"card-title\"><?php echo langHdl('user_definition'); ?></h3>\n                </div>\n\n                <!-- /.card-header -->\n                <!-- form start -->\n                <form role=\"form\" id=\"form-user\">\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-lg-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"form-name\"><?php echo langHdl('name'); ?></label>\n                                    <input type=\"text\" class=\"form-control clear-me required track-change\" id=\"form-name\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"form-login\"><?php echo langHdl('login'); ?></label>\n                                    <input type=\"text\" class=\"form-control clear-me required build-login track-change\" id=\"form-login\">\n                                    <input type=\"hidden\" id=\"form-login-conform\" value=\"0\">\n                                </div>\n                            </div>\n                            \n                            <div class=\"col-lg-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"form-lastname\"><?php echo langHdl('lastname'); ?></label>\n                                    <input type=\"text\" class=\"form-control clear-me required track-change\" id=\"form-lastname\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"form-login\"><?php echo langHdl('email'); ?></label>\n                                    <input type=\"email\" class=\"form-control clear-me required track-change validate-email\" id=\"form-email\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"form-login\" class=\"mr-2\"><?php echo langHdl('privileges'); ?></label>\n                            <input type=\"radio\" class=\"form-check-input form-control flat-blue only-admin track-change\" name=\"privilege\" id=\"privilege-admin\">\n                            <label class=\"form-check-label mr-2 pointer\" for=\"privilege-admin\"><?php echo langHdl('administrator'); ?></label>\n                            <input type=\"radio\" class=\"form-check-input form-control flat-blue only-admin track-change\" name=\"privilege\" id=\"privilege-hr\">\n                            <label class=\"form-check-label mr-2 pointer\" for=\"privilege-hr\"><?php echo langHdl('super_manager'); ?></label>\n                            <input type=\"radio\" class=\"form-check-input form-control flat-blue only-admin track-change\" name=\"privilege\" id=\"privilege-manager\">\n                            <label class=\"form-check-label mr-2 pointer\" for=\"privilege-manager\"><?php echo langHdl('manager'); ?></label>\n                            <input type=\"radio\" class=\"form-check-input form-control flat-blue track-change\" name=\"privilege\" id=\"privilege-user\">\n                            <label class=\"form-check-label mr-2 pointer\" for=\"privilege-user\"><?php echo langHdl('user'); ?></label>\n                            <input type=\"radio\" class=\"form-check-input form-control flat-blue track-change\" name=\"privilege\" id=\"privilege-ro\">\n                            <label class=\"form-check-label mr-2 pointer\" for=\"privilege-ro\"><?php echo langHdl('read_only'); ?></label>\n                        </div>\n                        <div class=\"form-group not-for-admin\">\n                            <label for=\"form-roles\"><?php echo langHdl('roles'); ?></label>\n                            <select id=\"form-roles\" class=\"form-control form-item-control select2 no-root required track-change\" style=\"width:100%;\" multiple=\"multiple\">\n                                <?php echo $optionsRoles; ?>\n                            </select>\n                        </div>\n                        <div class=\"form-group not-for-admin\">\n                            <label for=\"form-managedby\"><?php echo langHdl('managed_by'); ?></label>\n                            <select id=\"form-managedby\" class=\"form-control form-item-control select2 no-root required track-change\" style=\"width:100%;\">\n                                <?php echo $optionsManagedBy; ?>\n                            </select>\n                        </div>\n                        <div class=\"form-group not-for-admin\">\n                            <label for=\"form-auth\"><?php echo langHdl('authorized_groups'); ?></label>\n                            <select id=\"form-auth\" class=\"form-control form-item-control select2 no-root track-change\" style=\"width:100%;\" multiple=\"multiple\">\n                                <?php echo $foldersList; ?>\n                            </select>\n                        </div>\n                        <div class=\"form-group not-for-admin\">\n                            <label for=\"form-forbid\"><?php echo langHdl('forbidden_groups'); ?></label>\n                            <select id=\"form-forbid\" class=\"form-control form-item-control select2 no-root track-change\" style=\"width:100%;\" multiple=\"multiple\">\n                                <?php echo $foldersList; ?>\n                            </select>\n                        </div>\n                        <div class=\"form-group not-for-admin\">\n                            <label for=\"form-forbid\"><?php echo langHdl('special'); ?></label>\n                        </div>\n                        <div class=\"form-group not-for-admin\">\n                            <input type=\"checkbox\" class=\"form-check-input form-control flat-blue track-change\" id=\"form-create-root-folder\">\n                            <label class=\"form-check-label mr-2\" for=\"form-create-root-folder\"><?php echo langHdl('can_create_root_folder'); ?></label>\n                        </div>\n                        <div class=\"form-group not-for-admin\">\n                            <input type=\"checkbox\" class=\"form-check-input form-control flat-blue track-change\" id=\"form-create-personal-folder\">\n                            <label class=\"form-check-label mr-2\" for=\"form-create-personal-folder\"><?php echo langHdl('enable_personal_folder_for_this_user'); ?></label>\n                        </div>\n                        <div class=\"form-group not-for-admin\" id=\"group-create-special-folder\">\n                            <input type=\"checkbox\" class=\"form-check-input form-control flat-blue track-change\" id=\"form-create-special-folder\">\n                            <label class=\"form-check-label mr-2\" for=\"form-create-special-folder\"><?php echo langHdl('auto_create_folder_role'); ?></label>\n                            <input type=\"text\" class=\"form-control clear-me mt-1\" id=\"form-special-folder\" disabled=\"true\" placeholder=\"<?php echo langHdl('label'); ?>\">\n                        </div>\n                        <div class=\"form-group not-for-admin\" id=\"form-create-mfa-enabled-div\">\n                            <input type=\"checkbox\" class=\"form-check-input form-control flat-blue track-change\" id=\"form-create-mfa-enabled\">\n                            <label class=\"form-check-label mr-2\" for=\"form-create-mfa-enabled\"><?php echo langHdl('mfa_enabled'); ?></label>\n                        </div>\n                    </div>\n                    <!-- /.card-body -->\n                </form>\n\n                <div class=\"card-footer\">\n                    <button type=\"button\" class=\"btn btn-primary tp-action\" data-action=\"submit\"><?php echo langHdl('submit'); ?></button>\n                    <button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- USER LOGS -->\n    <div class=\"row hidden extra-form\" id=\"row-logs\">\n        <div class=\"col-12\">\n            <div class=\"card card-primary\">\n                <div class=\"card-header\">\n                    <h3 class=\"card-title\"><?php echo langHdl('logs_for_user'); ?> <span id=\"row-logs-title\"></span></h3>\n                </div>\n\n                <!-- /.card-header -->\n                <!-- table start -->\n                <div class=\"card-body form\" id=\"user-logs\">\n                    <table id=\"table-logs\" class=\"table table-striped table-responsive\" style=\"width:100%\">\n                        <thead>\n                            <tr>\n                                <th><?php echo langHdl('date'); ?></th>\n                                <th><?php echo langHdl('activity'); ?></th>\n                                <th><?php echo langHdl('label'); ?></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                        </tbody>\n                    </table>\n                </div>\n\n                <div class=\"card-footer\">\n                    <button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- USER VISIBLE FOLDERS -->\n    <div class=\"row hidden extra-form\" id=\"row-folders\">\n        <div class=\"col-12\">\n            <div class=\"card card-primary\">\n                <div class=\"card-header\">\n                    <h3 class=\"card-title\"><?php echo langHdl('access_rights_for_user'); ?> <span id=\"row-folders-title\"></span></h3>\n                </div>\n\n                <!-- /.card-header -->\n                <!-- table start -->\n                <div class=\"card-body\" id=\"row-folders-results\">\n\n                </div>\n\n                <div class=\"card-footer\">\n                    <button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- PROPAGATE USER RIGHTS -->\n    <div class=\"row hidden extra-form\" id=\"row-propagate\">\n        <div class=\"col-12\">\n            <div class=\"card card-primary\">\n                <div class=\"card-header\">\n                    <h3 class=\"card-title\"><?php echo langHdl('propagate_user_rights'); ?></h3>\n                </div>\n\n                <!-- /.card-header -->\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"callout callout-info col-12\">\n                            <i class=\"fa-solid fa-info fa-lg mr-2\"></i><?php echo langHdl('share_rights_info'); ?>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"propagate-from\"><?php echo langHdl('share_rights_source'); ?></label>\n                        <select id=\"propagate-from\" class=\"form-control form-item-control select2\" style=\"width:100%;\">\n                            <?php echo $optionsRoles; ?>\n                        </select>\n                    </div>\n\n                    <div class=\"form-group ml-5\">\n                        <label><i class=\"far fa-hand-point-right fa-xs mr-2\"></i><?php echo langHdl('functions'); ?></label>\n                        <span id=\"propagate-user-roles\"></span>\n                    </div>\n\n                    <div class=\"form-group ml-5\">\n                        <label><i class=\"far fa-hand-point-right fa-xs mr-2\"></i><?php echo langHdl('managed_by'); ?></label>\n                        <span id=\"propagate-user-managedby\"></span>\n                    </div>\n\n                    <div class=\"form-group ml-5\">\n                        <label><i class=\"far fa-hand-point-right fa-xs mr-2\"></i><?php echo langHdl('authorized_groups'); ?></label>\n                        <span id=\"propagate-user-allowed\"></span>\n                    </div>\n\n                    <div class=\"form-group ml-5\">\n                        <label><i class=\"far fa-hand-point-right fa-xs mr-2\"></i><?php echo langHdl('forbidden_groups'); ?></label>\n                        <span id=\"propagate-user-fordidden\"></span>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"propagate-to\"><?php echo langHdl('share_rights_destination'); ?></label>\n                        <select id=\"propagate-to\" class=\"form-control form-item-control select2\" style=\"width:100%;\" multiple=\"multiple\">\n                            <?php echo $optionsRoles; ?>\n                        </select>\n                    </div>\n\n                </div>\n\n\n                <div class=\"card-footer\">\n                    <button type=\"button\" class=\"btn btn-primary tp-action\" data-action=\"do-propagate\"><?php echo langHdl('perform'); ?></button>\n                    <button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n</section>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n * @project   Teampass\n * @file      admin.queries.php\n * ---\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n * @copyright 2009-2023 Teampass.net\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n * @see       https://www.teampass.net\n */\n\n\nrequire_once 'SecureHandler.php';\nsession_name('teampass_session');\nsession_start();\nif (\n    isset($_SESSION['CPM']) === false\n    || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id'])\n    || isset($_SESSION['key']) === false || empty($_SESSION['key'])\n) {\n    die('Hacking attempt...');\n}\n\n// Load config if $SETTINGS not defined\nif (isset($SETTINGS['cpassman_dir']) === false || empty($SETTINGS['cpassman_dir'])) {\n    if (file_exists('../includes/config/tp.config.php')) {\n        include_once '../includes/config/tp.config.php';\n    } elseif (file_exists('./includes/config/tp.config.php')) {\n        include_once './includes/config/tp.config.php';\n    } elseif (file_exists('../../includes/config/tp.config.php')) {\n        include_once '../../includes/config/tp.config.php';\n    } else {\n        throw new Exception(\"Error file '/includes/config/tp.config.php' not exists\", 1);\n    }\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/config/include.php';\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (!checkUser($_SESSION['user_id'], $_SESSION['key'], 'options', $SETTINGS)) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED; //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/language/' . $_SESSION['user']['user_language'] . '.php';\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/config/settings.php';\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/config/tp.config.php';\n\nheader('Content-type: text/html; charset=utf-8');\nheader('Cache-Control: no-cache, no-store, must-revalidate');\n\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/SplClassLoader.php';\n\n// connect to the server\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Database/Meekrodb/db.class.php';\nif (defined('DB_PASSWD_CLEAR') === false) {\n    define('DB_PASSWD_CLEAR', defuseReturnDecrypted(DB_PASSWD, $SETTINGS));\n}\nDB::$host = DB_HOST;\nDB::$user = DB_USER;\nDB::$password = DB_PASSWD_CLEAR;\nDB::$dbName = DB_NAME;\nDB::$port = DB_PORT;\nDB::$encoding = DB_ENCODING;\nDB::$ssl = DB_SSL;\nDB::$connect_options = DB_CONNECT_OPTIONS;\n\n//Load Tree\n$tree = new SplClassLoader('Tree\\NestedTree', '../includes/libraries');\n$tree->register();\n$tree = new Tree\\NestedTree\\NestedTree(prefixTable('nested_tree'), 'id', 'parent_id', 'title');\n\n//Load AES\n$aes = new SplClassLoader('Encryption\\Crypt', '../includes/libraries');\n$aes->register();\n\n// Prepare POST variables\n$post_type = filter_input(INPUT_POST, 'type', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n$post_data = filter_input(INPUT_POST, 'data', FILTER_SANITIZE_FULL_SPECIAL_CHARS, FILTER_FLAG_NO_ENCODE_QUOTES);\n$post_key = filter_input(INPUT_POST, 'key', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n$post_id = filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT);\n$post_status = filter_input(INPUT_POST, 'status', FILTER_SANITIZE_NUMBER_INT);\n$post_label = filter_input(INPUT_POST, 'label', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n$post_action = filter_input(INPUT_POST, 'action', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n$post_cpt = filter_input(INPUT_POST, 'cpt', FILTER_SANITIZE_NUMBER_INT);\n$post_object = filter_input(INPUT_POST, 'object', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n$post_start = filter_input(INPUT_POST, 'start', FILTER_SANITIZE_NUMBER_INT);\n$post_length = filter_input(INPUT_POST, 'length', FILTER_SANITIZE_NUMBER_INT);\n$post_option = filter_input(INPUT_POST, 'option', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n$post_nbItems = filter_input(INPUT_POST, 'nbItems', FILTER_SANITIZE_NUMBER_INT);\n$post_counter = filter_input(INPUT_POST, 'counter', FILTER_SANITIZE_NUMBER_INT);\n$post_list = filter_input(INPUT_POST, 'list', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n\nswitch ($post_type) {\n        //CASE for getting informations about the tool\n    case 'cpm_status':\n        $text = '<ul>';\n        $error = '';\n        if (TP_ADMIN_NO_INFO === false) {\n            if (isset($SETTINGS['get_tp_info']) && (int) $SETTINGS['get_tp_info'] === 1) {\n                // Get info about Teampass\n                if (\n                    isset($SETTINGS['proxy_ip']) === true && empty($SETTINGS['proxy_ip']) === false &&\n                    isset($SETTINGS['proxy_port']) === true && empty($SETTINGS['proxy_port']) === false\n                ) {\n                    $context = stream_context_create(\n                        array(\n                            'http' => array(\n                                'ignore_errors' => true,\n                                'proxy' => $SETTINGS['proxy_ip'] . ':' . $SETTINGS['proxy_port'],\n                            ),\n                        )\n                    );\n                } else {\n                    $context = stream_context_create(\n                        array(\n                            'http' => array(\n                                'ignore_errors' => true,\n                            ),\n                        )\n                    );\n                }\n\n                $json = @file_get_contents('https://teampass.net/utils/teampass_info.json', false, $context);\n                if ($json !== false) {\n                    $json_array = json_decode($json, true);\n\n                    // About version\n                    $text .= '<li><u>' . $LANG['your_version'] . '</u> : ' . TP_VERSION;\n                    if (floatval(TP_VERSION) < floatval($json_array['info']['version'])) {\n                        $text .= '&nbsp;&nbsp;<b>' . $LANG['please_update'] . '</b>';\n                    }\n                    $text .= '</li>';\n\n                    // Libraries\n                    $text .= '<li><u>Libraries</u> :</li>';\n                    foreach ($json_array['libraries'] as $key => $val) {\n                        $text .= \"<li>&nbsp;<span class='fa fa-caret-right'></span>&nbsp;\" . $key . \" (<a href='\" . $val . \"' target='_blank'>\" . $val . '</a>)</li>';\n                    }\n                }\n            } else {\n                $error = 'conf_block';\n            }\n        } else {\n            $error = 'conf_block';\n        }\n        $text .= '</ul>';\n\n        echo '[{\"error\":\"' . $error . '\" , \"output\":\"' . str_replace(array(\"\\n\", \"\\t\", \"\\r\"), '', $text) . '\"}]';\n        break;\n        \n\n        //##########################################################\n        //CASE for creating a DB backup\n    case 'admin_action_db_backup':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        require_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n        $return = '';\n\n        //Get all tables\n        $tables = array();\n        $result = DB::query('SHOW TABLES');\n        foreach ($result as $row) {\n            $tables[] = $row['Tables_in_' . $database];\n        }\n\n        //cycle through\n        foreach ($tables as $table) {\n            if (defined('DB_PREFIX') || substr_count($table, DB_PREFIX) > 0) {\n                // Do query\n                $result = DB::queryRaw('SELECT * FROM ' . $table);\n                DB::queryRaw(\n                    'SELECT *\n                    FROM INFORMATION_SCHEMA.COLUMNS\n                    WHERE table_schema = %s\n                    AND table_name = %s',\n                    $database,\n                    $table\n                );\n                $numFields = DB::count();\n\n                // prepare a drop table\n                $return .= 'DROP TABLE ' . $table . ';';\n                $row2 = DB::queryfirstrow('SHOW CREATE TABLE ' . $table);\n                $return .= \"\\n\\n\" . $row2['Create Table'] . \";\\n\\n\";\n\n                //prepare all fields and datas\n                for ($i = 0; $i < $numFields; ++$i) {\n                    while ($row = $result->fetch_row()) {\n                        $return .= 'INSERT INTO ' . $table . ' VALUES(';\n                        for ($j = 0; $j < $numFields; ++$j) {\n                            $row[$j] = addslashes($row[$j]);\n                            $row[$j] = preg_replace(\"/\\n/\", '\\\\n', $row[$j]);\n                            if (isset($row[$j])) {\n                                $return .= '\"' . $row[$j] . '\"';\n                            } else {\n                                $return .= 'NULL';\n                            }\n                            if ($j < ($numFields - 1)) {\n                                $return .= ',';\n                            }\n                        }\n                        $return .= \");\\n\";\n                    }\n                }\n                $return .= \"\\n\\n\\n\";\n            }\n        }\n\n        if (!empty($return)) {\n            // get a token\n            $token = GenerateCryptKey(20, false, true, true, false, true, $SETTINGS);\n\n            //save file\n            $filename = time() . '-' . $token . '.sql';\n            $handle = fopen($SETTINGS['path_to_files_folder'] . '/' . $filename, 'w+');\n            if ($handle !== false) {\n                //write file\n                fwrite($handle, $return);\n                fclose($handle);\n            }\n\n            // Encrypt the file\n            if (empty($post_option) === false) {\n                // Encrypt the file\n                prepareFileWithDefuse(\n                    'encrypt',\n                    $SETTINGS['path_to_files_folder'] . '/' . $filename,\n                    $SETTINGS['path_to_files_folder'] . '/defuse_temp_' . $filename,\n                    $SETTINGS,\n                    $post_option\n                );\n\n                // Do clean\n                unlink($SETTINGS['path_to_files_folder'] . '/' . $filename);\n                rename(\n                    $SETTINGS['path_to_files_folder'] . '/defuse_temp_' . $filename,\n                    $SETTINGS['path_to_files_folder'] . '/' . $filename\n                );\n            }\n\n            //generate 2d key\n            $_SESSION['key_tmp'] = GenerateCryptKey(20, false, true, true, false, true, $SETTINGS);\n\n            //update LOG\n            logEvents($SETTINGS, 'admin_action', 'dataBase backup', (string) $_SESSION['user_id'], $_SESSION['login']);\n\n            echo '[{\"result\":\"db_backup\" , \"href\":\"sources/downloadFile.php?name=' . urlencode($filename) . '&sub=files&file=' . $filename . '&type=sql&key=' . $_SESSION['key'] . '&key_tmp=' . $_SESSION['key_tmp'] . '&pathIsFiles=1\"}]';\n        }\n        break;\n\n        //##########################################################\n        //CASE for restoring a DB backup\n    case 'admin_action_db_restore':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        include_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n\n        $dataPost = explode('&', $post_option);\n        $file = htmlspecialchars($dataPost[0]);\n        $key = htmlspecialchars($dataPost[1]);\n\n        // Get filename from database\n        $data = DB::queryFirstRow(\n            'SELECT valeur\n            FROM ' . prefixTable('misc') . '\n            WHERE increment_id = %i',\n            $file\n        );\n\n        $file = $data['valeur'];\n\n        // Delete operation id\n        DB::delete(\n            prefixTable('misc'),\n            'increment_id = %i',\n            $file\n        );\n\n        // Undecrypt the file\n        if (empty($key) === false) {\n            // Decrypt the file\n            $ret = prepareFileWithDefuse(\n                'decrypt',\n                $SETTINGS['path_to_files_folder'] . '/' . $file,\n                $SETTINGS['path_to_files_folder'] . '/defuse_temp_' . $file,\n                $SETTINGS,\n                $key\n            );\n\n            if (empty($ret) === false) {\n                echo '[{\"result\":\"db_restore\" , \"message\":\"' . $ret . '\"}]';\n                break;\n            }\n\n            // Do clean\n            fileDelete($SETTINGS['path_to_files_folder'] . '/' . $file, $SETTINGS);\n            $file = $SETTINGS['path_to_files_folder'] . '/defuse_temp_' . $file;\n        } else {\n            $file = $SETTINGS['path_to_files_folder'] . '/' . $file;\n        }\n\n        //read sql file\n        $handle = fopen($file, 'r');\n        $query = '';\n        while (!feof($handle)) {\n            $query .= fgets($handle, 4096);\n            if (substr(rtrim($query), -1) === ';') {\n                //launch query\n                DB::queryRaw($query);\n                $query = '';\n            }\n        }\n        fclose($handle);\n\n        //delete file\n        unlink($SETTINGS['path_to_files_folder'] . '/' . $file);\n\n        //Show done\n        echo '[{\"result\":\"db_restore\" , \"message\":\"\"}]';\n        break;\n\n        //##########################################################\n        //CASE for optimizing the DB\n    case 'admin_action_db_optimize':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        //Get all tables\n        $alltables = DB::query('SHOW TABLES');\n        foreach ($alltables as $table) {\n            foreach ($table as $i => $tablename) {\n                if (substr_count($tablename, DB_PREFIX) > 0) {\n                    // launch optimization quieries\n                    DB::query('ANALYZE TABLE `' . $tablename . '`');\n                    DB::query('OPTIMIZE TABLE `' . $tablename . '`');\n                }\n            }\n        }\n\n        //Clean up LOG_ITEMS table\n        $rows = DB::query(\n            'SELECT id\n            FROM ' . prefixTable('items') . '\n            ORDER BY id ASC'\n        );\n        foreach ($rows as $item) {\n            DB::query(\n                'SELECT * FROM ' . prefixTable('log_items') . ' WHERE id_item = %i AND action = %s',\n                $item['id'],\n                'at_creation'\n            );\n            $counter = DB::count();\n            if ($counter === 0) {\n                //Create new at_creation entry\n                $rowTmp = DB::queryFirstRow(\n                    'SELECT date, id_user FROM ' . prefixTable('log_items') . ' WHERE id_item=%i ORDER BY date ASC',\n                    $item['id']\n                );\n                DB::insert(\n                    prefixTable('log_items'),\n                    array(\n                        'id_item' => $item['id'],\n                        'date' => $rowTmp['date'] - 1,\n                        'id_user' => empty($rowTmp['id_user']) === true ? 1 : $rowTmp['id_user'],\n                        'action' => 'at_creation',\n                        'raison' => '',\n                    )\n                );\n            }\n        }\n\n        // Log\n        logEvents(\n            $SETTINGS,\n            'system',\n            'admin_action_db_optimize',\n            (string) $_SESSION['user_id'],\n            $_SESSION['login'],\n            'success'\n        );\n\n        //Show done\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => langHdl('last_execution') . ' ' .\n                    date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) time()) .\n                    '<i class=\"fas fa-check text-success ml-2\"></i>',\n            ),\n            'encode'\n        );\n        break;\n\n        \n\n        /*\n    * Reload the Cache table\n    */\n    case 'admin_action_reload_cache_table':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        require_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n        updateCacheTable('reload', $SETTINGS, NULL);\n\n        // Log\n        logEvents(\n            $SETTINGS,\n            'system',\n            'admin_action_reload_cache_table',\n            (string) $_SESSION['user_id'],\n            $_SESSION['login'],\n            'success'\n        );\n\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            [\n                'error' => false,\n                'message' => langHdl('last_execution') . ' ' .\n                    date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) time()) .\n                    '<i class=\"fas fa-check text-success mr-2\"></i>',\n            ],\n            'encode'\n        );\n        break;\n\n        /*\n       * REBUILD CONFIG FILE\n    */\n    case 'admin_action_rebuild_config_file':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                [\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ],\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // Perform\n        include_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n        $ret = handleConfigFile('rebuild', $SETTINGS);\n\n        // Log\n        logEvents(\n            $SETTINGS,\n            'system',\n            'admin_action_rebuild_config_file',\n            (string) $_SESSION['user_id'],\n            $_SESSION['login'],\n            $ret === true ? 'success' : $ret\n        );\n\n        if ($ret !== true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => $ret,\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => langHdl('last_execution') . ' ' .\n                    date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) time()) .\n                    '<i class=\"fas fa-check text-success ml-2\"></i>',\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n    * Decrypt a backup file\n    */\n    case 'admin_action_backup_decrypt':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // Init\n        $msg = '';\n        $result = '';\n        $filename = $post_option;\n        $tp_settings = [];\n        //get backups infos\n        $rows = DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s', 'admin');\n        foreach ($rows as $record) {\n            $tp_settings[$record['intitule']] = $record['valeur'];\n        }\n\n        // check if backup file is in DB.\n        // If YES then it is encrypted with DEFUSE\n        $bck = DB::queryFirstRow('SELECT valeur FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'backup', 'filename');\n\n        //read file\n        $return = '';\n        $Fnm = $tp_settings['bck_script_path'] . '/' . $filename . '.sql';\n        if (file_exists($Fnm)) {\n            if (!empty($bck) && $bck['valeur'] === $filename) {\n                $err = '';\n\n                // it means that file is DEFUSE encrypted\n                include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/Crypto.php';\n                include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/DerivedKeys.php';\n                include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/KeyOrPassword.php';\n                include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/File.php';\n                include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/Core.php';\n\n                try {\n                    \\Defuse\\Crypto\\File::decryptFileWithPassword(\n                        $SETTINGS['bck_script_path'] . '/' . $post_option . '.sql',\n                        $SETTINGS['bck_script_path'] . '/' . str_replace('encrypted', 'clear', $filename) . '.sql',\n                        base64_decode($SETTINGS['bck_script_key'])\n                    );\n                } catch (Defuse\\Crypto\\Exception\\WrongKeyOrModifiedCiphertextException $ex) {\n                    $err = 'An attack! Either the wrong key was loaded, or the ciphertext has changed since it was created either corrupted in the database or intentionally modified by someone trying to carry out an attack.';\n                }\n\n                if (!empty($err)) {\n                    echo '[{ \"result\":\"backup_decrypt_fails\" , \"msg\":\"' . $err . '\"}]';\n                    break;\n                }\n            } else {\n                // file is bCrypt encrypted\n                $inF = fopen($Fnm, 'r');\n                if ($inF !== false) {\n                    while (feof($inF) === false) {\n                        $return .= fgets($inF, 4096);\n                    }\n                    fclose($inF);\n                }\n\n                $return = Encryption\\Crypt\\aesctr::decrypt(\n                    /* @scrutinizer ignore-type */\n                    $return,\n                    /* @scrutinizer ignore-type */\n                    base64_decode($tp_settings['bck_script_key']),\n                    256\n                );\n\n                //save the file\n                $handle = fopen($tp_settings['bck_script_path'] . '/' . $filename . '.clear.sql', 'w+');\n                if ($handle !== false) {\n                    fwrite($handle, $return);\n                    fclose($handle);\n                }\n            }\n            $result = 'backup_decrypt_success';\n            $msg = $tp_settings['bck_script_path'] . '/' . $filename . '.clear.sql';\n        } else {\n            $result = 'backup_decrypt_fails';\n            $msg = 'File not found: ' . $Fnm;\n        }\n        echo '[{ \"result\":\"' . $result . '\" , \"msg\":\"' . $msg . '\"}]';\n        break;\n\n        /*\n    * Change SALT Key START\n    */\n    case 'admin_action_change_salt_key___start':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        $error = '';\n        require_once 'main.functions.php';\n\n        // store old sk\n        $_SESSION['reencrypt_old_salt'] = file_get_contents(SECUREPATH.'/'.SECUREFILE);\n\n        // generate new saltkey\n        $old_sk_filename = SECUREPATH.'/'.SECUREFILE . date('Y_m_d', mktime(0, 0, 0, (int) date('m'), (int) date('d'), (int) date('y'))) . '.' . time();\n        copy(\n            SECUREPATH.'/'.SECUREFILE,\n            $old_sk_filename\n        );\n        $new_key = defuse_generate_key();\n        file_put_contents(\n            SECUREPATH.'/'.SECUREFILE,\n            $new_key\n        );\n\n        // store new sk\n        $_SESSION['reencrypt_new_salt'] = file_get_contents(SECUREPATH.'/'.SECUREFILE);\n\n        //put tool in maintenance.\n        DB::update(\n            prefixTable('misc'),\n            array(\n                'valeur' => '1',\n            ),\n            'intitule = %s AND type= %s',\n            'maintenance_mode',\n            'admin'\n        );\n        //log\n        logEvents($SETTINGS, 'system', 'change_salt_key', (string) $_SESSION['user_id'], $_SESSION['login']);\n\n        // get number of items to change\n        DB::query('SELECT id FROM ' . prefixTable('items') . ' WHERE perso = %i', 0);\n        $nb_of_items = DB::count();\n\n        // create backup table\n        DB::query('DROP TABLE IF EXISTS ' . prefixTable('sk_reencrypt_backup'));\n        DB::query(\n            'CREATE TABLE `' . prefixTable('sk_reencrypt_backup') . '` (\n            `id` int(12) NOT null AUTO_INCREMENT,\n            `current_table` varchar(100) NOT NULL,\n            `current_field` varchar(500) NOT NULL,\n            `value_id` varchar(500) NOT NULL,\n            `value` text NOT NULL,\n            `value2` varchar(500) NOT NULL,\n            `current_sql` text NOT NULL,\n            `result` text NOT NULL,\n            PRIMARY KEY (`id`)\n            ) CHARSET=utf8;'\n        );\n\n        // store old SK in backup table\n        DB::insert(\n            prefixTable('sk_reencrypt_backup'),\n            array(\n                'current_table' => 'old_sk',\n                'current_field' => 'old_sk',\n                'value_id' => 'old_sk',\n                'value' => $_SESSION['reencrypt_old_salt'],\n                'current_sql' => 'old_sk',\n                'value2' => $old_sk_filename,\n                'result' => 'none',\n            )\n        );\n\n        // delete previous backup files\n        $files = glob($SETTINGS['path_to_upload_folder'] . '/*'); // get all file names\n        foreach ($files as $file) { // iterate files\n            if (is_file($file)) {\n                $file_parts = pathinfo($file);\n                if (strpos($file_parts['filename'], '.bck-change-sk') !== false) {\n                    unlink($file); // delete file\n                }\n            }\n        }\n\n        // Send back\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n                'nextAction' => 'encrypt_items',\n                'nbOfItems' => $nb_of_items,\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n    * Change SALT Key - ENCRYPT\n    */\n    case 'admin_action_change_salt_key___encrypt':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                    'nextAction' => '',\n                    'nbOfItems' => '',\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        $error = '';\n        require_once 'main.functions.php';\n\n        // prepare SK\n        if (empty($_SESSION['reencrypt_new_salt']) || empty($_SESSION['reencrypt_old_salt'])) {\n            // SK is not correct\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => 'saltkeys are empty???',\n                    'nbOfItems' => '',\n                    'nextAction' => '',\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // what objects to treat\n        if (empty($post_object) === true) {\n            // no more object to treat\n            $nextAction = 'finishing';\n        } else {\n            // manage list of objects\n            $objects = explode(',', $post_object);\n\n            // Allowed values for $_POST['object'] : \"items,logs,files,categories\"\n            if (in_array($objects[0], array('items', 'logs', 'files', 'categories')) === false) {\n                echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => true,\n                        'message' => 'Input `' . $objects[0] . '` is not allowed',\n                        'nbOfItems' => '',\n                        'nextAction' => '',\n                    ),\n                    'encode'\n                );\n                break;\n            }\n\n            if ($objects[0] === 'items') {\n                //change all encrypted data in Items (passwords)\n                $rows = DB::query(\n                    'SELECT id, pw, pw_iv\n                    FROM ' . prefixTable('items') . '\n                    WHERE perso = %s\n                    LIMIT ' . $post_start . ', ' . $post_length,\n                    '0'\n                );\n                foreach ($rows as $record) {\n                    // backup data\n                    DB::insert(\n                        prefixTable('sk_reencrypt_backup'),\n                        array(\n                            'current_table' => 'items',\n                            'current_field' => 'pw',\n                            'value_id' => $record['id'],\n                            'value' => $record['pw'],\n                            'current_sql' => 'UPDATE ' . prefixTable('items') . \" SET pw = '\" . $record['pw'] . \"' WHERE id = '\" . $record['id'] . \"';\",\n                            'value2' => 'none',\n                            'result' => 'none',\n                        )\n                    );\n                    $newID = DB::insertId();\n\n                    $pw = cryption(\n                        $record['pw'],\n                        $_SESSION['reencrypt_old_salt'],\n                        'decrypt',\n                        $SETTINGS\n                    );\n                    //encrypt with new SALT\n                    $encrypt = cryption(\n                        $pw['string'],\n                        $_SESSION['reencrypt_new_salt'],\n                        'encrypt',\n                        $SETTINGS\n                    );\n\n                    //save in DB\n                    DB::update(\n                        prefixTable('items'),\n                        array(\n                            'pw' => $encrypt['string'],\n                            'pw_iv' => '',\n                        ),\n                        'id = %i',\n                        $record['id']\n                    );\n\n                    // update backup table\n                    DB::update(\n                        prefixTable('sk_reencrypt_backup'),\n                        array(\n                            'result' => 'ok',\n                        ),\n                        'id=%i',\n                        $newID\n                    );\n                }\n                // ---\n                // CASE OF LOGS\n                // ---\n            } elseif ($objects[0] === 'logs') {\n                //change all encrypted data in Logs (passwords)\n                $rows = DB::query(\n                    'SELECT raison, increment_id\n                    FROM ' . prefixTable('log_items') . \"\n                    WHERE action = %s AND raison LIKE 'at_pw :%'\n                    LIMIT \" . $post_start . ', ' . $post_length,\n                    'at_modification'\n                );\n                foreach ($rows as $record) {\n                    // backup data\n                    DB::insert(\n                        prefixTable('sk_reencrypt_backup'),\n                        array(\n                            'current_table' => 'log_items',\n                            'current_field' => 'raison',\n                            'value_id' => $record['increment_id'],\n                            'value' => $record['raison'],\n                            'current_sql' => 'UPDATE ' . prefixTable('log_items') . \" SET raison = '\" . $record['raison'] . \"' WHERE increment_id = '\" . $record['increment_id'] . \"';\",\n                            'value2' => 'none',\n                            'result' => 'none',\n                        )\n                    );\n                    $newID = DB::insertId();\n\n                    // extract the pwd\n                    $tmp = explode('at_pw :', $record['raison']);\n                    if (!empty($tmp[1])) {\n                        $pw = cryption(\n                            $tmp[1],\n                            $_SESSION['reencrypt_old_salt'],\n                            'decrypt',\n                            $SETTINGS\n                        );\n                        //encrypt with new SALT\n                        $encrypt = cryption(\n                            $pw['string'],\n                            $_SESSION['reencrypt_new_salt'],\n                            'encrypt',\n                            $SETTINGS\n                        );\n\n                        // save in DB\n                        DB::update(\n                            prefixTable('log_items'),\n                            array(\n                                'raison' => 'at_pw :' . $encrypt['string'],\n                                'encryption_type' => 'defuse',\n                            ),\n                            'increment_id = %i',\n                            $record['increment_id']\n                        );\n\n                        // update backup table\n                        DB::update(\n                            prefixTable('sk_reencrypt_backup'),\n                            array(\n                                'result' => 'ok',\n                            ),\n                            'id=%i',\n                            $newID\n                        );\n                    }\n                }\n                // ---\n                // CASE OF CATEGORIES\n                // ---\n            } elseif ($objects[0] === 'categories') {\n                //change all encrypted data in CATEGORIES (passwords)\n                $rows = DB::query(\n                    'SELECT id, data\n                    FROM ' . prefixTable('categories_items') . '\n                    LIMIT ' . $post_start . ', ' . $post_length\n                );\n                foreach ($rows as $record) {\n                    // backup data\n                    DB::insert(\n                        prefixTable('sk_reencrypt_backup'),\n                        array(\n                            'current_table' => 'categories_items',\n                            'current_field' => 'data',\n                            'value_id' => $record['id'],\n                            'value' => $record['data'],\n                            'current_sql' => 'UPDATE ' . prefixTable('categories_items') . \" SET data = '\" . $record['data'] . \"' WHERE id = '\" . $record['id'] . \"';\",\n                            'value2' => 'none',\n                            'result' => 'none',\n                        )\n                    );\n                    $newID = DB::insertId();\n\n                    $pw = cryption(\n                        $record['data'],\n                        $_SESSION['reencrypt_old_salt'],\n                        'decrypt',\n                        $SETTINGS\n                    );\n                    //encrypt with new SALT\n                    $encrypt = cryption(\n                        $pw['string'],\n                        $_SESSION['reencrypt_new_salt'],\n                        'encrypt',\n                        $SETTINGS\n                    );\n                    // save in DB\n                    DB::update(\n                        prefixTable('categories_items'),\n                        array(\n                            'data' => $encrypt['string'],\n                            'encryption_type' => 'defuse',\n                        ),\n                        'id = %i',\n                        $record['id']\n                    );\n\n                    // update backup table\n                    DB::update(\n                        prefixTable('sk_reencrypt_backup'),\n                        array(\n                            'result' => 'ok',\n                        ),\n                        'id=%i',\n                        $newID\n                    );\n                }\n                // ---\n                // CASE OF FILES\n                // ---\n            } elseif ($objects[0] === 'files') {\n                // Change all encrypted data in FILES (passwords)\n                $rows = DB::query(\n                    'SELECT id, file, status\n                    FROM ' . prefixTable('files') . \"\n                    WHERE status = 'encrypted'\n                    LIMIT \" . $post_start . ', ' . $post_length\n                );\n                foreach ($rows as $record) {\n                    // backup data\n                    DB::insert(\n                        prefixTable('sk_reencrypt_backup'),\n                        array(\n                            'current_table' => 'files',\n                            'current_field' => 'file',\n                            'value_id' => $record['id'],\n                            'value' => $record['file'],\n                            'current_sql' => 'no_query',\n                            'value2' => 'none',\n                            'result' => 'none',\n                        )\n                    );\n                    $newID = DB::insertId();\n\n                    if (file_exists($SETTINGS['path_to_upload_folder'] . '/' . $record['file'])) {\n                        // make a copy of file\n                        if (!copy(\n                            $SETTINGS['path_to_upload_folder'] . '/' . $record['file'],\n                            $SETTINGS['path_to_upload_folder'] . '/' . $record['file'] . '.copy'\n                        )) {\n                            $error = 'Copy not possible';\n                            exit;\n                        } else {\n                            // prepare a bck of file (that will not be deleted)\n                            $backup_filename = $record['file'] . '.bck-change-sk.' . time();\n                            copy(\n                                $SETTINGS['path_to_upload_folder'] . '/' . $record['file'],\n                                $SETTINGS['path_to_upload_folder'] . '/' . $backup_filename\n                            );\n                        }\n\n                        // Treat the file\n                        // STEP1 - Do decryption\n                        prepareFileWithDefuse(\n                            'decrypt',\n                            $SETTINGS['path_to_upload_folder'] . '/' . $record['file'],\n                            $SETTINGS['path_to_upload_folder'] . '/' . $record['file'] . '_encrypted',\n                            $SETTINGS\n                        );\n\n                        // Do cleanup of files\n                        unlink($SETTINGS['path_to_upload_folder'] . '/' . $record['file']);\n\n                        // STEP2 - Do encryption\n                        prepareFileWithDefuse(\n                            'encryp',\n                            $SETTINGS['path_to_upload_folder'] . '/' . $record['file'] . '_encrypted',\n                            $SETTINGS['path_to_upload_folder'] . '/' . $record['file'],\n                            $SETTINGS\n                        );\n\n                        // Do cleanup of files\n                        unlink($SETTINGS['path_to_upload_folder'] . '/' . $record['file'] . '_encrypted');\n\n                        // Update backup table\n                        DB::update(\n                            prefixTable('sk_reencrypt_backup'),\n                            array(\n                                'value2' => $backup_filename,\n                                'result' => 'ok',\n                            ),\n                            'id=%i',\n                            $newID\n                        );\n                    }\n                }\n            }\n\n            $nextStart = intval($post_start) + intval($post_length);\n\n            // check if last item to change has been treated\n            if ($nextStart >= intval($post_nbItems)) {\n                array_shift($objects);\n                $nextAction = implode(',', $objects); // remove first object of the list\n\n                // do some things for new object\n                if (isset($objects[0])) {\n                    if ($objects[0] === 'logs') {\n                        DB::query('SELECT increment_id FROM ' . prefixTable('log_items') . \" WHERE action = %s AND raison LIKE 'at_pw :%'\", 'at_modification');\n                    } elseif ($objects[0] === 'files') {\n                        DB::query('SELECT id FROM ' . prefixTable('files'));\n                    } elseif ($objects[0] === 'categories') {\n                        DB::query('SELECT id FROM ' . prefixTable('categories_items'));\n                    } elseif ($objects[0] === 'custfields') {\n                        DB::query('SELECT raison FROM ' . prefixTable('log_items') . \" WHERE action = %s AND raison LIKE 'at_pw :%'\", 'at_modification');\n                    }\n                    $nb_of_items = DB::count();\n                } else {\n                    // now finishing\n                    $nextAction = 'finishing';\n                    $nb_of_items = $error = $nextStart = '';\n                }\n            } else {\n                $nextAction = $post_object;\n                $nb_of_items = '';\n            }\n        }\n\n        // Send back\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n                'nextAction' => $nextAction,\n                'nextStart' => $nextStart,\n                'nbOfItems' => $nb_of_items,\n                'oldsk' => $_SESSION['reencrypt_old_salt'],\n                'newsk' => $_SESSION['reencrypt_new_salt'],\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n    * Change SALT Key - END\n    */\n    case 'admin_action_change_salt_key___end':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        $error = '';\n\n        // quit maintenance mode.\n        DB::update(\n            prefixTable('misc'),\n            array(\n                'valeur' => '0',\n            ),\n            'intitule = %s AND type= %s',\n            'maintenance_mode',\n            'admin'\n        );\n\n        // Send back\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n                'nextAction' => 'done',\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n    * Change SALT Key - Restore BACKUP data\n    */\n    case 'admin_action_change_salt_key___restore_backup':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // delete files\n        $rows = DB::query(\n            'SELECT current_table, value, value2, current_sql\n            FROM ' . prefixTable('sk_reencrypt_backup')\n        );\n        foreach ($rows as $record) {\n            if ($record['current_table'] === 'items' || $record['current_table'] === 'logs' || $record['current_table'] === 'categories') {\n                // excute query\n                DB::query(\n                    str_replace(\"\\'\", \"'\", $record['current_sql'])\n                );\n            } elseif ($record['current_table'] === 'files') {\n                // restore backup file\n                if (file_exists($SETTINGS['path_to_upload_folder'] . '/' . $record['value'])) {\n                    unlink($SETTINGS['path_to_upload_folder'] . '/' . $record['value']);\n                    if (file_exists($SETTINGS['path_to_upload_folder'] . '/' . $record['value2'])) {\n                        rename(\n                            $SETTINGS['path_to_upload_folder'] . '/' . $record['value2'],\n                            $SETTINGS['path_to_upload_folder'] . '/' . $record['value']\n                        );\n                    }\n                }\n            } elseif ($record['current_table'] === 'old_sk') {\n                $previous_saltkey_filename = $record['value2'];\n            }\n        }\n\n        // restore saltkey file\n        if (file_exists($previous_saltkey_filename)) {\n            unlink(SECUREPATH.'/'.SECUREFILE);\n            rename(\n                $previous_saltkey_filename,\n                SECUREPATH.'/'.SECUREFILE\n            );\n        }\n\n        // drop table\n        DB::query('DROP TABLE IF EXISTS ' . prefixTable('sk_reencrypt_backup'));\n\n        // Send back\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n            ),\n            'encode'\n        );\n\n        break;\n\n        /*\n    * Change SALT Key - Delete BACKUP data\n    */\n    case 'admin_action_change_salt_key___delete_backup':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // delete files\n        $rows = DB::query(\n            'SELECT value, value2\n            FROM ' . prefixTable('sk_reencrypt_backup') . \"\n            WHERE current_table = 'files'\"\n        );\n        foreach ($rows as $record) {\n            if (file_exists($SETTINGS['path_to_upload_folder'] . '/' . $record['value2'])) {\n                unlink($SETTINGS['path_to_upload_folder'] . '/' . $record['value2']);\n            }\n        }\n\n        // drop table\n        DB::query('DROP TABLE IF EXISTS ' . prefixTable('sk_reencrypt_backup'));\n\n        echo '[{\"status\":\"done\"}]';\n        break;\n\n        /*\n    * Test the email configuraiton\n    */\n    case 'admin_email_test_configuration':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // User has an email set?\n        if (empty($_SESSION['user_email'])) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('no_email_set'),\n                ),\n                'encode'\n            );\n            break;\n        } else {\n            require_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n\n            //send email\n            sendEmail(\n                langHdl('admin_email_test_subject'),\n                langHdl('admin_email_test_body'),\n                $_SESSION['user_email'],\n                $SETTINGS\n            );\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                    'message' => '',\n                ),\n                'encode'\n            );\n            break;\n        }\n        break;\n\n        /*\n    * Send emails in backlog\n    */\n    case 'admin_email_send_backlog':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        include_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n\n        $rows = DB::query(\n            'SELECT *\n            FROM ' . prefixTable('emails') . '\n            WHERE status = %s OR status = %s',\n            'not_sent',\n            ''\n        );\n        $counter = DB::count();\n        $error = false;\n        $message = '';\n\n        if ($counter > 0) {\n            // Only treat first email\n            foreach ($rows as $record) {\n                //send email\n                $ret = json_decode(\n                    sendEmail(\n                        $record['subject'],\n                        $record['body'],\n                        $record['receivers'],\n                        $SETTINGS\n                    ),\n                    true\n                );\n\n                if (empty($ret['error']) === false) {\n                    //update item_id in files table\n                    DB::update(\n                        prefixTable('emails'),\n                        array(\n                            'status' => 'not_sent',\n                        ),\n                        'timestamp = %s',\n                        $record['timestamp']\n                    );\n\n                    $error = true;\n                    $message = $ret['message'];\n                } else {\n                    //delete from DB\n                    DB::delete(\n                        prefixTable('emails'),\n                        'timestamp = %s',\n                        $record['timestamp']\n                    );\n\n                    //update LOG\n                    logEvents(\n                        $SETTINGS,\n                        'admin_action',\n                        'Emails backlog',\n                        (string) $_SESSION['user_id'],\n                        $_SESSION['login']\n                    );\n                }\n\n                // Exit loop\n                break;\n            }\n        }\n\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            array(\n                'error' => $error,\n                'message' => $message,\n                'counter' => $counter,\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n    * Send emails in backlog\n    */\n    case 'admin_email_send_backlog_old':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        include_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n\n        $rows = DB::query('SELECT * FROM ' . prefixTable('emails') . ' WHERE status = %s OR status = %s', 'not_sent', '');\n        foreach ($rows as $record) {\n            //send email\n            $ret = json_decode(\n                sendEmail(\n                    $record['subject'],\n                    $record['body'],\n                    $record['receivers'],\n                    $SETTINGS\n                ),\n                true\n            );\n\n            if (empty($ret['error']) === false) {\n                //update item_id in files table\n                DB::update(\n                    prefixTable('emails'),\n                    array(\n                        'status' => 'not_sent',\n                    ),\n                    'timestamp = %s',\n                    $record['timestamp']\n                );\n            } else {\n                //delete from DB\n                DB::delete(prefixTable('emails'), 'timestamp = %s', $record['timestamp']);\n            }\n        }\n\n        //update LOG\n        logEvents($SETTINGS, 'admin_action', 'Emails backlog', (string) $_SESSION['user_id'], $_SESSION['login']);\n\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n    * Attachments encryption\n    */\n    case 'admin_action_attachments_cryption':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        require_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n\n        // init\n        $filesList = array();\n\n        // get through files\n        if (null !== $post_option && empty($post_option) === false) {\n            // Loop on files\n            $rows = DB::query(\n                'SELECT id, file, status\n                FROM ' . prefixTable('files')\n            );\n            foreach ($rows as $record) {\n                if (is_file($SETTINGS['path_to_upload_folder'] . '/' . $record['file'])) {\n                    $addFile = false;\n                    if (($post_option === 'attachments-decrypt' && $record['status'] === 'encrypted')\n                        || ($post_option === 'attachments-encrypt' && $record['status'] === 'clear')\n                    ) {\n                        $addFile = true;\n                    }\n\n                    if ($addFile === true) {\n                        array_push($filesList, $record['id']);\n                    }\n                }\n            }\n        } else {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n        }\n\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n                'list' => $filesList,\n                'counter' => 0,\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n     * Attachments encryption - Treatment in several loops\n     */\n    case 'admin_action_attachments_cryption_continu':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // Prepare variables\n        $post_list = filter_var_array($post_list, FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n        $post_counter = filter_var($post_counter, FILTER_SANITIZE_NUMBER_INT);\n\n        include $SETTINGS['cpassman_dir'] . '/includes/config/settings.php';\n        include_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n\n        $cpt = 0;\n        $continu = true;\n        $newFilesList = array();\n        $message = '';\n\n        // load PhpEncryption library\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/Crypto.php';\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/Encoding.php';\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/DerivedKeys.php';\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/Key.php';\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/KeyOrPassword.php';\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/File.php';\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/RuntimeTests.php';\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/KeyProtectedByPassword.php';\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/Core.php';\n\n        // treat 10 files\n        foreach ($post_list as $file) {\n            if ($cpt < 5) {\n                // Get file name\n                $file_info = DB::queryfirstrow(\n                    'SELECT file\n                    FROM ' . prefixTable('files') . '\n                    WHERE id = %i',\n                    $file\n                );\n\n                // skip file is Coherancey not respected\n                if (is_file($SETTINGS['path_to_upload_folder'] . '/' . $file_info['file'])) {\n                    // Case where we want to decrypt\n                    if ($post_option === 'decrypt') {\n                        prepareFileWithDefuse(\n                            'decrypt',\n                            $SETTINGS['path_to_upload_folder'] . '/' . $file_info['file'],\n                            $SETTINGS['path_to_upload_folder'] . '/defuse_temp_' . $file_info['file'],\n                            $SETTINGS\n                        );\n                        // Case where we want to encrypt\n                    } elseif ($post_option === 'encrypt') {\n                        prepareFileWithDefuse(\n                            'encrypt',\n                            $SETTINGS['path_to_upload_folder'] . '/' . $file_info['file'],\n                            $SETTINGS['path_to_upload_folder'] . '/defuse_temp_' . $file_info['file'],\n                            $SETTINGS\n                        );\n                    }\n                    // Do file cleanup\n                    fileDelete($SETTINGS['path_to_upload_folder'] . '/' . $file_info['file'], $SETTINGS);\n                    rename(\n                        $SETTINGS['path_to_upload_folder'] . '/defuse_temp_' . $file_info['file'],\n                        $SETTINGS['path_to_upload_folder'] . '/' . $file_info['file']\n                    );\n\n                    // store in DB\n                    DB::update(\n                        prefixTable('files'),\n                        array(\n                            'status' => $post_option === 'attachments-decrypt' ? 'clear' : 'encrypted',\n                        ),\n                        'id = %i',\n                        $file\n                    );\n\n                    ++$cpt;\n                }\n            } else {\n                // build list\n                array_push($newFilesList, $file);\n            }\n        }\n\n        // Should we stop\n        if (count($newFilesList) === 0) {\n            $continu = false;\n\n            //update LOG\n            logEvents(\n                $SETTINGS,\n                'admin_action',\n                'attachments_encryption_changed',\n                (string) $_SESSION['user_id'],\n                $_SESSION['login'],\n                $post_option === 'attachments-decrypt' ? 'clear' : 'encrypted'\n            );\n\n            $message = langHdl('last_execution') . ' ' .\n                date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) time()) .\n                '<i class=\"fas fa-check text-success ml-2 mr-3\"></i>';\n        }\n\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => $message,\n                'list' => $newFilesList,\n                'counter' => $post_cpt + $cpt,\n                'continu' => $continu,\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n     * API save key\n     */\n    case 'admin_action_api_save_key':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // decrypt and retrieve data in JSON format\n        $dataReceived = prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            $post_data,\n            'decode'\n        );\n\n        $post_label = isset($dataReceived['label']) === true ? filter_var($dataReceived['label'], FILTER_SANITIZE_FULL_SPECIAL_CHARS) : '';\n        $post_action = filter_var($dataReceived['action'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n        $timestamp = time();\n\n        // add new key\n        if (null !== $post_action && $post_action === 'add') {\n            // Generate KEY\n            require_once 'main.functions.php';\n            $key = GenerateCryptKey(39, false, true, true, false, true, $SETTINGS);\n\n            // Generate objectKey\n            //$object = doDataEncryption($key, SECUREFILE.':'.$timestamp);\n            \n            // Save in DB\n            DB::insert(\n                prefixTable('api'),\n                array(\n                    'increment_id' => null,\n                    'type' => 'key',\n                    'label' => $post_label,\n                    'value' => $key, //$object['encrypted'],\n                    'timestamp' => $timestamp,\n                    //'user_id' => -1,\n                )\n            );\n\n            $post_id = DB::insertId();\n            // Update existing key\n        } elseif (null !== $post_action && $post_action === 'update') {\n            $post_id = filter_var($dataReceived['id'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n\n            DB::update(\n                prefixTable('api'),\n                array(\n                    'label' => $post_label,\n                    'timestamp' => $timestamp,\n                ),\n                'id=%i',\n                $post_id\n            );\n            // Delete existing key\n        } elseif (null !== $post_action && $post_action === 'delete') {\n            $post_id = filter_var($dataReceived['id'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n\n            DB::query(\n                'DELETE FROM ' . prefixTable('api') . ' WHERE increment_id = %i',\n                $post_id\n            );\n        }\n\n        // send data\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n                'keyId' => $post_id,\n                'key' => isset($key) === true ? $key : '',\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n       * API save key\n    */\n    case 'admin_action_api_save_ip':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // decrypt and retrieve data in JSON format\n        $dataReceived = prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            $post_data,\n            'decode'\n        );\n\n        $post_action = filter_var($dataReceived['action'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n\n        // add new key\n        if (null !== $post_action && $post_action === 'add') {\n            $post_label = filter_var($dataReceived['label'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n            $post_ip = filter_var($dataReceived['ip'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n\n            // Store in DB\n            DB::insert(\n                prefixTable('api'),\n                array(\n                    'increment_id' => null,\n                    'type' => 'ip',\n                    'label' => $post_label,\n                    'value' => $post_ip,\n                    'timestamp' => time(),\n                )\n            );\n\n            $post_id = DB::insertId();\n            // Update existing key\n        } elseif (null !== $post_action && $post_action === 'update') {\n            $post_id = filter_var($dataReceived['id'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n            $post_field = filter_var($dataReceived['field'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n            $post_value = filter_var($dataReceived['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n            if ($post_field === 'value') {\n                $arr = array(\n                    'value' => $post_value,\n                    'timestamp' => time(),\n                );\n            } else {\n                $arr = array(\n                    'label' => $post_value,\n                    'timestamp' => time(),\n                );\n            }\n            DB::update(\n                prefixTable('api'),\n                $arr,\n                'increment_id=%i',\n                $post_id\n            );\n            // Delete existing key\n        } elseif (null !== $post_action && $post_action === 'delete') {\n            $post_id = filter_var($dataReceived['id'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n            DB::query('DELETE FROM ' . prefixTable('api') . ' WHERE increment_id=%i', $post_id);\n        }\n\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n                'ipId' => $post_id,\n            ),\n            'encode'\n        );\n        break;\n\n    case 'save_api_status':\n        // Do query\n        DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'admin', 'api');\n        $counter = DB::count();\n        if ($counter === 0) {\n            DB::insert(\n                prefixTable('misc'),\n                array(\n                    'type' => 'admin',\n                    'intitule' => 'api',\n                    'valeur' => $post_status,\n                )\n            );\n        } else {\n            DB::update(\n                prefixTable('misc'),\n                array(\n                    'valeur' => $post_status,\n                ),\n                'type = %s AND intitule = %s',\n                'admin',\n                'api'\n            );\n        }\n        $SETTINGS['api'] = $post_status;\n        break;\n\n    case 'run_duo_config_check':\n        //Libraries call\n        require_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // decrypt and retreive data in JSON format\n        $dataReceived = prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            $post_data,\n            'decode'\n        );\n\n        // Check if we have what we need first\n        if (empty($dataReceived['duo_ikey']) || empty($dataReceived['duo_skey']) || empty($dataReceived['duo_host'])) {\n            echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('data_are_missing'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // Load Duo Web SDK\n        require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Authentication/php-jwt/BeforeValidException.php';\n        require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Authentication/php-jwt/ExpiredException.php';\n        require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Authentication/php-jwt/SignatureInvalidException.php';\n        require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Authentication/php-jwt/JWT.php';\n        require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Authentication/php-jwt/Key.php';\n        require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Authentication/DuoUniversal/DuoException.php';\n        require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Authentication/DuoUniversal/Client.php';\n\n        // Run Duo Config Check\n        try {\n            $duo_client = new Duo\\DuoUniversal\\Client(\n                $dataReceived['duo_ikey'],\n                $dataReceived['duo_skey'],\n                $dataReceived['duo_host'],\n                $SETTINGS['cpassman_url'].'/'.DUO_CALLBACK\n            );\n        } catch (Duo\\DuoUniversal\\DuoException $e) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => true,\n                        'message' => langHdl('duo_config_error') . \"<br/>Duo: \" . $e->getMessage(),\n                    ),\n                    'encode'\n            );\n            break;\n        }\n\n        // Run healthcheck against Duo with the config\n        try {\n            $duo_client->healthCheck();\n        } catch (Duo\\DuoUniversal\\DuoException $e) {\n            /*if ($SETTINGS['duo_failmode'] == \"OPEN\") {\n                # If we're failing open, errors in 2FA still allow for success\n                $duo_error = langHdl('duo_error_failopen');\n                $data[\"duo_check\"] = \"open\";\n            } else {\n                # Duo has failed and is unavailable, redirect user to the login page\n                $duo_error = langHdl('duo_error_secure');\n                $data[\"duo_check\"] = \"failed\";\n            }*/\n            $duo_error = langHdl('duo_error_check_config') . \"<br/>Duo: \" . $e->getMessage();\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => true,\n                        'message' => $duo_error,\n                    ),\n                    'encode'\n            );\n            break;\n        }\n\n        // send data\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n            ),\n            'encode'\n        );\n        break;\n\n    case 'save_google_options':\n        // Check KEY and rights\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // decrypt and retreive data in JSON format\n        $dataReceived = prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            $post_data,\n            'decode'\n        );\n\n        // Google Authentication\n        if (htmlspecialchars_decode($dataReceived['google_authentication']) === 'false') {\n            $tmp = 0;\n        } else {\n            $tmp = 1;\n        }\n        DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'admin', 'google_authentication');\n        $counter = DB::count();\n        if ($counter === 0) {\n            DB::insert(\n                prefixTable('misc'),\n                array(\n                    'type' => 'admin',\n                    'intitule' => 'google_authentication',\n                    'valeur' => $tmp,\n                )\n            );\n        } else {\n            DB::update(\n                prefixTable('misc'),\n                array(\n                    'valeur' => $tmp,\n                ),\n                'type = %s AND intitule = %s',\n                'admin',\n                'google_authentication'\n            );\n        }\n        $SETTINGS['google_authentication'] = htmlspecialchars_decode($dataReceived['google_authentication']);\n\n        // ga_website_name\n        if (is_null($dataReceived['ga_website_name']) === false) {\n            DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'admin', 'ga_website_name');\n            $counter = DB::count();\n            if ($counter === 0) {\n                DB::insert(\n                    prefixTable('misc'),\n                    array(\n                        'type' => 'admin',\n                        'intitule' => 'ga_website_name',\n                        'valeur' => htmlspecialchars_decode($dataReceived['ga_website_name']),\n                    )\n                );\n            } else {\n                DB::update(\n                    prefixTable('misc'),\n                    array(\n                        'valeur' => htmlspecialchars_decode($dataReceived['ga_website_name']),\n                    ),\n                    'type = %s AND intitule = %s',\n                    'admin',\n                    'ga_website_name'\n                );\n            }\n            $SETTINGS['ga_website_name'] = htmlspecialchars_decode($dataReceived['ga_website_name']);\n\n            // save change in config file\n            handleConfigFile('update', $SETTINGS, 'ga_website_name', $SETTINGS['ga_website_name']);\n        } else {\n            $SETTINGS['ga_website_name'] = '';\n        }\n\n        // send data\n        echo '[{\"result\" : \"' . addslashes($LANG['done']) . '\" , \"error\" : \"\"}]';\n        break;\n\n    case 'save_agses_options':\n        // Check KEY and rights\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // decrypt and retreive data in JSON format\n        $dataReceived = prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            $post_data,\n            'decode'\n        );\n\n        // agses_hosted_url\n        if (!is_null($dataReceived['agses_hosted_url'])) {\n            DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'admin', 'agses_hosted_url');\n            $counter = DB::count();\n            if ($counter === 0) {\n                DB::insert(\n                    prefixTable('misc'),\n                    array(\n                        'type' => 'admin',\n                        'intitule' => 'agses_hosted_url',\n                        'valeur' => htmlspecialchars_decode($dataReceived['agses_hosted_url']),\n                    )\n                );\n            } else {\n                DB::update(\n                    prefixTable('misc'),\n                    array(\n                        'valeur' => htmlspecialchars_decode($dataReceived['agses_hosted_url']),\n                    ),\n                    'type = %s AND intitule = %s',\n                    'admin',\n                    'agses_hosted_url'\n                );\n            }\n            $SETTINGS['agses_hosted_url'] = htmlspecialchars_decode($dataReceived['agses_hosted_url']);\n        } else {\n            $SETTINGS['agses_hosted_url'] = '';\n        }\n\n        // agses_hosted_id\n        if (!is_null($dataReceived['agses_hosted_id'])) {\n            DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'admin', 'agses_hosted_id');\n            $counter = DB::count();\n            if ($counter === 0) {\n                DB::insert(\n                    prefixTable('misc'),\n                    array(\n                        'type' => 'admin',\n                        'intitule' => 'agses_hosted_id',\n                        'valeur' => htmlspecialchars_decode($dataReceived['agses_hosted_id']),\n                    )\n                );\n            } else {\n                DB::update(\n                    prefixTable('misc'),\n                    array(\n                        'valeur' => htmlspecialchars_decode($dataReceived['agses_hosted_id']),\n                    ),\n                    'type = %s AND intitule = %s',\n                    'admin',\n                    'agses_hosted_id'\n                );\n            }\n            $SETTINGS['agses_hosted_id'] = htmlspecialchars_decode($dataReceived['agses_hosted_id']);\n        } else {\n            $SETTINGS['agses_hosted_id'] = '';\n        }\n\n        // agses_hosted_apikey\n        if (!is_null($dataReceived['agses_hosted_apikey'])) {\n            DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'admin', 'agses_hosted_apikey');\n            $counter = DB::count();\n            if ($counter === 0) {\n                DB::insert(\n                    prefixTable('misc'),\n                    array(\n                        'type' => 'admin',\n                        'intitule' => 'agses_hosted_apikey',\n                        'valeur' => htmlspecialchars_decode($dataReceived['agses_hosted_apikey']),\n                    )\n                );\n            } else {\n                DB::update(\n                    prefixTable('misc'),\n                    array(\n                        'valeur' => htmlspecialchars_decode($dataReceived['agses_hosted_apikey']),\n                    ),\n                    'type = %s AND intitule = %s',\n                    'admin',\n                    'agses_hosted_apikey'\n                );\n            }\n            $SETTINGS['agses_hosted_apikey'] = htmlspecialchars_decode($dataReceived['agses_hosted_apikey']);\n        } else {\n            $SETTINGS['agses_hosted_apikey'] = '';\n        }\n\n        // send data\n        echo '[{\"result\" : \"' . addslashes($LANG['done']) . '\" , \"error\" : \"\"}]';\n        break;\n\n    case 'save_option_change':\n        // Check KEY and rights\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // decrypt and retreive data in JSON format\n        $dataReceived = prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            $post_data,\n            'decode'\n        );\n\n        // prepare data\n        $post_value = filter_var($dataReceived['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n        $post_field = filter_var($dataReceived['field'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n        $post_translate = isset($dataReceived['translate']) === true ? filter_var($dataReceived['translate'], FILTER_SANITIZE_FULL_SPECIAL_CHARS) : '';\n        \n        require_once 'main.functions.php';\n\n        // In case of key, then encrypt it\n        if ($post_field === 'bck_script_passkey') {\n            $post_value = cryption(\n                $post_value,\n                '',\n                'encrypt',\n                $SETTINGS\n            )['string'];\n        }\n\n        // Check if setting is already in DB. If NO then insert, if YES then update.\n        $data = DB::query(\n            'SELECT * FROM ' . prefixTable('misc') . '\n            WHERE type = %s AND intitule = %s',\n            'admin',\n            $post_field\n        );\n        $counter = DB::count();\n        if ($counter === 0) {\n            DB::insert(\n                prefixTable('misc'),\n                array(\n                    'valeur' => $post_value,\n                    'type' => 'admin',\n                    'intitule' => $post_field,\n                )\n            );\n            // in case of stats enabled, add the actual time\n            if ($post_field === 'send_stats') {\n                DB::insert(\n                    prefixTable('misc'),\n                    array(\n                        'valeur' => time(),\n                        'type' => 'admin',\n                        'intitule' => $post_field . '_time',\n                    )\n                );\n            }\n        } else {\n            DB::update(\n                prefixTable('misc'),\n                array(\n                    'valeur' => $post_value,\n                ),\n                'type = %s AND intitule = %s',\n                'admin',\n                $post_field\n            );\n            // in case of stats enabled, update the actual time\n            if ($post_field === 'send_stats') {\n                // Check if previous time exists, if not them insert this value in DB\n                DB::query(\n                    'SELECT * FROM ' . prefixTable('misc') . '\n                    WHERE type = %s AND intitule = %s',\n                    'admin',\n                    $post_field . '_time'\n                );\n                $counter = DB::count();\n                if ($counter === 0) {\n                    DB::insert(\n                        prefixTable('misc'),\n                        array(\n                            'valeur' => 0,\n                            'type' => 'admin',\n                            'intitule' => $post_field . '_time',\n                        )\n                    );\n                } else {\n                    DB::update(\n                        prefixTable('misc'),\n                        array(\n                            'valeur' => 0,\n                        ),\n                        'type = %s AND intitule = %s',\n                        'admin',\n                        $post_field\n                    );\n                }\n            }\n        }\n\n        // special Cases\n        if ($post_field === 'cpassman_url') {\n            // update also jsUrl for CSFP protection\n            $jsUrl = $post_value . '/includes/libraries/csrfp/js/csrfprotector.js';\n            $csrfp_file = '../includes/libraries/csrfp/libs/csrfp.config.php';\n            $data = file_get_contents($csrfp_file);\n            $posJsUrl = strpos($data, '\"jsUrl\" => \"');\n            $posEndLine = strpos($data, '\",', $posJsUrl);\n            $line = substr($data, $posJsUrl, ($posEndLine - $posJsUrl + 2));\n            $newdata = str_replace($line, '\"jsUrl\" => \"' . filter_var($jsUrl, FILTER_SANITIZE_FULL_SPECIAL_CHARS) . '\",', $data);\n            file_put_contents($csrfp_file, $newdata);\n        } elseif ($post_field === 'restricted_to_input' && (int) $post_value === 0) {\n            DB::update(\n                prefixTable('misc'),\n                array(\n                    'valeur' => 0,\n                ),\n                'type = %s AND intitule = %s',\n                'admin',\n                'restricted_to_roles'\n            );\n        }\n\n        // store in SESSION\n        $SETTINGS[$post_field] = $post_value;\n\n        // save change in config file\n        handleConfigFile(\n            'update',\n            $SETTINGS,\n            $post_field,\n            $dataReceived['value']\n        );\n\n        // Encrypt data to return\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'misc' => $counter . ' ; ' . $SETTINGS[$post_field],\n                'message' => empty($post_translate) === false ? langHdl($post_translate) : '',\n            ),\n            'encode'\n        );\n        break;\n\n    case 'get_values_for_statistics':\n        // Check KEY and rights\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // Encrypt data to return\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            getStatisticsData($SETTINGS),\n            'encode'\n        );\n\n        break;\n\n    case 'save_sending_statistics':\n        // Check KEY and rights\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // send statistics\n        if (null !== $post_status) {\n            DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'admin', 'send_stats');\n            $counter = DB::count();\n            if ($counter === 0) {\n                DB::insert(\n                    prefixTable('misc'),\n                    array(\n                        'type' => 'admin',\n                        'intitule' => 'send_stats',\n                        'valeur' => $post_status,\n                    )\n                );\n            } else {\n                DB::update(\n                    prefixTable('misc'),\n                    array(\n                        'valeur' => $post_status,\n                    ),\n                    'type = %s AND intitule = %s',\n                    'admin',\n                    'send_stats'\n                );\n            }\n            $SETTINGS['send_stats'] = $post_status;\n        } else {\n            $SETTINGS['send_stats'] = '0';\n        }\n\n        // save change in config file\n        handleConfigFile('update', $SETTINGS, 'send_stats', $SETTINGS['send_stats']);\n\n        // send statistics items\n        if (null !== $post_list) {\n            DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'admin', 'send_statistics_items');\n            $counter = DB::count();\n            if ($counter === 0) {\n                DB::insert(\n                    prefixTable('misc'),\n                    array(\n                        'type' => 'admin',\n                        'intitule' => 'send_statistics_items',\n                        'valeur' => $post_list,\n                    )\n                );\n            } else {\n                DB::update(\n                    prefixTable('misc'),\n                    array(\n                        'valeur' => $post_list,\n                    ),\n                    'type = %s AND intitule = %s',\n                    'admin',\n                    'send_statistics_items'\n                );\n            }\n            $SETTINGS['send_statistics_items'] = $post_list;\n        } else {\n            $SETTINGS['send_statistics_items'] = '';\n        }\n\n        // save change in config file\n        handleConfigFile('update', $SETTINGS, 'send_statistics_items', $SETTINGS['send_statistics_items']);\n\n        // send data\n        echo '[{\"error\" : false}]';\n        break;\n\n    case 'is_backup_table_existing':\n        // Check KEY and rights\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        if (DB::query(\"SHOW TABLES LIKE '\" . prefixTable('sk_reencrypt_backup') . \"'\")) {\n            if (DB::count() === 1) {\n                echo 1;\n            } else {\n                echo 0;\n            }\n        } else {\n            echo 0;\n        }\n\n        break;\n\n    case 'get_list_of_roles':\n        // Check KEY and rights\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        $json = array();\n        array_push(\n            $json,\n            array(\n                'id' => 0,\n                'title' => langHdl('god'),\n                'selected_administrated_by' => isset($SETTINGS['ldap_new_user_is_administrated_by']) && $SETTINGS['ldap_new_user_is_administrated_by'] === '0' ? 1 : 0,\n                'selected_role' => isset($SETTINGS['ldap_new_user_role']) && $SETTINGS['ldap_new_user_role'] === '0' ? 1 : 0,\n            )\n        );\n\n        $rows = DB::query(\n            'SELECT id, title\n                FROM ' . prefixTable('roles_title') . '\n                ORDER BY title ASC'\n        );\n        foreach ($rows as $record) {\n            array_push(\n                $json,\n                array(\n                    'id' => $record['id'],\n                    'title' => addslashes($record['title']),\n                    'selected_administrated_by' => isset($SETTINGS['ldap_new_user_is_administrated_by']) === true && $SETTINGS['ldap_new_user_is_administrated_by'] === $record['id'] ? 1 : 0,\n                    'selected_role' => isset($SETTINGS['ldap_new_user_role']) === true && $SETTINGS['ldap_new_user_role'] === $record['id'] ? 1 : 0,\n                )\n            );\n        }\n\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            $json, \n            'encode'\n        );\n\n        break;\n}\n"], "fixing_code": ["/*\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n * @project   Teampass\n * @version   \n * @file      functions.js\n * ---\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n * @copyright 2009-2023 Teampass.net\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n * @see       https://www.teampass.net\n */\n\n/**\n*   Countdown before session expiration\n**/\nfunction countdown()\n{\n    // if a process is in progress then do not decrease the time counter.\n    if (typeof ProcessInProgress !== 'undefined' && ProcessInProgress === true) {\n        $('.countdown-icon')\n            .addClass('fas fa-history')\n            .removeClass('far fa-clock');\n        \n        $(this).delay(1000).queue(function()\n        {\n            countdown();\n            $(this).dequeue();\n        });\n\n        return false;\n    }\n\n    // Continue\n    let DayTill;\n    let hoursInDay = 24;\n    let limitTen = 10;\n    let oneSecondsMs = 1000;\n    let theDay =  $('#temps_restant').val();\n    let today = new Date();\n    let second = Math.floor(theDay - today.getTime() / oneSecondsMs);\n    let minute = Math.floor(second / hourInMinutes);\n    let hour = Math.floor(minute / hourInMinutes);\n    let CHour= hour % hoursInDay;\n    if (CHour < limitTen) {\n        CHour = '0' + CHour;\n    }\n    let CMinute= minute % hourInMinutes;\n    if (CMinute < limitTen) {\n        CMinute = '0' + CMinute;\n    }\n    let CSecond= second % hourInMinutes;\n    if (CSecond < limitTen) {\n        CSecond = '0' + CSecond;\n    }\n    DayTill = CHour + ':' + CMinute + ':' + CSecond;\n\n    // Session will soon be closed\n    if (DayTill === '00:00:50') {\n        showExtendSession();\n        $('#countdown').css('color', 'red');\n    }\n\n    // Manage end of session\n    if ($('#temps_restant').val() !== '' && DayTill <= '00:00:00' && parseInt($('#please_login').val()) !== 1) {\n        $('#please_login').val('1');\n        $(location).attr('href','index.php?session=expired');\n    }\n\n    //Rewrite the string to the correct information.\n    if ($('#countdown')) {\n        $('#countdown').html('<i class=\"far fa-clock countdown-icon mr-1\"></i>' + DayTill);\n    }\n\n    //Create the timer 'counter' that will automatic restart function countdown() again every second.\n    $(this).delay(1000).queue(function()\n    {\n        countdown();\n        $(this).dequeue();\n    });\n}\n\n\n/**\n*\n**/\nfunction unsanitizeString(string) {\n    if(string !== \"\" && string !== null) {\n        string = string.replace(/\\\\/g,\"\").replace(/&#92;/g, \"\\\\\").replace(/&quot;/g, '\"');\n    }\n    return string;\n}\n\n/**\n*   Clean up a string and delete any scripting tags\n**/\nfunction sanitizeString(string) {\n    if(string !== \"\" && string !== null && string !== undefined) {\n        string = string.replace(/\\\\/g,\"&#92;\").replace(/\"/g,\"&quot;\");\n        string = string.replace(new RegExp(\"\\\\s*<script[^>]*>[\\\\s\\\\S]*?</script>\\\\s*\",\"ig\"), \"\");\n    }\n    return string;\n}\n\n/**\n*   Checks if URL has expected format\n**/\nfunction validateURL(url) {\n    let urlregex = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n    return urlregex.test(url);\n}\n\n\nfunction split( val ) {\n    return val.split( / \\s*/ );\n}\n\nfunction extractLast( term ) {\n    return split( term ).pop();\n}\n\n/**\n * Shows error message\n * @param  {string} message  Message to display\n * @return {boolean}         False\n */\nfunction jsonErrorHdl(message)\n{\n    //show as confirm\n    // Prepare modal\n    showModalDialogBox(\n        '#warningModal',\n        '<i class=\"fas fa-warning fa-lg warning mr-2\"></i>Caution',\n        message,\n        '',\n        'Close',\n        true,\n        true\n    );\n\n    // Actions on modal buttons\n    $(document).on('click', '#warningModalButtonClose', function() {\n        \n    });\n    $(document).on('click', '#warningModalButtonAction', function() {\n        // SHow user\n    });\n    return false;\n}\n\n/**\n * [prepareExchangedData description]\n * @param  {[type]} data [description]\n * @param  {[type]} type [description]\n * @param  {[type]} key  [description]\n * @param  {[type]} fileName  [description]\n * @param  {[type]} functionName  [description]\n * @return {[type]}      [description]\n */\nfunction prepareExchangedData(data, type, key, fileName = '', functionName = '')\n{\n    if (type === 'decode') {\n        if (parseInt($('#encryptClientServer').val()) === 0) {\n            try {\n                return $.parseJSON(data);\n            }\n            catch (e) {\n                return jsonErrorHdl(data);\n            }\n        } else {\n            try {\n                let encryption = new Encryption();\n                return JSON.parse(encryption.decrypt(data, key));\n            }\n            catch (e) {\n                return jsonErrorHdl('<b>Next error occurred</b><div>' + e + '</div>'\n                    + (fileName !== '' ? '<br><b>Informations:</b><div>  - File: ' + fileName + '<br>  - Function: ' + functionName + '</div>': '')\n                    + '<div><br><b>Raw answer from server:</b><br>'+data+'</div>');\n            }\n        }\n    } else if (type === 'encode') {\n        if (parseInt($('#encryptClientServer').val()) === 0) {\n            return stripHtml(data);\n        } else {\n            let encryption = new Encryption();\n            return encryption.encrypt(data, key);\n        }\n    } else {\n        return false;\n    }\n}\n\nfunction isJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n/**\n * Returns the text from a HTML string\n * \n * @param {string} String The html string\n */\nfunction stripHtml(html) {\n    // Create a new div element\n    let temporalDivElement = document.createElement('div');\n    // Set the HTML content with the providen\n    temporalDivElement.innerHTML = html;\n    // Retrieve the text property of the element (cross-browser support)\n    return temporalDivElement.textContent || temporalDivElement.innerText || '';\n}\n\n\n/**\n * \n * @param {string} data Crypted string\n * @param {string} key  Session key\n */\nfunction unCryptData(data, key)\n{\n    if (data !== undefined && data.substr(0, 7) === 'crypted') {\n        let uncryptedData = prepareExchangedData(\n            data.substr(7),\n            'decode',\n            key\n        )\n        \n        if (uncryptedData.password.length > 0)\n            return uncryptedData.password;\n        else\n            return false;\n    }\n    return false;\n}\n\n/**\n * \n * @param {string}data Crypted string\n * @param {string}key  Session key\n * @param  {[type]} fileName  [description]\n * @param  {[type]} functionName  [description]\n */\nfunction decodeQueryReturn(data, key, fileName = '', functionName = '')\n{\n    try {\n        return prepareExchangedData(data , \"decode\", key, fileName, functionName);\n    } catch (e) {\n        // error\n        toastr.remove();\n        toastr.error(\n            'An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />' + data,\n            'Error', {\n                timeOut: 5000,\n                progressBar: true\n            }\n        );\n        return false;\n    }\n}\n\n/**\n * \n * @param {string} action Action\n * @param {string} name   Name\n * @param {array} data    Data\n */\nfunction browserSession(action, name, data)\n{\n    // Initialize the session\n    if (action === 'init') {\n        if (store.get(name) === 'undefined'\n            || store.get(name) === undefined\n        ) {\n            store.set(\n                name,\n                data\n            );\n        } else {\n            // Ensure all entries exist\n            $(data).each(function(value, key) {\n                store.update(\n                    name,\n                    function(bSession)\n                    {\n                        bSession.key = value;\n                    }\n                )\n            });\n        }\n    }\n}\n\n/**\n * \n * @param {string} modalId      Modal id\n * @param {string} title        Title\n * @param {string} body         Body\n * @param {string} actionButton Action Button\n * @param {string} closeButton  Close Button\n * @param {string} xlSize       Size\n * @param {string} warningModal Warning Modal\n * @param {string} closeCross   Close on cross\n */\nfunction showModalDialogBox(\n    modalId,\n    title,\n    body,\n    actionButton,\n    closeButton,\n    xlSize = false,\n    warningModal = false,\n    closeCross = true\n) {\n    $(modalId + 'Title').html(title);\n    $(modalId + 'Body').html(body);\n    if (actionButton === '') {\n        $(modalId + 'ButtonAction').addClass('hidden');\n    } else {\n        $(modalId + 'ButtonAction').removeClass('hidden');\n        $(modalId + 'ButtonAction').html(actionButton);\n    }\n    if (closeButton === '') {\n        $(modalId + 'ButtonClose').addClass('hidden');\n    } else {\n        $(modalId + 'ButtonClose').removeClass('hidden');\n        $(modalId + 'ButtonClose').html(closeButton);\n    }\n    if (xlSize === true) {\n        $(modalId + ' div:first').addClass('modal-xl');\n    } else {\n        $(modalId + ' div:first').removeClass('modal-xl');\n    }\n    if (warningModal === true) {\n        $(modalId + ':eq(1)').addClass('bg-warning');\n    } else {\n        $(modalId + ':eq(1)').removeClass('bg-warning');\n    }\n    if (closeCross === false) {\n        $(modalId + 'CrossClose').addClass('hidden');\n    } else {\n        $(modalId + 'CrossClose').removeClass('hidden');\n    }\n    $(modalId).modal({\n        backdrop : 'static',\n        keyboard : false,\n        show: true,\n        focus: true\n    });\n    $(modalId).modal('handleUpdate');\n}\n\n/**\n * Sanitize a string\n * \n * @param {string} str  The string\n */\nfunction htmlEncode(str){\n    return String(str).replace(/[^\\w. ]/gi, function(c){\n        return '&#'+c.charCodeAt(0)+';';\n    });\n}\n\n/* Extend String object with method to encode multi-byte string to utf8\n * - monsur.hossa.in/2012/07/20/utf-8-in-javascript.html\n * - note utf8Encode is an identity function with 7-bit ascii strings, but not with 8-bit strings;\n * - utf8Encode('x') = 'x', but utf8Encode('\u00e7a') = '\u00c3\u00a7a', and utf8Encode('\u00c3\u00a7a') = '\u00c3\u0083\u00c2\u00a7a'*/\nif (typeof String.prototype.utf8Encode == 'undefined') {\n    String.prototype.utf8Encode = function() {\n        return unescape( encodeURIComponent( this ) );\n    };\n}\n\n/* Extend String object with method to decode utf8 string to multi-byte */\nif (typeof String.prototype.utf8Decode == 'undefined') {\n    String.prototype.utf8Decode = function() {\n        try {\n            return decodeURIComponent( escape( this ) );\n        } catch (e) {\n            return this; // invalid UTF-8? return as-is\n        }\n    };\n}\n\nfunction simplePurifier(\n    text,\n    bHtml = false,\n    bSvg = false,\n    bSvgFilters = false\n)\n{\n    return DOMPurify.sanitize(\n        text\n            .replaceAll('&lt;', '<')\n            .replaceAll('&gt;', '>')\n            .replaceAll('&amp;', '&')\n            .replaceAll('&quot;', '\"')\n            .replaceAll('&#39;', \"'\"),\n        {USE_PROFILES: {html:bHtml, svg:bSvg, svgFilters: bSvgFilters}}\n    );\n}\n\n/**\n * Permits to purify the content of a string using domPurify\n * @param {*} field \n * @param {*} bHtml \n * @param {*} bSvg \n * @param {*} bSvgFilters \n * @param {*} text \n * @returns bool||string\n */\nfunction fieldDomPurifier(\n    field,\n    bHtml = false,\n    bSvg = false,\n    bSvgFilters = false,\n    text = ''\n)\n{\n    if (field === undefined ||field === '') {\n        return false;\n    }\n    let string = '';\n    text = (text === '') ? $(field).val() : text;\n\n    // Purify string\n    string = simplePurifier(text, bHtml, bSvg, bSvgFilters);\n    \n    // Clear field if string is empty and warn user\n    if (string === '' && text !== '') {\n        $(field).val('');\n        return false;\n    }\n\n    return string;\n}\n\n/**\n * Permits to get all fields of a class and purify them\n * @param {*} elementClass \n * @returns array\n */\nfunction fieldDomPurifierLoop(elementClass)\n{\n    let purifyStop = false,\n        arrFields = [];\n    $.each($(elementClass), function(index, element) {\n        purifiedField = fieldDomPurifier(\n            '#' + $(element).attr('id'), \n            $(element).hasClass('purifyHtml') === true ? true : false,\n            $(element).hasClass('purifySvg') === true ? true : false,\n            $(element).hasClass('purifySvgFilter') === true ? true : false,\n            typeof $(element).data('purify-text') !== undefined ? $(element).data('purify-text') : ''\n        );\n\n        if (purifiedField === false) {\n            // Label is empty\n            toastr.remove();\n            toastr.warning(\n                'XSS attempt detected. Please remove all special characters from your input.',\n                'Error', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            $('#' + $(element).attr('id')).focus();\n            purifyStop = true;\n            return {\n                'purifyStop' : purifyStop,\n                'arrFields' : arrFields\n            };\n        } else {\n            $(element).val(purifiedField);\n            arrFields[$(element).data('field')] = purifiedField;\n        }\n    });\n    \n    // return\n    return {\n        'purifyStop' : purifyStop,\n        'arrFields' : arrFields\n    };\n}\n\n/**\n * Permits to purify the content of a string using domPurify\n * @param {*} field \n * @param {*} bHtml \n * @param {*} bSvg \n * @param {*} bSvgFilters \n * @returns bool||string\n */\nfunction fieldDomPurifierWithWarning(\n    field,\n    bHtml = false,\n    bSvg = false,\n    bSvgFilters = false,\n)\n{\n    if (field === undefined || field === '') {\n        return false;\n    }\n    if ($(field).val() === '') {\n        return '';\n    }\n    let string = '';\n\n    // Purify string\n    string = simplePurifier($(field).val(), bHtml, bSvg, bSvgFilters);\n    \n    // Clear field if string is empty and warn user\n    if (string === '') {\n        toastr.remove();\n        toastr.warning(\n            'XSS attempt detected. Please remove all special characters from your input.',\n            'Error', {\n                timeOut: 5000,\n                progressBar: true\n            }\n        );\n        $(field).focus();\n        return false;\n    }\n\n    return string;\n}", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      admin.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\n?>\n\n<script type=\"text/javascript\">\n    var requestRunning = false;\n\n    /**\n     * ADMIN\n     */\n    // <- PREPARE TOGGLES\n    $('.toggle').toggles({\n        drag: true,\n        click: true,\n        text: {\n            on: '<?php echo langHdl('yes'); ?>',\n            off: '<?php echo langHdl('no'); ?>'\n        },\n        on: true,\n        animate: 250,\n        easing: 'swing',\n        width: 50,\n        height: 20,\n        type: 'compact'\n    });\n    $('.toggle').on('toggle', function(e, active) {\n        if (active) {\n            $(\"#\" + e.target.id + \"_input\").val(1);\n            if (e.target.id == \"allow_print\") {\n                $(\"#roles_allowed_to_print_select\").prop(\"disabled\", false);\n            }\n            if (e.target.id == \"anyone_can_modify\") {\n                $(\"#form-item-row-modify\").removeClass('hidden');\n            }\n            if (e.target.id == \"restricted_to\") {\n                $(\"#form-item-row-restricted\").removeClass('hidden');\n            }\n        } else {\n            $(\"#\" + e.target.id + \"_input\").val(0);\n            if (e.target.id == \"allow_print\") {\n                $(\"#roles_allowed_to_print_select\").prop(\"disabled\", true);\n            }\n            if (e.target.id == \"anyone_can_modify\") {\n                $(\"#form-item-row-modify\").addClass('hidden');\n            }\n            if (e.target.id == \"restricted_to\") {\n                $(\"#form-item-row-restricted\").addClass('hidden');\n            }\n        }\n\n        var data = {\n            \"field\": e.target.id,\n            \"value\": $(\"#\" + e.target.id + \"_input\").val(),\n        }\n        console.log(data)\n        // Store in DB   \n        $.post(\n            \"sources/admin.queries.php\", {\n                type: \"save_option_change\",\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                // Handle server answer\n                try {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                } catch (e) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('server_answer_error') . '<br />' . langHdl('server_returned_data') . ':<br />'; ?>' + data.error,\n                        '', {\n                            closeButton: true,\n                            positionClass: 'toastr-top-right'\n                        }\n                    );\n                    return false;\n                }\n                console.log(data)\n                if (data.error === false) {\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('saved'); ?>',\n                        '', {\n                            timeOut: 2000,\n                            progressBar: true\n                        }\n                    );\n                }\n            }\n        );\n    });\n    // .-> END. TOGGLES\n\n    // <- PREPARE SELECT2\n    $('.select2').select2({\n        language: '<?php echo isset($_SESSION['user_language_code']) === true ? $_SESSION['user_language_code'] : 'EN'; ?>'\n    });\n\n    /**\n     */\n    $(document).on('change', '.form-control-sm, .setting-ldap', function() {\n        var field = $(this).attr('id'),\n            value = $.isArray($(this).val()) === false ? $(this).val() : JSON.stringify($(this).val().map(Number));\n\n        if (field === '' || field === undefined || $(this).hasClass('no-save') === true) return false;\n        \n        // prevent launch of similar query in case of doubleclick\n        if (requestRunning === true) {\n            return false;\n        }\n\n        // Sanitize value\n        value = fieldDomPurifierWithWarning('#' + field);\n        if (value === false) {\n            return false;\n        }\n        $('#' + field).val(value);\n\n        requestRunning = true;\n\n        var data = {\n            \"field\": field,\n            \"value\": value,\n        }\n        console.log(data);\n\n        // Store in DB   \n        $.post(\n            \"sources/admin.queries.php\", {\n                type: \"save_option_change\",\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                // Handle server answer\n                try {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                } catch (e) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('server_answer_error') . '<br />' . langHdl('server_returned_data') . ':<br />'; ?>' + data.error,\n                        '', {\n                            closeButton: true,\n                            positionClass: 'toastr-top-right'\n                        }\n                    );\n                    return false;\n                }\n                console.log(data)\n                if (data.error === false) {\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('saved'); ?>',\n                        '', {\n                            timeOut: 2000,\n                            progressBar: true\n                        }\n                    );\n                }\n                requestRunning = false;\n            }\n        );\n    });\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      api.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'api', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n\n    $('[data-mask]').inputmask();\n\n    /**\n     * Adding a new KEY\n     */\n    $(document).on('click', '#button-new-api-key', function() {\n        // IS form field?\n        if ($('#new_api_key_label') === '') {\n            return false;\n        }\n        \n        // Sanitize text fields\n        purifyRes = fieldDomPurifierLoop('#new_api_key_label');\n        if (purifyRes.purifyStop === true) {\n            // if purify failed, stop\n            return false;\n        }\n\n        // Prepare data\n        var data = {\n            'label': purifyRes.arrFields['label'], //$('#new_api_key_label').val(),\n            'action': 'add',\n        }\n\n        $('#table-api-keys').removeClass('hidden');\n        $('#api-no-keys').addClass('hidden');\n\n        // Launch action\n        $.post(\n            'sources/admin.queries.php', {\n                type: 'admin_action_api_save_key',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.warning(\n                        '<?php echo langHdl('none_selected_text'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $('#table-api-keys')\n                        .append(\n                            '<tr data-id(\"' + data.keyId + '\")>' +\n                            '<td width=\"50px\"><i class=\"fas fa-trash infotip pointer\" title=\"<?php echo langHdl('del_button'); ?>\"></i></td>' +\n                            '<td><span class=\"edit-api-key\">' + $('#new_api_key_label').val() + '</span></td>' +\n                            '<td>' + data.key + '</td>' +\n                            '</tr>'\n                        );\n\n                    $('#new_api_key_label').val('');\n                }\n            }\n        );\n    });\n\n    /**\n     * DELETING AN EXISTING KEY\n     */\n    $(document).on('click', '.delete-api-key', function() {\n        var row = $(this).closest('tr'),\n            keyId = row.data('id');\n\n        if (keyId !== '') {\n            // Confirm\n            // Prepare modal\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-minus-square fa-lg warning mr-2\"></i><?php echo langHdl('please_confirm'); ?>',\n                '<?php echo langHdl('please_confirm_deletion'); ?>',\n                '<?php echo langHdl('confirm'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n\n            // Actions on modal buttons\n            $(document).on('click', '#warningModalButtonClose', function() {\n                // Nothing\n            });\n            $(document).on('click', '#warningModalButtonAction', function() {\n                // SHow user\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n                // Prepare data\n                var data = {\n                    'id': keyId,\n                    'action': 'delete',\n                }\n\n                // Launch action\n                $.post(\n                    'sources/admin.queries.php', {\n                        type: 'admin_action_api_save_key',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                        if (data.error === true) {\n                            // ERROR\n                            toastr.remove();\n                            toastr.warning(\n                                '<?php echo langHdl('none_selected_text'); ?>',\n                                '', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            $(row).remove();\n                            toastr.remove();\n                        }\n                    }\n                );\n            });\n        }\n    });\n\n    /**\n     * EDITING THE LABEL OF A KEY\n     */\n    var oldLabel;\n    $(document).on('click', '.edit-api-key', function() {\n        var cell = $(this).closest('td');\n        oldLabel = $(this).html();\n\n        $(this).remove();\n\n        $(cell).html(\n            '<input type=\"text\" class=\"form-control new-api-key\">' +\n            '<button class=\"btn btn-default\" id=\"new-api-key-save\"><i class=\"fa fa-save\"></i></button>' +\n            '<button class=\"btn btn-default ml-2\" id=\"new-api-key-cancel\"><i class=\"fa fa-times\"></i></button>'\n        );\n        $('.new-api-key').val(oldLabel);\n    });\n\n    $(document).on('click', '#new-api-key-save', function() {\n        var keyId = $(this).closest('tr').data('id'),\n            label = simplePurifier($(this).prev('input').val()),\n            cell = $(this).closest('td');\n\n        // Prepare data\n        var data = {\n            'id': keyId,\n            'label': label,\n            'action': 'update',\n        }\n        \n        // Launch action\n        $.post(\n            'sources/admin.queries.php', {\n                type: 'admin_action_api_save_key',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                if (data.error === true) {\n                    $(cell).html('<span class=\"edit-api-key pointer\">' + oldLabel + '</span>');\n                    // ERROR\n                    toastr.remove();\n                    toastr.warning(\n                        '<?php echo langHdl('none_selected_text'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $(cell).html('<span class=\"edit-api-key pointer\">' + label + '</span>');\n                }\n            }\n        );\n\n    });\n\n    $(document).on('click', '#new-api-key-cancel', function() {\n\n        $(this).closest('td').html('<span class=\"edit-api-key pointer\">' + oldLabel + '</span>');\n\n    });\n\n    //----- WHITELIST IPS\n\n\n    $(document).on('click', '#button-new-api-ip', function() {\n        if ($('#new_api_ip_value').val() === '' || $('#new_api_ip_label').val() === '') {\n            toastr.remove();\n            toastr.warning(\n                '<?php echo langHdl('fields_with_mandatory_information_are_missing'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Sanitize text fields\n        purifyRes = fieldDomPurifierLoop('#new-api-ip .purify');\n        if (purifyRes.purifyStop === true) {\n            // if purify failed, stop\n            return false;\n        }\n\n        // Prepare data\n        var data = {\n            'label': purifyRes.arrFields['label'],\n            'ip': $('#new_api_ip_value').val(),\n            'action': 'add',\n        }\n\n        $('#table-api-ips').removeClass('hidden');\n        $('#api-no-ips').addClass('hidden');\n\n        // Launch action\n        $.post(\n            'sources/admin.queries.php', {\n                type: 'admin_action_api_save_ip',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.warning(\n                        '<?php echo langHdl('none_selected_text'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $('#table-api-ips')\n                        .append(\n                            '<tr data-id=\"' + data.ipId + '\">' +\n                            '<td width=\"50px\"><i class=\"fas fa-trash infotip pointer\" title=\"<?php echo langHdl('del_button'); ?>\"></i></td>' +\n                            '<td><span class=\"edit-api-ip pointer\" data-field=\"label\">' + $('#new_api_ip_label').val() + '</span></td>' +\n                            '<td><span class=\"edit-api-ip pointer\" data-field=\"value\">' + $('#new_api_ip_value').val() + '</span></td>' +\n                            '</tr>'\n                        );\n\n                    $('#new_api_ip_label, #new_api_ip_value').val('');\n                }\n            }\n        );\n    });\n\n    /**\n     * DELETING AN EXISTING IP\n     */\n    $(document).on('click', '.delete-api-ip', function() {\n        var row = $(this).closest('tr'),\n            ipId = row.data('id');\n\n        if (ipId !== '') {\n            // Confirm\n            // Prepare modal\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-minus-square fa-lg warning mr-2\"></i><?php echo langHdl('please_confirm'); ?>',\n                '<?php echo langHdl('please_confirm_deletion'); ?>',\n                '<?php echo langHdl('confirm'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n\n            // Actions on modal buttons\n            $(document).on('click', '#warningModalButtonClose', function() {\n                // Nothing\n            });\n            $(document).on('click', '#warningModalButtonAction', function() {\n                // SHow user\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n                // Prepare data\n                var data = {\n                    'id': ipId,\n                    'action': 'delete',\n                }\n\n                // Launch action\n                $.post(\n                    'sources/admin.queries.php', {\n                        type: 'admin_action_api_save_ip',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                        if (data.error === true) {\n                            // ERROR\n                            toastr.remove();\n                            toastr.warning(\n                                '<?php echo langHdl('none_selected_text'); ?>',\n                                '', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            $(row).remove();\n                            toastr.remove();\n                        }\n                    }\n                );\n            });\n        }\n    });\n\n\n\n    /**\n     * EDITING THE LABEL OF AN IP\n     */\n    $(document).on('click', '.edit-api-ip', function() {\n        var cell = $(this).closest('td'),\n            field = $(this).data('field');\n        oldLabel = $(this).html();\n\n        $(this).remove();\n\n        $(cell).html(\n            '<input type=\"text\" class=\"form-control new-api-ip\" data-field=\"' + field + '\">' +\n            '<button class=\"btn btn-default\" id=\"new-api-ip-save\"><i class=\"fa fa-save\"></i></button>' +\n            '<button class=\"btn btn-default ml-2\" id=\"new-api-ip-cancel\"><i class=\"fa fa-times\"></i></button>'\n        );\n        $('.new-api-ip').val(oldLabel);\n    });\n\n    $(document).on('click', '#new-api-ip-save', function() {\n        var ipId = $(this).closest('tr').data('id'),\n            label = $(this).prev('input').val(),\n            field = $(this).prev('input').data('field'),\n            cell = $(this).closest('td');\n\n        // Prepare data\n        var data = {\n            'id': ipId,\n            'value': simplePurifier(label),\n            'field': field,\n            'action': 'update',\n        }\n\n        // Launch action\n        $.post(\n            'sources/admin.queries.php', {\n                type: 'admin_action_api_save_ip',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                if (data.error === true) {\n                    $(cell).html('<span class=\"edit-api-ip pointer\">' + oldLabel + '</span>');\n                    // ERROR\n                    toastr.remove();\n                    toastr.warning(\n                        '<?php echo langHdl('none_selected_text'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $(cell).html('<span class=\"edit-api-ip pointer\">' + label + '</span>');\n                }\n            }\n        );\n\n    });\n\n    $(document).on('click', '#new-api-ip-cancel', function() {\n\n        $(this).closest('td').html('<span class=\"edit-api-ip pointer\">' + oldLabel + '</span>');\n\n    });\n\n    //]]>\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      api.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception(\"Error file '/includes/config/tp.config.php' not exists\", 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'api', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n\n// Load template\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n\n?>\n\n<!-- Content Header (Page header) -->\n<div class=\"content-header\">\n    <div class=\"container-fluid\">\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-6\">\n                <h1 class=\"m-0 text-dark\">\n                    <i class=\"fas fa-cubes mr-2\"></i><?php echo langHdl('api'); ?>\n                </h1>\n            </div><!-- /.col -->\n        </div><!-- /.row -->\n    </div><!-- /.container-fluid -->\n</div>\n<!-- /.content-header -->\n\n<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class='card card-primary'>\n                    <div class='card-header'>\n                        <h3 class='card-title'><?php echo langHdl('api_configuration'); ?></h3>\n                    </div>\n                    <!-- /.card-header -->\n                    <!-- form start -->\n                    <div class='card-body'>\n\n                        <div class='row mb-5'>\n                            <div class='col-10'>\n                                <?php echo langHdl('settings_api'); ?>\n                                <small id='passwordHelpBlock' class='form-text text-muted'>\n                                    <?php echo langHdl('settings_api_tip'); ?>\n                                </small>\n                            </div>\n                            <div class='col-2'>\n                                <div class='toggle toggle-modern' id='api' data-toggle-on='<?php echo isset($SETTINGS['api']) === true && (int) $SETTINGS['api'] === 1 ? 'true' : 'false'; ?>'></div><input type='hidden' id='api_input' value='<?php echo isset($SETTINGS['api']) === true && (int) $SETTINGS['api'] === 1 ? '1' : '0'; ?>' />\n                            </div>\n                        </div>\n\n                        <div class='row mb-5'>\n                            <div class='col-10'>\n                                <?php echo langHdl('settings_api_token_duration'); ?>\n                                <small id='passwordHelpBlock' class='form-text text-muted'>\n                                    <?php echo langHdl('settings_api_token_duration_tip'); ?>\n                                </small>\n                            </div>\n                            <div class='col-2'>\n                            <input type='text' class='form-control form-control-sm' id='api_token_duration' value='<?php echo isset($SETTINGS['api_token_duration']) === true ? (int) $SETTINGS['api_token_duration'] : 60; ?>'>\n                            </div>\n                        </div>\n\n                        <ul class=\"nav nav-tabs\">\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#keys\" role=\"tab\" aria-controls=\"keys\"><?php echo langHdl('settings_api_keys_list'); ?></a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" data-toggle=\"tab\" href=\"#ips\" role=\"tab\" aria-controls=\"ips\"><?php echo langHdl('api_whitelist_ips'); ?></a>\n                            </li>\n                        </ul>\n\n                        <div class=\"tab-content\">\n                            <div class=\"tab-pane fade show active\" id=\"keys\" role=\"tabpanel\" aria-labelledby=\"keys-tab\">\n                                <small id=\"passwordHelpBlock\" class=\"form-text text-muted mt-4\">\n                                    <?php echo langHdl('settings_api_keys_list_tip'); ?>\n                                </small>\n                                <div class=\"mt-4\">\n                                    <?php\n                                    $rows = DB::query(\n                                        'SELECT increment_id, label, timestamp, user_id, value \n                                        FROM ' . prefixTable('api') . '\n                                        WHERE type = %s\n                                        ORDER BY timestamp ASC',\n                                        'key'\n                                    );\n                                    ?>\n                                    <table class=\"table table-hover table-striped<?php echo DB::count() > 0 ? '' : ' hidden'; ?> table-responsive\" style=\"width:100%\" id=\"table-api-keys\">\n                                        <thead>\n                                            <tr>\n                                                <th width=\"50px\"></th>\n                                                <th><?php echo langHdl('label'); ?></th>\n                                                <th><?php echo langHdl('settings_api_key'); ?></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <?php\n                                            foreach ($rows as $record) {\n                                                //$apiKey = (int) $record['user_id'] === -1 ? doDataDecryption($record['value'], base64_encode(SECUREFILE.':'.$record['timestamp'])) : $record['value'];\n                                                echo '\n                                                    <tr data-id=\"' . $record['increment_id'] . '\">\n                                                    <td width=\"50px\"><i class=\"fa fa-trash infotip pointer delete-api-key\" title=\"' . langHdl('del_button') . '\"></i></td>\n                                                    <td><span class=\"edit-api-key pointer\">' . $record['label'] . '</span></td>\n                                                    <td>' . $record['value']. '</td>                        \n                                                </tr>';\n                                            } ?>\n                                        </tbody>\n                                    </table>\n\n                                    <div class=\"mt-2<?php echo DB::count() > 0 ? ' hidden' : ''; ?>\" id=\"api-no-keys\">\n                                        <i class=\"fas fa-info mr-2 text-warning\"></i><?php echo langHdl('no_data_defined'); ?>\n                                    </div>\n\n                                </div>\n\n                                <div class=\"form-group mt-4\">\n                                    <div class=\"callout callout-info\">\n                                        <span class=\"text-bold\"><?php echo langHdl('adding_new_api_key'); ?></span>\n\n                                        <div class=\"row mt-1 ml-1\">\n                                            <input type=\"text\" placeholder=\"<?php echo langHdl('label'); ?>\" class=\"col-4 form-control form-control-sm purify\" id=\"new_api_key_label\" data-field=\"label\">\n                                            <span class=\"fa-stack ml-2 infotip pointer\" title=\"<?php echo langHdl('adding_new_api_key'); ?>\" id=\"button-new-api-key\">\n                                                <i class=\"fas fa-square fa-stack-2x\"></i>\n                                                <i class=\"fas fa-plus fa-stack-1x fa-inverse\"></i>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div class=\"tab-pane fade show mb-4\" id=\"ips\" role=\"tabpanel\" aria-labelledby=\"ips-tab\">\n                                <small id=\"passwordHelpBlock\" class=\"form-text text-muted mt-4\">\n                                    <?php echo langHdl('api_whitelist_ips_tip'); ?>\n                                </small>\n                                <div class=\"col-12 mt-4\" id=\"table-api-ip\">\n                                    <?php\n                                    $rows = DB::query(\n                                                'SELECT increment_id, label, timestamp value FROM ' . prefixTable('api') . '\n                                        WHERE type = %s\n                                        ORDER BY timestamp ASC',\n                                                'ip'\n                                            );\n                                    ?>\n                                    <table class=\"table table-hover table-striped<?php echo DB::count() > 0 ? '' : ' hidden'; ?> table-responsive\" style=\"width:100%\" id=\"table-api-ips\">\n                                        <thead>\n                                            <tr>\n                                                <th width=\"50px\"></th>\n                                                <th><?php echo langHdl('label'); ?></th>\n                                                <th><?php echo langHdl('settings_api_ip'); ?></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <?php\n                                            foreach ($rows as $record) {\n                                                echo '\n                                                <tr data-id=\"' . $record['increment_id'] . '\">\n                                                    <td width=\"50px\"><i class=\"fa fa-trash infotip pointer delete-api-ip\" title=\"' . langHdl('del_button') . '\"></i></td>\n                                                    <td><span class=\"edit-api-ip pointer\" data-field=\"label\">' . $record['label'] . '</span></td>\n                                                    <td><span class=\"edit-api-ip pointer\" data-field=\"value\">' . $record['value'] . '</span></td>                        \n                                                </tr>';\n                                            } ?>\n                                        </tbody>\n                                    </table>\n\n                                    <div class=\"mt-2<?php echo DB::count() > 0 ? ' hidden' : ''; ?>\" id=\"api-no-ips\">\n                                        <i class=\"fas fa-info mr-2 text-warning\"></i><?php echo langHdl('no_data_defined'); ?>\n                                    </div>\n                                </div>\n\n                                <div class=\"form-group mt-4\" id=\"new-api-ip\">\n                                    <div class=\"callout callout-info\">\n                                        <span class=\"text-bold\"><?php echo langHdl('adding_new_api_ip'); ?></span>\n\n                                        <div class=\"row mt-1 ml-1\">\n                                            <input type=\"text\" placeholder=\"<?php echo langHdl('ip'); ?>\" class=\"col-4 form-control\" id=\"new_api_ip_value\" data-inputmask=\"'alias': 'ip'\">\n                                            <input type=\"text\" placeholder=\"<?php echo langHdl('label'); ?>\" class=\"col-4 form-control ml-2 purify\" id=\"new_api_ip_label\" data-field=\"label\">\n                                            <span class=\"fa-stack ml-2 infotip pointer\" title=\"<?php echo langHdl('settings_api_add_ip'); ?>\" id=\"button-new-api-ip\">\n                                                <i class=\"fas fa-square fa-stack-2x\"></i>\n                                                <i class=\"fas fa-plus fa-stack-1x fa-inverse\"></i>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class=\"form-group\">\n\n                        </div>\n\n                        <div class=\"form-group mt-8\">\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      backups.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], '2fa', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n\n    $(document).on('click', '.key-generate', function() {\n        $.post(\n            \"sources/main.queries.php\", {\n                type: \"generate_password\",\n                type_category: 'action_user',\n                size: \"<?php echo $SETTINGS['pwd_maximum_length']; ?>\",\n                lowercase: \"true\",\n                numerals: \"true\",\n                capitalize: \"true\",\n                symbols: \"false\",\n                secure: \"true\",\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n\n                if (data.key !== \"\") {\n                    $('#onthefly-backup-key').val(data.key);\n                }\n            }\n        );\n    });\n\n    $(document).on('click', '.btn-choose-file', function() {\n        $('#onthefly-restore-progress, #onthefly-backup-progress')\n            .addClass('hidden')\n            .html('');\n    });\n\n    $(document).on('click', '.start', function() {\n        var action = $(this).data('action');\n\n        if (action === 'onthefly-backup') {\n            // PERFORM ONE BACKUP\n            if ($('#onthefly-backup-key').val() !== '') {\n                // Show cog\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n                // Prepare data\n                var data = {\n                    'encryptionKey': simplePurifier($('#onthefly-backup-key').val()),\n                };\n\n                //send query\n                $.post(\n                    \"sources/backups.queries.php\", {\n                        type: \"onthefly_backup\",\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                        console.log(data);\n\n                        if (data.error === true) {\n                            // ERROR\n                            toastr.remove();\n                            toastr.error(\n                                '<?php echo langHdl('server_answer_error') . '<br />' . langHdl('server_returned_data') . ':<br />'; ?>' + data.error,\n                                '<?php echo langHdl('error'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            // Store KEY in DB\n                            var newData = {\n                                \"field\": 'bck_script_passkey',\n                                \"value\": simplePurifier($('#onthefly-backup-key').val()),\n                            }\n\n                            $.post(\n                                \"sources/admin.queries.php\", {\n                                    type: \"save_option_change\",\n                                    data: prepareExchangedData(JSON.stringify(newData), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                                    key: \"<?php echo $_SESSION['key']; ?>\"\n                                },\n                                function(data) {\n                                    // Handle server answer\n                                    try {\n                                        data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                                    } catch (e) {\n                                        // error\n                                        toastr.remove();\n                                        toastr.error(\n                                            '<?php echo langHdl('server_answer_error') . '<br />' . langHdl('server_returned_data') . ':<br />'; ?>' + data.error,\n                                            '<?php echo langHdl('error'); ?>', {\n                                                timeOut: 5000,\n                                                progressBar: true\n                                            }\n                                        );\n                                        return false;\n                                    }\n\n                                    if (data.error === false) {\n                                        toastr.remove();\n                                        toastr.success(\n                                            '<?php echo langHdl('done'); ?>',\n                                            '', {\n                                                timeOut: 1000\n                                            }\n                                        );\n                                    }\n                                }\n                            );\n                            // SHOW LINK\n                            $('#onthefly-backup-progress')\n                                .removeClass('hidden')\n                                .html('<div class=\"alert alert-success alert-dismissible ml-2\">' +\n                                    '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>' +\n                                    '<h5><i class=\"icon fa fa-check mr-2\"></i><?php echo langHdl('done'); ?></h5>' +\n                                    '<i class=\"fas fa-file-download mr-2\"></i><a href=\"' + data.download + '\"><?php echo langHdl('pdf_download'); ?></a>' +\n                                    '</div>');\n\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n                        }\n                    }\n                );\n\n            }\n        } else if (action === 'onthefly-restore') {\n            // PERFORM A RESTORE\n            if ($('#onthefly-restore-key').val() !== '') {\n                // Show cog\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n                // Prepare data\n                var data = {\n                    'encryptionKey': simplePurifier($('#onthefly-restore-key').val()),\n                    'backupFile': $('#onthefly-restore-file').data('operation-id')\n                };\n                console.log(data);\n                //send query\n                $.post(\n                    \"sources/backups.queries.php\", {\n                        type: \"onthefly_restore\",\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                        console.log(data);\n\n                        if (data.error === true) {\n                            // ERROR\n                            toastr.remove();\n                            toastr.error(\n                                '<?php echo langHdl('server_answer_error') . '<br />' . langHdl('server_returned_data') . ':<br />'; ?>' + data.error,\n                                '<?php echo langHdl('error'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            // SHOW LINK\n                            $('#onthefly-restore-progress')\n                                .removeClass('hidden')\n                                .html('<div class=\"alert alert-success alert-dismissible ml-2\">' +\n                                    '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>' +\n                                    '<h5><i class=\"icon fa fa-check mr-2\"></i><?php echo langHdl('done'); ?></h5>' +\n                                    '<?php echo langHdl('restore_done_now_logout'); ?>' +\n                                    '</div>');\n\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        }\n    });\n\n\n\n    // PREPARE UPLOADER with plupload\n    var restoreOperationId = '',\n        uploader_restoreDB = new plupload.Uploader({\n            runtimes: \"gears,html5,flash,silverlight,browserplus\",\n            browse_button: \"onthefly-restore-file-select\",\n            container: \"onthefly-restore-file\",\n            max_file_size: '<?php\n            if (strrpos($SETTINGS['upload_maxfilesize'], 'mb') === false) {\n                echo $SETTINGS['upload_maxfilesize'] . 'mb';\n            } else {\n                echo $SETTINGS['upload_maxfilesize'];\n            }\n            ?>',\n            chunk_size: '5mb',\n            unique_names: true,\n            dragdrop: true,\n            multiple_queues: false,\n            multi_selection: false,\n            max_file_count: 1,\n            url: \"<?php echo $SETTINGS['cpassman_url']; ?>/sources/upload.files.php\",\n            flash_swf_url: \"<?php echo $SETTINGS['cpassman_url']; ?>/includes/libraries/Plupload/plupload.flash.swf\",\n            silverlight_xap_url: \"<?php echo $SETTINGS['cpassman_url']; ?>/includes/libraries/Plupload/plupload.silverlight.xap\",\n            filters: [{\n                title: \"SQL files\",\n                extensions: \"sql\"\n                //mime_types : \"application/zip\"\n            }],\n            init: {\n                FilesAdded: function(up, files) {\n                    // generate and save token\n                    $.post(\n                        \"sources/main.queries.php\", {\n                            type: \"save_token\",\n                            type_category: 'action_system',\n                            size: 25,\n                            capital: true,\n                            numeric: true,\n                            ambiguous: true,\n                            reason: \"restore_db\",\n                            duration: 10,\n                            key: '<?php echo $_SESSION['key']; ?>'\n                        },\n                        function(data) {\n                            console.log(data);\n                            store.update(\n                                'teampassUser',\n                                function(teampassUser) {\n                                    teampassUser.uploadToken = data[0].token;\n                                }\n                            );\n                            up.start();\n                        },\n                        \"json\"\n                    );\n                },\n                BeforeUpload: function(up, file) {\n                    // Show cog\n                    toastr.remove();\n                    toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                    console.log(\"Upload token: \"+store.get('teampassUser').uploadToken);\n\n                    up.settings.multipart_params = {\n                        \"PHPSESSID\": \"<?php echo $_SESSION['user_id']; ?>\",\n                        \"File\": file.name,\n                        \"type_upload\": \"restore_db\",\n                        \"user_token\": store.get('teampassUser').uploadToken\n                    };\n                },\n                UploadComplete: function(up, files) {console.log(files)\n                    store.update(\n                        'teampassUser',\n                        function(teampassUser) {\n                            teampassUser.uploadFileObject = restoreOperationId;\n                        }\n                    );\n                    $('#onthefly-restore-file-text').text(files[0].name);\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                },\n                Error: function(up, args) {\n                    console.log(args);\n                }\n            }\n        });\n\n    // Uploader options\n    uploader_restoreDB.bind('FileUploaded', function(upldr, file, object) {\n        var myData = prepareExchangedData(object.response, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n        $('#onthefly-restore-file').data('operation-id', myData.operation_id);\n    });\n\n    uploader_restoreDB.bind(\"Error\", function(up, err) {\n        //var myData = prepareExchangedData(err, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n        $(\"#onthefly-restore-progress\")\n            .removeClass('hidden')\n            .html('<div class=\"alert alert-danger alert-dismissible ml-2\">' +\n                '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>' +\n                '<h5><i class=\"icon fas fa-ban mr-2\"></i><?php echo langHdl('done'); ?></h5>' +\n                '' + err.message +\n                '</div>');\n                up.refresh(); // Reposition Flash/Silverlight\n    });\n\n    uploader_restoreDB.init();\n\n    //]]>\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      emails.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], '2fa', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n\n    $(document).on('click', '.button', function() {\n        var action = $(this).data('action');\n\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        if (action === 'send-test-email') {\n            $.post(\n                'sources/admin.queries.php', {\n                    type: 'admin_email_test_configuration',\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                    console.log(data);\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.warning(\n                            '<?php echo langHdl('none_selected_text'); ?>',\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n        } else if (action === 'send-waiting-emails') {\n            $('#unsent-emails')\n                .append('<span id=\"unsent-emails-progress\" class=\"ml-3\"></span>');\n            sendEmailsBacklog();\n        }\n    });\n\n\n    function sendEmailsBacklog(counter = \"\") {\n        $('#unsent-emails-progress')\n            .html('<i class=\"fas fa-cog fa-spin ml-2\"></i>' +\n                '<?php echo langHdl('remaining_emails_to_send'); ?> ' + counter);\n        $.post(\n            'sources/admin.queries.php', {\n                type: 'admin_email_send_backlog',\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.warning(\n                        '<?php echo langHdl('none_selected_text'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    if (data.counter > 0) {\n                        sendEmailsBacklog(data.counter);\n                    } else {\n                        $('#unsent-emails-progress')\n                            .html('<i class=\"fas fa-check ml-2 text-success mr-2\"></i>' +\n                                '<?php echo langHdl('done'); ?>');\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            }\n        );\n    }\n\n    //]]>\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      folders.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'folders', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n\n    // Clear\n    $('#folders-search').val('');\n\n    buildTable();\n\n    browserSession(\n        'init',\n        'teampassApplication', {\n            foldersSelect: '',\n            complexityOptions: '',\n        }\n    );\n\n    // Prepare iCheck format for checkboxes\n    $('input[type=\"checkbox\"].form-check-input').iCheck({\n        checkboxClass: 'icheckbox_flat-blue',\n    });\n\n    $('input[type=\"checkbox\"].form-check-red-input').iCheck({\n        checkboxClass: 'icheckbox_flat-red',\n    });\n\n    // Prepare buttons\n    var deletionList = [];\n    $('.tp-action').click(function() {\n        if ($(this).data('action') === 'new') {\n            //--- NEW FOLDER FORM\n            // Prepare form\n            $('.form-check-input').iCheck('uncheck');\n            $('.clear-me').val('');\n            $('#new-parent').val('na').change();\n            $('#new-minimal-complexity').val(0).change();\n\n            // Show\n            $('.form').addClass('hidden');\n            $('#folder-new').removeClass('hidden');\n            $('#folders-list').addClass('hidden');\n            $('#new-title').focus();\n\n        } else if ($(this).data('action') === 'new-submit') {\n            //--- SAVE NEW FOLDER\n\n            // Sanitize text fields\n            purifyRes = fieldDomPurifierLoop('#folder-new .purify');\n            if (purifyRes.purifyStop === true) {\n                // if purify failed, stop\n                return false;\n            }\n\n            // Prepare data\n            var data = {\n                'title': purifyRes.arrFields['title'],\n                'parentId': parseInt($('#new-parent').val()),\n                'complexity': parseInt($('#new-complexity').val()),\n                'accessRight': $('#new-access-right').val(),\n                'renewalPeriod': $('#new-renewal').val() === '' ? 0 : parseInt($('#new-renewal').val()),\n                'addRestriction': $('#new-add-restriction').prop(\"checked\") === true ? 1 : 0,\n                'editRestriction': $('#new-edit-restriction').prop(\"checked\") === true ? 1 : 0,\n                'icon': purifyRes.arrFields['icon'],\n                'iconSelected': purifyRes.arrFields['iconSelected'],\n            }\n            console.log(data)\n            // Launch action\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'add_folder',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                    console.log(data)\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('error'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        buildTable();\n\n                        // Add new folder to the list 'new-parent'\n                        // Launch action\n                        $.post(\n                            'sources/folders.queries.php', {\n                                type: 'refresh_folders_list',\n                                key: '<?php echo $_SESSION['key']; ?>'\n                            },\n                            function(data) { //decrypt data\n                                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                                console.log(data);\n\n                                // prepare options list\n                                var prev_level = 0,\n                                    droplist = '';\n\n                                $(data.subfolders).each(function(i, folder) {\n                                    droplist += '<option value=\"' + folder['id'] + '\">' +\n                                        folder['label'] +\n                                        folder['path'] +\n                                        '</option>';\n                                });\n\n                                $('#new-parent')\n                                    .empty()\n                                    .append(droplist);\n                            }\n                        );\n\n                        $('.form').addClass('hidden');\n                        $('#folders-list').removeClass('hidden');\n                    }\n                }\n            );\n\n        } else if ($(this).data('action') === 'cancel') {\n            //--- NEW FORM CANCEL\n            $('.form').addClass('hidden');\n            $('#folders-list').removeClass('hidden');\n\n        } else if ($(this).data('action') === 'delete') {\n            //--- DELETE FORM SHOW\n            if ($('#table-folders input[type=checkbox]:checked').length === 0) {\n                toastr.remove();\n                toastr.warning(\n                    '<?php echo langHdl('you_need_to_select_at_least_one_folder'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Prepare\n            $('#delete-confirm').iCheck('uncheck');\n\n            // Build list\n            var selectedFolders = '<ul>';\n            $(\"input:checkbox[class=checkbox-folder]:checked\").each(function() {\n                selectedFolders += '<li>' + $('#folder-' + $(this).data('id')).text() + '</li>';\n            });\n            $('#delete-list').html(selectedFolders + '</ul>');\n\n\n            // Show\n            $('.form').addClass('hidden');\n            $('#folder-delete').removeClass('hidden');\n            $('#folders-list').addClass('hidden');\n\n        } else if ($(this).data('action') === 'delete-submit') {\n            console.log('delete-submit')\n            //--- DELETE FOLDERS\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Get list of selected folders\n            var selectedFolders = [];\n            $(\"input:checkbox[class=checkbox-folder]:checked\").each(function() {\n                selectedFolders.push($(this).data('id'));\n            });\n\n            // Prepare data\n            var data = {\n                'selectedFolders': selectedFolders,\n            }\n\n            console.log(data)\n\n            // Launch action\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'delete_folders',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) { //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('error'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // refresh\n                        buildTable();\n\n                        // Show list\n                        $('.form').addClass('hidden');\n                        $('#folders-list').removeClass('hidden');\n\n                        // OK\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n\n        } else if ($(this).data('action') === 'refresh') {\n            //--- REFRESH FOLDERS LIST\n            $('.form').addClass('hidden');\n            $('#folders-list').removeClass('hidden');\n\n            // Build matrix\n            buildTable();\n        }\n    });\n\n    /**\n     * Handle delete button status\n     */\n    $(document).on('ifChecked', '#delete-confirm', function() {\n        $('#delete-submit').removeClass('disabled');\n    });\n    $(document).on('ifUnchecked', '#delete-confirm', function() {\n        $('#delete-submit').addClass('disabled');\n    });\n\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function buildTable() {\n        // Clear\n        $('#table-folders > tbody').html('');\n\n        // Show spinner\n        toastr.remove();\n        toastr.info('<?php echo langHdl('loading_data'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Build matrix\n        $.post(\n            'sources/folders.queries.php', {\n                type: 'build_matrix',\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                console.log(data);\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('error'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Build html\n                    var newHtml = '',\n                        ident = '',\n                        path = '',\n                        columns = '',\n                        rowCounter = 0,\n                        path = '',\n                        parentsClass = '',\n                        max_folder_depth = 0,\n                        foldersSelect = '<option value=\"0\"><?php echo langHdl('root'); ?></option>';\n\n                    $(data.matrix).each(function(i, value) {\n                        // List of parents\n                        parentsClass = '';\n                        $(value.parents).each(function(i, id) {\n                            parentsClass += 'p' + id + ' ';\n                        });\n\n                        // Row\n                        columns += '<tr data-id=\"' + value.id + '\" data-level=\"' + value.level + '\" class=\"' + parentsClass + '\"><td>';\n\n                        // Column 1\n                        if ((value.parentId === 0 &&\n                                (data.userIsAdmin === 1 || data.userCanCreateRootFolder === 1)) ||\n                            value.parentId !== 0\n                        ) {\n                            columns += '<input type=\"checkbox\" class=\"checkbox-folder\" id=\"cb-' + value.id + '\" data-id=\"' + value.id + '\">';\n\n                            if (value.numOfChildren > 0) {\n                                columns += '<i class=\"fas fa-folder-minus infotip ml-2 pointer icon-collapse\" data-id=\"' + value.id + '\" title=\"<?php echo langHdl('collapse'); ?>\"></i>';\n                            }\n                        }\n                        columns += '</td>';\n\n                        // Column 2\n                        columns += '<td class=\"modify pointer\" min-width=\"200px\">' +\n                            '<span id=\"folder-' + value.id + '\" data-id=\"' + value.id + '\" class=\"infotip folder-name\" data-html=\"true\" title=\"<?php echo langHdl('id'); ?>: ' + value.id + '<br><?php echo langHdl('level'); ?>: ' + value.level + '<br><?php echo langHdl('nb_items'); ?>: ' + value.nbItems + '\">' + value.title + '</span></td>';\n\n\n                        // Column 3\n                        path = '';\n                        $(value.path).each(function(i, folder) {\n                            if (path === '') {\n                                path = folder;\n                            } else {\n                                path += '<i class=\"fas fa-angle-right fa-sm ml-1 mr-1\"></i>' + folder;\n                            }\n                        });\n                        columns += '<td class=\"modify pointer\" min-width=\"200px\" data-value=\"' + value.parentId + '\">' +\n                            '<small class=\"text-muted\">' + path + '</small></td>';\n\n\n                        // Column 4\n                        columns += '<td class=\"modify pointer text-center\">';\n                        if (value.folderComplexity.value !== undefined) {\n                            columns += '<i class=\"' + value.folderComplexity.class + ' infotip\" data-value=\"' + value.folderComplexity.value + '\" title=\"' + value.folderComplexity.text + '\"></i>';\n                        } else {\n                            columns += '<i class=\"fas fa-exclamation-triangle text-danger infotip\" data-value=\"\" title=\"<?php echo langHdl('no_value_defined_please_fix'); ?>\"></i>';\n                        }\n                        columns += '</td>';\n\n\n                        // Column 5\n                        columns += '<td class=\"modify pointer text-center\">' + value.renewalPeriod + '</td>';\n\n\n                        // Column 6\n                        columns += '<td class=\"modify pointer text-center\" data-value=\"' + value.add_is_blocked + '\">';\n                        if (value.add_is_blocked === 1) {\n                            columns += '<i class=\"fa fa-toggle-on text-info\"></i>';\n                        } else {\n                            columns += '<i class=\"fa fa-toggle-off\"></i>';\n                        }\n                        columns += '</td>';\n\n                        // Column 7\n                        columns += '<td class=\"modify pointer text-center\" data-value=\"' + value.edit_is_blocked + '\">';\n                        if (value.edit_is_blocked === 1) {\n                            columns += '<i class=\"fa fa-toggle-on text-info\"></i>';\n                        } else {\n                            columns += '<i class=\"fa fa-toggle-off\"></i>';\n                        }\n                        columns += '</td>';\n\n                        // Column \n                        columns += '<td class=\"modify pointer text-center\" data-value=\"' + value.icon + '\"><i class=\"' + value.icon + '\"></td>';\n\n                        // Column 9\n                        columns += '<td class=\"modify pointer text-center\" data-value=\"' + value.iconSelected + '\">';\n                        if (value.iconSelected !== \"\") {\n                            columns += '<i class=\"' + value.iconSelected + '\">';\n                        }\n                        columns += '</td></tr>';\n\n\n                        // Folder Select\n                        foldersSelect += '<option value=\"' + value.id + '\">' + value.title + '</option>';\n\n                        // Max depth\n                        if (parseInt(value.level) > max_folder_depth) {\n                            max_folder_depth = parseInt(value.level);\n                        }\n\n                        rowCounter++;\n                    });\n\n                    // Show result\n                    $('#table-folders > tbody').html(columns);\n\n                    //iCheck for checkbox and radio inputs\n                    $('#table-folders input[type=\"checkbox\"]').iCheck({\n                        checkboxClass: 'icheckbox_flat-blue'\n                    });\n\n                    $('.infotip').tooltip();\n\n                    // store list of folders\n\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.foldersSelect = foldersSelect;\n                        }\n                    );\n\n                    // store list of Complexity\n                    complexity = '';\n                    $(data.fullComplexity).each(function(i, option) {\n                        complexity += '<option value=\"' + option.value + '\">' + option.text + '</option>';\n                    });\n\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.complexityOptions = complexity;\n                        }\n                    );\n\n                    // Adapt select\n                    $('#folders-depth').empty();\n                    $('#folders-depth').append('<option value=\"all\"><?php echo langHdl('all'); ?></option>');\n                    for (x = 1; x < max_folder_depth; x++) {\n                        $('#folders-depth').append('<option value=\"' + x + '\">' + x + '</option>');\n                    }\n                    $('#folders-depth').val('all').change();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n    }\n\n\n    /**\n     * Build list of folders\n     */\n    function refreshFoldersList() {\n        // Launch action\n        $.post(\n            'sources/folders.queries.php', {\n                type: 'select_sub_folders',\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) { //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n            }\n        );\n    }\n\n\n    /**\n     * Handle option when role is displayed\n     */\n    $(document).on('change', '#folders-depth', function() {\n        if ($('#folders-depth').val() === 'all') {\n            $('tr').removeClass('hidden');\n        } else {\n            $('tr').filter(function() {\n                if ($(this).data('level') <= $('#folders-depth').val()) {\n                    $(this).removeClass('hidden');\n                } else {\n                    $(this).addClass('hidden');\n                }\n            });\n        }\n    });\n\n    /**\n     * Handle search criteria\n     */\n    $('#folders-search').on('keyup', function() {\n        var criteria = $(this).val();\n        $('.folder-name').filter(function() {\n            if ($(this).text().toLowerCase().indexOf(criteria) !== -1) {\n                $(this).closest('tr').removeClass('hidden');\n            } else {\n                $(this).closest('tr').addClass('hidden');\n            }\n        });\n    });\n\n    /**\n     * Check / Uncheck children folders\n     */\n    var operationOngoin = false;\n    $(document).on('ifChecked', '.checkbox-folder', function() {\n        if (operationOngoin === false) {\n            operationOngoin = true;\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Show selection of folders\n            var selected_cb = $(this),\n                id = $(this).data('id');\n\n            // Now get subfolders\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'select_sub_folders',\n                    id: id,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    console.log(data)\n                    // check/uncheck checkbox\n                    if (data.subfolders !== '') {\n                        $.each(JSON.parse(data.subfolders), function(i, value) {\n                            $('#cb-' + value).iCheck('check');\n                        });\n                    }\n                    operationOngoin = false;\n\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            );\n        }\n    });\n\n    $(document).on('ifUnchecked', '.checkbox-folder', function() {\n        if (operationOngoin === false) {\n            operationOngoin = true;\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('loading_data'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Show selection of folders\n            var selected_cb = $(this),\n                id = $(this).data('id');\n\n            // Now get subfolders\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'select_sub_folders',\n                    id: id,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    // check/uncheck checkbox\n                    if (data.subfolders !== '') {\n                        $.each(JSON.parse(data.subfolders), function(i, value) {\n                            $('#cb-' + value).iCheck('uncheck');\n                        });\n                    }\n                    operationOngoin = false;\n\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            );\n        }\n    });\n\n\n    /**\n     * Handle the form for folder edit\n     */\n    var currentFolderEdited = '';\n    $('#table-folders').on('click', '.modify', function() {\n        // Manage edition of rights card\n        if ((currentFolderEdited !== '' && currentFolderEdited !== $(this).data('id')) ||\n            $('.temp-row').length > 0\n        ) {\n            $('.temp-row').remove();\n        } else if (currentFolderEdited === $(this).data('id')) {\n            return false;\n        }\n\n        // Init\n        var currentRow = $(this).closest('tr'),\n            folderTitle = $(currentRow).find(\"td:eq(1)\").text(),\n            folderParent = $(currentRow).find(\"td:eq(2)\").data('value'),\n            folderComplexity = $(currentRow).find(\"td:eq(3) > i\").data('value'),\n            folderRenewal = $(currentRow).find(\"td:eq(4)\").text(),\n            folderAddRestriction = $(currentRow).find(\"td:eq(5)\").data('value'),\n            folderEditRestriction = $(currentRow).find(\"td:eq(6)\").data('value'),\n            folderIcon = $(currentRow).find(\"td:eq(7)\").data('value'),\n            folderIconSelection = $(currentRow).find(\"td:eq(8)\").data('value');\n        currentFolderEdited = currentRow.data('id');\n\n\n        // Now show\n        $(currentRow).after(\n            '<tr class=\"temp-row\"><td colspan=\"' + $(currentRow).children('td').length + '\">' +\n            '<div class=\"card card-warning card-outline form\">' +\n            '<div class=\"card-body\">' +\n            '<div class=\"form-group ml-2\">' +\n            '<label for=\"folder-edit-title\"><?php echo langHdl('label'); ?></label>' +\n            '<input type=\"text\" class=\"form-control clear-me purify\" id=\"folder-edit-title\" data-field=\"title\" value=\"' + folderTitle + '\">' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label for=\"folder-edit-parent\"><?php echo langHdl('parent'); ?></label><br>' +\n            '<select id=\"folder-edit-parent\" class=\"form-control form-item-control select2 clear-me\">' + store.get('teampassApplication').foldersSelect + '</select>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label for=\"folder-edit-complexity\"><?php echo langHdl('password_minimal_complexity_target'); ?></label><br>' +\n            '<select id=\"folder-edit-complexity\" class=\"form-control form-item-control select2 clear-me\">' + store.get('teampassApplication').complexityOptions + '</select>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label for=\"folder-edit-renewal\"><?php echo langHdl('renewal_delay'); ?></label>' +\n            '<input type=\"text\" class=\"form-control clear-me\" id=\"folder-edit-renewal\" value=\"' + folderRenewal + '\">' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label><?php echo langHdl('icon'); ?></label>' +\n            '<input type=\"text\" class=\"form-control form-folder-control purify\" id=\"folder-edit-icon\" data-field=\"icon\" value=\"'+folderIcon+'\">' +\n            '<small class=\"form-text text-muted\">' +\n            '<?php echo langHdl('fontawesome_icon_tip'); ?><a href=\"<?php echo FONTAWESOME_URL;?>\" target=\"_blank\"><i class=\"fas fa-external-link-alt ml-1\"></i></a>' +\n            '</small>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label><?php echo langHdl('icon_on_selection'); ?></label>' +\n            '<input type=\"text\" class=\"form-control form-folder-control purify\" id=\"folder-edit-icon-selected\" data-field=\"iconSelected\" value=\"'+folderIconSelection+'\">' +\n            '<small class=\"form-text text-muted\">' +\n            '<?php echo langHdl('fontawesome_icon_tip'); ?><a href=\"<?php echo FONTAWESOME_URL;?>\" target=\"_blank\"><i class=\"fas fa-external-link-alt ml-1\"></i></a>' +\n            '</small>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\" id=\"folder-rights-tuned\">' +\n            '<label><?php echo langHdl('special'); ?></label>' +\n            '<div class=\"form-check\">' +\n            '<input type=\"checkbox\" class=\"form-check-input form-control\" id=\"folder-edit-add-restriction\">' +\n            '<label class=\"form-check-label pointer ml-2\" for=\"folder-edit-add-restriction\"><?php echo langHdl('create_without_password_minimal_complexity_target'); ?></label>' +\n            '</div>' +\n            '<div class=\"form-check\">' +\n            '<input type=\"checkbox\" class=\"form-check-input form-control\" id=\"folder-edit-edit-restriction\">' +\n            '<label class=\"form-check-label pointer ml-2\" for=\"folder-edit-edit-restriction\"><?php echo langHdl('edit_without_password_minimal_complexity_target'); ?></label>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '<div class=\"card-footer\">' +\n            '<button type=\"button\" class=\"btn btn-warning tp-action-edit\" data-action=\"submit\" data-id=\"' + currentFolderEdited + '\"><?php echo langHdl('submit'); ?></button>' +\n            '<button type=\"button\" class=\"btn btn-default float-right tp-action-edit\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>' +\n            '</div>' +\n            '</div>' +\n            '</td></tr>'\n        );\n\n        // Prepare iCheck format for checkboxes\n        $('input[type=\"checkbox\"].form-check-input, input[type=\"radio\"].form-radio-input').iCheck({\n            radioClass: 'iradio_flat-orange',\n            checkboxClass: 'icheckbox_flat-orange',\n        });\n\n        $('.select2').select2({\n            language: '<?php echo $_SESSION['user_language_code']; ?>'\n        });\n\n        // Manage status of the checkboxes\n        if (folderAddRestriction === 0) {\n            $('#folder-edit-add-restriction').iCheck('uncheck');\n        } else {\n            $('#folder-edit-add-restriction').iCheck('check');\n        }\n        if (folderEditRestriction === 0) {\n            $('#folder-edit-edit-restriction').iCheck('uncheck');\n        } else {\n            $('#folder-edit-edit-restriction').iCheck('check');\n        }\n\n        // Prepare select2\n        $('#folder-edit-parent').val(folderParent).change();\n        $('#folder-edit-complexity').val(folderComplexity).change();\n\n        currentFolderEdited = '';\n    });\n\n\n    $(document).on('click', '.tp-action-edit', function() {\n        if ($(this).data('action') === 'cancel') {\n            $('.temp-row').remove();\n        } else if ($(this).data('action') === 'submit') {\n            // STORE CHANGES\n            var currentFolderId = $(this).data('id');\n\n            // loop on all checked folders\n            var selectedFolders = [];\n            $(\"input:checkbox[class=checkbox-folder]:checked\").each(function() {\n                selectedFolders.push($(this).data('id'));\n            });\n\n            // Sanitize text fields\n            purifyRes = fieldDomPurifierLoop('#table-folders .purify');\n            if (purifyRes.purifyStop === true) {\n                // if purify failed, stop\n                return false;\n            }\n\n            // Prepare data\n            var data = {\n                'id': currentFolderId,\n                'title': purifyRes.arrFields['title'],    //$('#folder-edit-title').val(),\n                'parentId': $('#folder-edit-parent').val(),\n                'complexity': $('#folder-edit-complexity').val(),\n                'renewalPeriod': $('#new-renewal').val() === '' ? 0 : parseInt($('#new-renewal').val()),\n                'addRestriction': $('#folder-edit-add-restriction').prop(\"checked\") === true ? 1 : 0,\n                'editRestriction': $('#folder-edit-edit-restriction').prop(\"checked\") === true ? 1 : 0,\n                'icon': purifyRes.arrFields['icon'],    //$('#folder-edit-icon').val(),\n                'iconSelected': purifyRes.arrFields['iconSelected'],    //$('#folder-edit-icon-selected').val(),\n            }\n            console.log(data)\n            // Launch action\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'update_folder',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('error'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        buildTable();\n                        /* TODO\n                        if (data.info_parent_changed === 0) {\n                            // Update\n                            var row = $('tr[data-id=\"' + currentFolderId + '\"]');\n                            console.log(row)\n\n                            $(row).find()\n\n                        } else {\n                            buildTable();\n                        }*/\n                    }\n                }\n            );\n        }\n    });\n\n    // Close on escape key\n    $(document).keyup(function(e) {\n        if (e.keyCode === 27) {\n            if ($('.temp-row').length > 0) {\n                $('.temp-row').remove();\n            }\n        }\n    });\n\n\n    // Manage collapse/expend\n    $(document).on('click', '.icon-collapse', function() {\n        if ($(this).hasClass('fa-folder-minus') === true) {\n            $(this)\n                .removeClass('fa-folder-minus')\n                .addClass('fa-folder-plus text-primary');\n\n            $('.p' + $(this).data('id')).addClass('hidden');\n        } else {\n            $(this)\n                .removeClass('fa-folder-plus  text-primary')\n                .addClass('fa-folder-minus');\n            $('.p' + $(this).data('id')).removeClass('hidden');\n        }\n    });\n\n\n    //]]>\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      folders.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception(\"Error file '/includes/config/tp.config.php' not exists\", 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'folders', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n\n// Load template\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n// Ensure Complexity levels are translated\nif (defined('TP_PW_COMPLEXITY') === false) {\n    define(\n        'TP_PW_COMPLEXITY',\n        [\n            TP_PW_STRENGTH_1 => [TP_PW_STRENGTH_1, langHdl('complex_level1'), 'fas fa-thermometer-empty text-danger'],\n            TP_PW_STRENGTH_2 => [TP_PW_STRENGTH_2, langHdl('complex_level2'), 'fas fa-thermometer-quarter text-warning'],\n            TP_PW_STRENGTH_3 => [TP_PW_STRENGTH_3, langHdl('complex_level3'), 'fas fa-thermometer-half text-warning'],\n            TP_PW_STRENGTH_4 => [TP_PW_STRENGTH_4, langHdl('complex_level4'), 'fas fa-thermometer-three-quarters text-success'],\n            TP_PW_STRENGTH_5 => [TP_PW_STRENGTH_5, langHdl('complex_level5'), 'fas fa-thermometer-full text-success'],\n        ]\n    );\n}\n\n$complexityHtml = '<div id=\"hidden-select-complexity\" class=\"hidden\"><select id=\"select-complexity\" class=\"form-control form-item-control save-me\">';\n$complexitySelect = '';\nforeach (TP_PW_COMPLEXITY as $level) {\n    $complexitySelect .= '<option value=\"' . $level[0] . '\">' . $level[1] . '</option>';\n}\n$complexityHtml .= $complexitySelect . '</select></div>';\n// Prepare folders\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/SplClassLoader.php';\n//Build tree\n$tree = new SplClassLoader('Tree\\NestedTree', $SETTINGS['cpassman_dir'] . '/includes/libraries');\n$tree->register();\n$tree = new Tree\\NestedTree\\NestedTree(prefixTable('nested_tree'), 'id', 'parent_id', 'title');\n/* Get full tree structure */\n$tst = $tree->getDescendants();\n// prepare options list\n$droplist = '<option value=\"na\">---' . langHdl('select') . '---</option>';\nif ((int) $_SESSION['is_admin'] === 1 || (int) $_SESSION['user_manager'] === 1 || (int) $_SESSION['can_create_root_folder'] === 1) {\n    $droplist .= '<option value=\"0\">' . langHdl('root') . '</option>';\n}\nforeach ($tst as $t) {\n    if (\n        in_array($t->id, $_SESSION['groupes_visibles']) === true\n        && in_array($t->id, $_SESSION['personal_visible_groups']) === false\n    ) {\n        $droplist .= '<option value=\"' . $t->id . '\">' . addslashes($t->title);\n        $text = '';\n        foreach ($tree->getPath($t->id, false) as $fld) {\n            $text .= empty($text) === true ? '     [' . $fld->title : ' > ' . $fld->title;\n        }\n        $droplist .= (empty($text) === true ? '' : $text . '</i>]') . '</option>';\n    }\n}\n\n?>\n\n<!-- Content Header (Page header) -->\n<div class=\"content-header\">\n    <div class=\"container-fluid\">\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-6\">\n                <h1 class=\"m-0 text-dark\">\n                    <i class=\"fa fa-folder-open mr-2\"></i><?php echo langHdl('folders'); ?>\n                </h1>\n            </div><!-- /.col -->\n        </div><!-- /.row -->\n    </div><!-- /.container-fluid -->\n</div>\n<!-- /.content-header -->\n\n<section class=\"content\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"card\">\n                <div class=\"card-header align-middle\">\n                    <h3 class=\"card-title\">\n                        <button type=\"button\" class=\"btn btn-primary btn-sm tp-action mr-2\" data-action=\"new\">\n                            <i class=\"fa fa-plus mr-2\"></i><?php echo langHdl('new'); ?>\n                        </button>\n                        <button type=\"button\" class=\"btn btn-primary btn-sm tp-action mr-2\" data-action=\"delete\">\n                            <i class=\"fa fa-trash mr-2\"></i><?php echo langHdl('delete'); ?>\n                        </button>\n                        <button type=\"button\" class=\"btn btn-primary btn-sm tp-action mr-2\" data-action=\"refresh\">\n                            <i class=\"fa fa-refresh mr-2\"></i><?php echo langHdl('refresh'); ?>\n                        </button>\n                    </h3>\n                </div>\n\n                <div class=\"card-body form hidden\" id=\"folder-new\">\n                    <div class=\"card card-primary\">\n                        <div class=\"card-header\">\n                            <h3 class=\"card-title\"><?php echo langHdl('add_new_folder'); ?></h3>\n                        </div>\n                        <!-- /.card-header -->\n                        <!-- form start -->\n                        <form role=\"form\">\n                            <div class=\"card-body\">\n                                <div class=\"form-group\">\n                                    <label for=\"new-title\"><?php echo langHdl('label'); ?></label>\n                                    <input type=\"text\" class=\"form-control clear-me purify\" id=\"new-title\" data-field=\"title\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"new-parent\"><?php echo langHdl('parent'); ?></label>\n                                    <select id=\"new-parent\" class=\"form-control form-item-control select2 no-root\" style=\"width:100%;\">\n                                        <?php echo $droplist; ?>\n                                    </select>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"new-complexity\"><?php echo langHdl('password_minimal_complexity_target'); ?></label>\n                                    <select id=\"new-complexity\" class=\"form-control form-item-control select2 no-root\" style=\"width:100%;\">\n                                        <?php echo $complexitySelect; ?>\n                                    </select>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"new-access-right\"><?php echo langHdl('access_right_for_roles'); ?></label>\n                                    <select id=\"new-access-right\" class=\"form-control form-item-control select2 no-root\" style=\"width:100%;\">\n                                        <option value=\"\"><?php echo langHdl('no_access'); ?></option>\n                                        <option value=\"R\"><?php echo langHdl('read'); ?></option>\n                                        <option value=\"W\"><?php echo langHdl('write'); ?></option>\n                                    </select>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"new-renewal\"><?php echo langHdl('renewal_delay'); ?></label>\n                                    <input type=\"number\" class=\"form-control clear-me\" id=\"new-renewal\" value=\"0\" min=\"0\" data-bind=\"value:replyNumber\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <label><?php echo langHdl('icon'); ?></label>\n                                    <input type=\"text\" class=\"form-control form-folder-control purify\" id=\"new-folder-add-icon\" data-field=\"icon\">\n                                    <small class='form-text text-muted'>\n                                        <?php echo langHdl('fontawesome_icon_tip'); ?><a href=\"<?php echo FONTAWESOME_URL;?>\" target=\"_blank\"><i class=\"fas fa-external-link-alt ml-1\"></i></a>\n                                    </small>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label><?php echo langHdl('icon_on_selection'); ?></label>\n                                    <input type=\"text\" class=\"form-control form-folder-control purify\" id=\"new-folder-add-icon-selected\" data-field=\"iconSelected\">\n                                    <small class='form-text text-muted'>\n                                        <?php echo langHdl('fontawesome_icon_tip'); ?><a href=\"<?php echo FONTAWESOME_URL;?>\" target=\"_blank\"><i class=\"fas fa-external-link-alt ml-1\"></i></a>\n                                    </small>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label><?php echo langHdl('special'); ?></label>\n                                    <div class=\"form-check\">\n                                        <input type=\"checkbox\" class=\"form-check-input form-control\" id=\"new-add-restriction\">\n                                        <label for=\"new-add-restriction\" class=\"form-check-label pointer ml-2\"><?php echo langHdl('create_without_password_minimal_complexity_target'); ?></label>\n                                    </div>\n                                    <div class=\"form-check\">\n                                        <input type=\"checkbox\" class=\"form-check-input form-control\" id=\"new-edit-restriction\">\n                                        <label for=\"new-edit-restriction\" class=\"form-check-label pointer ml-2\"><?php echo langHdl('edit_without_password_minimal_complexity_target'); ?></label>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- /.card-body -->\n\n                            <div class=\"card-footer\">\n                                <button type=\"button\" class=\"btn btn-primary tp-action\" data-action=\"new-submit\"><?php echo langHdl('submit'); ?></button>\n                                <button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n                <div class=\"card-body form hidden\" id=\"folder-delete\">\n                    <div class=\"card card-warning\">\n                        <div class=\"card-header\">\n                            <h3 class=\"card-title\"><?php echo langHdl('delete_folders'); ?></h3>\n                        </div>\n                        <!-- /.card-header -->\n                        <!-- form start -->\n                        <form role=\"form\">\n                            <div class=\"card-body\">\n                                <div class=\"form-group\">\n                                    <h5><i class=\"fa fa-warning mr-2\"></i><?php echo langHdl('next_list_to_be_deleted'); ?></h5>\n                                    <div id=\"delete-list\" class=\"clear-me\"></div>\n                                </div>\n                            </div>\n\n                            <div class=\"card-body\">\n                                <div class=\"alert alert-danger\">\n                                    <h5><i class=\"icon fa fa-warning mr-2\"></i><?php echo langHdl('caution'); ?></h5>\n                                    <div class=\"form-check mb-3\">\n                                        <input type=\"checkbox\" class=\"form-check-red-input form-item-control flat-red required\" id=\"delete-confirm\">\n                                        <label class=\"form-check-label ml-3\" for=\"delete-confirm\"><?php echo langHdl('folder_delete_confirm'); ?></label>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- /.card-body -->\n\n                            <div class=\"card-footer\">\n                                <button type=\"button\" class=\"btn btn-danger disabled tp-action\" data-action=\"delete-submit\" id=\"delete-submit\"><?php echo langHdl('confirm'); ?></button>\n                                <button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n                <!--<div class=\"card-header\">\n                    <h3 class=\"card-title\" id=\"folders-alphabet\"></h3>\n                </div>-->\n                <!-- /.card-header -->\n\n                <div class=\"card-body form table-responsive1\" id=\"folders-list\">\n                    <div class=\"callout callout-info mt-3\">\n                        <div class=\"callout-body row\">\n                            <div class=\"input-group input-group-sm col-8\">\n                                <div class=\"input-group-prepend\">\n                                    <div class=\"input-group-text\"><?php echo langHdl('only_display_folders_to_depth'); ?></div>\n                                </div>\n                                <select class=\"form-control form-control-sm w-10\" id=\"folders-depth\">\n                                </select>\n                            </div>\n                            <div class=\"input-group input-group-sm col-4\">\n                                <div class=\"input-group-prepend\">\n                                    <div class=\"input-group-text\">\n                                        <i class=\"fas fa-search\"></i>\n                                    </div>\n                                </div>\n                                <input type=\"text\" class=\"form-control\" placeholder=\"<?php echo langHdl('find'); ?>\" id=\"folders-search\">\n                            </div>\n                        </div>\n                    </div>\n                    <table id=\"table-folders\" class=\"table table-hover table-striped table-responsive\" style=\"width:100%\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\" width=\"80px\"></th>\n                                <th scope=\"col\" min-width=\"200px\"><?php echo langHdl('group'); ?></th>\n                                <th scope=\"col\" min-width=\"200px\"><?php echo langHdl('group_parent'); ?></th>\n                                <th scope=\"col\" width=\"50px\"><i class=\"fas fa-gavel fa-lg infotip\" title=\"<?php echo langHdl('password_strength'); ?>\"></i></th>\n                                <th scope=\"col\" width=\"50px\"><i class=\"fas fa-recycle fa-lg infotip\" title=\"<?php echo langHdl('group_pw_duration') . ' ' . langHdl('group_pw_duration_tip'); ?>\"></i></th>\n                                <th scope=\"col\" width=\"50px\"><i class=\"fas fa-pen fa-lg infotip\" title=\"<?php echo langHdl('auth_creation_without_complexity'); ?>\"></i></th>\n                                <th scope=\"col\" width=\"50px\"><i class=\"fas fa-edit fa-lg infotip\" title=\"<?php echo langHdl('auth_modification_without_complexity'); ?>\"></i></th>\n                                <th scope=\"col\" width=\"50px\"><i class=\"fas fa-folder fa-lg infotip\" title=\"<?php echo langHdl('icon'); ?>\"></i></th>\n                                <th scope=\"col\" width=\"50px\"><i class=\"fas fa-folder-open fa-lg infotip\" title=\"<?php echo langHdl('icon_on_selection'); ?>\"></i></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n<!-- hidden -->\n<?php echo $complexityHtml; ?>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      items.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (! checkUser($_SESSION['user_id'], $_SESSION['key'], curPage($SETTINGS), $SETTINGS)) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n\n$var = [];\n$var['hidden_asterisk'] = '<i class=\"fas fa-asterisk mr-2\"></i><i class=\"fas fa-asterisk mr-2\"></i><i class=\"fas fa-asterisk mr-2\"></i><i class=\"fas fa-asterisk mr-2\"></i><i class=\"fas fa-asterisk\"></i>';\n\n?>\n\n\n<script type=\"text/javascript\">\n    var requestRunning = false,\n        clipboardForLogin,\n        clipboardForPassword,\n        clipboardForLink,\n        query_in_progress = 0,\n        screenHeight = $(window).height(),\n        quick_icon_query_status = true,\n        first_group = 1,\n        folderSearchCriteria = $('#jstree_search').val(),\n        userDidAChange = false,\n        userUploadedFile = false,\n        selectedFolder = false,\n        selectedFolderId = false,\n        itemClipboard,\n        startedItemsListQuery = false,\n        itemStorageInformation = '',\n        applicationVars,\n        initialPageLoad = true,\n        previousSelectedFolder=-1,\n        debugJavascript = false;\n\n    // Manage memory\n    browserSession(\n        'init',\n        'teampassApplication', {\n            lastItemSeen: false,\n            itemsListStop: '',\n            itemsListStart: '',\n            selectedFolder: '',\n            itemsListFolderId: false,\n            itemsListRestricted: '',\n            itemsShownByQuery: '',\n            foldersList: [],\n            personalSaltkeyRequired: 0,\n            uploadedFileId: '',\n            tempScrollTop: 0,\n        }\n    );\n\n    browserSession(\n        'init',\n        'teampassItem', {\n            IsPersonalFolder: '',\n            hasAccessLevel: '',\n            hasCustomCategories: '',\n            id: '',\n            timestamp: '',\n            folderId: ''\n        }\n    );\n\n    if (debugJavascript === true) {\n        console.log('User information')\n        console.log(store.get('teampassUser'))\n    }\n\n    // Show loader\n    toastr.remove();\n    toastr.info('<?php echo langHdl('loading_data'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n    // Build tree\n    $('#jstree').jstree({\n        'core': {\n            'animation': 0,\n            'check_callback': true,\n            'data': {\n                'url': './sources/tree.php',\n                'dataType': 'json',\n                'icons': false,\n                'data': function(node) {\n                    if (debugJavascript === true) {\n                        console.info('Les r\u00e9pertoires sont charg\u00e9s');\n                        console.log(node);\n                    }\n                    return {\n                        'id': node.id.split('_')[1],\n                        'force_refresh': store.get('teampassApplication') !== undefined ?\n                            store.get('teampassApplication').jstreeForceRefresh : 0\n                    };\n                }\n            },\n            'strings': {\n                'Loading ...': '<?php echo langHdl('loading'); ?>...'\n            },\n            'themes': {\n                'icons': false,\n            },\n        },\n        'plugins': [\n            'state', 'search'\n        ]\n    })\n    // On node select\n    .bind('select_node.jstree', function(e, data) {\n        if (debugJavascript === true) console.log('JSTREE BIND');\n        selectedFolder = $('#jstree').jstree('get_selected', true)[0]\n        selectedFolderId = parseInt(selectedFolder.id.split('_')[1]);\n\n        // manage icon open/closed\n        var selectedFolderIcon = $('#fld_'+selectedFolderId).children('.tree-folder').attr('data-folder'),\n            selectedFolderIconSelected = $('#fld_'+selectedFolderId).children('.tree-folder').attr('data-folder-selected');\n\n        // remove selected on previous folder\n        $($('#fld_'+previousSelectedFolder).children('.tree-folder'))\n            .removeClass($('#fld_'+previousSelectedFolder).children('.tree-folder').attr('data-folder-selected'))\n            .addClass($('#fld_'+previousSelectedFolder).children('.tree-folder').attr('data-folder'));\n        // show selected icon\n        $('#fld_'+selectedFolderId).children('.tree-folder')\n            .removeClass(selectedFolderIcon)\n            .addClass(selectedFolderIconSelected);\n\n        if (debugJavascript === true) {\n            console.info('SELECTED NODE ' + selectedFolderId + \" -- \" + startedItemsListQuery);\n            console.log(selectedFolder);\n            console.log(selectedFolder.original.is_pf)\n        }\n\n        store.update(\n            'teampassApplication',\n            function(teampassApplication) {\n                teampassApplication.selectedFolder = selectedFolderId,\n                teampassApplication.selectedFolderTitle = selectedFolder.a_attr['data-title'],\n                teampassApplication.selectedFolderParentId = selectedFolder.parent !== \"#\" ? selectedFolder.parent.split('_')[1] : 0,\n                teampassApplication.selectedFolderParentTitle = selectedFolder.a_attr['data-title'],\n                teampassApplication.selectedFolderIcon = selectedFolderIcon,\n                teampassApplication.selectedFolderIconSelected = selectedFolderIconSelected,\n                teampassApplication.selectedFolderIsPF = selectedFolder.original.is_pf,\n                teampassApplication.userCanEdit = selectedFolder.original.can_edit\n            }\n        )\n        store.update(\n            'teampassItem',\n            function(teampassItem) {\n                teampassItem.folderId = selectedFolderId\n            }\n        );\n\n        // Prepare list of items\n        if (startedItemsListQuery === false) {\n            startedItemsListQuery = true;\n            ListerItems(selectedFolderId, '', 0);\n        }\n\n        previousSelectedFolder = selectedFolderId;\n        initialPageLoad = false;\n    })\n    // Search in tree\n    .bind('search.jstree', function(e, data) {\n        if (data.nodes.length == 1) {\n            //open the folder\n            ListerItems($('#jstree li>a.jstree-search').attr('id').split('_')[1], '', 0);\n        }\n    });\n\n    // Find folders in jstree\n    $('#jstree_search')\n        .keypress(function(e) {\n            if (e.keyCode === 13) {\n                $('#jstree').jstree('search', $('#jstree_search').val());\n            }\n        })\n        .focus(function() {\n            $(this).val('');\n        })\n        .blur(function() {\n            $(this).val(folderSearchCriteria);\n        });\n\n    // Is this a short url\n    var queryDict = {},\n        showItemOnPageLoad = false,\n        itemIdToShow = '';\n    location.search.substr(1).split(\"&\").forEach(function(item) {\n        queryDict[item.split(\"=\")[0]] = item.split(\"=\")[1]\n    });\n\n    if (queryDict['group'] !== undefined && queryDict['group'] !== '' &&\n        queryDict['id'] !== undefined && queryDict['id'] !== ''\n    ) {\n        // Show cog\n        toastr.remove();\n        toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Store current view\n        savePreviousView();\n\n        // Store the folder to open\n        store.set(\n            'teampassApplication', {\n                selectedFolder: parseInt(queryDict['group']),\n                selectedItem: parseInt(queryDict['id'])\n            }\n        );\n        store.update(\n            'teampassItem',\n            function(teampassItem) {\n                teampassItem.folderId = parseInt(queryDict['group'])\n            }\n        );\n\n        showItemOnPageLoad = true;\n        itemIdToShow = queryDict['id'];\n        startedItemsListQuery = true;\n\n        $('.item-details-card').removeClass('hidden');\n        $('#folders-tree-card, .columns-position').addClass('hidden');\n\n        // refresh selection in jstree\n        $('#jstree').jstree('deselect_all');\n        $('#jstree').jstree('select_node', '#li_' + itemIdToShow);\n        $('#jstree').jstree(true).hide_icons()\n\n        // Get list of items in this folder\n        startedItemsListQuery = true;\n        ListerItems(store.get('teampassApplication').selectedFolder, '', 0);\n\n        // Show details\n        $.when(\n            Details(itemIdToShow, 'show', true)\n        ).then(function() {\n            //requestRunning = false;\n            console.log('Item detail affich\u00e9')\n            // Force previous view to Tree folders\n            store.update(\n                'teampassUser',\n                function(teampassUser) {\n                    teampassUser.previousView = '#folders-tree-card';\n                }\n            );\n        });\n    }\n\n    // Preload list of items\n    if (store.get('teampassApplication') !== undefined &&\n        store.get('teampassApplication').selectedFolder !== undefined &&\n        store.get('teampassApplication').selectedFolder !== ''\n    ) {\n        startedItemsListQuery = true;\n\n        ListerItems(store.get('teampassApplication').selectedFolder, '', 0);\n\n    }\n\n\n\n    // Close on escape key\n    $(document).keyup(function(e) {\n        if (e.keyCode == 27) {\n            closeItemDetailsCard();\n        }\n    });\n\n    /*// Edit on e key\n    $(document).keyup(function(e) {\n        if (e.keyCode == 69 && $('.item-details-card').is(':visible') === true) {\n            if ($('#form-item').hasClass('hidden') === false) {\n                showItemEditForm(store.get('teampassItem').id);\n            }\n        }\n    });\n    */\n\n    // load list of visible folders for current user\n    $(this).delay(500).queue(function() {\n        refreshVisibleFolders();\n\n        $(this).dequeue();\n    });\n\n    // Keep the scroll position\n    $(window).on(\"scroll\", function() {\n        if ($('#folders-tree-card').hasClass('hidden') === false) {\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    tempScrollTop: $(window).scrollTop()\n                }\n            );\n        }\n    });\n\n\n    // Ensure correct height of folders tree\n    $('#jstree').height(screenHeight - 200);\n\n    // Prepare iCheck format for checkboxes\n    $('input[type=\"checkbox\"].flat-blue, input[type=\"radio\"].flat-blue').iCheck({\n        checkboxClass: 'icheckbox_flat-blue',\n        radioClass: 'iradio_flat-blue'\n    });\n\n    // Prepare some UI elements\n    $('#limited-search').prop('checked', false);\n\n    $(document).on('blur', '#form-item-icon', function() {\n        $('#form-item-icon-show').html('<i class=\"fas '+$(this).val()+'\"></i>');\n    });\n\n    // Manage the password show button\n    // including autohide after a couple of seconds\n    $(document).on('click', '#card-item-pwd-show-button', function() {\n        if ($(this).hasClass('pwd-shown') === false) {\n            $(this).addClass('pwd-shown');\n            // Prepare data to show\n            // Is data crypted?\n            var data = unCryptData($('#hidden-item-pwd').val(), '<?php echo $_SESSION['key']; ?>');\n            if (data !== false && data !== undefined) {\n                $('#hidden-item-pwd').val(\n                    data.password\n                );\n            }\n\n            // Change class and show spinner\n            $('.pwd-show-spinner')\n                .removeClass('far fa-eye')\n                .addClass('fas fa-circle-notch fa-spin text-warning');\n\n            // display raw password\n            $('#card-item-pwd')\n                .text($('#hidden-item-pwd').val())\n                .addClass('pointer_none');\n\n            // log password is shown\n            itemLog(\n                'at_password_shown',\n                store.get('teampassItem').id,\n                $('#card-item-label').text()\n            );\n\n            // Autohide\n            setTimeout(() => {\n                $(this).removeClass('pwd-shown');\n                $('#card-item-pwd')\n                    .html('<?php echo $var['hidden_asterisk']; ?>')\n                    .removeClass('pointer_none');\n                $('.pwd-show-spinner')\n                    .removeClass('fas fa-circle-notch fa-spin text-warning')\n                    .addClass('far fa-eye');\n            }, <?php echo isset($SETTINGS['password_overview_delay']) === true ? $SETTINGS['password_overview_delay'] * 1000 : 4000; ?>);\n        } else {\n            $('#card-item-pwd').html('<?php echo $var['hidden_asterisk']; ?>');\n        }\n    });\n\n\n    // Manage folders action\n    $('.tp-action').click(function() {\n        // SHow user\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?><i class=\"fas fa-circle-notch fa-spin fa-2x ml-3\"></i>');\n\n        if ($(this).data('folder-action') === 'refresh') {\n            // Force refresh\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.jstreeForceRefresh = 1\n                }\n            );\n            if (selectedFolderId !== '') {\n                refreshTree(selectedFolderId, true);\n            } else {\n                refreshTree();\n            }\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.jstreeForceRefresh = 0\n                }\n            );\n            toastr.remove();\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'expand') {\n            $('#jstree').jstree('open_all');\n            toastr.remove();\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'collapse') {\n            $('#jstree').jstree('close_all');\n            toastr.remove();\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'add') {\n            if (debugJavascript === true) console.info('SHOW ADD FOLDER');\n            toastr.remove();\n\n            // Check privileges\n            if (store.get('teampassItem').hasAccessLevel < 20 &&\n                store.get('teampassUser').can_create_root_folder === 0\n            ) {\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Store current view\n            savePreviousView('.form-folder-add');\n\n            // Store last\n            // Show copy form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-add').removeClass('hidden');\n\n            // Prepare some data in the form\n            if (selectedFolder.parent !== undefined && selectedFolder.parent !== '') {\n                $('#form-folder-add-parent').val(selectedFolder.parent.split('_')[1]).change();\n            }\n\n            $('#form-folder-add-label, #form-folder-add-parent').prop('disabled', false);\n\n            $('#form-folder-add-label')\n                .val('')\n                .focus();\n            $('#form-folder-add-icon-selected, #form-folder-add-icon').val('');\n            // Set type of action for the form\n            $('#form-folder-add').data('action', 'add');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'edit') {\n            if (debugJavascript === true) console.info('SHOW EDIT FOLDER');\n            toastr.remove();\n            // Check privileges\n            if (store.get('teampassItem').hasAccessLevel < 20) {\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n            if (debugJavascript === true) console.log(store.get('teampassApplication'));\n\n            // Store current view\n            savePreviousView('.form-folder-add');\n\n            // Show edit form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-add').removeClass('hidden');\n            // Prepare some data in the form\n            $(\"#form-folder-add-parent option[value='\" + store.get('teampassApplication').selectedFolder + \"']\")\n                .prop('disabled', true);\n            $('#form-folder-add-parent').val(store.get('teampassApplication').selectedFolderParentId).change();\n            $(\"#form-folder-add-parent option[value='\" + store.get('teampassApplication').selectedFolderParentId + \"']\")\n                .prop('disabled', false);\n            $('#form-folder-add-label')\n                .val(store.get('teampassApplication').selectedFolderParentTitle)\n                .focus();\n            // is PF 1st level\n            if (store.get('teampassApplication').selectedFolderIsPF === 1 && store.get('teampassApplication').selectedFolderParentId !== 0) {\n                $('#form-folder-add-label, #form-folder-add-parent').prop('disabled', false);\n            } else if (store.get('teampassApplication').userCanEdit === 0) {\n                $('#form-folder-add-label, #form-folder-add-parent').prop('disabled', true);\n            } else {\n                $('#form-folder-add-label, #form-folder-add-parent').prop('disabled', false);\n            }\n\n            $('#form-folder-add-complexicity').val(store.get('teampassItem').folderComplexity).change();\n            $('#form-folder-add-icon')\n                .val(store.get('teampassApplication').selectedFolderIcon);\n            $('#form-folder-add-icon-selected')\n                .val(store.get('teampassApplication').selectedFolderIconSelected);\n            // Set type of action for the form\n            $('#form-folder-add').data('action', 'update');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'copy') {\n            if (debugJavascript === true) console.info('SHOW COPY FOLDER');\n            toastr.remove();\n            // Check privileges\n            if (store.get('teampassItem').hasAccessLevel < 20) {\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Store current view\n            savePreviousView('.form-folder-copy');\n\n            // Show copy form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-copy').removeClass('hidden');\n            // Prepare some data in the form\n            $('#form-folder-copy-source').val(store.get('teampassApplication').selectedFolder).change();\n            //$(\"#form-folder-copy-destination option[value='\"+selectedFolder.id.split('_')[1]+\"']\")\n            //.prop('disabled', true);\n            $('#form-folder-copy-destination').val(0).change();\n            $('#form-folder-copy-label')\n                .val(store.get('teampassApplication').selectedFolderTitle + ' <?php echo strtolower(langHdl('copy')); ?>')\n                .focus();\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'delete') {\n            if (debugJavascript === true) console.info('SHOW DELETE FOLDER');\n            toastr.remove();\n            // Check privileges\n            if (store.get('teampassItem').hasAccessLevel < 30) {\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Store current view\n            savePreviousView('.form-folder-delete');\n\n            // Show copy form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-delete').removeClass('hidden');\n\n            // Prepare some data in the form\n            $('#form-folder-delete-selection').val(store.get('teampassApplication').selectedFolder).change();\n            $('#form-folder-confirm-delete').iCheck('uncheck');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'import') {\n            // IMPORT ITEMS\n            if (debugJavascript === true) console.info('SHOW IMPORT ITEMS');\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-folder-import');\n\n\n            // Show import form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-import').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'new') {\n            if (debugJavascript === true) console.info('SHOW NEW ITEM');\n            toastr.remove();\n            // Store current view\n            savePreviousView();\n\n            // Remove validated class\n            $('#form-item').removeClass('was-validated');\n\n            // Get some info\n            $.when(\n                retPrivileges = getPrivilegesOnItem(store.get('teampassApplication').itemsListFolderId, 0)\n            ).then(function() {\n                if (retPrivileges === false) {\n                    return false;\n                }\n                // If previous item was seen then clean session\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.isNewItem = 1,\n                        teampassItem.id = ''\n                    }\n                );\n\n                // Show Visibility and minimum complexity\n                $('#card-item-visibility').html(store.get('teampassItem').itemVisibility);\n                $('#card-item-minimum-complexity').html(store.get('teampassItem').itemMinimumComplexity);\n\n                // HIde\n                $('.form-item-copy, #folders-tree-card, .columns-position, #form-item-password-options, .form-item-action, #form-item-attachments-zone')\n                    .addClass('hidden');\n                // Destroy editor\n                $('#form-item-description').summernote('destroy');\n\n                // Clean select2 lists\n                $('.select2').val('');\n                /*if ($('.select2') !== null) {if (debugJavascript === true) console.log($('.select2').length)\n                    $('.select2').change();\n                }*/\n                // Do some form cleaning\n                $('.clear-me-val').val('');\n                $('.item-details-card').find('.form-control').val('');\n                $('.clear-me-html').html('');\n                $('.form-item-control').val('');\n                // Show edition form\n                $('.form-item').removeClass('hidden');\n                $('.item-details-card').addClass('hidden');\n                // Force update of simplepassmeter\n                $('#form-item-password').focus();\n                $('#form-item-label').focus();\n                // Prepare editor\n                $('#form-item-description').summernote({\n                    toolbar: [\n                        ['style', ['style']],\n                        ['font', ['bold', 'italic', 'underline', 'strikethrough', 'clear']],\n                        ['fontsize', ['fontsize']],\n                        ['color', ['color']],\n                        ['para', ['ul', 'ol', 'paragraph']],\n                        ['insert', ['link', 'picture']],\n                        //['height', ['height']],\n                        ['view', ['codeview']]\n                    ],\n                    codeviewFilter: true,\n                    codeviewIframeFilter: true\n                });\n\n                // Set folder\n                $('#form-item-folder').val(selectedFolderId).change();\n                // Select tab#1\n                $('#form-item-nav-pills li:first-child a').tab('show');\n                // Preselect\n                $('#pwd-definition-size').val(12);\n                // Set type of action\n                $('#form-item-button-save').data('action', 'new_item');\n                // Does this folder contain Custom Fields\n                if (store.get('teampassItem').hasCustomCategories.length > 0) {\n                    $('#form-item-field').removeClass('hidden');\n                    $.each(store.get('teampassItem').hasCustomCategories, function(i, category) {\n                        $('#form-item-category-' + category).removeClass('hidden');\n                    })\n                } else {\n                    $('#form-item-field, .form-item-category').addClass('hidden');\n                }\n                \n                // Add track-change class\n                //$('#form-item-label, #form-item-description, #form-item-login, #form-item-password, #form-item-email, #form-item-url, #form-item-folder, #form-item-restrictedto, #form-item-tags, #form-item-anyoneCanModify, #form-item-deleteAfterShown, #form-item-deleteAfterDate, #form-item-anounce, .form-item-field-custom').addClass('track-change');\n\n                // Update variable\n                userDidAChange = false;\n\n                toastr.remove();\n            });\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'edit') {\n            if (debugJavascript === true) console.info('SHOW EDIT ITEM');\n            $.when(\n                getPrivilegesOnItem(selectedFolderId, 1)\n            ).then(function() {\n                // Is user allowed\n                if (store.get('teampassItem').item_rights < 20) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('error_not_allowed_to'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n\n                // Store current view\n                savePreviousView();\n\n                // Store not a new item\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.isNewItem = 0\n                    }\n                );\n\n                // Remove validated class\n                $('#form-item').removeClass('was-validated');\n\n                // Now manage edtion\n                showItemEditForm(selectedFolderId);\n            });\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'copy') {\n            if (debugJavascript === true) console.info('SHOW COPY ITEM');\n            toastr.remove();\n            // Store current view\n            savePreviousView('.form-item-copy');\n\n            if (store.get('teampassItem').user_can_modify === 1) {\n                // Show copy form\n                $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n                $('.form-item-copy, .item-details-card-menu').removeClass('hidden');\n                // Prepare some data in the form\n                $('#form-item-copy-new-label').val($('#form-item-label').val());\n                $('#form-item-copy-destination').val($('#form-item-folder').val()).change();\n            } else {\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n            }\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'delete') {\n            // Is user allowed\n            var levels = [50, 70];\n            if (levels.includes(store.get('teampassItem').item_rights) === false) {\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-item-delete');\n\n            if (debugJavascript === true) console.info('SHOW DELETE ITEM');\n            if (store.get('teampassItem').user_can_modify === 1) {\n                // Show delete form\n                $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n                $('.form-item-delete, .item-details-card-menu').removeClass('hidden');\n            } else {\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n            }\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'share') {\n            if (debugJavascript === true) console.info('SHOW SHARE ITEM');\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-item-share');\n\n            // Show share form\n            $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n            $('.form-item-share, .item-details-card-menu').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'notify') {\n            if (debugJavascript === true) console.info('SHOW NOTIFY ITEM');\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-item-notify');\n\n            $('#form-item-notify-checkbox').iCheck('uncheck');\n            // Show notify form\n            $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n            $('.form-item-notify, .item-details-card-menu').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'otv') {\n            if (debugJavascript === true) console.info('SHOW OTV ITEM');\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-item-otv');\n\n            // Generate link\n            prepareOneTimeView();\n\n            $('#form-item-otv-link').val('');\n            // Show notify form\n            $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n            $('.form-item-otv, .item-details-card-menu').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'server') {\n            if (debugJavascript === true) console.info('SHOW SERVER UPDATE ITEM');\n            toastr.remove();\n\n            // Is user allowed\n            var levels = [50, 70];\n            if (levels.includes(store.get('teampassItem').item_rights) === false) {\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Store current view\n            savePreviousView('.form-item-server');\n\n            $('#form-item-notify-checkbox').iCheck('uncheck');\n            // Show notify form\n            $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n            $('.form-item-server, .item-details-card-menu').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        }\n\n        return false;\n    });\n\n    /**\n     * Saves the current view of user\n     */\n    function savePreviousView(newElement = '') {\n        var element = '';\n        if ($('#folders-tree-card').hasClass('hidden') === false) {\n            element = '#folders-tree-card';\n        } else if ($('.form-item').hasClass('hidden') === false) {\n            element = '.form-item';\n        } else if ($('.item-details-card-menu').hasClass('hidden') === false) {\n            element = '.item-details-card';\n        }\n        \n        if (debugJavascript === true) {console.log('>>> ' + element + ' -- ' + newElement);}\n\n        if (element === '.item-details-card') element = '#folders-tree-card';\n\n        // Store current view\n        store.update(\n            'teampassUser',\n            function(teampassUser) {\n                teampassUser.previousView = element;\n            }\n        );\n\n        // Store the new one to display\n        store.update(\n            'teampassUser',\n            function(teampassUser) {\n                teampassUser.currentView = newElement;\n            }\n        );\n    }\n\n\n    $('.but-back').click(function() {\n        userDidAChange = false;\n        if ($(this).hasClass('but-back-to-item') === false) {\n            // Is this form the edition one?\n            if ($(this).hasClass('item-edit') === true && userUploadedFile === true) {\n                // Do some operation such as cancel file upload\n                var data = {\n                    'item_id': store.get('teampassItem').id,\n                }\n\n                $.post(\n                    \"sources/items.queries.php\", {\n                        type: 'delete_uploaded_files_but_not_saved',\n                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'delete_uploaded_files_but_not_saved');\n                        if (debugJavascript === true) console.log(data);\n                    }\n                );\n            }\n\n            // Clear pickfiles div\n            $('#form-item-upload-pickfilesList').html('');\n\n            // Hide all\n            $('.form-item, .form-item-action, .form-folder-action, .item-details-card, #folders-tree-card, .columns-position, #item-details-card-categories, #form-item-upload-pickfilesList, #card-item-expired')\n                .addClass('hidden');\n\n            // Show expected one\n            $(store.get('teampassUser').previousView).removeClass('hidden');\n\n            closeItemDetailsCard();\n        } else {\n            $(store.get('teampassUser').previousView).removeClass('hidden');\n            $(store.get('teampassUser').currentView).addClass('hidden');\n        }\n        $('.but-prev-item, .but-next-item').addClass('hidden').text('');\n    });\n\n\n    // Quit item details card back to items list\n    $('.but-back-to-list').click(function() {\n        closeItemDetailsCard();\n    });\n\n\n\n    // Manage if change is performed by user\n    $('#form-item .form-item-control')\n        .on('change', function() {\n            if (requestRunning === false) {\n                userDidAChange = true;\n                if (debugJavascript === true) console.log('User did a change on #form-item > ' + userDidAChange + \" - Element \" + $(this).attr('id'));\n                //$(this).attr('data-change-ongoing', true);\n            }\n        })\n        .on('ifToggled', function() {\n            if (requestRunning === false) {\n                userDidAChange = true;\n                if (debugJavascript === true) console.log('User did a change on ifToggled > ' + userDidAChange);\n                //$(this).attr('data-change-ongoing', true);\n            }\n        });\n\n    /**\n     * Click on perform IMPORT\n     */\n    $(document).on('click', '#form-item-import-perform', function() {\n        if (debugJavascript === true) console.log('START IMPORT');\n    });\n\n\n    /**\n     * Click on ITEM REQUEST ACCESS\n     */\n    $(document).on('click', '.fa-clickable-access-request', function() {\n        // Store current view\n        savePreviousView();\n\n        // Adapt the form\n        $('#form-item-request-access-label')\n            .html($(this).closest('.list-item-description').find('.list-item-row-description').text());\n\n        // Store current item ID\n        var selectedItemId = $(this).closest('.list-item-row').data('item-id');\n        store.update(\n            'teampassItem',\n            function(teampassItem) {\n                teampassItem.id = selectedItemId;\n            }\n        );\n\n        // Show user\n        $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n        $('.form-item-request-access').removeClass('hidden');\n    });\n\n    /**\n     * Send an access request to author\n     */\n    $(document).on('click', '#form-item-request-access-perform', function() {\n        // No reason is provided\n        if ($('#form-item-request-access-reason').val() === '') {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_provide_reason'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        var data = {\n            'id': store.get('teampassItem').id,\n            'email': DOMPurify.sanitize($('#form-item-request-access-reason').val()),\n        }\n        // NOw send the email\n        $.post(\n            \"sources/items.queries.php\", {\n                type: 'send_request_access',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'send_request_access');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Change view\n                    $('.form-item-request-access').addClass('hidden');\n                    $('#folders-tree-card, .columns-position').removeClass('hidden');\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n\n        scrollBackToPosition();\n    });\n\n\n    /**\n     * Show/Hide the Password generation options\n     */\n    $('#item-button-password-showOptions').click(function() {\n        if ($('#form-item-password-options').hasClass('hidden') === true) {\n            $('#form-item-password-options').removeClass('hidden');\n        } else {\n            $('#form-item-password-options').addClass('hidden');\n        }\n    });\n\n\n\n    /**\n     * Adapt the top rules of item form on change of folders\n     */\n    $('#form-item-folder').change(function() {\n        if ($(this).val() !== null && store.get('teampass-folders') !== undefined) {\n            if (debugJavascript === true) {\n                console.log('teampass-folders');\n                console.log(store.get('teampass-folders'))\n            }\n            var folders = JSON.parse(store.get('teampass-folders'));\n            $('#card-item-visibility').html(folders[$(this).val()].visibilityRoles);\n            $('#card-item-minimum-complexity').html(folders[$(this).val()].complexity.text);\n        }\n\n    });\n\n    /**\n     * NOTIFY - Perform save\n     */\n    $('#form-item-notify-perform').click(function() {\n        var form = $('#form-item-notify');\n\n\n        var data = {\n            'notification_status': $('#form-item-notify-checkbox').is(':checked') === true ? 1 : 0,\n            'item_id': store.get('teampassItem').id,\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'save_notification_status',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'save_notification_status');\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Change the icon for Notification\n                    if ($('#form-item-notify-checkbox').is(':checked') === true) {\n                        $('#card-item-misc-notification')\n                            .html('<span class=\"far fa-bell infotip text-success\" title=\"<?php echo langHdl('notification_engaged'); ?>\"></span>');\n                    } else {\n                        $('#card-item-misc-notification')\n                            .html('<span class=\"far fa-bell-slash infotip text-warning\" title=\"<?php echo langHdl('notification_not_engaged'); ?>\"></span>');\n                    }\n\n                    // Show/hide forms\n                    $('.item-details-card').removeClass('hidden');\n                    $('.form-item-notify').addClass('hidden');\n\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n                    // Clear\n                    $('#form-item-notify-checkbox').iCheck('uncheck');\n                }\n            }\n        );\n    });\n\n\n\n    /**\n     * SHARE - validate the email\n     */\n    $('#form-item-share-perform').click(function() {\n        var form = $('#form-item-share');\n\n        if (form[0].checkValidity() === false) {\n            form.addClass('was-validated');\n            return false;\n        }\n\n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Prepare data\n        var data = {\n            'id': store.get('teampassItem').id,\n            'receipt': DOMPurify.sanitize($('#form-item-share-email').val()),\n            'cat': 'share_this_item',\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'send_email',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'send_email');\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $('.item-details-card').removeClass('hidden');\n                    $('.form-item-share').addClass('hidden');\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n                    // Clear\n                    $('#form-item-share-email').val('');\n                }\n            }\n        );\n    });\n\n\n    /**\n     * DELETE - recycle item\n     */\n    $('#form-item-delete-perform').click(function() {\n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Force user did a change to false\n        userDidAChange = false;\n        userUploadedFile = false;\n\n        var data = {\n            'item_id': store.get('teampassItem').id,\n            'folder_id': selectedFolderId,\n            'label': DOMPurify.sanitize($('#form-item-copy-new-label').val()),\n            'access_level': store.get('teampassItem').hasAccessLevel,\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'delete_item',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'delete_item');\n\n                if (typeof data !== 'undefined' && data.error !== true) {\n                    $('.form-item-action, .item-details-card-menu').addClass('hidden');\n                    // Warn user\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    // Refresh tree\n                    refreshTree(selectedFolderId, true);\n                    // Load list of items\n                    ListerItems(selectedFolderId, '', 0);\n                    // Close\n                    closeItemDetailsCard();\n                } else {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * NOTIFY - save status\n     */\n    $('#form-item-share-perform').click(function() {\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'notify_user_on_item_change',\n                id: store.get('teampassItem').id,\n                value: $('#form-item-anyoneCanModify').is(':checked') === true ? 1 : 0,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                if (data[0].error === '') {\n                    $('.form-item, .item-details-card, .form-item-action').removeClass('hidden');\n                    $('.form-item-share, .item-details-card-menu').addClass('hidden');\n                    // Warn user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    // Clear\n                    $('#form-item-anyoneCanModify').attr('checked', '');\n                } else {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                }\n            },\n            'json'\n        );\n    });\n\n\n    /**\n     * COPY - perform copy item\n     */\n    $('#form-item-copy-perform').click(function() {\n        // Do check\n        if ($('#form-item-copy-new-label').val() === '') {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Show cog\n        toastr.remove();\n        toastr.info('<?php echo langHdl('item_copying'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Force user did a change to false\n        userDidAChange = false;\n        userUploadedFile = false;\n\n        var data = {\n            'item_id': store.get('teampassItem').id,\n            'source_id': selectedFolderId,\n            'dest_id': $('#form-item-copy-destination').val(),\n            'new_label': DOMPurify.sanitize($('#form-item-copy-new-label').val()),\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'copy_item',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n\n                if (typeof data !== 'undefined' && data.error !== true) {\n                    // Warn user\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    // Refresh tree\n                    refreshTree(parseInt($('#form-item-copy-destination').val()), true);\n                    // Load list of items\n                    ListerItems(parseInt($('#form-item-copy-destination').val()), '', 0);\n\n                    // Reopen Item details form\n                    Details(\n                        data.new_id,\n                        'show',\n                        true\n                    );\n                    \n                    // Close\n                    $('.item-details-card').removeClass('hidden');\n                    $('.form-item-copy').addClass('hidden');\n                } else {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * SERVER - perform server update\n     */\n    $('#form-item-server-perform').click(function() {\n        // Decide what action is performing the user\n\n        if ($('#tab-one-shot').hasClass('active') === true) {\n            // Do check\n            if ($('#form-item-server-login').val() === '' ||\n                $('#form-item-server-old-password').val() === '' ||\n                $('#form-item-server-password').val() === ''\n            ) {\n                toastr.error(\n                    '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Show cog\n            toastr.remove();\n            toastr.info(\n                '<i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>',\n            );\n\n            // Force user did a change to false\n            userDidAChange = false;\n            userUploadedFile = false;\n\n            var data = {\n                'item_id': store.get('teampassItem').id,\n                'new_pwd': DOMPurify.sanitize($('#form-item-server-password').val()),\n                'ssh_root': DOMPurify.sanitize($('#form-item-server-login').val()),\n                'ssh_pwd': DOMPurify.sanitize($('#form-item-server-old-password').val()),\n                'user_id': <?php echo $_SESSION['user_id']; ?>,\n            }\n\n            $.post(\n                \"sources/utils.queries.php\", {\n                    type: \"server_auto_update_password\",\n                    data: prepareExchangedData(data, \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                    if (debugJavascript === true) console.log(data);\n                    //check if format error\n                    if (data.error === true) {\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Warn user\n                        toastr.success(\n                            '<?php echo langHdl('success'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n\n                        // Info\n                        $(\"#form-item-server-status\")\n                            .html(\"<?php echo langHdl('done'); ?> \" + data.text)\n                            .removeClass('hidden');\n                    }\n                }\n            );\n        } else if ($('#tab-scheduled').hasClass('active') === true) {\n            $.post(\n                \"sources/utils.queries.php\", {\n                    type: \"server_auto_update_password_frequency\",\n                    id: store.get('teampassItem').id,\n                    freq: $('#form-item-server-cron-frequency').val(),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    if (data[0].error != \"\") {\n                        toastr.remove();\n                        toastr.error(\n                            data[0].error,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        $('#form-item-server-cron-frequency').val(0).change();\n                        toastr.success(\n                            '<?php echo langHdl('success'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                },\n                \"json\"\n            );\n        }\n    });\n\n\n    /**\n     * SUGGESTION - perform new suggestion on item\n     */\n    $('#form-item-suggestion-perform').click(function() {\n        var form = $('#form-item-suggestion');\n\n        if (form[0].checkValidity() === false) {\n            form.addClass('was-validated');\n\n            // Send alert to user\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('form_presents_inconsistencies'); ?>',\n                '', {\n                    timeOut: 10000,\n                    progressBar: true\n                }\n            );\n\n            return false;\n        }\n\n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Force user did a change to false\n        userDidAChange = false;\n        userUploadedFile = false;\n\n        var data = {\n            'label': DOMPurify.sanitize($('#form-item-suggestion-label').val()),\n            'login': DOMPurify.sanitize($('#form-item-suggestion-login').val()),\n            'password': DOMPurify.sanitize($('#form-item-suggestion-password').val()),\n            'email': DOMPurify.sanitize($('#form-item-suggestion-email').val()),\n            'url': DOMPurify.sanitize($('#form-item-suggestion-url').val()),\n            'description': DOMPurify.sanitize($('#form-item-suggestion-description').summernote('code'), {USE_PROFILES: {html: true}}),\n            'comment': DOMPurify.sanitize($('#form-item-suggestion-comment').val(), {USE_PROFILES: {html: true}}),\n            'folder_id': selectedFolderId,\n            'item_id': store.get('teampassItem').id\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'suggest_item_change',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data//decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'suggest_item_change');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Warn user\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    // Clear form\n                    $('.form-item-suggestion').html('');\n\n                    // Collapse form\n                    //$('.card-item-extra').collapse('toggle');\n                }\n            }\n        );\n    });\n\n\n    /**\n     * FOLDER NEW - Add a new folder\n     */\n    $('#form-folder-add-perform').click(function() {\n        var form = $('#form-folder-add');\n        if (debugJavascript === true) {\n            console.log(form[0]);\n            console.log(form[0].checkValidity());\n        }\n        if (form[0].checkValidity() === false) {\n            form.addClass('was-validated');\n\n            // Send alert to user\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('form_presents_inconsistencies'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            return false;\n        }\n\n        // Error if folder text is only numeric\n        if (/^\\d+$/.test($('#form-folder-add-label').val())) {\n            $('#form-folder-add-label').addClass('is-invalid');\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_only_numbers_in_folder_name'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            return false;\n        }\n\n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Force user did a change to false\n        userDidAChange = false;\n        userUploadedFile = false;\n\n        // Sanitize text fields\n        let formLabel = fieldDomPurifier('#form-folder-add-label', false, false, false),\n            formIcon = fieldDomPurifier('#form-folder-add-icon', false, false, false),\n            formIconSelected = fieldDomPurifier('#form-folder-add-icon-selected', false, false, false);\n        if (formLabel === false || formIcon === false || formIconSelected === false) {\n            // Label is empty\n            toastr.remove();\n            toastr.warning(\n                'XSS attempt detected. Field has been emptied.',\n                'Error', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        var data = {\n            'title': formLabel,\n            'parentId': $('#form-folder-add-parent option:selected').val(),\n            'complexity': $('#form-folder-add-complexicity option:selected').val(),\n            //'access_rights_strategy': $('#form-folder-add-rights option:selected').val(),\n            'icon': formIcon,\n            'iconSelected': formIconSelected,\n            'id': selectedFolderId,\n        }\n        if (debugJavascript === true) console.log(data);\n\n        // Launch action\n        $.post(\n            'sources/folders.queries.php', {\n                type: $('#form-folder-add').data('action') + '_folder',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data//decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'folders.queries.php', $('#form-folder-add').data('action') + '_folder');\n                if (debugJavascript === true) {\n                    console.log(data);\n                }\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Refresh list of folders\n                    refreshVisibleFolders(true);\n                    if ($('#form-folder-add').data('action') === 'add') {\n                        // Refresh tree\n                        refreshTree(data.newId, true);\n                        // Refresh list of items inside the folder\n                        ListerItems(data.newId, '', 0);\n                    } else {\n                        // Refresh tree\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.jstreeForceRefresh = 1;\n                            }\n                        );\n                        refreshTree(selectedFolderId, true);\n                        // Refresh list of items inside the folder\n                        ListerItems(selectedFolderId, '', 0);\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.jstreeForceRefresh = 0;\n                            }\n                        );\n                    }\n                    // Back to list\n                    closeItemDetailsCard();\n                    // Warn user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n                // Enable the parent in select\n                if (selectedFolder.id !== undefined) {\n                    $(\"#form-folder-add-parent option[value='\" + selectedFolder.id.split('_')[1] + \"']\")\n                        .prop('disabled', false);\n                }\n            }\n        );\n    });\n\n\n    /**\n     * FOLDER DELETE - Delete an existing folder\n     */\n    $('#form-folder-delete-perform').click(function() {\n        // Do check\n        if ($('#form-folder-confirm-delete').is(':checked') === false) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('please_confirm'); ?>',\n                '',\n                {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        } else if ($('#form-folder-delete-selection option:selected').text() === '<?php echo $_SESSION['login']; ?>') {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_not_allowed_to'); ?>',\n                '',\n                {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Is a folder selected\n        if ($('#form-folder-delete-selection option:selected').val() === '') {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('please_select_a_folder'); ?>',\n                '',\n                {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        \n        // Ensure Root is not selected\n        } else if (parseInt($('#form-folder-delete-selection option:selected').val()) === 0) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('please_select_a_folder'); ?>',\n                '',\n                {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n        \n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n\n        var selectedFolders = [],\n            data = {\n                'selectedFolders': [$('#form-folder-delete-selection option:selected').val()]\n            }\n        if (debugJavascript === true) console.log(data)\n\n        // Launch action\n        $.post(\n            'sources/folders.queries.php', {\n                type: 'delete_folders',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'folders.queries.php', 'delete_folders');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Refresh list of folders\n                    refreshVisibleFolders(true);\n                    // Refresh tree\n                    refreshTree(data.parent_id, true);\n                    // Refresh list of items inside the folder\n                    ListerItems(data.parent_id, '', 0);\n                    // Back to list\n                    closeItemDetailsCard();\n                    // Warn user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n\n                $('#form-folder-confirm-delete').iCheck('uncheck');\n            }\n        );\n    });\n\n\n    /**\n     * FOLDER COPY - Copy an existing folder\n     */\n    $('#form-folder-copy-perform').click(function() {\n        // Do check\n        if ($(\"#form-folder-copy-source\").val() === \"\" || $(\"#form-folder-copy-destination\").val() === \"\") {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_must_enter_all_fields'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        } else if ($(\"#form-folder-copy-source\").val() === $(\"#form-folder-copy-destination\").val()) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_source_and_destination_are_equal'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Show cog\n        toastr.remove();\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        var data = {\n            'source_folder_id': $('#form-folder-copy-source option:selected').val(),\n            'target_folder_id': $('#form-folder-copy-destination option:selected').val(),\n            'folder_label': DOMPurify.sanitize($('#form-folder-copy-label').val(), {USE_PROFILES: {html: false}}),\n        }\n\n        // Launch action\n        $.post(\n            'sources/folders.queries.php', {\n                type: 'copy_folder',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'folders.queries.php', 'copy_folder');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Refresh list of folders\n                    refreshVisibleFolders(true);\n                    // Refresh tree\n                    refreshTree($('#form-folder-copy-destination option:selected').val(), true);\n                    // Refresh list of items inside the folder\n                    ListerItems($('#form-folder-copy-destination option:selected').val(), '', 0);\n                    // Back to list\n                    closeItemDetailsCard();\n                    // Warn user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n    $(document).on('change', '#form-folder-copy-source', function() {\n        $('#form-folder-copy-label')\n            .val($('#form-folder-copy-source option:selected').text()\n                .substring(0, $('#form-folder-copy-source option:selected').text().lastIndexOf('[')).trim() +\n                ' <?php echo strtolower(langHdl('copy')); ?>');\n    });\n\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function closeItemDetailsCard() {\n        if (debugJavascript === true) console.log('CLOSE - user did a change? ' + userDidAChange + \" - User previous view: \" + store.get('teampassUser').previousView);\n        if (userDidAChange === true) {\n            toastr\n                .warning(\n                    '<?php echo langHdl('changes_ongoing'); ?><br>' +\n                    '<button type=\"button\" class=\"btn clear\" id=\"discard-changes\"><?php echo langHdl('yes'); ?></button>' +\n                    '<button type=\"button\" class=\"btn clear ml-2\" id=\"keep-changes\"><?php echo langHdl('no'); ?></button>',\n                    '<?php echo langHdl('caution'); ?>', {\n                        closeButton: true\n                    }\n                );\n            $(document).on('click', '#discard-changes', function() {\n                userDidAChange = false;\n                //$('.form-item-control').attr('data-change-ongoing', \"\");\n                closeItemDetailsCard();\n            });\n        } else {\n            if (store.get('teampassUser').previousView === '.item-details-card' &&\n                $('.item-details-card').hasClass('hidden') === false\n            ) {\n                $('.item-details-card').removeClass('hidden');\n                $('#folders-tree-card, .columns-position, .form-item-action, .form-item, .form-folder-action, #card-item-expired')\n                    .addClass('hidden');\n\n                // Force previous view to folders list\n                store.update(\n                    'teampassUser',\n                    function(teampassUser) {\n                        teampassUser.previousView = '#folders-tree-card';\n                    }\n                );\n            } else {\n                if (store.get('teampassUser').previousView === '.item-details-card') {\n                    // Force previous view to folders list\n                    store.update(\n                        'teampassUser',\n                        function(teampassUser) {\n                            teampassUser.previousView = '#folders-tree-card';\n                        }\n                    );\n                    // Reopen Item details form\n                    Details(\n                        store.get('teampassItem').id,\n                        'show',\n                        true\n                    );\n\n                    return false;\n                }\n                if (store.get('teampassUser').previousView === '#folders-tree-card' ||\n                    $('.item-details-card').hasClass('hidden') === false\n                ) {\n                    $('#folders-tree-card, .columns-position').removeClass('hidden');\n                    $('.item-details-card, .form-item-action, .form-item, .form-folder-action, #card-item-expired')\n                        .addClass('hidden');\n                } else {\n                    // Hide all\n                    $('.form-item, .form-item-action, .form-folder-action, .item-details-card, #folders-tree-card, #card-item-expired')\n                        .addClass('hidden');\n\n                    // Show expected one\n                    $(store.get('teampassUser').previousView).removeClass('hidden');\n                }\n\n                // Do some form cleaning\n                $('.clear-me-val, .form-item-control').val('');\n                $('.item-details-card').find('.form-control').val('');\n                $('.clear-me-html, .card-item-field-value').html('');\n                $('.form-check-input').attr('checked', '');\n                //$('.card-item-extra').collapse();\n                $('.collapse').removeClass('show');\n                $('.to_be_deleted').remove();\n                $('#card-item-attachments, #card-item-history').html('');\n                $('#card-item-attachments-badge').html('<?php echo langHdl('none'); ?>');\n\n                // Move back fields\n                $('.fields-to-move')\n                    .detach()\n                    .appendTo('#card-item-fields');\n\n                // Ensure the form is correct\n                $('#list-group-item-main, #item-details-card-categories')\n                    .children('.list-group')\n                    .removeClass('hidden');\n\n                // SHow save button in card\n                //$('#form-item-buttons').removeClass('sticky-footer');\n\n                // Destroy editors\n                $('#form-item-description').summernote('destroy');\n                $('#form-item-suggestion-description').summernote('destroy');\n\n                // Show loading\n                $('.overlay').removeClass('hidden');\n\n                // Collapse accordion\n                //$('.collapseme').addClass('collapsed-card');\n\n                // Restore scroll position\n                $(window).scrollTop(userScrollPosition);\n\n                userDidAChange = false;                \n                //$('.form-item-control').attr('data-change-ongoing', \"\");\n\n                // Enable the parent in select\n                if (selectedFolder.id !== undefined) {\n                    $(\"#form-folder-add-parent option[value='\" + selectedFolder.id.split('_')[1] + \"']\")\n                        .prop('disabled', false);\n                }\n            }\n            if (debugJavascript === true) console.log('Edit for closed');\n        }\n\n\n\n        // Scroll back to position\n        scrollBackToPosition();\n    }\n\n\n    /**\n     * Click on button with class but-navigate-item\n     */\n    $(document)\n        .on('click', '.but-navigate-item', function() {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Load item info\n            Details(\n                //$(this).hasClass('but-prev-item') === true ? $('#list-item-row_' + $(this).attr('data-prev-item-key')) : $('#list-item-row_' + $(this).attr('data-next-item-key')),\n                $(this).hasClass('but-prev-item') === true ? $('#list-item-row_' + $(this).attr('data-prev-item-id')) : $('#list-item-row_' + $(this).attr('data-next-item-id')),\n                'show'\n            );\n\n            $('.but-navigate-item').addClass('hidden');\n        });\n\n\n    /**\n     * Click on item\n     */\n    $(document)\n        .on('click', '.list-item-clicktoshow', function() {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Load item info\n            Details($(this).closest('tr'), 'show');\n        })\n        .on('click', '.list-item-clicktoedit', function() {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            if (debugJavascript === true) console.log('EDIT ME');\n            // Set type of action\n            $('#form-item-button-save').data('action', 'update_item');\n            \n            // Load item info\n            Details($(this).closest('tr'), 'edit');\n        });\n\n    /**\n     *  Manage mini icons on mouse over\n     */\n    $(document)\n        .on('mouseenter', '.list-item-row', function() {\n            $(this).find(\".list-item-actions\").removeClass('hidden');\n        })\n        .on('mouseleave', '.list-item-row', function() {\n            $(this).find(\".list-item-actions\").addClass('hidden');\n        });\n\n    $(document)\n        .on('change', '.form-check-input-template', function() {\n            $('.form-check-input-template').not(this).prop('checked', false);\n            userDidAChange = true;\n            if (debugJavascript === true) console.log('User did a change on .form-check-input-template > ' + userDidAChange);\n        });\n\n    $('.form-check-input-template').on('ifChecked', function() {\n        $('.form-check-input-template').not(this).iCheck('uncheck');\n        userDidAChange = true;\n        if (debugJavascript === true) console.log('User did a change on .form-check-input-template > ' + userDidAChange);\n        //$('.form-check-input-template').attr('data-change-ongoing', true);;\n    });\n\n    /**\n     * Manage change of color\n     */\n    $(document)\n        .on('mouseenter', '.fa-clickable', function() {\n            $(this).addClass('text-info');\n        })\n        .on('mouseleave', '.fa-clickable', function() {\n            $(this).removeClass('text-info');\n        });\n\n    $('#form-item-label').change(function() {\n        $('#form-item-title').html($(this).val());\n    });\n\n    /**\n     * Make the item favourite by clicking on icon\n     */\n    $(document)\n        .on('click', '.item-favourite', function() {\n            if (quick_icon_query_status === true) {\n                quick_icon_query_status = false;\n                var elem = $(this);\n\n                //Send query\n                toastr.remove();\n                toastr.info(\n                    '<?php echo langHdl('success'); ?>',\n                    '', {\n                        timeOut: 1000\n                    }\n                );\n\n                var data = {\n                    item_id: $(this).data('item-id'),\n                    action: $(this).data('item-favourited'),\n                }\n\n                console.log(data)\n\n                $.post('sources/items.queries.php', {\n                        type: 'action_on_quick_icon',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(ret) {\n                        //change quick icon\n                        if (elem.data('item-favourited') === 0) {\n                            $(elem)\n                                .html('<span class=\"fa-stack fa-clickable item-favourite pointer infotip mr-2\" title=\"<?php echo langHdl('unfavorite'); ?>\" data-item-id=\"' + elem.item_id + '\" data-item-favourited=\"1\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-star fa-stack-1x fa-inverse text-warning\"></i></span>');\n                        } else {\n                            $(elem)\n                                .html('<span class=\"fa-stack fa-clickable item-favourite pointer infotip mr-2\" title=\"<?php echo langHdl('favorite'); ?>\" data-item-id=\"' + elem.item_id + '\" data-item-favourited=\"0\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-star fa-stack-1x fa-inverse\"></i></span>');\n                        }\n\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('success'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                        quick_icon_query_status = true;\n                    }\n                );\n            }\n        });\n\n    // Click to reaveal password\n    $('#item-button-password-show')\n        .mouseup(function() {\n            $('#form-item-password').attr('type', 'password');\n        })\n        .mousedown(function() {\n            $('#form-item-password').attr('type', 'text');\n        });\n    $('.btn-no-click')\n        .click(function(e) {\n            e.preventDefault();\n        });\n\n\n\n    // show password during longpress\n    var mouseStillDown = false;\n    $('.item-details-card').on('mousedown', '.unhide_masked_data', function(event) {\n            mouseStillDown = true;\n            showPwdContinuous();\n        })\n        .on('mouseup', '.unhide_masked_data', function(event) {\n            mouseStillDown = false;\n            showPwdContinuous();\n        })\n        .on('mouseleave', '.unhide_masked_data', function(event) {\n            mouseStillDown = false;\n            showPwdContinuous();\n        });\n    var showPwdContinuous = function() {\n        if (mouseStillDown === true) {\n            // Prepare data to show\n            // Is data crypted?\n            var data = unCryptData($('#hidden-item-pwd').val(), '<?php echo $_SESSION['key']; ?>');\n            if (data !== false && data !== undefined) {\n                $('#hidden-item-pwd').val(\n                    data.password\n                );\n            }\n\n            $('#card-item-pwd')\n                .html(\n                    '<span style=\"cursor:none;\">' +\n                    $('#hidden-item-pwd').val()\n                    .replace(/</g, '&lt;')\n                    .replace(/>/g, '&gt;') +\n                    '</span>'\n                );\n\n            setTimeout('showPwdContinuous(\"card-item-pwd\")', 50);\n            // log password is shown\n            if ($('#card-item-pwd').hasClass('pwd-shown') === false) {\n                itemLog(\n                    'at_password_shown',\n                    store.get('teampassItem').id,\n                    $('#card-item-label').text()\n                );\n                $('#card-item-pwd').addClass('pwd-shown');\n            }\n        } else {\n            $('#card-item-pwd')\n                .html('<?php echo $var['hidden_asterisk']; ?>')\n                .removeClass('pwd-shown');\n        }\n    };\n\n    // Fields - show masked field\n    var selectedElement;\n    $('.item-details-card').on('mousedown', '.replace-asterisk', function(event) {\n            mouseStillDown = true;\n            selectedElement = $(this);\n            showContinuousMasked();\n        })\n        .on('mouseup', '.replace-asterisk', function(event) {\n            mouseStillDown = false;\n        })\n        .on('mouseleave', '.replace-asterisk', function(event) {\n            mouseStillDown = false;\n        });\n    var showContinuousMasked = function() {\n        if (mouseStillDown) {\n            $(selectedElement)\n                .text($('#hidden-card-item-field-value-' + selectedElement.data('field-id')).val());\n\n            setTimeout('showContinuousMasked()', 50);\n        } else {\n            $(selectedElement).html('<?php echo $var['hidden_asterisk']; ?>');\n        }\n    };\n\n\n    /**\n     * Launch the items search\n     */\n    $('#find_items').bind('keypress', function(e) {\n        var code = e.keyCode || e.which;\n        if (code == 13) {\n            searchItems($(this).val());\n        }\n    });\n\n    $('#find_items_button').click(function() {\n        if ($('#find_items').val() !== '') {\n            searchItems($('#find_items').val());\n        }\n    });\n\n\n    // Password strength\n    var pwdOptions = {};\n    pwdOptions = {\n        common: {\n            zxcvbn: true,\n            debug: false,\n            minChar: 4,\n            onScore: function (options, word, totalScoreCalculated) {\n                if (word.length === 20 && totalScoreCalculated < options.ui.scores[1]) {\n                    // Score doesn't meet the score[1]. So we will return the min\n                    // numbers of points to get that score instead.\n                    return options.ui.score[1]\n                }\n                $(\"#form-item-password-complex\").val(totalScoreCalculated);\n                return totalScoreCalculated;\n            },\n            usernameField: \"#form-item-login\",\n        },\n        rules: {},\n        ui: {\n            colorClasses: [\"text-danger\", \"text-danger\", \"text-danger\", \"text-warning\", \"text-warning\", \"text-success\"],\n            showPopover: false,\n            showStatus: true,\n            showErrors: false,\n            showVerdictsInsideProgressBar: true,\n            container: \"#tab_1\",\n            viewports: {\n                progress: \"#form-item-password-strength\",\n                score: \"#form-item-password-strength\"\n            },\n            scores: [<?php echo TP_PW_STRENGTH_1;?>, <?php echo TP_PW_STRENGTH_2;?>, <?php echo TP_PW_STRENGTH_3;?>, <?php echo TP_PW_STRENGTH_4;?>, <?php echo TP_PW_STRENGTH_5;?>],\n        },\n        i18n : {\n            t: function (key) {\n                var phrases = {\n                    weak: '<?php echo langHdl('complex_level1'); ?>',\n                    normal: '<?php echo langHdl('complex_level2'); ?>',\n                    medium: '<?php echo langHdl('complex_level3'); ?>',\n                    strong: '<?php echo langHdl('complex_level4'); ?>',\n                    veryStrong: '<?php echo langHdl('complex_level5'); ?>'\n                };\n                var result = phrases[key];\n\n                return result === key ? '' : result;\n            }\n        }\n    };\n    $('#form-item-password').pwstrength(pwdOptions);\n    \n\n\n    /**\n     * PLUPLOAD\n     */\n    var uploader_attachments = new plupload.Uploader({\n        runtimes: 'html5,flash,silverlight,html4',\n        browse_button: 'form-item-attach-pickfiles',\n        container: 'form-item-upload-zone',\n        max_file_size: '<?php\n            if (strrpos($SETTINGS['upload_maxfilesize'], 'mb') === false) {\n                echo $SETTINGS['upload_maxfilesize'] . 'mb';\n            } else {\n                echo $SETTINGS['upload_maxfilesize'];\n            }\n            ?>',\n        chunk_size: '1mb',\n        dragdrop: true,\n        url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/upload.attachments.php',\n        flash_swf_url: '<?php echo $SETTINGS['cpassman_url']; ?>/includes/libraries/Plupload/Moxie.swf',\n        silverlight_xap_url: '<?php echo $SETTINGS['cpassman_url']; ?>/includes/libraries/Plupload/Moxie.xap',\n        filters: {\n            mime_types: [\n                <?php\n                if (\n                    isset($SETTINGS['upload_all_extensions_file']) === false\n                    || (isset($SETTINGS['upload_all_extensions_file']) === true\n                        && (int) $SETTINGS['upload_all_extensions_file'] === 0)\n                ) {\n                    ?> {\n                        title: 'Image files',\n                        extensions: '<?php echo $SETTINGS['upload_imagesext']; ?>'\n                    },\n                    {\n                        title: 'Package files',\n                        extensions: '<?php echo $SETTINGS['upload_pkgext']; ?>'\n                    },\n                    {\n                        title: 'Documents files',\n                        extensions: '<?php echo $SETTINGS['upload_docext']; ?>'\n                    },\n                    {\n                        title: 'Other files',\n                        extensions: '<?php echo $SETTINGS['upload_otherext']; ?>'\n                    }\n                <?php\n                }\n                ?>\n            ],\n            <?php\n            if (isset($SETTINGS['upload_zero_byte_file']) === true && (int) $SETTINGS['upload_zero_byte_file'] === 1) {\n                ?>\n                prevent_empty: false\n            <?php\n            }\n            ?>\n        },\n        <?php\n        if ((int) $SETTINGS['upload_imageresize_options'] === 1) {\n            ?>\n            resize: {\n                width: <?php echo $SETTINGS['upload_imageresize_width']; ?>,\n                height: <?php echo $SETTINGS['upload_imageresize_height']; ?>,\n                quality: <?php echo $SETTINGS['upload_imageresize_quality']; ?>\n            },\n        <?php\n        }\n        ?>\n        init: {\n            BeforeUpload: function(up, file) {\n                toastr.info(\n                    '<i class=\"fa-solid fa-cloud-arrow-up fa-bounce mr-2\"></i><?php echo langHdl('uploading'); ?>',\n                    '', {\n                        timeOut: 0\n                    }\n                );\n\n                // Get random number\n                if (store.get('teampassApplication').uploadedFileId === '') {\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.uploadedFileId = CreateRandomString(9, 'num_no_0');\n                        }\n                    );\n                }\n\n                up.setOption('multipart_params', {\n                    PHPSESSID: '<?php echo $_SESSION['user_id']; ?>',\n                    itemId: store.get('teampassItem').id,\n                    type_upload: 'item_attachments',\n                    isNewItem: store.get('teampassItem').isNewItem,\n                    isPersonal: store.get('teampassItem').folderIsPersonal,\n                    edit_item: false,\n                    user_token: store.get('teampassApplication').attachmentToken,\n                    randomId: store.get('teampassApplication').uploadedFileId,\n                    files_number: $('#form-item-hidden-pickFilesNumber').val(),\n                    file_size: file.size\n                });\n                console.log('DEBUG IMAGE - BeforeUpload')\n                console.log(up);\n            }\n        }\n    });\n\n    // Uploader options\n    uploader_attachments.bind('UploadProgress', function(up, file) {\n        //console.log('uploader_attachments.bind')\n        $('#upload-file_' + file.id).html('<i class=\"fas fa-file fa-sm mr-2\"></i>' + htmlEncode(file.name) + '<span id=\"fileStatus_'+file.id+'\">- ' + file.percent + '%</span>');\n        if (file.percent === 100) {\n            $('#fileStatus_'+file.id).html('<i class=\"fa-solid fa-circle-check text-success ml-2 fa-1x\"></i>');\n            userUploadedFile = true;\n            userDidAChange = true;\n            toastr.remove();\n        }\n    });\n    uploader_attachments.bind('Error', function(up, err) {\n        toastr.remove();\n        toastr.error(\n            err.message + (err.file ? ', File: ' + err.file.name : ''),\n            '', {\n                timeOut: 5000,\n                progressBar: true\n            }\n        );\n\n        up.refresh(); // Reposition Flash/Silverlight\n    });\n\n    $(\"#form-item-upload-pickfiles\").click(function(e) {\n        if ($('#form-item-upload-pickfilesList').text() !== '') {\n            // generate and save token\n            $.post(\n                \"sources/main.queries.php\", {\n                    type: \"save_token\",\n                    type_category: 'action_system',\n                    size: 25,\n                    capital: true,\n                    numeric: true,\n                    ambiguous: true,\n                    reason: \"item_attachments\",\n                    duration: 10,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.attachmentToken = data[0].token;\n                        }\n                    );\n                    console.log('start upload')\n                    uploader_attachments.start();\n                },\n                \"json\"\n            );\n            e.preventDefault();\n        } else {\n            toastr.remove();\n            toastr.warning(\n                '<?php echo langHdl('no_file_to_upload'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n        }\n    });\n    uploader_attachments.init();\n    uploader_attachments.bind('FilesAdded', function(up, files) {\n        if (debugJavascript === true) {\n            console.log('uploader_attachments.FilesAdded')\n        }\n        $('#form-item-upload-pickfilesList').removeClass('hidden');\n        var addedFiles = '';\n        $.each(files, function(i, file) {\n            $('#form-item-upload-pickfilesList').append(\n                '<div id=\"upload-file_' + file.id + '\">' +\n                '<span id=\"upload-file-remove_' + file.id +\n                '><a href=\"#\" onclick=\"$(this).closest(\\'div\\').remove();\"><i class=\" fa fa-trash mr-2 pointer\"></i></a></span> ' +\n                htmlEncode(file.name) + ' (' + plupload.formatSize(file.size) + ')' +\n                '</div>');\n            $(\"#form-item-hidden-pickFilesNumber\").val(\n                parseInt($(\"#form-item-hidden-pickFilesNumber\").val()) + 1\n            );\n            if (debugJavascript === true) {\n                console.info('Info du fichier :');\n                console.log(file);\n            }\n        });\n        up.refresh(); // Reposition Flash/Silverlight\n    });\n    //->\n\n\n\n    /**\n     * Save item changes\n     */\n    $('#form-item-button-save').click(function() {\n        var arrayQuery = [],\n            originalFolderId = $('#form-item-folder').val(),\n            itemsList = [],\n            userItemRight = '';\n\n        // What action is this?\n        if ($('#form-item-button-save').data('action') === '' ||\n            $('#form-item-button-save').data('action') === undefined\n        ) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_no_action_identified'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Don't save if no change\n        if (userDidAChange === false && userUploadedFile === false) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('no_change_performed'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Validate form\n        var form = $('#form-item');\n        if (form[0].checkValidity() === false) {\n            form.addClass('was-validated');\n            // Send alert to user\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('form_presents_inconsistencies'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            return false;\n        }\n\n        // Loop on all changed fields\n        $('.form-item-field-custom').each(function(i, obj) {\n            if ($(this).data('change-ongoing') === true) {\n                // Create an array with changed inputs\n                arrayQuery.push({\n                    'input': $(this).attr('id'),\n                    'field': $(this).data('field-name'),\n                    'value': $(this).val(),\n                });\n            }\n        });\n        if (debugJavascript === true) {\n            console.log('CHANGED FIELDS '+userUploadedFile + ' ' + userDidAChange);\n            console.log(arrayQuery);\n        }\n\n        // is user allowed to edit this item\n        if (typeof store.get('teampassApplication').itemsList !== 'undefined') {\n            itemsList = JSON.parse(store.get('teampassApplication').itemsList);\n        }\n        if (itemsList.length > 0) {\n            userItemRight = itemsList[store.get('teampassItem').id]?.rights;\n        }\n\n        \n\n        // Do checks\n        if (arrayQuery.length > 0 || userDidAChange === true) {\n            var reg = new RegExp(\"[.|,|;|:|!|=|+|-|*|/|#|\\\"|'|&]\");\n\n            // Sanitize text fields\n            let formLabel = fieldDomPurifier('#form-item-label', false, false, false),\n                formDescription = $('#form-item-description').summernote('code') !== \"<p><br></p>\" ? fieldDomPurifier('#form-item-description', true, false, false, $('#form-item-description').summernote('code')) : '',\n                formEmail = fieldDomPurifier('#form-item-email'),\n                formTags = fieldDomPurifier('#form-item-tags'),\n                formUrl = fieldDomPurifier('#form-item-url'),\n                formIcon = fieldDomPurifier('#form-item-icon');\n            if (formLabel === false || formDescription === false || formEmail === false || formTags === false || formUrl === false || formIcon === false) {\n                // Label is empty\n                toastr.remove();\n                toastr.warning(\n                    'XSS attempt detected. Field has been emptied.',\n                    'Error', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n            \n            // Do some easy checks\n            if (formLabel === '') {\n                // Label is empty\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_label'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            } else if (formTags !== '' &&\n                reg.test(formTags)\n            ) {\n                // Tags not wel formated\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_tags'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            } else if ($('#form-item-folder option:selected').val() === '' ||\n                typeof $('#form-item-folder option:selected').val() === 'undefined'\n            ) {\n                // No folder selected\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_no_selected_folder'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            } else if ($('#form-item-folder option:selected').attr('disabled') === 'disabled' && userItemRight && userItemRight <= 40) {\n                // Folder is not allowed\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_folder_not_allowed'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            } else {\n                // Continue preparation of saving query\n\n                //Manage restriction\n                var restriction = new Array(),\n                    restrictionRole = new Array(),\n                    userInRestrictionList = false;\n                $('#form-item-restrictedto option:selected').each(function() {\n                    if ($(this).val() !== '') {\n                        if ($(this).hasClass('restriction_is_role') === true) {\n                            restrictionRole.push($(this).val().substring(5));\n                        } else {\n                            restriction.push($(this).val());\n                            // Is the user part of the restriction option\n                            if ($(this).val() === '<?php echo $_SESSION['user_id']; ?>') {\n                                userInRestrictionList = true;\n                            }\n                        }\n                    }\n                });\n                // IF any restriction, then ensure the author is in\n                if (userInRestrictionList === false && restriction.length > 0) {\n                    restriction.push('<?php echo $_SESSION['user_id']; ?>;');\n                }\n\n                // Manage diffusion list\n                var diffusion = new Array();\n                var diffusionNames = new Array();\n                $('#form-item-anounce option:selected').each(function() {\n                    diffusion.push($(this).val());\n                    diffusionNames.push($(this).text());\n                });\n\n                // Get item field values\n                // Ensure that mandatory ones are filled in too\n                // and they are compliant to regexes\n                var fields = [];\n                var errorExit = false;\n                var reason = '';\n                $('.form-item-field-custom').each(function(key, data) {\n                    fields.push({\n                        'id': $(this).data('field-name'),\n                        'value': $(this).val(),\n                    });\n\n                    // Mandatory?\n                    if (parseInt($(this).data('field-mandatory')) === 1 &&\n                        $(this).val() === '' &&\n                        $('#form-item-field-' + $(this).data('field-name')).parent().hasClass('hidden') === false\n                    ) {\n                        //if (debugJavascript === true) console.log($(this))\n                        errorExit = true;\n                        return false;\n                    }\n                    if ($(this).val().length > 0 && $(this).data('field-regex').length > 0 &&\n                        !$(this).val().match($(this).data('field-regex'))\n                    ) {\n                        //if (debugJavascript === true) console.log($(this))\n                        errorExit = true;\n                        reason = 'regex';\n                        return false;\n                    }\n                });\n                if (errorExit === true) {\n                    toastr.remove();\n                    if (reason === 'regex') {\n                        toastr.error(\n                            '<?php echo langHdl('error_field_regex'); ?>',\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        toastr.error(\n                            '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    }\n                    return false;\n                }\n                    \n                //prepare data\n                var data = {\n                    'anyone_can_modify': $('#form-item-anyoneCanModify').is(':checked') ? 1 : 0,\n                    'complexity_level': parseInt($('#form-item-password-complex').val()),\n                    'description': formDescription,\n                    'diffusion_list': diffusion,\n                    'diffusion_list_names': diffusionNames,\n                    'folder': parseInt($('#form-item-folder').val()),\n                    'email': formEmail,\n                    'fields': fields,\n                    'folder_is_personal': store.get('teampassItem').IsPersonalFolder === 1 ? 1 : 0,\n                    'id': store.get('teampassItem').id,\n                    'label': formLabel,\n                    'login': DOMPurify.sanitize($('#form-item-login').val()),\n                    'pw': $('#form-item-password').val(),\n                    'restricted_to': restriction,\n                    'restricted_to_roles': restrictionRole,\n                    'tags': formTags,\n                    'template_id': parseInt($('input.form-check-input-template:checkbox:checked').data('category-id')),\n                    'to_be_deleted_after_date': ($('#form-item-deleteAfterDate').length !== 0 &&\n                        $('#form-item-deleteAfterDate').val() !== '') ? $('#form-item-deleteAfterDate').val() : '',\n                    'to_be_deleted_after_x_views': ($('#form-item-deleteAfterShown').length !== 0 &&\n                            $('#form-item-deleteAfterShown').val() !== '' && $('#form-item-deleteAfterShown').val() >= 1) ?\n                        parseInt($('#form-item-deleteAfterShown').val()) : '',\n                    'url': formUrl,\n                    'user_id': parseInt('<?php echo $_SESSION['user_id']; ?>'),\n                    'uploaded_file_id': store.get('teampassApplication').uploadedFileId === undefined ? '' : store.get('teampassApplication').uploadedFileId,\n                    'fa_icon': formIcon,\n                };\n                if (debugJavascript === true) {\n                    console.log('SAVING DATA');\n                    console.log(data);\n                }\n\n                // Inform user\n                toastr.remove();\n                toastr.info(\n                    '<?php echo langHdl('opening_folder'); ?><i class=\"fas fa-circle-notch fa-spin ml-2\"></i>'\n                );\n\n                // CLear tempo var\n                store.update(\n                    'teampassApplication',\n                    function(teampassApplication) {\n                        teampassApplication.uploadedFileId = '';\n                    }\n                );\n\n                //Send query\n                $.post(\n                    \"sources/items.queries.php\", {\n                        type: $('#form-item-button-save').data('action'),\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data) {\n                        //decrypt data\n                        try {\n                            data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                        } catch (e) {\n                            // error\n                            $(\"#div_loading\").addClass(\"hidden\");\n                            //requestRunning = false;\n                            $(\"#div_dialog_message_text\").html(\"An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />\" + data);\n                            $(\"#div_dialog_message\").dialog(\"open\");\n\n                            toastr.remove();\n                            toastr.error(\n                                'An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />' + data,\n                                '', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                            return false;\n                        }\n                        if (debugJavascript === true) console.log('RETURNED DATA');\n                        if (debugJavascript === true) console.log(data);\n                        if (data.error === true) {\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                            return false;\n                        } else {\n                            // Refresh tree\n                            if ($('#form-item-button-save').data('action') === 'update_item') {\n                                if ($('#form-item-folder').val() !== '' &&\n                                    originalFolderId !== $('#form-item-folder').val()\n                                ) {\n                                    refreshTree($('#form-item-folder').val(), false);\n                                }\n                                // Send query to confirm attachments\n                                var data = {\n                                    'item_id': store.get('teampassItem').id,\n                                }\n                                $.post(\n                                    \"sources/items.queries.php\", {\n                                        type: 'confirm_attachments',\n                                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                                        key: '<?php echo $_SESSION['key']; ?>'\n                                    }\n                                );\n                            } else {\n                                refreshTree($('#form-item-folder').val(), true);\n                            }\n\n                            // Refresh list of items inside the folder\n                            ListerItems($('#form-item-folder').val(), '', 0);\n\n                            // Inform user\n                            toastr.info(\n                                '<?php echo langHdl('success'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n\n                            // Close\n                            userDidAChange = false;\n                            userUploadedFile = false;\n\n                            closeItemDetailsCard();\n                            /*\n                            // Hide all\n                            $('.form-item, .form-item-action, .form-folder-action, .item-details-card, #folders-tree-card, #card-item-expired').addClass('hidden');\n\n                            // Show expected one\n                            $(store.get('teampassUser').previousView).removeClass('hidden');\n                            */\n                        }\n                    }\n                );\n            }\n        } else if (userUploadedFile === true) {\n            // Send query to confirm attachments\n            var data = {\n                'item_id': store.get('teampassItem').id,\n            }\n\n            $.post(\n                \"sources/items.queries.php\", {\n                    type: 'confirm_attachments',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                }\n            );\n\n            store.update(\n                'teampassItem',\n                function(teampassItem) {\n                    teampassItem.isNewItem = 0\n                }\n            );\n\n            // Inform user\n            toastr.info(\n                '<?php echo langHdl('done'); ?>',\n                '', {\n                    timeOut: 1000\n                }\n            );\n\n            // Close\n            userUploadedFile = false;\n            closeItemDetailsCard();\n        } else {\n            if (debugJavascript === true) console.info('NOTHING TO SAVE');\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('nothing_to_save'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n        }\n    });\n    //->\n\n\n    //autocomplete for TAGS\n    $(\"#form-item-tags\")\n        //.focus()\n        .bind(\"keydown\", function(event) {\n            if (event.keyCode === $.ui.keyCode.TAB &&\n                $(this).data(\"autocomplete\").menu.active) {\n                event.preventDefault();\n            }\n        })\n        .autocomplete({\n            source: function(request, response) {\n                $.getJSON(\"sources/items.queries.php?type=autocomplete_tags&t=1\", {\n                    term: extractLast(request.term)\n                }, response);\n            },\n            focus: function() {\n                // prevent value inserted on focus\n                return false;\n            },\n            search: function() {\n                var term = extractLast(this.value);\n            },\n            select: function(event, ui) {\n                var terms = split(this.value);\n                // remove the current input\n                terms.pop();\n                // add the selected item\n                terms.push(ui.item.value);\n                // add placeholder to get the comma-and-space at the end\n                terms.push(\"\");\n                this.value = terms.join(\" \");\n\n                return false;\n            }\n        });\n\n    // Warn in case of limited search\n    $(document).on('click', '#limited-search', function() {\n        if ($(this).is(\":checked\") === true) {\n            $('#find_items').css({\n                \"background-color\": \"#f56954\"\n            });\n        } else {\n            $('#find_items').css({\n                \"background-color\": \"#FFF\"\n            })\n        }\n    });\n\n\n    function showItemEditForm(selectedFolderId) {\n        if (debugJavascript === true) console.info('SHOW EDIT ITEM ' + selectedFolderId);\n        \n        //$.when(\n        //    getPrivilegesOnItem(selectedFolderId, 0)\n        //).then(function() {\n        // Now read\n        if (store.get('teampassItem').error === true) {\n            toastr.remove();\n            toastr.error(\n                store.get('teampassItem').message,\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n        } else {\n            $('#card-item-visibility').html(store.get('teampassItem').itemVisibility);\n            $('#card-item-minimum-complexity').html(store.get('teampassItem').itemMinimumComplexity);\n\n            // Show edition form\n            $('.form-item, #form-item-attachments-zone')\n                .removeClass('hidden');\n            $('.item-details-card, .form-item-copy, #form-item-password-options, .form-item-action, #item-details-card-categories, #folders-tree-card, .columns-position')\n                .addClass('hidden');\n\n            // Initial 'user did a change'\n            userDidAChange = false;\n\n            // Force update of simplepassmeter\n            $('#form-item-password').pwstrength(\"forceUpdate\");\n            $('#form-item-label').focus();\n\n            // Set type of action\n            $('#form-item-button-save').data('action', 'update_item');\n\n            // Does this folder contain Custom Fields\n            if (store.get('teampassItem').hasCustomCategories.length > 0) {\n                $('#form-item-field').removeClass('hidden');\n                $.each(store.get('teampassItem').hasCustomCategories, function(i, category) {\n                    $('#form-item-category-' + category).removeClass('hidden');\n                })\n            } else {\n                $('#form-item-field, .form-item-category').addClass('hidden');\n            }            \n\n            // is user allowed to edit this item - overpass readonly folder\n            if (typeof store.get('teampassApplication').itemsList !== 'undefined') {\n                var itemsList = JSON.parse(store.get('teampassApplication').itemsList);\n                userItemRight = itemsList[store.get('teampassItem').id]?.rights;\n                if (userItemRight && userItemRight > 40 && $('#form-item-folder option:selected').attr('disabled') === 'disabled') {\n                    $('#form-item-folder option:selected').removeAttr('disabled');\n                }\n            }\n\n            toastr.remove();\n            // ---\n        }\n        //});\n    }\n\n\n    /**\n     * Start items search\n     */\n    function searchItems(criteria) {\n        if (criteria !== '') {\n            // stop items loading (if on-going)\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStop = 1;\n                }\n            );\n\n            // wait\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('searching'); ?>'\n            );\n\n            // clean\n            $('#id_label, #id_desc, #id_pw, #id_login, #id_email, #id_url, #id_files, #id_restricted_to ,#id_tags, #id_kbs, .fields_div, .fields, #item_extra_info').html('');\n            $('#button_quick_login_copy, #button_quick_pw_copy').addClass('hidden');\n            $('#teampass_items_list').html('');\n\n            // Continu the list of results\n            finishingItemsFind(\n                'search_for_items',\n                $('#limited-search').is(\":checked\") === true ? store.get('teampassApplication').selectedFolder : false,\n                criteria,\n                0\n            );\n        }\n    }\n\n    /**\n     * \n     */\n    function finishingItemsFind(type, limited, criteria, start) {\n        // send query\n        $.get(\n            'sources/find.queries.php', {\n                type: type,\n                limited: limited,\n                search: criteria,\n                start: start,\n                length: 10,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                var pwd_error = '',\n                    icon_login,\n                    incon_link,\n                    icon_pwd,\n                    icon_favorite;\n\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'find.queries.php', type);\n                if (debugJavascript === true) console.log(data);\n\n                // Ensure correct div is not hidden\n                $('#info_teampass_items_list').addClass('hidden');\n                $('#table_teampass_items_list').removeClass('hidden');\n\n                // Show Items list\n                sList(data.html_json);\n\n                if (data.start !== -1 && (data.start <= data.total)) {\n                    // Continu the list of results\n                    finishingItemsFind(\n                        'search_for_items',\n                        $('#limited-search').is(\":checked\") === true ?\n                        store.get('teampassApplication').selectedFolder : false,\n                        criteria,\n                        data.start\n                    )\n                } else {\n                    toastr.remove();\n                    toastr.info(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    // Do some post treatments\n                    $('#form-folder-path').html('');\n                    $('#find_items').val('');\n\n                    // Do drag'n'drop for the folders\n                    prepareFolderDragNDrop();\n\n                    adjustElemsSize();\n                }\n            }\n        );\n    }\n\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function refreshVisibleFolders(forceRefreshCache = false) {\n        var data = {\n            'force_refresh_cache': forceRefreshCache,\n        }\n        if (debugJavascript === true) {\n            console.log('Refresh visible folders');\n            console.log(data);\n        }\n\n        $.post(\n            'sources/items.queries.php', {\n                type: 'refresh_visible_folders',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'refresh_visible_folders');\n                if (debugJavascript === true) {\n                    console.log('TREE');\n                    console.log(data);\n                }\n                //check if format error\n                if (typeof data !== 'undefined' && data.error !== true) {\n                    // Build html lists\n                    var html_visible = '',\n                        html_full_visible = '',\n                        html_active_visible = '',\n                        indentation = '',\n                        disabled = '';\n\n                    if (typeof data.html_json === 'undefined' || typeof data.html_json.folders === 'undefined') {\n                        $('#jstree').html('<div class=\"alert alert-warning mt-3 mr-1 ml-1\"><i class=\"fas fa-exclamation-triangle mr-2\"></i>' +\n                            '<?php echo langHdl('no_data_to_display'); ?>' +\n                            '</div>');\n                        //return false;\n                    } else {\n                        refreshFoldersInfo(data.html_json.folders, 'clear');\n                    }\n\n                    // Shall we show the root folder\n                    if (data.html_json.can_create_root_folder === 1) {\n                        html_visible = '<option value=\"0\"><?php echo langHdl('root'); ?></option>';\n                        html_full_visible = '<option value=\"0\"><?php echo langHdl('root'); ?></option>';\n                        html_active_visible = '<option value=\"0\"><?php echo langHdl('root'); ?></option>';\n                    } else {\n                        html_visible = '<option value=\"0\" disabled=\"disabled\"><?php echo langHdl('root'); ?></option>';\n                    }\n\n                    //\n                    $.each(data.html_json.folders, function(i, value) {\n                        // Prepare options lists\n                        html_visible += '<option value=\"' + value.id + '\"' +\n                            ((value.disabled === 1) ? ' disabled=\"disabled\"' : '') +\n                            ' data-parent-id=\"' + value.parent_id + '\">' +\n                            '&nbsp;'.repeat(value.level) +\n                            value.title + (value.path !== '' ? ' [' + value.path + ']' : '') + '</option>';\n                    });\n\n                    // Append new list\n                    $('#form-item-folder, #form-item-copy-destination, #form-folder-add-parent,' +\n                            '#form-folder-delete-selection, #form-folder-copy-source, #form-folder-copy-destination')\n                        .find('option')\n                        .remove()\n                        .end()\n                        .append(html_visible);\n                    $(\".no-root option[value='0']\").remove();\n\n                    if (debugJavascript === true) {\n                        console.info('HTML VISIBLE:')\n                        console.log(html_visible);\n                    }\n\n                    // Store in teampassUser\n                    store.update(\n                        'teampassUser',\n                        function(teampassUser) {\n                            teampassUser.folders = html_visible;\n                        }\n                    );\n\n\n                    // remove ROOT option if exists\n                    $('#form-item-copy-destination option[value=\"0\"]').remove();\n                } else {\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n            }\n        );\n    }\n\n\n    /**\n     * Get more info about folders (Categories)\n     *\n     * @return void\n     */\n    function refreshFoldersInfo(folders, action) {\n        var action = action || '',\n            sending = '';\n\n        if (null === folders) return false;\n\n        if (action === 'clear') {\n            sending = JSON.stringify(folders.map(a => parseInt(a.id)));\n        } else if (action === 'update') {\n            sending = JSON.stringify([folders]);\n        }\n\n        if (debugJavascript === true) {\n            console.info('INPUTS for refresh_folders_other_info');\n            console.log(sending);\n        }\n        \n        $.post(\n            'sources/items.queries.php', {\n                type: 'refresh_folders_other_info',\n                data: sending,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'refresh_folders_other_info');\n                if (debugJavascript === true) {\n                    console.info('RESULTS for refresh_folders_other_info');\n                    console.log(data);\n                }\n\n                //check if format error\n                if (typeof data !== 'undefined' && data.error !== true) {\n                    // Store in session\n                    if (action === 'clear') {\n                        // Handle the data\n                        $.each(folders, function(index, item) {\n                            if (typeof data.result !== 'undefined' && typeof data.result[item.id] !== 'undefined') {\n                                folders[index]['categories'] = data.result[item.id].categories;\n                                folders[index]['complexity'] = data.result[item.id].complexity;\n                                folders[index]['visibilityRoles'] = data.result[item.id].visibilityRoles;\n                            }\n                        });\n                        // Stare the data\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.foldersList = folders;\n                            }\n                        );\n                    } else if (action === 'update') {\n                        // Store the data\n                        var currentFoldersList = store.get('teampassApplication').foldersList;\n                        $.each(currentFoldersList, function(index, item) {\n                            if (item.id === parseInt(folders) && typeof data.result[folders] !== 'undefined') {\n                                currentFoldersList[index].categories = data.result[folders].categories;\n                                currentFoldersList[index].complexity = data.result[folders].complexity;\n                                currentFoldersList[index].visibilityRoles = data.result[folders].visibilityRoles;\n\n                                store.update(\n                                    'teampassApplication',\n                                    function(teampassApplication) {\n                                        foldersList = currentFoldersList;\n                                    }\n                                );\n                                return true;\n                            }\n                        });\n\n                    }\n                } else {\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n                toastr.remove();\n            }\n        );\n    }\n\n\n    /*\n     * builds the folders tree\n     */\n    function refreshTree(node_to_select, do_refresh, refresh_visible_folders) {\n        do_refresh = do_refresh || ''\n        node_to_select = node_to_select || '';\n        refresh_visible_folders = refresh_visible_folders || true;\n\n        if (refresh_visible_folders !== true) {\n            $('#jstree').jstree('deselect_all');\n            $('#jstree').jstree('select_node', '#li_' + groupe_id);\n            return false;\n        }\n\n        if (do_refresh === true || store.get('teampassApplication').jstreeForceRefresh === 1) {\n            $('#jstree').jstree(true).refresh();\n        }\n\n        if (node_to_select !== '') {\n            $('#jstree').jstree('deselect_all');\n\n            $('#jstree')\n                .one('refresh.jstree', function(e, data) {\n                    data.instance.select_node('#li_' + node_to_select);\n                });\n        }\n\n        $(this).delay(500).queue(function() {\n            refreshVisibleFolders(true);\n            $(this).dequeue();\n        });\n    }\n\n    /**\n     * \n     */\n    function ListerItems(groupe_id, restricted, start, stop_listing_current_folder) {\n        var me = $(this);\n        stop_listing_current_folder = stop_listing_current_folder || '0';\n        if (debugJavascript === true) console.log('LIST OF ITEMS FOR FOLDER ' + groupe_id)\n        // Exit if no folder is selected\n        if (groupe_id === undefined) return false;\n\n        // case where we should stop listing the items\n        if (store.get('teampassApplication') !== undefined && store.get('teampassApplication').itemsListStop === 1) {\n            //requestRunning = false;\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStop = 0;\n                }\n            );\n        }\n\n        //Evaluate number of items to display - depends on screen height\n        //adapt to the screen height\n        store.update(\n            'teampassApplication',\n            function(teampassApplication) {\n                teampassApplication.itemsShownByQuery = Math.max(Math.round((screenHeight - 450) / 23), 2);\n            }\n        );\n\n        if (stop_listing_current_folder === 1) {\n            me.data('requestRunning', false);\n            // Store listing criteria\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListFolderId = parseInt(groupe_id),\n                        teampassApplication.itemsListRestricted = restricted,\n                        teampassApplication.itemsListStart = start,\n                        teampassApplication.itemsListStop = 0\n                }\n            );\n        } else {\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStop = 0\n                }\n            );\n        }\n\n\n        // prevent launch of similar query in case of doubleclick\n        if (requestRunning === true) {\n            return false;\n        }\n        requestRunning = true;\n\n        // Hide any info\n        $('#info_teampass_items_list').addClass('hidden');\n\n        if (groupe_id !== undefined || groupe_id !== '') {\n            //refreshTree(groupe_id);\n            if (query_in_progress != 0 && query_in_progress != groupe_id && request !== undefined) {\n                request.abort(); //kill previous query if needed\n            }\n            query_in_progress = groupe_id;\n            if (start == 0) {\n                //clean form\n                $('#teampass_items_list, #items_folder_path').html('');\n            }\n\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.selectedFolder = parseInt(groupe_id),\n                    teampassApplication.itemsList = ''\n                }\n            );\n\n            if ($('.tr_fields') !== undefined) {\n                $('.tr_fields, .newItemCat, .editItemCat').addClass('hidden');\n            }\n\n            // Inform user\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('opening_folder'); ?><i class=\"fas fa-circle-notch fa-spin ml-2\"></i>'\n            );\n\n            // clear storage \n            store.update(\n                'teampassUser',\n                function(teampassUser) {\n                    teampassUser.itemsList = '';\n                }\n            );\n\n            // Prepare data to be sent\n            var dataArray = {\n                id: store.get('teampassApplication').selectedFolder,\n                restricted: restricted === \"\" ? \"\" : restricted,\n                start: start !== undefined ? start : 0,\n                uniqueLoadData: store.get('teampassApplication').queryUniqueLoad !== undefined ? store.get('teampassApplication').queryUniqueLoad : \"\",\n                nb_items_to_display_once: store.get('teampassApplication').itemsShownByQuery,\n            };\n\n            if (debugJavascript === true) {\n                console.log('Do list of items in folder with next parameters:');\n                console.log(JSON.stringify(dataArray));\n            }\n            \n            //ajax query\n            var request = $.post('sources/items.queries.php', {\n                    type: 'do_items_list_in_folder',\n                    data: prepareExchangedData(JSON.stringify(dataArray), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>',\n                },\n                function(retData) {\n                    //get data\n                    data = decodeQueryReturn(retData, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'do_items_list_in_folder');\n\n                    if (debugJavascript === true) {\n                        console.log('LIST ITEMS');\n                        console.log(data);\n                    }\n\n                    // reset doubleclick prevention\n                    requestRunning = false;\n\n                    // manage not allowed\n                    if (data.error === true) {\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                        return false;\n                    }\n\n                    // Hide New button if restricted folder\n                    if (data.access_level === 10) {\n                        $('#btn-new-item').addClass('hidden');\n                    } else {\n                        $('#btn-new-item').removeClass('hidden');\n                    }\n\n                    // to be done only in 1st list load\n                    if (data.list_to_be_continued === 'end') {\n                        var initialQueryData = $.parseJSON(data.uniqueLoadData);\n\n                        // Update hidden variables\n                        store.update(\n                            'teampassItem',\n                            function(teampassItem) {\n                                teampassItem.IsPersonalFolder = parseInt(data.IsPersonalFolder),\n                                    teampassItem.hasAccessLevel = parseInt(data.access_level),\n                                    teampassItem.folderComplexity = parseInt(data.folder_complexity),\n                                    teampassItem.hasCustomCategories = data.categoriesStructure\n                            }\n                        );\n                        \n\n                        // display path of folders\n                        if ((initialQueryData.path.length > 0)) {\n                            $('#form-folder-path')\n                                .html('')\n                                .append(rebuildPath(initialQueryData.path));\n                        } else {\n                            $('#form-folder-path').html('');\n                        }\n\n                        /*\n                        // PSK is requested but not set\n                        if (data.folder_requests_psk === 1\n                            && (store.get('teampassUser').pskSetForSession === ''\n                            || store.get('teampassUser').pskSetForSession === undefined)\n                        ) {\n                            showPersonalSKDialog();\n                        }\n                        */\n\n                        // show correct fodler in Tree\n                        if ($('#jstree').jstree('get_selected', true)[0] !== undefined &&\n                            'li_' + groupe_id !== $('#jstree').jstree('get_selected', true)[0].id\n                        ) {\n                            $('#jstree').jstree('deselect_all');\n                            $('#jstree').jstree('select_node', '#li_' + groupe_id);\n                        }\n\n                        // Delete existing clipboard\n                        if (clipboardForPassword) {\n                            clipboardForPassword.destroy();\n                        }\n                        if (clipboardForLogin) {\n                            clipboardForLogin.destroy();\n                        }\n\n                        // Prepare clipboard items\n                        clipboardForLogin = new ClipboardJS('.fa-clickable-login');\n                        clipboardForLogin.on('success', function(e) {\n                            toastr.info(\n                                '<?php echo langHdl('copy_to_clipboard'); ?>',\n                                '', {\n                                    timeOut: 2000,\n                                    positionClass: 'toast-top-right',\n                                    progressBar: true\n                                }\n                            );\n                            e.clearSelection();\n                        });\n\n                        // Prepare clipboard for PAssword\n                        // This will request a query to server to get the pwd\n                        clipboardForPassword = new ClipboardJS('.fa-clickable-password', {\n                            text: function(trigger) {\n                                // Send query and get password\n                                var result = '',\n                                    error = false;\n\n                                // Warn user that it starts\n                                toastr.remove();\n                                toastr.info(\n                                    '<i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>'\n                                );\n\n                                $.ajax({\n                                    type: \"POST\",\n                                    async: false,\n                                    url: 'sources/items.queries.php',\n                                    data: 'type=show_item_password&item_key=' + trigger.getAttribute('data-item-key') +\n                                        '&key=<?php echo $_SESSION['key']; ?>',\n                                    dataType: \"\",\n                                    success: function(data) {\n                                        //decrypt data\n                                        try {\n                                            data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                                        } catch (e) {\n                                            // error\n                                            toastr.remove();\n                                            toastr.warning(\n                                                '<?php echo langHdl('no_item_to_display'); ?>'\n                                            );\n                                            return false;\n                                        }\n                                        if (data.error === true) {\n                                            error = true;\n                                        } else {\n                                            if (data.password_error !== '') {\n                                                error = true;\n                                            } else {\n                                                result = atob(data.password).utf8Decode();\n                                            }\n                                        }\n\n                                        // Remove cog\n                                        toastr.remove();\n                                    }\n                                });\n                                return result;\n                            }\n                        });\n                        clipboardForPassword.on('success', function(e) {\n                            itemLog(\n                                'at_password_copied',\n                                e.trigger.dataset.itemId,\n                                e.trigger.dataset.itemLabel\n                            );\n                            \n                            // Warn user about clipboard clear\n                            if (store.get('teampassSettings').clipboard_life_duration === undefined || parseInt(store.get('teampassSettings').clipboard_life_duration) === 0) {\n                                toastr.remove();\n                                toastr.info(\n                                    '<?php echo langHdl('copy_to_clipboard'); ?>',\n                                    '', {\n                                        timeOut: 2000,\n                                        positionClass: 'toast-top-right',\n                                        progressBar: true\n                                    }\n                                );\n                            } else {\n                                toastr.remove();\n                                toastr.warning(\n                                    '<?php echo langHdl('clipboard_will_be_cleared'); ?>',\n                                    '', {\n                                        timeOut: store.get('teampassSettings').clipboard_life_duration * 1000,\n                                        progressBar: true\n                                    }\n                                );\n\n                                // Set clipboard eraser\n                                clearClipboardTimeout(\n                                    store.get('teampassSettings').clipboard_life_duration\n                                );\n                            }\n\n                            e.clearSelection();\n                        });\n                    } else if (data.error === 'not_authorized') {\n                        $('#items_folder_path').html('<i class=\"fas fa-folder-open-o\"></i>&nbsp;' + rebuildPath(data.arborescence));\n                    } else {\n                        // Store query results\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.queryUniqueLoad = data.uniqueLoadData;\n                            }\n                        );\n                        if ($('#items_loading_progress').length == 0) {\n                            $('#items_list_loader').after('<span id=\"items_loading_progress\">' + Math.round(data.next_start * 100 / data.counter_full, 0) + '%</span>');\n                        } else {\n                            $('#items_loading_progress').html(Math.round(data.next_start * 100 / data.counter_full, 0) + '%');\n                        }\n                    }\n                    //-----\n                    if (data.array_items !== undefined &&\n                        data.array_items.length === 0 &&\n                        $('#teampass_items_list').html() === ''\n                    ) {\n                        // Show warning to user\n                        $('#info_teampass_items_list')\n                            .html('<div class=\"alert alert-info text-center col col-10\" role=\"alert\">' +\n                                '<i class=\"fas fa-info-circle mr-2\"></i><?php echo langHdl('no_item_to_display'); ?></b>' +\n                                '</div>')\n                            .removeClass('hidden');\n                    }\n\n                    if (data.error === 'is_pf_but_no_saltkey') {\n                        //warn user about his saltkey\n                        toastr.remove();\n                        toastr.warning(\n                            '<?php echo langHdl('home_personal_saltkey_label'); ?>',\n                            '', {\n                                timeOut: 10000\n                            }\n                        );\n                        return false;\n                    } else if (data.error === 'not_authorized' || data.access_level === '') {\n                        // Show warning to user\n                        $('#info_teampass_items_list')\n                            .html('<div class=\"alert alert-info text-center col col-lg-10\" role=\"alert\">' +\n                                '<i class=\"fas fa-warning mr-2\"></i><?php echo langHdl('not_allowed_to_see_pw'); ?></b>' +\n                                '</div>')\n                            .removeClass('hidden');\n\n                    } else if ((store.get('teampassApplication').userIsReadOnly === 1) //&& data.folder_requests_psk == 0\n                        ||\n                        data.access_level === 10\n                    ) {\n                        //readonly user\n                        $('#item_details_no_personal_saltkey, #item_details_nok').addClass('hidden');\n                        $('#item_details_ok, #items_list').removeClass('hidden');\n                        //$('#more_items').remove();\n\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.bypassComplexityOnCreation = parseInt(data.bloquer_creation_complexite);\n                                teampassApplication.bypassComplexityOnEdition = parseInt(data.bloquer_modification_complexite);\n                                //teampassApplication.personalSaltkeyRequired = parseInt(data.saltkey_is_required);\n                            }\n                        );\n\n                        // show items\n                        sList(data.html_json);\n\n                        if (data.list_to_be_continued === 'yes') {\n                            //set next start for query\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.itemsListStart = parseInt(data.next_start);\n                                }\n                            );\n                        } else {\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.itemsListStart = data.list_to_be_continued;\n                                }\n                            );\n                            $('.card-item-category').addClass('hidden');\n                        }\n\n                        proceed_list_update(stop_listing_current_folder);\n                    } else {\n                        //Display items\n                        $('#item_details_no_personal_saltkey, #item_details_nok').addClass('hidden');\n                        $('#item_details_ok, #items_list').removeClass('hidden');\n\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.bypassComplexityOnCreation = parseInt(data.bloquer_creation_complexite);\n                                teampassApplication.bypassComplexityOnEdition = parseInt(data.bloquer_modification_complexite);\n                                //teampassApplication.personalSaltkeyRequired = parseInt(data.saltkey_is_required);\n                            }\n                        );\n\n                        // show items\n                        sList(data.html_json);\n\n                        // Prepare next iteration if needed\n                        if (data.list_to_be_continued === 'yes') {\n                            //set next start for query\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.itemsListStart = parseInt(data.next_start);\n                                }\n                            );\n                        } else {\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.itemsListStart = data.list_to_be_continued;\n                                }\n                            );\n                            $('.card-item-category').addClass('hidden');\n\n                            if (debugJavascript === true) {\n                                console.log('Liste complete des items')\n                                console.log(JSON.parse(store.get('teampassApplication').itemsList));\n                            }\n                        }\n\n                        proceed_list_update(stop_listing_current_folder);\n                    }\n                }\n            );\n        }\n    }\n\n    function sList(listOfItems) {\n        if (debugJavascript === true) {\n            console.log(listOfItems);\n        }\n        var counter = 0,\n            prevIdForNextItem = -1;\n\n        // Manage store\n        if (store.get('teampassApplication').itemsList === '' || store.get('teampassApplication').itemsList === undefined) {\n            var stored_datas = listOfItems;\n        } else {\n            var stored_datas = String(JSON.parse(store.get('teampassApplication').itemsList)).concat(listOfItems);\n        }\n        store.update(\n            'teampassApplication',\n            function(teampassApplication) {\n                teampassApplication.itemsList = JSON.stringify(stored_datas);\n            }\n        );\n        \n        $.each(listOfItems, function(i, value) {\n            var new_line = '',\n                pwd_error = '',\n                icon_all_can_modify = '',\n                icon_cannot_see = '',\n                icon_login = '',\n                icon_link = '',\n                icon_pwd = '',\n                icon_favorite = '',\n                item_flag = '',\n                item_grippy = '',\n                visible_by_user = '';\n\n            counter += 1;\n\n            // ENsure numbers are ints\n            value.anyone_can_modify = parseInt(value.anyone_can_modify);\n            value.canMove = parseInt(value.canMove);\n            value.expired = parseInt(value.expired);\n            value.is_favorite = parseInt(value.is_favorite);\n            value.is_result_of_search = parseInt(value.is_result_of_search);\n            value.item_id = parseInt(value.item_id);\n            value.open_edit = parseInt(value.open_edit);\n            value.rights = parseInt(value.rights);\n            value.tree_id = parseInt(value.tree_id);\n            value.display = parseInt(value.display);\n            value.display_item = parseInt(value.display_item);\n            value.enable_favourites = parseInt(value.enable_favourites);\n\n            // Check access restriction\n            if (value.rights > 0) {\n                // Should I populate previous item with this new id\n                if (debugJavascript === true) {\n                    console.log('current id: '+value.item_id);\n                    console.log(prevIdForNextItem);\n                }\n                if (prevIdForNextItem !== -1) {\n                    //$('#list-item-row_' + value.item_id).attr('data-next-item-id', prevIdForNextItem.item_id);\n                    //$('#list-item-row_' + value.item_id).attr('data-next-item-label', value.label);\n                    $('[data-item-key=\"'+value.item_key+'\"]')\n                        //.attr('data-next-item-id', prevIdForNextItem.item_id)\n                        .attr('data-next-item-key', prevIdForNextItem.item_key)\n                        .attr('data-next-item-label', value.label);\n                }\n                \n                // Prepare anyone can modify icon\n                if (value.anyone_can_modify === 1 || value.open_edit === 1) {\n                    icon_all_can_modify = '<span class=\"fa-stack fa-clickable pointer infotip list-item-clicktoedit mr-2\" title=\"<?php echo langHdl('edit'); ?>\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-pen fa-stack-1x fa-inverse\"></i></span>';\n                }\n\n                // Prepare mini icons\n                if (store.get('teampassSettings') !== undefined && parseInt(store.get('teampassSettings').copy_to_clipboard_small_icons) === 1 &&\n                    value.rights > 10\n                ) {\n                    // Login icon\n                    if (value.login !== '') {\n                        icon_login = '<span class=\"fa-stack fa-clickable fa-clickable-login pointer infotip mr-2\" title=\"<?php echo langHdl('item_menu_copy_login'); ?>\" data-clipboard-text=\"' + sanitizeString(value.login) + '\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-user fa-stack-1x fa-inverse\"></i></span>';\n                    }\n                    // Pwd icon\n                    if (value.pw_status !== 'pw_is_empty' && value.pw_status !== 'encryption_error') {\n                        icon_pwd = '<span class=\"fa-stack fa-clickable fa-clickable-password pointer infotip mr-2\" title=\"<?php echo langHdl('item_menu_copy_pw'); ?>\" data-item-key=\"' + value.item_key + '\" data-item-label=\"' + value.label + '\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-key fa-stack-1x fa-inverse\"></i></span>';\n                    }\n\n                    // Now check if pwd is empty. If it is then warn user\n                    if (value.pw_status === 'pw_is_empty') {\n                        pwd_error = '<span class=\"fa-stack fa-clickable fa-clickable-password pointer infotip mr-2\" title=\"<?php echo langHdl('password_is_empty'); ?>\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-exclamation-triangle text-warning fa-stack-1x fa-inverse\"></i></span>';\n                    }\n                }\n\n                // Link icon\n                if (value.link !== '') {\n                    icon_link = '<span class=\"fa-stack fa-clickable pointer infotip mr-2\" title=\"<?php echo langHdl('open_website'); ?>\"><a href=\"' + sanitizeString(value.link) + '\" target=\"_blank\" class=\"no-link\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-link fa-stack-1x fa-inverse\"></i></a></span>';\n                }\n\n                // Prepare Favorite icon\n                if (store.get('teampassSettings') !== undefined && parseInt(store.get('teampassSettings').enable_favourites) === 1 &&\n                    value.rights > 10\n                ) {\n                    if (value.is_favourited === 1) {\n                        icon_favorite = '<span class=\"fa-stack fa-clickable item-favourite pointer infotip mr-2\" title=\"<?php echo langHdl('unfavorite'); ?>\" data-item-id=\"' + value.item_id + '\" data-item-key=\"' + value.item_key + '\" data-item-favourited=\"1\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-star fa-stack-1x fa-inverse text-warning\"></i></span>';\n                    } else {\n                        icon_favorite = '<span class=\"fa-stack fa-clickable item-favourite pointer infotip mr-2\" title=\"<?php echo langHdl('favorite'); ?>\" data-item-id=\"' + value.item_id + '\" data-item-key=\"' + value.item_key + '\" data-item-favourited=\"0\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"far fa-star fa-stack-1x fa-inverse\"></i></span>';\n                    }\n                }\n\n                // Prepare Description\n                if (value.desc !== '') {\n                    value.desc = ' <span class=\"text-secondary small\">- ' + value.desc + '</span>';\n                }\n\n                $('#teampass_items_list').append(\n                    '<tr class=\"list-item-row' + (value.canMove === 1 ? ' is-draggable' : '') + '\" id=\"list-item-row_' + value.item_id + '\" data-item-key=\"' + value.item_key + '\" data-item-edition=\"' + value.open_edit + '\" data-item-id=\"' + value.item_id + '\" data-item-sk=\"' + value.sk + '\" data-item-expired=\"' + value.expired + '\" data-item-rights=\"' + value.rights + '\" data-item-display=\"' + value.display + '\" data-item-open-edit=\"' + value.open_edit + '\" data-item-tree-id=\"' + value.tree_id + '\" data-is-search-result=\"' + value.is_result_of_search + '\" data-label=\"' + escape(value.label) + '\">' +\n                    '<td class=\"list-item-description\" style=\"width: 100%;\">' +\n                    // Show user a grippy bar to move item\n                    (value.canMove === 1  ? '<i class=\"fas fa-ellipsis-v mr-2 dragndrop\"></i>' : '') + //&& value.is_result_of_search === 0\n                    // Show user a ban icon if expired\n                    (value.expired === 1 ? '<i class=\"far fa-calendar-times mr-2 text-warning infotip\" title=\"<?php echo langHdl('not_allowed_to_see_pw_is_expired'); ?>\"></i>' : '') +\n                    // Show user that Item is not accessible\n                    (value.rights === 10 ? '<i class=\"far fa-eye-slash fa-xs mr-2 text-primary infotip\" title=\"<?php echo langHdl('item_with_restricted_access'); ?>\"></i>' : '') +\n                    // Show user that password is badly encrypted\n                    (value.pw_status === 'encryption_error' ? '<i class=\"fas fa-exclamation-triangle fa-xs text-danger infotip mr-1\" title=\"<?php echo langHdl('pw_encryption_error'); ?>\"></i>' : '') +\n                    // Show item fa_icon if set\n                    (value.fa_icon !== '' ? '<i class=\"'+value.fa_icon+' mr-1\"></i>' : '') +\n                    // Prepare item info\n                    '<span class=\"list-item-clicktoshow' + (value.rights === 10 ? '' : ' pointer') + '\" data-item-id=\"' + value.item_id + '\" data-item-key=\"' + value.item_key + '\">' +\n                    '<span class=\"list-item-row-description' + (value.rights === 10 ? ' font-weight-light' : '') + '\">' + value.label + '</span>' + (value.rights === 10 ? '' : value.desc) + '</span>' +\n                    '<span class=\"list-item-actions hidden\">' +\n                    (value.rights === 10 ?\n                        '<span class=\"fa-stack fa-clickable fa-clickable-access-request pointer infotip mr-2\" title=\"<?php echo langHdl('need_access'); ?>\"><i class=\"fas fa-circle fa-stack-2x text-danger\"></i><i class=\"far fa-handshake fa-stack-1x fa-inverse\"></i></span>' :\n                        pwd_error + icon_all_can_modify + icon_login + icon_pwd + icon_link + icon_favorite) +\n                    '</span>' +\n                    (value.folder !== undefined ?\n                        '<br><span class=\"text-secondary small font-italic pointer open-folder\" data-tree-id=\"' +\n                        value.tree_id + '\"\">[' + value.folder + ']</span>' : '') +\n                    '</td>' +\n                    '</tr>'\n                );\n\n                // Save id for usage\n                prevIdForNextItem = {\n                    //'item_id' : value.item_id,\n                    'item_key' : value.item_key,\n                    'label': value.label,\n                };\n\n                //---------------------\n            }\n        });\n\n        // Sort entries\n        var $tbody = $('#teampass_items_list');\n        $tbody.find('tr').sort(function(a, b) {\n            var tda = $(a).find('.list-item-row-description').text();\n            var tdb = $(b).find('.list-item-row-description').text();\n            // if a < b return 1\n            return tda > tdb ? 1 :\n                tda < tdb ? -1 :\n                0;\n        }).appendTo($tbody);\n\n        // Trick for list with only one entry\n        if (counter === 1) {\n            $('#teampass_items_list')\n                .append('<tr class=\"row\"><td class=\"\">&nbsp;</td></tr>');\n        }\n        adjustElemsSize();\n\n        // Show tooltips\n        $('.infotip').tooltip();\n    }\n\n    $(document).on('click', '.open-folder', function() {\n        if ($(this).data('tree-id') !== undefined) {\n            if (debugJavascript === true) console.log($(this).data('tree-id'))\n\n            // Prepare\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListFolderId = parseInt($(this).data('tree-id'));\n                }\n            );\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.selectedFolder = parseInt($(this).data('tree-id'));\n                }\n            );\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStart = 0;\n                }\n            );\n\n            // Show\n            ListerItems(\n                $(this).data('tree-id'),\n                '',\n                0\n            );\n\n            $('#jstree').jstree('deselect_all');\n            $('#jstree').jstree('select_node', '#li_' + $(this).data('tree-id'));\n        }\n    });\n\n\n    function adjustElemsSize() {\n        // Adjust height of folders tree\n        if ($('#teampass_items_list').height() > (screenHeight - 215)) {\n            $('#jstree').height($('#teampass_items_list').height() + 75);\n        } else {\n            $('#jstree').height($(window).height() - 215);\n        }\n    }\n\n    /**\n     * Builds the HTML path\n     * @param  {[type]} data [description]\n     * @return {[type]}      [description]\n     */\n    function rebuildPath(data) {\n        var new_path = new_path_elem = '';\n        $.each((data), function(i, value) {\n            new_path_elem = '';\n            if (value['visible'] === 1) {\n                new_path_elem = ' class=\"pointer\" onclick=\"ListerItems(' + value['id'] + ', \\'\\', 0)\"';\n            }\n\n            new_path += '<li class=\"breadcrumb-item\" id=\"path_elem_' + value['id'] + '\"' + new_path_elem + '>' + value['title'] + '</li>';\n        });\n\n        return new_path;\n    }\n\n    /**\n\n     */\n    function proceed_list_update(stop_proceeding) {\n        stop_proceeding = stop_proceeding || '';\n\n        if (stop_proceeding === '1' ||\n            (store.get('teampassApplication').itemsListFolderId !== '' &&\n                store.get('teampassApplication').itemsListStart !== 'end')\n        ) {\n            // Clear storage\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStop = 0;\n                }\n            );\n            // Perform listing\n            ListerItems(\n                store.get('teampassApplication').itemsListFolderId,\n                store.get('teampassApplication').itemsListRestricted,\n                store.get('teampassApplication').itemsListStart,\n                store.get('teampassApplication').itemsListStop\n            );\n            return false;\n        }\n\n        if (store.get('teampassApplication').itemsListStart !== 'end') {\n            //Check if nb of items do display > to 0\n            if (store.get('teampassApplication').itemsShownByQuery > 0) {\n                ListerItems(\n                    store.get('teampassApplication').selectedFolder,\n                    '',\n                    store.get('teampassApplication').itemsListStart\n                );\n            }\n        } else {\n            // Show tooltips\n            $('.infotip').tooltip();\n\n            // Update silently the info about the folder\n            refreshFoldersInfo(\n                store.get('teampassApplication').selectedFolder,\n                'update'\n            );\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('data_refreshed'); ?>',\n                '', {\n                    timeOut: 1000\n                }\n            );\n\n            // Do drag'n'drop for the folders\n            prepareFolderDragNDrop();\n        }\n    }\n\n\n    function checkAccess(itemId, treeId, userId)\n    {\n        var data = {\n            'itemId': parseInt(itemId),\n            'treeId': parseInt(treeId),\n            'userId': parseInt(userId),\n        };\n\n        //Send query\n        $.post(\n            'sources/items.queries.php', {\n                type: 'check_current_access_rights',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'show_details_item');\n                requestRunning = true;\n                if (debugJavascript === true) {\n                    console.log(\"DEBUG: checkAccess\");\n                    console.log(data);\n                }\n\n\n                return false;\n            }\n        );\n    }\n\n\n    /**\n     *\n     */\n    function Details(itemDefinition, actionType, hotlink = false) {\n        if (debugJavascript === true) {\n            console.info('EXPECTED ACTION on ' + itemDefinition + ' is ' + actionType + ' -- ');\n            console.log(itemDefinition);\n        }\n\n        // Init\n        if (hotlink === false) {\n            var itemId = parseInt($(itemDefinition).data('item-id')) || '';\n            var itemKey = parseInt($(itemDefinition).data('item-key')) || '';\n            var itemTreeId = parseInt($(itemDefinition).data('item-tree-id')) || '';\n            var itemSk = parseInt($(itemDefinition).data('item-sk')) || 0;\n            var itemExpired = parseInt($(itemDefinition).data('item-expired')) || '';\n            var itemRestricted = parseInt($(itemDefinition).data('item-restricted-id')) || '';\n            var itemDisplay = parseInt($(itemDefinition).data('item-display')) || 0;\n            var itemOpenEdit = parseInt($(itemDefinition).data('item-open-edit')) || 0;\n            var itemReload = parseInt($(itemDefinition).data('item-reload')) || 0;\n            var itemRights = parseInt($(itemDefinition).data('item-rights')) || 10;\n        } else {\n            var itemId = itemDefinition || '';\n            var itemKey = itemDefinition || '';\n            var itemTreeId = store.get('teampassApplication').selectedFolder || '';\n            var itemSk = 0;\n            var itemExpired = '';\n            var itemRestricted = '';\n            var itemDisplay = 1;\n            var itemOpenEdit = 0;\n            var itemReload = 0;\n            var itemRights = parseInt($(itemDefinition).data('item-rights')) || 10;\n        }\n\n        // check if user still has access\n        if (checkAccess(itemId, itemTreeId, <?php echo $_SESSION['user_id']; ?>) === false) {\n            toastr.remove();\n            toastr.warning(\n                '<?php echo langHdl('no_item_to_display'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            // Finished\n            return false;\n        }\n\n        // Store current view\n        savePreviousView();\n        \n        if (debugJavascript === true) console.log(\"Request is running: \" + requestRunning)\n\n        // Store status query running\n        requestRunning = true;\n        userDidAChange = false;\n\n        // Select tab#1\n        $('#form-item-nav-pills li:first-child a').tab('show');\n\n        // Don't show details\n        if (itemDisplay === 'no_display') {\n            // Inform user\n            toastr.remove();\n            toastr.warning(\n                '<?php echo langHdl('no_item_to_display'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            // Clear ongoing request status\n            requestRunning = false;\n\n            // Finished\n            return false;\n        }\n\n        // If opening new item, reinit hidden fields\n        if (store.get('teampassApplication').lastItemSeen !== itemId) {\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.lastItemSeen = parseInt(itemId);\n                }\n            );\n            if (debugJavascript === true) console.log(\"Last seen item \" + store.get('teampassApplication').lastItemSeen)\n        }\n\n        // Prepare data to be sent\n        var data = {\n            'id': parseInt(itemId),\n            'folder_id': parseInt(itemTreeId),\n            'salt_key_required': itemSk,\n            'expired_item': itemExpired,\n            'restricted': itemRestricted,\n            'folder_access_level': store.get('teampassItem').hasAccessLevel,\n            'page': 'items',\n            'rights': itemRights,\n        };\n\n        if (debugJavascript === true) console.log(\"SEND\");\n        if (debugJavascript === true) console.log(data);\n\n        //Send query\n        $.post(\n            'sources/items.queries.php', {\n                type: 'show_details_item',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'show_details_item');\n                requestRunning = true;\n                if (debugJavascript === true) {\n                    console.log(\"RECEIVED object details\");\n                    console.log(data);\n                }\n\n                // Store not a new item\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.isNewItem = 0\n                    }\n                );\n\n                // remove any track-change class on item form\n                //$('.form-item-control').removeClass('track-change');\n\n                if (data.error === true) {\n                    toastr.remove();\n                    requestRunning = false;\n\n                    // Manage personal items key error\n                    if (data.error_type !== 'undefined' && data.error_type === 'private_items_to_encrypt') {\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n\n                        store.update(\n                            'teampassUser', {},\n                            function(teampassUser) {\n                                teampassUser.special = 'private_items_to_encrypt';\n                            }\n                        );\n                        document.location.href = \"index.php?page=items\";\n                    } else if (data.error_type !== 'undefined' && data.error_type === 'user_should_reencrypt_private_key' && store.get('teampassUser').temporary_code === '') {\n                        // we have to ask the user to re-encrypt his privatekey\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 10000,\n                                progressBar: true\n                            }\n                        );\n                        \n                        if (debugJavascript === true) console.log('LDAP user password has to encrypt his private key with hos new LDAP password')\n                        // HIde\n                        $('.content-header, .content').addClass('hidden');\n\n                        // Show passwords inputs and form\n                        $('#dialog-ldap-user-change-password-info')\n                            .html('<i class=\"icon fas fa-info mr-2\"></i><?php echo langHdl('ldap_user_has_changed_his_password');?>')\n                            .removeClass('hidden');\n                        $('#dialog-ldap-user-change-password').removeClass('hidden');\n                    }\n\n\n                    return false;\n                } else if ((data.user_can_modify === 0 && actionType === 'edit') ||\n                    parseInt(data.show_details) === 0\n                ) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('error_not_allowed_to'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    requestRunning = false;\n                    return false;\n                }\n\n\n                // Store scroll position\n                userScrollPosition = $(window).scrollTop();\n\n                // Scroll to top\n                $(window).scrollTop(0);\n\n                // SHould we show?\n                if (parseInt(data.show_detail_option) === 1 || itemExpired === 1) {\n                    // SHow expiration alert\n                    $('#card-item-expired').removeClass('hidden');\n                } else if (parseInt(data.show_detail_option) === 2) {\n                    // Don't show anything\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('not_allowed_to_see_pw'); ?>',\n                        '<?php echo langHdl('warning'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    return false;\n                }\n\n                // Show header info\n                $('#card-item-visibility').html(store.get('teampassItem').itemVisibility);\n                $('#card-item-minimum-complexity').html(store.get('teampassItem').itemMinimumComplexity);\n\n                // Hide NEW button in case access_level < 30\n                if (store.get('teampassItem').hasAccessLevel === 10) {\n                    $('#item-form-new-button').addClass('hidden');\n                } else {\n                    $('#item-form-new-button').removeClass('hidden');\n                }\n\n                // Uncrypt the pwd\n                if (data.pw !== undefined) {\n                    data.pw = atob(data.pw).utf8Decode();\n                }\n\n                // Update hidden variables\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.id = parseInt(data.id),\n                            teampassItem.timestamp = data.timestamp,\n                            teampassItem.user_can_modify = data.user_can_modify,\n                            teampassItem.anyone_can_modify = data.anyone_can_modify,\n                            teampassItem.edit_item_salt_key = data.edit_item_salt_key,\n                            teampassItem.id_restricted_to = data.id_restricted_to,\n                            teampassItem.id_restricted_to_roles = data.id_restricted_to_roles,\n                            teampassItem.item_rights = itemRights\n                    }\n                );\n\n                // Prepare forms\n                $('#folders-tree-card, .columns-position').addClass('hidden');\n                if (actionType === 'show') {\n                    // Prepare Views\n                    $('.item-details-card, #item-details-card-categories').removeClass('hidden');\n                    $('.form-item').addClass('hidden');\n\n                    $('#form-item-suggestion-password').focus();\n                    // If Description empty then remove it\n                    if (data.description === '<p>&nbsp;</p>') {\n                        $('#card-item-description')\n                            .parents('.item-details-card')\n                            .addClass('hidden');\n                    } else {\n                        $('#card-item-description')\n                            .parents('.item-details-card')\n                            .removeClass('hidden');\n                    }\n                } else {\n                    $('.form-item').removeClass('hidden');\n                    $('.item-details-card, #item-details-card-categories').addClass('hidden');\n                }\n                $('#pwd-definition-size').val(data.pw.length);\n\n                // Prepare card\n                const itemIcon = (data.fa_icon !== \"\") ? '<i class=\"'+data.fa_icon+' mr-1\"></i>' : '';\n                $('#card-item-label, #form-item-title').html(itemIcon + data.label);\n                $('#form-item-label, #form-item-suggestion-label').val(data.label);\n                $('#card-item-description, #form-item-suggestion-description').html(data.description);\n                if (data.description === '') {\n                    $('#card-item-description').addClass('hidden');\n                } else {\n                    $('#card-item-description').removeClass('hidden');\n                }\n                $('#card-item-pwd').html('<?php echo $var['hidden_asterisk']; ?>');\n                $('#hidden-item-pwd, #form-item-suggestion-password').val(data.pw);\n                $('#form-item-password, #form-item-password-confirmation, #form-item-server-old-password').val(data.pw);\n                $('#card-item-login').html(data.login);\n                $('#form-item-login, #form-item-suggestion-login, #form-item-server-login').val(data.login);\n\n                $('#card-item-email').text(data.email);\n                $('#form-item-email, #form-item-suggestion-email').val(data.email);\n                $('#card-item-url').html(data.url);\n                $('#form-item-url, #form-item-suggestion-url').val($(data.url).text());\n                $('#form-item-restrictedToUsers').val(JSON.stringify(data.id_restricted_to));\n                $('#form-item-restrictedToRoles').val(JSON.stringify(data.id_restricted_to_roles));\n                $('#form-item-folder').val(data.folder);\n                $('#form-item-tags').val(data.tags.join(' '));\n                $('#form-item-icon').val(data.fa_icon);\n                $('#form-item-icon-show').html(itemIcon);\n\n                $('#form-item-password').pwstrength(\"forceUpdate\");\n                $('#form-item-label').focus();\n\n                // Editor for description field\n                if (debugJavascript === true) {console.log('>>>> create summernote');}\n                $('#form-item-description')\n                    .html(data.description)\n                    .summernote({\n                        toolbar: [\n                            ['style', ['style']],\n                            ['font', ['bold', 'italic', 'underline', 'strikethrough', 'clear']],\n                            ['fontsize', ['fontsize']],\n                            ['color', ['color']],\n                            ['para', ['ul', 'ol', 'paragraph']],\n                            ['insert', ['link', 'picture']],\n                            //['height', ['height']],\n                            ['view', ['codeview']]\n                        ],\n                        codeviewFilter: true,\n                        codeviewIframeFilter: true,\n                        callbacks: {\n                            onChange: function(contents, $editable) {\n                                if (debugJavascript === true) console.log('Editor onChange:' + userDidAChange + \" - \" + requestRunning);\n                                if (userDidAChange === false && requestRunning === false) {\n                                    if (debugJavascript === true) console.log('onChange:', contents, $editable);\n                                    userDidAChange = true;\n                                    if (debugJavascript === true) console.log('User did a change on #form-item-description > ' + userDidAChange);\n                                    //$('#form-item-description').attr('data-change-ongoing', true);;\n                                }\n                            }\n                        }\n                    })\n                //.summernote('editor.insertText', data.description);\n\n                $('#form-item-suggestion-description')\n                    .html(data.description)\n                    .summernote({\n                        toolbar: [\n                            ['style', ['style']],\n                            ['font', ['bold', 'italic', 'underline', 'strikethrough', 'clear']],\n                            ['fontsize', ['fontsize']],\n                            ['color', ['color']],\n                            ['para', ['ul', 'ol', 'paragraph']],\n                            ['insert', ['link', 'picture']],\n                            //['height', ['height']],\n                            ['view', ['codeview']]\n                        ],\n                        codeviewFilter: true,\n                        codeviewIframeFilter: true,\n                        callbacks: {\n                            onChange: function(contents, $editable) {\n                                if (userDidAChange === false && requestRunning === false) {\n                                    if (debugJavascript === true) console.log('onChange:', contents, $editable);\n                                    userDidAChange = true;\n                                    if (debugJavascript === true) console.log('User did a change on #form-item-suggestion-description > ' + userDidAChange);\n                                    //$('#form-item-suggestion-description').attr('data-change-ongoing', true);;\n                                }\n                            }\n                        }\n                    });\n\n\n                //prepare nice list of users / groups\n                var html_users = '',\n                    html_groups = '',\n                    html_tags = '',\n                    html_kbs = '';\n\n                $(data.tags).each(function(index, value) {\n                    html_tags += '<span class=\"badge badge-success pointer tip mr-2\" title=\"<?php echo langHdl('list_items_with_tag'); ?>\" onclick=\"searchItemsWithTags(\\'' + value + '\\')\"><i class=\"fas fa-tag fa-sm\"></i>&nbsp;<span class=\"item_tag\">' + value + '</span></span>';\n                });\n                if (html_tags === '') {\n                    $('#card-item-tags').html('<?php echo langHdl('none'); ?>');\n                } else {\n                    $('#card-item-tags').html(html_tags);\n                }\n\n                $(data.links_to_kbs).each(function(index, value) {\n                    html_kbs += '<a class=\"badge badge-primary pointer tip mr-2\" href=\"<?php echo $SETTINGS['cpassman_url']; ?>/index.php?page=kb&id=' + value['id'] + '\"><i class=\"fas fa-map-pin fa-sm\"></i>&nbsp;' + value['label'] + '</a>';\n\n                });\n                if (html_kbs === '') {\n                    $('#card-item-kbs').html('<?php echo langHdl('none'); ?>');\n                } else {\n                    $('#card-item-kbs').html(html_kbs);\n                }\n\n\n                // Manage CATEGORIES / CUSTOM FIELDS\n                if (data.categories.length === 0) {\n                    $('.card-item-category, .card-item-field, .form-item-category, #item-details-card-categories')\n                        .addClass('hidden');\n                    $('.no-item-fields').removeClass('hidden');\n                    $('#card-item-fields').closest().addClass('collapsed');\n                } else {\n                    // \n                    if (data.template_id === '') {\n                        $('#list-group-item-main')\n                            .children('.list-group')\n                            .removeClass('hidden');\n                        $('#card-item-category').removeClass('hidden');\n                    }\n\n                    if (data.fields.length === 0) {\n                        if (actionType === 'show') {\n                            $('#item-details-card-categories').addClass('hidden');\n                            // Refresh last item seen\n                            refreshListLastSeenItems();\n                        } else {\n                            // Show the inputs for EDITION\n                            $(data.categories).each(function(index, category) {\n                                $('#form-item-field, #form-item-category-' + category).removeClass('hidden');\n                            });\n                        }\n                    } else {\n                        // Show expected categories\n                        $('.no-item-fields, .form-item-category').addClass('hidden');\n\n                        // In edition mode, show all fields in expected Categories\n                        $(data.categories).each(function(index, category) {\n                            $('#form-item-field, #form-item-category-' + category).removeClass('hidden');\n                        });\n\n                        // Now show expected fields and values\n                        $(data.fields).each(function(index, field) {\n                            // Show cateogry\n                            $('#card-item-category-' + field.parent_id).removeClass('hidden');\n\n                            // Is data encrypted\n                            // Then base64 decode is required\n                            if (field.encrypted === 1) {\n                                field.value = atob(field.value);\n                            }\n\n                            // Show field\n                            if (field.masked === 1) {\n                                // Item card\n                                $('#card-item-field-' + field.id)\n                                    .removeClass('hidden')\n                                    .children(\".card-item-field-value\")\n                                    .html(\n                                        '<span data-field-id=\"' + field.id + '\" class=\"pointer replace-asterisk\"><?php echo $var['hidden_asterisk']; ?></span>' +\n                                        '<input type=\"text\" style=\"width:0px; height:0px; border:0px;\" id=\"hidden-card-item-field-value-' + field.id + '\" value=\"' + (field.value) + '\">'\n                                    )\n                                $('#card-item-field-' + field.id)\n                                    .children(\".btn-copy-clipboard-clear\")\n                                    .attr('data-clipboard-target', '#hidden-card-item-field-value-' + field.id);\n                            } else {\n                                // Show Field\n                                $('#card-item-field-' + field.id)\n                                    .removeClass('hidden')\n                                    .children(\".card-item-field-value\")\n                                    .html(field.value);\n                            }\n                            // Item edit form\n                            $('#form-item-field-' + field.id)\n                                .children(\".form-item-field-custom\")\n                                .val(field.value);\n                        });\n\n                        // Manage template to show\n                        if (data.template_id !== '' && $.inArray(data.template_id, data.categories) > -1) {\n                            // Tick the box in edit mode\n                            $('#template_' + data.template_id).iCheck('check');\n\n                            // Hide existing data as replaced by Category template                                \n                            $('#list-group-item-main, #item-details-card-categories')\n                                .children('.list-group')\n                                .addClass('hidden');\n\n                            // Move the template in place of item main  \n                            $('#card-item-category-' + data.template_id)\n                                .addClass('fields-to-move')\n                                .detach()\n                                .appendTo('#list-group-item-main');\n\n                            // If only one category of Custom Fields\n                            // Then hide the CustomFields div\n                            if (actionType === 'show') {\n                                if (data.categories.length === 1) {\n                                    $('#item-details-card-categories').addClass('hidden');\n                                } else {\n                                    $('#item-details-card-categories').removeClass('hidden');\n                                }\n                            }\n                        }\n                    }\n                }\n\n\n                // Waiting\n                $('#card-item-attachments').html(\"<?php echo langHdl('please_wait'); ?>\");\n\n                // Manage clipboard for link\n                if (clipboardForLink) clipboardForLink.destroy();\n                clipboardForLink = new ClipboardJS(\n                    '#get_item_link',\n                    {\n                        text: function(e) {\n                            return (\"<?php echo $SETTINGS['cpassman_url'];?>/index.php?page=items&group=\"+store.get('teampassItem').folderId+\"&id=\"+store.get('teampassItem').id);\n                        }\n                    })\n                    .on('success', function(e) {\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('copy_to_clipboard'); ?>',\n                            '', {\n                                timeOut: 2000,\n                                progressBar: true,\n                                positionClass: 'toast-top-right'\n                            }\n                        );\n                        e.clearSelection();\n                    });\n\n                // Manage clipboard button\n                if (itemClipboard) itemClipboard.destroy();\n                itemClipboard = new ClipboardJS('.btn-copy-clipboard-clear', {\n                    text: function(e) {\n                        return ($($(e).data('clipboard-target')).val());\n                    }\n                })\n                .on('success', function(e) {\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('copy_to_clipboard'); ?>',\n                        '', {\n                            timeOut: 2000,\n                            progressBar: true,\n                            positionClass: 'toast-top-right'\n                        }\n                    );\n                    e.clearSelection();\n                });\n\n                // Prepare clipboard - COPY LOGIN\n                if (data.login !== '') {\n                    $('#card-item-login-btn').removeClass('hidden');\n                } else {\n                    $('#card-item-login-btn').addClass('hidden');\n                }\n\n                // Prepare clipboard - COPY PASSWORD\n                if (data.pw !== '') {\n                    new ClipboardJS('#card-item-pwd-button', {\n                            text: function() {\n                                return (data.pw);\n                            }\n                        })\n                        .on('success', function(e) {\n                            itemLog(\n                                'at_password_copied',\n                                e.trigger.dataset.clipboardId,\n                                $('#card-item-label').text()\n                            );\n\n                            // Warn user about clipboard clear\n                            if (store.get('teampassSettings').clipboard_life_duration === undefined || parseInt(store.get('teampassSettings').clipboard_life_duration) === 0) {\n                                toastr.remove();\n                                toastr.info(\n                                    '<?php echo langHdl('copy_to_clipboard'); ?>',\n                                    '', {\n                                        timeOut: 2000,\n                                        positionClass: 'toast-top-right',\n                                        progressBar: true\n                                    }\n                                );\n                            } else {\n                                toastr.warning(\n                                    '<?php echo langHdl('clipboard_will_be_cleared'); ?>',\n                                    '', {\n                                        timeOut: store.get('teampassSettings').clipboard_life_duration * 1000,\n                                        progressBar: true\n                                    }\n                                );\n\n                                // Set clipboard eraser\n                                clearClipboardTimeout(\n                                    store.get('teampassSettings').clipboard_life_duration\n                                );\n                            }\n\n                            e.clearSelection();\n                        });\n                    $('#card-item-pwd-button').removeClass('hidden');\n                } else {\n                    $('#card-item-pwd-button').addClass('hidden');\n                }\n\n                // Prepare clipboard - COPY EMAIL\n                if (data.email !== '') {\n                    $('#card-item-email-btn').removeClass('hidden');\n                } else {\n                    $('#card-item-email-btn').addClass('hidden');\n                }\n\n                // Prepare auto_update info\n                $('#card-item-misc').html('');\n                if (parseInt(data.auto_update_pwd_frequency) !== '0') {\n                    $('#card-item-misc')\n                        .append('<span class=\"fas fa-shield infotip mr-4\" title=\"<?php echo langHdl('auto_update_enabled'); ?>&nbsp;' + data.auto_update_pwd_frequency + '\"></span>');\n                }\n\n                // Show Notification engaged\n                if (data.notification_status === true) {\n                    $('#card-item-misc')\n                        .append('<span class=\"mr-4 icon-badge\" id=\"card-item-misc-notification\"><span class=\"far fa-bell infotip text-success\" title=\"<?php echo langHdl('notification_engaged'); ?>\"></span></span>');\n                } else {\n                    $('#card-item-misc')\n                        .append('<span class=\"mr-4 icon-badge\" id=\"card-item-misc-notification\"><span class=\"far fa-bell-slash infotip text-warning\" title=\"<?php echo langHdl('notification_not_engaged'); ?>\"></span></span>');\n                }\n\n                // Prepare counter\n                $('#card-item-misc')\n                    .append('<span class=\"icon-badge mr-4\"><span class=\"far fa-eye infotip\" title=\"<?php echo langHdl('viewed_number'); ?>\"></span><span class=\"badge badge-info icon-badge-text icon-badge-far\">' + data.viewed_no + '</span></span>');\n\n                // Delete after X views\n                if (data.to_be_deleted !== '') {\n                    if (parseInt(data.to_be_deleted_type) === 1) {\n                        $('#form-item-deleteAfterShown').val(data.to_be_deleted);\n                        $('#form-item-deleteAfterDate').val('');\n                    } else {\n                        $('#form-item-deleteAfterShown').val('');\n                        $('#form-item-deleteAfterDate').val(data.to_be_deleted);\n                    }\n                    // Show icon\n                    $('#card-item-misc')\n                        .append('<span class=\"icon-badge mr-5\"><span class=\"far fa-trash-alt infotip\" title=\"<?php echo langHdl('automatic_deletion_engaged'); ?>\"></span><span class=\"badge badge-danger icon-badge-text-bottom-right\">' + data.to_be_deleted + '</span></span>');\n                }\n\n                // reset password shown info\n                $('#card-item-pwd').removeClass('pwd-shown');\n\n                //Anyone can modify button\n                if (parseInt(data.anyone_can_modify) === 1) {\n                    $('#form-item-anyoneCanModify').iCheck('check');\n                } else {\n                    $('#form-item-anyoneCanModify').iCheck('uncheck');\n                }\n\n                if (parseInt(data.show_details) === 1 && parseInt(data.show_detail_option) !== 2) {\n                    // continue loading data\n                    showDetailsStep2(itemId, actionType);\n                } else if (parseInt(data.show_details) === 1 && parseInt(data.show_detail_option) === 2) {\n                    $('#item_details_nok').addClass('hidden');\n                    $('#item_details_ok').addClass('hidden');\n                    $('#item_details_expired_full').show();\n                    $('#menu_button_edit_item, #menu_button_del_item, #menu_button_copy_item, #menu_button_add_fav, #menu_button_del_fav, #menu_button_show_pw, #menu_button_copy_pw, #menu_button_copy_login, #menu_button_copy_link').attr('disabled', 'disabled');\n                    $('#div_loading').addClass('hidden');\n                } else {\n                    //Dont show details\n                    $('#item_details_nok').removeClass('hidden');\n                    $('#item_details_nok_restriction_list').html('<div style=\"margin:10px 0 0 20px;\"><b><?php echo langHdl('author'); ?>: </b>' + data.author + '<br /><b><?php echo langHdl('restricted_to'); ?>: </b>' + data.restricted_to + '<br /><br /><u><a href=\"#\" onclick=\"openReasonToAccess()\"><?php echo langHdl('request_access_ot_item'); ?></a></u></div>');\n\n                    $('#reason_to_access').remove();\n                    $('#item_details_nok')\n                        .append('<input type=\"hidden\" id=\"reason_to_access\" value=\"' + data.id + ',' + data.id_user + '\">');\n\n                    // Protect\n                    $('#item_details_ok').addClass('hidden');\n                    $('#item_details_expired').addClass('hidden');\n                    $('#item_details_expired_full').addClass('hidden');\n                    $('#menu_button_edit_item, #menu_button_del_item, #menu_button_copy_item, #menu_button_add_fav, #menu_button_del_fav, #menu_button_show_pw, #menu_button_copy_pw, #menu_button_copy_login, #menu_button_copy_link').attr('disabled', 'disabled');\n                    $('#div_loading').addClass('hidden');\n                }\n\n                // Prepare bottom buttons\n                if ($('#list-item-row_'+data.id).prev('.list-item-row').attr('data-item-id') !== undefined) {\n                    $('.but-prev-item')\n                        .html('<i class=\"fas fa-arrow-left mr-2\"></i>' + unescape($('#list-item-row_'+data.id).prev('.list-item-row').attr('data-label')))\n                        .attr('data-prev-item-id', $('#list-item-row_'+data.id).prev('.list-item-row').attr('data-item-id'))\n                        .removeClass('hidden');\n                }\n                if ($('#list-item-row_'+data.id).next('.list-item-row').attr('data-item-id') !== undefined) {\n                    $('.but-next-item')\n                        .html('<i class=\"fas fa-arrow-right mr-2\"></i>' + unescape($('#list-item-row_'+data.id).next('.list-item-row').attr('data-label')))\n                        .attr('data-next-item-id', $('#list-item-row_'+data.id).next('.list-item-row').attr('data-item-id'))\n                        .removeClass('hidden');\n                }\n\n                /*\n                dataItemKey = $('[data-item-key=\"'+data.item_key+'\"]');\n                if (dataItemKey.prev('.list-item-row').attr('data-item-key') !== undefined) {\n                    $('.but-prev-item')\n                        .html('<i class=\"fas fa-arrow-left mr-2\"></i>' + unescape(dataItemKey.prev('.list-item-row').attr('data-label')))\n                        .attr('data-prev-item-key', dataItemKey.attr('data-item-key'))\n                        .removeClass('hidden');\n                }\n                if (dataItemKey.next('.list-item-row').attr('data-item-key') !== undefined) {\n                    $('.but-next-item')\n                        .html('<i class=\"fas fa-arrow-right mr-2\"></i>' + unescape(dataItemKey.next('.list-item-row').attr('data-label')))\n                        .attr('data-next-item-id', dataItemKey.next('.list-item-row').attr('data-item-id'))\n                        .removeClass('hidden');\n                }\n                */\n                if (debugJavascript === true) {\n                    //console.log(\"PREV: \" + dataItemKey.attr('data-item-key') + \" - NEXT: \" + $('#list-item-row_'+data.id).next('.list-item-row').attr('data-item-id'));\n                }\n\n                // Inform user\n                toastr.remove();\n                toastr.info(\n                    '<?php echo langHdl('done'); ?>',\n                    '', {\n                        timeOut: 1000\n                    }\n                );\n\n                return true;\n            }\n        );\n    }\n\n\n    /*\n     * Loading Item details step 2\n     */\n    function showDetailsStep2(id, actionType) {\n        requestRunning = true;\n        $.post(\n            'sources/items.queries.php', {\n                type: 'showDetailsStep2',\n                id: id,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'showDetailsStep2');\n\n                if (debugJavascript === true) {\n                    console.log('RECEIVED STEP2 - used key: <?php echo $_SESSION['key']; ?>');\n                    console.log(data);\n                }\n\n                // Attachments\n                if (data !== false) {\n                    if (data.attachments.length === 0) {\n                        $('#card-item-attachments-badge').html('<?php echo langHdl('none'); ?>');\n                        $('#card-item-attachments')\n                            .html('<?php echo langHdl('no_attachment'); ?>')\n                            .parent()\n                            .addClass('collapsed');\n                    } else {\n                        var html = '',\n                            htmlFull = '',\n                            counter = 1,\n                            nbFiles = 0;\n                        $.each(data.attachments, function(i, value) {\n                            // Manage new row\n                            if (counter === 1) {\n                                htmlFull += '<div class=\"row\">';\n                                html += '<div class=\"row\">';\n                            }\n\n                            html += '<div class=\"col-6\">' +\n                                '<div class=\"callout callout-info\">' +\n                                '<i class=\"' + value.icon + ' mr-2 text-info\"></i>';\n\n                            // Show VIEW image icon\n                            if (value.is_image === 1) {\n                                html +=\n                                    '<i class=\"fas fa-eye infotip preview-image pointer mr-2\" ' +\n                                    'title=\"<?php echo langHdl('see'); ?>\" ' +\n                                    'data-file-id=\"' + value.id + '\" data-file-title=\"' +\n                                    (isBase64(value.filename) === true ? atob(value.filename) : value.filename) + '\"></i>';\n                            }\n\n                            // Show DOWNLOAD icon\n                            downloadIcon =\n                                '<a class=\"text-secondary infotip mr-2\" href=\"sources/downloadFile.php?name=' + encodeURI(value.filename) + '&key=<?php echo $_SESSION['key']; ?>&key_tmp=' + value.key + '&fileid=' + value.id + '\" title=\"<?php echo langHdl('download'); ?>\">' +\n                                '<i class=\"fas fa-file-download\"></i></a>';\n                            html += downloadIcon;\n\n                            // Show other info\n                            html +=\n                                '<span class=\"font-weight-bold mr-3\">' +\n                                (isBase64(value.filename) === true ? atob(value.filename) : value.filename) + '</span>' +\n                                '<span class=\"mr-2 font-weight-light\">(' + value.extension + ')</span>' +\n                                '<span class=\"font-italic\">' + value.size + '</span>' +\n                                '</div></div>';\n\n                            htmlFull += '<div class=\"col-6 edit-attachment-div\"><div class=\"info-box bg-secondary-gradient\">' +\n                                '<span class=\"info-box-icon bg-info\"><i class=\"' + value.icon + '\"></i></span>' +\n                                '<div class=\"info-box-content\"><span class=\"info-box-text\">' +\n                                (isBase64(value.filename) === true ? atob(value.filename) : value.filename) + '.' + value.extension + '</span>' +\n                                '<span class=\"info-box-text\">' + downloadIcon +'</span>' +\n                                '<span class=\"info-box-text\"><i class=\"fas fa-trash pointer delete-file\" data-file-id=\"' + value.id + '\"></i></span></div>' +\n                                '</div></div>';\n\n                            if (counter === 2) {\n                                htmlFull += '</div>';\n                                html += '</div>';\n                                counter = 1;\n                            } else {\n                                counter += 1;\n                            }\n                            nbFiles += 1;\n                        });\n                        $('#card-item-attachments').html(html);\n                        $('#card-item-attachments-badge').html(nbFiles);\n                        $('#form-item-attachments').html(htmlFull);\n                        $('#form-item-attachments-zone').removeClass('hidden');\n                    }\n                }\n                // Hide loading state\n                $('#card-item-attachments').nextAll().addClass('hidden');\n\n                // Show restrictions with Badges\n                var html_restrictions = '';\n                $.each(store.get('teampassItem').id_restricted_to, function(i, value) {\n                    html_restrictions +=\n                        '<span class=\"badge badge-info mr-2 mb-1\"><i class=\"fas fa-group fa-sm mr-1\"></i>' +\n                        data.users_list.find(x => x.id === parseInt(value)).name + '</span>';\n                });\n                $.each(store.get('teampassItem').id_restricted_to_roles, function(i, value) {\n                    html_restrictions +=\n                        '<span class=\"badge badge-info mr-2 mb-1\"><i class=\"fas fa-group fa-sm mr-1\"></i>' +\n                        data.roles_list.find(x => x.id === parseInt(value)).title + '</span>';\n                });\n                if (html_restrictions === '') {\n                    $('#card-item-restrictedto').html('<?php echo langHdl('no_special_restriction'); ?>');\n                } else {\n                    $('#card-item-restrictedto').html(html_restrictions);\n                }\n\n\n                $('#edit_past_pwds').attr('title', (data.history_of_pwds)); //htmlspecialchars_decode \n                $('#edit_past_pwds_div').html((data.history_of_pwds)); //htmlspecialchars_decode \n\n                //$('#id_files').html(data.files_id);\n                //$('#hid_files').val(data.files_id);\n                //$('#item_edit_list_files').html(data.files_edit);\n\n                //$('#index-last-pwds').html(htmlspecialchars_decode(data.div_last_items));\n\n                // function calling image lightbox when clicking on link\n                $('a.image_dialog').click(function(event) {\n                    event.preventDefault();\n                    PreviewImage($(this).attr('href'), $(this).attr('title'));\n                });\n\n\n                // set indicator if item has change proposal\n                if (parseInt(data.has_change_proposal) > 0) {\n                    $('#item_extra_info').prepend('<i class=\"fas fa-lightbulb-o fa-sm mi-yellow tip\" title=\"<?php echo langHdl('item_has_change_proposal'); ?>\"></i>&nbsp;');\n                }\n\n\n                $('.infotip').tooltip();\n\n                // Now load History\n                if (actionType === 'show') {\n                    $.post(\n                        \"sources/items.queries.php\", {\n                            type: \"load_item_history\",\n                            item_id: store.get('teampassItem').id,\n                            key: \"<?php echo $_SESSION['key']; ?>\"\n                        },\n                        function(data) {\n                            //decrypt data\n                            data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'load_item_history');\n                            if (debugJavascript === true) {\n                                console.info('History:');\n                                console.log(data);\n                            }\n                            if (data.error === '') {\n                                var html = '',\n                                    nbHistoryEvents = 0;\n                                $.each(data.history, function(i, value) {\n                                    html += '<div class=\"direct-chat-msg\"><div class=\"direct-chat-info clearfix\">' +\n                                        '<span class=\"direct-chat-name float-left\">' + value.name + '</span>' +\n                                        '<span class=\"direct-chat-timestamp float-right\">' + value.date + '</span>' +\n                                        '</div>' +\n                                        '<img class=\"direct-chat-img\" src=\"' + value.avatar + '\" alt=\"Message User Image\">' +\n                                        '<div class=\"direct-chat-text\"><span class=\"text-capitalize\">' +\n                                        (value.action === '' ? '' : (value.action)) + '</span> ' +\n                                        (value.detail === '' ? '' : (' | ' + value.detail)) + '</div></div>';\n                                    nbHistoryEvents += 1;\n                                });\n                                // Display\n                                $('#card-item-history').html(html);\n                                $('#card-item-history-badge').html(nbHistoryEvents);\n                            }\n\n                            // Collapse History\n                            $('#card-item-history').closest().addClass('collapsed');\n\n                            // Hide loading state\n                            $('#card-item-history').nextAll().addClass('hidden');\n                        }\n                    );\n                } else if (actionType === 'edit') {\n                    getPrivilegesOnItem(\n                        selectedFolderId,\n                        0\n                    );\n                }\n\n                // Prepare Select2 inputs\n                $('.select2').select2({\n                    language: '<?php echo isset($_SESSION['user_language_code']) === true ? $_SESSION['user_language_code'] : 'en'; ?>'\n                });\n\n                // Prepare datePicker\n                $('#form-item-deleteAfterDate, .datepicker').datepicker({\n                    format: '<?php echo str_replace(['Y', 'M'], ['yyyy', 'mm'], $SETTINGS['date_format']); ?>',\n                    todayHighlight: true,\n                    todayBtn: true,\n                    language: '<?php echo isset($_SESSION['user_language_code']) === true ? $_SESSION['user_language_code'] : 'en'; ?>'\n                });\n\n                // Prepare Date range picker with time picker\n                $('.timepicker').timepicker({\n                    minuteStep: 5,\n                    template: false,\n                    showSeconds: true,\n                    showMeridian: false,\n                    showInputs: false,\n                    explicitMode: true\n                });\n\n                // Delete inputs related files uploaded but not confirmed\n                var data = {\n                    'item_id': store.get('teampassItem').id,\n                }\n\n                $.post(\n                    \"sources/items.queries.php\", {\n                        type: 'delete_uploaded_files_but_not_saved',\n                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function (data) {\n                        /*// add track-change class on item form\n                        setTimeout(\n                            $('#form-item-label, #form-item-description, #form-item-login, #form-item-password, #form-item-email, #form-item-url, #form-item-folder, #form-item-restrictedto, #form-item-tags, #form-item-anyoneCanModify, #form-item-deleteAfterShown, #form-item-deleteAfterDate, #form-item-anounce, .form-item-field-custom').addClass('track-change'),\n                            2000\n                        );*/\n\n                        requestRunning = false;\n                    }\n                );\n            }\n        );\n    };\n\n    // Clear history form\n    $(document)\n        .on('click', '#form-item-history-clear', function() {\n            $('.history').val('');\n        })\n        .on('click', '#form-item-history-insert', function() {\n            if ($('#form-item-history-label').val() === '' ||\n                $('#form-item-history-date').val() === '' ||\n                $('#form-item-history-time').val() === ''\n            ) {\n                // Inform user\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('all_fields_mandatory'); ?>',\n                    '<?php echo langHdl('warning'); ?>', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Insert new entry\n            var data = {\n                'item_id': store.get('teampassItem').id,\n                'label': DOMPurify.sanitize($('#form-item-history-label').val()),\n                'date': DOMPurify.sanitize($('#form-item-history-date').val()),\n                'time': DOMPurify.sanitize($('#form-item-history-time').val()),\n            }\n            $.post(\n                \"sources/items.queries.php\", {\n                    type: 'history_entry_add',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'history_entry_add');\n                    if (debugJavascript === true) console.log(data);\n                    $('.history').val('');\n\n                    // Inform user\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            );\n        })\n        .on('click', '.nav-link', function() {\n            if ($(this).attr('href') === '#tab_5') {\n                $('#form-item-buttons').addClass('hidden');\n            } else {\n                $('#form-item-buttons').removeClass('hidden');\n            }\n\n        });\n\n    // When click on Trash attachment icon\n    $(document).on('click', '.delete-file', function() {\n        var thisButton = $(this),\n            thisFileId = thisButton.data('file-id');\n\n        if (thisFileId !== undefined && thisFileId !== '') {\n            // Delete the file\n            var data = {\n                'file_id': thisFileId,\n            };\n\n            $.post(\n                'sources/items.queries.php', {\n                    type: 'delete_attached_file',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'delete_attached_file');\n                    if (debugJavascript === true) console.log(data);\n\n                    //check if format error\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Remove the file in UI\n                        thisButton.closest('.edit-attachment-div').remove();\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n        }\n    });\n\n    //calling image lightbox when clicking on link\n    $(document).on('click', '.preview-image', function(event) {\n        event.preventDefault();\n        PreviewImage($(this).data('file-id'));\n    });\n\n    PreviewImage = function(fileId) {\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('loading_image'); ?>...<i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-2\"></i>'\n        );\n\n        $.post(\n            \"sources/items.queries.php\", {\n                type: \"image_preview_preparation\",\n                id: fileId,\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //decrypt data\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'image_preview_preparation');\n                //if (debugJavascript === true) console.log(data);\n\n                //check if format error\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $(\"#card-item-preview\").html('<img id=\"image_files\" src=\"\">');\n                    //Get the HTML Elements\n                    imageDialog = $(\"#card-item-preview\");\n                    imageTag = $('#image_files');\n\n                    //Set the image src\n                    imageTag.attr(\"src\", \"data:\" + data.file_type + \";base64,\" + data.file_content);\n                    imageTag.attr(\"class\", \"img-fluid\");\n\n                    //When the image has loaded, display the dialog\n                    showModalDialogBox(\n                        '#warningModal',\n                        data.filename,\n                        $(imageDialog).html(),\n                        '',\n                        'Close',\n                        'modal-xl'\n                    );\n\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n\n                    /*\n                                        var pre = document.createElement('pre');\n                                        pre.style.textAlign = \"center\";\n                                        $(pre).append($(imageDialog).html());\n                                        alertify\n                                            .alert(pre)\n                                            .set({\n                                                label: '<?php echo langHdl('close'); ?>',\n                                                closable: false,\n                                                padding: false,\n                                                title: data.filename,\n                                                resizable: true,\n                                            })\n                                            .resizeTo('90%', '250px');*/\n                }\n            }\n        );\n    };\n\n    /**\n     */\n    function itemLog(logCase, itemId, itemLabel) {\n        itemId = itemId || $('#id_item').val();\n\n        var data = {\n            \"id\": itemId,\n            \"label\": DOMPurify.sanitize(itemLabel),\n            \"user_id\": \"<?php echo $_SESSION['user_id']; ?>\",\n            \"action\": logCase,\n            \"login\": \"<?php echo $_SESSION['login']; ?>\"\n        };\n\n        $.post(\n            \"sources/items.logs.php\", {\n                type: \"log_action_on_item\",\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            }\n        );\n    }\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function prepareOneTimeView() {\n        //Send query\n        $.post(\n            \"sources/items.queries.php\", {\n                type: \"generate_OTV_url\",\n                id: store.get('teampassItem').id,\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //check if format error\n                if (data.error == \"\") {\n                    $('#form-item-otv-link').val(data.url);\n                    // prepare clipboard\n                    var clipboard = new ClipboardJS(\"#form-item-otv-copy-button\", {\n                        text: function() {\n                            return data.url;\n                        }\n                    });\n                    clipboard.on('success', function(e) {\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('copy_to_clipboard'); ?>',\n                            '', {\n                                timeOut: 2000,\n                                positionClass: 'toast-top-right',\n                                progressBar: true\n                            }\n                        );\n                        e.clearSelection();\n                    });\n                }\n            },\n            \"json\"\n        );\n    }\n\n    /**\n     */\n    function getPrivilegesOnItem(val, edit, context) {\n        context = context || \"\"; // make context optional\n\n        // make sure to use correct selected folder\n        if (val === false) {\n            val = selectedFolderId;\n        }\n        if (debugJavascript === true) console.log('Get privilege for folder ' + val);\n            \n        if (val === \"\" || typeof val === \"undefined\" || val === false) {\n            toastr.remove();\n            toastr.error(\n                '',\n                '<?php echo langHdl('please_select_a_folder'); ?>',\n                {\n                    timeOut: 5000,\n                    positionClass: 'toast-top-right',\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        return $.post(\n            \"sources/items.queries.php\", {\n                type: \"get_complixity_level\",\n                folder_id: val,\n                context: context,\n                item_id: store.get('teampassItem').id,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'get_complixity_level');\n\n                if (debugJavascript === true) {\n                    console.info('GET COMPLEXITY LEVEL');\n                    console.log(data);\n                }\n                var executionStatus = true;\n\n                if (data.error === false) {\n                    // Do some prepartion\n\n                    // Prepare list of users where needed\n                    $('#form-item-restrictedto, #form-item-anounce').empty().change(); //.val('')\n                    // Users restriction list\n                    var html_restrictions = '';\n\n                    $(data.usersList).each(function(index, value) {\n                        // Prepare list for FORM\n                        $(\"#form-item-restrictedto\")\n                            .append('<option value=\"' + value.id + '\" class=\"restriction_is_user\">' + value.name + '</option>');\n\n                        // Prepare list of emailers\n                        $('#form-item-anounce').append('<option value=\"' + value.email + '\">' + value.name + '</option>');\n                    });\n                    if (data.setting_restricted_to_roles === 1) {\n                        //add optgroup\n                        var optgroup = $('<optgroup label=\"<?php echo langHdl('users'); ?>\">');\n                        $(\".restriction_is_user\").wrapAll(optgroup);\n\n                        // Now add the roles to the list\n                        $(data.rolesList).each(function(index, value) {\n                            $(\"#form-item-restrictedto\")\n                                .append('<option value=\"role_' + value.id + '\" class=\"restriction_is_role\">' +\n                                    value.title + '</option>');\n                        });\n                        /// Add a group label for Groups\n                        $('.restriction_is_role').wrapAll($('<optgroup label=\"<?php echo langHdl('roles'); ?>\">'));\n                    }\n\n\n                    //\n                    $('#card-item-visibility').html(data.visibility);\n\n                    // Prepare Select2\n                    $('.select2').select2({\n                        language: '<?php echo $_SESSION['user_language_code']; ?>'\n                    });\n\n                    // Show selected restricted inputs\n                    $('#form-item-restrictedto')\n                        .val(data.usersList.concat(\n                            data.rolesList.map(i => 'role_' + i)))\n                        .change();\n\n                    // If restricted to Users then select them\n                    if (store.get('teampassItem').id_restricted_to !== undefined) {\n                        $('#form-item-restrictedto')\n                            .val(store.get('teampassItem').id_restricted_to)\n                            .trigger('change');\n                    }\n\n                }\n\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.folderId = val,\n                            teampassItem.error = data.error === undefined ? '' : data.error,\n                            teampassItem.message = data.message === undefined ? '' : data.message,\n                            teampassItem.folderComplexity = data.val === undefined ? '' : parseInt(data.val),\n                            teampassItem.folderIsPersonal = data.personal === undefined ? '' : parseInt(data.personal),\n                            teampassItem.itemMinimumComplexity = data.complexity === undefined ? '' : data.complexity,\n                            teampassItem.itemVisibility = data.visibility === undefined ? '' : data.visibility,\n                            teampassItem.id_restricted_to = data.usersList === undefined ? '' : data.usersList,\n                            teampassItem.id_restricted_to_roles = data.rolesList === undefined ? '' : data.rolesList,\n                            teampassItem.item_rights = data.itemAccessRight === undefined ? '' : data.itemAccessRight\n                    }\n                );\n                //if (debugJavascript === true) console.log('Content of teampassItem;')\n                //if (debugJavascript === true) console.log(store.get('teampassItem'))\n            }\n        );\n    }\n\n    $('.password-generate').click(function() {\n        var elementId = $(this).data('id');\n        $('#' + elementId).focus();\n        if (debugJavascript === true) console.log(elementId);\n\n        // If no criteria is set then do secure\n        var secure_pwd = false;\n        var anyBoxesChecked = false;\n        if ($('.password-definition:checked').length > 0) {\n            anyBoxesChecked = true;\n        }\n        if (anyBoxesChecked === false || $('#pwd-definition-secure').prop('checked') === true) {\n            secure_pwd = true;\n        }\n        \n        $.post(\n            \"sources/main.queries.php\", {\n                type: \"generate_password\",\n                type_category: 'action_user',\n                size: $('#pwd-definition-size').val(),\n                lowercase: $('#pwd-definition-lcl').prop(\"checked\"),\n                numerals: $('#pwd-definition-numeric').prop(\"checked\"),\n                capitalize: $('#pwd-definition-ucl').prop(\"checked\"),\n                symbols: $('#pwd-definition-symbols').prop(\"checked\"),\n                secure_pwd: secure_pwd,\n                force: \"false\",\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                if (debugJavascript === true) console.log(data)\n                if (data.error == \"true\") {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        data.error_msg,\n                        '<?php echo langHdl('error'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                } else {\n                    $(\"#\" + elementId).val(data.key).focus();\n\n                    // Form has changed\n                    userDidAChange = true;\n                    if (debugJavascript === true) console.log('User did a change during generate_password > ' + userDidAChange);\n                    //$('#' + elementId).attr('data-change-ongoing', true);;\n\n                    $(\"#form-item-password\").pwstrength(\"forceUpdate\");\n\n                    // SHow button in sticky footer\n                    //$('#form-item-buttons').addClass('sticky-footer');\n                }\n            }\n        );\n    });\n\n    $('#item-button-password-copy').click(function() {\n        $('#form-item-password-confirmation').val($('#form-item-password').val());\n    });\n\n    /**\n     * On tag badge click, launch the search query\n     */\n    function searchItemsWithTags(criteria) {\n        if (criteria !== '') {\n            $('#folders-tree-card, .columns-position').removeClass('hidden');\n            $('.item-details-card, .form-item-action, .form-item, .form-folder-action').addClass('hidden');\n\n            $('#find_items').val(criteria);\n\n            searchItems(criteria);\n        }\n    }\n\n    /**\n     * Checks if string is base64 encoded\n     *\n     * @return bool\n     */\n    function isBase64(str) {\n        try {\n            return btoa(atob(str)) == str;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    /**\n     * Scroll back to previous vertical position\n     *\n     * @return void\n     */\n    function scrollBackToPosition() {\n        // Scroll back to position\n        if (store.get('teampassApplication').tempScrollTop > 0) {\n            window.scrollTo({\n                top: store.get('teampassApplication').tempScrollTop\n            });\n        }\n    }\n\n\n    function prepareFolderDragNDrop()\n    {\n        $('.is-draggable').draggable({\n            cursor: 'move',\n            cursorAt: {\n                top: -5,\n                left: -5\n            },\n            opacity: 0.8,\n            appendTo: 'body',\n            stop: function(event, ui) {\n                $(this).removeClass('bg-warning');\n            },\n            start: function(event, ui) {\n                $(this).addClass('bg-warning');\n            },\n            helper: function(event) {\n                return $('<div class=\"bg-gray p-2 font-weight-light\">' + $(this).find('.list-item-row-description').text() + '</div>');\n            }\n        });\n        $('.folder').droppable({\n            hoverClass: 'bg-warning',\n            tolerance: 'pointer',\n            drop: function(event, ui) {\n                // Check if same folder\n                if (parseInt($(this).attr('id').substring(4)) === parseInt(ui.draggable.data('item-tree-id'))) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('error_not_allowed_to'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n\n                // Warn user that it starts\n                toastr.info(\n                    '<i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>'\n                );\n\n                // Hide helper\n                ui.draggable.addClass('hidden');\n\n                //move item\n                var data = {\n                    'item_id': ui.draggable.data('item-id'),\n                    'folder_id': $(this).attr('id').substring(4)\n                }\n                $.post(\n                    'sources/items.queries.php', {\n                        type: 'move_item',\n                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'move_item');\n\n                        if (debugJavascript === true) console.log(data)\n\n                        if (data.error === true) {\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                            ui.draggable.removeClass('hidden');\n                            return false;\n                        }\n                        \n                        //increment / decrement number of items in folders\n                        $('#itcount_' + data.from_folder).text(refreshFolderCounters($('#itcount_' + data.from_folder).text(), 'decrement'));\n                        $('#itcount_' + data.to_folder).text(refreshFolderCounters($('#itcount_' + data.to_folder).text(), 'increment'));\n\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('success'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                );\n            }\n        });\n    }\n\n    /**\n     * Permits to refresh the folder counters when performing an item drag and drop\n     */\n    function refreshFolderCounters(counter, operation)\n    {\n        var splitCounter = counter.split('/');\n        if (splitCounter.length <= 3) {\n            if (operation === 'increment') {\n                splitCounter[0]++;\n                if (splitCounter.length === 3) {\n                    splitCounter[1]++;\n                }\n            } else {\n                splitCounter[0]--;\n                if (splitCounter.length === 3) {\n                    splitCounter[1]--;\n                }\n            }\n        }\n        \n        return splitCounter.join('/');\n    }\n\n    /*\n    // Get parameters from url\n    var currentTeampassUrl = new URL(window.location.href);\n    var actionFromUrl = currentTeampassUrl.searchParams.get('action');\n    if (actionFromUrl !== undefined && atob(actionFromUrl) === 'reset_private_key') {\n        // Case where we need to re-encrypt all share keys\n        if (debugJavascript === true) console.log(\"ACTION RE-ENCRYPTION OF SHAREKEYS\");\n\n        $('#dialog-encryption-keys').removeClass('hidden');    \n\n        // Hide other\n        $('.content-header, .content').addClass('hidden');\n\n        alertify.dismissAll();\n    }\n    */\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      profile.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'profile', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    <?php if (isset($SETTINGS['api']) === true && (int) $SETTINGS['api'] === 1) : ?>\n        // If user api is empty then generate one\n        if ($('#profile-user-api-token').text() === '') {\n            generateNewUserApiKey('profile-user-api-token', true);\n        }\n\n        $('#profile-button-api_token').click(function() {\n            generateNewUserApiKey('profile-user-api-token', false);\n        });\n    <?php endif; ?>\n\n    //iCheck for checkbox and radio inputs\n    $('#tab_reset_psk input[type=\"checkbox\"]').iCheck({\n        checkboxClass: 'icheckbox_flat-blue'\n    })\n\n    // Select user properties\n    $('#profile-user-language option[value=<?php echo $_SESSION['user']['user_language'];?>').attr('selected','selected');\n\n\n    // AVATAR IMPORT\n    var uploader_photo = new plupload.Uploader({\n        runtimes: 'gears,html5,flash,silverlight,browserplus',\n        browse_button: 'profile-avatar-file',\n        container: 'profile-avatar-file-container',\n        max_file_size: '2mb',\n        chunk_size: '1mb',\n        unique_names: true,\n        dragdrop: true,\n        multiple_queues: false,\n        multi_selection: false,\n        max_file_count: 1,\n        filters: [{\n            title: 'PNG files',\n            extensions: 'png'\n        }],\n        resize: {\n            width: '90',\n            height: '90',\n            quality: '90'\n        },\n        url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/upload.files.php',\n        flash_swf_url: '<?php echo $SETTINGS['cpassman_url']; ?>/includes/libraries/Plupload/Moxie.swf',\n        silverlight_xap_url: '<?php echo $SETTINGS['cpassman_url']; ?>/includes/libraries/Plupload/Moxie.xap',\n        init: {\n            FilesAdded: function(up, files) {\n                // generate and save token\n                $.post(\n                    'sources/main.queries.php', {\n                        type: 'save_token',\n                        type_category: 'action_system',\n                        size: 25,\n                        capital: true,\n                        secure: true,\n                        numeric: true,\n                        symbols: true,\n                        lowercase: true,\n                        reason: 'avatar_profile_upload',\n                        duration: 10,\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        $('#profile-user-token').val(data[0].token);\n                        up.start();\n                    },\n                    'json'\n                );\n            },\n            BeforeUpload: function(up, file) {\n                var tmp = Math.random().toString(36).substring(7);\n\n                up.settings.multipart_params = {\n                    'PHPSESSID': '<?php echo $_SESSION['user_id']; ?>',\n                    'type_upload': 'upload_profile_photo',\n                    'user_token': $('#profile-user-token').val()\n                };\n            },\n            FileUploaded: function(upldr, file, object) {\n                // Decode returned data\n                var myData = prepareExchangedData(object.response, 'decode', '<?php echo $_SESSION['key']; ?>');\n                // update form\n                $('#profile-user-avatar').attr('src', 'includes/avatars/' + myData.filename);\n                $('#profile-avatar-file-list').html('').addClass('hidden');\n            }\n        }\n    });\n\n    // Show runtime status\n    uploader_photo.bind('Init', function(up, params) {\n        $('#profile-plupload-runtime')\n            .html(params.runtime)\n            .removeClass('text-danger')\n            .addClass('text-info')\n            .data('enabled', 1);\n    });\n\n    // get error\n    uploader_photo.bind('Error', function(up, err) {\n        $('#profile-avatar-file-list').html('<div class=\"ui-state-error ui-corner-all\">Error: ' + err.code +\n            ', Message: ' + err.message +\n            (err.file ? ', File: ' + err.file.name : '') +\n            '</div>'\n        );\n        up.refresh(); // Reposition Flash/Silverlight\n    });\n\n    uploader_photo.init();\n\n\n    // Save user settings\n    $('#profile-user-save-settings').click(function() {\n        // Sanitize text fields\n        let formName = fieldDomPurifier('#profile-user-name', false, false, false),\n            formLastname = fieldDomPurifier('#profile-user-lastname', false, false, false),\n            formEmail = fieldDomPurifier('#profile-user-email', false, false, false);\n        if (formName === false || formLastname === false || formEmail === false) {\n            // Label is empty\n            toastr.remove();\n            toastr.warning(\n                'XSS attempt detected. Field has been emptied.',\n                'Error', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Prepare data\n        var data = {\n            'name': formName,\n            'lastname': formLastname,\n            'email': formEmail,\n            'timezone': $('#profile-user-timezone').val(),\n            'language': $('#profile-user-language').val().toLowerCase(),\n            'treeloadstrategy': $('#profile-user-treeloadstrategy').val().toLowerCase(),\n            'agsescardid': $('#profile-user-agsescardid').length > 0 ? $('#profile-user-agsescardid').val() : '',\n        }\n        console.log(data);\n        //return false;\n        // \" onmouseover=\"confirm(document.cookie)\"\n        // Inform user\n        toastr.remove();\n        toastr.info('<i class=\"fas fa-cog fa-spin fa-2x\"></i>');\n\n        //Send query\n        $.post(\n            \"sources/users.queries.php\", {\n                type: 'user_profile_update',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                isprofileupdate: true,\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //decrypt data\n                try {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                } catch (e) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        'An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />' + data,\n                        '', {\n                            closeButton: true\n                        }\n                    );\n                    return false;\n                }\n\n                if (data.error === true) {\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            closeButton: true\n                        }\n                    );\n                } else {\n                    $('#profile-username').html(data.name + ' ' + data.lastname);\n                    $('#profile-user-name').val(data.name)\n                    $('#profile-user-lastname').val(data.lastname)\n                    $('#profile-user-email').val(data.email)\n\n                    // reload page in case of language change\n                    if ($('#profile-user-language').val().toLowerCase() !== '<?php echo $_SESSION['user']['user_language'];?>') {\n                        // prepare reload\n                        $(this).delay(3000).queue(function() {\n                            document.location.href = \"index.php?page=profile\";\n\n                            $(this).dequeue();\n                        });\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('alert_page_will_reload') . ' ... ' . langHdl('please_wait'); ?>',\n                            '', {\n                                timeOut: 3000,\n                                progressBar: true\n                            }\n                        );\n\n                    } else {\n                        // just inform user\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 2000,\n                                progressBar: true\n                            }\n                        );\n\n                        // Force tree refresh\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.jstreeForceRefresh = 1\n                            }\n                        );\n                    }\n                }\n\n            }\n        );\n    });\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function generateNewUserApiKey(target, silent) {\n        var newApiKey = \"\";\n\n        // Generate key\n        $.post(\n            \"sources/main.queries.php\", {\n                type: \"generate_password\",\n                type_category: 'action_user',\n                size: \"39\",\n                lowercase: \"true\",\n                numerals: \"true\",\n                capitalize: \"true\",\n                symbols: \"false\",\n                secure: \"false\",\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n\n                if (data.key !== \"\") {\n                    newApiKey = data.key;\n\n                    // Save key in session and database\n                    var data = {\n                        'field' : 'user_api_key',\n                        'value' : newApiKey[0],\n                        'user_id' : <?php echo $_SESSION['user_id']; ?>,\n                        'context' : '',\n                    };\n                    console.log(data)\n                    \n                    $.post(\n                        \"sources/users.queries.php\", {\n                            type: \"save_user_change\",\n                            data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                            isprofileupdate: true,\n                            key: \"<?php echo $_SESSION['key']; ?>\"\n                        },\n                        function(data) {\n                            data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                            $(\"#\" + target).text(newApiKey);\n                            if (silent === false) {\n                                $('#profile-tabs a[href=\"#tab_information\"]').tab('show');\n                                toastr.remove();\n                                toastr.info(\n                                    '<?php echo langHdl('done'); ?>',\n                                    '', {\n                                        timeOut: 2000,\n                                        progressBar: true\n                                    }\n                                );\n                            }\n                        }\n                    );\n                }\n            }\n        );\n    }\n\n\n    //-------------------\n    $(\"#profile-password\").simplePassMeter({\n        \"requirements\": {},\n        \"container\": \"#profile-password-strength\",\n        \"defaultText\": \"<?php echo langHdl('index_pw_level_txt'); ?>\",\n        \"ratings\": [\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_1;?>,\n                \"className\": \"meterWarn\",\n                \"text\": \"<?php echo langHdl('complex_level1'); ?>\"\n            },\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_2;?>,\n                \"className\": \"meterWarn\",\n                \"text\": \"<?php echo langHdl('complex_level2'); ?>\"\n            },\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_3;?>,\n                \"className\": \"meterGood\",\n                \"text\": \"<?php echo langHdl('complex_level3'); ?>\"\n            },\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_4;?>,\n                \"className\": \"meterGood\",\n                \"text\": \"<?php echo langHdl('complex_level4'); ?>\"\n            },\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_5;?>,\n                \"className\": \"meterExcel\",\n                \"text\": \"<?php echo langHdl('complex_level5'); ?>\"\n            }\n        ]\n    });\n    $(\"#profile-password\").bind({\n        \"score.simplePassMeter\": function(jQEvent, score) {\n            $(\"#profile-password-complex\").val(score);\n        }\n    }).change({\n        \"score.simplePassMeter\": function(jQEvent, score) {\n            $(\"#profile-password-complex\").val(score);\n        }\n    });\n\n    $('#profile-save-password-change').click(function() {\n        // Check if passwords are the same\n        if ($('#profile-password').val() !== $('#profile-password-confirm').val() ||\n            $('#profile-password').val() === '' ||\n            $('#profile-password-confirm').val() === ''\n        ) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('index_pw_error_identical'); ?>',\n                '', {\n                    timeOut: 10000,\n                    closeButton: true,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n        // Inform user\n        toastr.remove();\n        toastr.info('<i class=\"fas fa-cog fa-spin fa-2x\"></i>');\n\n        var data = {\n            'new_pw': DOMPurify.sanitize($('#profile-password').val()),\n            'complexity': $('#profile-password-complex').val(),\n            \"change_request\": 'user_decides_to_change_password',\n            \"user_id\": store.get('teampassUser').user_id,\n        };\n\n        //Send query\n        $.post(\n            \"sources/main.queries.php\", {\n                type: \"change_pw\",\n                type_category: 'action_password',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                console.log(data);\n\n                if (data.error === true) {\n                    $('#profile-password').focus();\n                    toastr.remove();\n                    toastr.warning(\n                        '<?php echo langHdl('your_attention_is_required'); ?>',\n                        data.message, {\n                            timeOut: 10000,\n                            closeButton: true,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $('#profile-password, #profile-password-confirm').val('');\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        data.message, {\n                            timeOut: 2000,\n                            progressBar: true\n                        }\n                    );\n\n                    window.location.href = \"index.php\";\n                }\n\n            }\n        );\n    });\n\n\n    // ----\n    $(\"#profile-saltkey\").simplePassMeter({\n        \"requirements\": {},\n        \"container\": \"#profile-saltkey-strength\",\n        \"defaultText\": \"<?php echo langHdl('index_pw_level_txt'); ?>\",\n        \"ratings\": [\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_1;?>,\n                \"className\": \"meterWarn\",\n                \"text\": \"<?php echo langHdl('complex_level1'); ?>\"\n            },\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_2;?>,\n                \"className\": \"meterWarn\",\n                \"text\": \"<?php echo langHdl('complex_level2'); ?>\"\n            },\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_3;?>,\n                \"className\": \"meterGood\",\n                \"text\": \"<?php echo langHdl('complex_level3'); ?>\"\n            },\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_4;?>,\n                \"className\": \"meterGood\",\n                \"text\": \"<?php echo langHdl('complex_level4'); ?>\"\n            },\n            {\n                \"minScore\": <?php echo TP_PW_STRENGTH_5;?>,\n                \"className\": \"meterExcel\",\n                \"text\": \"<?php echo langHdl('complex_level5'); ?>\"\n            }\n        ]\n    });\n    $(\"#profile-saltkey\").bind({\n        \"score.simplePassMeter\": function(jQEvent, score) {\n            $(\"#profile-saltkey-complex\").val(score);\n        }\n    }).change({\n        \"score.simplePassMeter\": function(jQEvent, score) {\n            $(\"#profile-saltkey-complex\").val(score);\n        }\n    });\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      roles.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'profile', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    // Manage memory\n    browserSession(\n        'init',\n        'teampassApplication', {\n            lastItemSeen: '',\n            selectedFolder: '',\n            itemsListStop: '',\n            itemsListStart: '',\n            selectedFolder: '',\n            itemsListFolderId: '',\n            itemsListRestricted: '',\n            itemsShownByQuery: '',\n            foldersList: [],\n            personalSaltkeyRequired: 0,\n            uploadedFileId: '',\n            rolesSelectOptions: '',\n        }\n    );\n\n    // Globals\n    var currentThis = '';\n\n    // Preapre select drop list\n    $('#roles-list.select2').select2({\n        language: '<?php echo $_SESSION['user_language_code']; ?>',\n        placeholder: '<?php echo langHdl('select_a_role'); ?>',\n        allowClear: true\n    });\n    $('#roles-list').val('').change();\n\n    // Populate\n    var $options = $(\"#roles-list > option\").clone();\n    $('#folders-compare').append($options);\n\n\n\n    $('#form-complexity-list.select2').select2({\n        language: '<?php echo $_SESSION['user_language_code']; ?>'\n    });\n\n    //iCheck for checkbox and radio inputs\n    $('input[type=\"checkbox\"]').iCheck({\n        checkboxClass: 'icheckbox_flat-blue'\n    });\n\n    // On role selection\n    $(document).on('change', '#roles-list', function() {\n        // initi checkboxes\n        $('input[type=\"checkbox\"]').iCheck('uncheck');\n        if ($(this).find(':selected').text() === '') {\n            // Hide\n            $('#card-role-details').addClass('hidden');\n            $('#button-edit, #button-delete').addClass('disabled');\n        } else {\n            var selectedRoleId = $(this).find(':selected').val();\n            $('#button-edit, #button-delete').removeClass('disabled');\n\n            // Prepare card header\n            $('#role-detail-header').html(\n                $(this).find(':selected').text() +\n                ' <i class=\"' + $(this).find(':selected').data('complexity-icon') + ' infotip ml-3\" ' +\n                'title=\"<?php echo langHdl('complexity'); ?>: ' +\n                $(this).find(':selected').data('complexity-text') + '\"></i>' +\n                (parseInt($(this).find(':selected').data('allow-edit-all')) === 1 ?\n                    '<i class=\"ml-3 fas fa-exclamation-triangle text-warning infotip\" ' +\n                    'title=\"<?php echo langHdl('role_can_edit_any_visible_item'); ?>\"></i>' :\n                    '')\n            );\n\n            $('.infotip').tooltip();\n\n            refreshMatrix(selectedRoleId);\n        }\n    });\n\n    /**\n     */\n    function refreshMatrix(selectedRoleId) {\n        // Show\n        $('#card-role-details').removeClass('hidden');\n\n        // \n        $('#role-details').html('');\n\n        // Show spinner\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Build matrix\n        $.post(\n            'sources/roles.queries.php', {\n                type: 'build_matrix',\n                role_id: selectedRoleId,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                console.log(data);\n                if (data.error === true) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Build html\n                    var newHtml = '',\n                        ident = '',\n                        path = '',\n                        max_folder_depth = 1;\n                    $(data.matrix).each(function(i, value) {\n                        // Access\n                        access = '';\n                        if (value.access === 'W') {\n                            access = '<i class=\"fas fa-indent mr-2 text-success infotip\" title=\"<?php echo langHdl('add_allowed'); ?>\"></i>' +\n                                '<i class=\"fas fa-pen mr-2 text-success infotip\" title=\"<?php echo langHdl('edit_allowed'); ?>\"></i>' +\n                                '<i class=\"fas fa-eraser mr-2 text-success infotip\" title=\"<?php echo langHdl('delete_allowed'); ?>\"></i>';\n                        } else if (value.access === 'ND') {\n                            access = '<i class=\"fas fa-indent mr-2 text-success infotip\" title=\"<?php echo langHdl('add_allowed'); ?>\"></i>' +\n                                '<i class=\"fas fa-pen mr-2 text-success infotip\" title=\"<?php echo langHdl('edit_allowed'); ?>\"></i>' +\n                                '<i class=\"fas fa-eraser mr-2 text-danger infotip\" title=\"<?php echo langHdl('delete_not_allowed'); ?>\"></i>';\n                        } else if (value.access === 'NE') {\n                            access = '<i class=\"fas fa-indent mr-2 text-success infotip\" title=\"<?php echo langHdl('add_allowed'); ?>\"></i>' +\n                                '<i class=\"fas fa-pen mr-2 text-danger infotip\" title=\"<?php echo langHdl('edit_not_allowed'); ?>\"></i>' +\n                                '<i class=\"fas fa-eraser mr-2 text-success infotip\" title=\"<?php echo langHdl('delete_allowed'); ?>\"></i>';\n                        } else if (value.access === 'NDNE') {\n                            access = '<i class=\"fas fa-indent mr-2 text-success infotip\" title=\"<?php echo langHdl('add_allowed'); ?>\"></i>' +\n                                '<i class=\"fas fa-pen mr-2 text-danger infotip\" title=\"<?php echo langHdl('edit_not_allowed'); ?>\"></i>' +\n                                '<i class=\"fas fa-eraser mr-2 text-danger infotip\" title=\"<?php echo langHdl('delete_not_allowed'); ?>\"></i>';\n                        } else if (value.access === 'R') {\n                            access = '<i class=\"fas fa-book-reader mr-2 text-warning infotip\" title=\"<?php echo langHdl('read_only'); ?>\"></i>';\n                        } else {\n                            access = '<i class=\"fas fa-ban mr-2 text-danger infotip\" title=\"<?php echo langHdl('no_access'); ?>\"></i>';\n                        }\n\n                        // Build path\n                        path = '';\n                        $(value.path).each(function(j, valuePath) {\n                            if (path === '') {\n                                path = valuePath;\n                            } else {\n                                path += ' / ' + valuePath;\n                            }\n                        });\n\n                        // Max depth\n                        if (parseInt(value.ident) > max_folder_depth) {\n                            max_folder_depth = parseInt(value.ident);\n                        }\n\n                        // Finalize\n                        newHtml += '<tr data-level=\"' + value.ident + '\" class=\"' + (value.ident === 1 ? 'parent' : 'descendant') + '\" data-id=\"' + value.id + '\">' +\n                            '<td width=\"35px\"><input type=\"checkbox\" id=\"cb-' + value.id + '\" data-id=\"' + value.id + '\" class=\"folder-select\"></td>' +\n                            '<td class=\"pointer modify folder-name\" data-id=\"' + value.id + '\" data-access=\"' + value.access + '\">' + value.title + '</td>' +\n                            '<td class=\"font-italic pointer modify\" data-id=\"' + value.id + '\" data-access=\"' + value.access + '\"><small class=\"text-muted\">' + path + '</small></td>' +\n                            '<td class=\"pointer modify td-100 text-center\" data-id=\"' + value.id + '\" data-access=\"' + value.access + '\">' + access + '</td>' +\n                            '<td class=\"hidden compare tp-borders td-100 text-center\"></td>'\n                        '</tr>'\n                    });\n\n                    // Show result\n                    $('#role-details').html(\n                        '<table id=\"table-role-details\" class=\"table table-hover table-striped table-responsive\" style=\"width:100%\"><tbody>' +\n                        newHtml +\n                        '</tbody></table>'\n                    );\n\n                    //iCheck for checkbox and radio inputs\n                    $('#role-details input[type=\"checkbox\"]').iCheck({\n                        checkboxClass: 'icheckbox_flat-blue'\n                    });\n\n                    $('.infotip').tooltip();\n\n                    // Adapt select\n                    $('#folders-depth').val('').change();\n                    $('#folders-depth').append('<option value=\"all\"><?php echo langHdl('all'); ?></option>');\n                    for (x = 1; x < max_folder_depth; x++) {\n                        $('#folders-depth').append('<option value=\"' + x + '\">' + x + '</option>');\n                    }\n                    $('#folders-depth').val('all').change();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n                    // Now check if role comparision is enabled\n                    if ($('#folders-compare').val() !== '') {\n                        buildRoleCompare(store.get('teampassUser').compareRole);\n                    }\n                }\n            }\n        );\n    }\n\n    var operationOngoin = false;\n    $(document).on('ifChecked', '.folder-select', function() {\n        if (operationOngoin === false) {\n            operationOngoin = true;\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Show selection of folders\n            var selected_cb = $(this),\n                id = $(this).data('id');\n\n            // change language string\n            if ($(this).attr('id') === 'cb-all-selection') {\n                $('#cb-all-selection-lang').html('<?php echo langHdl('unselect_all'); ?>');\n            }\n\n            // Now get subfolders\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'select_sub_folders',\n                    id: id,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    // check/uncheck checkbox\n                    if (data.subfolders !== '') {\n                        $.each(JSON.parse(data.subfolders), function(i, value) {\n                            $('#cb-' + value).iCheck('check');\n                        });\n                    }\n                    operationOngoin = false;\n\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            );\n        }\n    });\n\n    $(document).on('ifUnchecked', '.folder-select', function() {\n        if (operationOngoin === false) {\n            operationOngoin = true;\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Show selection of folders\n            var selected_cb = $(this),\n                id = $(this).data('id');\n\n            // change language string\n            if ($(this).attr('id') === 'cb-all-selection') {\n                $('#cb-all-selection-lang').html('<?php echo langHdl('select_all'); ?>');\n            }\n\n            // Now get subfolders\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'select_sub_folders',\n                    id: id,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    // check/uncheck checkbox\n                    if (data.subfolders !== '') {\n                        $.each(JSON.parse(data.subfolders), function(i, value) {\n                            $('#cb-' + value).iCheck('uncheck');\n                        });\n                    }\n                    operationOngoin = false;\n\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            );\n        }\n    });\n\n    /**\n     * Handle the form for folder access rights change\n     */\n    var currentFolderEdited = '';\n    $(document).on('click', '.modify', function() {\n        // Manage edition of rights card\n        if (currentFolderEdited !== '' && currentFolderEdited !== $(this).data('id')) {\n            $('.temp-row').remove();\n        } else if (currentFolderEdited === $(this).data('id')) {\n            $('.temp-row').remove();\n            currentFolderEdited = '';\n            return false;\n        }\n\n        // Init\n        var currentRow = $(this).closest('tr'),\n            folderAccess = $(this).data('access');\n        currentFolderEdited = $(this).data('id');\n\n        // Now show\n        $(currentRow).after(\n            '<tr class=\"temp-row\"><td colspan=\"' + $(currentRow).children('td').length + '\">' +\n            '<div class=\"card card-warning card-outline\">' +\n            '<div class=\"card-body\">' +\n            '<div class=\"form-group ml-2 mt-2\"><?php echo langHdl('right_types_label'); ?></div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<input type=\"radio\" class=\"form-radio-input form-control ml-1\" id=\"right-write\" name=\"right\" data-type=\"W\">' +\n            '<label class=\"form-radio-label pointer mr-2\" for=\"right-write\"><?php echo langHdl('write'); ?></label>' +\n            '<input type=\"radio\" class=\"form-radio-input form-control ml-1\" id=\"right-read\" name=\"right\" data-type=\"R\">' +\n            '<label class=\"form-radio-label pointer mr-2\" for=\"right-read\"><?php echo langHdl('read'); ?></label>' +\n            '<input type=\"radio\" class=\"form-radio-input form-control ml-1\" id=\"right-noaccess\" name=\"right\" data-type=\"\">' +\n            '<label class=\"form-radio-label pointer\" for=\"right-noaccess\"><?php echo langHdl('no_access'); ?></label>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\" id=\"folder-rights-tuned\">' +\n            '<div class=\"form-check\">' +\n            '<input type=\"checkbox\" class=\"form-check-input form-control cb-right\" id=\"right-no-delete\">' +\n            '<label class=\"form-check-label pointer ml-2\" for=\"right-no-delete\"><?php echo langHdl('role_cannot_delete_item'); ?></label>' +\n            '</div>' +\n            '<div class=\"form-check\">' +\n            '<input type=\"checkbox\" class=\"form-check-input form-control cb-right\" id=\"right-no-edit\">' +\n            '<label class=\"form-check-label pointer ml-2\" for=\"right-no-edit\"><?php echo langHdl('role_cannot_edit_item'); ?></label>' +\n            '</div>' +\n            '</div>' +\n            '<div class=\"callout callout-danger\">' +\n            '<div class=\"form-group mt-2\">' +\n            '<input type=\"checkbox\" class=\"form-check-input form-item-control\" id=\"propagate-rights-to-descendants\">' +\n            '<label class=\"form-check-label ml-2\" for=\"propagate-rights-to-descendants\">' +\n            '<?php echo langHdl('propagate_rights_to_descendants'); ?>' +\n            '</label>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '<div class=\"card-footer\">' +\n            '<button type=\"button\" class=\"btn btn-warning tp-action\" data-action=\"submit\" data-id=\"' + currentFolderEdited + '\"><?php echo langHdl('submit'); ?></button>' +\n            '<button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>' +\n            '</div>' +\n            '</div>' +\n            '</td></tr>'\n        );\n\n        // Prepare iCheck format for checkboxes\n        $('input[type=\"checkbox\"].form-check-input, input[type=\"radio\"].form-radio-input').iCheck({\n            radioClass: 'iradio_flat-orange',\n            checkboxClass: 'icheckbox_flat-orange',\n        });\n\n        // Uncheck the checkboxes\n        $('#right-no-delete').iCheck('uncheck');\n        $('#right-no-edit').iCheck('uncheck');\n\n        // Prepare radio and checkboxes depending on existing right on selected folder\n        if (folderAccess === 'R') {\n            $('#right-read').iCheck('check');\n            $('.cb-right').iCheck('disable');\n        } else if (folderAccess === 'none') {\n            $('#right-noaccess').iCheck('check');\n            $('.cb-right').iCheck('disable');\n        } else if (folderAccess === 'W') {\n            $('#right-write').iCheck('check');\n        } else if (folderAccess === 'ND') {\n            $('#right-write').iCheck('check');\n            $('#right-no-delete').iCheck('check');\n        } else if (folderAccess === 'NE') {\n            $('#right-write').iCheck('check');\n            $('#right-no-edit').iCheck('check');\n        } else if (folderAccess === 'NDNE') {\n            $('#right-write').iCheck('check');\n            $('#right-no-edit, #right-no-delete').iCheck('check');\n        }\n    });\n\n    /**\n     * Handle the rights change buttons\n     */\n    $(document).on('click', 'button', function() {\n        // Init\n        var selectedFolderText = $('#roles-list').find(':selected').text();\n        console.log(\"Click: \"+$(this).data('action'));\n\n        if ($(this).data('action') === 'cancel-edition') {\n            $('#card-role-definition').addClass('hidden');\n            $('#card-role-details, #card-role-selection').removeClass('hidden');\n            $('#form-role-label').val('');\n            $('#form-role-delete').iCheck('uncheck');\n\n        } else if ($(this).data('action') === 'cancel-deletion') {\n            $('#card-role-details, #card-role-selection').removeClass('hidden');\n            $('#card-role-deletion').addClass('hidden');\n            $('#form-role-delete').iCheck('uncheck');\n            $('#form-role-delete').iCheck('uncheck');\n\n        } else if ($(this).data('action') === 'cancel-ldap') {\n            $('#card-role-selection').removeClass('hidden');\n            $('#card-roles-ldap-sync').addClass('hidden');\n            //$('#form-role-delete').iCheck('uncheck');\n            //$('#form-role-delete').iCheck('uncheck');\n\n        } else if ($(this).data('action') === 'submit-edition') {\n            // STORE ROLE CHANGES\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Sanitize value\n            value = fieldDomPurifierWithWarning('#form-role-label');\n            if (value === false) {\n                return false;\n            }\n            $('#form-role-label').val(value);\n\n            // Prepare data\n            var data = {\n                'label': value,\n                'complexity': $('#form-complexity-list').val() === null ? 0 : $('#form-complexity-list').val(),\n                'folderId': $('#roles-list').find(':selected').val(),\n                'allowEdit': $('#form-role-privilege').is(\":checked\") === true ? 1 : 0,\n                'action': store.get('teampassApplication').formUserAction\n            }\n            var oldLabel = selectedFolderText;\n            console.log(data);\n\n            // Launch action\n            $.post(\n                'sources/roles.queries.php', {\n                    type: 'change_role_definition',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) { //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');                    \n                    console.log('DID CHANGES')\n                    console.log(data);\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        if (store.get('teampassApplication').formUserAction === 'edit_role') {\n                            // Adapt card header\n                            $('#role-detail-header').html(\n                                $('#form-role-label').val() +\n                                '<i class=\"' + data.icon + ' infotip ml-3\" ' +\n                                'title=\"<?php echo langHdl('complexity'); ?>: ' +\n                                $('#form-complexity-list').find(':selected').text() + '\"></i>' +\n                                (parseInt(data.allow_pw_change) === 1 ?\n                                    '<i class=\"ml-3 fas fa-exclamation-triangle text-warning infotip\" ' +\n                                    'title=\"<?php echo langHdl('role_can_edit_any_visible_item'); ?>\"></i>' :\n                                    '')\n                            );\n                            $('.infotip').tooltip();\n                        } else {\n                            // Add new folder to roles listbox\n                            var newOption = new Option(\n                                $('#form-role-label').val(),\n                                data.new_role_id,\n                                false,\n                                true\n                            );\n                            $('#roles-list').append(newOption).trigger('change');\n                        }\n\n                        // Manage change in select\n                        $(\"#roles-list\").select2(\"destroy\");\n                        var selectedOption = $('#roles-list option[value=' + $('#roles-list').find(':selected').val() + ']');\n                        selectedOption.text($('#form-role-label').val());\n                        selectedOption.data('allow-edit-all', data.allow_pw_change);\n                        selectedOption.data('complexity-text', data.text);\n                        selectedOption.data('complexity-icon', data.icon);\n                        selectedOption.data('complexity', data.value);\n                        $(\"#roles-list\").select2();\n\n                        // Misc\n                        $('#card-role-definition').addClass('hidden');\n                        $('#card-role-details, #card-role-selection').removeClass('hidden');\n                        $('#form-role-label').val('');\n\n                        // OK\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //---\n        } else if ($(this).data('action') === 'edit' && $('#button-edit').hasClass('disabled') === false) {\n            // SHOW ROLE EDITION FORM\n            if ($('#card-role-details').hasClass('hidden') === false) {\n                $('#form-role-label').val(selectedFolderText);\n                $('#form-complexity-list').val($('#roles-list').find(':selected').data('complexity')).trigger('change');\n\n                if (parseInt($('#roles-list').find(':selected').data('allow-edit-all')) === 1) {\n                    $('#form-role-privilege').iCheck('check');\n                } else {\n                    $('#form-role-privilege').iCheck('uncheck');\n                }\n\n                // What type of form? Edit or new user\n                store.update(\n                    'teampassApplication',\n                    function(teampassApplication) {\n                        teampassApplication.formUserAction = 'edit_role';\n                    }\n                );\n\n                // Show form\n                $('#card-role-definition').removeClass('hidden');                \n                $('#card-role-deletion, #card-role-details, #card-role-selection').addClass('hidden');\n                $('#form-role-label').focus();\n            }\n            //---\n        } else if ($(this).data('action') === 'delete' && $('#button-delete').hasClass('disabled') === false) {\n            // SHOW ROLE DELETION FORM\n            if ($('#card-role-details').hasClass('hidden') === false) {\n                $('#span-role-delete').html('- <?php echo langHdl('role'); ?> <b>' + selectedFolderText + '</b>');\n\n                $('#card-role-deletion').removeClass('hidden');\n                $('#card-role-definition, #card-role-details, #card-role-selection').addClass('hidden');\n            }\n        \n        } else if ($(this).data('action') === 'ldap') {\n            // SHOW LDAP SYNC FORM\n            console.log('LDAP SYNC');\n            if ($('#card-roles-ldap-sync').hasClass('hidden') === true) {\n                //$('#span-role-delete').html('- <?php echo langHdl('role'); ?> <b>' + selectedFolderText + '</b>');\n\n                $('#card-roles-ldap-sync').removeClass('hidden');\n                $('#card-role-definition, #card-role-details, #card-role-selection').addClass('hidden');\n\n                refreshLdapGroups();\n            }\n\n        } else if ($(this).data('action') === 'ldap-refresh') {\n            // REFRESH LDAP GROUPS LIST\n            refreshLdapGroups();\n\n        } else if ($(this).data('action') === 'new') {\n            // SHOW NEW FOLDER DEFINITION\n            $('#form-role-label').val('');\n            $('#form-role-privilege').iCheck('uncheck');\n            $(\"#form-complexity-list\").val('').trigger('change');\n\n            // What type of form? Edit or new user\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = 'add_role';\n                }\n            );\n\n            $('#card-role-definition').removeClass('hidden');\n            $('#card-role-deletion, #card-role-details, #card-role-selection').addClass('hidden');\n            $('#form-role-label').focus();\n            //---\n        } else if ($(this).data('action') === 'cancel') {\n            $('.temp-row').remove();\n            //---\n        } else if ($(this).data('action') === 'submit') {\n            // Store the new access rights for the selected folder(s)\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Get list of selected folders\n            var selectedFolders = [];\n            $(\"input:checkbox[class=folder-select]:checked\").each(function() {\n                selectedFolders.push($(this).data('id'));\n            });\n            if (selectedFolders.length === 0) {\n                selectedFolders.push($(this).data('id'));\n            }\n\n            // Get defined rights\n            var access = $('input[name=right]:checked').data('type');\n            if ($('#right-no-delete').is(':checked') === true &&\n                $('#right-no-edit').is(':checked') === true\n            ) {\n                access = 'NDNE';\n            } else if ($('#right-no-delete').is(':checked') === true &&\n                $('#right-no-edit').is(':checked') === false\n            ) {\n                access = 'ND';\n            } else if ($('#right-no-delete').is(':checked') === false &&\n                $('#right-no-edit').is(':checked') === true\n            ) {\n                access = 'NE';\n            }\n\n            // Prepare data\n            var data = {\n                'roleId': $('#roles-list').val(),\n                'selectedFolders': selectedFolders,\n                'access': access,\n                'propagate': $('#propagate-rights-to-descendants').is(':checked') === true ? 1 : 0,\n            }\n            console.log(data)\n            // Launch action\n            $.post(\n                'sources/roles.queries.php', {\n                    type: 'change_access_right_on_folder',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) { //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        refreshMatrix($('#roles-list').val());\n\n                        // OK\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n        } else if ($(this).data('action') === 'submit-deletion') {\n            // DELETE SELECTED ROLE\n\n            if ($('#form-role-delete').is(':checked') === false) {\n                return false;\n            }\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Prepare data\n            var data = {\n                'roleId': $('#roles-list').find(':selected').val(),\n            }\n\n            // Launch action\n            $.post(\n                'sources/roles.queries.php', {\n                    type: 'delete_role',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Manage change in select\n                        $(\"#roles-list\").select2(\"destroy\");\n                        var selectedOption = $('#roles-list option[value=' + $('#roles-list').find(':selected').val() + ']');\n                        selectedOption.remove();\n                        $(\"#roles-list\").select2({\n                            language: '<?php echo $_SESSION['user_language_code']; ?>',\n                            placeholder: '<?php echo langHdl('select_a_role'); ?>',\n                            allowClear: true\n                        });\n\n                        // Misc\n                        $('#card-role-deletion, #card-role-details').addClass('hidden');\n                        $('#card-role-selection').removeClass('hidden');\n                        $('#form-role-delete').iCheck('uncheck');\n\n                        // OK\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //---\n\n        } else if ($(this).data('action') === 'do-adgroup-role-mapping') {\n            var groupId = parseInt($(this).data('id')),\n                roleId = parseInt($('.select-role').val()),\n                groupTitle = $('.select-role option:selected').text();\n\n            if (roleId === '') {\n                return false;\n            }\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Prepare data\n            var data = {\n                'roleId': roleId,\n                'adGroupId': groupId,\n                'adGroupLabel': groupTitle,\n            }\n            console.log(data)\n\n            // Launch action\n            $.post(\n                'sources/roles.queries.php', {\n                    type: 'map_role_with_adgroup',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Manage change in select\n                        currentThis.html(groupTitle);\n\n                        // Clean\n                        $('.temp-row').remove();\n\n                        // OK\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //---\n        }\n        currentFolderEdited = '';\n    });\n\n\n    /**\n     * Refreshing list of groups from LDAP\n     *\n     * @return void\n     */\n    function refreshLdapGroups() {\n        // FIND ALL USERS IN LDAP\n        //toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n        $('#row-ldap-body')\n            .addClass('overlay')\n            .html('');\n\n        $.post(\n            \"sources/roles.queries.php\", {\n                type: \"get_list_of_groups_in_ldap\",\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                console.log(data)\n\n                if (data.error === true) {\n                    // ERROR\n                    //toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // loop on groups list\n                    var html = '',\n                        groupsNumber = 0,\n                        group,\n                        group_id;\n                    var entry;\n                    $.each(data.ldap_groups, function(i, ad_group) {\n                        // Get group name\n                        html += '<tr>' +\n                            '<td>' + ad_group.ad_group_title + '</td>' +\n                            '<td><i class=\"fa-solid fa-arrow-right-long\"></i></td>' +\n                            '<td class=\"pointer change_adgroup_mapping\" data-id=\"'+ad_group.ad_group_id+'\">' + \n                                (ad_group.role_title === \"\" ? '<i class=\"fa-solid fa-xmark text-danger infotip\" title=\"<?php echo langHdl('none'); ?>\"></i>' : ad_group.role_title) + \n                            '</td>' +\n                            '</tr>';\n                    });\n\n                    $('#row-ldap-body').html(html);\n                    $('#row-ldap-body').removeClass('overlay');\n                    $('.infotip').tooltip('update');\n\n                    // prepare select\n                    rolesSelectOptions = '<option value=\"-1\"><?php echo langHdl('none'); ?></option>';;\n                    $.each(data.teampass_groups, function(i, role) {\n                        rolesSelectOptions += '<option value=\"' + role.id + '\">' + role.title + '</option>';\n                    });\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.rolesSelectOptions = rolesSelectOptions;\n                        }\n                    );\n\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    $('.close-toastr-progress').closest('.toast').remove();\n                }\n            }\n        );\n    }\n\n    /**\n     * Refreshing list of groups from LDAP\n     *\n     * @return void\n     */\n    $(document).on('click', '.change_adgroup_mapping', function() {\n        // Init\n        currentThis = $(this);\n        var currentRow = $(this).closest('tr'),\n            groupId = $(this).data('id');\n\n        // Now show\n        $(currentRow).after(\n            '<tr class=\"temp-row\"><td colspan=\"' + $(currentRow).children('td').length + '\">' +\n            '<div class=\"card card-warning card-outline\">' +\n            '<div class=\"card-body\">' +\n            '<div class=\"form-group ml-2 mt-2\"><?php echo langHdl('select_adgroup_mapping'); ?></div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<select class=\"select-role form-control form-item-control\">' +\n                store.get('teampassApplication').rolesSelectOptions + '</select>' +\n            '</div>' +\n            '<div class=\"card-footer\">' +\n            '<button type=\"button\" class=\"btn btn-warning tp-action\" data-action=\"do-adgroup-role-mapping\" data-id=\"' + groupId + '\"><?php echo langHdl('submit'); ?></button>' +\n            '<button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>' +\n            '</div>' +\n            '</div>' +\n            '</td></tr>'\n        );\n    });\n\n    /**\n     * Handle the user rights choices\n     */\n    $(document).on('ifChecked', '.form-radio-input', function() {\n        if ($(this).data('type') === 'W') {\n            $('.cb-right').iCheck('enable');\n        } else {\n            $('.cb-right').iCheck('disable');\n            $('.cb-right').iCheck('uncheck');\n        }\n    });\n\n    /**\n     * Handle option when role is displayed\n     */\n    $(document).on('change', '#folders-depth', function() {\n        if ($('#folders-depth').val() === 'all') {\n            $('tr').removeClass('hidden');\n        } else {\n            $('tr').filter(function() {\n                if ($(this).data('level') <= $('#folders-depth').val()) {\n                    $(this).removeClass('hidden');\n                } else {\n                    $(this).addClass('hidden');\n                }\n            });\n        }\n    });\n\n    /**\n     * Handle search criteria\n     */\n    $('#folders-search').on('keyup', function() {\n        var criteria = $(this).val();\n        $('.folder-name').filter(function() {\n            if ($(this).text().toLowerCase().indexOf(criteria) !== -1) {\n                $(this).closest('tr').removeClass('hidden');\n            } else {\n                $(this).closest('tr').addClass('hidden');\n            }\n        });\n    });\n\n    $(document).on('change', '#folders-compare', function() {\n        if ($(this).val() === '') {\n            $('#table-role-details tr').find('th:last-child, td:last-child').addClass('hidden');\n        } else {\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Load the rights for this folder\n            $.post(\n                'sources/roles.queries.php', {\n                    type: 'build_matrix',\n                    role_id: $('#folders-compare').val(),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        buildRoleCompare(data.matrix);\n\n                        // Store in teampassUser\n                        store.update(\n                            'teampassUser',\n                            function(teampassUser) {\n                                teampassUser.compareRole = data.matrix;\n                            }\n                        );\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n        }\n    });\n\n    function buildRoleCompare(data) {\n        // Loop on array\n        $(data).each(function(i, value) {\n            var row = $('tr[data-id=\"' + value.id + '\"]');\n            if (row !== undefined) {\n                // Access\n                access = '';\n                if (value.access === 'W') {\n                    access = '<i class=\"fas fa-indent mr-2 text-success infotip\" title=\"<?php echo langHdl('add_allowed'); ?>\"></i>' +\n                        '<i class=\"fas fa-pen mr-2 text-success infotip\" title=\"<?php echo langHdl('edit_allowed'); ?>\"></i>' +\n                        '<i class=\"fas fa-eraser mr-2 text-success infotip\" title=\"<?php echo langHdl('delete_allowed'); ?>\"></i>';\n                } else if (value.access === 'ND') {\n                    access = '<i class=\"fas fa-indent mr-2 text-success infotip\" title=\"<?php echo langHdl('add_allowed'); ?>\"></i>' +\n                        '<i class=\"fas fa-pen mr-2 text-success infotip\" title=\"<?php echo langHdl('edit_allowed'); ?>\"></i>' +\n                        '<i class=\"fas fa-eraser mr-2 text-danger infotip\" title=\"<?php echo langHdl('delete_not_allowed'); ?>\"></i>';\n                } else if (value.access === 'NE') {\n                    access = '<i class=\"fas fa-indent mr-2 text-success infotip\" title=\"<?php echo langHdl('add_allowed'); ?>\"></i>' +\n                        '<i class=\"fas fa-pen mr-2 text-danger infotip\" title=\"<?php echo langHdl('edit_not_allowed'); ?>\"></i>' +\n                        '<i class=\"fas fa-eraser mr-2 text-success infotip\" title=\"<?php echo langHdl('delete_allowed'); ?>\"></i>';\n                } else if (value.access === 'NDNE') {\n                    access = '<i class=\"fas fa-indent mr-2 text-success infotip\" title=\"<?php echo langHdl('add_allowed'); ?>\"></i>' +\n                        '<i class=\"fas fa-pen mr-2 text-danger infotip\" title=\"<?php echo langHdl('edit_not_allowed'); ?>\"></i>' +\n                        '<i class=\"fas fa-eraser mr-2 text-danger infotip\" title=\"<?php echo langHdl('delete_not_allowed'); ?>\"></i>';\n                } else if (value.access === 'R') {\n                    access = '<i class=\"fas fa-book-reader mr-2 text-warning infotip\" title=\"<?php echo langHdl('read_only'); ?>\"></i>';\n                } else {\n                    access = '<i class=\"fas fa-ban mr-2 text-danger infotip\" title=\"<?php echo langHdl('no_access'); ?>\"></i>';\n                }\n                row.find('td:last-child').html(access).removeClass('hidden');\n            }\n        });\n\n        // Tooltips\n        $('.infotip').tooltip();\n    }\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      users.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'folders', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n    // Initialization\n    var userDidAChange = false,\n        userTemporaryCode = '',\n        constVisibleOTP = false,\n        userClipboard,\n        ProcessInProgress = false,\n        debugJavascript = false;\n\n    browserSession(\n        'init',\n        'teampassApplication', {\n            foldersSelect: '',\n            complexityOptions: '',\n        }\n    );\n\n    // Prepare tooltips\n    $('.infotip').tooltip();\n\n    // Prepare Select2\n    $('.select2').select2({\n        language: '<?php echo $_SESSION['user_language_code']; ?>'\n    });\n\n    // Prepare iCheck format for checkboxes\n    $('input[type=\"checkbox\"].flat-blue, input[type=\"radio\"].flat-blue').iCheck({\n        radioClass: 'iradio_flat-blue',\n        checkboxClass: 'icheckbox_flat-blue',\n    });\n    $('#form-create-special-folder').iCheck('disable');\n\n    // Prevent submit on button\n    $('.btn-no-click')\n        .click(function(e) {\n            e.preventDefault();\n        });\n\n\n    //Launch the datatables pluggin\n    var oTable = $('#table-users').DataTable({\n        'paging': true,\n        'searching': true,\n        'order': [\n            [1, 'asc']\n        ],\n        'info': true,\n        'processing': false,\n        'serverSide': true,\n        'responsive': false,\n        'select': false,\n        'stateSave': true,\n        'autoWidth': true,\n        'ajax': {\n            url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/users.datatable.php',\n        },\n        'language': {\n            'url': '<?php echo $SETTINGS['cpassman_url']; ?>/includes/language/datatables.<?php echo $_SESSION['user']['user_language']; ?>.txt'\n        },\n        'columns': [{\n                'width': '80px',\n                className: 'details-control',\n                'render': function(data, type, row, meta) {\n                    return '<div class=\"group-btn btn-user-action\">' +\n                        '' +\n                        '<button type=\"button\" class=\"btn btn-info dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fas fa-cog\"></i>&nbsp;' +\n                        '</button>' +\n                        '<ul class=\"dropdown-menu\" role=\"menu\">' +\n                        ($(data).data('auth-type') === 'local' ?\n                            '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"new-password\"><i class=\"fas fa-lock mr-2\"></i><?php echo langHdl('change_login_password'); ?></li>' :\n                            ''\n                        ) +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"edit\"><i class=\"fas fa-pen mr-2\"></i><?php echo langHdl('edit'); ?></li>' +\n                        ($(data).data('otp-provided') !== \"\"?\n                            '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"new-otp\"><i class=\"fas fa-mask mr-2\"></i><?php echo langHdl('generate_new_otp'); ?></li>' :\n                            ''\n                        ) +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\" data-action=\"logs\"><i class=\"fas fa-newspaper mr-2\"></i><?php echo langHdl('see_logs'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"qrcode\"><i class=\"fas fa-qrcode mr-2\"></i><?php echo langHdl('user_ga_code'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"access-rights\"><i class=\"fas fa-sitemap mr-2\"></i><?php echo langHdl('user_folders_rights'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"disable-user\"><i class=\"fas fa-user-slash text-warning mr-2\" disabled></i><?php echo langHdl('disable_enable'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"delete-user\"><i class=\"fas fa-user-minus text-danger mr-2\" disabled></i><?php echo langHdl('delete'); ?></li>' +\n                        '</ul>' +\n                        '</div>';\n                }\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            }\n        ],\n        'preDrawCallback': function() {\n            toastr.info(\n                '<?php echo langHdl('loading'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>',\n                ''\n            );\n        },\n        'drawCallback': function() {\n            // Tooltips\n            $('.infotip').tooltip();\n\n            // Remove progress toast\n            $('.toast').remove();\n        },\n        /*'createdRow': function( row, data, dataIndex ) {\n            var newClasses = $(data[6]).filter('#row-class-' + dataIndex).val();\n            $(row).addClass(newClasses);\n        }*/\n    });\n\n\n\n    $('#form-email').change(function() {\n        //extract domain from email\n        var domain = $(this).val().split('@')[1];\n        if (domain === undefined) {\n            return false;\n        }\n        domain = domain.toLowerCase()\n\n        //check if domain exists\n        $.post(\"sources/users.queries.php\", {\n                type: \"check_domain\",\n                domain: domain\n            },\n            function(data) {\n                data = $.parseJSON(data);\n                if (debugJavascript === true) console.log(data);\n\n                $(\"#new_folder_role_domain\").attr(\"disabled\", \"disabled\");\n                if (data.folder === 'not_exists' && data.role === 'not_exists' && domain !== '') {\n                    $('#form-create-special-folder').iCheck('enable');\n                    $('#form-special-folder').val(domain);\n                } else {\n                    $('#form-create-special-folder').iCheck('disable');\n                    $('#form-special-folder').val('');\n                }\n            }\n        );\n    });\n\n\n\n    /**\n     * \n     */\n    // Fires when user click on button SEND\n    $(document).on('click', '#warningModalButtonClose', function() {\n        // check if uform is the one expected\n        if ($('#warningModal-button-user-pwd').length === 0) {\n            return false;\n        } \n        if (debugJavascript === true) console.log('Closing warning dialog')\n        toastr.remove();\n        $('#warningModal').modal('hide');\n\n        // Fianlize UI\n        // clear form fields\n        $(\".clear-me\").val('');\n        $('.select2').val('').change();\n        //$('#privilege-user').iCheck('check');\n        $('.form-check-input')\n            .iCheck('disable')\n            .iCheck('uncheck');\n\n        // refresh table content\n        oTable.ajax.reload();\n\n        // Show list of users\n        $('#row-form').addClass('hidden');\n        $('#row-list').removeClass('hidden');\n    });\n\n\n    /**\n     * \n     */\n    // Fires when user click on button SEND\n    $(document).on('click', '#warningModalButtonAction', function() {\n        // check if uform is the one expected\n        if ($('#warningModal-button-user-pwd').length === 0) {\n            return false;\n        } \n        //console.log('send email for '+store.get('teampassUser').admin_new_user_temporary_encryption_code)\n        //console.log(store.get('teampassUser'))\n        //console.log(store.get('teampassApplication'))\n\n        showModalDialogBox(\n            '#warningModal',\n            '<i class=\"fas fa-user-shield fa-lg warning mr-2\"></i><?php echo langHdl('caution'); ?>',\n            '<?php echo langHdl('sending_email_message'); ?>',\n            '',\n            '',\n            true,\n            false,\n            false\n        );\n\n        // Prepare data\n        if (store.get('teampassApplication').formUserAction === \"add_new_user\") {\n            var data = {\n                'receipt': $('#form-email').val(),\n                'subject': 'TEAMPASS - <?php echo langHdl('temporary_encryption_code');?>',\n                'body': '<?php echo langHdl('email_body_new_user');?>',\n                'pre_replace' : {\n                    '#code#' : store.get('teampassUser').admin_new_user_temporary_encryption_code,\n                    '#login#' : store.get('teampassUser').admin_new_user_login,\n                    '#password#' : store.get('teampassUser').admin_new_user_password,\n                }\n            }\n        } else {\n            var data = {\n                'receipt': $('#form-email').val(),\n                'subject': 'TEAMPASS - <?php echo langHdl('temporary_encryption_code');?>',\n                'body': '<?php echo langHdl('email_body_temporary_encryption_code');?>',\n                'pre_replace' : {\n                    '#enc_code#' : store.get('teampassUser').admin_new_user_temporary_encryption_code,\n                }\n            }\n        }\n\n        // Launch action\n        $.post(\n            'sources/main.queries.php', {\n                type: 'mail_me',\n                type_category: 'action_mail',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                //console.log(data);\n\n                if (data.error !== false) {\n                    $('#warningModal').modal('hide');\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Fianlize UI\n                    // clear form fields\n                    $(\".clear-me\").val('');\n                    $('.select2').val('').change();\n                    //$('#privilege-user').iCheck('check');\n                    $('.form-check-input')\n                        .iCheck('disable')\n                        .iCheck('uncheck');\n\n                    // Show list of users\n                    $('#row-form').addClass('hidden');\n                    $('#row-list').removeClass('hidden');\n\n                    // Hide dialogbox\n                    $('#warningModal').modal('hide');\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n                    // change the user status to ready to use\n                    data = {\n                        'user_id': store.get('teampassUser').admin_new_user_id,\n                    }\n\n                    $.post(\n                        'sources/main.queries.php', {\n                            type: 'user_is_ready',\n                            type_category: 'action_user',\n                            data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                            key: '<?php echo $_SESSION['key']; ?>'\n                        },\n                        function(data) {\n                            if (debugJavascript === true) console.log('User has been created');\n\n                            // refresh table content\n                            oTable.ajax.reload();\n\n                            // Remove action from store\n                            if (debugJavascript === true) console.log('Clear Store variables')\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                                }\n                            );\n                            store.update(\n                                'teampassUser',\n                                function(teampassUser) {\n                                    teampassUser.admin_new_user_password = '',\n                                    teampassUser.admin_new_user_temporary_encryption_code = '',\n                                    teampassUser.admin_new_user_login = '';\n                                }\n                            );\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * BUILD AND CHECK THE USER LOGIN\n     */\n    $('.build-login').change(function() {\n        // Build login only if it is empty\n        if ($(\"#form-login\").val() === '') {\n            //return false;\n        }\n        // Build login\n        if ($(this).attr('id') !== 'form-login') {\n            $(\"#form-login\").val(\n                $(\"#form-name\")\n                .val()\n                .toLowerCase()\n                .replace(/ /g, \"\") + \".\" + $(\"#form-lastname\").val().toLowerCase().replace(/ /g, \"\")\n            );\n        }\n\n        // Check if login exists\n        $.post(\n            'sources/users.queries.php', {\n                type: 'is_login_available',\n                login: $('#form-login').val(),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Show result\n                    if (data.login_exists === 0) {\n                        $('#form-login')\n                            .removeClass('is-invalid')\n                            .addClass('is-valid');\n                        $('#form-login-conform').val(true);\n                    } else {\n                        $('#form-login')\n                            .removeClass('is-valid')\n                            .addClass('is-invalid');\n                        $('#form-login-conform').val(false);\n                    }\n                }\n            }\n        );\n    });\n\n\n    function userTasksCreation(userId, userPassword, userTemporaryCode)\n    {\n        var data = {\n            user_id: userId,\n            user_pwd: userPassword,\n            user_code: userTemporaryCode,\n        }\n\n        // Do query\n        $.post(\n            \"sources/users.queries.php\", {\n                type: \"create_new_user_tasks\",\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                if (debugJavascript === true)  {\n                    console.info(\"R\u00e9ception des donn\u00e9es :\")\n                    console.log(data);\n                }\n                \n                if (data.error === true) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    dfd.reject();\n                } else {\n                    // show message to user\n                    $('#warningModal').modal('hide');\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 2000\n                        }\n                    );\n\n                    // Reload list of users\n                    oTable.ajax.reload();\n\n                    // Prepare UI\n                    $('#row-list, #group-create-special-folder, #group-delete-user').removeClass('hidden');\n                    $('#row-form').addClass('hidden');\n                }\n            }\n        );\n    }\n\n    /**\n     * \n     */\n    // Launch recursive action to encrypt the keys\n    function callRecursiveUserDataEncryption(\n        userId,\n        step,\n        start\n    ) {\n        var dfd = $.Deferred();\n        ProcessInProgress = true;\n        \n        var stepText = '';\n        if (debugJavascript === true) console.log('Performing '+step)\n\n        // Prepare progress string\n        if (step === 'step0') {\n            stepText = '<?php echo langHdl('inititialization'); ?>';\n        } else if (step === 'step1') {\n            stepText = '<?php echo langHdl('items'); ?>';\n        } else if (step === 'step2') {\n            stepText = '<?php echo langHdl('logs'); ?>';\n        } else if (step === 'step3') {\n            stepText = '<?php echo langHdl('suggestions'); ?>';\n        } else if (step === 'step4') {\n            stepText = '<?php echo langHdl('fields'); ?>';\n        } else if (step === 'step5') {\n            stepText = '<?php echo langHdl('files'); ?>';\n        } else if (step === 'step6') {\n            stepText = '<?php echo langHdl('personal_items'); ?>';\n        }\n\n        if (step !== 'finished') {\n            if (store.get('teampassUser').related_items_number !== null) {\n                $nbItemsToConvert = \" / \" + store.get('teampassUser').related_items_number;\n            } else {\n                $nbItemsToConvert = '';\n            }\n            // Inform user\n            $(\"#warningModalBody\").html('<b><?php echo langHdl('encryption_keys'); ?> - ' +\n                stepText + '</b> [' + start + ' - ' + (parseInt(start) + <?php echo NUMBER_ITEMS_IN_BATCH;?>) + ']<span id=\"warningModalBody_extra\">' + $nbItemsToConvert + '</span> ' +\n                '... <?php echo langHdl('please_wait'); ?><i class=\"fas fa-spinner fa-pulse ml-3 text-primary\"></i>');\n\n            // If expected, show the OPT to the admin\n            if (constVisibleOTP === true) {\n                toastr.info(\n                    '<?php echo langHdl('show_encryption_code_to_admin');?> <div><input class=\"form-control form-item-control flex-nowrap\" value=\"' + userTemporaryCode + '\" readonly></div>'\n                    + '<br /><button type=\"button\" class=\"btn clear\"><?php echo langHdl('close');?></button>',\n                    '<?php echo langHdl('information'); ?>',\n                    {\n                        extendedTimeOut: 0,\n                        timeOut: 0,\n                        tapToDismiss: false,\n                        newestOnTop: true,\n                        preventDuplicates: true,\n                        onHidden: (toast) => {\n                            // prevent against multiple occurances (#3305)\n                            constVisibleOTP = false;\n                        },\n                    }\n                );\n            }\n\n            var data = {\n                action: step,\n                start: start,\n                length: <?php echo NUMBER_ITEMS_IN_BATCH;?>,\n                user_id: userId,\n            }\n            if (debugJavascript === true) {\n                console.info(\"Envoi des donn\u00e9es :\")\n                console.log(data);\n            }\n\n            // Do query\n            $.post(\n                \"sources/main.queries.php\", {\n                    type: \"user_sharekeys_reencryption_next\",\n                    type_category: 'action_key',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                    if (debugJavascript === true) {\n                        console.info(\"R\u00e9ception des donn\u00e9es :\")\n                        console.log(data);\n                    }\n                    \n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n\n                        dfd.reject();\n                    } else {\n                        // Prepare variables\n                        userId = data.userId;\n                        step = data.step;\n                        start = data.start;\n\n                        // Do recursive call until step = finished\n                        callRecursiveUserDataEncryption(\n                            userId,\n                            step,\n                            start\n                        ).done(function(response) {\n                            dfd.resolve(response);\n                        });\n                    }\n                }\n            );\n        } else {\n            // Ask user\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-envelope-open-text fa-lg warning mr-2\"></i><?php echo langHdl('information'); ?>',\n                '<i class=\"fas fa-info-circle mr-2\"></i><?php echo langHdl('send_user_password_by_email'); ?>'+\n                '<div class=\"row\">'+\n                    (store.get('teampassApplication').formUserAction === \"add_new_user\" ?\n                    '<div class=\"col-lg-2\"><button type=\"button\" class=\"btn btn-block btn-secondary mr-2\"  id=\"warningModal-button-user-pwd\"><?php echo langHdl('show_user_password'); ?></button></div>'+\n                    '<div class=\"col-lg-4 hidden\" id=\"warningModal-user-pwd\"><div><?php echo langHdl('user_password'); ?><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_password+'\"></div>'+\n                    '<div><?php echo langHdl('user_temporary_encryption_code'); ?><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_temporary_encryption_code+'\"></div></div>'\n                    :\n                    '<div class=\"col-lg-2\"><button type=\"button\" class=\"btn btn-block btn-secondary mr-2\"  id=\"warningModal-button-user-pwd\"><?php echo langHdl('show_user_temporary_encryption_code'); ?></button></div>'+\n                    '<div class=\"col-lg-4 hidden\" id=\"warningModal-user-pwd\"><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_temporary_encryption_code+'\"></div></div>'\n                    )+\n                '</div>',\n                '<?php echo langHdl('send_by_email'); ?>',\n                '<?php echo langHdl('close'); ?>',\n                true,\n                false,\n                false\n            );\n            $('#warningModal').modal('show');\n\n            $(document).on('click', '#warningModal-button-user-pwd', function() {\n                $('#warningModal-user-pwd').removeClass('hidden');\n                $('#warningModal-button-user-pwd').prop( \"disabled\", true );\n                setTimeout(\n                    () => {\n                        $('#warningModal-user-pwd').addClass('hidden');\n                        $('#warningModal-button-user-pwd').prop( \"disabled\", false );\n                    },\n                    5000\n                );\n            });\n\n            ProcessInProgress = false;\n        }\n        return dfd.promise();\n    }\n\n\n\n    /**\n     * TOP MENU BUTTONS ACTIONS\n     */\n    $(document).on('click', '.tp-action', function() {\n        // Ensure that password strength indicator is reseted\n        //$('#form-password').focus();\n\n        // Hide if user is not admin\n        if (parseInt(store.get('teampassUser').user_admin) === 1 || parseInt(store.get('teampassUser').user_can_manage_all_users) === 1) {\n            $('.only-admin').removeClass('hidden');\n        } else {\n            $('.only-admin').addClass('hidden');\n        }\n\n        if ($(this).data('action') === 'new') {\n            // ADD NEW USER\n            $('#row-list').addClass('hidden');\n            $('#row-form, #group-create-special-folder, .not-for-admin').removeClass('hidden');\n\n            // HIDE FROM FORM ELEMENTS ONLY FOR ADMIN\n            if (parseInt(store.get('teampassUser').user_admin) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n            } else if (parseInt(store.get('teampassUser').user_can_manage_all_users) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n                $('#privilege-admin').iCheck('disable');\n                $('#privilege-hr').iCheck('disable');\n            } else {\n                $('#privilege-admin').iCheck('disable');\n                $('#privilege-hr').iCheck('disable');\n                $('#privilege-manager').iCheck('disable');\n            }\n\n            // Prepare checks\n            $('#privilege-user').iCheck('check');\n            $('#form-create-special-folder').iCheck('disable');\n\n            // Personal folder\n            if (store.get('teampassSettings').enable_pf_feature === '1') {\n                $('#form-create-personal-folder')\n                    .iCheck('enable')\n                    .iCheck('check');\n            } else {\n                $('#form-create-personal-folder').iCheck('disable');\n            }\n            \n            // MFA enabled\n            if (store.get('teampassSettings').duo === '1' || store.get('teampassSettings').google_authentication === '1') {\n                $('#form-create-mfa-enabled')\n                    .iCheck('enable')\n                    .iCheck('check');\n                $('#form-create-mfa-enabled-div').removeClass('hidden');\n            } else {\n                $('#form-create-mfa-enabled').iCheck('disable');\n                $('#form-create-mfa-enabled-div').addClass('hidden');\n            }\n\n            // What type of form? Edit or new user\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = 'add_new_user';\n                }\n            );\n\n        } else if ($(this).data('action') === 'edit') {\n            // SHow user\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // EDIT EXISTING USER\n            $('#row-list, #group-create-special-folder, #group-delete-user').addClass('hidden');\n            $('#row-form').removeClass('hidden');\n            $('.form-check-input').iCheck('enable');\n\n            // Personal folder\n            if (parseInt(store.get('teampassSettings').enable_pf_feature) === 0) {\n                $('#form-create-personal-folder').iCheck('disable');\n            }\n\n            // HIDE FROM FORM ELEMENTS ONLY FOR ADMIN\n            if (parseInt(store.get('teampassUser').user_admin) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n            } else {\n                $('input[type=radio].only-admin').iCheck('disable');\n            }\n\n            // What type of form? Edit or new user\n            var userID = $(this).data('id');\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = 'store_user_changes',\n                        teampassApplication.formUserId = userID; // Store user ID   \n                }\n            );\n\n            var data = {\n                'user_id': userID,\n            };\n\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get_user_info\",\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error === false) {\n                        // Prefil with user data\n                        $('#form-login').val(data.login);\n                        $('#form-email').val(data.email);\n                        $('#form-name').val(data.name);\n                        $('#form-lastname').val(data.lastname);\n                        $('#form-create-root-folder').iCheck(data.can_create_root_folder === 1 ? 'check' : 'uncheck');\n                        $('#form-create-personal-folder').iCheck(data.personal_folder === 1 ? 'check' : 'uncheck');\n                        $('#form-create-mfa-enabled').iCheck(data.mfa_enabled === 1 ? 'check' : 'uncheck');\n\n                        // Case of user locked\n                        if (data.disabled === 1) {\n                            $('#group-delete-user').removeClass('hidden');\n                            $('#form-delete-user-confirm').iCheck('uncheck');\n                        }\n\n                        // Clear selects\n                        $('#form-roles, #form-managedby, #form-auth, #form-forbid')\n                            .find('option')\n                            .remove();\n\n                        var tmp = '';\n                        $(data.foldersAllow).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-auth').append(tmp);\n\n                        tmp = '';\n                        $(data.foldersForbid).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-forbid').append(tmp);\n\n                        tmp = '';\n                        $(data.managedby).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-managedby').append(tmp);\n\n                        tmp = '';\n                        $(data.function).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-roles').append(tmp);\n\n                        // Generate select2\n                        $('#form-roles, #form-managedby, #form-auth, #form-forbid').select2();\n\n                        // User's current privilege\n                        if (data.admin === 1) {\n                            $('#privilege-admin').iCheck('check');\n                            $('.not-for-admin').addClass('hidden');\n                        } else if (data.can_manage_all_users === 1) {\n                            $('#privilege-hr').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else if (data.gestionnaire === 1) {\n                            $('#privilege-manager').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else if (data.read_only === 1) {\n                            $('#privilege-ro').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else {\n                            $('#privilege-user').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        }\n\n                        $('input:radio[name=privilege]').on('ifChanged', function() {\n                            userDidAChange = true;\n                            $(this).data('change-ongoing', true);\n                        });\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    } else {\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                        return false;\n                    }\n                }\n            );\n        } else if ($(this).data('action') === 'submit') {\n            // Loop on all changed fields\n            var arrayQuery = [];\n            $('.form-control').each(function(i, obj) {\n                if ($(this).data('change-ongoing') === true\n                    //|| $('#form-password').val() !== 'do_not_change'\n                ) {\n                    arrayQuery.push({\n                        'field': $(this).prop('id'),\n                        'value': $(this).val(),\n                    });\n                }\n            });\n\n            if (arrayQuery.length > 0) {\n                // Now save\n                // get lists\n                var forbidFld = [],\n                    authFld = [],\n                    groups = [];\n                $(\"#form-roles option:selected\").each(function() {\n                    groups.push($(this).val())\n                });\n                $(\"#form-auth option:selected\").each(function() {\n                    authFld.push($(this).val())\n                });\n                $(\"#form-forbid option:selected\").each(function() {\n                    forbidFld.push($(this).val())\n                });\n\n                // Mandatory?\n                var validated = true,\n                    validEmailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n                $('.required').each(function(i, obj) {\n                    if ($(this).val() === '' && $(this).hasClass('select2') === false) {\n                        $(this).addClass('is-invalid');\n                        validated = false;\n                    } else if ($('#' + $(this).attr('id') + ' :selected').length === 0 && $(this).hasClass('select2') === true) {\n                        $('#' + $(this).attr('id') + ' + span').addClass('is-invalid');\n                        validated = false;\n                    } else if ($(this).hasClass('validate-email') === true) {\n                        if ($(this).val().match(validEmailRegex)) {\n                            $(this).removeClass('is-invalid');\n                        } else {\n                            $(this).addClass('is-invalid');\n                            validated = false;\n                        }\n                    } else {\n                        $(this).removeClass('is-invalid');\n                        $('#' + $(this).attr('id') + ' + span').removeClass('is-invalid');\n                    }\n                });\n                if (validated === false) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('fields_with_mandatory_information_are_missing'); ?>',\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n\n                // SHow user\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n                // Get number of items to treat\n                data_tmp = {\n                    'user_id': <?php echo $_SESSION['user_id']; ?>,\n                }\n                $.post(\n                    'sources/main.queries.php', {\n                        type: 'get_number_of_items_to_treat',\n                        type_category: 'action_system',\n                        data: prepareExchangedData(JSON.stringify(data_tmp), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data_tmp) {\n                        data_tmp = prepareExchangedData(data_tmp, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                        store.update(\n                            'teampassUser',\n                            function(teampassUser) {\n                                teampassUser.related_items_number = data_tmp.nbItems;\n                            }\n                        );\n                    }\n                );\n\n                // Sanitize text fields\n                purifyRes = fieldDomPurifierLoop('#form-user .purify');\n                if (purifyRes.purifyStop === true) {\n                    // if purify failed, stop\n                    return false;\n                }\n\n                //prepare data\n                var data = {\n                    'user_id': store.get('teampassApplication').formUserId,\n                    'login': purifyRes.arrFields['login'],\n                    'name': purifyRes.arrFields['name'],\n                    'lastname': purifyRes.arrFields['lastname'],\n                    'email': purifyRes.arrFields['email'],\n                    'admin': $('#privilege-admin').prop('checked'),\n                    'manager': $('#privilege-manager').prop('checked'),\n                    'hr': $('#privilege-hr').prop('checked'),\n                    'read_only': $('#privilege-ro').prop('checked'),\n                    'personal_folder': $('#form-create-personal-folder').prop('checked'),\n                    'new_folder_role_domain': $('#form-create-special-folder').prop('checked'),\n                    'domain': $('#form-special-folder').val(),\n                    'isAdministratedByRole': $('#form-managedby').val(),\n                    'groups': groups,\n                    'allowed_flds': authFld,\n                    'forbidden_flds': forbidFld,\n                    'action_on_user': 'update',\n                    'form-create-root-folder': $('#form-create-root-folder').prop('checked'),\n                    'form-user-disabled': $('#form-user-disabled').prop('checked'),\n                    'mfa_enabled': $('#form-create-mfa-enabled').prop('checked'),\n                };\n                if (debugJavascript === true) {\n                    console.log(data);\n                    console.log(store.get('teampassApplication').formUserAction);\n                }                \n                var formUserId = store.get('teampassApplication').formUserId;\n                \n                $.post(\n                    'sources/users.queries.php', {\n                        type: store.get('teampassApplication').formUserAction,\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else if (store.get('teampassApplication').formUserAction === 'add_new_user') {\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('new_user_info_by_mail'); ?>',\n                                '', {\n                                    timeOut: 4000\n                                }\n                            );\n                            // ---\n                        } else {\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 2000\n                                }\n                            );\n                        }\n\n                        // Reload list of users\n                        oTable.ajax.reload();\n\n                        // Prepare UI\n                        $('#row-list, #group-create-special-folder, #group-delete-user').removeClass('hidden');\n                        $('#row-form').addClass('hidden');\n\n                        // Clean form\n                        $('.clear-me').val('');\n                        $('.select2').val('').change();\n                        $('.extra-form, #row-folders').addClass('hidden');\n                        $('#row-list').removeClass('hidden');\n\n                        // Prepare checks\n                        $('.form-check-input').iCheck('uncheck');\n\n                        // Remove action from store\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                            }\n                        );\n                    }\n                )\n            } else {\n                // No change performed on form\n                toastr.remove();\n                toastr.success(\n                    '<?php echo langHdl('no_change_performed'); ?>',\n                    '', {\n                        timeOut: 1000\n                    }\n                );\n            }\n        } else if ($(this).data('action') === 'cancel') {\n            $('.clear-me').val('');\n            $('.select2').val('').change();\n            $('.extra-form, #row-folders').addClass('hidden');\n            $('#row-list').removeClass('hidden');\n\n            // Prepare checks\n            $('.form-check-input').iCheck('uncheck');\n\n            // Remove action from store\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = '',\n                        teampassApplication.formUserId = '';\n                }\n            );\n        } else if ($(this).data('action') === 'qrcode') {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // This sends a GA Code by email to user\n            data = {\n                'user_id': $(this).data('id'),\n                'demand_origin': 'users_management_list',\n                'send_email': 1\n            }\n\n            $.post(\n                'sources/main.queries.php', {\n                    type: 'ga_generate_qr',\n                    type_category: 'action_user',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('share_sent_ok'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            // ---\n        } else if ($(this).data('action') === 'new-password') {\n            var userId = $(this).data('id');\n            // Check if no tasks on-going for this user\n            data_to_send = {\n                'user_id': userId,\n            }\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get-user-infos\",\n                    data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    \n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Continue   \n                        if (data.user_infos.ongoing_process_id !== null) {  \n                            toastr.remove();\n                            toastr.warning(\n                                data.message,\n                                '<?php echo langHdl('user_encryption_ongoing'); ?>', {\n                                    timeOut: 10000,\n                                    progressBar: true\n                                }\n                            ); \n                        } else {                 \n                            // HIde\n                            $('.content-header, .content').addClass('hidden');\n\n                            // PRepare info\n                            $('#dialog-admin-change-user-password-info')\n                                .html('<i class=\"icon fas fa-info mr-2\"></i><?php echo langHdl('admin_change_user_password_info'); ?>');\n                            $(\"#dialog-admin-change-user-password-progress\").html('<?php echo langHdl('provide_current_psk_and_click_launch'); ?>');\n\n                            // SHow form\n                            $('#dialog-admin-change-user-password').removeClass('hidden');\n\n                            $('#admin_change_user_password_target_user').val(userId);\n                        }\n                    }\n                }\n            );\n\n            // ---\n        } else if ($(this).data('action') === 'new-enc-code') {\n            // HIde\n            $('.content-header, .content').addClass('hidden');\n\n            // PRepare info\n            $('#dialog-admin-change-user-password-info')\n                .html('<i class=\"icon fas fa-info mr-2\"></i><?php echo langHdl('admin_change_user_encryption_code_info'); ?>');\n            $(\"#dialog-admin-change-user-password-progress\").html('<?php echo langHdl('provide_current_psk_and_click_launch'); ?>');\n\n            // SHow form\n            $('#dialog-admin-change-user-password').removeClass('hidden');\n\n            $('#admin_change_user_encryption_code_target_user').val($(this).data('id'));\n            // ---\n        } else if ($(this).data('action') === 'logs') {\n            $('#row-list, #row-folders').addClass('hidden');\n            $('#row-logs').removeClass('hidden');\n            $('#row-logs-title').text(\n                $(this).data('fullname')\n            )\n            var userID = $(this).data('id');\n\n            //Launch the datatables pluggin\n            var oTableLogs = $('#table-logs').DataTable({\n                'destroy': true,\n                'paging': true,\n                'searching': true,\n                'order': [\n                    [1, 'asc']\n                ],\n                'info': true,\n                'processing': false,\n                'serverSide': true,\n                'responsive': true,\n                'select': true,\n                'stateSave': false,\n                'retrieve': false,\n                'autoWidth': true,\n                'ajax': {\n                    url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/user.logs.datatables.php',\n                    data: function(d) {\n                        d.userId = userID;\n                    }\n                },\n                'language': {\n                    'url': '<?php echo $SETTINGS['cpassman_url']; ?>/includes/language/datatables.<?php echo $_SESSION['user']['user_language']; ?>.txt'\n                },\n                'columns': [{\n                        className: 'dt-body-left'\n                    },\n                    {\n                        className: 'dt-body-left'\n                    },\n                    {\n                        className: 'dt-body-left'\n                    }\n                ],\n                'preDrawCallback': function() {\n                    toastr.remove();\n                    toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                },\n                'drawCallback': function() {\n                    // Tooltips\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                },\n            });\n\n\n        } else if ($(this).data('action') === 'access-rights') {\n            $('#row-list, #row-logs').addClass('hidden');\n            $('#row-folders').removeClass('hidden');\n            $('#row-folders-title').text(\n                $(this).data('fullname')\n            )\n            var userID = $(this).data('id');\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            $('#row-folders-results').html('');\n\n            // Send query\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'user_folders_rights',\n                    user_id: userID,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Show table\n                        $('#row-folders-results').html(data.html);\n\n                        // Prepare tooltips\n                        $('.infotip').tooltip();\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'disable-user') {\n            var userID = $(this).data('id');\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                '<div class=\"form-group\">'+\n                    '<span class=\"mr-3\"><?php echo langHdl('user_disable_status'); ?></span>'+\n                    '<input type=\"checkbox\" class=\"form-check-input form-control flat-blue\" id=\"user-disabled\">' +\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $('input[type=\"checkbox\"].flat-blue').iCheck({\n                checkboxClass: 'icheckbox_flat-blue',\n            });\n            $(document).on('click', '#warningModalButtonAction', function() {                \n\n                // Show spinner\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                $('#warningModal').modal('hide');\n\n                var data = {\n                    'user_id': userID,\n                    'disabled_status': $('#user-disabled').prop('checked') === true ? 1 : 0,\n                };\n\n                // Send query\n                $.post(\n                    'sources/users.queries.php', {\n                        type: 'manage_user_disable_status',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            // Show icon or not\n                            if ($('#user-disabled').prop('checked') === true) {\n                                $('#user-login-'+userID).before('<i class=\"fas fa-user-slash infotip text-danger mr-2\" title=\"<?php echo langHdl('account_is_locked');?>\" id=\"user-disable-'+userID+'\"></i>');\n                            } else {\n                                $('#user-disable-'+userID).remove();\n                            }\n                            \n\n                            // Prepare tooltips\n                            $('.infotip').tooltip();\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n                        }\n                    }\n                );\n            });\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'delete-user') {\n            var userID = $(this).data('id');\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                '<div class=\"form-group\">'+\n                    '<span class=\"mr-3\"><?php echo langHdl('by_clicking_this_checkbox_confirm_user_deletion'); ?></span>'+\n                    '<input type=\"checkbox\" class=\"form-check-input form-control flat-blue\" id=\"user-to-delete\">' +\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $('input[type=\"checkbox\"].flat-blue').iCheck({\n                checkboxClass: 'icheckbox_flat-blue',\n            });\n            $(document).on('click', '#warningModalButtonAction', function() {\n                if ($('#user-to-delete').prop('checked') === false) {\n                    $('#warningModal').modal('hide');\n                    return false;\n                }             \n\n                // Show spinner\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                $('#warningModal').modal('hide');\n\n                var data = {\n                    'user_id': userID,\n                };\n\n                // Send query\n                $.post(\n                    'sources/users.queries.php', {\n                        type: 'delete_user',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            // refresh table content\n                            oTable.ajax.reload();\n\n                            // Prepare tooltips\n                            $('.infotip').tooltip();\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n                        }\n                    }\n                );\n            });\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'refresh') {\n            $('.form').addClass('hidden');\n            $('#users-list').removeClass('hidden');\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n            oTable.ajax.reload();\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'propagate') {\n            $('#row-list, #row-folders').addClass('hidden');\n            $('#row-propagate').removeClass('hidden');\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Load list of users\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'get_list_of_users_for_sharing',\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Build select\n                        var html = '';\n                        $.each(data.values, function(i, value) {\n                            html += '<option value=\"' + value.id + '\" data-groups=\"' + value.groups + '\" data-managed-by=\"' + value.managedBy + '\" data-folders-allowed=\"' + value.foldersAllowed + '\" data-folders-forbidden=\"' + value.foldersForbidden + '\" data-groups-id=\"' + value.groupIds + '\" data-managed-by-id=\"' + value.managedById + '\" data-folders-allowed-id=\"' + value.foldersAllowedIds + '\" data-folders-forbidden-id=\"' + value.foldersForbiddenIds + '\" data-admin=\"' + value.admin + '\" data-manager=\"' + value.manager + '\" data-hr=\"' + value.hr + '\" data-read-only=\"' + value.readOnly + '\" data-personal-folder=\"' + value.personalFolder + '\" data-root-folder=\"' + value.rootFolder + '\">' + value.name + ' ' + value.lastname + ' [' + value.login + ']</option>';\n                        });\n\n                        $('#propagate-from, #propagate-to')\n                            .find('option')\n                            .remove()\n                            .end()\n                            .append(html)\n                            .change();\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'do-propagate') {\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n\n            // destination users\n            var userIds = $('#propagate-to').val();\n\n            if (userIds.length === 0) return false;\n\n            // Prepare data\n            var data = {\n                source_id: $(\"#propagate-from option:selected\").val(),\n                destination_ids: userIds,\n                user_functions: $(\"#propagate-from option:selected\").data('groups-id'),\n                user_managedby: $(\"#propagate-from option:selected\").data('managed-by-id'),\n                user_fldallowed: $(\"#propagate-from option:selected\").data('folders-allowed-id'),\n                user_fldforbid: $(\"#propagate-from option:selected\").data('folders-forbidden-id'),\n                user_admin: $(\"#propagate-from option:selected\").data('admin'),\n                user_manager: $(\"#propagate-from option:selected\").data('manager'),\n                user_hr: $(\"#propagate-from option:selected\").data('hr'),\n                user_readonly: $(\"#propagate-from option:selected\").data('read-only'),\n                user_personalfolder: $(\"#propagate-from option:selected\").data('personal-folder'),\n                user_rootfolder: $(\"#propagate-from option:selected\").data('root-folder'),\n            };\n            if (debugJavascript === true) console.log(data);\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"update_users_rights_sharing\",\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        $('.clear-me').val('');\n                        $('.select2').val('').change();\n                        $('.extra-form, #row-folders').addClass('hidden');\n                        $('#row-list').removeClass('hidden');\n\n                        // Prepare checks\n                        $('.form-check-input')\n                            .iCheck('disable')\n                            .iCheck('uncheck');\n\n                        // Remove action from store\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                            }\n                        );\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-sync') {\n            $('.form').addClass('hidden');\n            $('#row-ldap').removeClass('hidden');\n\n            refreshListUsersLDAP();\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'close') {\n            $('.extra-form').addClass('hidden');\n            $('#users-list').removeClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-existing-users') {\n            refreshListUsersLDAP();\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-add-role') {\n            $('#ldap-users-table').addClass('hidden');\n            $('#ldap-new-role').removeClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'close-new-role') {\n            $('#ldap-users-table').removeClass('hidden');\n            $('#ldap-new-role').addClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'add-new-role') {\n            if ($('#ldap-new-role-selection').val() === '') {\n                // ERROR\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                    '<?php echo langHdl('caution'); ?>', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n            } else {\n                // Add new role to Teampass\n\n                // Prepare data\n                var data = {\n                    'label': simplePurifier($('#ldap-new-role-selection').val()),\n                    'complexity': $('#ldap-new-role-complexity').val(),\n                    'allowEdit': 0,\n                    'action': 'add_role',\n                    'folderId' : -1,\n                }\n\n                if (debugJavascript === true) console.log(data);\n                \n                $.post(\n                    'sources/roles.queries.php', {\n                        type: 'change_role_definition',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error === true) {\n                            // ERROR\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            $('#ldap-new-role-selection').val('');\n                            $('#ldap-users-table').removeClass('hidden');\n                            $('#row-ldap-body').html('');\n                            $('#ldap-new-role').addClass('hidden');\n\n                            refreshListUsersLDAP();\n                        }\n                    }\n                );\n\n            }\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'new-otp') {// Check if no tasks on-going for this user\n            data_to_send = {\n                'user_id': $(this).data('id'),\n            }\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get-user-infos\",\n                    data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Continue   \n                        if (data.user_infos.ongoing_process_id !== null) {  \n                            toastr.remove();\n                            toastr.warning(\n                                data.message,\n                                '<?php echo langHdl('user_encryption_ongoing'); ?>', {\n                                    timeOut: 10000,\n                                    progressBar: true\n                                }\n                            ); \n                        } else {  \n                            var userID = data.user_infos.id;\n                            showModalDialogBox(\n                                '#warningModal',\n                                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                                '<div class=\"form-group\">'+\n                                    '<span class=\"mr-3\"><?php echo langHdl('generate_new_otp_informations'); ?></span>'+\n                                '</div>',\n                                '<?php echo langHdl('perform'); ?>',\n                                '<?php echo langHdl('cancel'); ?>'\n                            );\n                            \n                            $(document).on('click', '#warningModalButtonAction', function() {                \n                                // prepare user\n\n                                // Show spinner\n                                toastr.remove();\n                                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n                                // generate keys\n                                generateUserKeys(\n                                    {\n                                        'user_id': userID,\n                                    },\n                                    ''\n                                );\n                            });\n                        }\n                    }\n                }\n            );\n\n            /**/\n            //\n            // --- END\n            //\n        }\n    });\n\n\n    /**\n     * Permit to show some info while selecting a  User\n     */\n    $(document).on('change', '#propagate-from', function() {\n        var selectedOption = $(this).find('option:selected');\n        $('#propagate-user-roles').html($(selectedOption).data('groups'));\n        $('#propagate-user-managedby').html($(selectedOption).data('managed-by'));\n        $('#propagate-user-allowed').html($(selectedOption).data('folders-allowed'));\n        $('#propagate-user-fordidden').html($(selectedOption).data('folders-forbidden'));\n    });\n\n\n    /**\n     * TRACK CHANGES IN FORM\n     */\n    $('#form-user .track-change')\n        .on('change', function() {\n            if ($(this).val() !== null && $(this).val().length > 0) {\n                userDidAChange = true;\n                $(this).data('change-ongoing', true);\n            } else {\n                $(this).data('change-ongoing', false);\n            }\n        })\n        .on('ifChecked', function() {\n            userDidAChange = true;\n            $(this).data('change-ongoing', true);\n        });\n\n    //************************************************************* */\n\n\n\n    /**\n     * EDIT EACH ROW\n     */\n    var currentText = '',\n        item = '',\n        initialColumnWidth = '',\n        actionOnGoing = false,\n        field = '',\n        columnId = '',\n        tableDef = {\n            'login': {\n                'column': 2\n            },\n            'name': {\n                'column': 3\n            },\n            'lastname': {\n                'column': 4\n            },\n            'isAdministratedByRole': {\n                'column': 5\n            },\n            'fonction_id': {\n                'column': 6\n            }\n        };\n\n    /**\n     * EDIT TEXT INPUT\n     */\n    $(document).on('click', '.edit-text', function() {\n        currentText = $(this).text();\n        item = $(this);\n        field = $(this).data('field');\n        columnId = tableDef[field].column;\n\n        $(this)\n            .addClass('hidden')\n            .after('<input type=\"text\" class=\"form-control form-item-control remove-me save-me\" value=\"' + currentText + '\">');\n\n        // Store current width and change it\n        initialColumnWidth = $('#table-users thead th:eq(' + (columnId - 1) + ')').width();\n        $('#table-users thead th:eq(' + (columnId - 1) + ')').width('300');\n        if (debugJavascript === true) console.log('Width ' + initialColumnWidth)\n\n        // Launch save on focus lost\n        $('.save-me')\n            .focus()\n            .focusout(function() {\n                if (actionOnGoing === false) {\n                    actionOnGoing = true;\n                    saveChange(item, currentText, $(this), field);\n                }\n            });\n    });\n\n    /**\n     * EDIT SELECT LIST\n     */\n    $(document).on('click', '.edit-select', function() {\n        currentText = $(this).text();\n        item = $(this);\n        field = $(this).data('field');\n        columnId = tableDef[field].column;\n        if (debugJavascript === true) console.log(columnId)\n\n        $(this).addClass('hidden');\n\n        // Show select\n        $(\"#select-managedBy\")\n            .insertAfter('#' + $(this).attr('id'))\n            .after('<i class=\"fa fa-close text-danger pointer temp-button mr-3\" id=\"select-managedBy-close\"></i>');\n        $('#select-managedBy option[value=\"' + $(this).data('value') + '\"]').prop('selected', true);\n\n        // Store current width and change it\n        initialColumnWidth = $('#table-users thead th:eq(' + (columnId - 1) + ')').width();\n        $('#table-users thead th:eq(' + (columnId - 1) + ')').width('300');\n\n        // Launch save on focus lost\n        $('.save-me')\n            .focus()\n            .focusout(function() {\n                if (actionOnGoing === false) {\n                    actionOnGoing = true;\n                    saveChange(item, currentText, $(this), field);\n                }\n            });\n\n        $('#select-managedBy-close').click(function() {\n            $(\"#select-managedBy\").detach().appendTo('#hidden-managedBy');\n            $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth);\n            $('.edit-select').removeClass('hidden');\n            $('.tmp-loader, .temp-button').remove();\n        });\n    });\n\n\n    /**\n     * MANAGE USER KEYS PRESSED\n     */\n    $(document).keyup(function(e) {\n        if (e.keyCode === 27) {\n            // Escape Key\n            $('.remove-me, .tmp-loader').remove();\n            $('.edit-text').removeClass('hidden');\n        }\n        if (e.keyCode === 13 && actionOnGoing === false) {\n            // Enter key\n            actionOnGoing = true;\n            saveChange(item, currentText, $(':focus'), field);\n        }\n    });\n\n\n    function saveChange(item, currentText, change, field) {\n        if (change.val() !== currentText) {\n            change\n                .after('<i class=\"fa fa-refresh fa-spin fa-fw tmp-loader\"></i>');\n\n            // prepare data\n            var data = {\n                'user_id': item.data('id'),\n                'field': field,\n                'value': change.val()\n            };\n            \n            // Save\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'save_user_change',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    if (change.is('input') === true) {\n                        change.remove();\n                        $('.tmp-loader').remove();\n                        item\n                            .text(change.val())\n                            .removeClass('hidden');\n                        $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n                    } else if (change.is('select') === true) {\n                        $(\"#select-managedBy\").detach().appendTo('#hidden-managedBy');\n                        $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n                        $('.tmp-loader, .temp-button').remove();\n\n                        // Show change\n                        if (debugJavascript === true) console.log(change)\n                        item\n                            .html(change.text())\n                            .attr('data-value', change.val())\n                            .removeClass('hidden');\n                    }\n                    actionOnGoing = false;\n                },\n                'json'\n            );\n        } else {\n            change.remove();\n            $('.tmp-loader').remove();\n            item\n                .text(change.val())\n                .removeClass('hidden');\n            $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n        }\n    }\n\n    /**\n     * Refreshing list of users from LDAP\n     *\n     * @return void\n     */\n    function refreshListUsersLDAP() {\n        // FIND ALL USERS IN LDAP\n        //toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n        $('#row-ldap-body')\n            .addClass('overlay')\n            .html('');\n\n        $.post(\n            \"sources/users.queries.php\", {\n                type: \"get_list_of_users_in_ldap\",\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data)\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // loop on users list\n                    var html = '',\n                        groupsNumber = 0,\n                        userLogin,\n                        group;\n                    var entry;\n                    $.each(data.entries, function(i, entry) {\n                        userLogin = entry[store.get('teampassSettings').ldap_user_attribute] !== undefined ? entry[store.get('teampassSettings').ldap_user_attribute][0] : '';\n                        // CHeck if not empty\n                        if (userLogin !== '') {\n                            html += '<tr>' +\n                                '<td>' + userLogin +\n                                '</td>' +\n                                '<td>' +\n                                '<i class=\"fas fa-info-circle ml-3 infotip text-info pointer text-center\" data-toggle=\"tooltip\" data-html=\"true\" title=\"' +\n                                '<p class=\\'text-left\\'><i class=\\'fas fa-user mr-1\\'></i>' +\n                                (entry.displayname !== undefined ? '' + entry.displayname[0] + '' : '') + '</p>' +\n                                '<p class=\\'text-left\\'><i class=\\'fas fa-envelope mr-1\\'></i>' + (entry.mail !== undefined ? '' + entry.mail[0] + '' : '') + '</p>' +\n                                '\"></i>' +\n                                '</td><td>' +\n                                (entry.userInTeampass === 0 ? '' :\n                                '<i class=\"fas ' + (entry.userAuthType !== undefined && entry.userAuthType === 'ldap' ? 'fa-toggle-on text-info ' : 'fa-toggle-off ') + 'mr-1 text-center pointer action-change-ldap-synchronization\" data-user-id=\"' + entry.userInTeampass + '\" data-user-auth-type=\"' + entry.userAuthType + '\"></i>') +\n                                '</td><td>';\n                            groupsNumber = 0;\n                            $.each(entry.memberof, function(j, group) {\n                                var regex = String(group).replace('CN=', 'cn').match(/(cn=)(.*?),/g);\n                                if (regex !== null) {\n                                    group = regex[0].replace('cn=', '').replace(',', '');\n                                    // Check if this user has this group in Teampass\n                                    if (entry.teampass !== undefined && entry.ldap_groups.filter(p => p.title === group).length > 0) {\n                                        html += group + '<i class=\"far fa-check-circle text-success ml-2 infotip\" title=\"<?php echo langHdl('user_has_this_role_in_teampass'); ?>\"></i><br>';\n                                    } else {\n                                        // Check if this group exists in Teampass and propose to add it\n                                        tmp = data.teampass_groups.filter(p => p.title === group);\n                                        if (tmp.length > 0 && entry.userInTeampass === 0) {\n                                            html += group + '<i class=\"fas fa-user-graduate text-primary ml-2 pointer infotip action-add-role-to-user\" title=\"<?php echo langHdl('add_user_to_role'); ?>\" data-user-id=\"' + entry.userInTeampass + '\" data-role-id=\"' + tmp[0].id + '\"></i><br>';\n                                        } else {\n                                            html += group + '<br>';\n                                        }\n                                    }\n                                    groupsNumber++;\n                                }\n                            });\n                            html += '</td><td>';\n                            // Action icons\n                            html += (entry.userInTeampass === 0 ? '<i class=\"fas fa-user-plus text-warning ml-2 infotip pointer add-user-icon\" title=\"<?php echo langHdl('add_user_in_teampass'); ?>\" data-user-login=\"' + userLogin + '\" data-user-email=\"' + (entry.mail !== undefined ? entry.mail[0] : '') + '\" data-user-name=\"' + (entry.givenname !== undefined ? entry.givenname[0] : '') + '\" data-user-lastname=\"' + (entry.sn !== undefined ? entry.sn[0] : '') + '\"></i>' : '');\n\n                            // Only of not admin\n                            /*if (userLogin !== 'admin') {\n                                html += (entry.teampass.auth === 'ldap' ? '<i class=\"fas fa-link text-success ml-2 infotip pointer auth-local\" title=\"<?php echo langHdl('ldap_user_password_is_used_for_authentication'); ?>\" data-user-id=\"' + entry.teampass.id + '\"></i>' : '<i class=\"fas fa-unlink text-orange ml-2 infotip pointer auth-ldap\" title=\"<?php echo langHdl('local_user_password_is_used_for_authentication'); ?>\" data-user-id=\"' + entry.teampass.id + '\"></i>');\n                            }*/\n\n                            html += '</td></tr>';\n                        }\n                    });\n\n                    $('#row-ldap-body').html(html);\n\n                    $('#row-ldap-body').removeClass('overlay');\n\n                    $('.infotip').tooltip('update');\n\n                    // Build list box of new roles that could be created\n                    $('#ldap-new-role-selection')\n                        .empty()\n                        .append('<option value=\"\">--- <?php echo langHdl('select'); ?> ---</option>');\n                    $.each(data.ldap_groups, function(i, group) {\n                        tmp = data.teampass_groups.filter(p => p.title === group);\n                        if (tmp.length === 0) {\n                            $('#ldap-new-role-selection').append(\n                                '<option value=\"' + group + '\">' + group + '</option>'\n                            );\n                        }\n                    });\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    $('.close-toastr-progress').closest('.toast').remove();\n                }\n            }\n        );\n    }\n\n    /**\n     * Permits to add a role to a Teampass user\n     *\n     * @return void\n     */\n    function addRoleToUser() {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'user_id': $('.selected-role').data('user-id'),\n            'field': 'fonction_id',\n            'value': $('.selected-role').data('role-id'),\n            'context': 'add_one_role_to_user'\n        };\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'save_user_change',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // CHange icon\n                    $('.selected-role')\n                        .removeClass('fas fa-user-graduate text-primary pointer action-add-role-to-user')\n                        .addClass('far fa-check-circle text-success')\n                        .prop('title', '<?php echo langHdl('user_has_this_role_in_teampass'); ?>');\n\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n                $('.selected-role').removeClass('selected-role');\n            }\n        );\n    }\n\n    $(document).on('click', '.action-add-role-to-user', function() {\n        $(this).addClass('selected-role');\n\n        toastr.warning(\n            '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"addRoleToUser()\"><?php echo langHdl('please_confirm'); ?></button>',\n            '<?php echo langHdl('info'); ?>', {\n                positionClass: 'toast-top-center',\n                closeButton: true\n            }\n        );\n    });\n\n    // Enable/disable ldap sync on user\n    $(document).on('click', '.action-change-ldap-synchronization', function() {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'user_id': $(this).data('user-id'),\n            'field': 'auth_type',\n            'value': $(this).hasClass('fa-toggle-off') === true ? 'ldap' : 'local',\n            'context': ''\n        },\n        selectedIcon = $(this);\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'save_user_change',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // CHange icon format\n                    if (selectedIcon.hasClass('fa-toggle-off') === true) {\n                        selectedIcon\n                            .removeClass('fa-toggle-off')\n                            .addClass('fa-toggle-on text-info')\n                            .prop('data-user-auth-type', 'ldap');\n                    } else {\n                        selectedIcon\n                            .removeClass('fa-toggle-on text-info')\n                            .addClass('fa-toggle-off')\n                            .prop('data-user-auth-type', 'local');\n                    }\n\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * Permits to add an AD user in Teampass\n     *\n     * @return void\n     */\n    function addUserInTeampass() {\n        $('#warningModal').modal('hide');\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n        // what roles\n        var roles = [];\n        $(\"#ldap-user-roles option:selected\").each(function() {\n            roles.push($(this).val())\n        });\n\n        // Sanitize text fields\n        purifyRes = fieldDomPurifierLoop('#form-user .purify');\n        if (purifyRes.purifyStop === true) {\n            // if purify failed, stop\n            return false;\n        }\n\n        // prepare data\n        var data = {\n            'login': simplePurifier($('.selected-user').data('user-login')),\n            'name': simplePurifier($('.selected-user').data('user-name') === '' ? $('#ldap-user-name').val() : $('.selected-user').data('user-name')),\n            'lastname': simplePurifier($('.selected-user').data('user-lastname')),\n            'email': simplePurifier($('.selected-user').data('user-email')),\n            'roles' : roles,\n        };\n        if (debugJavascript === true) console.log(data)\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'add_user_from_ldap',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n                userTemporaryCode = data.user_code;\n                constVisibleOTP = data.visible_otp;\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {                    \n                    generateUserKeys(data, userTemporaryCode);\n                }\n            }\n        );\n    }\n\n\n    function generateUserKeys(data, userTemporaryCode)\n    {\n        // manage keys encryption for new user\n        // Case where we need to encrypt new keys for the user\n        // Process is: \n        // 2/ clear all keys for this user\n        // 3/ generate keys for this user with encryption key\n\n        \n        // If expected to create new encryption key\n        var parameters = {\n            'user_id': data.user_id,\n        };\n\n        if (debugJavascript === true) {\n            console.log(parameters);\n            console.info('Prepare TASK for new user encryption keys')\n        }\n        $.post(\n            'sources/main.queries.php', {\n                type: 'generate_temporary_encryption_key',\n                type_category: 'action_key',\n                data: prepareExchangedData(JSON.stringify(parameters), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data_otc) {\n                data_otc = prepareExchangedData(data_otc, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                if (data_otc.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data_otc.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // If expected, show the OPT to the admin\n                    if (data_otc.visible_otp === true) {\n                        showModalDialogBox(\n                            '#warningModal',\n                            '<i class=\"fa-solid fa-user-secret mr-2\"></i><<?php echo langHdl('your_attention_is_required'); ?>',\n                            '<?php echo langHdl('show_encryption_code_to_admin'); ?>' +\n                            '<div><input class=\"form-control form-item-control flex-nowrap ml-2\" value=\"' + data_otc.code + '\" readonly></div>',\n                            '',\n                            '<?php echo langHdl('close'); ?>'\n                        );\n                    }\n\n                    // update the process\n                    // add all tasks\n                    var data_to_send = {\n                        user_id: data.user_id,\n                        user_code: data_otc.code,\n                    }\n\n                    //console.log(data_to_send);\n                    //return false;\n\n                    // Do query\n                    $.post(\n                        \"sources/users.queries.php\", {\n                            type: \"create_new_user_tasks\",\n                            data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                            key: '<?php echo $_SESSION['key']; ?>'\n                        },\n                        function(data_tasks) {\n                            data_tasks = prepareExchangedData(data_tasks, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                            \n                            if (data_tasks.error === true) {\n                                // error\n                                toastr.remove();\n                                toastr.error(\n                                    data_tasks.message,\n                                    '<?php echo langHdl('caution'); ?>', {\n                                        timeOut: 5000,\n                                        progressBar: true\n                                    }\n                                );\n                            } else {\n                                // show message to user\n                                // Finalizing\n                                //$('#warningModal').modal('hide');\n\n                                // Now close in progress toast\n                                $('.close-toastr-progress').closest('.toast').remove();\n                                \n                                // refresh the list of users in LDAP not added in Teampass\n                                refreshListUsersLDAP();    \n\n                                // Rrefresh list of users in Teampass\n                                oTable.ajax.reload();\n\n                                toastr.success(\n                                    '<?php echo langHdl('done'); ?>',\n                                    '', {\n                                        timeOut: 1000\n                                    }\n                                );\n                            }\n                        }\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Permits to change the auth type of the user\n     *\n     * @return void\n     */\n    function changeUserAuthType(auth) {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'id': $('.selected-user').data('user-id'),\n            'auth_type': auth\n        };\n        if (debugJavascript === true) console.log(data)\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'change_user_auth_type',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    refreshListUsersLDAP();\n                }\n            }\n        );\n    }\n\n    $(document)\n        .on('click', '.add-user-icon', function() {\n            var thisElement = $(this);\n            $(thisElement).addClass('selected-user');\n\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-user-plus fa-lg warning mr-2\"></i><?php echo langHdl('new_ldap_user_info'); ?> <b>'+$(this)[0].dataset.userLogin+'</b>',\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('name'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-name\" value=\"'+ $(this).attr('data-user-name')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('lastname'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-lastname\" value=\"'+ $(this).attr('data-user-lastname')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('email'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-email\" value=\"'+ $(this).attr('data-user-email')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-roles\"><?php echo langHdl('roles'); ?></label>'+\n                    '<select id=\"ldap-user-roles\" class=\"form-control form-item-control select2 required\" style=\"width:100%;\" multiple=\"multiple\">'+\n                    '<?php echo $optionsRoles; ?></select>'+\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $(document).on('click', '#warningModalButtonAction', function() {\n                if ($('#ldap-user-name').val() !== \"\" && $('#ldap-user-roles :selected').length > 0) {\n                    addUserInTeampass();\n                    $(thisElement).removeClass('selected-user');\n                }\n            });\n            $(document).on('click', '#warningModalButtonClose', function() {\n                $(thisElement).removeClass('selected-user');\n            });\n        })\n        .on('click', '.auth-ldap', function() {\n            $(this).addClass('selected-user');\n\n            toastr.warning(\n                '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"changeUserAuthType(\\'ldap\\')\"><?php echo langHdl('please_confirm'); ?></button>',\n                '<?php echo langHdl('change_authentification_type_to_ldap'); ?>', {\n                    positionClass: 'toast-top-center',\n                    closeButton: true\n                }\n            );\n        })\n        .on('click', '.auth-local', function() {\n            $(this).addClass('selected-user');\n\n            toastr.warning(\n                '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"changeUserAuthType(\\'local\\')\"><?php echo langHdl('please_confirm'); ?></button>',\n                '<?php echo langHdl('change_authentification_type_to_local'); ?>', {\n                    positionClass: 'toast-top-center',\n                    closeButton: true\n                }\n            );\n        });\n\n\n\n    //]]>\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      users.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception(\"Error file '/includes/config/tp.config.php' not exists\", 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'users', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n// Load superGlobals\ninclude_once $SETTINGS['cpassman_dir'] . '/includes/libraries/protect/SuperGlobal/SuperGlobal.php';\n$superGlobal = new protect\\SuperGlobal\\SuperGlobal();\n// Connect to mysql server\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Database/Meekrodb/db.class.php';\nif (defined('DB_PASSWD_CLEAR') === false) {\n    define('DB_PASSWD_CLEAR', defuseReturnDecrypted(DB_PASSWD, $SETTINGS));\n}\nDB::$host = DB_HOST;\nDB::$user = DB_USER;\nDB::$password = DB_PASSWD_CLEAR;\nDB::$dbName = DB_NAME;\nDB::$port = DB_PORT;\nDB::$encoding = DB_ENCODING;\nDB::$ssl = DB_SSL;\nDB::$connect_options = DB_CONNECT_OPTIONS;\n// PREPARE LIST OF OPTIONS\n$optionsManagedBy = '';\n$optionsRoles = '';\n$userRoles = explode(';', $_SESSION['fonction_id']);\n// If administrator then all roles are shown\n// else only the Roles the users is associated to.\nif ((int) $_SESSION['is_admin'] === 1) {\n    $optionsManagedBy .= '<option value=\"0\">' . langHdl('administrators_only') . '</option>';\n}\n\n$rows = DB::query(\n    'SELECT id, title, creator_id\n    FROM ' . prefixTable('roles_title') . '\n    ORDER BY title ASC'\n);\nforeach ($rows as $record) {\n    if ((int) $_SESSION['is_admin'] === 1 || in_array($record['id'], $_SESSION['user_roles']) === true) {\n        $optionsManagedBy .= '<option value=\"' . $record['id'] . '\">' . langHdl('managers_of') . ' ' . addslashes($record['title']) . '</option>';\n    }\n    if (\n        (int) $_SESSION['is_admin'] === 1\n        || (((int) $superGlobal->get('user_manager', 'SESSION') === 1 || (int) $_SESSION['user_can_manage_all_users'] === 1)\n            && (in_array($record['id'], $userRoles) === true) || (int) $record['creator_id'] === (int) $_SESSION['user_id'])\n    ) {\n        $optionsRoles .= '<option value=\"' . $record['id'] . '\">' . addslashes($record['title']) . '</option>';\n    }\n}\n\n//Build tree\n$tree = new SplClassLoader('Tree\\NestedTree', $SETTINGS['cpassman_dir'] . '/includes/libraries');\n$tree->register();\n$tree = new Tree\\NestedTree\\NestedTree(prefixTable('nested_tree'), 'id', 'parent_id', 'title');\n$treeDesc = $tree->getDescendants();\n$foldersList = '';\nforeach ($treeDesc as $t) {\n    if (\n        in_array($t->id, $_SESSION['groupes_visibles']) === true\n        && in_array($t->id, $_SESSION['personal_visible_groups']) === false\n    ) {\n        $ident = '';\n        for ($y = 1; $y < $t->nlevel; ++$y) {\n            $ident .= '&nbsp;&nbsp;';\n        }\n        $foldersList .= '<option value=\"' . $t->id . '\">' . $ident . htmlspecialchars($t->title, ENT_COMPAT, 'UTF-8') . '</option>';\n    }\n}\n\n?>\n\n<!-- Content Header (Page header) -->\n<div class=\"content-header\">\n    <div class=\"container-fluid\">\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-6\">\n                <h1 class=\"m-0 text-dark\">\n                    <i class=\"fa-solid fa-users mr-2\"></i><?php echo langHdl('users'); ?>\n                </h1>\n            </div><!-- /.col -->\n        </div><!-- /.row -->\n    </div><!-- /.container-fluid -->\n</div>\n<!-- /.content-header -->\n\n<section class=\"content\">\n    <div class=\"row\" id=\"row-list\">\n        <div class=\"col-12\">\n            <div class=\"card\">\n                <div class=\"card-header align-middle\">\n                    <h3 class=\"card-title\">\n                        <button type=\"button\" class=\"btn btn-primary btn-sm tp-action mr-2\" data-action=\"new\">\n                            <i class=\"fa-solid fa-plus mr-2\"></i><?php echo langHdl('new'); ?>\n                        </button>\n                        <button type=\"button\" class=\"btn btn-primary btn-sm tp-action mr-2\" data-action=\"propagate\">\n                            <i class=\"fa-solid fa-share-alt mr-2\"></i><?php echo langHdl('propagate'); ?>\n                        </button>\n                        <button type=\"button\" class=\"btn btn-primary btn-sm tp-action mr-2\" data-action=\"refresh\">\n                            <i class=\"fa-solid fa-sync-alt mr-2\"></i><?php echo langHdl('refresh'); ?>\n                        </button><?php\n                                    echo isset($SETTINGS['ldap_mode']) === true && (int) $SETTINGS['ldap_mode'] === 1 && (int) $_SESSION['is_admin'] === 1 ?\n                                        '<button type=\"button\" class=\"btn btn-primary btn-sm tp-action mr-2\" data-action=\"ldap-sync\">\n                            <i class=\"fa-solid fa-address-card mr-2\"></i>' . langHdl('ldap_synchronization') . '\n                        </button>' : '';\n                                    ?>\n                    </h3>\n                </div>\n\n                <!-- /.card-header -->\n                <div class=\"card-body form\" id=\"users-list\">\n                    <table id=\"table-users\" class=\"table table-striped nowrap table-responsive-sm\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\"></th>\n                                <th scope=\"col\"><?php echo langHdl('user_login'); ?></th>\n                                <th scope=\"col\"><?php echo langHdl('name'); ?></th>\n                                <th scope=\"col\"><?php echo langHdl('lastname'); ?></th>\n                                <th scope=\"col\"><?php echo langHdl('managed_by'); ?></th>\n                                <th scope=\"col\"><?php echo langHdl('functions'); ?></th>\n                                <th scope=\"col\"><i class=\"fa-solid fa-theater-masks fa-lg fa-fw infotip\" title=\"<?php echo langHdl('privileges'); ?>\"></i></th>\n                                <th scope=\"col\"><i class=\"fa-solid fa-code-branch fa-lg fa-fw infotip\" title=\"<?php echo langHdl('can_create_root_folder'); ?>\"></i></th>\n                                <th scope=\"col\"><i class=\"fa-solid fa-hand-holding-heart fa-lg fa-fw infotip\" title=\"<?php echo langHdl('enable_personal_folder'); ?>\"></i></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n\n    <!-- USER LDAP SYNCHRONIZATION -->\n    <div class=\"row hidden extra-form\" id=\"row-ldap\">\n        <div class=\"col-12\">\n            <div class=\"card card-primary\">\n                <div class=\"card-header\">\n                    <h3 class=\"card-title\"><?php echo langHdl('ldap_synchronization'); ?> <span id=\"row-logs-title\"></span></h3>\n                </div>\n\n                <!-- /.card-header -->\n                <!-- table start -->\n                <div class=\"card-body\">\n                    <div class=\"row col-12\">\n                        <button type=\"button\" class=\"btn btn-secondary btn-sm tp-action mr-2\" data-action=\"ldap-existing-users\">\n                            <i class=\"fa-solid fa-sync-alt mr-2\"></i><?php echo langHdl('list_users'); ?>\n                        </button>\n                        <button type=\"button\" class=\"btn btn-secondary btn-sm tp-action mr-2\" data-action=\"ldap-add-role\">\n                            <i class=\"fa-solid fa-graduation-cap mr-2\"></i><?php echo langHdl('add_role_tip'); ?>\n                        </button>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"card hidden mt-4 mb-5 card-info\" id=\"ldap-new-role\">\n                                <div class=\"card-header\">\n                                    <i class=\"fa-solid fa-graduation-cap mr-2\"></i><?php echo langHdl('add_role_tip'); ?>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"callout callout-info\">\n                                        <i class=\"fa-solid fa-info-circle text-info mr-2\"></i><?php echo langHdl('adding_ldap_role_to_teampass'); ?>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <label for=\"ldap-new-role-selection\"><?php echo langHdl('select_role_to_create'); ?></label>\n                                        <select class=\"form-control form-item-control\" style=\"width:100%;\" id=\"ldap-new-role-selection\"></select>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <label for=\"ldap-new-role-complexity\"><?php echo langHdl('complexity'); ?></label>\n                                        <select id=\"ldap-new-role-complexity\" class=\"form-control form-item-control\" style=\"width:100%;\">\n                                            <?php\n                                            foreach (TP_PW_COMPLEXITY as $entry) {\n                                                echo '\n                                            <option value=\"' . $entry[0] . '\">' . addslashes($entry[1]) . '</option>';\n                                            }\n                                            ?>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class=\"card-footer\">\n                                    <button type=\"button\" class=\"btn btn-default float-left tp-action btn-info\" data-action=\"add-new-role\"><?php echo langHdl('submit'); ?></button>\n                                    <button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"close-new-role\"><?php echo langHdl('close'); ?></button>\n                                </div>\n                            </div>\n                            <div class=\"card-body table-responsive p-0\" id=\"ldap-users-table\">\n                                <table class=\"table table-hover table-responsive\">\n                                    <thead>\n                                        <tr>\n                                            <th style=\"width: 25%;\"><i class=\"fa-solid fa-id-badge mr-1\"></i><?php echo langHdl('login'); ?></th>\n                                            <th style=\"width: 60px; text-align:center;\"><i class=\"fa-solid fa-info infotip pointer\" title=\"<?php echo langHdl('more_information'); ?>\"></i></th>\n                                            <th style=\"width: 60px;\"><i class=\"fa-solid fa-sync-alt infotip pointer\" title=\"<?php echo langHdl('synchronized'); ?>\"></i></th>\n                                            <th style=\"\"><i class=\"fa-solid fa-graduation-cap mr-1\"></i><?php echo langHdl('roles'); ?></th>\n                                            <th style=\"width: 15%;\"><i class=\"fa-solid fa-wrench mr-1\"></i><?php echo langHdl('action'); ?></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody id=\"row-ldap-body\">\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"card-footer\">\n                        <button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"close\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- USER FORM -->\n    <div class=\"row hidden extra-form\" id=\"row-form\">\n        <div class=\"col-12\">\n            <div class=\"card card-primary\">\n                <div class=\"card-header\">\n                    <h3 class=\"card-title\"><?php echo langHdl('user_definition'); ?></h3>\n                </div>\n\n                <!-- /.card-header -->\n                <!-- form start -->\n                <form role=\"form\" id=\"form-user\">\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-lg-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"form-name\"><?php echo langHdl('name'); ?></label>\n                                    <input type=\"text\" class=\"form-control clear-me required track-change purify\" id=\"form-name\" data-field=\"name\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"form-login\"><?php echo langHdl('login'); ?></label>\n                                    <input type=\"text\" class=\"form-control clear-me required build-login track-change purify\" id=\"form-login\" data-field=\"login\">\n                                    <input type=\"hidden\" id=\"form-login-conform\" value=\"0\">\n                                </div>\n                            </div>\n                            \n                            <div class=\"col-lg-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"form-lastname\"><?php echo langHdl('lastname'); ?></label>\n                                    <input type=\"text\" class=\"form-control clear-me required track-change purify\" id=\"form-lastname\" data-field=\"lastname\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"form-login\"><?php echo langHdl('email'); ?></label>\n                                    <input type=\"email\" class=\"form-control clear-me required track-change validate-email purify\" id=\"form-email\" data-field=\"email\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"form-login\" class=\"mr-2\"><?php echo langHdl('privileges'); ?></label>\n                            <input type=\"radio\" class=\"form-check-input form-control flat-blue only-admin track-change\" name=\"privilege\" id=\"privilege-admin\">\n                            <label class=\"form-check-label mr-2 pointer\" for=\"privilege-admin\"><?php echo langHdl('administrator'); ?></label>\n                            <input type=\"radio\" class=\"form-check-input form-control flat-blue only-admin track-change\" name=\"privilege\" id=\"privilege-hr\">\n                            <label class=\"form-check-label mr-2 pointer\" for=\"privilege-hr\"><?php echo langHdl('super_manager'); ?></label>\n                            <input type=\"radio\" class=\"form-check-input form-control flat-blue only-admin track-change\" name=\"privilege\" id=\"privilege-manager\">\n                            <label class=\"form-check-label mr-2 pointer\" for=\"privilege-manager\"><?php echo langHdl('manager'); ?></label>\n                            <input type=\"radio\" class=\"form-check-input form-control flat-blue track-change\" name=\"privilege\" id=\"privilege-user\">\n                            <label class=\"form-check-label mr-2 pointer\" for=\"privilege-user\"><?php echo langHdl('user'); ?></label>\n                            <input type=\"radio\" class=\"form-check-input form-control flat-blue track-change\" name=\"privilege\" id=\"privilege-ro\">\n                            <label class=\"form-check-label mr-2 pointer\" for=\"privilege-ro\"><?php echo langHdl('read_only'); ?></label>\n                        </div>\n                        <div class=\"form-group not-for-admin\">\n                            <label for=\"form-roles\"><?php echo langHdl('roles'); ?></label>\n                            <select id=\"form-roles\" class=\"form-control form-item-control select2 no-root required track-change\" style=\"width:100%;\" multiple=\"multiple\">\n                                <?php echo $optionsRoles; ?>\n                            </select>\n                        </div>\n                        <div class=\"form-group not-for-admin\">\n                            <label for=\"form-managedby\"><?php echo langHdl('managed_by'); ?></label>\n                            <select id=\"form-managedby\" class=\"form-control form-item-control select2 no-root required track-change\" style=\"width:100%;\">\n                                <?php echo $optionsManagedBy; ?>\n                            </select>\n                        </div>\n                        <div class=\"form-group not-for-admin\">\n                            <label for=\"form-auth\"><?php echo langHdl('authorized_groups'); ?></label>\n                            <select id=\"form-auth\" class=\"form-control form-item-control select2 no-root track-change\" style=\"width:100%;\" multiple=\"multiple\">\n                                <?php echo $foldersList; ?>\n                            </select>\n                        </div>\n                        <div class=\"form-group not-for-admin\">\n                            <label for=\"form-forbid\"><?php echo langHdl('forbidden_groups'); ?></label>\n                            <select id=\"form-forbid\" class=\"form-control form-item-control select2 no-root track-change\" style=\"width:100%;\" multiple=\"multiple\">\n                                <?php echo $foldersList; ?>\n                            </select>\n                        </div>\n                        <div class=\"form-group not-for-admin\">\n                            <label for=\"form-forbid\"><?php echo langHdl('special'); ?></label>\n                        </div>\n                        <div class=\"form-group not-for-admin\">\n                            <input type=\"checkbox\" class=\"form-check-input form-control flat-blue track-change\" id=\"form-create-root-folder\">\n                            <label class=\"form-check-label mr-2\" for=\"form-create-root-folder\"><?php echo langHdl('can_create_root_folder'); ?></label>\n                        </div>\n                        <div class=\"form-group not-for-admin\">\n                            <input type=\"checkbox\" class=\"form-check-input form-control flat-blue track-change\" id=\"form-create-personal-folder\">\n                            <label class=\"form-check-label mr-2\" for=\"form-create-personal-folder\"><?php echo langHdl('enable_personal_folder_for_this_user'); ?></label>\n                        </div>\n                        <div class=\"form-group not-for-admin\" id=\"group-create-special-folder\">\n                            <input type=\"checkbox\" class=\"form-check-input form-control flat-blue track-change\" id=\"form-create-special-folder\">\n                            <label class=\"form-check-label mr-2\" for=\"form-create-special-folder\"><?php echo langHdl('auto_create_folder_role'); ?></label>\n                            <input type=\"text\" class=\"form-control clear-me mt-1 purify\" id=\"form-special-folder\" data-field=\"\" disabled=\"true\" placeholder=\"<?php echo langHdl('label'); ?>\">\n                        </div>\n                        <div class=\"form-group not-for-admin\" id=\"form-create-mfa-enabled-div\">\n                            <input type=\"checkbox\" class=\"form-check-input form-control flat-blue track-change\" id=\"form-create-mfa-enabled\">\n                            <label class=\"form-check-label mr-2\" for=\"form-create-mfa-enabled\"><?php echo langHdl('mfa_enabled'); ?></label>\n                        </div>\n                    </div>\n                    <!-- /.card-body -->\n                </form>\n\n                <div class=\"card-footer\">\n                    <button type=\"button\" class=\"btn btn-primary tp-action\" data-action=\"submit\"><?php echo langHdl('submit'); ?></button>\n                    <button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- USER LOGS -->\n    <div class=\"row hidden extra-form\" id=\"row-logs\">\n        <div class=\"col-12\">\n            <div class=\"card card-primary\">\n                <div class=\"card-header\">\n                    <h3 class=\"card-title\"><?php echo langHdl('logs_for_user'); ?> <span id=\"row-logs-title\"></span></h3>\n                </div>\n\n                <!-- /.card-header -->\n                <!-- table start -->\n                <div class=\"card-body form\" id=\"user-logs\">\n                    <table id=\"table-logs\" class=\"table table-striped table-responsive\" style=\"width:100%\">\n                        <thead>\n                            <tr>\n                                <th><?php echo langHdl('date'); ?></th>\n                                <th><?php echo langHdl('activity'); ?></th>\n                                <th><?php echo langHdl('label'); ?></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                        </tbody>\n                    </table>\n                </div>\n\n                <div class=\"card-footer\">\n                    <button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- USER VISIBLE FOLDERS -->\n    <div class=\"row hidden extra-form\" id=\"row-folders\">\n        <div class=\"col-12\">\n            <div class=\"card card-primary\">\n                <div class=\"card-header\">\n                    <h3 class=\"card-title\"><?php echo langHdl('access_rights_for_user'); ?> <span id=\"row-folders-title\"></span></h3>\n                </div>\n\n                <!-- /.card-header -->\n                <!-- table start -->\n                <div class=\"card-body\" id=\"row-folders-results\">\n\n                </div>\n\n                <div class=\"card-footer\">\n                    <button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- PROPAGATE USER RIGHTS -->\n    <div class=\"row hidden extra-form\" id=\"row-propagate\">\n        <div class=\"col-12\">\n            <div class=\"card card-primary\">\n                <div class=\"card-header\">\n                    <h3 class=\"card-title\"><?php echo langHdl('propagate_user_rights'); ?></h3>\n                </div>\n\n                <!-- /.card-header -->\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"callout callout-info col-12\">\n                            <i class=\"fa-solid fa-info fa-lg mr-2\"></i><?php echo langHdl('share_rights_info'); ?>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"propagate-from\"><?php echo langHdl('share_rights_source'); ?></label>\n                        <select id=\"propagate-from\" class=\"form-control form-item-control select2\" style=\"width:100%;\">\n                            <?php echo $optionsRoles; ?>\n                        </select>\n                    </div>\n\n                    <div class=\"form-group ml-5\">\n                        <label><i class=\"far fa-hand-point-right fa-xs mr-2\"></i><?php echo langHdl('functions'); ?></label>\n                        <span id=\"propagate-user-roles\"></span>\n                    </div>\n\n                    <div class=\"form-group ml-5\">\n                        <label><i class=\"far fa-hand-point-right fa-xs mr-2\"></i><?php echo langHdl('managed_by'); ?></label>\n                        <span id=\"propagate-user-managedby\"></span>\n                    </div>\n\n                    <div class=\"form-group ml-5\">\n                        <label><i class=\"far fa-hand-point-right fa-xs mr-2\"></i><?php echo langHdl('authorized_groups'); ?></label>\n                        <span id=\"propagate-user-allowed\"></span>\n                    </div>\n\n                    <div class=\"form-group ml-5\">\n                        <label><i class=\"far fa-hand-point-right fa-xs mr-2\"></i><?php echo langHdl('forbidden_groups'); ?></label>\n                        <span id=\"propagate-user-fordidden\"></span>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"propagate-to\"><?php echo langHdl('share_rights_destination'); ?></label>\n                        <select id=\"propagate-to\" class=\"form-control form-item-control select2\" style=\"width:100%;\" multiple=\"multiple\">\n                            <?php echo $optionsRoles; ?>\n                        </select>\n                    </div>\n\n                </div>\n\n\n                <div class=\"card-footer\">\n                    <button type=\"button\" class=\"btn btn-primary tp-action\" data-action=\"do-propagate\"><?php echo langHdl('perform'); ?></button>\n                    <button type=\"button\" class=\"btn btn-default float-right tp-action\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n</section>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n * @project   Teampass\n * @file      admin.queries.php\n * ---\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n * @copyright 2009-2023 Teampass.net\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n * @see       https://www.teampass.net\n */\n\n\nrequire_once 'SecureHandler.php';\nsession_name('teampass_session');\nsession_start();\nif (\n    isset($_SESSION['CPM']) === false\n    || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id'])\n    || isset($_SESSION['key']) === false || empty($_SESSION['key'])\n) {\n    die('Hacking attempt...');\n}\n\n// Load config if $SETTINGS not defined\nif (isset($SETTINGS['cpassman_dir']) === false || empty($SETTINGS['cpassman_dir'])) {\n    if (file_exists('../includes/config/tp.config.php')) {\n        include_once '../includes/config/tp.config.php';\n    } elseif (file_exists('./includes/config/tp.config.php')) {\n        include_once './includes/config/tp.config.php';\n    } elseif (file_exists('../../includes/config/tp.config.php')) {\n        include_once '../../includes/config/tp.config.php';\n    } else {\n        throw new Exception(\"Error file '/includes/config/tp.config.php' not exists\", 1);\n    }\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/config/include.php';\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (!checkUser($_SESSION['user_id'], $_SESSION['key'], 'options', $SETTINGS)) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED; //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/language/' . $_SESSION['user']['user_language'] . '.php';\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/config/settings.php';\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/config/tp.config.php';\n\nheader('Content-type: text/html; charset=utf-8');\nheader('Cache-Control: no-cache, no-store, must-revalidate');\n\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/SplClassLoader.php';\n\n// connect to the server\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Database/Meekrodb/db.class.php';\nif (defined('DB_PASSWD_CLEAR') === false) {\n    define('DB_PASSWD_CLEAR', defuseReturnDecrypted(DB_PASSWD, $SETTINGS));\n}\nDB::$host = DB_HOST;\nDB::$user = DB_USER;\nDB::$password = DB_PASSWD_CLEAR;\nDB::$dbName = DB_NAME;\nDB::$port = DB_PORT;\nDB::$encoding = DB_ENCODING;\nDB::$ssl = DB_SSL;\nDB::$connect_options = DB_CONNECT_OPTIONS;\n\n//Load Tree\n$tree = new SplClassLoader('Tree\\NestedTree', '../includes/libraries');\n$tree->register();\n$tree = new Tree\\NestedTree\\NestedTree(prefixTable('nested_tree'), 'id', 'parent_id', 'title');\n\n//Load AES\n$aes = new SplClassLoader('Encryption\\Crypt', '../includes/libraries');\n$aes->register();\n\n// Prepare POST variables\n$post_type = filter_input(INPUT_POST, 'type', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n$post_data = filter_input(INPUT_POST, 'data', FILTER_SANITIZE_FULL_SPECIAL_CHARS, FILTER_FLAG_NO_ENCODE_QUOTES);\n$post_key = filter_input(INPUT_POST, 'key', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n$post_id = filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT);\n$post_status = filter_input(INPUT_POST, 'status', FILTER_SANITIZE_NUMBER_INT);\n$post_label = filter_input(INPUT_POST, 'label', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n$post_action = filter_input(INPUT_POST, 'action', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n$post_cpt = filter_input(INPUT_POST, 'cpt', FILTER_SANITIZE_NUMBER_INT);\n$post_object = filter_input(INPUT_POST, 'object', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n$post_start = filter_input(INPUT_POST, 'start', FILTER_SANITIZE_NUMBER_INT);\n$post_length = filter_input(INPUT_POST, 'length', FILTER_SANITIZE_NUMBER_INT);\n$post_option = filter_input(INPUT_POST, 'option', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n$post_nbItems = filter_input(INPUT_POST, 'nbItems', FILTER_SANITIZE_NUMBER_INT);\n$post_counter = filter_input(INPUT_POST, 'counter', FILTER_SANITIZE_NUMBER_INT);\n$post_list = filter_input(INPUT_POST, 'list', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n\nswitch ($post_type) {\n        //CASE for getting informations about the tool\n    case 'cpm_status':\n        $text = '<ul>';\n        $error = '';\n        if (TP_ADMIN_NO_INFO === false) {\n            if (isset($SETTINGS['get_tp_info']) && (int) $SETTINGS['get_tp_info'] === 1) {\n                // Get info about Teampass\n                if (\n                    isset($SETTINGS['proxy_ip']) === true && empty($SETTINGS['proxy_ip']) === false &&\n                    isset($SETTINGS['proxy_port']) === true && empty($SETTINGS['proxy_port']) === false\n                ) {\n                    $context = stream_context_create(\n                        array(\n                            'http' => array(\n                                'ignore_errors' => true,\n                                'proxy' => $SETTINGS['proxy_ip'] . ':' . $SETTINGS['proxy_port'],\n                            ),\n                        )\n                    );\n                } else {\n                    $context = stream_context_create(\n                        array(\n                            'http' => array(\n                                'ignore_errors' => true,\n                            ),\n                        )\n                    );\n                }\n\n                $json = @file_get_contents('https://teampass.net/utils/teampass_info.json', false, $context);\n                if ($json !== false) {\n                    $json_array = json_decode($json, true);\n\n                    // About version\n                    $text .= '<li><u>' . $LANG['your_version'] . '</u> : ' . TP_VERSION;\n                    if (floatval(TP_VERSION) < floatval($json_array['info']['version'])) {\n                        $text .= '&nbsp;&nbsp;<b>' . $LANG['please_update'] . '</b>';\n                    }\n                    $text .= '</li>';\n\n                    // Libraries\n                    $text .= '<li><u>Libraries</u> :</li>';\n                    foreach ($json_array['libraries'] as $key => $val) {\n                        $text .= \"<li>&nbsp;<span class='fa fa-caret-right'></span>&nbsp;\" . $key . \" (<a href='\" . $val . \"' target='_blank'>\" . $val . '</a>)</li>';\n                    }\n                }\n            } else {\n                $error = 'conf_block';\n            }\n        } else {\n            $error = 'conf_block';\n        }\n        $text .= '</ul>';\n\n        echo '[{\"error\":\"' . $error . '\" , \"output\":\"' . str_replace(array(\"\\n\", \"\\t\", \"\\r\"), '', $text) . '\"}]';\n        break;\n        \n\n        //##########################################################\n        //CASE for creating a DB backup\n    case 'admin_action_db_backup':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        require_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n        $return = '';\n\n        //Get all tables\n        $tables = array();\n        $result = DB::query('SHOW TABLES');\n        foreach ($result as $row) {\n            $tables[] = $row['Tables_in_' . $database];\n        }\n\n        //cycle through\n        foreach ($tables as $table) {\n            if (defined('DB_PREFIX') || substr_count($table, DB_PREFIX) > 0) {\n                // Do query\n                $result = DB::queryRaw('SELECT * FROM ' . $table);\n                DB::queryRaw(\n                    'SELECT *\n                    FROM INFORMATION_SCHEMA.COLUMNS\n                    WHERE table_schema = %s\n                    AND table_name = %s',\n                    $database,\n                    $table\n                );\n                $numFields = DB::count();\n\n                // prepare a drop table\n                $return .= 'DROP TABLE ' . $table . ';';\n                $row2 = DB::queryfirstrow('SHOW CREATE TABLE ' . $table);\n                $return .= \"\\n\\n\" . $row2['Create Table'] . \";\\n\\n\";\n\n                //prepare all fields and datas\n                for ($i = 0; $i < $numFields; ++$i) {\n                    while ($row = $result->fetch_row()) {\n                        $return .= 'INSERT INTO ' . $table . ' VALUES(';\n                        for ($j = 0; $j < $numFields; ++$j) {\n                            $row[$j] = addslashes($row[$j]);\n                            $row[$j] = preg_replace(\"/\\n/\", '\\\\n', $row[$j]);\n                            if (isset($row[$j])) {\n                                $return .= '\"' . $row[$j] . '\"';\n                            } else {\n                                $return .= 'NULL';\n                            }\n                            if ($j < ($numFields - 1)) {\n                                $return .= ',';\n                            }\n                        }\n                        $return .= \");\\n\";\n                    }\n                }\n                $return .= \"\\n\\n\\n\";\n            }\n        }\n\n        if (!empty($return)) {\n            // get a token\n            $token = GenerateCryptKey(20, false, true, true, false, true, $SETTINGS);\n\n            //save file\n            $filename = time() . '-' . $token . '.sql';\n            $handle = fopen($SETTINGS['path_to_files_folder'] . '/' . $filename, 'w+');\n            if ($handle !== false) {\n                //write file\n                fwrite($handle, $return);\n                fclose($handle);\n            }\n\n            // Encrypt the file\n            if (empty($post_option) === false) {\n                // Encrypt the file\n                prepareFileWithDefuse(\n                    'encrypt',\n                    $SETTINGS['path_to_files_folder'] . '/' . $filename,\n                    $SETTINGS['path_to_files_folder'] . '/defuse_temp_' . $filename,\n                    $SETTINGS,\n                    $post_option\n                );\n\n                // Do clean\n                unlink($SETTINGS['path_to_files_folder'] . '/' . $filename);\n                rename(\n                    $SETTINGS['path_to_files_folder'] . '/defuse_temp_' . $filename,\n                    $SETTINGS['path_to_files_folder'] . '/' . $filename\n                );\n            }\n\n            //generate 2d key\n            $_SESSION['key_tmp'] = GenerateCryptKey(20, false, true, true, false, true, $SETTINGS);\n\n            //update LOG\n            logEvents($SETTINGS, 'admin_action', 'dataBase backup', (string) $_SESSION['user_id'], $_SESSION['login']);\n\n            echo '[{\"result\":\"db_backup\" , \"href\":\"sources/downloadFile.php?name=' . urlencode($filename) . '&sub=files&file=' . $filename . '&type=sql&key=' . $_SESSION['key'] . '&key_tmp=' . $_SESSION['key_tmp'] . '&pathIsFiles=1\"}]';\n        }\n        break;\n\n        //##########################################################\n        //CASE for restoring a DB backup\n    case 'admin_action_db_restore':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        include_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n\n        $dataPost = explode('&', $post_option);\n        $file = htmlspecialchars($dataPost[0]);\n        $key = htmlspecialchars($dataPost[1]);\n\n        // Get filename from database\n        $data = DB::queryFirstRow(\n            'SELECT valeur\n            FROM ' . prefixTable('misc') . '\n            WHERE increment_id = %i',\n            $file\n        );\n\n        $file = $data['valeur'];\n\n        // Delete operation id\n        DB::delete(\n            prefixTable('misc'),\n            'increment_id = %i',\n            $file\n        );\n\n        // Undecrypt the file\n        if (empty($key) === false) {\n            // Decrypt the file\n            $ret = prepareFileWithDefuse(\n                'decrypt',\n                $SETTINGS['path_to_files_folder'] . '/' . $file,\n                $SETTINGS['path_to_files_folder'] . '/defuse_temp_' . $file,\n                $SETTINGS,\n                $key\n            );\n\n            if (empty($ret) === false) {\n                echo '[{\"result\":\"db_restore\" , \"message\":\"' . $ret . '\"}]';\n                break;\n            }\n\n            // Do clean\n            fileDelete($SETTINGS['path_to_files_folder'] . '/' . $file, $SETTINGS);\n            $file = $SETTINGS['path_to_files_folder'] . '/defuse_temp_' . $file;\n        } else {\n            $file = $SETTINGS['path_to_files_folder'] . '/' . $file;\n        }\n\n        //read sql file\n        $handle = fopen($file, 'r');\n        $query = '';\n        while (!feof($handle)) {\n            $query .= fgets($handle, 4096);\n            if (substr(rtrim($query), -1) === ';') {\n                //launch query\n                DB::queryRaw($query);\n                $query = '';\n            }\n        }\n        fclose($handle);\n\n        //delete file\n        unlink($SETTINGS['path_to_files_folder'] . '/' . $file);\n\n        //Show done\n        echo '[{\"result\":\"db_restore\" , \"message\":\"\"}]';\n        break;\n\n        //##########################################################\n        //CASE for optimizing the DB\n    case 'admin_action_db_optimize':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        //Get all tables\n        $alltables = DB::query('SHOW TABLES');\n        foreach ($alltables as $table) {\n            foreach ($table as $i => $tablename) {\n                if (substr_count($tablename, DB_PREFIX) > 0) {\n                    // launch optimization quieries\n                    DB::query('ANALYZE TABLE `' . $tablename . '`');\n                    DB::query('OPTIMIZE TABLE `' . $tablename . '`');\n                }\n            }\n        }\n\n        //Clean up LOG_ITEMS table\n        $rows = DB::query(\n            'SELECT id\n            FROM ' . prefixTable('items') . '\n            ORDER BY id ASC'\n        );\n        foreach ($rows as $item) {\n            DB::query(\n                'SELECT * FROM ' . prefixTable('log_items') . ' WHERE id_item = %i AND action = %s',\n                $item['id'],\n                'at_creation'\n            );\n            $counter = DB::count();\n            if ($counter === 0) {\n                //Create new at_creation entry\n                $rowTmp = DB::queryFirstRow(\n                    'SELECT date, id_user FROM ' . prefixTable('log_items') . ' WHERE id_item=%i ORDER BY date ASC',\n                    $item['id']\n                );\n                DB::insert(\n                    prefixTable('log_items'),\n                    array(\n                        'id_item' => $item['id'],\n                        'date' => $rowTmp['date'] - 1,\n                        'id_user' => empty($rowTmp['id_user']) === true ? 1 : $rowTmp['id_user'],\n                        'action' => 'at_creation',\n                        'raison' => '',\n                    )\n                );\n            }\n        }\n\n        // Log\n        logEvents(\n            $SETTINGS,\n            'system',\n            'admin_action_db_optimize',\n            (string) $_SESSION['user_id'],\n            $_SESSION['login'],\n            'success'\n        );\n\n        //Show done\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => langHdl('last_execution') . ' ' .\n                    date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) time()) .\n                    '<i class=\"fas fa-check text-success ml-2\"></i>',\n            ),\n            'encode'\n        );\n        break;\n\n        \n\n        /*\n    * Reload the Cache table\n    */\n    case 'admin_action_reload_cache_table':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        require_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n        updateCacheTable('reload', $SETTINGS, NULL);\n\n        // Log\n        logEvents(\n            $SETTINGS,\n            'system',\n            'admin_action_reload_cache_table',\n            (string) $_SESSION['user_id'],\n            $_SESSION['login'],\n            'success'\n        );\n\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            [\n                'error' => false,\n                'message' => langHdl('last_execution') . ' ' .\n                    date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) time()) .\n                    '<i class=\"fas fa-check text-success mr-2\"></i>',\n            ],\n            'encode'\n        );\n        break;\n\n        /*\n       * REBUILD CONFIG FILE\n    */\n    case 'admin_action_rebuild_config_file':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                [\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ],\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // Perform\n        include_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n        $ret = handleConfigFile('rebuild', $SETTINGS);\n\n        // Log\n        logEvents(\n            $SETTINGS,\n            'system',\n            'admin_action_rebuild_config_file',\n            (string) $_SESSION['user_id'],\n            $_SESSION['login'],\n            $ret === true ? 'success' : $ret\n        );\n\n        if ($ret !== true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => $ret,\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => langHdl('last_execution') . ' ' .\n                    date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) time()) .\n                    '<i class=\"fas fa-check text-success ml-2\"></i>',\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n    * Decrypt a backup file\n    */\n    case 'admin_action_backup_decrypt':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // Init\n        $msg = '';\n        $result = '';\n        $filename = $post_option;\n        $tp_settings = [];\n        //get backups infos\n        $rows = DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s', 'admin');\n        foreach ($rows as $record) {\n            $tp_settings[$record['intitule']] = $record['valeur'];\n        }\n\n        // check if backup file is in DB.\n        // If YES then it is encrypted with DEFUSE\n        $bck = DB::queryFirstRow('SELECT valeur FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'backup', 'filename');\n\n        //read file\n        $return = '';\n        $Fnm = $tp_settings['bck_script_path'] . '/' . $filename . '.sql';\n        if (file_exists($Fnm)) {\n            if (!empty($bck) && $bck['valeur'] === $filename) {\n                $err = '';\n\n                // it means that file is DEFUSE encrypted\n                include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/Crypto.php';\n                include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/DerivedKeys.php';\n                include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/KeyOrPassword.php';\n                include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/File.php';\n                include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/Core.php';\n\n                try {\n                    \\Defuse\\Crypto\\File::decryptFileWithPassword(\n                        $SETTINGS['bck_script_path'] . '/' . $post_option . '.sql',\n                        $SETTINGS['bck_script_path'] . '/' . str_replace('encrypted', 'clear', $filename) . '.sql',\n                        base64_decode($SETTINGS['bck_script_key'])\n                    );\n                } catch (Defuse\\Crypto\\Exception\\WrongKeyOrModifiedCiphertextException $ex) {\n                    $err = 'An attack! Either the wrong key was loaded, or the ciphertext has changed since it was created either corrupted in the database or intentionally modified by someone trying to carry out an attack.';\n                }\n\n                if (!empty($err)) {\n                    echo '[{ \"result\":\"backup_decrypt_fails\" , \"msg\":\"' . $err . '\"}]';\n                    break;\n                }\n            } else {\n                // file is bCrypt encrypted\n                $inF = fopen($Fnm, 'r');\n                if ($inF !== false) {\n                    while (feof($inF) === false) {\n                        $return .= fgets($inF, 4096);\n                    }\n                    fclose($inF);\n                }\n\n                $return = Encryption\\Crypt\\aesctr::decrypt(\n                    /* @scrutinizer ignore-type */\n                    $return,\n                    /* @scrutinizer ignore-type */\n                    base64_decode($tp_settings['bck_script_key']),\n                    256\n                );\n\n                //save the file\n                $handle = fopen($tp_settings['bck_script_path'] . '/' . $filename . '.clear.sql', 'w+');\n                if ($handle !== false) {\n                    fwrite($handle, $return);\n                    fclose($handle);\n                }\n            }\n            $result = 'backup_decrypt_success';\n            $msg = $tp_settings['bck_script_path'] . '/' . $filename . '.clear.sql';\n        } else {\n            $result = 'backup_decrypt_fails';\n            $msg = 'File not found: ' . $Fnm;\n        }\n        echo '[{ \"result\":\"' . $result . '\" , \"msg\":\"' . $msg . '\"}]';\n        break;\n\n        /*\n    * Change SALT Key START\n    */\n    case 'admin_action_change_salt_key___start':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        $error = '';\n        require_once 'main.functions.php';\n\n        // store old sk\n        $_SESSION['reencrypt_old_salt'] = file_get_contents(SECUREPATH.'/'.SECUREFILE);\n\n        // generate new saltkey\n        $old_sk_filename = SECUREPATH.'/'.SECUREFILE . date('Y_m_d', mktime(0, 0, 0, (int) date('m'), (int) date('d'), (int) date('y'))) . '.' . time();\n        copy(\n            SECUREPATH.'/'.SECUREFILE,\n            $old_sk_filename\n        );\n        $new_key = defuse_generate_key();\n        file_put_contents(\n            SECUREPATH.'/'.SECUREFILE,\n            $new_key\n        );\n\n        // store new sk\n        $_SESSION['reencrypt_new_salt'] = file_get_contents(SECUREPATH.'/'.SECUREFILE);\n\n        //put tool in maintenance.\n        DB::update(\n            prefixTable('misc'),\n            array(\n                'valeur' => '1',\n            ),\n            'intitule = %s AND type= %s',\n            'maintenance_mode',\n            'admin'\n        );\n        //log\n        logEvents($SETTINGS, 'system', 'change_salt_key', (string) $_SESSION['user_id'], $_SESSION['login']);\n\n        // get number of items to change\n        DB::query('SELECT id FROM ' . prefixTable('items') . ' WHERE perso = %i', 0);\n        $nb_of_items = DB::count();\n\n        // create backup table\n        DB::query('DROP TABLE IF EXISTS ' . prefixTable('sk_reencrypt_backup'));\n        DB::query(\n            'CREATE TABLE `' . prefixTable('sk_reencrypt_backup') . '` (\n            `id` int(12) NOT null AUTO_INCREMENT,\n            `current_table` varchar(100) NOT NULL,\n            `current_field` varchar(500) NOT NULL,\n            `value_id` varchar(500) NOT NULL,\n            `value` text NOT NULL,\n            `value2` varchar(500) NOT NULL,\n            `current_sql` text NOT NULL,\n            `result` text NOT NULL,\n            PRIMARY KEY (`id`)\n            ) CHARSET=utf8;'\n        );\n\n        // store old SK in backup table\n        DB::insert(\n            prefixTable('sk_reencrypt_backup'),\n            array(\n                'current_table' => 'old_sk',\n                'current_field' => 'old_sk',\n                'value_id' => 'old_sk',\n                'value' => $_SESSION['reencrypt_old_salt'],\n                'current_sql' => 'old_sk',\n                'value2' => $old_sk_filename,\n                'result' => 'none',\n            )\n        );\n\n        // delete previous backup files\n        $files = glob($SETTINGS['path_to_upload_folder'] . '/*'); // get all file names\n        foreach ($files as $file) { // iterate files\n            if (is_file($file)) {\n                $file_parts = pathinfo($file);\n                if (strpos($file_parts['filename'], '.bck-change-sk') !== false) {\n                    unlink($file); // delete file\n                }\n            }\n        }\n\n        // Send back\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n                'nextAction' => 'encrypt_items',\n                'nbOfItems' => $nb_of_items,\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n    * Change SALT Key - ENCRYPT\n    */\n    case 'admin_action_change_salt_key___encrypt':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                    'nextAction' => '',\n                    'nbOfItems' => '',\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        $error = '';\n        require_once 'main.functions.php';\n\n        // prepare SK\n        if (empty($_SESSION['reencrypt_new_salt']) || empty($_SESSION['reencrypt_old_salt'])) {\n            // SK is not correct\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => 'saltkeys are empty???',\n                    'nbOfItems' => '',\n                    'nextAction' => '',\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // what objects to treat\n        if (empty($post_object) === true) {\n            // no more object to treat\n            $nextAction = 'finishing';\n        } else {\n            // manage list of objects\n            $objects = explode(',', $post_object);\n\n            // Allowed values for $_POST['object'] : \"items,logs,files,categories\"\n            if (in_array($objects[0], array('items', 'logs', 'files', 'categories')) === false) {\n                echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => true,\n                        'message' => 'Input `' . $objects[0] . '` is not allowed',\n                        'nbOfItems' => '',\n                        'nextAction' => '',\n                    ),\n                    'encode'\n                );\n                break;\n            }\n\n            if ($objects[0] === 'items') {\n                //change all encrypted data in Items (passwords)\n                $rows = DB::query(\n                    'SELECT id, pw, pw_iv\n                    FROM ' . prefixTable('items') . '\n                    WHERE perso = %s\n                    LIMIT ' . $post_start . ', ' . $post_length,\n                    '0'\n                );\n                foreach ($rows as $record) {\n                    // backup data\n                    DB::insert(\n                        prefixTable('sk_reencrypt_backup'),\n                        array(\n                            'current_table' => 'items',\n                            'current_field' => 'pw',\n                            'value_id' => $record['id'],\n                            'value' => $record['pw'],\n                            'current_sql' => 'UPDATE ' . prefixTable('items') . \" SET pw = '\" . $record['pw'] . \"' WHERE id = '\" . $record['id'] . \"';\",\n                            'value2' => 'none',\n                            'result' => 'none',\n                        )\n                    );\n                    $newID = DB::insertId();\n\n                    $pw = cryption(\n                        $record['pw'],\n                        $_SESSION['reencrypt_old_salt'],\n                        'decrypt',\n                        $SETTINGS\n                    );\n                    //encrypt with new SALT\n                    $encrypt = cryption(\n                        $pw['string'],\n                        $_SESSION['reencrypt_new_salt'],\n                        'encrypt',\n                        $SETTINGS\n                    );\n\n                    //save in DB\n                    DB::update(\n                        prefixTable('items'),\n                        array(\n                            'pw' => $encrypt['string'],\n                            'pw_iv' => '',\n                        ),\n                        'id = %i',\n                        $record['id']\n                    );\n\n                    // update backup table\n                    DB::update(\n                        prefixTable('sk_reencrypt_backup'),\n                        array(\n                            'result' => 'ok',\n                        ),\n                        'id=%i',\n                        $newID\n                    );\n                }\n                // ---\n                // CASE OF LOGS\n                // ---\n            } elseif ($objects[0] === 'logs') {\n                //change all encrypted data in Logs (passwords)\n                $rows = DB::query(\n                    'SELECT raison, increment_id\n                    FROM ' . prefixTable('log_items') . \"\n                    WHERE action = %s AND raison LIKE 'at_pw :%'\n                    LIMIT \" . $post_start . ', ' . $post_length,\n                    'at_modification'\n                );\n                foreach ($rows as $record) {\n                    // backup data\n                    DB::insert(\n                        prefixTable('sk_reencrypt_backup'),\n                        array(\n                            'current_table' => 'log_items',\n                            'current_field' => 'raison',\n                            'value_id' => $record['increment_id'],\n                            'value' => $record['raison'],\n                            'current_sql' => 'UPDATE ' . prefixTable('log_items') . \" SET raison = '\" . $record['raison'] . \"' WHERE increment_id = '\" . $record['increment_id'] . \"';\",\n                            'value2' => 'none',\n                            'result' => 'none',\n                        )\n                    );\n                    $newID = DB::insertId();\n\n                    // extract the pwd\n                    $tmp = explode('at_pw :', $record['raison']);\n                    if (!empty($tmp[1])) {\n                        $pw = cryption(\n                            $tmp[1],\n                            $_SESSION['reencrypt_old_salt'],\n                            'decrypt',\n                            $SETTINGS\n                        );\n                        //encrypt with new SALT\n                        $encrypt = cryption(\n                            $pw['string'],\n                            $_SESSION['reencrypt_new_salt'],\n                            'encrypt',\n                            $SETTINGS\n                        );\n\n                        // save in DB\n                        DB::update(\n                            prefixTable('log_items'),\n                            array(\n                                'raison' => 'at_pw :' . $encrypt['string'],\n                                'encryption_type' => 'defuse',\n                            ),\n                            'increment_id = %i',\n                            $record['increment_id']\n                        );\n\n                        // update backup table\n                        DB::update(\n                            prefixTable('sk_reencrypt_backup'),\n                            array(\n                                'result' => 'ok',\n                            ),\n                            'id=%i',\n                            $newID\n                        );\n                    }\n                }\n                // ---\n                // CASE OF CATEGORIES\n                // ---\n            } elseif ($objects[0] === 'categories') {\n                //change all encrypted data in CATEGORIES (passwords)\n                $rows = DB::query(\n                    'SELECT id, data\n                    FROM ' . prefixTable('categories_items') . '\n                    LIMIT ' . $post_start . ', ' . $post_length\n                );\n                foreach ($rows as $record) {\n                    // backup data\n                    DB::insert(\n                        prefixTable('sk_reencrypt_backup'),\n                        array(\n                            'current_table' => 'categories_items',\n                            'current_field' => 'data',\n                            'value_id' => $record['id'],\n                            'value' => $record['data'],\n                            'current_sql' => 'UPDATE ' . prefixTable('categories_items') . \" SET data = '\" . $record['data'] . \"' WHERE id = '\" . $record['id'] . \"';\",\n                            'value2' => 'none',\n                            'result' => 'none',\n                        )\n                    );\n                    $newID = DB::insertId();\n\n                    $pw = cryption(\n                        $record['data'],\n                        $_SESSION['reencrypt_old_salt'],\n                        'decrypt',\n                        $SETTINGS\n                    );\n                    //encrypt with new SALT\n                    $encrypt = cryption(\n                        $pw['string'],\n                        $_SESSION['reencrypt_new_salt'],\n                        'encrypt',\n                        $SETTINGS\n                    );\n                    // save in DB\n                    DB::update(\n                        prefixTable('categories_items'),\n                        array(\n                            'data' => $encrypt['string'],\n                            'encryption_type' => 'defuse',\n                        ),\n                        'id = %i',\n                        $record['id']\n                    );\n\n                    // update backup table\n                    DB::update(\n                        prefixTable('sk_reencrypt_backup'),\n                        array(\n                            'result' => 'ok',\n                        ),\n                        'id=%i',\n                        $newID\n                    );\n                }\n                // ---\n                // CASE OF FILES\n                // ---\n            } elseif ($objects[0] === 'files') {\n                // Change all encrypted data in FILES (passwords)\n                $rows = DB::query(\n                    'SELECT id, file, status\n                    FROM ' . prefixTable('files') . \"\n                    WHERE status = 'encrypted'\n                    LIMIT \" . $post_start . ', ' . $post_length\n                );\n                foreach ($rows as $record) {\n                    // backup data\n                    DB::insert(\n                        prefixTable('sk_reencrypt_backup'),\n                        array(\n                            'current_table' => 'files',\n                            'current_field' => 'file',\n                            'value_id' => $record['id'],\n                            'value' => $record['file'],\n                            'current_sql' => 'no_query',\n                            'value2' => 'none',\n                            'result' => 'none',\n                        )\n                    );\n                    $newID = DB::insertId();\n\n                    if (file_exists($SETTINGS['path_to_upload_folder'] . '/' . $record['file'])) {\n                        // make a copy of file\n                        if (!copy(\n                            $SETTINGS['path_to_upload_folder'] . '/' . $record['file'],\n                            $SETTINGS['path_to_upload_folder'] . '/' . $record['file'] . '.copy'\n                        )) {\n                            $error = 'Copy not possible';\n                            exit;\n                        } else {\n                            // prepare a bck of file (that will not be deleted)\n                            $backup_filename = $record['file'] . '.bck-change-sk.' . time();\n                            copy(\n                                $SETTINGS['path_to_upload_folder'] . '/' . $record['file'],\n                                $SETTINGS['path_to_upload_folder'] . '/' . $backup_filename\n                            );\n                        }\n\n                        // Treat the file\n                        // STEP1 - Do decryption\n                        prepareFileWithDefuse(\n                            'decrypt',\n                            $SETTINGS['path_to_upload_folder'] . '/' . $record['file'],\n                            $SETTINGS['path_to_upload_folder'] . '/' . $record['file'] . '_encrypted',\n                            $SETTINGS\n                        );\n\n                        // Do cleanup of files\n                        unlink($SETTINGS['path_to_upload_folder'] . '/' . $record['file']);\n\n                        // STEP2 - Do encryption\n                        prepareFileWithDefuse(\n                            'encryp',\n                            $SETTINGS['path_to_upload_folder'] . '/' . $record['file'] . '_encrypted',\n                            $SETTINGS['path_to_upload_folder'] . '/' . $record['file'],\n                            $SETTINGS\n                        );\n\n                        // Do cleanup of files\n                        unlink($SETTINGS['path_to_upload_folder'] . '/' . $record['file'] . '_encrypted');\n\n                        // Update backup table\n                        DB::update(\n                            prefixTable('sk_reencrypt_backup'),\n                            array(\n                                'value2' => $backup_filename,\n                                'result' => 'ok',\n                            ),\n                            'id=%i',\n                            $newID\n                        );\n                    }\n                }\n            }\n\n            $nextStart = intval($post_start) + intval($post_length);\n\n            // check if last item to change has been treated\n            if ($nextStart >= intval($post_nbItems)) {\n                array_shift($objects);\n                $nextAction = implode(',', $objects); // remove first object of the list\n\n                // do some things for new object\n                if (isset($objects[0])) {\n                    if ($objects[0] === 'logs') {\n                        DB::query('SELECT increment_id FROM ' . prefixTable('log_items') . \" WHERE action = %s AND raison LIKE 'at_pw :%'\", 'at_modification');\n                    } elseif ($objects[0] === 'files') {\n                        DB::query('SELECT id FROM ' . prefixTable('files'));\n                    } elseif ($objects[0] === 'categories') {\n                        DB::query('SELECT id FROM ' . prefixTable('categories_items'));\n                    } elseif ($objects[0] === 'custfields') {\n                        DB::query('SELECT raison FROM ' . prefixTable('log_items') . \" WHERE action = %s AND raison LIKE 'at_pw :%'\", 'at_modification');\n                    }\n                    $nb_of_items = DB::count();\n                } else {\n                    // now finishing\n                    $nextAction = 'finishing';\n                    $nb_of_items = $error = $nextStart = '';\n                }\n            } else {\n                $nextAction = $post_object;\n                $nb_of_items = '';\n            }\n        }\n\n        // Send back\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n                'nextAction' => $nextAction,\n                'nextStart' => $nextStart,\n                'nbOfItems' => $nb_of_items,\n                'oldsk' => $_SESSION['reencrypt_old_salt'],\n                'newsk' => $_SESSION['reencrypt_new_salt'],\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n    * Change SALT Key - END\n    */\n    case 'admin_action_change_salt_key___end':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        $error = '';\n\n        // quit maintenance mode.\n        DB::update(\n            prefixTable('misc'),\n            array(\n                'valeur' => '0',\n            ),\n            'intitule = %s AND type= %s',\n            'maintenance_mode',\n            'admin'\n        );\n\n        // Send back\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n                'nextAction' => 'done',\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n    * Change SALT Key - Restore BACKUP data\n    */\n    case 'admin_action_change_salt_key___restore_backup':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // delete files\n        $rows = DB::query(\n            'SELECT current_table, value, value2, current_sql\n            FROM ' . prefixTable('sk_reencrypt_backup')\n        );\n        foreach ($rows as $record) {\n            if ($record['current_table'] === 'items' || $record['current_table'] === 'logs' || $record['current_table'] === 'categories') {\n                // excute query\n                DB::query(\n                    str_replace(\"\\'\", \"'\", $record['current_sql'])\n                );\n            } elseif ($record['current_table'] === 'files') {\n                // restore backup file\n                if (file_exists($SETTINGS['path_to_upload_folder'] . '/' . $record['value'])) {\n                    unlink($SETTINGS['path_to_upload_folder'] . '/' . $record['value']);\n                    if (file_exists($SETTINGS['path_to_upload_folder'] . '/' . $record['value2'])) {\n                        rename(\n                            $SETTINGS['path_to_upload_folder'] . '/' . $record['value2'],\n                            $SETTINGS['path_to_upload_folder'] . '/' . $record['value']\n                        );\n                    }\n                }\n            } elseif ($record['current_table'] === 'old_sk') {\n                $previous_saltkey_filename = $record['value2'];\n            }\n        }\n\n        // restore saltkey file\n        if (file_exists($previous_saltkey_filename)) {\n            unlink(SECUREPATH.'/'.SECUREFILE);\n            rename(\n                $previous_saltkey_filename,\n                SECUREPATH.'/'.SECUREFILE\n            );\n        }\n\n        // drop table\n        DB::query('DROP TABLE IF EXISTS ' . prefixTable('sk_reencrypt_backup'));\n\n        // Send back\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n            ),\n            'encode'\n        );\n\n        break;\n\n        /*\n    * Change SALT Key - Delete BACKUP data\n    */\n    case 'admin_action_change_salt_key___delete_backup':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // delete files\n        $rows = DB::query(\n            'SELECT value, value2\n            FROM ' . prefixTable('sk_reencrypt_backup') . \"\n            WHERE current_table = 'files'\"\n        );\n        foreach ($rows as $record) {\n            if (file_exists($SETTINGS['path_to_upload_folder'] . '/' . $record['value2'])) {\n                unlink($SETTINGS['path_to_upload_folder'] . '/' . $record['value2']);\n            }\n        }\n\n        // drop table\n        DB::query('DROP TABLE IF EXISTS ' . prefixTable('sk_reencrypt_backup'));\n\n        echo '[{\"status\":\"done\"}]';\n        break;\n\n        /*\n    * Test the email configuraiton\n    */\n    case 'admin_email_test_configuration':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // User has an email set?\n        if (empty($_SESSION['user_email'])) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('no_email_set'),\n                ),\n                'encode'\n            );\n            break;\n        } else {\n            require_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n\n            //send email\n            sendEmail(\n                langHdl('admin_email_test_subject'),\n                langHdl('admin_email_test_body'),\n                $_SESSION['user_email'],\n                $SETTINGS\n            );\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                    'message' => '',\n                ),\n                'encode'\n            );\n            break;\n        }\n        break;\n\n        /*\n    * Send emails in backlog\n    */\n    case 'admin_email_send_backlog':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        include_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n\n        $rows = DB::query(\n            'SELECT *\n            FROM ' . prefixTable('emails') . '\n            WHERE status = %s OR status = %s',\n            'not_sent',\n            ''\n        );\n        $counter = DB::count();\n        $error = false;\n        $message = '';\n\n        if ($counter > 0) {\n            // Only treat first email\n            foreach ($rows as $record) {\n                //send email\n                $ret = json_decode(\n                    sendEmail(\n                        $record['subject'],\n                        $record['body'],\n                        $record['receivers'],\n                        $SETTINGS\n                    ),\n                    true\n                );\n\n                if (empty($ret['error']) === false) {\n                    //update item_id in files table\n                    DB::update(\n                        prefixTable('emails'),\n                        array(\n                            'status' => 'not_sent',\n                        ),\n                        'timestamp = %s',\n                        $record['timestamp']\n                    );\n\n                    $error = true;\n                    $message = $ret['message'];\n                } else {\n                    //delete from DB\n                    DB::delete(\n                        prefixTable('emails'),\n                        'timestamp = %s',\n                        $record['timestamp']\n                    );\n\n                    //update LOG\n                    logEvents(\n                        $SETTINGS,\n                        'admin_action',\n                        'Emails backlog',\n                        (string) $_SESSION['user_id'],\n                        $_SESSION['login']\n                    );\n                }\n\n                // Exit loop\n                break;\n            }\n        }\n\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            array(\n                'error' => $error,\n                'message' => $message,\n                'counter' => $counter,\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n    * Send emails in backlog\n    */\n    case 'admin_email_send_backlog_old':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        include_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n\n        $rows = DB::query('SELECT * FROM ' . prefixTable('emails') . ' WHERE status = %s OR status = %s', 'not_sent', '');\n        foreach ($rows as $record) {\n            //send email\n            $ret = json_decode(\n                sendEmail(\n                    $record['subject'],\n                    $record['body'],\n                    $record['receivers'],\n                    $SETTINGS\n                ),\n                true\n            );\n\n            if (empty($ret['error']) === false) {\n                //update item_id in files table\n                DB::update(\n                    prefixTable('emails'),\n                    array(\n                        'status' => 'not_sent',\n                    ),\n                    'timestamp = %s',\n                    $record['timestamp']\n                );\n            } else {\n                //delete from DB\n                DB::delete(prefixTable('emails'), 'timestamp = %s', $record['timestamp']);\n            }\n        }\n\n        //update LOG\n        logEvents($SETTINGS, 'admin_action', 'Emails backlog', (string) $_SESSION['user_id'], $_SESSION['login']);\n\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n    * Attachments encryption\n    */\n    case 'admin_action_attachments_cryption':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        require_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n\n        // init\n        $filesList = array();\n\n        // get through files\n        if (null !== $post_option && empty($post_option) === false) {\n            // Loop on files\n            $rows = DB::query(\n                'SELECT id, file, status\n                FROM ' . prefixTable('files')\n            );\n            foreach ($rows as $record) {\n                if (is_file($SETTINGS['path_to_upload_folder'] . '/' . $record['file'])) {\n                    $addFile = false;\n                    if (($post_option === 'attachments-decrypt' && $record['status'] === 'encrypted')\n                        || ($post_option === 'attachments-encrypt' && $record['status'] === 'clear')\n                    ) {\n                        $addFile = true;\n                    }\n\n                    if ($addFile === true) {\n                        array_push($filesList, $record['id']);\n                    }\n                }\n            }\n        } else {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n        }\n\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n                'list' => $filesList,\n                'counter' => 0,\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n     * Attachments encryption - Treatment in several loops\n     */\n    case 'admin_action_attachments_cryption_continu':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // Prepare variables\n        $post_list = filter_var_array($post_list, FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n        $post_counter = filter_var($post_counter, FILTER_SANITIZE_NUMBER_INT);\n\n        include $SETTINGS['cpassman_dir'] . '/includes/config/settings.php';\n        include_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n\n        $cpt = 0;\n        $continu = true;\n        $newFilesList = array();\n        $message = '';\n\n        // load PhpEncryption library\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/Crypto.php';\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/Encoding.php';\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/DerivedKeys.php';\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/Key.php';\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/KeyOrPassword.php';\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/File.php';\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/RuntimeTests.php';\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/KeyProtectedByPassword.php';\n        include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Encryption/Encryption/Core.php';\n\n        // treat 10 files\n        foreach ($post_list as $file) {\n            if ($cpt < 5) {\n                // Get file name\n                $file_info = DB::queryfirstrow(\n                    'SELECT file\n                    FROM ' . prefixTable('files') . '\n                    WHERE id = %i',\n                    $file\n                );\n\n                // skip file is Coherancey not respected\n                if (is_file($SETTINGS['path_to_upload_folder'] . '/' . $file_info['file'])) {\n                    // Case where we want to decrypt\n                    if ($post_option === 'decrypt') {\n                        prepareFileWithDefuse(\n                            'decrypt',\n                            $SETTINGS['path_to_upload_folder'] . '/' . $file_info['file'],\n                            $SETTINGS['path_to_upload_folder'] . '/defuse_temp_' . $file_info['file'],\n                            $SETTINGS\n                        );\n                        // Case where we want to encrypt\n                    } elseif ($post_option === 'encrypt') {\n                        prepareFileWithDefuse(\n                            'encrypt',\n                            $SETTINGS['path_to_upload_folder'] . '/' . $file_info['file'],\n                            $SETTINGS['path_to_upload_folder'] . '/defuse_temp_' . $file_info['file'],\n                            $SETTINGS\n                        );\n                    }\n                    // Do file cleanup\n                    fileDelete($SETTINGS['path_to_upload_folder'] . '/' . $file_info['file'], $SETTINGS);\n                    rename(\n                        $SETTINGS['path_to_upload_folder'] . '/defuse_temp_' . $file_info['file'],\n                        $SETTINGS['path_to_upload_folder'] . '/' . $file_info['file']\n                    );\n\n                    // store in DB\n                    DB::update(\n                        prefixTable('files'),\n                        array(\n                            'status' => $post_option === 'attachments-decrypt' ? 'clear' : 'encrypted',\n                        ),\n                        'id = %i',\n                        $file\n                    );\n\n                    ++$cpt;\n                }\n            } else {\n                // build list\n                array_push($newFilesList, $file);\n            }\n        }\n\n        // Should we stop\n        if (count($newFilesList) === 0) {\n            $continu = false;\n\n            //update LOG\n            logEvents(\n                $SETTINGS,\n                'admin_action',\n                'attachments_encryption_changed',\n                (string) $_SESSION['user_id'],\n                $_SESSION['login'],\n                $post_option === 'attachments-decrypt' ? 'clear' : 'encrypted'\n            );\n\n            $message = langHdl('last_execution') . ' ' .\n                date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) time()) .\n                '<i class=\"fas fa-check text-success ml-2 mr-3\"></i>';\n        }\n\n        echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => $message,\n                'list' => $newFilesList,\n                'counter' => $post_cpt + $cpt,\n                'continu' => $continu,\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n     * API save key\n     */\n    case 'admin_action_api_save_key':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // decrypt and retrieve data in JSON format\n        $dataReceived = prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            $post_data,\n            'decode'\n        );\n\n        $post_label = isset($dataReceived['label']) === true ? filter_var($dataReceived['label'], FILTER_SANITIZE_FULL_SPECIAL_CHARS) : '';\n        $post_action = filter_var($dataReceived['action'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n        $timestamp = time();\n\n        // add new key\n        if (null !== $post_action && $post_action === 'add') {\n            // Generate KEY\n            require_once 'main.functions.php';\n            $key = GenerateCryptKey(39, false, true, true, false, true, $SETTINGS);\n\n            // Generate objectKey\n            //$object = doDataEncryption($key, SECUREFILE.':'.$timestamp);\n            \n            // Save in DB\n            DB::insert(\n                prefixTable('api'),\n                array(\n                    'increment_id' => null,\n                    'type' => 'key',\n                    'label' => $post_label,\n                    'value' => $key, //$object['encrypted'],\n                    'timestamp' => $timestamp,\n                    //'user_id' => -1,\n                )\n            );\n\n            $post_id = DB::insertId();\n            // Update existing key\n        } elseif (null !== $post_action && $post_action === 'update') {\n            $post_id = filter_var($dataReceived['id'], FILTER_SANITIZE_NUMBER_INT);\n\n            DB::update(\n                prefixTable('api'),\n                array(\n                    'label' => $post_label,\n                    'timestamp' => $timestamp,\n                ),\n                'increment_id=%i',\n                $post_id\n            );\n            // Delete existing key\n        } elseif (null !== $post_action && $post_action === 'delete') {\n            $post_id = filter_var($dataReceived['id'], FILTER_SANITIZE_NUMBER_INT);\n\n            DB::query(\n                'DELETE FROM ' . prefixTable('api') . ' WHERE increment_id = %i',\n                $post_id\n            );\n        }\n\n        // send data\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n                'keyId' => $post_id,\n                'key' => isset($key) === true ? $key : '',\n            ),\n            'encode'\n        );\n        break;\n\n        /*\n       * API save key\n    */\n    case 'admin_action_api_save_ip':\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // Is admin?\n        if ($_SESSION['is_admin'] === true) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // decrypt and retrieve data in JSON format\n        $dataReceived = prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            $post_data,\n            'decode'\n        );\n\n        $post_action = filter_var($dataReceived['action'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n\n        // add new key\n        if (null !== $post_action && $post_action === 'add') {\n            $post_label = filter_var($dataReceived['label'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n            $post_ip = filter_var($dataReceived['ip'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n\n            // Store in DB\n            DB::insert(\n                prefixTable('api'),\n                array(\n                    'increment_id' => null,\n                    'type' => 'ip',\n                    'label' => $post_label,\n                    'value' => $post_ip,\n                    'timestamp' => time(),\n                )\n            );\n\n            $post_id = DB::insertId();\n            // Update existing key\n        } elseif (null !== $post_action && $post_action === 'update') {\n            $post_id = filter_var($dataReceived['id'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n            $post_field = filter_var($dataReceived['field'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n            $post_value = filter_var($dataReceived['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n            if ($post_field === 'value') {\n                $arr = array(\n                    'value' => $post_value,\n                    'timestamp' => time(),\n                );\n            } else {\n                $arr = array(\n                    'label' => $post_value,\n                    'timestamp' => time(),\n                );\n            }\n            DB::update(\n                prefixTable('api'),\n                $arr,\n                'increment_id=%i',\n                $post_id\n            );\n            // Delete existing key\n        } elseif (null !== $post_action && $post_action === 'delete') {\n            $post_id = filter_var($dataReceived['id'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n            DB::query('DELETE FROM ' . prefixTable('api') . ' WHERE increment_id=%i', $post_id);\n        }\n\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n                'ipId' => $post_id,\n            ),\n            'encode'\n        );\n        break;\n\n    case 'save_api_status':\n        // Do query\n        DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'admin', 'api');\n        $counter = DB::count();\n        if ($counter === 0) {\n            DB::insert(\n                prefixTable('misc'),\n                array(\n                    'type' => 'admin',\n                    'intitule' => 'api',\n                    'valeur' => $post_status,\n                )\n            );\n        } else {\n            DB::update(\n                prefixTable('misc'),\n                array(\n                    'valeur' => $post_status,\n                ),\n                'type = %s AND intitule = %s',\n                'admin',\n                'api'\n            );\n        }\n        $SETTINGS['api'] = $post_status;\n        break;\n\n    case 'run_duo_config_check':\n        //Libraries call\n        require_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n        // Check KEY\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // decrypt and retreive data in JSON format\n        $dataReceived = prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            $post_data,\n            'decode'\n        );\n\n        // Check if we have what we need first\n        if (empty($dataReceived['duo_ikey']) || empty($dataReceived['duo_skey']) || empty($dataReceived['duo_host'])) {\n            echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('data_are_missing'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // Load Duo Web SDK\n        require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Authentication/php-jwt/BeforeValidException.php';\n        require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Authentication/php-jwt/ExpiredException.php';\n        require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Authentication/php-jwt/SignatureInvalidException.php';\n        require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Authentication/php-jwt/JWT.php';\n        require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Authentication/php-jwt/Key.php';\n        require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Authentication/DuoUniversal/DuoException.php';\n        require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Authentication/DuoUniversal/Client.php';\n\n        // Run Duo Config Check\n        try {\n            $duo_client = new Duo\\DuoUniversal\\Client(\n                $dataReceived['duo_ikey'],\n                $dataReceived['duo_skey'],\n                $dataReceived['duo_host'],\n                $SETTINGS['cpassman_url'].'/'.DUO_CALLBACK\n            );\n        } catch (Duo\\DuoUniversal\\DuoException $e) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => true,\n                        'message' => langHdl('duo_config_error') . \"<br/>Duo: \" . $e->getMessage(),\n                    ),\n                    'encode'\n            );\n            break;\n        }\n\n        // Run healthcheck against Duo with the config\n        try {\n            $duo_client->healthCheck();\n        } catch (Duo\\DuoUniversal\\DuoException $e) {\n            /*if ($SETTINGS['duo_failmode'] == \"OPEN\") {\n                # If we're failing open, errors in 2FA still allow for success\n                $duo_error = langHdl('duo_error_failopen');\n                $data[\"duo_check\"] = \"open\";\n            } else {\n                # Duo has failed and is unavailable, redirect user to the login page\n                $duo_error = langHdl('duo_error_secure');\n                $data[\"duo_check\"] = \"failed\";\n            }*/\n            $duo_error = langHdl('duo_error_check_config') . \"<br/>Duo: \" . $e->getMessage();\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => true,\n                        'message' => $duo_error,\n                    ),\n                    'encode'\n            );\n            break;\n        }\n\n        // send data\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n            ),\n            'encode'\n        );\n        break;\n\n    case 'save_google_options':\n        // Check KEY and rights\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // decrypt and retreive data in JSON format\n        $dataReceived = prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            $post_data,\n            'decode'\n        );\n\n        // Google Authentication\n        if (htmlspecialchars_decode($dataReceived['google_authentication']) === 'false') {\n            $tmp = 0;\n        } else {\n            $tmp = 1;\n        }\n        DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'admin', 'google_authentication');\n        $counter = DB::count();\n        if ($counter === 0) {\n            DB::insert(\n                prefixTable('misc'),\n                array(\n                    'type' => 'admin',\n                    'intitule' => 'google_authentication',\n                    'valeur' => $tmp,\n                )\n            );\n        } else {\n            DB::update(\n                prefixTable('misc'),\n                array(\n                    'valeur' => $tmp,\n                ),\n                'type = %s AND intitule = %s',\n                'admin',\n                'google_authentication'\n            );\n        }\n        $SETTINGS['google_authentication'] = htmlspecialchars_decode($dataReceived['google_authentication']);\n\n        // ga_website_name\n        if (is_null($dataReceived['ga_website_name']) === false) {\n            DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'admin', 'ga_website_name');\n            $counter = DB::count();\n            if ($counter === 0) {\n                DB::insert(\n                    prefixTable('misc'),\n                    array(\n                        'type' => 'admin',\n                        'intitule' => 'ga_website_name',\n                        'valeur' => htmlspecialchars_decode($dataReceived['ga_website_name']),\n                    )\n                );\n            } else {\n                DB::update(\n                    prefixTable('misc'),\n                    array(\n                        'valeur' => htmlspecialchars_decode($dataReceived['ga_website_name']),\n                    ),\n                    'type = %s AND intitule = %s',\n                    'admin',\n                    'ga_website_name'\n                );\n            }\n            $SETTINGS['ga_website_name'] = htmlspecialchars_decode($dataReceived['ga_website_name']);\n\n            // save change in config file\n            handleConfigFile('update', $SETTINGS, 'ga_website_name', $SETTINGS['ga_website_name']);\n        } else {\n            $SETTINGS['ga_website_name'] = '';\n        }\n\n        // send data\n        echo '[{\"result\" : \"' . addslashes($LANG['done']) . '\" , \"error\" : \"\"}]';\n        break;\n\n    case 'save_agses_options':\n        // Check KEY and rights\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // decrypt and retreive data in JSON format\n        $dataReceived = prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n            $post_data,\n            'decode'\n        );\n\n        // agses_hosted_url\n        if (!is_null($dataReceived['agses_hosted_url'])) {\n            DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'admin', 'agses_hosted_url');\n            $counter = DB::count();\n            if ($counter === 0) {\n                DB::insert(\n                    prefixTable('misc'),\n                    array(\n                        'type' => 'admin',\n                        'intitule' => 'agses_hosted_url',\n                        'valeur' => htmlspecialchars_decode($dataReceived['agses_hosted_url']),\n                    )\n                );\n            } else {\n                DB::update(\n                    prefixTable('misc'),\n                    array(\n                        'valeur' => htmlspecialchars_decode($dataReceived['agses_hosted_url']),\n                    ),\n                    'type = %s AND intitule = %s',\n                    'admin',\n                    'agses_hosted_url'\n                );\n            }\n            $SETTINGS['agses_hosted_url'] = htmlspecialchars_decode($dataReceived['agses_hosted_url']);\n        } else {\n            $SETTINGS['agses_hosted_url'] = '';\n        }\n\n        // agses_hosted_id\n        if (!is_null($dataReceived['agses_hosted_id'])) {\n            DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'admin', 'agses_hosted_id');\n            $counter = DB::count();\n            if ($counter === 0) {\n                DB::insert(\n                    prefixTable('misc'),\n                    array(\n                        'type' => 'admin',\n                        'intitule' => 'agses_hosted_id',\n                        'valeur' => htmlspecialchars_decode($dataReceived['agses_hosted_id']),\n                    )\n                );\n            } else {\n                DB::update(\n                    prefixTable('misc'),\n                    array(\n                        'valeur' => htmlspecialchars_decode($dataReceived['agses_hosted_id']),\n                    ),\n                    'type = %s AND intitule = %s',\n                    'admin',\n                    'agses_hosted_id'\n                );\n            }\n            $SETTINGS['agses_hosted_id'] = htmlspecialchars_decode($dataReceived['agses_hosted_id']);\n        } else {\n            $SETTINGS['agses_hosted_id'] = '';\n        }\n\n        // agses_hosted_apikey\n        if (!is_null($dataReceived['agses_hosted_apikey'])) {\n            DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'admin', 'agses_hosted_apikey');\n            $counter = DB::count();\n            if ($counter === 0) {\n                DB::insert(\n                    prefixTable('misc'),\n                    array(\n                        'type' => 'admin',\n                        'intitule' => 'agses_hosted_apikey',\n                        'valeur' => htmlspecialchars_decode($dataReceived['agses_hosted_apikey']),\n                    )\n                );\n            } else {\n                DB::update(\n                    prefixTable('misc'),\n                    array(\n                        'valeur' => htmlspecialchars_decode($dataReceived['agses_hosted_apikey']),\n                    ),\n                    'type = %s AND intitule = %s',\n                    'admin',\n                    'agses_hosted_apikey'\n                );\n            }\n            $SETTINGS['agses_hosted_apikey'] = htmlspecialchars_decode($dataReceived['agses_hosted_apikey']);\n        } else {\n            $SETTINGS['agses_hosted_apikey'] = '';\n        }\n\n        // send data\n        echo '[{\"result\" : \"' . addslashes($LANG['done']) . '\" , \"error\" : \"\"}]';\n        break;\n\n    case 'save_option_change':\n        // Check KEY and rights\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n        // decrypt and retreive data in JSON format\n        $dataReceived = prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            $post_data,\n            'decode'\n        );\n\n        // prepare data\n        $post_value = filter_var($dataReceived['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n        $post_field = filter_var($dataReceived['field'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n        $post_translate = isset($dataReceived['translate']) === true ? filter_var($dataReceived['translate'], FILTER_SANITIZE_FULL_SPECIAL_CHARS) : '';\n        \n        require_once 'main.functions.php';\n\n        // In case of key, then encrypt it\n        if ($post_field === 'bck_script_passkey') {\n            $post_value = cryption(\n                $post_value,\n                '',\n                'encrypt',\n                $SETTINGS\n            )['string'];\n        }\n\n        // Check if setting is already in DB. If NO then insert, if YES then update.\n        $data = DB::query(\n            'SELECT * FROM ' . prefixTable('misc') . '\n            WHERE type = %s AND intitule = %s',\n            'admin',\n            $post_field\n        );\n        $counter = DB::count();\n        if ($counter === 0) {\n            DB::insert(\n                prefixTable('misc'),\n                array(\n                    'valeur' => $post_value,\n                    'type' => 'admin',\n                    'intitule' => $post_field,\n                )\n            );\n            // in case of stats enabled, add the actual time\n            if ($post_field === 'send_stats') {\n                DB::insert(\n                    prefixTable('misc'),\n                    array(\n                        'valeur' => time(),\n                        'type' => 'admin',\n                        'intitule' => $post_field . '_time',\n                    )\n                );\n            }\n        } else {\n            DB::update(\n                prefixTable('misc'),\n                array(\n                    'valeur' => $post_value,\n                ),\n                'type = %s AND intitule = %s',\n                'admin',\n                $post_field\n            );\n            // in case of stats enabled, update the actual time\n            if ($post_field === 'send_stats') {\n                // Check if previous time exists, if not them insert this value in DB\n                DB::query(\n                    'SELECT * FROM ' . prefixTable('misc') . '\n                    WHERE type = %s AND intitule = %s',\n                    'admin',\n                    $post_field . '_time'\n                );\n                $counter = DB::count();\n                if ($counter === 0) {\n                    DB::insert(\n                        prefixTable('misc'),\n                        array(\n                            'valeur' => 0,\n                            'type' => 'admin',\n                            'intitule' => $post_field . '_time',\n                        )\n                    );\n                } else {\n                    DB::update(\n                        prefixTable('misc'),\n                        array(\n                            'valeur' => 0,\n                        ),\n                        'type = %s AND intitule = %s',\n                        'admin',\n                        $post_field\n                    );\n                }\n            }\n        }\n\n        // special Cases\n        if ($post_field === 'cpassman_url') {\n            // update also jsUrl for CSFP protection\n            $jsUrl = $post_value . '/includes/libraries/csrfp/js/csrfprotector.js';\n            $csrfp_file = '../includes/libraries/csrfp/libs/csrfp.config.php';\n            $data = file_get_contents($csrfp_file);\n            $posJsUrl = strpos($data, '\"jsUrl\" => \"');\n            $posEndLine = strpos($data, '\",', $posJsUrl);\n            $line = substr($data, $posJsUrl, ($posEndLine - $posJsUrl + 2));\n            $newdata = str_replace($line, '\"jsUrl\" => \"' . filter_var($jsUrl, FILTER_SANITIZE_FULL_SPECIAL_CHARS) . '\",', $data);\n            file_put_contents($csrfp_file, $newdata);\n        } elseif ($post_field === 'restricted_to_input' && (int) $post_value === 0) {\n            DB::update(\n                prefixTable('misc'),\n                array(\n                    'valeur' => 0,\n                ),\n                'type = %s AND intitule = %s',\n                'admin',\n                'restricted_to_roles'\n            );\n        }\n\n        // store in SESSION\n        $SETTINGS[$post_field] = $post_value;\n\n        // save change in config file\n        handleConfigFile(\n            'update',\n            $SETTINGS,\n            $post_field,\n            $dataReceived['value']\n        );\n\n        // Encrypt data to return\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'misc' => $counter . ' ; ' . $SETTINGS[$post_field],\n                'message' => empty($post_translate) === false ? langHdl($post_translate) : '',\n            ),\n            'encode'\n        );\n        break;\n\n    case 'get_values_for_statistics':\n        // Check KEY and rights\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // Encrypt data to return\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            getStatisticsData($SETTINGS),\n            'encode'\n        );\n\n        break;\n\n    case 'save_sending_statistics':\n        // Check KEY and rights\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        // send statistics\n        if (null !== $post_status) {\n            DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'admin', 'send_stats');\n            $counter = DB::count();\n            if ($counter === 0) {\n                DB::insert(\n                    prefixTable('misc'),\n                    array(\n                        'type' => 'admin',\n                        'intitule' => 'send_stats',\n                        'valeur' => $post_status,\n                    )\n                );\n            } else {\n                DB::update(\n                    prefixTable('misc'),\n                    array(\n                        'valeur' => $post_status,\n                    ),\n                    'type = %s AND intitule = %s',\n                    'admin',\n                    'send_stats'\n                );\n            }\n            $SETTINGS['send_stats'] = $post_status;\n        } else {\n            $SETTINGS['send_stats'] = '0';\n        }\n\n        // save change in config file\n        handleConfigFile('update', $SETTINGS, 'send_stats', $SETTINGS['send_stats']);\n\n        // send statistics items\n        if (null !== $post_list) {\n            DB::query('SELECT * FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s', 'admin', 'send_statistics_items');\n            $counter = DB::count();\n            if ($counter === 0) {\n                DB::insert(\n                    prefixTable('misc'),\n                    array(\n                        'type' => 'admin',\n                        'intitule' => 'send_statistics_items',\n                        'valeur' => $post_list,\n                    )\n                );\n            } else {\n                DB::update(\n                    prefixTable('misc'),\n                    array(\n                        'valeur' => $post_list,\n                    ),\n                    'type = %s AND intitule = %s',\n                    'admin',\n                    'send_statistics_items'\n                );\n            }\n            $SETTINGS['send_statistics_items'] = $post_list;\n        } else {\n            $SETTINGS['send_statistics_items'] = '';\n        }\n\n        // save change in config file\n        handleConfigFile('update', $SETTINGS, 'send_statistics_items', $SETTINGS['send_statistics_items']);\n\n        // send data\n        echo '[{\"error\" : false}]';\n        break;\n\n    case 'is_backup_table_existing':\n        // Check KEY and rights\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        if (DB::query(\"SHOW TABLES LIKE '\" . prefixTable('sk_reencrypt_backup') . \"'\")) {\n            if (DB::count() === 1) {\n                echo 1;\n            } else {\n                echo 0;\n            }\n        } else {\n            echo 0;\n        }\n\n        break;\n\n    case 'get_list_of_roles':\n        // Check KEY and rights\n        if ($post_key !== $_SESSION['key']) {\n            echo prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('key_is_not_correct'),\n                ),\n                'encode'\n            );\n            break;\n        }\n\n        $json = array();\n        array_push(\n            $json,\n            array(\n                'id' => 0,\n                'title' => langHdl('god'),\n                'selected_administrated_by' => isset($SETTINGS['ldap_new_user_is_administrated_by']) && $SETTINGS['ldap_new_user_is_administrated_by'] === '0' ? 1 : 0,\n                'selected_role' => isset($SETTINGS['ldap_new_user_role']) && $SETTINGS['ldap_new_user_role'] === '0' ? 1 : 0,\n            )\n        );\n\n        $rows = DB::query(\n            'SELECT id, title\n                FROM ' . prefixTable('roles_title') . '\n                ORDER BY title ASC'\n        );\n        foreach ($rows as $record) {\n            array_push(\n                $json,\n                array(\n                    'id' => $record['id'],\n                    'title' => addslashes($record['title']),\n                    'selected_administrated_by' => isset($SETTINGS['ldap_new_user_is_administrated_by']) === true && $SETTINGS['ldap_new_user_is_administrated_by'] === $record['id'] ? 1 : 0,\n                    'selected_role' => isset($SETTINGS['ldap_new_user_role']) === true && $SETTINGS['ldap_new_user_role'] === $record['id'] ? 1 : 0,\n                )\n            );\n        }\n\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            $json, \n            'encode'\n        );\n\n        break;\n}\n"], "filenames": ["includes/js/functions.js", "pages/admin.js.php", "pages/api.js.php", "pages/api.php", "pages/backups.js.php", "pages/emails.js.php", "pages/folders.js.php", "pages/folders.php", "pages/items.js.php", "pages/profile.js.php", "pages/roles.js.php", "pages/users.js.php", "pages/users.php", "sources/admin.queries.php"], "buggy_code_start_loc": [393, 136, 67, 164, 99, 148, 98, 146, 1683, 168, 476, 883, 274, 1877], "buggy_code_end_loc": [436, 136, 402, 221, 197, 195, 752, 197, 4890, 171, 480, 2282, 346, 1891], "fixing_code_start_loc": [393, 137, 68, 164, 99, 147, 99, 146, 1683, 168, 477, 882, 274, 1877], "fixing_code_end_loc": [534, 144, 416, 221, 197, 147, 767, 197, 4917, 171, 487, 2278, 346, 1891], "type": "CWE-116", "message": "Improper Encoding or Escaping of Output in GitHub repository nilsteampassnet/teampass prior to 3.0.9.", "other": {"cve": {"id": "CVE-2023-3190", "sourceIdentifier": "security@huntr.dev", "published": "2023-06-10T09:15:09.343", "lastModified": "2023-06-15T18:40:40.203", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Improper Encoding or Escaping of Output in GitHub repository nilsteampassnet/teampass prior to 3.0.9."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.6, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 2.5}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-116"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:teampass:teampass:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.0.9", "matchCriteriaId": "1FBD6586-DC7F-4FD6-BB8D-9874CCFACB2E"}]}]}], "references": [{"url": "https://github.com/nilsteampassnet/teampass/commit/241dbd4159a5d63b55af426464d30dbb53925705", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/5562c4c4-0475-448f-a451-7c4666bc7180", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/nilsteampassnet/teampass/commit/241dbd4159a5d63b55af426464d30dbb53925705"}}