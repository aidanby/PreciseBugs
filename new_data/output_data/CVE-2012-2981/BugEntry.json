{"buggy_code": ["#!/usr/local/bin/perl\n# edit_mon.cgi\n# Display a form for editing or creating a monitor\n\nrequire './status-lib.pl';\n$access{'edit'} || &error($text{'mon_ecannot'});\n&foreign_require(\"servers\", \"servers-lib.pl\");\n&ReadParse();\n@handlers = &list_handlers();\nif ($in{'type'}) {\n\t# Create a new monitor\n\t$type = $in{'type'};\n\t$title = $text{'mon_create'};\n\tif ($in{'clone'}) {\n\t\t# Clone of existing\n\t\t$serv = &get_service($in{'clone'});\n\t\t}\n\telse {\n\t\t# Totally new\n\t\t$serv = { 'notify' => 'email pager snmp sms',\n\t\t\t  'fails' => 1,\n\t\t\t  'nosched' => 0,\n\t\t\t  'remote' => '*' };\n\t\t}\n\t}\nelse {\n\t# Editing an existing monitor\n\t$serv = &get_service($in{'id'});\n\t$type = $serv->{'type'};\n\t$title = $text{'mon_edit'};\n\t}\n($han) = grep { $_->[0] eq $type } @handlers;\nif ($in{'type'} && !$in{'clone'}) {\n\t$serv->{'desc'} = $han->[1];\n\t}\n&ui_print_header($han->[1], $title, \"\");\n\nprint &ui_form_start(\"save_mon.cgi\", \"post\");\nprint &ui_hidden(\"type\", $in{'type'}),\"\\n\";\nprint &ui_hidden(\"id\", $in{'id'}),\"\\n\";\n@tds = ( \"width=30%\" );\nprint &ui_table_start($text{'mon_header'}, \"width=100%\", 2, \\@tds);\n\n# Check for clone modules of the monitor type\nif (-d \"../$type\") {\n\tlocal @st = stat(\"../$type\");\n\topendir(DIR, \"..\");\n\tforeach $m (readdir(DIR)) {\n\t\tlocal @lst = stat(\"../$m\");\n\t\tif (-l \"../$m\" && $st[1] == $lst[1]) {\n\t\t\t# found a clone\n\t\t\tpush(@clones, $m);\n\t\t\t}\n\t\t}\n\t}\n\n# Show input for description\nprint &ui_table_row($text{'mon_desc'},\n\t\t    &ui_textbox(\"desc\", $serv->{'desc'}, 50),\n\t\t    undef, \\@tds);\n\n# Show current status\nif (!$in{'type'}) {\n\t@stats = &service_status($serv, 1);\n\t$stable = \"<table cellpadding=1 cellspacing=1>\\n\";\n\tforeach $stat (@stats) {\n\t\t$stable .= \"<tr>\\n\";\n\t\tif (@stats > 1 || $stat->{'remote'} ne \"*\") {\n\t\t\t$stable .=\n\t\t\t    \"<td>\".\n\t\t\t    ($stat->{'remote'} eq \"*\" ? $text{'mon_local'}\n\t\t\t\t\t\t      : $stat->{'remote'}).\n\t\t\t    \"</td>\\n\";\n\t\t\t$stable .= \"<td>:</td>\\n\";\n\t\t\t}\n\t\t$stable .= \"<td>\".\n\t\t      ($stat->{'desc'} && $stat->{'up'} == 0 ?\n\t\t\t \"<font color=#ff0000>$stat->{'desc'}</font>\" :\n\t\t       $stat->{'desc'} ? $stat->{'desc'} :\n\t\t       $stat->{'up'} == 1 ? $text{'mon_up'} :\n\t\t       $stat->{'up'} == -1 ? $text{'mon_not'} :\n\t\t       $stat->{'up'} == -2 ? $text{'mon_webmin'} :\n\t\t       $stat->{'up'} == -3 ? $text{'mon_timeout'} :\n\t\t       $stat->{'up'} == -4 ? $text{'mon_skip'} :\n\t\t\t \"<font color=#ff0000>$text{'mon_down'}</font>\").\n\t\t\t\"</td>\\n\";\n\t\t$stable .= \"</tr>\\n\";\n\t\t}\n\t$stable .= \"</table>\\n\";\n\tprint &ui_table_row($text{'mon_status'}, $stable,\n\t\t\t    undef, \\@tds);\n\t}\n\n# Show servers to run on\n@servs = grep { $_->{'user'} } &servers::list_servers_sorted();\n@servs = sort { $a->{'host'} cmp $b->{'host'} } @servs;\nif (@servs) {\n\t# Show list of remote servers, and maybe groups\n\t$s = &ui_select(\"remotes\", [ split(/\\s+/, $serv->{'remote'}) ],\n\t\t\t [ [ \"*\", \"&lt;$text{'mon_local'}&gt;\" ],\n\t\t\t   map { [ $_->{'host'}, $_->{'host'} ] } @servs ],\n\t\t\t 5, 1, 1),\n\t@groups = &servers::list_all_groups(\\@servs);\n\t@groups = sort { $a->{'name'} cmp $b->{'name'} } @groups;\n\tif (@groups) {\n\t\t$s .= &ui_select(\"groups\", [ split(/\\s+/, $serv->{'groups'}) ],\n\t\t\t [ map { [ $_->{'name'}, &group_desc($_) ] } @groups ],\n\t\t\t 5, 1, 1),\n\t\t}\n\tprint &ui_table_row($text{'mon_remotes2'}, $s, undef, \\@tds);\n\t}\nelse {\n\t# Only local is available\n\tprint &ui_hidden(\"remotes\", \"*\"),\"\\n\";\n\t}\n\n# Show emailing schedule\nprint &ui_table_row($text{'mon_nosched'},\n\t\t    &ui_select(\"nosched\", int($serv->{'nosched'}),\n\t\t\t       [ [ 1, $text{'no'} ],\n\t\t\t\t [ 0, $text{'mon_warndef'} ],\n\t\t\t\t [ 3,  $text{'mon_warn1'} ],\n\t\t\t\t [ 2,  $text{'mon_warn0'} ],\n\t\t\t\t [ 4,  $text{'mon_warn2'} ],\n\t\t\t\t [ 5,  $text{'mon_warn3'} ] ]),\n\t\t    undef, \\@tds);\n\n# Show number of failures\nprint &ui_table_row($text{'mon_fails'},\n\t\t    &ui_textbox(\"fails\", $serv->{'fails'}, 5),\n\t\t    undef, \\@tds);\n\n# Show notification mode\n$notify = \"\";\n%notify = map { $_, 1 } split(/\\s+/, $serv->{'notify'});\nforeach $n (&list_notification_modes()) {\n\t$notify .= &ui_checkbox(\"notify\", $n, $text{'mon_notify'.$n},\n\t\t\t\t$notify{$n}).\"\\n\";\n\tdelete($notify{$n});\n\t}\nforeach $n (keys %notify) {\n\t# Don't clear set but un-usable modes\n\tprint &ui_hidden(\"notify\", $n);\n\t}\nprint &ui_table_row($text{'mon_notify'}, $notify,\n\t\t    undef, \\@tds);\n\n# Show extra address to email\nprint &ui_table_row($text{'mon_email'},\n\t\t    &ui_textbox(\"email\", $serv->{'email'}, 60),\n\t\t    undef, \\@tds);\n\n# Show template to use\n@tmpls = &list_templates();\nif (@tmpls) {\n\tif ($in{'type'}) {\n\t\t($deftmpl) = grep { $_->{'desc'} eq $config{'def_tmpl'}} @tmpls;\n\t\tif ($deftmpl) {\n\t\t\t$tid = $deftmpl->{'id'};\n\t\t\t}\n\t\t}\n\telse {\n\t\t$tid = $serv->{'tmpl'};\n\t\t}\n\tprint &ui_table_row($text{'mon_tmpl'},\n\t\t&ui_select(\"tmpl\", $tid,\n\t\t\t   [ [ \"\", \"&lt;$text{'mon_notmpl'}&gt;\" ],\n\t\t\t     map { [ $_->{'id'}, $_->{'desc'} ] } @tmpls ]));\n\t}\n\n# Which clone module to use\nif (@clones) {\n\tlocal %minfo = &get_module_info($type);\n\tprint &ui_table_row($text{'mon_clone'},\n\t\t   &ui_select(\"clone\", $serv->{'clone'},\n\t\t\t      [ [ \"\", $minfo{'desc'} ],\n\t\t\t\tmap { local %cminfo = &get_module_info($_);\n\t\t\t\t      [ $_, $cminfo{'desc'} ] } @clones ]),\n\t\t   undef, \\@tds);\n\t}\n\n# Skip if some other monitor is down\n@servs = &list_services();\nif (@servs) {\n\tprint &ui_table_row($text{'mon_depend'},\n\t  &ui_select(\"depend\", $serv->{'depend'},\n\t\t [ [ \"\", \"&nbsp;\" ],\n\t\t   map { [ $_->{'id'}, $_->{'desc'}.\n\t\t\t\t       \" (\".&nice_remotes($_).\")\" ] }\n\t\t     sort { $a->{'desc'} cmp $b->{'desc'} } @servs ]),\n\t  undef, \\@tds);\n\t}\n\nprint &ui_table_end();\nprint \"<p>\\n\";\nprint &ui_table_start($text{'mon_header2'}, \"width=100%\", 2, \\@tds);\n\n# Show commands to run on up/down\nprint &ui_table_row($text{'mon_ondown'},\n\t\t    &ui_textbox(\"ondown\", $serv->{'ondown'}, 60),\n\t\t    undef, \\@tds);\n\nprint &ui_table_row($text{'mon_onup'},\n\t\t    &ui_textbox(\"onup\", $serv->{'onup'}, 60),\n\t\t    undef, \\@tds);\n\nprint &ui_table_row($text{'mon_ontimeout'},\n\t\t    &ui_textbox(\"ontimeout\", $serv->{'ontimeout'}, 60),\n\t\t    undef, \\@tds);\n\nprint &ui_table_row(\" \", \"<font size=-1>$text{'mon_oninfo'}</font>\",\n\t\t    undef, \\@tds);\n\n# Radio button for where to run commands\nprint &ui_table_row($text{'mon_runon'},\n\t\t    &ui_radio(\"runon\", $serv->{'runon'} ? 1 : 0,\n\t\t\t      [ [ 0, $text{'mon_runon0'} ],\n\t\t\t\t[ 1, $text{'mon_runon1'} ] ]),\n\t\t    undef, \\@tds);\n\nprint &ui_table_end();\n\n# Display inputs for this monitor type\nif ($type =~ /^(\\S+)::(\\S+)$/) {\n\t# From another module\n\t($mod, $mtype) = ($1, $2);\n\t&foreign_require($mod, \"status_monitor.pl\");\n\tprint &ui_table_start($text{'mon_header3'}, \"width=100%\", 4,\n\t\t\t      \\@tds);\n\t&foreign_call($mod, \"load_theme_library\");\n\tprint &foreign_call($mod, \"status_monitor_dialog\", $mtype, $serv);\n\tprint &ui_table_end();\n\t}\nelse {\n\t# From this module\n\tdo \"./${type}-monitor.pl\";\n\t$func = \"show_${type}_dialog\";\n\tif (defined(&$func)) {\n\t\tprint &ui_table_start($text{'mon_header3'}, \"width=100%\", 4,\n\t\t\t\t      \\@tds);\n\t\t&$func($serv);\n\t\tprint &ui_table_end();\n\t\t}\n\t}\n\n# Show history, in a hidden section\nif (!$in{'type'}) {\n\t@history = &list_history($serv,\n\t\t\t\t $in{'all'} ? undef : $config{'history_show'});\n\t}\nif (@history) {\n\tprint &ui_hidden_table_start($text{'mon_header4'}, \"width=100%\", 2,\n\t\t\"history\", defined($in{'all'}) || defined($in{'changes'}));\n\n\t# Build links to switch to changes-only mode or show all history\n\t@links = ( );\n\tif ($in{'changes'}) {\n\t\tpush(@links, \"<a href='edit_mon.cgi?id=$in{'id'}&changes=0&\".\n\t\t\t     \"all=$in{'all'}'>$text{'mon_changes0'}</a>\");\n\t\t}\n\telse {\n\t\tpush(@links, \"<a href='edit_mon.cgi?id=$in{'id'}&changes=1&\".\n\t\t\t     \"all=$in{'all'}'>$text{'mon_changes1'}</a>\");\n\t\t}\n\tif (!$in{'all'}) {\n\t\tpush(@links, \"<a href='edit_mon.cgi?id=$in{'id'}&changes=\".\n\t\t\t     \"$in{'changes'}&all=1'>$text{'mon_all'}</a>\");\n\t\t}\n\tif ($in{'changes'}) {\n\t\t@history = grep { $_->{'old'} ne $_->{'new'} } @history;\n\t\t}\n\n\t# Check if any history events have a value\n\t$anyvalue = 0;\n\tforeach $h (@history) {\n\t\tforeach my $hv (split(/\\//, $h->{'value'})) {\n\t\t\tmy ($vhost, $v) = split(/=/, $hv, 2);\n\t\t\tif ($v ne '') {\n\t\t\t\t$anyvalue++;\n\t\t\t\tlast;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t# Show history table\n\t$links = &ui_links_row(\\@links);\n\t$table = &ui_columns_start([\n\t\t$text{'mon_hwhen'},\n\t\t$text{'mon_hold'},\n\t\t$text{'mon_hnew'},\n\t\t$anyvalue ? ( $text{'mon_hvalue'} ) : ( ) ]);\n\tforeach $h (reverse(@history)) {\n\t\tmy @cols = ( &make_date($h->{'time'}) );\n\t\tforeach my $s ($h->{'old'}, $h->{'new'}) {\n\t\t\tmy @ups;\n\t\t\tmy @statuses = split(/\\s+/, $s);\n\t\t\tforeach my $rs (@statuses) {\n\t\t\t\tmy ($host, $up) = split(/=/, $rs, 2);\n\t\t\t\t$img = \"<img src=\".&get_status_icon($up).\">\";\n\t\t\t\tif ($host ne \"*\") {\n\t\t\t\t\t$img = $host.$img;\n\t\t\t\t\t}\n\t\t\t\telsif (@statuses > 1) {\n\t\t\t\t\t$img = &get_display_hostname().$img;\n\t\t\t\t\t}\n\t\t\t\tpush(@ups, $img);\n\t\t\t\t}\n\t\t\tpush(@cols, join(\" \", @ups));\n\t\t\t}\n\t\tif ($anyvalue) {\n\t\t\tmy @vlist;\n\t\t\tmy @values = split(/\\//, $h->{'value'});\n\t\t\tmy @nice_values = split(/\\//, $h->{'nice_value'});\n\t\t\tfor(my $i=0; $i<@values; $i++) {\n\t\t\t\tmy ($vhost, $v) = split(/=/, $values[$i], 2);\n\t\t\t\tmy (undef, $nv) = split(/=/, $nice_values[$i], 2);\n\t\t\t\tpush(@vlist, $nv || $v);\n\t\t\t\t}\n\t\t\tpush(@cols, join(\" \", @vlist));\n\t\t\t}\n\t\t$table .= &ui_columns_row(\\@cols);\n\t\t}\n\t$table .= &ui_columns_end();\n\tif (@history) {\n\t\tprint &ui_table_row(undef, $links.$table, 2);\n\t\t}\n\telse {\n\t\tprint &ui_table_row(undef, $links.\n\t\t\t&text('mon_nochanges', $config{'history_show'}), 2);\n\t\t}\n\tprint &ui_hidden_table_end();\n\t}\n\n# Show create/delete buttons\nif ($in{'type'}) {\n\tprint &ui_form_end([ [ \"create\", $text{'create'} ] ]);\n\t}\nelse {\n\tprint &ui_form_end([ [ \"save\", $text{'save'} ],\n\t\t\t     [ \"newclone\", $text{'mon_clone2'} ],\n\t\t\t     [ \"delete\", $text{'delete'} ] ]);\n\t}\n\n&ui_print_footer(\"\", $text{'index_return'});\n\n", "index_title=System and Server Status\nindex_name=Service name\nindex_host=On host\nindex_desc=Monitoring\nindex_up=Status\nindex_last=Last check\nindex_local=Local\nindex_add=Add monitor of type:\nindex_sched=Scheduled Monitoring\nindex_scheddesc=Turn scheduled checking of monitors on or off, and set the address to which failures are automatically emailed.\nindex_return=service list\nindex_none=No monitors are currently defined.\nindex_oldtime=Status from last scheduled check at $1\nindex_esnmp=The module is configured to send SNMP traps on the <a href='$3'>Module Config</a> page, but the $1 Perl module is not installed. <a href='$2'>Click here</a> to download and install it now.\nindex_refresh=Refresh Status\nindex_refreshdesc=Perform an immediate refresh of all monitor statuses, instead of waiting for the next scheduled update.\nindex_delete=Delete Selected\nindex_refsel=Refresh Selected\nindex_group=Members of $1\nindex_tmpls=Edit Email Templates\nindex_tmplsdesc=View and edit templates used to construct email messages sent when monitored services go down.\n\ntype_apache=Apache Webserver\ntype_inetd=Internet and RPC Server\ntype_xinetd=Extended Internet Server\ntype_squid=Squid Proxy Server\ntype_bind8=BIND DNS Server\ntype_dnsadmin=BIND 4 DNS Server\ntype_dhcpd=DHCP Server\ntype_tcp=Remote TCP Service\ntype_http=Remote HTTP Service\ntype_sslcert=SSL Certificate\ntype_ftp=Remote FTP Service\ntype_sendmail=Sendmail Server\ntype_postfix=Postfix Server\ntype_ping=Remote Ping\ntype_proc=Check Process\ntype_mysql=MySQL Database Server\ntype_postgresql=PostgreSQL Database Server\ntype_samba=Samba Servers\ntype_nfs=NFS Server\ntype_exec=Execute Command\ntype_file=Check File or Directory\ntype_traffic=Network Traffic\ntype_space=Disk Space\ntype_du=Directory Size\ntype_consume=Disk Space Consumption\ntype_load=Load Average\ntype_change=File or Directory Change\ntype_oldfile=File Not Changed\ntype_qmailadmin=QMail Server\ntype_mon=MON Service Monitor\ntype_jabber=Jabber IM Server\ntype_usermin=Usermin Webserver\ntype_portsentry=Portsentry Daemon\ntype_hostsentry=Hostsentry Daemon\ntype_webmin=Webmin Webserver\ntype_cfengine=Configuration Engine Daemon\ntype_memory=Free Memory\ntype_proftpd=ProFTPD Server\ntype_dovecot=Dovecot IMAP/POP3 Server\ntype_mailserver=Mailserver Response\ntype_sshd=SSH Server\ntype_raid=RAID Device Status\ntype_iface=Network Interface Status\ntype_sensors=LM Sensor Status\ntype_nut=NUT UPS Value\ntype_mailq=Mail Queue Size\ntype_dns=DNS Lookup\ntype_query=SQL Query\ntype_alive=Alive System\ntype_rssh=Remote SSH\n\nmon_create=Create Monitor\nmon_edit=Edit Monitor\nmon_header=Monitor details\nmon_header2=Commands to run\nmon_header3=Monitored service options\nmon_desc=Description\nmon_remote=Run on host\nmon_remotes2=Run on hosts and groups\nmon_local=Local\nmon_none=No remote servers defined\nmon_nosched=Check on schedule?\nmon_warndef=Yes, and use default reporting mode\nmon_warn1=Yes, and report on status changes\nmon_warn0=Yes, and report when going down\nmon_warn2=Yes, and report when down\nmon_warn3=Yes, but never report\nmon_status=Current status\nmon_up=Up\nmon_down=Down\nmon_webmin=Webmin Down\nmon_timeout=Timed out\nmon_not=Not installed\nmon_ondown=If monitor goes down, run command\nmon_onup=If monitor comes up, run command\nmon_ontimeout=If monitor times out, run command\nmon_clone=Module to monitor\nmon_err=Failed to save monitor\nmon_edesc=Missing description\nmon_elogin=Invalid login for RPC on Webmin server $1\nmon_eremote2=Webmin server $1 could not be contacted : $2\nmon_estatus=Webmin server $1 does not have the System and Server Status module\nmon_ecannot=You are not allowed to edit monitors\nmon_ertype=This monitor type is not available on $1\nmon_runon=Run commands on\nmon_runon0=This server\nmon_runon1=The remote host\nmon_oninfo=Note: Commands will only be run when email is sent\nmon_fails=Failures before reporting\nmon_efails=Missing or invalid number of failures\nmon_notify=Notification methods\nmon_notifyemail=Email\nmon_notifypager=Pager\nmon_notifysnmp=SNMP\nmon_notifysms=SMS\nmon_email=Also send email for this service to\nmon_depend=Don't check if monitor is down\nmon_edepend=A monitor cannot depend on itself\nmon_clone2=Clone\nmon_skip=Skipped\nmon_empty=No members\nmon_onemem=One member\nmon_members=$1 members\nmon_enoremote=No hosts or groups to run on selected\nmon_tmpl=Template for messages\nmon_notmpl=None (use Webmin defaults)\nmon_header4=Status history\nmon_hwhen=Check date\nmon_hold=Old status\nmon_hnew=New status\nmon_hvalue=Value\nmon_changes0=Show every event type\nmon_changes1=Show only changes\nmon_all=Show all historical events\nmon_nochanges=No status changes happened in the last $1 historical events.\n\nsched_title=Scheduled Monitoring\nsched_header=Scheduled background monitoring options\nsched_mode=Scheduled checking enabled?\nsched_email=Email status report to\nsched_pager=Page status report to number\nsched_none=Don't send email\nsched_pnone=Don't send pages\nsched_from=From: address for email\nsched_int=Check every\nsched_period_0=minutes\nsched_period_1=hours\nsched_period_2=days\nsched_period_3=months\nsched_period_4=weeks\nsched_offset=with offset\nsched_warn=Send email when\nsched_warn1=When a service changes status\nsched_warn0=When a service goes down\nsched_warn2=Any time service is down\nsched_single=Send one email per service?\nsched_hours=Run monitor during hours\nsched_days=Run monitor on days\nsched_err=Failed to save scheduled monitoring\nsched_eemail=Missing email address\nsched_eint=Missing or invalid interval\nsched_eoffset=Missing or invalid offset\nsched_ehours=No hours to run during selected\nsched_edays=No days to run on selected\nsched_ecannot=You are not allowed to edit scheduled monitoring\nsched_smtp=Send mail via\nsched_smtp_prog=Local mail server\nsched_smtp_server=SMTP server\nsched_esmtp=Missing or invalid SMTP server\nsched_esmtpcmd=SMTP command $1 failed : $2\nsched_eemailserver=Your mail server is not installed : $1\nsched_sms=Send SMS to\nsched_smsno=Nobody\nsched_smscarrier=Phone on carrier\nsched_smsnumber=with number\nsched_esmsnumber=Missing or non-numeric SMS number\nsched_esmsname=Missing or invalid-looking SMS number\n\nup_since=Up since $1\ndepends_mod=The module $1 is not installed on your system\ndepends_os=The module $1 is not supported on your system\ndepends_remote=The module $1 is not supported on server $2\n\ntcp_host=Host to connect to\ntcp_port=Port to connect to\ntcp_alarm=Connection timeout\ntcp_ehost=Missing or invalid hostname\ntcp_eport=Missing or invalid port number\ntcp_ealarm=Missing or invalid connection timeout\n\nhttp_url=URL to request\nhttp_alarm=Connection timeout\nhttp_eurl=Missing or invalid URL\nhttp_ealarm=Missing or invalid connection timeout\nhttp_login=Login as\nhttp_none=Don't authenticate\nhttp_user=Username\nhttp_pass=password\nhttp_euser=Missing username\nhttp_method=HTTP request method\nhttp_regexp=Page must match regexp\nhttp_eregexp=No regular expression for page to match entered\nhttp_none2=Don't match\nhttp_ehead=The HEAD request method cannot be used when checking for a regular expression\n\nping_host=Host to ping\nping_wait=Time to wait for response\nping_ehost=Missing or invalid hostname\nping_ewait=Missing or invalid wait time\nping_econfig=No ping command has been set in Module Config\n\nproc_pid=Running with PIDs $1\nproc_cmd=Command to check for\nproc_not=Fail if process is\nproc_not0=Not running\nproc_not1=Running\nproc_ecmd=Missing command\nproc_thresh=Number of process that must exist for<br>monitor to consider them running\nproc_ethresh=Missing or invalid number of processes\nproc_asuser=Running as user\nproc_anyuser=Any user\nproc_easuser=User for process to run as does not exist\n\nexec_cmd=Command to check exit status of\nexec_ecmd=Missing command\n\nfile_file=File, directory or pattern to check\nfile_test=Test to perform\nfile_test_0=Must exist\nfile_test_1=Must not exist\nfile_test_2=Size must be bigger than\nfile_test_3=Size must be smaller than\nfile_bytes=bytes\nfile_efile=Missing file or directory name to check\nfile_esize=Invalid file size\nfile_elarge=Files too large : $1\nfile_esmall=Files too small : $1\n\ntraffic_iface=Interface to monitor\ntraffic_bytes=Maximum bytes/second\ntraffic_dir=Direction to monitor\ntraffic_dir0=Incoming and outgoing\ntraffic_dir1=Incoming only\ntraffic_dir2=Outgoing only\ntraffic_desc=This monitor keeps track of network traffic on a selected interface, and displays the monitor as down if the traffic exceeds the number of bytes per second entered below. This only really works well if scheduled monitoring is enabled at set to a short interval, like every 5 minutes.\ntraffic_eifaces=Your operating system does not have a /proc/net/dev file\ntraffic_ebytes=Missing or invalid number of bytes/second\n\nspace_fs=Filesystem to check\nspace_min2=Minimum free space\nspace_mode0=Absolute size\nspace_mode1=Percentage of total\nspace_desc=$1 free\nspace_nofs=Filesystem not mounted\nspace_other=Other..\nspace_emin=Missing or invalid free space\nspace_epc=Missing or invalid free space percentage\nspace_eother=Missing or invalid filesystem\nspace_inode=Minimum free Inodes\nspace_ierr=Only $1 inodes free\nspace_merr=Only $1 space free\nspace_perr=Only $1% free\nspace_dferr=Failed to get filesystem size\n\nload_time=Load average to check\nload_1=1 minute\nload_5=5 minute\nload_15=15 minute\nload_max=Maximum load average\nload_emax=Missing or invalid maximum load average\nload_ecmd=The <tt>uptime</tt> command was not found on your system\nload_efmt=The output of the <tt>uptime</tt> command could not be parsed\n\nlog_create=Created monitor $1\nlog_modify=Modified monitor $1\nlog_delete=Deleted monitor $1\nlog_sched=Changed scheduled monitoring\nlog_deletes=Deleted $1 monitors\nlog_tmpl_create=Created email template $1\nlog_tmpl_modify=Modified email template $1\nlog_tmpl_delete=Deleted email template $1\nlog_tmpl_deletes=Deleted $1 email templates\nlog_refresh=Refreshed monitor statuses\n\nacl_edit=Can edit and create monitors?\nacl_sched=Can change scheduled monitoring?\n\nchange_file=File or directory to monitor (fail if changed)\n\njabber_eparser=The Perl module $1 is not installed on your system.\n\nmemory_min2=Minimum free real memory\nmemory_emin=Missing or invalid amount of free real memory\nmemory_eproc=Webmin does not know how to check free memory on your operating system\nmemory_free2=$1 real memory free\nmemory_freeswap=$1 virtual memory free\nmemory_freelow=Only $1 real memory free\nmemory_freelowswap=Only $1 virtual memory free\nmemory_minswap=Minimum free virtual memory\nmemory_eminswap=Missing or invalid amount of free virtual memory\n\nproftpd_etype=This monitor cannot be used when ProFTPD is run stand-alone\n\nmailserver_to=Send email to address\nmailserver_timeout=Timeout and interval\nmailserver_units_0=Seconds\nmailserver_units_1=Minutes\nmailserver_units_2=Hours\nmailserver_units_3=Days\nmailserver_desc=The address below must be an autoresponder that replies to the source address with the same Subject: line.\n\noldfile_file=File to monitor (fail if not changed)\noldfile_diff=Fail if not changed for\noldfile_secs=secs\n\nraid_device=RAID device\nraid_edevice=No RAID device selected\nraid_bad=Bad disk detected\nraid_resync=Currently resyncing\nraid_notfound=RAID device $1 not found\nraid_other=Other..\n\niface_iface=Interface to check\n\nrefresh_title=Refresh Status\nrefresh_doing=Refreshing the status of all monitors ..\nrefresh_doing2=Refreshing the status of $1 selected monitors ..\nrefresh_done=.. done.\n\nsensors_name=Sensor to check\nsensors_value=Failed when\nsensors_value0=System indicates warning\nsensors_value1=Value is below $1\nsensors_value2=Value is above $1\nsensors_cmd=The command <tt>sensors</tt> is not installed on your system. This monitor requires the lm_sensors package be installed to operate.\nsensors_none=No sensors were detected on your system. You may need to run the <tt>sensors-detect</tt> initialization command.\nsensors_cur=$1 (currently $2 $3)\nsensors_emin=Missing or invalid minimum value\nsensors_emax=Missing or invalid maximum value\n\nnut_ups=NUT UPS to check\nnut_name=Attribute to check\nnut_value=Failed when\nnut_value1=Value is below $1\nnut_value2=Value is above $1\nnut_cmd=The command <tt>upsc</tt> is not installed on your system. This monitor requires the NUT package be installed and configured to operate.\nnut_eups=No USP to check entered\nnut_cur=$1 (currently $2)\nnut_emin=Missing or invalid minimum value\nnut_emax=Missing or invalid maximum value\n\nmailq_system=Mail server\nmailq_qmailadmin=Qmail\nmailq_postfix=Postfix\nmailq_sendmail=Sendmail\nmailq_size=Maximum mail queue size\nmailq_esize=Missing or invalid maximum queue size\nmailq_toomany=Down - $1 messages queued\nmailq_ok=Up - $1 messages queued\n\ndns_server=DNS server\ndns_host=Hostname to lookup\ndns_address=Expected IP address\ndns_eserver=Missing or invalid DNS server\ndns_ehost=Missing or invalid-looking hostname to lookup\ndns_eaddress=Missing or invalid expected IP address\ndns_ecmds=Neither the <tt>nslookup</tt> or <tt>dig</tt> commands are installed on your system\n\nmonitor_sub_down=$1 down on $2\nmonitor_pager_down=$1: \"$2\" is down $3\nmonitor_snmp_down=$1: $2\nmonitor_email_down=Monitor on $1 for '$2' has detected that the service has gone down at $3\nmonitor_sub_up=$1 back up on $2\nmonitor_pager_up=$1: $2 is back up $3\nmonitor_snmp_up=$1: $2 is back up\nmonitor_email_up=Monitor on $1 for '$2' has detected that the service has gone back up at $3\nmonitor_sub_un=$1 uninstalled on $2\nmonitor_pager_un=$1: $2 uninstalled $3\nmonitor_snmp_un=$1: $2 uninstalled\nmonitor_email_un=Monitor on $1 for '$2' has detected that the service is uninstalled at $3\nmonitor_sub_webmin=$1 Webmin down on $2\nmonitor_pager_webmin=$1: $2 Webmin down $3\nmonitor_snmp_webmin=$1: $2 Webmin down\nmonitor_email_webmin=Monitor on $1 for '$2' has detected that Webmin is down at $3\nmonitor_sub_timed=$1 timed out on $2\nmonitor_pager_timed=$1: $2 timed out $3\nmonitor_snmp_timed=$1: $2 timed out\nmonitor_email_timed=Monitor on $1 for '$2' has timed out at at $3\nmonitor_sub_isdown=$1 down on $2\nmonitor_pager_isdown=$1: \"$2\" is down $3\nmonitor_snmp_isdown=$1: $2\nmonitor_email_isdown=Monitor on $1 for '$2' has detected that the service is down at $3\nmonitor_sub=Service monitor : $1\nmonitor_sub2=Service monitor\nmonitor_sub3=Service monitor : $1 services\nmonitor_run1=Running $1 on $2 ..\nmonitor_run2=Running $1 ..\nmonitor_runerr=Failed to run $1 on $2 : $3\n\ndeletes_egone=One of the selected monitors no longer exists\ndeletes_enone=No monitors selected\n\nftp_host=FTP server host\nftp_port=FTP port\nftp_user=Login as user\nftp_anon=Anonymous\nftp_pass=With password\nftp_file=File to fetch\nftp_none=None (just login)\nftp_ehost=Missing or invalid FTP server host\nftp_eport=Missing or invalid FTP server port\nftp_efile=Missing or invalid file to download\nftp_tls=Use TLS encryption?\nftp_etls=TLS cannot be enabled unless the $1 Perl module is installed\nftp_econn=TLS FTP connection failed\nftp_econn2=TLS FTP connection failed : $1\nftp_elogin=TLS FTP login failed : $1\nftp_etlsfile=TLS FTP download failed : $1\n\nquery_driver=SQL database type\nquery_db=Database name\nquery_host=Database server host\nquery_local=This server\nquery_user=Login as user\nquery_pass=Login with password\nquery_sql=SQL query to execute\nquery_result=Expected result\nquery_ignore=Ignore result\nquery_edriver=The Perl driver module $1 is not installed\nquery_edb=Missing or invalid database name\nquery_ehost=Missing or invalid database server hostname\nquery_euser=Invalid username\nquery_epass=Invalid password\nquery_esql=Missing SQL query\nquery_eresult=Missing expected result\nquery_elogin=Login failed : $1\nquery_eprepare=SQL error : $1\nquery_eexecute=SQL failed : $1\nquery_ewrong=Incorrect result : $1\n\nconsume_rate=Maximum consumption rate (per second)\nconsume_high=Consumption rate is $1 / second\n\nalive_up=Up for $1\n\nrssh_host=SSH server host\nrssh_ruser=Login as user\nrssh_rpass=Login with password\nrssh_nopass=None required\nrssh_nologin=Don't try to login\nrssh_ehost=Missing or invalid SSH server host\nrssh_eruser=Missing username\nrssh_ecmd=The <tt>ssh</tt> command is not installed on your system\nrssh_eproc=The Running Processes module is not supported on your system\nrssh_wrongpass=Incorrect login\nrssh_failed=Connection failed\nrssh_error=SSH error\nrssh_haspass=Password\nrssh_port=SSH server port\nrssh_eport=Missing or invalid port number\n\ntmpls_title=Email Templates\ntmpls_ecannot=You are not allowed to edit email templates\ntmpls_none=No email templates have been defined yet. All alerts will be sent using the Webmin default messages.\ntmpls_desc=Description\ntmpls_email=Email message\ntmpls_add=Add a new email template.\ntmpls_return=templates list\ntmpls_delete=Delete Selected Templates\n\ntmpl_title1=Create Email Template\ntmpl_title2=Edit Email Template\ntmpl_header=Alert email template messages\ntmpl_desc=Template description\ntmpl_email=Email message\ntmpl_sms=SMS message\ntmpl_sms1=Webmin default\ntmpl_sms0=Custom message below ..\ntmpl_snmp=Pager message\ntmpl_instr=Instructions and substitutions\ntmpl_subs=The email, SMS and pager messages defined on this page can use the following substitutions :\ntmpl_subs_desc=Service description\ntmpl_subs_host=Host being monitored\ntmpl_subs_date=Current date\ntmpl_subs_time=Current time\ntmpl_subs_status=Service status, such as <i>Down</i>\ntmpl_subs2=In addition, you can use conditional blocks like : <tt>$1 Service is down $2 Service is OK $3</tt>\ntmpl_err=Failed to save email template\ntmpl_edesc=Missing template description\ntmpl_emsg=Missing email message\ntmpl_esms=Missing SMS message\ntmpl_esnmp=Missing SNMP message\ntmpl_err2=Failed to delete email template\ntmpl_eusers=It is in use by the following monitors : $1\n\ndtmpls_err=Failed to delete templates\ndtmpls_enone=None selected\ndtmpls_eusers=$1 is in use by the following monitors : $2\n\nsslcert_src=Certificate location\nsslcert_url=From HTTPS URL\nsslcert_file=From file on server\nsslcert_eurl=Missing, invalid or non-SSL URL\nsslcert_efile=Missing or invalid certificate file\nsslcert_ecert=Could not get certificate\nsslcert_edown=Web server is down\nsslcert_days=Days before expiry to fail\nsslcert_when=When expired\nsslcert_mismatch=Also detect hostname mismatch?\nsslcert_edays=Missing or invalid number of days\nsslcert_eopenssl=The <tt>openssl</tt> command is needed to check certificates\nsslcert_estart=Not valid until $1\nsslcert_eend=Not valid after $1\nsslcert_left=Up - $1 days until expiry\nsslcert_ematch=Hostname $1 does not match certificate $2\nsslcert_emismatch=Certificate hostname checking can only be used when checking a URL\n\ndu_dir=Directory to monitor\ndu_max=Maximum size\ndu_edir=Missing or non-absolute directory path\ndu_emax=Missing or non-numeric maximum size\ndu_over=Size is $1\ndu_under=Size is only $1\n__norefs=1\n", "#!/usr/local/bin/perl\n# save_mon.cgi\n# Create, update or delete a monitor\n\nrequire './status-lib.pl';\n$access{'edit'} || &error($text{'mon_ecannot'});\n&ReadParse();\nif ($in{'type'}) {\n\t$serv->{'type'} = $in{'type'};\n\t$serv->{'id'} = time();\n\t}\nelse {\n\t$serv = &get_service($in{'id'});\n\t$serv->{'oldremote'} = $serv->{'remote'};\n\t}\n\nif ($in{'delete'}) {\n\t# Delete the monitor\n\t&delete_service($serv);\n\t&webmin_log(\"delete\", undef, $serv->{'id'}, $serv);\n\t}\nelsif ($in{'newclone'}) {\n\t# Redirect to creation form, in clone mode\n\t&redirect(\"edit_mon.cgi?type=$serv->{'type'}&clone=$in{'id'}\");\n\texit(0);\n\t}\nelse {\n\t# Parse and validate inputs\n\t&error_setup($text{'mon_err'});\n\t$in{'desc'} || &error($text{'mon_edesc'});\n\t$serv->{'desc'} = $in{'desc'};\n\n\t# Make sure remote monitors exist on remote systems\n\t@remotes = split(/\\0/, $in{'remotes'});\n\t$newremote = join(\" \", @remotes);\n\tif ($in{'type'} || $serv->{'remote'} ne $newremote) {\n\t\t# Only need to check for new monitors\n\t\tforeach $r (@remotes) {\n\t\t\tnext if ($r eq \"*\");\n\t\t\teval { local $main::error_must_die = 1;\n\t\t\t       $ch = &remote_foreign_check($r, 'status') };\n\t\t\t&error(&text('mon_elogin', $r))\n\t\t\t    if ($@ =~ /invalid.*login/i || $@ =~ /HTTP.*401/i);\n\t\t\tif ($@) {\n\t\t\t\t# If down, let it go for now as we can't really\n\t\t\t\t# check what is installed\n\t\t\t\tnext;\n\t\t\t\t#$err = $@;\n\t\t\t\t#$err =~ s/\\s+at\\s.*\\sline\\s+(\\d+).*$//;\n\t\t\t\t#&error(&text('mon_eremote2', $r, $err));\n\t\t\t\t}\n\t\t\t$ch || &error(&text('mon_estatus', $r));\n\t\t\t&remote_foreign_require($r, 'status',\n\t\t\t\t\t\t'status-lib.pl');\n\t\t\tif ($in{'type'} =~ /^(\\S+)::(\\S+)$/) {\n\t\t\t\t# Check if module is installed\n\t\t\t\t$ok = &remote_foreign_call(\n\t\t\t\t  $r, 'status', \"foreign_check\", $1);\n\t\t\t\t}\n\t\t\telse {\n\t\t\t\t$ok = &remote_eval($r, 'status',\n\t\t\t\t   \"-r \\\"\\$root_directory/status/$serv->{'type'}-monitor.pl\\\"\");\n\t\t\t\t}\n\t\t\t$ok || &error(&text('mon_ertype', $r));\n\t\t\t}\n\t\t}\n\t$serv->{'remote'} = $newremote;\n\t$serv->{'groups'} = join(\" \", split(/\\0/, $in{'groups'}));\n\t$serv->{'remote'} || $serv->{'groups'} ||\n\t\t&error($text{'mon_enoremote'});\n\n\t$serv->{'nosched'} = $in{'nosched'};\n\t$serv->{'notify'} = join(\" \", split(/\\0/, $in{'notify'}));\n\t$serv->{'ondown'} = $in{'ondown'};\n\t$serv->{'onup'} = $in{'onup'};\n\t$serv->{'ontimeout'} = $in{'ontimeout'};\n\t$serv->{'runon'} = $in{'runon'};\n\t$serv->{'clone'} = $in{'clone'};\n\t$in{'fails'} =~ /^\\d+$/ || &error($text{'mon_efails'});\n\t$serv->{'fails'} = $in{'fails'};\n\t$serv->{'email'} = $in{'email'};\n\t$serv->{'tmpl'} = $in{'tmpl'};\n\t$type = $serv->{'type'};\n\tif ($in{'depend'} && $in{'depend'} eq $serv->{'id'}) {\n\t\t&error($text{'mon_edepend'});\n\t\t}\n\t$serv->{'depend'} = $in{'depend'};\n\n\t# Parse inputs for this monitor type\n\tif ($type =~ /^(\\S+)::(\\S+)$/) {\n\t\t# From another module\n\t\t($mod, $mtype) = ($1, $2);\n\t\t&foreign_require($mod, \"status_monitor.pl\");\n\t\t&foreign_call($mod, \"status_monitor_parse\", $mtype, $serv,\\%in);\n\t\t}\n\telse {\n\t\t# From this module\n\t\tdo \"./${type}-monitor.pl\";\n\t\t$func = \"parse_${type}_dialog\";\n\t\tif (defined(&$func)) {\n\t\t\t&$func($serv);\n\t\t\t}\n\t\t}\n\n\t# Save or create the monitor\n\t&save_service($serv);\n\t&webmin_log($in{'type'} ? \"create\" : \"modify\", undef,\n\t\t    $serv->{'id'}, $serv);\n\t}\n&redirect(\"\");\n\n"], "fixing_code": ["#!/usr/local/bin/perl\n# edit_mon.cgi\n# Display a form for editing or creating a monitor\n\nrequire './status-lib.pl';\n$access{'edit'} || &error($text{'mon_ecannot'});\n&foreign_require(\"servers\", \"servers-lib.pl\");\n&ReadParse();\n@handlers = &list_handlers();\nif ($in{'type'}) {\n\t# Create a new monitor\n\t$in{'type'} =~ /^[a-zA-Z0-9\\_\\-\\.]+$/ || &error($text{'mon_etype'});\n\t$type = $in{'type'};\n\t$title = $text{'mon_create'};\n\tif ($in{'clone'}) {\n\t\t# Clone of existing\n\t\t$serv = &get_service($in{'clone'});\n\t\t}\n\telse {\n\t\t# Totally new\n\t\t$serv = { 'notify' => 'email pager snmp sms',\n\t\t\t  'fails' => 1,\n\t\t\t  'nosched' => 0,\n\t\t\t  'remote' => '*' };\n\t\t}\n\t}\nelse {\n\t# Editing an existing monitor\n\t$serv = &get_service($in{'id'});\n\t$type = $serv->{'type'};\n\t$title = $text{'mon_edit'};\n\t}\n($han) = grep { $_->[0] eq $type } @handlers;\nif ($in{'type'} && !$in{'clone'}) {\n\t$serv->{'desc'} = $han->[1];\n\t}\n&ui_print_header($han->[1], $title, \"\");\n\nprint &ui_form_start(\"save_mon.cgi\", \"post\");\nprint &ui_hidden(\"type\", $in{'type'}),\"\\n\";\nprint &ui_hidden(\"id\", $in{'id'}),\"\\n\";\n@tds = ( \"width=30%\" );\nprint &ui_table_start($text{'mon_header'}, \"width=100%\", 2, \\@tds);\n\n# Check for clone modules of the monitor type\nif (-d \"../$type\") {\n\tlocal @st = stat(\"../$type\");\n\topendir(DIR, \"..\");\n\tforeach $m (readdir(DIR)) {\n\t\tlocal @lst = stat(\"../$m\");\n\t\tif (-l \"../$m\" && $st[1] == $lst[1]) {\n\t\t\t# found a clone\n\t\t\tpush(@clones, $m);\n\t\t\t}\n\t\t}\n\t}\n\n# Show input for description\nprint &ui_table_row($text{'mon_desc'},\n\t\t    &ui_textbox(\"desc\", $serv->{'desc'}, 50),\n\t\t    undef, \\@tds);\n\n# Show current status\nif (!$in{'type'}) {\n\t@stats = &service_status($serv, 1);\n\t$stable = \"<table cellpadding=1 cellspacing=1>\\n\";\n\tforeach $stat (@stats) {\n\t\t$stable .= \"<tr>\\n\";\n\t\tif (@stats > 1 || $stat->{'remote'} ne \"*\") {\n\t\t\t$stable .=\n\t\t\t    \"<td>\".\n\t\t\t    ($stat->{'remote'} eq \"*\" ? $text{'mon_local'}\n\t\t\t\t\t\t      : $stat->{'remote'}).\n\t\t\t    \"</td>\\n\";\n\t\t\t$stable .= \"<td>:</td>\\n\";\n\t\t\t}\n\t\t$stable .= \"<td>\".\n\t\t      ($stat->{'desc'} && $stat->{'up'} == 0 ?\n\t\t\t \"<font color=#ff0000>$stat->{'desc'}</font>\" :\n\t\t       $stat->{'desc'} ? $stat->{'desc'} :\n\t\t       $stat->{'up'} == 1 ? $text{'mon_up'} :\n\t\t       $stat->{'up'} == -1 ? $text{'mon_not'} :\n\t\t       $stat->{'up'} == -2 ? $text{'mon_webmin'} :\n\t\t       $stat->{'up'} == -3 ? $text{'mon_timeout'} :\n\t\t       $stat->{'up'} == -4 ? $text{'mon_skip'} :\n\t\t\t \"<font color=#ff0000>$text{'mon_down'}</font>\").\n\t\t\t\"</td>\\n\";\n\t\t$stable .= \"</tr>\\n\";\n\t\t}\n\t$stable .= \"</table>\\n\";\n\tprint &ui_table_row($text{'mon_status'}, $stable,\n\t\t\t    undef, \\@tds);\n\t}\n\n# Show servers to run on\n@servs = grep { $_->{'user'} } &servers::list_servers_sorted();\n@servs = sort { $a->{'host'} cmp $b->{'host'} } @servs;\nif (@servs) {\n\t# Show list of remote servers, and maybe groups\n\t$s = &ui_select(\"remotes\", [ split(/\\s+/, $serv->{'remote'}) ],\n\t\t\t [ [ \"*\", \"&lt;$text{'mon_local'}&gt;\" ],\n\t\t\t   map { [ $_->{'host'}, $_->{'host'} ] } @servs ],\n\t\t\t 5, 1, 1),\n\t@groups = &servers::list_all_groups(\\@servs);\n\t@groups = sort { $a->{'name'} cmp $b->{'name'} } @groups;\n\tif (@groups) {\n\t\t$s .= &ui_select(\"groups\", [ split(/\\s+/, $serv->{'groups'}) ],\n\t\t\t [ map { [ $_->{'name'}, &group_desc($_) ] } @groups ],\n\t\t\t 5, 1, 1),\n\t\t}\n\tprint &ui_table_row($text{'mon_remotes2'}, $s, undef, \\@tds);\n\t}\nelse {\n\t# Only local is available\n\tprint &ui_hidden(\"remotes\", \"*\"),\"\\n\";\n\t}\n\n# Show emailing schedule\nprint &ui_table_row($text{'mon_nosched'},\n\t\t    &ui_select(\"nosched\", int($serv->{'nosched'}),\n\t\t\t       [ [ 1, $text{'no'} ],\n\t\t\t\t [ 0, $text{'mon_warndef'} ],\n\t\t\t\t [ 3,  $text{'mon_warn1'} ],\n\t\t\t\t [ 2,  $text{'mon_warn0'} ],\n\t\t\t\t [ 4,  $text{'mon_warn2'} ],\n\t\t\t\t [ 5,  $text{'mon_warn3'} ] ]),\n\t\t    undef, \\@tds);\n\n# Show number of failures\nprint &ui_table_row($text{'mon_fails'},\n\t\t    &ui_textbox(\"fails\", $serv->{'fails'}, 5),\n\t\t    undef, \\@tds);\n\n# Show notification mode\n$notify = \"\";\n%notify = map { $_, 1 } split(/\\s+/, $serv->{'notify'});\nforeach $n (&list_notification_modes()) {\n\t$notify .= &ui_checkbox(\"notify\", $n, $text{'mon_notify'.$n},\n\t\t\t\t$notify{$n}).\"\\n\";\n\tdelete($notify{$n});\n\t}\nforeach $n (keys %notify) {\n\t# Don't clear set but un-usable modes\n\tprint &ui_hidden(\"notify\", $n);\n\t}\nprint &ui_table_row($text{'mon_notify'}, $notify,\n\t\t    undef, \\@tds);\n\n# Show extra address to email\nprint &ui_table_row($text{'mon_email'},\n\t\t    &ui_textbox(\"email\", $serv->{'email'}, 60),\n\t\t    undef, \\@tds);\n\n# Show template to use\n@tmpls = &list_templates();\nif (@tmpls) {\n\tif ($in{'type'}) {\n\t\t($deftmpl) = grep { $_->{'desc'} eq $config{'def_tmpl'}} @tmpls;\n\t\tif ($deftmpl) {\n\t\t\t$tid = $deftmpl->{'id'};\n\t\t\t}\n\t\t}\n\telse {\n\t\t$tid = $serv->{'tmpl'};\n\t\t}\n\tprint &ui_table_row($text{'mon_tmpl'},\n\t\t&ui_select(\"tmpl\", $tid,\n\t\t\t   [ [ \"\", \"&lt;$text{'mon_notmpl'}&gt;\" ],\n\t\t\t     map { [ $_->{'id'}, $_->{'desc'} ] } @tmpls ]));\n\t}\n\n# Which clone module to use\nif (@clones) {\n\tlocal %minfo = &get_module_info($type);\n\tprint &ui_table_row($text{'mon_clone'},\n\t\t   &ui_select(\"clone\", $serv->{'clone'},\n\t\t\t      [ [ \"\", $minfo{'desc'} ],\n\t\t\t\tmap { local %cminfo = &get_module_info($_);\n\t\t\t\t      [ $_, $cminfo{'desc'} ] } @clones ]),\n\t\t   undef, \\@tds);\n\t}\n\n# Skip if some other monitor is down\n@servs = &list_services();\nif (@servs) {\n\tprint &ui_table_row($text{'mon_depend'},\n\t  &ui_select(\"depend\", $serv->{'depend'},\n\t\t [ [ \"\", \"&nbsp;\" ],\n\t\t   map { [ $_->{'id'}, $_->{'desc'}.\n\t\t\t\t       \" (\".&nice_remotes($_).\")\" ] }\n\t\t     sort { $a->{'desc'} cmp $b->{'desc'} } @servs ]),\n\t  undef, \\@tds);\n\t}\n\nprint &ui_table_end();\nprint \"<p>\\n\";\nprint &ui_table_start($text{'mon_header2'}, \"width=100%\", 2, \\@tds);\n\n# Show commands to run on up/down\nprint &ui_table_row($text{'mon_ondown'},\n\t\t    &ui_textbox(\"ondown\", $serv->{'ondown'}, 60),\n\t\t    undef, \\@tds);\n\nprint &ui_table_row($text{'mon_onup'},\n\t\t    &ui_textbox(\"onup\", $serv->{'onup'}, 60),\n\t\t    undef, \\@tds);\n\nprint &ui_table_row($text{'mon_ontimeout'},\n\t\t    &ui_textbox(\"ontimeout\", $serv->{'ontimeout'}, 60),\n\t\t    undef, \\@tds);\n\nprint &ui_table_row(\" \", \"<font size=-1>$text{'mon_oninfo'}</font>\",\n\t\t    undef, \\@tds);\n\n# Radio button for where to run commands\nprint &ui_table_row($text{'mon_runon'},\n\t\t    &ui_radio(\"runon\", $serv->{'runon'} ? 1 : 0,\n\t\t\t      [ [ 0, $text{'mon_runon0'} ],\n\t\t\t\t[ 1, $text{'mon_runon1'} ] ]),\n\t\t    undef, \\@tds);\n\nprint &ui_table_end();\n\n# Display inputs for this monitor type\nif ($type =~ /^(\\S+)::(\\S+)$/) {\n\t# From another module\n\t($mod, $mtype) = ($1, $2);\n\t&foreign_require($mod, \"status_monitor.pl\");\n\tprint &ui_table_start($text{'mon_header3'}, \"width=100%\", 4,\n\t\t\t      \\@tds);\n\t&foreign_call($mod, \"load_theme_library\");\n\tprint &foreign_call($mod, \"status_monitor_dialog\", $mtype, $serv);\n\tprint &ui_table_end();\n\t}\nelse {\n\t# From this module\n\tdo \"./${type}-monitor.pl\";\n\t$func = \"show_${type}_dialog\";\n\tif (defined(&$func)) {\n\t\tprint &ui_table_start($text{'mon_header3'}, \"width=100%\", 4,\n\t\t\t\t      \\@tds);\n\t\t&$func($serv);\n\t\tprint &ui_table_end();\n\t\t}\n\t}\n\n# Show history, in a hidden section\nif (!$in{'type'}) {\n\t@history = &list_history($serv,\n\t\t\t\t $in{'all'} ? undef : $config{'history_show'});\n\t}\nif (@history) {\n\tprint &ui_hidden_table_start($text{'mon_header4'}, \"width=100%\", 2,\n\t\t\"history\", defined($in{'all'}) || defined($in{'changes'}));\n\n\t# Build links to switch to changes-only mode or show all history\n\t@links = ( );\n\tif ($in{'changes'}) {\n\t\tpush(@links, \"<a href='edit_mon.cgi?id=$in{'id'}&changes=0&\".\n\t\t\t     \"all=$in{'all'}'>$text{'mon_changes0'}</a>\");\n\t\t}\n\telse {\n\t\tpush(@links, \"<a href='edit_mon.cgi?id=$in{'id'}&changes=1&\".\n\t\t\t     \"all=$in{'all'}'>$text{'mon_changes1'}</a>\");\n\t\t}\n\tif (!$in{'all'}) {\n\t\tpush(@links, \"<a href='edit_mon.cgi?id=$in{'id'}&changes=\".\n\t\t\t     \"$in{'changes'}&all=1'>$text{'mon_all'}</a>\");\n\t\t}\n\tif ($in{'changes'}) {\n\t\t@history = grep { $_->{'old'} ne $_->{'new'} } @history;\n\t\t}\n\n\t# Check if any history events have a value\n\t$anyvalue = 0;\n\tforeach $h (@history) {\n\t\tforeach my $hv (split(/\\//, $h->{'value'})) {\n\t\t\tmy ($vhost, $v) = split(/=/, $hv, 2);\n\t\t\tif ($v ne '') {\n\t\t\t\t$anyvalue++;\n\t\t\t\tlast;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t# Show history table\n\t$links = &ui_links_row(\\@links);\n\t$table = &ui_columns_start([\n\t\t$text{'mon_hwhen'},\n\t\t$text{'mon_hold'},\n\t\t$text{'mon_hnew'},\n\t\t$anyvalue ? ( $text{'mon_hvalue'} ) : ( ) ]);\n\tforeach $h (reverse(@history)) {\n\t\tmy @cols = ( &make_date($h->{'time'}) );\n\t\tforeach my $s ($h->{'old'}, $h->{'new'}) {\n\t\t\tmy @ups;\n\t\t\tmy @statuses = split(/\\s+/, $s);\n\t\t\tforeach my $rs (@statuses) {\n\t\t\t\tmy ($host, $up) = split(/=/, $rs, 2);\n\t\t\t\t$img = \"<img src=\".&get_status_icon($up).\">\";\n\t\t\t\tif ($host ne \"*\") {\n\t\t\t\t\t$img = $host.$img;\n\t\t\t\t\t}\n\t\t\t\telsif (@statuses > 1) {\n\t\t\t\t\t$img = &get_display_hostname().$img;\n\t\t\t\t\t}\n\t\t\t\tpush(@ups, $img);\n\t\t\t\t}\n\t\t\tpush(@cols, join(\" \", @ups));\n\t\t\t}\n\t\tif ($anyvalue) {\n\t\t\tmy @vlist;\n\t\t\tmy @values = split(/\\//, $h->{'value'});\n\t\t\tmy @nice_values = split(/\\//, $h->{'nice_value'});\n\t\t\tfor(my $i=0; $i<@values; $i++) {\n\t\t\t\tmy ($vhost, $v) = split(/=/, $values[$i], 2);\n\t\t\t\tmy (undef, $nv) = split(/=/, $nice_values[$i], 2);\n\t\t\t\tpush(@vlist, $nv || $v);\n\t\t\t\t}\n\t\t\tpush(@cols, join(\" \", @vlist));\n\t\t\t}\n\t\t$table .= &ui_columns_row(\\@cols);\n\t\t}\n\t$table .= &ui_columns_end();\n\tif (@history) {\n\t\tprint &ui_table_row(undef, $links.$table, 2);\n\t\t}\n\telse {\n\t\tprint &ui_table_row(undef, $links.\n\t\t\t&text('mon_nochanges', $config{'history_show'}), 2);\n\t\t}\n\tprint &ui_hidden_table_end();\n\t}\n\n# Show create/delete buttons\nif ($in{'type'}) {\n\tprint &ui_form_end([ [ \"create\", $text{'create'} ] ]);\n\t}\nelse {\n\tprint &ui_form_end([ [ \"save\", $text{'save'} ],\n\t\t\t     [ \"newclone\", $text{'mon_clone2'} ],\n\t\t\t     [ \"delete\", $text{'delete'} ] ]);\n\t}\n\n&ui_print_footer(\"\", $text{'index_return'});\n\n", "index_title=System and Server Status\nindex_name=Service name\nindex_host=On host\nindex_desc=Monitoring\nindex_up=Status\nindex_last=Last check\nindex_local=Local\nindex_add=Add monitor of type:\nindex_sched=Scheduled Monitoring\nindex_scheddesc=Turn scheduled checking of monitors on or off, and set the address to which failures are automatically emailed.\nindex_return=service list\nindex_none=No monitors are currently defined.\nindex_oldtime=Status from last scheduled check at $1\nindex_esnmp=The module is configured to send SNMP traps on the <a href='$3'>Module Config</a> page, but the $1 Perl module is not installed. <a href='$2'>Click here</a> to download and install it now.\nindex_refresh=Refresh Status\nindex_refreshdesc=Perform an immediate refresh of all monitor statuses, instead of waiting for the next scheduled update.\nindex_delete=Delete Selected\nindex_refsel=Refresh Selected\nindex_group=Members of $1\nindex_tmpls=Edit Email Templates\nindex_tmplsdesc=View and edit templates used to construct email messages sent when monitored services go down.\n\ntype_apache=Apache Webserver\ntype_inetd=Internet and RPC Server\ntype_xinetd=Extended Internet Server\ntype_squid=Squid Proxy Server\ntype_bind8=BIND DNS Server\ntype_dnsadmin=BIND 4 DNS Server\ntype_dhcpd=DHCP Server\ntype_tcp=Remote TCP Service\ntype_http=Remote HTTP Service\ntype_sslcert=SSL Certificate\ntype_ftp=Remote FTP Service\ntype_sendmail=Sendmail Server\ntype_postfix=Postfix Server\ntype_ping=Remote Ping\ntype_proc=Check Process\ntype_mysql=MySQL Database Server\ntype_postgresql=PostgreSQL Database Server\ntype_samba=Samba Servers\ntype_nfs=NFS Server\ntype_exec=Execute Command\ntype_file=Check File or Directory\ntype_traffic=Network Traffic\ntype_space=Disk Space\ntype_du=Directory Size\ntype_consume=Disk Space Consumption\ntype_load=Load Average\ntype_change=File or Directory Change\ntype_oldfile=File Not Changed\ntype_qmailadmin=QMail Server\ntype_mon=MON Service Monitor\ntype_jabber=Jabber IM Server\ntype_usermin=Usermin Webserver\ntype_portsentry=Portsentry Daemon\ntype_hostsentry=Hostsentry Daemon\ntype_webmin=Webmin Webserver\ntype_cfengine=Configuration Engine Daemon\ntype_memory=Free Memory\ntype_proftpd=ProFTPD Server\ntype_dovecot=Dovecot IMAP/POP3 Server\ntype_mailserver=Mailserver Response\ntype_sshd=SSH Server\ntype_raid=RAID Device Status\ntype_iface=Network Interface Status\ntype_sensors=LM Sensor Status\ntype_nut=NUT UPS Value\ntype_mailq=Mail Queue Size\ntype_dns=DNS Lookup\ntype_query=SQL Query\ntype_alive=Alive System\ntype_rssh=Remote SSH\n\nmon_create=Create Monitor\nmon_edit=Edit Monitor\nmon_header=Monitor details\nmon_header2=Commands to run\nmon_header3=Monitored service options\nmon_desc=Description\nmon_remote=Run on host\nmon_remotes2=Run on hosts and groups\nmon_local=Local\nmon_none=No remote servers defined\nmon_nosched=Check on schedule?\nmon_warndef=Yes, and use default reporting mode\nmon_warn1=Yes, and report on status changes\nmon_warn0=Yes, and report when going down\nmon_warn2=Yes, and report when down\nmon_warn3=Yes, but never report\nmon_status=Current status\nmon_up=Up\nmon_down=Down\nmon_webmin=Webmin Down\nmon_timeout=Timed out\nmon_not=Not installed\nmon_ondown=If monitor goes down, run command\nmon_onup=If monitor comes up, run command\nmon_ontimeout=If monitor times out, run command\nmon_clone=Module to monitor\nmon_err=Failed to save monitor\nmon_edesc=Missing description\nmon_elogin=Invalid login for RPC on Webmin server $1\nmon_eremote2=Webmin server $1 could not be contacted : $2\nmon_estatus=Webmin server $1 does not have the System and Server Status module\nmon_ecannot=You are not allowed to edit monitors\nmon_ertype=This monitor type is not available on $1\nmon_etype=Invalid monitor type name\nmon_runon=Run commands on\nmon_runon0=This server\nmon_runon1=The remote host\nmon_oninfo=Note: Commands will only be run when email is sent\nmon_fails=Failures before reporting\nmon_efails=Missing or invalid number of failures\nmon_notify=Notification methods\nmon_notifyemail=Email\nmon_notifypager=Pager\nmon_notifysnmp=SNMP\nmon_notifysms=SMS\nmon_email=Also send email for this service to\nmon_depend=Don't check if monitor is down\nmon_edepend=A monitor cannot depend on itself\nmon_clone2=Clone\nmon_skip=Skipped\nmon_empty=No members\nmon_onemem=One member\nmon_members=$1 members\nmon_enoremote=No hosts or groups to run on selected\nmon_tmpl=Template for messages\nmon_notmpl=None (use Webmin defaults)\nmon_header4=Status history\nmon_hwhen=Check date\nmon_hold=Old status\nmon_hnew=New status\nmon_hvalue=Value\nmon_changes0=Show every event type\nmon_changes1=Show only changes\nmon_all=Show all historical events\nmon_nochanges=No status changes happened in the last $1 historical events.\n\nsched_title=Scheduled Monitoring\nsched_header=Scheduled background monitoring options\nsched_mode=Scheduled checking enabled?\nsched_email=Email status report to\nsched_pager=Page status report to number\nsched_none=Don't send email\nsched_pnone=Don't send pages\nsched_from=From: address for email\nsched_int=Check every\nsched_period_0=minutes\nsched_period_1=hours\nsched_period_2=days\nsched_period_3=months\nsched_period_4=weeks\nsched_offset=with offset\nsched_warn=Send email when\nsched_warn1=When a service changes status\nsched_warn0=When a service goes down\nsched_warn2=Any time service is down\nsched_single=Send one email per service?\nsched_hours=Run monitor during hours\nsched_days=Run monitor on days\nsched_err=Failed to save scheduled monitoring\nsched_eemail=Missing email address\nsched_eint=Missing or invalid interval\nsched_eoffset=Missing or invalid offset\nsched_ehours=No hours to run during selected\nsched_edays=No days to run on selected\nsched_ecannot=You are not allowed to edit scheduled monitoring\nsched_smtp=Send mail via\nsched_smtp_prog=Local mail server\nsched_smtp_server=SMTP server\nsched_esmtp=Missing or invalid SMTP server\nsched_esmtpcmd=SMTP command $1 failed : $2\nsched_eemailserver=Your mail server is not installed : $1\nsched_sms=Send SMS to\nsched_smsno=Nobody\nsched_smscarrier=Phone on carrier\nsched_smsnumber=with number\nsched_esmsnumber=Missing or non-numeric SMS number\nsched_esmsname=Missing or invalid-looking SMS number\n\nup_since=Up since $1\ndepends_mod=The module $1 is not installed on your system\ndepends_os=The module $1 is not supported on your system\ndepends_remote=The module $1 is not supported on server $2\n\ntcp_host=Host to connect to\ntcp_port=Port to connect to\ntcp_alarm=Connection timeout\ntcp_ehost=Missing or invalid hostname\ntcp_eport=Missing or invalid port number\ntcp_ealarm=Missing or invalid connection timeout\n\nhttp_url=URL to request\nhttp_alarm=Connection timeout\nhttp_eurl=Missing or invalid URL\nhttp_ealarm=Missing or invalid connection timeout\nhttp_login=Login as\nhttp_none=Don't authenticate\nhttp_user=Username\nhttp_pass=password\nhttp_euser=Missing username\nhttp_method=HTTP request method\nhttp_regexp=Page must match regexp\nhttp_eregexp=No regular expression for page to match entered\nhttp_none2=Don't match\nhttp_ehead=The HEAD request method cannot be used when checking for a regular expression\n\nping_host=Host to ping\nping_wait=Time to wait for response\nping_ehost=Missing or invalid hostname\nping_ewait=Missing or invalid wait time\nping_econfig=No ping command has been set in Module Config\n\nproc_pid=Running with PIDs $1\nproc_cmd=Command to check for\nproc_not=Fail if process is\nproc_not0=Not running\nproc_not1=Running\nproc_ecmd=Missing command\nproc_thresh=Number of process that must exist for<br>monitor to consider them running\nproc_ethresh=Missing or invalid number of processes\nproc_asuser=Running as user\nproc_anyuser=Any user\nproc_easuser=User for process to run as does not exist\n\nexec_cmd=Command to check exit status of\nexec_ecmd=Missing command\n\nfile_file=File, directory or pattern to check\nfile_test=Test to perform\nfile_test_0=Must exist\nfile_test_1=Must not exist\nfile_test_2=Size must be bigger than\nfile_test_3=Size must be smaller than\nfile_bytes=bytes\nfile_efile=Missing file or directory name to check\nfile_esize=Invalid file size\nfile_elarge=Files too large : $1\nfile_esmall=Files too small : $1\n\ntraffic_iface=Interface to monitor\ntraffic_bytes=Maximum bytes/second\ntraffic_dir=Direction to monitor\ntraffic_dir0=Incoming and outgoing\ntraffic_dir1=Incoming only\ntraffic_dir2=Outgoing only\ntraffic_desc=This monitor keeps track of network traffic on a selected interface, and displays the monitor as down if the traffic exceeds the number of bytes per second entered below. This only really works well if scheduled monitoring is enabled at set to a short interval, like every 5 minutes.\ntraffic_eifaces=Your operating system does not have a /proc/net/dev file\ntraffic_ebytes=Missing or invalid number of bytes/second\n\nspace_fs=Filesystem to check\nspace_min2=Minimum free space\nspace_mode0=Absolute size\nspace_mode1=Percentage of total\nspace_desc=$1 free\nspace_nofs=Filesystem not mounted\nspace_other=Other..\nspace_emin=Missing or invalid free space\nspace_epc=Missing or invalid free space percentage\nspace_eother=Missing or invalid filesystem\nspace_inode=Minimum free Inodes\nspace_ierr=Only $1 inodes free\nspace_merr=Only $1 space free\nspace_perr=Only $1% free\nspace_dferr=Failed to get filesystem size\n\nload_time=Load average to check\nload_1=1 minute\nload_5=5 minute\nload_15=15 minute\nload_max=Maximum load average\nload_emax=Missing or invalid maximum load average\nload_ecmd=The <tt>uptime</tt> command was not found on your system\nload_efmt=The output of the <tt>uptime</tt> command could not be parsed\n\nlog_create=Created monitor $1\nlog_modify=Modified monitor $1\nlog_delete=Deleted monitor $1\nlog_sched=Changed scheduled monitoring\nlog_deletes=Deleted $1 monitors\nlog_tmpl_create=Created email template $1\nlog_tmpl_modify=Modified email template $1\nlog_tmpl_delete=Deleted email template $1\nlog_tmpl_deletes=Deleted $1 email templates\nlog_refresh=Refreshed monitor statuses\n\nacl_edit=Can edit and create monitors?\nacl_sched=Can change scheduled monitoring?\n\nchange_file=File or directory to monitor (fail if changed)\n\njabber_eparser=The Perl module $1 is not installed on your system.\n\nmemory_min2=Minimum free real memory\nmemory_emin=Missing or invalid amount of free real memory\nmemory_eproc=Webmin does not know how to check free memory on your operating system\nmemory_free2=$1 real memory free\nmemory_freeswap=$1 virtual memory free\nmemory_freelow=Only $1 real memory free\nmemory_freelowswap=Only $1 virtual memory free\nmemory_minswap=Minimum free virtual memory\nmemory_eminswap=Missing or invalid amount of free virtual memory\n\nproftpd_etype=This monitor cannot be used when ProFTPD is run stand-alone\n\nmailserver_to=Send email to address\nmailserver_timeout=Timeout and interval\nmailserver_units_0=Seconds\nmailserver_units_1=Minutes\nmailserver_units_2=Hours\nmailserver_units_3=Days\nmailserver_desc=The address below must be an autoresponder that replies to the source address with the same Subject: line.\n\noldfile_file=File to monitor (fail if not changed)\noldfile_diff=Fail if not changed for\noldfile_secs=secs\n\nraid_device=RAID device\nraid_edevice=No RAID device selected\nraid_bad=Bad disk detected\nraid_resync=Currently resyncing\nraid_notfound=RAID device $1 not found\nraid_other=Other..\n\niface_iface=Interface to check\n\nrefresh_title=Refresh Status\nrefresh_doing=Refreshing the status of all monitors ..\nrefresh_doing2=Refreshing the status of $1 selected monitors ..\nrefresh_done=.. done.\n\nsensors_name=Sensor to check\nsensors_value=Failed when\nsensors_value0=System indicates warning\nsensors_value1=Value is below $1\nsensors_value2=Value is above $1\nsensors_cmd=The command <tt>sensors</tt> is not installed on your system. This monitor requires the lm_sensors package be installed to operate.\nsensors_none=No sensors were detected on your system. You may need to run the <tt>sensors-detect</tt> initialization command.\nsensors_cur=$1 (currently $2 $3)\nsensors_emin=Missing or invalid minimum value\nsensors_emax=Missing or invalid maximum value\n\nnut_ups=NUT UPS to check\nnut_name=Attribute to check\nnut_value=Failed when\nnut_value1=Value is below $1\nnut_value2=Value is above $1\nnut_cmd=The command <tt>upsc</tt> is not installed on your system. This monitor requires the NUT package be installed and configured to operate.\nnut_eups=No USP to check entered\nnut_cur=$1 (currently $2)\nnut_emin=Missing or invalid minimum value\nnut_emax=Missing or invalid maximum value\n\nmailq_system=Mail server\nmailq_qmailadmin=Qmail\nmailq_postfix=Postfix\nmailq_sendmail=Sendmail\nmailq_size=Maximum mail queue size\nmailq_esize=Missing or invalid maximum queue size\nmailq_toomany=Down - $1 messages queued\nmailq_ok=Up - $1 messages queued\n\ndns_server=DNS server\ndns_host=Hostname to lookup\ndns_address=Expected IP address\ndns_eserver=Missing or invalid DNS server\ndns_ehost=Missing or invalid-looking hostname to lookup\ndns_eaddress=Missing or invalid expected IP address\ndns_ecmds=Neither the <tt>nslookup</tt> or <tt>dig</tt> commands are installed on your system\n\nmonitor_sub_down=$1 down on $2\nmonitor_pager_down=$1: \"$2\" is down $3\nmonitor_snmp_down=$1: $2\nmonitor_email_down=Monitor on $1 for '$2' has detected that the service has gone down at $3\nmonitor_sub_up=$1 back up on $2\nmonitor_pager_up=$1: $2 is back up $3\nmonitor_snmp_up=$1: $2 is back up\nmonitor_email_up=Monitor on $1 for '$2' has detected that the service has gone back up at $3\nmonitor_sub_un=$1 uninstalled on $2\nmonitor_pager_un=$1: $2 uninstalled $3\nmonitor_snmp_un=$1: $2 uninstalled\nmonitor_email_un=Monitor on $1 for '$2' has detected that the service is uninstalled at $3\nmonitor_sub_webmin=$1 Webmin down on $2\nmonitor_pager_webmin=$1: $2 Webmin down $3\nmonitor_snmp_webmin=$1: $2 Webmin down\nmonitor_email_webmin=Monitor on $1 for '$2' has detected that Webmin is down at $3\nmonitor_sub_timed=$1 timed out on $2\nmonitor_pager_timed=$1: $2 timed out $3\nmonitor_snmp_timed=$1: $2 timed out\nmonitor_email_timed=Monitor on $1 for '$2' has timed out at at $3\nmonitor_sub_isdown=$1 down on $2\nmonitor_pager_isdown=$1: \"$2\" is down $3\nmonitor_snmp_isdown=$1: $2\nmonitor_email_isdown=Monitor on $1 for '$2' has detected that the service is down at $3\nmonitor_sub=Service monitor : $1\nmonitor_sub2=Service monitor\nmonitor_sub3=Service monitor : $1 services\nmonitor_run1=Running $1 on $2 ..\nmonitor_run2=Running $1 ..\nmonitor_runerr=Failed to run $1 on $2 : $3\n\ndeletes_egone=One of the selected monitors no longer exists\ndeletes_enone=No monitors selected\n\nftp_host=FTP server host\nftp_port=FTP port\nftp_user=Login as user\nftp_anon=Anonymous\nftp_pass=With password\nftp_file=File to fetch\nftp_none=None (just login)\nftp_ehost=Missing or invalid FTP server host\nftp_eport=Missing or invalid FTP server port\nftp_efile=Missing or invalid file to download\nftp_tls=Use TLS encryption?\nftp_etls=TLS cannot be enabled unless the $1 Perl module is installed\nftp_econn=TLS FTP connection failed\nftp_econn2=TLS FTP connection failed : $1\nftp_elogin=TLS FTP login failed : $1\nftp_etlsfile=TLS FTP download failed : $1\n\nquery_driver=SQL database type\nquery_db=Database name\nquery_host=Database server host\nquery_local=This server\nquery_user=Login as user\nquery_pass=Login with password\nquery_sql=SQL query to execute\nquery_result=Expected result\nquery_ignore=Ignore result\nquery_edriver=The Perl driver module $1 is not installed\nquery_edb=Missing or invalid database name\nquery_ehost=Missing or invalid database server hostname\nquery_euser=Invalid username\nquery_epass=Invalid password\nquery_esql=Missing SQL query\nquery_eresult=Missing expected result\nquery_elogin=Login failed : $1\nquery_eprepare=SQL error : $1\nquery_eexecute=SQL failed : $1\nquery_ewrong=Incorrect result : $1\n\nconsume_rate=Maximum consumption rate (per second)\nconsume_high=Consumption rate is $1 / second\n\nalive_up=Up for $1\n\nrssh_host=SSH server host\nrssh_ruser=Login as user\nrssh_rpass=Login with password\nrssh_nopass=None required\nrssh_nologin=Don't try to login\nrssh_ehost=Missing or invalid SSH server host\nrssh_eruser=Missing username\nrssh_ecmd=The <tt>ssh</tt> command is not installed on your system\nrssh_eproc=The Running Processes module is not supported on your system\nrssh_wrongpass=Incorrect login\nrssh_failed=Connection failed\nrssh_error=SSH error\nrssh_haspass=Password\nrssh_port=SSH server port\nrssh_eport=Missing or invalid port number\n\ntmpls_title=Email Templates\ntmpls_ecannot=You are not allowed to edit email templates\ntmpls_none=No email templates have been defined yet. All alerts will be sent using the Webmin default messages.\ntmpls_desc=Description\ntmpls_email=Email message\ntmpls_add=Add a new email template.\ntmpls_return=templates list\ntmpls_delete=Delete Selected Templates\n\ntmpl_title1=Create Email Template\ntmpl_title2=Edit Email Template\ntmpl_header=Alert email template messages\ntmpl_desc=Template description\ntmpl_email=Email message\ntmpl_sms=SMS message\ntmpl_sms1=Webmin default\ntmpl_sms0=Custom message below ..\ntmpl_snmp=Pager message\ntmpl_instr=Instructions and substitutions\ntmpl_subs=The email, SMS and pager messages defined on this page can use the following substitutions :\ntmpl_subs_desc=Service description\ntmpl_subs_host=Host being monitored\ntmpl_subs_date=Current date\ntmpl_subs_time=Current time\ntmpl_subs_status=Service status, such as <i>Down</i>\ntmpl_subs2=In addition, you can use conditional blocks like : <tt>$1 Service is down $2 Service is OK $3</tt>\ntmpl_err=Failed to save email template\ntmpl_edesc=Missing template description\ntmpl_emsg=Missing email message\ntmpl_esms=Missing SMS message\ntmpl_esnmp=Missing SNMP message\ntmpl_err2=Failed to delete email template\ntmpl_eusers=It is in use by the following monitors : $1\n\ndtmpls_err=Failed to delete templates\ndtmpls_enone=None selected\ndtmpls_eusers=$1 is in use by the following monitors : $2\n\nsslcert_src=Certificate location\nsslcert_url=From HTTPS URL\nsslcert_file=From file on server\nsslcert_eurl=Missing, invalid or non-SSL URL\nsslcert_efile=Missing or invalid certificate file\nsslcert_ecert=Could not get certificate\nsslcert_edown=Web server is down\nsslcert_days=Days before expiry to fail\nsslcert_when=When expired\nsslcert_mismatch=Also detect hostname mismatch?\nsslcert_edays=Missing or invalid number of days\nsslcert_eopenssl=The <tt>openssl</tt> command is needed to check certificates\nsslcert_estart=Not valid until $1\nsslcert_eend=Not valid after $1\nsslcert_left=Up - $1 days until expiry\nsslcert_ematch=Hostname $1 does not match certificate $2\nsslcert_emismatch=Certificate hostname checking can only be used when checking a URL\n\ndu_dir=Directory to monitor\ndu_max=Maximum size\ndu_edir=Missing or non-absolute directory path\ndu_emax=Missing or non-numeric maximum size\ndu_over=Size is $1\ndu_under=Size is only $1\n__norefs=1\n", "#!/usr/local/bin/perl\n# save_mon.cgi\n# Create, update or delete a monitor\n\nrequire './status-lib.pl';\n$access{'edit'} || &error($text{'mon_ecannot'});\n&ReadParse();\nif ($in{'type'}) {\n\t$in{'type'} =~ /^[a-zA-Z0-9\\_\\-\\.]+$/ || &error($text{'mon_etype'});\n\t$serv->{'type'} = $in{'type'};\n\t$serv->{'id'} = time();\n\t}\nelse {\n\t$serv = &get_service($in{'id'});\n\t$serv->{'oldremote'} = $serv->{'remote'};\n\t}\n\nif ($in{'delete'}) {\n\t# Delete the monitor\n\t&delete_service($serv);\n\t&webmin_log(\"delete\", undef, $serv->{'id'}, $serv);\n\t}\nelsif ($in{'newclone'}) {\n\t# Redirect to creation form, in clone mode\n\t&redirect(\"edit_mon.cgi?type=$serv->{'type'}&clone=$in{'id'}\");\n\texit(0);\n\t}\nelse {\n\t# Parse and validate inputs\n\t&error_setup($text{'mon_err'});\n\t$in{'desc'} || &error($text{'mon_edesc'});\n\t$serv->{'desc'} = $in{'desc'};\n\n\t# Make sure remote monitors exist on remote systems\n\t@remotes = split(/\\0/, $in{'remotes'});\n\t$newremote = join(\" \", @remotes);\n\tif ($in{'type'} || $serv->{'remote'} ne $newremote) {\n\t\t# Only need to check for new monitors\n\t\tforeach $r (@remotes) {\n\t\t\tnext if ($r eq \"*\");\n\t\t\teval { local $main::error_must_die = 1;\n\t\t\t       $ch = &remote_foreign_check($r, 'status') };\n\t\t\t&error(&text('mon_elogin', $r))\n\t\t\t    if ($@ =~ /invalid.*login/i || $@ =~ /HTTP.*401/i);\n\t\t\tif ($@) {\n\t\t\t\t# If down, let it go for now as we can't really\n\t\t\t\t# check what is installed\n\t\t\t\tnext;\n\t\t\t\t#$err = $@;\n\t\t\t\t#$err =~ s/\\s+at\\s.*\\sline\\s+(\\d+).*$//;\n\t\t\t\t#&error(&text('mon_eremote2', $r, $err));\n\t\t\t\t}\n\t\t\t$ch || &error(&text('mon_estatus', $r));\n\t\t\t&remote_foreign_require($r, 'status',\n\t\t\t\t\t\t'status-lib.pl');\n\t\t\tif ($in{'type'} =~ /^(\\S+)::(\\S+)$/) {\n\t\t\t\t# Check if module is installed\n\t\t\t\t$ok = &remote_foreign_call(\n\t\t\t\t  $r, 'status', \"foreign_check\", $1);\n\t\t\t\t}\n\t\t\telse {\n\t\t\t\t$ok = &remote_eval($r, 'status',\n\t\t\t\t   \"-r \\\"\\$root_directory/status/$serv->{'type'}-monitor.pl\\\"\");\n\t\t\t\t}\n\t\t\t$ok || &error(&text('mon_ertype', $r));\n\t\t\t}\n\t\t}\n\t$serv->{'remote'} = $newremote;\n\t$serv->{'groups'} = join(\" \", split(/\\0/, $in{'groups'}));\n\t$serv->{'remote'} || $serv->{'groups'} ||\n\t\t&error($text{'mon_enoremote'});\n\n\t$serv->{'nosched'} = $in{'nosched'};\n\t$serv->{'notify'} = join(\" \", split(/\\0/, $in{'notify'}));\n\t$serv->{'ondown'} = $in{'ondown'};\n\t$serv->{'onup'} = $in{'onup'};\n\t$serv->{'ontimeout'} = $in{'ontimeout'};\n\t$serv->{'runon'} = $in{'runon'};\n\t$serv->{'clone'} = $in{'clone'};\n\t$in{'fails'} =~ /^\\d+$/ || &error($text{'mon_efails'});\n\t$serv->{'fails'} = $in{'fails'};\n\t$serv->{'email'} = $in{'email'};\n\t$serv->{'tmpl'} = $in{'tmpl'};\n\t$type = $serv->{'type'};\n\tif ($in{'depend'} && $in{'depend'} eq $serv->{'id'}) {\n\t\t&error($text{'mon_edepend'});\n\t\t}\n\t$serv->{'depend'} = $in{'depend'};\n\n\t# Parse inputs for this monitor type\n\tif ($type =~ /^(\\S+)::(\\S+)$/) {\n\t\t# From another module\n\t\t($mod, $mtype) = ($1, $2);\n\t\t&foreign_require($mod, \"status_monitor.pl\");\n\t\t&foreign_call($mod, \"status_monitor_parse\", $mtype, $serv,\\%in);\n\t\t}\n\telse {\n\t\t# From this module\n\t\tdo \"./${type}-monitor.pl\";\n\t\t$func = \"parse_${type}_dialog\";\n\t\tif (defined(&$func)) {\n\t\t\t&$func($serv);\n\t\t\t}\n\t\t}\n\n\t# Save or create the monitor\n\t&save_service($serv);\n\t&webmin_log($in{'type'} ? \"create\" : \"modify\", undef,\n\t\t    $serv->{'id'}, $serv);\n\t}\n&redirect(\"\");\n\n"], "filenames": ["status/edit_mon.cgi", "status/lang/en", "status/save_mon.cgi"], "buggy_code_start_loc": [11, 106, 8], "buggy_code_end_loc": [11, 106, 8], "fixing_code_start_loc": [12, 107, 9], "fixing_code_end_loc": [13, 108, 10], "type": "CWE-20", "message": "Webmin 1.590 and earlier allows remote authenticated users to execute arbitrary Perl code via a crafted file associated with the type (aka monitor type name) parameter.", "other": {"cve": {"id": "CVE-2012-2981", "sourceIdentifier": "cret@cert.org", "published": "2012-09-11T18:55:01.160", "lastModified": "2013-05-30T03:16:15.250", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Webmin 1.590 and earlier allows remote authenticated users to execute arbitrary Perl code via a crafted file associated with the type (aka monitor type name) parameter."}, {"lang": "es", "value": "Webmin v1.590 y anteriores permite a usuarios remotos autenticados ejecutar cualquier c\u00f3digo Perl de su elecci\u00f3n a trav\u00e9s de un archivo (creado para tal fin) asociado con el par\u00e1metro 'type'(tambi\u00e9n conocido como 'monitor type name').\r\n"}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 6.8, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-20"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.590", "matchCriteriaId": "3BE0D872-5567-4B52-AF86-ECEA6B3640B4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.140:*:*:*:*:*:*:*", "matchCriteriaId": "708F7A39-3D58-4E48-AE71-A4892CB742F6"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.150:*:*:*:*:*:*:*", "matchCriteriaId": "6FE40C73-F154-4F99-B34D-48B1D090CF9D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.160:*:*:*:*:*:*:*", "matchCriteriaId": "9BE77AF8-2706-40D4-B094-ECA970F7CE4D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.170:*:*:*:*:*:*:*", "matchCriteriaId": "365B53A4-FDEE-4D2E-A0C2-72D728F57FDA"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.180:*:*:*:*:*:*:*", "matchCriteriaId": "CA77B2B5-012D-450A-8BC7-E1EACCB3EC8C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.200:*:*:*:*:*:*:*", "matchCriteriaId": "03D1DF7B-8CB8-42CC-9DDA-C5A1AD879346"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.210:*:*:*:*:*:*:*", "matchCriteriaId": "E3470725-212E-4E86-9F06-709BFE7BC99C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.220:*:*:*:*:*:*:*", "matchCriteriaId": "2376D29D-C58F-48AD-A52E-639F438D6137"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.230:*:*:*:*:*:*:*", "matchCriteriaId": "FE3A6060-A8DD-4714-95CF-B330D9F323EC"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.240:*:*:*:*:*:*:*", "matchCriteriaId": "9643F753-6EAC-4054-B1EB-4BFBB4280D4E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.260:*:*:*:*:*:*:*", "matchCriteriaId": "82396947-1347-4365-AB4F-851A702A7F9D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.270:*:*:*:*:*:*:*", "matchCriteriaId": "F4D06F90-97F5-4936-8CFA-256C9941FF5C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.280:*:*:*:*:*:*:*", "matchCriteriaId": "60E699C5-FE91-4E6A-8242-FB54D596853F"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.290:*:*:*:*:*:*:*", "matchCriteriaId": "39AC9A61-0789-4089-AAC3-C4E085ABB80D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.300:*:*:*:*:*:*:*", "matchCriteriaId": "36649A62-5287-4798-BE59-18954FB5F168"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.310:*:*:*:*:*:*:*", "matchCriteriaId": "0E196054-BE88-4381-9AE9-89951A9E814B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.320:*:*:*:*:*:*:*", "matchCriteriaId": "FCF58A8E-2DDC-4391-84F7-A2A4248DB5EA"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.330:*:*:*:*:*:*:*", "matchCriteriaId": "E552C43A-947C-42DD-A914-8A8D89605FDB"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.340:*:*:*:*:*:*:*", "matchCriteriaId": "390A1BA0-C32E-4B64-AF9F-FF95E9366A3E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.370:*:*:*:*:*:*:*", "matchCriteriaId": "846C3686-82FE-4C5C-892C-7C6D28965A88"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.380:*:*:*:*:*:*:*", "matchCriteriaId": "F7289E38-D1F7-4964-9D6D-CC7845C354A0"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.390:*:*:*:*:*:*:*", "matchCriteriaId": "3CA5E7D8-5213-42A1-A543-DE0546250772"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.400:*:*:*:*:*:*:*", "matchCriteriaId": "F63C7945-1A73-4267-87A2-5F3380B3BC94"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.410:*:*:*:*:*:*:*", "matchCriteriaId": "4BADBAF9-BC0D-4143-A2DB-5F30930D7FDF"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.420:*:*:*:*:*:*:*", "matchCriteriaId": "29DDC8F5-8AC6-4007-964C-7A035AEE23AC"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.430:*:*:*:*:*:*:*", "matchCriteriaId": "B0CD0CB1-1648-48BD-BF31-72545FF0C1E7"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.440:*:*:*:*:*:*:*", "matchCriteriaId": "BD95F393-8E6D-4041-9884-DB0E02A132C5"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.450:*:*:*:*:*:*:*", "matchCriteriaId": "38C59749-474C-4205-ADE1-509881CAC84A"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.470:*:*:*:*:*:*:*", "matchCriteriaId": "9C7CB881-4DAE-4698-BC75-30187D128623"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.480:*:*:*:*:*:*:*", "matchCriteriaId": "5C6725EA-FCFD-4C00-90D9-9B5B552C193B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.500:*:*:*:*:*:*:*", "matchCriteriaId": "87C3D974-185F-47CE-9245-32CC26CC5C00"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.510:*:*:*:*:*:*:*", "matchCriteriaId": "768351BA-C94F-4F6F-99B7-4E27C0F971C9"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.520:*:*:*:*:*:*:*", "matchCriteriaId": "0B50EF46-2777-47CE-BC99-D1D5B17001FD"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.530:*:*:*:*:*:*:*", "matchCriteriaId": "501F941E-609B-46B9-A2E0-B359B2DCBB15"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.550:*:*:*:*:*:*:*", "matchCriteriaId": "4ABFC5F5-CB70-4102-96F9-F0EEC9BA957F"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.560:*:*:*:*:*:*:*", "matchCriteriaId": "2FA24721-BC9A-40E2-ACAB-AA2D6C26C157"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.570:*:*:*:*:*:*:*", "matchCriteriaId": "67232DFE-C9D5-479E-8DC6-8F577D3ADBF5"}, {"vulnerable": true, "criteria": "cpe:2.3:a:gentoo:webmin:1.580:*:*:*:*:*:*:*", "matchCriteriaId": "8976F845-5268-47BD-A782-5B7B8492DC70"}]}]}], "references": [{"url": "http://americaninfosec.com/research/index.html", "source": "cret@cert.org"}, {"url": "http://www.americaninfosec.com/research/dossiers/AISG-12-000.pdf", "source": "cret@cert.org"}, {"url": "http://www.kb.cert.org/vuls/id/788478", "source": "cret@cert.org", "tags": ["Patch", "US Government Resource"]}, {"url": "http://www.securitytracker.com/id?1027507", "source": "cret@cert.org"}, {"url": "http://www.xerox.com/download/security/security-bulletin/16287-4d6b7b0c81f7b/cert_XRX13-003_v1.0.pdf", "source": "cret@cert.org"}, {"url": "https://github.com/webmin/webmin/commit/ed7365064c189b8f136a9f952062249167d1bd9e", "source": "cret@cert.org", "tags": ["Patch"]}]}, "github_commit_url": "https://github.com/webmin/webmin/commit/ed7365064c189b8f136a9f952062249167d1bd9e"}}