{"buggy_code": ["<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Helpers\\Helper;\nuse App\\Models\\AssetModel;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Input;\nuse Illuminate\\Support\\Facades\\Redirect;\n\nclass BulkAssetModelsController extends Controller\n{\n  /**\n     * Returns a view that allows the user to bulk edit model attrbutes\n     *\n     * @author [A. Gianotto] [<snipe@snipe.net>]\n     * @since [v1.7]\n     * @param Request $request\n     * @return \\Illuminate\\Contracts\\View\\View\n     */\n    public function edit(Request $request)\n    {\n        $models_raw_array = $request->input('ids');\n\n        // Make sure some IDs have been selected\n        if ((is_array($models_raw_array)) && (count($models_raw_array) > 0)) {\n\n            $models = AssetModel::whereIn('id', $models_raw_array)\n                ->withCount('assets as assets_count')\n                ->orderBy('assets_count', 'ASC')\n                ->get();\n\n            // If deleting....\n            if ($request->input('bulk_actions')=='delete') {\n                $valid_count = 0;\n                foreach ($models as $model) {\n                    if ($model->assets_count == 0) {\n                        $valid_count++;\n                    }\n                }\n                return view('models/bulk-delete', compact('models'))->with('valid_count', $valid_count);\n\n            // Otherwise display the bulk edit screen\n            }\n\n            $nochange = ['NC' => 'No Change'];\n            return view('models/bulk-edit', compact('models'))\n                ->with('fieldset_list', $nochange + Helper::customFieldsetList())\n                ->with('depreciation_list', $nochange + Helper::depreciationList());\n        }\n\n        return redirect()->route('models.index')\n            ->with('error', 'You must select at least one model to edit.');\n    }\n\n    /**\n     * Returns a view that allows the user to bulk edit model attrbutes\n     *\n     * @author [A. Gianotto] [<snipe@snipe.net>]\n     * @since [v1.7]\n     * @param Request $request\n     * @return \\Illuminate\\Contracts\\View\\View\n     */\n    public function update(Request $request)\n    {\n\n        $models_raw_array = $request->input('ids');\n        $update_array = array();\n\n        if (($request->filled('manufacturer_id') && ($request->input('manufacturer_id')!='NC'))) {\n            $update_array['manufacturer_id'] = $request->input('manufacturer_id');\n        }\n        if (($request->filled('category_id') && ($request->input('category_id')!='NC'))) {\n            $update_array['category_id'] = $request->input('category_id');\n        }\n        if ($request->input('fieldset_id')!='NC') {\n            $update_array['fieldset_id'] = $request->input('fieldset_id');\n        }\n        if ($request->input('depreciation_id')!='NC') {\n            $update_array['depreciation_id'] = $request->input('depreciation_id');\n        }\n\n\n        \n        if (count($update_array) > 0) {\n            AssetModel::whereIn('id', $models_raw_array)->update($update_array);\n            return redirect()->route('models.index')\n                ->with('success', trans('admin/models/message.bulkedit.success'));\n        }\n\n        return redirect()->route('models.index')\n            ->with('warning', trans('admin/models/message.bulkedit.error'));\n\n    }\n\n    /**\n     * Validate and delete the given Asset Models. An Asset Model\n     * cannot be deleted if there are associated assets.\n     *\n     * @author [A. Gianotto] [<snipe@snipe.net>]\n     * @since [v1.0]\n     * @return Redirect\n     */\n    public function destroy(Request $request)\n    {\n        $models_raw_array = $request->input('ids');\n\n        if ((is_array($models_raw_array)) && (count($models_raw_array) > 0)) {\n\n            $models = AssetModel::whereIn('id', $models_raw_array)->withCount('assets as assets_count')->get();\n\n            $del_error_count = 0;\n            $del_count = 0;\n\n            foreach ($models as $model) {\n                if ($model->assets_count > 0) {\n                    $del_error_count++;\n                } else {\n                    $model->delete();\n                    $del_count++;\n                }\n            }\n\n            if ($del_error_count == 0) {\n                return redirect()->route('models.index')\n                    ->with('success', trans('admin/models/message.bulkdelete.success',['success_count'=> $del_count] ));\n            }\n\n            return redirect()->route('models.index')\n                ->with('warning', trans('admin/models/message.bulkdelete.success_partial', ['fail_count'=>$del_error_count, 'success_count'=> $del_count]));\n        }\n\n        return redirect()->route('models.index')\n            ->with('error', trans('admin/models/message.bulkdelete.error'));\n\n    }\n\n}\n"], "fixing_code": ["<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Helpers\\Helper;\nuse App\\Models\\AssetModel;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Input;\nuse Illuminate\\Support\\Facades\\Redirect;\n\nclass BulkAssetModelsController extends Controller\n{\n  /**\n     * Returns a view that allows the user to bulk edit model attrbutes\n     *\n     * @author [A. Gianotto] [<snipe@snipe.net>]\n     * @since [v1.7]\n     * @param Request $request\n     * @return \\Illuminate\\Contracts\\View\\View\n     */\n    public function edit(Request $request)\n    {\n        $models_raw_array = $request->input('ids');\n\n        // Make sure some IDs have been selected\n        if ((is_array($models_raw_array)) && (count($models_raw_array) > 0)) {\n\n            $models = AssetModel::whereIn('id', $models_raw_array)\n                ->withCount('assets as assets_count')\n                ->orderBy('assets_count', 'ASC')\n                ->get();\n\n            // If deleting....\n            if ($request->input('bulk_actions')=='delete') {\n                $this->authorize('delete', AssetModel::class);\n                $valid_count = 0;\n                foreach ($models as $model) {\n                    if ($model->assets_count == 0) {\n                        $valid_count++;\n                    }\n                }\n                return view('models/bulk-delete', compact('models'))->with('valid_count', $valid_count);\n\n            // Otherwise display the bulk edit screen\n            }\n            $this->authorize('update', AssetModel::class);\n            $nochange = ['NC' => 'No Change'];\n            return view('models/bulk-edit', compact('models'))\n                ->with('fieldset_list', $nochange + Helper::customFieldsetList())\n                ->with('depreciation_list', $nochange + Helper::depreciationList());\n        }\n\n        return redirect()->route('models.index')\n            ->with('error', 'You must select at least one model to edit.');\n    }\n\n    /**\n     * Returns a view that allows the user to bulk edit model attrbutes\n     *\n     * @author [A. Gianotto] [<snipe@snipe.net>]\n     * @since [v1.7]\n     * @param Request $request\n     * @return \\Illuminate\\Contracts\\View\\View\n     */\n    public function update(Request $request)\n    {\n        $this->authorize('update', AssetModel::class);\n      \n        $models_raw_array = $request->input('ids');\n        $update_array = array();\n\n        if (($request->filled('manufacturer_id') && ($request->input('manufacturer_id')!='NC'))) {\n            $update_array['manufacturer_id'] = $request->input('manufacturer_id');\n        }\n        if (($request->filled('category_id') && ($request->input('category_id')!='NC'))) {\n            $update_array['category_id'] = $request->input('category_id');\n        }\n        if ($request->input('fieldset_id')!='NC') {\n            $update_array['fieldset_id'] = $request->input('fieldset_id');\n        }\n        if ($request->input('depreciation_id')!='NC') {\n            $update_array['depreciation_id'] = $request->input('depreciation_id');\n        }\n\n\n        \n        if (count($update_array) > 0) {\n            AssetModel::whereIn('id', $models_raw_array)->update($update_array);\n            return redirect()->route('models.index')\n                ->with('success', trans('admin/models/message.bulkedit.success'));\n        }\n\n        return redirect()->route('models.index')\n            ->with('warning', trans('admin/models/message.bulkedit.error'));\n\n    }\n\n    /**\n     * Validate and delete the given Asset Models. An Asset Model\n     * cannot be deleted if there are associated assets.\n     *\n     * @author [A. Gianotto] [<snipe@snipe.net>]\n     * @since [v1.0]\n     * @return Redirect\n     */\n    public function destroy(Request $request)\n    {\n        $this->authorize('delete', AssetModel::class);\n      \n        $models_raw_array = $request->input('ids');\n\n        if ((is_array($models_raw_array)) && (count($models_raw_array) > 0)) {\n\n            $models = AssetModel::whereIn('id', $models_raw_array)->withCount('assets as assets_count')->get();\n\n            $del_error_count = 0;\n            $del_count = 0;\n\n            foreach ($models as $model) {\n                if ($model->assets_count > 0) {\n                    $del_error_count++;\n                } else {\n                    $model->delete();\n                    $del_count++;\n                }\n            }\n\n            if ($del_error_count == 0) {\n                return redirect()->route('models.index')\n                    ->with('success', trans('admin/models/message.bulkdelete.success',['success_count'=> $del_count] ));\n            }\n\n            return redirect()->route('models.index')\n                ->with('warning', trans('admin/models/message.bulkdelete.success_partial', ['fail_count'=>$del_error_count, 'success_count'=> $del_count]));\n        }\n\n        return redirect()->route('models.index')\n            ->with('error', trans('admin/models/message.bulkdelete.error'));\n\n    }\n\n}\n"], "filenames": ["app/Http/Controllers/BulkAssetModelsController.php"], "buggy_code_start_loc": [34], "buggy_code_end_loc": [105], "fixing_code_start_loc": [35], "fixing_code_end_loc": [110], "type": "CWE-276", "message": "snipe-it is vulnerable to Improper Access Control", "other": {"cve": {"id": "CVE-2022-0179", "sourceIdentifier": "security@huntr.dev", "published": "2022-01-12T05:15:08.407", "lastModified": "2022-01-14T16:25:54.797", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "snipe-it is vulnerable to Improper Access Control"}, {"lang": "es", "value": "snipe-it es vulnerable a un Control de Acceso Inapropiado"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.5}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:P/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.9}, "baseSeverity": "MEDIUM", "exploitabilityScore": 6.8, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-276"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-284"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:snipeitapp:snipe-it:*:*:*:*:*:*:*:*", "versionEndExcluding": "5.3.7", "matchCriteriaId": "7D2E9242-E384-4425-B5FB-1061E68C0AC5"}]}]}], "references": [{"url": "https://github.com/snipe/snipe-it/commit/cf14a0222c67472086cd08b2155f045edaf75f2e", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/efdf2ead-f9d1-4767-9f02-d11f762d15e7", "source": "security@huntr.dev", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/snipe/snipe-it/commit/cf14a0222c67472086cd08b2155f045edaf75f2e"}}