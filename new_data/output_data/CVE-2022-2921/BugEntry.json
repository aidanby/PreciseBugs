{"buggy_code": ["<?php\n/**********************************************************************\n\tCopyright (C) FrontAccounting, LLC.\n\tReleased under the terms of the GNU General Public License, GPL, \n\tas published by the Free Software Foundation, either version 3 \n\tof the License, or (at your option) any later version.\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \n\tSee the License here <http://www.gnu.org/licenses/gpl-3.0.html>.\n***********************************************************************/\n$page_security = 'SA_CHGPASSWD';\n$path_to_root = '..';\ninclude_once($path_to_root.'/includes/session.inc');\n\npage(_($help_context = 'Change password'));\n\ninclude_once($path_to_root.'/includes/date_functions.inc');\ninclude_once($path_to_root.'/includes/ui.inc');\n\ninclude_once($path_to_root.'/admin/db/users_db.inc');\n\nfunction can_process() {\n\n\t$Auth_Result = hook_authenticate($_SESSION['wa_current_user']->username, $_POST['cur_password']);\n\n\tif (!isset($Auth_Result))\t// if not used external login: standard method\n\t\t$Auth_Result = get_user_auth($_SESSION['wa_current_user']->username, md5($_POST['cur_password']));\n\n\tif (!$Auth_Result) {\n\t\tdisplay_error( _('Invalid password entered.'));\n\t\tset_focus('cur_password');\n\t\treturn false;\n\t}\n\tif (strlen($_POST['password']) < 4) {\n\t\tdisplay_error( _('The password entered must be at least 4 characters long.'));\n\t\tset_focus('password');\n\t\treturn false;\n\t}\n\tif (strstr($_POST['password'], $_SESSION['wa_current_user']->username) != false) {\n\t\tdisplay_error( _('The password cannot contain the user login.'));\n\t\tset_focus('password');\n\t\treturn false;\n\t}\n\tif ($_POST['password'] != $_POST['passwordConfirm']) {\n\t\tdisplay_error( _('The passwords entered are not the same.'));\n\t\tset_focus('password');\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nif (isset($_POST['UPDATE_ITEM']) && check_csrf_token()) {\n\n\tif (can_process()) {\n\t\tif ($SysPrefs->allow_demo_mode)\n\t\t\tdisplay_warning(_('Password cannot be changed in demo mode.'));\n\t\telse {\n\t\t\tupdate_user_password($_SESSION['wa_current_user']->user, $_SESSION['wa_current_user']->username, md5($_POST['password']));\n\t\t\tdisplay_notification(_('Your password has been updated.'));\n\t\t}\n\t\t$Ajax->activate('_page_body');\n\t}\n}\n\nstart_form();\n\nstart_table(TABLESTYLE);\n\n$myrow = get_user($_SESSION['wa_current_user']->user);\n\nlabel_row(_('User login:'), $myrow['user_id']);\n\n$_POST['cur_password'] = '';\n$_POST['password'] = '';\n$_POST['passwordConfirm'] = '';\n\npassword_row(_('Current Password:'), 'cur_password', $_POST['cur_password']);\npassword_row(_('New Password:'), 'password', $_POST['password']);\npassword_row(_('Repeat New Password:'), 'passwordConfirm', $_POST['passwordConfirm']);\n\ntable_section_title(_('Enter your new password in the fields.'));\n\nend_table(1);\n\nsubmit_center( 'UPDATE_ITEM', _('Change password'), true, '',  'default');\nend_form();\nend_page();", "<?php\n/**********************************************************************\n\tCopyright (C) FrontAccounting, LLC.\n\tReleased under the terms of the GNU General Public License, GPL, \n\tas published by the Free Software Foundation, either version 3 \n\tof the License, or (at your option) any later version.\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \n\tSee the License here <http://www.gnu.org/licenses/gpl-3.0.html>.\n***********************************************************************/\n$page_security = 'SA_CREATECOMPANY';\n$path_to_root = '..';\ninclude_once($path_to_root.'/includes/session.inc');\n\ninclude_once($path_to_root.'/includes/date_functions.inc');\ninclude_once($path_to_root.'/admin/db/company_db.inc');\ninclude_once($path_to_root.'/admin/db/maintenance_db.inc');\ninclude_once($path_to_root.'/includes/ui.inc');\n\npage(_($help_context = 'Create/Update Company'));\n\n$comp_subdirs = array('images', 'pdf_files', 'backup','js_cache', 'reporting', 'attachments');\n\nsimple_page_mode(true);\n/*\n\tFIXME: tb_pref_counter should track prefix per database.\n*/\n//---------------------------------------------------------------------------------------------\nfunction check_data($selected_id) {\n\tglobal $db_connections, $tb_pref_counter;\n\n\tif ($selected_id != -1) {\n\t\tif ($_POST['name'] == '') {\n\t\t\tdisplay_error(_('Database settings are not specified.'));\n\t\t\treturn false;\n\t\t}\n\t}\n\telse {\n\t\tif (!get_post('name') || !get_post('host') || !get_post('dbuser') || !get_post('dbname')) {\n\t\t\tdisplay_error(_('Database settings are not specified.'));\n\t\t\treturn false;\n\t\t}\n\t\tif ($_POST['port'] != '' && !is_numeric($_POST['port'])) {\n\t\t\tdisplay_error(_('Database port has to be numeric or empty.'));\n\t\t\treturn false;\n\t\t}\n\t\n\t\tforeach($db_connections as $id=>$con) {\n\t\t\tif($id != $selected_id && $_POST['host'] == $con['host'] && $_POST['dbname'] == $con['dbname']) {\n\t\t\t\tif ($_POST['tbpref'] == $con['tbpref']) {\n\t\t\t\t\tdisplay_error(_('This database settings are already used by another company.'));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (($_POST['tbpref'] == 0) ^ ($con['tbpref'] == '')) {\n\t\t\t\t\tdisplay_error(_('You cannot have table set without prefix together with prefixed sets in the same database.'));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n//---------------------------------------------------------------------------------------------\n\nfunction remove_connection($id) {\n\tglobal $db_connections;\n\n\t$err = db_drop_db($db_connections[$id]);\n\n\tunset($db_connections[$id]);\n\t$conn = array_values($db_connections);\n\t$db_connections = $conn;\n\treturn $err;\n}\n\n//---------------------------------------------------------------------------------------------\n\nfunction handle_submit($selected_id) {\n\tglobal $db_connections, $def_coy, $tb_pref_counter, $db, $comp_subdirs, $path_to_root, $Mode;\n\n\t$error = false;\n\n\tif ($selected_id==-1)\n\t\t$selected_id = count($db_connections);\n\n\t$new = !isset($db_connections[$selected_id]);\n\n\tif (check_value('def'))\n\t\t$def_coy = $selected_id;\n\n\t$db_connections[$selected_id]['name'] = $_POST['name'];\n\tif ($new) {\n\t\t$db_connections[$selected_id]['host'] = $_POST['host'];\n\t\t$db_connections[$selected_id]['port'] = $_POST['port'];\n\t\t$db_connections[$selected_id]['dbuser'] = $_POST['dbuser'];\n\t\t$db_connections[$selected_id]['dbpassword'] = html_entity_decode($_POST['dbpassword'], ENT_QUOTES, $_SESSION['language']->encoding=='iso-8859-2' ? 'ISO-8859-1' : $_SESSION['language']->encoding);\n\t\t$db_connections[$selected_id]['dbname'] = $_POST['dbname'];\n\t\t$db_connections[$selected_id]['collation'] = $_POST['collation'];\n\t\tif (is_numeric($_POST['tbpref']))\n\t\t\t$db_connections[$selected_id]['tbpref'] = $_POST['tbpref'] == 1 ? $tb_pref_counter.'_' : '';\n\t\telse if ($_POST['tbpref'] != '')\n\t\t\t$db_connections[$selected_id]['tbpref'] = $_POST['tbpref'];\n\t\telse\n\t\t\t$db_connections[$selected_id]['tbpref'] = '';\n\n\t\t$conn = $db_connections[$selected_id];\n\t\tif (($db = db_create_db($conn)) === false) {\n\t\t\tdisplay_error(_('Error creating Database: ') . $conn['dbname'] . _(', Please create it manually'));\n\t\t\t$error = true;\n\t\t}\n\t\telse {\n\t\t\tif (strncmp(db_get_version(), '5.6', 3) >= 0) \n\t\t\t\tdb_query(\"SET sql_mode = ''\");\n\t\t\tif (!db_import($path_to_root.'/sql/'.get_post('coa'), $conn, $selected_id)) {\n\t\t\t\tdisplay_error(_('Cannot create new company due to bugs in sql file.'));\n\t\t\t\t$error = true;\n\t\t\t} \n\t\t\telse {\n\t\t\t\tif (!isset($_POST['admpassword']) || $_POST['admpassword'] == '')\n\t\t\t\t\t$_POST['admpassword'] = 'password';\n\t\t\t\tupdate_admin_password($conn, md5($_POST['admpassword']));\n\t\t\t}\n\t\t}\n\t\tif ($error) {\n\t\t\tremove_connection($selected_id);\n\t\t\treturn false;\n\t\t}\n\t}\n\t$error = write_config_db($new);\n\n\tif ($error == -1)\n\t\tdisplay_error(_('Cannot open the configuration file - ').$path_to_root.'/config_db.php');\n\telse if ($error == -2)\n\t\tdisplay_error(_('Cannot write to the configuration file - ').$path_to_root.'/config_db.php');\n\telse if ($error == -3)\n\t\tdisplay_error(_('The configuration file ').$path_to_root.'/config_db.php'._(' is not writable. Change its permissions so it is, then re-run the operation.'));\n\tif ($error != 0)\n\t\treturn false;\n\n\tif ($new) {\n\t\tcreate_comp_dirs(company_path($selected_id), $comp_subdirs);\n\t\t$exts = get_company_extensions();\n\t\twrite_extensions($exts, $selected_id);\n\t}\n\tdisplay_notification($new ? _('New company has been created.') : _('Company has been updated.'));\n\n\t$Mode = 'RESET';\n\treturn true;\n}\n\n//---------------------------------------------------------------------------------------------\n\nfunction handle_delete($id) {\n\tglobal $Ajax, $def_coy, $db_connections, $comp_subdirs, $path_to_root, $Mode;\n\n\t// First make sure all company directories from the one under removal are writable. \n\t// Without this after operation we end up with changed per-company owners!\n\tfor($i = $id; $i < count($db_connections); $i++) {\n\t\t\t$comp_path = company_path($i);\n\t\tif (!is_dir($comp_path) || !is_writable($comp_path)) {\n\t\t\tdisplay_error(_('Broken company subdirectories system. You have to remove this company manually.'));\n\t\t\treturn;\n\t\t}\n\t}\n\t// make sure config file is writable\n\tif (!is_writeable($path_to_root . '/config_db.php')) {\n\t\tdisplay_error(_('The configuration file ').$path_to_root.'/config_db.php'._(' is not writable. Change its permissions so it is, then re-run the operation.'));\n\t\treturn;\n\t}\n\t// rename directory to temporary name to ensure all\n\t// other subdirectories will have right owners even after\n\t// unsuccessfull removal.\n\t$cdir = company_path($id);\n\t$tmpname  = company_path('/old_'.$id);\n\tif (!@rename($cdir, $tmpname)) {\n\t\tdisplay_error(_('Cannot rename subdirectory to temporary name.'));\n\t\treturn;\n\t}\n\t// 'shift' company directories names\n\tfor ($i = $id+1; $i < count($db_connections); $i++) {\n\t\tif (!rename(company_path($i), company_path($i-1))) {\n\t\t\tdisplay_error(_('Cannot rename company subdirectory'));\n\t\t\treturn;\n\t\t}\n\t}\n\t$err = remove_connection($id);\n\tif ($err == 0)\n\t\tdisplay_error(_('Error removing Database: ').$id._(', please remove it manually'));\n\n\tif ($def_coy == $id)\n\t\t$def_coy = 0;\n\n\t$error = write_config_db();\n\tif ($error == -1)\n\t\tdisplay_error(_('Cannot open the configuration file - ').$path_to_root.'/config_db.php');\n\telse if ($error == -2)\n\t\tdisplay_error(_('Cannot write to the configuration file - ').$path_to_root.'/config_db.php');\n\telse if ($error == -3)\n\t\tdisplay_error(_('The configuration file ').$path_to_root.'/config_db.php'._(' is not writable. Change its permissions so it is, then re-run the operation.'));\n\tif ($error != 0) {\n\t\t@rename($tmpname, $cdir);\n\t\treturn;\n\t}\n\t// finally remove renamed company directory\n\t@flush_dir($tmpname, true);\n\tif (!@rmdir($tmpname)) {\n\t\tdisplay_error(_('Cannot remove temporary renamed company data directory ').$tmpname);\n\t\treturn;\n\t}\n\tdisplay_notification(_('Selected company has been deleted'));\n\t$Ajax->activate('_page_body');\n\t$Mode = 'RESET';\n}\n\n//---------------------------------------------------------------------------------------------\n\nfunction display_companies() {\n\tglobal $def_coy, $db_connections, $supported_collations;\n\n\t$coyno = user_company();\n\n\tstart_table(TABLESTYLE);\n\n\t$th = array(_('Company'), _('Database Host'), _('Database Port'), _('Database User'), _('Database Name'), _('Table Pref'), _('Charset'), _('Default'), '', '');\n\ttable_header($th);\n\n\t$k=0;\n\t$conn = $db_connections;\n\t$n = count($conn);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i == $coyno)\n\t\t\tstart_row(\"class='stockmankobg'\");\n\t\telse\n\t\t\talt_table_row_color($k);\n\n\t\tlabel_cell($conn[$i]['name']);\n\t\tlabel_cell($conn[$i]['host']);\n\t\tlabel_cell(isset($conn[$i]['port']) ? $conn[$i]['port'] : '');\n\t\tlabel_cell($conn[$i]['dbuser']);\n\t\tlabel_cell($conn[$i]['dbname']);\n\t\tlabel_cell($conn[$i]['tbpref']);\n\t\tlabel_cell(isset($conn[$i]['collation']) ? $supported_collations[$conn[$i]['collation']] : '');\n\t\tlabel_cell($i == $def_coy ? _('Yes') : _('No'));\n\t\tedit_button_cell('Edit'.$i, _('Edit'));\n\t\tif ($i != $coyno) {\n\t\t\tdelete_button_cell('Delete'.$i, _('Delete'));\n\t\t\tsubmit_js_confirm('Delete'.$i, sprintf(_(\"You are about to remove company \\'%s\\'.\\nDo you want to continue ?\"), $conn[$i]['name']));\n\t\t}\n\t\telse\n\t\t\tlabel_cell('');\n\t\tend_row();\n\t}\n\n\tend_table();\n\tdisplay_note(_('The marked company is the current company which cannot be deleted.'), 0, 0, \"class='currentfg'\");\n\tdisplay_note(_(\"If no Admin Password is entered, the new Admin Password will be '<b>password</b>' by default \"));\n\tdisplay_note(_('Set Only Port value if you cannot use the default port 3306.'));\n}\n\n//---------------------------------------------------------------------------------------------\n\nfunction display_company_edit($selected_id) {\n\tglobal $def_coy, $db_connections, $tb_pref_counter;\n\n\tstart_table(TABLESTYLE2);\n\n\tif ($selected_id != -1) {\n\t\t$conn = $db_connections[$selected_id];\n\t\t$_POST['name'] = $conn['name'];\n\t\t$_POST['host']  = $conn['host'];\n\t\t$_POST['port'] = isset($conn['port']) ? $conn['port'] : '';\n\t\t$_POST['dbuser']  = $conn['dbuser'];\n\t\t$_POST['dbpassword']  = $conn['dbpassword'];\n\t\t$_POST['dbname']  = $conn['dbname'];\n\t\t$_POST['tbpref']  = $conn['tbpref'];\n\t\t$_POST['def'] = $selected_id == $def_coy;\n\t\t$_POST['dbcreate']  = false;\n\t\t$_POST['collation']  = isset($conn['collation']) ? $conn['collation'] : '';\n\t\thidden('tbpref', $_POST['tbpref']);\n\t\thidden('dbpassword', $_POST['dbpassword']);\n\t}\n\telse {\n\t\t$_POST['tbpref'] = $tb_pref_counter.'_';\n\n\t\t// Use current settings as default\n\t\t$conn = $db_connections[user_company()];\n\t\t$_POST['name'] = '';\n\t\t$_POST['host']  = $conn['host'];\n\t\t$_POST['port']  = isset($conn['port']) ? $conn['port'] : '';\n\t\t$_POST['dbuser']  = $conn['dbuser'];\n\t\t$_POST['dbpassword']  = $conn['dbpassword'];\n\t\t$_POST['dbname']  = $conn['dbname'];\n\t\t$_POST['collation']  = isset($conn['collation']) ? $conn['collation'] : '';\n\t\tunset($_POST['def']);\n\t}\n\n\ttext_row_ex(_('Company'), 'name', 50);\n\n\tif ($selected_id == -1) {\n\t\ttext_row_ex(_('Host'), 'host', 30, 60);\n\t\ttext_row_ex(_('Port'), 'port', 30, 60);\n\t\ttext_row_ex(_('Database User'), 'dbuser', 30);\n\t\ttext_row_ex(_('Database Password'), 'dbpassword', 30);\n\t\ttext_row_ex(_('Database Name'), 'dbname', 30);\n\t\tcollations_list_row(_('Database Collation:'), 'collation');\n\t\tyesno_list_row(_('Table Pref'), 'tbpref', 1, $_POST['tbpref'], _('None'), false);\n\t\tcheck_row(_('Default Company'), 'def');\n\t\tcoa_list_row(_('Database Script'), 'coa');\n\t\ttext_row_ex(_('New script Admin Password'), 'admpassword', 20);\n\t}\n\telse {\n\t\tlabel_row(_('Host'), $_POST['host']);\n\t\tlabel_row(_('Port'), $_POST['port']);\n\t\tlabel_row(_('Database User'), $_POST['dbuser']);\n\t\tlabel_row(_('Database Name'), $_POST['dbname']);\n\t\tcollations_list_row(_('Database Collation:'), 'collation');\n\t\tlabel_row(_('Table Pref'), $_POST['tbpref']);\n\t\tif (!get_post('def'))\n\t\t\tcheck_row(_('Default Company'), 'def');\n\t\telse\n\t\t\tlabel_row(_('Default Company'), _('Yes'));\n\t}\n\n\tend_table(1);\n\thidden('selected_id', $selected_id);\n}\n\n//---------------------------------------------------------------------------------------------\n\nif (($Mode=='ADD_ITEM' || $Mode=='UPDATE_ITEM') && check_data($selected_id))\n\thandle_submit($selected_id);\n\nif ($Mode == 'Delete')\n\thandle_delete($selected_id);\n\nif ($Mode == 'RESET') {\n\t$selected_id = -1;\n\tunset($_POST);\n}\n\n//---------------------------------------------------------------------------------------------\n\nstart_form();\n\ndisplay_companies();\ndisplay_company_edit($selected_id);\nsubmit_add_or_update_center($selected_id == -1, '', 'upgrade');\n\nend_form();\n\nend_page();", "<?php\n/**********************************************************************\n\tCopyright (C) FrontAccounting, LLC.\n\tReleased under the terms of the GNU General Public License, GPL, \n\tas published by the Free Software Foundation, either version 3 \n\tof the License, or (at your option) any later version.\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \n\tSee the License here <http://www.gnu.org/licenses/gpl-3.0.html>.\n***********************************************************************/\n\nfunction add_user($user_id, $real_name, $password, $phone, $email, $role_id, $language, $profile, $rep_popup, $pos) {\n\t$sql = \"INSERT INTO \".TB_PREF.\"users (user_id, real_name, password\"\n\t\t.\", phone, email, role_id, language, pos, print_profile, rep_popup)\n\t\tVALUES (\".db_escape($user_id).\", \n\t\t\".db_escape($real_name).\", \".db_escape($password).\",\".db_escape($phone)\n\t\t.\",\".db_escape($email).\", \".db_escape($role_id).\", \".db_escape($language)\n\t\t.\", \".db_escape($pos).\",\".db_escape($profile).\",\".db_escape($rep_popup)\n\t\t.\" )\";\n\n\treturn db_query($sql, 'could not add user for '.$user_id);\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction update_user_password($id, $user_id, $password) {\n\t$sql = \"UPDATE \".TB_PREF.\"users SET password=\".db_escape($password).\",user_id = \".db_escape($user_id).\" WHERE id=\".db_escape($id);\n\n\treturn db_query($sql, 'could not update user password for '.$user_id);\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction update_user($id, $user_id, $real_name, $phone, $email, $role_id, $language, $profile, $rep_popup, $pos) {\n\t$sql = \"UPDATE \".TB_PREF.\"users SET real_name=\".db_escape($real_name).\n\t\", phone=\".db_escape($phone).\",\n\t\temail=\".db_escape($email).\",\n\t\trole_id=\".db_escape($role_id).\",\n\t\tlanguage=\".db_escape($language).\",\n\t\tprint_profile=\".db_escape($profile).\",\n\t\trep_popup=\".db_escape($rep_popup).\",\n\t\tpos=\".db_escape($pos).\",\n\t\tuser_id = \" . db_escape($user_id)\n\t\t. \" WHERE id=\" . db_escape($id);\n\treturn db_query($sql, 'could not update user for '.$user_id);\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction update_user_prefs($id, $prefs) {\n\t$sql = \"UPDATE \".TB_PREF.\"users SET \";\n\tforeach($prefs as $name => $value) {\n\t\t$prefs[$name] = $name.'='.db_escape($value);\n\t}\n\t$sql .= implode(',', $prefs).\" WHERE id=\".db_escape($id);\n\n\treturn db_query($sql, 'could not update user display prefs for '.$id);\n}\n\n//-----------------------------------------------------------------------------------------------\n\n\nfunction get_users($all=false) {\n\t$sql = \"SELECT u.*, r.role FROM \".TB_PREF.\"users u, \".TB_PREF.\"security_roles r\n\t\tWHERE u.role_id=r.id\";\n\tif (!$all) $sql .= \" AND !u.inactive\";\n\t\n\treturn db_query($sql, 'could not get users');\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction get_user($id) {\n\t$sql = \"SELECT * FROM \".TB_PREF.\"users WHERE id=\".db_escape($id);\n\n\t$result = db_query($sql, 'could not get user '.$id);\n\n\treturn db_fetch($result);\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction get_user_by_login($user_id) {\n\t$sql = \"SELECT * FROM \".TB_PREF.\"users WHERE user_id=\".db_escape($user_id);\n\n\t$result = db_query($sql, 'could not get user '.$user_id);\n\n\treturn db_fetch($result);\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction get_user_by_email($email) {\n\t$sql = \"SELECT * FROM \".TB_PREF.\"users WHERE email=\".db_escape($email);\n\n\t$result = db_query($sql, 'could not get user for email '.$email);\n\n\tif (db_num_rows($result) != 1)\n\t\treturn false;\n\n\treturn db_fetch($result);\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction delete_user($id) {\n\t$sql = \"DELETE FROM \".TB_PREF.\"users WHERE id=\".db_escape($id);\n\n\tdb_query($sql, 'could not delete user '.$id);\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction get_user_auth($user_id, $password) {\n\n\t$sql = \"SELECT * FROM \".TB_PREF.\"users WHERE user_id = \".db_escape($user_id).\" AND\"\n\t\t.\" password=\".db_escape($password);\n\n\treturn db_num_rows(db_query($sql, 'could not get validate user login for '.$user_id)) != 0;\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction update_user_visitdate($user_id) {\n\t$sql = \"UPDATE \".TB_PREF.\"users SET last_visit_date='\". date(\"Y-m-d H:i:s\") .\"'\n\t\tWHERE user_id=\".db_escape($user_id);\n\n\tdb_query($sql, 'could not update last visit date for user '.$user_id);\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction check_user_activity($id)  {\n\t$sql = \"SELECT COUNT(*) FROM \".TB_PREF.\"audit_trail WHERE audit_trail.user=\"\n\t\t. db_escape($id);\n\t$result = db_query($sql, 'Cannot check user activity');\n\t$ret = db_fetch($result);\n\n\treturn $ret[0];\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction show_users_online() {\n\tglobal $db, $GetText, $SysPrefs;\n\n\tif (!isset($SysPrefs->show_users_online) || $SysPrefs->show_users_online == 0 || !defined('TB_PREF') || !isset($GetText) || !isset($db))\n\t\treturn '';\n\t$result = db_query(\"SHOW TABLES LIKE '\".TB_PREF.\"useronline'\");\t\n\tif (db_num_rows($result) == 1) {\n\t\t$timeoutseconds = 120;\n\n\t\t$timestamp=time();\n\t\t$timeout=$timestamp-$timeoutseconds;\n\t\t/*\n\t\tThis will find out if user is from behind proxy server. \n\t\tIn that case, the script would count them all as 1 user.\n\t\tThis function tryes to get real IP address.\n\t\t*/\n\t\tif (isset($_SERVER['HTTP_CLIENT_IP']))\n\t\t\t$ip = $_SERVER['HTTP_CLIENT_IP'];\n\t\telseif (isset($_SERVER['HTTP_X_FORWARDED_FOR']))\n\t\t\t$ip = $_SERVER['HTTP_X_FORWARDED_FOR'];\n\t\telseif (isset($_SERVER['HTTP_X_FORWARDED']))\n\t\t\t$ip = $_SERVER['HTTP_X_FORWARDED'];\n\t\telseif (isset($_SERVER['HTTP_FORWARDED_FOR']))\n\t\t\t$ip = $_SERVER['HTTP_FORWARDED_FOR'];\n\t\telseif (isset($_SERVER['HTTP_FORWARDED']))\n\t\t\t$ip = $_SERVER['HTTP_FORWARDED'];\n\t\telse\n\t\t\t$ip = $_SERVER['REMOTE_ADDR'];\n\n\t\t// Add user to database\n\t\tdb_query(\"INSERT INTO \".TB_PREF.\"useronline (timestamp, ip, file) VALUES ('\". $timestamp .\"',\". db_escape($ip) .\",\". db_escape($_SERVER['PHP_SELF']) .\")\");\n\t\t//Remove users that were not online within $timeoutseconds.\n\t\tdb_query(\"DELETE FROM \".TB_PREF.\"useronline WHERE timestamp<\". $timeout);\n\n\t\t// Select online users\n\t\t$result = db_query(\"SELECT DISTINCT ip FROM \".TB_PREF.\"useronline\");\n\t\t$users = db_num_rows($result);\n\t}\n\telse\n\t\t$users = 1;\n\treturn ' - '.\"$users \".($users == 1 ? _('user online') : _('users online'));\n}\n", "<?php\n/**********************************************************************\n\tCopyright (C) FrontAccounting, LLC.\n\tReleased under the terms of the GNU General Public License, GPL, \n\tas published by the Free Software Foundation, either version 3 \n\tof the License, or (at your option) any later version.\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \n\tSee the License here <http://www.gnu.org/licenses/gpl-3.0.html>.\n***********************************************************************/\n$page_security = 'SA_USERS';\n$path_to_root = '..';\ninclude_once($path_to_root.'/includes/session.inc');\n\npage(_($help_context = 'Users'));\n\ninclude_once($path_to_root.'/includes/date_functions.inc');\ninclude_once($path_to_root.'/includes/ui.inc');\n\ninclude_once($path_to_root.'/admin/db/users_db.inc');\n\nsimple_page_mode(true);\n\n//-------------------------------------------------------------------------------------------------\n\nfunction can_process($new) {\n\n\tif (strlen($_POST['user_id']) < 4) {\n\t\tdisplay_error( _('The user login entered must be at least 4 characters long.'));\n\t\tset_focus('user_id');\n\t\treturn false;\n\t}\n\tif (!$new && ($_POST['password'] != '')) {\n\t\tif (strlen($_POST['password']) < 4) {\n\t\t\tdisplay_error( _('The password entered must be at least 4 characters long.'));\n\t\t\tset_focus('password');\n\t\t\treturn false;\n\t\t}\n\t\tif (strstr($_POST['password'], $_POST['user_id']) != false) {\n\t\t\tdisplay_error( _('The password cannot contain the user login.'));\n\t\t\tset_focus('password');\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n//-------------------------------------------------------------------------------------------------\n\nif (($Mode=='ADD_ITEM' || $Mode=='UPDATE_ITEM') && check_csrf_token()) {\n\n\tif (can_process($Mode == 'ADD_ITEM')) {\n\t\tif ($selected_id != -1) {\n\t\t\tupdate_user_prefs($selected_id, get_post(array('user_id', 'real_name', 'phone', 'email', 'role_id', 'language', 'print_profile', 'rep_popup' => 0, 'pos')));\n\n\t\t\tif ($_POST['password'] != '')\n\t\t\t\tupdate_user_password($selected_id, $_POST['user_id'], md5($_POST['password']));\n\n\t\t\tdisplay_notification_centered(_('The selected user has been updated.'));\n\t\t} \n\t\telse {\n\t\t\tadd_user($_POST['user_id'], $_POST['real_name'], md5($_POST['password']), $_POST['phone'], $_POST['email'], $_POST['role_id'], $_POST['language'], $_POST['print_profile'], check_value('rep_popup'), $_POST['pos']);\n\t\t\t$id = db_insert_id();\n\t\t\t// use current user display preferences as start point for new user\n\t\t\t$prefs = $_SESSION['wa_current_user']->prefs->get_all();\n\t\t\t\n\t\t\tupdate_user_prefs($id, array_merge($prefs, get_post(array('print_profile', 'rep_popup' => 0, 'language'))));\n\n\t\t\tdisplay_notification_centered(_('A new user has been added.'));\n\t\t}\n\t\t$Mode = 'RESET';\n\t}\n}\n\n//-------------------------------------------------------------------------------------------------\n\nif ($Mode == 'Delete' && check_csrf_token()) {\n\t$cancel_delete = 0;\n\tif (key_in_foreign_table($selected_id, 'audit_trail', 'user')) {\n\t\t$cancel_delete = 1;\n\t\tdisplay_error(_('Cannot delete this user because entries are associated with this user.'));\n\t}\n\tif ($cancel_delete == 0) {\n\t\tdelete_user($selected_id);\n\t\tdisplay_notification_centered(_('User has been deleted.'));\n\t} //end if Delete group\n\t$Mode = 'RESET';\n}\n\n//-------------------------------------------------------------------------------------------------\n\nif ($Mode == 'RESET') {\n\t$selected_id = -1;\n\t$sav = get_post('show_inactive', null);\n\tunset($_POST);\t// clean all input fields\n\t$_POST['show_inactive'] = $sav;\n}\n\n$result = get_users(check_value('show_inactive'));\nstart_form();\nstart_table(TABLESTYLE);\n\n$th = array(_('User login'), _('Full Name'), _('Phone'), _('E-mail'), _('Last Visit'), _('Access Level'), '', '');\n\ninactive_control_column($th);\ntable_header($th);\t\n\n$k = 0; //row colour counter\n\nwhile ($myrow = db_fetch($result)) {\n\n\talt_table_row_color($k);\n\n\t$time_format = (user_date_format() == 0 ? 'h:i a' : 'H:i');\n\t$last_visit_date = sql2date($myrow['last_visit_date']).' '.date($time_format, strtotime($myrow['last_visit_date']));\n\n\t/*The security_headings array is defined in config.php */\n\t$not_me = strcasecmp($myrow['user_id'], $_SESSION['wa_current_user']->username);\n\n\tlabel_cell($myrow['user_id']);\n\tlabel_cell($myrow['real_name']);\n\tlabel_cell($myrow['phone']);\n\temail_cell($myrow['email']);\n\tlabel_cell($last_visit_date, 'nowrap');\n\tlabel_cell($myrow['role']);\n\t\n\tif ($not_me)\n\t\tinactive_control_cell($myrow['id'], $myrow['inactive'], 'users', 'id');\n\telseif (check_value('show_inactive'))\n\t\tlabel_cell('');\n\n\tedit_button_cell('Edit'.$myrow['id'], _('Edit'));\n\tif ($not_me)\n\t\tdelete_button_cell('Delete'.$myrow['id'], _('Delete'));\n\telse\n\t\tlabel_cell('');\n\tend_row();\n}\n\ninactive_control_row($th);\nend_table(1);\n\n//-------------------------------------------------------------------------------------------------\n\nstart_table(TABLESTYLE2);\n\n$_POST['email'] = '';\nif ($selected_id != -1) {\n\tif ($Mode == 'Edit') {\n\t\t//editing an existing User\n\t\t$myrow = get_user($selected_id);\n\n\t\t$_POST['id'] = $myrow['id'];\n\t\t$_POST['user_id'] = $myrow['user_id'];\n\t\t$_POST['real_name'] = $myrow['real_name'];\n\t\t$_POST['phone'] = $myrow['phone'];\n\t\t$_POST['email'] = $myrow['email'];\n\t\t$_POST['role_id'] = $myrow['role_id'];\n\t\t$_POST['language'] = $myrow['language'];\n\t\t$_POST['print_profile'] = $myrow['print_profile'];\n\t\t$_POST['rep_popup'] = $myrow['rep_popup'];\n\t\t$_POST['pos'] = $myrow['pos'];\n\t}\n\thidden('selected_id', $selected_id);\n\thidden('user_id');\n\n\tstart_row();\n\tlabel_row(_('User login:'), $_POST['user_id']);\n} \nelse { //end of if $selected_id only do the else when a new record is being entered\n\ttext_row(_('User Login:'), 'user_id',  null, 22, 20);\n\t$_POST['language'] = user_language();\n\t$_POST['print_profile'] = user_print_profile();\n\t$_POST['rep_popup'] = user_rep_popup();\n\t$_POST['pos'] = user_pos();\n}\n$_POST['password'] = '';\npassword_row(_('Password:'), 'password', $_POST['password']);\n\nif ($selected_id != -1)\n\ttable_section_title(_('Enter a new password to change, leave empty to keep current.'));\n\ntext_row_ex(_('Full Name').':', 'real_name',  50);\ntext_row_ex(_('Telephone No.:'), 'phone', 30);\nemail_row_ex(_('Email Address:'), 'email', 50);\nsecurity_roles_list_row(_('Access Level:'), 'role_id', null); \nlanguages_list_row(_('Language:'), 'language', null);\npos_list_row(_(\"User's POS\"). ':', 'pos', null);\nprint_profiles_list_row(_('Printing profile').':', 'print_profile', null, _('Browser printing support'));\ncheck_row(_('Use popup window for reports:'), 'rep_popup', $_POST['rep_popup'], false, _('Set this option to on if your browser directly supports pdf files'));\n\nend_table(1);\n\nsubmit_add_or_update_center($selected_id == -1, '', 'both');\n\nend_form();\nend_page();", "<?php\n/**********************************************************************\n\tCopyright (C) FrontAccounting, LLC.\n\tReleased under the terms of the GNU General Public License, GPL, \n\tas published by the Free Software Foundation, either version 3 \n\tof the License, or (at your option) any later version.\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \n\tSee the License here <http://www.gnu.org/licenses/gpl-3.0.html>.\n***********************************************************************/\n\ninclude_once($path_to_root.'/includes/prefs/userprefs.inc');\nif (!defined('TB_PREF'))\n\tdefine('TB_PREF', '&TB_PREF&');\n\n//--------------------------------------------------------------------------\n\nclass current_user {\n\tvar $user = 0;\n\tvar $loginname;\n\tvar $username;\n\tvar $name;\n\tvar $email;\n\tvar $company; // user's company\n\tvar $pos;\n\tvar $access;\n\tvar $timeout;\n\tvar $last_act;\n\tvar $role_set = false;\n\tvar $old_db;\n\tvar $logged;\n\tvar $ui_mode = 0;\n\tvar $login_attempt=0;\n\t\n\tvar $prefs;\n\tvar $cur_con; // current db connection (can be different from $company for superuser)\n\n\tfunction __construct() {\n\t\tglobal $def_coy;\n\t\t\n\t\t$this->loginname = '';\n\t\t$this->username = '';\n\t\t$this->name = '';\n\t\t$this->company = isset($def_coy) ? $def_coy : 0;\n\t\t$this->logged = false;\n\n\t\t$this->prefs = new user_prefs();\n\t}\n\n\tfunction logged_in(){\n\t\treturn $this->logged;\n\t}\n\n\tfunction set_company($company) {\n\t\t$this->company = (int)$company;\n\t}\n\n\tfunction login($company, $loginname, $password) {\n\t\tglobal $security_areas, $security_groups, $security_headings, $path_to_root, $dflt_lang, $SysPrefs;\n\n\t\t$this->set_company($company);\n\t\t$this->logged = false;\n\n\t\tset_global_connection($company);\n\t\t$lang = &$_SESSION['language'];\n\t\t$lang->set_language($_SESSION['language']->code);\n\t\tdb_set_encoding($_SESSION['language']->encoding);\n\n\t\t// Use external authentication source if any.\n\t\t// Keep in mind you need to have user data set for $loginname\n\t\t// in FA users table anyway to successfully log in.\n\t\t$Auth_Result = hook_authenticate($loginname, $password);\n\n\t\tif (!isset($Auth_Result))\t// if not used: standard method\n\t\t\t$Auth_Result = get_user_auth($loginname, md5($password));\n\t\tif ($SysPrefs->login_delay > 0)\n\t\t\twrite_login_filelog($loginname, $Auth_Result);\n\t\tif ($Auth_Result) {\n\t\t\t$myrow = get_user_by_login($loginname);\n\t\t\tif ($myrow['language'] != $dflt_lang) {\t // refresh language and user data\n\t\t\t\t$lang->set_language($myrow['language']);\n\t\t\t\tdb_set_encoding($_SESSION['language']->encoding);\n\t\t\t\t$myrow = get_user_by_login($loginname);\n\t\t\t}\n\n\t\t\t$this->old_db = isset($myrow['full_access']);\n\t\t\tif (! @$myrow['inactive']) {\n\t\t\t\tif ($this->old_db) { \n\t\t\t\t\t// Transition code:\n\t\t\t\t\t// db was not yet upgraded after source update to v.2.2\n\t\t\t\t\t// give enough access for admin user to continue upgrade\n\t\t\t\t\tif (!isset($security_groups) || !isset($security_headings)) {\n\t\t\t\t\t\techo \"<center><br><br><font size='5' color='red'><b>\";\n\t\t\t\t\t\techo _('Before software upgrade you have to include old $security_groups and $security_headings arrays from old config.php file to the new one.');\n\t\t\t\t\t\techo '<br>'.\"<a href=\".$path_to_root.\"/index.php>\"._('Back').'</a>';\n\t\t\t\t\t\techo '</b></font><br><br></center>';\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t\t$this->access = $myrow['full_access'];\n\t\t\t\t\tif (in_array(20, $security_groups[$this->access])) // temporary access for admin users\n\t\t\t\t\t\t$this->role_set[] = $security_areas['SA_SOFTWAREUPGRADE'][0];\n\t\t\t\t\telse {\n\t\t\t\t\t\techo \"<center><br><br><font size='5' color='red'><b>\";\n\t\t\t\t\t\techo _('System is available for site admin only until full database upgrade');\n\t\t\t\t\t\techo '</b></font><br><br></center>';\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$this->role_set = array();\n\t\t\t\t\t$this->access = $myrow['role_id'];\n\t\t\t\t\t// store area codes available for current user role\n\t\t\t\t\t$role = get_security_role($this->access);\n\t\t\t\t\tif (!$role) \n\t\t\t\t\t\treturn false;\n\t\t\t\t\tforeach( $role['areas'] as $code ) {\n\t\t\t\t\t\t// filter only area codes for enabled security sections\n\t\t\t\t\t\tif (in_array($code&~0xff, $role['sections'])) \n\t\t\t\t\t\t\t$this->role_set[] = $code;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$this->name = $myrow['real_name'];\n\t\t\t\t$this->pos = $myrow['pos'];\n\t\t\t\t$this->loginname = $loginname;\n\t\t\t\t$this->username = $this->loginname;\n\t\t\t\t$this->prefs = new user_prefs($myrow);\n\t\t\t\t$this->user = @$myrow['id'];\n\t\t\t\t$this->email = @$myrow['email'];\n\t\t\t\tupdate_user_visitdate($this->username);\n\t\t\t\t$this->logged = true;\n\t\t\t\t$this->login_attempt = 0;\n\t\t\t\t$this->last_act = time();\n\t\t\t\t$this->timeout = session_timeout();\n\t\t\t\tflush_dir(user_js_cache()); // refresh cache on login\n\t\t\t}\n\t\t}\n\t\treturn $this->logged;\n\t}\n\n\tfunction reset_password($company, $email) {\n\t\tglobal $SysPrefs;\n\n\t\t$this->set_company($company);\n\t\t$this->logged = false;\n\n\t\tset_global_connection();\n\n\t\t$user = get_user_by_email($email);\n\n\t\tif ($user != false) {\n\n\t\t\t$password = generate_password();\n\t\t\t$hash = md5($password);\n\n\t\t\tupdate_user_password($user['id'], $user['user_id'], $hash);\n\t\t\t\n\t\t\t$sender = get_company_pref('email');\n\t\t\tif (empty($sender))\n\t\t\t\t$header = '';\n\t\t\telse\n\t\t\t\t$header = \"From: $sender\";\n\n\t\t\tmail($email, _('New password for').' '.$SysPrefs->app_title, $password, $header);\n\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction check_user_access() {\n\t\tglobal $security_groups;\n\n\t\tif ($this->old_db) // notification after upgrade\n\t\t\treturn isset($security_groups) && is_array(@$security_groups[$this->access]);\n\t\telse\n\t\t\treturn !isset($security_groups) && is_array($this->role_set);\n\t}\n\n\tfunction can_access($sec_area) {\n\t\tglobal $security_groups, $security_areas;\n\n\t\tif (isset($security_groups))\n\t\t\treturn is_admin_company() && in_array(20, $security_groups[$this->access]);\n\n\t\tif ($sec_area === 'SA_OPEN') \n\t\t\treturn true;\n\t\tif ($sec_area === 'SA_DENIED' || $sec_area === '') \n\t\t\treturn false;\n\n\t\t$code = $security_areas[$sec_area][0];\n\n\t\t// only first registered company has site admin privileges\n\t\treturn $code && in_array($code, $this->role_set) && ($this->company == 0 || (($code&~0xff) != SS_SADMIN));\n\t}\n\n\tfunction can_access_page($page_level) {\n\t\treturn $this->can_access($page_level);\n\t}\n\n\tfunction check_application_access($waapp) {\n\t\tif (!$this->hide_inaccessible_menu_items())\n\t\t\treturn true;\n\n\t\tforeach ($waapp->modules as $module) {\n\t\t\tif ($this->check_module_access($module))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction check_module_access($module) {\n\n\t\tif (!$this->hide_inaccessible_menu_items())\n\t\t\treturn true;\n\n\t\tif (sizeof($module->lappfunctions) > 0) {\n\t\t\tforeach ($module->lappfunctions as $appfunction) {\n\t\t\t\tif ($appfunction->label != '' && $this->can_access_page($appfunction->access))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (sizeof($module->rappfunctions) > 0) {\n\t\t\tforeach ($module->rappfunctions as $appfunction) {\n\t\t\t\tif ($appfunction->label != '' && $this->can_access_page($appfunction->access))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction hide_inaccessible_menu_items() {\n\t\tglobal $SysPrefs;\n\n\t\tif (!isset($SysPrefs->hide_inaccessible_menu_items) || $SysPrefs->hide_inaccessible_menu_items == 0)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\tfunction set_db_connection($id = -1) {\n\t\treturn set_global_connection($id);\n\t}\n\n\tfunction update_prefs($prefs) {\n\t\tglobal $SysPrefs;\n\n\t\tif (!$SysPrefs->allow_demo_mode)\n\t\t\tupdate_user_prefs($this->user, $prefs);\n\n\t\t$this->prefs = new user_prefs(get_user($this->user));\n\t}\n}\n\n//--------------------------------------------------------------------------\n\nfunction round2($number, $decimals=0) {\n\t$delta = ($number < 0 ? -.0000000001 : .0000000001);\n\treturn round($number+$delta, $decimals);\n}\n\n/*\n\tReturns number formatted according to user setup and using $decimals digits after dot \n\t(defualt is 0). When $decimals is set to 'max' maximum available precision is used \n\t(decimals depend on value) and trailing zeros are trimmed.\n*/\nfunction number_format2($number, $decimals=0) {\n\tglobal $SysPrefs;\n\t$tsep = $SysPrefs->thoseps[user_tho_sep()];\n\t$dsep = $SysPrefs->decseps[user_dec_sep()];\n\n\tif ($number == '')\n\t\t$number = 0;\n\tif($decimals==='max')\n\t\t$dec = 15 - floor(log10(abs($number)));\n\telse {\n\t\t$delta = ($number < 0 ? -.0000000001 : .0000000001);\n\t\t@$number += $delta;\n\t\t$dec = $decimals;\n\t}\n\n\t$num = number_format($number, intval($dec), $dsep, $tsep);\n\n\treturn $decimals === 'max' ? rtrim($num, '0') : $num;\n}\n\n/* \tprice/float comparision helper to be used in any suspicious place for zero values? \n*\tusage:\n*\tif (!floatcmp($value1, $value2)) \n*\tcompare value is 0\n*/\ndefine('FLOAT_COMP_DELTA', 0.004);\n\nfunction floatcmp($a, $b) {\n\treturn $a - $b > FLOAT_COMP_DELTA ? 1 : ($b - $a > FLOAT_COMP_DELTA ? -1 : 0);\n}\n\n/*\n*\tCurrent ui mode.\n*/\nfunction fallback_mode() {\n\treturn $_SESSION['wa_current_user']->ui_mode==0;\n}\n\nfunction price_format($number) {\n\treturn number_format2($number, user_price_dec());\n}\n\nfunction price_decimal_format($number, &$dec) {\n\t$dec = user_price_dec();\n\t$str = strval($number);\n\t$pos = strpos($str, '.');\n\tif ($pos !== false) {\n\t\t$len = strlen(substr($str, $pos + 1));\n\t\tif ($len > $dec && $len < ini_get('precision') - 3)\n\t\t\t$dec = $len;\n\t}\n\treturn number_format2($number, $dec);\n}\t\n\nfunction qty_format($number, $stock_id, &$dec) {\n\t$dec = get_qty_dec($stock_id);\n\treturn number_format2($number, $dec);\n}\n\n/* and get_qty_dec */\nfunction get_qty_dec($stock_id=null) {\n\tglobal $path_to_root;\n\tinclude_once($path_to_root.'/inventory/includes/db/items_units_db.inc');\n\tif ($stock_id != null)\n\t\t$dec = get_unit_dec($stock_id);\n\tif ($stock_id == null || $dec == -1 || $dec == null)\n\t\t$dec = user_qty_dec();\n\treturn $dec;\n}\n\n/*\n*\tMaximum precision format. Strips trailing unsignificant digits.\n*/\nfunction maxprec_format($number) {\n\treturn number_format2($number, 'max');\n}\n\nfunction exrate_format($number) {\n\treturn number_format2($number,\n\t$_SESSION['wa_current_user']->prefs->exrate_dec());\n}\n\nfunction percent_format($number) {\n\treturn number_format2($number,\n\t$_SESSION['wa_current_user']->prefs->percent_dec());\n}\n\nfunction user_numeric($input) {\n\tglobal $SysPrefs;\n\n\t$num = trim($input);\n\t$sep = $SysPrefs->thoseps[user_tho_sep()];\n\tif ($sep!='')\n\t\t$num = str_replace( $sep, '', $num);\n\n\t$sep = $SysPrefs->decseps[user_dec_sep()];\n\tif ($sep!='.')\n\t\t$num = str_replace( $sep, '.', $num);\n\n\tif (!is_numeric($num))\n\t\treturn false;\n\n\t$num = (float)$num;\n\n\tif ($num == (int)$num)\n\t\treturn (int)$num;\n\t\n\treturn $num;\n}\n\nfunction user_company() {\n\tglobal $def_coy;\n\treturn isset($_SESSION['wa_current_user']) ? $_SESSION['wa_current_user']->company : $def_coy;\n}\n\nfunction user_pos() {\n\treturn $_SESSION['wa_current_user']->pos;\n}\n\nfunction user_language() {\n\treturn $_SESSION['wa_current_user']->prefs->language();\n}\n\nfunction user_qty_dec() {\n\treturn $_SESSION['wa_current_user']->prefs->qty_dec();\n}\n\nfunction user_price_dec() {\n\tglobal $SysPrefs;\n\treturn isset($_SESSION['wa_current_user']) ? $_SESSION['wa_current_user']->prefs->price_dec() : 2;\n}\n\nfunction user_exrate_dec() {\n\tglobal $SysPrefs;\n\treturn isset($_SESSION['wa_current_user']) ? $_SESSION['wa_current_user']->prefs->exrate_dec() : 4;\n}\n\nfunction user_percent_dec() {\n\tglobal $SysPrefs;\n\treturn isset($_SESSION['wa_current_user']) ? $_SESSION['wa_current_user']->prefs->percent_dec() : 1;\n}\n\nfunction user_show_gl_info() {\n\treturn $_SESSION['wa_current_user']->prefs->show_gl_info();\n}\n\nfunction user_show_codes() {\n\treturn $_SESSION['wa_current_user']->prefs->show_codes();\n}\n\nfunction user_date_format() {\n\tglobal $SysPrefs;\n\treturn isset($_SESSION['wa_current_user']) ? $_SESSION['wa_current_user']->prefs->date_format() : $SysPrefs->dflt_date_fmt;\n}\n\nfunction user_date_display() {\n\t$fmt = 'm/d/Y';\n\tif (isset($_SESSION['wa_current_user']))\n\t\t$fmt = $_SESSION['wa_current_user']->prefs->date_display();\n\telse {\n\t\t$sep = user_date_sep();\n\t\t$user_date_fmt = user_date_format();\n\t\tswitch ($user_date_fmt) {\n\t\t\tcase 0:\n\t\t\t\t$fmt = 'm'.$sep.'d'.$sep.'Y'; break;\n\t\t\tcase 1:\n\t\t\t\t$fmt = 'd'.$sep.'m'.$sep.'Y'; break;\n\t\t\tcase 2:\n\t\t\t\t$fmt = 'Y'.$sep.'m'.$sep.'d'; break;\n\t\t\tcase 3:\n\t\t\t\t$fmt = 'M'.$sep.'j'.$sep.'Y'; break;\n\t\t\tcase 4:\n\t\t\t\t$fmt = 'j'.$sep.'M'.$sep.'Y'; break;\n\t\t\tdefault:\n\t\t\t\t$fmt = 'Y'.$sep.'M'.$sep.'j';\n\t\t}\n\t}\n}\n\nfunction user_date_sep() {\n\tglobal $SysPrefs;\n\treturn isset($_SESSION['wa_current_user']->prefs->date_sep) ? $_SESSION['wa_current_user']->prefs->date_sep() : $SysPrefs->dflt_date_sep;\n}\n\nfunction user_tho_sep() {\n\treturn isset($_SESSION['wa_current_user']) ? $_SESSION['wa_current_user']->prefs->tho_sep() : 0;\n}\n\nfunction user_dec_sep() {\n\treturn isset($_SESSION['wa_current_user']) ? $_SESSION['wa_current_user']->prefs->dec_sep() : 0;\n}\n\nfunction user_theme() {\n\treturn isset($_SESSION['wa_current_user']) ? $_SESSION['wa_current_user']->prefs->get_theme() : 'default';\n}\n\nfunction user_pagesize() {\n\treturn $_SESSION['wa_current_user']->prefs->get_pagesize();\n}\n\nfunction user_hints() {\n\treturn $_SESSION['wa_current_user']->prefs->show_hints();\n}\n\nfunction user_print_profile() {\n\treturn $_SESSION['wa_current_user']->prefs->print_profile();\n}\n\nfunction user_rep_popup() {\n\treturn $_SESSION['wa_current_user']->prefs->rep_popup();\n}\n\nfunction user_query_size() {\n\treturn $_SESSION['wa_current_user']->prefs->query_size();\n}\n\nfunction user_graphic_links() {\n\treturn $_SESSION['wa_current_user']->prefs->graphic_links();\n}\n\nfunction sticky_doc_date() {\n\treturn $_SESSION['wa_current_user']->prefs->sticky_date();\n}\n\nfunction user_startup_tab() {\n\treturn $_SESSION['wa_current_user']->prefs->start_up_tab();\n}\n\nfunction user_transaction_days() {\n\treturn $_SESSION['wa_current_user']->prefs->transaction_days();\n}\n\nfunction user_save_report_selections() {\n\treturn $_SESSION['wa_current_user']->prefs->save_report_selections();\n}\n\nfunction user_use_date_picker() {\n\treturn $_SESSION['wa_current_user']->prefs->use_date_picker();\n}\n\nfunction user_def_print_destination() {\n\treturn $_SESSION['wa_current_user']->prefs->def_print_destination();\n}\n\nfunction user_def_print_orientation() {\n\treturn $_SESSION['wa_current_user']->prefs->def_print_orientation();\n}\n\nfunction user_check_access($sec_area) {\n\treturn $_SESSION['wa_current_user']->can_access($sec_area);\n}\n\nfunction set_user_prefs($prefs) {\n\t$_SESSION['wa_current_user']->update_prefs($prefs);\n}\n\nfunction add_user_js_data() {\n\tglobal $path_to_root, $SysPrefs;\n\n\t$ts = $SysPrefs->thoseps[user_tho_sep()];\n\t$ds = $SysPrefs->decseps[user_dec_sep()];\n\n\t$js = \"\\n\"\n\t  . \"var user = {\\n\"\n\t  . \"theme: '\". $path_to_root . '/themes/'. user_theme().'/'.\"',\\n\"\n\t  . \"loadtxt: '\"._('Requesting data...').\"',\\n\"\n\t  . \"date: '\".Today().\"',\\n\"\t// server date\n\t  . \"datesys: \".$SysPrefs->date_system.\",\\n\"\n\t  . \"datefmt: \".user_date_format().\",\\n\"\n\t  . \"datesep: '\".$SysPrefs->dateseps[user_date_sep()].\"',\\n\"\n\t  . \"ts: '$ts',\\n\"\n\t  . \"ds: '$ds',\\n\"\n\t  . \"pdec : \" . user_price_dec() . \"}\\n\";\n\n\t  add_js_source($js);\n}\n\nfunction user_js_cache($id=null) {\n\tglobal $path_to_root;\n\n\tif (!$id)\n\t\t$id = @$_SESSION['wa_current_user']->user;\n\tif (!$id)\n\t\t$id = 0; // before login\n\treturn $path_to_root.'/company/'.user_company().'/js_cache/'.$id;\n}\n\nfunction session_timeout() {\n\t$tout = @get_company_pref('login_tout'); // mask warning for db ver. 2.2\n\treturn $tout ? $tout : ini_get('session.gc_maxlifetime');\n}\n\n/*\t\n*\tInserts $elements into $array at position $index.\n*\t$elements is list of any objects\n*/\nfunction array_insert(&$array, $index, $elements) {\n\tif (!is_array($elements)) $elements = array($elements);\n\n\t$head  = array_splice($array, 0, $index);\n\t$array = array_merge($head, $elements, $array);\n}\n\nfunction array_remove(&$array, $index, $len=1) {\n\tarray_splice($array, $index, $len);\n}\n\nfunction array_substitute(&$array, $index, $len, $elements) {\n\tarray_splice($array, $index, $len);\n\tarray_insert($array, $index, $elements);\n}\n\nfunction array_append(&$array, $elements) {\n\tforeach($elements as $key => $el) {\n\t\tif(is_int($key))\n\t\t\t$array[] = $el;\n\t\telse\n\t\t\t$array[$key] = $el;\n\t}\n}\n\n/*\n*\tSearch $needle in $haystack or in $haystack[][$valuekey]\n*\treturns $needle found or null.\n*/\nfunction array_search_value($needle, $haystack, $valuekey=null) {\n\tif (is_array($haystack)) {\n\t\tforeach($haystack as $key => $value) {\n\t\t\t$val = isset($valuekey) ? @$value[$valuekey] : $value;\n\t\t\tif ($needle == $val)\n\t\t\t\treturn $value;\n\t\t}\n\t}\n\treturn null;\n}\n\n/*\n*\tSearch $needle in $haystack or in $haystack[][$valuekey]\n*\treturns array of keys of $haystack elements found\n*/\nfunction array_search_keys($needle, $haystack, $valuekey=null) {\n\t$keys = array();\n\tif (is_array($haystack)) {\n\t\tforeach($haystack as $key => $value) {\n\t\t\t$val = isset($valuekey) ? @$value[$valuekey] : $value;\n\t\t\tif ($needle == $val)\n\t\t\t\t$keys[] = $key;\n\t\t}\n\t}\t\n\treturn $keys;\n}\n\n/*\n*\tFind first (single) $needle in $haystack or in $haystack[][$valuekey]\n*\treturns $haystack element found or null\n*/\nfunction array_search_key($needle, $haystack, $valuekey=null) {\n\t$keys = array_search_keys($needle, $haystack, $valuekey);\n\treturn @$keys[0];\n}\n\n// Recalculate report columns if orientation is landscape.\nfunction recalculate_cols(&$cols) {\n\t$factor = (user_pagesize() == 'A4' ? 1.4 : 1.3);\n\tforeach($cols as $key => $col)\n\t\t$cols[$key] = intval($col * $factor); \n}\n\nfunction flush_dir($path, $wipe = false) {\n\tif (!file_exists($path))\n\t\treturn;\n\t$dir = @opendir($path);\n\tif(!$dir)\n\t\treturn;\n\n\twhile(false !== ($fname = readdir($dir))) {\n\t\tif($fname=='.' || $fname=='..' || $fname=='CVS' || (!$wipe && $fname=='index.php')) continue;\n\t\tif(is_dir($path.'/'.$fname)) {\n\t\t\tflush_dir($path.'/'.$fname, $wipe);\n\t\t\tif ($wipe) @rmdir($path.'/'.$fname);\n\t\t}\n\t\telse\n\t\t\t@unlink($path.'/'.$fname);\n\t}\n}\n\n/*\n*\tReturns current path to company private folder.\n*\t(Current path can change after chdir).\n*/\nfunction company_path($comp=null) {\n\tglobal $path_to_root, $SysPrefs;\n\n\t$comp_path = $SysPrefs->comp_path;\n\n\tif (!isset($comp))\n\t\t$comp = user_company();\n\n\t// if path is relative, set current path_to_root\n\treturn ($comp_path[0] == '.' ? $path_to_root.'/'.basename($comp_path) : $comp_path).'/'.$comp;\n}\n\nfunction is_admin_company() {\n\treturn $this->company == 0;\n}\n"], "fixing_code": ["<?php\n/**********************************************************************\n\tCopyright (C) FrontAccounting, LLC.\n\tReleased under the terms of the GNU General Public License, GPL, \n\tas published by the Free Software Foundation, either version 3 \n\tof the License, or (at your option) any later version.\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \n\tSee the License here <http://www.gnu.org/licenses/gpl-3.0.html>.\n***********************************************************************/\n$page_security = 'SA_CHGPASSWD';\n$path_to_root = '..';\ninclude_once($path_to_root.'/includes/session.inc');\n\npage(_($help_context = 'Change password'));\n\ninclude_once($path_to_root.'/includes/date_functions.inc');\ninclude_once($path_to_root.'/includes/ui.inc');\n\ninclude_once($path_to_root.'/admin/db/users_db.inc');\n\nfunction can_process() {\n\n\t$Auth_Result = hook_authenticate($_SESSION['wa_current_user']->username, $_POST['cur_password']);\n\n\tif (!isset($Auth_Result))\t// if not used external login: standard method\n\t\t$Auth_Result = authenticate_user($_SESSION['wa_current_user']->username, $_POST['cur_password']);\n\n\tif (!$Auth_Result) {\n\t\tdisplay_error( _('Invalid password entered.'));\n\t\tset_focus('cur_password');\n\t\treturn false;\n\t}\n\tif (strlen($_POST['password']) < 4) {\n\t\tdisplay_error( _('The password entered must be at least 4 characters long.'));\n\t\tset_focus('password');\n\t\treturn false;\n\t}\n\tif (strstr($_POST['password'], $_SESSION['wa_current_user']->username) != false) {\n\t\tdisplay_error( _('The password cannot contain the user login.'));\n\t\tset_focus('password');\n\t\treturn false;\n\t}\n\tif ($_POST['password'] != $_POST['passwordConfirm']) {\n\t\tdisplay_error( _('The passwords entered are not the same.'));\n\t\tset_focus('password');\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nif (isset($_POST['UPDATE_ITEM']) && check_csrf_token()) {\n\n\tif (can_process()) {\n\t\tif ($SysPrefs->allow_demo_mode)\n\t\t\tdisplay_warning(_('Password cannot be changed in demo mode.'));\n\t\telse {\n\t\t\tupdate_user_password($_SESSION['wa_current_user']->user, $_SESSION['wa_current_user']->username, password_hash($_POST['password'], PASSWORD_DEFAULT));\n\t\t\tdisplay_notification(_('Your password has been updated.'));\n\t\t}\n\t\t$Ajax->activate('_page_body');\n\t}\n}\n\nstart_form();\n\nstart_table(TABLESTYLE);\n\n$myrow = get_user($_SESSION['wa_current_user']->user);\n\nlabel_row(_('User login:'), $myrow['user_id']);\n\n$_POST['cur_password'] = '';\n$_POST['password'] = '';\n$_POST['passwordConfirm'] = '';\n\npassword_row(_('Current Password:'), 'cur_password', $_POST['cur_password']);\npassword_row(_('New Password:'), 'password', $_POST['password']);\npassword_row(_('Repeat New Password:'), 'passwordConfirm', $_POST['passwordConfirm']);\n\ntable_section_title(_('Enter your new password in the fields.'));\n\nend_table(1);\n\nsubmit_center( 'UPDATE_ITEM', _('Change password'), true, '',  'default');\nend_form();\nend_page();\n", "<?php\n/**********************************************************************\n\tCopyright (C) FrontAccounting, LLC.\n\tReleased under the terms of the GNU General Public License, GPL, \n\tas published by the Free Software Foundation, either version 3 \n\tof the License, or (at your option) any later version.\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \n\tSee the License here <http://www.gnu.org/licenses/gpl-3.0.html>.\n***********************************************************************/\n$page_security = 'SA_CREATECOMPANY';\n$path_to_root = '..';\ninclude_once($path_to_root.'/includes/session.inc');\n\ninclude_once($path_to_root.'/includes/date_functions.inc');\ninclude_once($path_to_root.'/admin/db/company_db.inc');\ninclude_once($path_to_root.'/admin/db/maintenance_db.inc');\ninclude_once($path_to_root.'/includes/ui.inc');\n\npage(_($help_context = 'Create/Update Company'));\n\n$comp_subdirs = array('images', 'pdf_files', 'backup', 'js_cache', 'reporting', 'attachments');\n\nsimple_page_mode(true);\n/*\n\tFIXME: tb_pref_counter should track prefix per database.\n*/\n//---------------------------------------------------------------------------------------------\nfunction check_data($selected_id) {\n\tglobal $db_connections, $tb_pref_counter;\n\n\tif ($selected_id != -1) {\n\t\tif ($_POST['name'] == '') {\n\t\t\tdisplay_error(_('Database settings are not specified.'));\n\t\t\treturn false;\n\t\t}\n\t}\n\telse {\n\t\tif (!get_post('name') || !get_post('host') || !get_post('dbuser') || !get_post('dbname')) {\n\t\t\tdisplay_error(_('Database settings are not specified.'));\n\t\t\treturn false;\n\t\t}\n\t\tif ($_POST['port'] != '' && !is_numeric($_POST['port'])) {\n\t\t\tdisplay_error(_('Database port has to be numeric or empty.'));\n\t\t\treturn false;\n\t\t}\n\t\n\t\tforeach($db_connections as $id=>$con) {\n\t\t\tif($id != $selected_id && $_POST['host'] == $con['host'] && $_POST['dbname'] == $con['dbname']) {\n\t\t\t\tif ($_POST['tbpref'] == $con['tbpref']) {\n\t\t\t\t\tdisplay_error(_('This database settings are already used by another company.'));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (($_POST['tbpref'] == 0) ^ ($con['tbpref'] == '')) {\n\t\t\t\t\tdisplay_error(_('You cannot have table set without prefix together with prefixed sets in the same database.'));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n//---------------------------------------------------------------------------------------------\n\nfunction remove_connection($id) {\n\tglobal $db_connections;\n\n\t$err = db_drop_db($db_connections[$id]);\n\n\tunset($db_connections[$id]);\n\t$conn = array_values($db_connections);\n\t$db_connections = $conn;\n\treturn $err;\n}\n\n//---------------------------------------------------------------------------------------------\n\nfunction handle_submit($selected_id) {\n\tglobal $db_connections, $def_coy, $tb_pref_counter, $db, $comp_subdirs, $path_to_root, $Mode;\n\n\t$error = false;\n\n\tif ($selected_id==-1)\n\t\t$selected_id = count($db_connections);\n\n\t$new = !isset($db_connections[$selected_id]);\n\n\tif (check_value('def'))\n\t\t$def_coy = $selected_id;\n\n\t$db_connections[$selected_id]['name'] = $_POST['name'];\n\tif ($new) {\n\t\t$db_connections[$selected_id]['host'] = $_POST['host'];\n\t\t$db_connections[$selected_id]['port'] = $_POST['port'];\n\t\t$db_connections[$selected_id]['dbuser'] = $_POST['dbuser'];\n\t\t$db_connections[$selected_id]['dbpassword'] = html_entity_decode($_POST['dbpassword'], ENT_QUOTES, $_SESSION['language']->encoding=='iso-8859-2' ? 'ISO-8859-1' : $_SESSION['language']->encoding);\n\t\t$db_connections[$selected_id]['dbname'] = $_POST['dbname'];\n\t\t$db_connections[$selected_id]['collation'] = $_POST['collation'];\n\t\tif (is_numeric($_POST['tbpref']))\n\t\t\t$db_connections[$selected_id]['tbpref'] = $_POST['tbpref'] == 1 ? $tb_pref_counter.'_' : '';\n\t\telse if ($_POST['tbpref'] != '')\n\t\t\t$db_connections[$selected_id]['tbpref'] = $_POST['tbpref'];\n\t\telse\n\t\t\t$db_connections[$selected_id]['tbpref'] = '';\n\n\t\t$conn = $db_connections[$selected_id];\n\t\tif (($db = db_create_db($conn)) === false) {\n\t\t\tdisplay_error(_('Error creating Database: ').$conn['dbname']._(', Please create it manually'));\n\t\t\t$error = true;\n\t\t}\n\t\telse {\n\t\t\tif (strncmp(db_get_version(), '5.6', 3) >= 0) \n\t\t\t\tdb_query(\"SET sql_mode = ''\");\n\t\t\tif (!db_import($path_to_root.'/sql/'.get_post('coa'), $conn, $selected_id)) {\n\t\t\t\tdisplay_error(_('Cannot create new company due to bugs in sql file.'));\n\t\t\t\t$error = true;\n\t\t\t} \n\t\t\telse {\n\t\t\t\tif (!isset($_POST['admpassword']) || $_POST['admpassword'] == '')\n\t\t\t\t\t$_POST['admpassword'] = 'password';\n\t\t\t\tupdate_admin_password($conn, password_hash($_POST['admpassword']), PASSWORD_DEFAULT);\n\t\t\t}\n\t\t}\n\t\tif ($error) {\n\t\t\tremove_connection($selected_id);\n\t\t\treturn false;\n\t\t}\n\t}\n\t$error = write_config_db($new);\n\n\tif ($error == -1)\n\t\tdisplay_error(_('Cannot open the configuration file - ').$path_to_root.'/config_db.php');\n\telse if ($error == -2)\n\t\tdisplay_error(_('Cannot write to the configuration file - ').$path_to_root.'/config_db.php');\n\telse if ($error == -3)\n\t\tdisplay_error(_('The configuration file ').$path_to_root.'/config_db.php'._(' is not writable. Change its permissions so it is, then re-run the operation.'));\n\tif ($error != 0)\n\t\treturn false;\n\n\tif ($new) {\n\t\tcreate_comp_dirs(company_path($selected_id), $comp_subdirs);\n\t\t$exts = get_company_extensions();\n\t\twrite_extensions($exts, $selected_id);\n\t}\n\tdisplay_notification($new ? _('New company has been created.') : _('Company has been updated.'));\n\n\t$Mode = 'RESET';\n\treturn true;\n}\n\n//---------------------------------------------------------------------------------------------\n\nfunction handle_delete($id) {\n\tglobal $Ajax, $def_coy, $db_connections, $comp_subdirs, $path_to_root, $Mode;\n\n\t// First make sure all company directories from the one under removal are writable. \n\t// Without this after operation we end up with changed per-company owners!\n\tfor($i = $id; $i < count($db_connections); $i++) {\n\t\t\t$comp_path = company_path($i);\n\t\tif (!is_dir($comp_path) || !is_writable($comp_path)) {\n\t\t\tdisplay_error(_('Broken company subdirectories system. You have to remove this company manually.'));\n\t\t\treturn;\n\t\t}\n\t}\n\t// make sure config file is writable\n\tif (!is_writeable($path_to_root . '/config_db.php')) {\n\t\tdisplay_error(_('The configuration file ').$path_to_root.'/config_db.php'._(' is not writable. Change its permissions so it is, then re-run the operation.'));\n\t\treturn;\n\t}\n\t// rename directory to temporary name to ensure all\n\t// other subdirectories will have right owners even after\n\t// unsuccessfull removal.\n\t$cdir = company_path($id);\n\t$tmpname  = company_path('/old_'.$id);\n\tif (!@rename($cdir, $tmpname)) {\n\t\tdisplay_error(_('Cannot rename subdirectory to temporary name.'));\n\t\treturn;\n\t}\n\t// 'shift' company directories names\n\tfor ($i = $id+1; $i < count($db_connections); $i++) {\n\t\tif (!rename(company_path($i), company_path($i-1))) {\n\t\t\tdisplay_error(_('Cannot rename company subdirectory'));\n\t\t\treturn;\n\t\t}\n\t}\n\t$err = remove_connection($id);\n\tif ($err == 0)\n\t\tdisplay_error(_('Error removing Database: ').$id._(', please remove it manually'));\n\n\tif ($def_coy == $id)\n\t\t$def_coy = 0;\n\n\t$error = write_config_db();\n\tif ($error == -1)\n\t\tdisplay_error(_('Cannot open the configuration file - ').$path_to_root.'/config_db.php');\n\telse if ($error == -2)\n\t\tdisplay_error(_('Cannot write to the configuration file - ').$path_to_root.'/config_db.php');\n\telse if ($error == -3)\n\t\tdisplay_error(_('The configuration file ').$path_to_root.'/config_db.php'._(' is not writable. Change its permissions so it is, then re-run the operation.'));\n\tif ($error != 0) {\n\t\t@rename($tmpname, $cdir);\n\t\treturn;\n\t}\n\t// finally remove renamed company directory\n\t@flush_dir($tmpname, true);\n\tif (!@rmdir($tmpname)) {\n\t\tdisplay_error(_('Cannot remove temporary renamed company data directory ').$tmpname);\n\t\treturn;\n\t}\n\tdisplay_notification(_('Selected company has been deleted'));\n\t$Ajax->activate('_page_body');\n\t$Mode = 'RESET';\n}\n\n//---------------------------------------------------------------------------------------------\n\nfunction display_companies() {\n\tglobal $def_coy, $db_connections, $supported_collations;\n\n\t$coyno = user_company();\n\n\tstart_table(TABLESTYLE);\n\n\t$th = array(_('Company'), _('Database Host'), _('Database Port'), _('Database User'), _('Database Name'), _('Table Pref'), _('Charset'), _('Default'), '', '');\n\ttable_header($th);\n\n\t$k=0;\n\t$conn = $db_connections;\n\t$n = count($conn);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i == $coyno)\n\t\t\tstart_row(\"class='stockmankobg'\");\n\t\telse\n\t\t\talt_table_row_color($k);\n\n\t\tlabel_cell($conn[$i]['name']);\n\t\tlabel_cell($conn[$i]['host']);\n\t\tlabel_cell(isset($conn[$i]['port']) ? $conn[$i]['port'] : '');\n\t\tlabel_cell($conn[$i]['dbuser']);\n\t\tlabel_cell($conn[$i]['dbname']);\n\t\tlabel_cell($conn[$i]['tbpref']);\n\t\tlabel_cell(isset($conn[$i]['collation']) ? $supported_collations[$conn[$i]['collation']] : '');\n\t\tlabel_cell($i == $def_coy ? _('Yes') : _('No'));\n\t\tedit_button_cell('Edit'.$i, _('Edit'));\n\t\tif ($i != $coyno) {\n\t\t\tdelete_button_cell('Delete'.$i, _('Delete'));\n\t\t\tsubmit_js_confirm('Delete'.$i, sprintf(_(\"You are about to remove company \\'%s\\'.\\nDo you want to continue ?\"), $conn[$i]['name']));\n\t\t}\n\t\telse\n\t\t\tlabel_cell('');\n\t\tend_row();\n\t}\n\n\tend_table();\n\tdisplay_note(_('The marked company is the current company which cannot be deleted.'), 0, 0, \"class='currentfg'\");\n\tdisplay_note(_(\"If no Admin Password is entered, the new Admin Password will be '<b>password</b>' by default \"));\n\tdisplay_note(_('Set Only Port value if you cannot use the default port 3306.'));\n}\n\n//---------------------------------------------------------------------------------------------\n\nfunction display_company_edit($selected_id) {\n\tglobal $def_coy, $db_connections, $tb_pref_counter;\n\n\tstart_table(TABLESTYLE2);\n\n\tif ($selected_id != -1) {\n\t\t$conn = $db_connections[$selected_id];\n\t\t$_POST['name'] = $conn['name'];\n\t\t$_POST['host']  = $conn['host'];\n\t\t$_POST['port'] = isset($conn['port']) ? $conn['port'] : '';\n\t\t$_POST['dbuser']  = $conn['dbuser'];\n\t\t$_POST['dbpassword']  = $conn['dbpassword'];\n\t\t$_POST['dbname']  = $conn['dbname'];\n\t\t$_POST['tbpref']  = $conn['tbpref'];\n\t\t$_POST['def'] = $selected_id == $def_coy;\n\t\t$_POST['dbcreate']  = false;\n\t\t$_POST['collation']  = isset($conn['collation']) ? $conn['collation'] : '';\n\t\thidden('tbpref', $_POST['tbpref']);\n\t\thidden('dbpassword', $_POST['dbpassword']);\n\t}\n\telse {\n\t\t$_POST['tbpref'] = $tb_pref_counter.'_';\n\n\t\t// Use current settings as default\n\t\t$conn = $db_connections[user_company()];\n\t\t$_POST['name'] = '';\n\t\t$_POST['host']  = $conn['host'];\n\t\t$_POST['port']  = isset($conn['port']) ? $conn['port'] : '';\n\t\t$_POST['dbuser']  = $conn['dbuser'];\n\t\t$_POST['dbpassword']  = $conn['dbpassword'];\n\t\t$_POST['dbname']  = $conn['dbname'];\n\t\t$_POST['collation']  = isset($conn['collation']) ? $conn['collation'] : '';\n\t\tunset($_POST['def']);\n\t}\n\n\ttext_row_ex(_('Company'), 'name', 50);\n\n\tif ($selected_id == -1) {\n\t\ttext_row_ex(_('Host'), 'host', 30, 60);\n\t\ttext_row_ex(_('Port'), 'port', 30, 60);\n\t\ttext_row_ex(_('Database User'), 'dbuser', 30);\n\t\ttext_row_ex(_('Database Password'), 'dbpassword', 30);\n\t\ttext_row_ex(_('Database Name'), 'dbname', 30);\n\t\tcollations_list_row(_('Database Collation:'), 'collation');\n\t\tyesno_list_row(_('Table Pref'), 'tbpref', 1, $_POST['tbpref'], _('None'), false);\n\t\tcheck_row(_('Default Company'), 'def');\n\t\tcoa_list_row(_('Database Script'), 'coa');\n\t\ttext_row_ex(_('New script Admin Password'), 'admpassword', 20);\n\t}\n\telse {\n\t\tlabel_row(_('Host'), $_POST['host']);\n\t\tlabel_row(_('Port'), $_POST['port']);\n\t\tlabel_row(_('Database User'), $_POST['dbuser']);\n\t\tlabel_row(_('Database Name'), $_POST['dbname']);\n\t\tcollations_list_row(_('Database Collation:'), 'collation');\n\t\tlabel_row(_('Table Pref'), $_POST['tbpref']);\n\t\tif (!get_post('def'))\n\t\t\tcheck_row(_('Default Company'), 'def');\n\t\telse\n\t\t\tlabel_row(_('Default Company'), _('Yes'));\n\t}\n\n\tend_table(1);\n\thidden('selected_id', $selected_id);\n}\n\n//---------------------------------------------------------------------------------------------\n\nif (($Mode=='ADD_ITEM' || $Mode=='UPDATE_ITEM') && check_data($selected_id))\n\thandle_submit($selected_id);\n\nif ($Mode == 'Delete')\n\thandle_delete($selected_id);\n\nif ($Mode == 'RESET') {\n\t$selected_id = -1;\n\tunset($_POST);\n}\n\n//---------------------------------------------------------------------------------------------\n\nstart_form();\n\ndisplay_companies();\ndisplay_company_edit($selected_id);\nsubmit_add_or_update_center($selected_id == -1, '', 'upgrade');\n\nend_form();\n\nend_page();\n", "<?php\n/**********************************************************************\n\tCopyright (C) FrontAccounting, LLC.\n\tReleased under the terms of the GNU General Public License, GPL, \n\tas published by the Free Software Foundation, either version 3 \n\tof the License, or (at your option) any later version.\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \n\tSee the License here <http://www.gnu.org/licenses/gpl-3.0.html>.\n***********************************************************************/\n\nfunction add_user($user_id, $real_name, $password, $phone, $email, $role_id, $language, $profile, $rep_popup, $pos) {\n\t$sql = \"INSERT INTO \".TB_PREF.\"users (user_id, real_name, password\"\n\t\t.\", phone, email, role_id, language, pos, print_profile, rep_popup)\n\t\tVALUES (\".db_escape($user_id).\", \n\t\t\".db_escape($real_name).\", \".db_escape($password).\",\".db_escape($phone)\n\t\t.\",\".db_escape($email).\", \".db_escape($role_id).\", \".db_escape($language)\n\t\t.\", \".db_escape($pos).\",\".db_escape($profile).\",\".db_escape($rep_popup)\n\t\t.\" )\";\n\n\treturn db_query($sql, 'could not add user for '.$user_id);\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction update_user_password($id, $user_id, $password) {\n\t$sql = \"UPDATE \".TB_PREF.\"users SET password=\".db_escape($password).\",user_id = \".db_escape($user_id).\" WHERE id=\".db_escape($id);\n\n\treturn db_query($sql, 'could not update user password for '.$user_id);\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction update_user($id, $user_id, $real_name, $phone, $email, $role_id, $language, $profile, $rep_popup, $pos) {\n\t$sql = \"UPDATE \".TB_PREF.\"users SET real_name=\".db_escape($real_name).\n\t\", phone=\".db_escape($phone).\",\n\t\temail=\".db_escape($email).\",\n\t\trole_id=\".db_escape($role_id).\",\n\t\tlanguage=\".db_escape($language).\",\n\t\tprint_profile=\".db_escape($profile).\",\n\t\trep_popup=\".db_escape($rep_popup).\",\n\t\tpos=\".db_escape($pos).\",\n\t\tuser_id = \" . db_escape($user_id)\n\t\t. \" WHERE id=\" . db_escape($id);\n\treturn db_query($sql, 'could not update user for '.$user_id);\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction update_user_prefs($id, $prefs) {\n\t$sql = \"UPDATE \".TB_PREF.\"users SET \";\n\tforeach($prefs as $name => $value) {\n\t\t$prefs[$name] = $name.'='.db_escape($value);\n\t}\n\t$sql .= implode(',', $prefs).\" WHERE id=\".db_escape($id);\n\n\treturn db_query($sql, 'could not update user display prefs for '.$id);\n}\n\n//-----------------------------------------------------------------------------------------------\n\n\nfunction get_users($all=false) {\n\t$sql = \"SELECT u.*, r.role FROM \".TB_PREF.\"users u, \".TB_PREF.\"security_roles r\n\t\tWHERE u.role_id=r.id\";\n\tif (!$all) $sql .= \" AND !u.inactive\";\n\t\n\treturn db_query($sql, 'could not get users');\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction get_user($id) {\n\t$sql = \"SELECT * FROM \".TB_PREF.\"users WHERE id=\".db_escape($id);\n\n\t$result = db_query($sql, 'could not get user '.$id);\n\n\treturn db_fetch($result);\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction get_user_by_login($user_id) {\n\t$sql = \"SELECT * FROM \".TB_PREF.\"users WHERE user_id=\".db_escape($user_id);\n\n\t$result = db_query($sql, 'could not get user '.$user_id);\n\n\treturn db_fetch($result);\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction get_user_by_email($email) {\n\t$sql = \"SELECT * FROM \".TB_PREF.\"users WHERE email=\".db_escape($email);\n\n\t$result = db_query($sql, 'could not get user for email '.$email);\n\n\tif (db_num_rows($result) != 1)\n\t\treturn false;\n\n\treturn db_fetch($result);\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction delete_user($id) {\n\t$sql = \"DELETE FROM \".TB_PREF.\"users WHERE id=\".db_escape($id);\n\n\tdb_query($sql, 'could not delete user '.$id);\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction authenticate_user($user_id, $password) {\n\n\t$sql1 = \"SELECT password FROM \".TB_PREF.\"users WHERE user_id = \".db_escape($user_id);\n\n\t$result = db_query($sql1, 'could not get user login for '.$user_id);\n\n\tif(db_num_rows($result) == 0)\n\t\treturn false;\n\n\t$hash = db_fetch($result)[0];\n\n\t// The user's password hash may have been created long ago by md5 password algorithm on the old NotrinosERP versions\n\tif(password_verify($password, $hash) || $hash == md5($password)) {\n\t\tif(password_needs_rehash($hash, PASSWORD_DEFAULT) === true) {\n\t\t\t$new_hash = password_hash($password, PASSWORD_DEFAULT);\n\t\t\t$sql2 = \"UPDATE \".TB_PREF.\"users SET password = \".db_escape($new_hash).\" WHERE user_id = \".db_escape($user_id);\n\t\t\tdb_query($sql2, 'could not update password hash for '.$user_id);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction update_user_visitdate($user_id) {\n\t$sql = \"UPDATE \".TB_PREF.\"users SET last_visit_date='\". date(\"Y-m-d H:i:s\") .\"'\n\t\tWHERE user_id=\".db_escape($user_id);\n\n\tdb_query($sql, 'could not update last visit date for user '.$user_id);\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction check_user_activity($id)  {\n\t$sql = \"SELECT COUNT(*) FROM \".TB_PREF.\"audit_trail WHERE audit_trail.user=\"\n\t\t. db_escape($id);\n\t$result = db_query($sql, 'Cannot check user activity');\n\t$ret = db_fetch($result);\n\n\treturn $ret[0];\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction show_users_online() {\n\tglobal $db, $GetText, $SysPrefs;\n\n\tif (!isset($SysPrefs->show_users_online) || $SysPrefs->show_users_online == 0 || !defined('TB_PREF') || !isset($GetText) || !isset($db))\n\t\treturn '';\n\t$result = db_query(\"SHOW TABLES LIKE '\".TB_PREF.\"useronline'\");\t\n\tif (db_num_rows($result) == 1) {\n\t\t$timeoutseconds = 120;\n\n\t\t$timestamp=time();\n\t\t$timeout=$timestamp-$timeoutseconds;\n\t\t/*\n\t\tThis will find out if user is from behind proxy server. \n\t\tIn that case, the script would count them all as 1 user.\n\t\tThis function tryes to get real IP address.\n\t\t*/\n\t\tif (isset($_SERVER['HTTP_CLIENT_IP']))\n\t\t\t$ip = $_SERVER['HTTP_CLIENT_IP'];\n\t\telseif (isset($_SERVER['HTTP_X_FORWARDED_FOR']))\n\t\t\t$ip = $_SERVER['HTTP_X_FORWARDED_FOR'];\n\t\telseif (isset($_SERVER['HTTP_X_FORWARDED']))\n\t\t\t$ip = $_SERVER['HTTP_X_FORWARDED'];\n\t\telseif (isset($_SERVER['HTTP_FORWARDED_FOR']))\n\t\t\t$ip = $_SERVER['HTTP_FORWARDED_FOR'];\n\t\telseif (isset($_SERVER['HTTP_FORWARDED']))\n\t\t\t$ip = $_SERVER['HTTP_FORWARDED'];\n\t\telse\n\t\t\t$ip = $_SERVER['REMOTE_ADDR'];\n\n\t\t// Add user to database\n\t\tdb_query(\"INSERT INTO \".TB_PREF.\"useronline (timestamp, ip, file) VALUES ('\". $timestamp .\"',\". db_escape($ip) .\",\". db_escape($_SERVER['PHP_SELF']) .\")\");\n\t\t//Remove users that were not online within $timeoutseconds.\n\t\tdb_query(\"DELETE FROM \".TB_PREF.\"useronline WHERE timestamp<\". $timeout);\n\n\t\t// Select online users\n\t\t$result = db_query(\"SELECT DISTINCT ip FROM \".TB_PREF.\"useronline\");\n\t\t$users = db_num_rows($result);\n\t}\n\telse\n\t\t$users = 1;\n\treturn ' - '.\"$users \".($users == 1 ? _('user online') : _('users online'));\n}\n", "<?php\n/**********************************************************************\n\tCopyright (C) FrontAccounting, LLC.\n\tReleased under the terms of the GNU General Public License, GPL, \n\tas published by the Free Software Foundation, either version 3 \n\tof the License, or (at your option) any later version.\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \n\tSee the License here <http://www.gnu.org/licenses/gpl-3.0.html>.\n***********************************************************************/\n$page_security = 'SA_USERS';\n$path_to_root = '..';\ninclude_once($path_to_root.'/includes/session.inc');\n\npage(_($help_context = 'Users'));\n\ninclude_once($path_to_root.'/includes/date_functions.inc');\ninclude_once($path_to_root.'/includes/ui.inc');\n\ninclude_once($path_to_root.'/admin/db/users_db.inc');\n\nsimple_page_mode(true);\n\n//-------------------------------------------------------------------------------------------------\n\nfunction can_process($new) {\n\n\tif (strlen($_POST['user_id']) < 4) {\n\t\tdisplay_error( _('The user login entered must be at least 4 characters long.'));\n\t\tset_focus('user_id');\n\t\treturn false;\n\t}\n\tif (!$new && ($_POST['password'] != '')) {\n\t\tif (strlen($_POST['password']) < 4) {\n\t\t\tdisplay_error( _('The password entered must be at least 4 characters long.'));\n\t\t\tset_focus('password');\n\t\t\treturn false;\n\t\t}\n\t\tif (strstr($_POST['password'], $_POST['user_id']) != false) {\n\t\t\tdisplay_error( _('The password cannot contain the user login.'));\n\t\t\tset_focus('password');\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n//-------------------------------------------------------------------------------------------------\n\nif (($Mode=='ADD_ITEM' || $Mode=='UPDATE_ITEM') && check_csrf_token()) {\n\n\tif (can_process($Mode == 'ADD_ITEM')) {\n\t\tif ($selected_id != -1) {\n\t\t\tupdate_user_prefs($selected_id, get_post(array('user_id', 'real_name', 'phone', 'email', 'role_id', 'language', 'print_profile', 'rep_popup' => 0, 'pos')));\n\n\t\t\tif ($_POST['password'] != '')\n\t\t\t\tupdate_user_password($selected_id, $_POST['user_id'], password_hash($_POST['password'], PASSWORD_DEFAULT));\n\n\t\t\tdisplay_notification_centered(_('The selected user has been updated.'));\n\t\t} \n\t\telse {\n\t\t\tadd_user($_POST['user_id'], $_POST['real_name'], password_hash($_POST['password'], PASSWORD_DEFAULT), $_POST['phone'], $_POST['email'], $_POST['role_id'], $_POST['language'], $_POST['print_profile'], check_value('rep_popup'), $_POST['pos']);\n\t\t\t$id = db_insert_id();\n\t\t\t// use current user display preferences as start point for new user\n\t\t\t$prefs = $_SESSION['wa_current_user']->prefs->get_all();\n\t\t\t\n\t\t\tupdate_user_prefs($id, array_merge($prefs, get_post(array('print_profile', 'rep_popup' => 0, 'language'))));\n\n\t\t\tdisplay_notification_centered(_('A new user has been added.'));\n\t\t}\n\t\t$Mode = 'RESET';\n\t}\n}\n\n//-------------------------------------------------------------------------------------------------\n\nif ($Mode == 'Delete' && check_csrf_token()) {\n\t$cancel_delete = 0;\n\tif (key_in_foreign_table($selected_id, 'audit_trail', 'user')) {\n\t\t$cancel_delete = 1;\n\t\tdisplay_error(_('Cannot delete this user because entries are associated with this user.'));\n\t}\n\tif ($cancel_delete == 0) {\n\t\tdelete_user($selected_id);\n\t\tdisplay_notification_centered(_('User has been deleted.'));\n\t} //end if Delete group\n\t$Mode = 'RESET';\n}\n\n//-------------------------------------------------------------------------------------------------\n\nif ($Mode == 'RESET') {\n\t$selected_id = -1;\n\t$sav = get_post('show_inactive', null);\n\tunset($_POST);\t// clean all input fields\n\t$_POST['show_inactive'] = $sav;\n}\n\n$result = get_users(check_value('show_inactive'));\nstart_form();\nstart_table(TABLESTYLE);\n\n$th = array(_('User login'), _('Full Name'), _('Phone'), _('E-mail'), _('Last Visit'), _('Access Level'), '', '');\n\ninactive_control_column($th);\ntable_header($th);\t\n\n$k = 0; //row colour counter\n\nwhile ($myrow = db_fetch($result)) {\n\n\talt_table_row_color($k);\n\n\t$time_format = (user_date_format() == 0 ? 'h:i a' : 'H:i');\n\t$last_visit_date = sql2date($myrow['last_visit_date']).' '.date($time_format, strtotime($myrow['last_visit_date']));\n\n\t/*The security_headings array is defined in config.php */\n\t$not_me = strcasecmp($myrow['user_id'], $_SESSION['wa_current_user']->username);\n\n\tlabel_cell($myrow['user_id']);\n\tlabel_cell($myrow['real_name']);\n\tlabel_cell($myrow['phone']);\n\temail_cell($myrow['email']);\n\tlabel_cell($last_visit_date, 'nowrap');\n\tlabel_cell($myrow['role']);\n\t\n\tif ($not_me)\n\t\tinactive_control_cell($myrow['id'], $myrow['inactive'], 'users', 'id');\n\telseif (check_value('show_inactive'))\n\t\tlabel_cell('');\n\n\tedit_button_cell('Edit'.$myrow['id'], _('Edit'));\n\tif ($not_me)\n\t\tdelete_button_cell('Delete'.$myrow['id'], _('Delete'));\n\telse\n\t\tlabel_cell('');\n\tend_row();\n}\n\ninactive_control_row($th);\nend_table(1);\n\n//-------------------------------------------------------------------------------------------------\n\nstart_table(TABLESTYLE2);\n\n$_POST['email'] = '';\nif ($selected_id != -1) {\n\tif ($Mode == 'Edit') {\n\t\t//editing an existing User\n\t\t$myrow = get_user($selected_id);\n\n\t\t$_POST['id'] = $myrow['id'];\n\t\t$_POST['user_id'] = $myrow['user_id'];\n\t\t$_POST['real_name'] = $myrow['real_name'];\n\t\t$_POST['phone'] = $myrow['phone'];\n\t\t$_POST['email'] = $myrow['email'];\n\t\t$_POST['role_id'] = $myrow['role_id'];\n\t\t$_POST['language'] = $myrow['language'];\n\t\t$_POST['print_profile'] = $myrow['print_profile'];\n\t\t$_POST['rep_popup'] = $myrow['rep_popup'];\n\t\t$_POST['pos'] = $myrow['pos'];\n\t}\n\thidden('selected_id', $selected_id);\n\thidden('user_id');\n\n\tstart_row();\n\tlabel_row(_('User login:'), $_POST['user_id']);\n} \nelse { //end of if $selected_id only do the else when a new record is being entered\n\ttext_row(_('User Login:'), 'user_id',  null, 22, 20);\n\t$_POST['language'] = user_language();\n\t$_POST['print_profile'] = user_print_profile();\n\t$_POST['rep_popup'] = user_rep_popup();\n\t$_POST['pos'] = user_pos();\n}\n$_POST['password'] = '';\npassword_row(_('Password:'), 'password', $_POST['password']);\n\nif ($selected_id != -1)\n\ttable_section_title(_('Enter a new password to change, leave empty to keep current.'));\n\ntext_row_ex(_('Full Name').':', 'real_name',  50);\ntext_row_ex(_('Telephone No.:'), 'phone', 30);\nemail_row_ex(_('Email Address:'), 'email', 50);\nsecurity_roles_list_row(_('Access Level:'), 'role_id', null); \nlanguages_list_row(_('Language:'), 'language', null);\npos_list_row(_(\"User's POS\"). ':', 'pos', null);\nprint_profiles_list_row(_('Printing profile').':', 'print_profile', null, _('Browser printing support'));\ncheck_row(_('Use popup window for reports:'), 'rep_popup', $_POST['rep_popup'], false, _('Set this option to on if your browser directly supports pdf files'));\n\nend_table(1);\n\nsubmit_add_or_update_center($selected_id == -1, '', 'both');\n\nend_form();\nend_page();", "<?php\n/**********************************************************************\n\tCopyright (C) FrontAccounting, LLC.\n\tReleased under the terms of the GNU General Public License, GPL, \n\tas published by the Free Software Foundation, either version 3 \n\tof the License, or (at your option) any later version.\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \n\tSee the License here <http://www.gnu.org/licenses/gpl-3.0.html>.\n***********************************************************************/\n\ninclude_once($path_to_root.'/includes/prefs/userprefs.inc');\nif (!defined('TB_PREF'))\n\tdefine('TB_PREF', '&TB_PREF&');\n\n//--------------------------------------------------------------------------\n\nclass current_user {\n\tvar $user = 0;\n\tvar $loginname;\n\tvar $username;\n\tvar $name;\n\tvar $email;\n\tvar $company; // user's company\n\tvar $pos;\n\tvar $access;\n\tvar $timeout;\n\tvar $last_act;\n\tvar $role_set = false;\n\tvar $old_db;\n\tvar $logged;\n\tvar $ui_mode = 0;\n\tvar $login_attempt=0;\n\t\n\tvar $prefs;\n\tvar $cur_con; // current db connection (can be different from $company for superuser)\n\n\tfunction __construct() {\n\t\tglobal $def_coy;\n\t\t\n\t\t$this->loginname = '';\n\t\t$this->username = '';\n\t\t$this->name = '';\n\t\t$this->company = isset($def_coy) ? $def_coy : 0;\n\t\t$this->logged = false;\n\n\t\t$this->prefs = new user_prefs();\n\t}\n\n\tfunction logged_in(){\n\t\treturn $this->logged;\n\t}\n\n\tfunction set_company($company) {\n\t\t$this->company = (int)$company;\n\t}\n\n\tfunction login($company, $loginname, $password) {\n\t\tglobal $security_areas, $security_groups, $security_headings, $path_to_root, $dflt_lang, $SysPrefs;\n\n\t\t$this->set_company($company);\n\t\t$this->logged = false;\n\n\t\tset_global_connection($company);\n\t\t$lang = &$_SESSION['language'];\n\t\t$lang->set_language($_SESSION['language']->code);\n\t\tdb_set_encoding($_SESSION['language']->encoding);\n\n\t\t// Use external authentication source if any.\n\t\t// Keep in mind you need to have user data set for $loginname\n\t\t// in NotrinosERP users table anyway to successfully log in.\n\t\t$Auth_Result = hook_authenticate($loginname, $password);\n\n\t\tif (!isset($Auth_Result))\t// if not used: standard method\n\t\t\t$Auth_Result = authenticate_user($loginname, $password);\n\t\tif ($SysPrefs->login_delay > 0)\n\t\t\twrite_login_filelog($loginname, $Auth_Result);\n\t\tif ($Auth_Result) {\n\t\t\t$myrow = get_user_by_login($loginname);\n\t\t\tif ($myrow['language'] != $dflt_lang) {\t // refresh language and user data\n\t\t\t\t$lang->set_language($myrow['language']);\n\t\t\t\tdb_set_encoding($_SESSION['language']->encoding);\n\t\t\t\t$myrow = get_user_by_login($loginname);\n\t\t\t}\n\n\t\t\t$this->old_db = isset($myrow['full_access']);\n\t\t\tif (! @$myrow['inactive']) {\n\t\t\t\tif ($this->old_db) { \n\t\t\t\t\t// Transition code:\n\t\t\t\t\t// db was not yet upgraded after source update to v.2.2\n\t\t\t\t\t// give enough access for admin user to continue upgrade\n\t\t\t\t\tif (!isset($security_groups) || !isset($security_headings)) {\n\t\t\t\t\t\techo \"<center><br><br><font size='5' color='red'><b>\";\n\t\t\t\t\t\techo _('Before software upgrade you have to include old $security_groups and $security_headings arrays from old config.php file to the new one.');\n\t\t\t\t\t\techo '<br>'.\"<a href=\".$path_to_root.\"/index.php>\"._('Back').'</a>';\n\t\t\t\t\t\techo '</b></font><br><br></center>';\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t\t$this->access = $myrow['full_access'];\n\t\t\t\t\tif (in_array(20, $security_groups[$this->access])) // temporary access for admin users\n\t\t\t\t\t\t$this->role_set[] = $security_areas['SA_SOFTWAREUPGRADE'][0];\n\t\t\t\t\telse {\n\t\t\t\t\t\techo \"<center><br><br><font size='5' color='red'><b>\";\n\t\t\t\t\t\techo _('System is available for site admin only until full database upgrade');\n\t\t\t\t\t\techo '</b></font><br><br></center>';\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$this->role_set = array();\n\t\t\t\t\t$this->access = $myrow['role_id'];\n\t\t\t\t\t// store area codes available for current user role\n\t\t\t\t\t$role = get_security_role($this->access);\n\t\t\t\t\tif (!$role) \n\t\t\t\t\t\treturn false;\n\t\t\t\t\tforeach( $role['areas'] as $code ) {\n\t\t\t\t\t\t// filter only area codes for enabled security sections\n\t\t\t\t\t\tif (in_array($code&~0xff, $role['sections'])) \n\t\t\t\t\t\t\t$this->role_set[] = $code;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$this->name = $myrow['real_name'];\n\t\t\t\t$this->pos = $myrow['pos'];\n\t\t\t\t$this->loginname = $loginname;\n\t\t\t\t$this->username = $this->loginname;\n\t\t\t\t$this->prefs = new user_prefs($myrow);\n\t\t\t\t$this->user = @$myrow['id'];\n\t\t\t\t$this->email = @$myrow['email'];\n\t\t\t\tupdate_user_visitdate($this->username);\n\t\t\t\t$this->logged = true;\n\t\t\t\t$this->login_attempt = 0;\n\t\t\t\t$this->last_act = time();\n\t\t\t\t$this->timeout = session_timeout();\n\t\t\t\tflush_dir(user_js_cache()); // refresh cache on login\n\t\t\t}\n\t\t}\n\t\treturn $this->logged;\n\t}\n\n\tfunction reset_password($company, $email) {\n\t\tglobal $SysPrefs;\n\n\t\t$this->set_company($company);\n\t\t$this->logged = false;\n\n\t\tset_global_connection();\n\n\t\t$user = get_user_by_email($email);\n\n\t\tif ($user != false) {\n\n\t\t\t$password = generate_password();\n\t\t\t$hash = password_hash($password);\n\n\t\t\tupdate_user_password($user['id'], $user['user_id'], $hash);\n\t\t\t\n\t\t\t$sender = get_company_pref('email');\n\t\t\tif (empty($sender))\n\t\t\t\t$header = '';\n\t\t\telse\n\t\t\t\t$header = \"From: $sender\";\n\n\t\t\tmail($email, _('New password for').' '.$SysPrefs->app_title, $password, $header);\n\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction check_user_access() {\n\t\tglobal $security_groups;\n\n\t\tif ($this->old_db) // notification after upgrade\n\t\t\treturn isset($security_groups) && is_array(@$security_groups[$this->access]);\n\t\telse\n\t\t\treturn !isset($security_groups) && is_array($this->role_set);\n\t}\n\n\tfunction can_access($sec_area) {\n\t\tglobal $security_groups, $security_areas;\n\n\t\tif (isset($security_groups))\n\t\t\treturn is_admin_company() && in_array(20, $security_groups[$this->access]);\n\n\t\tif ($sec_area === 'SA_OPEN') \n\t\t\treturn true;\n\t\tif ($sec_area === 'SA_DENIED' || $sec_area === '') \n\t\t\treturn false;\n\n\t\t$code = $security_areas[$sec_area][0];\n\n\t\t// only first registered company has site admin privileges\n\t\treturn $code && in_array($code, $this->role_set) && ($this->company == 0 || (($code&~0xff) != SS_SADMIN));\n\t}\n\n\tfunction can_access_page($page_level) {\n\t\treturn $this->can_access($page_level);\n\t}\n\n\tfunction check_application_access($waapp) {\n\t\tif (!$this->hide_inaccessible_menu_items())\n\t\t\treturn true;\n\n\t\tforeach ($waapp->modules as $module) {\n\t\t\tif ($this->check_module_access($module))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction check_module_access($module) {\n\n\t\tif (!$this->hide_inaccessible_menu_items())\n\t\t\treturn true;\n\n\t\tif (sizeof($module->lappfunctions) > 0) {\n\t\t\tforeach ($module->lappfunctions as $appfunction) {\n\t\t\t\tif ($appfunction->label != '' && $this->can_access_page($appfunction->access))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (sizeof($module->rappfunctions) > 0) {\n\t\t\tforeach ($module->rappfunctions as $appfunction) {\n\t\t\t\tif ($appfunction->label != '' && $this->can_access_page($appfunction->access))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction hide_inaccessible_menu_items() {\n\t\tglobal $SysPrefs;\n\n\t\tif (!isset($SysPrefs->hide_inaccessible_menu_items) || $SysPrefs->hide_inaccessible_menu_items == 0)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\tfunction set_db_connection($id = -1) {\n\t\treturn set_global_connection($id);\n\t}\n\n\tfunction update_prefs($prefs) {\n\t\tglobal $SysPrefs;\n\n\t\tif (!$SysPrefs->allow_demo_mode)\n\t\t\tupdate_user_prefs($this->user, $prefs);\n\n\t\t$this->prefs = new user_prefs(get_user($this->user));\n\t}\n}\n\n//--------------------------------------------------------------------------\n\nfunction round2($number, $decimals=0) {\n\t$delta = ($number < 0 ? -.0000000001 : .0000000001);\n\treturn round($number+$delta, $decimals);\n}\n\n/*\n\tReturns number formatted according to user setup and using $decimals digits after dot \n\t(defualt is 0). When $decimals is set to 'max' maximum available precision is used \n\t(decimals depend on value) and trailing zeros are trimmed.\n*/\nfunction number_format2($number, $decimals=0) {\n\tglobal $SysPrefs;\n\t$tsep = $SysPrefs->thoseps[user_tho_sep()];\n\t$dsep = $SysPrefs->decseps[user_dec_sep()];\n\n\tif ($number == '')\n\t\t$number = 0;\n\tif($decimals==='max')\n\t\t$dec = 15 - floor(log10(abs($number)));\n\telse {\n\t\t$delta = ($number < 0 ? -.0000000001 : .0000000001);\n\t\t@$number += $delta;\n\t\t$dec = $decimals;\n\t}\n\n\t$num = number_format($number, intval($dec), $dsep, $tsep);\n\n\treturn $decimals === 'max' ? rtrim($num, '0') : $num;\n}\n\n/* \tprice/float comparision helper to be used in any suspicious place for zero values? \n*\tusage:\n*\tif (!floatcmp($value1, $value2)) \n*\tcompare value is 0\n*/\ndefine('FLOAT_COMP_DELTA', 0.004);\n\nfunction floatcmp($a, $b) {\n\treturn $a - $b > FLOAT_COMP_DELTA ? 1 : ($b - $a > FLOAT_COMP_DELTA ? -1 : 0);\n}\n\n/*\n*\tCurrent ui mode.\n*/\nfunction fallback_mode() {\n\treturn $_SESSION['wa_current_user']->ui_mode==0;\n}\n\nfunction price_format($number) {\n\treturn number_format2($number, user_price_dec());\n}\n\nfunction price_decimal_format($number, &$dec) {\n\t$dec = user_price_dec();\n\t$str = strval($number);\n\t$pos = strpos($str, '.');\n\tif ($pos !== false) {\n\t\t$len = strlen(substr($str, $pos + 1));\n\t\tif ($len > $dec && $len < ini_get('precision') - 3)\n\t\t\t$dec = $len;\n\t}\n\treturn number_format2($number, $dec);\n}\t\n\nfunction qty_format($number, $stock_id, &$dec) {\n\t$dec = get_qty_dec($stock_id);\n\treturn number_format2($number, $dec);\n}\n\n/* and get_qty_dec */\nfunction get_qty_dec($stock_id=null) {\n\tglobal $path_to_root;\n\tinclude_once($path_to_root.'/inventory/includes/db/items_units_db.inc');\n\tif ($stock_id != null)\n\t\t$dec = get_unit_dec($stock_id);\n\tif ($stock_id == null || $dec == -1 || $dec == null)\n\t\t$dec = user_qty_dec();\n\treturn $dec;\n}\n\n/*\n*\tMaximum precision format. Strips trailing unsignificant digits.\n*/\nfunction maxprec_format($number) {\n\treturn number_format2($number, 'max');\n}\n\nfunction exrate_format($number) {\n\treturn number_format2($number,\n\t$_SESSION['wa_current_user']->prefs->exrate_dec());\n}\n\nfunction percent_format($number) {\n\treturn number_format2($number,\n\t$_SESSION['wa_current_user']->prefs->percent_dec());\n}\n\nfunction user_numeric($input) {\n\tglobal $SysPrefs;\n\n\t$num = trim($input);\n\t$sep = $SysPrefs->thoseps[user_tho_sep()];\n\tif ($sep!='')\n\t\t$num = str_replace( $sep, '', $num);\n\n\t$sep = $SysPrefs->decseps[user_dec_sep()];\n\tif ($sep!='.')\n\t\t$num = str_replace( $sep, '.', $num);\n\n\tif (!is_numeric($num))\n\t\treturn false;\n\n\t$num = (float)$num;\n\n\tif ($num == (int)$num)\n\t\treturn (int)$num;\n\t\n\treturn $num;\n}\n\nfunction user_company() {\n\tglobal $def_coy;\n\treturn isset($_SESSION['wa_current_user']) ? $_SESSION['wa_current_user']->company : $def_coy;\n}\n\nfunction user_pos() {\n\treturn $_SESSION['wa_current_user']->pos;\n}\n\nfunction user_language() {\n\treturn $_SESSION['wa_current_user']->prefs->language();\n}\n\nfunction user_qty_dec() {\n\treturn $_SESSION['wa_current_user']->prefs->qty_dec();\n}\n\nfunction user_price_dec() {\n\tglobal $SysPrefs;\n\treturn isset($_SESSION['wa_current_user']) ? $_SESSION['wa_current_user']->prefs->price_dec() : 2;\n}\n\nfunction user_exrate_dec() {\n\tglobal $SysPrefs;\n\treturn isset($_SESSION['wa_current_user']) ? $_SESSION['wa_current_user']->prefs->exrate_dec() : 4;\n}\n\nfunction user_percent_dec() {\n\tglobal $SysPrefs;\n\treturn isset($_SESSION['wa_current_user']) ? $_SESSION['wa_current_user']->prefs->percent_dec() : 1;\n}\n\nfunction user_show_gl_info() {\n\treturn $_SESSION['wa_current_user']->prefs->show_gl_info();\n}\n\nfunction user_show_codes() {\n\treturn $_SESSION['wa_current_user']->prefs->show_codes();\n}\n\nfunction user_date_format() {\n\tglobal $SysPrefs;\n\treturn isset($_SESSION['wa_current_user']) ? $_SESSION['wa_current_user']->prefs->date_format() : $SysPrefs->dflt_date_fmt;\n}\n\nfunction user_date_display() {\n\t$fmt = 'm/d/Y';\n\tif (isset($_SESSION['wa_current_user']))\n\t\t$fmt = $_SESSION['wa_current_user']->prefs->date_display();\n\telse {\n\t\t$sep = user_date_sep();\n\t\t$user_date_fmt = user_date_format();\n\t\tswitch ($user_date_fmt) {\n\t\t\tcase 0:\n\t\t\t\t$fmt = 'm'.$sep.'d'.$sep.'Y'; break;\n\t\t\tcase 1:\n\t\t\t\t$fmt = 'd'.$sep.'m'.$sep.'Y'; break;\n\t\t\tcase 2:\n\t\t\t\t$fmt = 'Y'.$sep.'m'.$sep.'d'; break;\n\t\t\tcase 3:\n\t\t\t\t$fmt = 'M'.$sep.'j'.$sep.'Y'; break;\n\t\t\tcase 4:\n\t\t\t\t$fmt = 'j'.$sep.'M'.$sep.'Y'; break;\n\t\t\tdefault:\n\t\t\t\t$fmt = 'Y'.$sep.'M'.$sep.'j';\n\t\t}\n\t}\n}\n\nfunction user_date_sep() {\n\tglobal $SysPrefs;\n\treturn isset($_SESSION['wa_current_user']->prefs->date_sep) ? $_SESSION['wa_current_user']->prefs->date_sep() : $SysPrefs->dflt_date_sep;\n}\n\nfunction user_tho_sep() {\n\treturn isset($_SESSION['wa_current_user']) ? $_SESSION['wa_current_user']->prefs->tho_sep() : 0;\n}\n\nfunction user_dec_sep() {\n\treturn isset($_SESSION['wa_current_user']) ? $_SESSION['wa_current_user']->prefs->dec_sep() : 0;\n}\n\nfunction user_theme() {\n\treturn isset($_SESSION['wa_current_user']) ? $_SESSION['wa_current_user']->prefs->get_theme() : 'default';\n}\n\nfunction user_pagesize() {\n\treturn $_SESSION['wa_current_user']->prefs->get_pagesize();\n}\n\nfunction user_hints() {\n\treturn $_SESSION['wa_current_user']->prefs->show_hints();\n}\n\nfunction user_print_profile() {\n\treturn $_SESSION['wa_current_user']->prefs->print_profile();\n}\n\nfunction user_rep_popup() {\n\treturn $_SESSION['wa_current_user']->prefs->rep_popup();\n}\n\nfunction user_query_size() {\n\treturn $_SESSION['wa_current_user']->prefs->query_size();\n}\n\nfunction user_graphic_links() {\n\treturn $_SESSION['wa_current_user']->prefs->graphic_links();\n}\n\nfunction sticky_doc_date() {\n\treturn $_SESSION['wa_current_user']->prefs->sticky_date();\n}\n\nfunction user_startup_tab() {\n\treturn $_SESSION['wa_current_user']->prefs->start_up_tab();\n}\n\nfunction user_transaction_days() {\n\treturn $_SESSION['wa_current_user']->prefs->transaction_days();\n}\n\nfunction user_save_report_selections() {\n\treturn $_SESSION['wa_current_user']->prefs->save_report_selections();\n}\n\nfunction user_use_date_picker() {\n\treturn $_SESSION['wa_current_user']->prefs->use_date_picker();\n}\n\nfunction user_def_print_destination() {\n\treturn $_SESSION['wa_current_user']->prefs->def_print_destination();\n}\n\nfunction user_def_print_orientation() {\n\treturn $_SESSION['wa_current_user']->prefs->def_print_orientation();\n}\n\nfunction user_check_access($sec_area) {\n\treturn $_SESSION['wa_current_user']->can_access($sec_area);\n}\n\nfunction set_user_prefs($prefs) {\n\t$_SESSION['wa_current_user']->update_prefs($prefs);\n}\n\nfunction add_user_js_data() {\n\tglobal $path_to_root, $SysPrefs;\n\n\t$ts = $SysPrefs->thoseps[user_tho_sep()];\n\t$ds = $SysPrefs->decseps[user_dec_sep()];\n\n\t$js = \"\\n\"\n\t  . \"var user = {\\n\"\n\t  . \"theme: '\". $path_to_root . '/themes/'. user_theme().'/'.\"',\\n\"\n\t  . \"loadtxt: '\"._('Requesting data...').\"',\\n\"\n\t  . \"date: '\".Today().\"',\\n\"\t// server date\n\t  . \"datesys: \".$SysPrefs->date_system.\",\\n\"\n\t  . \"datefmt: \".user_date_format().\",\\n\"\n\t  . \"datesep: '\".$SysPrefs->dateseps[user_date_sep()].\"',\\n\"\n\t  . \"ts: '$ts',\\n\"\n\t  . \"ds: '$ds',\\n\"\n\t  . \"pdec : \" . user_price_dec() . \"}\\n\";\n\n\t  add_js_source($js);\n}\n\nfunction user_js_cache($id=null) {\n\tglobal $path_to_root;\n\n\tif (!$id)\n\t\t$id = @$_SESSION['wa_current_user']->user;\n\tif (!$id)\n\t\t$id = 0; // before login\n\treturn $path_to_root.'/company/'.user_company().'/js_cache/'.$id;\n}\n\nfunction session_timeout() {\n\t$tout = @get_company_pref('login_tout'); // mask warning for db ver. 2.2\n\treturn $tout ? $tout : ini_get('session.gc_maxlifetime');\n}\n\n/*\t\n*\tInserts $elements into $array at position $index.\n*\t$elements is list of any objects\n*/\nfunction array_insert(&$array, $index, $elements) {\n\tif (!is_array($elements)) $elements = array($elements);\n\n\t$head  = array_splice($array, 0, $index);\n\t$array = array_merge($head, $elements, $array);\n}\n\nfunction array_remove(&$array, $index, $len=1) {\n\tarray_splice($array, $index, $len);\n}\n\nfunction array_substitute(&$array, $index, $len, $elements) {\n\tarray_splice($array, $index, $len);\n\tarray_insert($array, $index, $elements);\n}\n\nfunction array_append(&$array, $elements) {\n\tforeach($elements as $key => $el) {\n\t\tif(is_int($key))\n\t\t\t$array[] = $el;\n\t\telse\n\t\t\t$array[$key] = $el;\n\t}\n}\n\n/*\n*\tSearch $needle in $haystack or in $haystack[][$valuekey]\n*\treturns $needle found or null.\n*/\nfunction array_search_value($needle, $haystack, $valuekey=null) {\n\tif (is_array($haystack)) {\n\t\tforeach($haystack as $key => $value) {\n\t\t\t$val = isset($valuekey) ? @$value[$valuekey] : $value;\n\t\t\tif ($needle == $val)\n\t\t\t\treturn $value;\n\t\t}\n\t}\n\treturn null;\n}\n\n/*\n*\tSearch $needle in $haystack or in $haystack[][$valuekey]\n*\treturns array of keys of $haystack elements found\n*/\nfunction array_search_keys($needle, $haystack, $valuekey=null) {\n\t$keys = array();\n\tif (is_array($haystack)) {\n\t\tforeach($haystack as $key => $value) {\n\t\t\t$val = isset($valuekey) ? @$value[$valuekey] : $value;\n\t\t\tif ($needle == $val)\n\t\t\t\t$keys[] = $key;\n\t\t}\n\t}\t\n\treturn $keys;\n}\n\n/*\n*\tFind first (single) $needle in $haystack or in $haystack[][$valuekey]\n*\treturns $haystack element found or null\n*/\nfunction array_search_key($needle, $haystack, $valuekey=null) {\n\t$keys = array_search_keys($needle, $haystack, $valuekey);\n\treturn @$keys[0];\n}\n\n// Recalculate report columns if orientation is landscape.\nfunction recalculate_cols(&$cols) {\n\t$factor = (user_pagesize() == 'A4' ? 1.4 : 1.3);\n\tforeach($cols as $key => $col)\n\t\t$cols[$key] = intval($col * $factor); \n}\n\nfunction flush_dir($path, $wipe = false) {\n\tif (!file_exists($path))\n\t\treturn;\n\t$dir = @opendir($path);\n\tif(!$dir)\n\t\treturn;\n\n\twhile(false !== ($fname = readdir($dir))) {\n\t\tif($fname=='.' || $fname=='..' || $fname=='CVS' || (!$wipe && $fname=='index.php')) continue;\n\t\tif(is_dir($path.'/'.$fname)) {\n\t\t\tflush_dir($path.'/'.$fname, $wipe);\n\t\t\tif ($wipe) @rmdir($path.'/'.$fname);\n\t\t}\n\t\telse\n\t\t\t@unlink($path.'/'.$fname);\n\t}\n}\n\n/*\n*\tReturns current path to company private folder.\n*\t(Current path can change after chdir).\n*/\nfunction company_path($comp=null) {\n\tglobal $path_to_root, $SysPrefs;\n\n\t$comp_path = $SysPrefs->comp_path;\n\n\tif (!isset($comp))\n\t\t$comp = user_company();\n\n\t// if path is relative, set current path_to_root\n\treturn ($comp_path[0] == '.' ? $path_to_root.'/'.basename($comp_path) : $comp_path).'/'.$comp;\n}\n\nfunction is_admin_company() {\n\treturn $this->company == 0;\n}\n"], "filenames": ["admin/change_current_user_password.php", "admin/create_coy.php", "admin/db/users_db.inc", "admin/users.php", "includes/current_user.inc"], "buggy_code_start_loc": [28, 23, 115, 59, 72], "buggy_code_end_loc": [90, 354, 121, 65, 155], "fixing_code_start_loc": [28, 23, 115, 59, 72], "fixing_code_end_loc": [90, 354, 138, 65, 155], "type": "CWE-359", "message": "Exposure of Private Personal Information to an Unauthorized Actor in GitHub repository notrinos/notrinoserp prior to v0.7. This results in privilege escalation to a system administrator account. An attacker can gain access to protected functionality such as create/update companies, install/update languages, install/activate extensions, install/activate themes and other permissive actions.", "other": {"cve": {"id": "CVE-2022-2921", "sourceIdentifier": "security@huntr.dev", "published": "2022-08-21T04:15:10.703", "lastModified": "2022-08-23T16:09:32.733", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Exposure of Private Personal Information to an Unauthorized Actor in GitHub repository notrinos/notrinoserp prior to v0.7. This results in privilege escalation to a system administrator account. An attacker can gain access to protected functionality such as create/update companies, install/update languages, install/activate extensions, install/activate themes and other permissive actions."}, {"lang": "es", "value": "Una Exposici\u00f3n de Informaci\u00f3n Personal Privada a un Actor no Autorizado en el repositorio GitHub notrinos/notrinoserp versiones anteriores a v0.7. Esto resulta en una escalada de privilegios a una cuenta de administrador del sistema. Un atacante puede conseguir acceso a funcionalidades protegidas como crear/actualizar empresas, instalar/actualizar idiomas, instalar/activar extensiones, instalar/activar temas y otras acciones permisivas."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-359"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:notrinos:notrinoserp:*:*:*:*:*:*:*:*", "versionEndExcluding": "0.7", "matchCriteriaId": "1DA2C016-D055-4DB8-AE79-4E8247EAD917"}]}]}], "references": [{"url": "https://github.com/notrinos/notrinoserp/commit/1b9903f4deea3289872793e60d730c63ecbf7b45", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/51b32a1c-946b-4390-a212-b6c4b6e4115c", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/notrinos/notrinoserp/commit/1b9903f4deea3289872793e60d730c63ecbf7b45"}}