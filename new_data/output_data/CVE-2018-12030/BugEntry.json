{"buggy_code": ["<?php\ndefine('G_APP_NAME', 'Chevereto Free');\ndefine('G_APP_VERSION', '1.0.12');\ndefine('G_APP_GITHUB_OWNER', 'Chevereto');\ndefine('G_APP_GITHUB_REPO', 'Chevereto-Free');\ndefine('G_APP_GITHUB_REPO_URL', 'https://github.com/' . G_APP_GITHUB_OWNER . '/' . G_APP_GITHUB_REPO);\ndefine('CHEVERETO_INSTALLER_DOWNLOAD_URL', 'https://chevereto.com/download/file/installer');", "<?php\n\n/* --------------------------------------------------------------------\n  Chevereto\n  http://chevereto.com/\n\n  @author\tRodolfo Berrios A. <http://rodolfoberrios.com/>\n\t\t\t<inbox@rodolfoberrios.com>\n\n  Copyright (C) Rodolfo Berrios A. All rights reserved.\n\n  BY USING THIS SOFTWARE YOU DECLARE TO ACCEPT THE CHEVERETO EULA\n  http://chevereto.com/license\n\n  --------------------------------------------------------------------- */\n\nnamespace CHV;\nuse G, Exception;\n\nif(!defined('access') or !access) die('This file cannot be directly accessed.');\n\ntry {\n\n\tif(!is_null(getSetting('chevereto_version_installed')) and !Login::getUser()['is_admin']) {\n\t\tG\\set_status_header(403);\n\t\tdie('Request denied. You must be an admin to be here.');\n\t}\n\n    set_time_limit(600); // This could take up to 10 minutes...\n\n\tif(function_exists('opcache_reset')) {\n\t\topcache_reset(); // Try to flush OPCache\n\t}\n\n\t$doctitles = [\n\t\t'connect' \t=> 'Connect to the database',\n\t\t'ready'\t\t=> 'Ready to install',\n\t\t'finished'\t=> 'Installation complete',\n\t\t'settings'\t=> 'Update settings.php',\n\t\t'already'\t=> 'Already installed',\n\t\t'update'\t=> 'Update needed',\n\t\t'updated'\t=> 'Update complete',\n\t\t'update_failed' => 'Update failed'\n\t];\n\n\t$doing = 'connect'; // default initial state\n\n\t$db_array = [\n\t\t'db_host' => true,\n\t\t'db_name' => true,\n\t\t'db_user' => true,\n\t\t'db_pass' => false,\n\t\t'db_table_prefix' => false\n\t];\n\n\t$error = false;\n\t$db_conn_error = \"Can't connect to the target database. The server replied with this:<br>%s<br><br>Please fix your MySQL info.\";\n\n\t$settings_updates = [\n\t\t'1.0.0' => [\n\t\t\t'analytics_code' => NULL,\n\t\t\t'auto_language' => 1,\n\t\t\t'chevereto_version_installed' => G_APP_VERSION,\n\t\t\t'cloudflare' => NULL,\n\t\t\t'comment_code' => NULL,\n\t\t\t'crypt_salt' => G\\random_string(8),\n\t\t\t'default_language' => 'en',\n\t\t\t'default_timezone' => 'America/Santiago',\n\t\t\t'email_from_email' => '', // no-reply@chevereto.com\n\t\t\t'email_from_name' => 'Chevereto',\n\t\t\t'email_incoming_email' => '', // inbox@chevereto.com\n\t\t\t'email_mode' => 'mail',\n\t\t\t'email_smtp_server' => NULL,\n\t\t\t'email_smtp_server_password' => NULL,\n\t\t\t'email_smtp_server_port' => NULL,\n\t\t\t'email_smtp_server_security' => NULL,\n\t\t\t'email_smtp_server_username' => NULL,\n\t\t\t'enable_uploads' => 1,\n\t\t\t'error_reporting' => 0,\n\t\t\t'facebook' => 0,\n\t\t\t'facebook_app_id' => NULL,\n\t\t\t'facebook_app_secret' => NULL,\n\t\t\t'flood_uploads_day' => '1000',\n\t\t\t'flood_uploads_hour' => '500',\n\t\t\t'flood_uploads_minute' => '50',\n\t\t\t'flood_uploads_month' => '10000',\n\t\t\t'flood_uploads_notify' => 0,\n\t\t\t'flood_uploads_protection' => 1,\n\t\t\t'flood_uploads_week' => '5000',\n\t\t\t'google' => 0,\n\t\t\t'google_client_id' => NULL,\n\t\t\t'google_client_secret' => NULL,\n\t\t\t'guest_uploads' => 1,\n\t\t\t'listing_items_per_page' => 24,\n\t\t\t'maintenance' => 0,\n\t\t\t'recaptcha' => 0,\n\t\t\t'recaptcha_private_key' => NULL,\n\t\t\t'recaptcha_public_key' => NULL,\n\t\t\t'recaptcha_threshold' => 5,\n\t\t\t'theme' => 'Peafowl',\n\t\t\t'twitter' => 0,\n\t\t\t'twitter_api_key' => NULL,\n\t\t\t'twitter_api_secret' => NULL,\n\t\t\t'upload_filenaming' => 'original',\n\t\t\t'upload_image_path' => 'images',\n\t\t\t'upload_max_filesize_mb' => min(10, G\\bytes_to_mb(G\\get_ini_bytes(ini_get('upload_max_filesize')))),\n\t\t\t'upload_storage_mode' => 'datefolder',\n\t\t\t'upload_thumb_height' => '160',\n\t\t\t'upload_thumb_width' => '160',\n\t\t\t'website_description' => 'A free image hosting service powered by Chevereto',\n\t\t\t'website_doctitle' => 'Chevereto image hosting',\n\t\t\t'website_name' => 'Chevereto',\n\t\t\t'website_explore_page' => 1,\n\t\t\t'twitter_account' => 'chevereto',\n\t\t\t'enable_signups' => 1,\n\t\t\t'favicon_image' => 'favicon.png',\n\t\t\t'logo_image' => 'logo.png',\n\t\t\t'logo_vector' => 'logo.svg',\n\t\t\t'theme_custom_css_code' => NULL,\n\t\t\t'theme_custom_js_code' => NULL,\n\t\t\t'website_keywords' => 'image sharing, image hosting, chevereto',\n\t\t\t'logo_vector_enable' => 0,\n\t\t\t'watermark_enable' => 0,\n\t\t\t'watermark_image' => 'watermark.png',\n\t\t\t'watermark_position' => 'center center',\n\t\t\t'watermark_margin' => '10',\n\t\t\t'watermark_opacity' => '50',\n\t\t\t'api_v1_key' => G\\random_string(32),\n\t\t\t'listing_pagination_mode' => 'classic',\n\t\t\t'show_nsfw_in_listings'\t=> 0,\n\t\t\t'show_banners_in_nsfw' => 0,\n\t\t\t'website_privacy_mode' => 'public',\n\t\t\t'website_content_privacy_mode' => 'default',\n\t\t\t'show_nsfw_in_random_mode' => 0,\n\t\t\t'cdn' => 0,\n\t\t\t'cdn_url' => NULL,\n\t\t\t'website_search' => 1,\n\t\t\t'website_random' => 1,\n\t\t\t'theme_logo_height' => NULL,\n\t\t\t'theme_show_social_share' => 1,\n\t\t\t'theme_show_embed_content' => 1,\n\t\t\t'theme_show_embed_uploader' => 1,\n\t\t\t'user_routing'\t\t\t\t\t  => 1,\n\t\t\t'require_user_email_confirmation' => 1,\n\t\t\t'require_user_email_social_signup'=> 1,\n\t\t\t'last_used_storage' => NULL,\n\t\t\t'vk' => 0,\n\t\t\t'vk_client_id' => NULL,\n\t\t\t'vk_client_secret' => NULL,\n\t\t\t'theme_download_button' \t=> 1,\n\t\t\t'theme_nsfw_upload_checkbox'=> 1,\n\t\t\t'theme_tone' \t\t\t\t=> 'light',\n\t\t\t'theme_image_listing_sizing'=> 'fixed',\n\t\t\t'listing_columns_phone'\t\t=> '1',\n\t\t\t'listing_columns_phablet'\t=> '3',\n\t\t\t'listing_columns_tablet'\t=> '4',\n\t\t\t'listing_columns_laptop'\t=> '5',\n\t\t\t'listing_columns_desktop'\t=> '6',\n\t\t\t'homepage_style'\t\t\t=> 'landing',\n\t\t\t'homepage_cover_image'\t\t=> NULL,\n\t\t\t'homepage_uids'\t\t\t\t=> '1',\n\t\t\t'homepage_endless_mode' \t=> 0,\n\t\t\t'user_image_avatar_max_filesize_mb'\t\t=> '1',\n\t\t\t'user_image_background_max_filesize_mb'\t=> '2',\n\t\t\t'theme_image_right_click' => 0,\n\t\t\t'minify_enable'\t\t\t\t=> 1,\n\t\t\t'theme_show_exif_data'\t\t=> 1,\n\t\t\t'theme_top_bar_color'\t\t=> 'white',\n\t\t\t'theme_main_color'\t\t\t=> NULL,\n\t\t\t'theme_top_bar_button_color'=> 'blue',\n\t\t\t'logo_image_homepage'\t\t=> NULL,\n\t\t\t'logo_vector_homepage'\t\t=> NULL,\n\t\t\t'homepage_cta_color'\t\t=> 'green',\n\t\t\t'homepage_cta_outline'\t\t=> 0,\n\t\t\t'watermark_enable_guest'\t=> 1,\n\t\t\t'watermark_enable_user'\t\t=> 1,\n\t\t\t'watermark_enable_admin'\t=> 1,\n\t\t\t'homepage_title_html'\t\t=> NULL,\n\t\t\t'homepage_paragraph_html'\t=> NULL,\n\t\t\t'homepage_cta_html'\t\t\t=> NULL,\n\t\t\t'homepage_cta_fn'\t\t\t=> NULL,\n\t\t\t'homepage_cta_fn_extra'\t\t=> NULL,\n\t\t\t'language_chooser_enable'\t=> 1,\n\t\t\t'languages_disable'\t\t\t=> NULL,\n\t\t\t'website_mode'\t\t\t\t\t=> 'community',\n\t\t\t'website_mode_personal_routing'\t=> NULL, //'single_user_mode_routing'\n\t\t\t'website_mode_personal_uid'\t\t=> NULL, //'single_user_mode_id'\n\t\t\t'enable_cookie_law' => 0,\n\t\t\t'theme_nsfw_blur'\t=> 0,\n\t\t\t'watermark_target_min_width'\t=> '100',\n\t\t\t'watermark_target_min_height'\t=> '100',\n\t\t\t'watermark_percentage'\t\t\t=> '4',\n\t\t\t'watermark_enable_file_gif'\t\t=> 0,\n\t\t\t'id_padding'\t=> '0', // 0-> Update | 5000-> new install\n            'upload_image_exif'              \t\t=> 1,\n            'upload_image_exif_user_setting' \t\t=> 1,\n            'enable_expirable_uploads'       \t\t=> 1,\n\t\t\t'upload_medium_size' => '500',\n\t\t\t'upload_medium_fixed_dimension' => 'width',\n\t\t\t'enable_followers' \t\t\t\t=> 0,\n\t\t\t'enable_likes'\t\t\t\t\t=> 0,\n\t\t\t'enable_consent_screen'\t\t\t=> 0,\n\t\t\t'user_minimum_age'\t\t\t\t=> NULL,\n\t\t\t'consent_screen_cover_image'\t=> NULL,\n\t\t\t'enable_redirect_single_upload'\t=> 1,\n\t\t\t'route_image'\t\t\t\t\t=> 'image',\n\t\t\t'route_album'\t\t\t\t\t=> 'album',\n\t\t\t'enable_duplicate_uploads'\t\t\t=> 0,\n\t\t\t'update_check_datetimegmt'\t\t\t=> NULL,\n\t\t\t'update_check_notified_release'\t\t=> G_APP_VERSION,\n\t\t\t'update_check_display_notification'\t=> 1,\n\t\t],\n\t\t'1.0.1' => NULL,\n\t\t'1.0.2' => NULL,\n\t\t'1.0.3' => [\n\t\t\t'upload_enabled_image_formats'\t=> 'jpg,png,bmp,gif',\n\t\t\t'upload_threads'\t\t\t\t=> '2',\n\t\t\t'enable_automatic_updates_check'=> 1,\n\t\t],\n\t\t'1.0.4' => NULL,\n\t\t'1.0.5' => [\n\t\t\t'comments_api'\t\t\t\t\t=> 'js',\n\t\t\t'disqus_shortname'\t\t\t\t=> NULL,\n\t\t\t'disqus_public_key'\t\t\t\t=> NULL,\n\t\t\t'disqus_secret_key'\t\t\t\t=> NULL,\n\t\t],\n\t\t'1.0.6' => [\n\t\t\t'image_load_max_filesize_mb' => '3',\n\t\t],\n\t\t'1.0.7' => NULL,\n\t\t// 3.8.13\n\t\t'1.0.8' => [\n\t\t\t'upload_max_image_width' => '0',\n\t\t\t'upload_max_image_height'=> '0',\n\t\t],\n\t\t// 3.9.5\n\t\t'1.0.9' => [\n\t\t\t'auto_delete_guest_uploads' => NULL,\n\t\t],\n\t\t'1.0.10' => [\n\t\t\t'enable_user_content_delete' => 1,\n\t\t\t'enable_plugin_route' => 1,\n\t\t\t'sdk_pup_url' => NULL,\n\t\t],\n\t\t'1.0.11' => NULL,\n\t\t'1.0.12' => NULL,\n\t];\n\t// Settings that must be renamed from NAME to NEW NAME and DELETE old NAME\n\t$settings_rename = [];\n\n\t// Settings that must be renamed from NAME to NEW NAME and doesn't delete old NAME\n\t$settings_switch = [];\n\n\t$chv_initial_settings = [];\n\tforeach($settings_updates as $k => $v) {\n\t\tif(is_null($v)) continue;\n\t\t$chv_initial_settings += $v;\n\t}\n\n\t// Detect 2.X\n\ttry {\n\t\t$is_2X = DB::get('info', ['key' => 'version']) ? true : false;\n\t} catch(Exception $e) {\n\t\t$is_2X = false;\n\t}\n\n\t/* Stats query from 3.7.0 up to 3.8.13 */\n\t$stats_query_legacy = 'TRUNCATE TABLE `%table_prefix%stats`;\n\nINSERT INTO `%table_prefix%stats` (stat_id, stat_date_gmt, stat_type) VALUES (\"1\", NULL, \"total\") ON DUPLICATE KEY UPDATE stat_type=stat_type;\n\nUPDATE `%table_prefix%stats` SET\nstat_images = (SELECT IFNULL(COUNT(*),0) FROM `%table_prefix%images`),\nstat_albums = (SELECT IFNULL(COUNT(*),0) FROM `%table_prefix%albums`),\nstat_users = (SELECT IFNULL(COUNT(*),0) FROM `%table_prefix%users`),\nstat_image_views = (SELECT IFNULL(SUM(image_views),0) FROM `%table_prefix%images`),\nstat_disk_used = (SELECT IFNULL(SUM(image_size) + SUM(image_thumb_size) + SUM(image_medium_size),0) FROM `%table_prefix%images`)\nWHERE stat_type = \"total\";\n\nINSERT INTO `%table_prefix%stats` (stat_type, stat_date_gmt, stat_images, stat_image_views, stat_disk_used)\nSELECT sb.stat_type, sb.stat_date_gmt, sb.stat_images, sb.stat_image_views, sb.stat_disk_used\nFROM (SELECT \"date\" AS stat_type, DATE(image_date_gmt) AS stat_date_gmt, COUNT(*) AS stat_images, SUM(image_views) AS stat_image_views, SUM(image_size + image_thumb_size + image_medium_size) AS stat_disk_used FROM `%table_prefix%images` GROUP BY DATE(image_date_gmt)) AS sb\nON DUPLICATE KEY UPDATE stat_images = sb.stat_images;\n\nINSERT INTO `%table_prefix%stats` (stat_type, stat_date_gmt, stat_users)\nSELECT sb.stat_type, sb.stat_date_gmt, sb.stat_users\nFROM (SELECT \"date\" AS stat_type, DATE(user_date_gmt) AS stat_date_gmt, COUNT(*) AS stat_users FROM `%table_prefix%users` GROUP BY DATE(user_date_gmt)) AS sb\nON DUPLICATE KEY UPDATE stat_users = sb.stat_users;\n\nINSERT INTO `%table_prefix%stats` (stat_type, stat_date_gmt, stat_albums)\nSELECT sb.stat_type, sb.stat_date_gmt, sb.stat_albums\nFROM (SELECT \"date\" AS stat_type, DATE(album_date_gmt) AS stat_date_gmt, COUNT(*) AS stat_albums FROM `%table_prefix%albums` GROUP BY DATE(album_date_gmt)) AS sb\nON DUPLICATE KEY UPDATE stat_albums = sb.stat_albums;\n\nUPDATE `%table_prefix%users` SET user_content_views = COALESCE((SELECT SUM(image_views) FROM `%table_prefix%images` WHERE image_user_id = user_id GROUP BY user_id), \"0\");';\n\n\t// Fulltext engine\n\tif(G\\settings_has_db_info()) {\n\t\t$db = DB::getInstance();\n\t\t$fulltext_engine = version_compare($db->getAttr(\\PDO::ATTR_SERVER_VERSION), '5.6', '<') ? 'MyISAM' : 'InnoDB';\n\t}\n\n\t// settings.php contains db\n\tif(G\\settings_has_db_info() and !$_POST) {\n\n\t\t// Chevereto already installed?\n\t\t$installed_version = getSetting('chevereto_version_installed');\n\t\t$maintenance = getSetting('maintenance');\n\n\t\t// Get the setting rows from DB (to avoid overwrite)\n\t\t$db_settings_keys = [];\n\t\ttry {\n\t\t\t$db_settings = DB::get('settings', 'all');\n\t\t\tforeach($db_settings as $k => $v) {\n\t\t\t\t$db_settings_keys[] = $v['setting_name'];\n\t\t\t}\n\t\t} catch(Exception $e) {}\n\n\t\t// Update procedure\n\t\tif((!empty($db_settings_keys) && count($chv_initial_settings) !== count($db_settings_keys)) || (!is_null($installed_version) and version_compare(G_APP_VERSION, $installed_version, '>'))) {\n\n\t\t\tif(!array_key_exists(G_APP_VERSION, $settings_updates)) {\n\t\t\t\tdie('Fatal error: app/install is outdated. You need to re-upload app/install folder with the one from Chevereto ' . G_APP_VERSION);\n\t\t\t}\n\n\t\t\t// Get database schema\n\t\t\t$schema = [];\n\t\t\t$raw_schema = DB::queryFetchAll('SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=\"'.G_APP_DB_NAME.'\" AND TABLE_NAME LIKE \"'. G\\get_app_setting('db_table_prefix') .'%\";');\n\n\t\t\tforeach($raw_schema as $k => $v) {\n\t\t\t\t$TABLE = preg_replace('#'.G\\get_app_setting('db_table_prefix').'#i', '', strtolower($v['TABLE_NAME']), 1);\n\n\t\t\t\t$COLUMN = $v['COLUMN_NAME'];\n\t\t\t\tif(!array_key_exists($TABLE, $schema)) {\n\t\t\t\t\t$schema[$TABLE] = [];\n\t\t\t\t}\n\t\t\t\t$schema[$TABLE][$COLUMN] = $v;\n\t\t\t}\n\n\t\t\t// Remove triggers\n\t\t\t$triggers_to_remove = [\n\t\t\t\t'album_insert',\n\t\t\t\t'album_delete',\n\t\t\t\t'follow_insert',\n\t\t\t\t'follow_delete',\n\t\t\t\t'image_insert',\n\t\t\t\t'image_update',\n\t\t\t\t'image_delete',\n\t\t\t\t'like_insert',\n\t\t\t\t'like_delete',\n\t\t\t\t'notification_insert',\n\t\t\t\t'notification_update',\n\t\t\t\t'notification_delete',\n\t\t\t\t'user_insert',\n\t\t\t\t'user_delete'\n\t\t\t];\n\t\t\t// Get DB triggers\n\t\t\t$db_triggers = DB::queryFetchAll('SELECT TRIGGER_NAME FROM INFORMATION_SCHEMA.TRIGGERS');\n\t\t\tif($db_triggers) {\n\t\t\t\t$drop_trigger_sql = NULL;\n\t\t\t\tforeach($db_triggers as $k => $v) {\n\t\t\t\t\t$trigger = $v['TRIGGER_NAME'];\n\t\t\t\t\tif(in_array($v['TRIGGER_NAME'], $triggers_to_remove)) {\n\t\t\t\t\t\t$drop_trigger = 'DROP TRIGGER IF EXISTS `'.$v['TRIGGER_NAME'].'`;' . \"\\n\";\n\t\t\t\t\t\t$drop_trigger_sql .= $drop_trigger;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!is_null($drop_trigger_sql)) {\n\t\t\t\t\t$drop_trigger_sql = rtrim($drop_trigger_sql, \"\\n\");\n\t\t\t\t\t$remove_triggers = FALSE;\n\t\t\t\t\t$remove_triggers = DB::queryExec($drop_trigger_sql);\n\t\t\t\t\tif(!$remove_triggers) {\n\t\t\t\t\t\tRender\\chevereto_die(NULL, 'To procced you will need to run these queries in your database server: <br><br> <textarea class=\"resize-vertical highlight r5\">'.$drop_trigger_sql.'</textarea>', \"Can't remove table triggers\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Get DB indexes\n\t\t\t$DB_indexes = [];\n\t\t\t$raw_indexes = DB::queryFetchAll('SELECT DISTINCT TABLE_NAME, INDEX_NAME, INDEX_TYPE FROM INFORMATION_SCHEMA.STATISTICS WHERE TABLE_SCHEMA = \"'.G_APP_DB_NAME.'\"');\n\n\t\t\tforeach($raw_indexes as $k => $v) {\n\t\t\t\t$TABLE = preg_replace('#'.G\\get_app_setting('db_table_prefix').'#i', '', strtolower($v['TABLE_NAME']), 1);\n\t\t\t\t$INDEX_NAME = $v['INDEX_NAME'];\n\t\t\t\tif(!array_key_exists($TABLE, $DB_indexes)) {\n\t\t\t\t\t$DB_indexes[$TABLE] = [];\n\t\t\t\t}\n\t\t\t\t$DB_indexes[$TABLE][$INDEX_NAME] = $v;\n\t\t\t}\n\n\t\t\t// Get needed KEY indexes (only for tables that already exists)\n\t\t\t$CHV_indexes = [];\n\t\t\tforeach(new \\DirectoryIterator(CHV_APP_PATH_INSTALL . 'sql') as $fileInfo) {\n\t\t\t\tif($fileInfo->isDot() or $fileInfo->isDir() or !array_key_exists($fileInfo->getBasename('.sql'), $schema)) continue;\n\t\t\t\t$crate_table = file_get_contents(realpath($fileInfo->getPathname()));\n\t\t\t\tif(preg_match_all('/KEY [`\\(]+(\\w+)/', $crate_table, $matches)) {\n\t\t\t\t\t$CHV_indexes[$fileInfo->getBasename('.sql')] = $matches[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Get database engines\n\t\t\t$engines = [];\n\t\t\t$raw_engines = DB::queryFetchAll('SELECT TABLE_NAME, ENGINE FROM information_schema.TABLES WHERE TABLE_SCHEMA = \"'.G_APP_DB_NAME.'\"');\n\n\t\t\tforeach($raw_engines as $k => $v) {\n\t\t\t\t$TABLE = preg_replace('#'.G\\get_app_setting('db_table_prefix').'#i', '', strtolower($v['TABLE_NAME']), 1);\n\t\t\t\t$engines[$TABLE] = $v['ENGINE'];\n\t\t\t}\n\n\t\t\t// Set the right table schema changes per release\n\t\t\t$update_table = [\n\t\t\t\t'1.0.9' => [\n\t\t\t\t\t'albums' => [\n\t\t\t\t\t\t'album_views' => [\n\t\t\t\t\t\t\t'op'\t=> 'ADD',\n\t\t\t\t\t\t\t'type'\t=> 'bigint(32)',\n\t\t\t\t\t\t\t'prop'\t=> \"NOT NULL DEFAULT '0'\",\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t'likes' => [\n\t\t\t\t\t\t'like_content_type' => [\n\t\t\t\t\t\t\t'op'\t\t=> 'MODIFY',\n\t\t\t\t\t\t\t'type'\t\t=> \"enum('image','album')\",\n\t\t\t\t\t\t\t'prop'\t\t=> 'DEFAULT NULL'\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t'notifications' => [\n\t\t\t\t\t\t'notification_content_type' => [\n\t\t\t\t\t\t\t'op'\t\t=> 'MODIFY',\n\t\t\t\t\t\t\t'type'\t\t=> \"enum('user','image','album')\",\n\t\t\t\t\t\t\t'prop'\t\t=> 'NOT NULL'\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t'stats' => [\n\t\t\t\t\t\t'stat_album_views' => [\n\t\t\t\t\t\t\t'op'\t=> 'ADD',\n\t\t\t\t\t\t\t'type'\t=> 'bigint(32)',\n\t\t\t\t\t\t\t'prop'\t=> \"NOT NULL DEFAULT '0'\",\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'stat_album_likes' => [\n\t\t\t\t\t\t\t'op'\t=> 'ADD',\n\t\t\t\t\t\t\t'type'\t=> 'bigint(32)',\n\t\t\t\t\t\t\t'prop'\t=> \"NOT NULL DEFAULT '0'\",\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'stat_likes' => [\n\t\t\t\t\t\t\t'op'\t=> 'CHANGE',\n\t\t\t\t\t\t\t'to'\t=> 'stat_image_likes',\n\t\t\t\t\t\t\t'type'\t=> 'bigint(32)',\n\t\t\t\t\t\t\t'prop'\t=> \"NOT NULL DEFAULT '0'\",\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t]\n\t\t\t];\n\n\t\t\t$sql_update = [];\n\n\t\t\t// Turn ON maintenance mode (if needed)\n\t\t\tif(!$maintenance) {\n\t\t\t\t$sql_update[] = \"UPDATE `%table_prefix%settings` SET `setting_value` = 1 WHERE `setting_name` = 'maintenance';\";\n\t\t\t}\n\n\t\t\t// SQLize the $update_table\n\t\t\t$required_sql_files = [];\n\t\t\tforeach($update_table as $version => $changes) {\n\n\t\t\t\tforeach($changes as $table => $columns) {\n\n\t\t\t\t\tif($table == 'query') continue;\n\n\t\t\t\t\t$schema_table = $schema[$table];\n\n\t\t\t\t\t$create_table = false;\n\t\t\t\t\t// Create table if it doesn't exists\n\t\t\t\t\tif(!array_key_exists($table, $schema) and !in_array($table, $required_sql_files)) {\n\t\t\t\t\t\t$create_table = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Special workaround for storages table\n\t\t\t\t\t\tif($table=='storages' and !array_key_exists('storage_bucket', $schema_table)) {\n\t\t\t\t\t\t\t$create_table = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Missing table\n\t\t\t\t\tif(!in_array($table, $required_sql_files) and $create_table) {\n\t\t\t\t\t\t$sql_update[] = file_get_contents(CHV_APP_PATH_INSTALL . 'sql/'.$table.'.sql');\n\t\t\t\t\t\t$required_sql_files[] = $table;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If the table was added from scratch then skip the rest of the columns scheme\n\t\t\t\t\tif(in_array($table, $required_sql_files)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Is a table op..\n\t\t\t\t\tif($columns['op']) {\n\t\t\t\t\t\tswitch($columns['op']) {\n\t\t\t\t\t\t\tcase 'ALTER':\n\t\t\t\t\t\t\t\t// Duplicated index\n\t\t\t\t\t\t\t\tif($DB_indexes[$table]['searchindex'] and strpos($columns['prop'], 'CREATE FULLTEXT INDEX `searchindex`') !== false) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$sql_update[] = strtr('ALTER TABLE `%table_prefix%'.$table.'` %prop; %tail', ['%prop' => $columns['prop'], '%tail' => $columns['tail']]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check the columns scheme\n\t\t\t\t\tforeach($columns as $column => $column_meta) {\n\n\t\t\t\t\t\t$query = NULL; // reset\n\t\t\t\t\t\t$schema_column = $schema_table[$column];\n\n\t\t\t\t\t\tswitch($column_meta['op']) {\n\t\t\t\t\t\t\tcase 'MODIFY':\n\t\t\t\t\t\t\t\tif(array_key_exists($column, $schema[$table]) and ($schema_column['COLUMN_TYPE'] !== $column_meta['type'] or (preg_match('/DEFAULT NULL/i', $column_meta['prop']) and $schema_column['IS_NULLABLE'] == 'NO'))) {\n\t\t\t\t\t\t\t\t\t$query = '`%column` %type';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'CHANGE':\n\t\t\t\t\t\t\t\tif(array_key_exists($column, $schema[$table])) {\n\t\t\t\t\t\t\t\t\t$query = '`%column` `%to` %type';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'ADD':\n\t\t\t\t\t\t\t\tif(!array_key_exists($column, $schema[$table])) {\n\t\t\t\t\t\t\t\t\t$query = '`%column` %type';\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!is_null($query)) {\n\t\t\t\t\t\t\t$stock_tr = ['op', 'type', 'to', 'prop', 'tail'];\n\t\t\t\t\t\t\t$meta_tr = [];\n\t\t\t\t\t\t\tforeach($stock_tr as $v) {\n\t\t\t\t\t\t\t\t$meta_tr['%'.$v] = $column_meta[$v];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$sql_update[] = strtr('ALTER TABLE `%table_prefix%'.$table.'` %op ' . $query . ' %prop; %tail', array_merge(['%column'\t=> $column], $meta_tr));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif($changes['query']) {\n\t\t\t\t\tif(version_compare($version, $installed_version, '>')) {\n\t\t\t\t\t\t$sql_update[] = $changes['query'];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Fix the missing KEY indexes\n\t\t\tforeach($CHV_indexes as $table => $indexes) {\n\t\t\t\t$field_prefix = DB::getFieldPrefix($table);\n\t\t\t\tforeach($indexes as $index) {\n\t\t\t\t\tif($index == 'searchindex' or $index == $field_prefix . '_id' or !G\\starts_with($field_prefix . '_', $index)) continue;\n\t\t\t\t\tif(!array_key_exists($index, $DB_indexes[$table])) {\n\t\t\t\t\t\t$sql_update[] = 'ALTER TABLE `%table_prefix%' . $table . '` ADD INDEX `' . $index . '` (`' . $index . '`);';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Merge settings and version changes\n\t\t\t$updates_stock = [];\n\t\t\tforeach(array_merge($settings_updates, $update_table) as $k => $v) {\n\t\t\t\tif($k == '3.0.0') continue;\n\t\t\t\t$updates_stock[] = $k;\n\t\t\t}\n\n\t\t\t// Flat settings\n\t\t\t$settings_flat = [];\n\n\t\t\t// Settings workaround\n\t\t\tforeach($updates_stock as $k) {\n\t\t\t\t$sql = NULL; // reset the pointer\n\t\t\t\tif(is_array($settings_updates[$k])) {\n\t\t\t\t\tforeach($settings_updates[$k] as $k => $v) {\n\t\t\t\t\t\t$settings_flat[$k] = $v;\n\t\t\t\t\t\t// Wait a second... Avoid overwrites\n\t\t\t\t\t\tif(in_array($k, $db_settings_keys)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$value = (is_null($v) ? \"NULL\" : \"'\".$v.\"'\");\n\t\t\t\t\t\t$sql .= \"INSERT INTO `%table_prefix%settings` (setting_name, setting_value, setting_default, setting_typeset) VALUES ('\".$k.\"', \".$value.\", \".$value.\", '\" . Settings::getType($v) . \"'); \" . \"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif($sql) {\n\t\t\t\t\t$sql_update[] = $sql;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$settings_get = Settings::get();\n\n\t\t\t// Deteled settings\n\t\t\tforeach($settings_delete as $k) {\n\t\t\t\tif(array_key_exists($k, $settings_get)) {\n\t\t\t\t\t$sql_update[] = \"DELETE FROM `%table_prefix%settings` WHERE `setting_name` = '\" . $k . \"';\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Renamed settings (actually updated values + remove old one)\n\t\t\tforeach($settings_rename as $k => $v) {\n\t\t\t\tif(array_key_exists($k, $settings_get)) {\n\t\t\t\t\t// Typeset is set in the INSERT statement above\n\t\t\t\t\t$value = (is_null($settings_get[$k]) ? \"NULL\" : \"'\".$settings_get[$k].\"'\");\n\t\t\t\t\t$sql_update[] = \"UPDATE `%table_prefix%settings` SET `setting_value` = \" . $value . \" WHERE `setting_name` = '\" . $v . \"';\" . \"\\n\" . \"DELETE FROM `%table_prefix%settings` WHERE `setting_name` = '\" . $k . \"';\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Switched settings (as rename but with update of the old key)\n\t\t\tforeach($settings_switch as $version => $keys) {\n\t\t\t\tif(!version_compare($version, $installed_version, '>')) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tforeach($keys as $k => $v) {\n\t\t\t\t\tif(!array_key_exists($k, $settings_get)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t$value = (is_null($settings_get[$k]) ? \"NULL\" : \"'\".$settings_get[$k].\"'\");\n\t\t\t\t\t$value_default = (is_null($settings_flat[$k]) ? \"NULL\" : \"'\".$settings_flat[$k].\"'\");\n\t\t\t\t\t$sql_update[] = \"UPDATE `%table_prefix%settings` SET `setting_value` = \" . $value . \", `setting_typeset` = '\" . Settings::getType($settings_flat[$k]) . \"' WHERE `setting_name` = '\" . $v . \"';\" . \"\\n\" . \"UPDATE `%table_prefix%settings` SET `setting_value` = \" . $value_default . \", `setting_default` = \" . $value_default . \" WHERE `setting_name` = '\" . $k . \"';\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Always update to the target version\n\t\t\t$sql_update[] = 'UPDATE `%table_prefix%settings` SET `setting_value` = \"' . G_APP_VERSION . '\" WHERE `setting_name` = \"chevereto_version_installed\";';\n\n\t\t\t// Revert maintenance (if needed)\n\t\t\tif(!$maintenance) {\n\t\t\t\t$sql_update[]  = 'UPDATE `%table_prefix%settings` SET `setting_value` = 0 WHERE `setting_name` = \"maintenance\";';\n\t\t\t}\n\n\t\t\t$sql_update = join(\"\\r\\n\", $sql_update);\n\n\t\t\t// Replace the %table_storage% and %table_prefix% thing\n\t\t\t$sql_update = strtr($sql_update, [\n\t\t\t\t'%table_prefix%' => G\\get_app_setting('db_table_prefix'),\n\t\t\t\t'%table_engine%' => $fulltext_engine\n\t\t\t]);\n\n\t\t\t// Remove extra white spaces and line breaks\n\t\t\t$sql_update = preg_replace('/[ \\t]+/', ' ', preg_replace('/\\s*$^\\s*/m', \"\\n\", $sql_update));\n\n\t\t\tif(isset($_REQUEST['debug'])) {\n\t\t\t\tG\\debug($sql_update);\n\t\t\t\tdie();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t$db = DB::getInstance();\n\t\t\t\t$db->query($sql_update);\n\t\t\t\t$updated = $db->exec();\n\t\t\t\tif($updated) {\n\t\t\t\t\t$chevereto_version_installed = DB::get('settings', ['name' => 'chevereto_version_installed'])[0]['setting_value'];\n\t\t\t\t\tif(G_APP_VERSION !== $chevereto_version_installed) {\n\t\t\t\t\t\tthrow new Exception(strtr('Make sure that the current database user %u has ALL PRIVILEGES granted over the %t table.', [\n\t\t\t\t\t\t\t'%u' => G\\get_app_setting('db_user'),\n\t\t\t\t\t\t\t'%t' => G\\get_app_setting('db_name'),\n\t\t\t\t\t\t]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$doing = 'updated';\n\t\t\t} catch(Exception $e) {\n\t\t\t\t$error = true;\n\t\t\t\t$error_message = $e->getMessage();\n\t\t\t\t$doing = 'update_failed';\n\t\t\t}\n\n\t\t} else {\n\t\t\ttry {\n\t\t\t\t$db = DB::getInstance();\n\t\t\t} catch(Exception $e) {\n\t\t\t\t$error = true;\n\t\t\t\t$error_message = sprintf($db_conn_error, $e->getMessage());\n\t\t\t}\n\t\t\t$doing = $error ? 'connect' : 'ready';\n\n\t\t\tif(!is_null($installed_version)) {\n\t\t\t\t$doing = 'already';\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tif(isset($_POST['username']) and !in_array($doing, ['already', 'update'])) {\n\t\t$doing = 'ready';\n\t}\n\n\tif($_POST) {\n\t\tswitch($doing) {\n\t\t\t// First case, need to connect to a working database\n\t\t\tcase 'connect':\n\t\t\t\t$db_details = [];\n\t\t\t\tforeach($db_array as $k => $v) {\n\t\t\t\t\tif($v and $_POST[$k] == '') {\n\t\t\t\t\t\t$error = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t$db_details[ltrim($k, 'db_')] = isset($_POST[$k]) ? $_POST[$k] : NULL;\n\t\t\t\t}\n\t\t\t\tif($error) {\n\t\t\t\t\t$error_message = 'Please fill the database details.';\n\t\t\t\t} else {\n\t\t\t\t\t// Details are complete. Lets check if the DB\n\t\t\t\t\t$db_details['driver'] = 'mysql';\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t$db = new DB($db_details); // Had to initiate a new instance for the new connection params\n\t\t\t\t\t} catch(Exception $e) {\n\t\t\t\t\t\t$error = true;\n\t\t\t\t\t\t$error_message = sprintf($db_conn_error, $e->getMessage());\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!$error) {\n\t\t\t\t\t\t// MySQL connection OK. Now, populate this values to settings.php\n\t\t\t\t\t\t$settings_php = ['<?php'];\n\t\t\t\t\t\tforeach($db_details as $k => $v) {\n\t\t\t\t\t\t\t$settings_php[] = '$settings[\\'db_'.$k.'\\'] = \\''.$v.'\\';';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$settings_php[] = '$settings[\\'db_pdo_attrs\\'] = [];';\n\t\t\t\t\t\t$settings_php[] = '$settings[\\'debug_level\\'] = 1;';\n\t\t\t\t\t\t$settings_php = implode(\"\\n\", $settings_php);\n\t\t\t\t\t\t$settings_file = G_APP_PATH . 'settings.php';\n\n\t\t\t\t\t\t$fh = @fopen($settings_file, 'w');\n\t\t\t\t\t\tif(!$fh or !fwrite($fh, $settings_php)) {\n\t\t\t\t\t\t\t$doing = 'settings';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$doing = 'ready';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@fclose($fh);\n\n\t\t\t\t\t\t// Reset opcache in this file\n\t\t\t\t\t\tif(function_exists('opcache_invalidate')) {\n\t\t\t\t\t\t\t@opcache_invalidate($settings_file, TRUE);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ready to install\n\t\t\t\t\tif($doing == 'ready') {\n\t\t\t\t\t\t/*@include(G_APP_PATH . 'settings.php');\n\t\t\t\t\t\tif(!G\\settings_has_db_info()) {\n\t\t\t\t\t\t\tsleep(3); // nifty hack to prevent cache issues (if any)\n\t\t\t\t\t\t}*/\n\t\t\t\t\t\tG\\redirect('install');\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\tbreak;\n\n\t\t\t// Ready to install\n\t\t\tcase 'ready':\n\n\t\t\t\t// Input validations\n\t\t\t\tif(!filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {\n\t\t\t\t\t$input_errors['email'] = _s('Invalid email');\n\t\t\t\t}\n\t\t\t\tif(!User::isValidUsername($_POST['username'])) {\n\t\t\t\t\t$input_errors['username'] = _s('Invalid username');\n\t\t\t\t}\n\t\t\t\tif(!preg_match('/'.getSetting('user_password_pattern').'/', $_POST['password'])) {\n\t\t\t\t\t$input_errors['password'] = _s('Invalid password');\n\t\t\t\t}\n\t\t\t\tif(!filter_var($_POST['email_from_email'], FILTER_VALIDATE_EMAIL)) {\n\t\t\t\t\t$input_errors['email_from_email'] = _s('Invalid email');\n\t\t\t\t}\n\t\t\t\tif(!filter_var($_POST['email_incoming_email'], FILTER_VALIDATE_EMAIL)) {\n\t\t\t\t\t$input_errors['email_incoming_email'] = _s('Invalid email');\n\t\t\t\t}\n\t\t\t\tif(!in_array($_POST['website_mode'], ['community', 'personal'])) {\n\t\t\t\t\t$input_errors['website_mode'] = _s('Invalid website mode');\n\t\t\t\t}\n\n\t\t\t\tif(count($input_errors) > 0) {\n\t\t\t\t\t$error = true;\n\t\t\t\t\t$error_message = 'Please correct your data to continue.';\n\t\t\t\t} else {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\t$create_table = [];\n\t\t\t\t\t\tforeach(new \\DirectoryIterator(CHV_APP_PATH_INSTALL . 'sql') as $fileInfo) {\n\t\t\t\t\t\t\tif($fileInfo->isDot() or $fileInfo->isDir()) continue;\n\t\t\t\t\t\t\t$create_table[$fileInfo->getBasename('.sql')] = realpath($fileInfo->getPathname());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$install_sql = 'SET FOREIGN_KEY_CHECKS=0;' . \"\\n\";\n\n\t\t\t\t\t\tif($is_2X) {\n\n\t\t\t\t\t\t\t// Need to sync this to avoid bad datefolder mapping due to MySQL time != PHP time\n\t\t\t\t\t\t\t// In Chevereto v2.X date was TIMESTAMP and in v3.X is DATETIME\n\t\t\t\t\t\t\t$DT = new \\DateTime();\n\t\t\t\t\t\t\t$offset = $DT->getOffset();\n\t\t\t\t\t\t\t$offsetHours = round(abs($offset) / 3600);\n\t\t\t\t\t\t\t$offsetMinutes = round((abs($offset) - $offsetHours * 3600) / 60);\n\t\t\t\t\t\t\t$offset = ($offset < 0 ? '-' : '+').(strlen($offsetHours) < 2 ? '0' : '').$offsetHours.':'.(strlen($offsetMinutes) < 2 ? '0' : '').$offsetMinutes;\n\t\t\t\t\t\t\t$install_sql .= \"SET time_zone = '\".$offset.\"';\";\n\n\t\t\t\t\t\t\t$install_sql .= \"\n\t\t\t\t\t\t\tALTER TABLE `chv_images`\n\t\t\t\t\t\t\t\tMODIFY `image_id` bigint(32) NOT NULL AUTO_INCREMENT,\n\t\t\t\t\t\t\t\tMODIFY `image_name` varchar(255),\n\t\t\t\t\t\t\t\tMODIFY `image_date` DATETIME,\n\t\t\t\t\t\t\t\tCHANGE `image_type` `image_extension` varchar(255),\n\t\t\t\t\t\t\t\tCHANGE `uploader_ip` `image_uploader_ip` varchar(255),\n\t\t\t\t\t\t\t\tCHANGE `storage_id` `image_storage_id` bigint(32),\n\t\t\t\t\t\t\t\tDROP `image_delete_hash`,\n\t\t\t\t\t\t\t\tADD `image_date_gmt` datetime NOT NULL AFTER `image_date`,\n\t\t\t\t\t\t\t\tADD `image_title` varchar(100) NOT NULL,\n\t\t\t\t\t\t\t\tADD `image_description` text,\n\t\t\t\t\t\t\t\tADD `image_nsfw` tinyint(1) NOT NULL DEFAULT '0',\n\t\t\t\t\t\t\t\tADD `image_user_id` bigint(32) DEFAULT NULL,\n\t\t\t\t\t\t\t\tADD `image_album_id` bigint(32) DEFAULT NULL,\n\t\t\t\t\t\t\t\tADD `image_md5` varchar(32) NOT NULL,\n\t\t\t\t\t\t\t\tADD `image_storage_mode` enum('datefolder','direct','old') NOT NULL DEFAULT 'datefolder',\n\t\t\t\t\t\t\t\tADD `image_original_filename` text NOT NULL,\n\t\t\t\t\t\t\t\tADD `image_original_exifdata` longtext,\n\t\t\t\t\t\t\t\tADD `image_views` bigint(32) NOT NULL DEFAULT '0',\n\t\t\t\t\t\t\t\tADD `image_category_id` bigint(32) DEFAULT NULL,\n\t\t\t\t\t\t\t\tADD `image_chain` tinyint(128) NOT NULL,\n\t\t\t\t\t\t\t\tADD `image_thumb_size` int(11) NOT NULL,\n\t\t\t\t\t\t\t\tADD `image_medium_size` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t\t\t\t\tADD `image_expiration_date_gmt` datetime DEFAULT NULL,\n\t\t\t\t\t\t\t\tADD `image_likes` bigint(32) NOT NULL DEFAULT '0',\n\t\t\t\t\t\t\t\tADD `image_is_animated` tinyint(1) NOT NULL DEFAULT '0',\n\t\t\t\t\t\t\t\tADD INDEX `image_name` (`image_name`),\n\t\t\t\t\t\t\t\tADD INDEX `image_size` (`image_size`),\n\t\t\t\t\t\t\t\tADD INDEX `image_width` (`image_width`),\n\t\t\t\t\t\t\t\tADD INDEX `image_height` (`image_height`),\n\t\t\t\t\t\t\t\tADD INDEX `image_date_gmt` (`image_date_gmt`),\n\t\t\t\t\t\t\t\tADD INDEX `image_nsfw` (`image_nsfw`),\n\t\t\t\t\t\t\t\tADD INDEX `image_user_id` (`image_user_id`),\n\t\t\t\t\t\t\t\tADD INDEX `image_album_id` (`image_album_id`),\n\t\t\t\t\t\t\t\tADD INDEX `image_storage_id` (`image_storage_id`),\n\t\t\t\t\t\t\t\tADD INDEX `image_md5` (`image_md5`),\n\t\t\t\t\t\t\t\tADD INDEX `image_likes` (`image_views`),\n\t\t\t\t\t\t\t\tADD INDEX `image_views` (`image_views`),\n\t\t\t\t\t\t\t\tADD INDEX `image_category_id` (`image_category_id`),\n\t\t\t\t\t\t\t\tADD INDEX `image_expiration_date_gmt` (`image_expiration_date_gmt`),\n\t\t\t\t\t\t\t\tADD INDEX `image_is_animated` (`image_is_animated`),\n\t\t\t\t\t\t\t\tENGINE=\".$fulltext_engine.\";\n\n\t\t\t\t\t\t\tUPDATE `chv_images`\n\t\t\t\t\t\t\t\tSET `image_date_gmt` = `image_date`,\n\t\t\t\t\t\t\t\t`image_storage_mode` = CASE\n\t\t\t\t\t\t\t\tWHEN `image_storage_id` IS NULL THEN 'datefolder'\n\t\t\t\t\t\t\t\tWHEN `image_storage_id` = 0 THEN 'datefolder'\n\t\t\t\t\t\t\t\tWHEN `image_storage_id` = 1 THEN 'old'\n\t\t\t\t\t\t\t\tWHEN `image_storage_id` = 2 THEN 'direct'\n\t\t\t\t\t\t\t\tEND,\n\t\t\t\t\t\t\t\t`image_storage_id` = NULL;\n\n\t\t\t\t\t\t\tCREATE FULLTEXT INDEX searchindex ON `chv_images`(image_name, image_title, image_description, image_original_filename);\n\n\t\t\t\t\t\t\tRENAME TABLE `chv_info` to `_chv_info`;\n\t\t\t\t\t\t\tRENAME TABLE `chv_options` to `_chv_options`;\n\t\t\t\t\t\t\tRENAME TABLE `chv_storages` to `_chv_storages`;\";\n\n\t\t\t\t\t\t\t// Don't create the images table\n\t\t\t\t\t\t\tunset($create_table['images']);\n\n\t\t\t\t\t\t\t// Inject the old definitions value\n\t\t\t\t\t\t\t$chv_initial_settings['crypt_salt'] = $_POST['crypt_salt'];\n\n\t\t\t\t\t\t\t$table_prefix = 'chv_';\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$table_prefix = G\\get_app_setting('db_table_prefix');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tforeach($create_table as $k => $v) {\n\t\t\t\t\t\t\t$install_sql .= strtr(file_get_contents($v), [\n\t\t\t\t\t\t\t\t'%table_prefix%' => $table_prefix,\n\t\t\t\t\t\t\t\t'%table_engine%' => $fulltext_engine\n\t\t\t\t\t\t\t]) . \"\\n\\n\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// id padding for long faked public IDs\n\t\t\t\t\t\t$chv_initial_settings['id_padding'] = $is_2X ? 0 : 5000;\n\n\t\t\t\t\t\tif($_POST['website_mode'] == 'personal') {\n\t\t\t\t\t\t\t$chv_initial_settings['website_mode'] = 'personal';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Stats (since 3.7.0)\n\t\t\t\t\t\t$install_sql .= strtr($stats_query_legacy, [\n\t\t\t\t\t\t\t\t'%table_prefix%' => $table_prefix,\n\t\t\t\t\t\t\t\t'%table_engine%' => $fulltext_engine\n\t\t\t\t\t\t\t]);\n\n\t\t\t\t\t\tif(isset($_REQUEST['debug'])) {\n\t\t\t\t\t\t\tG\\debug($install_sql);\n\t\t\t\t\t\t\tdie();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do the DB magic\n\t\t\t\t\t\t$db = DB::getInstance();\n\t\t\t\t\t\t$db->query($install_sql);\n\t\t\t\t\t\t$db->exec();\n\t\t\t\t\t\t$db->closeCursor();\n\n\t\t\t\t\t\t// Insert the default settings\n\t\t\t\t\t\t$db->beginTransaction();\n\t\t\t\t\t\t$db->query('INSERT INTO `'.DB::getTable('settings').'` (setting_name, setting_value, setting_default, setting_typeset) VALUES (:name, :value, :value, :typeset)');\n\t\t\t\t\t\tforeach($chv_initial_settings as $k => $v) {\n\t\t\t\t\t\t\t$db->bind(':name', $k);\n\t\t\t\t\t\t\t$db->bind(':value', $v);\n\t\t\t\t\t\t\t$db->bind(':typeset', ($v===0 or $v===1) ? 'bool' : 'string');\n\t\t\t\t\t\t\t$db->exec();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif($db->endTransaction()) {\n\t\t\t\t\t\t\t// Create admin and his password\n\t\t\t\t\t\t\t$insert_admin = User::insert([\n\t\t\t\t\t\t\t\t'username'\t=> $_POST['username'],\n\t\t\t\t\t\t\t\t'email' \t=> $_POST['email'],\n\t\t\t\t\t\t\t\t'is_admin'\t=> 1,\n\t\t\t\t\t\t\t\t'language'\t=> $chv_initial_settings['default_language'],\n\t\t\t\t\t\t\t\t'timezone'\t=> $chv_initial_settings['default_timezone']\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tLogin::addPassword($insert_admin, $_POST['password']);\n\n\t\t\t\t\t\t\t// Add admin user as the personal mode guy\n\t\t\t\t\t\t\tif($_POST['website_mode'] == 'personal') {\n\t\t\t\t\t\t\t\t$db->update('settings', ['setting_value' => 'me'], ['setting_name' => 'website_mode_personal_routing']);\n\t\t\t\t\t\t\t\t$db->update('settings', ['setting_value' => $insert_admin], ['setting_name' => 'website_mode_personal_uid']);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Insert the email settings\n\t\t\t\t\t\t\t$db->update('settings', ['setting_value' => $_POST['email_from_email']], ['setting_name' => 'email_from_email']);\n\t\t\t\t\t\t\t$db->update('settings', ['setting_value' => $_POST['email_incoming_email']], ['setting_name' => 'email_incoming_email']);\n\n\t\t\t\t\t\t\t$doing = 'finished';\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(Exception $e) {\n\t\t\t\t\t\t$error = true;\n\t\t\t\t\t\t$error_message = 'Installation error: ' . $e->getMessage();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t$doctitle = $doctitles[$doing].' - Chevereto ' . get_chevereto_version(true);\n\t$system_template = CHV_APP_PATH_CONTENT_SYSTEM . 'template.php';\n\t$install_template = CHV_APP_PATH_INSTALL . 'template/'.$doing.'.php';\n\n\tif(file_exists($install_template)) {\n\t\tob_start();\n\t\trequire_once($install_template);\n\t\t$html = ob_get_contents();\n\t\tob_end_clean();\n\t} else {\n\t\tdie(\"Can't find \" . G\\absolute_to_relative($install_template));\n\t}\n\n\tif(!@require_once($system_template)) {\n\t\tdie(\"Can't find \" . G\\absolute_to_relative($system_template));\n\t}\n\n\tdie(); // Terminate any remaining execution\n\n} catch (Exception $e) {\n\tG\\exception_to_error($e);\n}", "<?php\n\n/* --------------------------------------------------------------------\n\n  Chevereto\n  http://chevereto.com/\n\n  @author\tRodolfo Berrios A. <http://rodolfoberrios.com/>\n\t\t\t<inbox@rodolfoberrios.com>\n\n  Copyright (C) Rodolfo Berrios A. All rights reserved.\n  \n  BY USING THIS SOFTWARE YOU DECLARE TO ACCEPT THE CHEVERETO EULA\n  http://chevereto.com/license\n\n  --------------------------------------------------------------------- */\n\n$route = function($handler) {\n\ttry {\n\t\t\n\t\tif($_POST and !$handler::checkAuthToken($_REQUEST['auth_token'])) {\n\t\t\t$handler->template = 'request-denied';\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t$logged_user = CHV\\Login::getUser();\n\t\t\n\t\tif(!$logged_user) {\n\t\t\tG\\redirect('login');\n\t\t}\n\t\t\n\t\t// User status override redirect\n\t\tCHV\\User::statusRedirect($logged_user['status']);\n\t\t\n\t\t// Dashboard hack\n\t\t$handler->template = 'settings';\n\t\t$is_dashboard_user = $handler::getCond('dashboard_user');\n\t\t\n\t\t// Request log\n\t\tif(!$is_dashboard_user) {\n\t\t\t$request_log = CHV\\Requestlog::getCounts('account-edit', 'fail');\n\t\t}\n\t\t\n\t\t// Editable values\n\t\t$allowed_to_edit = ['name', 'username', 'email', 'avatar_filename', 'website', 'background_filename', 'timezone', 'language', 'status', 'is_admin', 'image_keep_exif', 'image_expiration', 'newsletter_subscribe', 'bio', 'show_nsfw_listings', 'is_private'];\n\t\t\n        if(CHV\\getSetting('enable_expirable_uploads')) {\n            unset($allowed_to_edit['image_expiration']);\n        }\n        \n\t\t// User handle\n\t\t$user = $is_dashboard_user ? CHV\\User::getSingle($handler->request[1], 'id') : $logged_user;\n\t\t$is_owner = $user['id'] == CHV\\Login::getUser()['id'];\n\t\t\n\t\t// Update the lang displayed on change\n\t\tif(in_array('language', $allowed_to_edit) and isset($_POST['language']) and $logged_user['language'] !== $_POST['language'] and $logged_user['id'] == $user['id'] and array_key_exists($_POST['language'], CHV\\L10n::getEnabledLanguages())) {\n\t\t\tCHV\\L10n::processTranslation($_POST['language']);\n\t\t}\n\t\t\n\t\t// Settings routes\n\t\t$routes = [\n\t\t\t'account'\t\t\t=> _s('Account'),\n\t\t\t'profile'\t\t  \t=> _s('Profile'),\n\t\t\t'password'\t\t  \t=> _s('Password'),\n\t\t\t'homepage' \t\t\t=> _s('Homepage')\n\t\t];\n\t\t$default_route = 'account';\n\t\t\n\t\tif(CHV\\getSetting('website_mode') == 'personal' and CHV\\getSetting('website_mode_personal_routing') !== '/' and $logged_user['id'] == CHV\\getSetting('website_mode_personal_uid')) {\n\t\t\t$route_homepage = TRUE;\n\t\t}\n\t\t\n\t\t$is_email_required = TRUE;\n\t\t// Don't require email for admin when editing users\n\t\tif($handler::getCond('admin') AND !$is_owner) {\n\t\t\t$is_email_required = FALSE;\n\t\t}\n\t\t\n\t\t$doing_level = $is_dashboard_user ? 2 : 0;\n\t\t$doing = $handler->request[$doing_level];\n\n\t\tif(!$user or $handler->request[$doing_level+1] or (!is_null($doing) and !array_key_exists($doing, $routes))) {\n\t\t\treturn $handler->issue404();\n\t\t}\n\t\t\n\t\tif($doing == '') $doing = $default_route;\n\t\t\n\t\t// Populate the routes\n\t\tforeach($routes as $route => $label) {\n\t\t\t$aux = str_replace('_', '-', $route);\n\t\t\t$handler::setCond('settings_'.$aux, $doing == $aux);\n\t\t\tif($handler::getCond('settings_'.$aux)) {\n\t\t\t\t$handler::setVar('setting', $aux);\n\t\t\t}\n\t\t\tif($aux == 'homepage' and !$route_homepage) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$settings_menu[$aux] = array(\n\t\t\t\t'label' => $label,\n\t\t\t\t'url'\t=> G\\get_base_url(($is_dashboard_user ? ('dashboard/user/' . $user['id']) : 'settings') . ($route == $default_route ? '' : '/'.$route)),\n\t\t\t\t'current' => $handler::getCond('settings_'.$aux)\n\t\t\t);\n\t\t}\n\t\t\n\t\t$handler::setVar('settings_menu', $settings_menu);\n\t\t\n\t\tif(!array_key_exists($doing, $routes)) {\n\t\t\treturn $handler->issue404();\n\t\t}\n\t\t\n\t\t// Safe print $_POST\n\t\t$SAFE_POST = $handler::getVar('safe_post');\t\n\t\t\n\t\t// conds\n\t\t$is_error = false;\n\t\t$is_changed = false;\n\t\t$captcha_needed = false;\n\t\t\n\t\t// vars\n\t\t$input_errors = array();\n\t\t$error_message = NULL;\n\t\t$changed_email_message = NULL;\n\t\t\n\t\tif($_POST) {\n\t\t\t\n\t\t\t$field_limits = 255;\n\t\t\t\n\t\t\tforeach($allowed_to_edit as $k) {\n\t\t\t\tif($_POST[$k]) {\n\t\t\t\t\t$_POST[$k] = substr($_POST[$k], 0, $field_limits);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Input validations\n\t\t\tswitch($doing) {\n\t\t\t\t\n\t\t\t\tcase NULL:\n\t\t\t\tcase 'account':\n\t\t\t\t\t\n\t\t\t\t\t$checkboxes = ['upload_image_exif', 'newsletter_subscribe', 'show_nsfw_listings', 'is_private'];\n\t\t\t\t\tforeach($checkboxes as $k) {\n\t\t\t\t\t\tif(!isset($_POST[$k])) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$_POST[$k] = in_array($_POST[$k], ['On', 1]) ? 1 : 0;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tG\\nullify_string($_POST['image_expiration']);\n                    \n\t\t\t\t\t$__post = [];\n\t\t\t\t\t$__safe_post = [];\n\t\t\t\t\tforeach(['username', 'email'] as $v) {\n\t\t\t\t\t\tif(isset($_POST[$v])) {\n\t\t\t\t\t\t\t$_POST[$v] = $v == 'email' ? trim($_POST[$v]) : strtolower(trim($_POST[$v]));\n\t\t\t\t\t\t\t$__post[$v] = $_POST[$v];\n\t\t\t\t\t\t\t$__safe_post[$v] = G\\safe_html($_POST[$v]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t$handler::updateVar('post', $__post);\n\t\t\t\t\t$handler::updateVar('safe_post', $__safe_post);\n\t\t\t\t\t\n\t\t\t\t\tif(!CHV\\User::isValidUsername($_POST['username'])) {\n\t\t\t\t\t\t$input_errors['username'] = _s('Invalid username');\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif($is_email_required and !filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {\n\t\t\t\t\t\t$input_errors['email'] = _s('Invalid email');\n\t\t\t\t\t}\n                    \n                    if(CHV\\getSetting('enable_expirable_uploads')) {\n                        // Image expire time\n                        if($_POST['image_expiration'] !== NULL && (!G\\dateinterval($_POST['image_expiration']) || !array_key_exists($_POST['image_expiration'], CHV\\Image::getAvailableExpirations()))) {\n                            $input_errors['image_expiration'] = _s('Invalid image expiration: %s', $_POST['image_expiration']);\n                        }\n                    }\n                    \n\t\t\t\t\tif(!array_key_exists($_POST['language'], CHV\\get_available_languages())) {\n\t\t\t\t\t\t$_POST['language'] = CHV\\getSetting('default_language');\n\t\t\t\t\t}\n\t\t\t\t\tif(!in_array($_POST['timezone'], timezone_identifiers_list())) {\n\t\t\t\t\t\t$_POST['timezone'] = date_default_timezone_get();\n\t\t\t\t\t}\n\n\t\t\t\t\tif(count($input_errors) > 0) {\n\t\t\t\t\t\t$is_error = true;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(!$is_error) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t$user_db = CHV\\DB::get('users', ['username' => $_POST['username'], 'email' => $_POST['email']], 'OR', NULL);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif($user_db) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tforeach($user_db as $row) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif($row['user_id'] == $user['id']) continue; // Same guy?\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Invalid user, check the time\n\t\t\t\t\t\t\t\tif(!in_array($row['user_status'], ['valid', 'banned'])) { // Don't touch the valid and banned users\n\t\t\t\t\t\t\t\t\t$must_delete_old_user = false;\n\t\t\t\t\t\t\t\t\t$confirmation_db = CHV\\Confirmation::get(['user_id' => $row['user_id']]);\n\t\t\t\t\t\t\t\t\tif($confirmation_db) {\n\t\t\t\t\t\t\t\t\t\t// 24x2 = 48 tic tac tic tac\n\t\t\t\t\t\t\t\t\t\tif(G\\datetime_diff($confirmation_db['confirmation_date_gmt'], NULL, 'h') > 48) {\n\t\t\t\t\t\t\t\t\t\t\tCHV\\Confirmation::delete(['id' => $confirmation_db['confirmation_id']]);\n\t\t\t\t\t\t\t\t\t\t\t$must_delete_old_user = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$must_delete_old_user = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Delete any old un-validated / un-banned user and allow use his things\n\t\t\t\t\t\t\t\t\tif($must_delete_old_user) {\n\t\t\t\t\t\t\t\t\t\tCHV\\DB::delete('users', ['id' => $row['user_id']]);\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Username taken?\n\t\t\t\t\t\t\t\tif(G\\timing_safe_compare($row['user_username'], $_POST['username']) and $user['username'] !== $row['user_username']) {\n\t\t\t\t\t\t\t\t\t$input_errors['username'] = 'Username already being used';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Email taken?\n\t\t\t\t\t\t\t\tif(!empty($_POST['email']) && G\\timing_safe_compare($row['user_email'], $_POST['email']) &&\n\t\t\t\t\t\t\t\t   $user['email'] !== $row['user_email']) {\n\t\t\t\t\t\t\t\t\t$input_errors['email'] = _s('Email already being used');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(count($input_errors) > 0) {\n\t\t\t\t\t\t\t\t$is_error = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Email MUST be validated (two steps)\n\t\t\t\t\tif(!$is_error && !empty($_POST['email']) && !G\\timing_safe_compare($user['email'], $_POST['email'])) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Delete any old confirmation\n\t\t\t\t\t\tCHV\\Confirmation::delete(['type' => 'account-change-email', 'user_id' => $user['id']]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Generate the thing\n\t\t\t\t\t\t$hashed_token = CHV\\generate_hashed_token($user['id']);\n\t\t\t\t\t\t$insert_email_confirm = CHV\\Confirmation::insert([\n\t\t\t\t\t\t\t'type'\t\t\t=> 'account-change-email',\n\t\t\t\t\t\t\t'user_id'\t\t=> $user['id'],\n\t\t\t\t\t\t\t'token_hash'\t=> $hashed_token['hash'],\n\t\t\t\t\t\t\t'status'\t\t=> 'active',\n\t\t\t\t\t\t\t'extra'\t\t\t=> $_POST['email']\n\t\t\t\t\t\t]);\n\t\t\t\t\t\t$email_confirm_link = G\\get_base_url('account/change-email-confirm/?token='.$hashed_token['public_token_format']);\n\t\t\t\t\t\t$changed_email_message = _s('An email has been sent to %s with instructions to activate this email', $SAFE_POST['email']);\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Build the mail global\n\t\t\t\t\t\tglobal $theme_mail;\n\t\t\t\t\t\t$theme_mail = [\n\t\t\t\t\t\t\t'user' => $user,\n\t\t\t\t\t\t\t'link' => $email_confirm_link\n\t\t\t\t\t\t];\n\t\t\t\t\t\t\n\t\t\t\t\t\tob_start();\n\t\t\t\t\t\trequire_once(G_APP_PATH_THEME . 'mails/account-change-email.php');\n\t\t\t\t\t\t$mail_body = ob_get_contents();\n\t\t\t\t\t\tob_end_clean();\n\t\t\t\t\t\t\n\t\t\t\t\t\t$mail['subject'] = _s('Confirmation required at %s', CHV\\getSettings()['website_name']);\n\t\t\t\t\t\t$mail['message'] = $mail_body;\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif(CHV\\send_mail($_POST['email'], $mail['subject'], $mail['message'])) {\n\t\t\t\t\t\t\t\t//$is_changed = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch(Exception $e) {\n\t\t\t\t\t\t\techo($e->getMessage());\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tunset($_POST['email']);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tcase 'profile':\n\t\t\t\t\tif(!preg_match('/^.{1,60}$/', $_POST['name'])) {\n\t\t\t\t\t\t$input_errors['name'] = _s('Invalid name');\n\t\t\t\t\t}\n\t\t\t\t\tif($_POST['website'] and !filter_var($_POST['website'], FILTER_VALIDATE_URL)) {\n\t\t\t\t\t\t$input_errors['website'] = _s('Invalid website');\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tcase 'password':\n\t\t\t\t\t\n\t\t\t\t\tif(!$is_dashboard_user) {\n\t\t\t\t\t\tif($user['login']['password'] && !password_verify($_POST['current-password'], $user['login']['password']['secret'])) {\n\t\t\t\t\t\t\t$input_errors['current-password'] = _s('Wrong password');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif($_POST['current-password'] == $_POST['new-password']) {\n\t\t\t\t\t\t\t\t$input_errors['new-password'] = _s('Use a new password');\n\t\t\t\t\t\t\t\t$handler::updateVar('safe_post', ['current-password' => NULL]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tif(!preg_match('/'.CHV\\getSetting('user_password_pattern').'/', $_POST['new-password'])) {\n\t\t\t\t\t\t$input_errors['new-password'] = _s('Invalid password');\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif($_POST['new-password'] !== $_POST['new-password-confirm']) {\n\t\t\t\t\t\t$input_errors['new-password-confirm'] = _s(\"Passwords don't match\");\n\t\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tcase 'homepage':\n\t\t\t\t\tif(!array_key_exists($doing, $routes)) { // Nope\n\t\t\t\t\t\t$handler->issue404();\n\t\t\t\t\t}\n\t\t\t\t\t$allowed_to_edit = ['homepage_title_html', 'homepage_paragraph_html', 'homepage_cta_html'];\n\t\t\t\t\t\n\t\t\t\t\t// Protect editing\n\t\t\t\t\t$editing_array = G\\array_filter_array($_POST, $allowed_to_edit, 'exclusion');\n\t\t\t\t\t$update_settings = [];\n\t\t\t\t\tforeach($allowed_to_edit as $k) {\n\t\t\t\t\t\tif(!array_key_exists($k, CHV\\Settings::get()) or CHV\\Settings::get($k) == $editing_array[$k]) continue;\n\t\t\t\t\t\t$update_settings[$k] = $editing_array[$k];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Update settings (if any)\n\t\t\t\t\tif($update_settings) {\n\t\t\t\t\t\t$db = CHV\\DB::getInstance();\n\t\t\t\t\t\t$db->beginTransaction();\n\t\t\t\t\t\t$db->query('UPDATE ' . CHV\\DB::getTable('settings') . ' SET setting_value = :value WHERE setting_name = :name;');\n\t\t\t\t\t\tforeach($update_settings as $k => $v) {\n\t\t\t\t\t\t\t$db->bind(':name', $k);\n\t\t\t\t\t\t\t$db->bind(':value', $v);\n\t\t\t\t\t\t\t$db->exec();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif($db->endTransaction()) {\n\t\t\t\t\t\t\t$is_changed = TRUE;\n\t\t\t\t\t\t\tforeach($update_settings as $k => $v) {\n\t\t\t\t\t\t\t\tCHV\\Settings::setValue($k, $v);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t$handler->issue404();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif(count($input_errors) > 0) {\n\t\t\t\t$is_error = true;\n\t\t\t}\n\t\t\t\n\t\t\tif(!$is_error) {\n\t\t\t\n\t\t\t\t// Account and profile changes\n\t\t\t\tif(in_array($doing, [NULL, 'account', 'profile'])) {\n\t\t\t\t\t\n\t\t\t\t\t// Detect changes\n\t\t\t\t\tforeach($_POST as $k => $v) {\n\t\t\t\t\t\tif($user[$k] !== $v) {\n\t\t\t\t\t\t\t$is_changed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif($is_changed) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Protect editing\n\t\t\t\t\t\t$editing_array = G\\array_filter_array($_POST, $allowed_to_edit, 'exclusion');\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!$is_dashboard_user) {\n\t\t\t\t\t\t\tunset($editing_array['status'], $editing_array['is_admin']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(!in_array($editing_array['status'], ['valid', 'banned', 'awaiting-confirmation', 'awaiting-email'])) {\n\t\t\t\t\t\t\t\tunset($editing_array['status']);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif($_POST['role']) {\n\t\t\t\t\t\t\t\t$editing_array['is_admin'] = $_POST['role'] == 'admin' ? 1 : 0;\n\t\t\t\t\t\t\t\tif($_POST['is_admin']) {\n\t\t\t\t\t\t\t\t\t$editing_array['status'] = 'valid';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tunset($_POST['role']);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(empty($_POST['email'])) {\n\t\t\t\t\t\t\tunset($editing_array['email']);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(CHV\\User::update($user['id'], $editing_array)) {\n\t\t\t\t\t\t\t$user = array_merge($user, $editing_array);\n\t\t\t\t\t\t\t$handler::updateVar('safe_post', ['name' => CHV\\User::sanitizeUserName($_POST['name'])]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!$is_dashboard_user) {\n\t\t\t\t\t\t\t$logged_user = CHV\\Login::login($user['id'], $_SESSION['login']['type']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$user = CHV\\User::getSingle($user['id'], 'id');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$changed_message = _s('Changes have been saved.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Update/create password\n\t\t\t\tif($doing == 'password') {\n\t\t\t\t\t\n\t\t\t\t\tif($user['login']['password']) {\n\t\t\t\t\t\n\t\t\t\t\t\t// Delete any old cookie/session login for this user\n\t\t\t\t\t\tCHV\\Login::delete(['type' => 'cookie', 'user_id' => $user['id']]);\n\t\t\t\t\t\tCHV\\Login::delete(['type' => 'session', 'user_id' => $user['id']]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Insert the new login DB if needed\n\t\t\t\t\t\tif(!$is_dashboard_user and $_COOKIE['KEEP_LOGIN']) {\n\t\t\t\t\t\t\tCHV\\Login::insert(['type' => 'cookie', 'user_id' => $user['id']]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t$is_changed = CHV\\Login::changePassword($user['id'], $_POST['new-password']); // This inserts the session login\n\t\t\t\t\t\t$changed_message = _s('Password has been changed');\n\t\t\t\t\t\t\n\t\t\t\t\t} else { // Insert\n\t\t\t\t\t\t\n\t\t\t\t\t\t$is_changed = CHV\\Login::addPassword($user['id'], $_POST['new-password']);\n\t\t\t\t\t\t$changed_message = _s('Password has been created.');\n\t\t\t\t\t\tif(!$is_dashboard_user or $logged_user['id'] == $user['id']) {\n\t\t\t\t\t\t\t$logged_user = CHV\\Login::login($user['id'], 'password');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t$unsets = array('current-password', 'new-password', 'new-password-confirm');\n\t\t\t\t\tforeach($unsets as $unset) {\n\t\t\t\t\t\t$handler::updateVar('safe_post', [$unset => NULL]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tif(in_array($doing, array('', 'account')) and !$is_dashboard_user) {\n\t\t\t\t\tCHV\\Requestlog::insert(array('type' => 'account-edit', 'result' => 'fail'));\n\t\t\t\t\t$error_message = _s('Wrong Username/Email values');\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\t\n\t\t$handler::setCond('settings_linked_accounts', FALSE);\n\t\t\n\t\t$handler::setCond('owner', $is_owner);\n\t\t$handler::setCond('error', $is_error);\n\t\t$handler::setCond('changed', $is_changed);\n\t\t$handler::setCond('captcha_needed', $captcha_needed);\n\t\t$handler::setCond('dashboard_user', $is_dashboard_user);\n\t\t$handler::setCond('email_required', $is_email_required);\n\t\t\n\t\tif($captcha_needed and !$handler::getVar('recaptcha_html')) {\n\t\t\t$handler::setVar('recaptcha_html', CHV\\Render\\get_recaptcha_html());\n\t\t}\n\t\t\n\t\t$handler::setVar('pre_doctitle', $is_dashboard_user ? _s('Settings for %s', $user['username']) : _s('Settings'));\n\t\t\n\t\t$handler::setVar('error',  $error_message);\n\t\t$handler::setVar('input_errors', $input_errors);\n\t\t$handler::setVar('changed_message', $changed_message);\n\t\t$handler::setVar('changed_email_message', $changed_email_message);\n\t\t$handler::setVar('user', $is_dashboard_user ? $user : $logged_user);\n\t\t$handler::setVar('safe_html_user', G\\safe_html($handler::getVar('user')));\n\t\t\n\t} catch(Exception $e) {\n\t\tG\\exception_to_error($e);\n\t}\n};", "<?php if(!defined('access') or !access) die('This file cannot be directly accessed.'); ?>\n<?php G\\Render\\include_theme_header(); ?>\n\n<div class=\"content-width\">\n    \n\t<div class=\"c24 center-box\">\n\t\t\n\t\t<div class=\"header header-tabs default-margin-bottom\">\n\t\t\t<h1><?php echo get_pre_doctitle(); ?></h1>\n\t\t\t<div class=\"hidden phone-show phablet-show\">\n\t\t\t\t<?php\n\t\t\t\t\tforeach(get_settings_menu() as $tab) {\n\t\t\t\t\t\tif($tab[\"current\"]) {\n\t\t\t\t\t\t\t$current = $tab;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t\t<div class=\"phone-show hidden tab-menu current\" data-action=\"tab-menu\"><span data-content=\"current-tab-label\"><?php echo $current[\"label\"]; ?></span><span class=\"icon icon-menu4 margin-left-5\"></span></div>\n\t\t\t\t<ul class=\"content-tabs phone-hide phablet-show\">\n\t\t\t\t\t<?php\n\t\t\t\t\t\tforeach(get_settings_menu() as $item) {\n\t\t\t\t\t?>\n\t\t\t\t\t<li<?php if($item[\"current\"]) echo ' class=\"current\"'; ?>><a href=\"<?php echo $item[\"url\"]; ?>\"><?php echo $item[\"label\"]; ?></a></li>\n\t\t\t\t\t<?php\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<?php\n\t\t\t\tif(is_dashboard_user()) {\n\t\t\t?>\n\t\t\t<div class=\"header-content-right phone-float-none\">\n\t\t\t\t<div class=\"list-selection\">\n\t\t\t\t\t<a href=\"<?php echo get_user()['url']; ?>\" class=\"header-link\"><?php echo get_user()['username']; ?></a>\n\t\t\t\t\t<a class=\"delete-link margin-left-5\" data-confirm=\"<?php _se(\"Do you really want to delete this user? This can't be undone.\"); ?>\" data-submit-fn=\"CHV.fn.user.delete.submit\" data-ajax-deferred=\"CHV.fn.complete_resource_delete\" data-ajax-url=\"<?php echo G\\get_base_url(\"json\"); ?>\"><?php _se('Delete user'); ?></a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<?php\n\t\t\t\t}\n\t\t\t?>\n\t\t</div>\n\t\t\n\t\t<div class=\"form-content\">\n\t\t\t\n\t\t\t<ul class=\"content-tabs c5 content-tabs-vertical phone-hide phablet-hide\">\n\t\t\t\t<?php\n\t\t\t\t\tforeach(get_settings_menu() as $item) {\n\t\t\t\t?>\n\t\t\t\t<li<?php if($item[\"current\"]) echo ' class=\"current\"'; ?>><a href=\"<?php echo $item[\"url\"]; ?>\"><?php echo $item[\"label\"]; ?></a></li>\n\t\t\t\t<?php\n\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t</ul>\n\t\t\n\t\t\t<form data-content=\"main-form\" class=\"tabbed-input-column\" method=\"post\" data-type=\"<?php echo get_setting(); ?>\" data-action=\"validate\">\n\t\t\t\t\n\t\t\t\t<?php echo G\\Render\\get_input_auth_token(); ?>\n\t\t\t\t\n\t\t\t\t<?php\n\t\t\t\t\tif(is_settings_account()) {\n\n\t\t\t\t\t\tif(is_dashboard_user() or is_admin()) {\n\t\t\t\t?>\n\t\t\t\t<ul class=\"tabbed-content-list table-li\">\n\t\t\t\t\t<?php\n\t\t\t\t\t\t$user_list_values = [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'label'\t\t=> _s('User ID'),\n\t\t\t\t\t\t\t\t'content'\t=> get_user()['id'] . ' ('.get_user()['id_encoded'].')'\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'label'\t\t=> _s('Images'),\n\t\t\t\t\t\t\t\t'content'\t=> get_user()['image_count']\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'label' \t=> _s('Albums'),\n\t\t\t\t\t\t\t\t'content'\t=> get_user()['album_count']\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'label' \t=> _s('Register date'),\n\t\t\t\t\t\t\t\t'content' \t=> get_user()['date']\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'label' => NULL,\n\t\t\t\t\t\t\t\t'content' => get_user()['date_gmt'] . ' (GMT)'\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t];\n\t\t\t\t\t\tif(get_user()['registration_ip']) {\n\t\t\t\t\t\t\t$user_list_values[] = [\n\t\t\t\t\t\t\t\t'label'\t\t=> _s('Registration IP'),\n\t\t\t\t\t\t\t\t'content'\t=> get_user()['registration_ip']\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tforeach($user_list_values as $v) {\n\t\t\t\t\t?>\n\t\t\t\t\t<li><span class=\"c4 display-table-cell padding-right-10\"><?php echo $v['label']; ?></span> <span class=\"display-table-cell\"><?php echo $v['content']; ?></span></li>\n\t\t\t\t\t<?php\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</ul>\n\t\t\t\t\n\t\t\t\t<div class=\"c5 phablet-c1\">\n\t\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t\t<label for=\"status\"><?php _se('Status'); ?></label>\n\t\t\t\t\t\t<select name=\"status\" id=\"status\" class=\"text-input\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tforeach([\n\t\t\t\t\t\t\t\t\t'valid'\t => _s('Valid'),\n\t\t\t\t\t\t\t\t\t'banned' => _s('Banned'),\n\t\t\t\t\t\t\t\t\t'awaiting-email' => _s('Awaiting email'),\n\t\t\t\t\t\t\t\t\t'awaiting-confirmation' => _s('Awaiting confirmation')\n\t\t\t\t\t\t\t\t] as $k => $v) {\n\t\t\t\t\t\t\t\t\t$selected = $k == get_user()[\"status\"] ? \" selected\" : \"\";\n\t\t\t\t\t\t\t\t\techo '<option value=\"'.$k.'\"'.$selected.'>'.$v.'</option>'.\"\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t\t<label for=\"role\"><?php _se('Role'); ?></label>\n\t\t\t\t\t\t<select name=\"role\" id=\"role\" class=\"text-input\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tforeach([\n\t\t\t\t\t\t\t\t\t'admin'\t=> ['label' => _s('Administrator'), 'selected' => get_user()['is_admin']],\n\t\t\t\t\t\t\t\t\t'user'\t=> ['label' => _s('User'), 'selected' => !get_user()['is_admin']]\n\t\t\t\t\t\t\t\t] as $k => $v) {\n\t\t\t\t\t\t\t\t\t$selected = $v['selected'] ? \" selected\" : \"\";\n\t\t\t\t\t\t\t\t\techo '<option value=\"'.$k.'\"'.$selected.'>'.$v['label'].'</option>'.\"\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<hr class=\"line-separator\"></hr>\n\t\t\t\t\n\t\t\t\t<?php\n\t\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t\t<div class=\"c9 phablet-c1\">\n\t\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t\t<label for=\"username\"><?php _se('Username'); ?></label>\n\t\t\t\t\t\t<input type=\"text\" name=\"username\" id=\"username\" maxlength=\"<?php echo CHV\\getSetting('username_max_length'); ?>\" class=\"text-input\" value=\"<?php echo get_safe_post() ? get_safe_post()[\"username\"] : get_user()[\"username\"]; ?>\" pattern=\"<?php echo CHV\\getSetting('username_pattern'); ?>\" rel=\"tooltip\" title='<?php _se('%i to %f characters<br>Letters, numbers and \"_\"', ['%i' => CHV\\getSetting('username_min_length'), '%f' => CHV\\getSetting('username_max_length')]); ?>' data-tipTip=\"right\" placeholder=\"<?php _se('Username'); ?>\" required>\n\t\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"username\"]; ?></span>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif(CHV\\getSetting('website_mode') == 'community') {\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<div class=\"input-below\"><?php echo G\\get_base_url(CHV\\getSetting('user_routing') ? NULL : 'user') . '/'; ?><span data-text=\"username\"><?php echo get_user()[\"username\"]; ?></span></div>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t\t<label for=\"email\"><?php _se('Email address'); ?></label>\n\t\t\t\t\t\t<input type=\"email\" name=\"email\" id=\"email\" class=\"text-input\" value=\"<?php echo get_safe_post() ? get_safe_post()[\"email\"] : get_user()[\"email\"]; ?>\" placeholder=\"<?php _se('Your email address'); ?>\"<?php if(is_email_required()) { ?> required<?php } ?>>\n\t\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"email\"]; ?></span>\n\t\t\t\t\t\t<?php if(get_changed_email_message()) { ?><div class=\"input-below highlight padding-5\"><?php echo get_changed_email_message(); ?></div><?php } ?>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<hr class=\"line-separator\"></hr>\n\t\t\t\t\n\t\t\t\t<?php if(CHV\\getSetting('enable_expirable_uploads')) { ?>\n                <div class=\"input-label\">\n                    <label for=\"image_expiration\"><?php _se('Auto delete uploads'); ?></label>\n                    <div class=\"c6 phablet-1\">\n                        <select type=\"text\" name=\"image_expiration\" id=\"image_expiration\" class=\"text-input\">\n                        <?php\n                            echo CHV\\Render\\get_select_options_html(CHV\\Image::getAvailableExpirations(), get_safe_post() ? get_safe_post()['image_expiration'] : get_user()['image_expiration']);\n                        ?>\n                        </select>\n                    </div>\n\t\t\t\t\t<div class=\"input-below input-warning red-warning\"><?php echo get_input_errors()[\"image_expiration\"]; ?></div>\n                    <div class=\"input-below\"><?php _se('This setting will apply to all your image uploads by default. You can override this setting on each upload.'); ?></div>\n                </div>\n\n                <hr class=\"line-separator\"></hr>\n\t\t\t\t\n\t\t\t\t<?php } ?>\n\t\t\t\t\n                <?php if(CHV\\getSetting('upload_image_exif_user_setting')) { ?>\n                <div class=\"input-label\">\n                    <label><?php _se('Image Exif data'); ?></label>\n\t\t\t\t\t<?php echo CHV\\Render\\get_checkbox_html([\n\t\t\t\t\t\t'name'\t\t=> 'image_keep_exif',\n\t\t\t\t\t\t'label'\t\t=> _s('Keep image <a %s>Exif data</a> on upload', 'href=\"https://www.google.com/search?q=Exif\" target=\"_blank\"'),\n\t\t\t\t\t\t'checked'\t=> ((bool)(get_safe_post() ? get_safe_post()['image_keep_exif'] : get_user()['image_keep_exif']))\n\t\t\t\t\t]); ?>\n                </div>\n                <?php } ?>\n        \n\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t<label><?php _se('Newsletter'); ?></label>\n\t\t\t\t\t<?php echo CHV\\Render\\get_checkbox_html([\n\t\t\t\t\t\t'name'\t\t=> 'newsletter_subscribe',\n\t\t\t\t\t\t'label'\t\t=> _s('Send me emails with news about %s', CHV\\getSetting('website_name')),\n\t\t\t\t\t\t'checked'\t=> ((bool)(get_safe_post() ? get_safe_post()['newsletter_subscribe'] : get_user()['newsletter_subscribe']))\n\t\t\t\t\t]); ?>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t<label><?php _se('Content settings'); ?></label>\n\t\t\t\t\t<?php echo CHV\\Render\\get_checkbox_html([\n\t\t\t\t\t\t'name'\t\t=> 'show_nsfw_listings',\n\t\t\t\t\t\t'label'\t\t=> _s('Show not safe content in listings (from others)'),\n\t\t\t\t\t\t'checked'\t=> ((bool)(get_safe_post() ? get_safe_post()['show_nsfw_listings'] : get_user()['show_nsfw_listings']))\n\t\t\t\t\t]); ?>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<hr class=\"line-separator\"></hr>\n\t\t\t\t\n\t\t\t\t<?php if(CHV\\getSetting('language_chooser_enable')) { ?>\n\t\t\t\t<div class=\"c5 phablet-c1\">\n\t\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t\t<label for=\"language\"><?php _se('Language'); ?></label>\n\t\t\t\t\t\t<select name=\"language\" id=\"language\" class=\"text-input\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$enabled_languages = CHV\\get_enabled_languages();\n\t\t\t\t\t\t\t\tforeach($enabled_languages as $k => $v){\n\t\t\t\t\t\t\t\t\t$selected_lang = $k == CHV\\get_language_used()['code'] ? \" selected\" : \"\";\n\t\t\t\t\t\t\t\t\techo '<option value=\"'.$k.'\"'.$selected_lang.'>'.$v[\"name\"].'</option>'.\"\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<?php } ?>\n\t\t\t\t\n\t\t\t\t<?php \n\n\t\t\t\t$zones = timezone_identifiers_list();\n\t\t\t\t\n\t\t\t\tforeach ($zones as $zone) {\n\t\t\t\t\t$zone = explode('/', $zone);\n\t\t\t\t\tif(in_array($zone[0], array(\"Africa\", \"America\", \"Antarctica\", \"Arctic\", \"Asia\", \"Atlantic\", \"Australia\", \"Europe\", \"Indian\", \"Pacific\"))) {      \n\t\t\t\t\t\tif (isset($zone[1]) != '') {\n\t\t\t\t\t\t\t$regions[$zone[0]][$zone[0]. '/' . $zone[1]] = str_replace('_', ' ', $zone[1]);\n\t\t\t\t\t\t} \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t?>\n\t\t\t\t\n\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t<label for=\"timezone\"><?php _se('Timezone'); ?></label>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"overflow-auto\">\n\t\t\t\t\t\n\t\t\t\t\t\t<select id=\"timezone-region\" class=\"c5 phablet-c1 grid-columns margin-right-10 phone-margin-bottom-10 phablet-margin-bottom-10 text-input\" data-combo=\"timezone-combo\">\n\t\t\t\t\t\t\t<option><?php _se('Select region'); ?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$user_region = preg_replace(\"/(.*)\\/.*/\", \"$1\", get_user()[\"timezone\"]);\n\t\t\t\t\t\t\t\tforeach($regions as $key => $region) {\n\t\t\t\t\t\t\t\t\t$selected = $user_region == $key ? \" selected\" : \"\";\n\t\t\t\t\t\t\t\t\techo '<option value=\"'.$key.'\"'.$selected.'>'.$key.'</option>';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<div id=\"timezone-combo\" class=\"c5 phablet-c1 grid-columns\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tforeach($regions as $key => $region) {\n\t\t\t\t\t\t\t\t\t$show_hide = $user_region == $key ? \"\" : \" soft-hidden\";\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<select id=\"timezone-combo-<?php echo $key; ?>\" class=\"text-input switch-combo<?php echo $show_hide; ?>\" data-combo-value=\"<?php echo $key; ?>\">\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tforeach($region as $k => $l) {\n\t\t\t\t\t\t\t\t\t\t$selected = get_user()[\"timezone\"] == $k ? \" selected\" : \"\";\n\t\t\t\t\t\t\t\t\t\techo '<option value=\"'.$k.'\"'.$selected.'>'.$l.'</option>'.\"\\n\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<input type=\"hidden\" id=\"timezone\" name=\"timezone\" data-content=\"timezone\" data-highlight=\"#timezone-region\" value=\"<?php echo get_user()[\"timezone\"]; ?>\" required>\n\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t<?php } ?>\n\t\t\t\t\n\t\t\t\t<?php if(is_settings_password()) { ?>\n\t\t\t\t\n\t\t\t\t<?php\n\t\t\t\t\t// User has password\n\t\t\t\t\tif(get_user()[\"login\"][\"password\"] !== NULL) {\n\t\t\t\t?>\n\t\t\t\t<div class=\"c9 phablet-c1\">\n\t\t\t\t\t<?php\n\t\t\t\t\t\tif(!is_dashboard_user()) {\n\t\t\t\t\t?>\n\t\t\t\t\t<div class=\"input-label input-password\">\n\t\t\t\t\t\t<label for=\"current-password\"><?php _se('Current password'); ?></label>\n\t\t\t\t\t\t<input type=\"password\" name=\"current-password\" id=\"current-password\" class=\"text-input\" value=\"<?php echo get_safe_post()[\"current-password\"]; ?>\" placeholder=\"<?php _se('Enter your current password'); ?>\" required>\n\t\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"current-password\"]; ?></span>\n\t\t\t\t\t\t<div class=\"input-below text-align-right\"><a href=\"<?php echo G\\get_base_url(\"account/password-forgot\"); ?>\"><?php _se('Forgot password?'); ?></a></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<?php\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t\t<div class=\"input-label input-password\">\n\t\t\t\t\t\t<label for=\"new-password\"><?php _se('New password'); ?></label>\n\t\t\t\t\t\t<input type=\"password\" name=\"new-password\" id=\"new-password\" class=\"text-input\" value=\"<?php echo get_safe_post()[\"new-password\"]; ?>\" pattern=\"<?php echo CHV\\getSetting('user_password_pattern'); ?>\" rel=\"tooltip\" title=\"<?php _se('%d characters min', CHV\\getSetting('user_password_min_length')); ?>\" data-tipTip=\"right\" placeholder=\"<?php _se('Enter your new password'); ?>\" required>\n\t\t\t\t\t\t<div class=\"input-password-strength\"><span style=\"width: 0%\" data-content=\"password-meter-bar\"></span></div>\n\t\t\t\t\t\t<span class=\"input-warning red-warning\" data-text=\"password-meter-message\"><?php echo get_input_errors()[\"new-password\"]; ?></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"input-label input-password\">\n\t\t\t\t\t\t<label for=\"new-password-confirm\"><?php _se('Confirm new password'); ?></label>\n\t\t\t\t\t\t<input type=\"password\" name=\"new-password-confirm\" id=\"new-password-confirm\" class=\"text-input\" value=\"<?php echo get_safe_post()[\"new-password-confirm\"]; ?>\" placeholder=\"<?php _se('Re-enter your new password'); ?>\" required>\n\t\t\t\t\t\t<span class=\"text-align-right input-warning input-below red-warning<?php echo get_input_errors()[\"new-password-confirm\"] ? \"\" : \" hidden-visibility\"; ?>\" data-text=\"<?php _se(\"Passwords don't match\"); ?>\"><?php if(get_input_errors()[\"new-password-confirm\"]) { echo _s(\"Passwords don't match\"); } ?></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<?php\n\t\t\t\t\t} else { // User must create a password\n\t\t\t\t?>\n\t\t\t\t<p><?php if(!is_dashboard_user()) { _se('Add a password to be able to login using your username or email.'); } else { _se(\"This user doesn't have a password. Add one using this form.\"); } ?></p>\n\t\t\t\t<div class=\"c9 phablet-c1\">\n\t\t\t\t\t<div class=\"input-label input-password\">\n\t\t\t\t\t\t<label for=\"new-password\"><?php _se('Password'); ?></label>\n\t\t\t\t\t\t<input type=\"password\" name=\"new-password\" id=\"new-password\" class=\"text-input\" value=\"<?php echo get_safe_post()[\"new-password\"]; ?>\" pattern=\"<?php echo CHV\\getSetting('user_password_pattern'); ?>\" rel=\"tooltip\" title=\"<?php _se('%d characters min', CHV\\getSetting('user_password_min_length')); ?>\" data-tipTip=\"right\" placeholder=\"<?php _se('Enter your password'); ?>\" required>\n\t\t\t\t\t\t<div class=\"input-password-strength\"><span style=\"width: 0%\" data-content=\"password-meter-bar\"></span></div>\n\t\t\t\t\t\t<span class=\"input-warning red-warning\" data-text=\"password-meter-message\"><?php echo get_input_errors()[\"new-password\"]; ?></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"input-label input-password\">\n\t\t\t\t\t\t<label for=\"new-password-confirm\"><?php _se('Confirm password'); ?></label>\n\t\t\t\t\t\t<input type=\"password\" name=\"new-password-confirm\" id=\"new-password-confirm\" class=\"text-input\" value=\"<?php echo get_safe_post()[\"new-password-confirm\"]; ?>\" maxlength=\"255\" placeholder=\"<?php _se('Re-enter your password'); ?>\" required>\n\t\t\t\t\t\t<span class=\"input-warning red-warning<?php echo get_input_errors()[\"new-password-confirm\"] ? \"\" : \" hidden-visibility\"; ?>\" data-text=\"<?php _se(\"Passwords don't match\"); ?>\"><?php _se(\"Passwords don't match\"); ?></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<?php\n\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t\t<?php } ?>\n\t\t\t\t\n\t\t\t\t<?php if(is_settings_profile()) { ?>\n\t\t\t\t<div class=\"c19 phablet-c1\">\n\t\t\t\t\t<div class=\"input-upload user-settings-avatar\">\n\t\t\t\t\t\t<div class=\"user-settings-avatar-container grid-columns margin-right-10 phablet-float-left\">\n\t\t\t\t\t\t\t<?php if(get_user()[\"avatar\"][\"url\"]) { ?>\n\t\t\t\t\t\t\t<img src=\"<?php echo get_user()[\"avatar\"][\"url\"]; ?>\" alt=\"\" class=\"user-image\">\n\t\t\t\t\t\t\t<?php } else { ?>\n\t\t\t\t\t\t\t<img src=\"\" alt=\"\" class=\"user-image<?php echo (!get_user()[\"avatar\"][\"url\"] ? ' hidden' : ''); ?>\">\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t<span class=\"user-image default-user-image<?php echo (get_user()[\"avatar\"][\"url\"] ? ' hidden' : ''); ?>\"><span class=\"icon icon-user\"></span></span>\n\t\t\t\t\t\t\t<div class=\"user-image loading-placeholder hidden\"><?php _se('loading'); ?></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"actions\">\n\t\t\t\t\t\t\t<div class=\"btn-container\">\n\t\t\t\t\t\t\t\t<a class=\"btn default\" data-trigger=\"user-avatar-upload\"><?php _se('Upload new image'); ?></a>\n\t\t\t\t\t\t\t\t<div class=\"<?php echo (get_user()[\"avatar\"] == NULL ? 'soft-hidden' : ''); ?>\">\n\t\t\t\t\t\t\t\t\t<span class=\"btn-alt\"><?php _se('or'); ?> <a data-action=\"delete-avatar\"><?php _se('Delete existing image'); ?></a></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input id=\"user-avatar-upload\" data-content=\"user-avatar-upload-input\" class=\"hidden-visibility\" type=\"file\" accept=\"image/*\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"input-label\">\n                    <label><?php _se('Privacy'); ?></label>\n\t\t\t\t\t<?php echo CHV\\Render\\get_checkbox_html([\n\t\t\t\t\t\t'name'\t\t=> 'is_private',\n\t\t\t\t\t\t'label'\t\t=> _s('Make my profile and identity totally private'),\n\t\t\t\t\t\t'tooltip'\t=> _s('Enable this if you want to act like an anonymous user'),\n\t\t\t\t\t\t'checked'\t=> ((bool)(get_safe_post() ? get_safe_post()['is_private'] : get_user()['is_private']))\n\t\t\t\t\t]); ?>      \n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"c9 phablet-c1\">\n\t\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t\t<label for=\"name\"><?php _se('Name'); ?></label>\n\t\t\t\t\t\t<input type=\"text\" name=\"name\" id=\"name\" class=\"text-input\" maxlength=\"60\" value=\"<?php echo get_safe_post() ? get_safe_post()[\"name\"] : get_safe_html_user()[\"name\"]; ?>\" placeholder=\"Your real name\" required>\n\t\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"name\"]; ?></span>\n\t\t\t\t\t\t<?php if(!is_dashboard_user()) { ?><div class=\"input-below\"><?php _se('This is your real name, not your username.'); ?></div><?php } ?>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t\t<label for=\"website\"><?php _se('Website'); ?></label>\n\t\t\t\t\t\t<input type=\"url\" name=\"website\" id=\"website\" class=\"text-input\" value=\"<?php echo get_safe_post() ? get_safe_post()[\"website\"] : get_user()[\"website_safe_html\"]; ?>\" data-validate rel=\"tooltip\" title=\"<?php _se('http://yourwebsite.com'); ?>\" data-tipTip=\"right\" placeholder=\"<?php _se('http://yourwebsite.com'); ?>\">\n\t\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"website\"]; ?></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t\t<label for=\"bio\"><?php _se('Bio'); ?></label>\n\t\t\t\t\t\t<textarea name=\"bio\" id=\"bio\" class=\"resize-vertical\" placeholder=\"<?php _se('Tell us a little bit about you'); ?>\" maxlength=\"255\"><?php echo get_safe_post() ? get_safe_post()[\"bio\"] : get_user()[\"bio\"]; ?></textarea>\n\t\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"bio\"]; ?></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<?php } ?>\n\t\t\t\t\n\t\t\t\t<?php\n\t\t\t\t\tif(is_settings_linked_accounts()) {\n\n\t\t\t\t\t\tif(is_dashboard_user()) {\n\t\t\t\t?>\n\t\t\t\t<p data-content=\"empty-message\" <?php if(count(get_connections()) > 0) { ?>class=\"soft-hidden\"<?php } ?>><?php _se('User has no connections.'); ?></p>\n\t\t\t\t<?php\n\t\t\t\t\t\t} else {\n\t\t\t\t?>\n\t\t\t\t<p><?php _se('Link your account to external services to be able to login and share content.'); ?></p>\n\t\t\t\t<?php\n\t\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t\t<?php\n\t\t\t\t\t\tforeach(get_connections() as $connection) {\n\t\t\t\t\t\t\tif(is_dashboard_user()) {\n\t\t\t\t\t\t\t\t$confirm_message = _s('Do you really want to disconnect %s from this account?', $connection['type_label']);\n\t\t\t\t\t\t\t\t$title = _s('This account is connected to %s', $connection['type_label']);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$confirm_message = _s('Do you really want to disconnect your %s account?', $connection['type_label']);\n\t\t\t\t\t\t\t\tif(CHV\\Login::getSession()['type'] == $connection['type']) {\n\t\t\t\t\t\t\t\t\t$confirm_message .= ' ' . _s(\"You will be logged out and you won't be able to login to your account using this %s account.\", $connection['type_label']);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$title = _s('Your account is connected to %s', $connection['type_label']);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$title .= ' (<a href=\"'.$connection['resource_url'].'\" target=\"_blank\">'.$connection['resource_name'].'</a>)';\n\t\t\t\t?>\n\t\t\t\t<div class=\"account-link account-linked input-label overflow-auto\" data-connection=\"<?php echo $connection['type']; ?>\">\n\t\t\t\t\t<h3><span class=\"btn-icon icon-<?php echo $connection['type']; ?>\"></span> <?php echo $connection['type_label'];?> <a class=\"font-size-small margin-left-5\" data-action=\"disconnect\" data-connection=\"<?php echo $connection['type']; ?>\" data-confirm-message=\"<?php echo $confirm_message; ?>\"><?php _se('disconnect'); ?></a></h3>\n\t\t\t\t\t<div class=\"account-link-status\"><?php echo $title; ?></div>\n\t\t\t\t</div>\n\t\t\t\t<?php\n\t\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t\t\n\t\t\t\t<?php\n\t\t\t\t\t\tif(!is_dashboard_user()) {\n\t\t\t\t\t\t\tforeach(get_available_connections() as $connection => $label) {\n\t\t\t\t?>\n\t\t\t\t<div class=\"account-link input-label<?php if(get_connections()[$connection]) echo ' soft-hidden'; ?>\" data-connect=\"<?php echo $connection; ?>\">\n\t\t\t\t\t<h3><?php echo $label; ?></h3>\n\t\t\t\t\t<a class=\"link-service link-<?php echo $connection; ?>\" href=\"<?php echo G\\get_base_url('connect/'.$connection.'/?return='.urlencode('settings/linked-accounts')); ?>\"><span class=\"btn-icon icon-<?php echo $connection; ?>\"></span><span class=\"sign-text\"><?php echo _se('Connect %s', $label); ?></span></a>\n\t\t\t\t</div>\n\t\t\t\t<?php\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t\t\n\t\t\t\t<?php } ?>\n\t\t\t\t\n\t\t\t\t<?php if(is_settings_homepage()) { ?>\n\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t<label for=\"homepage_title_html\"><?php _se('Title'); ?></label>\n\t\t\t\t\t<div class=\"c12 phablet-c1\"><textarea type=\"text\" name=\"homepage_title_html\" id=\"homepage_title_html\" class=\"text-input r2 resize-vertical\" placeholder=\"<?php echo get_user()['name']; ?>\"><?php echo CHV\\Settings::get('homepage_title_html'); ?></textarea></div>\n\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"homepage_title_html\"]; ?></span>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t<label for=\"homepage_paragraph_html\"><?php _se('Paragraph'); ?></label>\n\t\t\t\t\t<div class=\"c12 phablet-c1\"><textarea type=\"text\" name=\"homepage_paragraph_html\" id=\"homepage_paragraph_html\" class=\"text-input r2 resize-vertical\" placeholder=\"<?php _se('Feel free to browse and discover all my shared images and albums.'); ?>\"><?php echo CHV\\Settings::get('homepage_paragraph_html'); ?></textarea></div>\n\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"homepage_paragraph_html\"]; ?></span>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t<label for=\"homepage_cta_html\"><?php _se('Button'); ?></label>\n\t\t\t\t\t<div class=\"c12 phablet-c1\"><textarea type=\"text\" name=\"homepage_cta_html\" id=\"homepage_cta_html\" class=\"text-input r2 resize-vertical\" placeholder=\"<?php _se('View all my images'); ?>\"><?php echo CHV\\Settings::get('homepage_cta_html'); ?></textarea></div>\n\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"homepage_cta_html\"]; ?></span>\n\t\t\t\t</div>\n\t\t\t\t<?php } ?>\n\t\t\t\t\n\t\t\t\t<hr class=\"line-separator\"></hr>\n\t\t\t\t\n\t\t\t\t<?php if(is_captcha_needed()) { ?>\n\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t<label for=\"recaptcha_response_field\">reCAPTCHA</label>\n\t\t\t\t\t<?php echo get_recaptcha_html(); ?>\n\t\t\t\t</div>\n\t\t\t\t<?php } ?>\n\t\t\t\t\n\t\t\t\t<?php if(!is_settings_linked_accounts()) { ?>\n\t\t\t\t<div class=\"btn-container\">\n\t\t\t\t\t<button class=\"btn btn-input default\" type=\"submit\"><?php _se('Save changes'); ?></button> <span class=\"btn-alt\"><?php _se('or'); ?> <a href=\"<?php echo get_user()[\"url\"]; ?>\"><?php _se('cancel'); ?></a></span>\n\t\t\t\t</div>\n\t\t\t\t<?php } ?>\n\t\t\t\n\t\t\t</form>\n\t\t</div>\n\t\n\t</div>\n    \n</div>\n\n<?php if(get_post() and (is_changed() or is_error())) { ?>\n<script>\n$(function() {\n\tPF.fn.growl.expirable(\"<?php echo is_changed() ? (get_changed_message() ? get_changed_message() : _s('Changes have been saved.')) : _s('Check the errors to proceed.'); ?>\");\n});\n</script>\n<?php } ?>\n\n<?php G\\Render\\include_theme_footer(); ?>"], "fixing_code": ["<?php\ndefine('G_APP_NAME', 'Chevereto Free');\ndefine('G_APP_VERSION', '1.0.13');\ndefine('G_APP_GITHUB_OWNER', 'Chevereto');\ndefine('G_APP_GITHUB_REPO', 'Chevereto-Free');\ndefine('G_APP_GITHUB_REPO_URL', 'https://github.com/' . G_APP_GITHUB_OWNER . '/' . G_APP_GITHUB_REPO);\ndefine('CHEVERETO_INSTALLER_DOWNLOAD_URL', 'https://chevereto.com/download/file/installer');", "<?php\n\n/* --------------------------------------------------------------------\n  Chevereto\n  http://chevereto.com/\n\n  @author\tRodolfo Berrios A. <http://rodolfoberrios.com/>\n\t\t\t<inbox@rodolfoberrios.com>\n\n  Copyright (C) Rodolfo Berrios A. All rights reserved.\n\n  BY USING THIS SOFTWARE YOU DECLARE TO ACCEPT THE CHEVERETO EULA\n  http://chevereto.com/license\n\n  --------------------------------------------------------------------- */\n\nnamespace CHV;\nuse G, Exception;\n\nif(!defined('access') or !access) die('This file cannot be directly accessed.');\n\ntry {\n\n\tif(!is_null(getSetting('chevereto_version_installed')) and !Login::getUser()['is_admin']) {\n\t\tG\\set_status_header(403);\n\t\tdie('Request denied. You must be an admin to be here.');\n\t}\n\n    set_time_limit(600); // This could take up to 10 minutes...\n\n\tif(function_exists('opcache_reset')) {\n\t\topcache_reset(); // Try to flush OPCache\n\t}\n\n\t$doctitles = [\n\t\t'connect' \t=> 'Connect to the database',\n\t\t'ready'\t\t=> 'Ready to install',\n\t\t'finished'\t=> 'Installation complete',\n\t\t'settings'\t=> 'Update settings.php',\n\t\t'already'\t=> 'Already installed',\n\t\t'update'\t=> 'Update needed',\n\t\t'updated'\t=> 'Update complete',\n\t\t'update_failed' => 'Update failed'\n\t];\n\n\t$doing = 'connect'; // default initial state\n\n\t$db_array = [\n\t\t'db_host' => true,\n\t\t'db_name' => true,\n\t\t'db_user' => true,\n\t\t'db_pass' => false,\n\t\t'db_table_prefix' => false\n\t];\n\n\t$error = false;\n\t$db_conn_error = \"Can't connect to the target database. The server replied with this:<br>%s<br><br>Please fix your MySQL info.\";\n\n\t$settings_updates = [\n\t\t'1.0.0' => [\n\t\t\t'analytics_code' => NULL,\n\t\t\t'auto_language' => 1,\n\t\t\t'chevereto_version_installed' => G_APP_VERSION,\n\t\t\t'cloudflare' => NULL,\n\t\t\t'comment_code' => NULL,\n\t\t\t'crypt_salt' => G\\random_string(8),\n\t\t\t'default_language' => 'en',\n\t\t\t'default_timezone' => 'America/Santiago',\n\t\t\t'email_from_email' => '', // no-reply@chevereto.com\n\t\t\t'email_from_name' => 'Chevereto',\n\t\t\t'email_incoming_email' => '', // inbox@chevereto.com\n\t\t\t'email_mode' => 'mail',\n\t\t\t'email_smtp_server' => NULL,\n\t\t\t'email_smtp_server_password' => NULL,\n\t\t\t'email_smtp_server_port' => NULL,\n\t\t\t'email_smtp_server_security' => NULL,\n\t\t\t'email_smtp_server_username' => NULL,\n\t\t\t'enable_uploads' => 1,\n\t\t\t'error_reporting' => 0,\n\t\t\t'facebook' => 0,\n\t\t\t'facebook_app_id' => NULL,\n\t\t\t'facebook_app_secret' => NULL,\n\t\t\t'flood_uploads_day' => '1000',\n\t\t\t'flood_uploads_hour' => '500',\n\t\t\t'flood_uploads_minute' => '50',\n\t\t\t'flood_uploads_month' => '10000',\n\t\t\t'flood_uploads_notify' => 0,\n\t\t\t'flood_uploads_protection' => 1,\n\t\t\t'flood_uploads_week' => '5000',\n\t\t\t'google' => 0,\n\t\t\t'google_client_id' => NULL,\n\t\t\t'google_client_secret' => NULL,\n\t\t\t'guest_uploads' => 1,\n\t\t\t'listing_items_per_page' => 24,\n\t\t\t'maintenance' => 0,\n\t\t\t'recaptcha' => 0,\n\t\t\t'recaptcha_private_key' => NULL,\n\t\t\t'recaptcha_public_key' => NULL,\n\t\t\t'recaptcha_threshold' => 5,\n\t\t\t'theme' => 'Peafowl',\n\t\t\t'twitter' => 0,\n\t\t\t'twitter_api_key' => NULL,\n\t\t\t'twitter_api_secret' => NULL,\n\t\t\t'upload_filenaming' => 'original',\n\t\t\t'upload_image_path' => 'images',\n\t\t\t'upload_max_filesize_mb' => min(10, G\\bytes_to_mb(G\\get_ini_bytes(ini_get('upload_max_filesize')))),\n\t\t\t'upload_storage_mode' => 'datefolder',\n\t\t\t'upload_thumb_height' => '160',\n\t\t\t'upload_thumb_width' => '160',\n\t\t\t'website_description' => 'A free image hosting service powered by Chevereto',\n\t\t\t'website_doctitle' => 'Chevereto image hosting',\n\t\t\t'website_name' => 'Chevereto',\n\t\t\t'website_explore_page' => 1,\n\t\t\t'twitter_account' => 'chevereto',\n\t\t\t'enable_signups' => 1,\n\t\t\t'favicon_image' => 'favicon.png',\n\t\t\t'logo_image' => 'logo.png',\n\t\t\t'logo_vector' => 'logo.svg',\n\t\t\t'theme_custom_css_code' => NULL,\n\t\t\t'theme_custom_js_code' => NULL,\n\t\t\t'website_keywords' => 'image sharing, image hosting, chevereto',\n\t\t\t'logo_vector_enable' => 0,\n\t\t\t'watermark_enable' => 0,\n\t\t\t'watermark_image' => 'watermark.png',\n\t\t\t'watermark_position' => 'center center',\n\t\t\t'watermark_margin' => '10',\n\t\t\t'watermark_opacity' => '50',\n\t\t\t'api_v1_key' => G\\random_string(32),\n\t\t\t'listing_pagination_mode' => 'classic',\n\t\t\t'show_nsfw_in_listings'\t=> 0,\n\t\t\t'show_banners_in_nsfw' => 0,\n\t\t\t'website_privacy_mode' => 'public',\n\t\t\t'website_content_privacy_mode' => 'default',\n\t\t\t'show_nsfw_in_random_mode' => 0,\n\t\t\t'cdn' => 0,\n\t\t\t'cdn_url' => NULL,\n\t\t\t'website_search' => 1,\n\t\t\t'website_random' => 1,\n\t\t\t'theme_logo_height' => NULL,\n\t\t\t'theme_show_social_share' => 1,\n\t\t\t'theme_show_embed_content' => 1,\n\t\t\t'theme_show_embed_uploader' => 1,\n\t\t\t'user_routing'\t\t\t\t\t  => 1,\n\t\t\t'require_user_email_confirmation' => 1,\n\t\t\t'require_user_email_social_signup'=> 1,\n\t\t\t'last_used_storage' => NULL,\n\t\t\t'vk' => 0,\n\t\t\t'vk_client_id' => NULL,\n\t\t\t'vk_client_secret' => NULL,\n\t\t\t'theme_download_button' \t=> 1,\n\t\t\t'theme_nsfw_upload_checkbox'=> 1,\n\t\t\t'theme_tone' \t\t\t\t=> 'light',\n\t\t\t'theme_image_listing_sizing'=> 'fixed',\n\t\t\t'listing_columns_phone'\t\t=> '1',\n\t\t\t'listing_columns_phablet'\t=> '3',\n\t\t\t'listing_columns_tablet'\t=> '4',\n\t\t\t'listing_columns_laptop'\t=> '5',\n\t\t\t'listing_columns_desktop'\t=> '6',\n\t\t\t'homepage_style'\t\t\t=> 'landing',\n\t\t\t'homepage_cover_image'\t\t=> NULL,\n\t\t\t'homepage_uids'\t\t\t\t=> '1',\n\t\t\t'homepage_endless_mode' \t=> 0,\n\t\t\t'user_image_avatar_max_filesize_mb'\t\t=> '1',\n\t\t\t'user_image_background_max_filesize_mb'\t=> '2',\n\t\t\t'theme_image_right_click' => 0,\n\t\t\t'minify_enable'\t\t\t\t=> 1,\n\t\t\t'theme_show_exif_data'\t\t=> 1,\n\t\t\t'theme_top_bar_color'\t\t=> 'white',\n\t\t\t'theme_main_color'\t\t\t=> NULL,\n\t\t\t'theme_top_bar_button_color'=> 'blue',\n\t\t\t'logo_image_homepage'\t\t=> NULL,\n\t\t\t'logo_vector_homepage'\t\t=> NULL,\n\t\t\t'homepage_cta_color'\t\t=> 'green',\n\t\t\t'homepage_cta_outline'\t\t=> 0,\n\t\t\t'watermark_enable_guest'\t=> 1,\n\t\t\t'watermark_enable_user'\t\t=> 1,\n\t\t\t'watermark_enable_admin'\t=> 1,\n\t\t\t'homepage_title_html'\t\t=> NULL,\n\t\t\t'homepage_paragraph_html'\t=> NULL,\n\t\t\t'homepage_cta_html'\t\t\t=> NULL,\n\t\t\t'homepage_cta_fn'\t\t\t=> NULL,\n\t\t\t'homepage_cta_fn_extra'\t\t=> NULL,\n\t\t\t'language_chooser_enable'\t=> 1,\n\t\t\t'languages_disable'\t\t\t=> NULL,\n\t\t\t'website_mode'\t\t\t\t\t=> 'community',\n\t\t\t'website_mode_personal_routing'\t=> NULL, //'single_user_mode_routing'\n\t\t\t'website_mode_personal_uid'\t\t=> NULL, //'single_user_mode_id'\n\t\t\t'enable_cookie_law' => 0,\n\t\t\t'theme_nsfw_blur'\t=> 0,\n\t\t\t'watermark_target_min_width'\t=> '100',\n\t\t\t'watermark_target_min_height'\t=> '100',\n\t\t\t'watermark_percentage'\t\t\t=> '4',\n\t\t\t'watermark_enable_file_gif'\t\t=> 0,\n\t\t\t'id_padding'\t=> '0', // 0-> Update | 5000-> new install\n            'upload_image_exif'              \t\t=> 1,\n            'upload_image_exif_user_setting' \t\t=> 1,\n            'enable_expirable_uploads'       \t\t=> 1,\n\t\t\t'upload_medium_size' => '500',\n\t\t\t'upload_medium_fixed_dimension' => 'width',\n\t\t\t'enable_followers' \t\t\t\t=> 0,\n\t\t\t'enable_likes'\t\t\t\t\t=> 0,\n\t\t\t'enable_consent_screen'\t\t\t=> 0,\n\t\t\t'user_minimum_age'\t\t\t\t=> NULL,\n\t\t\t'consent_screen_cover_image'\t=> NULL,\n\t\t\t'enable_redirect_single_upload'\t=> 1,\n\t\t\t'route_image'\t\t\t\t\t=> 'image',\n\t\t\t'route_album'\t\t\t\t\t=> 'album',\n\t\t\t'enable_duplicate_uploads'\t\t\t=> 0,\n\t\t\t'update_check_datetimegmt'\t\t\t=> NULL,\n\t\t\t'update_check_notified_release'\t\t=> G_APP_VERSION,\n\t\t\t'update_check_display_notification'\t=> 1,\n\t\t],\n\t\t'1.0.1' => NULL,\n\t\t'1.0.2' => NULL,\n\t\t'1.0.3' => [\n\t\t\t'upload_enabled_image_formats'\t=> 'jpg,png,bmp,gif',\n\t\t\t'upload_threads'\t\t\t\t=> '2',\n\t\t\t'enable_automatic_updates_check'=> 1,\n\t\t],\n\t\t'1.0.4' => NULL,\n\t\t'1.0.5' => [\n\t\t\t'comments_api'\t\t\t\t\t=> 'js',\n\t\t\t'disqus_shortname'\t\t\t\t=> NULL,\n\t\t\t'disqus_public_key'\t\t\t\t=> NULL,\n\t\t\t'disqus_secret_key'\t\t\t\t=> NULL,\n\t\t],\n\t\t'1.0.6' => [\n\t\t\t'image_load_max_filesize_mb' => '3',\n\t\t],\n\t\t'1.0.7' => NULL,\n\t\t// 3.8.13\n\t\t'1.0.8' => [\n\t\t\t'upload_max_image_width' => '0',\n\t\t\t'upload_max_image_height'=> '0',\n\t\t],\n\t\t// 3.9.5\n\t\t'1.0.9' => [\n\t\t\t'auto_delete_guest_uploads' => NULL,\n\t\t],\n\t\t'1.0.10' => [\n\t\t\t'enable_user_content_delete' => 1,\n\t\t\t'enable_plugin_route' => 1,\n\t\t\t'sdk_pup_url' => NULL,\n\t\t],\n\t\t'1.0.11' => NULL,\n\t\t'1.0.12' => NULL,\n\t\t'1.0.13' => NULL,\n\t];\n\t// Settings that must be renamed from NAME to NEW NAME and DELETE old NAME\n\t$settings_rename = [];\n\n\t// Settings that must be renamed from NAME to NEW NAME and doesn't delete old NAME\n\t$settings_switch = [];\n\n\t$chv_initial_settings = [];\n\tforeach($settings_updates as $k => $v) {\n\t\tif(is_null($v)) continue;\n\t\t$chv_initial_settings += $v;\n\t}\n\n\t// Detect 2.X\n\ttry {\n\t\t$is_2X = DB::get('info', ['key' => 'version']) ? true : false;\n\t} catch(Exception $e) {\n\t\t$is_2X = false;\n\t}\n\n\t/* Stats query from 3.7.0 up to 3.8.13 */\n\t$stats_query_legacy = 'TRUNCATE TABLE `%table_prefix%stats`;\n\nINSERT INTO `%table_prefix%stats` (stat_id, stat_date_gmt, stat_type) VALUES (\"1\", NULL, \"total\") ON DUPLICATE KEY UPDATE stat_type=stat_type;\n\nUPDATE `%table_prefix%stats` SET\nstat_images = (SELECT IFNULL(COUNT(*),0) FROM `%table_prefix%images`),\nstat_albums = (SELECT IFNULL(COUNT(*),0) FROM `%table_prefix%albums`),\nstat_users = (SELECT IFNULL(COUNT(*),0) FROM `%table_prefix%users`),\nstat_image_views = (SELECT IFNULL(SUM(image_views),0) FROM `%table_prefix%images`),\nstat_disk_used = (SELECT IFNULL(SUM(image_size) + SUM(image_thumb_size) + SUM(image_medium_size),0) FROM `%table_prefix%images`)\nWHERE stat_type = \"total\";\n\nINSERT INTO `%table_prefix%stats` (stat_type, stat_date_gmt, stat_images, stat_image_views, stat_disk_used)\nSELECT sb.stat_type, sb.stat_date_gmt, sb.stat_images, sb.stat_image_views, sb.stat_disk_used\nFROM (SELECT \"date\" AS stat_type, DATE(image_date_gmt) AS stat_date_gmt, COUNT(*) AS stat_images, SUM(image_views) AS stat_image_views, SUM(image_size + image_thumb_size + image_medium_size) AS stat_disk_used FROM `%table_prefix%images` GROUP BY DATE(image_date_gmt)) AS sb\nON DUPLICATE KEY UPDATE stat_images = sb.stat_images;\n\nINSERT INTO `%table_prefix%stats` (stat_type, stat_date_gmt, stat_users)\nSELECT sb.stat_type, sb.stat_date_gmt, sb.stat_users\nFROM (SELECT \"date\" AS stat_type, DATE(user_date_gmt) AS stat_date_gmt, COUNT(*) AS stat_users FROM `%table_prefix%users` GROUP BY DATE(user_date_gmt)) AS sb\nON DUPLICATE KEY UPDATE stat_users = sb.stat_users;\n\nINSERT INTO `%table_prefix%stats` (stat_type, stat_date_gmt, stat_albums)\nSELECT sb.stat_type, sb.stat_date_gmt, sb.stat_albums\nFROM (SELECT \"date\" AS stat_type, DATE(album_date_gmt) AS stat_date_gmt, COUNT(*) AS stat_albums FROM `%table_prefix%albums` GROUP BY DATE(album_date_gmt)) AS sb\nON DUPLICATE KEY UPDATE stat_albums = sb.stat_albums;\n\nUPDATE `%table_prefix%users` SET user_content_views = COALESCE((SELECT SUM(image_views) FROM `%table_prefix%images` WHERE image_user_id = user_id GROUP BY user_id), \"0\");';\n\n\t// Fulltext engine\n\tif(G\\settings_has_db_info()) {\n\t\t$db = DB::getInstance();\n\t\t$fulltext_engine = version_compare($db->getAttr(\\PDO::ATTR_SERVER_VERSION), '5.6', '<') ? 'MyISAM' : 'InnoDB';\n\t}\n\n\t// settings.php contains db\n\tif(G\\settings_has_db_info() and !$_POST) {\n\n\t\t// Chevereto already installed?\n\t\t$installed_version = getSetting('chevereto_version_installed');\n\t\t$maintenance = getSetting('maintenance');\n\n\t\t// Get the setting rows from DB (to avoid overwrite)\n\t\t$db_settings_keys = [];\n\t\ttry {\n\t\t\t$db_settings = DB::get('settings', 'all');\n\t\t\tforeach($db_settings as $k => $v) {\n\t\t\t\t$db_settings_keys[] = $v['setting_name'];\n\t\t\t}\n\t\t} catch(Exception $e) {}\n\n\t\t// Update procedure\n\t\tif((!empty($db_settings_keys) && count($chv_initial_settings) !== count($db_settings_keys)) || (!is_null($installed_version) and version_compare(G_APP_VERSION, $installed_version, '>'))) {\n\n\t\t\tif(!array_key_exists(G_APP_VERSION, $settings_updates)) {\n\t\t\t\tdie('Fatal error: app/install is outdated. You need to re-upload app/install folder with the one from Chevereto ' . G_APP_VERSION);\n\t\t\t}\n\n\t\t\t// Get database schema\n\t\t\t$schema = [];\n\t\t\t$raw_schema = DB::queryFetchAll('SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=\"'.G_APP_DB_NAME.'\" AND TABLE_NAME LIKE \"'. G\\get_app_setting('db_table_prefix') .'%\";');\n\n\t\t\tforeach($raw_schema as $k => $v) {\n\t\t\t\t$TABLE = preg_replace('#'.G\\get_app_setting('db_table_prefix').'#i', '', strtolower($v['TABLE_NAME']), 1);\n\n\t\t\t\t$COLUMN = $v['COLUMN_NAME'];\n\t\t\t\tif(!array_key_exists($TABLE, $schema)) {\n\t\t\t\t\t$schema[$TABLE] = [];\n\t\t\t\t}\n\t\t\t\t$schema[$TABLE][$COLUMN] = $v;\n\t\t\t}\n\n\t\t\t// Remove triggers\n\t\t\t$triggers_to_remove = [\n\t\t\t\t'album_insert',\n\t\t\t\t'album_delete',\n\t\t\t\t'follow_insert',\n\t\t\t\t'follow_delete',\n\t\t\t\t'image_insert',\n\t\t\t\t'image_update',\n\t\t\t\t'image_delete',\n\t\t\t\t'like_insert',\n\t\t\t\t'like_delete',\n\t\t\t\t'notification_insert',\n\t\t\t\t'notification_update',\n\t\t\t\t'notification_delete',\n\t\t\t\t'user_insert',\n\t\t\t\t'user_delete'\n\t\t\t];\n\t\t\t// Get DB triggers\n\t\t\t$db_triggers = DB::queryFetchAll('SELECT TRIGGER_NAME FROM INFORMATION_SCHEMA.TRIGGERS');\n\t\t\tif($db_triggers) {\n\t\t\t\t$drop_trigger_sql = NULL;\n\t\t\t\tforeach($db_triggers as $k => $v) {\n\t\t\t\t\t$trigger = $v['TRIGGER_NAME'];\n\t\t\t\t\tif(in_array($v['TRIGGER_NAME'], $triggers_to_remove)) {\n\t\t\t\t\t\t$drop_trigger = 'DROP TRIGGER IF EXISTS `'.$v['TRIGGER_NAME'].'`;' . \"\\n\";\n\t\t\t\t\t\t$drop_trigger_sql .= $drop_trigger;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!is_null($drop_trigger_sql)) {\n\t\t\t\t\t$drop_trigger_sql = rtrim($drop_trigger_sql, \"\\n\");\n\t\t\t\t\t$remove_triggers = FALSE;\n\t\t\t\t\t$remove_triggers = DB::queryExec($drop_trigger_sql);\n\t\t\t\t\tif(!$remove_triggers) {\n\t\t\t\t\t\tRender\\chevereto_die(NULL, 'To procced you will need to run these queries in your database server: <br><br> <textarea class=\"resize-vertical highlight r5\">'.$drop_trigger_sql.'</textarea>', \"Can't remove table triggers\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Get DB indexes\n\t\t\t$DB_indexes = [];\n\t\t\t$raw_indexes = DB::queryFetchAll('SELECT DISTINCT TABLE_NAME, INDEX_NAME, INDEX_TYPE FROM INFORMATION_SCHEMA.STATISTICS WHERE TABLE_SCHEMA = \"'.G_APP_DB_NAME.'\"');\n\n\t\t\tforeach($raw_indexes as $k => $v) {\n\t\t\t\t$TABLE = preg_replace('#'.G\\get_app_setting('db_table_prefix').'#i', '', strtolower($v['TABLE_NAME']), 1);\n\t\t\t\t$INDEX_NAME = $v['INDEX_NAME'];\n\t\t\t\tif(!array_key_exists($TABLE, $DB_indexes)) {\n\t\t\t\t\t$DB_indexes[$TABLE] = [];\n\t\t\t\t}\n\t\t\t\t$DB_indexes[$TABLE][$INDEX_NAME] = $v;\n\t\t\t}\n\n\t\t\t// Get needed KEY indexes (only for tables that already exists)\n\t\t\t$CHV_indexes = [];\n\t\t\tforeach(new \\DirectoryIterator(CHV_APP_PATH_INSTALL . 'sql') as $fileInfo) {\n\t\t\t\tif($fileInfo->isDot() or $fileInfo->isDir() or !array_key_exists($fileInfo->getBasename('.sql'), $schema)) continue;\n\t\t\t\t$crate_table = file_get_contents(realpath($fileInfo->getPathname()));\n\t\t\t\tif(preg_match_all('/KEY [`\\(]+(\\w+)/', $crate_table, $matches)) {\n\t\t\t\t\t$CHV_indexes[$fileInfo->getBasename('.sql')] = $matches[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Get database engines\n\t\t\t$engines = [];\n\t\t\t$raw_engines = DB::queryFetchAll('SELECT TABLE_NAME, ENGINE FROM information_schema.TABLES WHERE TABLE_SCHEMA = \"'.G_APP_DB_NAME.'\"');\n\n\t\t\tforeach($raw_engines as $k => $v) {\n\t\t\t\t$TABLE = preg_replace('#'.G\\get_app_setting('db_table_prefix').'#i', '', strtolower($v['TABLE_NAME']), 1);\n\t\t\t\t$engines[$TABLE] = $v['ENGINE'];\n\t\t\t}\n\n\t\t\t// Set the right table schema changes per release\n\t\t\t$update_table = [\n\t\t\t\t'1.0.9' => [\n\t\t\t\t\t'albums' => [\n\t\t\t\t\t\t'album_views' => [\n\t\t\t\t\t\t\t'op'\t=> 'ADD',\n\t\t\t\t\t\t\t'type'\t=> 'bigint(32)',\n\t\t\t\t\t\t\t'prop'\t=> \"NOT NULL DEFAULT '0'\",\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t'likes' => [\n\t\t\t\t\t\t'like_content_type' => [\n\t\t\t\t\t\t\t'op'\t\t=> 'MODIFY',\n\t\t\t\t\t\t\t'type'\t\t=> \"enum('image','album')\",\n\t\t\t\t\t\t\t'prop'\t\t=> 'DEFAULT NULL'\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t'notifications' => [\n\t\t\t\t\t\t'notification_content_type' => [\n\t\t\t\t\t\t\t'op'\t\t=> 'MODIFY',\n\t\t\t\t\t\t\t'type'\t\t=> \"enum('user','image','album')\",\n\t\t\t\t\t\t\t'prop'\t\t=> 'NOT NULL'\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t'stats' => [\n\t\t\t\t\t\t'stat_album_views' => [\n\t\t\t\t\t\t\t'op'\t=> 'ADD',\n\t\t\t\t\t\t\t'type'\t=> 'bigint(32)',\n\t\t\t\t\t\t\t'prop'\t=> \"NOT NULL DEFAULT '0'\",\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'stat_album_likes' => [\n\t\t\t\t\t\t\t'op'\t=> 'ADD',\n\t\t\t\t\t\t\t'type'\t=> 'bigint(32)',\n\t\t\t\t\t\t\t'prop'\t=> \"NOT NULL DEFAULT '0'\",\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'stat_likes' => [\n\t\t\t\t\t\t\t'op'\t=> 'CHANGE',\n\t\t\t\t\t\t\t'to'\t=> 'stat_image_likes',\n\t\t\t\t\t\t\t'type'\t=> 'bigint(32)',\n\t\t\t\t\t\t\t'prop'\t=> \"NOT NULL DEFAULT '0'\",\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t]\n\t\t\t];\n\n\t\t\t$sql_update = [];\n\n\t\t\t// Turn ON maintenance mode (if needed)\n\t\t\tif(!$maintenance) {\n\t\t\t\t$sql_update[] = \"UPDATE `%table_prefix%settings` SET `setting_value` = 1 WHERE `setting_name` = 'maintenance';\";\n\t\t\t}\n\n\t\t\t// SQLize the $update_table\n\t\t\t$required_sql_files = [];\n\t\t\tforeach($update_table as $version => $changes) {\n\n\t\t\t\tforeach($changes as $table => $columns) {\n\n\t\t\t\t\tif($table == 'query') continue;\n\n\t\t\t\t\t$schema_table = $schema[$table];\n\n\t\t\t\t\t$create_table = false;\n\t\t\t\t\t// Create table if it doesn't exists\n\t\t\t\t\tif(!array_key_exists($table, $schema) and !in_array($table, $required_sql_files)) {\n\t\t\t\t\t\t$create_table = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Special workaround for storages table\n\t\t\t\t\t\tif($table=='storages' and !array_key_exists('storage_bucket', $schema_table)) {\n\t\t\t\t\t\t\t$create_table = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Missing table\n\t\t\t\t\tif(!in_array($table, $required_sql_files) and $create_table) {\n\t\t\t\t\t\t$sql_update[] = file_get_contents(CHV_APP_PATH_INSTALL . 'sql/'.$table.'.sql');\n\t\t\t\t\t\t$required_sql_files[] = $table;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If the table was added from scratch then skip the rest of the columns scheme\n\t\t\t\t\tif(in_array($table, $required_sql_files)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Is a table op..\n\t\t\t\t\tif($columns['op']) {\n\t\t\t\t\t\tswitch($columns['op']) {\n\t\t\t\t\t\t\tcase 'ALTER':\n\t\t\t\t\t\t\t\t// Duplicated index\n\t\t\t\t\t\t\t\tif($DB_indexes[$table]['searchindex'] and strpos($columns['prop'], 'CREATE FULLTEXT INDEX `searchindex`') !== false) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$sql_update[] = strtr('ALTER TABLE `%table_prefix%'.$table.'` %prop; %tail', ['%prop' => $columns['prop'], '%tail' => $columns['tail']]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check the columns scheme\n\t\t\t\t\tforeach($columns as $column => $column_meta) {\n\n\t\t\t\t\t\t$query = NULL; // reset\n\t\t\t\t\t\t$schema_column = $schema_table[$column];\n\n\t\t\t\t\t\tswitch($column_meta['op']) {\n\t\t\t\t\t\t\tcase 'MODIFY':\n\t\t\t\t\t\t\t\tif(array_key_exists($column, $schema[$table]) and ($schema_column['COLUMN_TYPE'] !== $column_meta['type'] or (preg_match('/DEFAULT NULL/i', $column_meta['prop']) and $schema_column['IS_NULLABLE'] == 'NO'))) {\n\t\t\t\t\t\t\t\t\t$query = '`%column` %type';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'CHANGE':\n\t\t\t\t\t\t\t\tif(array_key_exists($column, $schema[$table])) {\n\t\t\t\t\t\t\t\t\t$query = '`%column` `%to` %type';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'ADD':\n\t\t\t\t\t\t\t\tif(!array_key_exists($column, $schema[$table])) {\n\t\t\t\t\t\t\t\t\t$query = '`%column` %type';\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!is_null($query)) {\n\t\t\t\t\t\t\t$stock_tr = ['op', 'type', 'to', 'prop', 'tail'];\n\t\t\t\t\t\t\t$meta_tr = [];\n\t\t\t\t\t\t\tforeach($stock_tr as $v) {\n\t\t\t\t\t\t\t\t$meta_tr['%'.$v] = $column_meta[$v];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$sql_update[] = strtr('ALTER TABLE `%table_prefix%'.$table.'` %op ' . $query . ' %prop; %tail', array_merge(['%column'\t=> $column], $meta_tr));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif($changes['query']) {\n\t\t\t\t\tif(version_compare($version, $installed_version, '>')) {\n\t\t\t\t\t\t$sql_update[] = $changes['query'];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Fix the missing KEY indexes\n\t\t\tforeach($CHV_indexes as $table => $indexes) {\n\t\t\t\t$field_prefix = DB::getFieldPrefix($table);\n\t\t\t\tforeach($indexes as $index) {\n\t\t\t\t\tif($index == 'searchindex' or $index == $field_prefix . '_id' or !G\\starts_with($field_prefix . '_', $index)) continue;\n\t\t\t\t\tif(!array_key_exists($index, $DB_indexes[$table])) {\n\t\t\t\t\t\t$sql_update[] = 'ALTER TABLE `%table_prefix%' . $table . '` ADD INDEX `' . $index . '` (`' . $index . '`);';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Merge settings and version changes\n\t\t\t$updates_stock = [];\n\t\t\tforeach(array_merge($settings_updates, $update_table) as $k => $v) {\n\t\t\t\tif($k == '3.0.0') continue;\n\t\t\t\t$updates_stock[] = $k;\n\t\t\t}\n\n\t\t\t// Flat settings\n\t\t\t$settings_flat = [];\n\n\t\t\t// Settings workaround\n\t\t\tforeach($updates_stock as $k) {\n\t\t\t\t$sql = NULL; // reset the pointer\n\t\t\t\tif(is_array($settings_updates[$k])) {\n\t\t\t\t\tforeach($settings_updates[$k] as $k => $v) {\n\t\t\t\t\t\t$settings_flat[$k] = $v;\n\t\t\t\t\t\t// Wait a second... Avoid overwrites\n\t\t\t\t\t\tif(in_array($k, $db_settings_keys)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$value = (is_null($v) ? \"NULL\" : \"'\".$v.\"'\");\n\t\t\t\t\t\t$sql .= \"INSERT INTO `%table_prefix%settings` (setting_name, setting_value, setting_default, setting_typeset) VALUES ('\".$k.\"', \".$value.\", \".$value.\", '\" . Settings::getType($v) . \"'); \" . \"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif($sql) {\n\t\t\t\t\t$sql_update[] = $sql;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$settings_get = Settings::get();\n\n\t\t\t// Deteled settings\n\t\t\tforeach($settings_delete as $k) {\n\t\t\t\tif(array_key_exists($k, $settings_get)) {\n\t\t\t\t\t$sql_update[] = \"DELETE FROM `%table_prefix%settings` WHERE `setting_name` = '\" . $k . \"';\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Renamed settings (actually updated values + remove old one)\n\t\t\tforeach($settings_rename as $k => $v) {\n\t\t\t\tif(array_key_exists($k, $settings_get)) {\n\t\t\t\t\t// Typeset is set in the INSERT statement above\n\t\t\t\t\t$value = (is_null($settings_get[$k]) ? \"NULL\" : \"'\".$settings_get[$k].\"'\");\n\t\t\t\t\t$sql_update[] = \"UPDATE `%table_prefix%settings` SET `setting_value` = \" . $value . \" WHERE `setting_name` = '\" . $v . \"';\" . \"\\n\" . \"DELETE FROM `%table_prefix%settings` WHERE `setting_name` = '\" . $k . \"';\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Switched settings (as rename but with update of the old key)\n\t\t\tforeach($settings_switch as $version => $keys) {\n\t\t\t\tif(!version_compare($version, $installed_version, '>')) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tforeach($keys as $k => $v) {\n\t\t\t\t\tif(!array_key_exists($k, $settings_get)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t$value = (is_null($settings_get[$k]) ? \"NULL\" : \"'\".$settings_get[$k].\"'\");\n\t\t\t\t\t$value_default = (is_null($settings_flat[$k]) ? \"NULL\" : \"'\".$settings_flat[$k].\"'\");\n\t\t\t\t\t$sql_update[] = \"UPDATE `%table_prefix%settings` SET `setting_value` = \" . $value . \", `setting_typeset` = '\" . Settings::getType($settings_flat[$k]) . \"' WHERE `setting_name` = '\" . $v . \"';\" . \"\\n\" . \"UPDATE `%table_prefix%settings` SET `setting_value` = \" . $value_default . \", `setting_default` = \" . $value_default . \" WHERE `setting_name` = '\" . $k . \"';\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Always update to the target version\n\t\t\t$sql_update[] = 'UPDATE `%table_prefix%settings` SET `setting_value` = \"' . G_APP_VERSION . '\" WHERE `setting_name` = \"chevereto_version_installed\";';\n\n\t\t\t// Revert maintenance (if needed)\n\t\t\tif(!$maintenance) {\n\t\t\t\t$sql_update[]  = 'UPDATE `%table_prefix%settings` SET `setting_value` = 0 WHERE `setting_name` = \"maintenance\";';\n\t\t\t}\n\n\t\t\t$sql_update = join(\"\\r\\n\", $sql_update);\n\n\t\t\t// Replace the %table_storage% and %table_prefix% thing\n\t\t\t$sql_update = strtr($sql_update, [\n\t\t\t\t'%table_prefix%' => G\\get_app_setting('db_table_prefix'),\n\t\t\t\t'%table_engine%' => $fulltext_engine\n\t\t\t]);\n\n\t\t\t// Remove extra white spaces and line breaks\n\t\t\t$sql_update = preg_replace('/[ \\t]+/', ' ', preg_replace('/\\s*$^\\s*/m', \"\\n\", $sql_update));\n\n\t\t\tif(isset($_REQUEST['debug'])) {\n\t\t\t\tG\\debug($sql_update);\n\t\t\t\tdie();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t$db = DB::getInstance();\n\t\t\t\t$db->query($sql_update);\n\t\t\t\t$updated = $db->exec();\n\t\t\t\tif($updated) {\n\t\t\t\t\t$chevereto_version_installed = DB::get('settings', ['name' => 'chevereto_version_installed'])[0]['setting_value'];\n\t\t\t\t\tif(G_APP_VERSION !== $chevereto_version_installed) {\n\t\t\t\t\t\tthrow new Exception(strtr('Make sure that the current database user %u has ALL PRIVILEGES granted over the %t table.', [\n\t\t\t\t\t\t\t'%u' => G\\get_app_setting('db_user'),\n\t\t\t\t\t\t\t'%t' => G\\get_app_setting('db_name'),\n\t\t\t\t\t\t]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$doing = 'updated';\n\t\t\t} catch(Exception $e) {\n\t\t\t\t$error = true;\n\t\t\t\t$error_message = $e->getMessage();\n\t\t\t\t$doing = 'update_failed';\n\t\t\t}\n\n\t\t} else {\n\t\t\ttry {\n\t\t\t\t$db = DB::getInstance();\n\t\t\t} catch(Exception $e) {\n\t\t\t\t$error = true;\n\t\t\t\t$error_message = sprintf($db_conn_error, $e->getMessage());\n\t\t\t}\n\t\t\t$doing = $error ? 'connect' : 'ready';\n\n\t\t\tif(!is_null($installed_version)) {\n\t\t\t\t$doing = 'already';\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tif(isset($_POST['username']) and !in_array($doing, ['already', 'update'])) {\n\t\t$doing = 'ready';\n\t}\n\n\tif($_POST) {\n\t\tswitch($doing) {\n\t\t\t// First case, need to connect to a working database\n\t\t\tcase 'connect':\n\t\t\t\t$db_details = [];\n\t\t\t\tforeach($db_array as $k => $v) {\n\t\t\t\t\tif($v and $_POST[$k] == '') {\n\t\t\t\t\t\t$error = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t$db_details[ltrim($k, 'db_')] = isset($_POST[$k]) ? $_POST[$k] : NULL;\n\t\t\t\t}\n\t\t\t\tif($error) {\n\t\t\t\t\t$error_message = 'Please fill the database details.';\n\t\t\t\t} else {\n\t\t\t\t\t// Details are complete. Lets check if the DB\n\t\t\t\t\t$db_details['driver'] = 'mysql';\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t$db = new DB($db_details); // Had to initiate a new instance for the new connection params\n\t\t\t\t\t} catch(Exception $e) {\n\t\t\t\t\t\t$error = true;\n\t\t\t\t\t\t$error_message = sprintf($db_conn_error, $e->getMessage());\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!$error) {\n\t\t\t\t\t\t// MySQL connection OK. Now, populate this values to settings.php\n\t\t\t\t\t\t$settings_php = ['<?php'];\n\t\t\t\t\t\tforeach($db_details as $k => $v) {\n\t\t\t\t\t\t\t$settings_php[] = '$settings[\\'db_'.$k.'\\'] = \\''.$v.'\\';';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$settings_php[] = '$settings[\\'db_pdo_attrs\\'] = [];';\n\t\t\t\t\t\t$settings_php[] = '$settings[\\'debug_level\\'] = 1;';\n\t\t\t\t\t\t$settings_php = implode(\"\\n\", $settings_php);\n\t\t\t\t\t\t$settings_file = G_APP_PATH . 'settings.php';\n\n\t\t\t\t\t\t$fh = @fopen($settings_file, 'w');\n\t\t\t\t\t\tif(!$fh or !fwrite($fh, $settings_php)) {\n\t\t\t\t\t\t\t$doing = 'settings';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$doing = 'ready';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@fclose($fh);\n\n\t\t\t\t\t\t// Reset opcache in this file\n\t\t\t\t\t\tif(function_exists('opcache_invalidate')) {\n\t\t\t\t\t\t\t@opcache_invalidate($settings_file, TRUE);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ready to install\n\t\t\t\t\tif($doing == 'ready') {\n\t\t\t\t\t\t/*@include(G_APP_PATH . 'settings.php');\n\t\t\t\t\t\tif(!G\\settings_has_db_info()) {\n\t\t\t\t\t\t\tsleep(3); // nifty hack to prevent cache issues (if any)\n\t\t\t\t\t\t}*/\n\t\t\t\t\t\tG\\redirect('install');\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\tbreak;\n\n\t\t\t// Ready to install\n\t\t\tcase 'ready':\n\n\t\t\t\t// Input validations\n\t\t\t\tif(!filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {\n\t\t\t\t\t$input_errors['email'] = _s('Invalid email');\n\t\t\t\t}\n\t\t\t\tif(!User::isValidUsername($_POST['username'])) {\n\t\t\t\t\t$input_errors['username'] = _s('Invalid username');\n\t\t\t\t}\n\t\t\t\tif(!preg_match('/'.getSetting('user_password_pattern').'/', $_POST['password'])) {\n\t\t\t\t\t$input_errors['password'] = _s('Invalid password');\n\t\t\t\t}\n\t\t\t\tif(!filter_var($_POST['email_from_email'], FILTER_VALIDATE_EMAIL)) {\n\t\t\t\t\t$input_errors['email_from_email'] = _s('Invalid email');\n\t\t\t\t}\n\t\t\t\tif(!filter_var($_POST['email_incoming_email'], FILTER_VALIDATE_EMAIL)) {\n\t\t\t\t\t$input_errors['email_incoming_email'] = _s('Invalid email');\n\t\t\t\t}\n\t\t\t\tif(!in_array($_POST['website_mode'], ['community', 'personal'])) {\n\t\t\t\t\t$input_errors['website_mode'] = _s('Invalid website mode');\n\t\t\t\t}\n\n\t\t\t\tif(count($input_errors) > 0) {\n\t\t\t\t\t$error = true;\n\t\t\t\t\t$error_message = 'Please correct your data to continue.';\n\t\t\t\t} else {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\t$create_table = [];\n\t\t\t\t\t\tforeach(new \\DirectoryIterator(CHV_APP_PATH_INSTALL . 'sql') as $fileInfo) {\n\t\t\t\t\t\t\tif($fileInfo->isDot() or $fileInfo->isDir()) continue;\n\t\t\t\t\t\t\t$create_table[$fileInfo->getBasename('.sql')] = realpath($fileInfo->getPathname());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$install_sql = 'SET FOREIGN_KEY_CHECKS=0;' . \"\\n\";\n\n\t\t\t\t\t\tif($is_2X) {\n\n\t\t\t\t\t\t\t// Need to sync this to avoid bad datefolder mapping due to MySQL time != PHP time\n\t\t\t\t\t\t\t// In Chevereto v2.X date was TIMESTAMP and in v3.X is DATETIME\n\t\t\t\t\t\t\t$DT = new \\DateTime();\n\t\t\t\t\t\t\t$offset = $DT->getOffset();\n\t\t\t\t\t\t\t$offsetHours = round(abs($offset) / 3600);\n\t\t\t\t\t\t\t$offsetMinutes = round((abs($offset) - $offsetHours * 3600) / 60);\n\t\t\t\t\t\t\t$offset = ($offset < 0 ? '-' : '+').(strlen($offsetHours) < 2 ? '0' : '').$offsetHours.':'.(strlen($offsetMinutes) < 2 ? '0' : '').$offsetMinutes;\n\t\t\t\t\t\t\t$install_sql .= \"SET time_zone = '\".$offset.\"';\";\n\n\t\t\t\t\t\t\t$install_sql .= \"\n\t\t\t\t\t\t\tALTER TABLE `chv_images`\n\t\t\t\t\t\t\t\tMODIFY `image_id` bigint(32) NOT NULL AUTO_INCREMENT,\n\t\t\t\t\t\t\t\tMODIFY `image_name` varchar(255),\n\t\t\t\t\t\t\t\tMODIFY `image_date` DATETIME,\n\t\t\t\t\t\t\t\tCHANGE `image_type` `image_extension` varchar(255),\n\t\t\t\t\t\t\t\tCHANGE `uploader_ip` `image_uploader_ip` varchar(255),\n\t\t\t\t\t\t\t\tCHANGE `storage_id` `image_storage_id` bigint(32),\n\t\t\t\t\t\t\t\tDROP `image_delete_hash`,\n\t\t\t\t\t\t\t\tADD `image_date_gmt` datetime NOT NULL AFTER `image_date`,\n\t\t\t\t\t\t\t\tADD `image_title` varchar(100) NOT NULL,\n\t\t\t\t\t\t\t\tADD `image_description` text,\n\t\t\t\t\t\t\t\tADD `image_nsfw` tinyint(1) NOT NULL DEFAULT '0',\n\t\t\t\t\t\t\t\tADD `image_user_id` bigint(32) DEFAULT NULL,\n\t\t\t\t\t\t\t\tADD `image_album_id` bigint(32) DEFAULT NULL,\n\t\t\t\t\t\t\t\tADD `image_md5` varchar(32) NOT NULL,\n\t\t\t\t\t\t\t\tADD `image_storage_mode` enum('datefolder','direct','old') NOT NULL DEFAULT 'datefolder',\n\t\t\t\t\t\t\t\tADD `image_original_filename` text NOT NULL,\n\t\t\t\t\t\t\t\tADD `image_original_exifdata` longtext,\n\t\t\t\t\t\t\t\tADD `image_views` bigint(32) NOT NULL DEFAULT '0',\n\t\t\t\t\t\t\t\tADD `image_category_id` bigint(32) DEFAULT NULL,\n\t\t\t\t\t\t\t\tADD `image_chain` tinyint(128) NOT NULL,\n\t\t\t\t\t\t\t\tADD `image_thumb_size` int(11) NOT NULL,\n\t\t\t\t\t\t\t\tADD `image_medium_size` int(11) NOT NULL DEFAULT '0',\n\t\t\t\t\t\t\t\tADD `image_expiration_date_gmt` datetime DEFAULT NULL,\n\t\t\t\t\t\t\t\tADD `image_likes` bigint(32) NOT NULL DEFAULT '0',\n\t\t\t\t\t\t\t\tADD `image_is_animated` tinyint(1) NOT NULL DEFAULT '0',\n\t\t\t\t\t\t\t\tADD INDEX `image_name` (`image_name`),\n\t\t\t\t\t\t\t\tADD INDEX `image_size` (`image_size`),\n\t\t\t\t\t\t\t\tADD INDEX `image_width` (`image_width`),\n\t\t\t\t\t\t\t\tADD INDEX `image_height` (`image_height`),\n\t\t\t\t\t\t\t\tADD INDEX `image_date_gmt` (`image_date_gmt`),\n\t\t\t\t\t\t\t\tADD INDEX `image_nsfw` (`image_nsfw`),\n\t\t\t\t\t\t\t\tADD INDEX `image_user_id` (`image_user_id`),\n\t\t\t\t\t\t\t\tADD INDEX `image_album_id` (`image_album_id`),\n\t\t\t\t\t\t\t\tADD INDEX `image_storage_id` (`image_storage_id`),\n\t\t\t\t\t\t\t\tADD INDEX `image_md5` (`image_md5`),\n\t\t\t\t\t\t\t\tADD INDEX `image_likes` (`image_views`),\n\t\t\t\t\t\t\t\tADD INDEX `image_views` (`image_views`),\n\t\t\t\t\t\t\t\tADD INDEX `image_category_id` (`image_category_id`),\n\t\t\t\t\t\t\t\tADD INDEX `image_expiration_date_gmt` (`image_expiration_date_gmt`),\n\t\t\t\t\t\t\t\tADD INDEX `image_is_animated` (`image_is_animated`),\n\t\t\t\t\t\t\t\tENGINE=\".$fulltext_engine.\";\n\n\t\t\t\t\t\t\tUPDATE `chv_images`\n\t\t\t\t\t\t\t\tSET `image_date_gmt` = `image_date`,\n\t\t\t\t\t\t\t\t`image_storage_mode` = CASE\n\t\t\t\t\t\t\t\tWHEN `image_storage_id` IS NULL THEN 'datefolder'\n\t\t\t\t\t\t\t\tWHEN `image_storage_id` = 0 THEN 'datefolder'\n\t\t\t\t\t\t\t\tWHEN `image_storage_id` = 1 THEN 'old'\n\t\t\t\t\t\t\t\tWHEN `image_storage_id` = 2 THEN 'direct'\n\t\t\t\t\t\t\t\tEND,\n\t\t\t\t\t\t\t\t`image_storage_id` = NULL;\n\n\t\t\t\t\t\t\tCREATE FULLTEXT INDEX searchindex ON `chv_images`(image_name, image_title, image_description, image_original_filename);\n\n\t\t\t\t\t\t\tRENAME TABLE `chv_info` to `_chv_info`;\n\t\t\t\t\t\t\tRENAME TABLE `chv_options` to `_chv_options`;\n\t\t\t\t\t\t\tRENAME TABLE `chv_storages` to `_chv_storages`;\";\n\n\t\t\t\t\t\t\t// Don't create the images table\n\t\t\t\t\t\t\tunset($create_table['images']);\n\n\t\t\t\t\t\t\t// Inject the old definitions value\n\t\t\t\t\t\t\t$chv_initial_settings['crypt_salt'] = $_POST['crypt_salt'];\n\n\t\t\t\t\t\t\t$table_prefix = 'chv_';\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$table_prefix = G\\get_app_setting('db_table_prefix');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tforeach($create_table as $k => $v) {\n\t\t\t\t\t\t\t$install_sql .= strtr(file_get_contents($v), [\n\t\t\t\t\t\t\t\t'%table_prefix%' => $table_prefix,\n\t\t\t\t\t\t\t\t'%table_engine%' => $fulltext_engine\n\t\t\t\t\t\t\t]) . \"\\n\\n\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// id padding for long faked public IDs\n\t\t\t\t\t\t$chv_initial_settings['id_padding'] = $is_2X ? 0 : 5000;\n\n\t\t\t\t\t\tif($_POST['website_mode'] == 'personal') {\n\t\t\t\t\t\t\t$chv_initial_settings['website_mode'] = 'personal';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Stats (since 3.7.0)\n\t\t\t\t\t\t$install_sql .= strtr($stats_query_legacy, [\n\t\t\t\t\t\t\t\t'%table_prefix%' => $table_prefix,\n\t\t\t\t\t\t\t\t'%table_engine%' => $fulltext_engine\n\t\t\t\t\t\t\t]);\n\n\t\t\t\t\t\tif(isset($_REQUEST['debug'])) {\n\t\t\t\t\t\t\tG\\debug($install_sql);\n\t\t\t\t\t\t\tdie();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do the DB magic\n\t\t\t\t\t\t$db = DB::getInstance();\n\t\t\t\t\t\t$db->query($install_sql);\n\t\t\t\t\t\t$db->exec();\n\t\t\t\t\t\t$db->closeCursor();\n\n\t\t\t\t\t\t// Insert the default settings\n\t\t\t\t\t\t$db->beginTransaction();\n\t\t\t\t\t\t$db->query('INSERT INTO `'.DB::getTable('settings').'` (setting_name, setting_value, setting_default, setting_typeset) VALUES (:name, :value, :value, :typeset)');\n\t\t\t\t\t\tforeach($chv_initial_settings as $k => $v) {\n\t\t\t\t\t\t\t$db->bind(':name', $k);\n\t\t\t\t\t\t\t$db->bind(':value', $v);\n\t\t\t\t\t\t\t$db->bind(':typeset', ($v===0 or $v===1) ? 'bool' : 'string');\n\t\t\t\t\t\t\t$db->exec();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif($db->endTransaction()) {\n\t\t\t\t\t\t\t// Create admin and his password\n\t\t\t\t\t\t\t$insert_admin = User::insert([\n\t\t\t\t\t\t\t\t'username'\t=> $_POST['username'],\n\t\t\t\t\t\t\t\t'email' \t=> $_POST['email'],\n\t\t\t\t\t\t\t\t'is_admin'\t=> 1,\n\t\t\t\t\t\t\t\t'language'\t=> $chv_initial_settings['default_language'],\n\t\t\t\t\t\t\t\t'timezone'\t=> $chv_initial_settings['default_timezone']\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tLogin::addPassword($insert_admin, $_POST['password']);\n\n\t\t\t\t\t\t\t// Add admin user as the personal mode guy\n\t\t\t\t\t\t\tif($_POST['website_mode'] == 'personal') {\n\t\t\t\t\t\t\t\t$db->update('settings', ['setting_value' => 'me'], ['setting_name' => 'website_mode_personal_routing']);\n\t\t\t\t\t\t\t\t$db->update('settings', ['setting_value' => $insert_admin], ['setting_name' => 'website_mode_personal_uid']);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Insert the email settings\n\t\t\t\t\t\t\t$db->update('settings', ['setting_value' => $_POST['email_from_email']], ['setting_name' => 'email_from_email']);\n\t\t\t\t\t\t\t$db->update('settings', ['setting_value' => $_POST['email_incoming_email']], ['setting_name' => 'email_incoming_email']);\n\n\t\t\t\t\t\t\t$doing = 'finished';\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(Exception $e) {\n\t\t\t\t\t\t$error = true;\n\t\t\t\t\t\t$error_message = 'Installation error: ' . $e->getMessage();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t$doctitle = $doctitles[$doing].' - Chevereto ' . get_chevereto_version(true);\n\t$system_template = CHV_APP_PATH_CONTENT_SYSTEM . 'template.php';\n\t$install_template = CHV_APP_PATH_INSTALL . 'template/'.$doing.'.php';\n\n\tif(file_exists($install_template)) {\n\t\tob_start();\n\t\trequire_once($install_template);\n\t\t$html = ob_get_contents();\n\t\tob_end_clean();\n\t} else {\n\t\tdie(\"Can't find \" . G\\absolute_to_relative($install_template));\n\t}\n\n\tif(!@require_once($system_template)) {\n\t\tdie(\"Can't find \" . G\\absolute_to_relative($system_template));\n\t}\n\n\tdie(); // Terminate any remaining execution\n\n} catch (Exception $e) {\n\tG\\exception_to_error($e);\n}", "<?php\n\n/* --------------------------------------------------------------------\n\n  Chevereto\n  http://chevereto.com/\n\n  @author\tRodolfo Berrios A. <http://rodolfoberrios.com/>\n\t\t\t<inbox@rodolfoberrios.com>\n\n  Copyright (C) Rodolfo Berrios A. All rights reserved.\n\n  BY USING THIS SOFTWARE YOU DECLARE TO ACCEPT THE CHEVERETO EULA\n  http://chevereto.com/license\n\n  --------------------------------------------------------------------- */\n\n$route = function($handler) {\n\ttry {\n\n\t\tif($_POST and !$handler::checkAuthToken($_REQUEST['auth_token'])) {\n\t\t\t$handler->template = 'request-denied';\n\t\t\treturn;\n\t\t}\n\n\t\t$logged_user = CHV\\Login::getUser();\n\n\t\tif(!$logged_user) {\n\t\t\tG\\redirect('login');\n\t\t}\n\n\t\t// User status override redirect\n\t\tCHV\\User::statusRedirect($logged_user['status']);\n\n\t\t// Dashboard hack\n\t\t$handler->template = 'settings';\n\t\t$is_dashboard_user = $handler::getCond('dashboard_user');\n\n\t\t// Request log\n\t\tif(!$is_dashboard_user) {\n\t\t\t$request_log = CHV\\Requestlog::getCounts('account-edit', 'fail');\n\t\t}\n\n\t\t// Editable values\n\t\t$allowed_to_edit = ['name', 'username', 'email', 'avatar_filename', 'website', 'background_filename', 'timezone', 'language', 'status', 'is_admin', 'image_keep_exif', 'image_expiration', 'newsletter_subscribe', 'bio', 'show_nsfw_listings', 'is_private'];\n\n        if(CHV\\getSetting('enable_expirable_uploads')) {\n            unset($allowed_to_edit['image_expiration']);\n        }\n\n\t\t// User handle\n\t\t$user = $is_dashboard_user ? CHV\\User::getSingle($handler->request[1], 'id') : $logged_user;\n\t\t$is_owner = $user['id'] == CHV\\Login::getUser()['id'];\n\n\t\t// Update the lang displayed on change\n\t\tif(in_array('language', $allowed_to_edit) and isset($_POST['language']) and $logged_user['language'] !== $_POST['language'] and $logged_user['id'] == $user['id'] and array_key_exists($_POST['language'], CHV\\L10n::getEnabledLanguages())) {\n\t\t\tCHV\\L10n::processTranslation($_POST['language']);\n\t\t}\n\n\t\t// Settings routes\n\t\t$routes = [\n\t\t\t'account'\t\t\t=> _s('Account'),\n\t\t\t'profile'\t\t  \t=> _s('Profile'),\n\t\t\t'password'\t\t  \t=> _s('Password'),\n\t\t\t'homepage' \t\t\t=> _s('Homepage')\n\t\t];\n\t\t$default_route = 'account';\n\n\t\tif(CHV\\getSetting('website_mode') == 'personal' and CHV\\getSetting('website_mode_personal_routing') !== '/' and $logged_user['id'] == CHV\\getSetting('website_mode_personal_uid')) {\n\t\t\t$route_homepage = TRUE;\n\t\t}\n\n\t\t$is_email_required = TRUE;\n\t\t// Don't require email for admin when editing users\n\t\tif($handler::getCond('admin') AND !$is_owner) {\n\t\t\t$is_email_required = FALSE;\n\t\t}\n\n\t\t$doing_level = $is_dashboard_user ? 2 : 0;\n\t\t$doing = $handler->request[$doing_level];\n\n\t\tif(!$user or $handler->request[$doing_level+1] or (!is_null($doing) and !array_key_exists($doing, $routes))) {\n\t\t\treturn $handler->issue404();\n\t\t}\n\n\t\tif($doing == '') $doing = $default_route;\n\n\t\t// Populate the routes\n\t\tforeach($routes as $route => $label) {\n\t\t\t$aux = str_replace('_', '-', $route);\n\t\t\t$handler::setCond('settings_'.$aux, $doing == $aux);\n\t\t\tif($handler::getCond('settings_'.$aux)) {\n\t\t\t\t$handler::setVar('setting', $aux);\n\t\t\t}\n\t\t\tif($aux == 'homepage' and !$route_homepage) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$settings_menu[$aux] = array(\n\t\t\t\t'label' => $label,\n\t\t\t\t'url'\t=> G\\get_base_url(($is_dashboard_user ? ('dashboard/user/' . $user['id']) : 'settings') . ($route == $default_route ? '' : '/'.$route)),\n\t\t\t\t'current' => $handler::getCond('settings_'.$aux)\n\t\t\t);\n\t\t}\n\n\t\t$handler::setVar('settings_menu', $settings_menu);\n\n\t\tif(!array_key_exists($doing, $routes)) {\n\t\t\treturn $handler->issue404();\n\t\t}\n\n\t\t// Safe print $_POST\n\t\t$SAFE_POST = $handler::getVar('safe_post');\n\n\t\t// conds\n\t\t$is_error = false;\n\t\t$is_changed = false;\n\t\t$captcha_needed = false;\n\n\t\t// vars\n\t\t$input_errors = array();\n\t\t$error_message = NULL;\n\t\t$changed_email_message = NULL;\n\n\t\tif($_POST) {\n\n\t\t\t$field_limits = 255;\n\n\t\t\tforeach($allowed_to_edit as $k) {\n\t\t\t\tif($_POST[$k]) {\n\t\t\t\t\t$_POST[$k] = substr($_POST[$k], 0, $field_limits);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Input validations\n\t\t\tswitch($doing) {\n\n\t\t\t\tcase NULL:\n\t\t\t\tcase 'account':\n\n\t\t\t\t\t$checkboxes = ['upload_image_exif', 'newsletter_subscribe', 'show_nsfw_listings', 'is_private'];\n\t\t\t\t\tforeach($checkboxes as $k) {\n\t\t\t\t\t\tif(!isset($_POST[$k])) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$_POST[$k] = in_array($_POST[$k], ['On', 1]) ? 1 : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tG\\nullify_string($_POST['image_expiration']);\n\n\t\t\t\t\t$__post = [];\n\t\t\t\t\t$__safe_post = [];\n\t\t\t\t\tforeach(['username', 'email'] as $v) {\n\t\t\t\t\t\tif(isset($_POST[$v])) {\n\t\t\t\t\t\t\t$_POST[$v] = $v == 'email' ? trim($_POST[$v]) : strtolower(trim($_POST[$v]));\n\t\t\t\t\t\t\t$__post[$v] = $_POST[$v];\n\t\t\t\t\t\t\t$__safe_post[$v] = G\\safe_html($_POST[$v]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$handler::updateVar('post', $__post);\n\t\t\t\t\t$handler::updateVar('safe_post', $__safe_post);\n\n\t\t\t\t\tif(!CHV\\User::isValidUsername($_POST['username'])) {\n\t\t\t\t\t\t$input_errors['username'] = _s('Invalid username');\n\t\t\t\t\t}\n\n\t\t\t\t\tif($is_email_required and !filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {\n\t\t\t\t\t\t$input_errors['email'] = _s('Invalid email');\n\t\t\t\t\t}\n\n                    if(CHV\\getSetting('enable_expirable_uploads')) {\n                        // Image expire time\n                        if($_POST['image_expiration'] !== NULL && (!G\\dateinterval($_POST['image_expiration']) || !array_key_exists($_POST['image_expiration'], CHV\\Image::getAvailableExpirations()))) {\n                            $input_errors['image_expiration'] = _s('Invalid image expiration: %s', $_POST['image_expiration']);\n                        }\n                    }\n\n\t\t\t\t\tif(!array_key_exists($_POST['language'], CHV\\get_available_languages())) {\n\t\t\t\t\t\t$_POST['language'] = CHV\\getSetting('default_language');\n\t\t\t\t\t}\n\t\t\t\t\tif(!in_array($_POST['timezone'], timezone_identifiers_list())) {\n\t\t\t\t\t\t$_POST['timezone'] = date_default_timezone_get();\n\t\t\t\t\t}\n\n\t\t\t\t\tif(count($input_errors) > 0) {\n\t\t\t\t\t\t$is_error = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!$is_error) {\n\n\t\t\t\t\t\t$user_db = CHV\\DB::get('users', ['username' => $_POST['username'], 'email' => $_POST['email']], 'OR', NULL);\n\n\t\t\t\t\t\tif($user_db) {\n\n\t\t\t\t\t\t\tforeach($user_db as $row) {\n\n\t\t\t\t\t\t\t\tif($row['user_id'] == $user['id']) continue; // Same guy?\n\n\t\t\t\t\t\t\t\t// Invalid user, check the time\n\t\t\t\t\t\t\t\tif(!in_array($row['user_status'], ['valid', 'banned'])) { // Don't touch the valid and banned users\n\t\t\t\t\t\t\t\t\t$must_delete_old_user = false;\n\t\t\t\t\t\t\t\t\t$confirmation_db = CHV\\Confirmation::get(['user_id' => $row['user_id']]);\n\t\t\t\t\t\t\t\t\tif($confirmation_db) {\n\t\t\t\t\t\t\t\t\t\t// 24x2 = 48 tic tac tic tac\n\t\t\t\t\t\t\t\t\t\tif(G\\datetime_diff($confirmation_db['confirmation_date_gmt'], NULL, 'h') > 48) {\n\t\t\t\t\t\t\t\t\t\t\tCHV\\Confirmation::delete(['id' => $confirmation_db['confirmation_id']]);\n\t\t\t\t\t\t\t\t\t\t\t$must_delete_old_user = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$must_delete_old_user = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Delete any old un-validated / un-banned user and allow use his things\n\t\t\t\t\t\t\t\t\tif($must_delete_old_user) {\n\t\t\t\t\t\t\t\t\t\tCHV\\DB::delete('users', ['id' => $row['user_id']]);\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Username taken?\n\t\t\t\t\t\t\t\tif(G\\timing_safe_compare($row['user_username'], $_POST['username']) and $user['username'] !== $row['user_username']) {\n\t\t\t\t\t\t\t\t\t$input_errors['username'] = 'Username already being used';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Email taken?\n\t\t\t\t\t\t\t\tif(!empty($_POST['email']) && G\\timing_safe_compare($row['user_email'], $_POST['email']) &&\n\t\t\t\t\t\t\t\t   $user['email'] !== $row['user_email']) {\n\t\t\t\t\t\t\t\t\t$input_errors['email'] = _s('Email already being used');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(count($input_errors) > 0) {\n\t\t\t\t\t\t\t\t$is_error = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Email MUST be validated (two steps)\n\t\t\t\t\tif(!$is_error && !empty($_POST['email']) && !G\\timing_safe_compare($user['email'], $_POST['email'])) {\n\n\t\t\t\t\t\t// Delete any old confirmation\n\t\t\t\t\t\tCHV\\Confirmation::delete(['type' => 'account-change-email', 'user_id' => $user['id']]);\n\n\t\t\t\t\t\t// Generate the thing\n\t\t\t\t\t\t$hashed_token = CHV\\generate_hashed_token($user['id']);\n\t\t\t\t\t\t$insert_email_confirm = CHV\\Confirmation::insert([\n\t\t\t\t\t\t\t'type'\t\t\t=> 'account-change-email',\n\t\t\t\t\t\t\t'user_id'\t\t=> $user['id'],\n\t\t\t\t\t\t\t'token_hash'\t=> $hashed_token['hash'],\n\t\t\t\t\t\t\t'status'\t\t=> 'active',\n\t\t\t\t\t\t\t'extra'\t\t\t=> $_POST['email']\n\t\t\t\t\t\t]);\n\t\t\t\t\t\t$email_confirm_link = G\\get_base_url('account/change-email-confirm/?token='.$hashed_token['public_token_format']);\n\t\t\t\t\t\t$changed_email_message = _s('An email has been sent to %s with instructions to activate this email', $SAFE_POST['email']);\n\n\t\t\t\t\t\t// Build the mail global\n\t\t\t\t\t\tglobal $theme_mail;\n\t\t\t\t\t\t$theme_mail = [\n\t\t\t\t\t\t\t'user' => $user,\n\t\t\t\t\t\t\t'link' => $email_confirm_link\n\t\t\t\t\t\t];\n\n\t\t\t\t\t\tob_start();\n\t\t\t\t\t\trequire_once(G_APP_PATH_THEME . 'mails/account-change-email.php');\n\t\t\t\t\t\t$mail_body = ob_get_contents();\n\t\t\t\t\t\tob_end_clean();\n\n\t\t\t\t\t\t$mail['subject'] = _s('Confirmation required at %s', CHV\\getSettings()['website_name']);\n\t\t\t\t\t\t$mail['message'] = $mail_body;\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif(CHV\\send_mail($_POST['email'], $mail['subject'], $mail['message'])) {\n\t\t\t\t\t\t\t\t//$is_changed = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch(Exception $e) {\n\t\t\t\t\t\t\techo($e->getMessage());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tunset($_POST['email']);\n\n\t\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\t\tcase 'profile':\n\t\t\t\t\tif(!preg_match('/^.{1,60}$/', $_POST['name'])) {\n\t\t\t\t\t\t$input_errors['name'] = _s('Invalid name');\n\t\t\t\t\t}\n\t\t\t\t\tif($_POST['website'] and !filter_var($_POST['website'], FILTER_VALIDATE_URL)) {\n\t\t\t\t\t\t$input_errors['website'] = _s('Invalid website');\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t\tcase 'password':\n\n\t\t\t\t\tif(!$is_dashboard_user) {\n\t\t\t\t\t\tif($user['login']['password'] && !password_verify($_POST['current-password'], $user['login']['password']['secret'])) {\n\t\t\t\t\t\t\t$input_errors['current-password'] = _s('Wrong password');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif($_POST['current-password'] == $_POST['new-password']) {\n\t\t\t\t\t\t\t\t$input_errors['new-password'] = _s('Use a new password');\n\t\t\t\t\t\t\t\t$handler::updateVar('safe_post', ['current-password' => NULL]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!preg_match('/'.CHV\\getSetting('user_password_pattern').'/', $_POST['new-password'])) {\n\t\t\t\t\t\t$input_errors['new-password'] = _s('Invalid password');\n\t\t\t\t\t}\n\n\t\t\t\t\tif($_POST['new-password'] !== $_POST['new-password-confirm']) {\n\t\t\t\t\t\t$input_errors['new-password-confirm'] = _s(\"Passwords don't match\");\n\t\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\t\tcase 'homepage':\n\t\t\t\t\tif(!array_key_exists($doing, $routes)) { // Nope\n\t\t\t\t\t\t$handler->issue404();\n\t\t\t\t\t}\n\t\t\t\t\t$allowed_to_edit = ['homepage_title_html', 'homepage_paragraph_html', 'homepage_cta_html'];\n\n\t\t\t\t\t// Protect editing\n\t\t\t\t\t$editing_array = G\\array_filter_array($_POST, $allowed_to_edit, 'exclusion');\n\t\t\t\t\t$update_settings = [];\n\t\t\t\t\tforeach($allowed_to_edit as $k) {\n\t\t\t\t\t\tif(!array_key_exists($k, CHV\\Settings::get()) or CHV\\Settings::get($k) == $editing_array[$k]) continue;\n\t\t\t\t\t\t$update_settings[$k] = $editing_array[$k];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update settings (if any)\n\t\t\t\t\tif($update_settings) {\n\t\t\t\t\t\t$db = CHV\\DB::getInstance();\n\t\t\t\t\t\t$db->beginTransaction();\n\t\t\t\t\t\t$db->query('UPDATE ' . CHV\\DB::getTable('settings') . ' SET setting_value = :value WHERE setting_name = :name;');\n\t\t\t\t\t\tforeach($update_settings as $k => $v) {\n\t\t\t\t\t\t\t$db->bind(':name', $k);\n\t\t\t\t\t\t\t$db->bind(':value', $v);\n\t\t\t\t\t\t\t$db->exec();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif($db->endTransaction()) {\n\t\t\t\t\t\t\t$is_changed = TRUE;\n\t\t\t\t\t\t\tforeach($update_settings as $k => $v) {\n\t\t\t\t\t\t\t\tCHV\\Settings::setValue($k, $v);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t$handler->issue404();\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif(count($input_errors) > 0) {\n\t\t\t\t$is_error = true;\n\t\t\t}\n\n\t\t\tif(!$is_error) {\n\n\t\t\t\t// Account and profile changes\n\t\t\t\tif(in_array($doing, [NULL, 'account', 'profile'])) {\n\n\t\t\t\t\t// Detect changes\n\t\t\t\t\tforeach($_POST as $k => $v) {\n\t\t\t\t\t\tif($user[$k] !== $v) {\n\t\t\t\t\t\t\t$is_changed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif($is_changed) {\n\n\t\t\t\t\t\t// Protect editing\n\t\t\t\t\t\t$editing_array = G\\array_filter_array($_POST, $allowed_to_edit, 'exclusion');\n\n\t\t\t\t\t\tif(!$is_dashboard_user) {\n\t\t\t\t\t\t\tunset($editing_array['status'], $editing_array['is_admin']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(!in_array($editing_array['status'], ['valid', 'banned', 'awaiting-confirmation', 'awaiting-email'])) {\n\t\t\t\t\t\t\t\tunset($editing_array['status']);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif($_POST['role']) {\n\t\t\t\t\t\t\t\t$editing_array['is_admin'] = $_POST['role'] == 'admin' ? 1 : 0;\n\t\t\t\t\t\t\t\tif($_POST['is_admin']) {\n\t\t\t\t\t\t\t\t\t$editing_array['status'] = 'valid';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tunset($_POST['role']);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(empty($_POST['email'])) {\n\t\t\t\t\t\t\tunset($editing_array['email']);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(CHV\\User::update($user['id'], $editing_array)) {\n\t\t\t\t\t\t\t$user = array_merge($user, $editing_array);\n\t\t\t\t\t\t\t// 'name' gets sanitized on User::update, this update safe_post to reflect the actual value\n\t\t\t\t\t\t\t$handler::updateVar('safe_post', [\n\t\t\t\t\t\t\t\t'name' => G\\safe_html($user['name']),\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!$is_dashboard_user) {\n\t\t\t\t\t\t\t$logged_user = CHV\\Login::login($user['id'], $_SESSION['login']['type']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$user = CHV\\User::getSingle($user['id'], 'id');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$changed_message = _s('Changes have been saved.');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Update/create password\n\t\t\t\tif($doing == 'password') {\n\n\t\t\t\t\tif($user['login']['password']) {\n\n\t\t\t\t\t\t// Delete any old cookie/session login for this user\n\t\t\t\t\t\tCHV\\Login::delete(['type' => 'cookie', 'user_id' => $user['id']]);\n\t\t\t\t\t\tCHV\\Login::delete(['type' => 'session', 'user_id' => $user['id']]);\n\n\t\t\t\t\t\t// Insert the new login DB if needed\n\t\t\t\t\t\tif(!$is_dashboard_user and $_COOKIE['KEEP_LOGIN']) {\n\t\t\t\t\t\t\tCHV\\Login::insert(['type' => 'cookie', 'user_id' => $user['id']]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$is_changed = CHV\\Login::changePassword($user['id'], $_POST['new-password']); // This inserts the session login\n\t\t\t\t\t\t$changed_message = _s('Password has been changed');\n\n\t\t\t\t\t} else { // Insert\n\n\t\t\t\t\t\t$is_changed = CHV\\Login::addPassword($user['id'], $_POST['new-password']);\n\t\t\t\t\t\t$changed_message = _s('Password has been created.');\n\t\t\t\t\t\tif(!$is_dashboard_user or $logged_user['id'] == $user['id']) {\n\t\t\t\t\t\t\t$logged_user = CHV\\Login::login($user['id'], 'password');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$unsets = array('current-password', 'new-password', 'new-password-confirm');\n\t\t\t\t\tforeach($unsets as $unset) {\n\t\t\t\t\t\t$handler::updateVar('safe_post', [$unset => NULL]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tif(in_array($doing, array('', 'account')) and !$is_dashboard_user) {\n\t\t\t\t\tCHV\\Requestlog::insert(array('type' => 'account-edit', 'result' => 'fail'));\n\t\t\t\t\t$error_message = _s('Wrong Username/Email values');\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\t$handler::setCond('settings_linked_accounts', FALSE);\n\n\t\t$handler::setCond('owner', $is_owner);\n\t\t$handler::setCond('error', $is_error);\n\t\t$handler::setCond('changed', $is_changed);\n\t\t$handler::setCond('captcha_needed', $captcha_needed);\n\t\t$handler::setCond('dashboard_user', $is_dashboard_user);\n\t\t$handler::setCond('email_required', $is_email_required);\n\n\t\tif($captcha_needed and !$handler::getVar('recaptcha_html')) {\n\t\t\t$handler::setVar('recaptcha_html', CHV\\Render\\get_recaptcha_html());\n\t\t}\n\n\t\t$handler::setVar('pre_doctitle', $is_dashboard_user ? _s('Settings for %s', $user['username']) : _s('Settings'));\n\n\t\t$handler::setVar('error',  $error_message);\n\t\t$handler::setVar('input_errors', $input_errors);\n\t\t$handler::setVar('changed_message', $changed_message);\n\t\t$handler::setVar('changed_email_message', $changed_email_message);\n\t\t$handler::setVar('user', $is_dashboard_user ? $user : $logged_user);\n\t\t$handler::setVar('safe_html_user', G\\safe_html($handler::getVar('user')));\n\n\t} catch(Exception $e) {\n\t\tG\\exception_to_error($e);\n\t}\n};", "<?php if(!defined('access') or !access) die('This file cannot be directly accessed.'); ?>\n<?php G\\Render\\include_theme_header(); ?>\n\n<div class=\"content-width\">\n\n\t<div class=\"c24 center-box\">\n\n\t\t<div class=\"header header-tabs default-margin-bottom\">\n\t\t\t<h1><?php echo get_pre_doctitle(); ?></h1>\n\t\t\t<div class=\"hidden phone-show phablet-show\">\n\t\t\t\t<?php\n\t\t\t\t\tforeach(get_settings_menu() as $tab) {\n\t\t\t\t\t\tif($tab[\"current\"]) {\n\t\t\t\t\t\t\t$current = $tab;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t\t<div class=\"phone-show hidden tab-menu current\" data-action=\"tab-menu\"><span data-content=\"current-tab-label\"><?php echo $current[\"label\"]; ?></span><span class=\"icon icon-menu4 margin-left-5\"></span></div>\n\t\t\t\t<ul class=\"content-tabs phone-hide phablet-show\">\n\t\t\t\t\t<?php\n\t\t\t\t\t\tforeach(get_settings_menu() as $item) {\n\t\t\t\t\t?>\n\t\t\t\t\t<li<?php if($item[\"current\"]) echo ' class=\"current\"'; ?>><a href=\"<?php echo $item[\"url\"]; ?>\"><?php echo $item[\"label\"]; ?></a></li>\n\t\t\t\t\t<?php\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<?php\n\t\t\t\tif(is_dashboard_user()) {\n\t\t\t?>\n\t\t\t<div class=\"header-content-right phone-float-none\">\n\t\t\t\t<div class=\"list-selection\">\n\t\t\t\t\t<a href=\"<?php echo get_user()['url']; ?>\" class=\"header-link\"><?php echo get_user()['username']; ?></a>\n\t\t\t\t\t<a class=\"delete-link margin-left-5\" data-confirm=\"<?php _se(\"Do you really want to delete this user? This can't be undone.\"); ?>\" data-submit-fn=\"CHV.fn.user.delete.submit\" data-ajax-deferred=\"CHV.fn.complete_resource_delete\" data-ajax-url=\"<?php echo G\\get_base_url(\"json\"); ?>\"><?php _se('Delete user'); ?></a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<?php\n\t\t\t\t}\n\t\t\t?>\n\t\t</div>\n\n\t\t<div class=\"form-content\">\n\n\t\t\t<ul class=\"content-tabs c5 content-tabs-vertical phone-hide phablet-hide\">\n\t\t\t\t<?php\n\t\t\t\t\tforeach(get_settings_menu() as $item) {\n\t\t\t\t?>\n\t\t\t\t<li<?php if($item[\"current\"]) echo ' class=\"current\"'; ?>><a href=\"<?php echo $item[\"url\"]; ?>\"><?php echo $item[\"label\"]; ?></a></li>\n\t\t\t\t<?php\n\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t</ul>\n\n\t\t\t<form data-content=\"main-form\" class=\"tabbed-input-column\" method=\"post\" data-type=\"<?php echo get_setting(); ?>\" data-action=\"validate\">\n\n\t\t\t\t<?php echo G\\Render\\get_input_auth_token(); ?>\n\n\t\t\t\t<?php\n\t\t\t\t\tif(is_settings_account()) {\n\n\t\t\t\t\t\tif(is_dashboard_user() or is_admin()) {\n\t\t\t\t?>\n\t\t\t\t<ul class=\"tabbed-content-list table-li\">\n\t\t\t\t\t<?php\n\t\t\t\t\t\t$user_list_values = [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'label'\t\t=> _s('User ID'),\n\t\t\t\t\t\t\t\t'content'\t=> get_user()['id'] . ' ('.get_user()['id_encoded'].')'\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'label'\t\t=> _s('Images'),\n\t\t\t\t\t\t\t\t'content'\t=> get_user()['image_count']\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'label' \t=> _s('Albums'),\n\t\t\t\t\t\t\t\t'content'\t=> get_user()['album_count']\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'label' \t=> _s('Register date'),\n\t\t\t\t\t\t\t\t'content' \t=> get_user()['date']\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'label' => NULL,\n\t\t\t\t\t\t\t\t'content' => get_user()['date_gmt'] . ' (GMT)'\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t];\n\t\t\t\t\t\tif(get_user()['registration_ip']) {\n\t\t\t\t\t\t\t$user_list_values[] = [\n\t\t\t\t\t\t\t\t'label'\t\t=> _s('Registration IP'),\n\t\t\t\t\t\t\t\t'content'\t=> get_user()['registration_ip']\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tforeach($user_list_values as $v) {\n\t\t\t\t\t?>\n\t\t\t\t\t<li><span class=\"c4 display-table-cell padding-right-10\"><?php echo $v['label']; ?></span> <span class=\"display-table-cell\"><?php echo $v['content']; ?></span></li>\n\t\t\t\t\t<?php\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</ul>\n\n\t\t\t\t<div class=\"c5 phablet-c1\">\n\t\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t\t<label for=\"status\"><?php _se('Status'); ?></label>\n\t\t\t\t\t\t<select name=\"status\" id=\"status\" class=\"text-input\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tforeach([\n\t\t\t\t\t\t\t\t\t'valid'\t => _s('Valid'),\n\t\t\t\t\t\t\t\t\t'banned' => _s('Banned'),\n\t\t\t\t\t\t\t\t\t'awaiting-email' => _s('Awaiting email'),\n\t\t\t\t\t\t\t\t\t'awaiting-confirmation' => _s('Awaiting confirmation')\n\t\t\t\t\t\t\t\t] as $k => $v) {\n\t\t\t\t\t\t\t\t\t$selected = $k == get_user()[\"status\"] ? \" selected\" : \"\";\n\t\t\t\t\t\t\t\t\techo '<option value=\"'.$k.'\"'.$selected.'>'.$v.'</option>'.\"\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t\t<label for=\"role\"><?php _se('Role'); ?></label>\n\t\t\t\t\t\t<select name=\"role\" id=\"role\" class=\"text-input\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tforeach([\n\t\t\t\t\t\t\t\t\t'admin'\t=> ['label' => _s('Administrator'), 'selected' => get_user()['is_admin']],\n\t\t\t\t\t\t\t\t\t'user'\t=> ['label' => _s('User'), 'selected' => !get_user()['is_admin']]\n\t\t\t\t\t\t\t\t] as $k => $v) {\n\t\t\t\t\t\t\t\t\t$selected = $v['selected'] ? \" selected\" : \"\";\n\t\t\t\t\t\t\t\t\techo '<option value=\"'.$k.'\"'.$selected.'>'.$v['label'].'</option>'.\"\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<hr class=\"line-separator\"></hr>\n\n\t\t\t\t<?php\n\t\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t\t<div class=\"c9 phablet-c1\">\n\t\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t\t<label for=\"username\"><?php _se('Username'); ?></label>\n\t\t\t\t\t\t<input type=\"text\" name=\"username\" id=\"username\" maxlength=\"<?php echo CHV\\getSetting('username_max_length'); ?>\" class=\"text-input\" value=\"<?php echo get_safe_post() ? get_safe_post()[\"username\"] : get_user()[\"username\"]; ?>\" pattern=\"<?php echo CHV\\getSetting('username_pattern'); ?>\" rel=\"tooltip\" title='<?php _se('%i to %f characters<br>Letters, numbers and \"_\"', ['%i' => CHV\\getSetting('username_min_length'), '%f' => CHV\\getSetting('username_max_length')]); ?>' data-tipTip=\"right\" placeholder=\"<?php _se('Username'); ?>\" required>\n\t\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"username\"]; ?></span>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif(CHV\\getSetting('website_mode') == 'community') {\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<div class=\"input-below\"><?php echo G\\get_base_url(CHV\\getSetting('user_routing') ? NULL : 'user') . '/'; ?><span data-text=\"username\"><?php echo get_user()[\"username\"]; ?></span></div>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t\t<label for=\"email\"><?php _se('Email address'); ?></label>\n\t\t\t\t\t\t<input type=\"email\" name=\"email\" id=\"email\" class=\"text-input\" value=\"<?php echo get_safe_post() ? get_safe_post()[\"email\"] : get_user()[\"email\"]; ?>\" placeholder=\"<?php _se('Your email address'); ?>\"<?php if(is_email_required()) { ?> required<?php } ?>>\n\t\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"email\"]; ?></span>\n\t\t\t\t\t\t<?php if(get_changed_email_message()) { ?><div class=\"input-below highlight padding-5\"><?php echo get_changed_email_message(); ?></div><?php } ?>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<hr class=\"line-separator\"></hr>\n\n\t\t\t\t<?php if(CHV\\getSetting('enable_expirable_uploads')) { ?>\n                <div class=\"input-label\">\n                    <label for=\"image_expiration\"><?php _se('Auto delete uploads'); ?></label>\n                    <div class=\"c6 phablet-1\">\n                        <select type=\"text\" name=\"image_expiration\" id=\"image_expiration\" class=\"text-input\">\n                        <?php\n                            echo CHV\\Render\\get_select_options_html(CHV\\Image::getAvailableExpirations(), get_safe_post() ? get_safe_post()['image_expiration'] : get_user()['image_expiration']);\n                        ?>\n                        </select>\n                    </div>\n\t\t\t\t\t<div class=\"input-below input-warning red-warning\"><?php echo get_input_errors()[\"image_expiration\"]; ?></div>\n                    <div class=\"input-below\"><?php _se('This setting will apply to all your image uploads by default. You can override this setting on each upload.'); ?></div>\n                </div>\n\n                <hr class=\"line-separator\"></hr>\n\n\t\t\t\t<?php } ?>\n\n                <?php if(CHV\\getSetting('upload_image_exif_user_setting')) { ?>\n                <div class=\"input-label\">\n                    <label><?php _se('Image Exif data'); ?></label>\n\t\t\t\t\t<?php echo CHV\\Render\\get_checkbox_html([\n\t\t\t\t\t\t'name'\t\t=> 'image_keep_exif',\n\t\t\t\t\t\t'label'\t\t=> _s('Keep image <a %s>Exif data</a> on upload', 'href=\"https://www.google.com/search?q=Exif\" target=\"_blank\"'),\n\t\t\t\t\t\t'checked'\t=> ((bool)(get_safe_post() ? get_safe_post()['image_keep_exif'] : get_user()['image_keep_exif']))\n\t\t\t\t\t]); ?>\n                </div>\n                <?php } ?>\n\n\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t<label><?php _se('Newsletter'); ?></label>\n\t\t\t\t\t<?php echo CHV\\Render\\get_checkbox_html([\n\t\t\t\t\t\t'name'\t\t=> 'newsletter_subscribe',\n\t\t\t\t\t\t'label'\t\t=> _s('Send me emails with news about %s', CHV\\getSetting('website_name')),\n\t\t\t\t\t\t'checked'\t=> ((bool)(get_safe_post() ? get_safe_post()['newsletter_subscribe'] : get_user()['newsletter_subscribe']))\n\t\t\t\t\t]); ?>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t<label><?php _se('Content settings'); ?></label>\n\t\t\t\t\t<?php echo CHV\\Render\\get_checkbox_html([\n\t\t\t\t\t\t'name'\t\t=> 'show_nsfw_listings',\n\t\t\t\t\t\t'label'\t\t=> _s('Show not safe content in listings (from others)'),\n\t\t\t\t\t\t'checked'\t=> ((bool)(get_safe_post() ? get_safe_post()['show_nsfw_listings'] : get_user()['show_nsfw_listings']))\n\t\t\t\t\t]); ?>\n\t\t\t\t</div>\n\n\t\t\t\t<hr class=\"line-separator\"></hr>\n\n\t\t\t\t<?php if(CHV\\getSetting('language_chooser_enable')) { ?>\n\t\t\t\t<div class=\"c5 phablet-c1\">\n\t\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t\t<label for=\"language\"><?php _se('Language'); ?></label>\n\t\t\t\t\t\t<select name=\"language\" id=\"language\" class=\"text-input\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$enabled_languages = CHV\\get_enabled_languages();\n\t\t\t\t\t\t\t\tforeach($enabled_languages as $k => $v){\n\t\t\t\t\t\t\t\t\t$selected_lang = $k == CHV\\get_language_used()['code'] ? \" selected\" : \"\";\n\t\t\t\t\t\t\t\t\techo '<option value=\"'.$k.'\"'.$selected_lang.'>'.$v[\"name\"].'</option>'.\"\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<?php } ?>\n\n\t\t\t\t<?php\n\n\t\t\t\t$zones = timezone_identifiers_list();\n\n\t\t\t\tforeach ($zones as $zone) {\n\t\t\t\t\t$zone = explode('/', $zone);\n\t\t\t\t\tif(in_array($zone[0], array(\"Africa\", \"America\", \"Antarctica\", \"Arctic\", \"Asia\", \"Atlantic\", \"Australia\", \"Europe\", \"Indian\", \"Pacific\"))) {\n\t\t\t\t\t\tif (isset($zone[1]) != '') {\n\t\t\t\t\t\t\t$regions[$zone[0]][$zone[0]. '/' . $zone[1]] = str_replace('_', ' ', $zone[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t?>\n\n\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t<label for=\"timezone\"><?php _se('Timezone'); ?></label>\n\n\t\t\t\t\t<div class=\"overflow-auto\">\n\n\t\t\t\t\t\t<select id=\"timezone-region\" class=\"c5 phablet-c1 grid-columns margin-right-10 phone-margin-bottom-10 phablet-margin-bottom-10 text-input\" data-combo=\"timezone-combo\">\n\t\t\t\t\t\t\t<option><?php _se('Select region'); ?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$user_region = preg_replace(\"/(.*)\\/.*/\", \"$1\", get_user()[\"timezone\"]);\n\t\t\t\t\t\t\t\tforeach($regions as $key => $region) {\n\t\t\t\t\t\t\t\t\t$selected = $user_region == $key ? \" selected\" : \"\";\n\t\t\t\t\t\t\t\t\techo '<option value=\"'.$key.'\"'.$selected.'>'.$key.'</option>';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<div id=\"timezone-combo\" class=\"c5 phablet-c1 grid-columns\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tforeach($regions as $key => $region) {\n\t\t\t\t\t\t\t\t\t$show_hide = $user_region == $key ? \"\" : \" soft-hidden\";\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<select id=\"timezone-combo-<?php echo $key; ?>\" class=\"text-input switch-combo<?php echo $show_hide; ?>\" data-combo-value=\"<?php echo $key; ?>\">\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tforeach($region as $k => $l) {\n\t\t\t\t\t\t\t\t\t\t$selected = get_user()[\"timezone\"] == $k ? \" selected\" : \"\";\n\t\t\t\t\t\t\t\t\t\techo '<option value=\"'.$k.'\"'.$selected.'>'.$l.'</option>'.\"\\n\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<input type=\"hidden\" id=\"timezone\" name=\"timezone\" data-content=\"timezone\" data-highlight=\"#timezone-region\" value=\"<?php echo get_user()[\"timezone\"]; ?>\" required>\n\n\t\t\t\t</div>\n\n\t\t\t\t<?php } ?>\n\n\t\t\t\t<?php if(is_settings_password()) { ?>\n\n\t\t\t\t<?php\n\t\t\t\t\t// User has password\n\t\t\t\t\tif(get_user()[\"login\"][\"password\"] !== NULL) {\n\t\t\t\t?>\n\t\t\t\t<div class=\"c9 phablet-c1\">\n\t\t\t\t\t<?php\n\t\t\t\t\t\tif(!is_dashboard_user()) {\n\t\t\t\t\t?>\n\t\t\t\t\t<div class=\"input-label input-password\">\n\t\t\t\t\t\t<label for=\"current-password\"><?php _se('Current password'); ?></label>\n\t\t\t\t\t\t<input type=\"password\" name=\"current-password\" id=\"current-password\" class=\"text-input\" value=\"<?php echo get_safe_post()[\"current-password\"]; ?>\" placeholder=\"<?php _se('Enter your current password'); ?>\" required>\n\t\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"current-password\"]; ?></span>\n\t\t\t\t\t\t<div class=\"input-below text-align-right\"><a href=\"<?php echo G\\get_base_url(\"account/password-forgot\"); ?>\"><?php _se('Forgot password?'); ?></a></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<?php\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t\t<div class=\"input-label input-password\">\n\t\t\t\t\t\t<label for=\"new-password\"><?php _se('New password'); ?></label>\n\t\t\t\t\t\t<input type=\"password\" name=\"new-password\" id=\"new-password\" class=\"text-input\" value=\"<?php echo get_safe_post()[\"new-password\"]; ?>\" pattern=\"<?php echo CHV\\getSetting('user_password_pattern'); ?>\" rel=\"tooltip\" title=\"<?php _se('%d characters min', CHV\\getSetting('user_password_min_length')); ?>\" data-tipTip=\"right\" placeholder=\"<?php _se('Enter your new password'); ?>\" required>\n\t\t\t\t\t\t<div class=\"input-password-strength\"><span style=\"width: 0%\" data-content=\"password-meter-bar\"></span></div>\n\t\t\t\t\t\t<span class=\"input-warning red-warning\" data-text=\"password-meter-message\"><?php echo get_input_errors()[\"new-password\"]; ?></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"input-label input-password\">\n\t\t\t\t\t\t<label for=\"new-password-confirm\"><?php _se('Confirm new password'); ?></label>\n\t\t\t\t\t\t<input type=\"password\" name=\"new-password-confirm\" id=\"new-password-confirm\" class=\"text-input\" value=\"<?php echo get_safe_post()[\"new-password-confirm\"]; ?>\" placeholder=\"<?php _se('Re-enter your new password'); ?>\" required>\n\t\t\t\t\t\t<span class=\"text-align-right input-warning input-below red-warning<?php echo get_input_errors()[\"new-password-confirm\"] ? \"\" : \" hidden-visibility\"; ?>\" data-text=\"<?php _se(\"Passwords don't match\"); ?>\"><?php if(get_input_errors()[\"new-password-confirm\"]) { echo _s(\"Passwords don't match\"); } ?></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<?php\n\t\t\t\t\t} else { // User must create a password\n\t\t\t\t?>\n\t\t\t\t<p><?php if(!is_dashboard_user()) { _se('Add a password to be able to login using your username or email.'); } else { _se(\"This user doesn't have a password. Add one using this form.\"); } ?></p>\n\t\t\t\t<div class=\"c9 phablet-c1\">\n\t\t\t\t\t<div class=\"input-label input-password\">\n\t\t\t\t\t\t<label for=\"new-password\"><?php _se('Password'); ?></label>\n\t\t\t\t\t\t<input type=\"password\" name=\"new-password\" id=\"new-password\" class=\"text-input\" value=\"<?php echo get_safe_post()[\"new-password\"]; ?>\" pattern=\"<?php echo CHV\\getSetting('user_password_pattern'); ?>\" rel=\"tooltip\" title=\"<?php _se('%d characters min', CHV\\getSetting('user_password_min_length')); ?>\" data-tipTip=\"right\" placeholder=\"<?php _se('Enter your password'); ?>\" required>\n\t\t\t\t\t\t<div class=\"input-password-strength\"><span style=\"width: 0%\" data-content=\"password-meter-bar\"></span></div>\n\t\t\t\t\t\t<span class=\"input-warning red-warning\" data-text=\"password-meter-message\"><?php echo get_input_errors()[\"new-password\"]; ?></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"input-label input-password\">\n\t\t\t\t\t\t<label for=\"new-password-confirm\"><?php _se('Confirm password'); ?></label>\n\t\t\t\t\t\t<input type=\"password\" name=\"new-password-confirm\" id=\"new-password-confirm\" class=\"text-input\" value=\"<?php echo get_safe_post()[\"new-password-confirm\"]; ?>\" maxlength=\"255\" placeholder=\"<?php _se('Re-enter your password'); ?>\" required>\n\t\t\t\t\t\t<span class=\"input-warning red-warning<?php echo get_input_errors()[\"new-password-confirm\"] ? \"\" : \" hidden-visibility\"; ?>\" data-text=\"<?php _se(\"Passwords don't match\"); ?>\"><?php _se(\"Passwords don't match\"); ?></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<?php\n\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t\t<?php } ?>\n\n\t\t\t\t<?php if(is_settings_profile()) { ?>\n\t\t\t\t<div class=\"c19 phablet-c1\">\n\t\t\t\t\t<div class=\"input-upload user-settings-avatar\">\n\t\t\t\t\t\t<div class=\"user-settings-avatar-container grid-columns margin-right-10 phablet-float-left\">\n\t\t\t\t\t\t\t<?php if(get_user()[\"avatar\"][\"url\"]) { ?>\n\t\t\t\t\t\t\t<img src=\"<?php echo get_user()[\"avatar\"][\"url\"]; ?>\" alt=\"\" class=\"user-image\">\n\t\t\t\t\t\t\t<?php } else { ?>\n\t\t\t\t\t\t\t<img src=\"\" alt=\"\" class=\"user-image<?php echo (!get_user()[\"avatar\"][\"url\"] ? ' hidden' : ''); ?>\">\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t<span class=\"user-image default-user-image<?php echo (get_user()[\"avatar\"][\"url\"] ? ' hidden' : ''); ?>\"><span class=\"icon icon-user\"></span></span>\n\t\t\t\t\t\t\t<div class=\"user-image loading-placeholder hidden\"><?php _se('loading'); ?></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"actions\">\n\t\t\t\t\t\t\t<div class=\"btn-container\">\n\t\t\t\t\t\t\t\t<a class=\"btn default\" data-trigger=\"user-avatar-upload\"><?php _se('Upload new image'); ?></a>\n\t\t\t\t\t\t\t\t<div class=\"<?php echo (get_user()[\"avatar\"] == NULL ? 'soft-hidden' : ''); ?>\">\n\t\t\t\t\t\t\t\t\t<span class=\"btn-alt\"><?php _se('or'); ?> <a data-action=\"delete-avatar\"><?php _se('Delete existing image'); ?></a></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input id=\"user-avatar-upload\" data-content=\"user-avatar-upload-input\" class=\"hidden-visibility\" type=\"file\" accept=\"image/*\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"input-label\">\n                    <label><?php _se('Privacy'); ?></label>\n\t\t\t\t\t<?php echo CHV\\Render\\get_checkbox_html([\n\t\t\t\t\t\t'name'\t\t=> 'is_private',\n\t\t\t\t\t\t'label'\t\t=> _s('Make my profile and identity totally private'),\n\t\t\t\t\t\t'tooltip'\t=> _s('Enable this if you want to act like an anonymous user'),\n\t\t\t\t\t\t'checked'\t=> ((bool)(get_safe_post() ? get_safe_post()['is_private'] : get_user()['is_private']))\n\t\t\t\t\t]); ?>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"c9 phablet-c1\">\n\t\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t\t<label for=\"name\"><?php _se('Name'); ?></label>\n\t\t\t\t\t\t<input type=\"text\" name=\"name\" id=\"name\" class=\"text-input\" maxlength=\"60\" value=\"<?php echo get_safe_post() ? get_safe_post()[\"name\"] : get_safe_html_user()[\"name\"]; ?>\" placeholder=\"Your real name\" required>\n\t\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"name\"]; ?></span>\n\t\t\t\t\t\t<?php if(!is_dashboard_user()) { ?><div class=\"input-below\"><?php _se('This is your real name, not your username.'); ?></div><?php } ?>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t\t<label for=\"website\"><?php _se('Website'); ?></label>\n\t\t\t\t\t\t<input type=\"url\" name=\"website\" id=\"website\" class=\"text-input\" value=\"<?php echo get_safe_post() ? get_safe_post()[\"website\"] : get_user()[\"website_safe_html\"]; ?>\" data-validate rel=\"tooltip\" title=\"<?php _se('http://yourwebsite.com'); ?>\" data-tipTip=\"right\" placeholder=\"<?php _se('http://yourwebsite.com'); ?>\">\n\t\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"website\"]; ?></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t\t<label for=\"bio\"><?php _se('Bio'); ?></label>\n\t\t\t\t\t\t<textarea name=\"bio\" id=\"bio\" class=\"resize-vertical\" placeholder=\"<?php _se('Tell us a little bit about you'); ?>\" maxlength=\"255\"><?php echo get_safe_post() ? get_safe_post()[\"bio\"] : get_safe_html_user()[\"bio\"]; ?></textarea>\n\t\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"bio\"]; ?></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<?php } ?>\n\n\t\t\t\t<?php\n\t\t\t\t\tif(is_settings_linked_accounts()) {\n\n\t\t\t\t\t\tif(is_dashboard_user()) {\n\t\t\t\t?>\n\t\t\t\t<p data-content=\"empty-message\" <?php if(count(get_connections()) > 0) { ?>class=\"soft-hidden\"<?php } ?>><?php _se('User has no connections.'); ?></p>\n\t\t\t\t<?php\n\t\t\t\t\t\t} else {\n\t\t\t\t?>\n\t\t\t\t<p><?php _se('Link your account to external services to be able to login and share content.'); ?></p>\n\t\t\t\t<?php\n\t\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t\t<?php\n\t\t\t\t\t\tforeach(get_connections() as $connection) {\n\t\t\t\t\t\t\tif(is_dashboard_user()) {\n\t\t\t\t\t\t\t\t$confirm_message = _s('Do you really want to disconnect %s from this account?', $connection['type_label']);\n\t\t\t\t\t\t\t\t$title = _s('This account is connected to %s', $connection['type_label']);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$confirm_message = _s('Do you really want to disconnect your %s account?', $connection['type_label']);\n\t\t\t\t\t\t\t\tif(CHV\\Login::getSession()['type'] == $connection['type']) {\n\t\t\t\t\t\t\t\t\t$confirm_message .= ' ' . _s(\"You will be logged out and you won't be able to login to your account using this %s account.\", $connection['type_label']);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$title = _s('Your account is connected to %s', $connection['type_label']);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$title .= ' (<a href=\"'.$connection['resource_url'].'\" target=\"_blank\">'.$connection['resource_name'].'</a>)';\n\t\t\t\t?>\n\t\t\t\t<div class=\"account-link account-linked input-label overflow-auto\" data-connection=\"<?php echo $connection['type']; ?>\">\n\t\t\t\t\t<h3><span class=\"btn-icon icon-<?php echo $connection['type']; ?>\"></span> <?php echo $connection['type_label'];?> <a class=\"font-size-small margin-left-5\" data-action=\"disconnect\" data-connection=\"<?php echo $connection['type']; ?>\" data-confirm-message=\"<?php echo $confirm_message; ?>\"><?php _se('disconnect'); ?></a></h3>\n\t\t\t\t\t<div class=\"account-link-status\"><?php echo $title; ?></div>\n\t\t\t\t</div>\n\t\t\t\t<?php\n\t\t\t\t\t\t}\n\t\t\t\t?>\n\n\t\t\t\t<?php\n\t\t\t\t\t\tif(!is_dashboard_user()) {\n\t\t\t\t\t\t\tforeach(get_available_connections() as $connection => $label) {\n\t\t\t\t?>\n\t\t\t\t<div class=\"account-link input-label<?php if(get_connections()[$connection]) echo ' soft-hidden'; ?>\" data-connect=\"<?php echo $connection; ?>\">\n\t\t\t\t\t<h3><?php echo $label; ?></h3>\n\t\t\t\t\t<a class=\"link-service link-<?php echo $connection; ?>\" href=\"<?php echo G\\get_base_url('connect/'.$connection.'/?return='.urlencode('settings/linked-accounts')); ?>\"><span class=\"btn-icon icon-<?php echo $connection; ?>\"></span><span class=\"sign-text\"><?php echo _se('Connect %s', $label); ?></span></a>\n\t\t\t\t</div>\n\t\t\t\t<?php\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t?>\n\n\t\t\t\t<?php } ?>\n\n\t\t\t\t<?php if(is_settings_homepage()) { ?>\n\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t<label for=\"homepage_title_html\"><?php _se('Title'); ?></label>\n\t\t\t\t\t<div class=\"c12 phablet-c1\"><textarea type=\"text\" name=\"homepage_title_html\" id=\"homepage_title_html\" class=\"text-input r2 resize-vertical\" placeholder=\"<?php echo get_user()['name']; ?>\"><?php echo CHV\\Settings::get('homepage_title_html'); ?></textarea></div>\n\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"homepage_title_html\"]; ?></span>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t<label for=\"homepage_paragraph_html\"><?php _se('Paragraph'); ?></label>\n\t\t\t\t\t<div class=\"c12 phablet-c1\"><textarea type=\"text\" name=\"homepage_paragraph_html\" id=\"homepage_paragraph_html\" class=\"text-input r2 resize-vertical\" placeholder=\"<?php _se('Feel free to browse and discover all my shared images and albums.'); ?>\"><?php echo CHV\\Settings::get('homepage_paragraph_html'); ?></textarea></div>\n\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"homepage_paragraph_html\"]; ?></span>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t<label for=\"homepage_cta_html\"><?php _se('Button'); ?></label>\n\t\t\t\t\t<div class=\"c12 phablet-c1\"><textarea type=\"text\" name=\"homepage_cta_html\" id=\"homepage_cta_html\" class=\"text-input r2 resize-vertical\" placeholder=\"<?php _se('View all my images'); ?>\"><?php echo CHV\\Settings::get('homepage_cta_html'); ?></textarea></div>\n\t\t\t\t\t<span class=\"input-warning red-warning\"><?php echo get_input_errors()[\"homepage_cta_html\"]; ?></span>\n\t\t\t\t</div>\n\t\t\t\t<?php } ?>\n\n\t\t\t\t<hr class=\"line-separator\"></hr>\n\n\t\t\t\t<?php if(is_captcha_needed()) { ?>\n\t\t\t\t<div class=\"input-label\">\n\t\t\t\t\t<label for=\"recaptcha_response_field\">reCAPTCHA</label>\n\t\t\t\t\t<?php echo get_recaptcha_html(); ?>\n\t\t\t\t</div>\n\t\t\t\t<?php } ?>\n\n\t\t\t\t<?php if(!is_settings_linked_accounts()) { ?>\n\t\t\t\t<div class=\"btn-container\">\n\t\t\t\t\t<button class=\"btn btn-input default\" type=\"submit\"><?php _se('Save changes'); ?></button> <span class=\"btn-alt\"><?php _se('or'); ?> <a href=\"<?php echo get_user()[\"url\"]; ?>\"><?php _se('cancel'); ?></a></span>\n\t\t\t\t</div>\n\t\t\t\t<?php } ?>\n\n\t\t\t</form>\n\t\t</div>\n\n\t</div>\n\n</div>\n\n<?php if(get_post() and (is_changed() or is_error())) { ?>\n<script>\n$(function() {\n\tPF.fn.growl.expirable(\"<?php echo is_changed() ? (get_changed_message() ? get_changed_message() : _s('Changes have been saved.')) : _s('Check the errors to proceed.'); ?>\");\n});\n</script>\n<?php } ?>\n\n<?php G\\Render\\include_theme_footer(); ?>"], "filenames": ["app/app.php", "app/install/installer.php", "app/routes/route.settings.php", "app/themes/Peafowl/views/settings.php"], "buggy_code_start_loc": [3, 246, 12, 5], "buggy_code_end_loc": [4, 246, 470, 483], "fixing_code_start_loc": [3, 247, 12, 5], "fixing_code_end_loc": [4, 248, 473, 483], "type": "CWE-79", "message": "Chevereto Free before 1.0.13 has XSS.", "other": {"cve": {"id": "CVE-2018-12030", "sourceIdentifier": "cve@mitre.org", "published": "2018-06-15T16:29:00.263", "lastModified": "2018-08-01T13:29:30.847", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Chevereto Free before 1.0.13 has XSS."}, {"lang": "es", "value": "Chevereto Free en versiones anteriores a la 1.0.13 tiene Cross-Site Scripting (XSS)."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:chevereto:chevereto:*:*:*:*:free:*:*:*", "versionEndExcluding": "1.0.13", "matchCriteriaId": "D741C89F-9779-4E77-9259-01AB27459956"}]}]}], "references": [{"url": "https://edricteo.com/chevereto-free-xss-vulnerability-in-version-1.0.12/", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/Chevereto/Chevereto-Free/commit/159daeab6adfe828bd06e6e74f5b647bf9b1bb70", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Chevereto/Chevereto-Free/commit/159daeab6adfe828bd06e6e74f5b647bf9b1bb70"}}