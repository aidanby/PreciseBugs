{"buggy_code": ["/**\r\n * The contents of this file are subject to the OpenMRS Public License\r\n * Version 1.0 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * http://license.openmrs.org\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\"\r\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing rights and limitations\r\n * under the License.\r\n *\r\n * Copyright (C) OpenMRS, LLC.  All Rights Reserved.\r\n */\r\npackage org.openmrs.module.appointmentscheduling.validator;\r\n\r\nimport org.apache.commons.logging.Log;\r\nimport org.apache.commons.logging.LogFactory;\r\nimport org.openmrs.annotation.Handler;\r\nimport org.openmrs.module.appointmentscheduling.AppointmentType;\r\nimport org.openmrs.module.appointmentscheduling.api.AppointmentService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.beans.factory.annotation.Qualifier;\r\nimport org.springframework.validation.Errors;\r\nimport org.springframework.validation.ValidationUtils;\r\nimport org.springframework.validation.Validator;\r\n\r\n/**\r\n * Validates attributes on the {@link AppointmentType} object.\r\n */\r\n@Handler(supports = { AppointmentType.class }, order = 50)\r\npublic class AppointmentTypeValidator implements Validator {\r\n\t\r\n\t/** Log for this class and subclasses */\r\n\tprotected final Log log = LogFactory.getLog(getClass());\r\n\t\r\n\t@Autowired\r\n\t@Qualifier(\"appointmentService\")\r\n\tprivate AppointmentService appointmentService;\r\n\t\r\n\t/**\r\n\t * Determines if the command object being submitted is a valid type\r\n\t * \r\n\t * @see org.springframework.validation.Validator#supports(java.lang.Class)\r\n\t */\r\n\t@SuppressWarnings(\"unchecked\")\r\n\tpublic boolean supports(Class c) {\r\n\t\treturn c.equals(AppointmentType.class);\r\n\t}\r\n\t\r\n\tpublic void setAppointmentService(AppointmentService appointmentService) {\r\n\t\tthis.appointmentService = appointmentService;\r\n\t}\r\n\t\r\n\tpublic AppointmentService getAppointmentService() {\r\n\t\treturn appointmentService;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Checks the form object for any inconsistencies/errors\r\n\t * \r\n\t * @see org.springframework.validation.Validator#validate(java.lang.Object,\r\n\t *      org.springframework.validation.Errors)\r\n\t * <strong>Should</strong> fail validation if name is null or empty or whitespace\r\n\t * <strong>Should</strong> pass validation if all required fields have proper values\r\n\t */\r\n\tpublic void validate(Object obj, Errors errors) {\r\n\t\tAppointmentType appointmentType = (AppointmentType) obj;\r\n\t\tif (appointmentType == null) {\r\n\t\t\terrors.rejectValue(\"appointmentType\", \"error.general\");\r\n\t\t} else {\r\n\t\t\tvalidateDurationField(errors, appointmentType);\r\n\t\t\tvalidateFieldName(errors, appointmentType);\r\n\t\t\tvalidateDescriptionField(errors, appointmentType.getDescription());\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate void validateFieldName(Errors errors, AppointmentType appointmentType) {\r\n\t\tValidationUtils.rejectIfEmptyOrWhitespace(errors, \"name\", \"error.name\");\r\n\t\tif (appointmentService.verifyDuplicatedAppointmentTypeName(appointmentType)) {\r\n\t\t\terrors.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.nameDuplicated\");\r\n\t\t}\r\n\t\tif (verifyIfNameHasMoreThan100Characters(appointmentType.getName())) {\r\n\t\t\terrors.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.longName.errorMessage\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate boolean verifyIfNameHasMoreThan100Characters(String appointmentName) {\r\n\t\tif (appointmentName != null) {\r\n\t\t\treturn (appointmentName.length() > 100) ? true : false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tprivate void validateDurationField(Errors errors, AppointmentType appointmentType) {\r\n\t\tValidationUtils.rejectIfEmpty(errors, \"duration\", \"appointmentscheduling.AppointmentType.durationEmpty\");\r\n\t\tif (appointmentType.getDuration() == null || appointmentType.getDuration() <= 0) {\r\n\t\t\terrors.rejectValue(\"duration\", \"appointmentscheduling.AppointmentType.duration.errorMessage\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate void validateDescriptionField(Errors errors, String description) {\r\n\t\tif (verifyIfDescriptionHasMoreThan1024Characters(description)) {\r\n\t\t\terrors.rejectValue(\"description\", \"appointmentscheduling.AppointmentType.description.errorMessage\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate boolean verifyIfDescriptionHasMoreThan1024Characters(String description) {\r\n\t\tif (description != null) {\r\n\t\t\treturn (description.length() > 1024) ? true : false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n}\r\n", "${project.parent.artifactId}.title=Appointment Module\n${project.parent.artifactId}.header.link=Appointments\n${project.parent.artifactId}.appointmentsTab=Appointments\n\n${project.parent.artifactId}.AppointmentType.manage=Appointment Types\n${project.parent.artifactId}.AppointmentType.purgeConfirmMessage=Are you sure you want to purge this appointment type? It will be permanently removed from the system.\n${project.parent.artifactId}.AppointmentType.title=Appointment Type\n${project.parent.artifactId}.AppointmentType.retireAppointmentType=Retire Appointment Type\n${project.parent.artifactId}.AppointmentType.unretireAppointmentType=Unretire Appointment Type\n${project.parent.artifactId}.AppointmentType.purgeAppointmentType=Purge Appointment Type\n${project.parent.artifactId}.AppointmentType.save=Save Appointment Type\n${project.parent.artifactId}.AppointmentType.manage.title=Appointment Type Management\n${project.parent.artifactId}.AppointmentType.add=Add Appointment Type\n${project.parent.artifactId}.AppointmentType.list.title=Current Appointment Types\n${project.parent.artifactId}.AppointmentType.saved=Appointment Type saved\n${project.parent.artifactId}.AppointmentType.retiredSuccessfully=Appointment Type retired successfully\n${project.parent.artifactId}.AppointmentType.purgedSuccessfully=Appointment Type purged successfully\n${project.parent.artifactId}.AppointmentType.unretiredSuccessfully=Appointment Type unretired successfully\n${project.parent.artifactId}.AppointmentType.textDuration=Duration\n${project.parent.artifactId}.AppointmentType.enterDuration=Duration (in minutes)\n${project.parent.artifactId}.AppointmentType.durationEmpty=Empty appointment type duration\n${project.parent.artifactId}.AppointmentType.duration=Duration\n${project.parent.artifactId}.AppointmentType.duration.errorMessage = Duration must be a positive number\n${project.parent.artifactId}.AppointmentType.steps.details=Appointment Type Details\n${project.parent.artifactId}.AppointmentType.nameDuplicated=Name is duplicated\n${project.parent.artifactId}.AppointmentType.longName.errorMessage= Name must have less than 100 characters\n${project.parent.artifactId}.AppointmentType.description.errorMessage = Description must have less than 1024 characters\n\n${project.parent.artifactId}.AppointmentBlock.manage.title=Provider Scheduling\n${project.parent.artifactId}.AppointmentBlock.list.title=Current Appointment Blocks\n${project.parent.artifactId}.AppointmentBlock.column.select=Select\n${project.parent.artifactId}.AppointmentBlock.column.location=Location\n${project.parent.artifactId}.AppointmentBlock.legend.properties=Choose Properties\n${project.parent.artifactId}.AppointmentBlock.column.provider=Provider\n${project.parent.artifactId}.AppointmentBlock.column.appointmentTypes=Appointment Type(s)\n${project.parent.artifactId}.AppointmentBlock.column.startTime=Start Time\n${project.parent.artifactId}.AppointmentBlock.column.endTime=End Time\n${project.parent.artifactId}.AppointmentBlock.column.time=Time\n${project.parent.artifactId}.AppointmentBlock.column.date=Date\n${project.parent.artifactId}.AppointmentBlock.add=Add\n${project.parent.artifactId}.AppointmentBlock.edit=Edit\n${project.parent.artifactId}.AppointmentBlock.delete=Delete\n${project.parent.artifactId}.AppointmentBlock.pickDate=Pick a date interval\n${project.parent.artifactId}.AppointmentBlock.error.selectAppointmentBlock=Select an appointment block in order to perform that action\n${project.parent.artifactId}.AppointmentBlock.error.selectTimeSlot=select a valid time slot (greater than 0)\n${project.parent.artifactId}.AppointmentBlock.error.invalidDateInterval=First Date should be earlier than Second Date\n${project.parent.artifactId}.AppointmentBlock.error.dateCannotBeInThePast=Can't save an appointment block in the past\n${project.parent.artifactId}.AppointmentBlock.error.maximalTimeSlot=The time slot length can't be larger than the time interval selected\n${project.parent.artifactId}.AppointmentBlock.error.voidReasonEmpty=Void Reason can't be empty\n${project.parent.artifactId}.AppointmentBlock.error.appointmentsExist=Can't edit that appointment block time slot because there are appointments associated with it\n${project.parent.artifactId}.AppointmentBlock.error.appointmentBlockOverlap=Can't save because the selected provider is already scheduled at this time.\n${project.parent.artifactId}.AppointmentBlock.error.scheduledAppointmentBlocks= Can't search scheduled appointment block without date or location\n${project.parent.artifactId}.AppointmentBlock.error.cannotRemoveTypeFromBlockIfAppointmentScheduled=Can't remove an appointment type if there is already an appointment scheduled of that type\n${project.parent.artifactId}.AppointmentBlock.emptyTypes=Select at least one type\n${project.parent.artifactId}.AppointmentBlock.saved=Appointment Block saved\n${project.parent.artifactId}.AppointmentBlock.voidedSuccessfully=Appointment Block voided successfully\n${project.parent.artifactId}.AppointmentBlock.purgedSuccessfully=Appointment Block purged successfully\n${project.parent.artifactId}.AppointmentBlock.unvoidedSuccessfully=Appointment Block unvoided successfully\n${project.parent.artifactId}.AppointmentBlock.clinician=Provider\n${project.parent.artifactId}.AppointmentBlock.location=Location\n${project.parent.artifactId}.AppointmentBlock.appointmentType=Appointment Types\n${project.parent.artifactId}.AppointmentBlock.timeInterval=Time Interval\n${project.parent.artifactId}.AppointmentBlock.save=Save\n${project.parent.artifactId}.AppointmentBlock.label.clinicianNotSpecified=Not Specified\n${project.parent.artifactId}.AppointmentBlock.label.locationNotSpecified=(None)\n${project.parent.artifactId}.AppointmentBlock.voidAppointmentBlock=Void Appointment Block\n${project.parent.artifactId}.AppointmentBlock.unvoidAppointmentBlock=Unvoid Appointment Block\n${project.parent.artifactId}.AppointmentBlock.purgeAppointmentBlock=Purge Appointment Block\n${project.parent.artifactId}.AppointmentBlock.slotLength=Slot Length (minutes)\n${project.parent.artifactId}.AppointmentBlock.error.InvalidDateInterval=First Date should be earlier than Second Date\n${project.parent.artifactId}.AppointmentBlock.steps.selectClinician=1. Select a provider:\n${project.parent.artifactId}.AppointmentBlock.steps.selectLocation=2. Select a location:\n${project.parent.artifactId}.AppointmentBlock.steps.selectAppointmentTypes=3. Select appointment types (at least one):\n${project.parent.artifactId}.AppointmentBlock.steps.selectTimeInterval=4. Select time interval:\n${project.parent.artifactId}.AppointmentBlock.steps.defineTimeSlotLength=5. Define time slot length:\n${project.parent.artifactId}.AppointmentBlock.availableTypes=Available Types\n${project.parent.artifactId}.AppointmentBlock.chosenTypes=Chosen Types\n${project.parent.artifactId}.AppointmentBlock.startDate=Start Date\n${project.parent.artifactId}.AppointmentBlock.endDate=End Date\n${project.parent.artifactId}.AppointmentBlock.addType=Add type\n${project.parent.artifactId}.AppointmentBlock.apply=Apply\n${project.parent.artifactId}.AppointmentBlock.minutes=Minutes\n${project.parent.artifactId}.AppointmentBlock.types=Type(s)\n${project.parent.artifactId}.AppointmentBlock.calendarView=Calendar View\n${project.parent.artifactId}.AppointmentBlock.tableView=Table View\n${project.parent.artifactId}.AppointmentBlock.deleteDialog.title=Warning\n${project.parent.artifactId}.AppointmentBlock.cannotBeDeleted.part1=The block can not be deleted because\n${project.parent.artifactId}.AppointmentBlock.cannotBeDeleted.part2=patient(s) are currently in-consultation or waiting\n${project.parent.artifactId}.AppointmentBlock.deletingConfirmation.part1=Deleting this appointment block will cancel\n${project.parent.artifactId}.AppointmentBlock.deletingConfirmation.part2=scheduled appointments, are you sure you want to proceed?\n${project.parent.artifactId}.AppointmentBlock.dialogHeader=The patient(s) whose appointment will be cancelled\n${project.parent.artifactId}.AppointmentBlock.dialogTableHeaderName=Name\n${project.parent.artifactId}.AppointmentBlock.dialogTableHeaderPhone=Phone Number\n${project.parent.artifactId}.AppointmentBlock.dialogTableMissing=Missing\n${project.parent.artifactId}.AppointmentBlock.emptyStartDate=Select a start date\n${project.parent.artifactId}.AppointmentBlock.emptyEndDate=Select an end date\n${project.parent.artifactId}.AppointmentBlock.emptyProvider=Select a provider\n${project.parent.artifactId}.AppointmentBlock.emptyLocation=Select a location\n${project.parent.artifactId}.AppointmentBlock.emptyTypes=Select at least one type\n${project.parent.artifactId}.AppointmentBlock.dialogTable.openMrsId=OpenMRS ID\n${project.parent.artifactId}.AppointmentBlock.dialogTable.name=Name\n${project.parent.artifactId}.AppointmentBlock.dialogTable.date=Date\n${project.parent.artifactId}.AppointmentBlock.dialogTable.time=Time\n${project.parent.artifactId}.AppointmentBlock.dialogTable.type=Type\n${project.parent.artifactId}.AppointmentBlock.dialogTable.phoneNumber=Phone Number\n${project.parent.artifactId}.AppointmentBlock.dialogTable.reason=Reason\n${project.parent.artifactId}.AppointmentBlock.dialogTable.location=Location\n${project.parent.artifactId}.AppointmentBlock.dialogTable.provider=Provider\n${project.parent.artifactId}.AppointmentBlock.filters.provider=Provider\n${project.parent.artifactId}.AppointmentBlock.filters.type=Type\n${project.parent.artifactId}.AppointmentBlock.filters.view=View\n${project.parent.artifactId}.AppointmentBlock.filters.providerNotSpecified=All providers\n${project.parent.artifactId}.AppointmentBlock.filters.typeNotSpecified=All types\n${project.parent.artifactId}.AppointmentBlock.filters.statusNotSpecified=All states\n${project.parent.artifactId}.AppointmentBlock.filters.locationNotSpecified=All locations\n${project.parent.artifactId}.AppointmentBlock.calendar.scheduleError=Providers cannot be scheduled in the past, please try a different day.\n\n${project.parent.artifactId}.Appointment.emptyTimeSlot=Empty appointment time slot\n${project.parent.artifactId}.Appointment.emptyPatient=Empty appointment patient\n${project.parent.artifactId}.Appointment.emptyType=Empty appointment type\n${project.parent.artifactId}.Appointment.notSupportedType=The Time Slot does not support this appointment type\n${project.parent.artifactId}.Appointment.create=Create Appointment\n${project.parent.artifactId}.Appointment.create.titleSchedule=Create Appointment\n${project.parent.artifactId}.Appointment.create.titleWalkIn=Create \"Walk-In\" Appointment\n${project.parent.artifactId}.Appointment.create.label.charactersLeft=Characters left: \n${project.parent.artifactId}.Appointment.create.label.findPatient=Patient: \n${project.parent.artifactId}.Appointment.create.label.appointmentType=Appointment Type: \n${project.parent.artifactId}.Appointment.create.label.clinician=Provider: (optional)  \n${project.parent.artifactId}.Appointment.create.label.betweenDates=Between: (optional) \n${project.parent.artifactId}.Appointment.create.label.availableTimes=Available Times:\n${project.parent.artifactId}.Appointment.create.label.location=Location: (optional) \n${project.parent.artifactId}.Appointment.create.label.reason=Reason:  \n${project.parent.artifactId}.Appointment.create.confirmation.title=Appointment Details\n${project.parent.artifactId}.Appointment.create.confirmation.text=Are you sure you want to save?\n${project.parent.artifactId}.Appointment.create.link.viewPatient=View Patient\n${project.parent.artifactId}.Appointment.create.link.editPatient=Edit Patient\n${project.parent.artifactId}.Appointment.create.link.scheduleAppointment=Schedule New Appointment\n${project.parent.artifactId}.Appointment.create.link.walkinAppointment=Add \"Walk-In\" Appointment\n${project.parent.artifactId}.Appointment.create.save=Save Appointment\n${project.parent.artifactId}.Appointment.create.cancel=Cancel\n${project.parent.artifactId}.Appointment.create.findTime=Find Available Times\n${project.parent.artifactId}.Appointment.create.patientPhoneNumber=Phone Number: \n${project.parent.artifactId}.Appointment.create.patientMissedMeeting=Patient missed last scheduled appointment on \n${project.parent.artifactId}.Appointment.create.patientNoPhoneNumber=No record of patient's phone number.\n${project.parent.artifactId}.Appointment.create.patientNotMissedLastAppointment=Patient didn't miss last appointment.\n${project.parent.artifactId}.Appointment.create.header.clinician=Provider\n${project.parent.artifactId}.Appointment.create.header.appointmentType=Appointment Type\n${project.parent.artifactId}.Appointment.create.header.date=Date\n${project.parent.artifactId}.Appointment.create.header.timeSlot=Time Slot\n${project.parent.artifactId}.Appointment.create.header.selectedOption=Select\n${project.parent.artifactId}.Appointment.create.header.location=Location\n${project.parent.artifactId}.Appointment.create.table.empty=No time slots found. Define appointment properties and click Find Available Times button.\n${project.parent.artifactId}.Appointment.create.label.showFull=Show Full Slots\n${project.parent.artifactId}.Appointment.create.prompt.fullSlot=Warning! After scheduling this appointment the selected time slot will be {0} minute(s) over-scheduled\n${project.parent.artifactId}.Appointment.create.lbl.fullSlot = Full Time Slot  \n${project.parent.artifactId}.Appointment.saved=Appointment Saved\n${project.parent.artifactId}.Appointment.error.InvalidDateInterval=First Date should be earlier than Second Date\n${project.parent.artifactId}.Appointment.steps.selectPatient=1. Select a patient:\n${project.parent.artifactId}.Appointment.steps.defineAppointmentProperties=2. Define Appointment Properties:\n${project.parent.artifactId}.Appointment.steps.selectTime=3. Select Time:\n${project.parent.artifactId}.Appointment.steps.enterNotes=4. Enter Additional Notes: (optional)\n${project.parent.artifactId}.Appointment.list.manage=Manage Appointments\n${project.parent.artifactId}.Appointment.list.manage.title=Manage Appointments\n${project.parent.artifactId}.Appointment.list.title=Existing Appointments:\n${project.parent.artifactId}.Appointment.list.filterTitle=Filtering Options:\n${project.parent.artifactId}.Appointment.list.column.date=Date\n${project.parent.artifactId}.Appointment.list.column.time=Time\n${project.parent.artifactId}.Appointment.list.column.patient=Patient\n${project.parent.artifactId}.Appointment.list.column.clinician=Provider\n${project.parent.artifactId}.Appointment.list.column.location=Location\n${project.parent.artifactId}.Appointment.list.column.type=Type\n${project.parent.artifactId}.Appointment.list.column.status=Status\n${project.parent.artifactId}.Appointment.list.column.waitingTime=Waiting Time\n${project.parent.artifactId}.Appointment.list.label.showCancelled=Show Cancelled\n${project.parent.artifactId}.Appointment.list.label.appointmentStatus=Appointment Status:\n${project.parent.artifactId}.Appointment.list.label.betweenDates=Between Dates: \n${project.parent.artifactId}.Appointment.list.label.clinician=Provider: \n${project.parent.artifactId}.Appointment.list.label.location=Location:\n${project.parent.artifactId}.Appointment.list.button.applyFilters=Apply Filters\n${project.parent.artifactId}.Appointment.list.button.startConsultation=Start Consultation\n${project.parent.artifactId}.Appointment.list.button.endConsultation=End Consultation\n${project.parent.artifactId}.Appointment.list.button.checkIn=Check-In\n${project.parent.artifactId}.Appointment.list.button.missAppointment=Miss Appointment\n${project.parent.artifactId}.Appointment.list.button.cancelAppointment=Cancel Appointment\n${project.parent.artifactId}.Appointment.list.tooltip=Appointment Reason:\n${project.parent.artifactId}.Appointment.add=Schedule New Appointment\n${project.parent.artifactId}.Appointment.seconds=Seconds\n${project.parent.artifactId}.Appointment.minutes=Minutes\n${project.parent.artifactId}.Appointment.hours=Hours\n${project.parent.artifactId}.Appointment.days=Days\n${project.parent.artifactId}.Appointment.list.label.selectAnAction= Select an action:\n${project.parent.artifactId}.Appointment.list.table.empty=No appointments found.\n${project.parent.artifactId}.Appointment.list.prompt.openConsultation=Warning! This provider already has active consultation(s). Are you sure you want to start another?\n${project.parent.artifactId}.Appointment.error.timeSlotFull=The appointment cannot be booked because the time slot is already full.\n\n${project.parent.artifactId}.Appointment.settings.admin.title=Settings\n${project.parent.artifactId}.Appointment.settings.title=Appointments Scheduling Module Settings\n${project.parent.artifactId}.Appointment.settings.fieldset.gp=Global Properties:\n${project.parent.artifactId}.Appointment.settings.fieldset.additionalSettings=Additional Settings:\n${project.parent.artifactId}.Appointment.settings.label.visitType=Default Visit Type:\n${project.parent.artifactId}.Appointment.settings.label.phoneNumber=Phone Number Person Attribute:\n${project.parent.artifactId}.Appointment.settings.label.refreshAppointmentsList=Auto-Refresh Manage Appointments Form:\n${project.parent.artifactId}.Appointment.settings.label.hideEndVisit=Hide \"End Visit Now\" buttons:\n${project.parent.artifactId}.Appointment.settings.label.cleanOpenAppointmentScheduler=Clean open appointments at end of the day\n${project.parent.artifactId}.Appointment.settings.label.slotDuration=Default Time Slot Duration:\n${project.parent.artifactId}.Appointment.settings.label.every=Every:\n${project.parent.artifactId}.Appointment.settings.label.enable=Enable\n${project.parent.artifactId}.Appointment.settings.label.disable=Disable\n${project.parent.artifactId}.Appointment.settings.label.clean=Clean Open Appointments:\n${project.parent.artifactId}.Appointment.settings.button.clean=Clean Open Appointments\n${project.parent.artifactId}.Appointment.settings.error.minRefreshInterval= Minimum Refresh Interval is 60 seconds.\n${project.parent.artifactId}.Appointment.settings.error.time=Time Should Be Non-Negative, Numbers Only.\n${project.parent.artifactId}.Appointment.settings.notification.saved=Appointments Scheduling Module Settings Saved.\n${project.parent.artifactId}.Appointment.settings.prompt=Warning! This action cannot be reverted.\n${project.parent.artifactId}.Appointment.settings.label.appointmentChanged=Cleaning Done: {0} appointment(s) updated.\n${project.parent.artifactId}.Appointment.settings.label.loading=Loading...\n${project.parent.artifactId}.Appointment.settings.label.cleanTooltip=Set Waiting, Walk-In and Scheduled past appointments as Missed. Mark In-Consultation past appointments as Completed.\n\n${project.parent.artifactId}.Appointment.gp.desc.hideEndVisit=Hide \"End Visit Now\" buttons on the patient dashboard.\n${project.parent.artifactId}.Appointment.gp.desc.visitType=The Visit Type to be used when changing an appointment to \"In-Consultation\".\n${project.parent.artifactId}.Appointment.gp.desc.phoneAttribute=The person attribute that describes the person's contact details. (Preferably: Phone Number)\n${project.parent.artifactId}.Appointment.gp.desc.manageAppointmentsRefresh=Choose whether to auto-refresh Manage Appointments form.\n${project.parent.artifactId}.Appointment.gp.desc.defaultTimeSlotDuration=The default duration in minutes of a time slot.\n${project.parent.artifactId}.Appointment.gp.desc.cleanOpenAppointmentScheduler=Clean open appointments at end of the day\n\n${project.parent.artifactId}.Appointment.statistics.title=Appointments Statistics\n${project.parent.artifactId}.Appointment.statistics.datesFilter =Data created between: \n${project.parent.artifactId}.Appointment.statistics.title.waitingTime=Average Waiting Time by Appointment Type:\n${project.parent.artifactId}.Appointment.statistics.title.consultationDuration=Average Consultation Duration by Appointment Type:\n${project.parent.artifactId}.Appointment.statistics.title.waitingProviderTime=Average Waiting Time by Provider:\n${project.parent.artifactId}.Appointment.statistics.title.consultationProviderDuration=Average Consultation Duration by Provider:\n${project.parent.artifactId}.Appointment.statistics.title.typePie= Appointment Types Pie Chart: \n${project.parent.artifactId}.Appointment.statistics.title.filter=Select Data Interval:\n${project.parent.artifactId}.Appointment.statistics.label.dataSize=Based on {0} Appointment(s).\n${project.parent.artifactId}.Appointment.statistics.label.dataEmpty=No Appointments found.\n${project.parent.artifactId}.Appointment.statistics.label.minute=Minute(s)\n${project.parent.artifactId}.Appointment.statistics.label.showImage=Show as Image\n${project.parent.artifactId}.Appointment.statistics.label.noiseDisclaimer=Graphs displayed may include some noise reduction to acount for unrealistic data (f.e: appointment still in 'waiting' status)\n${project.parent.artifactId}.Appointment.statistics.axis.appointmentType=Appointment Type\n${project.parent.artifactId}.Appointment.statistics.axis.provider=Provider\n\n${project.parent.artifactId}.TimeSlot.emptyStartDate=Empty time slot start date\n${project.parent.artifactId}.TimeSlot.emptyEndDate=Empty time slot end date\n${project.parent.artifactId}.TimeSlot.emptyBlock=Empty time slot block\n${project.parent.artifactId}.TimeSlot.saved=Time Slot(s) Saved\n\n${project.parent.artifactId}.AppointmentRequest.emptyPatient=Paitient is required\n${project.parent.artifactId}.AppointmentRequest.emptyType=Appointment Type is required\n${project.parent.artifactId}AppointmentRequest.emptyRequestedOn=Requested Date is required\n${project.parent.artifactId}.AppointmentRequest.emptyStatus=Status is required\n\n${project.parent.artifactId}.AppointmentDataSetDefinition=Appointment Data Set Definition\n${project.parent.artifactId}.AppointmentReasonDataDefinition=Appointment Reason Data Definition\n${project.parent.artifactId}.AppointmentCancelReasonDataDefinition=Appointment Cancel Reason Data Definition\n${project.parent.artifactId}.AppointmentStatusDataDefinition=Appointment Status Data Definition\n${project.parent.artifactId}.appointmentscheduling.AppointmentStartDateDataDefinition=Appointment Start Date Data Definition\n${project.parent.artifactId}.appointmentscheduling.AppointmentEndDateDataDefinition=Appointment End Date Data Definition\n${project.parent.artifactId}.appointmentscheduling.AppointmentTypeDataDefinition=Appointment Type Data Definition\n${project.parent.artifactId}.appointmentscheduling.AppointmentLocationDataDefinition=Appointment Location Data Definition\n${project.parent.artifactId}.appointmentscheduling.AppointmentProviderDataDefinition=Appointment Provider Data Definition\n", "package org.openmrs.module.appointmentscheduling.validator;\r\n\r\nimport org.apache.commons.lang.StringUtils;\r\nimport org.junit.Before;\r\nimport org.junit.Test;\r\nimport org.mockito.Mockito;\r\nimport org.openmrs.module.appointmentscheduling.AppointmentType;\r\nimport org.openmrs.module.appointmentscheduling.api.AppointmentService;\r\nimport org.springframework.validation.Errors;\r\n\r\nimport static org.mockito.Mockito.never;\r\nimport static org.mockito.Mockito.when;\r\nimport static org.powermock.api.mockito.PowerMockito.mock;\r\n\r\npublic class AppointmentTypeValidatorTest {\r\n\t\r\n\tAppointmentService appointmentService;\r\n\t\r\n\tprivate AppointmentTypeValidator appointmentTypeValidator;\r\n\t\r\n\tprivate AppointmentType appointmentType;\r\n\t\r\n\tprivate Errors errors;\r\n\t\r\n\t@Before\r\n\tpublic void setUp() throws Exception {\r\n\t\tappointmentService = mock(AppointmentService.class);\r\n\t\tappointmentType = new AppointmentType(\"name\", \"desciption\", 10);\r\n\t\tappointmentTypeValidator = new AppointmentTypeValidator();\r\n\t\tappointmentTypeValidator.setAppointmentService(appointmentService);\r\n\t\terrors = mock(Errors.class);\r\n\t\t\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void mustRejectAppointmentTypeWithDuplicatedName() throws Exception {\r\n\t\twhen(appointmentService.verifyDuplicatedAppointmentTypeName(appointmentType)).thenReturn(true);\r\n\t\t\r\n\t\tappointmentTypeValidator.validate(appointmentType, errors);\r\n\t\t\r\n\t\tMockito.verify(errors).rejectValue(\"name\", \"appointmentscheduling.AppointmentType.nameDuplicated\");\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void mustAcceptAppointmentTypeWithNotDuplicatedName() throws Exception {\r\n\t\twhen(appointmentService.verifyDuplicatedAppointmentTypeName(appointmentType)).thenReturn(false);\r\n\t\t\r\n\t\tappointmentTypeValidator.validate(appointmentType, errors);\r\n\t\t\r\n\t\tMockito.verify(errors, never()).rejectValue(\"name\", \"appointmentscheduling.AppointmentType.nameDuplicated\");\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void mustRejectAppointmentTypeWithNegativeDuration() throws Exception {\r\n\t\tAppointmentType appointmentType = new AppointmentType(\"name\", \"desciption\", -5);\r\n\t\t\r\n\t\tappointmentTypeValidator.validate(appointmentType, errors);\r\n\t\t\r\n\t\tMockito.verify(errors).rejectValue(\"duration\", \"appointmentscheduling.AppointmentType.duration.errorMessage\");\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void mustRejectAppointmentTypeWithDurationEqualsZero() throws Exception {\r\n\t\tAppointmentType appointmentType = new AppointmentType(\"name\", \"desciption\", 0);\r\n\t\t\r\n\t\tappointmentTypeValidator.validate(appointmentType, errors);\r\n\t\t\r\n\t\tMockito.verify(errors).rejectValue(\"duration\", \"appointmentscheduling.AppointmentType.duration.errorMessage\");\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void mustAcceptAppointmentTypeWithPositiveDuration() throws Exception {\r\n\t\tappointmentTypeValidator.validate(appointmentType, errors);\r\n\t\t\r\n\t\tMockito.verify(errors, never()).rejectValue(\"duration\",\r\n\t\t    \"appointmentscheduling.AppointmentType.duration.errorMessage\");\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void mustRejectAppointmentTypeWithNullValue() throws Exception {\r\n\t\tAppointmentType appointmentType = new AppointmentType();\r\n\t\t\r\n\t\tappointmentTypeValidator.validate(appointmentType, errors);\r\n\t\t\r\n\t\tMockito.verify(errors).rejectValue(\"duration\", \"appointmentscheduling.AppointmentType.duration.errorMessage\");\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void mustRejectAppointmentTypeNameWithMoreThan100Characters() throws Exception {\r\n\t\tString longName = StringUtils.repeat(\"*\", 101);\r\n\t\tAppointmentType appointmentTypeLongName = new AppointmentType(longName, \"\", 10);\r\n\t\t\r\n\t\tappointmentTypeValidator.validate(appointmentTypeLongName, errors);\r\n\t\t\r\n\t\tMockito.verify(errors).rejectValue(\"name\", \"appointmentscheduling.AppointmentType.longName.errorMessage\");\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void mustRejectAppointmentTypeDescriptionWithMoreThan1024Characters() throws Exception {\r\n\t\tString longDescription = StringUtils.repeat(\"*\", 1025);\r\n\t\tAppointmentType appointmentTypeLongDuration = new AppointmentType(\"long description\", longDescription, 10);\r\n\t\t\r\n\t\tappointmentTypeValidator.validate(appointmentTypeLongDuration, errors);\r\n\t\t\r\n\t\tMockito.verify(errors).rejectValue(\"description\", \"appointmentscheduling.AppointmentType.description.errorMessage\");\r\n\t}\r\n\t\r\n}\r\n"], "fixing_code": ["/**\r\n * The contents of this file are subject to the OpenMRS Public License\r\n * Version 1.0 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * http://license.openmrs.org\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\"\r\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing rights and limitations\r\n * under the License.\r\n *\r\n * Copyright (C) OpenMRS, LLC.  All Rights Reserved.\r\n */\r\npackage org.openmrs.module.appointmentscheduling.validator;\r\n\r\nimport org.apache.commons.logging.Log;\r\nimport org.apache.commons.logging.LogFactory;\r\nimport org.openmrs.annotation.Handler;\r\nimport org.openmrs.module.appointmentscheduling.AppointmentType;\r\nimport org.openmrs.module.appointmentscheduling.api.AppointmentService;\r\nimport org.openmrs.web.WebUtil;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.beans.factory.annotation.Qualifier;\r\nimport org.springframework.validation.Errors;\r\nimport org.springframework.validation.ValidationUtils;\r\nimport org.springframework.validation.Validator;\r\n\r\n/**\r\n * Validates attributes on the {@link AppointmentType} object.\r\n */\r\n@Handler(supports = { AppointmentType.class }, order = 50)\r\npublic class AppointmentTypeValidator implements Validator {\r\n\t\r\n\t/** Log for this class and subclasses */\r\n\tprotected final Log log = LogFactory.getLog(getClass());\r\n\t\r\n\t@Autowired\r\n\t@Qualifier(\"appointmentService\")\r\n\tprivate AppointmentService appointmentService;\r\n\t\r\n\t/**\r\n\t * Determines if the command object being submitted is a valid type\r\n\t * \r\n\t * @see org.springframework.validation.Validator#supports(java.lang.Class)\r\n\t */\r\n\t@SuppressWarnings(\"unchecked\")\r\n\tpublic boolean supports(Class c) {\r\n\t\treturn c.equals(AppointmentType.class);\r\n\t}\r\n\t\r\n\tpublic void setAppointmentService(AppointmentService appointmentService) {\r\n\t\tthis.appointmentService = appointmentService;\r\n\t}\r\n\t\r\n\tpublic AppointmentService getAppointmentService() {\r\n\t\treturn appointmentService;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Checks the form object for any inconsistencies/errors\r\n\t * \r\n\t * @see org.springframework.validation.Validator#validate(java.lang.Object,\r\n\t *      org.springframework.validation.Errors)\r\n\t * <strong>Should</strong> fail validation if name is null or empty or whitespace\r\n\t * <strong>Should</strong> pass validation if all required fields have proper values\r\n\t */\r\n\tpublic void validate(Object obj, Errors errors) {\r\n\t\tAppointmentType appointmentType = (AppointmentType) obj;\r\n\t\tif (appointmentType == null) {\r\n\t\t\terrors.rejectValue(\"appointmentType\", \"error.general\");\r\n\t\t} else {\r\n\t\t\tvalidateDurationField(errors, appointmentType);\r\n\t\t\tvalidateFieldName(errors, appointmentType);\r\n\t\t\tvalidateDescriptionField(errors, appointmentType.getDescription());\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate void validateFieldName(Errors errors, AppointmentType appointmentType) {\r\n\t\tValidationUtils.rejectIfEmptyOrWhitespace(errors, \"name\", \"error.name\");\r\n\t\tif (appointmentService.verifyDuplicatedAppointmentTypeName(appointmentType)) {\r\n\t\t\terrors.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.nameDuplicated\");\r\n\t\t}\r\n\t\tif (verifyIfNameHasMoreThan100Characters(appointmentType.getName())) {\r\n\t\t\terrors.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.longName.errorMessage\");\r\n\t\t}\r\n\t\tif(verifyIfNameHasHtmlEncodableChars(appointmentType.getName())){\r\n\t\t\terrors.rejectValue(\"name\", \"appointmentscheduling.AppointmentType.unsafeName.errorMessage\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate boolean verifyIfNameHasMoreThan100Characters(String appointmentName) {\r\n\t\tif (appointmentName != null) {\r\n\t\t\treturn (appointmentName.length() > 100) ? true : false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tprivate void validateDurationField(Errors errors, AppointmentType appointmentType) {\r\n\t\tValidationUtils.rejectIfEmpty(errors, \"duration\", \"appointmentscheduling.AppointmentType.durationEmpty\");\r\n\t\tif (appointmentType.getDuration() == null || appointmentType.getDuration() <= 0) {\r\n\t\t\terrors.rejectValue(\"duration\", \"appointmentscheduling.AppointmentType.duration.errorMessage\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate void validateDescriptionField(Errors errors, String description) {\r\n\t\tif (verifyIfDescriptionHasMoreThan1024Characters(description)) {\r\n\t\t\terrors.rejectValue(\"description\", \"appointmentscheduling.AppointmentType.description.errorMessage\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate boolean verifyIfDescriptionHasMoreThan1024Characters(String description) {\r\n\t\tif (description != null) {\r\n\t\t\treturn (description.length() > 1024) ? true : false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate boolean verifyIfNameHasHtmlEncodableChars(String appointmentName) {\r\n\t\tif(appointmentName != null){\r\n\t\t\treturn !WebUtil.escapeHTML(appointmentName).equals(appointmentName);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n}\r\n", "${project.parent.artifactId}.title=Appointment Module\n${project.parent.artifactId}.header.link=Appointments\n${project.parent.artifactId}.appointmentsTab=Appointments\n\n${project.parent.artifactId}.AppointmentType.manage=Appointment Types\n${project.parent.artifactId}.AppointmentType.purgeConfirmMessage=Are you sure you want to purge this appointment type? It will be permanently removed from the system.\n${project.parent.artifactId}.AppointmentType.title=Appointment Type\n${project.parent.artifactId}.AppointmentType.retireAppointmentType=Retire Appointment Type\n${project.parent.artifactId}.AppointmentType.unretireAppointmentType=Unretire Appointment Type\n${project.parent.artifactId}.AppointmentType.purgeAppointmentType=Purge Appointment Type\n${project.parent.artifactId}.AppointmentType.save=Save Appointment Type\n${project.parent.artifactId}.AppointmentType.manage.title=Appointment Type Management\n${project.parent.artifactId}.AppointmentType.add=Add Appointment Type\n${project.parent.artifactId}.AppointmentType.list.title=Current Appointment Types\n${project.parent.artifactId}.AppointmentType.saved=Appointment Type saved\n${project.parent.artifactId}.AppointmentType.retiredSuccessfully=Appointment Type retired successfully\n${project.parent.artifactId}.AppointmentType.purgedSuccessfully=Appointment Type purged successfully\n${project.parent.artifactId}.AppointmentType.unretiredSuccessfully=Appointment Type unretired successfully\n${project.parent.artifactId}.AppointmentType.textDuration=Duration\n${project.parent.artifactId}.AppointmentType.enterDuration=Duration (in minutes)\n${project.parent.artifactId}.AppointmentType.durationEmpty=Empty appointment type duration\n${project.parent.artifactId}.AppointmentType.duration=Duration\n${project.parent.artifactId}.AppointmentType.duration.errorMessage = Duration must be a positive number\n${project.parent.artifactId}.AppointmentType.steps.details=Appointment Type Details\n${project.parent.artifactId}.AppointmentType.nameDuplicated=Name is duplicated\n${project.parent.artifactId}.AppointmentType.longName.errorMessage= Name must have less than 100 characters\n${project.parent.artifactId}.AppointmentType.unsafeName.errorMessage= Name must not have HTML characters\n${project.parent.artifactId}.AppointmentType.description.errorMessage = Description must have less than 1024 characters\n\n${project.parent.artifactId}.AppointmentBlock.manage.title=Provider Scheduling\n${project.parent.artifactId}.AppointmentBlock.list.title=Current Appointment Blocks\n${project.parent.artifactId}.AppointmentBlock.column.select=Select\n${project.parent.artifactId}.AppointmentBlock.column.location=Location\n${project.parent.artifactId}.AppointmentBlock.legend.properties=Choose Properties\n${project.parent.artifactId}.AppointmentBlock.column.provider=Provider\n${project.parent.artifactId}.AppointmentBlock.column.appointmentTypes=Appointment Type(s)\n${project.parent.artifactId}.AppointmentBlock.column.startTime=Start Time\n${project.parent.artifactId}.AppointmentBlock.column.endTime=End Time\n${project.parent.artifactId}.AppointmentBlock.column.time=Time\n${project.parent.artifactId}.AppointmentBlock.column.date=Date\n${project.parent.artifactId}.AppointmentBlock.add=Add\n${project.parent.artifactId}.AppointmentBlock.edit=Edit\n${project.parent.artifactId}.AppointmentBlock.delete=Delete\n${project.parent.artifactId}.AppointmentBlock.pickDate=Pick a date interval\n${project.parent.artifactId}.AppointmentBlock.error.selectAppointmentBlock=Select an appointment block in order to perform that action\n${project.parent.artifactId}.AppointmentBlock.error.selectTimeSlot=select a valid time slot (greater than 0)\n${project.parent.artifactId}.AppointmentBlock.error.invalidDateInterval=First Date should be earlier than Second Date\n${project.parent.artifactId}.AppointmentBlock.error.dateCannotBeInThePast=Can't save an appointment block in the past\n${project.parent.artifactId}.AppointmentBlock.error.maximalTimeSlot=The time slot length can't be larger than the time interval selected\n${project.parent.artifactId}.AppointmentBlock.error.voidReasonEmpty=Void Reason can't be empty\n${project.parent.artifactId}.AppointmentBlock.error.appointmentsExist=Can't edit that appointment block time slot because there are appointments associated with it\n${project.parent.artifactId}.AppointmentBlock.error.appointmentBlockOverlap=Can't save because the selected provider is already scheduled at this time.\n${project.parent.artifactId}.AppointmentBlock.error.scheduledAppointmentBlocks= Can't search scheduled appointment block without date or location\n${project.parent.artifactId}.AppointmentBlock.error.cannotRemoveTypeFromBlockIfAppointmentScheduled=Can't remove an appointment type if there is already an appointment scheduled of that type\n${project.parent.artifactId}.AppointmentBlock.emptyTypes=Select at least one type\n${project.parent.artifactId}.AppointmentBlock.saved=Appointment Block saved\n${project.parent.artifactId}.AppointmentBlock.voidedSuccessfully=Appointment Block voided successfully\n${project.parent.artifactId}.AppointmentBlock.purgedSuccessfully=Appointment Block purged successfully\n${project.parent.artifactId}.AppointmentBlock.unvoidedSuccessfully=Appointment Block unvoided successfully\n${project.parent.artifactId}.AppointmentBlock.clinician=Provider\n${project.parent.artifactId}.AppointmentBlock.location=Location\n${project.parent.artifactId}.AppointmentBlock.appointmentType=Appointment Types\n${project.parent.artifactId}.AppointmentBlock.timeInterval=Time Interval\n${project.parent.artifactId}.AppointmentBlock.save=Save\n${project.parent.artifactId}.AppointmentBlock.label.clinicianNotSpecified=Not Specified\n${project.parent.artifactId}.AppointmentBlock.label.locationNotSpecified=(None)\n${project.parent.artifactId}.AppointmentBlock.voidAppointmentBlock=Void Appointment Block\n${project.parent.artifactId}.AppointmentBlock.unvoidAppointmentBlock=Unvoid Appointment Block\n${project.parent.artifactId}.AppointmentBlock.purgeAppointmentBlock=Purge Appointment Block\n${project.parent.artifactId}.AppointmentBlock.slotLength=Slot Length (minutes)\n${project.parent.artifactId}.AppointmentBlock.error.InvalidDateInterval=First Date should be earlier than Second Date\n${project.parent.artifactId}.AppointmentBlock.steps.selectClinician=1. Select a provider:\n${project.parent.artifactId}.AppointmentBlock.steps.selectLocation=2. Select a location:\n${project.parent.artifactId}.AppointmentBlock.steps.selectAppointmentTypes=3. Select appointment types (at least one):\n${project.parent.artifactId}.AppointmentBlock.steps.selectTimeInterval=4. Select time interval:\n${project.parent.artifactId}.AppointmentBlock.steps.defineTimeSlotLength=5. Define time slot length:\n${project.parent.artifactId}.AppointmentBlock.availableTypes=Available Types\n${project.parent.artifactId}.AppointmentBlock.chosenTypes=Chosen Types\n${project.parent.artifactId}.AppointmentBlock.startDate=Start Date\n${project.parent.artifactId}.AppointmentBlock.endDate=End Date\n${project.parent.artifactId}.AppointmentBlock.addType=Add type\n${project.parent.artifactId}.AppointmentBlock.apply=Apply\n${project.parent.artifactId}.AppointmentBlock.minutes=Minutes\n${project.parent.artifactId}.AppointmentBlock.types=Type(s)\n${project.parent.artifactId}.AppointmentBlock.calendarView=Calendar View\n${project.parent.artifactId}.AppointmentBlock.tableView=Table View\n${project.parent.artifactId}.AppointmentBlock.deleteDialog.title=Warning\n${project.parent.artifactId}.AppointmentBlock.cannotBeDeleted.part1=The block can not be deleted because\n${project.parent.artifactId}.AppointmentBlock.cannotBeDeleted.part2=patient(s) are currently in-consultation or waiting\n${project.parent.artifactId}.AppointmentBlock.deletingConfirmation.part1=Deleting this appointment block will cancel\n${project.parent.artifactId}.AppointmentBlock.deletingConfirmation.part2=scheduled appointments, are you sure you want to proceed?\n${project.parent.artifactId}.AppointmentBlock.dialogHeader=The patient(s) whose appointment will be cancelled\n${project.parent.artifactId}.AppointmentBlock.dialogTableHeaderName=Name\n${project.parent.artifactId}.AppointmentBlock.dialogTableHeaderPhone=Phone Number\n${project.parent.artifactId}.AppointmentBlock.dialogTableMissing=Missing\n${project.parent.artifactId}.AppointmentBlock.emptyStartDate=Select a start date\n${project.parent.artifactId}.AppointmentBlock.emptyEndDate=Select an end date\n${project.parent.artifactId}.AppointmentBlock.emptyProvider=Select a provider\n${project.parent.artifactId}.AppointmentBlock.emptyLocation=Select a location\n${project.parent.artifactId}.AppointmentBlock.emptyTypes=Select at least one type\n${project.parent.artifactId}.AppointmentBlock.dialogTable.openMrsId=OpenMRS ID\n${project.parent.artifactId}.AppointmentBlock.dialogTable.name=Name\n${project.parent.artifactId}.AppointmentBlock.dialogTable.date=Date\n${project.parent.artifactId}.AppointmentBlock.dialogTable.time=Time\n${project.parent.artifactId}.AppointmentBlock.dialogTable.type=Type\n${project.parent.artifactId}.AppointmentBlock.dialogTable.phoneNumber=Phone Number\n${project.parent.artifactId}.AppointmentBlock.dialogTable.reason=Reason\n${project.parent.artifactId}.AppointmentBlock.dialogTable.location=Location\n${project.parent.artifactId}.AppointmentBlock.dialogTable.provider=Provider\n${project.parent.artifactId}.AppointmentBlock.filters.provider=Provider\n${project.parent.artifactId}.AppointmentBlock.filters.type=Type\n${project.parent.artifactId}.AppointmentBlock.filters.view=View\n${project.parent.artifactId}.AppointmentBlock.filters.providerNotSpecified=All providers\n${project.parent.artifactId}.AppointmentBlock.filters.typeNotSpecified=All types\n${project.parent.artifactId}.AppointmentBlock.filters.statusNotSpecified=All states\n${project.parent.artifactId}.AppointmentBlock.filters.locationNotSpecified=All locations\n${project.parent.artifactId}.AppointmentBlock.calendar.scheduleError=Providers cannot be scheduled in the past, please try a different day.\n\n${project.parent.artifactId}.Appointment.emptyTimeSlot=Empty appointment time slot\n${project.parent.artifactId}.Appointment.emptyPatient=Empty appointment patient\n${project.parent.artifactId}.Appointment.emptyType=Empty appointment type\n${project.parent.artifactId}.Appointment.notSupportedType=The Time Slot does not support this appointment type\n${project.parent.artifactId}.Appointment.create=Create Appointment\n${project.parent.artifactId}.Appointment.create.titleSchedule=Create Appointment\n${project.parent.artifactId}.Appointment.create.titleWalkIn=Create \"Walk-In\" Appointment\n${project.parent.artifactId}.Appointment.create.label.charactersLeft=Characters left: \n${project.parent.artifactId}.Appointment.create.label.findPatient=Patient: \n${project.parent.artifactId}.Appointment.create.label.appointmentType=Appointment Type: \n${project.parent.artifactId}.Appointment.create.label.clinician=Provider: (optional)  \n${project.parent.artifactId}.Appointment.create.label.betweenDates=Between: (optional) \n${project.parent.artifactId}.Appointment.create.label.availableTimes=Available Times:\n${project.parent.artifactId}.Appointment.create.label.location=Location: (optional) \n${project.parent.artifactId}.Appointment.create.label.reason=Reason:  \n${project.parent.artifactId}.Appointment.create.confirmation.title=Appointment Details\n${project.parent.artifactId}.Appointment.create.confirmation.text=Are you sure you want to save?\n${project.parent.artifactId}.Appointment.create.link.viewPatient=View Patient\n${project.parent.artifactId}.Appointment.create.link.editPatient=Edit Patient\n${project.parent.artifactId}.Appointment.create.link.scheduleAppointment=Schedule New Appointment\n${project.parent.artifactId}.Appointment.create.link.walkinAppointment=Add \"Walk-In\" Appointment\n${project.parent.artifactId}.Appointment.create.save=Save Appointment\n${project.parent.artifactId}.Appointment.create.cancel=Cancel\n${project.parent.artifactId}.Appointment.create.findTime=Find Available Times\n${project.parent.artifactId}.Appointment.create.patientPhoneNumber=Phone Number: \n${project.parent.artifactId}.Appointment.create.patientMissedMeeting=Patient missed last scheduled appointment on \n${project.parent.artifactId}.Appointment.create.patientNoPhoneNumber=No record of patient's phone number.\n${project.parent.artifactId}.Appointment.create.patientNotMissedLastAppointment=Patient didn't miss last appointment.\n${project.parent.artifactId}.Appointment.create.header.clinician=Provider\n${project.parent.artifactId}.Appointment.create.header.appointmentType=Appointment Type\n${project.parent.artifactId}.Appointment.create.header.date=Date\n${project.parent.artifactId}.Appointment.create.header.timeSlot=Time Slot\n${project.parent.artifactId}.Appointment.create.header.selectedOption=Select\n${project.parent.artifactId}.Appointment.create.header.location=Location\n${project.parent.artifactId}.Appointment.create.table.empty=No time slots found. Define appointment properties and click Find Available Times button.\n${project.parent.artifactId}.Appointment.create.label.showFull=Show Full Slots\n${project.parent.artifactId}.Appointment.create.prompt.fullSlot=Warning! After scheduling this appointment the selected time slot will be {0} minute(s) over-scheduled\n${project.parent.artifactId}.Appointment.create.lbl.fullSlot = Full Time Slot  \n${project.parent.artifactId}.Appointment.saved=Appointment Saved\n${project.parent.artifactId}.Appointment.error.InvalidDateInterval=First Date should be earlier than Second Date\n${project.parent.artifactId}.Appointment.steps.selectPatient=1. Select a patient:\n${project.parent.artifactId}.Appointment.steps.defineAppointmentProperties=2. Define Appointment Properties:\n${project.parent.artifactId}.Appointment.steps.selectTime=3. Select Time:\n${project.parent.artifactId}.Appointment.steps.enterNotes=4. Enter Additional Notes: (optional)\n${project.parent.artifactId}.Appointment.list.manage=Manage Appointments\n${project.parent.artifactId}.Appointment.list.manage.title=Manage Appointments\n${project.parent.artifactId}.Appointment.list.title=Existing Appointments:\n${project.parent.artifactId}.Appointment.list.filterTitle=Filtering Options:\n${project.parent.artifactId}.Appointment.list.column.date=Date\n${project.parent.artifactId}.Appointment.list.column.time=Time\n${project.parent.artifactId}.Appointment.list.column.patient=Patient\n${project.parent.artifactId}.Appointment.list.column.clinician=Provider\n${project.parent.artifactId}.Appointment.list.column.location=Location\n${project.parent.artifactId}.Appointment.list.column.type=Type\n${project.parent.artifactId}.Appointment.list.column.status=Status\n${project.parent.artifactId}.Appointment.list.column.waitingTime=Waiting Time\n${project.parent.artifactId}.Appointment.list.label.showCancelled=Show Cancelled\n${project.parent.artifactId}.Appointment.list.label.appointmentStatus=Appointment Status:\n${project.parent.artifactId}.Appointment.list.label.betweenDates=Between Dates: \n${project.parent.artifactId}.Appointment.list.label.clinician=Provider: \n${project.parent.artifactId}.Appointment.list.label.location=Location:\n${project.parent.artifactId}.Appointment.list.button.applyFilters=Apply Filters\n${project.parent.artifactId}.Appointment.list.button.startConsultation=Start Consultation\n${project.parent.artifactId}.Appointment.list.button.endConsultation=End Consultation\n${project.parent.artifactId}.Appointment.list.button.checkIn=Check-In\n${project.parent.artifactId}.Appointment.list.button.missAppointment=Miss Appointment\n${project.parent.artifactId}.Appointment.list.button.cancelAppointment=Cancel Appointment\n${project.parent.artifactId}.Appointment.list.tooltip=Appointment Reason:\n${project.parent.artifactId}.Appointment.add=Schedule New Appointment\n${project.parent.artifactId}.Appointment.seconds=Seconds\n${project.parent.artifactId}.Appointment.minutes=Minutes\n${project.parent.artifactId}.Appointment.hours=Hours\n${project.parent.artifactId}.Appointment.days=Days\n${project.parent.artifactId}.Appointment.list.label.selectAnAction= Select an action:\n${project.parent.artifactId}.Appointment.list.table.empty=No appointments found.\n${project.parent.artifactId}.Appointment.list.prompt.openConsultation=Warning! This provider already has active consultation(s). Are you sure you want to start another?\n${project.parent.artifactId}.Appointment.error.timeSlotFull=The appointment cannot be booked because the time slot is already full.\n\n${project.parent.artifactId}.Appointment.settings.admin.title=Settings\n${project.parent.artifactId}.Appointment.settings.title=Appointments Scheduling Module Settings\n${project.parent.artifactId}.Appointment.settings.fieldset.gp=Global Properties:\n${project.parent.artifactId}.Appointment.settings.fieldset.additionalSettings=Additional Settings:\n${project.parent.artifactId}.Appointment.settings.label.visitType=Default Visit Type:\n${project.parent.artifactId}.Appointment.settings.label.phoneNumber=Phone Number Person Attribute:\n${project.parent.artifactId}.Appointment.settings.label.refreshAppointmentsList=Auto-Refresh Manage Appointments Form:\n${project.parent.artifactId}.Appointment.settings.label.hideEndVisit=Hide \"End Visit Now\" buttons:\n${project.parent.artifactId}.Appointment.settings.label.cleanOpenAppointmentScheduler=Clean open appointments at end of the day\n${project.parent.artifactId}.Appointment.settings.label.slotDuration=Default Time Slot Duration:\n${project.parent.artifactId}.Appointment.settings.label.every=Every:\n${project.parent.artifactId}.Appointment.settings.label.enable=Enable\n${project.parent.artifactId}.Appointment.settings.label.disable=Disable\n${project.parent.artifactId}.Appointment.settings.label.clean=Clean Open Appointments:\n${project.parent.artifactId}.Appointment.settings.button.clean=Clean Open Appointments\n${project.parent.artifactId}.Appointment.settings.error.minRefreshInterval= Minimum Refresh Interval is 60 seconds.\n${project.parent.artifactId}.Appointment.settings.error.time=Time Should Be Non-Negative, Numbers Only.\n${project.parent.artifactId}.Appointment.settings.notification.saved=Appointments Scheduling Module Settings Saved.\n${project.parent.artifactId}.Appointment.settings.prompt=Warning! This action cannot be reverted.\n${project.parent.artifactId}.Appointment.settings.label.appointmentChanged=Cleaning Done: {0} appointment(s) updated.\n${project.parent.artifactId}.Appointment.settings.label.loading=Loading...\n${project.parent.artifactId}.Appointment.settings.label.cleanTooltip=Set Waiting, Walk-In and Scheduled past appointments as Missed. Mark In-Consultation past appointments as Completed.\n\n${project.parent.artifactId}.Appointment.gp.desc.hideEndVisit=Hide \"End Visit Now\" buttons on the patient dashboard.\n${project.parent.artifactId}.Appointment.gp.desc.visitType=The Visit Type to be used when changing an appointment to \"In-Consultation\".\n${project.parent.artifactId}.Appointment.gp.desc.phoneAttribute=The person attribute that describes the person's contact details. (Preferably: Phone Number)\n${project.parent.artifactId}.Appointment.gp.desc.manageAppointmentsRefresh=Choose whether to auto-refresh Manage Appointments form.\n${project.parent.artifactId}.Appointment.gp.desc.defaultTimeSlotDuration=The default duration in minutes of a time slot.\n${project.parent.artifactId}.Appointment.gp.desc.cleanOpenAppointmentScheduler=Clean open appointments at end of the day\n\n${project.parent.artifactId}.Appointment.statistics.title=Appointments Statistics\n${project.parent.artifactId}.Appointment.statistics.datesFilter =Data created between: \n${project.parent.artifactId}.Appointment.statistics.title.waitingTime=Average Waiting Time by Appointment Type:\n${project.parent.artifactId}.Appointment.statistics.title.consultationDuration=Average Consultation Duration by Appointment Type:\n${project.parent.artifactId}.Appointment.statistics.title.waitingProviderTime=Average Waiting Time by Provider:\n${project.parent.artifactId}.Appointment.statistics.title.consultationProviderDuration=Average Consultation Duration by Provider:\n${project.parent.artifactId}.Appointment.statistics.title.typePie= Appointment Types Pie Chart: \n${project.parent.artifactId}.Appointment.statistics.title.filter=Select Data Interval:\n${project.parent.artifactId}.Appointment.statistics.label.dataSize=Based on {0} Appointment(s).\n${project.parent.artifactId}.Appointment.statistics.label.dataEmpty=No Appointments found.\n${project.parent.artifactId}.Appointment.statistics.label.minute=Minute(s)\n${project.parent.artifactId}.Appointment.statistics.label.showImage=Show as Image\n${project.parent.artifactId}.Appointment.statistics.label.noiseDisclaimer=Graphs displayed may include some noise reduction to acount for unrealistic data (f.e: appointment still in 'waiting' status)\n${project.parent.artifactId}.Appointment.statistics.axis.appointmentType=Appointment Type\n${project.parent.artifactId}.Appointment.statistics.axis.provider=Provider\n\n${project.parent.artifactId}.TimeSlot.emptyStartDate=Empty time slot start date\n${project.parent.artifactId}.TimeSlot.emptyEndDate=Empty time slot end date\n${project.parent.artifactId}.TimeSlot.emptyBlock=Empty time slot block\n${project.parent.artifactId}.TimeSlot.saved=Time Slot(s) Saved\n\n${project.parent.artifactId}.AppointmentRequest.emptyPatient=Paitient is required\n${project.parent.artifactId}.AppointmentRequest.emptyType=Appointment Type is required\n${project.parent.artifactId}AppointmentRequest.emptyRequestedOn=Requested Date is required\n${project.parent.artifactId}.AppointmentRequest.emptyStatus=Status is required\n\n${project.parent.artifactId}.AppointmentDataSetDefinition=Appointment Data Set Definition\n${project.parent.artifactId}.AppointmentReasonDataDefinition=Appointment Reason Data Definition\n${project.parent.artifactId}.AppointmentCancelReasonDataDefinition=Appointment Cancel Reason Data Definition\n${project.parent.artifactId}.AppointmentStatusDataDefinition=Appointment Status Data Definition\n${project.parent.artifactId}.appointmentscheduling.AppointmentStartDateDataDefinition=Appointment Start Date Data Definition\n${project.parent.artifactId}.appointmentscheduling.AppointmentEndDateDataDefinition=Appointment End Date Data Definition\n${project.parent.artifactId}.appointmentscheduling.AppointmentTypeDataDefinition=Appointment Type Data Definition\n${project.parent.artifactId}.appointmentscheduling.AppointmentLocationDataDefinition=Appointment Location Data Definition\n${project.parent.artifactId}.appointmentscheduling.AppointmentProviderDataDefinition=Appointment Provider Data Definition\n", "package org.openmrs.module.appointmentscheduling.validator;\r\n\r\nimport org.apache.commons.lang.StringUtils;\r\nimport org.junit.Before;\r\nimport org.junit.Test;\r\nimport org.mockito.Mockito;\r\nimport org.openmrs.module.appointmentscheduling.AppointmentType;\r\nimport org.openmrs.module.appointmentscheduling.api.AppointmentService;\r\nimport org.springframework.validation.Errors;\r\n\r\nimport static org.mockito.Mockito.never;\r\nimport static org.mockito.Mockito.when;\r\nimport static org.powermock.api.mockito.PowerMockito.mock;\r\n\r\npublic class AppointmentTypeValidatorTest {\r\n\t\r\n\tAppointmentService appointmentService;\r\n\t\r\n\tprivate AppointmentTypeValidator appointmentTypeValidator;\r\n\t\r\n\tprivate AppointmentType appointmentType;\r\n\t\r\n\tprivate Errors errors;\r\n\t\r\n\t@Before\r\n\tpublic void setUp() throws Exception {\r\n\t\tappointmentService = mock(AppointmentService.class);\r\n\t\tappointmentType = new AppointmentType(\"name\", \"desciption\", 10);\r\n\t\tappointmentTypeValidator = new AppointmentTypeValidator();\r\n\t\tappointmentTypeValidator.setAppointmentService(appointmentService);\r\n\t\terrors = mock(Errors.class);\r\n\t\t\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void mustRejectAppointmentTypeWithDuplicatedName() throws Exception {\r\n\t\twhen(appointmentService.verifyDuplicatedAppointmentTypeName(appointmentType)).thenReturn(true);\r\n\t\t\r\n\t\tappointmentTypeValidator.validate(appointmentType, errors);\r\n\t\t\r\n\t\tMockito.verify(errors).rejectValue(\"name\", \"appointmentscheduling.AppointmentType.nameDuplicated\");\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void mustAcceptAppointmentTypeWithNotDuplicatedName() throws Exception {\r\n\t\twhen(appointmentService.verifyDuplicatedAppointmentTypeName(appointmentType)).thenReturn(false);\r\n\t\t\r\n\t\tappointmentTypeValidator.validate(appointmentType, errors);\r\n\t\t\r\n\t\tMockito.verify(errors, never()).rejectValue(\"name\", \"appointmentscheduling.AppointmentType.nameDuplicated\");\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void mustRejectAppointmentTypeWithNegativeDuration() throws Exception {\r\n\t\tAppointmentType appointmentType = new AppointmentType(\"name\", \"desciption\", -5);\r\n\t\t\r\n\t\tappointmentTypeValidator.validate(appointmentType, errors);\r\n\t\t\r\n\t\tMockito.verify(errors).rejectValue(\"duration\", \"appointmentscheduling.AppointmentType.duration.errorMessage\");\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void mustRejectAppointmentTypeWithDurationEqualsZero() throws Exception {\r\n\t\tAppointmentType appointmentType = new AppointmentType(\"name\", \"desciption\", 0);\r\n\t\t\r\n\t\tappointmentTypeValidator.validate(appointmentType, errors);\r\n\t\t\r\n\t\tMockito.verify(errors).rejectValue(\"duration\", \"appointmentscheduling.AppointmentType.duration.errorMessage\");\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void mustAcceptAppointmentTypeWithPositiveDuration() throws Exception {\r\n\t\tappointmentTypeValidator.validate(appointmentType, errors);\r\n\t\t\r\n\t\tMockito.verify(errors, never()).rejectValue(\"duration\",\r\n\t\t    \"appointmentscheduling.AppointmentType.duration.errorMessage\");\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void mustRejectAppointmentTypeWithNullValue() throws Exception {\r\n\t\tAppointmentType appointmentType = new AppointmentType();\r\n\t\t\r\n\t\tappointmentTypeValidator.validate(appointmentType, errors);\r\n\t\t\r\n\t\tMockito.verify(errors).rejectValue(\"duration\", \"appointmentscheduling.AppointmentType.duration.errorMessage\");\r\n\t}\r\n\t\r\n\t@Test\r\n\tpublic void mustRejectAppointmentTypeNameWithMoreThan100Characters() throws Exception {\r\n\t\tString longName = StringUtils.repeat(\"*\", 101);\r\n\t\tAppointmentType appointmentTypeLongName = new AppointmentType(longName, \"\", 10);\r\n\t\t\r\n\t\tappointmentTypeValidator.validate(appointmentTypeLongName, errors);\r\n\t\t\r\n\t\tMockito.verify(errors).rejectValue(\"name\", \"appointmentscheduling.AppointmentType.longName.errorMessage\");\r\n\t}\r\n\r\n\t@Test\r\n\tpublic void mustRejectAppointmentTypeNameWithXSS() throws Exception {\r\n\t\tString evilName = \"<script>alert(1)</script>\";\r\n\t\tAppointmentType appointmentTypeEvilName = new AppointmentType(evilName, \"\", 10);\r\n\r\n\t\tappointmentTypeValidator.validate(appointmentTypeEvilName, errors);\r\n\r\n\t\tMockito.verify(errors).rejectValue(\"name\", \"appointmentscheduling.AppointmentType.unsafeName.errorMessage\");\r\n\t}\r\n\r\n\t@Test\r\n\tpublic void mustRejectAppointmentTypeDescriptionWithMoreThan1024Characters() throws Exception {\r\n\t\tString longDescription = StringUtils.repeat(\"*\", 1025);\r\n\t\tAppointmentType appointmentTypeLongDuration = new AppointmentType(\"long description\", longDescription, 10);\r\n\t\t\r\n\t\tappointmentTypeValidator.validate(appointmentTypeLongDuration, errors);\r\n\t\t\r\n\t\tMockito.verify(errors).rejectValue(\"description\", \"appointmentscheduling.AppointmentType.description.errorMessage\");\r\n\t}\r\n\t\r\n}\r\n"], "filenames": ["api/src/main/java/org/openmrs/module/appointmentscheduling/validator/AppointmentTypeValidator.java", "api/src/main/resources/messages.properties", "api/src/test/java/org/openmrs/module/appointmentscheduling/validator/AppointmentTypeValidatorTest.java"], "buggy_code_start_loc": [20, 26, 97], "buggy_code_end_loc": [112, 26, 98], "fixing_code_start_loc": [21, 27, 97], "fixing_code_end_loc": [124, 28, 108], "type": "CWE-79", "message": "A vulnerability was found in OpenMRS Appointment Scheduling Module up to 1.12.x. It has been classified as problematic. This affects the function validateFieldName of the file api/src/main/java/org/openmrs/module/appointmentscheduling/validator/AppointmentTypeValidator.java. The manipulation leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 1.13.0 is able to address this issue. The name of the patch is 34213c3f6ea22df427573076fb62744694f601d8. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216915.", "other": {"cve": {"id": "CVE-2020-36635", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-27T23:15:10.430", "lastModified": "2023-01-06T16:01:57.610", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in OpenMRS Appointment Scheduling Module up to 1.12.x. It has been classified as problematic. This affects the function validateFieldName of the file api/src/main/java/org/openmrs/module/appointmentscheduling/validator/AppointmentTypeValidator.java. The manipulation leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 1.13.0 is able to address this issue. The name of the patch is 34213c3f6ea22df427573076fb62744694f601d8. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216915."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:openmrs:appointment_scheduling_module:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.13.0", "matchCriteriaId": "93A7774F-B360-4B8E-80F1-2C54F0A6D9FC"}]}]}], "references": [{"url": "https://github.com/openmrs/openmrs-module-appointmentscheduling/commit/34213c3f6ea22df427573076fb62744694f601d8", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/openmrs/openmrs-module-appointmentscheduling/pull/32", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/openmrs/openmrs-module-appointmentscheduling/releases/tag/1.13.0", "source": "cna@vuldb.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.216915", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.216915", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/openmrs/openmrs-module-appointmentscheduling/commit/34213c3f6ea22df427573076fb62744694f601d8"}}