{"buggy_code": ["<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      items.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (! checkUser($_SESSION['user_id'], $_SESSION['key'], curPage($SETTINGS), $SETTINGS)) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n\n$var = [];\n$var['hidden_asterisk'] = '<i class=\"fas fa-asterisk mr-2\"></i><i class=\"fas fa-asterisk mr-2\"></i><i class=\"fas fa-asterisk mr-2\"></i><i class=\"fas fa-asterisk mr-2\"></i><i class=\"fas fa-asterisk\"></i>';\n\n?>\n\n\n<script type=\"text/javascript\">\n    var requestRunning = false,\n        clipboardForLogin,\n        clipboardForPassword,\n        clipboardForLink,\n        query_in_progress = 0,\n        screenHeight = $(window).height(),\n        quick_icon_query_status = true,\n        first_group = 1,\n        folderSearchCriteria = $('#jstree_search').val(),\n        userDidAChange = false,\n        userUploadedFile = false,\n        selectedFolder = false,\n        selectedFolderId = false,\n        itemClipboard,\n        startedItemsListQuery = false,\n        itemStorageInformation = '',\n        applicationVars,\n        initialPageLoad = true,\n        previousSelectedFolder=-1,\n        debugJavascript = false;\n\n    // Manage memory\n    browserSession(\n        'init',\n        'teampassApplication', {\n            lastItemSeen: false,\n            itemsListStop: '',\n            itemsListStart: '',\n            selectedFolder: '',\n            itemsListFolderId: false,\n            itemsListRestricted: '',\n            itemsShownByQuery: '',\n            foldersList: [],\n            personalSaltkeyRequired: 0,\n            uploadedFileId: '',\n            tempScrollTop: 0,\n        }\n    );\n\n    browserSession(\n        'init',\n        'teampassItem', {\n            IsPersonalFolder: '',\n            hasAccessLevel: '',\n            hasCustomCategories: '',\n            id: '',\n            timestamp: '',\n            folderId: ''\n        }\n    );\n\n    if (debugJavascript === true) {\n        console.log('User information')\n        console.log(store.get('teampassUser'))\n    }\n\n    // Show loader\n    toastr.remove();\n    toastr.info('<?php echo langHdl('loading_data'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n    // Build tree\n    $('#jstree').jstree({\n        'core': {\n            'animation': 0,\n            'check_callback': true,\n            'data': {\n                'url': './sources/tree.php',\n                'dataType': 'json',\n                'icons': false,\n                'data': function(node) {\n                    if (debugJavascript === true) {\n                        console.info('Les r\u00e9pertoires sont charg\u00e9s');\n                        console.log(node);\n                    }\n                    return {\n                        'id': node.id.split('_')[1],\n                        'force_refresh': store.get('teampassApplication') !== undefined ?\n                            store.get('teampassApplication').jstreeForceRefresh : 0\n                    };\n                }\n            },\n            'strings': {\n                'Loading ...': '<?php echo langHdl('loading'); ?>...'\n            },\n            'themes': {\n                'icons': false,\n            },\n        },\n        'plugins': [\n            'state', 'search'\n        ]\n    })\n    // On node select\n    .bind('select_node.jstree', function(e, data) {\n        if (debugJavascript === true) console.log('JSTREE BIND');\n        selectedFolder = $('#jstree').jstree('get_selected', true)[0]\n        selectedFolderId = parseInt(selectedFolder.id.split('_')[1]);\n\n        // manage icon open/closed\n        var selectedFolderIcon = $('#fld_'+selectedFolderId).children('.tree-folder').attr('data-folder'),\n            selectedFolderIconSelected = $('#fld_'+selectedFolderId).children('.tree-folder').attr('data-folder-selected');\n\n        // remove selected on previous folder\n        $($('#fld_'+previousSelectedFolder).children('.tree-folder'))\n            .removeClass($('#fld_'+previousSelectedFolder).children('.tree-folder').attr('data-folder-selected'))\n            .addClass($('#fld_'+previousSelectedFolder).children('.tree-folder').attr('data-folder'));\n        // show selected icon\n        $('#fld_'+selectedFolderId).children('.tree-folder')\n            .removeClass(selectedFolderIcon)\n            .addClass(selectedFolderIconSelected);\n\n        if (debugJavascript === true) {\n            console.info('SELECTED NODE ' + selectedFolderId + \" -- \" + startedItemsListQuery);\n            console.log(selectedFolder);\n            console.log(selectedFolder.original.is_pf)\n        }\n\n        store.update(\n            'teampassApplication',\n            function(teampassApplication) {\n                teampassApplication.selectedFolder = selectedFolderId,\n                teampassApplication.selectedFolderTitle = selectedFolder.a_attr['data-title'],\n                teampassApplication.selectedFolderParentId = selectedFolder.parent !== \"#\" ? selectedFolder.parent.split('_')[1] : 0,\n                teampassApplication.selectedFolderParentTitle = selectedFolder.a_attr['data-title'],\n                teampassApplication.selectedFolderIcon = selectedFolderIcon,\n                teampassApplication.selectedFolderIconSelected = selectedFolderIconSelected,\n                teampassApplication.selectedFolderIsPF = selectedFolder.original.is_pf,\n                teampassApplication.userCanEdit = selectedFolder.original.can_edit\n            }\n        )\n        store.update(\n            'teampassItem',\n            function(teampassItem) {\n                teampassItem.folderId = selectedFolderId\n            }\n        );\n\n        // Prepare list of items\n        if (startedItemsListQuery === false) {\n            startedItemsListQuery = true;\n            ListerItems(selectedFolderId, '', 0);\n        }\n\n        previousSelectedFolder = selectedFolderId;\n        initialPageLoad = false;\n    })\n    // Search in tree\n    .bind('search.jstree', function(e, data) {\n        if (data.nodes.length == 1) {\n            //open the folder\n            ListerItems($('#jstree li>a.jstree-search').attr('id').split('_')[1], '', 0);\n        }\n    });\n\n    // Find folders in jstree\n    $('#jstree_search')\n        .keypress(function(e) {\n            if (e.keyCode === 13) {\n                $('#jstree').jstree('search', $('#jstree_search').val());\n            }\n        })\n        .focus(function() {\n            $(this).val('');\n        })\n        .blur(function() {\n            $(this).val(folderSearchCriteria);\n        });\n\n    // Is this a short url\n    var queryDict = {},\n        showItemOnPageLoad = false,\n        itemIdToShow = '';\n    location.search.substr(1).split(\"&\").forEach(function(item) {\n        queryDict[item.split(\"=\")[0]] = item.split(\"=\")[1]\n    });\n\n    if (queryDict['group'] !== undefined && queryDict['group'] !== '' &&\n        queryDict['id'] !== undefined && queryDict['id'] !== ''\n    ) {\n        // Show cog\n        toastr.remove();\n        toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Store current view\n        savePreviousView();\n\n        // Store the folder to open\n        store.set(\n            'teampassApplication', {\n                selectedFolder: parseInt(queryDict['group']),\n                selectedItem: parseInt(queryDict['id'])\n            }\n        );\n        store.update(\n            'teampassItem',\n            function(teampassItem) {\n                teampassItem.folderId = parseInt(queryDict['group'])\n            }\n        );\n\n        showItemOnPageLoad = true;\n        itemIdToShow = queryDict['id'];\n        startedItemsListQuery = true;\n\n        $('.item-details-card').removeClass('hidden');\n        $('#folders-tree-card, .columns-position').addClass('hidden');\n\n        // refresh selection in jstree\n        $('#jstree').jstree('deselect_all');\n        $('#jstree').jstree('select_node', '#li_' + itemIdToShow);\n        $('#jstree').jstree(true).hide_icons()\n\n        // Get list of items in this folder\n        startedItemsListQuery = true;\n        ListerItems(store.get('teampassApplication').selectedFolder, '', 0);\n\n        // Show details\n        $.when(\n            Details(itemIdToShow, 'show', true)\n        ).then(function() {\n            //requestRunning = false;\n            console.log('Item detail affich\u00e9')\n            // Force previous view to Tree folders\n            store.update(\n                'teampassUser',\n                function(teampassUser) {\n                    teampassUser.previousView = '#folders-tree-card';\n                }\n            );\n        });\n    }\n\n    // Preload list of items\n    if (store.get('teampassApplication') !== undefined &&\n        store.get('teampassApplication').selectedFolder !== undefined &&\n        store.get('teampassApplication').selectedFolder !== ''\n    ) {\n        startedItemsListQuery = true;\n\n        ListerItems(store.get('teampassApplication').selectedFolder, '', 0);\n\n    }\n\n\n\n    // Close on escape key\n    $(document).keyup(function(e) {\n        if (e.keyCode == 27) {\n            closeItemDetailsCard();\n        }\n    });\n\n    /*// Edit on e key\n    $(document).keyup(function(e) {\n        if (e.keyCode == 69 && $('.item-details-card').is(':visible') === true) {\n            if ($('#form-item').hasClass('hidden') === false) {\n                showItemEditForm(store.get('teampassItem').id);\n            }\n        }\n    });\n    */\n\n    // load list of visible folders for current user\n    $(this).delay(500).queue(function() {\n        refreshVisibleFolders();\n\n        $(this).dequeue();\n    });\n\n    // Keep the scroll position\n    $(window).on(\"scroll\", function() {\n        if ($('#folders-tree-card').hasClass('hidden') === false) {\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    tempScrollTop: $(window).scrollTop()\n                }\n            );\n        }\n    });\n\n\n    // Ensure correct height of folders tree\n    $('#jstree').height(screenHeight - 200);\n\n    // Prepare iCheck format for checkboxes\n    $('input[type=\"checkbox\"].flat-blue, input[type=\"radio\"].flat-blue').iCheck({\n        checkboxClass: 'icheckbox_flat-blue',\n        radioClass: 'iradio_flat-blue'\n    });\n\n    // Prepare some UI elements\n    $('#limited-search').prop('checked', false);\n\n    $(document).on('blur', '#form-item-icon', function() {\n        $('#form-item-icon-show').html('<i class=\"fas '+$(this).val()+'\"></i>');\n    });\n\n    // Manage the password show button\n    // including autohide after a couple of seconds\n    $(document).on('click', '#card-item-pwd-show-button', function() {\n        if ($(this).hasClass('pwd-shown') === false) {\n            $(this).addClass('pwd-shown');\n            // Prepare data to show\n            // Is data crypted?\n            var data = unCryptData($('#hidden-item-pwd').val(), '<?php echo $_SESSION['key']; ?>');\n            if (data !== false && data !== undefined) {\n                $('#hidden-item-pwd').val(\n                    data.password\n                );\n            }\n\n            // Change class and show spinner\n            $('.pwd-show-spinner')\n                .removeClass('far fa-eye')\n                .addClass('fas fa-circle-notch fa-spin text-warning');\n\n            // display raw password\n            $('#card-item-pwd')\n                .text($('#hidden-item-pwd').val())\n                .addClass('pointer_none');\n\n            // log password is shown\n            itemLog(\n                'at_password_shown',\n                store.get('teampassItem').id,\n                $('#card-item-label').text()\n            );\n\n            // Autohide\n            setTimeout(() => {\n                $(this).removeClass('pwd-shown');\n                $('#card-item-pwd')\n                    .html('<?php echo $var['hidden_asterisk']; ?>')\n                    .removeClass('pointer_none');\n                $('.pwd-show-spinner')\n                    .removeClass('fas fa-circle-notch fa-spin text-warning')\n                    .addClass('far fa-eye');\n            }, <?php echo isset($SETTINGS['password_overview_delay']) === true ? $SETTINGS['password_overview_delay'] * 1000 : 4000; ?>);\n        } else {\n            $('#card-item-pwd').html('<?php echo $var['hidden_asterisk']; ?>');\n        }\n    });\n\n\n    // Manage folders action\n    $('.tp-action').click(function() {\n        // SHow user\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?><i class=\"fas fa-circle-notch fa-spin fa-2x ml-3\"></i>');\n\n        if ($(this).data('folder-action') === 'refresh') {\n            // Force refresh\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.jstreeForceRefresh = 1\n                }\n            );\n            if (selectedFolderId !== '') {\n                refreshTree(selectedFolderId, true);\n            } else {\n                refreshTree();\n            }\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.jstreeForceRefresh = 0\n                }\n            );\n            toastr.remove();\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'expand') {\n            $('#jstree').jstree('open_all');\n            toastr.remove();\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'collapse') {\n            $('#jstree').jstree('close_all');\n            toastr.remove();\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'add') {\n            if (debugJavascript === true) console.info('SHOW ADD FOLDER');\n            toastr.remove();\n\n            // Check privileges\n            if (store.get('teampassItem').hasAccessLevel < 20 &&\n                store.get('teampassUser').can_create_root_folder === 0\n            ) {\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Store current view\n            savePreviousView('.form-folder-add');\n\n            // Store last\n            // Show copy form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-add').removeClass('hidden');\n\n            // Prepare some data in the form\n            if (selectedFolder.parent !== undefined && selectedFolder.parent !== '') {\n                $('#form-folder-add-parent').val(selectedFolder.parent.split('_')[1]).change();\n            }\n\n            $('#form-folder-add-label, #form-folder-add-parent').prop('disabled', false);\n\n            $('#form-folder-add-label')\n                .val('')\n                .focus();\n            $('#form-folder-add-icon-selected, #form-folder-add-icon').val('');\n            // Set type of action for the form\n            $('#form-folder-add').data('action', 'add');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'edit') {\n            if (debugJavascript === true) console.info('SHOW EDIT FOLDER');\n            toastr.remove();\n            // Check privileges\n            if (store.get('teampassItem').hasAccessLevel < 20) {\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n            if (debugJavascript === true) console.log(store.get('teampassApplication'));\n\n            // Store current view\n            savePreviousView('.form-folder-add');\n\n            // Show edit form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-add').removeClass('hidden');\n            // Prepare some data in the form\n            $(\"#form-folder-add-parent option[value='\" + store.get('teampassApplication').selectedFolder + \"']\")\n                .prop('disabled', true);\n            $('#form-folder-add-parent').val(store.get('teampassApplication').selectedFolderParentId).change();\n            $(\"#form-folder-add-parent option[value='\" + store.get('teampassApplication').selectedFolderParentId + \"']\")\n                .prop('disabled', false);\n            $('#form-folder-add-label')\n                .val(store.get('teampassApplication').selectedFolderParentTitle)\n                .focus();\n            // is PF 1st level\n            if (store.get('teampassApplication').selectedFolderIsPF === 1 && store.get('teampassApplication').selectedFolderParentId !== 0) {\n                $('#form-folder-add-label, #form-folder-add-parent').prop('disabled', false);\n            } else if (store.get('teampassApplication').userCanEdit === 0) {\n                $('#form-folder-add-label, #form-folder-add-parent').prop('disabled', true);\n            } else {\n                $('#form-folder-add-label, #form-folder-add-parent').prop('disabled', false);\n            }\n\n            $('#form-folder-add-complexicity').val(store.get('teampassItem').folderComplexity).change();\n            $('#form-folder-add-icon')\n                .val(store.get('teampassApplication').selectedFolderIcon);\n            $('#form-folder-add-icon-selected')\n                .val(store.get('teampassApplication').selectedFolderIconSelected);\n            // Set type of action for the form\n            $('#form-folder-add').data('action', 'update');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'copy') {\n            if (debugJavascript === true) console.info('SHOW COPY FOLDER');\n            toastr.remove();\n            // Check privileges\n            if (store.get('teampassItem').hasAccessLevel < 20) {\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Store current view\n            savePreviousView('.form-folder-copy');\n\n            // Show copy form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-copy').removeClass('hidden');\n            // Prepare some data in the form\n            $('#form-folder-copy-source').val(store.get('teampassApplication').selectedFolder).change();\n            //$(\"#form-folder-copy-destination option[value='\"+selectedFolder.id.split('_')[1]+\"']\")\n            //.prop('disabled', true);\n            $('#form-folder-copy-destination').val(0).change();\n            $('#form-folder-copy-label')\n                .val(store.get('teampassApplication').selectedFolderTitle + ' <?php echo strtolower(langHdl('copy')); ?>')\n                .focus();\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'delete') {\n            if (debugJavascript === true) console.info('SHOW DELETE FOLDER');\n            toastr.remove();\n            // Check privileges\n            if (store.get('teampassItem').hasAccessLevel < 30) {\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Store current view\n            savePreviousView('.form-folder-delete');\n\n            // Show copy form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-delete').removeClass('hidden');\n\n            // Prepare some data in the form\n            $('#form-folder-delete-selection').val(store.get('teampassApplication').selectedFolder).change();\n            $('#form-folder-confirm-delete').iCheck('uncheck');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'import') {\n            // IMPORT ITEMS\n            if (debugJavascript === true) console.info('SHOW IMPORT ITEMS');\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-folder-import');\n\n\n            // Show import form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-import').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'new') {\n            if (debugJavascript === true) console.info('SHOW NEW ITEM');\n            toastr.remove();\n            // Store current view\n            savePreviousView();\n\n            // Remove validated class\n            $('#form-item').removeClass('was-validated');\n\n            // Get some info\n            $.when(\n                retPrivileges = getPrivilegesOnItem(store.get('teampassApplication').itemsListFolderId, 0)\n            ).then(function() {\n                if (retPrivileges === false) {\n                    return false;\n                }\n                // If previous item was seen then clean session\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.isNewItem = 1,\n                        teampassItem.id = ''\n                    }\n                );\n\n                // Show Visibility and minimum complexity\n                $('#card-item-visibility').html(store.get('teampassItem').itemVisibility);\n                $('#card-item-minimum-complexity').html(store.get('teampassItem').itemMinimumComplexity);\n\n                // HIde\n                $('.form-item-copy, #folders-tree-card, .columns-position, #form-item-password-options, .form-item-action, #form-item-attachments-zone')\n                    .addClass('hidden');\n                // Destroy editor\n                $('#form-item-description').summernote('destroy');\n\n                // Clean select2 lists\n                $('.select2').val('');\n                /*if ($('.select2') !== null) {if (debugJavascript === true) console.log($('.select2').length)\n                    $('.select2').change();\n                }*/\n                // Do some form cleaning\n                $('.clear-me-val').val('');\n                $('.item-details-card').find('.form-control').val('');\n                $('.clear-me-html').html('');\n                $('.form-item-control').val('');\n                // Show edition form\n                $('.form-item').removeClass('hidden');\n                $('.item-details-card').addClass('hidden');\n                // Force update of simplepassmeter\n                $('#form-item-password').focus();\n                $('#form-item-label').focus();\n                // Prepare editor\n                $('#form-item-description').summernote({\n                    toolbar: [\n                        ['style', ['style']],\n                        ['font', ['bold', 'italic', 'underline', 'strikethrough', 'clear']],\n                        ['fontsize', ['fontsize']],\n                        ['color', ['color']],\n                        ['para', ['ul', 'ol', 'paragraph']],\n                        ['insert', ['link', 'picture']],\n                        //['height', ['height']],\n                        ['view', ['codeview']]\n                    ],\n                    codeviewFilter: true,\n                    codeviewIframeFilter: true\n                });\n\n                // Set folder\n                $('#form-item-folder').val(selectedFolderId).change();\n                // Select tab#1\n                $('#form-item-nav-pills li:first-child a').tab('show');\n                // Preselect\n                $('#pwd-definition-size').val(12);\n                // Set type of action\n                $('#form-item-button-save').data('action', 'new_item');\n                // Does this folder contain Custom Fields\n                if (store.get('teampassItem').hasCustomCategories.length > 0) {\n                    $('#form-item-field').removeClass('hidden');\n                    $.each(store.get('teampassItem').hasCustomCategories, function(i, category) {\n                        $('#form-item-category-' + category).removeClass('hidden');\n                    })\n                } else {\n                    $('#form-item-field, .form-item-category').addClass('hidden');\n                }\n                \n                // Add track-change class\n                //$('#form-item-label, #form-item-description, #form-item-login, #form-item-password, #form-item-email, #form-item-url, #form-item-folder, #form-item-restrictedto, #form-item-tags, #form-item-anyoneCanModify, #form-item-deleteAfterShown, #form-item-deleteAfterDate, #form-item-anounce, .form-item-field-custom').addClass('track-change');\n\n                // Update variable\n                userDidAChange = false;\n\n                toastr.remove();\n            });\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'edit') {\n            if (debugJavascript === true) console.info('SHOW EDIT ITEM');\n            $.when(\n                getPrivilegesOnItem(selectedFolderId, 1)\n            ).then(function() {\n                // Is user allowed\n                if (store.get('teampassItem').item_rights < 20) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('error_not_allowed_to'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n\n                // Store current view\n                savePreviousView();\n\n                // Store not a new item\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.isNewItem = 0\n                    }\n                );\n\n                // Remove validated class\n                $('#form-item').removeClass('was-validated');\n\n                // Now manage edtion\n                showItemEditForm(selectedFolderId);\n            });\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'copy') {\n            if (debugJavascript === true) console.info('SHOW COPY ITEM');\n            toastr.remove();\n            // Store current view\n            savePreviousView('.form-item-copy');\n\n            if (store.get('teampassItem').user_can_modify === 1) {\n                // Show copy form\n                $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n                $('.form-item-copy, .item-details-card-menu').removeClass('hidden');\n                // Prepare some data in the form\n                $('#form-item-copy-new-label').val($('#form-item-label').val());\n                $('#form-item-copy-destination').val($('#form-item-folder').val()).change();\n            } else {\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n            }\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'delete') {\n            // Is user allowed\n            var levels = [50, 70];\n            if (levels.includes(store.get('teampassItem').item_rights) === false) {\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-item-delete');\n\n            if (debugJavascript === true) console.info('SHOW DELETE ITEM');\n            if (store.get('teampassItem').user_can_modify === 1) {\n                // Show delete form\n                $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n                $('.form-item-delete, .item-details-card-menu').removeClass('hidden');\n            } else {\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n            }\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'share') {\n            if (debugJavascript === true) console.info('SHOW SHARE ITEM');\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-item-share');\n\n            // Show share form\n            $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n            $('.form-item-share, .item-details-card-menu').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'notify') {\n            if (debugJavascript === true) console.info('SHOW NOTIFY ITEM');\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-item-notify');\n\n            $('#form-item-notify-checkbox').iCheck('uncheck');\n            // Show notify form\n            $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n            $('.form-item-notify, .item-details-card-menu').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'otv') {\n            if (debugJavascript === true) console.info('SHOW OTV ITEM');\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-item-otv');\n\n            // Generate link\n            prepareOneTimeView();\n\n            $('#form-item-otv-link').val('');\n            // Show notify form\n            $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n            $('.form-item-otv, .item-details-card-menu').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'server') {\n            if (debugJavascript === true) console.info('SHOW SERVER UPDATE ITEM');\n            toastr.remove();\n\n            // Is user allowed\n            var levels = [50, 70];\n            if (levels.includes(store.get('teampassItem').item_rights) === false) {\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Store current view\n            savePreviousView('.form-item-server');\n\n            $('#form-item-notify-checkbox').iCheck('uncheck');\n            // Show notify form\n            $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n            $('.form-item-server, .item-details-card-menu').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        }\n\n        return false;\n    });\n\n    /**\n     * Saves the current view of user\n     */\n    function savePreviousView(newElement = '') {\n        var element = '';\n        if ($('#folders-tree-card').hasClass('hidden') === false) {\n            element = '#folders-tree-card';\n        } else if ($('.form-item').hasClass('hidden') === false) {\n            element = '.form-item';\n        } else if ($('.item-details-card-menu').hasClass('hidden') === false) {\n            element = '.item-details-card';\n        }\n        \n        if (debugJavascript === true) {console.log('>>> ' + element + ' -- ' + newElement);}\n\n        if (element === '.item-details-card') element = '#folders-tree-card';\n\n        // Store current view\n        store.update(\n            'teampassUser',\n            function(teampassUser) {\n                teampassUser.previousView = element;\n            }\n        );\n\n        // Store the new one to display\n        store.update(\n            'teampassUser',\n            function(teampassUser) {\n                teampassUser.currentView = newElement;\n            }\n        );\n    }\n\n\n    $('.but-back').click(function() {\n        userDidAChange = false;\n        if ($(this).hasClass('but-back-to-item') === false) {\n            // Is this form the edition one?\n            if ($(this).hasClass('item-edit') === true && userUploadedFile === true) {\n                // Do some operation such as cancel file upload\n                var data = {\n                    'item_id': store.get('teampassItem').id,\n                }\n\n                $.post(\n                    \"sources/items.queries.php\", {\n                        type: 'delete_uploaded_files_but_not_saved',\n                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'delete_uploaded_files_but_not_saved');\n                        if (debugJavascript === true) console.log(data);\n                    }\n                );\n            }\n\n            // Clear pickfiles div\n            $('#form-item-upload-pickfilesList').html('');\n\n            // Hide all\n            $('.form-item, .form-item-action, .form-folder-action, .item-details-card, #folders-tree-card, .columns-position, #item-details-card-categories, #form-item-upload-pickfilesList, #card-item-expired')\n                .addClass('hidden');\n\n            // Show expected one\n            $(store.get('teampassUser').previousView).removeClass('hidden');\n\n            closeItemDetailsCard();\n        } else {\n            $(store.get('teampassUser').previousView).removeClass('hidden');\n            $(store.get('teampassUser').currentView).addClass('hidden');\n        }\n        $('.but-prev-item, .but-next-item').addClass('hidden').text('');\n    });\n\n\n    // Quit item details card back to items list\n    $('.but-back-to-list').click(function() {\n        closeItemDetailsCard();\n    });\n\n\n\n    // Manage if change is performed by user\n    $('#form-item .form-item-control')\n        .on('change', function() {\n            if (requestRunning === false) {\n                userDidAChange = true;\n                if (debugJavascript === true) console.log('User did a change on #form-item > ' + userDidAChange + \" - Element \" + $(this).attr('id'));\n                //$(this).attr('data-change-ongoing', true);\n            }\n        })\n        .on('ifToggled', function() {\n            if (requestRunning === false) {\n                userDidAChange = true;\n                if (debugJavascript === true) console.log('User did a change on ifToggled > ' + userDidAChange);\n                //$(this).attr('data-change-ongoing', true);\n            }\n        });\n\n    /**\n     * Click on perform IMPORT\n     */\n    $(document).on('click', '#form-item-import-perform', function() {\n        if (debugJavascript === true) console.log('START IMPORT');\n    });\n\n\n    /**\n     * Click on ITEM REQUEST ACCESS\n     */\n    $(document).on('click', '.fa-clickable-access-request', function() {\n        // Store current view\n        savePreviousView();\n\n        // Adapt the form\n        $('#form-item-request-access-label')\n            .html($(this).closest('.list-item-description').find('.list-item-row-description').text());\n\n        // Store current item ID\n        var selectedItemId = $(this).closest('.list-item-row').data('item-id');\n        store.update(\n            'teampassItem',\n            function(teampassItem) {\n                teampassItem.id = selectedItemId;\n            }\n        );\n\n        // Show user\n        $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n        $('.form-item-request-access').removeClass('hidden');\n    });\n\n    /**\n     * Send an access request to author\n     */\n    $(document).on('click', '#form-item-request-access-perform', function() {\n        // No reason is provided\n        if ($('#form-item-request-access-reason').val() === '') {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_provide_reason'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        var data = {\n            'id': store.get('teampassItem').id,\n            'email': DOMPurify.sanitize($('#form-item-request-access-reason').val()),\n        }\n        // NOw send the email\n        $.post(\n            \"sources/items.queries.php\", {\n                type: 'send_request_access',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'send_request_access');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Change view\n                    $('.form-item-request-access').addClass('hidden');\n                    $('#folders-tree-card, .columns-position').removeClass('hidden');\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n\n        scrollBackToPosition();\n    });\n\n\n    /**\n     * Show/Hide the Password generation options\n     */\n    $('#item-button-password-showOptions').click(function() {\n        if ($('#form-item-password-options').hasClass('hidden') === true) {\n            $('#form-item-password-options').removeClass('hidden');\n        } else {\n            $('#form-item-password-options').addClass('hidden');\n        }\n    });\n\n\n\n    /**\n     * Adapt the top rules of item form on change of folders\n     */\n    $('#form-item-folder').change(function() {\n        if ($(this).val() !== null && store.get('teampass-folders') !== undefined) {\n            if (debugJavascript === true) {\n                console.log('teampass-folders');\n                console.log(store.get('teampass-folders'))\n            }\n            var folders = JSON.parse(store.get('teampass-folders'));\n            $('#card-item-visibility').html(folders[$(this).val()].visibilityRoles);\n            $('#card-item-minimum-complexity').html(folders[$(this).val()].complexity.text);\n        }\n\n    });\n\n    /**\n     * NOTIFY - Perform save\n     */\n    $('#form-item-notify-perform').click(function() {\n        var form = $('#form-item-notify');\n\n\n        var data = {\n            'notification_status': $('#form-item-notify-checkbox').is(':checked') === true ? 1 : 0,\n            'item_id': store.get('teampassItem').id,\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'save_notification_status',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'save_notification_status');\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Change the icon for Notification\n                    if ($('#form-item-notify-checkbox').is(':checked') === true) {\n                        $('#card-item-misc-notification')\n                            .html('<span class=\"far fa-bell infotip text-success\" title=\"<?php echo langHdl('notification_engaged'); ?>\"></span>');\n                    } else {\n                        $('#card-item-misc-notification')\n                            .html('<span class=\"far fa-bell-slash infotip text-warning\" title=\"<?php echo langHdl('notification_not_engaged'); ?>\"></span>');\n                    }\n\n                    // Show/hide forms\n                    $('.item-details-card').removeClass('hidden');\n                    $('.form-item-notify').addClass('hidden');\n\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n                    // Clear\n                    $('#form-item-notify-checkbox').iCheck('uncheck');\n                }\n            }\n        );\n    });\n\n\n\n    /**\n     * SHARE - validate the email\n     */\n    $('#form-item-share-perform').click(function() {\n        var form = $('#form-item-share');\n\n        if (form[0].checkValidity() === false) {\n            form.addClass('was-validated');\n            return false;\n        }\n\n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Prepare data\n        var data = {\n            'id': store.get('teampassItem').id,\n            'receipt': DOMPurify.sanitize($('#form-item-share-email').val()),\n            'cat': 'share_this_item',\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'send_email',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'send_email');\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $('.item-details-card').removeClass('hidden');\n                    $('.form-item-share').addClass('hidden');\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n                    // Clear\n                    $('#form-item-share-email').val('');\n                }\n            }\n        );\n    });\n\n\n    /**\n     * DELETE - recycle item\n     */\n    $('#form-item-delete-perform').click(function() {\n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Force user did a change to false\n        userDidAChange = false;\n        userUploadedFile = false;\n\n        var data = {\n            'item_id': store.get('teampassItem').id,\n            'folder_id': selectedFolderId,\n            'label': DOMPurify.sanitize($('#form-item-copy-new-label').val()),\n            'access_level': store.get('teampassItem').hasAccessLevel,\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'delete_item',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'delete_item');\n\n                if (typeof data !== 'undefined' && data.error !== true) {\n                    $('.form-item-action, .item-details-card-menu').addClass('hidden');\n                    // Warn user\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    // Refresh tree\n                    refreshTree(selectedFolderId, true);\n                    // Load list of items\n                    ListerItems(selectedFolderId, '', 0);\n                    // Close\n                    closeItemDetailsCard();\n                } else {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * NOTIFY - save status\n     */\n    $('#form-item-share-perform').click(function() {\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'notify_user_on_item_change',\n                id: store.get('teampassItem').id,\n                value: $('#form-item-anyoneCanModify').is(':checked') === true ? 1 : 0,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                if (data[0].error === '') {\n                    $('.form-item, .item-details-card, .form-item-action').removeClass('hidden');\n                    $('.form-item-share, .item-details-card-menu').addClass('hidden');\n                    // Warn user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    // Clear\n                    $('#form-item-anyoneCanModify').attr('checked', '');\n                } else {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                }\n            },\n            'json'\n        );\n    });\n\n\n    /**\n     * COPY - perform copy item\n     */\n    $('#form-item-copy-perform').click(function() {\n        // Do check\n        if ($('#form-item-copy-new-label').val() === '') {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Show cog\n        toastr.remove();\n        toastr.info('<?php echo langHdl('item_copying'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Force user did a change to false\n        userDidAChange = false;\n        userUploadedFile = false;\n\n        var data = {\n            'item_id': store.get('teampassItem').id,\n            'source_id': selectedFolderId,\n            'dest_id': $('#form-item-copy-destination').val(),\n            'new_label': DOMPurify.sanitize($('#form-item-copy-new-label').val()),\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'copy_item',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n\n                if (typeof data !== 'undefined' && data.error !== true) {\n                    // Warn user\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    // Refresh tree\n                    refreshTree(parseInt($('#form-item-copy-destination').val()), true);\n                    // Load list of items\n                    ListerItems(parseInt($('#form-item-copy-destination').val()), '', 0);\n\n                    // Reopen Item details form\n                    Details(\n                        data.new_id,\n                        'show',\n                        true\n                    );\n                    \n                    // Close\n                    $('.item-details-card').removeClass('hidden');\n                    $('.form-item-copy').addClass('hidden');\n                } else {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * SERVER - perform server update\n     */\n    $('#form-item-server-perform').click(function() {\n        // Decide what action is performing the user\n\n        if ($('#tab-one-shot').hasClass('active') === true) {\n            // Do check\n            if ($('#form-item-server-login').val() === '' ||\n                $('#form-item-server-old-password').val() === '' ||\n                $('#form-item-server-password').val() === ''\n            ) {\n                toastr.error(\n                    '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Show cog\n            toastr.remove();\n            toastr.info(\n                '<i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>',\n            );\n\n            // Force user did a change to false\n            userDidAChange = false;\n            userUploadedFile = false;\n\n            var data = {\n                'item_id': store.get('teampassItem').id,\n                'new_pwd': DOMPurify.sanitize($('#form-item-server-password').val()),\n                'ssh_root': DOMPurify.sanitize($('#form-item-server-login').val()),\n                'ssh_pwd': DOMPurify.sanitize($('#form-item-server-old-password').val()),\n                'user_id': <?php echo $_SESSION['user_id']; ?>,\n            }\n\n            $.post(\n                \"sources/utils.queries.php\", {\n                    type: \"server_auto_update_password\",\n                    data: prepareExchangedData(data, \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                    if (debugJavascript === true) console.log(data);\n                    //check if format error\n                    if (data.error === true) {\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Warn user\n                        toastr.success(\n                            '<?php echo langHdl('success'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n\n                        // Info\n                        $(\"#form-item-server-status\")\n                            .html(\"<?php echo langHdl('done'); ?> \" + data.text)\n                            .removeClass('hidden');\n                    }\n                }\n            );\n        } else if ($('#tab-scheduled').hasClass('active') === true) {\n            $.post(\n                \"sources/utils.queries.php\", {\n                    type: \"server_auto_update_password_frequency\",\n                    id: store.get('teampassItem').id,\n                    freq: $('#form-item-server-cron-frequency').val(),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    if (data[0].error != \"\") {\n                        toastr.remove();\n                        toastr.error(\n                            data[0].error,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        $('#form-item-server-cron-frequency').val(0).change();\n                        toastr.success(\n                            '<?php echo langHdl('success'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                },\n                \"json\"\n            );\n        }\n    });\n\n\n    /**\n     * SUGGESTION - perform new suggestion on item\n     */\n    $('#form-item-suggestion-perform').click(function() {\n        var form = $('#form-item-suggestion');\n\n        if (form[0].checkValidity() === false) {\n            form.addClass('was-validated');\n\n            // Send alert to user\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('form_presents_inconsistencies'); ?>',\n                '', {\n                    timeOut: 10000,\n                    progressBar: true\n                }\n            );\n\n            return false;\n        }\n\n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Force user did a change to false\n        userDidAChange = false;\n        userUploadedFile = false;\n\n        var data = {\n            'label': DOMPurify.sanitize($('#form-item-suggestion-label').val()),\n            'login': DOMPurify.sanitize($('#form-item-suggestion-login').val()),\n            'password': DOMPurify.sanitize($('#form-item-suggestion-password').val()),\n            'email': DOMPurify.sanitize($('#form-item-suggestion-email').val()),\n            'url': DOMPurify.sanitize($('#form-item-suggestion-url').val()),\n            'description': DOMPurify.sanitize($('#form-item-suggestion-description').summernote('code'), {USE_PROFILES: {html: true}}),\n            'comment': DOMPurify.sanitize($('#form-item-suggestion-comment').val(), {USE_PROFILES: {html: true}}),\n            'folder_id': selectedFolderId,\n            'item_id': store.get('teampassItem').id\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'suggest_item_change',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data//decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'suggest_item_change');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Warn user\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    // Clear form\n                    $('.form-item-suggestion').html('');\n\n                    // Collapse form\n                    //$('.card-item-extra').collapse('toggle');\n                }\n            }\n        );\n    });\n\n\n    /**\n     * FOLDER NEW - Add a new folder\n     */\n    $('#form-folder-add-perform').click(function() {\n        var form = $('#form-folder-add');\n        if (debugJavascript === true) {\n            console.log(form[0]);\n            console.log(form[0].checkValidity());\n        }\n        if (form[0].checkValidity() === false) {\n            form.addClass('was-validated');\n\n            // Send alert to user\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('form_presents_inconsistencies'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            return false;\n        }\n\n        // Error if folder text is only numeric\n        if (/^\\d+$/.test($('#form-folder-add-label').val())) {\n            $('#form-folder-add-label').addClass('is-invalid');\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_only_numbers_in_folder_name'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            return false;\n        }\n\n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Force user did a change to false\n        userDidAChange = false;\n        userUploadedFile = false;\n\n        var data = {\n            'title': DOMPurify.sanitize($('#form-folder-add-label').val()),\n            'parentId': $('#form-folder-add-parent option:selected').val(),\n            'complexity': $('#form-folder-add-complexicity option:selected').val(),\n            //'access_rights_strategy': $('#form-folder-add-rights option:selected').val(),\n            'icon': $('#form-folder-add-icon').val(),\n            'iconSelected': $('#form-folder-add-icon-selected').val(),\n            'id': selectedFolderId,\n        }\n        if (debugJavascript === true) console.log(data);\n\n        // Launch action\n        $.post(\n            'sources/folders.queries.php', {\n                type: $('#form-folder-add').data('action') + '_folder',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data//decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'folders.queries.php', $('#form-folder-add').data('action') + '_folder');\n                if (debugJavascript === true) {\n                    console.log(data);\n                }\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Refresh list of folders\n                    refreshVisibleFolders(true);\n                    if ($('#form-folder-add').data('action') === 'add') {\n                        // Refresh tree\n                        refreshTree(data.newId, true);\n                        // Refresh list of items inside the folder\n                        ListerItems(data.newId, '', 0);\n                    } else {\n                        // Refresh tree\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.jstreeForceRefresh = 1;\n                            }\n                        );\n                        refreshTree(selectedFolderId, true);\n                        // Refresh list of items inside the folder\n                        ListerItems(selectedFolderId, '', 0);\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.jstreeForceRefresh = 0;\n                            }\n                        );\n                    }\n                    // Back to list\n                    closeItemDetailsCard();\n                    // Warn user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n                // Enable the parent in select\n                if (selectedFolder.id !== undefined) {\n                    $(\"#form-folder-add-parent option[value='\" + selectedFolder.id.split('_')[1] + \"']\")\n                        .prop('disabled', false);\n                }\n            }\n        );\n    });\n\n\n    /**\n     * FOLDER DELETE - Delete an existing folder\n     */\n    $('#form-folder-delete-perform').click(function() {\n        // Do check\n        if ($('#form-folder-confirm-delete').is(':checked') === false) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('please_confirm'); ?>',\n                '',\n                {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        } else if ($('#form-folder-delete-selection option:selected').text() === '<?php echo $_SESSION['login']; ?>') {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_not_allowed_to'); ?>',\n                '',\n                {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Is a folder selected\n        if ($('#form-folder-delete-selection option:selected').val() === '') {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('please_select_a_folder'); ?>',\n                '',\n                {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        \n        // Ensure Root is not selected\n        } else if (parseInt($('#form-folder-delete-selection option:selected').val()) === 0) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('please_select_a_folder'); ?>',\n                '',\n                {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n        \n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n\n        var selectedFolders = [],\n            data = {\n                'selectedFolders': [$('#form-folder-delete-selection option:selected').val()]\n            }\n        if (debugJavascript === true) console.log(data)\n\n        // Launch action\n        $.post(\n            'sources/folders.queries.php', {\n                type: 'delete_folders',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'folders.queries.php', 'delete_folders');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Refresh list of folders\n                    refreshVisibleFolders(true);\n                    // Refresh tree\n                    refreshTree(data.parent_id, true);\n                    // Refresh list of items inside the folder\n                    ListerItems(data.parent_id, '', 0);\n                    // Back to list\n                    closeItemDetailsCard();\n                    // Warn user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n\n                $('#form-folder-confirm-delete').iCheck('uncheck');\n            }\n        );\n    });\n\n\n    /**\n     * FOLDER COPY - Copy an existing folder\n     */\n    $('#form-folder-copy-perform').click(function() {\n        // Do check\n        if ($(\"#form-folder-copy-source\").val() === \"\" || $(\"#form-folder-copy-destination\").val() === \"\") {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_must_enter_all_fields'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        } else if ($(\"#form-folder-copy-source\").val() === $(\"#form-folder-copy-destination\").val()) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_source_and_destination_are_equal'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Show cog\n        toastr.remove();\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        var data = {\n            'source_folder_id': $('#form-folder-copy-source option:selected').val(),\n            'target_folder_id': $('#form-folder-copy-destination option:selected').val(),\n            'folder_label': DOMPurify.sanitize($('#form-folder-copy-label').val()),\n        }\n\n        // Launch action\n        $.post(\n            'sources/folders.queries.php', {\n                type: 'copy_folder',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'folders.queries.php', 'copy_folder');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Refresh list of folders\n                    refreshVisibleFolders(true);\n                    // Refresh tree\n                    refreshTree($('#form-folder-copy-destination option:selected').val(), true);\n                    // Refresh list of items inside the folder\n                    ListerItems($('#form-folder-copy-destination option:selected').val(), '', 0);\n                    // Back to list\n                    closeItemDetailsCard();\n                    // Warn user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n    $(document).on('change', '#form-folder-copy-source', function() {\n        $('#form-folder-copy-label')\n            .val($('#form-folder-copy-source option:selected').text()\n                .substring(0, $('#form-folder-copy-source option:selected').text().lastIndexOf('[')).trim() +\n                ' <?php echo strtolower(langHdl('copy')); ?>');\n    });\n\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function closeItemDetailsCard() {\n        if (debugJavascript === true) console.log('CLOSE - user did a change? ' + userDidAChange + \" - User previous view: \" + store.get('teampassUser').previousView);\n        if (userDidAChange === true) {\n            toastr\n                .warning(\n                    '<?php echo langHdl('changes_ongoing'); ?><br>' +\n                    '<button type=\"button\" class=\"btn clear\" id=\"discard-changes\"><?php echo langHdl('yes'); ?></button>' +\n                    '<button type=\"button\" class=\"btn clear ml-2\" id=\"keep-changes\"><?php echo langHdl('no'); ?></button>',\n                    '<?php echo langHdl('caution'); ?>', {\n                        closeButton: true\n                    }\n                );\n            $(document).on('click', '#discard-changes', function() {\n                userDidAChange = false;\n                //$('.form-item-control').attr('data-change-ongoing', \"\");\n                closeItemDetailsCard();\n            });\n        } else {\n            if (store.get('teampassUser').previousView === '.item-details-card' &&\n                $('.item-details-card').hasClass('hidden') === false\n            ) {\n                $('.item-details-card').removeClass('hidden');\n                $('#folders-tree-card, .columns-position, .form-item-action, .form-item, .form-folder-action, #card-item-expired')\n                    .addClass('hidden');\n\n                // Force previous view to folders list\n                store.update(\n                    'teampassUser',\n                    function(teampassUser) {\n                        teampassUser.previousView = '#folders-tree-card';\n                    }\n                );\n            } else {\n                if (store.get('teampassUser').previousView === '.item-details-card') {\n                    // Force previous view to folders list\n                    store.update(\n                        'teampassUser',\n                        function(teampassUser) {\n                            teampassUser.previousView = '#folders-tree-card';\n                        }\n                    );\n                    // Reopen Item details form\n                    Details(\n                        store.get('teampassItem').id,\n                        'show',\n                        true\n                    );\n\n                    return false;\n                }\n                if (store.get('teampassUser').previousView === '#folders-tree-card' ||\n                    $('.item-details-card').hasClass('hidden') === false\n                ) {\n                    $('#folders-tree-card, .columns-position').removeClass('hidden');\n                    $('.item-details-card, .form-item-action, .form-item, .form-folder-action, #card-item-expired')\n                        .addClass('hidden');\n                } else {\n                    // Hide all\n                    $('.form-item, .form-item-action, .form-folder-action, .item-details-card, #folders-tree-card, #card-item-expired')\n                        .addClass('hidden');\n\n                    // Show expected one\n                    $(store.get('teampassUser').previousView).removeClass('hidden');\n                }\n\n                // Do some form cleaning\n                $('.clear-me-val, .form-item-control').val('');\n                $('.item-details-card').find('.form-control').val('');\n                $('.clear-me-html, .card-item-field-value').html('');\n                $('.form-check-input').attr('checked', '');\n                //$('.card-item-extra').collapse();\n                $('.collapse').removeClass('show');\n                $('.to_be_deleted').remove();\n                $('#card-item-attachments, #card-item-history').html('');\n                $('#card-item-attachments-badge').html('<?php echo langHdl('none'); ?>');\n\n                // Move back fields\n                $('.fields-to-move')\n                    .detach()\n                    .appendTo('#card-item-fields');\n\n                // Ensure the form is correct\n                $('#list-group-item-main, #item-details-card-categories')\n                    .children('.list-group')\n                    .removeClass('hidden');\n\n                // SHow save button in card\n                //$('#form-item-buttons').removeClass('sticky-footer');\n\n                // Destroy editors\n                $('#form-item-description').summernote('destroy');\n                $('#form-item-suggestion-description').summernote('destroy');\n\n                // Show loading\n                $('.overlay').removeClass('hidden');\n\n                // Collapse accordion\n                //$('.collapseme').addClass('collapsed-card');\n\n                // Restore scroll position\n                $(window).scrollTop(userScrollPosition);\n\n                userDidAChange = false;                \n                //$('.form-item-control').attr('data-change-ongoing', \"\");\n\n                // Enable the parent in select\n                if (selectedFolder.id !== undefined) {\n                    $(\"#form-folder-add-parent option[value='\" + selectedFolder.id.split('_')[1] + \"']\")\n                        .prop('disabled', false);\n                }\n            }\n            if (debugJavascript === true) console.log('Edit for closed');\n        }\n\n\n\n        // Scroll back to position\n        scrollBackToPosition();\n    }\n\n\n    /**\n     * Click on button with class but-navigate-item\n     */\n    $(document)\n        .on('click', '.but-navigate-item', function() {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Load item info\n            Details(\n                $(this).hasClass('but-prev-item') === true ? $('#list-item-row_' + $(this).attr('data-prev-item-id')) : $('#list-item-row_' + $(this).attr('data-next-item-id')),\n                'show'\n            );\n\n            $('.but-navigate-item').addClass('hidden');\n        });\n\n\n    /**\n     * Click on item\n     */\n    $(document)\n        .on('click', '.list-item-clicktoshow', function() {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Load item info\n            Details($(this).closest('tr'), 'show');\n        })\n        .on('click', '.list-item-clicktoedit', function() {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            if (debugJavascript === true) console.log('EDIT ME');\n            // Set type of action\n            $('#form-item-button-save').data('action', 'update_item');\n            \n            // Load item info\n            Details($(this).closest('tr'), 'edit');\n        });\n\n    /**\n     *  Manage mini icons on mouse over\n     */\n    $(document)\n        .on('mouseenter', '.list-item-row', function() {\n            $(this).find(\".list-item-actions\").removeClass('hidden');\n        })\n        .on('mouseleave', '.list-item-row', function() {\n            $(this).find(\".list-item-actions\").addClass('hidden');\n        });\n\n    $(document)\n        .on('change', '.form-check-input-template', function() {\n            $('.form-check-input-template').not(this).prop('checked', false);\n            userDidAChange = true;\n            if (debugJavascript === true) console.log('User did a change on .form-check-input-template > ' + userDidAChange);\n        });\n\n    $('.form-check-input-template').on('ifChecked', function() {\n        $('.form-check-input-template').not(this).iCheck('uncheck');\n        userDidAChange = true;\n        if (debugJavascript === true) console.log('User did a change on .form-check-input-template > ' + userDidAChange);\n        //$('.form-check-input-template').attr('data-change-ongoing', true);;\n    });\n\n    /**\n     * Manage change of color\n     */\n    $(document)\n        .on('mouseenter', '.fa-clickable', function() {\n            $(this).addClass('text-info');\n        })\n        .on('mouseleave', '.fa-clickable', function() {\n            $(this).removeClass('text-info');\n        });\n\n    $('#form-item-label').change(function() {\n        $('#form-item-title').html($(this).val());\n    });\n\n    /**\n     * Make the item favourite by clicking on icon\n     */\n    $(document)\n        .on('click', '.item-favourite', function() {\n            if (quick_icon_query_status === true) {\n                quick_icon_query_status = false;\n                var elem = $(this);\n\n                //Send query\n                toastr.remove();\n                toastr.info(\n                    '<?php echo langHdl('success'); ?>',\n                    '', {\n                        timeOut: 1000\n                    }\n                );\n\n                var data = {\n                    item_id: $(this).data('item-id'),\n                    action: $(this).data('item-favourited'),\n                }\n\n                console.log(data)\n\n                $.post('sources/items.queries.php', {\n                        type: 'action_on_quick_icon',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(ret) {\n                        //change quick icon\n                        if (elem.data('item-favourited') === 0) {\n                            $(elem)\n                                .html('<span class=\"fa-stack fa-clickable item-favourite pointer infotip mr-2\" title=\"<?php echo langHdl('unfavorite'); ?>\" data-item-id=\"' + elem.item_id + '\" data-item-favourited=\"1\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-star fa-stack-1x fa-inverse text-warning\"></i></span>');\n                        } else {\n                            $(elem)\n                                .html('<span class=\"fa-stack fa-clickable item-favourite pointer infotip mr-2\" title=\"<?php echo langHdl('favorite'); ?>\" data-item-id=\"' + elem.item_id + '\" data-item-favourited=\"0\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-star fa-stack-1x fa-inverse\"></i></span>');\n                        }\n\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('success'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                        quick_icon_query_status = true;\n                    }\n                );\n            }\n        });\n\n    // Click to reaveal password\n    $('#item-button-password-show')\n        .mouseup(function() {\n            $('#form-item-password').attr('type', 'password');\n        })\n        .mousedown(function() {\n            $('#form-item-password').attr('type', 'text');\n        });\n    $('.btn-no-click')\n        .click(function(e) {\n            e.preventDefault();\n        });\n\n\n\n    // show password during longpress\n    var mouseStillDown = false;\n    $('.item-details-card').on('mousedown', '.unhide_masked_data', function(event) {\n            mouseStillDown = true;\n            showPwdContinuous();\n        })\n        .on('mouseup', '.unhide_masked_data', function(event) {\n            mouseStillDown = false;\n            showPwdContinuous();\n        })\n        .on('mouseleave', '.unhide_masked_data', function(event) {\n            mouseStillDown = false;\n            showPwdContinuous();\n        });\n    var showPwdContinuous = function() {\n        if (mouseStillDown === true) {\n            // Prepare data to show\n            // Is data crypted?\n            var data = unCryptData($('#hidden-item-pwd').val(), '<?php echo $_SESSION['key']; ?>');\n            if (data !== false && data !== undefined) {\n                $('#hidden-item-pwd').val(\n                    data.password\n                );\n            }\n\n            $('#card-item-pwd')\n                .html(\n                    '<span style=\"cursor:none;\">' +\n                    $('#hidden-item-pwd').val()\n                    .replace(/</g, '&lt;')\n                    .replace(/>/g, '&gt;') +\n                    '</span>'\n                );\n\n            setTimeout('showPwdContinuous(\"card-item-pwd\")', 50);\n            // log password is shown\n            if ($('#card-item-pwd').hasClass('pwd-shown') === false) {\n                itemLog(\n                    'at_password_shown',\n                    store.get('teampassItem').id,\n                    $('#card-item-label').text()\n                );\n                $('#card-item-pwd').addClass('pwd-shown');\n            }\n        } else {\n            $('#card-item-pwd')\n                .html('<?php echo $var['hidden_asterisk']; ?>')\n                .removeClass('pwd-shown');\n        }\n    };\n\n    // Fields - show masked field\n    var selectedElement;\n    $('.item-details-card').on('mousedown', '.replace-asterisk', function(event) {\n            mouseStillDown = true;\n            selectedElement = $(this);\n            showContinuousMasked();\n        })\n        .on('mouseup', '.replace-asterisk', function(event) {\n            mouseStillDown = false;\n        })\n        .on('mouseleave', '.replace-asterisk', function(event) {\n            mouseStillDown = false;\n        });\n    var showContinuousMasked = function() {\n        if (mouseStillDown) {\n            $(selectedElement)\n                .text($('#hidden-card-item-field-value-' + selectedElement.data('field-id')).val());\n\n            setTimeout('showContinuousMasked()', 50);\n        } else {\n            $(selectedElement).html('<?php echo $var['hidden_asterisk']; ?>');\n        }\n    };\n\n\n    /**\n     * Launch the items search\n     */\n    $('#find_items').bind('keypress', function(e) {\n        var code = e.keyCode || e.which;\n        if (code == 13) {\n            searchItems($(this).val());\n        }\n    });\n\n    $('#find_items_button').click(function() {\n        if ($('#find_items').val() !== '') {\n            searchItems($('#find_items').val());\n        }\n    });\n\n\n    // Password strength\n    var pwdOptions = {};\n    pwdOptions = {\n        common: {\n            zxcvbn: true,\n            debug: false,\n            minChar: 4,\n            onScore: function (options, word, totalScoreCalculated) {\n                if (word.length === 20 && totalScoreCalculated < options.ui.scores[1]) {\n                    // Score doesn't meet the score[1]. So we will return the min\n                    // numbers of points to get that score instead.\n                    return options.ui.score[1]\n                }\n                $(\"#form-item-password-complex\").val(totalScoreCalculated);\n                return totalScoreCalculated;\n            },\n            usernameField: \"#form-item-login\",\n        },\n        rules: {},\n        ui: {\n            colorClasses: [\"text-danger\", \"text-danger\", \"text-danger\", \"text-warning\", \"text-warning\", \"text-success\"],\n            showPopover: false,\n            showStatus: true,\n            showErrors: false,\n            showVerdictsInsideProgressBar: true,\n            container: \"#tab_1\",\n            viewports: {\n                progress: \"#form-item-password-strength\",\n                score: \"#form-item-password-strength\"\n            },\n            scores: [<?php echo TP_PW_STRENGTH_1;?>, <?php echo TP_PW_STRENGTH_2;?>, <?php echo TP_PW_STRENGTH_3;?>, <?php echo TP_PW_STRENGTH_4;?>, <?php echo TP_PW_STRENGTH_5;?>],\n        },\n        i18n : {\n            t: function (key) {\n                var phrases = {\n                    weak: '<?php echo langHdl('complex_level1'); ?>',\n                    normal: '<?php echo langHdl('complex_level2'); ?>',\n                    medium: '<?php echo langHdl('complex_level3'); ?>',\n                    strong: '<?php echo langHdl('complex_level4'); ?>',\n                    veryStrong: '<?php echo langHdl('complex_level5'); ?>'\n                };\n                var result = phrases[key];\n\n                return result === key ? '' : result;\n            }\n        }\n    };\n    $('#form-item-password').pwstrength(pwdOptions);\n    \n\n\n    /**\n     * PLUPLOAD\n     */\n    var uploader_attachments = new plupload.Uploader({\n        runtimes: 'html5,flash,silverlight,html4',\n        browse_button: 'form-item-attach-pickfiles',\n        container: 'form-item-upload-zone',\n        max_file_size: '<?php\n            if (strrpos($SETTINGS['upload_maxfilesize'], 'mb') === false) {\n                echo $SETTINGS['upload_maxfilesize'] . 'mb';\n            } else {\n                echo $SETTINGS['upload_maxfilesize'];\n            }\n            ?>',\n        chunk_size: '1mb',\n        dragdrop: true,\n        url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/upload.attachments.php',\n        flash_swf_url: '<?php echo $SETTINGS['cpassman_url']; ?>/includes/libraries/Plupload/Moxie.swf',\n        silverlight_xap_url: '<?php echo $SETTINGS['cpassman_url']; ?>/includes/libraries/Plupload/Moxie.xap',\n        filters: {\n            mime_types: [\n                <?php\n                if (\n                    isset($SETTINGS['upload_all_extensions_file']) === false\n                    || (isset($SETTINGS['upload_all_extensions_file']) === true\n                        && (int) $SETTINGS['upload_all_extensions_file'] === 0)\n                ) {\n                    ?> {\n                        title: 'Image files',\n                        extensions: '<?php echo $SETTINGS['upload_imagesext']; ?>'\n                    },\n                    {\n                        title: 'Package files',\n                        extensions: '<?php echo $SETTINGS['upload_pkgext']; ?>'\n                    },\n                    {\n                        title: 'Documents files',\n                        extensions: '<?php echo $SETTINGS['upload_docext']; ?>'\n                    },\n                    {\n                        title: 'Other files',\n                        extensions: '<?php echo $SETTINGS['upload_otherext']; ?>'\n                    }\n                <?php\n                }\n                ?>\n            ],\n            <?php\n            if (isset($SETTINGS['upload_zero_byte_file']) === true && (int) $SETTINGS['upload_zero_byte_file'] === 1) {\n                ?>\n                prevent_empty: false\n            <?php\n            }\n            ?>\n        },\n        <?php\n        if ((int) $SETTINGS['upload_imageresize_options'] === 1) {\n            ?>\n            resize: {\n                width: <?php echo $SETTINGS['upload_imageresize_width']; ?>,\n                height: <?php echo $SETTINGS['upload_imageresize_height']; ?>,\n                quality: <?php echo $SETTINGS['upload_imageresize_quality']; ?>\n            },\n        <?php\n        }\n        ?>\n        init: {\n            BeforeUpload: function(up, file) {\n                toastr.info(\n                    '<i class=\"fa-solid fa-cloud-arrow-up fa-bounce mr-2\"></i><?php echo langHdl('uploading'); ?>',\n                    '', {\n                        timeOut: 0\n                    }\n                );\n\n                // Get random number\n                if (store.get('teampassApplication').uploadedFileId === '') {\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.uploadedFileId = CreateRandomString(9, 'num_no_0');\n                        }\n                    );\n                }\n\n                up.setOption('multipart_params', {\n                    PHPSESSID: '<?php echo $_SESSION['user_id']; ?>',\n                    itemId: store.get('teampassItem').id,\n                    type_upload: 'item_attachments',\n                    isNewItem: store.get('teampassItem').isNewItem,\n                    isPersonal: store.get('teampassItem').folderIsPersonal,\n                    edit_item: false,\n                    user_token: store.get('teampassApplication').attachmentToken,\n                    randomId: store.get('teampassApplication').uploadedFileId,\n                    files_number: $('#form-item-hidden-pickFilesNumber').val(),\n                    file_size: file.size\n                });\n                console.log('DEBUG IMAGE - BeforeUpload')\n                console.log(up);\n            }\n        }\n    });\n\n    // Uploader options\n    uploader_attachments.bind('UploadProgress', function(up, file) {\n        //console.log('uploader_attachments.bind')\n        $('#upload-file_' + file.id).html('<i class=\"fas fa-file fa-sm mr-2\"></i>' + htmlEncode(file.name) + '<span id=\"fileStatus_'+file.id+'\">- ' + file.percent + '%</span>');\n        if (file.percent === 100) {\n            $('#fileStatus_'+file.id).html('<i class=\"fa-solid fa-circle-check text-success ml-2 fa-1x\"></i>');\n            userUploadedFile = true;\n            userDidAChange = true;\n            toastr.remove();\n        }\n    });\n    uploader_attachments.bind('Error', function(up, err) {\n        toastr.remove();\n        toastr.error(\n            err.message + (err.file ? ', File: ' + err.file.name : ''),\n            '', {\n                timeOut: 5000,\n                progressBar: true\n            }\n        );\n\n        up.refresh(); // Reposition Flash/Silverlight\n    });\n\n    $(\"#form-item-upload-pickfiles\").click(function(e) {\n        if ($('#form-item-upload-pickfilesList').text() !== '') {\n            // generate and save token\n            $.post(\n                \"sources/main.queries.php\", {\n                    type: \"save_token\",\n                    type_category: 'action_system',\n                    size: 25,\n                    capital: true,\n                    numeric: true,\n                    ambiguous: true,\n                    reason: \"item_attachments\",\n                    duration: 10,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.attachmentToken = data[0].token;\n                        }\n                    );\n                    console.log('start upload')\n                    uploader_attachments.start();\n                },\n                \"json\"\n            );\n            e.preventDefault();\n        } else {\n            toastr.remove();\n            toastr.warning(\n                '<?php echo langHdl('no_file_to_upload'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n        }\n    });\n    uploader_attachments.init();\n    uploader_attachments.bind('FilesAdded', function(up, files) {\n        if (debugJavascript === true) {\n            console.log('uploader_attachments.FilesAdded')\n        }\n        $('#form-item-upload-pickfilesList').removeClass('hidden');\n        var addedFiles = '';\n        $.each(files, function(i, file) {\n            $('#form-item-upload-pickfilesList').append(\n                '<div id=\"upload-file_' + file.id + '\">' +\n                '<span id=\"upload-file-remove_' + file.id +\n                '><a href=\"#\" onclick=\"$(this).closest(\\'div\\').remove();\"><i class=\" fa fa-trash mr-2 pointer\"></i></a></span> ' +\n                htmlEncode(file.name) + ' (' + plupload.formatSize(file.size) + ')' +\n                '</div>');\n            $(\"#form-item-hidden-pickFilesNumber\").val(\n                parseInt($(\"#form-item-hidden-pickFilesNumber\").val()) + 1\n            );\n            if (debugJavascript === true) {\n                console.info('Info du fichier :');\n                console.log(file);\n            }\n        });\n        up.refresh(); // Reposition Flash/Silverlight\n    });\n    //->\n\n\n\n    /**\n     * Save item changes\n     */\n    $('#form-item-button-save').click(function() {\n        var arrayQuery = [],\n            originalFolderId = $('#form-item-folder').val(),\n            itemsList = [],\n            userItemRight = '';\n\n        // What action is this?\n        if ($('#form-item-button-save').data('action') === '' ||\n            $('#form-item-button-save').data('action') === undefined\n        ) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_no_action_identified'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Don't save if no change\n        if (userDidAChange === false && userUploadedFile === false) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('no_change_performed'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Validate form\n        var form = $('#form-item');\n        if (form[0].checkValidity() === false) {\n            form.addClass('was-validated');\n            // Send alert to user\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('form_presents_inconsistencies'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            return false;\n        }\n\n        // Loop on all changed fields\n        $('.form-item-field-custom').each(function(i, obj) {\n            if ($(this).data('change-ongoing') === true) {\n                // Create an array with changed inputs\n                arrayQuery.push({\n                    'input': $(this).attr('id'),\n                    'field': $(this).data('field-name'),\n                    'value': $(this).val(),\n                });\n            }\n        });\n        if (debugJavascript === true) {\n            console.log('CHANGED FIELDS '+userUploadedFile + ' ' + userDidAChange);\n            console.log(arrayQuery);\n        }\n\n        // is user allowed to edit this item\n        if (typeof store.get('teampassApplication').itemsList !== 'undefined') {\n            itemsList = JSON.parse(store.get('teampassApplication').itemsList);\n        }\n        if (itemsList.length > 0) {\n            userItemRight = itemsList[store.get('teampassItem').id]?.rights;\n        }\n\n        // Do checks\n        if (arrayQuery.length > 0 || userDidAChange === true) {\n            var reg = new RegExp(\"[.|,|;|:|!|=|+|-|*|/|#|\\\"|'|&]\");\n\n            // Do some easy checks\n            if ($('#form-item-label').val() === '') {\n                // Label is empty\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_label'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            } else if ($('#form-item-tags').val() !== '' &&\n                reg.test($('#form-item-tags').val())\n            ) {\n                // Tags not wel formated\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_tags'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            } else if ($('#form-item-folder option:selected').val() === '' ||\n                typeof $('#form-item-folder option:selected').val() === 'undefined'\n            ) {\n                // No folder selected\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_no_selected_folder'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            } else if ($('#form-item-folder option:selected').attr('disabled') === 'disabled' && userItemRight && userItemRight <= 40) {\n                // Folder is not allowed\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_folder_not_allowed'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            } else {\n                // Continue preparation of saving query\n\n                //Manage restriction\n                var restriction = new Array(),\n                    restrictionRole = new Array(),\n                    userInRestrictionList = false;\n                $('#form-item-restrictedto option:selected').each(function() {\n                    if ($(this).val() !== '') {\n                        if ($(this).hasClass('restriction_is_role') === true) {\n                            restrictionRole.push($(this).val().substring(5));\n                        } else {\n                            restriction.push($(this).val());\n                            // Is the user part of the restriction option\n                            if ($(this).val() === '<?php echo $_SESSION['user_id']; ?>') {\n                                userInRestrictionList = true;\n                            }\n                        }\n                    }\n                });\n                // IF any restriction, then ensure the author is in\n                if (userInRestrictionList === false && restriction.length > 0) {\n                    restriction.push('<?php echo $_SESSION['user_id']; ?>;');\n                }\n\n                // Manage diffusion list\n                var diffusion = new Array();\n                var diffusionNames = new Array();\n                $('#form-item-anounce option:selected').each(function() {\n                    diffusion.push($(this).val());\n                    diffusionNames.push($(this).text());\n                });\n\n                // Get item field values\n                // Ensure that mandatory ones are filled in too\n                // and they are compliant to regexes\n                var fields = [];\n                var errorExit = false;\n                var reason = '';\n                $('.form-item-field-custom').each(function(key, data) {\n                    fields.push({\n                        'id': $(this).data('field-name'),\n                        'value': $(this).val(),\n                    });\n\n                    // Mandatory?\n                    if (parseInt($(this).data('field-mandatory')) === 1 &&\n                        $(this).val() === '' &&\n                        $('#form-item-field-' + $(this).data('field-name')).parent().hasClass('hidden') === false\n                    ) {\n                        //if (debugJavascript === true) console.log($(this))\n                        errorExit = true;\n                        return false;\n                    }\n                    if ($(this).val().length > 0 && $(this).data('field-regex').length > 0 &&\n                        !$(this).val().match($(this).data('field-regex'))\n                    ) {\n                        //if (debugJavascript === true) console.log($(this))\n                        errorExit = true;\n                        reason = 'regex';\n                        return false;\n                    }\n                });\n                if (errorExit === true) {\n                    toastr.remove();\n                    if (reason === 'regex') {\n                        toastr.error(\n                            '<?php echo langHdl('error_field_regex'); ?>',\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        toastr.error(\n                            '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    }\n                    return false;\n                }\n                //prepare data\n                var data = {\n                    'anyone_can_modify': $('#form-item-anyoneCanModify').is(':checked') ? 1 : 0,\n                    'complexity_level': parseInt($('#form-item-password-complex').val()),\n                    'description': $('#form-item-description').summernote('code') !== \"<p><br></p>\" ? DOMPurify.sanitize($('#form-item-description').summernote('code'), {USE_PROFILES: {html: true}}) : '',\n                    'diffusion_list': diffusion,\n                    'diffusion_list_names': diffusionNames,\n                    'folder': parseInt($('#form-item-folder').val()),\n                    'email': DOMPurify.sanitize($('#form-item-email').val()),\n                    'fields': fields,\n                    'folder_is_personal': store.get('teampassItem').IsPersonalFolder === 1 ? 1 : 0,\n                    'id': store.get('teampassItem').id,\n                    'label': DOMPurify.sanitize($('#form-item-label').val()),\n                    'login': DOMPurify.sanitize($('#form-item-login').val()),\n                    'pw': $('#form-item-password').val(),\n                    'restricted_to': restriction,\n                    'restricted_to_roles': restrictionRole,\n                    'tags': DOMPurify.sanitize($('#form-item-tags').val()),\n                    'template_id': parseInt($('input.form-check-input-template:checkbox:checked').data('category-id')),\n                    'to_be_deleted_after_date': ($('#form-item-deleteAfterDate').length !== 0 &&\n                        $('#form-item-deleteAfterDate').val() !== '') ? $('#form-item-deleteAfterDate').val() : '',\n                    'to_be_deleted_after_x_views': ($('#form-item-deleteAfterShown').length !== 0 &&\n                            $('#form-item-deleteAfterShown').val() !== '' && $('#form-item-deleteAfterShown').val() >= 1) ?\n                        parseInt($('#form-item-deleteAfterShown').val()) : '',\n                    'url': DOMPurify.sanitize($('#form-item-url').val()),\n                    'user_id': parseInt('<?php echo $_SESSION['user_id']; ?>'),\n                    'uploaded_file_id': store.get('teampassApplication').uploadedFileId === undefined ? '' : store.get('teampassApplication').uploadedFileId,\n                    'fa_icon': DOMPurify.sanitize($('#form-item-icon').val()),\n                };\n                if (debugJavascript === true) {\n                    console.log('SAVING DATA');\n                    console.log(data);\n                }\n                // Inform user\n                toastr.remove();\n                toastr.info(\n                    '<?php echo langHdl('opening_folder'); ?><i class=\"fas fa-circle-notch fa-spin ml-2\"></i>'\n                );\n\n                // CLear tempo var\n                store.update(\n                    'teampassApplication',\n                    function(teampassApplication) {\n                        teampassApplication.uploadedFileId = '';\n                    }\n                );\n\n                //Send query\n                $.post(\n                    \"sources/items.queries.php\", {\n                        type: $('#form-item-button-save').data('action'),\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data) {\n                        //decrypt data\n                        try {\n                            data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                        } catch (e) {\n                            // error\n                            $(\"#div_loading\").addClass(\"hidden\");\n                            //requestRunning = false;\n                            $(\"#div_dialog_message_text\").html(\"An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />\" + data);\n                            $(\"#div_dialog_message\").dialog(\"open\");\n\n                            toastr.remove();\n                            toastr.error(\n                                'An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />' + data,\n                                '', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                            return false;\n                        }\n                        if (debugJavascript === true) console.log('RETURNED DATA');\n                        if (debugJavascript === true) console.log(data);\n                        if (data.error === true) {\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                            return false;\n                        } else {\n                            // Refresh tree\n                            if ($('#form-item-button-save').data('action') === 'update_item') {\n                                if ($('#form-item-folder').val() !== '' &&\n                                    originalFolderId !== $('#form-item-folder').val()\n                                ) {\n                                    refreshTree($('#form-item-folder').val(), false);\n                                }\n                                // Send query to confirm attachments\n                                var data = {\n                                    'item_id': store.get('teampassItem').id,\n                                }\n                                $.post(\n                                    \"sources/items.queries.php\", {\n                                        type: 'confirm_attachments',\n                                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                                        key: '<?php echo $_SESSION['key']; ?>'\n                                    }\n                                );\n                            } else {\n                                refreshTree($('#form-item-folder').val(), true);\n                            }\n\n                            // Refresh list of items inside the folder\n                            ListerItems($('#form-item-folder').val(), '', 0);\n\n                            // Inform user\n                            toastr.info(\n                                '<?php echo langHdl('success'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n\n                            // Close\n                            userDidAChange = false;\n                            userUploadedFile = false;\n\n                            closeItemDetailsCard();\n                            /*\n                            // Hide all\n                            $('.form-item, .form-item-action, .form-folder-action, .item-details-card, #folders-tree-card, #card-item-expired').addClass('hidden');\n\n                            // Show expected one\n                            $(store.get('teampassUser').previousView).removeClass('hidden');\n                            */\n                        }\n                    }\n                );\n            }\n        } else if (userUploadedFile === true) {\n            // Send query to confirm attachments\n            var data = {\n                'item_id': store.get('teampassItem').id,\n            }\n\n            $.post(\n                \"sources/items.queries.php\", {\n                    type: 'confirm_attachments',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                }\n            );\n\n            store.update(\n                'teampassItem',\n                function(teampassItem) {\n                    teampassItem.isNewItem = 0\n                }\n            );\n\n            // Inform user\n            toastr.info(\n                '<?php echo langHdl('done'); ?>',\n                '', {\n                    timeOut: 1000\n                }\n            );\n\n            // Close\n            userUploadedFile = false;\n            closeItemDetailsCard();\n        } else {\n            if (debugJavascript === true) console.info('NOTHING TO SAVE');\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('nothing_to_save'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n        }\n    });\n    //->\n\n\n    //autocomplete for TAGS\n    $(\"#form-item-tags\")\n        //.focus()\n        .bind(\"keydown\", function(event) {\n            if (event.keyCode === $.ui.keyCode.TAB &&\n                $(this).data(\"autocomplete\").menu.active) {\n                event.preventDefault();\n            }\n        })\n        .autocomplete({\n            source: function(request, response) {\n                $.getJSON(\"sources/items.queries.php?type=autocomplete_tags&t=1\", {\n                    term: extractLast(request.term)\n                }, response);\n            },\n            focus: function() {\n                // prevent value inserted on focus\n                return false;\n            },\n            search: function() {\n                var term = extractLast(this.value);\n            },\n            select: function(event, ui) {\n                var terms = split(this.value);\n                // remove the current input\n                terms.pop();\n                // add the selected item\n                terms.push(ui.item.value);\n                // add placeholder to get the comma-and-space at the end\n                terms.push(\"\");\n                this.value = terms.join(\" \");\n\n                return false;\n            }\n        });\n\n    // Warn in case of limited search\n    $(document).on('click', '#limited-search', function() {\n        if ($(this).is(\":checked\") === true) {\n            $('#find_items').css({\n                \"background-color\": \"#f56954\"\n            });\n        } else {\n            $('#find_items').css({\n                \"background-color\": \"#FFF\"\n            })\n        }\n    });\n\n\n    function showItemEditForm(selectedFolderId) {\n        if (debugJavascript === true) console.info('SHOW EDIT ITEM ' + selectedFolderId);\n        \n        //$.when(\n        //    getPrivilegesOnItem(selectedFolderId, 0)\n        //).then(function() {\n        // Now read\n        if (store.get('teampassItem').error === true) {\n            toastr.remove();\n            toastr.error(\n                store.get('teampassItem').message,\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n        } else {\n            $('#card-item-visibility').html(store.get('teampassItem').itemVisibility);\n            $('#card-item-minimum-complexity').html(store.get('teampassItem').itemMinimumComplexity);\n\n            // Show edition form\n            $('.form-item, #form-item-attachments-zone')\n                .removeClass('hidden');\n            $('.item-details-card, .form-item-copy, #form-item-password-options, .form-item-action, #item-details-card-categories, #folders-tree-card, .columns-position')\n                .addClass('hidden');\n\n            // Initial 'user did a change'\n            userDidAChange = false;\n\n            // Force update of simplepassmeter\n            $('#form-item-password').pwstrength(\"forceUpdate\");\n            $('#form-item-label').focus();\n\n            // Set type of action\n            $('#form-item-button-save').data('action', 'update_item');\n\n            // Does this folder contain Custom Fields\n            if (store.get('teampassItem').hasCustomCategories.length > 0) {\n                $('#form-item-field').removeClass('hidden');\n                $.each(store.get('teampassItem').hasCustomCategories, function(i, category) {\n                    $('#form-item-category-' + category).removeClass('hidden');\n                })\n            } else {\n                $('#form-item-field, .form-item-category').addClass('hidden');\n            }            \n\n            // is user allowed to edit this item - overpass readonly folder\n            if (typeof store.get('teampassApplication').itemsList !== 'undefined') {\n                var itemsList = JSON.parse(store.get('teampassApplication').itemsList);\n                userItemRight = itemsList[store.get('teampassItem').id]?.rights;\n                if (userItemRight && userItemRight > 40 && $('#form-item-folder option:selected').attr('disabled') === 'disabled') {\n                    $('#form-item-folder option:selected').removeAttr('disabled');\n                }\n            }\n\n            toastr.remove();\n            // ---\n        }\n        //});\n    }\n\n\n    /**\n     * Start items search\n     */\n    function searchItems(criteria) {\n        if (criteria !== '') {\n            // stop items loading (if on-going)\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStop = 1;\n                }\n            );\n\n            // wait\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('searching'); ?>'\n            );\n\n            // clean\n            $('#id_label, #id_desc, #id_pw, #id_login, #id_email, #id_url, #id_files, #id_restricted_to ,#id_tags, #id_kbs, .fields_div, .fields, #item_extra_info').html('');\n            $('#button_quick_login_copy, #button_quick_pw_copy').addClass('hidden');\n            $('#teampass_items_list').html('');\n\n            // Continu the list of results\n            finishingItemsFind(\n                'search_for_items',\n                $('#limited-search').is(\":checked\") === true ? store.get('teampassApplication').selectedFolder : false,\n                criteria,\n                0\n            );\n        }\n    }\n\n    /**\n     * \n     */\n    function finishingItemsFind(type, limited, criteria, start) {\n        // send query\n        $.get(\n            'sources/find.queries.php', {\n                type: type,\n                limited: limited,\n                search: criteria,\n                start: start,\n                length: 10,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                var pwd_error = '',\n                    icon_login,\n                    incon_link,\n                    icon_pwd,\n                    icon_favorite;\n\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'find.queries.php', type);\n                if (debugJavascript === true) console.log(data);\n\n                // Ensure correct div is not hidden\n                $('#info_teampass_items_list').addClass('hidden');\n                $('#table_teampass_items_list').removeClass('hidden');\n\n                // Show Items list\n                sList(data.html_json);\n\n                if (data.start !== -1 && (data.start <= data.total)) {\n                    // Continu the list of results\n                    finishingItemsFind(\n                        'search_for_items',\n                        $('#limited-search').is(\":checked\") === true ?\n                        store.get('teampassApplication').selectedFolder : false,\n                        criteria,\n                        data.start\n                    )\n                } else {\n                    toastr.remove();\n                    toastr.info(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    // Do some post treatments\n                    $('#form-folder-path').html('');\n                    $('#find_items').val('');\n\n                    // Do drag'n'drop for the folders\n                    prepareFolderDragNDrop();\n\n                    adjustElemsSize();\n                }\n            }\n        );\n    }\n\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function refreshVisibleFolders(forceRefreshCache = false) {\n        var data = {\n            'force_refresh_cache': forceRefreshCache,\n        }\n        if (debugJavascript === true) {\n            console.log('Refresh visible folders');\n            console.log(data);\n        }\n\n        $.post(\n            'sources/items.queries.php', {\n                type: 'refresh_visible_folders',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'refresh_visible_folders');\n                if (debugJavascript === true) {\n                    console.log('TREE');\n                    console.log(data);\n                }\n                //check if format error\n                if (typeof data !== 'undefined' && data.error !== true) {\n                    // Build html lists\n                    var html_visible = '',\n                        html_full_visible = '',\n                        html_active_visible = '',\n                        indentation = '',\n                        disabled = '';\n\n                    if (typeof data.html_json === 'undefined' || typeof data.html_json.folders === 'undefined') {\n                        $('#jstree').html('<div class=\"alert alert-warning mt-3 mr-1 ml-1\"><i class=\"fas fa-exclamation-triangle mr-2\"></i>' +\n                            '<?php echo langHdl('no_data_to_display'); ?>' +\n                            '</div>');\n                        //return false;\n                    } else {\n                        refreshFoldersInfo(data.html_json.folders, 'clear');\n                    }\n\n                    // Shall we show the root folder\n                    if (data.html_json.can_create_root_folder === 1) {\n                        html_visible = '<option value=\"0\"><?php echo langHdl('root'); ?></option>';\n                        html_full_visible = '<option value=\"0\"><?php echo langHdl('root'); ?></option>';\n                        html_active_visible = '<option value=\"0\"><?php echo langHdl('root'); ?></option>';\n                    } else {\n                        html_visible = '<option value=\"0\" disabled=\"disabled\"><?php echo langHdl('root'); ?></option>';\n                    }\n\n                    //\n                    $.each(data.html_json.folders, function(i, value) {\n                        // Prepare options lists\n                        html_visible += '<option value=\"' + value.id + '\"' +\n                            ((value.disabled === 1) ? ' disabled=\"disabled\"' : '') +\n                            ' data-parent-id=\"' + value.parent_id + '\">' +\n                            '&nbsp;'.repeat(value.level) +\n                            value.title + (value.path !== '' ? ' [' + value.path + ']' : '') + '</option>';\n                    });\n\n                    // Append new list\n                    $('#form-item-folder, #form-item-copy-destination, #form-folder-add-parent,' +\n                            '#form-folder-delete-selection, #form-folder-copy-source, #form-folder-copy-destination')\n                        .find('option')\n                        .remove()\n                        .end()\n                        .append(html_visible);\n                    $(\".no-root option[value='0']\").remove();\n\n                    if (debugJavascript === true) {\n                        console.info('HTML VISIBLE:')\n                        console.log(html_visible);\n                    }\n\n                    // Store in teampassUser\n                    store.update(\n                        'teampassUser',\n                        function(teampassUser) {\n                            teampassUser.folders = html_visible;\n                        }\n                    );\n\n\n                    // remove ROOT option if exists\n                    $('#form-item-copy-destination option[value=\"0\"]').remove();\n                } else {\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n            }\n        );\n    }\n\n\n    /**\n     * Get more info about folders (Categories)\n     *\n     * @return void\n     */\n    function refreshFoldersInfo(folders, action) {\n        var action = action || '',\n            sending = '';\n\n        if (null === folders) return false;\n\n        if (action === 'clear') {\n            sending = JSON.stringify(folders.map(a => parseInt(a.id)));\n        } else if (action === 'update') {\n            sending = JSON.stringify([folders]);\n        }\n\n        if (debugJavascript === true) {\n            console.info('INPUTS for refresh_folders_other_info');\n            console.log(sending);\n        }\n        \n        $.post(\n            'sources/items.queries.php', {\n                type: 'refresh_folders_other_info',\n                data: sending,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'refresh_folders_other_info');\n                if (debugJavascript === true) {\n                    console.info('RESULTS for refresh_folders_other_info');\n                    console.log(data);\n                }\n\n                //check if format error\n                if (typeof data !== 'undefined' && data.error !== true) {\n                    // Store in session\n                    if (action === 'clear') {\n                        // Handle the data\n                        $.each(folders, function(index, item) {\n                            if (typeof data.result !== 'undefined' && typeof data.result[item.id] !== 'undefined') {\n                                folders[index]['categories'] = data.result[item.id].categories;\n                                folders[index]['complexity'] = data.result[item.id].complexity;\n                                folders[index]['visibilityRoles'] = data.result[item.id].visibilityRoles;\n                            }\n                        });\n                        // Stare the data\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.foldersList = folders;\n                            }\n                        );\n                    } else if (action === 'update') {\n                        // Store the data\n                        var currentFoldersList = store.get('teampassApplication').foldersList;\n                        $.each(currentFoldersList, function(index, item) {\n                            if (item.id === parseInt(folders) && typeof data.result[folders] !== 'undefined') {\n                                currentFoldersList[index].categories = data.result[folders].categories;\n                                currentFoldersList[index].complexity = data.result[folders].complexity;\n                                currentFoldersList[index].visibilityRoles = data.result[folders].visibilityRoles;\n\n                                store.update(\n                                    'teampassApplication',\n                                    function(teampassApplication) {\n                                        foldersList = currentFoldersList;\n                                    }\n                                );\n                                return true;\n                            }\n                        });\n\n                    }\n                } else {\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n                toastr.remove();\n            }\n        );\n    }\n\n\n    /*\n     * builds the folders tree\n     */\n    function refreshTree(node_to_select, do_refresh, refresh_visible_folders) {\n        do_refresh = do_refresh || ''\n        node_to_select = node_to_select || '';\n        refresh_visible_folders = refresh_visible_folders || true;\n\n        if (refresh_visible_folders !== true) {\n            $('#jstree').jstree('deselect_all');\n            $('#jstree').jstree('select_node', '#li_' + groupe_id);\n            return false;\n        }\n\n        if (do_refresh === true || store.get('teampassApplication').jstreeForceRefresh === 1) {\n            $('#jstree').jstree(true).refresh();\n        }\n\n        if (node_to_select !== '') {\n            $('#jstree').jstree('deselect_all');\n\n            $('#jstree')\n                .one('refresh.jstree', function(e, data) {\n                    data.instance.select_node('#li_' + node_to_select);\n                });\n        }\n\n        $(this).delay(500).queue(function() {\n            refreshVisibleFolders(true);\n            $(this).dequeue();\n        });\n    }\n\n    /**\n     * \n     */\n    function ListerItems(groupe_id, restricted, start, stop_listing_current_folder) {\n        var me = $(this);\n        stop_listing_current_folder = stop_listing_current_folder || '0';\n        if (debugJavascript === true) console.log('LIST OF ITEMS FOR FOLDER ' + groupe_id)\n        // Exit if no folder is selected\n        if (groupe_id === undefined) return false;\n\n        // case where we should stop listing the items\n        if (store.get('teampassApplication') !== undefined && store.get('teampassApplication').itemsListStop === 1) {\n            //requestRunning = false;\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStop = 0;\n                }\n            );\n        }\n\n        //Evaluate number of items to display - depends on screen height\n        //adapt to the screen height\n        store.update(\n            'teampassApplication',\n            function(teampassApplication) {\n                teampassApplication.itemsShownByQuery = Math.max(Math.round((screenHeight - 450) / 23), 2);\n            }\n        );\n\n        if (stop_listing_current_folder === 1) {\n            me.data('requestRunning', false);\n            // Store listing criteria\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListFolderId = parseInt(groupe_id),\n                        teampassApplication.itemsListRestricted = restricted,\n                        teampassApplication.itemsListStart = start,\n                        teampassApplication.itemsListStop = 0\n                }\n            );\n        } else {\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStop = 0\n                }\n            );\n        }\n\n\n        // prevent launch of similar query in case of doubleclick\n        if (requestRunning === true) {\n            return false;\n        }\n        requestRunning = true;\n\n        // Hide any info\n        $('#info_teampass_items_list').addClass('hidden');\n\n        if (groupe_id !== undefined || groupe_id !== '') {\n            //refreshTree(groupe_id);\n            if (query_in_progress != 0 && query_in_progress != groupe_id && request !== undefined) {\n                request.abort(); //kill previous query if needed\n            }\n            query_in_progress = groupe_id;\n            if (start == 0) {\n                //clean form\n                $('#teampass_items_list, #items_folder_path').html('');\n            }\n\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.selectedFolder = parseInt(groupe_id),\n                    teampassApplication.itemsList = ''\n                }\n            );\n\n            if ($('.tr_fields') !== undefined) {\n                $('.tr_fields, .newItemCat, .editItemCat').addClass('hidden');\n            }\n\n            // Inform user\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('opening_folder'); ?><i class=\"fas fa-circle-notch fa-spin ml-2\"></i>'\n            );\n\n            // clear storage \n            store.update(\n                'teampassUser',\n                function(teampassUser) {\n                    teampassUser.itemsList = '';\n                }\n            );\n\n            // Prepare data to be sent\n            var dataArray = {\n                id: store.get('teampassApplication').selectedFolder,\n                restricted: restricted === \"\" ? \"\" : restricted,\n                start: start !== undefined ? start : 0,\n                uniqueLoadData: store.get('teampassApplication').queryUniqueLoad !== undefined ? store.get('teampassApplication').queryUniqueLoad : \"\",\n                nb_items_to_display_once: store.get('teampassApplication').itemsShownByQuery,\n            };\n\n            if (debugJavascript === true) {\n                console.log('Do list of items in folder with next parameters:');\n                console.log(JSON.stringify(dataArray));\n            }\n            \n            //ajax query\n            var request = $.post('sources/items.queries.php', {\n                    type: 'do_items_list_in_folder',\n                    data: prepareExchangedData(JSON.stringify(dataArray), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>',\n                },\n                function(retData) {\n                    //get data\n                    data = decodeQueryReturn(retData, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'do_items_list_in_folder');\n\n                    if (debugJavascript === true) {\n                        console.log('LIST ITEMS');\n                        console.log(data);\n                    }\n\n                    // reset doubleclick prevention\n                    requestRunning = false;\n\n                    // manage not allowed\n                    if (data.error === true) {\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                        return false;\n                    }\n\n                    // Hide New button if restricted folder\n                    if (data.access_level === 10) {\n                        $('#btn-new-item').addClass('hidden');\n                    } else {\n                        $('#btn-new-item').removeClass('hidden');\n                    }\n\n                    // to be done only in 1st list load\n                    if (data.list_to_be_continued === 'end') {\n                        var initialQueryData = $.parseJSON(data.uniqueLoadData);\n\n                        // Update hidden variables\n                        store.update(\n                            'teampassItem',\n                            function(teampassItem) {\n                                teampassItem.IsPersonalFolder = parseInt(data.IsPersonalFolder),\n                                    teampassItem.hasAccessLevel = parseInt(data.access_level),\n                                    teampassItem.folderComplexity = parseInt(data.folder_complexity),\n                                    teampassItem.hasCustomCategories = data.categoriesStructure\n                            }\n                        );\n                        \n\n                        // display path of folders\n                        if ((initialQueryData.path.length > 0)) {\n                            $('#form-folder-path')\n                                .html('')\n                                .append(rebuildPath(initialQueryData.path));\n                        } else {\n                            $('#form-folder-path').html('');\n                        }\n\n                        /*\n                        // PSK is requested but not set\n                        if (data.folder_requests_psk === 1\n                            && (store.get('teampassUser').pskSetForSession === ''\n                            || store.get('teampassUser').pskSetForSession === undefined)\n                        ) {\n                            showPersonalSKDialog();\n                        }\n                        */\n\n                        // show correct fodler in Tree\n                        if ($('#jstree').jstree('get_selected', true)[0] !== undefined &&\n                            'li_' + groupe_id !== $('#jstree').jstree('get_selected', true)[0].id\n                        ) {\n                            $('#jstree').jstree('deselect_all');\n                            $('#jstree').jstree('select_node', '#li_' + groupe_id);\n                        }\n\n                        // Delete existing clipboard\n                        if (clipboardForPassword) {\n                            clipboardForPassword.destroy();\n                        }\n                        if (clipboardForLogin) {\n                            clipboardForLogin.destroy();\n                        }\n\n                        // Prepare clipboard items\n                        clipboardForLogin = new ClipboardJS('.fa-clickable-login');\n                        clipboardForLogin.on('success', function(e) {\n                            toastr.info(\n                                '<?php echo langHdl('copy_to_clipboard'); ?>',\n                                '', {\n                                    timeOut: 2000,\n                                    positionClass: 'toast-top-right',\n                                    progressBar: true\n                                }\n                            );\n                            e.clearSelection();\n                        });\n\n                        // Prepare clipboard for PAssword\n                        // This will request a query to server to get the pwd\n                        clipboardForPassword = new ClipboardJS('.fa-clickable-password', {\n                            text: function(trigger) {\n                                // Send query and get password\n                                var result = '',\n                                    error = false;\n\n                                // Warn user that it starts\n                                toastr.remove();\n                                toastr.info(\n                                    '<i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>'\n                                );\n\n                                $.ajax({\n                                    type: \"POST\",\n                                    async: false,\n                                    url: 'sources/items.queries.php',\n                                    data: 'type=show_item_password&item_id=' + trigger.getAttribute('data-item-id') +\n                                        '&key=<?php echo $_SESSION['key']; ?>',\n                                    dataType: \"\",\n                                    success: function(data) {\n                                        //decrypt data\n                                        try {\n                                            data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                                        } catch (e) {\n                                            // error\n                                            toastr.remove();\n                                            toastr.warning(\n                                                '<?php echo langHdl('no_item_to_display'); ?>'\n                                            );\n                                            return false;\n                                        }\n                                        if (data.error === true) {\n                                            error = true;\n                                        } else {\n                                            if (data.password_error !== '') {\n                                                error = true;\n                                            } else {\n                                                result = atob(data.password).utf8Decode();\n                                            }\n                                        }\n\n                                        // Remove cog\n                                        toastr.remove();\n                                    }\n                                });\n                                return result;\n                            }\n                        });\n                        clipboardForPassword.on('success', function(e) {\n                            itemLog(\n                                'at_password_copied',\n                                e.trigger.dataset.itemId,\n                                e.trigger.dataset.itemLabel\n                            );\n                            \n                            // Warn user about clipboard clear\n                            if (store.get('teampassSettings').clipboard_life_duration === undefined || parseInt(store.get('teampassSettings').clipboard_life_duration) === 0) {\n                                toastr.remove();\n                                toastr.info(\n                                    '<?php echo langHdl('copy_to_clipboard'); ?>',\n                                    '', {\n                                        timeOut: 2000,\n                                        positionClass: 'toast-top-right',\n                                        progressBar: true\n                                    }\n                                );\n                            } else {\n                                toastr.remove();\n                                toastr.warning(\n                                    '<?php echo langHdl('clipboard_will_be_cleared'); ?>',\n                                    '', {\n                                        timeOut: store.get('teampassSettings').clipboard_life_duration * 1000,\n                                        progressBar: true\n                                    }\n                                );\n\n                                // Set clipboard eraser\n                                clearClipboardTimeout(\n                                    store.get('teampassSettings').clipboard_life_duration\n                                );\n                            }\n\n                            e.clearSelection();\n                        });\n                    } else if (data.error === 'not_authorized') {\n                        $('#items_folder_path').html('<i class=\"fas fa-folder-open-o\"></i>&nbsp;' + rebuildPath(data.arborescence));\n                    } else {\n                        // Store query results\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.queryUniqueLoad = data.uniqueLoadData;\n                            }\n                        );\n                        if ($('#items_loading_progress').length == 0) {\n                            $('#items_list_loader').after('<span id=\"items_loading_progress\">' + Math.round(data.next_start * 100 / data.counter_full, 0) + '%</span>');\n                        } else {\n                            $('#items_loading_progress').html(Math.round(data.next_start * 100 / data.counter_full, 0) + '%');\n                        }\n                    }\n                    //-----\n                    if (data.array_items !== undefined &&\n                        data.array_items.length === 0 &&\n                        $('#teampass_items_list').html() === ''\n                    ) {\n                        // Show warning to user\n                        $('#info_teampass_items_list')\n                            .html('<div class=\"alert alert-info text-center col col-10\" role=\"alert\">' +\n                                '<i class=\"fas fa-info-circle mr-2\"></i><?php echo langHdl('no_item_to_display'); ?></b>' +\n                                '</div>')\n                            .removeClass('hidden');\n                    }\n\n                    if (data.error === 'is_pf_but_no_saltkey') {\n                        //warn user about his saltkey\n                        toastr.remove();\n                        toastr.warning(\n                            '<?php echo langHdl('home_personal_saltkey_label'); ?>',\n                            '', {\n                                timeOut: 10000\n                            }\n                        );\n                        return false;\n                    } else if (data.error === 'not_authorized' || data.access_level === '') {\n                        // Show warning to user\n                        $('#info_teampass_items_list')\n                            .html('<div class=\"alert alert-info text-center col col-lg-10\" role=\"alert\">' +\n                                '<i class=\"fas fa-warning mr-2\"></i><?php echo langHdl('not_allowed_to_see_pw'); ?></b>' +\n                                '</div>')\n                            .removeClass('hidden');\n\n                    } else if ((store.get('teampassApplication').userIsReadOnly === 1) //&& data.folder_requests_psk == 0\n                        ||\n                        data.access_level === 10\n                    ) {\n                        //readonly user\n                        $('#item_details_no_personal_saltkey, #item_details_nok').addClass('hidden');\n                        $('#item_details_ok, #items_list').removeClass('hidden');\n                        //$('#more_items').remove();\n\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.bypassComplexityOnCreation = parseInt(data.bloquer_creation_complexite);\n                                teampassApplication.bypassComplexityOnEdition = parseInt(data.bloquer_modification_complexite);\n                                //teampassApplication.personalSaltkeyRequired = parseInt(data.saltkey_is_required);\n                            }\n                        );\n\n                        // show items\n                        sList(data.html_json);\n\n                        if (data.list_to_be_continued === 'yes') {\n                            //set next start for query\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.itemsListStart = parseInt(data.next_start);\n                                }\n                            );\n                        } else {\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.itemsListStart = data.list_to_be_continued;\n                                }\n                            );\n                            $('.card-item-category').addClass('hidden');\n                        }\n\n                        proceed_list_update(stop_listing_current_folder);\n                    } else {\n                        //Display items\n                        $('#item_details_no_personal_saltkey, #item_details_nok').addClass('hidden');\n                        $('#item_details_ok, #items_list').removeClass('hidden');\n\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.bypassComplexityOnCreation = parseInt(data.bloquer_creation_complexite);\n                                teampassApplication.bypassComplexityOnEdition = parseInt(data.bloquer_modification_complexite);\n                                //teampassApplication.personalSaltkeyRequired = parseInt(data.saltkey_is_required);\n                            }\n                        );\n\n                        // show items\n                        sList(data.html_json);\n\n                        // Prepare next iteration if needed\n                        if (data.list_to_be_continued === 'yes') {\n                            //set next start for query\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.itemsListStart = parseInt(data.next_start);\n                                }\n                            );\n                        } else {\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.itemsListStart = data.list_to_be_continued;\n                                }\n                            );\n                            $('.card-item-category').addClass('hidden');\n\n                            if (debugJavascript === true) {\n                                console.log('Liste complete des items')\n                                console.log(JSON.parse(store.get('teampassApplication').itemsList));\n                            }\n                        }\n\n                        proceed_list_update(stop_listing_current_folder);\n                    }\n                }\n            );\n        }\n    }\n\n    function sList(listOfItems) {\n        if (debugJavascript === true) {\n            console.log(listOfItems);\n        }\n        var counter = 0,\n            prevIdForNextItem = -1;\n\n        // Manage store\n        if (store.get('teampassApplication').itemsList === '' || store.get('teampassApplication').itemsList === undefined) {\n            var stored_datas = listOfItems;\n        } else {\n            var stored_datas = String(JSON.parse(store.get('teampassApplication').itemsList)).concat(listOfItems);\n        }\n        store.update(\n            'teampassApplication',\n            function(teampassApplication) {\n                teampassApplication.itemsList = JSON.stringify(stored_datas);\n            }\n        );\n        \n        $.each(listOfItems, function(i, value) {\n            var new_line = '',\n                pwd_error = '',\n                icon_all_can_modify = '',\n                icon_cannot_see = '',\n                icon_login = '',\n                icon_link = '',\n                icon_pwd = '',\n                icon_favorite = '',\n                item_flag = '',\n                item_grippy = '',\n                visible_by_user = '';\n\n            counter += 1;\n\n            // ENsure numbers are ints\n            value.anyone_can_modify = parseInt(value.anyone_can_modify);\n            value.canMove = parseInt(value.canMove);\n            value.expired = parseInt(value.expired);\n            value.is_favorite = parseInt(value.is_favorite);\n            value.is_result_of_search = parseInt(value.is_result_of_search);\n            value.item_id = parseInt(value.item_id);\n            value.open_edit = parseInt(value.open_edit);\n            value.rights = parseInt(value.rights);\n            value.tree_id = parseInt(value.tree_id);\n            value.display = parseInt(value.display);\n            value.display_item = parseInt(value.display_item);\n            value.enable_favourites = parseInt(value.enable_favourites);\n\n            // Check access restriction\n            if (value.rights > 0) {\n                // Should I populate previous item with this new id\n                if (debugJavascript === true) {\n                    console.log('current id: '+value.item_id);\n                    console.log(prevIdForNextItem);\n                }\n                if (prevIdForNextItem !== -1) {\n                    $('#list-item-row_' + value.item_id).attr('data-next-item-id', prevIdForNextItem.item_id);\n                    $('#list-item-row_' + value.item_id).attr('data-next-item-label', value.label);\n                }\n                \n                // Prepare anyone can modify icon\n                if (value.anyone_can_modify === 1 || value.open_edit === 1) {\n                    icon_all_can_modify = '<span class=\"fa-stack fa-clickable pointer infotip list-item-clicktoedit mr-2\" title=\"<?php echo langHdl('edit'); ?>\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-pen fa-stack-1x fa-inverse\"></i></span>';\n                }\n\n                // Prepare mini icons\n                if (store.get('teampassSettings') !== undefined && parseInt(store.get('teampassSettings').copy_to_clipboard_small_icons) === 1 &&\n                    value.rights > 10\n                ) {\n                    // Login icon\n                    if (value.login !== '') {\n                        icon_login = '<span class=\"fa-stack fa-clickable fa-clickable-login pointer infotip mr-2\" title=\"<?php echo langHdl('item_menu_copy_login'); ?>\" data-clipboard-text=\"' + sanitizeString(value.login) + '\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-user fa-stack-1x fa-inverse\"></i></span>';\n                    }\n                    // Pwd icon\n                    if (value.pw_status !== 'pw_is_empty' && value.pw_status !== 'encryption_error') {\n                        icon_pwd = '<span class=\"fa-stack fa-clickable fa-clickable-password pointer infotip mr-2\" title=\"<?php echo langHdl('item_menu_copy_pw'); ?>\" data-item-id=\"' + value.item_id + '\" data-item-label=\"' + value.label + '\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-key fa-stack-1x fa-inverse\"></i></span>';\n                    }\n\n                    // Now check if pwd is empty. If it is then warn user\n                    if (value.pw_status === 'pw_is_empty') {\n                        pwd_error = '<span class=\"fa-stack fa-clickable fa-clickable-password pointer infotip mr-2\" title=\"<?php echo langHdl('password_is_empty'); ?>\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-exclamation-triangle text-warning fa-stack-1x fa-inverse\"></i></span>';\n                    }\n                }\n\n                // Link icon\n                if (value.link !== '') {\n                    icon_link = '<span class=\"fa-stack fa-clickable pointer infotip mr-2\" title=\"<?php echo langHdl('open_website'); ?>\"><a href=\"' + sanitizeString(value.link) + '\" target=\"_blank\" class=\"no-link\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-link fa-stack-1x fa-inverse\"></i></a></span>';\n                }\n\n                // Prepare Favorite icon\n                if (store.get('teampassSettings') !== undefined && parseInt(store.get('teampassSettings').enable_favourites) === 1 &&\n                    value.rights > 10\n                ) {\n                    if (value.is_favourited === 1) {\n                        icon_favorite = '<span class=\"fa-stack fa-clickable item-favourite pointer infotip mr-2\" title=\"<?php echo langHdl('unfavorite'); ?>\" data-item-id=\"' + value.item_id + '\" data-item-favourited=\"1\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-star fa-stack-1x fa-inverse text-warning\"></i></span>';\n                    } else {\n                        icon_favorite = '<span class=\"fa-stack fa-clickable item-favourite pointer infotip mr-2\" title=\"<?php echo langHdl('favorite'); ?>\" data-item-id=\"' + value.item_id + '\" data-item-favourited=\"0\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"far fa-star fa-stack-1x fa-inverse\"></i></span>';\n                    }\n                }\n\n                // Prepare Description\n                if (value.desc !== '') {\n                    value.desc = ' <span class=\"text-secondary small\">- ' + value.desc + '</span>';\n                }\n\n                $('#teampass_items_list').append(\n                    '<tr class=\"list-item-row' + (value.canMove === 1 ? ' is-draggable' : '') + '\" id=\"list-item-row_' + value.item_id + '\" data-item-edition=\"' + value.open_edit + '\" data-item-id=\"' + value.item_id + '\" data-item-sk=\"' + value.sk + '\" data-item-expired=\"' + value.expired + '\" data-item-rights=\"' + value.rights + '\" data-item-display=\"' + value.display + '\" data-item-open-edit=\"' + value.open_edit + '\" data-item-tree-id=\"' + value.tree_id + '\" data-is-search-result=\"' + value.is_result_of_search + '\" data-label=\"' + escape(value.label) + '\">' +\n                    '<td class=\"list-item-description\" style=\"width: 100%;\">' +\n                    // Show user a grippy bar to move item\n                    (value.canMove === 1  ? '<i class=\"fas fa-ellipsis-v mr-2 dragndrop\"></i>' : '') + //&& value.is_result_of_search === 0\n                    // Show user a ban icon if expired\n                    (value.expired === 1 ? '<i class=\"far fa-calendar-times mr-2 text-warning infotip\" title=\"<?php echo langHdl('not_allowed_to_see_pw_is_expired'); ?>\"></i>' : '') +\n                    // Show user that Item is not accessible\n                    (value.rights === 10 ? '<i class=\"far fa-eye-slash fa-xs mr-2 text-primary infotip\" title=\"<?php echo langHdl('item_with_restricted_access'); ?>\"></i>' : '') +\n                    // Show user that password is badly encrypted\n                    (value.pw_status === 'encryption_error' ? '<i class=\"fas fa-exclamation-triangle fa-xs text-danger infotip mr-1\" title=\"<?php echo langHdl('pw_encryption_error'); ?>\"></i>' : '') +\n                    // Show item fa_icon if set\n                    (value.fa_icon !== '' ? '<i class=\"'+value.fa_icon+' mr-1\"></i>' : '') +\n                    // Prepare item info\n                    '<span class=\"list-item-clicktoshow' + (value.rights === 10 ? '' : ' pointer') + '\" data-item-id=\"' + value.item_id + '\">' +\n                    '<span class=\"list-item-row-description' + (value.rights === 10 ? ' font-weight-light' : '') + '\">' + value.label + '</span>' + (value.rights === 10 ? '' : value.desc) + '</span>' +\n                    '<span class=\"list-item-actions hidden\">' +\n                    (value.rights === 10 ?\n                        '<span class=\"fa-stack fa-clickable fa-clickable-access-request pointer infotip mr-2\" title=\"<?php echo langHdl('need_access'); ?>\"><i class=\"fas fa-circle fa-stack-2x text-danger\"></i><i class=\"far fa-handshake fa-stack-1x fa-inverse\"></i></span>' :\n                        pwd_error + icon_all_can_modify + icon_login + icon_pwd + icon_link + icon_favorite) +\n                    '</span>' +\n                    (value.folder !== undefined ?\n                        '<br><span class=\"text-secondary small font-italic pointer open-folder\" data-tree-id=\"' +\n                        value.tree_id + '\"\">[' + value.folder + ']</span>' : '') +\n                    '</td>' +\n                    '</tr>'\n                );\n\n                // Save id for usage\n                prevIdForNextItem = {\n                    'item_id' : value.item_id,\n                    'label': value.label,\n                };\n\n                //---------------------\n            }\n        });\n\n        // Sort entries\n        var $tbody = $('#teampass_items_list');\n        $tbody.find('tr').sort(function(a, b) {\n            var tda = $(a).find('.list-item-row-description').text();\n            var tdb = $(b).find('.list-item-row-description').text();\n            // if a < b return 1\n            return tda > tdb ? 1 :\n                tda < tdb ? -1 :\n                0;\n        }).appendTo($tbody);\n\n        // Trick for list with only one entry\n        if (counter === 1) {\n            $('#teampass_items_list')\n                .append('<tr class=\"row\"><td class=\"\">&nbsp;</td></tr>');\n        }\n        adjustElemsSize();\n\n        // Show tooltips\n        $('.infotip').tooltip();\n    }\n\n    $(document).on('click', '.open-folder', function() {\n        if ($(this).data('tree-id') !== undefined) {\n            if (debugJavascript === true) console.log($(this).data('tree-id'))\n\n            // Prepare\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListFolderId = parseInt($(this).data('tree-id'));\n                }\n            );\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.selectedFolder = parseInt($(this).data('tree-id'));\n                }\n            );\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStart = 0;\n                }\n            );\n\n            // Show\n            ListerItems(\n                $(this).data('tree-id'),\n                '',\n                0\n            );\n\n            $('#jstree').jstree('deselect_all');\n            $('#jstree').jstree('select_node', '#li_' + $(this).data('tree-id'));\n        }\n    });\n\n\n    function adjustElemsSize() {\n        // Adjust height of folders tree\n        if ($('#teampass_items_list').height() > (screenHeight - 215)) {\n            $('#jstree').height($('#teampass_items_list').height() + 75);\n        } else {\n            $('#jstree').height($(window).height() - 215);\n        }\n    }\n\n    /**\n     * Builds the HTML path\n     * @param  {[type]} data [description]\n     * @return {[type]}      [description]\n     */\n    function rebuildPath(data) {\n        var new_path = new_path_elem = '';\n        $.each((data), function(i, value) {\n            new_path_elem = '';\n            if (value['visible'] === 1) {\n                new_path_elem = ' class=\"pointer\" onclick=\"ListerItems(' + value['id'] + ', \\'\\', 0)\"';\n            }\n\n            new_path += '<li class=\"breadcrumb-item\" id=\"path_elem_' + value['id'] + '\"' + new_path_elem + '>' + value['title'] + '</li>';\n        });\n\n        return new_path;\n    }\n\n    /**\n\n     */\n    function proceed_list_update(stop_proceeding) {\n        stop_proceeding = stop_proceeding || '';\n\n        if (stop_proceeding === '1' ||\n            (store.get('teampassApplication').itemsListFolderId !== '' &&\n                store.get('teampassApplication').itemsListStart !== 'end')\n        ) {\n            // Clear storage\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStop = 0;\n                }\n            );\n            // Perform listing\n            ListerItems(\n                store.get('teampassApplication').itemsListFolderId,\n                store.get('teampassApplication').itemsListRestricted,\n                store.get('teampassApplication').itemsListStart,\n                store.get('teampassApplication').itemsListStop\n            );\n            return false;\n        }\n\n        if (store.get('teampassApplication').itemsListStart !== 'end') {\n            //Check if nb of items do display > to 0\n            if (store.get('teampassApplication').itemsShownByQuery > 0) {\n                ListerItems(\n                    store.get('teampassApplication').selectedFolder,\n                    '',\n                    store.get('teampassApplication').itemsListStart\n                );\n            }\n        } else {\n            // Show tooltips\n            $('.infotip').tooltip();\n\n            // Update silently the info about the folder\n            refreshFoldersInfo(\n                store.get('teampassApplication').selectedFolder,\n                'update'\n            );\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('data_refreshed'); ?>',\n                '', {\n                    timeOut: 1000\n                }\n            );\n\n            // Do drag'n'drop for the folders\n            prepareFolderDragNDrop();\n        }\n    }\n\n\n    function checkAccess(itemId, treeId, userId)\n    {\n        var data = {\n            'itemId': parseInt(itemId),\n            'treeId': parseInt(treeId),\n            'userId': parseInt(userId),\n        };\n\n        //Send query\n        $.post(\n            'sources/items.queries.php', {\n                type: 'check_current_access_rights',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'show_details_item');\n                requestRunning = true;\n                if (debugJavascript === true) {\n                    console.log(\"DEBUG: checkAccess\");\n                    console.log(data);\n                }\n\n\n                return false;\n            }\n        );\n    }\n\n\n    /**\n     *\n     */\n    function Details(itemDefinition, actionType, hotlink = false) {\n        if (debugJavascript === true) console.info('EXPECTED ACTION on ' + itemDefinition + ' is ' + actionType + ' -- ')\n\n        // Init\n        if (hotlink === false) {\n            var itemId = parseInt($(itemDefinition).data('item-id')) || '';\n            var itemTreeId = parseInt($(itemDefinition).data('item-tree-id')) || '';\n            var itemSk = parseInt($(itemDefinition).data('item-sk')) || 0;\n            var itemExpired = parseInt($(itemDefinition).data('item-expired')) || '';\n            var itemRestricted = parseInt($(itemDefinition).data('item-restricted-id')) || '';\n            var itemDisplay = parseInt($(itemDefinition).data('item-display')) || 0;\n            var itemOpenEdit = parseInt($(itemDefinition).data('item-open-edit')) || 0;\n            var itemReload = parseInt($(itemDefinition).data('item-reload')) || 0;\n            var itemRights = parseInt($(itemDefinition).data('item-rights')) || 10;\n        } else {\n            var itemId = itemDefinition || '';\n            var itemTreeId = store.get('teampassApplication').selectedFolder || '';\n            var itemSk = 0;\n            var itemExpired = '';\n            var itemRestricted = '';\n            var itemDisplay = 1;\n            var itemOpenEdit = 0;\n            var itemReload = 0;\n            var itemRights = parseInt($(itemDefinition).data('item-rights')) || 10;\n        }\n\n        // check if user still has access\n        if (checkAccess(itemId, itemTreeId, <?php echo $_SESSION['user_id']; ?>) === false) {\n            toastr.remove();\n            toastr.warning(\n                '<?php echo langHdl('no_item_to_display'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            // Finished\n            return false;\n        }\n\n        // Store current view\n        savePreviousView();\n        \n        if (debugJavascript === true) console.log(\"Request is running: \" + requestRunning)\n\n        // Store status query running\n        requestRunning = true;\n        userDidAChange = false;\n\n        // Select tab#1\n        $('#form-item-nav-pills li:first-child a').tab('show');\n\n        // Don't show details\n        if (itemDisplay === 'no_display') {\n            // Inform user\n            toastr.remove();\n            toastr.warning(\n                '<?php echo langHdl('no_item_to_display'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            // Clear ongoing request status\n            requestRunning = false;\n\n            // Finished\n            return false;\n        }\n\n        // If opening new item, reinit hidden fields\n        if (store.get('teampassApplication').lastItemSeen !== itemId) {\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.lastItemSeen = parseInt(itemId);\n                }\n            );\n            if (debugJavascript === true) console.log(\"Last seen item \" + store.get('teampassApplication').lastItemSeen)\n        }\n\n        // Prepare data to be sent\n        var data = {\n            'id': parseInt(itemId),\n            'folder_id': parseInt(itemTreeId),\n            'salt_key_required': itemSk,\n            'expired_item': itemExpired,\n            'restricted': itemRestricted,\n            'folder_access_level': store.get('teampassItem').hasAccessLevel,\n            'page': 'items',\n            'rights': itemRights,\n        };\n\n        if (debugJavascript === true) console.log(\"SEND\");\n        if (debugJavascript === true) console.log(data);\n\n        //Send query\n        $.post(\n            'sources/items.queries.php', {\n                type: 'show_details_item',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'show_details_item');\n                requestRunning = true;\n                if (debugJavascript === true) {\n                    console.log(\"RECEIVED object details\");\n                    console.log(data);\n                }\n\n                // Store not a new item\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.isNewItem = 0\n                    }\n                );\n\n                // remove any track-change class on item form\n                //$('.form-item-control').removeClass('track-change');\n\n                if (data.error === true) {\n                    toastr.remove();\n                    requestRunning = false;\n\n                    // Manage personal items key error\n                    if (data.error_type !== 'undefined' && data.error_type === 'private_items_to_encrypt') {\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n\n                        store.update(\n                            'teampassUser', {},\n                            function(teampassUser) {\n                                teampassUser.special = 'private_items_to_encrypt';\n                            }\n                        );\n                        document.location.href = \"index.php?page=items\";\n                    } else if (data.error_type !== 'undefined' && data.error_type === 'user_should_reencrypt_private_key' && store.get('teampassUser').temporary_code === '') {\n                        // we have to ask the user to re-encrypt his privatekey\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 10000,\n                                progressBar: true\n                            }\n                        );\n                        \n                        if (debugJavascript === true) console.log('LDAP user password has to encrypt his private key with hos new LDAP password')\n                        // HIde\n                        $('.content-header, .content').addClass('hidden');\n\n                        // Show passwords inputs and form\n                        $('#dialog-ldap-user-change-password-info')\n                            .html('<i class=\"icon fas fa-info mr-2\"></i><?php echo langHdl('ldap_user_has_changed_his_password');?>')\n                            .removeClass('hidden');\n                        $('#dialog-ldap-user-change-password').removeClass('hidden');\n                    }\n\n\n                    return false;\n                } else if ((data.user_can_modify === 0 && actionType === 'edit') ||\n                    parseInt(data.show_details) === 0\n                ) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('error_not_allowed_to'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    requestRunning = false;\n                    return false;\n                }\n\n\n                // Store scroll position\n                userScrollPosition = $(window).scrollTop();\n\n                // Scroll to top\n                $(window).scrollTop(0);\n\n                // SHould we show?\n                if (parseInt(data.show_detail_option) === 1 || itemExpired === 1) {\n                    // SHow expiration alert\n                    $('#card-item-expired').removeClass('hidden');\n                } else if (parseInt(data.show_detail_option) === 2) {\n                    // Don't show anything\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('not_allowed_to_see_pw'); ?>',\n                        '<?php echo langHdl('warning'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    return false;\n                }\n\n                // Show header info\n                $('#card-item-visibility').html(store.get('teampassItem').itemVisibility);\n                $('#card-item-minimum-complexity').html(store.get('teampassItem').itemMinimumComplexity);\n\n                // Hide NEW button in case access_level < 30\n                if (store.get('teampassItem').hasAccessLevel === 10) {\n                    $('#item-form-new-button').addClass('hidden');\n                } else {\n                    $('#item-form-new-button').removeClass('hidden');\n                }\n\n                // Uncrypt the pwd\n                if (data.pw !== undefined) {\n                    data.pw = atob(data.pw).utf8Decode();\n                }\n\n                // Update hidden variables\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.id = parseInt(data.id),\n                            teampassItem.timestamp = data.timestamp,\n                            teampassItem.user_can_modify = data.user_can_modify,\n                            teampassItem.anyone_can_modify = data.anyone_can_modify,\n                            teampassItem.edit_item_salt_key = data.edit_item_salt_key,\n                            teampassItem.id_restricted_to = data.id_restricted_to,\n                            teampassItem.id_restricted_to_roles = data.id_restricted_to_roles,\n                            teampassItem.item_rights = itemRights\n                    }\n                );\n\n                // Prepare forms\n                $('#folders-tree-card, .columns-position').addClass('hidden');\n                if (actionType === 'show') {\n                    // Prepare Views\n                    $('.item-details-card, #item-details-card-categories').removeClass('hidden');\n                    $('.form-item').addClass('hidden');\n\n                    $('#form-item-suggestion-password').focus();\n                    // If Description empty then remove it\n                    if (data.description === '<p>&nbsp;</p>') {\n                        $('#card-item-description')\n                            .parents('.item-details-card')\n                            .addClass('hidden');\n                    } else {\n                        $('#card-item-description')\n                            .parents('.item-details-card')\n                            .removeClass('hidden');\n                    }\n                } else {\n                    $('.form-item').removeClass('hidden');\n                    $('.item-details-card, #item-details-card-categories').addClass('hidden');\n                }\n                $('#pwd-definition-size').val(data.pw.length);\n\n                // Prepare card\n                const itemIcon = (data.fa_icon !== \"\") ? '<i class=\"'+data.fa_icon+' mr-1\"></i>' : '';\n                $('#card-item-label, #form-item-title').html(itemIcon + data.label);\n                $('#form-item-label, #form-item-suggestion-label').val(data.label);\n                $('#card-item-description, #form-item-suggestion-description').html(data.description);\n                if (data.description === '') {\n                    $('#card-item-description').addClass('hidden');\n                } else {\n                    $('#card-item-description').removeClass('hidden');\n                }\n                $('#card-item-pwd').html('<?php echo $var['hidden_asterisk']; ?>');\n                $('#hidden-item-pwd, #form-item-suggestion-password').val(data.pw);\n                $('#form-item-password, #form-item-password-confirmation, #form-item-server-old-password').val(data.pw);\n                $('#card-item-login').html(data.login);\n                $('#form-item-login, #form-item-suggestion-login, #form-item-server-login').val(data.login);\n\n                $('#card-item-email').text(data.email);\n                $('#form-item-email, #form-item-suggestion-email').val(data.email);\n                $('#card-item-url').html(data.url);\n                $('#form-item-url, #form-item-suggestion-url').val($(data.url).text());\n                $('#form-item-restrictedToUsers').val(JSON.stringify(data.id_restricted_to));\n                $('#form-item-restrictedToRoles').val(JSON.stringify(data.id_restricted_to_roles));\n                $('#form-item-folder').val(data.folder);\n                $('#form-item-tags').val(data.tags.join(' '));\n                $('#form-item-icon').val(data.fa_icon);\n                $('#form-item-icon-show').html(itemIcon);\n\n                $('#form-item-password').pwstrength(\"forceUpdate\");\n                $('#form-item-label').focus();\n\n                // Editor for description field\n                if (debugJavascript === true) {console.log('>>>> create summernote');}\n                $('#form-item-description')\n                    .html(data.description)\n                    .summernote({\n                        toolbar: [\n                            ['style', ['style']],\n                            ['font', ['bold', 'italic', 'underline', 'strikethrough', 'clear']],\n                            ['fontsize', ['fontsize']],\n                            ['color', ['color']],\n                            ['para', ['ul', 'ol', 'paragraph']],\n                            ['insert', ['link', 'picture']],\n                            //['height', ['height']],\n                            ['view', ['codeview']]\n                        ],\n                        codeviewFilter: true,\n                        codeviewIframeFilter: true,\n                        callbacks: {\n                            onChange: function(contents, $editable) {\n                                if (debugJavascript === true) console.log('Editor onChange:' + userDidAChange + \" - \" + requestRunning);\n                                if (userDidAChange === false && requestRunning === false) {\n                                    if (debugJavascript === true) console.log('onChange:', contents, $editable);\n                                    userDidAChange = true;\n                                    if (debugJavascript === true) console.log('User did a change on #form-item-description > ' + userDidAChange);\n                                    //$('#form-item-description').attr('data-change-ongoing', true);;\n                                }\n                            }\n                        }\n                    })\n                //.summernote('editor.insertText', data.description);\n\n                $('#form-item-suggestion-description')\n                    .html(data.description)\n                    .summernote({\n                        toolbar: [\n                            ['style', ['style']],\n                            ['font', ['bold', 'italic', 'underline', 'strikethrough', 'clear']],\n                            ['fontsize', ['fontsize']],\n                            ['color', ['color']],\n                            ['para', ['ul', 'ol', 'paragraph']],\n                            ['insert', ['link', 'picture']],\n                            //['height', ['height']],\n                            ['view', ['codeview']]\n                        ],\n                        codeviewFilter: true,\n                        codeviewIframeFilter: true,\n                        callbacks: {\n                            onChange: function(contents, $editable) {\n                                if (userDidAChange === false && requestRunning === false) {\n                                    if (debugJavascript === true) console.log('onChange:', contents, $editable);\n                                    userDidAChange = true;\n                                    if (debugJavascript === true) console.log('User did a change on #form-item-suggestion-description > ' + userDidAChange);\n                                    //$('#form-item-suggestion-description').attr('data-change-ongoing', true);;\n                                }\n                            }\n                        }\n                    });\n\n\n                //prepare nice list of users / groups\n                var html_users = '',\n                    html_groups = '',\n                    html_tags = '',\n                    html_kbs = '';\n\n                $(data.tags).each(function(index, value) {\n                    html_tags += '<span class=\"badge badge-success pointer tip mr-2\" title=\"<?php echo langHdl('list_items_with_tag'); ?>\" onclick=\"searchItemsWithTags(\\'' + value + '\\')\"><i class=\"fas fa-tag fa-sm\"></i>&nbsp;<span class=\"item_tag\">' + value + '</span></span>';\n                });\n                if (html_tags === '') {\n                    $('#card-item-tags').html('<?php echo langHdl('none'); ?>');\n                } else {\n                    $('#card-item-tags').html(html_tags);\n                }\n\n                $(data.links_to_kbs).each(function(index, value) {\n                    html_kbs += '<a class=\"badge badge-primary pointer tip mr-2\" href=\"<?php echo $SETTINGS['cpassman_url']; ?>/index.php?page=kb&id=' + value['id'] + '\"><i class=\"fas fa-map-pin fa-sm\"></i>&nbsp;' + value['label'] + '</a>';\n\n                });\n                if (html_kbs === '') {\n                    $('#card-item-kbs').html('<?php echo langHdl('none'); ?>');\n                } else {\n                    $('#card-item-kbs').html(html_kbs);\n                }\n\n\n                // Manage CATEGORIES / CUSTOM FIELDS\n                if (data.categories.length === 0) {\n                    $('.card-item-category, .card-item-field, .form-item-category, #item-details-card-categories')\n                        .addClass('hidden');\n                    $('.no-item-fields').removeClass('hidden');\n                    $('#card-item-fields').closest().addClass('collapsed');\n                } else {\n                    // \n                    if (data.template_id === '') {\n                        $('#list-group-item-main')\n                            .children('.list-group')\n                            .removeClass('hidden');\n                        $('#card-item-category').removeClass('hidden');\n                    }\n\n                    if (data.fields.length === 0) {\n                        if (actionType === 'show') {\n                            $('#item-details-card-categories').addClass('hidden');\n                            // Refresh last item seen\n                            refreshListLastSeenItems();\n                        } else {\n                            // Show the inputs for EDITION\n                            $(data.categories).each(function(index, category) {\n                                $('#form-item-field, #form-item-category-' + category).removeClass('hidden');\n                            });\n                        }\n                    } else {\n                        // Show expected categories\n                        $('.no-item-fields, .form-item-category').addClass('hidden');\n\n                        // In edition mode, show all fields in expected Categories\n                        $(data.categories).each(function(index, category) {\n                            $('#form-item-field, #form-item-category-' + category).removeClass('hidden');\n                        });\n\n                        // Now show expected fields and values\n                        $(data.fields).each(function(index, field) {\n                            // Show cateogry\n                            $('#card-item-category-' + field.parent_id).removeClass('hidden');\n\n                            // Is data encrypted\n                            // Then base64 decode is required\n                            if (field.encrypted === 1) {\n                                field.value = atob(field.value);\n                            }\n\n                            // Show field\n                            if (field.masked === 1) {\n                                // Item card\n                                $('#card-item-field-' + field.id)\n                                    .removeClass('hidden')\n                                    .children(\".card-item-field-value\")\n                                    .html(\n                                        '<span data-field-id=\"' + field.id + '\" class=\"pointer replace-asterisk\"><?php echo $var['hidden_asterisk']; ?></span>' +\n                                        '<input type=\"text\" style=\"width:0px; height:0px; border:0px;\" id=\"hidden-card-item-field-value-' + field.id + '\" value=\"' + (field.value) + '\">'\n                                    )\n                                $('#card-item-field-' + field.id)\n                                    .children(\".btn-copy-clipboard-clear\")\n                                    .attr('data-clipboard-target', '#hidden-card-item-field-value-' + field.id);\n                            } else {\n                                // Show Field\n                                $('#card-item-field-' + field.id)\n                                    .removeClass('hidden')\n                                    .children(\".card-item-field-value\")\n                                    .html(field.value);\n                            }\n                            // Item edit form\n                            $('#form-item-field-' + field.id)\n                                .children(\".form-item-field-custom\")\n                                .val(field.value);\n                        });\n\n                        // Manage template to show\n                        if (data.template_id !== '' && $.inArray(data.template_id, data.categories) > -1) {\n                            // Tick the box in edit mode\n                            $('#template_' + data.template_id).iCheck('check');\n\n                            // Hide existing data as replaced by Category template                                \n                            $('#list-group-item-main, #item-details-card-categories')\n                                .children('.list-group')\n                                .addClass('hidden');\n\n                            // Move the template in place of item main  \n                            $('#card-item-category-' + data.template_id)\n                                .addClass('fields-to-move')\n                                .detach()\n                                .appendTo('#list-group-item-main');\n\n                            // If only one category of Custom Fields\n                            // Then hide the CustomFields div\n                            if (actionType === 'show') {\n                                if (data.categories.length === 1) {\n                                    $('#item-details-card-categories').addClass('hidden');\n                                } else {\n                                    $('#item-details-card-categories').removeClass('hidden');\n                                }\n                            }\n                        }\n                    }\n                }\n\n\n                // Waiting\n                $('#card-item-attachments').html(\"<?php echo langHdl('please_wait'); ?>\");\n\n                // Manage clipboard for link\n                if (clipboardForLink) clipboardForLink.destroy();\n                clipboardForLink = new ClipboardJS(\n                    '#get_item_link',\n                    {\n                        text: function(e) {\n                            return (\"<?php echo $SETTINGS['cpassman_url'];?>/index.php?page=items&group=\"+store.get('teampassItem').folderId+\"&id=\"+store.get('teampassItem').id);\n                        }\n                    })\n                    .on('success', function(e) {\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('copy_to_clipboard'); ?>',\n                            '', {\n                                timeOut: 2000,\n                                progressBar: true,\n                                positionClass: 'toast-top-right'\n                            }\n                        );\n                        e.clearSelection();\n                    });\n\n                // Manage clipboard button\n                if (itemClipboard) itemClipboard.destroy();\n                itemClipboard = new ClipboardJS('.btn-copy-clipboard-clear', {\n                    text: function(e) {\n                        return ($($(e).data('clipboard-target')).val());\n                    }\n                })\n                .on('success', function(e) {\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('copy_to_clipboard'); ?>',\n                        '', {\n                            timeOut: 2000,\n                            progressBar: true,\n                            positionClass: 'toast-top-right'\n                        }\n                    );\n                    e.clearSelection();\n                });\n\n                // Prepare clipboard - COPY LOGIN\n                if (data.login !== '') {\n                    $('#card-item-login-btn').removeClass('hidden');\n                } else {\n                    $('#card-item-login-btn').addClass('hidden');\n                }\n\n                // Prepare clipboard - COPY PASSWORD\n                if (data.pw !== '') {\n                    new ClipboardJS('#card-item-pwd-button', {\n                            text: function() {\n                                return (data.pw);\n                            }\n                        })\n                        .on('success', function(e) {\n                            itemLog(\n                                'at_password_copied',\n                                e.trigger.dataset.clipboardId,\n                                $('#card-item-label').text()\n                            );\n\n                            // Warn user about clipboard clear\n                            if (store.get('teampassSettings').clipboard_life_duration === undefined || parseInt(store.get('teampassSettings').clipboard_life_duration) === 0) {\n                                toastr.remove();\n                                toastr.info(\n                                    '<?php echo langHdl('copy_to_clipboard'); ?>',\n                                    '', {\n                                        timeOut: 2000,\n                                        positionClass: 'toast-top-right',\n                                        progressBar: true\n                                    }\n                                );\n                            } else {\n                                toastr.warning(\n                                    '<?php echo langHdl('clipboard_will_be_cleared'); ?>',\n                                    '', {\n                                        timeOut: store.get('teampassSettings').clipboard_life_duration * 1000,\n                                        progressBar: true\n                                    }\n                                );\n\n                                // Set clipboard eraser\n                                clearClipboardTimeout(\n                                    store.get('teampassSettings').clipboard_life_duration\n                                );\n                            }\n\n                            e.clearSelection();\n                        });\n                    $('#card-item-pwd-button').removeClass('hidden');\n                } else {\n                    $('#card-item-pwd-button').addClass('hidden');\n                }\n\n                // Prepare clipboard - COPY EMAIL\n                if (data.email !== '') {\n                    $('#card-item-email-btn').removeClass('hidden');\n                } else {\n                    $('#card-item-email-btn').addClass('hidden');\n                }\n\n                // Prepare auto_update info\n                $('#card-item-misc').html('');\n                if (parseInt(data.auto_update_pwd_frequency) !== '0') {\n                    $('#card-item-misc')\n                        .append('<span class=\"fas fa-shield infotip mr-4\" title=\"<?php echo langHdl('auto_update_enabled'); ?>&nbsp;' + data.auto_update_pwd_frequency + '\"></span>');\n                }\n\n                // Show Notification engaged\n                if (data.notification_status === true) {\n                    $('#card-item-misc')\n                        .append('<span class=\"mr-4 icon-badge\" id=\"card-item-misc-notification\"><span class=\"far fa-bell infotip text-success\" title=\"<?php echo langHdl('notification_engaged'); ?>\"></span></span>');\n                } else {\n                    $('#card-item-misc')\n                        .append('<span class=\"mr-4 icon-badge\" id=\"card-item-misc-notification\"><span class=\"far fa-bell-slash infotip text-warning\" title=\"<?php echo langHdl('notification_not_engaged'); ?>\"></span></span>');\n                }\n\n                // Prepare counter\n                $('#card-item-misc')\n                    .append('<span class=\"icon-badge mr-4\"><span class=\"far fa-eye infotip\" title=\"<?php echo langHdl('viewed_number'); ?>\"></span><span class=\"badge badge-info icon-badge-text icon-badge-far\">' + data.viewed_no + '</span></span>');\n\n                // Delete after X views\n                if (data.to_be_deleted !== '') {\n                    if (parseInt(data.to_be_deleted_type) === 1) {\n                        $('#form-item-deleteAfterShown').val(data.to_be_deleted);\n                        $('#form-item-deleteAfterDate').val('');\n                    } else {\n                        $('#form-item-deleteAfterShown').val('');\n                        $('#form-item-deleteAfterDate').val(data.to_be_deleted);\n                    }\n                    // Show icon\n                    $('#card-item-misc')\n                        .append('<span class=\"icon-badge mr-5\"><span class=\"far fa-trash-alt infotip\" title=\"<?php echo langHdl('automatic_deletion_engaged'); ?>\"></span><span class=\"badge badge-danger icon-badge-text-bottom-right\">' + data.to_be_deleted + '</span></span>');\n                }\n\n                // reset password shown info\n                $('#card-item-pwd').removeClass('pwd-shown');\n\n                //Anyone can modify button\n                if (parseInt(data.anyone_can_modify) === 1) {\n                    $('#form-item-anyoneCanModify').iCheck('check');\n                } else {\n                    $('#form-item-anyoneCanModify').iCheck('uncheck');\n                }\n\n                if (parseInt(data.show_details) === 1 && parseInt(data.show_detail_option) !== 2) {\n                    // continue loading data\n                    showDetailsStep2(itemId, actionType);\n                } else if (parseInt(data.show_details) === 1 && parseInt(data.show_detail_option) === 2) {\n                    $('#item_details_nok').addClass('hidden');\n                    $('#item_details_ok').addClass('hidden');\n                    $('#item_details_expired_full').show();\n                    $('#menu_button_edit_item, #menu_button_del_item, #menu_button_copy_item, #menu_button_add_fav, #menu_button_del_fav, #menu_button_show_pw, #menu_button_copy_pw, #menu_button_copy_login, #menu_button_copy_link').attr('disabled', 'disabled');\n                    $('#div_loading').addClass('hidden');\n                } else {\n                    //Dont show details\n                    $('#item_details_nok').removeClass('hidden');\n                    $('#item_details_nok_restriction_list').html('<div style=\"margin:10px 0 0 20px;\"><b><?php echo langHdl('author'); ?>: </b>' + data.author + '<br /><b><?php echo langHdl('restricted_to'); ?>: </b>' + data.restricted_to + '<br /><br /><u><a href=\"#\" onclick=\"openReasonToAccess()\"><?php echo langHdl('request_access_ot_item'); ?></a></u></div>');\n\n                    $('#reason_to_access').remove();\n                    $('#item_details_nok')\n                        .append('<input type=\"hidden\" id=\"reason_to_access\" value=\"' + data.id + ',' + data.id_user + '\">');\n\n                    // Protect\n                    $('#item_details_ok').addClass('hidden');\n                    $('#item_details_expired').addClass('hidden');\n                    $('#item_details_expired_full').addClass('hidden');\n                    $('#menu_button_edit_item, #menu_button_del_item, #menu_button_copy_item, #menu_button_add_fav, #menu_button_del_fav, #menu_button_show_pw, #menu_button_copy_pw, #menu_button_copy_login, #menu_button_copy_link').attr('disabled', 'disabled');\n                    $('#div_loading').addClass('hidden');\n                }\n\n                // Prepare bottom buttons\n                if ($('#list-item-row_'+data.id).prev('.list-item-row').attr('data-item-id') !== undefined) {\n                    $('.but-prev-item')\n                        .html('<i class=\"fas fa-arrow-left mr-2\"></i>' + unescape($('#list-item-row_'+data.id).prev('.list-item-row').attr('data-label')))\n                        .attr('data-prev-item-id', $('#list-item-row_'+data.id).prev('.list-item-row').attr('data-item-id'))\n                        .removeClass('hidden');\n                }\n                if ($('#list-item-row_'+data.id).next('.list-item-row').attr('data-item-id') !== undefined) {\n                    $('.but-next-item')\n                        .html('<i class=\"fas fa-arrow-right mr-2\"></i>' + unescape($('#list-item-row_'+data.id).next('.list-item-row').attr('data-label')))\n                        .attr('data-next-item-id', $('#list-item-row_'+data.id).next('.list-item-row').attr('data-item-id'))\n                        .removeClass('hidden');\n                }\n                if (debugJavascript === true) {\n                    console.log(\"PREV: \" + $('#list-item-row_'+data.id).prev('.list-item-row').attr('data-item-id') + \" - NEXT: \" + $('#list-item-row_'+data.id).next('.list-item-row').attr('data-item-id'));\n                }\n\n                // Inform user\n                toastr.remove();\n                toastr.info(\n                    '<?php echo langHdl('done'); ?>',\n                    '', {\n                        timeOut: 1000\n                    }\n                );\n\n                return true;\n            }\n        );\n    }\n\n\n    /*\n     * Loading Item details step 2\n     */\n    function showDetailsStep2(id, actionType) {\n        requestRunning = true;\n        $.post(\n            'sources/items.queries.php', {\n                type: 'showDetailsStep2',\n                id: id,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'showDetailsStep2');\n\n                if (debugJavascript === true) {\n                    console.log('RECEIVED STEP2 - used key: <?php echo $_SESSION['key']; ?>');\n                    console.log(data);\n                }\n\n                // Attachments\n                if (data !== false) {\n                    if (data.attachments.length === 0) {\n                        $('#card-item-attachments-badge').html('<?php echo langHdl('none'); ?>');\n                        $('#card-item-attachments')\n                            .html('<?php echo langHdl('no_attachment'); ?>')\n                            .parent()\n                            .addClass('collapsed');\n                    } else {\n                        var html = '',\n                            htmlFull = '',\n                            counter = 1,\n                            nbFiles = 0;\n                        $.each(data.attachments, function(i, value) {\n                            // Manage new row\n                            if (counter === 1) {\n                                htmlFull += '<div class=\"row\">';\n                                html += '<div class=\"row\">';\n                            }\n\n                            html += '<div class=\"col-6\">' +\n                                '<div class=\"callout callout-info\">' +\n                                '<i class=\"' + value.icon + ' mr-2 text-info\"></i>';\n\n                            // Show VIEW image icon\n                            if (value.is_image === 1) {\n                                html +=\n                                    '<i class=\"fas fa-eye infotip preview-image pointer mr-2\" ' +\n                                    'title=\"<?php echo langHdl('see'); ?>\" ' +\n                                    'data-file-id=\"' + value.id + '\" data-file-title=\"' +\n                                    (isBase64(value.filename) === true ? atob(value.filename) : value.filename) + '\"></i>';\n                            }\n\n                            // Show DOWNLOAD icon\n                            downloadIcon =\n                                '<a class=\"text-secondary infotip mr-2\" href=\"sources/downloadFile.php?name=' + encodeURI(value.filename) + '&key=<?php echo $_SESSION['key']; ?>&key_tmp=' + value.key + '&fileid=' + value.id + '\" title=\"<?php echo langHdl('download'); ?>\">' +\n                                '<i class=\"fas fa-file-download\"></i></a>';\n                            html += downloadIcon;\n\n                            // Show other info\n                            html +=\n                                '<span class=\"font-weight-bold mr-3\">' +\n                                (isBase64(value.filename) === true ? atob(value.filename) : value.filename) + '</span>' +\n                                '<span class=\"mr-2 font-weight-light\">(' + value.extension + ')</span>' +\n                                '<span class=\"font-italic\">' + value.size + '</span>' +\n                                '</div></div>';\n\n                            htmlFull += '<div class=\"col-6 edit-attachment-div\"><div class=\"info-box bg-secondary-gradient\">' +\n                                '<span class=\"info-box-icon bg-info\"><i class=\"' + value.icon + '\"></i></span>' +\n                                '<div class=\"info-box-content\"><span class=\"info-box-text\">' +\n                                (isBase64(value.filename) === true ? atob(value.filename) : value.filename) + '.' + value.extension + '</span>' +\n                                '<span class=\"info-box-text\">' + downloadIcon +'</span>' +\n                                '<span class=\"info-box-text\"><i class=\"fas fa-trash pointer delete-file\" data-file-id=\"' + value.id + '\"></i></span></div>' +\n                                '</div></div>';\n\n                            if (counter === 2) {\n                                htmlFull += '</div>';\n                                html += '</div>';\n                                counter = 1;\n                            } else {\n                                counter += 1;\n                            }\n                            nbFiles += 1;\n                        });\n                        $('#card-item-attachments').html(html);\n                        $('#card-item-attachments-badge').html(nbFiles);\n                        $('#form-item-attachments').html(htmlFull);\n                        $('#form-item-attachments-zone').removeClass('hidden');\n                    }\n                }\n                // Hide loading state\n                $('#card-item-attachments').nextAll().addClass('hidden');\n\n                // Show restrictions with Badges\n                var html_restrictions = '';\n                $.each(store.get('teampassItem').id_restricted_to, function(i, value) {\n                    html_restrictions +=\n                        '<span class=\"badge badge-info mr-2 mb-1\"><i class=\"fas fa-group fa-sm mr-1\"></i>' +\n                        data.users_list.find(x => x.id === parseInt(value)).name + '</span>';\n                });\n                $.each(store.get('teampassItem').id_restricted_to_roles, function(i, value) {\n                    html_restrictions +=\n                        '<span class=\"badge badge-info mr-2 mb-1\"><i class=\"fas fa-group fa-sm mr-1\"></i>' +\n                        data.roles_list.find(x => x.id === parseInt(value)).title + '</span>';\n                });\n                if (html_restrictions === '') {\n                    $('#card-item-restrictedto').html('<?php echo langHdl('no_special_restriction'); ?>');\n                } else {\n                    $('#card-item-restrictedto').html(html_restrictions);\n                }\n\n\n                $('#edit_past_pwds').attr('title', (data.history_of_pwds)); //htmlspecialchars_decode \n                $('#edit_past_pwds_div').html((data.history_of_pwds)); //htmlspecialchars_decode \n\n                //$('#id_files').html(data.files_id);\n                //$('#hid_files').val(data.files_id);\n                //$('#item_edit_list_files').html(data.files_edit);\n\n                //$('#index-last-pwds').html(htmlspecialchars_decode(data.div_last_items));\n\n                // function calling image lightbox when clicking on link\n                $('a.image_dialog').click(function(event) {\n                    event.preventDefault();\n                    PreviewImage($(this).attr('href'), $(this).attr('title'));\n                });\n\n\n                // set indicator if item has change proposal\n                if (parseInt(data.has_change_proposal) > 0) {\n                    $('#item_extra_info').prepend('<i class=\"fas fa-lightbulb-o fa-sm mi-yellow tip\" title=\"<?php echo langHdl('item_has_change_proposal'); ?>\"></i>&nbsp;');\n                }\n\n\n                $('.infotip').tooltip();\n\n                // Now load History\n                if (actionType === 'show') {\n                    $.post(\n                        \"sources/items.queries.php\", {\n                            type: \"load_item_history\",\n                            item_id: store.get('teampassItem').id,\n                            key: \"<?php echo $_SESSION['key']; ?>\"\n                        },\n                        function(data) {\n                            //decrypt data\n                            data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'load_item_history');\n                            if (debugJavascript === true) {\n                                console.info('History:');\n                                console.log(data);\n                            }\n                            if (data.error === '') {\n                                var html = '',\n                                    nbHistoryEvents = 0;\n                                $.each(data.history, function(i, value) {\n                                    html += '<div class=\"direct-chat-msg\"><div class=\"direct-chat-info clearfix\">' +\n                                        '<span class=\"direct-chat-name float-left\">' + value.name + '</span>' +\n                                        '<span class=\"direct-chat-timestamp float-right\">' + value.date + '</span>' +\n                                        '</div>' +\n                                        '<img class=\"direct-chat-img\" src=\"' + value.avatar + '\" alt=\"Message User Image\">' +\n                                        '<div class=\"direct-chat-text\"><span class=\"text-capitalize\">' +\n                                        (value.action === '' ? '' : (value.action)) + '</span> ' +\n                                        (value.detail === '' ? '' : (' | ' + value.detail)) + '</div></div>';\n                                    nbHistoryEvents += 1;\n                                });\n                                // Display\n                                $('#card-item-history').html(html);\n                                $('#card-item-history-badge').html(nbHistoryEvents);\n                            }\n\n                            // Collapse History\n                            $('#card-item-history').closest().addClass('collapsed');\n\n                            // Hide loading state\n                            $('#card-item-history').nextAll().addClass('hidden');\n                        }\n                    );\n                } else if (actionType === 'edit') {\n                    getPrivilegesOnItem(\n                        selectedFolderId,\n                        0\n                    );\n                }\n\n                // Prepare Select2 inputs\n                $('.select2').select2({\n                    language: '<?php echo isset($_SESSION['user_language_code']) === true ? $_SESSION['user_language_code'] : 'en'; ?>'\n                });\n\n                // Prepare datePicker\n                $('#form-item-deleteAfterDate, .datepicker').datepicker({\n                    format: '<?php echo str_replace(['Y', 'M'], ['yyyy', 'mm'], $SETTINGS['date_format']); ?>',\n                    todayHighlight: true,\n                    todayBtn: true,\n                    language: '<?php echo isset($_SESSION['user_language_code']) === true ? $_SESSION['user_language_code'] : 'en'; ?>'\n                });\n\n                // Prepare Date range picker with time picker\n                $('.timepicker').timepicker({\n                    minuteStep: 5,\n                    template: false,\n                    showSeconds: true,\n                    showMeridian: false,\n                    showInputs: false,\n                    explicitMode: true\n                });\n\n                // Delete inputs related files uploaded but not confirmed\n                var data = {\n                    'item_id': store.get('teampassItem').id,\n                }\n\n                $.post(\n                    \"sources/items.queries.php\", {\n                        type: 'delete_uploaded_files_but_not_saved',\n                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function (data) {\n                        /*// add track-change class on item form\n                        setTimeout(\n                            $('#form-item-label, #form-item-description, #form-item-login, #form-item-password, #form-item-email, #form-item-url, #form-item-folder, #form-item-restrictedto, #form-item-tags, #form-item-anyoneCanModify, #form-item-deleteAfterShown, #form-item-deleteAfterDate, #form-item-anounce, .form-item-field-custom').addClass('track-change'),\n                            2000\n                        );*/\n\n                        requestRunning = false;\n                    }\n                );\n            }\n        );\n    };\n\n    // Clear history form\n    $(document)\n        .on('click', '#form-item-history-clear', function() {\n            $('.history').val('');\n        })\n        .on('click', '#form-item-history-insert', function() {\n            if ($('#form-item-history-label').val() === '' ||\n                $('#form-item-history-date').val() === '' ||\n                $('#form-item-history-time').val() === ''\n            ) {\n                // Inform user\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('all_fields_mandatory'); ?>',\n                    '<?php echo langHdl('warning'); ?>', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Insert new entry\n            var data = {\n                'item_id': store.get('teampassItem').id,\n                'label': DOMPurify.sanitize($('#form-item-history-label').val()),\n                'date': DOMPurify.sanitize($('#form-item-history-date').val()),\n                'time': DOMPurify.sanitize($('#form-item-history-time').val()),\n            }\n            $.post(\n                \"sources/items.queries.php\", {\n                    type: 'history_entry_add',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'history_entry_add');\n                    if (debugJavascript === true) console.log(data);\n                    $('.history').val('');\n\n                    // Inform user\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            );\n        })\n        .on('click', '.nav-link', function() {\n            if ($(this).attr('href') === '#tab_5') {\n                $('#form-item-buttons').addClass('hidden');\n            } else {\n                $('#form-item-buttons').removeClass('hidden');\n            }\n\n        });\n\n    // When click on Trash attachment icon\n    $(document).on('click', '.delete-file', function() {\n        var thisButton = $(this),\n            thisFileId = thisButton.data('file-id');\n\n        if (thisFileId !== undefined && thisFileId !== '') {\n            // Delete the file\n            var data = {\n                'file_id': thisFileId,\n            };\n\n            $.post(\n                'sources/items.queries.php', {\n                    type: 'delete_attached_file',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'delete_attached_file');\n                    if (debugJavascript === true) console.log(data);\n\n                    //check if format error\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Remove the file in UI\n                        thisButton.closest('.edit-attachment-div').remove();\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n        }\n    });\n\n    //calling image lightbox when clicking on link\n    $(document).on('click', '.preview-image', function(event) {\n        event.preventDefault();\n        PreviewImage($(this).data('file-id'));\n    });\n\n    PreviewImage = function(fileId) {\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('loading_image'); ?>...<i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-2\"></i>'\n        );\n\n        $.post(\n            \"sources/items.queries.php\", {\n                type: \"image_preview_preparation\",\n                id: fileId,\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //decrypt data\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'image_preview_preparation');\n                //if (debugJavascript === true) console.log(data);\n\n                //check if format error\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $(\"#card-item-preview\").html('<img id=\"image_files\" src=\"\">');\n                    //Get the HTML Elements\n                    imageDialog = $(\"#card-item-preview\");\n                    imageTag = $('#image_files');\n\n                    //Set the image src\n                    imageTag.attr(\"src\", \"data:\" + data.file_type + \";base64,\" + data.file_content);\n                    imageTag.attr(\"class\", \"img-fluid\");\n\n                    //When the image has loaded, display the dialog\n                    showModalDialogBox(\n                        '#warningModal',\n                        data.filename,\n                        $(imageDialog).html(),\n                        '',\n                        'Close',\n                        'modal-xl'\n                    );\n\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n\n                    /*\n                                        var pre = document.createElement('pre');\n                                        pre.style.textAlign = \"center\";\n                                        $(pre).append($(imageDialog).html());\n                                        alertify\n                                            .alert(pre)\n                                            .set({\n                                                label: '<?php echo langHdl('close'); ?>',\n                                                closable: false,\n                                                padding: false,\n                                                title: data.filename,\n                                                resizable: true,\n                                            })\n                                            .resizeTo('90%', '250px');*/\n                }\n            }\n        );\n    };\n\n    /**\n     */\n    function itemLog(logCase, itemId, itemLabel) {\n        itemId = itemId || $('#id_item').val();\n\n        var data = {\n            \"id\": itemId,\n            \"label\": DOMPurify.sanitize(itemLabel),\n            \"user_id\": \"<?php echo $_SESSION['user_id']; ?>\",\n            \"action\": logCase,\n            \"login\": \"<?php echo $_SESSION['login']; ?>\"\n        };\n\n        $.post(\n            \"sources/items.logs.php\", {\n                type: \"log_action_on_item\",\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            }\n        );\n    }\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function prepareOneTimeView() {\n        //Send query\n        $.post(\n            \"sources/items.queries.php\", {\n                type: \"generate_OTV_url\",\n                id: store.get('teampassItem').id,\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //check if format error\n                if (data.error == \"\") {\n                    $('#form-item-otv-link').val(data.url);\n                    // prepare clipboard\n                    var clipboard = new ClipboardJS(\"#form-item-otv-copy-button\", {\n                        text: function() {\n                            return data.url;\n                        }\n                    });\n                    clipboard.on('success', function(e) {\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('copy_to_clipboard'); ?>',\n                            '', {\n                                timeOut: 2000,\n                                positionClass: 'toast-top-right',\n                                progressBar: true\n                            }\n                        );\n                        e.clearSelection();\n                    });\n                }\n            },\n            \"json\"\n        );\n    }\n\n    /**\n     */\n    function getPrivilegesOnItem(val, edit, context) {\n        context = context || \"\"; // make context optional\n\n        // make sure to use correct selected folder\n        if (val === false) {\n            val = selectedFolderId;\n        }\n        if (debugJavascript === true) console.log('Get privilege for folder ' + val);\n            \n        if (val === \"\" || typeof val === \"undefined\" || val === false) {\n            toastr.remove();\n            toastr.error(\n                '',\n                '<?php echo langHdl('please_select_a_folder'); ?>',\n                {\n                    timeOut: 5000,\n                    positionClass: 'toast-top-right',\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        return $.post(\n            \"sources/items.queries.php\", {\n                type: \"get_complixity_level\",\n                folder_id: val,\n                context: context,\n                item_id: store.get('teampassItem').id,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'get_complixity_level');\n\n                if (debugJavascript === true) {\n                    console.info('GET COMPLEXITY LEVEL');\n                    console.log(data);\n                }\n                var executionStatus = true;\n\n                if (data.error === false) {\n                    // Do some prepartion\n\n                    // Prepare list of users where needed\n                    $('#form-item-restrictedto, #form-item-anounce').empty().change(); //.val('')\n                    // Users restriction list\n                    var html_restrictions = '';\n\n                    $(data.usersList).each(function(index, value) {\n                        // Prepare list for FORM\n                        $(\"#form-item-restrictedto\")\n                            .append('<option value=\"' + value.id + '\" class=\"restriction_is_user\">' + value.name + '</option>');\n\n                        // Prepare list of emailers\n                        $('#form-item-anounce').append('<option value=\"' + value.email + '\">' + value.name + '</option>');\n                    });\n                    if (data.setting_restricted_to_roles === 1) {\n                        //add optgroup\n                        var optgroup = $('<optgroup label=\"<?php echo langHdl('users'); ?>\">');\n                        $(\".restriction_is_user\").wrapAll(optgroup);\n\n                        // Now add the roles to the list\n                        $(data.rolesList).each(function(index, value) {\n                            $(\"#form-item-restrictedto\")\n                                .append('<option value=\"role_' + value.id + '\" class=\"restriction_is_role\">' +\n                                    value.title + '</option>');\n                        });\n                        /// Add a group label for Groups\n                        $('.restriction_is_role').wrapAll($('<optgroup label=\"<?php echo langHdl('roles'); ?>\">'));\n                    }\n\n\n                    //\n                    $('#card-item-visibility').html(data.visibility);\n\n                    // Prepare Select2\n                    $('.select2').select2({\n                        language: '<?php echo $_SESSION['user_language_code']; ?>'\n                    });\n\n                    // Show selected restricted inputs\n                    $('#form-item-restrictedto')\n                        .val(data.usersList.concat(\n                            data.rolesList.map(i => 'role_' + i)))\n                        .change();\n\n                    // If restricted to Users then select them\n                    if (store.get('teampassItem').id_restricted_to !== undefined) {\n                        $('#form-item-restrictedto')\n                            .val(store.get('teampassItem').id_restricted_to)\n                            .trigger('change');\n                    }\n\n                }\n\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.folderId = val,\n                            teampassItem.error = data.error === undefined ? '' : data.error,\n                            teampassItem.message = data.message === undefined ? '' : data.message,\n                            teampassItem.folderComplexity = data.val === undefined ? '' : parseInt(data.val),\n                            teampassItem.folderIsPersonal = data.personal === undefined ? '' : parseInt(data.personal),\n                            teampassItem.itemMinimumComplexity = data.complexity === undefined ? '' : data.complexity,\n                            teampassItem.itemVisibility = data.visibility === undefined ? '' : data.visibility,\n                            teampassItem.id_restricted_to = data.usersList === undefined ? '' : data.usersList,\n                            teampassItem.id_restricted_to_roles = data.rolesList === undefined ? '' : data.rolesList,\n                            teampassItem.item_rights = data.itemAccessRight === undefined ? '' : data.itemAccessRight\n                    }\n                );\n                //if (debugJavascript === true) console.log('Content of teampassItem;')\n                //if (debugJavascript === true) console.log(store.get('teampassItem'))\n            }\n        );\n    }\n\n    $('.password-generate').click(function() {\n        var elementId = $(this).data('id');\n        $('#' + elementId).focus();\n        if (debugJavascript === true) console.log(elementId);\n\n        // If no criteria is set then do secure\n        var secure_pwd = false;\n        var anyBoxesChecked = false;\n        if ($('.password-definition:checked').length > 0) {\n            anyBoxesChecked = true;\n        }\n        if (anyBoxesChecked === false || $('#pwd-definition-secure').prop('checked') === true) {\n            secure_pwd = true;\n        }\n        \n        $.post(\n            \"sources/main.queries.php\", {\n                type: \"generate_password\",\n                type_category: 'action_user',\n                size: $('#pwd-definition-size').val(),\n                lowercase: $('#pwd-definition-lcl').prop(\"checked\"),\n                numerals: $('#pwd-definition-numeric').prop(\"checked\"),\n                capitalize: $('#pwd-definition-ucl').prop(\"checked\"),\n                symbols: $('#pwd-definition-symbols').prop(\"checked\"),\n                secure_pwd: secure_pwd,\n                force: \"false\",\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                if (debugJavascript === true) console.log(data)\n                if (data.error == \"true\") {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        data.error_msg,\n                        '<?php echo langHdl('error'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                } else {\n                    $(\"#\" + elementId).val(data.key).focus();\n\n                    // Form has changed\n                    userDidAChange = true;\n                    if (debugJavascript === true) console.log('User did a change during generate_password > ' + userDidAChange);\n                    //$('#' + elementId).attr('data-change-ongoing', true);;\n\n                    $(\"#form-item-password\").pwstrength(\"forceUpdate\");\n\n                    // SHow button in sticky footer\n                    //$('#form-item-buttons').addClass('sticky-footer');\n                }\n            }\n        );\n    });\n\n    $('#item-button-password-copy').click(function() {\n        $('#form-item-password-confirmation').val($('#form-item-password').val());\n    });\n\n    /**\n     * On tag badge click, launch the search query\n     */\n    function searchItemsWithTags(criteria) {\n        if (criteria !== '') {\n            $('#folders-tree-card, .columns-position').removeClass('hidden');\n            $('.item-details-card, .form-item-action, .form-item, .form-folder-action').addClass('hidden');\n\n            $('#find_items').val(criteria);\n\n            searchItems(criteria);\n        }\n    }\n\n    /**\n     * Checks if string is base64 encoded\n     *\n     * @return bool\n     */\n    function isBase64(str) {\n        try {\n            return btoa(atob(str)) == str;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    /**\n     * Scroll back to previous vertical position\n     *\n     * @return void\n     */\n    function scrollBackToPosition() {\n        // Scroll back to position\n        if (store.get('teampassApplication').tempScrollTop > 0) {\n            window.scrollTo({\n                top: store.get('teampassApplication').tempScrollTop\n            });\n        }\n    }\n\n\n    function prepareFolderDragNDrop()\n    {\n        $('.is-draggable').draggable({\n            cursor: 'move',\n            cursorAt: {\n                top: -5,\n                left: -5\n            },\n            opacity: 0.8,\n            appendTo: 'body',\n            stop: function(event, ui) {\n                $(this).removeClass('bg-warning');\n            },\n            start: function(event, ui) {\n                $(this).addClass('bg-warning');\n            },\n            helper: function(event) {\n                return $('<div class=\"bg-gray p-2 font-weight-light\">' + $(this).find('.list-item-row-description').text() + '</div>');\n            }\n        });\n        $('.folder').droppable({\n            hoverClass: 'bg-warning',\n            tolerance: 'pointer',\n            drop: function(event, ui) {\n                // Check if same folder\n                if (parseInt($(this).attr('id').substring(4)) === parseInt(ui.draggable.data('item-tree-id'))) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('error_not_allowed_to'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n\n                // Warn user that it starts\n                toastr.info(\n                    '<i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>'\n                );\n\n                // Hide helper\n                ui.draggable.addClass('hidden');\n\n                //move item\n                var data = {\n                    'item_id': ui.draggable.data('item-id'),\n                    'folder_id': $(this).attr('id').substring(4)\n                }\n                $.post(\n                    'sources/items.queries.php', {\n                        type: 'move_item',\n                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'move_item');\n\n                        if (debugJavascript === true) console.log(data)\n\n                        if (data.error === true) {\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                            ui.draggable.removeClass('hidden');\n                            return false;\n                        }\n                        \n                        //increment / decrement number of items in folders\n                        $('#itcount_' + data.from_folder).text(refreshFolderCounters($('#itcount_' + data.from_folder).text(), 'decrement'));\n                        $('#itcount_' + data.to_folder).text(refreshFolderCounters($('#itcount_' + data.to_folder).text(), 'increment'));\n\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('success'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                );\n            }\n        });\n    }\n\n    /**\n     * Permits to refresh the folder counters when performing an item drag and drop\n     */\n    function refreshFolderCounters(counter, operation)\n    {\n        var splitCounter = counter.split('/');\n        if (splitCounter.length <= 3) {\n            if (operation === 'increment') {\n                splitCounter[0]++;\n                if (splitCounter.length === 3) {\n                    splitCounter[1]++;\n                }\n            } else {\n                splitCounter[0]--;\n                if (splitCounter.length === 3) {\n                    splitCounter[1]--;\n                }\n            }\n        }\n        \n        return splitCounter.join('/');\n    }\n\n    /*\n    // Get parameters from url\n    var currentTeampassUrl = new URL(window.location.href);\n    var actionFromUrl = currentTeampassUrl.searchParams.get('action');\n    if (actionFromUrl !== undefined && atob(actionFromUrl) === 'reset_private_key') {\n        // Case where we need to re-encrypt all share keys\n        if (debugJavascript === true) console.log(\"ACTION RE-ENCRYPTION OF SHAREKEYS\");\n\n        $('#dialog-encryption-keys').removeClass('hidden');    \n\n        // Hide other\n        $('.content-header, .content').addClass('hidden');\n\n        alertify.dismissAll();\n    }\n    */\n</script>\n"], "fixing_code": ["<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      items.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (! checkUser($_SESSION['user_id'], $_SESSION['key'], curPage($SETTINGS), $SETTINGS)) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n\n$var = [];\n$var['hidden_asterisk'] = '<i class=\"fas fa-asterisk mr-2\"></i><i class=\"fas fa-asterisk mr-2\"></i><i class=\"fas fa-asterisk mr-2\"></i><i class=\"fas fa-asterisk mr-2\"></i><i class=\"fas fa-asterisk\"></i>';\n\n?>\n\n\n<script type=\"text/javascript\">\n    var requestRunning = false,\n        clipboardForLogin,\n        clipboardForPassword,\n        clipboardForLink,\n        query_in_progress = 0,\n        screenHeight = $(window).height(),\n        quick_icon_query_status = true,\n        first_group = 1,\n        folderSearchCriteria = $('#jstree_search').val(),\n        userDidAChange = false,\n        userUploadedFile = false,\n        selectedFolder = false,\n        selectedFolderId = false,\n        itemClipboard,\n        startedItemsListQuery = false,\n        itemStorageInformation = '',\n        applicationVars,\n        initialPageLoad = true,\n        previousSelectedFolder=-1,\n        debugJavascript = false;\n\n    // Manage memory\n    browserSession(\n        'init',\n        'teampassApplication', {\n            lastItemSeen: false,\n            itemsListStop: '',\n            itemsListStart: '',\n            selectedFolder: '',\n            itemsListFolderId: false,\n            itemsListRestricted: '',\n            itemsShownByQuery: '',\n            foldersList: [],\n            personalSaltkeyRequired: 0,\n            uploadedFileId: '',\n            tempScrollTop: 0,\n        }\n    );\n\n    browserSession(\n        'init',\n        'teampassItem', {\n            IsPersonalFolder: '',\n            hasAccessLevel: '',\n            hasCustomCategories: '',\n            id: '',\n            timestamp: '',\n            folderId: ''\n        }\n    );\n\n    if (debugJavascript === true) {\n        console.log('User information')\n        console.log(store.get('teampassUser'))\n    }\n\n    // Show loader\n    toastr.remove();\n    toastr.info('<?php echo langHdl('loading_data'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n    // Build tree\n    $('#jstree').jstree({\n        'core': {\n            'animation': 0,\n            'check_callback': true,\n            'data': {\n                'url': './sources/tree.php',\n                'dataType': 'json',\n                'icons': false,\n                'data': function(node) {\n                    if (debugJavascript === true) {\n                        console.info('Les r\u00e9pertoires sont charg\u00e9s');\n                        console.log(node);\n                    }\n                    return {\n                        'id': node.id.split('_')[1],\n                        'force_refresh': store.get('teampassApplication') !== undefined ?\n                            store.get('teampassApplication').jstreeForceRefresh : 0\n                    };\n                }\n            },\n            'strings': {\n                'Loading ...': '<?php echo langHdl('loading'); ?>...'\n            },\n            'themes': {\n                'icons': false,\n            },\n        },\n        'plugins': [\n            'state', 'search'\n        ]\n    })\n    // On node select\n    .bind('select_node.jstree', function(e, data) {\n        if (debugJavascript === true) console.log('JSTREE BIND');\n        selectedFolder = $('#jstree').jstree('get_selected', true)[0]\n        selectedFolderId = parseInt(selectedFolder.id.split('_')[1]);\n\n        // manage icon open/closed\n        var selectedFolderIcon = $('#fld_'+selectedFolderId).children('.tree-folder').attr('data-folder'),\n            selectedFolderIconSelected = $('#fld_'+selectedFolderId).children('.tree-folder').attr('data-folder-selected');\n\n        // remove selected on previous folder\n        $($('#fld_'+previousSelectedFolder).children('.tree-folder'))\n            .removeClass($('#fld_'+previousSelectedFolder).children('.tree-folder').attr('data-folder-selected'))\n            .addClass($('#fld_'+previousSelectedFolder).children('.tree-folder').attr('data-folder'));\n        // show selected icon\n        $('#fld_'+selectedFolderId).children('.tree-folder')\n            .removeClass(selectedFolderIcon)\n            .addClass(selectedFolderIconSelected);\n\n        if (debugJavascript === true) {\n            console.info('SELECTED NODE ' + selectedFolderId + \" -- \" + startedItemsListQuery);\n            console.log(selectedFolder);\n            console.log(selectedFolder.original.is_pf)\n        }\n\n        store.update(\n            'teampassApplication',\n            function(teampassApplication) {\n                teampassApplication.selectedFolder = selectedFolderId,\n                teampassApplication.selectedFolderTitle = selectedFolder.a_attr['data-title'],\n                teampassApplication.selectedFolderParentId = selectedFolder.parent !== \"#\" ? selectedFolder.parent.split('_')[1] : 0,\n                teampassApplication.selectedFolderParentTitle = selectedFolder.a_attr['data-title'],\n                teampassApplication.selectedFolderIcon = selectedFolderIcon,\n                teampassApplication.selectedFolderIconSelected = selectedFolderIconSelected,\n                teampassApplication.selectedFolderIsPF = selectedFolder.original.is_pf,\n                teampassApplication.userCanEdit = selectedFolder.original.can_edit\n            }\n        )\n        store.update(\n            'teampassItem',\n            function(teampassItem) {\n                teampassItem.folderId = selectedFolderId\n            }\n        );\n\n        // Prepare list of items\n        if (startedItemsListQuery === false) {\n            startedItemsListQuery = true;\n            ListerItems(selectedFolderId, '', 0);\n        }\n\n        previousSelectedFolder = selectedFolderId;\n        initialPageLoad = false;\n    })\n    // Search in tree\n    .bind('search.jstree', function(e, data) {\n        if (data.nodes.length == 1) {\n            //open the folder\n            ListerItems($('#jstree li>a.jstree-search').attr('id').split('_')[1], '', 0);\n        }\n    });\n\n    // Find folders in jstree\n    $('#jstree_search')\n        .keypress(function(e) {\n            if (e.keyCode === 13) {\n                $('#jstree').jstree('search', $('#jstree_search').val());\n            }\n        })\n        .focus(function() {\n            $(this).val('');\n        })\n        .blur(function() {\n            $(this).val(folderSearchCriteria);\n        });\n\n    // Is this a short url\n    var queryDict = {},\n        showItemOnPageLoad = false,\n        itemIdToShow = '';\n    location.search.substr(1).split(\"&\").forEach(function(item) {\n        queryDict[item.split(\"=\")[0]] = item.split(\"=\")[1]\n    });\n\n    if (queryDict['group'] !== undefined && queryDict['group'] !== '' &&\n        queryDict['id'] !== undefined && queryDict['id'] !== ''\n    ) {\n        // Show cog\n        toastr.remove();\n        toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Store current view\n        savePreviousView();\n\n        // Store the folder to open\n        store.set(\n            'teampassApplication', {\n                selectedFolder: parseInt(queryDict['group']),\n                selectedItem: parseInt(queryDict['id'])\n            }\n        );\n        store.update(\n            'teampassItem',\n            function(teampassItem) {\n                teampassItem.folderId = parseInt(queryDict['group'])\n            }\n        );\n\n        showItemOnPageLoad = true;\n        itemIdToShow = queryDict['id'];\n        startedItemsListQuery = true;\n\n        $('.item-details-card').removeClass('hidden');\n        $('#folders-tree-card, .columns-position').addClass('hidden');\n\n        // refresh selection in jstree\n        $('#jstree').jstree('deselect_all');\n        $('#jstree').jstree('select_node', '#li_' + itemIdToShow);\n        $('#jstree').jstree(true).hide_icons()\n\n        // Get list of items in this folder\n        startedItemsListQuery = true;\n        ListerItems(store.get('teampassApplication').selectedFolder, '', 0);\n\n        // Show details\n        $.when(\n            Details(itemIdToShow, 'show', true)\n        ).then(function() {\n            //requestRunning = false;\n            console.log('Item detail affich\u00e9')\n            // Force previous view to Tree folders\n            store.update(\n                'teampassUser',\n                function(teampassUser) {\n                    teampassUser.previousView = '#folders-tree-card';\n                }\n            );\n        });\n    }\n\n    // Preload list of items\n    if (store.get('teampassApplication') !== undefined &&\n        store.get('teampassApplication').selectedFolder !== undefined &&\n        store.get('teampassApplication').selectedFolder !== ''\n    ) {\n        startedItemsListQuery = true;\n\n        ListerItems(store.get('teampassApplication').selectedFolder, '', 0);\n\n    }\n\n\n\n    // Close on escape key\n    $(document).keyup(function(e) {\n        if (e.keyCode == 27) {\n            closeItemDetailsCard();\n        }\n    });\n\n    /*// Edit on e key\n    $(document).keyup(function(e) {\n        if (e.keyCode == 69 && $('.item-details-card').is(':visible') === true) {\n            if ($('#form-item').hasClass('hidden') === false) {\n                showItemEditForm(store.get('teampassItem').id);\n            }\n        }\n    });\n    */\n\n    // load list of visible folders for current user\n    $(this).delay(500).queue(function() {\n        refreshVisibleFolders();\n\n        $(this).dequeue();\n    });\n\n    // Keep the scroll position\n    $(window).on(\"scroll\", function() {\n        if ($('#folders-tree-card').hasClass('hidden') === false) {\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    tempScrollTop: $(window).scrollTop()\n                }\n            );\n        }\n    });\n\n\n    // Ensure correct height of folders tree\n    $('#jstree').height(screenHeight - 200);\n\n    // Prepare iCheck format for checkboxes\n    $('input[type=\"checkbox\"].flat-blue, input[type=\"radio\"].flat-blue').iCheck({\n        checkboxClass: 'icheckbox_flat-blue',\n        radioClass: 'iradio_flat-blue'\n    });\n\n    // Prepare some UI elements\n    $('#limited-search').prop('checked', false);\n\n    $(document).on('blur', '#form-item-icon', function() {\n        $('#form-item-icon-show').html('<i class=\"fas '+$(this).val()+'\"></i>');\n    });\n\n    // Manage the password show button\n    // including autohide after a couple of seconds\n    $(document).on('click', '#card-item-pwd-show-button', function() {\n        if ($(this).hasClass('pwd-shown') === false) {\n            $(this).addClass('pwd-shown');\n            // Prepare data to show\n            // Is data crypted?\n            var data = unCryptData($('#hidden-item-pwd').val(), '<?php echo $_SESSION['key']; ?>');\n            if (data !== false && data !== undefined) {\n                $('#hidden-item-pwd').val(\n                    data.password\n                );\n            }\n\n            // Change class and show spinner\n            $('.pwd-show-spinner')\n                .removeClass('far fa-eye')\n                .addClass('fas fa-circle-notch fa-spin text-warning');\n\n            // display raw password\n            $('#card-item-pwd')\n                .text($('#hidden-item-pwd').val())\n                .addClass('pointer_none');\n\n            // log password is shown\n            itemLog(\n                'at_password_shown',\n                store.get('teampassItem').id,\n                $('#card-item-label').text()\n            );\n\n            // Autohide\n            setTimeout(() => {\n                $(this).removeClass('pwd-shown');\n                $('#card-item-pwd')\n                    .html('<?php echo $var['hidden_asterisk']; ?>')\n                    .removeClass('pointer_none');\n                $('.pwd-show-spinner')\n                    .removeClass('fas fa-circle-notch fa-spin text-warning')\n                    .addClass('far fa-eye');\n            }, <?php echo isset($SETTINGS['password_overview_delay']) === true ? $SETTINGS['password_overview_delay'] * 1000 : 4000; ?>);\n        } else {\n            $('#card-item-pwd').html('<?php echo $var['hidden_asterisk']; ?>');\n        }\n    });\n\n\n    // Manage folders action\n    $('.tp-action').click(function() {\n        // SHow user\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?><i class=\"fas fa-circle-notch fa-spin fa-2x ml-3\"></i>');\n\n        if ($(this).data('folder-action') === 'refresh') {\n            // Force refresh\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.jstreeForceRefresh = 1\n                }\n            );\n            if (selectedFolderId !== '') {\n                refreshTree(selectedFolderId, true);\n            } else {\n                refreshTree();\n            }\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.jstreeForceRefresh = 0\n                }\n            );\n            toastr.remove();\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'expand') {\n            $('#jstree').jstree('open_all');\n            toastr.remove();\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'collapse') {\n            $('#jstree').jstree('close_all');\n            toastr.remove();\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'add') {\n            if (debugJavascript === true) console.info('SHOW ADD FOLDER');\n            toastr.remove();\n\n            // Check privileges\n            if (store.get('teampassItem').hasAccessLevel < 20 &&\n                store.get('teampassUser').can_create_root_folder === 0\n            ) {\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Store current view\n            savePreviousView('.form-folder-add');\n\n            // Store last\n            // Show copy form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-add').removeClass('hidden');\n\n            // Prepare some data in the form\n            if (selectedFolder.parent !== undefined && selectedFolder.parent !== '') {\n                $('#form-folder-add-parent').val(selectedFolder.parent.split('_')[1]).change();\n            }\n\n            $('#form-folder-add-label, #form-folder-add-parent').prop('disabled', false);\n\n            $('#form-folder-add-label')\n                .val('')\n                .focus();\n            $('#form-folder-add-icon-selected, #form-folder-add-icon').val('');\n            // Set type of action for the form\n            $('#form-folder-add').data('action', 'add');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'edit') {\n            if (debugJavascript === true) console.info('SHOW EDIT FOLDER');\n            toastr.remove();\n            // Check privileges\n            if (store.get('teampassItem').hasAccessLevel < 20) {\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n            if (debugJavascript === true) console.log(store.get('teampassApplication'));\n\n            // Store current view\n            savePreviousView('.form-folder-add');\n\n            // Show edit form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-add').removeClass('hidden');\n            // Prepare some data in the form\n            $(\"#form-folder-add-parent option[value='\" + store.get('teampassApplication').selectedFolder + \"']\")\n                .prop('disabled', true);\n            $('#form-folder-add-parent').val(store.get('teampassApplication').selectedFolderParentId).change();\n            $(\"#form-folder-add-parent option[value='\" + store.get('teampassApplication').selectedFolderParentId + \"']\")\n                .prop('disabled', false);\n            $('#form-folder-add-label')\n                .val(store.get('teampassApplication').selectedFolderParentTitle)\n                .focus();\n            // is PF 1st level\n            if (store.get('teampassApplication').selectedFolderIsPF === 1 && store.get('teampassApplication').selectedFolderParentId !== 0) {\n                $('#form-folder-add-label, #form-folder-add-parent').prop('disabled', false);\n            } else if (store.get('teampassApplication').userCanEdit === 0) {\n                $('#form-folder-add-label, #form-folder-add-parent').prop('disabled', true);\n            } else {\n                $('#form-folder-add-label, #form-folder-add-parent').prop('disabled', false);\n            }\n\n            $('#form-folder-add-complexicity').val(store.get('teampassItem').folderComplexity).change();\n            $('#form-folder-add-icon')\n                .val(store.get('teampassApplication').selectedFolderIcon);\n            $('#form-folder-add-icon-selected')\n                .val(store.get('teampassApplication').selectedFolderIconSelected);\n            // Set type of action for the form\n            $('#form-folder-add').data('action', 'update');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'copy') {\n            if (debugJavascript === true) console.info('SHOW COPY FOLDER');\n            toastr.remove();\n            // Check privileges\n            if (store.get('teampassItem').hasAccessLevel < 20) {\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Store current view\n            savePreviousView('.form-folder-copy');\n\n            // Show copy form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-copy').removeClass('hidden');\n            // Prepare some data in the form\n            $('#form-folder-copy-source').val(store.get('teampassApplication').selectedFolder).change();\n            //$(\"#form-folder-copy-destination option[value='\"+selectedFolder.id.split('_')[1]+\"']\")\n            //.prop('disabled', true);\n            $('#form-folder-copy-destination').val(0).change();\n            $('#form-folder-copy-label')\n                .val(store.get('teampassApplication').selectedFolderTitle + ' <?php echo strtolower(langHdl('copy')); ?>')\n                .focus();\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'delete') {\n            if (debugJavascript === true) console.info('SHOW DELETE FOLDER');\n            toastr.remove();\n            // Check privileges\n            if (store.get('teampassItem').hasAccessLevel < 30) {\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Store current view\n            savePreviousView('.form-folder-delete');\n\n            // Show copy form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-delete').removeClass('hidden');\n\n            // Prepare some data in the form\n            $('#form-folder-delete-selection').val(store.get('teampassApplication').selectedFolder).change();\n            $('#form-folder-confirm-delete').iCheck('uncheck');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('folder-action') === 'import') {\n            // IMPORT ITEMS\n            if (debugJavascript === true) console.info('SHOW IMPORT ITEMS');\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-folder-import');\n\n\n            // Show import form\n            $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n            $('.form-folder-import').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'new') {\n            if (debugJavascript === true) console.info('SHOW NEW ITEM');\n            toastr.remove();\n            // Store current view\n            savePreviousView();\n\n            // Remove validated class\n            $('#form-item').removeClass('was-validated');\n\n            // Get some info\n            $.when(\n                retPrivileges = getPrivilegesOnItem(store.get('teampassApplication').itemsListFolderId, 0)\n            ).then(function() {\n                if (retPrivileges === false) {\n                    return false;\n                }\n                // If previous item was seen then clean session\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.isNewItem = 1,\n                        teampassItem.id = ''\n                    }\n                );\n\n                // Show Visibility and minimum complexity\n                $('#card-item-visibility').html(store.get('teampassItem').itemVisibility);\n                $('#card-item-minimum-complexity').html(store.get('teampassItem').itemMinimumComplexity);\n\n                // HIde\n                $('.form-item-copy, #folders-tree-card, .columns-position, #form-item-password-options, .form-item-action, #form-item-attachments-zone')\n                    .addClass('hidden');\n                // Destroy editor\n                $('#form-item-description').summernote('destroy');\n\n                // Clean select2 lists\n                $('.select2').val('');\n                /*if ($('.select2') !== null) {if (debugJavascript === true) console.log($('.select2').length)\n                    $('.select2').change();\n                }*/\n                // Do some form cleaning\n                $('.clear-me-val').val('');\n                $('.item-details-card').find('.form-control').val('');\n                $('.clear-me-html').html('');\n                $('.form-item-control').val('');\n                // Show edition form\n                $('.form-item').removeClass('hidden');\n                $('.item-details-card').addClass('hidden');\n                // Force update of simplepassmeter\n                $('#form-item-password').focus();\n                $('#form-item-label').focus();\n                // Prepare editor\n                $('#form-item-description').summernote({\n                    toolbar: [\n                        ['style', ['style']],\n                        ['font', ['bold', 'italic', 'underline', 'strikethrough', 'clear']],\n                        ['fontsize', ['fontsize']],\n                        ['color', ['color']],\n                        ['para', ['ul', 'ol', 'paragraph']],\n                        ['insert', ['link', 'picture']],\n                        //['height', ['height']],\n                        ['view', ['codeview']]\n                    ],\n                    codeviewFilter: true,\n                    codeviewIframeFilter: true\n                });\n\n                // Set folder\n                $('#form-item-folder').val(selectedFolderId).change();\n                // Select tab#1\n                $('#form-item-nav-pills li:first-child a').tab('show');\n                // Preselect\n                $('#pwd-definition-size').val(12);\n                // Set type of action\n                $('#form-item-button-save').data('action', 'new_item');\n                // Does this folder contain Custom Fields\n                if (store.get('teampassItem').hasCustomCategories.length > 0) {\n                    $('#form-item-field').removeClass('hidden');\n                    $.each(store.get('teampassItem').hasCustomCategories, function(i, category) {\n                        $('#form-item-category-' + category).removeClass('hidden');\n                    })\n                } else {\n                    $('#form-item-field, .form-item-category').addClass('hidden');\n                }\n                \n                // Add track-change class\n                //$('#form-item-label, #form-item-description, #form-item-login, #form-item-password, #form-item-email, #form-item-url, #form-item-folder, #form-item-restrictedto, #form-item-tags, #form-item-anyoneCanModify, #form-item-deleteAfterShown, #form-item-deleteAfterDate, #form-item-anounce, .form-item-field-custom').addClass('track-change');\n\n                // Update variable\n                userDidAChange = false;\n\n                toastr.remove();\n            });\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'edit') {\n            if (debugJavascript === true) console.info('SHOW EDIT ITEM');\n            $.when(\n                getPrivilegesOnItem(selectedFolderId, 1)\n            ).then(function() {\n                // Is user allowed\n                if (store.get('teampassItem').item_rights < 20) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('error_not_allowed_to'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n\n                // Store current view\n                savePreviousView();\n\n                // Store not a new item\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.isNewItem = 0\n                    }\n                );\n\n                // Remove validated class\n                $('#form-item').removeClass('was-validated');\n\n                // Now manage edtion\n                showItemEditForm(selectedFolderId);\n            });\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'copy') {\n            if (debugJavascript === true) console.info('SHOW COPY ITEM');\n            toastr.remove();\n            // Store current view\n            savePreviousView('.form-item-copy');\n\n            if (store.get('teampassItem').user_can_modify === 1) {\n                // Show copy form\n                $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n                $('.form-item-copy, .item-details-card-menu').removeClass('hidden');\n                // Prepare some data in the form\n                $('#form-item-copy-new-label').val($('#form-item-label').val());\n                $('#form-item-copy-destination').val($('#form-item-folder').val()).change();\n            } else {\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n            }\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'delete') {\n            // Is user allowed\n            var levels = [50, 70];\n            if (levels.includes(store.get('teampassItem').item_rights) === false) {\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-item-delete');\n\n            if (debugJavascript === true) console.info('SHOW DELETE ITEM');\n            if (store.get('teampassItem').user_can_modify === 1) {\n                // Show delete form\n                $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n                $('.form-item-delete, .item-details-card-menu').removeClass('hidden');\n            } else {\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n            }\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'share') {\n            if (debugJavascript === true) console.info('SHOW SHARE ITEM');\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-item-share');\n\n            // Show share form\n            $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n            $('.form-item-share, .item-details-card-menu').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'notify') {\n            if (debugJavascript === true) console.info('SHOW NOTIFY ITEM');\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-item-notify');\n\n            $('#form-item-notify-checkbox').iCheck('uncheck');\n            // Show notify form\n            $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n            $('.form-item-notify, .item-details-card-menu').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'otv') {\n            if (debugJavascript === true) console.info('SHOW OTV ITEM');\n            toastr.remove();\n\n            // Store current view\n            savePreviousView('.form-item-otv');\n\n            // Generate link\n            prepareOneTimeView();\n\n            $('#form-item-otv-link').val('');\n            // Show notify form\n            $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n            $('.form-item-otv, .item-details-card-menu').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        } else if ($(this).data('item-action') === 'server') {\n            if (debugJavascript === true) console.info('SHOW SERVER UPDATE ITEM');\n            toastr.remove();\n\n            // Is user allowed\n            var levels = [50, 70];\n            if (levels.includes(store.get('teampassItem').item_rights) === false) {\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_not_allowed_to'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Store current view\n            savePreviousView('.form-item-server');\n\n            $('#form-item-notify-checkbox').iCheck('uncheck');\n            // Show notify form\n            $('.form-item, .item-details-card, .form-item-action').addClass('hidden');\n            $('.form-item-server, .item-details-card-menu').removeClass('hidden');\n\n            //\n            // > END <\n            //\n        }\n\n        return false;\n    });\n\n    /**\n     * Saves the current view of user\n     */\n    function savePreviousView(newElement = '') {\n        var element = '';\n        if ($('#folders-tree-card').hasClass('hidden') === false) {\n            element = '#folders-tree-card';\n        } else if ($('.form-item').hasClass('hidden') === false) {\n            element = '.form-item';\n        } else if ($('.item-details-card-menu').hasClass('hidden') === false) {\n            element = '.item-details-card';\n        }\n        \n        if (debugJavascript === true) {console.log('>>> ' + element + ' -- ' + newElement);}\n\n        if (element === '.item-details-card') element = '#folders-tree-card';\n\n        // Store current view\n        store.update(\n            'teampassUser',\n            function(teampassUser) {\n                teampassUser.previousView = element;\n            }\n        );\n\n        // Store the new one to display\n        store.update(\n            'teampassUser',\n            function(teampassUser) {\n                teampassUser.currentView = newElement;\n            }\n        );\n    }\n\n\n    $('.but-back').click(function() {\n        userDidAChange = false;\n        if ($(this).hasClass('but-back-to-item') === false) {\n            // Is this form the edition one?\n            if ($(this).hasClass('item-edit') === true && userUploadedFile === true) {\n                // Do some operation such as cancel file upload\n                var data = {\n                    'item_id': store.get('teampassItem').id,\n                }\n\n                $.post(\n                    \"sources/items.queries.php\", {\n                        type: 'delete_uploaded_files_but_not_saved',\n                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'delete_uploaded_files_but_not_saved');\n                        if (debugJavascript === true) console.log(data);\n                    }\n                );\n            }\n\n            // Clear pickfiles div\n            $('#form-item-upload-pickfilesList').html('');\n\n            // Hide all\n            $('.form-item, .form-item-action, .form-folder-action, .item-details-card, #folders-tree-card, .columns-position, #item-details-card-categories, #form-item-upload-pickfilesList, #card-item-expired')\n                .addClass('hidden');\n\n            // Show expected one\n            $(store.get('teampassUser').previousView).removeClass('hidden');\n\n            closeItemDetailsCard();\n        } else {\n            $(store.get('teampassUser').previousView).removeClass('hidden');\n            $(store.get('teampassUser').currentView).addClass('hidden');\n        }\n        $('.but-prev-item, .but-next-item').addClass('hidden').text('');\n    });\n\n\n    // Quit item details card back to items list\n    $('.but-back-to-list').click(function() {\n        closeItemDetailsCard();\n    });\n\n\n\n    // Manage if change is performed by user\n    $('#form-item .form-item-control')\n        .on('change', function() {\n            if (requestRunning === false) {\n                userDidAChange = true;\n                if (debugJavascript === true) console.log('User did a change on #form-item > ' + userDidAChange + \" - Element \" + $(this).attr('id'));\n                //$(this).attr('data-change-ongoing', true);\n            }\n        })\n        .on('ifToggled', function() {\n            if (requestRunning === false) {\n                userDidAChange = true;\n                if (debugJavascript === true) console.log('User did a change on ifToggled > ' + userDidAChange);\n                //$(this).attr('data-change-ongoing', true);\n            }\n        });\n\n    /**\n     * Click on perform IMPORT\n     */\n    $(document).on('click', '#form-item-import-perform', function() {\n        if (debugJavascript === true) console.log('START IMPORT');\n    });\n\n\n    /**\n     * Click on ITEM REQUEST ACCESS\n     */\n    $(document).on('click', '.fa-clickable-access-request', function() {\n        // Store current view\n        savePreviousView();\n\n        // Adapt the form\n        $('#form-item-request-access-label')\n            .html($(this).closest('.list-item-description').find('.list-item-row-description').text());\n\n        // Store current item ID\n        var selectedItemId = $(this).closest('.list-item-row').data('item-id');\n        store.update(\n            'teampassItem',\n            function(teampassItem) {\n                teampassItem.id = selectedItemId;\n            }\n        );\n\n        // Show user\n        $('.form-item, .item-details-card, .form-item-action, #folders-tree-card, .columns-position').addClass('hidden');\n        $('.form-item-request-access').removeClass('hidden');\n    });\n\n    /**\n     * Send an access request to author\n     */\n    $(document).on('click', '#form-item-request-access-perform', function() {\n        // No reason is provided\n        if ($('#form-item-request-access-reason').val() === '') {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_provide_reason'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        var data = {\n            'id': store.get('teampassItem').id,\n            'email': DOMPurify.sanitize($('#form-item-request-access-reason').val()),\n        }\n        // NOw send the email\n        $.post(\n            \"sources/items.queries.php\", {\n                type: 'send_request_access',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'send_request_access');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Change view\n                    $('.form-item-request-access').addClass('hidden');\n                    $('#folders-tree-card, .columns-position').removeClass('hidden');\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n\n        scrollBackToPosition();\n    });\n\n\n    /**\n     * Show/Hide the Password generation options\n     */\n    $('#item-button-password-showOptions').click(function() {\n        if ($('#form-item-password-options').hasClass('hidden') === true) {\n            $('#form-item-password-options').removeClass('hidden');\n        } else {\n            $('#form-item-password-options').addClass('hidden');\n        }\n    });\n\n\n\n    /**\n     * Adapt the top rules of item form on change of folders\n     */\n    $('#form-item-folder').change(function() {\n        if ($(this).val() !== null && store.get('teampass-folders') !== undefined) {\n            if (debugJavascript === true) {\n                console.log('teampass-folders');\n                console.log(store.get('teampass-folders'))\n            }\n            var folders = JSON.parse(store.get('teampass-folders'));\n            $('#card-item-visibility').html(folders[$(this).val()].visibilityRoles);\n            $('#card-item-minimum-complexity').html(folders[$(this).val()].complexity.text);\n        }\n\n    });\n\n    /**\n     * NOTIFY - Perform save\n     */\n    $('#form-item-notify-perform').click(function() {\n        var form = $('#form-item-notify');\n\n\n        var data = {\n            'notification_status': $('#form-item-notify-checkbox').is(':checked') === true ? 1 : 0,\n            'item_id': store.get('teampassItem').id,\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'save_notification_status',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'save_notification_status');\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Change the icon for Notification\n                    if ($('#form-item-notify-checkbox').is(':checked') === true) {\n                        $('#card-item-misc-notification')\n                            .html('<span class=\"far fa-bell infotip text-success\" title=\"<?php echo langHdl('notification_engaged'); ?>\"></span>');\n                    } else {\n                        $('#card-item-misc-notification')\n                            .html('<span class=\"far fa-bell-slash infotip text-warning\" title=\"<?php echo langHdl('notification_not_engaged'); ?>\"></span>');\n                    }\n\n                    // Show/hide forms\n                    $('.item-details-card').removeClass('hidden');\n                    $('.form-item-notify').addClass('hidden');\n\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n                    // Clear\n                    $('#form-item-notify-checkbox').iCheck('uncheck');\n                }\n            }\n        );\n    });\n\n\n\n    /**\n     * SHARE - validate the email\n     */\n    $('#form-item-share-perform').click(function() {\n        var form = $('#form-item-share');\n\n        if (form[0].checkValidity() === false) {\n            form.addClass('was-validated');\n            return false;\n        }\n\n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Prepare data\n        var data = {\n            'id': store.get('teampassItem').id,\n            'receipt': DOMPurify.sanitize($('#form-item-share-email').val()),\n            'cat': 'share_this_item',\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'send_email',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'send_email');\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $('.item-details-card').removeClass('hidden');\n                    $('.form-item-share').addClass('hidden');\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n                    // Clear\n                    $('#form-item-share-email').val('');\n                }\n            }\n        );\n    });\n\n\n    /**\n     * DELETE - recycle item\n     */\n    $('#form-item-delete-perform').click(function() {\n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Force user did a change to false\n        userDidAChange = false;\n        userUploadedFile = false;\n\n        var data = {\n            'item_id': store.get('teampassItem').id,\n            'folder_id': selectedFolderId,\n            'label': DOMPurify.sanitize($('#form-item-copy-new-label').val()),\n            'access_level': store.get('teampassItem').hasAccessLevel,\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'delete_item',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'delete_item');\n\n                if (typeof data !== 'undefined' && data.error !== true) {\n                    $('.form-item-action, .item-details-card-menu').addClass('hidden');\n                    // Warn user\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    // Refresh tree\n                    refreshTree(selectedFolderId, true);\n                    // Load list of items\n                    ListerItems(selectedFolderId, '', 0);\n                    // Close\n                    closeItemDetailsCard();\n                } else {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * NOTIFY - save status\n     */\n    $('#form-item-share-perform').click(function() {\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'notify_user_on_item_change',\n                id: store.get('teampassItem').id,\n                value: $('#form-item-anyoneCanModify').is(':checked') === true ? 1 : 0,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                if (data[0].error === '') {\n                    $('.form-item, .item-details-card, .form-item-action').removeClass('hidden');\n                    $('.form-item-share, .item-details-card-menu').addClass('hidden');\n                    // Warn user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    // Clear\n                    $('#form-item-anyoneCanModify').attr('checked', '');\n                } else {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                }\n            },\n            'json'\n        );\n    });\n\n\n    /**\n     * COPY - perform copy item\n     */\n    $('#form-item-copy-perform').click(function() {\n        // Do check\n        if ($('#form-item-copy-new-label').val() === '') {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Show cog\n        toastr.remove();\n        toastr.info('<?php echo langHdl('item_copying'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Force user did a change to false\n        userDidAChange = false;\n        userUploadedFile = false;\n\n        var data = {\n            'item_id': store.get('teampassItem').id,\n            'source_id': selectedFolderId,\n            'dest_id': $('#form-item-copy-destination').val(),\n            'new_label': DOMPurify.sanitize($('#form-item-copy-new-label').val()),\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'copy_item',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n\n                if (typeof data !== 'undefined' && data.error !== true) {\n                    // Warn user\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    // Refresh tree\n                    refreshTree(parseInt($('#form-item-copy-destination').val()), true);\n                    // Load list of items\n                    ListerItems(parseInt($('#form-item-copy-destination').val()), '', 0);\n\n                    // Reopen Item details form\n                    Details(\n                        data.new_id,\n                        'show',\n                        true\n                    );\n                    \n                    // Close\n                    $('.item-details-card').removeClass('hidden');\n                    $('.form-item-copy').addClass('hidden');\n                } else {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * SERVER - perform server update\n     */\n    $('#form-item-server-perform').click(function() {\n        // Decide what action is performing the user\n\n        if ($('#tab-one-shot').hasClass('active') === true) {\n            // Do check\n            if ($('#form-item-server-login').val() === '' ||\n                $('#form-item-server-old-password').val() === '' ||\n                $('#form-item-server-password').val() === ''\n            ) {\n                toastr.error(\n                    '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Show cog\n            toastr.remove();\n            toastr.info(\n                '<i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>',\n            );\n\n            // Force user did a change to false\n            userDidAChange = false;\n            userUploadedFile = false;\n\n            var data = {\n                'item_id': store.get('teampassItem').id,\n                'new_pwd': DOMPurify.sanitize($('#form-item-server-password').val()),\n                'ssh_root': DOMPurify.sanitize($('#form-item-server-login').val()),\n                'ssh_pwd': DOMPurify.sanitize($('#form-item-server-old-password').val()),\n                'user_id': <?php echo $_SESSION['user_id']; ?>,\n            }\n\n            $.post(\n                \"sources/utils.queries.php\", {\n                    type: \"server_auto_update_password\",\n                    data: prepareExchangedData(data, \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                    if (debugJavascript === true) console.log(data);\n                    //check if format error\n                    if (data.error === true) {\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Warn user\n                        toastr.success(\n                            '<?php echo langHdl('success'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n\n                        // Info\n                        $(\"#form-item-server-status\")\n                            .html(\"<?php echo langHdl('done'); ?> \" + data.text)\n                            .removeClass('hidden');\n                    }\n                }\n            );\n        } else if ($('#tab-scheduled').hasClass('active') === true) {\n            $.post(\n                \"sources/utils.queries.php\", {\n                    type: \"server_auto_update_password_frequency\",\n                    id: store.get('teampassItem').id,\n                    freq: $('#form-item-server-cron-frequency').val(),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    if (data[0].error != \"\") {\n                        toastr.remove();\n                        toastr.error(\n                            data[0].error,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        $('#form-item-server-cron-frequency').val(0).change();\n                        toastr.success(\n                            '<?php echo langHdl('success'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                },\n                \"json\"\n            );\n        }\n    });\n\n\n    /**\n     * SUGGESTION - perform new suggestion on item\n     */\n    $('#form-item-suggestion-perform').click(function() {\n        var form = $('#form-item-suggestion');\n\n        if (form[0].checkValidity() === false) {\n            form.addClass('was-validated');\n\n            // Send alert to user\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('form_presents_inconsistencies'); ?>',\n                '', {\n                    timeOut: 10000,\n                    progressBar: true\n                }\n            );\n\n            return false;\n        }\n\n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Force user did a change to false\n        userDidAChange = false;\n        userUploadedFile = false;\n\n        var data = {\n            'label': DOMPurify.sanitize($('#form-item-suggestion-label').val()),\n            'login': DOMPurify.sanitize($('#form-item-suggestion-login').val()),\n            'password': DOMPurify.sanitize($('#form-item-suggestion-password').val()),\n            'email': DOMPurify.sanitize($('#form-item-suggestion-email').val()),\n            'url': DOMPurify.sanitize($('#form-item-suggestion-url').val()),\n            'description': DOMPurify.sanitize($('#form-item-suggestion-description').summernote('code'), {USE_PROFILES: {html: true}}),\n            'comment': DOMPurify.sanitize($('#form-item-suggestion-comment').val(), {USE_PROFILES: {html: true}}),\n            'folder_id': selectedFolderId,\n            'item_id': store.get('teampassItem').id\n        }\n\n        // Launch action\n        $.post(\n            'sources/items.queries.php', {\n                type: 'suggest_item_change',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data//decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'suggest_item_change');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Warn user\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    // Clear form\n                    $('.form-item-suggestion').html('');\n\n                    // Collapse form\n                    //$('.card-item-extra').collapse('toggle');\n                }\n            }\n        );\n    });\n\n\n    /**\n     * FOLDER NEW - Add a new folder\n     */\n    $('#form-folder-add-perform').click(function() {\n        var form = $('#form-folder-add');\n        if (debugJavascript === true) {\n            console.log(form[0]);\n            console.log(form[0].checkValidity());\n        }\n        if (form[0].checkValidity() === false) {\n            form.addClass('was-validated');\n\n            // Send alert to user\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('form_presents_inconsistencies'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            return false;\n        }\n\n        // Error if folder text is only numeric\n        if (/^\\d+$/.test($('#form-folder-add-label').val())) {\n            $('#form-folder-add-label').addClass('is-invalid');\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_only_numbers_in_folder_name'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            return false;\n        }\n\n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Force user did a change to false\n        userDidAChange = false;\n        userUploadedFile = false;\n\n        var data = {\n            'title': DOMPurify.sanitize($('#form-folder-add-label').val()),\n            'parentId': $('#form-folder-add-parent option:selected').val(),\n            'complexity': $('#form-folder-add-complexicity option:selected').val(),\n            //'access_rights_strategy': $('#form-folder-add-rights option:selected').val(),\n            'icon': $('#form-folder-add-icon').val(),\n            'iconSelected': $('#form-folder-add-icon-selected').val(),\n            'id': selectedFolderId,\n        }\n        if (debugJavascript === true) console.log(data);\n\n        // Launch action\n        $.post(\n            'sources/folders.queries.php', {\n                type: $('#form-folder-add').data('action') + '_folder',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data//decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'folders.queries.php', $('#form-folder-add').data('action') + '_folder');\n                if (debugJavascript === true) {\n                    console.log(data);\n                }\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Refresh list of folders\n                    refreshVisibleFolders(true);\n                    if ($('#form-folder-add').data('action') === 'add') {\n                        // Refresh tree\n                        refreshTree(data.newId, true);\n                        // Refresh list of items inside the folder\n                        ListerItems(data.newId, '', 0);\n                    } else {\n                        // Refresh tree\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.jstreeForceRefresh = 1;\n                            }\n                        );\n                        refreshTree(selectedFolderId, true);\n                        // Refresh list of items inside the folder\n                        ListerItems(selectedFolderId, '', 0);\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.jstreeForceRefresh = 0;\n                            }\n                        );\n                    }\n                    // Back to list\n                    closeItemDetailsCard();\n                    // Warn user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n                // Enable the parent in select\n                if (selectedFolder.id !== undefined) {\n                    $(\"#form-folder-add-parent option[value='\" + selectedFolder.id.split('_')[1] + \"']\")\n                        .prop('disabled', false);\n                }\n            }\n        );\n    });\n\n\n    /**\n     * FOLDER DELETE - Delete an existing folder\n     */\n    $('#form-folder-delete-perform').click(function() {\n        // Do check\n        if ($('#form-folder-confirm-delete').is(':checked') === false) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('please_confirm'); ?>',\n                '',\n                {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        } else if ($('#form-folder-delete-selection option:selected').text() === '<?php echo $_SESSION['login']; ?>') {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_not_allowed_to'); ?>',\n                '',\n                {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Is a folder selected\n        if ($('#form-folder-delete-selection option:selected').val() === '') {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('please_select_a_folder'); ?>',\n                '',\n                {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        \n        // Ensure Root is not selected\n        } else if (parseInt($('#form-folder-delete-selection option:selected').val()) === 0) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('please_select_a_folder'); ?>',\n                '',\n                {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n        \n        // Show cog\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n\n        var selectedFolders = [],\n            data = {\n                'selectedFolders': [$('#form-folder-delete-selection option:selected').val()]\n            }\n        if (debugJavascript === true) console.log(data)\n\n        // Launch action\n        $.post(\n            'sources/folders.queries.php', {\n                type: 'delete_folders',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'folders.queries.php', 'delete_folders');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Refresh list of folders\n                    refreshVisibleFolders(true);\n                    // Refresh tree\n                    refreshTree(data.parent_id, true);\n                    // Refresh list of items inside the folder\n                    ListerItems(data.parent_id, '', 0);\n                    // Back to list\n                    closeItemDetailsCard();\n                    // Warn user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n\n                $('#form-folder-confirm-delete').iCheck('uncheck');\n            }\n        );\n    });\n\n\n    /**\n     * FOLDER COPY - Copy an existing folder\n     */\n    $('#form-folder-copy-perform').click(function() {\n        // Do check\n        if ($(\"#form-folder-copy-source\").val() === \"\" || $(\"#form-folder-copy-destination\").val() === \"\") {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_must_enter_all_fields'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        } else if ($(\"#form-folder-copy-source\").val() === $(\"#form-folder-copy-destination\").val()) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_source_and_destination_are_equal'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Show cog\n        toastr.remove();\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        var data = {\n            'source_folder_id': $('#form-folder-copy-source option:selected').val(),\n            'target_folder_id': $('#form-folder-copy-destination option:selected').val(),\n            'folder_label': DOMPurify.sanitize($('#form-folder-copy-label').val()),\n        }\n\n        // Launch action\n        $.post(\n            'sources/folders.queries.php', {\n                type: 'copy_folder',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'folders.queries.php', 'copy_folder');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Refresh list of folders\n                    refreshVisibleFolders(true);\n                    // Refresh tree\n                    refreshTree($('#form-folder-copy-destination option:selected').val(), true);\n                    // Refresh list of items inside the folder\n                    ListerItems($('#form-folder-copy-destination option:selected').val(), '', 0);\n                    // Back to list\n                    closeItemDetailsCard();\n                    // Warn user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('success'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n    $(document).on('change', '#form-folder-copy-source', function() {\n        $('#form-folder-copy-label')\n            .val($('#form-folder-copy-source option:selected').text()\n                .substring(0, $('#form-folder-copy-source option:selected').text().lastIndexOf('[')).trim() +\n                ' <?php echo strtolower(langHdl('copy')); ?>');\n    });\n\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function closeItemDetailsCard() {\n        if (debugJavascript === true) console.log('CLOSE - user did a change? ' + userDidAChange + \" - User previous view: \" + store.get('teampassUser').previousView);\n        if (userDidAChange === true) {\n            toastr\n                .warning(\n                    '<?php echo langHdl('changes_ongoing'); ?><br>' +\n                    '<button type=\"button\" class=\"btn clear\" id=\"discard-changes\"><?php echo langHdl('yes'); ?></button>' +\n                    '<button type=\"button\" class=\"btn clear ml-2\" id=\"keep-changes\"><?php echo langHdl('no'); ?></button>',\n                    '<?php echo langHdl('caution'); ?>', {\n                        closeButton: true\n                    }\n                );\n            $(document).on('click', '#discard-changes', function() {\n                userDidAChange = false;\n                //$('.form-item-control').attr('data-change-ongoing', \"\");\n                closeItemDetailsCard();\n            });\n        } else {\n            if (store.get('teampassUser').previousView === '.item-details-card' &&\n                $('.item-details-card').hasClass('hidden') === false\n            ) {\n                $('.item-details-card').removeClass('hidden');\n                $('#folders-tree-card, .columns-position, .form-item-action, .form-item, .form-folder-action, #card-item-expired')\n                    .addClass('hidden');\n\n                // Force previous view to folders list\n                store.update(\n                    'teampassUser',\n                    function(teampassUser) {\n                        teampassUser.previousView = '#folders-tree-card';\n                    }\n                );\n            } else {\n                if (store.get('teampassUser').previousView === '.item-details-card') {\n                    // Force previous view to folders list\n                    store.update(\n                        'teampassUser',\n                        function(teampassUser) {\n                            teampassUser.previousView = '#folders-tree-card';\n                        }\n                    );\n                    // Reopen Item details form\n                    Details(\n                        store.get('teampassItem').id,\n                        'show',\n                        true\n                    );\n\n                    return false;\n                }\n                if (store.get('teampassUser').previousView === '#folders-tree-card' ||\n                    $('.item-details-card').hasClass('hidden') === false\n                ) {\n                    $('#folders-tree-card, .columns-position').removeClass('hidden');\n                    $('.item-details-card, .form-item-action, .form-item, .form-folder-action, #card-item-expired')\n                        .addClass('hidden');\n                } else {\n                    // Hide all\n                    $('.form-item, .form-item-action, .form-folder-action, .item-details-card, #folders-tree-card, #card-item-expired')\n                        .addClass('hidden');\n\n                    // Show expected one\n                    $(store.get('teampassUser').previousView).removeClass('hidden');\n                }\n\n                // Do some form cleaning\n                $('.clear-me-val, .form-item-control').val('');\n                $('.item-details-card').find('.form-control').val('');\n                $('.clear-me-html, .card-item-field-value').html('');\n                $('.form-check-input').attr('checked', '');\n                //$('.card-item-extra').collapse();\n                $('.collapse').removeClass('show');\n                $('.to_be_deleted').remove();\n                $('#card-item-attachments, #card-item-history').html('');\n                $('#card-item-attachments-badge').html('<?php echo langHdl('none'); ?>');\n\n                // Move back fields\n                $('.fields-to-move')\n                    .detach()\n                    .appendTo('#card-item-fields');\n\n                // Ensure the form is correct\n                $('#list-group-item-main, #item-details-card-categories')\n                    .children('.list-group')\n                    .removeClass('hidden');\n\n                // SHow save button in card\n                //$('#form-item-buttons').removeClass('sticky-footer');\n\n                // Destroy editors\n                $('#form-item-description').summernote('destroy');\n                $('#form-item-suggestion-description').summernote('destroy');\n\n                // Show loading\n                $('.overlay').removeClass('hidden');\n\n                // Collapse accordion\n                //$('.collapseme').addClass('collapsed-card');\n\n                // Restore scroll position\n                $(window).scrollTop(userScrollPosition);\n\n                userDidAChange = false;                \n                //$('.form-item-control').attr('data-change-ongoing', \"\");\n\n                // Enable the parent in select\n                if (selectedFolder.id !== undefined) {\n                    $(\"#form-folder-add-parent option[value='\" + selectedFolder.id.split('_')[1] + \"']\")\n                        .prop('disabled', false);\n                }\n            }\n            if (debugJavascript === true) console.log('Edit for closed');\n        }\n\n\n\n        // Scroll back to position\n        scrollBackToPosition();\n    }\n\n\n    /**\n     * Click on button with class but-navigate-item\n     */\n    $(document)\n        .on('click', '.but-navigate-item', function() {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Load item info\n            Details(\n                $(this).hasClass('but-prev-item') === true ? $('#list-item-row_' + $(this).attr('data-prev-item-id')) : $('#list-item-row_' + $(this).attr('data-next-item-id')),\n                'show'\n            );\n\n            $('.but-navigate-item').addClass('hidden');\n        });\n\n\n    /**\n     * Click on item\n     */\n    $(document)\n        .on('click', '.list-item-clicktoshow', function() {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Load item info\n            Details($(this).closest('tr'), 'show');\n        })\n        .on('click', '.list-item-clicktoedit', function() {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            if (debugJavascript === true) console.log('EDIT ME');\n            // Set type of action\n            $('#form-item-button-save').data('action', 'update_item');\n            \n            // Load item info\n            Details($(this).closest('tr'), 'edit');\n        });\n\n    /**\n     *  Manage mini icons on mouse over\n     */\n    $(document)\n        .on('mouseenter', '.list-item-row', function() {\n            $(this).find(\".list-item-actions\").removeClass('hidden');\n        })\n        .on('mouseleave', '.list-item-row', function() {\n            $(this).find(\".list-item-actions\").addClass('hidden');\n        });\n\n    $(document)\n        .on('change', '.form-check-input-template', function() {\n            $('.form-check-input-template').not(this).prop('checked', false);\n            userDidAChange = true;\n            if (debugJavascript === true) console.log('User did a change on .form-check-input-template > ' + userDidAChange);\n        });\n\n    $('.form-check-input-template').on('ifChecked', function() {\n        $('.form-check-input-template').not(this).iCheck('uncheck');\n        userDidAChange = true;\n        if (debugJavascript === true) console.log('User did a change on .form-check-input-template > ' + userDidAChange);\n        //$('.form-check-input-template').attr('data-change-ongoing', true);;\n    });\n\n    /**\n     * Manage change of color\n     */\n    $(document)\n        .on('mouseenter', '.fa-clickable', function() {\n            $(this).addClass('text-info');\n        })\n        .on('mouseleave', '.fa-clickable', function() {\n            $(this).removeClass('text-info');\n        });\n\n    $('#form-item-label').change(function() {\n        $('#form-item-title').html($(this).val());\n    });\n\n    /**\n     * Make the item favourite by clicking on icon\n     */\n    $(document)\n        .on('click', '.item-favourite', function() {\n            if (quick_icon_query_status === true) {\n                quick_icon_query_status = false;\n                var elem = $(this);\n\n                //Send query\n                toastr.remove();\n                toastr.info(\n                    '<?php echo langHdl('success'); ?>',\n                    '', {\n                        timeOut: 1000\n                    }\n                );\n\n                var data = {\n                    item_id: $(this).data('item-id'),\n                    action: $(this).data('item-favourited'),\n                }\n\n                console.log(data)\n\n                $.post('sources/items.queries.php', {\n                        type: 'action_on_quick_icon',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(ret) {\n                        //change quick icon\n                        if (elem.data('item-favourited') === 0) {\n                            $(elem)\n                                .html('<span class=\"fa-stack fa-clickable item-favourite pointer infotip mr-2\" title=\"<?php echo langHdl('unfavorite'); ?>\" data-item-id=\"' + elem.item_id + '\" data-item-favourited=\"1\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-star fa-stack-1x fa-inverse text-warning\"></i></span>');\n                        } else {\n                            $(elem)\n                                .html('<span class=\"fa-stack fa-clickable item-favourite pointer infotip mr-2\" title=\"<?php echo langHdl('favorite'); ?>\" data-item-id=\"' + elem.item_id + '\" data-item-favourited=\"0\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-star fa-stack-1x fa-inverse\"></i></span>');\n                        }\n\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('success'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                        quick_icon_query_status = true;\n                    }\n                );\n            }\n        });\n\n    // Click to reaveal password\n    $('#item-button-password-show')\n        .mouseup(function() {\n            $('#form-item-password').attr('type', 'password');\n        })\n        .mousedown(function() {\n            $('#form-item-password').attr('type', 'text');\n        });\n    $('.btn-no-click')\n        .click(function(e) {\n            e.preventDefault();\n        });\n\n\n\n    // show password during longpress\n    var mouseStillDown = false;\n    $('.item-details-card').on('mousedown', '.unhide_masked_data', function(event) {\n            mouseStillDown = true;\n            showPwdContinuous();\n        })\n        .on('mouseup', '.unhide_masked_data', function(event) {\n            mouseStillDown = false;\n            showPwdContinuous();\n        })\n        .on('mouseleave', '.unhide_masked_data', function(event) {\n            mouseStillDown = false;\n            showPwdContinuous();\n        });\n    var showPwdContinuous = function() {\n        if (mouseStillDown === true) {\n            // Prepare data to show\n            // Is data crypted?\n            var data = unCryptData($('#hidden-item-pwd').val(), '<?php echo $_SESSION['key']; ?>');\n            if (data !== false && data !== undefined) {\n                $('#hidden-item-pwd').val(\n                    data.password\n                );\n            }\n\n            $('#card-item-pwd')\n                .html(\n                    '<span style=\"cursor:none;\">' +\n                    $('#hidden-item-pwd').val()\n                    .replace(/</g, '&lt;')\n                    .replace(/>/g, '&gt;') +\n                    '</span>'\n                );\n\n            setTimeout('showPwdContinuous(\"card-item-pwd\")', 50);\n            // log password is shown\n            if ($('#card-item-pwd').hasClass('pwd-shown') === false) {\n                itemLog(\n                    'at_password_shown',\n                    store.get('teampassItem').id,\n                    $('#card-item-label').text()\n                );\n                $('#card-item-pwd').addClass('pwd-shown');\n            }\n        } else {\n            $('#card-item-pwd')\n                .html('<?php echo $var['hidden_asterisk']; ?>')\n                .removeClass('pwd-shown');\n        }\n    };\n\n    // Fields - show masked field\n    var selectedElement;\n    $('.item-details-card').on('mousedown', '.replace-asterisk', function(event) {\n            mouseStillDown = true;\n            selectedElement = $(this);\n            showContinuousMasked();\n        })\n        .on('mouseup', '.replace-asterisk', function(event) {\n            mouseStillDown = false;\n        })\n        .on('mouseleave', '.replace-asterisk', function(event) {\n            mouseStillDown = false;\n        });\n    var showContinuousMasked = function() {\n        if (mouseStillDown) {\n            $(selectedElement)\n                .text($('#hidden-card-item-field-value-' + selectedElement.data('field-id')).val());\n\n            setTimeout('showContinuousMasked()', 50);\n        } else {\n            $(selectedElement).html('<?php echo $var['hidden_asterisk']; ?>');\n        }\n    };\n\n\n    /**\n     * Launch the items search\n     */\n    $('#find_items').bind('keypress', function(e) {\n        var code = e.keyCode || e.which;\n        if (code == 13) {\n            searchItems($(this).val());\n        }\n    });\n\n    $('#find_items_button').click(function() {\n        if ($('#find_items').val() !== '') {\n            searchItems($('#find_items').val());\n        }\n    });\n\n\n    // Password strength\n    var pwdOptions = {};\n    pwdOptions = {\n        common: {\n            zxcvbn: true,\n            debug: false,\n            minChar: 4,\n            onScore: function (options, word, totalScoreCalculated) {\n                if (word.length === 20 && totalScoreCalculated < options.ui.scores[1]) {\n                    // Score doesn't meet the score[1]. So we will return the min\n                    // numbers of points to get that score instead.\n                    return options.ui.score[1]\n                }\n                $(\"#form-item-password-complex\").val(totalScoreCalculated);\n                return totalScoreCalculated;\n            },\n            usernameField: \"#form-item-login\",\n        },\n        rules: {},\n        ui: {\n            colorClasses: [\"text-danger\", \"text-danger\", \"text-danger\", \"text-warning\", \"text-warning\", \"text-success\"],\n            showPopover: false,\n            showStatus: true,\n            showErrors: false,\n            showVerdictsInsideProgressBar: true,\n            container: \"#tab_1\",\n            viewports: {\n                progress: \"#form-item-password-strength\",\n                score: \"#form-item-password-strength\"\n            },\n            scores: [<?php echo TP_PW_STRENGTH_1;?>, <?php echo TP_PW_STRENGTH_2;?>, <?php echo TP_PW_STRENGTH_3;?>, <?php echo TP_PW_STRENGTH_4;?>, <?php echo TP_PW_STRENGTH_5;?>],\n        },\n        i18n : {\n            t: function (key) {\n                var phrases = {\n                    weak: '<?php echo langHdl('complex_level1'); ?>',\n                    normal: '<?php echo langHdl('complex_level2'); ?>',\n                    medium: '<?php echo langHdl('complex_level3'); ?>',\n                    strong: '<?php echo langHdl('complex_level4'); ?>',\n                    veryStrong: '<?php echo langHdl('complex_level5'); ?>'\n                };\n                var result = phrases[key];\n\n                return result === key ? '' : result;\n            }\n        }\n    };\n    $('#form-item-password').pwstrength(pwdOptions);\n    \n\n\n    /**\n     * PLUPLOAD\n     */\n    var uploader_attachments = new plupload.Uploader({\n        runtimes: 'html5,flash,silverlight,html4',\n        browse_button: 'form-item-attach-pickfiles',\n        container: 'form-item-upload-zone',\n        max_file_size: '<?php\n            if (strrpos($SETTINGS['upload_maxfilesize'], 'mb') === false) {\n                echo $SETTINGS['upload_maxfilesize'] . 'mb';\n            } else {\n                echo $SETTINGS['upload_maxfilesize'];\n            }\n            ?>',\n        chunk_size: '1mb',\n        dragdrop: true,\n        url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/upload.attachments.php',\n        flash_swf_url: '<?php echo $SETTINGS['cpassman_url']; ?>/includes/libraries/Plupload/Moxie.swf',\n        silverlight_xap_url: '<?php echo $SETTINGS['cpassman_url']; ?>/includes/libraries/Plupload/Moxie.xap',\n        filters: {\n            mime_types: [\n                <?php\n                if (\n                    isset($SETTINGS['upload_all_extensions_file']) === false\n                    || (isset($SETTINGS['upload_all_extensions_file']) === true\n                        && (int) $SETTINGS['upload_all_extensions_file'] === 0)\n                ) {\n                    ?> {\n                        title: 'Image files',\n                        extensions: '<?php echo $SETTINGS['upload_imagesext']; ?>'\n                    },\n                    {\n                        title: 'Package files',\n                        extensions: '<?php echo $SETTINGS['upload_pkgext']; ?>'\n                    },\n                    {\n                        title: 'Documents files',\n                        extensions: '<?php echo $SETTINGS['upload_docext']; ?>'\n                    },\n                    {\n                        title: 'Other files',\n                        extensions: '<?php echo $SETTINGS['upload_otherext']; ?>'\n                    }\n                <?php\n                }\n                ?>\n            ],\n            <?php\n            if (isset($SETTINGS['upload_zero_byte_file']) === true && (int) $SETTINGS['upload_zero_byte_file'] === 1) {\n                ?>\n                prevent_empty: false\n            <?php\n            }\n            ?>\n        },\n        <?php\n        if ((int) $SETTINGS['upload_imageresize_options'] === 1) {\n            ?>\n            resize: {\n                width: <?php echo $SETTINGS['upload_imageresize_width']; ?>,\n                height: <?php echo $SETTINGS['upload_imageresize_height']; ?>,\n                quality: <?php echo $SETTINGS['upload_imageresize_quality']; ?>\n            },\n        <?php\n        }\n        ?>\n        init: {\n            BeforeUpload: function(up, file) {\n                toastr.info(\n                    '<i class=\"fa-solid fa-cloud-arrow-up fa-bounce mr-2\"></i><?php echo langHdl('uploading'); ?>',\n                    '', {\n                        timeOut: 0\n                    }\n                );\n\n                // Get random number\n                if (store.get('teampassApplication').uploadedFileId === '') {\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.uploadedFileId = CreateRandomString(9, 'num_no_0');\n                        }\n                    );\n                }\n\n                up.setOption('multipart_params', {\n                    PHPSESSID: '<?php echo $_SESSION['user_id']; ?>',\n                    itemId: store.get('teampassItem').id,\n                    type_upload: 'item_attachments',\n                    isNewItem: store.get('teampassItem').isNewItem,\n                    isPersonal: store.get('teampassItem').folderIsPersonal,\n                    edit_item: false,\n                    user_token: store.get('teampassApplication').attachmentToken,\n                    randomId: store.get('teampassApplication').uploadedFileId,\n                    files_number: $('#form-item-hidden-pickFilesNumber').val(),\n                    file_size: file.size\n                });\n                console.log('DEBUG IMAGE - BeforeUpload')\n                console.log(up);\n            }\n        }\n    });\n\n    // Uploader options\n    uploader_attachments.bind('UploadProgress', function(up, file) {\n        //console.log('uploader_attachments.bind')\n        $('#upload-file_' + file.id).html('<i class=\"fas fa-file fa-sm mr-2\"></i>' + htmlEncode(file.name) + '<span id=\"fileStatus_'+file.id+'\">- ' + file.percent + '%</span>');\n        if (file.percent === 100) {\n            $('#fileStatus_'+file.id).html('<i class=\"fa-solid fa-circle-check text-success ml-2 fa-1x\"></i>');\n            userUploadedFile = true;\n            userDidAChange = true;\n            toastr.remove();\n        }\n    });\n    uploader_attachments.bind('Error', function(up, err) {\n        toastr.remove();\n        toastr.error(\n            err.message + (err.file ? ', File: ' + err.file.name : ''),\n            '', {\n                timeOut: 5000,\n                progressBar: true\n            }\n        );\n\n        up.refresh(); // Reposition Flash/Silverlight\n    });\n\n    $(\"#form-item-upload-pickfiles\").click(function(e) {\n        if ($('#form-item-upload-pickfilesList').text() !== '') {\n            // generate and save token\n            $.post(\n                \"sources/main.queries.php\", {\n                    type: \"save_token\",\n                    type_category: 'action_system',\n                    size: 25,\n                    capital: true,\n                    numeric: true,\n                    ambiguous: true,\n                    reason: \"item_attachments\",\n                    duration: 10,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.attachmentToken = data[0].token;\n                        }\n                    );\n                    console.log('start upload')\n                    uploader_attachments.start();\n                },\n                \"json\"\n            );\n            e.preventDefault();\n        } else {\n            toastr.remove();\n            toastr.warning(\n                '<?php echo langHdl('no_file_to_upload'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n        }\n    });\n    uploader_attachments.init();\n    uploader_attachments.bind('FilesAdded', function(up, files) {\n        if (debugJavascript === true) {\n            console.log('uploader_attachments.FilesAdded')\n        }\n        $('#form-item-upload-pickfilesList').removeClass('hidden');\n        var addedFiles = '';\n        $.each(files, function(i, file) {\n            $('#form-item-upload-pickfilesList').append(\n                '<div id=\"upload-file_' + file.id + '\">' +\n                '<span id=\"upload-file-remove_' + file.id +\n                '><a href=\"#\" onclick=\"$(this).closest(\\'div\\').remove();\"><i class=\" fa fa-trash mr-2 pointer\"></i></a></span> ' +\n                htmlEncode(file.name) + ' (' + plupload.formatSize(file.size) + ')' +\n                '</div>');\n            $(\"#form-item-hidden-pickFilesNumber\").val(\n                parseInt($(\"#form-item-hidden-pickFilesNumber\").val()) + 1\n            );\n            if (debugJavascript === true) {\n                console.info('Info du fichier :');\n                console.log(file);\n            }\n        });\n        up.refresh(); // Reposition Flash/Silverlight\n    });\n    //->\n\n\n\n    /**\n     * Save item changes\n     */\n    $('#form-item-button-save').click(function() {\n        var arrayQuery = [],\n            originalFolderId = $('#form-item-folder').val(),\n            itemsList = [],\n            userItemRight = '';\n\n        // What action is this?\n        if ($('#form-item-button-save').data('action') === '' ||\n            $('#form-item-button-save').data('action') === undefined\n        ) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('error_no_action_identified'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Don't save if no change\n        if (userDidAChange === false && userUploadedFile === false) {\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('no_change_performed'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        // Validate form\n        var form = $('#form-item');\n        if (form[0].checkValidity() === false) {\n            form.addClass('was-validated');\n            // Send alert to user\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('form_presents_inconsistencies'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            return false;\n        }\n\n        // Loop on all changed fields\n        $('.form-item-field-custom').each(function(i, obj) {\n            if ($(this).data('change-ongoing') === true) {\n                // Create an array with changed inputs\n                arrayQuery.push({\n                    'input': $(this).attr('id'),\n                    'field': $(this).data('field-name'),\n                    'value': $(this).val(),\n                });\n            }\n        });\n        if (debugJavascript === true) {\n            console.log('CHANGED FIELDS '+userUploadedFile + ' ' + userDidAChange);\n            console.log(arrayQuery);\n        }\n\n        // is user allowed to edit this item\n        if (typeof store.get('teampassApplication').itemsList !== 'undefined') {\n            itemsList = JSON.parse(store.get('teampassApplication').itemsList);\n        }\n        if (itemsList.length > 0) {\n            userItemRight = itemsList[store.get('teampassItem').id]?.rights;\n        }\n\n        // Do checks\n        if (arrayQuery.length > 0 || userDidAChange === true) {\n            var reg = new RegExp(\"[.|,|;|:|!|=|+|-|*|/|#|\\\"|'|&]\");\n\n            // Do some easy checks\n            if ($('#form-item-label').val() === '') {\n                // Label is empty\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_label'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            } else if ($('#form-item-tags').val() !== '' &&\n                reg.test($('#form-item-tags').val())\n            ) {\n                // Tags not wel formated\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_tags'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            } else if ($('#form-item-folder option:selected').val() === '' ||\n                typeof $('#form-item-folder option:selected').val() === 'undefined'\n            ) {\n                // No folder selected\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_no_selected_folder'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            } else if ($('#form-item-folder option:selected').attr('disabled') === 'disabled' && userItemRight && userItemRight <= 40) {\n                // Folder is not allowed\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_folder_not_allowed'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            } else {\n                // Continue preparation of saving query\n\n                //Manage restriction\n                var restriction = new Array(),\n                    restrictionRole = new Array(),\n                    userInRestrictionList = false;\n                $('#form-item-restrictedto option:selected').each(function() {\n                    if ($(this).val() !== '') {\n                        if ($(this).hasClass('restriction_is_role') === true) {\n                            restrictionRole.push($(this).val().substring(5));\n                        } else {\n                            restriction.push($(this).val());\n                            // Is the user part of the restriction option\n                            if ($(this).val() === '<?php echo $_SESSION['user_id']; ?>') {\n                                userInRestrictionList = true;\n                            }\n                        }\n                    }\n                });\n                // IF any restriction, then ensure the author is in\n                if (userInRestrictionList === false && restriction.length > 0) {\n                    restriction.push('<?php echo $_SESSION['user_id']; ?>;');\n                }\n\n                // Manage diffusion list\n                var diffusion = new Array();\n                var diffusionNames = new Array();\n                $('#form-item-anounce option:selected').each(function() {\n                    diffusion.push($(this).val());\n                    diffusionNames.push($(this).text());\n                });\n\n                // Get item field values\n                // Ensure that mandatory ones are filled in too\n                // and they are compliant to regexes\n                var fields = [];\n                var errorExit = false;\n                var reason = '';\n                $('.form-item-field-custom').each(function(key, data) {\n                    fields.push({\n                        'id': $(this).data('field-name'),\n                        'value': $(this).val(),\n                    });\n\n                    // Mandatory?\n                    if (parseInt($(this).data('field-mandatory')) === 1 &&\n                        $(this).val() === '' &&\n                        $('#form-item-field-' + $(this).data('field-name')).parent().hasClass('hidden') === false\n                    ) {\n                        //if (debugJavascript === true) console.log($(this))\n                        errorExit = true;\n                        return false;\n                    }\n                    if ($(this).val().length > 0 && $(this).data('field-regex').length > 0 &&\n                        !$(this).val().match($(this).data('field-regex'))\n                    ) {\n                        //if (debugJavascript === true) console.log($(this))\n                        errorExit = true;\n                        reason = 'regex';\n                        return false;\n                    }\n                });\n                if (errorExit === true) {\n                    toastr.remove();\n                    if (reason === 'regex') {\n                        toastr.error(\n                            '<?php echo langHdl('error_field_regex'); ?>',\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        toastr.error(\n                            '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    }\n                    return false;\n                }\n                //prepare data\n                var data = {\n                    'anyone_can_modify': $('#form-item-anyoneCanModify').is(':checked') ? 1 : 0,\n                    'complexity_level': parseInt($('#form-item-password-complex').val()),\n                    'description': $('#form-item-description').summernote('code') !== \"<p><br></p>\" ? DOMPurify.sanitize($('#form-item-description').summernote('code'), {USE_PROFILES: {html: true, svg: false, svgFilters: false}}) : '',\n                    'diffusion_list': diffusion,\n                    'diffusion_list_names': diffusionNames,\n                    'folder': parseInt($('#form-item-folder').val()),\n                    'email': DOMPurify.sanitize($('#form-item-email').val()),\n                    'fields': fields,\n                    'folder_is_personal': store.get('teampassItem').IsPersonalFolder === 1 ? 1 : 0,\n                    'id': store.get('teampassItem').id,\n                    'label': DOMPurify.sanitize($('#form-item-label').val(), {USE_PROFILES: {html:false, svg: false, svgFilters: false}}),\n                    'login': DOMPurify.sanitize($('#form-item-login').val()),\n                    'pw': $('#form-item-password').val(),\n                    'restricted_to': restriction,\n                    'restricted_to_roles': restrictionRole,\n                    'tags': DOMPurify.sanitize($('#form-item-tags').val()),\n                    'template_id': parseInt($('input.form-check-input-template:checkbox:checked').data('category-id')),\n                    'to_be_deleted_after_date': ($('#form-item-deleteAfterDate').length !== 0 &&\n                        $('#form-item-deleteAfterDate').val() !== '') ? $('#form-item-deleteAfterDate').val() : '',\n                    'to_be_deleted_after_x_views': ($('#form-item-deleteAfterShown').length !== 0 &&\n                            $('#form-item-deleteAfterShown').val() !== '' && $('#form-item-deleteAfterShown').val() >= 1) ?\n                        parseInt($('#form-item-deleteAfterShown').val()) : '',\n                    'url': DOMPurify.sanitize($('#form-item-url').val()),\n                    'user_id': parseInt('<?php echo $_SESSION['user_id']; ?>'),\n                    'uploaded_file_id': store.get('teampassApplication').uploadedFileId === undefined ? '' : store.get('teampassApplication').uploadedFileId,\n                    'fa_icon': DOMPurify.sanitize($('#form-item-icon').val()),\n                };\n                if (debugJavascript === true) {\n                    console.log('SAVING DATA');\n                    console.log(data);\n                }\n                // Inform user\n                toastr.remove();\n                toastr.info(\n                    '<?php echo langHdl('opening_folder'); ?><i class=\"fas fa-circle-notch fa-spin ml-2\"></i>'\n                );\n\n                // CLear tempo var\n                store.update(\n                    'teampassApplication',\n                    function(teampassApplication) {\n                        teampassApplication.uploadedFileId = '';\n                    }\n                );\n\n                //Send query\n                $.post(\n                    \"sources/items.queries.php\", {\n                        type: $('#form-item-button-save').data('action'),\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data) {\n                        //decrypt data\n                        try {\n                            data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                        } catch (e) {\n                            // error\n                            $(\"#div_loading\").addClass(\"hidden\");\n                            //requestRunning = false;\n                            $(\"#div_dialog_message_text\").html(\"An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />\" + data);\n                            $(\"#div_dialog_message\").dialog(\"open\");\n\n                            toastr.remove();\n                            toastr.error(\n                                'An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />' + data,\n                                '', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                            return false;\n                        }\n                        if (debugJavascript === true) console.log('RETURNED DATA');\n                        if (debugJavascript === true) console.log(data);\n                        if (data.error === true) {\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                            return false;\n                        } else {\n                            // Refresh tree\n                            if ($('#form-item-button-save').data('action') === 'update_item') {\n                                if ($('#form-item-folder').val() !== '' &&\n                                    originalFolderId !== $('#form-item-folder').val()\n                                ) {\n                                    refreshTree($('#form-item-folder').val(), false);\n                                }\n                                // Send query to confirm attachments\n                                var data = {\n                                    'item_id': store.get('teampassItem').id,\n                                }\n                                $.post(\n                                    \"sources/items.queries.php\", {\n                                        type: 'confirm_attachments',\n                                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                                        key: '<?php echo $_SESSION['key']; ?>'\n                                    }\n                                );\n                            } else {\n                                refreshTree($('#form-item-folder').val(), true);\n                            }\n\n                            // Refresh list of items inside the folder\n                            ListerItems($('#form-item-folder').val(), '', 0);\n\n                            // Inform user\n                            toastr.info(\n                                '<?php echo langHdl('success'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n\n                            // Close\n                            userDidAChange = false;\n                            userUploadedFile = false;\n\n                            closeItemDetailsCard();\n                            /*\n                            // Hide all\n                            $('.form-item, .form-item-action, .form-folder-action, .item-details-card, #folders-tree-card, #card-item-expired').addClass('hidden');\n\n                            // Show expected one\n                            $(store.get('teampassUser').previousView).removeClass('hidden');\n                            */\n                        }\n                    }\n                );\n            }\n        } else if (userUploadedFile === true) {\n            // Send query to confirm attachments\n            var data = {\n                'item_id': store.get('teampassItem').id,\n            }\n\n            $.post(\n                \"sources/items.queries.php\", {\n                    type: 'confirm_attachments',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                }\n            );\n\n            store.update(\n                'teampassItem',\n                function(teampassItem) {\n                    teampassItem.isNewItem = 0\n                }\n            );\n\n            // Inform user\n            toastr.info(\n                '<?php echo langHdl('done'); ?>',\n                '', {\n                    timeOut: 1000\n                }\n            );\n\n            // Close\n            userUploadedFile = false;\n            closeItemDetailsCard();\n        } else {\n            if (debugJavascript === true) console.info('NOTHING TO SAVE');\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('nothing_to_save'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n        }\n    });\n    //->\n\n\n    //autocomplete for TAGS\n    $(\"#form-item-tags\")\n        //.focus()\n        .bind(\"keydown\", function(event) {\n            if (event.keyCode === $.ui.keyCode.TAB &&\n                $(this).data(\"autocomplete\").menu.active) {\n                event.preventDefault();\n            }\n        })\n        .autocomplete({\n            source: function(request, response) {\n                $.getJSON(\"sources/items.queries.php?type=autocomplete_tags&t=1\", {\n                    term: extractLast(request.term)\n                }, response);\n            },\n            focus: function() {\n                // prevent value inserted on focus\n                return false;\n            },\n            search: function() {\n                var term = extractLast(this.value);\n            },\n            select: function(event, ui) {\n                var terms = split(this.value);\n                // remove the current input\n                terms.pop();\n                // add the selected item\n                terms.push(ui.item.value);\n                // add placeholder to get the comma-and-space at the end\n                terms.push(\"\");\n                this.value = terms.join(\" \");\n\n                return false;\n            }\n        });\n\n    // Warn in case of limited search\n    $(document).on('click', '#limited-search', function() {\n        if ($(this).is(\":checked\") === true) {\n            $('#find_items').css({\n                \"background-color\": \"#f56954\"\n            });\n        } else {\n            $('#find_items').css({\n                \"background-color\": \"#FFF\"\n            })\n        }\n    });\n\n\n    function showItemEditForm(selectedFolderId) {\n        if (debugJavascript === true) console.info('SHOW EDIT ITEM ' + selectedFolderId);\n        \n        //$.when(\n        //    getPrivilegesOnItem(selectedFolderId, 0)\n        //).then(function() {\n        // Now read\n        if (store.get('teampassItem').error === true) {\n            toastr.remove();\n            toastr.error(\n                store.get('teampassItem').message,\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n        } else {\n            $('#card-item-visibility').html(store.get('teampassItem').itemVisibility);\n            $('#card-item-minimum-complexity').html(store.get('teampassItem').itemMinimumComplexity);\n\n            // Show edition form\n            $('.form-item, #form-item-attachments-zone')\n                .removeClass('hidden');\n            $('.item-details-card, .form-item-copy, #form-item-password-options, .form-item-action, #item-details-card-categories, #folders-tree-card, .columns-position')\n                .addClass('hidden');\n\n            // Initial 'user did a change'\n            userDidAChange = false;\n\n            // Force update of simplepassmeter\n            $('#form-item-password').pwstrength(\"forceUpdate\");\n            $('#form-item-label').focus();\n\n            // Set type of action\n            $('#form-item-button-save').data('action', 'update_item');\n\n            // Does this folder contain Custom Fields\n            if (store.get('teampassItem').hasCustomCategories.length > 0) {\n                $('#form-item-field').removeClass('hidden');\n                $.each(store.get('teampassItem').hasCustomCategories, function(i, category) {\n                    $('#form-item-category-' + category).removeClass('hidden');\n                })\n            } else {\n                $('#form-item-field, .form-item-category').addClass('hidden');\n            }            \n\n            // is user allowed to edit this item - overpass readonly folder\n            if (typeof store.get('teampassApplication').itemsList !== 'undefined') {\n                var itemsList = JSON.parse(store.get('teampassApplication').itemsList);\n                userItemRight = itemsList[store.get('teampassItem').id]?.rights;\n                if (userItemRight && userItemRight > 40 && $('#form-item-folder option:selected').attr('disabled') === 'disabled') {\n                    $('#form-item-folder option:selected').removeAttr('disabled');\n                }\n            }\n\n            toastr.remove();\n            // ---\n        }\n        //});\n    }\n\n\n    /**\n     * Start items search\n     */\n    function searchItems(criteria) {\n        if (criteria !== '') {\n            // stop items loading (if on-going)\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStop = 1;\n                }\n            );\n\n            // wait\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('searching'); ?>'\n            );\n\n            // clean\n            $('#id_label, #id_desc, #id_pw, #id_login, #id_email, #id_url, #id_files, #id_restricted_to ,#id_tags, #id_kbs, .fields_div, .fields, #item_extra_info').html('');\n            $('#button_quick_login_copy, #button_quick_pw_copy').addClass('hidden');\n            $('#teampass_items_list').html('');\n\n            // Continu the list of results\n            finishingItemsFind(\n                'search_for_items',\n                $('#limited-search').is(\":checked\") === true ? store.get('teampassApplication').selectedFolder : false,\n                criteria,\n                0\n            );\n        }\n    }\n\n    /**\n     * \n     */\n    function finishingItemsFind(type, limited, criteria, start) {\n        // send query\n        $.get(\n            'sources/find.queries.php', {\n                type: type,\n                limited: limited,\n                search: criteria,\n                start: start,\n                length: 10,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                var pwd_error = '',\n                    icon_login,\n                    incon_link,\n                    icon_pwd,\n                    icon_favorite;\n\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'find.queries.php', type);\n                if (debugJavascript === true) console.log(data);\n\n                // Ensure correct div is not hidden\n                $('#info_teampass_items_list').addClass('hidden');\n                $('#table_teampass_items_list').removeClass('hidden');\n\n                // Show Items list\n                sList(data.html_json);\n\n                if (data.start !== -1 && (data.start <= data.total)) {\n                    // Continu the list of results\n                    finishingItemsFind(\n                        'search_for_items',\n                        $('#limited-search').is(\":checked\") === true ?\n                        store.get('teampassApplication').selectedFolder : false,\n                        criteria,\n                        data.start\n                    )\n                } else {\n                    toastr.remove();\n                    toastr.info(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    // Do some post treatments\n                    $('#form-folder-path').html('');\n                    $('#find_items').val('');\n\n                    // Do drag'n'drop for the folders\n                    prepareFolderDragNDrop();\n\n                    adjustElemsSize();\n                }\n            }\n        );\n    }\n\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function refreshVisibleFolders(forceRefreshCache = false) {\n        var data = {\n            'force_refresh_cache': forceRefreshCache,\n        }\n        if (debugJavascript === true) {\n            console.log('Refresh visible folders');\n            console.log(data);\n        }\n\n        $.post(\n            'sources/items.queries.php', {\n                type: 'refresh_visible_folders',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'refresh_visible_folders');\n                if (debugJavascript === true) {\n                    console.log('TREE');\n                    console.log(data);\n                }\n                //check if format error\n                if (typeof data !== 'undefined' && data.error !== true) {\n                    // Build html lists\n                    var html_visible = '',\n                        html_full_visible = '',\n                        html_active_visible = '',\n                        indentation = '',\n                        disabled = '';\n\n                    if (typeof data.html_json === 'undefined' || typeof data.html_json.folders === 'undefined') {\n                        $('#jstree').html('<div class=\"alert alert-warning mt-3 mr-1 ml-1\"><i class=\"fas fa-exclamation-triangle mr-2\"></i>' +\n                            '<?php echo langHdl('no_data_to_display'); ?>' +\n                            '</div>');\n                        //return false;\n                    } else {\n                        refreshFoldersInfo(data.html_json.folders, 'clear');\n                    }\n\n                    // Shall we show the root folder\n                    if (data.html_json.can_create_root_folder === 1) {\n                        html_visible = '<option value=\"0\"><?php echo langHdl('root'); ?></option>';\n                        html_full_visible = '<option value=\"0\"><?php echo langHdl('root'); ?></option>';\n                        html_active_visible = '<option value=\"0\"><?php echo langHdl('root'); ?></option>';\n                    } else {\n                        html_visible = '<option value=\"0\" disabled=\"disabled\"><?php echo langHdl('root'); ?></option>';\n                    }\n\n                    //\n                    $.each(data.html_json.folders, function(i, value) {\n                        // Prepare options lists\n                        html_visible += '<option value=\"' + value.id + '\"' +\n                            ((value.disabled === 1) ? ' disabled=\"disabled\"' : '') +\n                            ' data-parent-id=\"' + value.parent_id + '\">' +\n                            '&nbsp;'.repeat(value.level) +\n                            value.title + (value.path !== '' ? ' [' + value.path + ']' : '') + '</option>';\n                    });\n\n                    // Append new list\n                    $('#form-item-folder, #form-item-copy-destination, #form-folder-add-parent,' +\n                            '#form-folder-delete-selection, #form-folder-copy-source, #form-folder-copy-destination')\n                        .find('option')\n                        .remove()\n                        .end()\n                        .append(html_visible);\n                    $(\".no-root option[value='0']\").remove();\n\n                    if (debugJavascript === true) {\n                        console.info('HTML VISIBLE:')\n                        console.log(html_visible);\n                    }\n\n                    // Store in teampassUser\n                    store.update(\n                        'teampassUser',\n                        function(teampassUser) {\n                            teampassUser.folders = html_visible;\n                        }\n                    );\n\n\n                    // remove ROOT option if exists\n                    $('#form-item-copy-destination option[value=\"0\"]').remove();\n                } else {\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n            }\n        );\n    }\n\n\n    /**\n     * Get more info about folders (Categories)\n     *\n     * @return void\n     */\n    function refreshFoldersInfo(folders, action) {\n        var action = action || '',\n            sending = '';\n\n        if (null === folders) return false;\n\n        if (action === 'clear') {\n            sending = JSON.stringify(folders.map(a => parseInt(a.id)));\n        } else if (action === 'update') {\n            sending = JSON.stringify([folders]);\n        }\n\n        if (debugJavascript === true) {\n            console.info('INPUTS for refresh_folders_other_info');\n            console.log(sending);\n        }\n        \n        $.post(\n            'sources/items.queries.php', {\n                type: 'refresh_folders_other_info',\n                data: sending,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'refresh_folders_other_info');\n                if (debugJavascript === true) {\n                    console.info('RESULTS for refresh_folders_other_info');\n                    console.log(data);\n                }\n\n                //check if format error\n                if (typeof data !== 'undefined' && data.error !== true) {\n                    // Store in session\n                    if (action === 'clear') {\n                        // Handle the data\n                        $.each(folders, function(index, item) {\n                            if (typeof data.result !== 'undefined' && typeof data.result[item.id] !== 'undefined') {\n                                folders[index]['categories'] = data.result[item.id].categories;\n                                folders[index]['complexity'] = data.result[item.id].complexity;\n                                folders[index]['visibilityRoles'] = data.result[item.id].visibilityRoles;\n                            }\n                        });\n                        // Stare the data\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.foldersList = folders;\n                            }\n                        );\n                    } else if (action === 'update') {\n                        // Store the data\n                        var currentFoldersList = store.get('teampassApplication').foldersList;\n                        $.each(currentFoldersList, function(index, item) {\n                            if (item.id === parseInt(folders) && typeof data.result[folders] !== 'undefined') {\n                                currentFoldersList[index].categories = data.result[folders].categories;\n                                currentFoldersList[index].complexity = data.result[folders].complexity;\n                                currentFoldersList[index].visibilityRoles = data.result[folders].visibilityRoles;\n\n                                store.update(\n                                    'teampassApplication',\n                                    function(teampassApplication) {\n                                        foldersList = currentFoldersList;\n                                    }\n                                );\n                                return true;\n                            }\n                        });\n\n                    }\n                } else {\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n                toastr.remove();\n            }\n        );\n    }\n\n\n    /*\n     * builds the folders tree\n     */\n    function refreshTree(node_to_select, do_refresh, refresh_visible_folders) {\n        do_refresh = do_refresh || ''\n        node_to_select = node_to_select || '';\n        refresh_visible_folders = refresh_visible_folders || true;\n\n        if (refresh_visible_folders !== true) {\n            $('#jstree').jstree('deselect_all');\n            $('#jstree').jstree('select_node', '#li_' + groupe_id);\n            return false;\n        }\n\n        if (do_refresh === true || store.get('teampassApplication').jstreeForceRefresh === 1) {\n            $('#jstree').jstree(true).refresh();\n        }\n\n        if (node_to_select !== '') {\n            $('#jstree').jstree('deselect_all');\n\n            $('#jstree')\n                .one('refresh.jstree', function(e, data) {\n                    data.instance.select_node('#li_' + node_to_select);\n                });\n        }\n\n        $(this).delay(500).queue(function() {\n            refreshVisibleFolders(true);\n            $(this).dequeue();\n        });\n    }\n\n    /**\n     * \n     */\n    function ListerItems(groupe_id, restricted, start, stop_listing_current_folder) {\n        var me = $(this);\n        stop_listing_current_folder = stop_listing_current_folder || '0';\n        if (debugJavascript === true) console.log('LIST OF ITEMS FOR FOLDER ' + groupe_id)\n        // Exit if no folder is selected\n        if (groupe_id === undefined) return false;\n\n        // case where we should stop listing the items\n        if (store.get('teampassApplication') !== undefined && store.get('teampassApplication').itemsListStop === 1) {\n            //requestRunning = false;\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStop = 0;\n                }\n            );\n        }\n\n        //Evaluate number of items to display - depends on screen height\n        //adapt to the screen height\n        store.update(\n            'teampassApplication',\n            function(teampassApplication) {\n                teampassApplication.itemsShownByQuery = Math.max(Math.round((screenHeight - 450) / 23), 2);\n            }\n        );\n\n        if (stop_listing_current_folder === 1) {\n            me.data('requestRunning', false);\n            // Store listing criteria\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListFolderId = parseInt(groupe_id),\n                        teampassApplication.itemsListRestricted = restricted,\n                        teampassApplication.itemsListStart = start,\n                        teampassApplication.itemsListStop = 0\n                }\n            );\n        } else {\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStop = 0\n                }\n            );\n        }\n\n\n        // prevent launch of similar query in case of doubleclick\n        if (requestRunning === true) {\n            return false;\n        }\n        requestRunning = true;\n\n        // Hide any info\n        $('#info_teampass_items_list').addClass('hidden');\n\n        if (groupe_id !== undefined || groupe_id !== '') {\n            //refreshTree(groupe_id);\n            if (query_in_progress != 0 && query_in_progress != groupe_id && request !== undefined) {\n                request.abort(); //kill previous query if needed\n            }\n            query_in_progress = groupe_id;\n            if (start == 0) {\n                //clean form\n                $('#teampass_items_list, #items_folder_path').html('');\n            }\n\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.selectedFolder = parseInt(groupe_id),\n                    teampassApplication.itemsList = ''\n                }\n            );\n\n            if ($('.tr_fields') !== undefined) {\n                $('.tr_fields, .newItemCat, .editItemCat').addClass('hidden');\n            }\n\n            // Inform user\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('opening_folder'); ?><i class=\"fas fa-circle-notch fa-spin ml-2\"></i>'\n            );\n\n            // clear storage \n            store.update(\n                'teampassUser',\n                function(teampassUser) {\n                    teampassUser.itemsList = '';\n                }\n            );\n\n            // Prepare data to be sent\n            var dataArray = {\n                id: store.get('teampassApplication').selectedFolder,\n                restricted: restricted === \"\" ? \"\" : restricted,\n                start: start !== undefined ? start : 0,\n                uniqueLoadData: store.get('teampassApplication').queryUniqueLoad !== undefined ? store.get('teampassApplication').queryUniqueLoad : \"\",\n                nb_items_to_display_once: store.get('teampassApplication').itemsShownByQuery,\n            };\n\n            if (debugJavascript === true) {\n                console.log('Do list of items in folder with next parameters:');\n                console.log(JSON.stringify(dataArray));\n            }\n            \n            //ajax query\n            var request = $.post('sources/items.queries.php', {\n                    type: 'do_items_list_in_folder',\n                    data: prepareExchangedData(JSON.stringify(dataArray), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>',\n                },\n                function(retData) {\n                    //get data\n                    data = decodeQueryReturn(retData, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'do_items_list_in_folder');\n\n                    if (debugJavascript === true) {\n                        console.log('LIST ITEMS');\n                        console.log(data);\n                    }\n\n                    // reset doubleclick prevention\n                    requestRunning = false;\n\n                    // manage not allowed\n                    if (data.error === true) {\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                        return false;\n                    }\n\n                    // Hide New button if restricted folder\n                    if (data.access_level === 10) {\n                        $('#btn-new-item').addClass('hidden');\n                    } else {\n                        $('#btn-new-item').removeClass('hidden');\n                    }\n\n                    // to be done only in 1st list load\n                    if (data.list_to_be_continued === 'end') {\n                        var initialQueryData = $.parseJSON(data.uniqueLoadData);\n\n                        // Update hidden variables\n                        store.update(\n                            'teampassItem',\n                            function(teampassItem) {\n                                teampassItem.IsPersonalFolder = parseInt(data.IsPersonalFolder),\n                                    teampassItem.hasAccessLevel = parseInt(data.access_level),\n                                    teampassItem.folderComplexity = parseInt(data.folder_complexity),\n                                    teampassItem.hasCustomCategories = data.categoriesStructure\n                            }\n                        );\n                        \n\n                        // display path of folders\n                        if ((initialQueryData.path.length > 0)) {\n                            $('#form-folder-path')\n                                .html('')\n                                .append(rebuildPath(initialQueryData.path));\n                        } else {\n                            $('#form-folder-path').html('');\n                        }\n\n                        /*\n                        // PSK is requested but not set\n                        if (data.folder_requests_psk === 1\n                            && (store.get('teampassUser').pskSetForSession === ''\n                            || store.get('teampassUser').pskSetForSession === undefined)\n                        ) {\n                            showPersonalSKDialog();\n                        }\n                        */\n\n                        // show correct fodler in Tree\n                        if ($('#jstree').jstree('get_selected', true)[0] !== undefined &&\n                            'li_' + groupe_id !== $('#jstree').jstree('get_selected', true)[0].id\n                        ) {\n                            $('#jstree').jstree('deselect_all');\n                            $('#jstree').jstree('select_node', '#li_' + groupe_id);\n                        }\n\n                        // Delete existing clipboard\n                        if (clipboardForPassword) {\n                            clipboardForPassword.destroy();\n                        }\n                        if (clipboardForLogin) {\n                            clipboardForLogin.destroy();\n                        }\n\n                        // Prepare clipboard items\n                        clipboardForLogin = new ClipboardJS('.fa-clickable-login');\n                        clipboardForLogin.on('success', function(e) {\n                            toastr.info(\n                                '<?php echo langHdl('copy_to_clipboard'); ?>',\n                                '', {\n                                    timeOut: 2000,\n                                    positionClass: 'toast-top-right',\n                                    progressBar: true\n                                }\n                            );\n                            e.clearSelection();\n                        });\n\n                        // Prepare clipboard for PAssword\n                        // This will request a query to server to get the pwd\n                        clipboardForPassword = new ClipboardJS('.fa-clickable-password', {\n                            text: function(trigger) {\n                                // Send query and get password\n                                var result = '',\n                                    error = false;\n\n                                // Warn user that it starts\n                                toastr.remove();\n                                toastr.info(\n                                    '<i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>'\n                                );\n\n                                $.ajax({\n                                    type: \"POST\",\n                                    async: false,\n                                    url: 'sources/items.queries.php',\n                                    data: 'type=show_item_password&item_id=' + trigger.getAttribute('data-item-id') +\n                                        '&key=<?php echo $_SESSION['key']; ?>',\n                                    dataType: \"\",\n                                    success: function(data) {\n                                        //decrypt data\n                                        try {\n                                            data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                                        } catch (e) {\n                                            // error\n                                            toastr.remove();\n                                            toastr.warning(\n                                                '<?php echo langHdl('no_item_to_display'); ?>'\n                                            );\n                                            return false;\n                                        }\n                                        if (data.error === true) {\n                                            error = true;\n                                        } else {\n                                            if (data.password_error !== '') {\n                                                error = true;\n                                            } else {\n                                                result = atob(data.password).utf8Decode();\n                                            }\n                                        }\n\n                                        // Remove cog\n                                        toastr.remove();\n                                    }\n                                });\n                                return result;\n                            }\n                        });\n                        clipboardForPassword.on('success', function(e) {\n                            itemLog(\n                                'at_password_copied',\n                                e.trigger.dataset.itemId,\n                                e.trigger.dataset.itemLabel\n                            );\n                            \n                            // Warn user about clipboard clear\n                            if (store.get('teampassSettings').clipboard_life_duration === undefined || parseInt(store.get('teampassSettings').clipboard_life_duration) === 0) {\n                                toastr.remove();\n                                toastr.info(\n                                    '<?php echo langHdl('copy_to_clipboard'); ?>',\n                                    '', {\n                                        timeOut: 2000,\n                                        positionClass: 'toast-top-right',\n                                        progressBar: true\n                                    }\n                                );\n                            } else {\n                                toastr.remove();\n                                toastr.warning(\n                                    '<?php echo langHdl('clipboard_will_be_cleared'); ?>',\n                                    '', {\n                                        timeOut: store.get('teampassSettings').clipboard_life_duration * 1000,\n                                        progressBar: true\n                                    }\n                                );\n\n                                // Set clipboard eraser\n                                clearClipboardTimeout(\n                                    store.get('teampassSettings').clipboard_life_duration\n                                );\n                            }\n\n                            e.clearSelection();\n                        });\n                    } else if (data.error === 'not_authorized') {\n                        $('#items_folder_path').html('<i class=\"fas fa-folder-open-o\"></i>&nbsp;' + rebuildPath(data.arborescence));\n                    } else {\n                        // Store query results\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.queryUniqueLoad = data.uniqueLoadData;\n                            }\n                        );\n                        if ($('#items_loading_progress').length == 0) {\n                            $('#items_list_loader').after('<span id=\"items_loading_progress\">' + Math.round(data.next_start * 100 / data.counter_full, 0) + '%</span>');\n                        } else {\n                            $('#items_loading_progress').html(Math.round(data.next_start * 100 / data.counter_full, 0) + '%');\n                        }\n                    }\n                    //-----\n                    if (data.array_items !== undefined &&\n                        data.array_items.length === 0 &&\n                        $('#teampass_items_list').html() === ''\n                    ) {\n                        // Show warning to user\n                        $('#info_teampass_items_list')\n                            .html('<div class=\"alert alert-info text-center col col-10\" role=\"alert\">' +\n                                '<i class=\"fas fa-info-circle mr-2\"></i><?php echo langHdl('no_item_to_display'); ?></b>' +\n                                '</div>')\n                            .removeClass('hidden');\n                    }\n\n                    if (data.error === 'is_pf_but_no_saltkey') {\n                        //warn user about his saltkey\n                        toastr.remove();\n                        toastr.warning(\n                            '<?php echo langHdl('home_personal_saltkey_label'); ?>',\n                            '', {\n                                timeOut: 10000\n                            }\n                        );\n                        return false;\n                    } else if (data.error === 'not_authorized' || data.access_level === '') {\n                        // Show warning to user\n                        $('#info_teampass_items_list')\n                            .html('<div class=\"alert alert-info text-center col col-lg-10\" role=\"alert\">' +\n                                '<i class=\"fas fa-warning mr-2\"></i><?php echo langHdl('not_allowed_to_see_pw'); ?></b>' +\n                                '</div>')\n                            .removeClass('hidden');\n\n                    } else if ((store.get('teampassApplication').userIsReadOnly === 1) //&& data.folder_requests_psk == 0\n                        ||\n                        data.access_level === 10\n                    ) {\n                        //readonly user\n                        $('#item_details_no_personal_saltkey, #item_details_nok').addClass('hidden');\n                        $('#item_details_ok, #items_list').removeClass('hidden');\n                        //$('#more_items').remove();\n\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.bypassComplexityOnCreation = parseInt(data.bloquer_creation_complexite);\n                                teampassApplication.bypassComplexityOnEdition = parseInt(data.bloquer_modification_complexite);\n                                //teampassApplication.personalSaltkeyRequired = parseInt(data.saltkey_is_required);\n                            }\n                        );\n\n                        // show items\n                        sList(data.html_json);\n\n                        if (data.list_to_be_continued === 'yes') {\n                            //set next start for query\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.itemsListStart = parseInt(data.next_start);\n                                }\n                            );\n                        } else {\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.itemsListStart = data.list_to_be_continued;\n                                }\n                            );\n                            $('.card-item-category').addClass('hidden');\n                        }\n\n                        proceed_list_update(stop_listing_current_folder);\n                    } else {\n                        //Display items\n                        $('#item_details_no_personal_saltkey, #item_details_nok').addClass('hidden');\n                        $('#item_details_ok, #items_list').removeClass('hidden');\n\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.bypassComplexityOnCreation = parseInt(data.bloquer_creation_complexite);\n                                teampassApplication.bypassComplexityOnEdition = parseInt(data.bloquer_modification_complexite);\n                                //teampassApplication.personalSaltkeyRequired = parseInt(data.saltkey_is_required);\n                            }\n                        );\n\n                        // show items\n                        sList(data.html_json);\n\n                        // Prepare next iteration if needed\n                        if (data.list_to_be_continued === 'yes') {\n                            //set next start for query\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.itemsListStart = parseInt(data.next_start);\n                                }\n                            );\n                        } else {\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.itemsListStart = data.list_to_be_continued;\n                                }\n                            );\n                            $('.card-item-category').addClass('hidden');\n\n                            if (debugJavascript === true) {\n                                console.log('Liste complete des items')\n                                console.log(JSON.parse(store.get('teampassApplication').itemsList));\n                            }\n                        }\n\n                        proceed_list_update(stop_listing_current_folder);\n                    }\n                }\n            );\n        }\n    }\n\n    function sList(listOfItems) {\n        if (debugJavascript === true) {\n            console.log(listOfItems);\n        }\n        var counter = 0,\n            prevIdForNextItem = -1;\n\n        // Manage store\n        if (store.get('teampassApplication').itemsList === '' || store.get('teampassApplication').itemsList === undefined) {\n            var stored_datas = listOfItems;\n        } else {\n            var stored_datas = String(JSON.parse(store.get('teampassApplication').itemsList)).concat(listOfItems);\n        }\n        store.update(\n            'teampassApplication',\n            function(teampassApplication) {\n                teampassApplication.itemsList = JSON.stringify(stored_datas);\n            }\n        );\n        \n        $.each(listOfItems, function(i, value) {\n            var new_line = '',\n                pwd_error = '',\n                icon_all_can_modify = '',\n                icon_cannot_see = '',\n                icon_login = '',\n                icon_link = '',\n                icon_pwd = '',\n                icon_favorite = '',\n                item_flag = '',\n                item_grippy = '',\n                visible_by_user = '';\n\n            counter += 1;\n\n            // ENsure numbers are ints\n            value.anyone_can_modify = parseInt(value.anyone_can_modify);\n            value.canMove = parseInt(value.canMove);\n            value.expired = parseInt(value.expired);\n            value.is_favorite = parseInt(value.is_favorite);\n            value.is_result_of_search = parseInt(value.is_result_of_search);\n            value.item_id = parseInt(value.item_id);\n            value.open_edit = parseInt(value.open_edit);\n            value.rights = parseInt(value.rights);\n            value.tree_id = parseInt(value.tree_id);\n            value.display = parseInt(value.display);\n            value.display_item = parseInt(value.display_item);\n            value.enable_favourites = parseInt(value.enable_favourites);\n\n            // Check access restriction\n            if (value.rights > 0) {\n                // Should I populate previous item with this new id\n                if (debugJavascript === true) {\n                    console.log('current id: '+value.item_id);\n                    console.log(prevIdForNextItem);\n                }\n                if (prevIdForNextItem !== -1) {\n                    $('#list-item-row_' + value.item_id).attr('data-next-item-id', prevIdForNextItem.item_id);\n                    $('#list-item-row_' + value.item_id).attr('data-next-item-label', value.label);\n                }\n                \n                // Prepare anyone can modify icon\n                if (value.anyone_can_modify === 1 || value.open_edit === 1) {\n                    icon_all_can_modify = '<span class=\"fa-stack fa-clickable pointer infotip list-item-clicktoedit mr-2\" title=\"<?php echo langHdl('edit'); ?>\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-pen fa-stack-1x fa-inverse\"></i></span>';\n                }\n\n                // Prepare mini icons\n                if (store.get('teampassSettings') !== undefined && parseInt(store.get('teampassSettings').copy_to_clipboard_small_icons) === 1 &&\n                    value.rights > 10\n                ) {\n                    // Login icon\n                    if (value.login !== '') {\n                        icon_login = '<span class=\"fa-stack fa-clickable fa-clickable-login pointer infotip mr-2\" title=\"<?php echo langHdl('item_menu_copy_login'); ?>\" data-clipboard-text=\"' + sanitizeString(value.login) + '\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-user fa-stack-1x fa-inverse\"></i></span>';\n                    }\n                    // Pwd icon\n                    if (value.pw_status !== 'pw_is_empty' && value.pw_status !== 'encryption_error') {\n                        icon_pwd = '<span class=\"fa-stack fa-clickable fa-clickable-password pointer infotip mr-2\" title=\"<?php echo langHdl('item_menu_copy_pw'); ?>\" data-item-id=\"' + value.item_id + '\" data-item-label=\"' + value.label + '\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-key fa-stack-1x fa-inverse\"></i></span>';\n                    }\n\n                    // Now check if pwd is empty. If it is then warn user\n                    if (value.pw_status === 'pw_is_empty') {\n                        pwd_error = '<span class=\"fa-stack fa-clickable fa-clickable-password pointer infotip mr-2\" title=\"<?php echo langHdl('password_is_empty'); ?>\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-exclamation-triangle text-warning fa-stack-1x fa-inverse\"></i></span>';\n                    }\n                }\n\n                // Link icon\n                if (value.link !== '') {\n                    icon_link = '<span class=\"fa-stack fa-clickable pointer infotip mr-2\" title=\"<?php echo langHdl('open_website'); ?>\"><a href=\"' + sanitizeString(value.link) + '\" target=\"_blank\" class=\"no-link\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-link fa-stack-1x fa-inverse\"></i></a></span>';\n                }\n\n                // Prepare Favorite icon\n                if (store.get('teampassSettings') !== undefined && parseInt(store.get('teampassSettings').enable_favourites) === 1 &&\n                    value.rights > 10\n                ) {\n                    if (value.is_favourited === 1) {\n                        icon_favorite = '<span class=\"fa-stack fa-clickable item-favourite pointer infotip mr-2\" title=\"<?php echo langHdl('unfavorite'); ?>\" data-item-id=\"' + value.item_id + '\" data-item-favourited=\"1\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"fas fa-star fa-stack-1x fa-inverse text-warning\"></i></span>';\n                    } else {\n                        icon_favorite = '<span class=\"fa-stack fa-clickable item-favourite pointer infotip mr-2\" title=\"<?php echo langHdl('favorite'); ?>\" data-item-id=\"' + value.item_id + '\" data-item-favourited=\"0\"><i class=\"fas fa-circle fa-stack-2x\"></i><i class=\"far fa-star fa-stack-1x fa-inverse\"></i></span>';\n                    }\n                }\n\n                // Prepare Description\n                if (value.desc !== '') {\n                    value.desc = ' <span class=\"text-secondary small\">- ' + value.desc + '</span>';\n                }\n\n                $('#teampass_items_list').append(\n                    '<tr class=\"list-item-row' + (value.canMove === 1 ? ' is-draggable' : '') + '\" id=\"list-item-row_' + value.item_id + '\" data-item-edition=\"' + value.open_edit + '\" data-item-id=\"' + value.item_id + '\" data-item-sk=\"' + value.sk + '\" data-item-expired=\"' + value.expired + '\" data-item-rights=\"' + value.rights + '\" data-item-display=\"' + value.display + '\" data-item-open-edit=\"' + value.open_edit + '\" data-item-tree-id=\"' + value.tree_id + '\" data-is-search-result=\"' + value.is_result_of_search + '\" data-label=\"' + escape(value.label) + '\">' +\n                    '<td class=\"list-item-description\" style=\"width: 100%;\">' +\n                    // Show user a grippy bar to move item\n                    (value.canMove === 1  ? '<i class=\"fas fa-ellipsis-v mr-2 dragndrop\"></i>' : '') + //&& value.is_result_of_search === 0\n                    // Show user a ban icon if expired\n                    (value.expired === 1 ? '<i class=\"far fa-calendar-times mr-2 text-warning infotip\" title=\"<?php echo langHdl('not_allowed_to_see_pw_is_expired'); ?>\"></i>' : '') +\n                    // Show user that Item is not accessible\n                    (value.rights === 10 ? '<i class=\"far fa-eye-slash fa-xs mr-2 text-primary infotip\" title=\"<?php echo langHdl('item_with_restricted_access'); ?>\"></i>' : '') +\n                    // Show user that password is badly encrypted\n                    (value.pw_status === 'encryption_error' ? '<i class=\"fas fa-exclamation-triangle fa-xs text-danger infotip mr-1\" title=\"<?php echo langHdl('pw_encryption_error'); ?>\"></i>' : '') +\n                    // Show item fa_icon if set\n                    (value.fa_icon !== '' ? '<i class=\"'+value.fa_icon+' mr-1\"></i>' : '') +\n                    // Prepare item info\n                    '<span class=\"list-item-clicktoshow' + (value.rights === 10 ? '' : ' pointer') + '\" data-item-id=\"' + value.item_id + '\">' +\n                    '<span class=\"list-item-row-description' + (value.rights === 10 ? ' font-weight-light' : '') + '\">' + value.label + '</span>' + (value.rights === 10 ? '' : value.desc) + '</span>' +\n                    '<span class=\"list-item-actions hidden\">' +\n                    (value.rights === 10 ?\n                        '<span class=\"fa-stack fa-clickable fa-clickable-access-request pointer infotip mr-2\" title=\"<?php echo langHdl('need_access'); ?>\"><i class=\"fas fa-circle fa-stack-2x text-danger\"></i><i class=\"far fa-handshake fa-stack-1x fa-inverse\"></i></span>' :\n                        pwd_error + icon_all_can_modify + icon_login + icon_pwd + icon_link + icon_favorite) +\n                    '</span>' +\n                    (value.folder !== undefined ?\n                        '<br><span class=\"text-secondary small font-italic pointer open-folder\" data-tree-id=\"' +\n                        value.tree_id + '\"\">[' + value.folder + ']</span>' : '') +\n                    '</td>' +\n                    '</tr>'\n                );\n\n                // Save id for usage\n                prevIdForNextItem = {\n                    'item_id' : value.item_id,\n                    'label': value.label,\n                };\n\n                //---------------------\n            }\n        });\n\n        // Sort entries\n        var $tbody = $('#teampass_items_list');\n        $tbody.find('tr').sort(function(a, b) {\n            var tda = $(a).find('.list-item-row-description').text();\n            var tdb = $(b).find('.list-item-row-description').text();\n            // if a < b return 1\n            return tda > tdb ? 1 :\n                tda < tdb ? -1 :\n                0;\n        }).appendTo($tbody);\n\n        // Trick for list with only one entry\n        if (counter === 1) {\n            $('#teampass_items_list')\n                .append('<tr class=\"row\"><td class=\"\">&nbsp;</td></tr>');\n        }\n        adjustElemsSize();\n\n        // Show tooltips\n        $('.infotip').tooltip();\n    }\n\n    $(document).on('click', '.open-folder', function() {\n        if ($(this).data('tree-id') !== undefined) {\n            if (debugJavascript === true) console.log($(this).data('tree-id'))\n\n            // Prepare\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListFolderId = parseInt($(this).data('tree-id'));\n                }\n            );\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.selectedFolder = parseInt($(this).data('tree-id'));\n                }\n            );\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStart = 0;\n                }\n            );\n\n            // Show\n            ListerItems(\n                $(this).data('tree-id'),\n                '',\n                0\n            );\n\n            $('#jstree').jstree('deselect_all');\n            $('#jstree').jstree('select_node', '#li_' + $(this).data('tree-id'));\n        }\n    });\n\n\n    function adjustElemsSize() {\n        // Adjust height of folders tree\n        if ($('#teampass_items_list').height() > (screenHeight - 215)) {\n            $('#jstree').height($('#teampass_items_list').height() + 75);\n        } else {\n            $('#jstree').height($(window).height() - 215);\n        }\n    }\n\n    /**\n     * Builds the HTML path\n     * @param  {[type]} data [description]\n     * @return {[type]}      [description]\n     */\n    function rebuildPath(data) {\n        var new_path = new_path_elem = '';\n        $.each((data), function(i, value) {\n            new_path_elem = '';\n            if (value['visible'] === 1) {\n                new_path_elem = ' class=\"pointer\" onclick=\"ListerItems(' + value['id'] + ', \\'\\', 0)\"';\n            }\n\n            new_path += '<li class=\"breadcrumb-item\" id=\"path_elem_' + value['id'] + '\"' + new_path_elem + '>' + value['title'] + '</li>';\n        });\n\n        return new_path;\n    }\n\n    /**\n\n     */\n    function proceed_list_update(stop_proceeding) {\n        stop_proceeding = stop_proceeding || '';\n\n        if (stop_proceeding === '1' ||\n            (store.get('teampassApplication').itemsListFolderId !== '' &&\n                store.get('teampassApplication').itemsListStart !== 'end')\n        ) {\n            // Clear storage\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.itemsListStop = 0;\n                }\n            );\n            // Perform listing\n            ListerItems(\n                store.get('teampassApplication').itemsListFolderId,\n                store.get('teampassApplication').itemsListRestricted,\n                store.get('teampassApplication').itemsListStart,\n                store.get('teampassApplication').itemsListStop\n            );\n            return false;\n        }\n\n        if (store.get('teampassApplication').itemsListStart !== 'end') {\n            //Check if nb of items do display > to 0\n            if (store.get('teampassApplication').itemsShownByQuery > 0) {\n                ListerItems(\n                    store.get('teampassApplication').selectedFolder,\n                    '',\n                    store.get('teampassApplication').itemsListStart\n                );\n            }\n        } else {\n            // Show tooltips\n            $('.infotip').tooltip();\n\n            // Update silently the info about the folder\n            refreshFoldersInfo(\n                store.get('teampassApplication').selectedFolder,\n                'update'\n            );\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('data_refreshed'); ?>',\n                '', {\n                    timeOut: 1000\n                }\n            );\n\n            // Do drag'n'drop for the folders\n            prepareFolderDragNDrop();\n        }\n    }\n\n\n    function checkAccess(itemId, treeId, userId)\n    {\n        var data = {\n            'itemId': parseInt(itemId),\n            'treeId': parseInt(treeId),\n            'userId': parseInt(userId),\n        };\n\n        //Send query\n        $.post(\n            'sources/items.queries.php', {\n                type: 'check_current_access_rights',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'show_details_item');\n                requestRunning = true;\n                if (debugJavascript === true) {\n                    console.log(\"DEBUG: checkAccess\");\n                    console.log(data);\n                }\n\n\n                return false;\n            }\n        );\n    }\n\n\n    /**\n     *\n     */\n    function Details(itemDefinition, actionType, hotlink = false) {\n        if (debugJavascript === true) console.info('EXPECTED ACTION on ' + itemDefinition + ' is ' + actionType + ' -- ')\n\n        // Init\n        if (hotlink === false) {\n            var itemId = parseInt($(itemDefinition).data('item-id')) || '';\n            var itemTreeId = parseInt($(itemDefinition).data('item-tree-id')) || '';\n            var itemSk = parseInt($(itemDefinition).data('item-sk')) || 0;\n            var itemExpired = parseInt($(itemDefinition).data('item-expired')) || '';\n            var itemRestricted = parseInt($(itemDefinition).data('item-restricted-id')) || '';\n            var itemDisplay = parseInt($(itemDefinition).data('item-display')) || 0;\n            var itemOpenEdit = parseInt($(itemDefinition).data('item-open-edit')) || 0;\n            var itemReload = parseInt($(itemDefinition).data('item-reload')) || 0;\n            var itemRights = parseInt($(itemDefinition).data('item-rights')) || 10;\n        } else {\n            var itemId = itemDefinition || '';\n            var itemTreeId = store.get('teampassApplication').selectedFolder || '';\n            var itemSk = 0;\n            var itemExpired = '';\n            var itemRestricted = '';\n            var itemDisplay = 1;\n            var itemOpenEdit = 0;\n            var itemReload = 0;\n            var itemRights = parseInt($(itemDefinition).data('item-rights')) || 10;\n        }\n\n        // check if user still has access\n        if (checkAccess(itemId, itemTreeId, <?php echo $_SESSION['user_id']; ?>) === false) {\n            toastr.remove();\n            toastr.warning(\n                '<?php echo langHdl('no_item_to_display'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            // Finished\n            return false;\n        }\n\n        // Store current view\n        savePreviousView();\n        \n        if (debugJavascript === true) console.log(\"Request is running: \" + requestRunning)\n\n        // Store status query running\n        requestRunning = true;\n        userDidAChange = false;\n\n        // Select tab#1\n        $('#form-item-nav-pills li:first-child a').tab('show');\n\n        // Don't show details\n        if (itemDisplay === 'no_display') {\n            // Inform user\n            toastr.remove();\n            toastr.warning(\n                '<?php echo langHdl('no_item_to_display'); ?>',\n                '', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n\n            // Clear ongoing request status\n            requestRunning = false;\n\n            // Finished\n            return false;\n        }\n\n        // If opening new item, reinit hidden fields\n        if (store.get('teampassApplication').lastItemSeen !== itemId) {\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.lastItemSeen = parseInt(itemId);\n                }\n            );\n            if (debugJavascript === true) console.log(\"Last seen item \" + store.get('teampassApplication').lastItemSeen)\n        }\n\n        // Prepare data to be sent\n        var data = {\n            'id': parseInt(itemId),\n            'folder_id': parseInt(itemTreeId),\n            'salt_key_required': itemSk,\n            'expired_item': itemExpired,\n            'restricted': itemRestricted,\n            'folder_access_level': store.get('teampassItem').hasAccessLevel,\n            'page': 'items',\n            'rights': itemRights,\n        };\n\n        if (debugJavascript === true) console.log(\"SEND\");\n        if (debugJavascript === true) console.log(data);\n\n        //Send query\n        $.post(\n            'sources/items.queries.php', {\n                type: 'show_details_item',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'show_details_item');\n                requestRunning = true;\n                if (debugJavascript === true) {\n                    console.log(\"RECEIVED object details\");\n                    console.log(data);\n                }\n\n                // Store not a new item\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.isNewItem = 0\n                    }\n                );\n\n                // remove any track-change class on item form\n                //$('.form-item-control').removeClass('track-change');\n\n                if (data.error === true) {\n                    toastr.remove();\n                    requestRunning = false;\n\n                    // Manage personal items key error\n                    if (data.error_type !== 'undefined' && data.error_type === 'private_items_to_encrypt') {\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n\n                        store.update(\n                            'teampassUser', {},\n                            function(teampassUser) {\n                                teampassUser.special = 'private_items_to_encrypt';\n                            }\n                        );\n                        document.location.href = \"index.php?page=items\";\n                    } else if (data.error_type !== 'undefined' && data.error_type === 'user_should_reencrypt_private_key' && store.get('teampassUser').temporary_code === '') {\n                        // we have to ask the user to re-encrypt his privatekey\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 10000,\n                                progressBar: true\n                            }\n                        );\n                        \n                        if (debugJavascript === true) console.log('LDAP user password has to encrypt his private key with hos new LDAP password')\n                        // HIde\n                        $('.content-header, .content').addClass('hidden');\n\n                        // Show passwords inputs and form\n                        $('#dialog-ldap-user-change-password-info')\n                            .html('<i class=\"icon fas fa-info mr-2\"></i><?php echo langHdl('ldap_user_has_changed_his_password');?>')\n                            .removeClass('hidden');\n                        $('#dialog-ldap-user-change-password').removeClass('hidden');\n                    }\n\n\n                    return false;\n                } else if ((data.user_can_modify === 0 && actionType === 'edit') ||\n                    parseInt(data.show_details) === 0\n                ) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('error_not_allowed_to'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    requestRunning = false;\n                    return false;\n                }\n\n\n                // Store scroll position\n                userScrollPosition = $(window).scrollTop();\n\n                // Scroll to top\n                $(window).scrollTop(0);\n\n                // SHould we show?\n                if (parseInt(data.show_detail_option) === 1 || itemExpired === 1) {\n                    // SHow expiration alert\n                    $('#card-item-expired').removeClass('hidden');\n                } else if (parseInt(data.show_detail_option) === 2) {\n                    // Don't show anything\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('not_allowed_to_see_pw'); ?>',\n                        '<?php echo langHdl('warning'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    return false;\n                }\n\n                // Show header info\n                $('#card-item-visibility').html(store.get('teampassItem').itemVisibility);\n                $('#card-item-minimum-complexity').html(store.get('teampassItem').itemMinimumComplexity);\n\n                // Hide NEW button in case access_level < 30\n                if (store.get('teampassItem').hasAccessLevel === 10) {\n                    $('#item-form-new-button').addClass('hidden');\n                } else {\n                    $('#item-form-new-button').removeClass('hidden');\n                }\n\n                // Uncrypt the pwd\n                if (data.pw !== undefined) {\n                    data.pw = atob(data.pw).utf8Decode();\n                }\n\n                // Update hidden variables\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.id = parseInt(data.id),\n                            teampassItem.timestamp = data.timestamp,\n                            teampassItem.user_can_modify = data.user_can_modify,\n                            teampassItem.anyone_can_modify = data.anyone_can_modify,\n                            teampassItem.edit_item_salt_key = data.edit_item_salt_key,\n                            teampassItem.id_restricted_to = data.id_restricted_to,\n                            teampassItem.id_restricted_to_roles = data.id_restricted_to_roles,\n                            teampassItem.item_rights = itemRights\n                    }\n                );\n\n                // Prepare forms\n                $('#folders-tree-card, .columns-position').addClass('hidden');\n                if (actionType === 'show') {\n                    // Prepare Views\n                    $('.item-details-card, #item-details-card-categories').removeClass('hidden');\n                    $('.form-item').addClass('hidden');\n\n                    $('#form-item-suggestion-password').focus();\n                    // If Description empty then remove it\n                    if (data.description === '<p>&nbsp;</p>') {\n                        $('#card-item-description')\n                            .parents('.item-details-card')\n                            .addClass('hidden');\n                    } else {\n                        $('#card-item-description')\n                            .parents('.item-details-card')\n                            .removeClass('hidden');\n                    }\n                } else {\n                    $('.form-item').removeClass('hidden');\n                    $('.item-details-card, #item-details-card-categories').addClass('hidden');\n                }\n                $('#pwd-definition-size').val(data.pw.length);\n\n                // Prepare card\n                const itemIcon = (data.fa_icon !== \"\") ? '<i class=\"'+data.fa_icon+' mr-1\"></i>' : '';\n                $('#card-item-label, #form-item-title').html(itemIcon + data.label);\n                $('#form-item-label, #form-item-suggestion-label').val(data.label);\n                $('#card-item-description, #form-item-suggestion-description').html(data.description);\n                if (data.description === '') {\n                    $('#card-item-description').addClass('hidden');\n                } else {\n                    $('#card-item-description').removeClass('hidden');\n                }\n                $('#card-item-pwd').html('<?php echo $var['hidden_asterisk']; ?>');\n                $('#hidden-item-pwd, #form-item-suggestion-password').val(data.pw);\n                $('#form-item-password, #form-item-password-confirmation, #form-item-server-old-password').val(data.pw);\n                $('#card-item-login').html(data.login);\n                $('#form-item-login, #form-item-suggestion-login, #form-item-server-login').val(data.login);\n\n                $('#card-item-email').text(data.email);\n                $('#form-item-email, #form-item-suggestion-email').val(data.email);\n                $('#card-item-url').html(data.url);\n                $('#form-item-url, #form-item-suggestion-url').val($(data.url).text());\n                $('#form-item-restrictedToUsers').val(JSON.stringify(data.id_restricted_to));\n                $('#form-item-restrictedToRoles').val(JSON.stringify(data.id_restricted_to_roles));\n                $('#form-item-folder').val(data.folder);\n                $('#form-item-tags').val(data.tags.join(' '));\n                $('#form-item-icon').val(data.fa_icon);\n                $('#form-item-icon-show').html(itemIcon);\n\n                $('#form-item-password').pwstrength(\"forceUpdate\");\n                $('#form-item-label').focus();\n\n                // Editor for description field\n                if (debugJavascript === true) {console.log('>>>> create summernote');}\n                $('#form-item-description')\n                    .html(data.description)\n                    .summernote({\n                        toolbar: [\n                            ['style', ['style']],\n                            ['font', ['bold', 'italic', 'underline', 'strikethrough', 'clear']],\n                            ['fontsize', ['fontsize']],\n                            ['color', ['color']],\n                            ['para', ['ul', 'ol', 'paragraph']],\n                            ['insert', ['link', 'picture']],\n                            //['height', ['height']],\n                            ['view', ['codeview']]\n                        ],\n                        codeviewFilter: true,\n                        codeviewIframeFilter: true,\n                        callbacks: {\n                            onChange: function(contents, $editable) {\n                                if (debugJavascript === true) console.log('Editor onChange:' + userDidAChange + \" - \" + requestRunning);\n                                if (userDidAChange === false && requestRunning === false) {\n                                    if (debugJavascript === true) console.log('onChange:', contents, $editable);\n                                    userDidAChange = true;\n                                    if (debugJavascript === true) console.log('User did a change on #form-item-description > ' + userDidAChange);\n                                    //$('#form-item-description').attr('data-change-ongoing', true);;\n                                }\n                            }\n                        }\n                    })\n                //.summernote('editor.insertText', data.description);\n\n                $('#form-item-suggestion-description')\n                    .html(data.description)\n                    .summernote({\n                        toolbar: [\n                            ['style', ['style']],\n                            ['font', ['bold', 'italic', 'underline', 'strikethrough', 'clear']],\n                            ['fontsize', ['fontsize']],\n                            ['color', ['color']],\n                            ['para', ['ul', 'ol', 'paragraph']],\n                            ['insert', ['link', 'picture']],\n                            //['height', ['height']],\n                            ['view', ['codeview']]\n                        ],\n                        codeviewFilter: true,\n                        codeviewIframeFilter: true,\n                        callbacks: {\n                            onChange: function(contents, $editable) {\n                                if (userDidAChange === false && requestRunning === false) {\n                                    if (debugJavascript === true) console.log('onChange:', contents, $editable);\n                                    userDidAChange = true;\n                                    if (debugJavascript === true) console.log('User did a change on #form-item-suggestion-description > ' + userDidAChange);\n                                    //$('#form-item-suggestion-description').attr('data-change-ongoing', true);;\n                                }\n                            }\n                        }\n                    });\n\n\n                //prepare nice list of users / groups\n                var html_users = '',\n                    html_groups = '',\n                    html_tags = '',\n                    html_kbs = '';\n\n                $(data.tags).each(function(index, value) {\n                    html_tags += '<span class=\"badge badge-success pointer tip mr-2\" title=\"<?php echo langHdl('list_items_with_tag'); ?>\" onclick=\"searchItemsWithTags(\\'' + value + '\\')\"><i class=\"fas fa-tag fa-sm\"></i>&nbsp;<span class=\"item_tag\">' + value + '</span></span>';\n                });\n                if (html_tags === '') {\n                    $('#card-item-tags').html('<?php echo langHdl('none'); ?>');\n                } else {\n                    $('#card-item-tags').html(html_tags);\n                }\n\n                $(data.links_to_kbs).each(function(index, value) {\n                    html_kbs += '<a class=\"badge badge-primary pointer tip mr-2\" href=\"<?php echo $SETTINGS['cpassman_url']; ?>/index.php?page=kb&id=' + value['id'] + '\"><i class=\"fas fa-map-pin fa-sm\"></i>&nbsp;' + value['label'] + '</a>';\n\n                });\n                if (html_kbs === '') {\n                    $('#card-item-kbs').html('<?php echo langHdl('none'); ?>');\n                } else {\n                    $('#card-item-kbs').html(html_kbs);\n                }\n\n\n                // Manage CATEGORIES / CUSTOM FIELDS\n                if (data.categories.length === 0) {\n                    $('.card-item-category, .card-item-field, .form-item-category, #item-details-card-categories')\n                        .addClass('hidden');\n                    $('.no-item-fields').removeClass('hidden');\n                    $('#card-item-fields').closest().addClass('collapsed');\n                } else {\n                    // \n                    if (data.template_id === '') {\n                        $('#list-group-item-main')\n                            .children('.list-group')\n                            .removeClass('hidden');\n                        $('#card-item-category').removeClass('hidden');\n                    }\n\n                    if (data.fields.length === 0) {\n                        if (actionType === 'show') {\n                            $('#item-details-card-categories').addClass('hidden');\n                            // Refresh last item seen\n                            refreshListLastSeenItems();\n                        } else {\n                            // Show the inputs for EDITION\n                            $(data.categories).each(function(index, category) {\n                                $('#form-item-field, #form-item-category-' + category).removeClass('hidden');\n                            });\n                        }\n                    } else {\n                        // Show expected categories\n                        $('.no-item-fields, .form-item-category').addClass('hidden');\n\n                        // In edition mode, show all fields in expected Categories\n                        $(data.categories).each(function(index, category) {\n                            $('#form-item-field, #form-item-category-' + category).removeClass('hidden');\n                        });\n\n                        // Now show expected fields and values\n                        $(data.fields).each(function(index, field) {\n                            // Show cateogry\n                            $('#card-item-category-' + field.parent_id).removeClass('hidden');\n\n                            // Is data encrypted\n                            // Then base64 decode is required\n                            if (field.encrypted === 1) {\n                                field.value = atob(field.value);\n                            }\n\n                            // Show field\n                            if (field.masked === 1) {\n                                // Item card\n                                $('#card-item-field-' + field.id)\n                                    .removeClass('hidden')\n                                    .children(\".card-item-field-value\")\n                                    .html(\n                                        '<span data-field-id=\"' + field.id + '\" class=\"pointer replace-asterisk\"><?php echo $var['hidden_asterisk']; ?></span>' +\n                                        '<input type=\"text\" style=\"width:0px; height:0px; border:0px;\" id=\"hidden-card-item-field-value-' + field.id + '\" value=\"' + (field.value) + '\">'\n                                    )\n                                $('#card-item-field-' + field.id)\n                                    .children(\".btn-copy-clipboard-clear\")\n                                    .attr('data-clipboard-target', '#hidden-card-item-field-value-' + field.id);\n                            } else {\n                                // Show Field\n                                $('#card-item-field-' + field.id)\n                                    .removeClass('hidden')\n                                    .children(\".card-item-field-value\")\n                                    .html(field.value);\n                            }\n                            // Item edit form\n                            $('#form-item-field-' + field.id)\n                                .children(\".form-item-field-custom\")\n                                .val(field.value);\n                        });\n\n                        // Manage template to show\n                        if (data.template_id !== '' && $.inArray(data.template_id, data.categories) > -1) {\n                            // Tick the box in edit mode\n                            $('#template_' + data.template_id).iCheck('check');\n\n                            // Hide existing data as replaced by Category template                                \n                            $('#list-group-item-main, #item-details-card-categories')\n                                .children('.list-group')\n                                .addClass('hidden');\n\n                            // Move the template in place of item main  \n                            $('#card-item-category-' + data.template_id)\n                                .addClass('fields-to-move')\n                                .detach()\n                                .appendTo('#list-group-item-main');\n\n                            // If only one category of Custom Fields\n                            // Then hide the CustomFields div\n                            if (actionType === 'show') {\n                                if (data.categories.length === 1) {\n                                    $('#item-details-card-categories').addClass('hidden');\n                                } else {\n                                    $('#item-details-card-categories').removeClass('hidden');\n                                }\n                            }\n                        }\n                    }\n                }\n\n\n                // Waiting\n                $('#card-item-attachments').html(\"<?php echo langHdl('please_wait'); ?>\");\n\n                // Manage clipboard for link\n                if (clipboardForLink) clipboardForLink.destroy();\n                clipboardForLink = new ClipboardJS(\n                    '#get_item_link',\n                    {\n                        text: function(e) {\n                            return (\"<?php echo $SETTINGS['cpassman_url'];?>/index.php?page=items&group=\"+store.get('teampassItem').folderId+\"&id=\"+store.get('teampassItem').id);\n                        }\n                    })\n                    .on('success', function(e) {\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('copy_to_clipboard'); ?>',\n                            '', {\n                                timeOut: 2000,\n                                progressBar: true,\n                                positionClass: 'toast-top-right'\n                            }\n                        );\n                        e.clearSelection();\n                    });\n\n                // Manage clipboard button\n                if (itemClipboard) itemClipboard.destroy();\n                itemClipboard = new ClipboardJS('.btn-copy-clipboard-clear', {\n                    text: function(e) {\n                        return ($($(e).data('clipboard-target')).val());\n                    }\n                })\n                .on('success', function(e) {\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('copy_to_clipboard'); ?>',\n                        '', {\n                            timeOut: 2000,\n                            progressBar: true,\n                            positionClass: 'toast-top-right'\n                        }\n                    );\n                    e.clearSelection();\n                });\n\n                // Prepare clipboard - COPY LOGIN\n                if (data.login !== '') {\n                    $('#card-item-login-btn').removeClass('hidden');\n                } else {\n                    $('#card-item-login-btn').addClass('hidden');\n                }\n\n                // Prepare clipboard - COPY PASSWORD\n                if (data.pw !== '') {\n                    new ClipboardJS('#card-item-pwd-button', {\n                            text: function() {\n                                return (data.pw);\n                            }\n                        })\n                        .on('success', function(e) {\n                            itemLog(\n                                'at_password_copied',\n                                e.trigger.dataset.clipboardId,\n                                $('#card-item-label').text()\n                            );\n\n                            // Warn user about clipboard clear\n                            if (store.get('teampassSettings').clipboard_life_duration === undefined || parseInt(store.get('teampassSettings').clipboard_life_duration) === 0) {\n                                toastr.remove();\n                                toastr.info(\n                                    '<?php echo langHdl('copy_to_clipboard'); ?>',\n                                    '', {\n                                        timeOut: 2000,\n                                        positionClass: 'toast-top-right',\n                                        progressBar: true\n                                    }\n                                );\n                            } else {\n                                toastr.warning(\n                                    '<?php echo langHdl('clipboard_will_be_cleared'); ?>',\n                                    '', {\n                                        timeOut: store.get('teampassSettings').clipboard_life_duration * 1000,\n                                        progressBar: true\n                                    }\n                                );\n\n                                // Set clipboard eraser\n                                clearClipboardTimeout(\n                                    store.get('teampassSettings').clipboard_life_duration\n                                );\n                            }\n\n                            e.clearSelection();\n                        });\n                    $('#card-item-pwd-button').removeClass('hidden');\n                } else {\n                    $('#card-item-pwd-button').addClass('hidden');\n                }\n\n                // Prepare clipboard - COPY EMAIL\n                if (data.email !== '') {\n                    $('#card-item-email-btn').removeClass('hidden');\n                } else {\n                    $('#card-item-email-btn').addClass('hidden');\n                }\n\n                // Prepare auto_update info\n                $('#card-item-misc').html('');\n                if (parseInt(data.auto_update_pwd_frequency) !== '0') {\n                    $('#card-item-misc')\n                        .append('<span class=\"fas fa-shield infotip mr-4\" title=\"<?php echo langHdl('auto_update_enabled'); ?>&nbsp;' + data.auto_update_pwd_frequency + '\"></span>');\n                }\n\n                // Show Notification engaged\n                if (data.notification_status === true) {\n                    $('#card-item-misc')\n                        .append('<span class=\"mr-4 icon-badge\" id=\"card-item-misc-notification\"><span class=\"far fa-bell infotip text-success\" title=\"<?php echo langHdl('notification_engaged'); ?>\"></span></span>');\n                } else {\n                    $('#card-item-misc')\n                        .append('<span class=\"mr-4 icon-badge\" id=\"card-item-misc-notification\"><span class=\"far fa-bell-slash infotip text-warning\" title=\"<?php echo langHdl('notification_not_engaged'); ?>\"></span></span>');\n                }\n\n                // Prepare counter\n                $('#card-item-misc')\n                    .append('<span class=\"icon-badge mr-4\"><span class=\"far fa-eye infotip\" title=\"<?php echo langHdl('viewed_number'); ?>\"></span><span class=\"badge badge-info icon-badge-text icon-badge-far\">' + data.viewed_no + '</span></span>');\n\n                // Delete after X views\n                if (data.to_be_deleted !== '') {\n                    if (parseInt(data.to_be_deleted_type) === 1) {\n                        $('#form-item-deleteAfterShown').val(data.to_be_deleted);\n                        $('#form-item-deleteAfterDate').val('');\n                    } else {\n                        $('#form-item-deleteAfterShown').val('');\n                        $('#form-item-deleteAfterDate').val(data.to_be_deleted);\n                    }\n                    // Show icon\n                    $('#card-item-misc')\n                        .append('<span class=\"icon-badge mr-5\"><span class=\"far fa-trash-alt infotip\" title=\"<?php echo langHdl('automatic_deletion_engaged'); ?>\"></span><span class=\"badge badge-danger icon-badge-text-bottom-right\">' + data.to_be_deleted + '</span></span>');\n                }\n\n                // reset password shown info\n                $('#card-item-pwd').removeClass('pwd-shown');\n\n                //Anyone can modify button\n                if (parseInt(data.anyone_can_modify) === 1) {\n                    $('#form-item-anyoneCanModify').iCheck('check');\n                } else {\n                    $('#form-item-anyoneCanModify').iCheck('uncheck');\n                }\n\n                if (parseInt(data.show_details) === 1 && parseInt(data.show_detail_option) !== 2) {\n                    // continue loading data\n                    showDetailsStep2(itemId, actionType);\n                } else if (parseInt(data.show_details) === 1 && parseInt(data.show_detail_option) === 2) {\n                    $('#item_details_nok').addClass('hidden');\n                    $('#item_details_ok').addClass('hidden');\n                    $('#item_details_expired_full').show();\n                    $('#menu_button_edit_item, #menu_button_del_item, #menu_button_copy_item, #menu_button_add_fav, #menu_button_del_fav, #menu_button_show_pw, #menu_button_copy_pw, #menu_button_copy_login, #menu_button_copy_link').attr('disabled', 'disabled');\n                    $('#div_loading').addClass('hidden');\n                } else {\n                    //Dont show details\n                    $('#item_details_nok').removeClass('hidden');\n                    $('#item_details_nok_restriction_list').html('<div style=\"margin:10px 0 0 20px;\"><b><?php echo langHdl('author'); ?>: </b>' + data.author + '<br /><b><?php echo langHdl('restricted_to'); ?>: </b>' + data.restricted_to + '<br /><br /><u><a href=\"#\" onclick=\"openReasonToAccess()\"><?php echo langHdl('request_access_ot_item'); ?></a></u></div>');\n\n                    $('#reason_to_access').remove();\n                    $('#item_details_nok')\n                        .append('<input type=\"hidden\" id=\"reason_to_access\" value=\"' + data.id + ',' + data.id_user + '\">');\n\n                    // Protect\n                    $('#item_details_ok').addClass('hidden');\n                    $('#item_details_expired').addClass('hidden');\n                    $('#item_details_expired_full').addClass('hidden');\n                    $('#menu_button_edit_item, #menu_button_del_item, #menu_button_copy_item, #menu_button_add_fav, #menu_button_del_fav, #menu_button_show_pw, #menu_button_copy_pw, #menu_button_copy_login, #menu_button_copy_link').attr('disabled', 'disabled');\n                    $('#div_loading').addClass('hidden');\n                }\n\n                // Prepare bottom buttons\n                if ($('#list-item-row_'+data.id).prev('.list-item-row').attr('data-item-id') !== undefined) {\n                    $('.but-prev-item')\n                        .html('<i class=\"fas fa-arrow-left mr-2\"></i>' + unescape($('#list-item-row_'+data.id).prev('.list-item-row').attr('data-label')))\n                        .attr('data-prev-item-id', $('#list-item-row_'+data.id).prev('.list-item-row').attr('data-item-id'))\n                        .removeClass('hidden');\n                }\n                if ($('#list-item-row_'+data.id).next('.list-item-row').attr('data-item-id') !== undefined) {\n                    $('.but-next-item')\n                        .html('<i class=\"fas fa-arrow-right mr-2\"></i>' + unescape($('#list-item-row_'+data.id).next('.list-item-row').attr('data-label')))\n                        .attr('data-next-item-id', $('#list-item-row_'+data.id).next('.list-item-row').attr('data-item-id'))\n                        .removeClass('hidden');\n                }\n                if (debugJavascript === true) {\n                    console.log(\"PREV: \" + $('#list-item-row_'+data.id).prev('.list-item-row').attr('data-item-id') + \" - NEXT: \" + $('#list-item-row_'+data.id).next('.list-item-row').attr('data-item-id'));\n                }\n\n                // Inform user\n                toastr.remove();\n                toastr.info(\n                    '<?php echo langHdl('done'); ?>',\n                    '', {\n                        timeOut: 1000\n                    }\n                );\n\n                return true;\n            }\n        );\n    }\n\n\n    /*\n     * Loading Item details step 2\n     */\n    function showDetailsStep2(id, actionType) {\n        requestRunning = true;\n        $.post(\n            'sources/items.queries.php', {\n                type: 'showDetailsStep2',\n                id: id,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'showDetailsStep2');\n\n                if (debugJavascript === true) {\n                    console.log('RECEIVED STEP2 - used key: <?php echo $_SESSION['key']; ?>');\n                    console.log(data);\n                }\n\n                // Attachments\n                if (data !== false) {\n                    if (data.attachments.length === 0) {\n                        $('#card-item-attachments-badge').html('<?php echo langHdl('none'); ?>');\n                        $('#card-item-attachments')\n                            .html('<?php echo langHdl('no_attachment'); ?>')\n                            .parent()\n                            .addClass('collapsed');\n                    } else {\n                        var html = '',\n                            htmlFull = '',\n                            counter = 1,\n                            nbFiles = 0;\n                        $.each(data.attachments, function(i, value) {\n                            // Manage new row\n                            if (counter === 1) {\n                                htmlFull += '<div class=\"row\">';\n                                html += '<div class=\"row\">';\n                            }\n\n                            html += '<div class=\"col-6\">' +\n                                '<div class=\"callout callout-info\">' +\n                                '<i class=\"' + value.icon + ' mr-2 text-info\"></i>';\n\n                            // Show VIEW image icon\n                            if (value.is_image === 1) {\n                                html +=\n                                    '<i class=\"fas fa-eye infotip preview-image pointer mr-2\" ' +\n                                    'title=\"<?php echo langHdl('see'); ?>\" ' +\n                                    'data-file-id=\"' + value.id + '\" data-file-title=\"' +\n                                    (isBase64(value.filename) === true ? atob(value.filename) : value.filename) + '\"></i>';\n                            }\n\n                            // Show DOWNLOAD icon\n                            downloadIcon =\n                                '<a class=\"text-secondary infotip mr-2\" href=\"sources/downloadFile.php?name=' + encodeURI(value.filename) + '&key=<?php echo $_SESSION['key']; ?>&key_tmp=' + value.key + '&fileid=' + value.id + '\" title=\"<?php echo langHdl('download'); ?>\">' +\n                                '<i class=\"fas fa-file-download\"></i></a>';\n                            html += downloadIcon;\n\n                            // Show other info\n                            html +=\n                                '<span class=\"font-weight-bold mr-3\">' +\n                                (isBase64(value.filename) === true ? atob(value.filename) : value.filename) + '</span>' +\n                                '<span class=\"mr-2 font-weight-light\">(' + value.extension + ')</span>' +\n                                '<span class=\"font-italic\">' + value.size + '</span>' +\n                                '</div></div>';\n\n                            htmlFull += '<div class=\"col-6 edit-attachment-div\"><div class=\"info-box bg-secondary-gradient\">' +\n                                '<span class=\"info-box-icon bg-info\"><i class=\"' + value.icon + '\"></i></span>' +\n                                '<div class=\"info-box-content\"><span class=\"info-box-text\">' +\n                                (isBase64(value.filename) === true ? atob(value.filename) : value.filename) + '.' + value.extension + '</span>' +\n                                '<span class=\"info-box-text\">' + downloadIcon +'</span>' +\n                                '<span class=\"info-box-text\"><i class=\"fas fa-trash pointer delete-file\" data-file-id=\"' + value.id + '\"></i></span></div>' +\n                                '</div></div>';\n\n                            if (counter === 2) {\n                                htmlFull += '</div>';\n                                html += '</div>';\n                                counter = 1;\n                            } else {\n                                counter += 1;\n                            }\n                            nbFiles += 1;\n                        });\n                        $('#card-item-attachments').html(html);\n                        $('#card-item-attachments-badge').html(nbFiles);\n                        $('#form-item-attachments').html(htmlFull);\n                        $('#form-item-attachments-zone').removeClass('hidden');\n                    }\n                }\n                // Hide loading state\n                $('#card-item-attachments').nextAll().addClass('hidden');\n\n                // Show restrictions with Badges\n                var html_restrictions = '';\n                $.each(store.get('teampassItem').id_restricted_to, function(i, value) {\n                    html_restrictions +=\n                        '<span class=\"badge badge-info mr-2 mb-1\"><i class=\"fas fa-group fa-sm mr-1\"></i>' +\n                        data.users_list.find(x => x.id === parseInt(value)).name + '</span>';\n                });\n                $.each(store.get('teampassItem').id_restricted_to_roles, function(i, value) {\n                    html_restrictions +=\n                        '<span class=\"badge badge-info mr-2 mb-1\"><i class=\"fas fa-group fa-sm mr-1\"></i>' +\n                        data.roles_list.find(x => x.id === parseInt(value)).title + '</span>';\n                });\n                if (html_restrictions === '') {\n                    $('#card-item-restrictedto').html('<?php echo langHdl('no_special_restriction'); ?>');\n                } else {\n                    $('#card-item-restrictedto').html(html_restrictions);\n                }\n\n\n                $('#edit_past_pwds').attr('title', (data.history_of_pwds)); //htmlspecialchars_decode \n                $('#edit_past_pwds_div').html((data.history_of_pwds)); //htmlspecialchars_decode \n\n                //$('#id_files').html(data.files_id);\n                //$('#hid_files').val(data.files_id);\n                //$('#item_edit_list_files').html(data.files_edit);\n\n                //$('#index-last-pwds').html(htmlspecialchars_decode(data.div_last_items));\n\n                // function calling image lightbox when clicking on link\n                $('a.image_dialog').click(function(event) {\n                    event.preventDefault();\n                    PreviewImage($(this).attr('href'), $(this).attr('title'));\n                });\n\n\n                // set indicator if item has change proposal\n                if (parseInt(data.has_change_proposal) > 0) {\n                    $('#item_extra_info').prepend('<i class=\"fas fa-lightbulb-o fa-sm mi-yellow tip\" title=\"<?php echo langHdl('item_has_change_proposal'); ?>\"></i>&nbsp;');\n                }\n\n\n                $('.infotip').tooltip();\n\n                // Now load History\n                if (actionType === 'show') {\n                    $.post(\n                        \"sources/items.queries.php\", {\n                            type: \"load_item_history\",\n                            item_id: store.get('teampassItem').id,\n                            key: \"<?php echo $_SESSION['key']; ?>\"\n                        },\n                        function(data) {\n                            //decrypt data\n                            data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'load_item_history');\n                            if (debugJavascript === true) {\n                                console.info('History:');\n                                console.log(data);\n                            }\n                            if (data.error === '') {\n                                var html = '',\n                                    nbHistoryEvents = 0;\n                                $.each(data.history, function(i, value) {\n                                    html += '<div class=\"direct-chat-msg\"><div class=\"direct-chat-info clearfix\">' +\n                                        '<span class=\"direct-chat-name float-left\">' + value.name + '</span>' +\n                                        '<span class=\"direct-chat-timestamp float-right\">' + value.date + '</span>' +\n                                        '</div>' +\n                                        '<img class=\"direct-chat-img\" src=\"' + value.avatar + '\" alt=\"Message User Image\">' +\n                                        '<div class=\"direct-chat-text\"><span class=\"text-capitalize\">' +\n                                        (value.action === '' ? '' : (value.action)) + '</span> ' +\n                                        (value.detail === '' ? '' : (' | ' + value.detail)) + '</div></div>';\n                                    nbHistoryEvents += 1;\n                                });\n                                // Display\n                                $('#card-item-history').html(html);\n                                $('#card-item-history-badge').html(nbHistoryEvents);\n                            }\n\n                            // Collapse History\n                            $('#card-item-history').closest().addClass('collapsed');\n\n                            // Hide loading state\n                            $('#card-item-history').nextAll().addClass('hidden');\n                        }\n                    );\n                } else if (actionType === 'edit') {\n                    getPrivilegesOnItem(\n                        selectedFolderId,\n                        0\n                    );\n                }\n\n                // Prepare Select2 inputs\n                $('.select2').select2({\n                    language: '<?php echo isset($_SESSION['user_language_code']) === true ? $_SESSION['user_language_code'] : 'en'; ?>'\n                });\n\n                // Prepare datePicker\n                $('#form-item-deleteAfterDate, .datepicker').datepicker({\n                    format: '<?php echo str_replace(['Y', 'M'], ['yyyy', 'mm'], $SETTINGS['date_format']); ?>',\n                    todayHighlight: true,\n                    todayBtn: true,\n                    language: '<?php echo isset($_SESSION['user_language_code']) === true ? $_SESSION['user_language_code'] : 'en'; ?>'\n                });\n\n                // Prepare Date range picker with time picker\n                $('.timepicker').timepicker({\n                    minuteStep: 5,\n                    template: false,\n                    showSeconds: true,\n                    showMeridian: false,\n                    showInputs: false,\n                    explicitMode: true\n                });\n\n                // Delete inputs related files uploaded but not confirmed\n                var data = {\n                    'item_id': store.get('teampassItem').id,\n                }\n\n                $.post(\n                    \"sources/items.queries.php\", {\n                        type: 'delete_uploaded_files_but_not_saved',\n                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function (data) {\n                        /*// add track-change class on item form\n                        setTimeout(\n                            $('#form-item-label, #form-item-description, #form-item-login, #form-item-password, #form-item-email, #form-item-url, #form-item-folder, #form-item-restrictedto, #form-item-tags, #form-item-anyoneCanModify, #form-item-deleteAfterShown, #form-item-deleteAfterDate, #form-item-anounce, .form-item-field-custom').addClass('track-change'),\n                            2000\n                        );*/\n\n                        requestRunning = false;\n                    }\n                );\n            }\n        );\n    };\n\n    // Clear history form\n    $(document)\n        .on('click', '#form-item-history-clear', function() {\n            $('.history').val('');\n        })\n        .on('click', '#form-item-history-insert', function() {\n            if ($('#form-item-history-label').val() === '' ||\n                $('#form-item-history-date').val() === '' ||\n                $('#form-item-history-time').val() === ''\n            ) {\n                // Inform user\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('all_fields_mandatory'); ?>',\n                    '<?php echo langHdl('warning'); ?>', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Insert new entry\n            var data = {\n                'item_id': store.get('teampassItem').id,\n                'label': DOMPurify.sanitize($('#form-item-history-label').val()),\n                'date': DOMPurify.sanitize($('#form-item-history-date').val()),\n                'time': DOMPurify.sanitize($('#form-item-history-time').val()),\n            }\n            $.post(\n                \"sources/items.queries.php\", {\n                    type: 'history_entry_add',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'history_entry_add');\n                    if (debugJavascript === true) console.log(data);\n                    $('.history').val('');\n\n                    // Inform user\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            );\n        })\n        .on('click', '.nav-link', function() {\n            if ($(this).attr('href') === '#tab_5') {\n                $('#form-item-buttons').addClass('hidden');\n            } else {\n                $('#form-item-buttons').removeClass('hidden');\n            }\n\n        });\n\n    // When click on Trash attachment icon\n    $(document).on('click', '.delete-file', function() {\n        var thisButton = $(this),\n            thisFileId = thisButton.data('file-id');\n\n        if (thisFileId !== undefined && thisFileId !== '') {\n            // Delete the file\n            var data = {\n                'file_id': thisFileId,\n            };\n\n            $.post(\n                'sources/items.queries.php', {\n                    type: 'delete_attached_file',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'delete_attached_file');\n                    if (debugJavascript === true) console.log(data);\n\n                    //check if format error\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Remove the file in UI\n                        thisButton.closest('.edit-attachment-div').remove();\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n        }\n    });\n\n    //calling image lightbox when clicking on link\n    $(document).on('click', '.preview-image', function(event) {\n        event.preventDefault();\n        PreviewImage($(this).data('file-id'));\n    });\n\n    PreviewImage = function(fileId) {\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('loading_image'); ?>...<i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-2\"></i>'\n        );\n\n        $.post(\n            \"sources/items.queries.php\", {\n                type: \"image_preview_preparation\",\n                id: fileId,\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //decrypt data\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'image_preview_preparation');\n                //if (debugJavascript === true) console.log(data);\n\n                //check if format error\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    $(\"#card-item-preview\").html('<img id=\"image_files\" src=\"\">');\n                    //Get the HTML Elements\n                    imageDialog = $(\"#card-item-preview\");\n                    imageTag = $('#image_files');\n\n                    //Set the image src\n                    imageTag.attr(\"src\", \"data:\" + data.file_type + \";base64,\" + data.file_content);\n                    imageTag.attr(\"class\", \"img-fluid\");\n\n                    //When the image has loaded, display the dialog\n                    showModalDialogBox(\n                        '#warningModal',\n                        data.filename,\n                        $(imageDialog).html(),\n                        '',\n                        'Close',\n                        'modal-xl'\n                    );\n\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n\n                    /*\n                                        var pre = document.createElement('pre');\n                                        pre.style.textAlign = \"center\";\n                                        $(pre).append($(imageDialog).html());\n                                        alertify\n                                            .alert(pre)\n                                            .set({\n                                                label: '<?php echo langHdl('close'); ?>',\n                                                closable: false,\n                                                padding: false,\n                                                title: data.filename,\n                                                resizable: true,\n                                            })\n                                            .resizeTo('90%', '250px');*/\n                }\n            }\n        );\n    };\n\n    /**\n     */\n    function itemLog(logCase, itemId, itemLabel) {\n        itemId = itemId || $('#id_item').val();\n\n        var data = {\n            \"id\": itemId,\n            \"label\": DOMPurify.sanitize(itemLabel),\n            \"user_id\": \"<?php echo $_SESSION['user_id']; ?>\",\n            \"action\": logCase,\n            \"login\": \"<?php echo $_SESSION['login']; ?>\"\n        };\n\n        $.post(\n            \"sources/items.logs.php\", {\n                type: \"log_action_on_item\",\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            }\n        );\n    }\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function prepareOneTimeView() {\n        //Send query\n        $.post(\n            \"sources/items.queries.php\", {\n                type: \"generate_OTV_url\",\n                id: store.get('teampassItem').id,\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //check if format error\n                if (data.error == \"\") {\n                    $('#form-item-otv-link').val(data.url);\n                    // prepare clipboard\n                    var clipboard = new ClipboardJS(\"#form-item-otv-copy-button\", {\n                        text: function() {\n                            return data.url;\n                        }\n                    });\n                    clipboard.on('success', function(e) {\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('copy_to_clipboard'); ?>',\n                            '', {\n                                timeOut: 2000,\n                                positionClass: 'toast-top-right',\n                                progressBar: true\n                            }\n                        );\n                        e.clearSelection();\n                    });\n                }\n            },\n            \"json\"\n        );\n    }\n\n    /**\n     */\n    function getPrivilegesOnItem(val, edit, context) {\n        context = context || \"\"; // make context optional\n\n        // make sure to use correct selected folder\n        if (val === false) {\n            val = selectedFolderId;\n        }\n        if (debugJavascript === true) console.log('Get privilege for folder ' + val);\n            \n        if (val === \"\" || typeof val === \"undefined\" || val === false) {\n            toastr.remove();\n            toastr.error(\n                '',\n                '<?php echo langHdl('please_select_a_folder'); ?>',\n                {\n                    timeOut: 5000,\n                    positionClass: 'toast-top-right',\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n\n        return $.post(\n            \"sources/items.queries.php\", {\n                type: \"get_complixity_level\",\n                folder_id: val,\n                context: context,\n                item_id: store.get('teampassItem').id,\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'get_complixity_level');\n\n                if (debugJavascript === true) {\n                    console.info('GET COMPLEXITY LEVEL');\n                    console.log(data);\n                }\n                var executionStatus = true;\n\n                if (data.error === false) {\n                    // Do some prepartion\n\n                    // Prepare list of users where needed\n                    $('#form-item-restrictedto, #form-item-anounce').empty().change(); //.val('')\n                    // Users restriction list\n                    var html_restrictions = '';\n\n                    $(data.usersList).each(function(index, value) {\n                        // Prepare list for FORM\n                        $(\"#form-item-restrictedto\")\n                            .append('<option value=\"' + value.id + '\" class=\"restriction_is_user\">' + value.name + '</option>');\n\n                        // Prepare list of emailers\n                        $('#form-item-anounce').append('<option value=\"' + value.email + '\">' + value.name + '</option>');\n                    });\n                    if (data.setting_restricted_to_roles === 1) {\n                        //add optgroup\n                        var optgroup = $('<optgroup label=\"<?php echo langHdl('users'); ?>\">');\n                        $(\".restriction_is_user\").wrapAll(optgroup);\n\n                        // Now add the roles to the list\n                        $(data.rolesList).each(function(index, value) {\n                            $(\"#form-item-restrictedto\")\n                                .append('<option value=\"role_' + value.id + '\" class=\"restriction_is_role\">' +\n                                    value.title + '</option>');\n                        });\n                        /// Add a group label for Groups\n                        $('.restriction_is_role').wrapAll($('<optgroup label=\"<?php echo langHdl('roles'); ?>\">'));\n                    }\n\n\n                    //\n                    $('#card-item-visibility').html(data.visibility);\n\n                    // Prepare Select2\n                    $('.select2').select2({\n                        language: '<?php echo $_SESSION['user_language_code']; ?>'\n                    });\n\n                    // Show selected restricted inputs\n                    $('#form-item-restrictedto')\n                        .val(data.usersList.concat(\n                            data.rolesList.map(i => 'role_' + i)))\n                        .change();\n\n                    // If restricted to Users then select them\n                    if (store.get('teampassItem').id_restricted_to !== undefined) {\n                        $('#form-item-restrictedto')\n                            .val(store.get('teampassItem').id_restricted_to)\n                            .trigger('change');\n                    }\n\n                }\n\n                store.update(\n                    'teampassItem',\n                    function(teampassItem) {\n                        teampassItem.folderId = val,\n                            teampassItem.error = data.error === undefined ? '' : data.error,\n                            teampassItem.message = data.message === undefined ? '' : data.message,\n                            teampassItem.folderComplexity = data.val === undefined ? '' : parseInt(data.val),\n                            teampassItem.folderIsPersonal = data.personal === undefined ? '' : parseInt(data.personal),\n                            teampassItem.itemMinimumComplexity = data.complexity === undefined ? '' : data.complexity,\n                            teampassItem.itemVisibility = data.visibility === undefined ? '' : data.visibility,\n                            teampassItem.id_restricted_to = data.usersList === undefined ? '' : data.usersList,\n                            teampassItem.id_restricted_to_roles = data.rolesList === undefined ? '' : data.rolesList,\n                            teampassItem.item_rights = data.itemAccessRight === undefined ? '' : data.itemAccessRight\n                    }\n                );\n                //if (debugJavascript === true) console.log('Content of teampassItem;')\n                //if (debugJavascript === true) console.log(store.get('teampassItem'))\n            }\n        );\n    }\n\n    $('.password-generate').click(function() {\n        var elementId = $(this).data('id');\n        $('#' + elementId).focus();\n        if (debugJavascript === true) console.log(elementId);\n\n        // If no criteria is set then do secure\n        var secure_pwd = false;\n        var anyBoxesChecked = false;\n        if ($('.password-definition:checked').length > 0) {\n            anyBoxesChecked = true;\n        }\n        if (anyBoxesChecked === false || $('#pwd-definition-secure').prop('checked') === true) {\n            secure_pwd = true;\n        }\n        \n        $.post(\n            \"sources/main.queries.php\", {\n                type: \"generate_password\",\n                type_category: 'action_user',\n                size: $('#pwd-definition-size').val(),\n                lowercase: $('#pwd-definition-lcl').prop(\"checked\"),\n                numerals: $('#pwd-definition-numeric').prop(\"checked\"),\n                capitalize: $('#pwd-definition-ucl').prop(\"checked\"),\n                symbols: $('#pwd-definition-symbols').prop(\"checked\"),\n                secure_pwd: secure_pwd,\n                force: \"false\",\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                if (debugJavascript === true) console.log(data)\n                if (data.error == \"true\") {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        data.error_msg,\n                        '<?php echo langHdl('error'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                } else {\n                    $(\"#\" + elementId).val(data.key).focus();\n\n                    // Form has changed\n                    userDidAChange = true;\n                    if (debugJavascript === true) console.log('User did a change during generate_password > ' + userDidAChange);\n                    //$('#' + elementId).attr('data-change-ongoing', true);;\n\n                    $(\"#form-item-password\").pwstrength(\"forceUpdate\");\n\n                    // SHow button in sticky footer\n                    //$('#form-item-buttons').addClass('sticky-footer');\n                }\n            }\n        );\n    });\n\n    $('#item-button-password-copy').click(function() {\n        $('#form-item-password-confirmation').val($('#form-item-password').val());\n    });\n\n    /**\n     * On tag badge click, launch the search query\n     */\n    function searchItemsWithTags(criteria) {\n        if (criteria !== '') {\n            $('#folders-tree-card, .columns-position').removeClass('hidden');\n            $('.item-details-card, .form-item-action, .form-item, .form-folder-action').addClass('hidden');\n\n            $('#find_items').val(criteria);\n\n            searchItems(criteria);\n        }\n    }\n\n    /**\n     * Checks if string is base64 encoded\n     *\n     * @return bool\n     */\n    function isBase64(str) {\n        try {\n            return btoa(atob(str)) == str;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    /**\n     * Scroll back to previous vertical position\n     *\n     * @return void\n     */\n    function scrollBackToPosition() {\n        // Scroll back to position\n        if (store.get('teampassApplication').tempScrollTop > 0) {\n            window.scrollTo({\n                top: store.get('teampassApplication').tempScrollTop\n            });\n        }\n    }\n\n\n    function prepareFolderDragNDrop()\n    {\n        $('.is-draggable').draggable({\n            cursor: 'move',\n            cursorAt: {\n                top: -5,\n                left: -5\n            },\n            opacity: 0.8,\n            appendTo: 'body',\n            stop: function(event, ui) {\n                $(this).removeClass('bg-warning');\n            },\n            start: function(event, ui) {\n                $(this).addClass('bg-warning');\n            },\n            helper: function(event) {\n                return $('<div class=\"bg-gray p-2 font-weight-light\">' + $(this).find('.list-item-row-description').text() + '</div>');\n            }\n        });\n        $('.folder').droppable({\n            hoverClass: 'bg-warning',\n            tolerance: 'pointer',\n            drop: function(event, ui) {\n                // Check if same folder\n                if (parseInt($(this).attr('id').substring(4)) === parseInt(ui.draggable.data('item-tree-id'))) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('error_not_allowed_to'); ?>',\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n\n                // Warn user that it starts\n                toastr.info(\n                    '<i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>'\n                );\n\n                // Hide helper\n                ui.draggable.addClass('hidden');\n\n                //move item\n                var data = {\n                    'item_id': ui.draggable.data('item-id'),\n                    'folder_id': $(this).attr('id').substring(4)\n                }\n                $.post(\n                    'sources/items.queries.php', {\n                        type: 'move_item',\n                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>', 'items.queries.php', 'move_item');\n\n                        if (debugJavascript === true) console.log(data)\n\n                        if (data.error === true) {\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                            ui.draggable.removeClass('hidden');\n                            return false;\n                        }\n                        \n                        //increment / decrement number of items in folders\n                        $('#itcount_' + data.from_folder).text(refreshFolderCounters($('#itcount_' + data.from_folder).text(), 'decrement'));\n                        $('#itcount_' + data.to_folder).text(refreshFolderCounters($('#itcount_' + data.to_folder).text(), 'increment'));\n\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('success'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                );\n            }\n        });\n    }\n\n    /**\n     * Permits to refresh the folder counters when performing an item drag and drop\n     */\n    function refreshFolderCounters(counter, operation)\n    {\n        var splitCounter = counter.split('/');\n        if (splitCounter.length <= 3) {\n            if (operation === 'increment') {\n                splitCounter[0]++;\n                if (splitCounter.length === 3) {\n                    splitCounter[1]++;\n                }\n            } else {\n                splitCounter[0]--;\n                if (splitCounter.length === 3) {\n                    splitCounter[1]--;\n                }\n            }\n        }\n        \n        return splitCounter.join('/');\n    }\n\n    /*\n    // Get parameters from url\n    var currentTeampassUrl = new URL(window.location.href);\n    var actionFromUrl = currentTeampassUrl.searchParams.get('action');\n    if (actionFromUrl !== undefined && atob(actionFromUrl) === 'reset_private_key') {\n        // Case where we need to re-encrypt all share keys\n        if (debugJavascript === true) console.log(\"ACTION RE-ENCRYPTION OF SHAREKEYS\");\n\n        $('#dialog-encryption-keys').removeClass('hidden');    \n\n        // Hide other\n        $('.content-header, .content').addClass('hidden');\n\n        alertify.dismissAll();\n    }\n    */\n</script>\n"], "filenames": ["pages/items.js.php"], "buggy_code_start_loc": [2797], "buggy_code_end_loc": [2806], "fixing_code_start_loc": [2797], "fixing_code_end_loc": [2806], "type": "CWE-79", "message": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') in GitHub repository nilsteampassnet/teampass prior to 3.0.7.", "other": {"cve": {"id": "CVE-2023-2591", "sourceIdentifier": "security@huntr.dev", "published": "2023-05-09T10:15:10.683", "lastModified": "2023-05-15T06:15:09.727", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') in GitHub repository nilsteampassnet/teampass prior to 3.0.7."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 4.2}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "nvd@nist.gov", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:teampass:teampass:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.0.7", "matchCriteriaId": "77E017F7-C597-4550-9520-9444D115C381"}]}]}], "references": [{"url": "https://github.com/nilsteampassnet/teampass/commit/57a977c6323656e5dc06ab5c227e75c3465a1a4a", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/705f79f4-f5e3-41d7-82a5-f00441cd984b", "source": "security@huntr.dev", "tags": ["Exploit", "Patch"]}]}, "github_commit_url": "https://github.com/nilsteampassnet/teampass/commit/57a977c6323656e5dc06ab5c227e75c3465a1a4a"}}