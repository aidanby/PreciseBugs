{"buggy_code": ["<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * For the full copyright and license information, please view the COPYING\n * file that was distributed with this source code. You can also view the\n * COPYING file online at http://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  (c) the authors\n * @author     Michael Kaufmann <mkaufmann@nutime.de>\n * @author     Froxlor team <team@froxlor.org> (2010-)\n * @license    GPLv2 http://files.froxlor.org/misc/COPYING.txt\n * @package    Classes\n *\n * @since      0.9.29.1\n *\n */\n\n/**\n * Class FroxlorInstall\n *\n * Does the dirty work\n *\n * @copyright (c) the authors\n * @author Michael Kaufmann <mkaufmann@nutime.de>\n * @author Froxlor team <team@froxlor.org> (2010-)\n * @license GPLv2 http://files.froxlor.org/misc/COPYING.txt\n * @package Install\n *         \n */\nclass FroxlorInstall\n{\n\n\t/**\n\t * define froxlor basepath e.g.\n\t * /var/www/froxlor\n\t *\n\t * @var string\n\t */\n\tprivate $_basepath = null;\n\n\t/**\n\t * theme to use for the installation process\n\t *\n\t * @var string\n\t */\n\tprivate $_theme = 'Sparkle';\n\n\t/**\n\t * language array\n\t *\n\t * @var array\n\t */\n\tprivate $_lng = null;\n\n\t/**\n\t * install data\n\t *\n\t * @var array\n\t */\n\tprivate $_data = null;\n\n\t/**\n\t * supported languages for install\n\t */\n\tprivate $_languages = array(\n\t\t'german' => 'Deutsch',\n\t\t'english' => 'English',\n\t\t'french' => 'Fran\u00e7ais'\n\t);\n\n\t/**\n\t * currently used language\n\t *\n\t * @var string\n\t */\n\tprivate $_activelng = 'english';\n\n\t/**\n\t * check whether to abort due to errors\n\t *\n\t * @var bool\n\t */\n\tprivate $_abort = false;\n\n\t/**\n\t * Class constructor\n\t */\n\tpublic function __construct()\n\t{\n\t\t$this->_basepath = dirname(dirname(dirname(__FILE__)));\n\t\t$this->_data = array();\n\t}\n\n\t/**\n\t * FC\n\t */\n\tpublic function run()\n\t{\n\t\t// send headers\n\t\t$this->_sendHeaders();\n\t\t// check if we have a valid installation already\n\t\t$this->_checkUserdataFile();\n\t\t// include the MySQL-Table-Definitions\n\t\trequire_once $this->_basepath . '/lib/tables.inc.php';\n\t\t// include language\n\t\t$this->_includeLanguageFile();\n\t\t// show the action\n\t\t$this->_showPage();\n\t}\n\n\t/**\n\t * build up and show the install-process-pages\n\t */\n\tprivate function _showPage()\n\t{\n\t\t// set theme for templates\n\t\t$theme = $this->_theme;\n\t\teval(\"echo \\\"\" . $this->_getTemplate(\"header\") . \"\\\";\");\n\t\t// check install-state\n\t\tif ((isset($_POST['installstep']) && $_POST['installstep'] == '1') || (isset($_GET['check']) && $_GET['check'] == '1')) {\n\t\t\t$pagetitle = $this->_lng['install']['title'];\n\t\t\tif ($this->_checkPostData()) {\n\t\t\t\t// ceck data and create userdata etc.etc.etc.\n\t\t\t\t$result = $this->_doInstall();\n\t\t\t} elseif (isset($_GET['check']) && $_GET['check'] == '1') {\n\t\t\t\t// gather data\n\t\t\t\t$result = $this->_showDataForm();\n\t\t\t} else {\n\t\t\t\t// this should not happen\n\t\t\t\t$result = array(\n\t\t\t\t\t'pagecontent' => \"How did you manage to get here? Well, you shouldn't be here. Go back!\",\n\t\t\t\t\t'pagenavigation' => ''\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\t// check for system-requirements first\n\t\t\t$pagetitle = $this->_lng['requirements']['title'];\n\t\t\t$result = $this->_requirementCheck();\n\t\t}\n\t\t// output everything\n\t\t$pagecontent = $result['pagecontent'];\n\t\t$pagenavigation = $result['pagenavigation'];\n\t\teval(\"echo \\\"\" . $this->_getTemplate(\"page\") . \"\\\";\");\n\t\t$current_year = date('Y', time());\n\t\teval(\"echo \\\"\" . $this->_getTemplate(\"footer\") . \"\\\";\");\n\t}\n\n\t/**\n\t * gather data from $_POST if set; return true if all is set,\n\t * false otherwise\n\t *\n\t * @return boolean\n\t */\n\tprivate function _checkPostData()\n\t{\n\t\t$this->_guessServerName();\n\t\t$this->_guessServerIP();\n\t\t$this->_guessWebserver();\n\n\t\t$this->_getPostField('mysql_host', '127.0.0.1');\n\t\t$this->_getPostField('mysql_database', 'froxlor');\n\t\t$this->_getPostField('mysql_unpriv_user', 'froxlor');\n\t\t$this->_getPostField('mysql_unpriv_pass');\n\t\t$this->_getPostField('mysql_root_user', 'root');\n\t\t$this->_getPostField('mysql_root_pass');\n\t\t$this->_getPostField('admin_user', 'admin');\n\t\t$this->_getPostField('admin_pass1');\n\t\t$this->_getPostField('admin_pass2');\n\t\t$this->_getPostField('activate_newsfeed', 1);\n\t\t$posixusername = posix_getpwuid(posix_getuid());\n\t\t$this->_getPostField('httpuser', $posixusername['name']);\n\t\t$posixgroup = posix_getgrgid(posix_getgid());\n\t\t$this->_getPostField('httpgroup', $posixgroup['name']);\n\n\t\tif ($this->_data['mysql_host'] == 'localhost' || $this->_data['mysql_host'] == '127.0.0.1') {\n\t\t\t$this->_data['mysql_access_host'] = $this->_data['mysql_host'];\n\t\t} else {\n\t\t\t$this->_data['mysql_access_host'] = $this->_data['serverip'];\n\t\t}\n\n\t\t// check system-hostname to be a FQDN\n\t\tif ($this->_validate_ip($this->_data['servername']) !== false) {\n\t\t\t$this->_data['servername'] = '';\n\t\t}\n\n\t\tif (empty($this->_data['serverip']) || $this->_validate_ip($this->_data['serverip']) == false) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (isset($_POST['installstep']) && $_POST['installstep'] == '1' && $this->_data['admin_pass1'] == $this->_data['admin_pass2'] && $this->_data['admin_pass1'] != '' && $this->_data['admin_pass2'] != '' && $this->_data['mysql_unpriv_pass'] != '' && $this->_data['mysql_root_pass'] != '' && $this->_data['servername'] != '' && $this->_data['serverip'] != '' && $this->_data['httpuser'] != '' && $this->_data['httpgroup'] != '' && $this->_data['mysql_unpriv_user'] != $this->_data['mysql_root_user']) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * no missing fields or data -> perform actual install\n\t *\n\t * @return array\n\t */\n\tprivate function _doInstall()\n\t{\n\t\t$content = \"<table class=\\\"noborder\\\">\";\n\n\t\t// check for mysql-root-connection\n\t\t$content .= $this->_status_message('begin', $this->_lng['install']['testing_mysql']);\n\n\t\t$options = array(\n\t\t\t'PDO::MYSQL_ATTR_INIT_COMMAND' => 'SET names utf8'\n\t\t);\n\t\t$dsn = \"mysql:host=\" . $this->_data['mysql_host'] . \";\";\n\t\t$fatal_fail = false;\n\t\ttry {\n\t\t\t$db_root = new PDO($dsn, $this->_data['mysql_root_user'], $this->_data['mysql_root_pass'], $options);\n\t\t} catch (PDOException $e) {\n\t\t\t// possibly without passwd?\n\t\t\ttry {\n\t\t\t\t$db_root = new PDO($dsn, $this->_data['mysql_root_user'], '', $options);\n\t\t\t\t// set the given password\n\t\t\t\t$passwd_stmt = $db_root->prepare(\"\n\t\t\t\t\t\tSET PASSWORD = PASSWORD(:passwd)\n\t\t\t\t\t\t\");\n\t\t\t\t$passwd_stmt->execute(array(\n\t\t\t\t\t'passwd' => $this->_data['mysql_root_pass']\n\t\t\t\t));\n\t\t\t} catch (PDOException $e) {\n\t\t\t\t// nope\n\t\t\t\t$content .= $this->_status_message('red', $e->getMessage());\n\t\t\t\t$fatal_fail = true;\n\t\t\t}\n\t\t}\n\n\t\tif (! $fatal_fail) {\n\t\t\t$version_server = $db_root->getAttribute(PDO::ATTR_SERVER_VERSION);\n\t\t\t$sql_mode = 'NO_ENGINE_SUBSTITUTION';\n\t\t\tif (version_compare($version_server, '8.0.11', '<')) {\n\t\t\t\t$sql_mode .= ',NO_AUTO_CREATE_USER';\n\t\t\t}\n\t\t\t$db_root->exec('SET sql_mode = \"' . $sql_mode . '\"');\n\n\t\t\t// ok, if we are here, the database connection is up and running\n\t\t\t$content .= $this->_status_message('green', \"OK\");\n\t\t\t// check for existing db and create backup if so\n\t\t\t$content .= $this->_backupExistingDatabase($db_root);\n\t\t\t// create unprivileged user and the database itself\n\t\t\t$content .= $this->_createDatabaseAndUser($db_root);\n\t\t\t// importing data to new database\n\t\t\t$content .= $this->_importDatabaseData();\n\t\t\tif (! $this->_abort) {\n\t\t\t\t// create DB object for new database\n\t\t\t\t$options = array(\n\t\t\t\t\t'PDO::MYSQL_ATTR_INIT_COMMAND' => 'SET names utf8'\n\t\t\t\t);\n\t\t\t\t$dsn = \"mysql:host=\" . $this->_data['mysql_host'] . \";dbname=\" . $this->_data['mysql_database'] . \";\";\n\t\t\t\t$another_fail = false;\n\t\t\t\ttry {\n\t\t\t\t\t$db = new PDO($dsn, $this->_data['mysql_unpriv_user'], $this->_data['mysql_unpriv_pass'], $options);\n\t\t\t\t\t$version_server = $db->getAttribute(PDO::ATTR_SERVER_VERSION);\n\t\t\t\t\t$sql_mode = 'NO_ENGINE_SUBSTITUTION';\n\t\t\t\t\tif (version_compare($version_server, '8.0.11', '<')) {\n\t\t\t\t\t\t$sql_mode .= ',NO_AUTO_CREATE_USER';\n\t\t\t\t\t}\n\t\t\t\t\t$db->exec('SET sql_mode = \"' . $sql_mode . '\"');\n\t\t\t\t} catch (PDOException $e) {\n\t\t\t\t\t// dafuq? this should have happened in _importDatabaseData()\n\t\t\t\t\t$content .= $this->_status_message('red', $e->getMessage());\n\t\t\t\t\t$another_fail = true;\n\t\t\t\t}\n\n\t\t\t\tif (! $another_fail) {\n\t\t\t\t\t// change settings accordingly\n\t\t\t\t\t$content .= $this->_doSettings($db);\n\t\t\t\t\t// create entries\n\t\t\t\t\t$content .= $this->_doDataEntries($db);\n\t\t\t\t\t$db = null;\n\t\t\t\t\t// create config-file\n\t\t\t\t\t$content .= $this->_createUserdataConf();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$content .= \"</table>\";\n\n\t\t// check if we have unrecoverable errors\n\t\tif ($fatal_fail || $another_fail || $this->_abort) {\n\t\t\t// D'oh\n\t\t\t$navigation = '';\n\t\t\t$msgcolor = 'red';\n\t\t\t$message = $this->_lng['install']['testing_mysql_fail'];\n\t\t\t$link = 'install.php?check=1';\n\t\t\t$linktext = $this->_lng['click_here_to_goback'];\n\t\t} else {\n\t\t\t// all good\n\t\t\t$navigation = '';\n\t\t\t$msgcolor = 'green';\n\t\t\t$message = $this->_lng['install']['froxlor_succ_installed'];\n\t\t\t$link = '../index.php';\n\t\t\t$linktext = $this->_lng['click_here_to_login'];\n\t\t}\n\n\t\teval(\"\\$navigation .= \\\"\" . $this->_getTemplate(\"pagebottom\") . \"\\\";\");\n\n\t\treturn array(\n\t\t\t'pagecontent' => $content,\n\t\t\t'pagenavigation' => $navigation\n\t\t);\n\t}\n\n\t/**\n\t * Create userdata.inc.php file\n\t */\n\tprivate function _createUserdataConf()\n\t{\n\t\t$content = \"\";\n\n\t\t$content .= $this->_status_message('begin', $this->_lng['install']['creating_configfile']);\n\t\t$userdata = \"<?php\\n\";\n\t\t$userdata .= \"// automatically generated userdata.inc.php for Froxlor\\n\";\n\t\t$userdata .= \"\\$sql['host']='\" . addcslashes($this->_data['mysql_host'], \"'\\\\\") . \"';\\n\";\n\t\t$userdata .= \"\\$sql['user']='\" . addcslashes($this->_data['mysql_unpriv_user'], \"'\\\\\") . \"';\\n\";\n\t\t$userdata .= \"\\$sql['password']='\" . addcslashes($this->_data['mysql_unpriv_pass'], \"'\\\\\") . \"';\\n\";\n\t\t$userdata .= \"\\$sql['db']='\" . addcslashes($this->_data['mysql_database'], \"'\\\\\") . \"';\\n\";\n\t\t$userdata .= \"\\$sql_root[0]['caption']='Default';\\n\";\n\t\t$userdata .= \"\\$sql_root[0]['host']='\" . addcslashes($this->_data['mysql_host'], \"'\\\\\") . \"';\\n\";\n\t\t$userdata .= \"\\$sql_root[0]['user']='\" . addcslashes($this->_data['mysql_root_user'], \"'\\\\\") . \"';\\n\";\n\t\t$userdata .= \"\\$sql_root[0]['password']='\" . addcslashes($this->_data['mysql_root_pass'], \"'\\\\\") . \"';\\n\";\n\t\t$userdata .= \"// enable debugging to browser in case of SQL errors\\n\";\n\t\t$userdata .= \"\\$sql['debug'] = false;\\n\";\n\t\t$userdata .= \"?>\";\n\n\t\t// test if we can store the userdata.inc.php in ../lib\n\t\t$userdata_file = dirname(dirname(dirname(__FILE__))) . '/lib/userdata.inc.php';\n\t\tif ($fp = @fopen($userdata_file, 'w')) {\n\t\t\t$result = @fputs($fp, $userdata, strlen($userdata));\n\t\t\t@fclose($fp);\n\t\t\t$content .= $this->_status_message('green', 'OK');\n\t\t\tchmod($userdata_file, 0440);\n\t\t} elseif ($fp = @fopen('/tmp/userdata.inc.php', 'w')) {\n\t\t\t$result = @fputs($fp, $userdata, strlen($userdata));\n\t\t\t@fclose($fp);\n\t\t\t$content .= $this->_status_message('orange', $this->_lng['install']['creating_configfile_temp']);\n\t\t\tchmod('/tmp/userdata.inc.php', 0440);\n\t\t} else {\n\t\t\t$content .= $this->_status_message('red', $this->_lng['install']['creating_configfile_failed']);\n\t\t\t$escpduserdata = nl2br(htmlspecialchars($userdata));\n\t\t\teval(\"\\$content .= \\\"\" . $this->_getTemplate(\"textarea\") . \"\\\";\");\n\t\t}\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * create corresponding entries in froxlor database\n\t *\n\t * @param object $db\n\t *\n\t * @return string status messages\n\t */\n\tprivate function _doDataEntries(&$db)\n\t{\n\t\t$content = \"\";\n\n\t\t$content .= $this->_status_message('begin', $this->_lng['install']['creating_entries']);\n\n\t\t// and lets insert the default ip and port\n\t\t$stmt = $db->prepare(\"\n\t\t\t\tINSERT INTO `\" . TABLE_PANEL_IPSANDPORTS . \"` SET\n\t\t\t\t`ip`= :serverip,\n\t\t\t\t`port` = '80',\n\t\t\t\t`namevirtualhost_statement` = '1',\n\t\t\t\t`vhostcontainer` = '1',\n\t\t\t\t`vhostcontainer_servername_statement` = '1'\n\t\t\t\t\");\n\t\t$stmt->execute(array(\n\t\t\t'serverip' => $this->_data['serverip']\n\t\t));\n\t\t$defaultip = $db->lastInsertId();\n\n\t\t// insert the defaultip\n\t\t$upd_stmt = $db->prepare(\"\n\t\t\t\tUPDATE `\" . TABLE_PANEL_SETTINGS . \"` SET\n\t\t\t\t`value` = :defaultip\n\t\t\t\tWHERE `settinggroup` = 'system' AND `varname` = 'defaultip'\n\t\t\t\t\");\n\t\t$upd_stmt->execute(array(\n\t\t\t'defaultip' => $defaultip\n\t\t));\n\n\t\t$content .= $this->_status_message('green', 'OK');\n\n\t\t// last but not least create the main admin\n\t\t$content .= $this->_status_message('begin', $this->_lng['install']['adding_admin_user']);\n\t\t$ins_data = array(\n\t\t\t'loginname' => $this->_data['admin_user'],\n\t\t\t\t/* use SHA256 default crypt */\n\t\t\t\t'password' => crypt($this->_data['admin_pass1'], '$5$' . md5(uniqid(microtime(), 1)) . md5(uniqid(microtime(), 1))),\n\t\t\t'email' => 'admin@' . $this->_data['servername'],\n\t\t\t'deflang' => $this->_languages[$this->_activelng]\n\t\t);\n\t\t$ins_stmt = $db->prepare(\"\n\t\t\t\tINSERT INTO `\" . TABLE_PANEL_ADMINS . \"` SET\n\t\t\t\t`loginname` = :loginname,\n\t\t\t\t`password` = :password,\n\t\t\t\t`name` = 'Froxlor-Administrator',\n\t\t\t\t`email` = :email,\n\t\t\t\t`def_language` = :deflang,\n\t\t\t\t`api_allowed` = 1,\n\t\t\t\t`customers` = -1,\n\t\t\t\t`customers_see_all` = 1,\n\t\t\t\t`caneditphpsettings` = 1,\n\t\t\t\t`domains` = -1,\n\t\t\t\t`domains_see_all` = 1,\n\t\t\t\t`change_serversettings` = 1,\n\t\t\t\t`diskspace` = -1024,\n\t\t\t\t`mysqls` = -1,\n\t\t\t\t`emails` = -1,\n\t\t\t\t`email_accounts` = -1,\n\t\t\t\t`email_forwarders` = -1,\n\t\t\t\t`email_quota` = -1,\n\t\t\t\t`ftps` = -1,\n\t\t\t\t`subdomains` = -1,\n\t\t\t\t`traffic` = -1048576\n\t\t\t\t\");\n\n\t\t$ins_stmt->execute($ins_data);\n\n\t\t$content .= $this->_status_message('green', 'OK');\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * execute prepared statement to update settings\n\t *\n\t * @param PDOStatement $stmt\n\t * @param string $group\n\t * @param string $varname\n\t * @param string $value\n\t */\n\tprivate function _updateSetting(&$stmt = null, $value = null, $group = null, $varname = null)\n\t{\n\t\t$stmt->execute(array(\n\t\t\t'group' => $group,\n\t\t\t'varname' => $varname,\n\t\t\t'value' => $value\n\t\t));\n\t}\n\n\t/**\n\t * change settings according to users input\n\t *\n\t * @param object $db\n\t *\n\t * @return string status messages\n\t */\n\tprivate function _doSettings(&$db)\n\t{\n\t\t$content = \"\";\n\n\t\t$content .= $this->_status_message('begin', $this->_lng['install']['changing_data']);\n\t\t$upd_stmt = $db->prepare(\"\n\t\t\t\tUPDATE `\" . TABLE_PANEL_SETTINGS . \"` SET\n\t\t\t\t`value` = :value\n\t\t\t\tWHERE `settinggroup` = :group AND `varname` = :varname\n\t\t\t\t\");\n\n\t\t$this->_updateSetting($upd_stmt, 'admin@' . $this->_data['servername'], 'panel', 'adminmail');\n\t\t$this->_updateSetting($upd_stmt, $this->_data['serverip'], 'system', 'ipaddress');\n\t\t$this->_updateSetting($upd_stmt, $this->_data['servername'], 'system', 'hostname');\n\t\t$this->_updateSetting($upd_stmt, $this->_languages[$this->_activelng], 'panel', 'standardlanguage');\n\t\t$this->_updateSetting($upd_stmt, $this->_data['mysql_access_host'], 'system', 'mysql_access_host');\n\t\t$this->_updateSetting($upd_stmt, $this->_data['webserver'], 'system', 'webserver');\n\t\t$this->_updateSetting($upd_stmt, $this->_data['httpuser'], 'system', 'httpuser');\n\t\t$this->_updateSetting($upd_stmt, $this->_data['httpgroup'], 'system', 'httpgroup');\n\n\t\t// necessary changes for webservers != apache2\n\t\tif ($this->_data['webserver'] == \"apache24\") {\n\t\t\t$this->_updateSetting($upd_stmt, 'apache2', 'system', 'webserver');\n\t\t\t$this->_updateSetting($upd_stmt, '1', 'system', 'apache24');\n\t\t} elseif ($this->_data['webserver'] == \"lighttpd\") {\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/lighttpd/conf-enabled/', 'system', 'apacheconf_vhost');\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/lighttpd/froxlor-diroptions/', 'system', 'apacheconf_diroptions');\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/lighttpd/froxlor-htpasswd/', 'system', 'apacheconf_htpasswddir');\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/init.d/lighttpd reload', 'system', 'apachereload_command');\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/lighttpd/lighttpd.pem', 'system', 'ssl_cert_file');\n\t\t\t$this->_updateSetting($upd_stmt, '/var/run/lighttpd/', 'phpfpm', 'fastcgi_ipcdir');\n\t\t} elseif ($this->_data['webserver'] == \"nginx\") {\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/nginx/sites-enabled/', 'system', 'apacheconf_vhost');\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/nginx/sites-enabled/', 'system', 'apacheconf_diroptions');\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/nginx/froxlor-htpasswd/', 'system', 'apacheconf_htpasswddir');\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/init.d/nginx reload', 'system', 'apachereload_command');\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/nginx/nginx.pem', 'system', 'ssl_cert_file');\n\t\t\t$this->_updateSetting($upd_stmt, '/var/run/', 'phpfpm', 'fastcgi_ipcdir');\n\t\t\t$this->_updateSetting($upd_stmt, 'error', 'system', 'errorlog_level');\n\t\t}\n\n\t\t$this->_updateSetting($upd_stmt, $this->_data['activate_newsfeed'], 'admin', 'show_news_feed');\n\t\t$this->_updateSetting($upd_stmt, dirname(dirname(dirname(__FILE__))), 'system', 'letsencryptchallengepath');\n\n\t\t// insert the lastcronrun to be the installation date\n\t\t$this->_updateSetting($upd_stmt, time(), 'system', 'lastcronrun');\n\n\t\t// set specific times for some crons (traffic only at night, etc.)\n\t\t$ts = mktime(0, 0, 0, date('m', time()), date('d', time()), date('Y', time()));\n\t\t$db->query(\"UPDATE `\" . TABLE_PANEL_CRONRUNS . \"` SET `lastrun` = '\" . $ts . \"' WHERE `cronfile` ='cron_traffic';\");\n\n\t\t// insert task 99 to generate a correct cron.d-file automatically\n\t\t$db->query(\"INSERT INTO `\" . TABLE_PANEL_TASKS . \"` SET `type` = '99';\");\n\n\t\t$content .= $this->_status_message('green', 'OK');\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * Import froxlor.sql into database\n\t *\n\t * @param object $db_root\n\t *\n\t * @return string status messages\n\t */\n\tprivate function _importDatabaseData()\n\t{\n\t\t$content = \"\";\n\t\t$content .= $this->_status_message('begin', $this->_lng['install']['testing_new_db']);\n\t\t$options = array(\n\t\t\t'PDO::MYSQL_ATTR_INIT_COMMAND' => 'SET names utf8'\n\t\t);\n\t\t$dsn = \"mysql:host=\" . $this->_data['mysql_host'] . \";dbname=\" . $this->_data['mysql_database'] . \";\";\n\t\t$fatal_fail = false;\n\t\ttry {\n\t\t\t$db = new PDO($dsn, $this->_data['mysql_unpriv_user'], $this->_data['mysql_unpriv_pass'], $options);\n\t\t\t$attributes = array(\n\t\t\t\t'ATTR_ERRMODE' => 'ERRMODE_EXCEPTION'\n\t\t\t);\n\t\t\t// set attributes\n\t\t\tforeach ($attributes as $k => $v) {\n\t\t\t\t$db->setAttribute(constant(\"PDO::\" . $k), constant(\"PDO::\" . $v));\n\t\t\t}\n\t\t\t$version_server = $db->getAttribute(PDO::ATTR_SERVER_VERSION);\n\t\t\t$sql_mode = 'NO_ENGINE_SUBSTITUTION';\n\t\t\tif (version_compare($version_server, '8.0.11', '<')) {\n\t\t\t\t$sql_mode .= ',NO_AUTO_CREATE_USER';\n\t\t\t}\n\t\t\t$db->exec('SET sql_mode = \"' . $sql_mode . '\"');\n\t\t} catch (PDOException $e) {\n\t\t\t$content .= $this->_status_message('red', $e->getMessage());\n\t\t\t$fatal_fail = true;\n\t\t}\n\n\t\tif (! $fatal_fail) {\n\n\t\t\t$content .= $this->_status_message('green', 'OK');\n\n\t\t\t$content .= $this->_status_message('begin', $this->_lng['install']['importing_data']);\n\t\t\t$db_schema = dirname(dirname(__FILE__)) . '/froxlor.sql';\n\t\t\t$sql_query = @file_get_contents($db_schema);\n\t\t\t$sql_query = $this->_remove_remarks($sql_query);\n\t\t\t$sql_query = $this->_split_sql_file($sql_query, ';');\n\t\t\tfor ($i = 0; $i < sizeof($sql_query); $i ++) {\n\t\t\t\tif (trim($sql_query[$i]) != '') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t$result = $db->query($sql_query[$i]);\n\t\t\t\t\t} catch (\\PDOException $e) {\n\t\t\t\t\t\t$content .= $this->_status_message('red', $e->getMessage());\n\t\t\t\t\t\t$fatal_fail = true;\n\t\t\t\t\t\t$this->_abort = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (! $fatal_fail) {\n\t\t\t\t$content .= $this->_status_message('green', 'OK');\n\t\t\t}\n\t\t\t$db = null;\n\t\t}\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * Create database and database-user\n\t *\n\t * @param object $db_root\n\t *\n\t * @return string status messages\n\t */\n\tprivate function _createDatabaseAndUser(&$db_root)\n\t{\n\t\t$content = \"\";\n\n\t\t// so first we have to delete the database and\n\t\t// the user given for the unpriv-user if they exit\n\t\t$content .= $this->_status_message('begin', $this->_lng['install']['prepare_db']);\n\n\t\t$del_stmt = $db_root->prepare(\"DELETE FROM `mysql`.`user` WHERE `User` = :user AND `Host` = :accesshost\");\n\t\t$del_stmt->execute(array(\n\t\t\t'user' => $this->_data['mysql_unpriv_user'],\n\t\t\t'accesshost' => $this->_data['mysql_access_host']\n\t\t));\n\n\t\t$del_stmt = $db_root->prepare(\"DELETE FROM `mysql`.`db` WHERE `User` = :user AND `Host` = :accesshost\");\n\t\t$del_stmt->execute(array(\n\t\t\t'user' => $this->_data['mysql_unpriv_user'],\n\t\t\t'accesshost' => $this->_data['mysql_access_host']\n\t\t));\n\n\t\t$del_stmt = $db_root->prepare(\"DELETE FROM `mysql`.`tables_priv` WHERE `User` = :user AND `Host` =:accesshost\");\n\t\t$del_stmt->execute(array(\n\t\t\t'user' => $this->_data['mysql_unpriv_user'],\n\t\t\t'accesshost' => $this->_data['mysql_access_host']\n\t\t));\n\n\t\t$del_stmt = $db_root->prepare(\"DELETE FROM `mysql`.`columns_priv` WHERE `User` = :user AND `Host` = :accesshost\");\n\t\t$del_stmt->execute(array(\n\t\t\t'user' => $this->_data['mysql_unpriv_user'],\n\t\t\t'accesshost' => $this->_data['mysql_access_host']\n\t\t));\n\n\t\t$del_stmt = $db_root->prepare(\"DROP DATABASE IF EXISTS `\" . str_replace('`', '', $this->_data['mysql_database']) . \"`;\");\n\t\t$del_stmt->execute();\n\n\t\t$db_root->query(\"FLUSH PRIVILEGES;\");\n\t\t$content .= $this->_status_message('green', 'OK');\n\n\t\t// we have to create a new user and database for the froxlor unprivileged mysql access\n\t\t$content .= $this->_status_message('begin', $this->_lng['install']['create_mysqluser_and_db']);\n\t\t$ins_stmt = $db_root->prepare(\"CREATE DATABASE `\" . str_replace('`', '', $this->_data['mysql_database']) . \"` CHARACTER SET=utf8 COLLATE=utf8_general_ci\");\n\t\t$ins_stmt->execute();\n\n\t\t$mysql_access_host_array = array_map('trim', explode(',', $this->_data['mysql_access_host']));\n\n\t\tif (in_array('127.0.0.1', $mysql_access_host_array) && ! in_array('localhost', $mysql_access_host_array)) {\n\t\t\t$mysql_access_host_array[] = 'localhost';\n\t\t}\n\n\t\tif (! in_array('127.0.0.1', $mysql_access_host_array) && in_array('localhost', $mysql_access_host_array)) {\n\t\t\t$mysql_access_host_array[] = '127.0.0.1';\n\t\t}\n\n\t\t$mysql_access_host_array[] = $this->_data['serverip'];\n\t\tforeach ($mysql_access_host_array as $mysql_access_host) {\n\t\t\t$frox_db = str_replace('`', '', $this->_data['mysql_database']);\n\t\t\t$this->_grantDbPrivilegesTo($db_root, $frox_db, $this->_data['mysql_unpriv_user'], $this->_data['mysql_unpriv_pass'], $mysql_access_host);\n\t\t}\n\n\t\t$db_root->query(\"FLUSH PRIVILEGES;\");\n\t\t$this->_data['mysql_access_host'] = implode(',', $mysql_access_host_array);\n\t\t$content .= $this->_status_message('green', 'OK');\n\n\t\treturn $content;\n\t}\n\n\tprivate function _grantDbPrivilegesTo(&$db_root, $database, $username, $password, $access_host)\n\t{\n\t\t// mysql8 compatibility\n\t\tif (version_compare($db_root->getAttribute(\\PDO::ATTR_SERVER_VERSION), '8.0.11', '>=')) {\n\t\t\t// create user\n\t\t\t$stmt = $db_root->prepare(\"\n\t\t\t\tCREATE USER '\" . $username . \"'@'\" . $access_host . \"' IDENTIFIED BY :password\n\t\t\t\");\n\t\t\t$stmt->execute(array(\n\t\t\t\t\"password\" => $password\n\t\t\t));\n\t\t\t// grant privileges\n\t\t\t$stmt = $db_root->prepare(\"\n\t\t\t\tGRANT ALL ON `\" . $database . \"`.* TO :username@:host\n\t\t\t\");\n\t\t\t$stmt->execute(array(\n\t\t\t\t\"username\" => $username,\n\t\t\t\t\"host\" => $access_host\n\t\t\t));\n\t\t} else {\n\t\t\t// grant privileges\n\t\t\t$stmt = $db_root->prepare(\"\n\t\t\t\tGRANT ALL PRIVILEGES ON `\" . $database . \"`.* TO :username@:host IDENTIFIED BY :password\n\t\t\t\");\n\t\t\t$stmt->execute(array(\n\t\t\t\t\"username\" => $username,\n\t\t\t\t\"host\" => $access_host,\n\t\t\t\t\"password\" => $password\n\t\t\t));\n\t\t}\n\t}\n\n\t/**\n\t * Check if an old database exists and back it up if necessary\n\t *\n\t * @param object $db_root\n\t *\n\t * @return string status messages\n\t */\n\tprivate function _backupExistingDatabase(&$db_root)\n\t{\n\t\t$content = \"\";\n\n\t\t// check for existing of former database\n\t\t$tables_exist = false;\n\t\t$sql = \"SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = :database\";\n\t\t$result_stmt = $db_root->prepare($sql);\n\t\t$result_stmt->execute(array(\n\t\t\t'database' => $this->_data['mysql_database']\n\t\t));\n\t\t$rows = $db_root->query(\"SELECT FOUND_ROWS()\")->fetchColumn();\n\n\t\t// check result\n\t\tif ($result_stmt !== false && $rows > 0) {\n\t\t\t$tables_exist = true;\n\t\t}\n\n\t\tif ($tables_exist) {\n\t\t\t// tell whats going on\n\t\t\t$content .= $this->_status_message('begin', $this->_lng['install']['backup_old_db']);\n\n\t\t\t// create temporary backup-filename\n\t\t\t$filename = \"/tmp/froxlor_backup_\" . date('YmdHi') . \".sql\";\n\n\t\t\t// look for mysqldump\n\t\t\t$do_backup = false;\n\t\t\tif (file_exists(\"/usr/bin/mysqldump\")) {\n\t\t\t\t$do_backup = true;\n\t\t\t\t$mysql_dump = '/usr/bin/mysqldump';\n\t\t\t} elseif (file_exists(\"/usr/local/bin/mysqldump\")) {\n\t\t\t\t$do_backup = true;\n\t\t\t\t$mysql_dump = '/usr/local/bin/mysqldump';\n\t\t\t}\n\n\t\t\tif ($do_backup) {\n\t\t\t\t$command = $mysql_dump . \" \" . $this->_data['mysql_database'] . \" -u \" . $this->_data['mysql_root_user'] . \" --password='\" . $this->_data['mysql_root_pass'] . \"' --result-file=\" . $filename;\n\t\t\t\t$output = exec($command);\n\t\t\t\tif (stristr($output, \"error\")) {\n\t\t\t\t\t$content .= $this->_status_message('red', $this->_lng['install']['backup_failed']);\n\t\t\t\t} else {\n\t\t\t\t\t$content .= $this->_status_message('green', 'OK (' . $filename . ')');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$content .= $this->_status_message('red', $this->_lng['install']['backup_binary_missing']);\n\t\t\t}\n\t\t}\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * show form to collect all needed data for the install\n\t */\n\tprivate function _showDataForm()\n\t{\n\t\t$content = \"\";\n\t\t// form action\n\t\t$formaction = htmlspecialchars($_SERVER['PHP_SELF']);\n\t\tif (isset($_GET['check'])) {\n\t\t\t$formaction .= '?check=' . (int) $_GET['check'];\n\t\t}\n\t\t// language selection\n\t\t$language_options = '';\n\t\tforeach ($this->_languages as $language_name => $language_file) {\n\t\t\t$language_options .= \\Froxlor\\UI\\HTML::makeoption($language_name, $language_file, $this->_activelng, true, true);\n\t\t}\n\t\t// get language-form-template\n\t\teval(\"\\$content .= \\\"\" . $this->_getTemplate(\"lngform\") . \"\\\";\");\n\n\t\t// form-data\n\t\t$formdata = \"\";\n\t\t/**\n\t\t * Database\n\t\t */\n\t\t$section = $this->_lng['install']['database'];\n\t\teval(\"\\$formdata .= \\\"\" . $this->_getTemplate(\"datasection\") . \"\\\";\");\n\t\t// host\n\t\t$formdata .= $this->_getSectionItemString('mysql_host', true);\n\t\t// database\n\t\t$formdata .= $this->_getSectionItemString('mysql_database', true);\n\t\t// unpriv-user has to be different from root\n\t\tif ($this->_data['mysql_unpriv_user'] == $this->_data['mysql_root_user']) {\n\t\t\t$style = 'blue';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('mysql_unpriv_user', true, $style);\n\t\t// is we posted and no password was given -> red\n\t\tif (! empty($_POST['installstep']) && $this->_data['mysql_unpriv_pass'] == '') {\n\t\t\t$style = 'red';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('mysql_unpriv_pass', true, $style, 'password');\n\t\t// unpriv-user has to be different from root\n\t\tif ($this->_data['mysql_unpriv_user'] == $this->_data['mysql_root_user']) {\n\t\t\t$style = 'blue';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('mysql_root_user', true, $style);\n\t\t// is we posted and no password was given -> red\n\t\tif (! empty($_POST['installstep']) && $this->_data['mysql_root_pass'] == '') {\n\t\t\t$style = 'red';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('mysql_root_pass', true, $style, 'password');\n\n\t\t/**\n\t\t * admin data\n\t\t */\n\t\t$section = $this->_lng['install']['admin_account'];\n\t\teval(\"\\$formdata .= \\\"\" . $this->_getTemplate(\"datasection\") . \"\\\";\");\n\t\t// user\n\t\t$formdata .= $this->_getSectionItemString('admin_user', true);\n\t\t// check for admin passwords to be equal\n\t\tif (! empty($_POST['installstep']) && ($this->_data['admin_pass1'] == '' || $this->_data['admin_pass1'] != $this->_data['admin_pass2'])) {\n\t\t\t$style = 'color:red;';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('admin_pass1', true, $style, 'password');\n\t\t// check for admin passwords to be equal\n\t\tif (! empty($_POST['installstep']) && ($this->_data['admin_pass2'] == '' || $this->_data['admin_pass1'] != $this->_data['admin_pass2'])) {\n\t\t\t$style = 'color:red;';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('admin_pass2', true, $style, 'password');\n\t\t// activate newsfeed?\n\t\t$formdata .= $this->_getSectionItemYesNo('activate_newsfeed', true);\n\n\t\t/**\n\t\t * Server data\n\t\t */\n\t\t$section = $this->_lng['install']['serversettings'];\n\t\teval(\"\\$formdata .= \\\"\" . $this->_getTemplate(\"datasection\") . \"\\\";\");\n\t\t// servername\n\t\tif (! empty($_POST['installstep']) && $this->_data['servername'] == '') {\n\t\t\t$style = 'color:red;';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('servername', true, $style);\n\t\t// serverip\n\t\tif (! empty($_POST['installstep']) && ($this->_data['serverip'] == '' || $this->_validate_ip($this->_data['serverip']) == false)) {\n\t\t\t$style = 'color:red;';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('serverip', true, $style);\n\t\t// webserver\n\t\tif (! empty($_POST['installstep']) && $this->_data['webserver'] == '') {\n\t\t\t$websrvstyle = 'color:red;';\n\t\t} else {\n\t\t\t$websrvstyle = '';\n\t\t}\n\t\t// apache\n\t\t$formdata .= $this->_getSectionItemCheckbox('apache2', ($this->_data['webserver'] == 'apache2'), $websrvstyle);\n\t\t$formdata .= $this->_getSectionItemCheckbox('apache24', ($this->_data['webserver'] == 'apache24'), $websrvstyle);\n\t\t// lighttpd\n\t\t$formdata .= $this->_getSectionItemCheckbox('lighttpd', ($this->_data['webserver'] == 'lighttpd'), $websrvstyle);\n\t\t// nginx\n\t\t$formdata .= $this->_getSectionItemCheckbox('nginx', ($this->_data['webserver'] == 'nginx'), $websrvstyle);\n\t\t// webserver-user\n\t\tif (! empty($_POST['installstep']) && $this->_data['httpuser'] == '') {\n\t\t\t$style = 'color:red;';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('httpuser', true, $style);\n\t\t// webserver-group\n\t\tif (! empty($_POST['installstep']) && $this->_data['httpgroup'] == '') {\n\t\t\t$style = 'color:red;';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('httpgroup', true, $style);\n\n\t\t// get data-form-template\n\t\t$language = htmlspecialchars($this->_activelng);\n\t\teval(\"\\$content .= \\\"\" . $this->_getTemplate(\"dataform2\") . \"\\\";\");\n\n\t\t$navigation = '';\n\t\treturn array(\n\t\t\t'pagecontent' => $content,\n\t\t\t'pagenavigation' => $navigation\n\t\t);\n\t}\n\n\t/**\n\t * generate form input field\n\t *\n\t * @param string $fieldname\n\t * @param boolean $required\n\t * @param string $style\n\t *        \toptional css\n\t * @param string $type\n\t *        \toptional type of input-box (default: text)\n\t *        \t\n\t * @return string\n\t */\n\tprivate function _getSectionItemString($fieldname = null, $required = false, $style = \"\", $type = 'text')\n\t{\n\t\t$fieldlabel = $this->_lng['install'][$fieldname];\n\t\t$fieldvalue = htmlspecialchars($this->_data[$fieldname]);\n\t\tif ($required) {\n\t\t\t$required = ' required=\"required\"';\n\t\t}\n\t\t$sectionitem = \"\";\n\t\teval(\"\\$sectionitem .= \\\"\" . $this->_getTemplate(\"dataitem\") . \"\\\";\");\n\t\treturn $sectionitem;\n\t}\n\n\t/**\n\t * generate form radio field for webserver-selection\n\t *\n\t * @param string $fieldname\n\t * @param boolean $checked\n\t * @param string $style\n\t *\n\t * @return string\n\t */\n\tprivate function _getSectionItemCheckbox($fieldname = null, $checked = false, $style = \"\")\n\t{\n\t\t$fieldlabel = $this->_lng['install'][$fieldname];\n\t\tif ($checked) {\n\t\t\t$checked = 'checked=\"checked\"';\n\t\t}\n\t\t$sectionitem = \"\";\n\t\teval(\"\\$sectionitem .= \\\"\" . $this->_getTemplate(\"dataitemchk\") . \"\\\";\");\n\t\treturn $sectionitem;\n\t}\n\n\t/**\n\t * generate form checkbox field\n\t *\n\t * @param string $fieldname\n\t * @param boolean $checked\n\t * @param string $style\n\t *\n\t * @return string\n\t */\n\tprivate function _getSectionItemYesNo($fieldname = null, $checked = false, $style = \"\")\n\t{\n\t\t$fieldlabel = $this->_lng['install'][$fieldname];\n\t\tif ($checked) {\n\t\t\t$checked = 'checked=\"checked\"';\n\t\t}\n\t\t$sectionitem = \"\";\n\t\teval(\"\\$sectionitem .= \\\"\" . $this->_getTemplate(\"dataitemyesno\") . \"\\\";\");\n\t\treturn $sectionitem;\n\t}\n\n\t/**\n\t * check for requirements froxlor needs\n\t */\n\tprivate function _requirementCheck()\n\t{\n\n\t\t// indicator whether we need to abort or not\n\t\t$_die = false;\n\n\t\t$content = \"<table class=\\\"noborder\\\">\";\n\n\t\t// check for correct php version\n\t\t$content .= $this->_status_message('begin', $this->_lng['requirements']['phpversion']);\n\n\t\tif (version_compare(\"7.0.0\", PHP_VERSION, \">=\")) {\n\t\t\t$content .= $this->_status_message('red', $this->_lng['requirements']['notfound'] . ' (' . PHP_VERSION . ')');\n\t\t\t$_die = true;\n\t\t} else {\n\t\t\tif (version_compare(\"7.1.0\", PHP_VERSION, \">=\")) {\n\t\t\t\t$content .= $this->_status_message('orange', $this->_lng['requirements']['newerphpprefered'] . ' (' . PHP_VERSION . ')');\n\t\t\t} else {\n\t\t\t\t$content .= $this->_status_message('green', PHP_VERSION);\n\t\t\t}\n\t\t}\n\n\t\t// check for php_pdo and pdo_mysql\n\t\t$content .= $this->_status_message('begin', $this->_lng['requirements']['phppdo']);\n\n\t\tif (! extension_loaded('pdo') || in_array(\"mysql\", PDO::getAvailableDrivers()) == false) {\n\t\t\t$content .= $this->_status_message('red', $this->_lng['requirements']['notinstalled']);\n\t\t\t$_die = true;\n\t\t} else {\n\t\t\t$content .= $this->_status_message('green', $this->_lng['requirements']['installed']);\n\t\t}\n\n\t\t// check for session-extension\n\t\t$this->_requirementCheckFor($content, $_die, 'session', false, 'phpsession');\n\n\t\t// check for ctype-extension\n\t\t$this->_requirementCheckFor($content, $_die, 'ctype', false, 'phpctype');\n\n\t\t// check for SimpleXML-extension\n\t\t$this->_requirementCheckFor($content, $_die, 'simplexml', false, 'phpsimplexml');\n\n\t\t// check for xml-extension\n\t\t$this->_requirementCheckFor($content, $_die, 'xml', false, 'phpxml');\n\n\t\t// check for filter-extension\n\t\t$this->_requirementCheckFor($content, $_die, 'filter', false, 'phpfilter');\n\n\t\t// check for posix-extension\n\t\t$this->_requirementCheckFor($content, $_die, 'posix', false, 'phpposix');\n\n\t\t// check for mbstring-extension\n\t\t$this->_requirementCheckFor($content, $_die, 'mbstring', false, 'phpmbstring');\n\n\t\t// check for curl extension\n\t\t$this->_requirementCheckFor($content, $_die, 'curl', false, 'phpcurl');\n\n\t\t// check for json extension\n\t\t$this->_requirementCheckFor($content, $_die, 'json', false, 'phpjson');\n\n\t\t// check for bcmath extension\n\t\t$this->_requirementCheckFor($content, $_die, 'bcmath', true, 'phpbcmath', 'bcmathdescription');\n\n\t\t// check for zip extension\n\t\t$this->_requirementCheckFor($content, $_die, 'zip', true, 'phpzip', 'zipdescription');\n\n\t\t// check for open_basedir\n\t\t$content .= $this->_status_message('begin', $this->_lng['requirements']['openbasedir']);\n\t\t$php_ob = @ini_get(\"open_basedir\");\n\t\tif (! empty($php_ob) && $php_ob != '') {\n\t\t\t$content .= $this->_status_message('orange', $this->_lng['requirements']['activated'] . \"<br />\" . $this->_lng['requirements']['openbasedirenabled']);\n\t\t} else {\n\t\t\t$content .= $this->_status_message('green', 'off');\n\t\t}\n\n\t\t// check for mysqldump binary in order to backup existing database\n\t\t$content .= $this->_status_message('begin', $this->_lng['requirements']['mysqldump']);\n\n\t\tif (file_exists(\"/usr/bin/mysqldump\") || file_exists(\"/usr/local/bin/mysqldump\")) {\n\t\t\t$content .= $this->_status_message('green', $this->_lng['requirements']['installed']);\n\t\t} else {\n\t\t\t$content .= $this->_status_message('orange', $this->_lng['requirements']['notinstalled'] . \"<br />\" . $this->_lng['requirements']['mysqldumpmissing']);\n\t\t}\n\n\t\t$content .= \"</table>\";\n\n\t\t// check if we have unrecoverable errors\n\t\t$navigation = '';\n\t\tif ($_die) {\n\t\t\t$msgcolor = 'red';\n\t\t\t$message = $this->_lng['requirements']['diedbecauseofrequirements'];\n\t\t\t$link = htmlspecialchars($_SERVER['PHP_SELF']);\n\t\t\t$linktext = $this->_lng['click_here_to_refresh'];\n\t\t} else {\n\t\t\t$msgcolor = 'green';\n\t\t\t$message = $this->_lng['requirements']['froxlor_succ_checks'];\n\t\t\t$link = htmlspecialchars($_SERVER['PHP_SELF']) . '?check=1';\n\t\t\t$linktext = $this->_lng['click_here_to_continue'];\n\t\t}\n\t\teval(\"\\$navigation .= \\\"\" . $this->_getTemplate(\"pagebottom\") . \"\\\";\");\n\n\t\treturn array(\n\t\t\t'pagecontent' => $content,\n\t\t\t'pagenavigation' => $navigation\n\t\t);\n\t}\n\n\tprivate function _requirementCheckFor(&$content, &$_die, $ext = '', $optional = false, $lng_txt = \"\", $lng_desc = \"\")\n\t{\n\t\t$content .= $this->_status_message('begin', $this->_lng['requirements'][$lng_txt]);\n\n\t\tif (! extension_loaded($ext)) {\n\t\t\tif (! $optional) {\n\t\t\t\t$content .= $this->_status_message('red', $this->_lng['requirements']['notinstalled']);\n\t\t\t\t$_die = true;\n\t\t\t} else {\n\t\t\t\t$content .= $this->_status_message('orange', $this->_lng['requirements']['notinstalled'] . \"<br />\" . $this->_lng['requirements'][$lng_desc]);\n\t\t\t}\n\t\t} else {\n\t\t\t$content .= $this->_status_message('green', $this->_lng['requirements']['installed']);\n\t\t}\n\t}\n\n\t/**\n\t * send no-caching headers and set the default timezone\n\t */\n\tprivate function _sendHeaders()\n\t{\n\t\tif (@php_sapi_name() !== 'cli') {\n\t\t\t// no caching\n\t\t\theader(\"Cache-Control: no-store, no-cache, must-revalidate\");\n\t\t\theader(\"Pragma: no-cache\");\n\t\t\theader('Last-Modified: ' . gmdate('D, d M Y H:i:s \\G\\M\\T', time()));\n\t\t\theader('Expires: ' . gmdate('D, d M Y H:i:s \\G\\M\\T', time()));\n\t\t}\n\t\t// ensure that default timezone is set\n\t\tif (function_exists(\"date_default_timezone_set\") && function_exists(\"date_default_timezone_get\")) {\n\t\t\t@date_default_timezone_set(@date_default_timezone_get());\n\t\t}\n\t}\n\n\t/**\n\t * check for the userdata - if it exists then froxlor is\n\t * already installed and we show a nice note\n\t */\n\tprivate function _checkUserDataFile()\n\t{\n\t\t$userdata = $this->_basepath . '/lib/userdata.inc.php';\n\t\tif (file_exists($userdata)) {\n\t\t\t// includes the usersettings (MySQL-Username/Passwort)\n\t\t\t// to test if Froxlor is already installed\n\t\t\trequire_once $this->_basepath . '/lib/userdata.inc.php';\n\n\t\t\tif (isset($sql) && is_array($sql)) {\n\t\t\t\t// use sparkle theme for the notice\n\t\t\t\t$installed_hint = file_get_contents($this->_basepath . '/templates/Sparkle/misc/alreadyinstalledhint.tpl');\n\t\t\t\t$installed_hint = str_replace(\"<CURRENT_YEAR>\", date('Y', time()), $installed_hint);\n\t\t\t\tdie($installed_hint);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * include the chose language or else default (english)\n\t */\n\tprivate function _includeLanguageFile()\n\t{\n\t\t// set default\n\t\t$standardlanguage = 'english';\n\n\t\t// check either _GET or _POST\n\t\tif (isset($_GET['language']) && isset($this->_languages[$_GET['language']])) {\n\t\t\t$this->_activelng = $_GET['language'];\n\t\t} elseif (isset($_POST['language']) && isset($this->_languages[$_POST['language']])) {\n\t\t\t$this->_activelng = $_POST['language'];\n\t\t} else {\n\t\t\t// try to guess the right language\n\t\t\t$lang = substr($_SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 2);\n\t\t\tswitch ($lang) {\n\t\t\t\tcase \"de\":\n\t\t\t\t\t$this->_activelng = 'german';\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"fr\":\n\t\t\t\t\t$this->_activelng = 'french';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t$this->_activelng = $standardlanguage;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// require english base language as fallback\n\t\t$lngfile = $this->_basepath . '/install/lng/' . $standardlanguage . '.lng.php';\n\t\tif (file_exists($lngfile)) {\n\t\t\t// includes file /lng/$language.lng.php if it exists\n\t\t\trequire_once $lngfile;\n\t\t\t$this->_lng = $lng;\n\t\t}\n\n\t\t// require chosen language if not english\n\t\tif ($this->_activelng != $standardlanguage) {\n\t\t\t$lngfile = $this->_basepath . '/install/lng/' . $this->_activelng . '.lng.php';\n\t\t\tif (file_exists($lngfile)) {\n\t\t\t\t// includes file /lng/$language.lng.php if it exists\n\t\t\t\trequire_once $lngfile;\n\t\t\t\t$this->_lng = $lng;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get template from filesystem\n\t *\n\t * @param string $template\n\t *        \tname of the template including subdirectory\n\t *        \t\n\t * @return string\n\t */\n\tprivate function _getTemplate($template = null)\n\t{\n\t\t// build filename\n\t\t$filename = $this->_basepath . '/install/templates/' . $template . '.tpl';\n\t\t// check existence\n\t\tif (file_exists($filename) && is_readable($filename)) {\n\t\t\t$templatefile = addcslashes(file_get_contents($filename), '\"\\\\');\n\t\t\t// loop through template more than once in case we have an \"if\"-statement in another one\n\t\t\twhile (preg_match('/<if[ \\t]*(.*)>(.*)(<\\/if>|<else>(.*)<\\/if>)/Uis', $templatefile)) {\n\t\t\t\t$templatefile = preg_replace('/<if[ \\t]*(.*)>(.*)(<\\/if>|<else>(.*)<\\/if>)/Uis', '\".( ($1) ? (\"$2\") : (\"$4\") ).\"', $templatefile);\n\t\t\t}\n\t\t} else {\n\t\t\t$templatefile = 'TEMPLATE NOT FOUND: ' . $filename;\n\t\t}\n\n\t\treturn $templatefile;\n\t}\n\n\t/**\n\t * output status\n\t *\n\t * @param string $case\n\t * @param string $text\n\t *\n\t * @return string\n\t */\n\tprivate function _status_message($case, $text)\n\t{\n\t\tif ($case == 'begin') {\n\t\t\treturn '<tr><td class=\"install-step\">' . $text;\n\t\t} else {\n\t\t\treturn '</td><td><span class=\"' . $case . '\">' . $text . '</span></td></tr>';\n\t\t}\n\t}\n\n\t/**\n\t * get/guess servername\n\t */\n\tprivate function _guessServerName()\n\t{\n\t\t// from form?\n\t\tif (! empty($_POST['servername'])) {\n\t\t\t$this->_data['servername'] = $_POST['servername'];\n\t\t\treturn;\n\t\t\t// from $_SERVER\n\t\t} else if (! empty($_SERVER['SERVER_NAME'])) {\n\t\t\t// no ips\n\t\t\tif ($this->_validate_ip($_SERVER['SERVER_NAME']) == false) {\n\t\t\t\t$this->_data['servername'] = $_SERVER['SERVER_NAME'];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// empty\n\t\t$this->_data['servername'] = '';\n\t}\n\n\t/**\n\t * get/guess serverip\n\t */\n\tprivate function _guessServerIP()\n\t{\n\t\t// from form\n\t\tif (! empty($_POST['serverip'])) {\n\t\t\t$this->_data['serverip'] = $_POST['serverip'];\n\t\t\treturn;\n\t\t\t// from $_SERVER\n\t\t} elseif (! empty($_SERVER['SERVER_ADDR'])) {\n\t\t\t$this->_data['serverip'] = $_SERVER['SERVER_ADDR'];\n\t\t\treturn;\n\t\t}\n\t\t// empty\n\t\t$this->_data['serverip'] = '';\n\t}\n\n\t/**\n\t * get/guess webserver-software\n\t */\n\tprivate function _guessWebserver()\n\t{\n\t\t// post\n\t\tif (! empty($_POST['webserver'])) {\n\t\t\t$this->_data['webserver'] = $_POST['webserver'];\n\t\t} else {\n\t\t\tif (strtoupper(@php_sapi_name()) == \"APACHE2HANDLER\" || stristr($_SERVER['SERVER_SOFTWARE'], \"apache/2\")) {\n\t\t\t\t$this->_data['webserver'] = 'apache24';\n\t\t\t} elseif (substr(strtoupper(@php_sapi_name()), 0, 8) == \"LIGHTTPD\" || stristr($_SERVER['SERVER_SOFTWARE'], \"lighttpd\")) {\n\t\t\t\t$this->_data['webserver'] = 'lighttpd';\n\t\t\t} elseif (substr(strtoupper(@php_sapi_name()), 0, 8) == \"NGINX\" || stristr($_SERVER['SERVER_SOFTWARE'], \"nginx\")) {\n\t\t\t\t$this->_data['webserver'] = 'nginx';\n\t\t\t} else {\n\t\t\t\t// we don't need to bail out, since unknown does not affect any critical installation routines\n\t\t\t\t$this->_data['webserver'] = 'unknown';\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * check if POST field is set and get value for the\n\t * internal data array, if not set use either '' or $default if != null\n\t *\n\t * @param string $fieldname\n\t * @param string $default\n\t *\n\t */\n\tprivate function _getPostField($fieldname = null, $default = null)\n\t{\n\t\t// initialize\n\t\t$this->_data[$fieldname] = '';\n\t\t// set default\n\t\tif ($default !== null) {\n\t\t\t$this->_data[$fieldname] = $default;\n\t\t}\n\t\t// check field\n\t\tif (! empty($_POST[$fieldname])) {\n\t\t\t$this->_data[$fieldname] = $_POST[$fieldname];\n\t\t}\n\t}\n\n\t/**\n\t * check whether the given parameter is an ip-address or not\n\t *\n\t * @param string $ip\n\t *\n\t * @return boolean|string\n\t */\n\tprivate function _validate_ip($ip = null)\n\t{\n\t\tif (filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_IPV6) === false && filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4) === false && filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_NO_RES_RANGE) === false) {\n\t\t\treturn false;\n\t\t}\n\t\treturn $ip;\n\t}\n\n\t/**\n\t * remove marks from sql\n\t *\n\t * @param string $sql\n\t *\n\t * @return string\n\t */\n\tprivate function _remove_remarks($sql)\n\t{\n\t\t$lines = explode(\"\\n\", $sql);\n\t\t// try to keep mem. use down\n\t\t$sql = \"\";\n\t\t$linecount = count($lines);\n\t\t$output = \"\";\n\t\tfor ($i = 0; $i < $linecount; $i ++) {\n\t\t\tif ($i != ($linecount - 1) || strlen($lines[$i]) > 0) {\n\t\t\t\tif (substr($lines[$i], 0, 1) != \"#\") {\n\t\t\t\t\t$output .= $lines[$i] . \"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\t$output .= \"\\n\";\n\t\t\t\t}\n\t\t\t\t// Trading a bit of speed for lower mem. use here.\n\t\t\t\t$lines[$i] = \"\";\n\t\t\t}\n\t\t}\n\t\treturn $output;\n\t}\n\n\t/**\n\t * split_sql_file will split an uploaded sql file into single sql statements.\n\t * Note: expects trim() to have already been run on $sql\n\t *\n\t * The whole function has been taken from the phpbb installer,\n\t * copyright by the phpbb team, phpbb in summer 2004.\n\t */\n\tprivate function _split_sql_file($sql, $delimiter)\n\t{\n\n\t\t// Split up our string into \"possible\" SQL statements.\n\t\t$tokens = explode($delimiter, $sql);\n\n\t\t// try to save mem.\n\t\t$sql = \"\";\n\t\t$output = array();\n\n\t\t// we don't actually care about the matches preg gives us.\n\t\t$matches = array();\n\n\t\t// this is faster than calling count($tokens) every time through the loop.\n\t\t$token_count = count($tokens);\n\t\tfor ($i = 0; $i < $token_count; $i ++) {\n\t\t\t// Don't want to add an empty string as the last thing in the array.\n\t\t\tif (($i != ($token_count - 1)) || (strlen($tokens[$i] > 0))) {\n\t\t\t\t// This is the total number of single quotes in the token.\n\t\t\t\t$total_quotes = preg_match_all(\"/'/\", $tokens[$i], $matches);\n\n\t\t\t\t// Counts single quotes that are preceded by an odd number of backslashes,\n\t\t\t\t// which means they're escaped quotes.\n\t\t\t\t$escaped_quotes = preg_match_all(\"/(?<!\\\\\\\\)(\\\\\\\\\\\\\\\\)*\\\\\\\\'/\", $tokens[$i], $matches);\n\t\t\t\t$unescaped_quotes = $total_quotes - $escaped_quotes;\n\n\t\t\t\t// If the number of unescaped quotes is even, then the delimiter\n\t\t\t\t// did NOT occur inside a string literal.\n\t\t\t\tif (($unescaped_quotes % 2) == 0) {\n\t\t\t\t\t// It's a complete sql statement.\n\t\t\t\t\t$output[] = $tokens[$i];\n\t\t\t\t\t// save memory.\n\t\t\t\t\t$tokens[$i] = \"\";\n\t\t\t\t} else {\n\t\t\t\t\t// incomplete sql statement. keep adding tokens until we have a complete one.\n\t\t\t\t\t// $temp will hold what we have so far.\n\t\t\t\t\t$temp = $tokens[$i] . $delimiter;\n\t\t\t\t\t// save memory..\n\t\t\t\t\t$tokens[$i] = \"\";\n\t\t\t\t\t// Do we have a complete statement yet?\n\t\t\t\t\t$complete_stmt = false;\n\t\t\t\t\tfor ($j = $i + 1; (! $complete_stmt && ($j < $token_count)); $j ++) {\n\t\t\t\t\t\t// This is the total number of single quotes in the token.\n\t\t\t\t\t\t$total_quotes = preg_match_all(\"/'/\", $tokens[$j], $matches);\n\t\t\t\t\t\t// Counts single quotes that are preceded by an odd number of backslashes,\n\t\t\t\t\t\t// which means they're escaped quotes.\n\t\t\t\t\t\t$escaped_quotes = preg_match_all(\"/(?<!\\\\\\\\)(\\\\\\\\\\\\\\\\)*\\\\\\\\'/\", $tokens[$j], $matches);\n\t\t\t\t\t\t$unescaped_quotes = $total_quotes - $escaped_quotes;\n\n\t\t\t\t\t\tif (($unescaped_quotes % 2) == 1) {\n\t\t\t\t\t\t\t// odd number of unescaped quotes. In combination with the previous incomplete\n\t\t\t\t\t\t\t// statement(s), we now have a complete statement. (2 odds always make an even)\n\t\t\t\t\t\t\t$output[] = $temp . $tokens[$j];\n\t\t\t\t\t\t\t// save memory.\n\t\t\t\t\t\t\t$tokens[$j] = \"\";\n\t\t\t\t\t\t\t$temp = \"\";\n\t\t\t\t\t\t\t// exit the loop.\n\t\t\t\t\t\t\t$complete_stmt = true;\n\t\t\t\t\t\t\t// make sure the outer loop continues at the right point.\n\t\t\t\t\t\t\t$i = $j;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// even number of unescaped quotes. We still don't have a complete statement.\n\t\t\t\t\t\t\t// (1 odd and 1 even always make an odd)\n\t\t\t\t\t\t\t$temp .= $tokens[$j] . $delimiter;\n\t\t\t\t\t\t\t// save memory.\n\t\t\t\t\t\t\t$tokens[$j] = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t} // for..\n\t\t\t\t} // else\n\t\t\t}\n\t\t}\n\t\treturn $output;\n\t}\n}\n", "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2003-2009 the SysCP Team (see authors).\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * For the full copyright and license information, please view the COPYING\n * file that was distributed with this source code. You can also view the\n * COPYING file online at http://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  (c) the authors\n * @author     Florian Lippert <flo@syscp.org> (2003-2009)\n * @author     Froxlor team <team@froxlor.org> (2010-)\n * @license    GPLv2 http://files.froxlor.org/misc/COPYING.txt\n * @package    Language\n *\n */\n$lng['requirements']['title'] = 'Checking system requirements...';\n$lng['requirements']['installed'] = 'installed';\n$lng['requirements']['not_true'] = 'no';\n$lng['requirements']['notfound'] = 'not found';\n$lng['requirements']['notinstalled'] = 'not installed';\n$lng['requirements']['activated'] = 'enabled';\n$lng['requirements']['phpversion'] = 'PHP version >= 7.0';\n$lng['requirements']['newerphpprefered'] = 'Good, but php-7.1 is prefered.';\n$lng['requirements']['phppdo'] = 'PHP PDO extension and PDO-MySQL driver...';\n$lng['requirements']['phpsession'] = 'PHP session-extension...';\n$lng['requirements']['phpctype'] = 'PHP ctype-extension...';\n$lng['requirements']['phpsimplexml'] = 'PHP SimpleXML-extension...';\n$lng['requirements']['phpxml'] = 'PHP XML-extension...';\n$lng['requirements']['phpfilter'] = 'PHP filter-extension...';\n$lng['requirements']['phpposix'] = 'PHP posix-extension...';\n$lng['requirements']['phpbcmath'] = 'PHP bcmath-extension...';\n$lng['requirements']['phpcurl'] = 'PHP curl-extension...';\n$lng['requirements']['phpmbstring'] = 'PHP mbstring-extension...';\n$lng['requirements']['phpzip'] = 'PHP zip-extension...';\n$lng['requirements']['phpjson'] = 'PHP json-extension...';\n$lng['requirements']['bcmathdescription'] = 'Traffic-calculation related functions will not work correctly!';\n$lng['requirements']['zipdescription'] = 'The auto-update feature requires the zip extension.';\n$lng['requirements']['openbasedir'] = 'open_basedir...';\n$lng['requirements']['openbasedirenabled'] = 'Froxlor will not work properly with open_basedir enabled. Please disable open_basedir for Froxlor in the coresponding php.ini';\n$lng['requirements']['mysqldump'] = 'MySQL dump tool';\n$lng['requirements']['mysqldumpmissing'] = 'Automatic backup of possible existing database is not possible. Please install mysql-client tools';\n$lng['requirements']['diedbecauseofrequirements'] = 'Cannot install Froxlor without these requirements! Try to fix them and retry.';\n$lng['requirements']['froxlor_succ_checks'] = 'All requirements are satisfied';\n\n$lng['install']['lngtitle'] = 'Froxlor install - choose language';\n$lng['install']['language'] = 'Installation language';\n$lng['install']['lngbtn_go'] = 'Change language';\n$lng['install']['title'] = 'Froxlor install - setup';\n$lng['install']['welcometext'] = 'Thank you for choosing Froxlor. Please fill out the following fields with the required information to start the installation.<br /><b>Attention:</b> If the database you chose for Froxlor already exists on your System, it will be erased with all containing data!';\n$lng['install']['database'] = 'Database connection';\n$lng['install']['mysql_host'] = 'MySQL-Hostname';\n$lng['install']['mysql_database'] = 'Database name';\n$lng['install']['mysql_unpriv_user'] = 'Username for the unprivileged MySQL-account';\n$lng['install']['mysql_unpriv_pass'] = 'Password for the unprivileged MySQL-account';\n$lng['install']['mysql_root_user'] = 'Username for the MySQL-root-account';\n$lng['install']['mysql_root_pass'] = 'Password for the MySQL-root-account';\n$lng['install']['admin_account'] = 'Administrator Account';\n$lng['install']['admin_user'] = 'Administrator Username';\n$lng['install']['admin_pass1'] = 'Administrator Password';\n$lng['install']['admin_pass2'] = 'Administrator-Password (confirm)';\n$lng['install']['activate_newsfeed'] = 'Enable the official newsfeed<br><small>(https://inside.froxlor.org/news/)</small>';\n$lng['install']['serversettings'] = 'Server settings';\n$lng['install']['servername'] = 'Server name (FQDN, no ip-address)';\n$lng['install']['serverip'] = 'Server IP';\n$lng['install']['webserver'] = 'Webserver';\n$lng['install']['apache2'] = 'Apache 2.2';\n$lng['install']['apache24'] = 'Apache 2.4';\n$lng['install']['lighttpd'] = 'LigHTTPd';\n$lng['install']['nginx'] = 'NGINX';\n$lng['install']['httpuser'] = 'HTTP username';\n$lng['install']['httpgroup'] = 'HTTP groupname';\n\n$lng['install']['testing_mysql'] = 'Checking MySQL-root access...';\n$lng['install']['testing_mysql_fail'] = 'There seems to be a problem with the database-connection. Cannot continue. Please go back and check your credentials.';\n$lng['install']['backup_old_db'] = 'Creating backup of old database...';\n$lng['install']['backup_binary_missing'] = 'Could not find mysqldump';\n$lng['install']['backup_failed'] = 'Could not backup database';\n$lng['install']['prepare_db'] = 'Preparing database...';\n$lng['install']['create_mysqluser_and_db'] = 'Creating database and username...';\n$lng['install']['testing_new_db'] = 'Testing if database and user have been created correctly...';\n$lng['install']['importing_data'] = 'Importing data...';\n$lng['install']['changing_data'] = 'Adjusting settings...';\n$lng['install']['creating_entries'] = 'Inserting new values...';\n$lng['install']['adding_admin_user'] = 'Creating admin-account...';\n$lng['install']['creating_configfile'] = 'Creating configfile...';\n$lng['install']['creating_configfile_temp'] = 'File was saved in /tmp/userdata.inc.php, please move to ' . dirname(dirname(__DIR__)) . '/lib/.';\n$lng['install']['creating_configfile_failed'] = 'Could not create ' . dirname(dirname(__DIR__)) . '/lib/userdata.inc.php, please create it manually with the following content:';\n$lng['install']['froxlor_succ_installed'] = 'Froxlor was installed successfully.';\n\n$lng['click_here_to_refresh'] = 'Click here to check again';\n$lng['click_here_to_goback'] = 'Click here to go back';\n$lng['click_here_to_continue'] = 'Click here to continue';\n$lng['click_here_to_login'] = 'Click here to login.';\n", "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2003-2009 the SysCP Team (see authors).\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * For the full copyright and license information, please view the COPYING\n * file that was distributed with this source code. You can also view the\n * COPYING file online at http://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  (c) the authors\n * @author     Florian Lippert <flo@syscp.org> (2003-2009)\n * @author     Froxlor team <team@froxlor.org> (2010-)\n * @license    GPLv2 http://files.froxlor.org/misc/COPYING.txt\n * @package    Language\n *\n */\n$lng['requirements']['title'] = 'V\u00e9rification des pr\u00e9requis syst\u00e8me...';\n$lng['requirements']['installed'] = 'install\u00e9';\n$lng['requirements']['not_true'] = 'non';\n$lng['requirements']['notfound'] = 'introuvable';\n$lng['requirements']['notinstalled'] = 'non install\u00e9';\n$lng['requirements']['activated'] = 'activ\u00e9';\n$lng['requirements']['phpversion'] = 'PHP version >= 7.0';\n$lng['requirements']['phppdo'] = 'extension PHP PDO et pilote PDO-MySQL ...';\n$lng['requirements']['phpxml'] = 'extension PHP XML...';\n$lng['requirements']['phpfilter'] = 'extension PHP filter ...';\n$lng['requirements']['phpposix'] = 'extension PHP posix ...';\n$lng['requirements']['phpbcmath'] = 'extension PHP bcmath ...';\n$lng['requirements']['phpcurl'] = 'extension PHP curl...';\n$lng['requirements']['phpmbstring'] = 'extension PHP mbstring...';\n$lng['requirements']['bcmathdescription'] = 'Les fonctions de calcul de traffic ne fonctionneront pas correctement!';\n$lng['requirements']['openbasedir'] = 'open_basedir...';\n$lng['requirements']['openbasedirenabled'] = 'Froxlor ne fonctionnera pas correctement avec open_basedir activ\u00e9. Merci de d\u00e9sactiver open_basedir pour Froxlor dans le php.ini correspondant';\n$lng['requirements']['diedbecauseofrequirements'] = 'Impossible d\\'installer Froxlor sans ces pr\u00e9requis! Essayez de les corriger et essayez \u00e0 nouveau.';\n$lng['requirements']['froxlor_succ_checks'] = 'Tous les pr\u00e9requis sont v\u00e9rifi\u00e9s';\n\n$lng['install']['lngtitle'] = 'Installation de Froxlor - choisisez la langue';\n$lng['install']['language'] = 'Langue d\\'installation';\n$lng['install']['lngbtn_go'] = 'Changer la langue';\n$lng['install']['title'] = 'Installation de Froxlor - param\u00e8trage';\n$lng['install']['welcometext'] = 'Merci d\\'avoir choisi Froxlor. Merci de remplir les champs suivant avec les informations n\u00e9cessaires pour d\u00e9marrer l\\'installation.<br /><b>Attention:</b> Si la base de donn\u00e9es que vous choisissez existe d\u00e9j\u00e0 sur votre syst\u00e8me, elle sera \u00e9cras\u00e9e ainsi que les donn\u00e9es contenues!';\n$lng['install']['database'] = 'Connexion \u00e0 la base de donn\u00e9es';\n$lng['install']['mysql_host'] = 'Nom d\\'h\u00f4te MySQL';\n$lng['install']['mysql_database'] = 'Nom de la base de donn\u00e9es';\n$lng['install']['mysql_unpriv_user'] = 'Nom d\\'utilisateur pour le compte non priviligi\u00e9 MySQL';\n$lng['install']['mysql_unpriv_pass'] = 'Mot de passe pour le compte non priviligi\u00e9 MySQL';\n$lng['install']['mysql_root_user'] = 'Nom d\\'utilisateur pour le compte MySQL root';\n$lng['install']['mysql_root_pass'] = 'Mot de passe pour le compte MySQL root';\n$lng['install']['admin_account'] = 'Compte administrateur';\n$lng['install']['admin_user'] = 'Nom d\\'utilisateur administrateur';\n$lng['install']['admin_pass1'] = 'Mot de passe administrateur';\n$lng['install']['admin_pass2'] = 'Mot de passe administrateur (confirmez)';\n$lng['install']['serversettings'] = 'R\u00e9glages serveur';\n$lng['install']['servername'] = 'Nom du serveur (FQDN, pas d\\'adresse IP)';\n$lng['install']['serverip'] = 'Adresse IP du serveur';\n$lng['install']['webserver'] = 'Serveur Web';\n$lng['install']['apache2'] = 'Apache 2';\n$lng['install']['apache24'] = 'Apache 2.4';\n$lng['install']['lighttpd'] = 'LigHTTPd';\n$lng['install']['nginx'] = 'NGINX';\n$lng['install']['httpuser'] = 'Nom d\\'utilisateur HTTP';\n$lng['install']['httpgroup'] = 'Nom de groupe HTTP';\n\n$lng['install']['testing_mysql'] = 'V\u00e9rification de l\\'acc\u00e8s root MySQL...';\n$lng['install']['testing_mysql_fail'] = 'Il semble y avoir un probl\u00e8me avec la connexion \u00e0 la base de donn\u00e9es. Impossible de continuer. Merci de revenir en arri\u00e8re et de v\u00e9rifier les informations d\\'identification.';\n$lng['install']['backup_old_db'] = 'Cr\u00e9ation des sauvegardes de l\\'ancienne base de donn\u00e9es...';\n$lng['install']['backup_binary_missing'] = 'Impossible de trouver mysqldump';\n$lng['install']['backup_failed'] = 'Impossible de sauvegarde la base de donn\u00e9es';\n$lng['install']['prepare_db'] = 'Pr\u00e9paration de la base de donn\u00e9es...';\n$lng['install']['create_mysqluser_and_db'] = 'Cr\u00e9ation de la base de donn\u00e9es et l\\'utilisateur...';\n$lng['install']['testing_new_db'] = 'Teste si la base de donn\u00e9es et l\\'utilisateur ont \u00e9t\u00e9 cr\u00e9\u00e9s correctement...';\n$lng['install']['importing_data'] = 'Import des donn\u00e9es...';\n$lng['install']['changing_data'] = 'Ajustement des param\u00e8tres...';\n$lng['install']['creating_entries'] = 'Insertion des nouvelles valeurs...';\n$lng['install']['adding_admin_user'] = 'Cr\u00e9ation du compte administrateur...';\n$lng['install']['creating_configfile'] = 'Cr\u00e9ation du fichier de configuration...';\n$lng['install']['creating_configfile_temp'] = 'Le fichier a \u00e9t\u00e9 enregistr\u00e9 dans /tmp/userdata.inc.php, merci de le d\u00e9placer dans ' . dirname(dirname(__DIR__)) . '/lib/.';\n$lng['install']['creating_configfile_failed'] = 'Impossible de cr\u00e9er ' . dirname(dirname(__DIR__)) . '/lib/userdata.inc.php, merci de le cr\u00e9er manuellement avec le contenu suivant:';\n$lng['install']['froxlor_succ_installed'] = 'Froxlor a \u00e9t\u00e9 install\u00e9 avec succ\u00e8s.';\n\n$lng['click_here_to_refresh'] = 'Cliquez ici pour v\u00e9rifier \u00e0 nouveau';\n$lng['click_here_to_goback'] = 'Cliquez ici pour revenir';\n$lng['click_here_to_continue'] = 'Cliquez ici pour continuer';\n$lng['click_here_to_login'] = 'Cliquez ici pour vous connecter.';\n", "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2003-2009 the SysCP Team (see authors).\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * For the full copyright and license information, please view the COPYING\n * file that was distributed with this source code. You can also view the\n * COPYING file online at http://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  (c) the authors\n * @author     Florian Lippert <flo@syscp.org> (2003-2009)\n * @author     Froxlor team <team@froxlor.org> (2010-)\n * @license    GPLv2 http://files.froxlor.org/misc/COPYING.txt\n * @package    Language\n *\n */\n$lng['requirements']['title'] = 'Pr\u00fcfe Systemvoraussetzungen...';\n$lng['requirements']['installed'] = 'installiert';\n$lng['requirements']['not_true'] = 'nein';\n$lng['requirements']['notfound'] = 'nicht gefunden';\n$lng['requirements']['notinstalled'] = 'nicht installiert';\n$lng['requirements']['activated'] = 'ist aktiviert.';\n$lng['requirements']['phpversion'] = 'PHP Version >= 7.0';\n$lng['requirements']['newerphpprefered'] = 'Passt, aber php-7.1 wird bevorzugt.';\n$lng['requirements']['phppdo'] = 'PHP PDO Erweiterung und PDO-MySQL Treiber...';\n$lng['requirements']['phpsession'] = 'PHP session-Erweiterung...';\n$lng['requirements']['phpctype'] = 'PHP ctype-Erweiterung...';\n$lng['requirements']['phpsimplexml'] = 'PHP SimpleXML-Erweiterung...';\n$lng['requirements']['phpxml'] = 'PHP XML-Erweiterung...';\n$lng['requirements']['phpfilter'] = 'PHP filter-Erweiterung...';\n$lng['requirements']['phpposix'] = 'PHP posix-Erweiterung...';\n$lng['requirements']['phpbcmath'] = 'PHP bcmath-Erweiterung...';\n$lng['requirements']['phpcurl'] = 'PHP curl-Erweiterung...';\n$lng['requirements']['phpmbstring'] = 'PHP mbstring-Erweiterung...';\n$lng['requirements']['phpzip'] = 'PHP zip-Erweiterung...';\n$lng['requirements']['phpjson'] = 'PHP json-Erweiterung...';\n$lng['requirements']['bcmathdescription'] = 'Traffic-Berechnungs bezogene Funktionen stehen nicht vollst\u00e4ndig zur Verf\u00fcgung!';\n$lng['requirements']['zipdescription'] = 'Die Auto-Update Funktion ben\u00f6tigt die zip Erweiterung.';\n$lng['requirements']['openbasedir'] = 'open_basedir genutzt wird...';\n$lng['requirements']['openbasedirenabled'] = 'Froxlor wird mit aktiviertem open_basedir nicht vollst\u00e4ndig funktionieren. Bitte deaktivieren Sie open_basedir f\u00fcr Froxlor in der entsprechenden php.ini';\n$lng['requirements']['mysqldump'] = 'MySQL dump Tool';\n$lng['requirements']['mysqldumpmissing'] = 'Ein automatisches Backup einer m\u00f6glicherweise schon existierenden Datenbank nicht m\u00f6glich. Bitte mysql-client installieren';\n$lng['requirements']['diedbecauseofrequirements'] = 'Kann Froxlor ohne diese Voraussetzungen nicht installieren! Beheben Sie die angezeigten Probleme und versuchen Sie es erneut.';\n$lng['requirements']['froxlor_succ_checks'] = 'Alle Vorraussetzungen sind erf\u00fcllt';\n\n$lng['install']['lngtitle'] = 'Froxlor Installation - Sprache ausw\u00e4hlen';\n$lng['install']['language'] = 'Sprache f\u00fcr die Installation';\n$lng['install']['lngbtn_go'] = 'Sprache \u00e4ndern';\n$lng['install']['title'] = 'Froxlor Installation - Einrichtung';\n$lng['install']['welcometext'] = 'Vielen Dank dass Sie sich f\u00fcr Froxlor entschieden haben. Um die Installation von Froxlor zu starten, f\u00fcllen Sie bitte alle Felder mit den geforderten Angaben aus.<br /><b>Achtung:</b> Eine eventuell existierende Datenbank, die den selben Namen hat wie den Gew\u00e4hlten, wird mit allen enthaltenen Daten gel\u00f6scht!';\n$lng['install']['database'] = 'Datenbankverbindung';\n$lng['install']['mysql_host'] = 'MySQL-Hostname';\n$lng['install']['mysql_database'] = 'Datenbank Name';\n$lng['install']['mysql_unpriv_user'] = 'Benutzername f\u00fcr den unprivilegierten MySQL-Account';\n$lng['install']['mysql_unpriv_pass'] = 'Passwort f\u00fcr den unprivilegierten MySQL-Account';\n$lng['install']['mysql_root_user'] = 'Benutzername f\u00fcr den MySQL-Root-Account';\n$lng['install']['mysql_root_pass'] = 'Passwort f\u00fcr den MySQL-Root-Account';\n$lng['install']['admin_account'] = 'Admin-Zugang';\n$lng['install']['admin_user'] = 'Administrator-Benutzername';\n$lng['install']['admin_pass1'] = 'Administrator-Passwort';\n$lng['install']['admin_pass2'] = 'Administrator-Passwort (Best\u00e4tigung)';\n$lng['install']['activate_newsfeed'] = 'Aktiviere das offizielle Newsfeed<br><small>(https://inside.froxlor.org/news/)</small>';\n$lng['install']['serversettings'] = 'Servereinstellungen';\n$lng['install']['servername'] = 'Servername (FQDN, keine IP-Adresse)';\n$lng['install']['serverip'] = 'Server-IP';\n$lng['install']['webserver'] = 'Webserver';\n$lng['install']['apache2'] = 'Apache 2';\n$lng['install']['apache24'] = 'Apache 2.4';\n$lng['install']['lighttpd'] = 'LigHTTPd';\n$lng['install']['nginx'] = 'NGINX';\n$lng['install']['httpuser'] = 'HTTP Username';\n$lng['install']['httpgroup'] = 'HTTP Gruppenname';\n\n$lng['install']['testing_mysql'] = 'Teste MySQL-Root Zugang...';\n$lng['install']['testing_mysql_fail'] = 'Bei der Verwendung der Datenbank gibt es scheinbar Probleme. Installation kann nicht fortgesetzt werden. Bitte Zugangsdaten pr\u00fcfen und erneut versuchen.';\n$lng['install']['backup_old_db'] = 'Sicherung vorheriger Datenbank...';\n$lng['install']['backup_binary_missing'] = 'Konnte mysqldump nicht finden';\n$lng['install']['backup_failed'] = 'Sicherung fehlgeschlagen';\n$lng['install']['prepare_db'] = 'Datenbank wird vorbereitet...';\n$lng['install']['create_mysqluser_and_db'] = 'Erstelle Datenbank und Benutzer...';\n$lng['install']['testing_new_db'] = 'Teste, ob Datenbank und Benutzer korrekt angelegt wurden...';\n$lng['install']['importing_data'] = 'Importiere Daten...';\n$lng['install']['changing_data'] = 'Einstellungen anpassen...';\n$lng['install']['creating_entries'] = 'Trage neue Werte ein...';\n$lng['install']['adding_admin_user'] = 'Erstelle Admin-Benutzer...';\n$lng['install']['creating_configfile'] = 'Erstelle Konfigurationsdatei...';\n$lng['install']['creating_configfile_temp'] = 'Datei wurde in /tmp/userdata.inc.php gespeichert, bitte nach ' . dirname(dirname(__DIR__)) . '/lib/ verschieben.';\n$lng['install']['creating_configfile_failed'] = 'Konnte ' . dirname(dirname(__DIR__)) . '/lib/userdata.inc.php nicht erstellen, bitte manuell mit folgendem Inhalt anlegen:';\n$lng['install']['froxlor_succ_installed'] = 'Froxlor wurde erfolgreich installiert.';\n\n$lng['click_here_to_refresh'] = 'Hier klicken, um erneut zu pr\u00fcfen';\n$lng['click_here_to_goback'] = 'Einen Schritt zur\u00fcck';\n$lng['click_here_to_continue'] = 'Installation fortf\u00fchren';\n$lng['click_here_to_login'] = 'Hier geht es weiter zum Login-Fenster.';\n"], "fixing_code": ["<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * For the full copyright and license information, please view the COPYING\n * file that was distributed with this source code. You can also view the\n * COPYING file online at http://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  (c) the authors\n * @author     Michael Kaufmann <mkaufmann@nutime.de>\n * @author     Froxlor team <team@froxlor.org> (2010-)\n * @license    GPLv2 http://files.froxlor.org/misc/COPYING.txt\n * @package    Classes\n *\n * @since      0.9.29.1\n *\n */\n\n/**\n * Class FroxlorInstall\n *\n * Does the dirty work\n *\n * @copyright (c) the authors\n * @author Michael Kaufmann <mkaufmann@nutime.de>\n * @author Froxlor team <team@froxlor.org> (2010-)\n * @license GPLv2 http://files.froxlor.org/misc/COPYING.txt\n * @package Install\n *         \n */\nclass FroxlorInstall\n{\n\n\t/**\n\t * define froxlor basepath e.g.\n\t * /var/www/froxlor\n\t *\n\t * @var string\n\t */\n\tprivate $_basepath = null;\n\n\t/**\n\t * theme to use for the installation process\n\t *\n\t * @var string\n\t */\n\tprivate $_theme = 'Sparkle';\n\n\t/**\n\t * language array\n\t *\n\t * @var array\n\t */\n\tprivate $_lng = null;\n\n\t/**\n\t * install data\n\t *\n\t * @var array\n\t */\n\tprivate $_data = null;\n\n\t/**\n\t * supported languages for install\n\t */\n\tprivate $_languages = array(\n\t\t'german' => 'Deutsch',\n\t\t'english' => 'English',\n\t\t'french' => 'Fran\u00e7ais'\n\t);\n\n\t/**\n\t * currently used language\n\t *\n\t * @var string\n\t */\n\tprivate $_activelng = 'english';\n\n\t/**\n\t * check whether to abort due to errors\n\t *\n\t * @var bool\n\t */\n\tprivate $_abort = false;\n\n\t/**\n\t * Class constructor\n\t */\n\tpublic function __construct()\n\t{\n\t\t$this->_basepath = dirname(dirname(dirname(__FILE__)));\n\t\t$this->_data = array();\n\t}\n\n\t/**\n\t * FC\n\t */\n\tpublic function run()\n\t{\n\t\t// send headers\n\t\t$this->_sendHeaders();\n\t\t// check if we have a valid installation already\n\t\t$this->_checkUserdataFile();\n\t\t// include the MySQL-Table-Definitions\n\t\trequire_once $this->_basepath . '/lib/tables.inc.php';\n\t\t// include language\n\t\t$this->_includeLanguageFile();\n\t\t// show the action\n\t\t$this->_showPage();\n\t}\n\n\t/**\n\t * build up and show the install-process-pages\n\t */\n\tprivate function _showPage()\n\t{\n\t\t// set theme for templates\n\t\t$theme = $this->_theme;\n\t\teval(\"echo \\\"\" . $this->_getTemplate(\"header\") . \"\\\";\");\n\t\t// check install-state\n\t\tif ((isset($_POST['installstep']) && $_POST['installstep'] == '1') || (isset($_GET['check']) && $_GET['check'] == '1')) {\n\t\t\t$pagetitle = $this->_lng['install']['title'];\n\t\t\tif ($this->_checkPostData()) {\n\t\t\t\t// ceck data and create userdata etc.etc.etc.\n\t\t\t\t$result = $this->_doInstall();\n\t\t\t} elseif (isset($_GET['check']) && $_GET['check'] == '1') {\n\t\t\t\t// gather data\n\t\t\t\t$result = $this->_showDataForm();\n\t\t\t} else {\n\t\t\t\t// this should not happen\n\t\t\t\t$result = array(\n\t\t\t\t\t'pagecontent' => \"How did you manage to get here? Well, you shouldn't be here. Go back!\",\n\t\t\t\t\t'pagenavigation' => ''\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\t// check for system-requirements first\n\t\t\t$pagetitle = $this->_lng['requirements']['title'];\n\t\t\t$result = $this->_requirementCheck();\n\t\t}\n\t\t// output everything\n\t\t$pagecontent = $result['pagecontent'];\n\t\t$pagenavigation = $result['pagenavigation'];\n\t\teval(\"echo \\\"\" . $this->_getTemplate(\"page\") . \"\\\";\");\n\t\t$current_year = date('Y', time());\n\t\teval(\"echo \\\"\" . $this->_getTemplate(\"footer\") . \"\\\";\");\n\t}\n\n\t/**\n\t * gather data from $_POST if set; return true if all is set,\n\t * false otherwise\n\t *\n\t * @return boolean\n\t */\n\tprivate function _checkPostData()\n\t{\n\t\t$this->_guessServerName();\n\t\t$this->_guessServerIP();\n\t\t$this->_guessWebserver();\n\n\t\t$this->_getPostField('mysql_host', '127.0.0.1');\n\t\t$this->_getPostField('mysql_database', 'froxlor');\n\t\t$this->_getPostField('mysql_unpriv_user', 'froxlor');\n\t\t$this->_getPostField('mysql_unpriv_pass');\n\t\t$this->_getPostField('mysql_root_user', 'root');\n\t\t$this->_getPostField('mysql_root_pass');\n\t\t$this->_getPostField('admin_user', 'admin');\n\t\t$this->_getPostField('admin_pass1');\n\t\t$this->_getPostField('admin_pass2');\n\t\t$this->_getPostField('activate_newsfeed', 1);\n\t\t$posixusername = posix_getpwuid(posix_getuid());\n\t\t$this->_getPostField('httpuser', $posixusername['name']);\n\t\t$posixgroup = posix_getgrgid(posix_getgid());\n\t\t$this->_getPostField('httpgroup', $posixgroup['name']);\n\n\t\tif ($this->_data['mysql_host'] == 'localhost' || $this->_data['mysql_host'] == '127.0.0.1') {\n\t\t\t$this->_data['mysql_access_host'] = $this->_data['mysql_host'];\n\t\t} else {\n\t\t\t$this->_data['mysql_access_host'] = $this->_data['serverip'];\n\t\t}\n\n\t\t// check system-hostname to be a FQDN\n\t\tif ($this->_validate_ip($this->_data['servername']) !== false) {\n\t\t\t$this->_data['servername'] = '';\n\t\t}\n\n\t\tif (empty($this->_data['serverip']) || $this->_validate_ip($this->_data['serverip']) == false) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (isset($_POST['installstep']) && $_POST['installstep'] == '1' && $this->_data['admin_pass1'] == $this->_data['admin_pass2'] && $this->_data['admin_pass1'] != '' && $this->_data['admin_pass2'] != '' && $this->_data['mysql_unpriv_pass'] != '' && $this->_data['mysql_root_pass'] != '' && $this->_data['servername'] != '' && $this->_data['serverip'] != '' && $this->_data['httpuser'] != '' && $this->_data['httpgroup'] != '' && $this->_data['mysql_unpriv_user'] != $this->_data['mysql_root_user']) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * no missing fields or data -> perform actual install\n\t *\n\t * @return array\n\t */\n\tprivate function _doInstall()\n\t{\n\t\t$content = \"<table class=\\\"noborder\\\">\";\n\n\t\t// check for mysql-root-connection\n\t\t$content .= $this->_status_message('begin', $this->_lng['install']['testing_mysql']);\n\n\t\t$options = array(\n\t\t\t'PDO::MYSQL_ATTR_INIT_COMMAND' => 'SET names utf8'\n\t\t);\n\t\t$dsn = \"mysql:host=\" . $this->_data['mysql_host'] . \";\";\n\t\t$fatal_fail = false;\n\t\ttry {\n\t\t\t$db_root = new PDO($dsn, $this->_data['mysql_root_user'], $this->_data['mysql_root_pass'], $options);\n\t\t} catch (PDOException $e) {\n\t\t\t// possibly without passwd?\n\t\t\ttry {\n\t\t\t\t$db_root = new PDO($dsn, $this->_data['mysql_root_user'], '', $options);\n\t\t\t\t// set the given password\n\t\t\t\t$passwd_stmt = $db_root->prepare(\"\n\t\t\t\t\t\tSET PASSWORD = PASSWORD(:passwd)\n\t\t\t\t\t\t\");\n\t\t\t\t$passwd_stmt->execute(array(\n\t\t\t\t\t'passwd' => $this->_data['mysql_root_pass']\n\t\t\t\t));\n\t\t\t} catch (PDOException $e) {\n\t\t\t\t// nope\n\t\t\t\t$content .= $this->_status_message('red', $e->getMessage());\n\t\t\t\t$fatal_fail = true;\n\t\t\t}\n\t\t}\n\n\t\tif (! $fatal_fail) {\n\t\t\t$version_server = $db_root->getAttribute(PDO::ATTR_SERVER_VERSION);\n\t\t\t$sql_mode = 'NO_ENGINE_SUBSTITUTION';\n\t\t\tif (version_compare($version_server, '8.0.11', '<')) {\n\t\t\t\t$sql_mode .= ',NO_AUTO_CREATE_USER';\n\t\t\t}\n\t\t\t$db_root->exec('SET sql_mode = \"' . $sql_mode . '\"');\n\n\t\t\t// ok, if we are here, the database connection is up and running\n\t\t\t$content .= $this->_status_message('green', \"OK\");\n\t\t\t// check for existing db and create backup if so\n\t\t\t$content .= $this->_backupExistingDatabase($db_root);\n\t\t\t// create unprivileged user and the database itself\n\t\t\t$content .= $this->_createDatabaseAndUser($db_root);\n\t\t\t// importing data to new database\n\t\t\t$content .= $this->_importDatabaseData();\n\t\t\tif (! $this->_abort) {\n\t\t\t\t// create DB object for new database\n\t\t\t\t$options = array(\n\t\t\t\t\t'PDO::MYSQL_ATTR_INIT_COMMAND' => 'SET names utf8'\n\t\t\t\t);\n\t\t\t\t$dsn = \"mysql:host=\" . $this->_data['mysql_host'] . \";dbname=\" . $this->_data['mysql_database'] . \";\";\n\t\t\t\t$another_fail = false;\n\t\t\t\ttry {\n\t\t\t\t\t$db = new PDO($dsn, $this->_data['mysql_unpriv_user'], $this->_data['mysql_unpriv_pass'], $options);\n\t\t\t\t\t$version_server = $db->getAttribute(PDO::ATTR_SERVER_VERSION);\n\t\t\t\t\t$sql_mode = 'NO_ENGINE_SUBSTITUTION';\n\t\t\t\t\tif (version_compare($version_server, '8.0.11', '<')) {\n\t\t\t\t\t\t$sql_mode .= ',NO_AUTO_CREATE_USER';\n\t\t\t\t\t}\n\t\t\t\t\t$db->exec('SET sql_mode = \"' . $sql_mode . '\"');\n\t\t\t\t} catch (PDOException $e) {\n\t\t\t\t\t// dafuq? this should have happened in _importDatabaseData()\n\t\t\t\t\t$content .= $this->_status_message('red', $e->getMessage());\n\t\t\t\t\t$another_fail = true;\n\t\t\t\t}\n\n\t\t\t\tif (! $another_fail) {\n\t\t\t\t\t// change settings accordingly\n\t\t\t\t\t$content .= $this->_doSettings($db);\n\t\t\t\t\t// create entries\n\t\t\t\t\t$content .= $this->_doDataEntries($db);\n\t\t\t\t\t$db = null;\n\t\t\t\t\t// create config-file\n\t\t\t\t\t$content .= $this->_createUserdataConf();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$content .= \"</table>\";\n\n\t\t// check if we have unrecoverable errors\n\t\tif ($fatal_fail || $another_fail || $this->_abort) {\n\t\t\t// D'oh\n\t\t\t$navigation = '';\n\t\t\t$msgcolor = 'red';\n\t\t\t$message = $this->_lng['install']['testing_mysql_fail'];\n\t\t\t$link = 'install.php?check=1';\n\t\t\t$linktext = $this->_lng['click_here_to_goback'];\n\t\t} else {\n\t\t\t// all good\n\t\t\t$navigation = '';\n\t\t\t$msgcolor = 'green';\n\t\t\t$message = $this->_lng['install']['froxlor_succ_installed'];\n\t\t\t$link = '../index.php';\n\t\t\t$linktext = $this->_lng['click_here_to_login'];\n\t\t}\n\n\t\teval(\"\\$navigation .= \\\"\" . $this->_getTemplate(\"pagebottom\") . \"\\\";\");\n\n\t\treturn array(\n\t\t\t'pagecontent' => $content,\n\t\t\t'pagenavigation' => $navigation\n\t\t);\n\t}\n\n\t/**\n\t * Create userdata.inc.php file\n\t */\n\tprivate function _createUserdataConf()\n\t{\n\t\t$content = \"\";\n\n\t\t$content .= $this->_status_message('begin', $this->_lng['install']['creating_configfile']);\n\t\t$userdata = \"<?php\\n\";\n\t\t$userdata .= \"// automatically generated userdata.inc.php for Froxlor\\n\";\n\t\t$userdata .= \"\\$sql['host']='\" . addcslashes($this->_data['mysql_host'], \"'\\\\\") . \"';\\n\";\n\t\t$userdata .= \"\\$sql['user']='\" . addcslashes($this->_data['mysql_unpriv_user'], \"'\\\\\") . \"';\\n\";\n\t\t$userdata .= \"\\$sql['password']='\" . addcslashes($this->_data['mysql_unpriv_pass'], \"'\\\\\") . \"';\\n\";\n\t\t$userdata .= \"\\$sql['db']='\" . addcslashes($this->_data['mysql_database'], \"'\\\\\") . \"';\\n\";\n\t\t$userdata .= \"\\$sql_root[0]['caption']='Default';\\n\";\n\t\t$userdata .= \"\\$sql_root[0]['host']='\" . addcslashes($this->_data['mysql_host'], \"'\\\\\") . \"';\\n\";\n\t\t$userdata .= \"\\$sql_root[0]['user']='\" . addcslashes($this->_data['mysql_root_user'], \"'\\\\\") . \"';\\n\";\n\t\t$userdata .= \"\\$sql_root[0]['password']='\" . addcslashes($this->_data['mysql_root_pass'], \"'\\\\\") . \"';\\n\";\n\t\t$userdata .= \"// enable debugging to browser in case of SQL errors\\n\";\n\t\t$userdata .= \"\\$sql['debug'] = false;\\n\";\n\t\t$userdata .= \"?>\";\n\n\t\t// test if we can store the userdata.inc.php in ../lib\n\t\t$userdata_file = dirname(dirname(dirname(__FILE__))) . '/lib/userdata.inc.php';\n\t\tif ($fp = @fopen($userdata_file, 'w')) {\n\t\t\t$result = @fputs($fp, $userdata, strlen($userdata));\n\t\t\t@fclose($fp);\n\t\t\t$content .= $this->_status_message('green', 'OK');\n\t\t\tchmod($userdata_file, 0440);\n\t\t} else {\n\t\t\t// try creating it in a temporary file\n\t\t\t$temp_file = tempnam(sys_get_temp_dir(), 'fx');\n\t\t\tif (touch($temp_file)) {\n\t\t\t\tchmod($temp_file, 0400);\n\t\t\t\t$fp = @fopen($temp_file, 'w');\n\t\t\t\t$result = @fputs($fp, $userdata, strlen($userdata));\n\t\t\t\t@fclose($fp);\n\t\t\t\t$content .= $this->_status_message('orange', sprintf($this->_lng['install']['creating_configfile_temp'], $temp_file));\n\t\t\t} else {\n\t\t\t\t$content .= $this->_status_message('red', $this->_lng['install']['creating_configfile_failed']);\n\t\t\t\t$escpduserdata = nl2br(htmlspecialchars($userdata));\n\t\t\t\teval(\"\\$content .= \\\"\" . $this->_getTemplate(\"textarea\") . \"\\\";\");\n\t\t\t}\n\t\t}\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * create corresponding entries in froxlor database\n\t *\n\t * @param object $db\n\t *\n\t * @return string status messages\n\t */\n\tprivate function _doDataEntries(&$db)\n\t{\n\t\t$content = \"\";\n\n\t\t$content .= $this->_status_message('begin', $this->_lng['install']['creating_entries']);\n\n\t\t// and lets insert the default ip and port\n\t\t$stmt = $db->prepare(\"\n\t\t\t\tINSERT INTO `\" . TABLE_PANEL_IPSANDPORTS . \"` SET\n\t\t\t\t`ip`= :serverip,\n\t\t\t\t`port` = '80',\n\t\t\t\t`namevirtualhost_statement` = '1',\n\t\t\t\t`vhostcontainer` = '1',\n\t\t\t\t`vhostcontainer_servername_statement` = '1'\n\t\t\t\t\");\n\t\t$stmt->execute(array(\n\t\t\t'serverip' => $this->_data['serverip']\n\t\t));\n\t\t$defaultip = $db->lastInsertId();\n\n\t\t// insert the defaultip\n\t\t$upd_stmt = $db->prepare(\"\n\t\t\t\tUPDATE `\" . TABLE_PANEL_SETTINGS . \"` SET\n\t\t\t\t`value` = :defaultip\n\t\t\t\tWHERE `settinggroup` = 'system' AND `varname` = 'defaultip'\n\t\t\t\t\");\n\t\t$upd_stmt->execute(array(\n\t\t\t'defaultip' => $defaultip\n\t\t));\n\n\t\t$content .= $this->_status_message('green', 'OK');\n\n\t\t// last but not least create the main admin\n\t\t$content .= $this->_status_message('begin', $this->_lng['install']['adding_admin_user']);\n\t\t$ins_data = array(\n\t\t\t'loginname' => $this->_data['admin_user'],\n\t\t\t\t/* use SHA256 default crypt */\n\t\t\t\t'password' => crypt($this->_data['admin_pass1'], '$5$' . md5(uniqid(microtime(), 1)) . md5(uniqid(microtime(), 1))),\n\t\t\t'email' => 'admin@' . $this->_data['servername'],\n\t\t\t'deflang' => $this->_languages[$this->_activelng]\n\t\t);\n\t\t$ins_stmt = $db->prepare(\"\n\t\t\t\tINSERT INTO `\" . TABLE_PANEL_ADMINS . \"` SET\n\t\t\t\t`loginname` = :loginname,\n\t\t\t\t`password` = :password,\n\t\t\t\t`name` = 'Froxlor-Administrator',\n\t\t\t\t`email` = :email,\n\t\t\t\t`def_language` = :deflang,\n\t\t\t\t`api_allowed` = 1,\n\t\t\t\t`customers` = -1,\n\t\t\t\t`customers_see_all` = 1,\n\t\t\t\t`caneditphpsettings` = 1,\n\t\t\t\t`domains` = -1,\n\t\t\t\t`domains_see_all` = 1,\n\t\t\t\t`change_serversettings` = 1,\n\t\t\t\t`diskspace` = -1024,\n\t\t\t\t`mysqls` = -1,\n\t\t\t\t`emails` = -1,\n\t\t\t\t`email_accounts` = -1,\n\t\t\t\t`email_forwarders` = -1,\n\t\t\t\t`email_quota` = -1,\n\t\t\t\t`ftps` = -1,\n\t\t\t\t`subdomains` = -1,\n\t\t\t\t`traffic` = -1048576\n\t\t\t\t\");\n\n\t\t$ins_stmt->execute($ins_data);\n\n\t\t$content .= $this->_status_message('green', 'OK');\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * execute prepared statement to update settings\n\t *\n\t * @param PDOStatement $stmt\n\t * @param string $group\n\t * @param string $varname\n\t * @param string $value\n\t */\n\tprivate function _updateSetting(&$stmt = null, $value = null, $group = null, $varname = null)\n\t{\n\t\t$stmt->execute(array(\n\t\t\t'group' => $group,\n\t\t\t'varname' => $varname,\n\t\t\t'value' => $value\n\t\t));\n\t}\n\n\t/**\n\t * change settings according to users input\n\t *\n\t * @param object $db\n\t *\n\t * @return string status messages\n\t */\n\tprivate function _doSettings(&$db)\n\t{\n\t\t$content = \"\";\n\n\t\t$content .= $this->_status_message('begin', $this->_lng['install']['changing_data']);\n\t\t$upd_stmt = $db->prepare(\"\n\t\t\t\tUPDATE `\" . TABLE_PANEL_SETTINGS . \"` SET\n\t\t\t\t`value` = :value\n\t\t\t\tWHERE `settinggroup` = :group AND `varname` = :varname\n\t\t\t\t\");\n\n\t\t$this->_updateSetting($upd_stmt, 'admin@' . $this->_data['servername'], 'panel', 'adminmail');\n\t\t$this->_updateSetting($upd_stmt, $this->_data['serverip'], 'system', 'ipaddress');\n\t\t$this->_updateSetting($upd_stmt, $this->_data['servername'], 'system', 'hostname');\n\t\t$this->_updateSetting($upd_stmt, $this->_languages[$this->_activelng], 'panel', 'standardlanguage');\n\t\t$this->_updateSetting($upd_stmt, $this->_data['mysql_access_host'], 'system', 'mysql_access_host');\n\t\t$this->_updateSetting($upd_stmt, $this->_data['webserver'], 'system', 'webserver');\n\t\t$this->_updateSetting($upd_stmt, $this->_data['httpuser'], 'system', 'httpuser');\n\t\t$this->_updateSetting($upd_stmt, $this->_data['httpgroup'], 'system', 'httpgroup');\n\n\t\t// necessary changes for webservers != apache2\n\t\tif ($this->_data['webserver'] == \"apache24\") {\n\t\t\t$this->_updateSetting($upd_stmt, 'apache2', 'system', 'webserver');\n\t\t\t$this->_updateSetting($upd_stmt, '1', 'system', 'apache24');\n\t\t} elseif ($this->_data['webserver'] == \"lighttpd\") {\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/lighttpd/conf-enabled/', 'system', 'apacheconf_vhost');\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/lighttpd/froxlor-diroptions/', 'system', 'apacheconf_diroptions');\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/lighttpd/froxlor-htpasswd/', 'system', 'apacheconf_htpasswddir');\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/init.d/lighttpd reload', 'system', 'apachereload_command');\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/lighttpd/lighttpd.pem', 'system', 'ssl_cert_file');\n\t\t\t$this->_updateSetting($upd_stmt, '/var/run/lighttpd/', 'phpfpm', 'fastcgi_ipcdir');\n\t\t} elseif ($this->_data['webserver'] == \"nginx\") {\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/nginx/sites-enabled/', 'system', 'apacheconf_vhost');\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/nginx/sites-enabled/', 'system', 'apacheconf_diroptions');\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/nginx/froxlor-htpasswd/', 'system', 'apacheconf_htpasswddir');\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/init.d/nginx reload', 'system', 'apachereload_command');\n\t\t\t$this->_updateSetting($upd_stmt, '/etc/nginx/nginx.pem', 'system', 'ssl_cert_file');\n\t\t\t$this->_updateSetting($upd_stmt, '/var/run/', 'phpfpm', 'fastcgi_ipcdir');\n\t\t\t$this->_updateSetting($upd_stmt, 'error', 'system', 'errorlog_level');\n\t\t}\n\n\t\t$this->_updateSetting($upd_stmt, $this->_data['activate_newsfeed'], 'admin', 'show_news_feed');\n\t\t$this->_updateSetting($upd_stmt, dirname(dirname(dirname(__FILE__))), 'system', 'letsencryptchallengepath');\n\n\t\t// insert the lastcronrun to be the installation date\n\t\t$this->_updateSetting($upd_stmt, time(), 'system', 'lastcronrun');\n\n\t\t// set specific times for some crons (traffic only at night, etc.)\n\t\t$ts = mktime(0, 0, 0, date('m', time()), date('d', time()), date('Y', time()));\n\t\t$db->query(\"UPDATE `\" . TABLE_PANEL_CRONRUNS . \"` SET `lastrun` = '\" . $ts . \"' WHERE `cronfile` ='cron_traffic';\");\n\n\t\t// insert task 99 to generate a correct cron.d-file automatically\n\t\t$db->query(\"INSERT INTO `\" . TABLE_PANEL_TASKS . \"` SET `type` = '99';\");\n\n\t\t$content .= $this->_status_message('green', 'OK');\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * Import froxlor.sql into database\n\t *\n\t * @param object $db_root\n\t *\n\t * @return string status messages\n\t */\n\tprivate function _importDatabaseData()\n\t{\n\t\t$content = \"\";\n\t\t$content .= $this->_status_message('begin', $this->_lng['install']['testing_new_db']);\n\t\t$options = array(\n\t\t\t'PDO::MYSQL_ATTR_INIT_COMMAND' => 'SET names utf8'\n\t\t);\n\t\t$dsn = \"mysql:host=\" . $this->_data['mysql_host'] . \";dbname=\" . $this->_data['mysql_database'] . \";\";\n\t\t$fatal_fail = false;\n\t\ttry {\n\t\t\t$db = new PDO($dsn, $this->_data['mysql_unpriv_user'], $this->_data['mysql_unpriv_pass'], $options);\n\t\t\t$attributes = array(\n\t\t\t\t'ATTR_ERRMODE' => 'ERRMODE_EXCEPTION'\n\t\t\t);\n\t\t\t// set attributes\n\t\t\tforeach ($attributes as $k => $v) {\n\t\t\t\t$db->setAttribute(constant(\"PDO::\" . $k), constant(\"PDO::\" . $v));\n\t\t\t}\n\t\t\t$version_server = $db->getAttribute(PDO::ATTR_SERVER_VERSION);\n\t\t\t$sql_mode = 'NO_ENGINE_SUBSTITUTION';\n\t\t\tif (version_compare($version_server, '8.0.11', '<')) {\n\t\t\t\t$sql_mode .= ',NO_AUTO_CREATE_USER';\n\t\t\t}\n\t\t\t$db->exec('SET sql_mode = \"' . $sql_mode . '\"');\n\t\t} catch (PDOException $e) {\n\t\t\t$content .= $this->_status_message('red', $e->getMessage());\n\t\t\t$fatal_fail = true;\n\t\t}\n\n\t\tif (! $fatal_fail) {\n\n\t\t\t$content .= $this->_status_message('green', 'OK');\n\n\t\t\t$content .= $this->_status_message('begin', $this->_lng['install']['importing_data']);\n\t\t\t$db_schema = dirname(dirname(__FILE__)) . '/froxlor.sql';\n\t\t\t$sql_query = @file_get_contents($db_schema);\n\t\t\t$sql_query = $this->_remove_remarks($sql_query);\n\t\t\t$sql_query = $this->_split_sql_file($sql_query, ';');\n\t\t\tfor ($i = 0; $i < sizeof($sql_query); $i ++) {\n\t\t\t\tif (trim($sql_query[$i]) != '') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t$result = $db->query($sql_query[$i]);\n\t\t\t\t\t} catch (\\PDOException $e) {\n\t\t\t\t\t\t$content .= $this->_status_message('red', $e->getMessage());\n\t\t\t\t\t\t$fatal_fail = true;\n\t\t\t\t\t\t$this->_abort = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (! $fatal_fail) {\n\t\t\t\t$content .= $this->_status_message('green', 'OK');\n\t\t\t}\n\t\t\t$db = null;\n\t\t}\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * Create database and database-user\n\t *\n\t * @param object $db_root\n\t *\n\t * @return string status messages\n\t */\n\tprivate function _createDatabaseAndUser(&$db_root)\n\t{\n\t\t$content = \"\";\n\n\t\t// so first we have to delete the database and\n\t\t// the user given for the unpriv-user if they exit\n\t\t$content .= $this->_status_message('begin', $this->_lng['install']['prepare_db']);\n\n\t\t$del_stmt = $db_root->prepare(\"DELETE FROM `mysql`.`user` WHERE `User` = :user AND `Host` = :accesshost\");\n\t\t$del_stmt->execute(array(\n\t\t\t'user' => $this->_data['mysql_unpriv_user'],\n\t\t\t'accesshost' => $this->_data['mysql_access_host']\n\t\t));\n\n\t\t$del_stmt = $db_root->prepare(\"DELETE FROM `mysql`.`db` WHERE `User` = :user AND `Host` = :accesshost\");\n\t\t$del_stmt->execute(array(\n\t\t\t'user' => $this->_data['mysql_unpriv_user'],\n\t\t\t'accesshost' => $this->_data['mysql_access_host']\n\t\t));\n\n\t\t$del_stmt = $db_root->prepare(\"DELETE FROM `mysql`.`tables_priv` WHERE `User` = :user AND `Host` =:accesshost\");\n\t\t$del_stmt->execute(array(\n\t\t\t'user' => $this->_data['mysql_unpriv_user'],\n\t\t\t'accesshost' => $this->_data['mysql_access_host']\n\t\t));\n\n\t\t$del_stmt = $db_root->prepare(\"DELETE FROM `mysql`.`columns_priv` WHERE `User` = :user AND `Host` = :accesshost\");\n\t\t$del_stmt->execute(array(\n\t\t\t'user' => $this->_data['mysql_unpriv_user'],\n\t\t\t'accesshost' => $this->_data['mysql_access_host']\n\t\t));\n\n\t\t$del_stmt = $db_root->prepare(\"DROP DATABASE IF EXISTS `\" . str_replace('`', '', $this->_data['mysql_database']) . \"`;\");\n\t\t$del_stmt->execute();\n\n\t\t$db_root->query(\"FLUSH PRIVILEGES;\");\n\t\t$content .= $this->_status_message('green', 'OK');\n\n\t\t// we have to create a new user and database for the froxlor unprivileged mysql access\n\t\t$content .= $this->_status_message('begin', $this->_lng['install']['create_mysqluser_and_db']);\n\t\t$ins_stmt = $db_root->prepare(\"CREATE DATABASE `\" . str_replace('`', '', $this->_data['mysql_database']) . \"` CHARACTER SET=utf8 COLLATE=utf8_general_ci\");\n\t\t$ins_stmt->execute();\n\n\t\t$mysql_access_host_array = array_map('trim', explode(',', $this->_data['mysql_access_host']));\n\n\t\tif (in_array('127.0.0.1', $mysql_access_host_array) && ! in_array('localhost', $mysql_access_host_array)) {\n\t\t\t$mysql_access_host_array[] = 'localhost';\n\t\t}\n\n\t\tif (! in_array('127.0.0.1', $mysql_access_host_array) && in_array('localhost', $mysql_access_host_array)) {\n\t\t\t$mysql_access_host_array[] = '127.0.0.1';\n\t\t}\n\n\t\t$mysql_access_host_array[] = $this->_data['serverip'];\n\t\tforeach ($mysql_access_host_array as $mysql_access_host) {\n\t\t\t$frox_db = str_replace('`', '', $this->_data['mysql_database']);\n\t\t\t$this->_grantDbPrivilegesTo($db_root, $frox_db, $this->_data['mysql_unpriv_user'], $this->_data['mysql_unpriv_pass'], $mysql_access_host);\n\t\t}\n\n\t\t$db_root->query(\"FLUSH PRIVILEGES;\");\n\t\t$this->_data['mysql_access_host'] = implode(',', $mysql_access_host_array);\n\t\t$content .= $this->_status_message('green', 'OK');\n\n\t\treturn $content;\n\t}\n\n\tprivate function _grantDbPrivilegesTo(&$db_root, $database, $username, $password, $access_host)\n\t{\n\t\t// mysql8 compatibility\n\t\tif (version_compare($db_root->getAttribute(\\PDO::ATTR_SERVER_VERSION), '8.0.11', '>=')) {\n\t\t\t// create user\n\t\t\t$stmt = $db_root->prepare(\"\n\t\t\t\tCREATE USER '\" . $username . \"'@'\" . $access_host . \"' IDENTIFIED BY :password\n\t\t\t\");\n\t\t\t$stmt->execute(array(\n\t\t\t\t\"password\" => $password\n\t\t\t));\n\t\t\t// grant privileges\n\t\t\t$stmt = $db_root->prepare(\"\n\t\t\t\tGRANT ALL ON `\" . $database . \"`.* TO :username@:host\n\t\t\t\");\n\t\t\t$stmt->execute(array(\n\t\t\t\t\"username\" => $username,\n\t\t\t\t\"host\" => $access_host\n\t\t\t));\n\t\t} else {\n\t\t\t// grant privileges\n\t\t\t$stmt = $db_root->prepare(\"\n\t\t\t\tGRANT ALL PRIVILEGES ON `\" . $database . \"`.* TO :username@:host IDENTIFIED BY :password\n\t\t\t\");\n\t\t\t$stmt->execute(array(\n\t\t\t\t\"username\" => $username,\n\t\t\t\t\"host\" => $access_host,\n\t\t\t\t\"password\" => $password\n\t\t\t));\n\t\t}\n\t}\n\n\t/**\n\t * Check if an old database exists and back it up if necessary\n\t *\n\t * @param object $db_root\n\t *\n\t * @return string status messages\n\t */\n\tprivate function _backupExistingDatabase(&$db_root)\n\t{\n\t\t$content = \"\";\n\n\t\t// check for existing of former database\n\t\t$tables_exist = false;\n\t\t$sql = \"SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = :database\";\n\t\t$result_stmt = $db_root->prepare($sql);\n\t\t$result_stmt->execute(array(\n\t\t\t'database' => $this->_data['mysql_database']\n\t\t));\n\t\t$rows = $db_root->query(\"SELECT FOUND_ROWS()\")->fetchColumn();\n\n\t\t// check result\n\t\tif ($result_stmt !== false && $rows > 0) {\n\t\t\t$tables_exist = true;\n\t\t}\n\n\t\tif ($tables_exist) {\n\t\t\t// tell whats going on\n\t\t\t$content .= $this->_status_message('begin', $this->_lng['install']['backup_old_db']);\n\n\t\t\t// create temporary backup-filename\n\t\t\t$filename = \"/tmp/froxlor_backup_\" . date('YmdHi') . \".sql\";\n\n\t\t\t// look for mysqldump\n\t\t\t$do_backup = false;\n\t\t\tif (file_exists(\"/usr/bin/mysqldump\")) {\n\t\t\t\t$do_backup = true;\n\t\t\t\t$mysql_dump = '/usr/bin/mysqldump';\n\t\t\t} elseif (file_exists(\"/usr/local/bin/mysqldump\")) {\n\t\t\t\t$do_backup = true;\n\t\t\t\t$mysql_dump = '/usr/local/bin/mysqldump';\n\t\t\t}\n\n\t\t\tif ($do_backup) {\n\t\t\t\t$command = $mysql_dump . \" \" . $this->_data['mysql_database'] . \" -u \" . $this->_data['mysql_root_user'] . \" --password='\" . $this->_data['mysql_root_pass'] . \"' --result-file=\" . $filename;\n\t\t\t\t$output = exec($command);\n\t\t\t\tif (stristr($output, \"error\")) {\n\t\t\t\t\t$content .= $this->_status_message('red', $this->_lng['install']['backup_failed']);\n\t\t\t\t} else {\n\t\t\t\t\t$content .= $this->_status_message('green', 'OK (' . $filename . ')');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$content .= $this->_status_message('red', $this->_lng['install']['backup_binary_missing']);\n\t\t\t}\n\t\t}\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * show form to collect all needed data for the install\n\t */\n\tprivate function _showDataForm()\n\t{\n\t\t$content = \"\";\n\t\t// form action\n\t\t$formaction = htmlspecialchars($_SERVER['PHP_SELF']);\n\t\tif (isset($_GET['check'])) {\n\t\t\t$formaction .= '?check=' . (int) $_GET['check'];\n\t\t}\n\t\t// language selection\n\t\t$language_options = '';\n\t\tforeach ($this->_languages as $language_name => $language_file) {\n\t\t\t$language_options .= \\Froxlor\\UI\\HTML::makeoption($language_name, $language_file, $this->_activelng, true, true);\n\t\t}\n\t\t// get language-form-template\n\t\teval(\"\\$content .= \\\"\" . $this->_getTemplate(\"lngform\") . \"\\\";\");\n\n\t\t// form-data\n\t\t$formdata = \"\";\n\t\t/**\n\t\t * Database\n\t\t */\n\t\t$section = $this->_lng['install']['database'];\n\t\teval(\"\\$formdata .= \\\"\" . $this->_getTemplate(\"datasection\") . \"\\\";\");\n\t\t// host\n\t\t$formdata .= $this->_getSectionItemString('mysql_host', true);\n\t\t// database\n\t\t$formdata .= $this->_getSectionItemString('mysql_database', true);\n\t\t// unpriv-user has to be different from root\n\t\tif ($this->_data['mysql_unpriv_user'] == $this->_data['mysql_root_user']) {\n\t\t\t$style = 'blue';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('mysql_unpriv_user', true, $style);\n\t\t// is we posted and no password was given -> red\n\t\tif (! empty($_POST['installstep']) && $this->_data['mysql_unpriv_pass'] == '') {\n\t\t\t$style = 'red';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('mysql_unpriv_pass', true, $style, 'password');\n\t\t// unpriv-user has to be different from root\n\t\tif ($this->_data['mysql_unpriv_user'] == $this->_data['mysql_root_user']) {\n\t\t\t$style = 'blue';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('mysql_root_user', true, $style);\n\t\t// is we posted and no password was given -> red\n\t\tif (! empty($_POST['installstep']) && $this->_data['mysql_root_pass'] == '') {\n\t\t\t$style = 'red';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('mysql_root_pass', true, $style, 'password');\n\n\t\t/**\n\t\t * admin data\n\t\t */\n\t\t$section = $this->_lng['install']['admin_account'];\n\t\teval(\"\\$formdata .= \\\"\" . $this->_getTemplate(\"datasection\") . \"\\\";\");\n\t\t// user\n\t\t$formdata .= $this->_getSectionItemString('admin_user', true);\n\t\t// check for admin passwords to be equal\n\t\tif (! empty($_POST['installstep']) && ($this->_data['admin_pass1'] == '' || $this->_data['admin_pass1'] != $this->_data['admin_pass2'])) {\n\t\t\t$style = 'color:red;';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('admin_pass1', true, $style, 'password');\n\t\t// check for admin passwords to be equal\n\t\tif (! empty($_POST['installstep']) && ($this->_data['admin_pass2'] == '' || $this->_data['admin_pass1'] != $this->_data['admin_pass2'])) {\n\t\t\t$style = 'color:red;';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('admin_pass2', true, $style, 'password');\n\t\t// activate newsfeed?\n\t\t$formdata .= $this->_getSectionItemYesNo('activate_newsfeed', true);\n\n\t\t/**\n\t\t * Server data\n\t\t */\n\t\t$section = $this->_lng['install']['serversettings'];\n\t\teval(\"\\$formdata .= \\\"\" . $this->_getTemplate(\"datasection\") . \"\\\";\");\n\t\t// servername\n\t\tif (! empty($_POST['installstep']) && $this->_data['servername'] == '') {\n\t\t\t$style = 'color:red;';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('servername', true, $style);\n\t\t// serverip\n\t\tif (! empty($_POST['installstep']) && ($this->_data['serverip'] == '' || $this->_validate_ip($this->_data['serverip']) == false)) {\n\t\t\t$style = 'color:red;';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('serverip', true, $style);\n\t\t// webserver\n\t\tif (! empty($_POST['installstep']) && $this->_data['webserver'] == '') {\n\t\t\t$websrvstyle = 'color:red;';\n\t\t} else {\n\t\t\t$websrvstyle = '';\n\t\t}\n\t\t// apache\n\t\t$formdata .= $this->_getSectionItemCheckbox('apache2', ($this->_data['webserver'] == 'apache2'), $websrvstyle);\n\t\t$formdata .= $this->_getSectionItemCheckbox('apache24', ($this->_data['webserver'] == 'apache24'), $websrvstyle);\n\t\t// lighttpd\n\t\t$formdata .= $this->_getSectionItemCheckbox('lighttpd', ($this->_data['webserver'] == 'lighttpd'), $websrvstyle);\n\t\t// nginx\n\t\t$formdata .= $this->_getSectionItemCheckbox('nginx', ($this->_data['webserver'] == 'nginx'), $websrvstyle);\n\t\t// webserver-user\n\t\tif (! empty($_POST['installstep']) && $this->_data['httpuser'] == '') {\n\t\t\t$style = 'color:red;';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('httpuser', true, $style);\n\t\t// webserver-group\n\t\tif (! empty($_POST['installstep']) && $this->_data['httpgroup'] == '') {\n\t\t\t$style = 'color:red;';\n\t\t} else {\n\t\t\t$style = '';\n\t\t}\n\t\t$formdata .= $this->_getSectionItemString('httpgroup', true, $style);\n\n\t\t// get data-form-template\n\t\t$language = htmlspecialchars($this->_activelng);\n\t\teval(\"\\$content .= \\\"\" . $this->_getTemplate(\"dataform2\") . \"\\\";\");\n\n\t\t$navigation = '';\n\t\treturn array(\n\t\t\t'pagecontent' => $content,\n\t\t\t'pagenavigation' => $navigation\n\t\t);\n\t}\n\n\t/**\n\t * generate form input field\n\t *\n\t * @param string $fieldname\n\t * @param boolean $required\n\t * @param string $style\n\t *        \toptional css\n\t * @param string $type\n\t *        \toptional type of input-box (default: text)\n\t *        \t\n\t * @return string\n\t */\n\tprivate function _getSectionItemString($fieldname = null, $required = false, $style = \"\", $type = 'text')\n\t{\n\t\t$fieldlabel = $this->_lng['install'][$fieldname];\n\t\t$fieldvalue = htmlspecialchars($this->_data[$fieldname]);\n\t\tif ($required) {\n\t\t\t$required = ' required=\"required\"';\n\t\t}\n\t\t$sectionitem = \"\";\n\t\teval(\"\\$sectionitem .= \\\"\" . $this->_getTemplate(\"dataitem\") . \"\\\";\");\n\t\treturn $sectionitem;\n\t}\n\n\t/**\n\t * generate form radio field for webserver-selection\n\t *\n\t * @param string $fieldname\n\t * @param boolean $checked\n\t * @param string $style\n\t *\n\t * @return string\n\t */\n\tprivate function _getSectionItemCheckbox($fieldname = null, $checked = false, $style = \"\")\n\t{\n\t\t$fieldlabel = $this->_lng['install'][$fieldname];\n\t\tif ($checked) {\n\t\t\t$checked = 'checked=\"checked\"';\n\t\t}\n\t\t$sectionitem = \"\";\n\t\teval(\"\\$sectionitem .= \\\"\" . $this->_getTemplate(\"dataitemchk\") . \"\\\";\");\n\t\treturn $sectionitem;\n\t}\n\n\t/**\n\t * generate form checkbox field\n\t *\n\t * @param string $fieldname\n\t * @param boolean $checked\n\t * @param string $style\n\t *\n\t * @return string\n\t */\n\tprivate function _getSectionItemYesNo($fieldname = null, $checked = false, $style = \"\")\n\t{\n\t\t$fieldlabel = $this->_lng['install'][$fieldname];\n\t\tif ($checked) {\n\t\t\t$checked = 'checked=\"checked\"';\n\t\t}\n\t\t$sectionitem = \"\";\n\t\teval(\"\\$sectionitem .= \\\"\" . $this->_getTemplate(\"dataitemyesno\") . \"\\\";\");\n\t\treturn $sectionitem;\n\t}\n\n\t/**\n\t * check for requirements froxlor needs\n\t */\n\tprivate function _requirementCheck()\n\t{\n\n\t\t// indicator whether we need to abort or not\n\t\t$_die = false;\n\n\t\t$content = \"<table class=\\\"noborder\\\">\";\n\n\t\t// check for correct php version\n\t\t$content .= $this->_status_message('begin', $this->_lng['requirements']['phpversion']);\n\n\t\tif (version_compare(\"7.0.0\", PHP_VERSION, \">=\")) {\n\t\t\t$content .= $this->_status_message('red', $this->_lng['requirements']['notfound'] . ' (' . PHP_VERSION . ')');\n\t\t\t$_die = true;\n\t\t} else {\n\t\t\tif (version_compare(\"7.1.0\", PHP_VERSION, \">=\")) {\n\t\t\t\t$content .= $this->_status_message('orange', $this->_lng['requirements']['newerphpprefered'] . ' (' . PHP_VERSION . ')');\n\t\t\t} else {\n\t\t\t\t$content .= $this->_status_message('green', PHP_VERSION);\n\t\t\t}\n\t\t}\n\n\t\t// check for php_pdo and pdo_mysql\n\t\t$content .= $this->_status_message('begin', $this->_lng['requirements']['phppdo']);\n\n\t\tif (! extension_loaded('pdo') || in_array(\"mysql\", PDO::getAvailableDrivers()) == false) {\n\t\t\t$content .= $this->_status_message('red', $this->_lng['requirements']['notinstalled']);\n\t\t\t$_die = true;\n\t\t} else {\n\t\t\t$content .= $this->_status_message('green', $this->_lng['requirements']['installed']);\n\t\t}\n\n\t\t// check for session-extension\n\t\t$this->_requirementCheckFor($content, $_die, 'session', false, 'phpsession');\n\n\t\t// check for ctype-extension\n\t\t$this->_requirementCheckFor($content, $_die, 'ctype', false, 'phpctype');\n\n\t\t// check for SimpleXML-extension\n\t\t$this->_requirementCheckFor($content, $_die, 'simplexml', false, 'phpsimplexml');\n\n\t\t// check for xml-extension\n\t\t$this->_requirementCheckFor($content, $_die, 'xml', false, 'phpxml');\n\n\t\t// check for filter-extension\n\t\t$this->_requirementCheckFor($content, $_die, 'filter', false, 'phpfilter');\n\n\t\t// check for posix-extension\n\t\t$this->_requirementCheckFor($content, $_die, 'posix', false, 'phpposix');\n\n\t\t// check for mbstring-extension\n\t\t$this->_requirementCheckFor($content, $_die, 'mbstring', false, 'phpmbstring');\n\n\t\t// check for curl extension\n\t\t$this->_requirementCheckFor($content, $_die, 'curl', false, 'phpcurl');\n\n\t\t// check for json extension\n\t\t$this->_requirementCheckFor($content, $_die, 'json', false, 'phpjson');\n\n\t\t// check for bcmath extension\n\t\t$this->_requirementCheckFor($content, $_die, 'bcmath', true, 'phpbcmath', 'bcmathdescription');\n\n\t\t// check for zip extension\n\t\t$this->_requirementCheckFor($content, $_die, 'zip', true, 'phpzip', 'zipdescription');\n\n\t\t// check for open_basedir\n\t\t$content .= $this->_status_message('begin', $this->_lng['requirements']['openbasedir']);\n\t\t$php_ob = @ini_get(\"open_basedir\");\n\t\tif (! empty($php_ob) && $php_ob != '') {\n\t\t\t$content .= $this->_status_message('orange', $this->_lng['requirements']['activated'] . \"<br />\" . $this->_lng['requirements']['openbasedirenabled']);\n\t\t} else {\n\t\t\t$content .= $this->_status_message('green', 'off');\n\t\t}\n\n\t\t// check for mysqldump binary in order to backup existing database\n\t\t$content .= $this->_status_message('begin', $this->_lng['requirements']['mysqldump']);\n\n\t\tif (file_exists(\"/usr/bin/mysqldump\") || file_exists(\"/usr/local/bin/mysqldump\")) {\n\t\t\t$content .= $this->_status_message('green', $this->_lng['requirements']['installed']);\n\t\t} else {\n\t\t\t$content .= $this->_status_message('orange', $this->_lng['requirements']['notinstalled'] . \"<br />\" . $this->_lng['requirements']['mysqldumpmissing']);\n\t\t}\n\n\t\t$content .= \"</table>\";\n\n\t\t// check if we have unrecoverable errors\n\t\t$navigation = '';\n\t\tif ($_die) {\n\t\t\t$msgcolor = 'red';\n\t\t\t$message = $this->_lng['requirements']['diedbecauseofrequirements'];\n\t\t\t$link = htmlspecialchars($_SERVER['PHP_SELF']);\n\t\t\t$linktext = $this->_lng['click_here_to_refresh'];\n\t\t} else {\n\t\t\t$msgcolor = 'green';\n\t\t\t$message = $this->_lng['requirements']['froxlor_succ_checks'];\n\t\t\t$link = htmlspecialchars($_SERVER['PHP_SELF']) . '?check=1';\n\t\t\t$linktext = $this->_lng['click_here_to_continue'];\n\t\t}\n\t\teval(\"\\$navigation .= \\\"\" . $this->_getTemplate(\"pagebottom\") . \"\\\";\");\n\n\t\treturn array(\n\t\t\t'pagecontent' => $content,\n\t\t\t'pagenavigation' => $navigation\n\t\t);\n\t}\n\n\tprivate function _requirementCheckFor(&$content, &$_die, $ext = '', $optional = false, $lng_txt = \"\", $lng_desc = \"\")\n\t{\n\t\t$content .= $this->_status_message('begin', $this->_lng['requirements'][$lng_txt]);\n\n\t\tif (! extension_loaded($ext)) {\n\t\t\tif (! $optional) {\n\t\t\t\t$content .= $this->_status_message('red', $this->_lng['requirements']['notinstalled']);\n\t\t\t\t$_die = true;\n\t\t\t} else {\n\t\t\t\t$content .= $this->_status_message('orange', $this->_lng['requirements']['notinstalled'] . \"<br />\" . $this->_lng['requirements'][$lng_desc]);\n\t\t\t}\n\t\t} else {\n\t\t\t$content .= $this->_status_message('green', $this->_lng['requirements']['installed']);\n\t\t}\n\t}\n\n\t/**\n\t * send no-caching headers and set the default timezone\n\t */\n\tprivate function _sendHeaders()\n\t{\n\t\tif (@php_sapi_name() !== 'cli') {\n\t\t\t// no caching\n\t\t\theader(\"Cache-Control: no-store, no-cache, must-revalidate\");\n\t\t\theader(\"Pragma: no-cache\");\n\t\t\theader('Last-Modified: ' . gmdate('D, d M Y H:i:s \\G\\M\\T', time()));\n\t\t\theader('Expires: ' . gmdate('D, d M Y H:i:s \\G\\M\\T', time()));\n\t\t}\n\t\t// ensure that default timezone is set\n\t\tif (function_exists(\"date_default_timezone_set\") && function_exists(\"date_default_timezone_get\")) {\n\t\t\t@date_default_timezone_set(@date_default_timezone_get());\n\t\t}\n\t}\n\n\t/**\n\t * check for the userdata - if it exists then froxlor is\n\t * already installed and we show a nice note\n\t */\n\tprivate function _checkUserDataFile()\n\t{\n\t\t$userdata = $this->_basepath . '/lib/userdata.inc.php';\n\t\tif (file_exists($userdata)) {\n\t\t\t// includes the usersettings (MySQL-Username/Passwort)\n\t\t\t// to test if Froxlor is already installed\n\t\t\trequire_once $this->_basepath . '/lib/userdata.inc.php';\n\n\t\t\tif (isset($sql) && is_array($sql)) {\n\t\t\t\t// use sparkle theme for the notice\n\t\t\t\t$installed_hint = file_get_contents($this->_basepath . '/templates/Sparkle/misc/alreadyinstalledhint.tpl');\n\t\t\t\t$installed_hint = str_replace(\"<CURRENT_YEAR>\", date('Y', time()), $installed_hint);\n\t\t\t\tdie($installed_hint);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * include the chose language or else default (english)\n\t */\n\tprivate function _includeLanguageFile()\n\t{\n\t\t// set default\n\t\t$standardlanguage = 'english';\n\n\t\t// check either _GET or _POST\n\t\tif (isset($_GET['language']) && isset($this->_languages[$_GET['language']])) {\n\t\t\t$this->_activelng = $_GET['language'];\n\t\t} elseif (isset($_POST['language']) && isset($this->_languages[$_POST['language']])) {\n\t\t\t$this->_activelng = $_POST['language'];\n\t\t} else {\n\t\t\t// try to guess the right language\n\t\t\t$lang = substr($_SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 2);\n\t\t\tswitch ($lang) {\n\t\t\t\tcase \"de\":\n\t\t\t\t\t$this->_activelng = 'german';\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"fr\":\n\t\t\t\t\t$this->_activelng = 'french';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t$this->_activelng = $standardlanguage;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// require english base language as fallback\n\t\t$lngfile = $this->_basepath . '/install/lng/' . $standardlanguage . '.lng.php';\n\t\tif (file_exists($lngfile)) {\n\t\t\t// includes file /lng/$language.lng.php if it exists\n\t\t\trequire_once $lngfile;\n\t\t\t$this->_lng = $lng;\n\t\t}\n\n\t\t// require chosen language if not english\n\t\tif ($this->_activelng != $standardlanguage) {\n\t\t\t$lngfile = $this->_basepath . '/install/lng/' . $this->_activelng . '.lng.php';\n\t\t\tif (file_exists($lngfile)) {\n\t\t\t\t// includes file /lng/$language.lng.php if it exists\n\t\t\t\trequire_once $lngfile;\n\t\t\t\t$this->_lng = $lng;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get template from filesystem\n\t *\n\t * @param string $template\n\t *        \tname of the template including subdirectory\n\t *        \t\n\t * @return string\n\t */\n\tprivate function _getTemplate($template = null)\n\t{\n\t\t// build filename\n\t\t$filename = $this->_basepath . '/install/templates/' . $template . '.tpl';\n\t\t// check existence\n\t\tif (file_exists($filename) && is_readable($filename)) {\n\t\t\t$templatefile = addcslashes(file_get_contents($filename), '\"\\\\');\n\t\t\t// loop through template more than once in case we have an \"if\"-statement in another one\n\t\t\twhile (preg_match('/<if[ \\t]*(.*)>(.*)(<\\/if>|<else>(.*)<\\/if>)/Uis', $templatefile)) {\n\t\t\t\t$templatefile = preg_replace('/<if[ \\t]*(.*)>(.*)(<\\/if>|<else>(.*)<\\/if>)/Uis', '\".( ($1) ? (\"$2\") : (\"$4\") ).\"', $templatefile);\n\t\t\t}\n\t\t} else {\n\t\t\t$templatefile = 'TEMPLATE NOT FOUND: ' . $filename;\n\t\t}\n\n\t\treturn $templatefile;\n\t}\n\n\t/**\n\t * output status\n\t *\n\t * @param string $case\n\t * @param string $text\n\t *\n\t * @return string\n\t */\n\tprivate function _status_message($case, $text)\n\t{\n\t\tif ($case == 'begin') {\n\t\t\treturn '<tr><td class=\"install-step\">' . $text;\n\t\t} else {\n\t\t\treturn '</td><td><span class=\"' . $case . '\">' . $text . '</span></td></tr>';\n\t\t}\n\t}\n\n\t/**\n\t * get/guess servername\n\t */\n\tprivate function _guessServerName()\n\t{\n\t\t// from form?\n\t\tif (! empty($_POST['servername'])) {\n\t\t\t$this->_data['servername'] = $_POST['servername'];\n\t\t\treturn;\n\t\t\t// from $_SERVER\n\t\t} else if (! empty($_SERVER['SERVER_NAME'])) {\n\t\t\t// no ips\n\t\t\tif ($this->_validate_ip($_SERVER['SERVER_NAME']) == false) {\n\t\t\t\t$this->_data['servername'] = $_SERVER['SERVER_NAME'];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// empty\n\t\t$this->_data['servername'] = '';\n\t}\n\n\t/**\n\t * get/guess serverip\n\t */\n\tprivate function _guessServerIP()\n\t{\n\t\t// from form\n\t\tif (! empty($_POST['serverip'])) {\n\t\t\t$this->_data['serverip'] = $_POST['serverip'];\n\t\t\treturn;\n\t\t\t// from $_SERVER\n\t\t} elseif (! empty($_SERVER['SERVER_ADDR'])) {\n\t\t\t$this->_data['serverip'] = $_SERVER['SERVER_ADDR'];\n\t\t\treturn;\n\t\t}\n\t\t// empty\n\t\t$this->_data['serverip'] = '';\n\t}\n\n\t/**\n\t * get/guess webserver-software\n\t */\n\tprivate function _guessWebserver()\n\t{\n\t\t// post\n\t\tif (! empty($_POST['webserver'])) {\n\t\t\t$this->_data['webserver'] = $_POST['webserver'];\n\t\t} else {\n\t\t\tif (strtoupper(@php_sapi_name()) == \"APACHE2HANDLER\" || stristr($_SERVER['SERVER_SOFTWARE'], \"apache/2\")) {\n\t\t\t\t$this->_data['webserver'] = 'apache24';\n\t\t\t} elseif (substr(strtoupper(@php_sapi_name()), 0, 8) == \"LIGHTTPD\" || stristr($_SERVER['SERVER_SOFTWARE'], \"lighttpd\")) {\n\t\t\t\t$this->_data['webserver'] = 'lighttpd';\n\t\t\t} elseif (substr(strtoupper(@php_sapi_name()), 0, 8) == \"NGINX\" || stristr($_SERVER['SERVER_SOFTWARE'], \"nginx\")) {\n\t\t\t\t$this->_data['webserver'] = 'nginx';\n\t\t\t} else {\n\t\t\t\t// we don't need to bail out, since unknown does not affect any critical installation routines\n\t\t\t\t$this->_data['webserver'] = 'unknown';\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * check if POST field is set and get value for the\n\t * internal data array, if not set use either '' or $default if != null\n\t *\n\t * @param string $fieldname\n\t * @param string $default\n\t *\n\t */\n\tprivate function _getPostField($fieldname = null, $default = null)\n\t{\n\t\t// initialize\n\t\t$this->_data[$fieldname] = '';\n\t\t// set default\n\t\tif ($default !== null) {\n\t\t\t$this->_data[$fieldname] = $default;\n\t\t}\n\t\t// check field\n\t\tif (! empty($_POST[$fieldname])) {\n\t\t\t$this->_data[$fieldname] = $_POST[$fieldname];\n\t\t}\n\t}\n\n\t/**\n\t * check whether the given parameter is an ip-address or not\n\t *\n\t * @param string $ip\n\t *\n\t * @return boolean|string\n\t */\n\tprivate function _validate_ip($ip = null)\n\t{\n\t\tif (filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_IPV6) === false && filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4) === false && filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_NO_RES_RANGE) === false) {\n\t\t\treturn false;\n\t\t}\n\t\treturn $ip;\n\t}\n\n\t/**\n\t * remove marks from sql\n\t *\n\t * @param string $sql\n\t *\n\t * @return string\n\t */\n\tprivate function _remove_remarks($sql)\n\t{\n\t\t$lines = explode(\"\\n\", $sql);\n\t\t// try to keep mem. use down\n\t\t$sql = \"\";\n\t\t$linecount = count($lines);\n\t\t$output = \"\";\n\t\tfor ($i = 0; $i < $linecount; $i ++) {\n\t\t\tif ($i != ($linecount - 1) || strlen($lines[$i]) > 0) {\n\t\t\t\tif (substr($lines[$i], 0, 1) != \"#\") {\n\t\t\t\t\t$output .= $lines[$i] . \"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\t$output .= \"\\n\";\n\t\t\t\t}\n\t\t\t\t// Trading a bit of speed for lower mem. use here.\n\t\t\t\t$lines[$i] = \"\";\n\t\t\t}\n\t\t}\n\t\treturn $output;\n\t}\n\n\t/**\n\t * split_sql_file will split an uploaded sql file into single sql statements.\n\t * Note: expects trim() to have already been run on $sql\n\t *\n\t * The whole function has been taken from the phpbb installer,\n\t * copyright by the phpbb team, phpbb in summer 2004.\n\t */\n\tprivate function _split_sql_file($sql, $delimiter)\n\t{\n\n\t\t// Split up our string into \"possible\" SQL statements.\n\t\t$tokens = explode($delimiter, $sql);\n\n\t\t// try to save mem.\n\t\t$sql = \"\";\n\t\t$output = array();\n\n\t\t// we don't actually care about the matches preg gives us.\n\t\t$matches = array();\n\n\t\t// this is faster than calling count($tokens) every time through the loop.\n\t\t$token_count = count($tokens);\n\t\tfor ($i = 0; $i < $token_count; $i ++) {\n\t\t\t// Don't want to add an empty string as the last thing in the array.\n\t\t\tif (($i != ($token_count - 1)) || (strlen($tokens[$i] > 0))) {\n\t\t\t\t// This is the total number of single quotes in the token.\n\t\t\t\t$total_quotes = preg_match_all(\"/'/\", $tokens[$i], $matches);\n\n\t\t\t\t// Counts single quotes that are preceded by an odd number of backslashes,\n\t\t\t\t// which means they're escaped quotes.\n\t\t\t\t$escaped_quotes = preg_match_all(\"/(?<!\\\\\\\\)(\\\\\\\\\\\\\\\\)*\\\\\\\\'/\", $tokens[$i], $matches);\n\t\t\t\t$unescaped_quotes = $total_quotes - $escaped_quotes;\n\n\t\t\t\t// If the number of unescaped quotes is even, then the delimiter\n\t\t\t\t// did NOT occur inside a string literal.\n\t\t\t\tif (($unescaped_quotes % 2) == 0) {\n\t\t\t\t\t// It's a complete sql statement.\n\t\t\t\t\t$output[] = $tokens[$i];\n\t\t\t\t\t// save memory.\n\t\t\t\t\t$tokens[$i] = \"\";\n\t\t\t\t} else {\n\t\t\t\t\t// incomplete sql statement. keep adding tokens until we have a complete one.\n\t\t\t\t\t// $temp will hold what we have so far.\n\t\t\t\t\t$temp = $tokens[$i] . $delimiter;\n\t\t\t\t\t// save memory..\n\t\t\t\t\t$tokens[$i] = \"\";\n\t\t\t\t\t// Do we have a complete statement yet?\n\t\t\t\t\t$complete_stmt = false;\n\t\t\t\t\tfor ($j = $i + 1; (! $complete_stmt && ($j < $token_count)); $j ++) {\n\t\t\t\t\t\t// This is the total number of single quotes in the token.\n\t\t\t\t\t\t$total_quotes = preg_match_all(\"/'/\", $tokens[$j], $matches);\n\t\t\t\t\t\t// Counts single quotes that are preceded by an odd number of backslashes,\n\t\t\t\t\t\t// which means they're escaped quotes.\n\t\t\t\t\t\t$escaped_quotes = preg_match_all(\"/(?<!\\\\\\\\)(\\\\\\\\\\\\\\\\)*\\\\\\\\'/\", $tokens[$j], $matches);\n\t\t\t\t\t\t$unescaped_quotes = $total_quotes - $escaped_quotes;\n\n\t\t\t\t\t\tif (($unescaped_quotes % 2) == 1) {\n\t\t\t\t\t\t\t// odd number of unescaped quotes. In combination with the previous incomplete\n\t\t\t\t\t\t\t// statement(s), we now have a complete statement. (2 odds always make an even)\n\t\t\t\t\t\t\t$output[] = $temp . $tokens[$j];\n\t\t\t\t\t\t\t// save memory.\n\t\t\t\t\t\t\t$tokens[$j] = \"\";\n\t\t\t\t\t\t\t$temp = \"\";\n\t\t\t\t\t\t\t// exit the loop.\n\t\t\t\t\t\t\t$complete_stmt = true;\n\t\t\t\t\t\t\t// make sure the outer loop continues at the right point.\n\t\t\t\t\t\t\t$i = $j;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// even number of unescaped quotes. We still don't have a complete statement.\n\t\t\t\t\t\t\t// (1 odd and 1 even always make an odd)\n\t\t\t\t\t\t\t$temp .= $tokens[$j] . $delimiter;\n\t\t\t\t\t\t\t// save memory.\n\t\t\t\t\t\t\t$tokens[$j] = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t} // for..\n\t\t\t\t} // else\n\t\t\t}\n\t\t}\n\t\treturn $output;\n\t}\n}\n", "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2003-2009 the SysCP Team (see authors).\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * For the full copyright and license information, please view the COPYING\n * file that was distributed with this source code. You can also view the\n * COPYING file online at http://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  (c) the authors\n * @author     Florian Lippert <flo@syscp.org> (2003-2009)\n * @author     Froxlor team <team@froxlor.org> (2010-)\n * @license    GPLv2 http://files.froxlor.org/misc/COPYING.txt\n * @package    Language\n *\n */\n$lng['requirements']['title'] = 'Checking system requirements...';\n$lng['requirements']['installed'] = 'installed';\n$lng['requirements']['not_true'] = 'no';\n$lng['requirements']['notfound'] = 'not found';\n$lng['requirements']['notinstalled'] = 'not installed';\n$lng['requirements']['activated'] = 'enabled';\n$lng['requirements']['phpversion'] = 'PHP version >= 7.0';\n$lng['requirements']['newerphpprefered'] = 'Good, but php-7.1 is prefered.';\n$lng['requirements']['phppdo'] = 'PHP PDO extension and PDO-MySQL driver...';\n$lng['requirements']['phpsession'] = 'PHP session-extension...';\n$lng['requirements']['phpctype'] = 'PHP ctype-extension...';\n$lng['requirements']['phpsimplexml'] = 'PHP SimpleXML-extension...';\n$lng['requirements']['phpxml'] = 'PHP XML-extension...';\n$lng['requirements']['phpfilter'] = 'PHP filter-extension...';\n$lng['requirements']['phpposix'] = 'PHP posix-extension...';\n$lng['requirements']['phpbcmath'] = 'PHP bcmath-extension...';\n$lng['requirements']['phpcurl'] = 'PHP curl-extension...';\n$lng['requirements']['phpmbstring'] = 'PHP mbstring-extension...';\n$lng['requirements']['phpzip'] = 'PHP zip-extension...';\n$lng['requirements']['phpjson'] = 'PHP json-extension...';\n$lng['requirements']['bcmathdescription'] = 'Traffic-calculation related functions will not work correctly!';\n$lng['requirements']['zipdescription'] = 'The auto-update feature requires the zip extension.';\n$lng['requirements']['openbasedir'] = 'open_basedir...';\n$lng['requirements']['openbasedirenabled'] = 'Froxlor will not work properly with open_basedir enabled. Please disable open_basedir for Froxlor in the coresponding php.ini';\n$lng['requirements']['mysqldump'] = 'MySQL dump tool';\n$lng['requirements']['mysqldumpmissing'] = 'Automatic backup of possible existing database is not possible. Please install mysql-client tools';\n$lng['requirements']['diedbecauseofrequirements'] = 'Cannot install Froxlor without these requirements! Try to fix them and retry.';\n$lng['requirements']['froxlor_succ_checks'] = 'All requirements are satisfied';\n\n$lng['install']['lngtitle'] = 'Froxlor install - choose language';\n$lng['install']['language'] = 'Installation language';\n$lng['install']['lngbtn_go'] = 'Change language';\n$lng['install']['title'] = 'Froxlor install - setup';\n$lng['install']['welcometext'] = 'Thank you for choosing Froxlor. Please fill out the following fields with the required information to start the installation.<br /><b>Attention:</b> If the database you chose for Froxlor already exists on your System, it will be erased with all containing data!';\n$lng['install']['database'] = 'Database connection';\n$lng['install']['mysql_host'] = 'MySQL-Hostname';\n$lng['install']['mysql_database'] = 'Database name';\n$lng['install']['mysql_unpriv_user'] = 'Username for the unprivileged MySQL-account';\n$lng['install']['mysql_unpriv_pass'] = 'Password for the unprivileged MySQL-account';\n$lng['install']['mysql_root_user'] = 'Username for the MySQL-root-account';\n$lng['install']['mysql_root_pass'] = 'Password for the MySQL-root-account';\n$lng['install']['admin_account'] = 'Administrator Account';\n$lng['install']['admin_user'] = 'Administrator Username';\n$lng['install']['admin_pass1'] = 'Administrator Password';\n$lng['install']['admin_pass2'] = 'Administrator-Password (confirm)';\n$lng['install']['activate_newsfeed'] = 'Enable the official newsfeed<br><small>(https://inside.froxlor.org/news/)</small>';\n$lng['install']['serversettings'] = 'Server settings';\n$lng['install']['servername'] = 'Server name (FQDN, no ip-address)';\n$lng['install']['serverip'] = 'Server IP';\n$lng['install']['webserver'] = 'Webserver';\n$lng['install']['apache2'] = 'Apache 2.2';\n$lng['install']['apache24'] = 'Apache 2.4';\n$lng['install']['lighttpd'] = 'LigHTTPd';\n$lng['install']['nginx'] = 'NGINX';\n$lng['install']['httpuser'] = 'HTTP username';\n$lng['install']['httpgroup'] = 'HTTP groupname';\n\n$lng['install']['testing_mysql'] = 'Checking MySQL-root access...';\n$lng['install']['testing_mysql_fail'] = 'There seems to be a problem with the database-connection. Cannot continue. Please go back and check your credentials.';\n$lng['install']['backup_old_db'] = 'Creating backup of old database...';\n$lng['install']['backup_binary_missing'] = 'Could not find mysqldump';\n$lng['install']['backup_failed'] = 'Could not backup database';\n$lng['install']['prepare_db'] = 'Preparing database...';\n$lng['install']['create_mysqluser_and_db'] = 'Creating database and username...';\n$lng['install']['testing_new_db'] = 'Testing if database and user have been created correctly...';\n$lng['install']['importing_data'] = 'Importing data...';\n$lng['install']['changing_data'] = 'Adjusting settings...';\n$lng['install']['creating_entries'] = 'Inserting new values...';\n$lng['install']['adding_admin_user'] = 'Creating admin-account...';\n$lng['install']['creating_configfile'] = 'Creating configfile...';\n$lng['install']['creating_configfile_temp'] = 'File was saved in %s, please move to ' . dirname(dirname(__DIR__)) . '/lib/userdata.inc.php';\n$lng['install']['creating_configfile_failed'] = 'Could not create ' . dirname(dirname(__DIR__)) . '/lib/userdata.inc.php, please create it manually with the following content:';\n$lng['install']['froxlor_succ_installed'] = 'Froxlor was installed successfully.';\n\n$lng['click_here_to_refresh'] = 'Click here to check again';\n$lng['click_here_to_goback'] = 'Click here to go back';\n$lng['click_here_to_continue'] = 'Click here to continue';\n$lng['click_here_to_login'] = 'Click here to login.';\n", "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2003-2009 the SysCP Team (see authors).\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * For the full copyright and license information, please view the COPYING\n * file that was distributed with this source code. You can also view the\n * COPYING file online at http://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  (c) the authors\n * @author     Florian Lippert <flo@syscp.org> (2003-2009)\n * @author     Froxlor team <team@froxlor.org> (2010-)\n * @license    GPLv2 http://files.froxlor.org/misc/COPYING.txt\n * @package    Language\n *\n */\n$lng['requirements']['title'] = 'V\u00e9rification des pr\u00e9requis syst\u00e8me...';\n$lng['requirements']['installed'] = 'install\u00e9';\n$lng['requirements']['not_true'] = 'non';\n$lng['requirements']['notfound'] = 'introuvable';\n$lng['requirements']['notinstalled'] = 'non install\u00e9';\n$lng['requirements']['activated'] = 'activ\u00e9';\n$lng['requirements']['phpversion'] = 'PHP version >= 7.0';\n$lng['requirements']['phppdo'] = 'extension PHP PDO et pilote PDO-MySQL ...';\n$lng['requirements']['phpxml'] = 'extension PHP XML...';\n$lng['requirements']['phpfilter'] = 'extension PHP filter ...';\n$lng['requirements']['phpposix'] = 'extension PHP posix ...';\n$lng['requirements']['phpbcmath'] = 'extension PHP bcmath ...';\n$lng['requirements']['phpcurl'] = 'extension PHP curl...';\n$lng['requirements']['phpmbstring'] = 'extension PHP mbstring...';\n$lng['requirements']['bcmathdescription'] = 'Les fonctions de calcul de traffic ne fonctionneront pas correctement!';\n$lng['requirements']['openbasedir'] = 'open_basedir...';\n$lng['requirements']['openbasedirenabled'] = 'Froxlor ne fonctionnera pas correctement avec open_basedir activ\u00e9. Merci de d\u00e9sactiver open_basedir pour Froxlor dans le php.ini correspondant';\n$lng['requirements']['diedbecauseofrequirements'] = 'Impossible d\\'installer Froxlor sans ces pr\u00e9requis! Essayez de les corriger et essayez \u00e0 nouveau.';\n$lng['requirements']['froxlor_succ_checks'] = 'Tous les pr\u00e9requis sont v\u00e9rifi\u00e9s';\n\n$lng['install']['lngtitle'] = 'Installation de Froxlor - choisisez la langue';\n$lng['install']['language'] = 'Langue d\\'installation';\n$lng['install']['lngbtn_go'] = 'Changer la langue';\n$lng['install']['title'] = 'Installation de Froxlor - param\u00e8trage';\n$lng['install']['welcometext'] = 'Merci d\\'avoir choisi Froxlor. Merci de remplir les champs suivant avec les informations n\u00e9cessaires pour d\u00e9marrer l\\'installation.<br /><b>Attention:</b> Si la base de donn\u00e9es que vous choisissez existe d\u00e9j\u00e0 sur votre syst\u00e8me, elle sera \u00e9cras\u00e9e ainsi que les donn\u00e9es contenues!';\n$lng['install']['database'] = 'Connexion \u00e0 la base de donn\u00e9es';\n$lng['install']['mysql_host'] = 'Nom d\\'h\u00f4te MySQL';\n$lng['install']['mysql_database'] = 'Nom de la base de donn\u00e9es';\n$lng['install']['mysql_unpriv_user'] = 'Nom d\\'utilisateur pour le compte non priviligi\u00e9 MySQL';\n$lng['install']['mysql_unpriv_pass'] = 'Mot de passe pour le compte non priviligi\u00e9 MySQL';\n$lng['install']['mysql_root_user'] = 'Nom d\\'utilisateur pour le compte MySQL root';\n$lng['install']['mysql_root_pass'] = 'Mot de passe pour le compte MySQL root';\n$lng['install']['admin_account'] = 'Compte administrateur';\n$lng['install']['admin_user'] = 'Nom d\\'utilisateur administrateur';\n$lng['install']['admin_pass1'] = 'Mot de passe administrateur';\n$lng['install']['admin_pass2'] = 'Mot de passe administrateur (confirmez)';\n$lng['install']['serversettings'] = 'R\u00e9glages serveur';\n$lng['install']['servername'] = 'Nom du serveur (FQDN, pas d\\'adresse IP)';\n$lng['install']['serverip'] = 'Adresse IP du serveur';\n$lng['install']['webserver'] = 'Serveur Web';\n$lng['install']['apache2'] = 'Apache 2';\n$lng['install']['apache24'] = 'Apache 2.4';\n$lng['install']['lighttpd'] = 'LigHTTPd';\n$lng['install']['nginx'] = 'NGINX';\n$lng['install']['httpuser'] = 'Nom d\\'utilisateur HTTP';\n$lng['install']['httpgroup'] = 'Nom de groupe HTTP';\n\n$lng['install']['testing_mysql'] = 'V\u00e9rification de l\\'acc\u00e8s root MySQL...';\n$lng['install']['testing_mysql_fail'] = 'Il semble y avoir un probl\u00e8me avec la connexion \u00e0 la base de donn\u00e9es. Impossible de continuer. Merci de revenir en arri\u00e8re et de v\u00e9rifier les informations d\\'identification.';\n$lng['install']['backup_old_db'] = 'Cr\u00e9ation des sauvegardes de l\\'ancienne base de donn\u00e9es...';\n$lng['install']['backup_binary_missing'] = 'Impossible de trouver mysqldump';\n$lng['install']['backup_failed'] = 'Impossible de sauvegarde la base de donn\u00e9es';\n$lng['install']['prepare_db'] = 'Pr\u00e9paration de la base de donn\u00e9es...';\n$lng['install']['create_mysqluser_and_db'] = 'Cr\u00e9ation de la base de donn\u00e9es et l\\'utilisateur...';\n$lng['install']['testing_new_db'] = 'Teste si la base de donn\u00e9es et l\\'utilisateur ont \u00e9t\u00e9 cr\u00e9\u00e9s correctement...';\n$lng['install']['importing_data'] = 'Import des donn\u00e9es...';\n$lng['install']['changing_data'] = 'Ajustement des param\u00e8tres...';\n$lng['install']['creating_entries'] = 'Insertion des nouvelles valeurs...';\n$lng['install']['adding_admin_user'] = 'Cr\u00e9ation du compte administrateur...';\n$lng['install']['creating_configfile'] = 'Cr\u00e9ation du fichier de configuration...';\n$lng['install']['creating_configfile_temp'] = 'Le fichier a \u00e9t\u00e9 enregistr\u00e9 dans %s, merci de le d\u00e9placer dans ' . dirname(dirname(__DIR__)) . '/lib/userdata.inc.php';\n$lng['install']['creating_configfile_failed'] = 'Impossible de cr\u00e9er ' . dirname(dirname(__DIR__)) . '/lib/userdata.inc.php, merci de le cr\u00e9er manuellement avec le contenu suivant:';\n$lng['install']['froxlor_succ_installed'] = 'Froxlor a \u00e9t\u00e9 install\u00e9 avec succ\u00e8s.';\n\n$lng['click_here_to_refresh'] = 'Cliquez ici pour v\u00e9rifier \u00e0 nouveau';\n$lng['click_here_to_goback'] = 'Cliquez ici pour revenir';\n$lng['click_here_to_continue'] = 'Cliquez ici pour continuer';\n$lng['click_here_to_login'] = 'Cliquez ici pour vous connecter.';\n", "<?php\n\n/**\n * This file is part of the Froxlor project.\n * Copyright (c) 2003-2009 the SysCP Team (see authors).\n * Copyright (c) 2010 the Froxlor Team (see authors).\n *\n * For the full copyright and license information, please view the COPYING\n * file that was distributed with this source code. You can also view the\n * COPYING file online at http://files.froxlor.org/misc/COPYING.txt\n *\n * @copyright  (c) the authors\n * @author     Florian Lippert <flo@syscp.org> (2003-2009)\n * @author     Froxlor team <team@froxlor.org> (2010-)\n * @license    GPLv2 http://files.froxlor.org/misc/COPYING.txt\n * @package    Language\n *\n */\n$lng['requirements']['title'] = 'Pr\u00fcfe Systemvoraussetzungen...';\n$lng['requirements']['installed'] = 'installiert';\n$lng['requirements']['not_true'] = 'nein';\n$lng['requirements']['notfound'] = 'nicht gefunden';\n$lng['requirements']['notinstalled'] = 'nicht installiert';\n$lng['requirements']['activated'] = 'ist aktiviert.';\n$lng['requirements']['phpversion'] = 'PHP Version >= 7.0';\n$lng['requirements']['newerphpprefered'] = 'Passt, aber php-7.1 wird bevorzugt.';\n$lng['requirements']['phppdo'] = 'PHP PDO Erweiterung und PDO-MySQL Treiber...';\n$lng['requirements']['phpsession'] = 'PHP session-Erweiterung...';\n$lng['requirements']['phpctype'] = 'PHP ctype-Erweiterung...';\n$lng['requirements']['phpsimplexml'] = 'PHP SimpleXML-Erweiterung...';\n$lng['requirements']['phpxml'] = 'PHP XML-Erweiterung...';\n$lng['requirements']['phpfilter'] = 'PHP filter-Erweiterung...';\n$lng['requirements']['phpposix'] = 'PHP posix-Erweiterung...';\n$lng['requirements']['phpbcmath'] = 'PHP bcmath-Erweiterung...';\n$lng['requirements']['phpcurl'] = 'PHP curl-Erweiterung...';\n$lng['requirements']['phpmbstring'] = 'PHP mbstring-Erweiterung...';\n$lng['requirements']['phpzip'] = 'PHP zip-Erweiterung...';\n$lng['requirements']['phpjson'] = 'PHP json-Erweiterung...';\n$lng['requirements']['bcmathdescription'] = 'Traffic-Berechnungs bezogene Funktionen stehen nicht vollst\u00e4ndig zur Verf\u00fcgung!';\n$lng['requirements']['zipdescription'] = 'Die Auto-Update Funktion ben\u00f6tigt die zip Erweiterung.';\n$lng['requirements']['openbasedir'] = 'open_basedir genutzt wird...';\n$lng['requirements']['openbasedirenabled'] = 'Froxlor wird mit aktiviertem open_basedir nicht vollst\u00e4ndig funktionieren. Bitte deaktivieren Sie open_basedir f\u00fcr Froxlor in der entsprechenden php.ini';\n$lng['requirements']['mysqldump'] = 'MySQL dump Tool';\n$lng['requirements']['mysqldumpmissing'] = 'Ein automatisches Backup einer m\u00f6glicherweise schon existierenden Datenbank nicht m\u00f6glich. Bitte mysql-client installieren';\n$lng['requirements']['diedbecauseofrequirements'] = 'Kann Froxlor ohne diese Voraussetzungen nicht installieren! Beheben Sie die angezeigten Probleme und versuchen Sie es erneut.';\n$lng['requirements']['froxlor_succ_checks'] = 'Alle Vorraussetzungen sind erf\u00fcllt';\n\n$lng['install']['lngtitle'] = 'Froxlor Installation - Sprache ausw\u00e4hlen';\n$lng['install']['language'] = 'Sprache f\u00fcr die Installation';\n$lng['install']['lngbtn_go'] = 'Sprache \u00e4ndern';\n$lng['install']['title'] = 'Froxlor Installation - Einrichtung';\n$lng['install']['welcometext'] = 'Vielen Dank dass Sie sich f\u00fcr Froxlor entschieden haben. Um die Installation von Froxlor zu starten, f\u00fcllen Sie bitte alle Felder mit den geforderten Angaben aus.<br /><b>Achtung:</b> Eine eventuell existierende Datenbank, die den selben Namen hat wie den Gew\u00e4hlten, wird mit allen enthaltenen Daten gel\u00f6scht!';\n$lng['install']['database'] = 'Datenbankverbindung';\n$lng['install']['mysql_host'] = 'MySQL-Hostname';\n$lng['install']['mysql_database'] = 'Datenbank Name';\n$lng['install']['mysql_unpriv_user'] = 'Benutzername f\u00fcr den unprivilegierten MySQL-Account';\n$lng['install']['mysql_unpriv_pass'] = 'Passwort f\u00fcr den unprivilegierten MySQL-Account';\n$lng['install']['mysql_root_user'] = 'Benutzername f\u00fcr den MySQL-Root-Account';\n$lng['install']['mysql_root_pass'] = 'Passwort f\u00fcr den MySQL-Root-Account';\n$lng['install']['admin_account'] = 'Admin-Zugang';\n$lng['install']['admin_user'] = 'Administrator-Benutzername';\n$lng['install']['admin_pass1'] = 'Administrator-Passwort';\n$lng['install']['admin_pass2'] = 'Administrator-Passwort (Best\u00e4tigung)';\n$lng['install']['activate_newsfeed'] = 'Aktiviere das offizielle Newsfeed<br><small>(https://inside.froxlor.org/news/)</small>';\n$lng['install']['serversettings'] = 'Servereinstellungen';\n$lng['install']['servername'] = 'Servername (FQDN, keine IP-Adresse)';\n$lng['install']['serverip'] = 'Server-IP';\n$lng['install']['webserver'] = 'Webserver';\n$lng['install']['apache2'] = 'Apache 2';\n$lng['install']['apache24'] = 'Apache 2.4';\n$lng['install']['lighttpd'] = 'LigHTTPd';\n$lng['install']['nginx'] = 'NGINX';\n$lng['install']['httpuser'] = 'HTTP Username';\n$lng['install']['httpgroup'] = 'HTTP Gruppenname';\n\n$lng['install']['testing_mysql'] = 'Teste MySQL-Root Zugang...';\n$lng['install']['testing_mysql_fail'] = 'Bei der Verwendung der Datenbank gibt es scheinbar Probleme. Installation kann nicht fortgesetzt werden. Bitte Zugangsdaten pr\u00fcfen und erneut versuchen.';\n$lng['install']['backup_old_db'] = 'Sicherung vorheriger Datenbank...';\n$lng['install']['backup_binary_missing'] = 'Konnte mysqldump nicht finden';\n$lng['install']['backup_failed'] = 'Sicherung fehlgeschlagen';\n$lng['install']['prepare_db'] = 'Datenbank wird vorbereitet...';\n$lng['install']['create_mysqluser_and_db'] = 'Erstelle Datenbank und Benutzer...';\n$lng['install']['testing_new_db'] = 'Teste, ob Datenbank und Benutzer korrekt angelegt wurden...';\n$lng['install']['importing_data'] = 'Importiere Daten...';\n$lng['install']['changing_data'] = 'Einstellungen anpassen...';\n$lng['install']['creating_entries'] = 'Trage neue Werte ein...';\n$lng['install']['adding_admin_user'] = 'Erstelle Admin-Benutzer...';\n$lng['install']['creating_configfile'] = 'Erstelle Konfigurationsdatei...';\n$lng['install']['creating_configfile_temp'] = 'Datei wurde in %s gespeichert, bitte nach ' . dirname(dirname(__DIR__)) . '/lib/userdata.inc.php verschieben.';\n$lng['install']['creating_configfile_failed'] = 'Konnte ' . dirname(dirname(__DIR__)) . '/lib/userdata.inc.php nicht erstellen, bitte manuell mit folgendem Inhalt anlegen:';\n$lng['install']['froxlor_succ_installed'] = 'Froxlor wurde erfolgreich installiert.';\n\n$lng['click_here_to_refresh'] = 'Hier klicken, um erneut zu pr\u00fcfen';\n$lng['click_here_to_goback'] = 'Einen Schritt zur\u00fcck';\n$lng['click_here_to_continue'] = 'Installation fortf\u00fchren';\n$lng['click_here_to_login'] = 'Hier geht es weiter zum Login-Fenster.';\n"], "filenames": ["install/lib/class.FroxlorInstall.php", "install/lng/english.lng.php", "install/lng/french.lng.php", "install/lng/german.lng.php"], "buggy_code_start_loc": [341, 89, 79, 89], "buggy_code_end_loc": [350, 90, 80, 90], "fixing_code_start_loc": [341, 89, 79, 89], "fixing_code_end_loc": [355, 90, 80, 90], "type": "CWE-20", "message": "An issue was discovered in Froxlor before 0.10.14. It created files with static names in /tmp during installation if the installation directory was not writable. This allowed local attackers to cause DoS or disclose information out of the config files, because of _createUserdataConf in install/lib/class.FroxlorInstall.php.", "other": {"cve": {"id": "CVE-2020-10236", "sourceIdentifier": "cve@mitre.org", "published": "2020-03-09T16:15:12.140", "lastModified": "2020-03-09T19:55:40.710", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "An issue was discovered in Froxlor before 0.10.14. It created files with static names in /tmp during installation if the installation directory was not writable. This allowed local attackers to cause DoS or disclose information out of the config files, because of _createUserdataConf in install/lib/class.FroxlorInstall.php."}, {"lang": "es", "value": "Se detect\u00f3 un problema en Froxlor versiones anteriores a 0.10.14. Cre\u00f3 archivos con nombres est\u00e1ticos en /tmp durante la instalaci\u00f3n si el directorio de instalaci\u00f3n no era escribible. Esto permiti\u00f3 a atacantes locales causar una DoS o divulgar informaci\u00f3n fuera de los archivos de configuraci\u00f3n, debido a la funci\u00f3n _createUserdataConf en la biblioteca install/lib/class.FroxlorInstall.php."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.8, "impactScore": 4.2}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:N/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 3.6}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-20"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:froxlor:froxlor:*:*:*:*:*:*:*:*", "versionEndExcluding": "0.10.14", "matchCriteriaId": "CE490F89-9E33-449D-B856-70E57CFE5905"}]}]}], "references": [{"url": "https://bugzilla.suse.com/show_bug.cgi?id=1165718", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Third Party Advisory"]}, {"url": "https://github.com/Froxlor/Froxlor/commit/6b09720ef8a1cc008751dd0ca0140a0597fedce5", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://github.com/Froxlor/Froxlor/compare/0.10.13...0.10.14", "source": "cve@mitre.org", "tags": ["Patch"]}]}, "github_commit_url": "https://github.com/Froxlor/Froxlor/commit/6b09720ef8a1cc008751dd0ca0140a0597fedce5"}}