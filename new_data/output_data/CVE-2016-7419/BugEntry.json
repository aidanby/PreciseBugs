{"buggy_code": ["/* global Gallery, escapeHTML */\n\n(function ($, Gallery) {\n\t\"use strict\";\n\n\t/**\n\t * @typedef {Object} Gallery.Share.Types.ShareInfo\n\t * @property {Number} share_type\n\t * @property {Number} permissions\n\t * @property {Number} file_source optional\n\t * @property {Number} item_source\n\t * @property {String} token\n\t * @property {String} share_with\n\t * @property {String} share_with_displayname\n\t * @property {String} mail_send\n\t * @property {String} displayname_file_owner\n\t * @property {String} displayname_owner\n\t * @property {String} uid_owner\n\t * @property {String} uid_file_owner\n\t * @property {String} expiration optional\n\t * @property {Number} stime\n\t */\n\n\t// copied and stripped out from the old core\n\tvar Share = {\n\t\tSHARE_TYPE_USER: 0,\n\t\tSHARE_TYPE_GROUP: 1,\n\t\tSHARE_TYPE_LINK: 3,\n\t\tSHARE_TYPE_EMAIL: 4,\n\t\tSHARE_TYPE_REMOTE: 6,\n\n\t\t/**\n\t\t * @deprecated use OC.Share.currentShares instead\n\t\t */\n\t\titemShares: [],\n\n\t\t/**\n\t\t * Shares for the currently selected file.\n\t\t * (for which the dropdown is open)\n\t\t *\n\t\t * Key is item type and value is an array or\n\t\t * shares of the given item type.\n\t\t */\n\t\tcurrentShares: {},\n\n\t\t/**\n\t\t * Whether the share dropdown is opened.\n\t\t */\n\t\tdroppedDown: false,\n\n\t\t/**\n\t\t *\n\t\t * @param path {String} path to the file/folder which should be shared\n\t\t * @param shareType {Number} 0 = user; 1 = group; 3 = public link; 6 = federated cloud\n\t\t *     share\n\t\t * @param shareWith {String} user / group id with which the file should be shared\n\t\t * @param publicUpload {Boolean} allow public upload to a public shared folder\n\t\t * @param password {String} password to protect public link Share with\n\t\t * @param permissions {Number} 1 = read; 2 = update; 4 = create; 8 = delete; 16 = share; 31\n\t\t *     = all (default: 31, for public shares: 1)\n\t\t * @param callback {Function} method to call back after a successful share creation\n\t\t * @param errorCallback {Function} method to call back after a failed share creation\n\t\t *\n\t\t * @returns {*}\n\t\t */\n\t\tshare: function (path, shareType, shareWith, publicUpload, password, permissions, callback, errorCallback) {\n\t\t\treturn $.ajax({\n\t\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares' + '?format=json',\n\t\t\t\ttype: 'POST',\n\t\t\t\tdata: {\n\t\t\t\t\tpath: path,\n\t\t\t\t\tshareType: shareType,\n\t\t\t\t\tshareWith: shareWith,\n\t\t\t\t\tpublicUpload: publicUpload,\n\t\t\t\t\tpassword: password,\n\t\t\t\t\tpermissions: permissions\n\t\t\t\t},\n\t\t\t\tdataType: 'json'\n\t\t\t}).done(function (result) {\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback(result.ocs.data);\n\t\t\t\t}\n\t\t\t}).fail(function (xhr) {\n\t\t\t\tvar result = xhr.responseJSON;\n\t\t\t\tif (_.isFunction(errorCallback)) {\n\t\t\t\t\terrorCallback(result);\n\t\t\t\t} else {\n\t\t\t\t\tvar msg = t('core', 'Error');\n\t\t\t\t\tif (result.ocs && result.ocs.meta.message) {\n\t\t\t\t\t\tmsg = result.ocs.meta.message;\n\t\t\t\t\t}\n\t\t\t\t\tOC.dialogs.alert(msg, t('core', 'Error while sharing'));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t *\n\t\t * @param {Number} shareId\n\t\t * @param {Function} callback\n\t\t */\n\t\tunshare: function (shareId, callback) {\n\t\t\t$.ajax({\n\t\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares/' + shareId +\n\t\t\t\t'?format=json',\n\t\t\t\ttype: 'DELETE'\n\t\t\t}).done(function () {\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}).fail(function () {\n\t\t\t\tOC.dialogs.alert(t('core', 'Error while unsharing'), t('core', 'Error'));\n\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t *\n\t\t * @param {Number} shareId\n\t\t * @param {Number} permissions\n\t\t */\n\t\tsetPermissions: function (shareId, permissions) {\n\t\t\t$.ajax({\n\t\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares/' + shareId +\n\t\t\t\t'?format=json',\n\t\t\t\ttype: 'PUT',\n\t\t\t\tdata: {\n\t\t\t\t\tpermissions: permissions\n\t\t\t\t}\n\t\t\t}).fail(function () {\n\t\t\t\tOC.dialogs.alert(t('core', 'Error while changing permissions'),\n\t\t\t\t\tt('core', 'Error'));\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t *\n\t\t * @param {String} itemType\n\t\t * @param {String} path\n\t\t * @param {String} appendTo\n\t\t * @param {String} link\n\t\t * @param {Number} possiblePermissions\n\t\t * @param {String} filename\n\t\t */\n\t\tshowDropDown: function (itemType, path, appendTo, link, possiblePermissions, filename) {\n\t\t\t// This is a sync AJAX request on the main thread...\n\t\t\tvar data = this._loadShares(path);\n\t\t\tvar dropDownEl;\n\t\t\tvar self = this;\n\t\t\tvar html = '<div id=\"dropdown\" class=\"drop shareDropDown\" data-item-type=\"' + itemType +\n\t\t\t\t'\" data-item-source=\"' + path + '\">';\n\t\t\tif (data !== false && data[0] && !_.isUndefined(data[0].uid_file_owner) &&\n\t\t\t\tdata[0].uid_file_owner !== OC.currentUser\n\t\t\t) {\n\t\t\t\thtml += '<span class=\"reshare\">';\n\t\t\t\tif (oc_config.enable_avatars === true) {\n\t\t\t\t\thtml += '<div class=\"avatar\"></div>';\n\t\t\t\t}\n\n\t\t\t\tif (data[0].share_type == this.SHARE_TYPE_GROUP) {\n\t\t\t\t\thtml += t('core', 'Shared with you and the group {group} by {owner}', {\n\t\t\t\t\t\tgroup: data[0].share_with,\n\t\t\t\t\t\towner: data[0].displayname_owner\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\thtml += t('core', 'Shared with you by {owner}',\n\t\t\t\t\t\t{owner: data[0].displayname_owner});\n\t\t\t\t}\n\t\t\t\thtml += '</span><br />';\n\t\t\t\t// reduce possible permissions to what the original share allowed\n\t\t\t\tpossiblePermissions = possiblePermissions & data[0].permissions;\n\t\t\t}\n\n\t\t\tif (possiblePermissions & OC.PERMISSION_SHARE) {\n\t\t\t\t// Determine the Allow Public Upload status.\n\t\t\t\t// Used later on to determine if the\n\t\t\t\t// respective checkbox should be checked or\n\t\t\t\t// not.\n\t\t\t\t// FIXME public uploading is not supported in Gallery\n\t\t\t\t/*var publicUploadEnabled = $('#filestable').data('allow-public-upload');\n\t\t\t\t if (typeof publicUploadEnabled == 'undefined') {\n\t\t\t\t publicUploadEnabled = 'no';\n\t\t\t\t }\n\t\t\t\t var allowPublicUploadStatus = false;\n\n\t\t\t\t $.each(data, function (key, value) {\n\t\t\t\t if (value.share_type === self.SHARE_TYPE_LINK) {\n\t\t\t\t allowPublicUploadStatus =\n\t\t\t\t (value.permissions & OC.PERMISSION_CREATE) ? true : false;\n\t\t\t\t return true;\n\t\t\t\t }\n\t\t\t\t });*/\n\n\t\t\t\tvar sharePlaceholder = t('core', 'Share with users or groups \u2026');\n\t\t\t\tif (oc_appconfig.core.remoteShareAllowed) {\n\t\t\t\t\tsharePlaceholder = t('core', 'Share with users, groups or remote users \u2026');\n\t\t\t\t}\n\n\t\t\t\thtml += '<label for=\"shareWith\" class=\"hidden-visually\">' + t('core', 'Share') +\n\t\t\t\t\t'</label>';\n\t\t\t\thtml +=\n\t\t\t\t\t'<input id=\"shareWith\" type=\"text\" placeholder=\"' + sharePlaceholder + '\" />';\n\t\t\t\tif (oc_appconfig.core.remoteShareAllowed) {\n\t\t\t\t\tvar federatedCloudSharingDoc =\n\t\t\t\t\t\t'<a target=\"_blank\" class=\"icon-info svg shareWithRemoteInfo\" ' +\n\t\t\t\t\t\t'href=\"{docLink}\" title=\"' + t('core',\n\t\t\t\t\t\t\t'Share with people on other ownClouds using the syntax username@example.com/owncloud') +\n\t\t\t\t\t\t'\"></a>';\n\t\t\t\t\thtml += federatedCloudSharingDoc.replace('{docLink}',\n\t\t\t\t\t\toc_appconfig.core.federatedCloudShareDoc);\n\t\t\t\t}\n\t\t\t\thtml += '<span class=\"shareWithLoading icon-loading-small hidden\"></span>';\n\t\t\t\thtml += '<ul id=\"shareWithList\">';\n\t\t\t\thtml += '</ul>';\n\t\t\t\tvar linksAllowed = $('#allowShareWithLink').val() === 'yes';\n\t\t\t\tif (link && linksAllowed) {\n\t\t\t\t\thtml += '<div id=\"link\" class=\"linkShare\">';\n\t\t\t\t\thtml += '<span class=\"icon-loading-small hidden\"></span>';\n\t\t\t\t\thtml +=\n\t\t\t\t\t\t'<input type=\"checkbox\" class=\"checkbox checkbox--right\" ' +\n\t\t\t\t\t\t'name=\"linkCheckbox\" id=\"linkCheckbox\" value=\"1\" />' +\n\t\t\t\t\t\t'<label for=\"linkCheckbox\">' + t('core', 'Share link') + '</label>';\n\t\t\t\t\thtml += '<br />';\n\n\t\t\t\t\tvar defaultExpireMessage = '';\n\t\t\t\t\tif ((itemType === 'folder' || itemType === 'file') &&\n\t\t\t\t\t\toc_appconfig.core.defaultExpireDateEnforced) {\n\t\t\t\t\t\tdefaultExpireMessage =\n\t\t\t\t\t\t\tt('core',\n\t\t\t\t\t\t\t\t'The public link will expire no later than {days} days after it is created',\n\t\t\t\t\t\t\t\t{'days': oc_appconfig.core.defaultExpireDate}) + '<br/>';\n\t\t\t\t\t}\n\n\t\t\t\t\thtml += '<label for=\"linkText\" class=\"hidden-visually\">' + t('core', 'Link') +\n\t\t\t\t\t\t'</label>';\n\t\t\t\t\thtml += '<input id=\"linkText\" type=\"text\" readonly=\"readonly\" />';\n\t\t\t\t\thtml +=\n\t\t\t\t\t\t'<input type=\"checkbox\" class=\"checkbox checkbox--right\" ' +\n\t\t\t\t\t\t'name=\"showPassword\" id=\"showPassword\" value=\"1\" />' +\n\t\t\t\t\t\t'<label for=\"showPassword\" style=\"display:none;\">' +\n\t\t\t\t\t\tt('core', 'Password protect') + '</label>';\n\t\t\t\t\thtml += '<div id=\"linkPass\">';\n\t\t\t\t\thtml += '<label for=\"linkPassText\" class=\"hidden-visually\">' +\n\t\t\t\t\t\tt('core', 'Password') + '</label>';\n\t\t\t\t\thtml += '<input id=\"linkPassText\" type=\"password\" placeholder=\"' +\n\t\t\t\t\t\tt('core', 'Choose a password for the public link') + '\" />';\n\t\t\t\t\thtml += '<span class=\"icon-loading-small hidden\"></span>';\n\t\t\t\t\thtml += '</div>';\n\n\t\t\t\t\t// FIXME public uploading is not supported in Gallery\n\t\t\t\t\t/*if (itemType === 'folder' && (possiblePermissions & OC.PERMISSION_CREATE) &&\n\t\t\t\t\t publicUploadEnabled === 'yes') {\n\t\t\t\t\t html += '<div id=\"allowPublicUploadWrapper\" style=\"display:none;\">';\n\t\t\t\t\t html += '<span class=\"icon-loading-small hidden\"></span>';\n\t\t\t\t\t html +=\n\t\t\t\t\t '<input type=\"checkbox\" class=\"checkbox checkbox--right\" value=\"1\" name=\"allowPublicUpload\" id=\"sharingDialogAllowPublicUpload\"' +\n\t\t\t\t\t ((allowPublicUploadStatus) ? 'checked=\"checked\"' : '') + ' />';\n\t\t\t\t\t html += '<label for=\"sharingDialogAllowPublicUpload\">' +\n\t\t\t\t\t t('core', 'Allow editing') + '</label>';\n\t\t\t\t\t html += '</div>';\n\t\t\t\t\t }\n\t\t\t\t\t html += '</div>';\n\t\t\t\t\t var mailPublicNotificationEnabled = $(\n\t\t\t\t\t 'input:hidden[name=mailPublicNotificationEnabled]').val();\n\t\t\t\t\t if (mailPublicNotificationEnabled === 'yes') {\n\t\t\t\t\t html += '<form id=\"emailPrivateLink\">';\n\t\t\t\t\t html +=\n\t\t\t\t\t '<input id=\"email\" style=\"display:none; width:62%;\" value=\"\" placeholder=\"' +\n\t\t\t\t\t t('core', 'Email link to person') + '\" type=\"text\" />';\n\t\t\t\t\t html +=\n\t\t\t\t\t '<input id=\"emailButton\" style=\"display:none;\" type=\"submit\" value=\"' +\n\t\t\t\t\t t('core', 'Send') + '\" />';\n\t\t\t\t\t html += '</form>';\n\t\t\t\t\t }*/\n\t\t\t\t}\n\n\t\t\t\thtml += '<div id=\"expiration\">';\n\t\t\t\thtml +=\n\t\t\t\t\t'<input type=\"checkbox\" class=\"checkbox checkbox--right\" ' +\n\t\t\t\t\t'name=\"expirationCheckbox\" id=\"expirationCheckbox\" value=\"1\" />' +\n\t\t\t\t\t'<label for=\"expirationCheckbox\">' +\n\t\t\t\t\tt('core', 'Set expiration date') + '</label>';\n\t\t\t\thtml += '<label for=\"expirationDate\" class=\"hidden-visually\">' +\n\t\t\t\t\tt('core', 'Expiration') + '</label>';\n\t\t\t\thtml += '<input id=\"expirationDate\" type=\"text\" placeholder=\"' +\n\t\t\t\t\tt('core', 'Expiration date') + '\" style=\"display:none; width:90%;\" />';\n\t\t\t\thtml += '<em id=\"defaultExpireMessage\">' + defaultExpireMessage + '</em>';\n\t\t\t\thtml += '</div>';\n\t\t\t\tdropDownEl = $(html);\n\t\t\t\tdropDownEl = dropDownEl.appendTo(appendTo);\n\n\t\t\t\t// trigger remote share info tooltip\n\t\t\t\tif (oc_appconfig.core.remoteShareAllowed) {\n\t\t\t\t\t$('.shareWithRemoteInfo').tooltip({placement: 'top'});\n\t\t\t\t}\n\n\t\t\t\t//Get owner avatars\n\t\t\t\tif (oc_config.enable_avatars === true && data !== false && data[0] !== false &&\n\t\t\t\t\t!_.isUndefined(data[0]) && !_.isUndefined(data[0].uid_file_owner)) {\n\t\t\t\t\tdropDownEl.find(\".avatar\").avatar(data[0].uid_file_owner, 32);\n\t\t\t\t}\n\n\t\t\t\t// Reset item shares\n\t\t\t\tthis.itemShares = [];\n\t\t\t\tthis.currentShares = {};\n\t\t\t\tif (data) {\n\t\t\t\t\t$.each(data, function (index, share) {\n\t\t\t\t\t\tif (share.share_type === self.SHARE_TYPE_LINK) {\n\t\t\t\t\t\t\tself.showLink(share.id, share.token, share.share_with);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (share.share_with !== OC.currentUser) {\n\t\t\t\t\t\t\t\tif (share.share_type === self.SHARE_TYPE_REMOTE) {\n\t\t\t\t\t\t\t\t\tself._addShareWith(share.id,\n\t\t\t\t\t\t\t\t\t\tshare.share_type,\n\t\t\t\t\t\t\t\t\t\tshare.share_with,\n\t\t\t\t\t\t\t\t\t\tshare.share_with_displayname,\n\t\t\t\t\t\t\t\t\t\tshare.permissions,\n\t\t\t\t\t\t\t\t\t\tOC.PERMISSION_READ | OC.PERMISSION_UPDATE |\n\t\t\t\t\t\t\t\t\t\tOC.PERMISSION_CREATE,\n\t\t\t\t\t\t\t\t\t\tshare.mail_send,\n\t\t\t\t\t\t\t\t\t\tfalse);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tself._addShareWith(share.id,\n\t\t\t\t\t\t\t\t\t\tshare.share_type,\n\t\t\t\t\t\t\t\t\t\tshare.share_with,\n\t\t\t\t\t\t\t\t\t\tshare.share_with_displayname,\n\t\t\t\t\t\t\t\t\t\tshare.permissions,\n\t\t\t\t\t\t\t\t\t\tpossiblePermissions,\n\t\t\t\t\t\t\t\t\t\tshare.mail_send,\n\t\t\t\t\t\t\t\t\t\tfalse);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (share.expiration != null) {\n\t\t\t\t\t\t\tvar expireDate = moment(share.expiration, 'YYYY-MM-DD').format(\n\t\t\t\t\t\t\t\t'DD-MM-YYYY');\n\t\t\t\t\t\t\tself.showExpirationDate(expireDate, share.stime);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$('#shareWith').autocomplete({\n\t\t\t\t\tminLength: 2,\n\t\t\t\t\tdelay: 750,\n\t\t\t\t\tsource: function (search, response) {\n\t\t\t\t\t\tvar $loading = $('#dropdown .shareWithLoading');\n\t\t\t\t\t\t$loading.removeClass('hidden');\n\t\t\t\t\t\t// Can be replaced with Sharee API\n\t\t\t\t\t\t// https://github.com/owncloud/core/pull/18234\n\t\t\t\t\t\t$.get(OC.filePath('core', 'ajax', 'share.php'), {\n\t\t\t\t\t\t\tfetch: 'getShareWith',\n\t\t\t\t\t\t\tsearch: search.term.trim(),\n\t\t\t\t\t\t\tlimit: 200,\n\t\t\t\t\t\t\titemShares: this.itemShares,\n\t\t\t\t\t\t\titemType: itemType\n\t\t\t\t\t\t}, function (result) {\n\t\t\t\t\t\t\t$loading.addClass('hidden');\n\t\t\t\t\t\t\tif (result.status == 'success' && result.data.length > 0) {\n\t\t\t\t\t\t\t\t$(\"#shareWith\").autocomplete(\"option\", \"autoFocus\", true);\n\t\t\t\t\t\t\t\tresponse(result.data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresponse();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).fail(function () {\n\t\t\t\t\t\t\t$('#dropdown').find('.shareWithLoading').addClass('hidden');\n\t\t\t\t\t\t\tOC.Notification.show(t('core', 'An error occured. Please try again'));\n\t\t\t\t\t\t\twindow.setTimeout(OC.Notification.hide, 5000);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tfocus: function (event) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t},\n\t\t\t\t\tselect: function (event, selected) {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\tvar $dropDown = $('#dropdown');\n\t\t\t\t\t\tvar itemSource = $dropDown.data('item-source');\n\t\t\t\t\t\tvar expirationDate = '';\n\t\t\t\t\t\tif ($('#expirationCheckbox').is(':checked') === true) {\n\t\t\t\t\t\t\texpirationDate = $(\"#expirationDate\").val();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar shareType = selected.item.value.shareType;\n\t\t\t\t\t\tvar shareWith = selected.item.value.shareWith;\n\t\t\t\t\t\t$(this).val(shareWith);\n\t\t\t\t\t\t// Default permissions are Edit (CRUD) and Share\n\t\t\t\t\t\t// Check if these permissions are possible\n\t\t\t\t\t\tvar permissions = OC.PERMISSION_READ;\n\t\t\t\t\t\tif (shareType === Gallery.Share.SHARE_TYPE_REMOTE) {\n\t\t\t\t\t\t\tpermissions =\n\t\t\t\t\t\t\t\tOC.PERMISSION_CREATE | OC.PERMISSION_UPDATE | OC.PERMISSION_READ;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (possiblePermissions & OC.PERMISSION_UPDATE) {\n\t\t\t\t\t\t\t\tpermissions = permissions | OC.PERMISSION_UPDATE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (possiblePermissions & OC.PERMISSION_CREATE) {\n\t\t\t\t\t\t\t\tpermissions = permissions | OC.PERMISSION_CREATE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (possiblePermissions & OC.PERMISSION_DELETE) {\n\t\t\t\t\t\t\t\tpermissions = permissions | OC.PERMISSION_DELETE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (oc_appconfig.core.resharingAllowed &&\n\t\t\t\t\t\t\t\t(possiblePermissions & OC.PERMISSION_SHARE)) {\n\t\t\t\t\t\t\t\tpermissions = permissions | OC.PERMISSION_SHARE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar $input = $(this);\n\t\t\t\t\t\tvar $loading = $dropDown.find('.shareWithLoading');\n\t\t\t\t\t\t$loading.removeClass('hidden');\n\t\t\t\t\t\t$input.val(t('core', 'Adding user...'));\n\t\t\t\t\t\t$input.prop('disabled', true);\n\t\t\t\t\t\tGallery.Share.share(\n\t\t\t\t\t\t\titemSource,\n\t\t\t\t\t\t\tshareType,\n\t\t\t\t\t\t\tshareWith,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tpermissions,\n\t\t\t\t\t\t\tfunction (data) {\n\t\t\t\t\t\t\t\tvar posPermissions = possiblePermissions;\n\t\t\t\t\t\t\t\tif (shareType === Gallery.Share.SHARE_TYPE_REMOTE) {\n\t\t\t\t\t\t\t\t\tposPermissions = permissions;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tGallery.Share._addShareWith(data.id, shareType, shareWith,\n\t\t\t\t\t\t\t\t\tselected.item.label,\n\t\t\t\t\t\t\t\t\tpermissions, posPermissions);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t$input.prop('disabled', false);\n\t\t\t\t\t\t$loading.addClass('hidden');\n\t\t\t\t\t\t$('#shareWith').val('');\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).data(\"ui-autocomplete\")._renderItem = function (ul, item) {\n\t\t\t\t\t// customize internal _renderItem function to display groups and users\n\t\t\t\t\t// differently\n\t\t\t\t\tvar insert = $(\"<a>\");\n\t\t\t\t\tvar text = item.label;\n\t\t\t\t\tif (item.value.shareType === Gallery.Share.SHARE_TYPE_GROUP) {\n\t\t\t\t\t\ttext = text + ' (' + t('core', 'group') + ')';\n\t\t\t\t\t} else if (item.value.shareType === Gallery.Share.SHARE_TYPE_REMOTE) {\n\t\t\t\t\t\ttext = text + ' (' + t('core', 'remote') + ')';\n\t\t\t\t\t}\n\t\t\t\t\tinsert.text(text);\n\t\t\t\t\tif (item.value.shareType === Gallery.Share.SHARE_TYPE_GROUP) {\n\t\t\t\t\t\tinsert = insert.wrapInner('<strong></strong>');\n\t\t\t\t\t}\n\t\t\t\t\treturn $(\"<li>\")\n\t\t\t\t\t\t.addClass(\n\t\t\t\t\t\t\t(item.value.shareType ===\n\t\t\t\t\t\t\tGallery.Share.SHARE_TYPE_GROUP) ? 'group' : 'user')\n\t\t\t\t\t\t.append(insert)\n\t\t\t\t\t\t.appendTo(ul);\n\t\t\t\t};\n\t\t\t\t// FIXME Emailing links is not supported in Gallery\n\t\t\t\t/*if (link && linksAllowed && $('#email').length != 0) {\n\t\t\t\t $('#email').autocomplete({\n\t\t\t\t minLength: 1,\n\t\t\t\t source: function (search, response) {\n\t\t\t\t $.get(OC.filePath('core', 'ajax', 'share.php'), {\n\t\t\t\t fetch: 'getShareWithEmail',\n\t\t\t\t search: search.term\n\t\t\t\t }, function (result) {\n\t\t\t\t if (result.status == 'success' && result.data.length > 0) {\n\t\t\t\t response(result.data);\n\t\t\t\t }\n\t\t\t\t });\n\t\t\t\t },\n\t\t\t\t select: function (event, item) {\n\t\t\t\t $('#email').val(item.item.email);\n\t\t\t\t return false;\n\t\t\t\t }\n\t\t\t\t })\n\t\t\t\t .data(\"ui-autocomplete\")._renderItem = function (ul, item) {\n\t\t\t\t return $('<li>')\n\t\t\t\t .append('<a>' + escapeHTML(item.displayname) + \"<br>\" +\n\t\t\t\t escapeHTML(item.email) + '</a>')\n\t\t\t\t .appendTo(ul);\n\t\t\t\t };\n\t\t\t\t }*/\n\n\t\t\t} else {\n\t\t\t\thtml += '<input id=\"shareWith\" type=\"text\" placeholder=\"' +\n\t\t\t\t\tt('core', 'Resharing is not allowed') +\n\t\t\t\t\t'\" style=\"width:90%;\" disabled=\"disabled\"/>';\n\t\t\t\thtml += '</div>';\n\t\t\t\tdropDownEl = $(html);\n\t\t\t\tdropDownEl.appendTo(appendTo);\n\t\t\t}\n\t\t\tdropDownEl.attr('data-item-source-name', filename);\n\t\t\t$('#dropdown').slideDown(OC.menuSpeed, function () {\n\t\t\t\tGallery.Share.droppedDown = true;\n\t\t\t});\n\t\t\tif ($('html').hasClass('lte9')) {\n\t\t\t\t$('#dropdown input[placeholder]').placeholder();\n\t\t\t}\n\t\t\t$('#shareWith').focus();\n\t\t},\n\t\t/**\n\t\t *\n\t\t * @param callback\n\t\t */\n\t\thideDropDown: function (callback) {\n\t\t\tthis.currentShares = null;\n\t\t\t$('#dropdown').slideUp(OC.menuSpeed, function () {\n\t\t\t\tGallery.Share.droppedDown = false;\n\t\t\t\t$('#dropdown').remove();\n\t\t\t\tif (typeof FileActions !== 'undefined') {\n\t\t\t\t\t$('tr').removeClass('mouseOver');\n\t\t\t\t}\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback.call();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t *\n\t\t * @param id\n\t\t * @param token\n\t\t * @param password\n\t\t */\n\t\tshowLink: function (id, token, password) {\n\t\t\tvar $linkCheckbox = $('#linkCheckbox');\n\t\t\tthis.itemShares[this.SHARE_TYPE_LINK] = true;\n\t\t\t$linkCheckbox.attr('checked', true);\n\t\t\t$linkCheckbox.attr('data-id', id);\n\t\t\tvar $linkText = $('#linkText');\n\n\t\t\tvar link = parent.location.protocol + '//' + location.host +\n\t\t\t\tOC.generateUrl('/apps/' + Gallery.appName + '/s/') + token;\n\n\t\t\t$linkText.val(link);\n\t\t\t$linkText.slideDown(OC.menuSpeed);\n\t\t\t$linkText.css('display', 'block');\n\t\t\tif (oc_appconfig.core.enforcePasswordForPublicLink === false || password === null) {\n\t\t\t\t$('#showPassword+label').show();\n\t\t\t}\n\t\t\tif (password != null) {\n\t\t\t\t$('#linkPass').slideDown(OC.menuSpeed);\n\t\t\t\t$('#showPassword').attr('checked', true);\n\t\t\t\t$('#linkPassText').attr('placeholder', '**********');\n\t\t\t}\n\t\t\t$('#expiration').show();\n\t\t\t$('#emailPrivateLink #email').show();\n\t\t\t$('#emailPrivateLink #emailButton').show();\n\t\t\t$('#allowPublicUploadWrapper').show();\n\t\t},\n\t\t/**\n\t\t *\n\t\t */\n\t\thideLink: function () {\n\t\t\t$('#linkText').slideUp(OC.menuSpeed);\n\t\t\t$('#defaultExpireMessage').hide();\n\t\t\t$('#showPassword+label').hide();\n\t\t\t$('#linkPass').slideUp(OC.menuSpeed);\n\t\t\t$('#emailPrivateLink #email').hide();\n\t\t\t$('#emailPrivateLink #emailButton').hide();\n\t\t\t$('#allowPublicUploadWrapper').hide();\n\t\t},\n\t\t/**\n\t\t * Displays the expiration date field\n\t\t *\n\t\t * @param {String} date current expiration date\n\t\t * @param {Date|Number|String} [shareTime] share timestamp in seconds, defaults to now\n\t\t */\n\t\tshowExpirationDate: function (date, shareTime) {\n\t\t\tvar $expirationDate = $('#expirationDate');\n\t\t\tvar $expirationCheckbox = $('#expirationCheckbox');\n\t\t\tvar now = new Date();\n\t\t\t// min date should always be the next day\n\t\t\tvar minDate = new Date();\n\t\t\tminDate.setDate(minDate.getDate() + 1);\n\t\t\tvar datePickerOptions = {\n\t\t\t\tminDate: minDate,\n\t\t\t\tmaxDate: null\n\t\t\t};\n\t\t\t// TODO: hack: backend returns string instead of integer\n\t\t\tshareTime = this._parseTime(shareTime);\n\t\t\tif (_.isNumber(shareTime)) {\n\t\t\t\tshareTime = new Date(shareTime * 1000);\n\t\t\t}\n\t\t\tif (!shareTime) {\n\t\t\t\tshareTime = now;\n\t\t\t}\n\t\t\t$expirationCheckbox.attr('checked', true);\n\t\t\t$expirationDate.val(date);\n\t\t\t$expirationDate.slideDown(OC.menuSpeed);\n\t\t\t$expirationDate.css('display', 'block');\n\t\t\t$expirationDate.datepicker({\n\t\t\t\tdateFormat: 'dd-mm-yy'\n\t\t\t});\n\t\t\tif (oc_appconfig.core.defaultExpireDateEnforced) {\n\t\t\t\t$expirationCheckbox.attr('disabled', true);\n\t\t\t\tshareTime = OC.Util.stripTime(shareTime).getTime();\n\t\t\t\t// max date is share date + X days\n\t\t\t\tdatePickerOptions.maxDate =\n\t\t\t\t\tnew Date(shareTime + oc_appconfig.core.defaultExpireDate * 24 * 3600 * 1000);\n\t\t\t}\n\t\t\tif (oc_appconfig.core.defaultExpireDateEnabled) {\n\t\t\t\t$('#defaultExpireMessage').slideDown(OC.menuSpeed);\n\t\t\t}\n\t\t\t$.datepicker.setDefaults(datePickerOptions);\n\t\t},\n\t\t/**\n\t\t * Get the default Expire date\n\t\t *\n\t\t * @return {String} The expire date\n\t\t */\n\t\tgetDefaultExpirationDate: function () {\n\t\t\tvar expireDateString = '';\n\t\t\tif (oc_appconfig.core.defaultExpireDateEnabled) {\n\t\t\t\tvar date = new Date().getTime();\n\t\t\t\tvar expireAfterMs = oc_appconfig.core.defaultExpireDate * 24 * 60 * 60 * 1000;\n\t\t\t\tvar expireDate = new Date(date + expireAfterMs);\n\t\t\t\tvar month = expireDate.getMonth() + 1;\n\t\t\t\tvar year = expireDate.getFullYear();\n\t\t\t\tvar day = expireDate.getDate();\n\t\t\t\texpireDateString = year + \"-\" + month + '-' + day + ' 00:00:00';\n\t\t\t}\n\t\t\treturn expireDateString;\n\t\t},\n\t\t/**\n\t\t * Loads all shares associated with a path\n\t\t *\n\t\t * @param path\n\t\t *\n\t\t * @returns {Gallery.Share.Types.ShareInfo|Boolean}\n\t\t * @private\n\t\t */\n\t\t_loadShares: function (path) {\n\t\t\tvar data = false;\n\t\t\tvar url = OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares' + '?format=json';\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\ttype: 'GET',\n\t\t\t\tdata: {\n\t\t\t\t\tpath: path,\n\t\t\t\t\tshared_with_me: true\n\t\t\t\t},\n\t\t\t\tasync: false\n\t\t\t}).done(function (result) {\n\t\t\t\tdata = result.ocs.data;\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: url,\n\t\t\t\t\ttype: 'GET',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tpath: path,\n\t\t\t\t\t\treshares: true\n\t\t\t\t\t},\n\t\t\t\t\tasync: false\n\t\t\t\t}).done(function (result) {\n\t\t\t\t\tdata = _.union(data, result.ocs.data);\n\t\t\t\t})\n\n\t\t\t});\n\n\t\t\tif (data === false) {\n\t\t\t\tOC.dialogs.alert(t('gallery', 'Error while retrieving shares'),\n\t\t\t\t\tt('core', 'Error'));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\t\t/**\n\t\t *\n\t\t * @param shareId\n\t\t * @param shareType\n\t\t * @param shareWith\n\t\t * @param shareWithDisplayName\n\t\t * @param permissions\n\t\t * @param possiblePermissions\n\t\t * @param mailSend\n\t\t *\n\t\t * @private\n\t\t */\n\t\t_addShareWith: function (shareId, shareType, shareWith, shareWithDisplayName, permissions, possiblePermissions, mailSend) {\n\t\t\tvar shareItem = {\n\t\t\t\tshare_id: shareId,\n\t\t\t\tshare_type: shareType,\n\t\t\t\tshare_with: shareWith,\n\t\t\t\tshare_with_displayname: shareWithDisplayName,\n\t\t\t\tpermissions: permissions\n\t\t\t};\n\t\t\tif (shareType === this.SHARE_TYPE_GROUP) {\n\t\t\t\tshareWithDisplayName = shareWithDisplayName + \" (\" + t('core', 'group') + ')';\n\t\t\t}\n\t\t\tif (shareType === this.SHARE_TYPE_REMOTE) {\n\t\t\t\tshareWithDisplayName = shareWithDisplayName + \" (\" + t('core', 'remote') + ')';\n\t\t\t}\n\t\t\tif (!this.itemShares[shareType]) {\n\t\t\t\tthis.itemShares[shareType] = [];\n\t\t\t}\n\t\t\tthis.itemShares[shareType].push(shareWith);\n\n\t\t\tvar editChecked = '',\n\t\t\t\tcreateChecked = '',\n\t\t\t\tupdateChecked = '',\n\t\t\t\tdeleteChecked = '',\n\t\t\t\tshareChecked = '';\n\t\t\tif (permissions & OC.PERMISSION_CREATE) {\n\t\t\t\tcreateChecked = 'checked=\"checked\"';\n\t\t\t\teditChecked = 'checked=\"checked\"';\n\t\t\t}\n\t\t\tif (permissions & OC.PERMISSION_UPDATE) {\n\t\t\t\tupdateChecked = 'checked=\"checked\"';\n\t\t\t\teditChecked = 'checked=\"checked\"';\n\t\t\t}\n\t\t\tif (permissions & OC.PERMISSION_DELETE) {\n\t\t\t\tdeleteChecked = 'checked=\"checked\"';\n\t\t\t\teditChecked = 'checked=\"checked\"';\n\t\t\t}\n\t\t\tif (permissions & OC.PERMISSION_SHARE) {\n\t\t\t\tshareChecked = 'checked=\"checked\"';\n\t\t\t}\n\t\t\tvar html = '<li style=\"clear: both;\" ' +\n\t\t\t\t'data-id=\"' + escapeHTML(shareId) + '\"' +\n\t\t\t\t'data-share-type=\"' + escapeHTML(shareType) + '\"' +\n\t\t\t\t'data-share-with=\"' + escapeHTML(shareWith) + '\"' +\n\t\t\t\t'title=\"' + escapeHTML(shareWith) + '\">';\n\t\t\tvar showCrudsButton;\n\t\t\thtml +=\n\t\t\t\t'<a href=\"#\" class=\"unshare\"><img class=\"svg\" alt=\"' + t('core', 'Unshare') +\n\t\t\t\t'\" title=\"' + t('core', 'Unshare') + '\" src=\"' +\n\t\t\t\tOC.imagePath('core', 'actions/delete') + '\"/></a>';\n\t\t\tif (oc_config.enable_avatars === true) {\n\t\t\t\thtml += '<div class=\"avatar\"></div>';\n\t\t\t}\n\t\t\thtml += '<span class=\"username\">' + escapeHTML(shareWithDisplayName) + '</span>';\n\t\t\tvar mailNotificationEnabled = $('input:hidden[name=mailNotificationEnabled]').val();\n\t\t\tif (mailNotificationEnabled === 'yes' &&\n\t\t\t\tshareType !== this.SHARE_TYPE_REMOTE) {\n\t\t\t\tvar checked = '';\n\t\t\t\tif (mailSend === '1') {\n\t\t\t\t\tchecked = 'checked';\n\t\t\t\t}\n\t\t\t\thtml +=\n\t\t\t\t\t'<input type=\"checkbox\" class=\"checkbox checkbox--right\" ' +\n\t\t\t\t\t'name=\"mailNotification\" class=\"mailNotification\" ' +\n\t\t\t\t\tchecked + ' />';\n\t\t\t\thtml +=\n\t\t\t\t\t'<label>' + t('core', 'notify by email') + '</label>';\n\t\t\t}\n\t\t\tif (oc_appconfig.core.resharingAllowed &&\n\t\t\t\t(possiblePermissions & OC.PERMISSION_SHARE)) {\n\t\t\t\thtml += '<input id=\"canShare-' + escapeHTML(shareWith) +\n\t\t\t\t\t'\" type=\"checkbox\" class=\"permissions checkbox checkbox--right\" name=\"share\" ' +\n\t\t\t\t\tshareChecked + ' data-permissions=\"' + OC.PERMISSION_SHARE + '\" />';\n\t\t\t\thtml += '<label for=\"canShare-' + escapeHTML(shareWith) + '\">' +\n\t\t\t\t\tt('core', 'can share') + '</label>';\n\t\t\t}\n\t\t\tif (possiblePermissions & OC.PERMISSION_CREATE ||\n\t\t\t\tpossiblePermissions & OC.PERMISSION_UPDATE ||\n\t\t\t\tpossiblePermissions & OC.PERMISSION_DELETE) {\n\t\t\t\thtml += '<input id=\"canEdit-' + escapeHTML(shareWith) +\n\t\t\t\t\t'\" type=\"checkbox\" class=\"permissions checkbox checkbox--right\" name=\"edit\" ' +\n\t\t\t\t\teditChecked + ' />';\n\t\t\t\thtml += '<label for=\"canEdit-' + escapeHTML(shareWith) + '\">' +\n\t\t\t\t\tt('core', 'can edit') + '</label>';\n\t\t\t}\n\t\t\tif (shareType !== this.SHARE_TYPE_REMOTE) {\n\t\t\t\tshowCrudsButton = '<a href=\"#\" class=\"showCruds\"><img class=\"svg\" alt=\"' +\n\t\t\t\t\tt('core', 'access control') + '\" src=\"' +\n\t\t\t\t\tOC.imagePath('core', 'actions/triangle-s') + '\"/></a>';\n\t\t\t}\n\t\t\thtml += '<div class=\"cruds\" style=\"display:none;\">';\n\t\t\tif (possiblePermissions & OC.PERMISSION_CREATE) {\n\t\t\t\thtml += '<input id=\"canCreate-' + escapeHTML(shareWith) +\n\t\t\t\t\t'\" type=\"checkbox\" class=\"permissions checkbox checkbox--right\" name=\"create\" ' +\n\t\t\t\t\tcreateChecked + ' data-permissions=\"' + OC.PERMISSION_CREATE + '\"/>';\n\t\t\t\thtml += '<label for=\"canCreate-' + escapeHTML(shareWith) + '\">' +\n\t\t\t\t\tt('core', 'create') + '</label>';\n\t\t\t}\n\t\t\tif (possiblePermissions & OC.PERMISSION_UPDATE) {\n\t\t\t\thtml += '<input id=\"canUpdate-' + escapeHTML(shareWith) +\n\t\t\t\t\t'\" type=\"checkbox\" class=\"permissions checkbox checkbox--right\" name=\"update\" ' +\n\t\t\t\t\tupdateChecked + ' data-permissions=\"' + OC.PERMISSION_UPDATE + '\"/>';\n\t\t\t\thtml += '<label for=\"canUpdate-' + escapeHTML(shareWith) + '\">' +\n\t\t\t\t\tt('core', 'change') + '</label>';\n\t\t\t}\n\t\t\tif (possiblePermissions & OC.PERMISSION_DELETE) {\n\t\t\t\thtml += '<input id=\"canDelete-' + escapeHTML(shareWith) +\n\t\t\t\t\t'\" type=\"checkbox\" class=\"permissions checkbox checkbox--right\" name=\"delete\" ' +\n\t\t\t\t\tdeleteChecked + ' data-permissions=\"' + OC.PERMISSION_DELETE + '\"/>';\n\t\t\t\thtml += '<label for=\"canDelete-' + escapeHTML(shareWith) + '\">' +\n\t\t\t\t\tt('core', 'delete') + '</label>';\n\t\t\t}\n\t\t\thtml += '</div>';\n\t\t\thtml += '</li>';\n\t\t\thtml = $(html).appendTo('#shareWithList');\n\t\t\tif (oc_config.enable_avatars === true) {\n\t\t\t\tif (shareType === this.SHARE_TYPE_USER) {\n\t\t\t\t\thtml.find('.avatar').avatar(escapeHTML(shareWith), 32);\n\t\t\t\t} else {\n\t\t\t\t\t//Add sharetype to generate different seed if there is a group and use with\n\t\t\t\t\t// the same name\n\t\t\t\t\thtml.find('.avatar').imageplaceholder(\n\t\t\t\t\t\tescapeHTML(shareWith) + ' ' + shareType);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// insert cruds button into last label element\n\t\t\tvar lastLabel = html.find('>label:last');\n\t\t\tif (lastLabel.exists()) {\n\t\t\t\tlastLabel.append(showCrudsButton);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thtml.find('.cruds').before(showCrudsButton);\n\t\t\t}\n\t\t\tif (!this.currentShares[shareType]) {\n\t\t\t\tthis.currentShares[shareType] = [];\n\t\t\t}\n\t\t\tthis.currentShares[shareType].push(shareItem);\n\t\t},\n\t\t/**\n\t\t * Parses a string to an valid integer (unix timestamp)\n\t\t * @param time\n\t\t * @returns {*}\n\t\t * @internal Only used to work around a bug in the backend\n\t\t * @private\n\t\t */\n\t\t_parseTime: function (time) {\n\t\t\tif (_.isString(time)) {\n\t\t\t\t// skip empty strings and hex values\n\t\t\t\tif (time === '' || (time.length > 1 && time[0] === '0' && time[1] === 'x')) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\ttime = parseInt(time, 10);\n\t\t\t\tif (isNaN(time)) {\n\t\t\t\t\ttime = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn time;\n\t\t}\n\t};\n\n\tGallery.Share = Share;\n})(jQuery, Gallery);\n\n$(document).ready(function () {\n\n\tif (typeof monthNames != 'undefined') {\n\t\t// min date should always be the next day\n\t\tvar minDate = new Date();\n\t\tminDate.setDate(minDate.getDate() + 1);\n\t\t$.datepicker.setDefaults({\n\t\t\tmonthNames: monthNames,\n\t\t\tmonthNamesShort: $.map(monthNames, function (v) {\n\t\t\t\treturn v.slice(0, 3) + '.';\n\t\t\t}),\n\t\t\tdayNames: dayNames,\n\t\t\tdayNamesMin: $.map(dayNames, function (v) {\n\t\t\t\treturn v.slice(0, 2);\n\t\t\t}),\n\t\t\tdayNamesShort: $.map(dayNames, function (v) {\n\t\t\t\treturn v.slice(0, 3) + '.';\n\t\t\t}),\n\t\t\tfirstDay: firstDay,\n\t\t\tminDate: minDate\n\t\t});\n\t}\n\t$(document).on('click', 'a.share', function (event) {\n\t\tevent.stopPropagation();\n\t\tif ($(this).data('item-type') !== undefined && $(this).data('path') !== undefined) {\n\t\t\tvar itemType = $(this).data('item-type');\n\t\t\tvar path = $(this).data('path');\n\t\t\tvar appendTo = $(this).parent().parent();\n\t\t\tvar link = false;\n\t\t\tvar possiblePermissions = $(this).data('possible-permissions');\n\t\t\tif ($(this).data('link') !== undefined && $(this).data('link') == true) {\n\t\t\t\tlink = true;\n\t\t\t}\n\t\t\tif (Gallery.Share.droppedDown) {\n\t\t\t\tif (path != $('#dropdown').data('path')) {\n\t\t\t\t\tGallery.Share.hideDropDown(function () {\n\t\t\t\t\t\tGallery.Share.showDropDown(itemType, path, appendTo, link,\n\t\t\t\t\t\t\tpossiblePermissions);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tGallery.Share.hideDropDown();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tGallery.Share.showDropDown(itemType, path, appendTo, link, possiblePermissions);\n\t\t\t}\n\t\t}\n\t});\n\n\t$(this).click(function (event) {\n\t\tvar target = $(event.target);\n\t\tvar isMatched = !target.is('.drop, .ui-datepicker-next, .ui-datepicker-prev, .ui-icon')\n\t\t\t&& !target.closest('#ui-datepicker-div').length &&\n\t\t\t!target.closest('.ui-autocomplete').length;\n\t\tif (Gallery.Share.droppedDown && isMatched &&\n\t\t\t$('#dropdown').has(event.target).length === 0) {\n\t\t\tGallery.Share.hideDropDown();\n\t\t}\n\t});\n\n\t$(document).on('click', '#dropdown .showCruds', function () {\n\t\t$(this).closest('li').find('.cruds').toggle();\n\t\treturn false;\n\t});\n\n\t$(document).on('click', '#dropdown .unshare', function () {\n\t\tvar $li = $(this).closest('li');\n\t\tvar shareType = $li.data('share-type');\n\t\tvar shareWith = $li.attr('data-share-with');\n\t\tvar shareId = $li.attr('data-id');\n\t\tvar $button = $(this);\n\n\t\tif (!$button.is('a')) {\n\t\t\t$button = $button.closest('a');\n\t\t}\n\n\t\tif ($button.hasClass('icon-loading-small')) {\n\t\t\t// deletion in progress\n\t\t\treturn false;\n\t\t}\n\t\t$button.empty().addClass('icon-loading-small');\n\t\tGallery.Share.unshare(shareId, function () {\n\t\t\t$li.remove();\n\t\t\tvar index = Gallery.Share.itemShares[shareType].indexOf(shareWith);\n\t\t\tGallery.Share.itemShares[shareType].splice(index, 1);\n\t\t\t// updated list of shares\n\t\t\tGallery.Share.currentShares[shareType].splice(index, 1);\n\t\t});\n\n\t\treturn false;\n\t});\n\n\t$(document).on('change', '#dropdown .permissions', function () {\n\t\tvar $li = $(this).closest('li');\n\t\tvar checkboxes = $('.permissions', $li);\n\t\tif ($(this).attr('name') == 'edit') {\n\t\t\tvar checked = $(this).is(':checked');\n\t\t\t// Check/uncheck Create, Update, and Delete checkboxes if Edit is checked/unck\n\t\t\t$(checkboxes).filter('input[name=\"create\"]').attr('checked', checked);\n\t\t\t$(checkboxes).filter('input[name=\"update\"]').attr('checked', checked);\n\t\t\t$(checkboxes).filter('input[name=\"delete\"]').attr('checked', checked);\n\t\t} else {\n\t\t\t// Uncheck Edit if Create, Update, and Delete are not checked\n\t\t\tif (!$(this).is(':checked')\n\t\t\t\t&& !$(checkboxes).filter('input[name=\"create\"]').is(':checked')\n\t\t\t\t&& !$(checkboxes).filter('input[name=\"update\"]').is(':checked')\n\t\t\t\t&& !$(checkboxes).filter('input[name=\"delete\"]').is(':checked')) {\n\t\t\t\t$(checkboxes).filter('input[name=\"edit\"]').attr('checked', false);\n\t\t\t\t// Check Edit if Create, Update, or Delete is checked\n\t\t\t} else if (($(this).attr('name') == 'create'\n\t\t\t\t|| $(this).attr('name') == 'update'\n\t\t\t\t|| $(this).attr('name') == 'delete')) {\n\t\t\t\t$(checkboxes).filter('input[name=\"edit\"]').attr('checked', true);\n\t\t\t}\n\t\t}\n\t\tvar permissions = OC.PERMISSION_READ;\n\t\t$(checkboxes).filter(':not(input[name=\"edit\"])').filter(':checked').each(\n\t\t\tfunction (index, checkbox) {\n\t\t\t\tpermissions |= $(checkbox).data('permissions');\n\t\t\t});\n\n\t\tGallery.Share.setPermissions($li.attr('data-id'), permissions);\n\t});\n\n\t$(document).on('change', '#dropdown #linkCheckbox', function () {\n\t\tvar $dropDown = $('#dropdown');\n\t\tvar path = $dropDown.data('item-source');\n\t\tvar shareId = $('#linkCheckbox').data('id');\n\t\tvar shareWith = '';\n\t\tvar publicUpload = 0;\n\t\tvar $loading = $dropDown.find('#link .icon-loading-small');\n\t\tvar $button = $(this);\n\n\t\tif (!$loading.hasClass('hidden')) {\n\t\t\t// already in progress\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.checked) {\n\t\t\t// Reset password placeholder\n\t\t\t$('#linkPassText').attr('placeholder',\n\t\t\t\tt('core', 'Choose a password for the public link'));\n\t\t\t// Reset link\n\t\t\t$('#linkText').val('');\n\t\t\t$('#showPassword').prop('checked', false);\n\t\t\t$('#linkPass').hide();\n\t\t\t$('#sharingDialogAllowPublicUpload').prop('checked', false);\n\t\t\t$('#expirationCheckbox').prop('checked', false);\n\t\t\t$('#expirationDate').hide();\n\t\t\tvar expireDateString = '';\n\t\t\t// Create a link\n\t\t\tif (oc_appconfig.core.enforcePasswordForPublicLink === false) {\n\t\t\t\texpireDateString = Gallery.Share.getDefaultExpirationDate();\n\t\t\t\t$loading.removeClass('hidden');\n\t\t\t\t$button.addClass('hidden');\n\t\t\t\t$button.prop('disabled', true);\n\t\t\t\tGallery.Share.share(\n\t\t\t\t\tpath,\n\t\t\t\t\tGallery.Share.SHARE_TYPE_LINK,\n\t\t\t\t\tshareWith,\n\t\t\t\t\tpublicUpload,\n\t\t\t\t\tnull,\n\t\t\t\t\tOC.PERMISSION_READ,\n\t\t\t\t\tfunction (data) {\n\t\t\t\t\t\t$loading.addClass('hidden');\n\t\t\t\t\t\t$button.removeClass('hidden');\n\t\t\t\t\t\t$button.prop('disabled', false);\n\t\t\t\t\t\tGallery.Share.showLink(data.id, data.token, null);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t$('#linkPass').slideToggle(OC.menuSpeed);\n\t\t\t\t$('#linkPassText').focus();\n\t\t\t}\n\t\t\tif (expireDateString !== '') {\n\t\t\t\tGallery.Share.showExpirationDate(expireDateString);\n\t\t\t}\n\t\t} else {\n\t\t\t// Delete private link\n\t\t\tGallery.Share.hideLink();\n\t\t\t$('#expiration').slideUp(OC.menuSpeed);\n\t\t\tif ($('#linkText').val() !== '') {\n\t\t\t\t$loading.removeClass('hidden');\n\t\t\t\t$button.addClass('hidden');\n\t\t\t\t$button.prop('disabled', true);\n\t\t\t\tGallery.Share.unshare(shareId, function () {\n\t\t\t\t\t$loading.addClass('hidden');\n\t\t\t\t\t$button.removeClass('hidden');\n\t\t\t\t\t$button.prop('disabled', false);\n\t\t\t\t\tGallery.Share.itemShares[Gallery.Share.SHARE_TYPE_LINK] = false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\t$(document).on('click', '#dropdown #linkText', function () {\n\t\t$(this).focus();\n\t\t$(this).select();\n\t});\n\n\t// Handle the Allow Public Upload Checkbox\n\t// FIXME public uploading is not supported in Gallery\n\t/*$(document).on('click', '#sharingDialogAllowPublicUpload', function () {\n\n\t // Gather data\n\t var $dropDown = $('#dropdown');\n\t var allowPublicUpload = $(this).is(':checked');\n\t var $button = $(this);\n\t var $loading = $dropDown.find('#allowPublicUploadWrapper .icon-loading-small');\n\n\t if (!$loading.hasClass('hidden')) {\n\t // already in progress\n\t return false;\n\t }\n\n\t // Update the share information\n\t $button.addClass('hidden');\n\t $button.prop('disabled', true);\n\t $loading.removeClass('hidden');\n\t //(path, shareType, shareWith, publicUpload, password, permissions)\n\t $.ajax({\n\t url: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares/' + shareId +\n\t '?format=json',\n\t type: 'PUT',\n\t data: {\n\t publicUpload: allowPublicUpload\n\t }\n\t }).done(function () {\n\t $loading.addClass('hidden');\n\t $button.removeClass('hidden');\n\t $button.prop('disabled', false);\n\t });\n\t });*/\n\n\t$(document).on('click', '#dropdown #showPassword', function () {\n\t\t$('#linkPass').slideToggle(OC.menuSpeed);\n\t\tif (!$('#showPassword').is(':checked')) {\n\t\t\tvar shareId = $('#linkCheckbox').data('id');\n\t\t\tvar $loading = $('#showPassword .icon-loading-small');\n\n\t\t\t$loading.removeClass('hidden');\n\t\t\t$.ajax({\n\t\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares/' + shareId +\n\t\t\t\t'?format=json',\n\t\t\t\ttype: 'PUT',\n\t\t\t\tdata: {\n\t\t\t\t\tpassword: null\n\t\t\t\t}\n\t\t\t}).done(function () {\n\t\t\t\t$loading.addClass('hidden');\n\t\t\t\t$('#linkPassText').attr('placeholder',\n\t\t\t\t\tt('core', 'Choose a password for the public link'));\n\t\t\t});\n\t\t} else {\n\t\t\t$('#linkPassText').focus();\n\t\t}\n\t});\n\n\t$(document).on('focusout keyup', '#dropdown #linkPassText', function (event) {\n\t\tvar linkPassText = $('#linkPassText');\n\t\tif (linkPassText.val() != '' && (event.type == 'focusout' || event.keyCode == 13)) {\n\t\t\tvar dropDown = $('#dropdown');\n\t\t\tvar $loading = dropDown.find('#linkPass .icon-loading-small');\n\t\t\tvar shareId = $('#linkCheckbox').data('id');\n\n\t\t\t$loading.removeClass('hidden');\n\t\t\t$.ajax({\n\t\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares/' + shareId +\n\t\t\t\t'?format=json',\n\t\t\t\ttype: 'PUT',\n\t\t\t\tdata: {\n\t\t\t\t\tpassword: $('#linkPassText').val()\n\t\t\t\t}\n\t\t\t}).done(function (data) {\n\t\t\t\t$loading.addClass('hidden');\n\t\t\t\tlinkPassText.val('');\n\t\t\t\tlinkPassText.attr('placeholder', t('core', 'Password protected'));\n\n\t\t\t\tif (oc_appconfig.core.enforcePasswordForPublicLink) {\n\t\t\t\t\tGallery.Share.showLink(data.id, data.token, \"password set\");\n\t\t\t\t}\n\t\t\t}).fail(function (xhr) {\n\t\t\t\tvar result = xhr.responseJSON;\n\t\t\t\t$loading.addClass('hidden');\n\t\t\t\tlinkPassText.val('');\n\t\t\t\tlinkPassText.attr('placeholder', result.data.message);\n\t\t\t});\n\t\t}\n\t});\n\n\t$(document).on('click', '#dropdown #expirationCheckbox', function () {\n\t\tif (this.checked) {\n\t\t\tGallery.Share.showExpirationDate('');\n\t\t} else {\n\t\t\tvar shareId = $('#linkCheckbox').data('id');\n\t\t\t$.ajax({\n\t\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares/' + shareId +\n\t\t\t\t'?format=json',\n\t\t\t\ttype: 'PUT',\n\t\t\t\tdata: {\n\t\t\t\t\texpireDate: ''\n\t\t\t\t}\n\t\t\t}).done(function () {\n\t\t\t\t$('#expirationDate').slideUp(OC.menuSpeed);\n\t\t\t\tif (oc_appconfig.core.defaultExpireDateEnforced === false) {\n\t\t\t\t\t$('#defaultExpireMessage').slideDown(OC.menuSpeed);\n\t\t\t\t}\n\t\t\t}).fail(function () {\n\t\t\t\tOC.dialogs.alert(t('core', 'Error unsetting expiration date'),\n\t\t\t\t\tt('core', 'Error'));\n\t\t\t});\n\t\t}\n\t});\n\n\t$(document).on('change', '#dropdown #expirationDate', function () {\n\t\tvar shareId = $('#linkCheckbox').data('id');\n\n\t\t$(this).tooltip('hide');\n\t\t$(this).removeClass('error');\n\n\t\t$.ajax({\n\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares/' + shareId +\n\t\t\t'?format=json',\n\t\t\ttype: 'PUT',\n\t\t\tdata: {\n\t\t\t\texpireDate: $(this).val()\n\t\t\t}\n\t\t}).done(function () {\n\t\t\tif (oc_appconfig.core.defaultExpireDateEnforced === 'no') {\n\t\t\t\t$('#defaultExpireMessage').slideUp(OC.menuSpeed);\n\t\t\t}\n\t\t}).fail(function (xhr) {\n\t\t\tvar result = xhr.responseJSON;\n\t\t\tvar expirationDateField = $('#dropdown #expirationDate');\n\t\t\tif (result && !result.ocs.meta.message) {\n\t\t\t\texpirationDateField.attr('original-title',\n\t\t\t\t\tt('core', 'Error setting expiration date'));\n\t\t\t} else {\n\t\t\t\texpirationDateField.attr('original-title', result.ocs.meta.message);\n\t\t\t}\n\t\t\texpirationDateField.tooltip({placement: 'top'});\n\t\t\texpirationDateField.tooltip('show');\n\t\t\texpirationDateField.addClass('error');\n\t\t});\n\t});\n\n\n\t// FIXME Emailing links is not supported in Gallery\n\t/*$(document).on('submit', '#dropdown #emailPrivateLink', function (event) {\n\t event.preventDefault();\n\t var link = $('#linkText').val();\n\t var itemType = $('#dropdown').data('item-type');\n\t var itemSource = $('#dropdown').data('item-source');\n\t var file = $('tr').filterAttr('data-id', String(itemSource)).data('file');\n\t var email = $('#email').val();\n\t var expirationDate = '';\n\t if ($('#expirationCheckbox').is(':checked') === true) {\n\t expirationDate = $(\"#expirationDate\").val();\n\t }\n\t if (email != '') {\n\t $('#email').prop('disabled', true);\n\t $('#email').val(t('core', 'Sending ...'));\n\t $('#emailButton').prop('disabled', true);\n\n\t $.post(OC.filePath('core', 'ajax', 'share.php'), {\n\t action: 'email',\n\t toaddress: email,\n\t link: link,\n\t itemType: itemType,\n\t itemSource: itemSource,\n\t file: file,\n\t expiration: expirationDate\n\t },\n\t function (result) {\n\t $('#email').prop('disabled', false);\n\t $('#emailButton').prop('disabled', false);\n\t if (result && result.status == 'success') {\n\t $('#email').css('font-weight', 'bold').val(t('core', 'Email sent'));\n\t setTimeout(function () {\n\t $('#email').css('font-weight', 'normal').val('');\n\t }, 2000);\n\t } else {\n\t OC.dialogs.alert(result.data.message, t('core', 'Error while sharing'));\n\t }\n\t });\n\t }\n\t });*/\n\n\t// FIXME Emailing links is not supported in Gallery\n\t/*$(document).on('click', '#dropdown input[name=mailNotification]', function () {\n\t var $li = $(this).closest('li');\n\t var itemType = $('#dropdown').data('item-type');\n\t var itemSource = $('#dropdown').data('item-source');\n\t var action = '';\n\t if (this.checked) {\n\t action = 'informRecipients';\n\t } else {\n\t action = 'informRecipientsDisabled';\n\t }\n\n\t var shareType = $li.data('share-type');\n\t var shareWith = $li.attr('data-share-with');\n\n\t $.post(OC.filePath('core', 'ajax', 'share.php'), {\n\t action: action,\n\t recipient: shareWith,\n\t shareType: shareType,\n\t itemSource: itemSource,\n\t itemType: itemType\n\t }, function (result) {\n\t if (result.status !== 'success') {\n\t OC.dialogs.alert(t('core', result.data.message), t('core', 'Warning'));\n\t }\n\t });\n\n\t });*/\n});\n"], "fixing_code": ["/* global Gallery, escapeHTML */\n\n(function ($, Gallery) {\n\t\"use strict\";\n\n\t/**\n\t * @typedef {Object} Gallery.Share.Types.ShareInfo\n\t * @property {Number} share_type\n\t * @property {Number} permissions\n\t * @property {Number} file_source optional\n\t * @property {Number} item_source\n\t * @property {String} token\n\t * @property {String} share_with\n\t * @property {String} share_with_displayname\n\t * @property {String} mail_send\n\t * @property {String} displayname_file_owner\n\t * @property {String} displayname_owner\n\t * @property {String} uid_owner\n\t * @property {String} uid_file_owner\n\t * @property {String} expiration optional\n\t * @property {Number} stime\n\t */\n\n\t// copied and stripped out from the old core\n\tvar Share = {\n\t\tSHARE_TYPE_USER: 0,\n\t\tSHARE_TYPE_GROUP: 1,\n\t\tSHARE_TYPE_LINK: 3,\n\t\tSHARE_TYPE_EMAIL: 4,\n\t\tSHARE_TYPE_REMOTE: 6,\n\n\t\t/**\n\t\t * @deprecated use OC.Share.currentShares instead\n\t\t */\n\t\titemShares: [],\n\n\t\t/**\n\t\t * Shares for the currently selected file.\n\t\t * (for which the dropdown is open)\n\t\t *\n\t\t * Key is item type and value is an array or\n\t\t * shares of the given item type.\n\t\t */\n\t\tcurrentShares: {},\n\n\t\t/**\n\t\t * Whether the share dropdown is opened.\n\t\t */\n\t\tdroppedDown: false,\n\n\t\t/**\n\t\t *\n\t\t * @param path {String} path to the file/folder which should be shared\n\t\t * @param shareType {Number} 0 = user; 1 = group; 3 = public link; 6 = federated cloud\n\t\t *     share\n\t\t * @param shareWith {String} user / group id with which the file should be shared\n\t\t * @param publicUpload {Boolean} allow public upload to a public shared folder\n\t\t * @param password {String} password to protect public link Share with\n\t\t * @param permissions {Number} 1 = read; 2 = update; 4 = create; 8 = delete; 16 = share; 31\n\t\t *     = all (default: 31, for public shares: 1)\n\t\t * @param callback {Function} method to call back after a successful share creation\n\t\t * @param errorCallback {Function} method to call back after a failed share creation\n\t\t *\n\t\t * @returns {*}\n\t\t */\n\t\tshare: function (path, shareType, shareWith, publicUpload, password, permissions, callback, errorCallback) {\n\t\t\treturn $.ajax({\n\t\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares' + '?format=json',\n\t\t\t\ttype: 'POST',\n\t\t\t\tdata: {\n\t\t\t\t\tpath: path,\n\t\t\t\t\tshareType: shareType,\n\t\t\t\t\tshareWith: shareWith,\n\t\t\t\t\tpublicUpload: publicUpload,\n\t\t\t\t\tpassword: password,\n\t\t\t\t\tpermissions: permissions\n\t\t\t\t},\n\t\t\t\tdataType: 'json'\n\t\t\t}).done(function (result) {\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback(result.ocs.data);\n\t\t\t\t}\n\t\t\t}).fail(function (xhr) {\n\t\t\t\tvar result = xhr.responseJSON;\n\t\t\t\tif (_.isFunction(errorCallback)) {\n\t\t\t\t\terrorCallback(result);\n\t\t\t\t} else {\n\t\t\t\t\tvar msg = t('core', 'Error');\n\t\t\t\t\tif (result.ocs && result.ocs.meta.message) {\n\t\t\t\t\t\tmsg = result.ocs.meta.message;\n\t\t\t\t\t}\n\t\t\t\t\tOC.dialogs.alert(msg, t('core', 'Error while sharing'));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t *\n\t\t * @param {Number} shareId\n\t\t * @param {Function} callback\n\t\t */\n\t\tunshare: function (shareId, callback) {\n\t\t\t$.ajax({\n\t\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares/' + shareId +\n\t\t\t\t'?format=json',\n\t\t\t\ttype: 'DELETE'\n\t\t\t}).done(function () {\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}).fail(function () {\n\t\t\t\tOC.dialogs.alert(t('core', 'Error while unsharing'), t('core', 'Error'));\n\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t *\n\t\t * @param {Number} shareId\n\t\t * @param {Number} permissions\n\t\t */\n\t\tsetPermissions: function (shareId, permissions) {\n\t\t\t$.ajax({\n\t\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares/' + shareId +\n\t\t\t\t'?format=json',\n\t\t\t\ttype: 'PUT',\n\t\t\t\tdata: {\n\t\t\t\t\tpermissions: permissions\n\t\t\t\t}\n\t\t\t}).fail(function () {\n\t\t\t\tOC.dialogs.alert(t('core', 'Error while changing permissions'),\n\t\t\t\t\tt('core', 'Error'));\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t *\n\t\t * @param {String} itemType\n\t\t * @param {String} path\n\t\t * @param {String} appendTo\n\t\t * @param {String} link\n\t\t * @param {Number} possiblePermissions\n\t\t * @param {String} filename\n\t\t */\n\t\tshowDropDown: function (itemType, path, appendTo, link, possiblePermissions, filename) {\n\t\t\t// This is a sync AJAX request on the main thread...\n\t\t\tvar data = this._loadShares(path);\n\t\t\tvar dropDownEl;\n\t\t\tvar self = this;\n\t\t\tvar html = '<div id=\"dropdown\" class=\"drop shareDropDown\" data-item-type=\"' + escapeHTML(itemType) +\n\t\t\t\t'\" data-item-source=\"' + escapeHTML(path) + '\">';\n\t\t\tif (data !== false && data[0] && !_.isUndefined(data[0].uid_file_owner) &&\n\t\t\t\tdata[0].uid_file_owner !== OC.currentUser\n\t\t\t) {\n\t\t\t\thtml += '<span class=\"reshare\">';\n\t\t\t\tif (oc_config.enable_avatars === true) {\n\t\t\t\t\thtml += '<div class=\"avatar\"></div>';\n\t\t\t\t}\n\n\t\t\t\tif (data[0].share_type == this.SHARE_TYPE_GROUP) {\n\t\t\t\t\thtml += t('core', 'Shared with you and the group {group} by {owner}', {\n\t\t\t\t\t\tgroup: data[0].share_with,\n\t\t\t\t\t\towner: data[0].displayname_owner\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\thtml += t('core', 'Shared with you by {owner}',\n\t\t\t\t\t\t{owner: data[0].displayname_owner});\n\t\t\t\t}\n\t\t\t\thtml += '</span><br />';\n\t\t\t\t// reduce possible permissions to what the original share allowed\n\t\t\t\tpossiblePermissions = possiblePermissions & data[0].permissions;\n\t\t\t}\n\n\t\t\tif (possiblePermissions & OC.PERMISSION_SHARE) {\n\t\t\t\t// Determine the Allow Public Upload status.\n\t\t\t\t// Used later on to determine if the\n\t\t\t\t// respective checkbox should be checked or\n\t\t\t\t// not.\n\t\t\t\t// FIXME public uploading is not supported in Gallery\n\t\t\t\t/*var publicUploadEnabled = $('#filestable').data('allow-public-upload');\n\t\t\t\t if (typeof publicUploadEnabled == 'undefined') {\n\t\t\t\t publicUploadEnabled = 'no';\n\t\t\t\t }\n\t\t\t\t var allowPublicUploadStatus = false;\n\n\t\t\t\t $.each(data, function (key, value) {\n\t\t\t\t if (value.share_type === self.SHARE_TYPE_LINK) {\n\t\t\t\t allowPublicUploadStatus =\n\t\t\t\t (value.permissions & OC.PERMISSION_CREATE) ? true : false;\n\t\t\t\t return true;\n\t\t\t\t }\n\t\t\t\t });*/\n\n\t\t\t\tvar sharePlaceholder = t('core', 'Share with users or groups \u2026');\n\t\t\t\tif (oc_appconfig.core.remoteShareAllowed) {\n\t\t\t\t\tsharePlaceholder = t('core', 'Share with users, groups or remote users \u2026');\n\t\t\t\t}\n\n\t\t\t\thtml += '<label for=\"shareWith\" class=\"hidden-visually\">' + t('core', 'Share') +\n\t\t\t\t\t'</label>';\n\t\t\t\thtml +=\n\t\t\t\t\t'<input id=\"shareWith\" type=\"text\" placeholder=\"' + sharePlaceholder + '\" />';\n\t\t\t\tif (oc_appconfig.core.remoteShareAllowed) {\n\t\t\t\t\tvar federatedCloudSharingDoc =\n\t\t\t\t\t\t'<a target=\"_blank\" class=\"icon-info svg shareWithRemoteInfo\" ' +\n\t\t\t\t\t\t'href=\"{docLink}\" title=\"' + t('core',\n\t\t\t\t\t\t\t'Share with people on other ownClouds using the syntax username@example.com/owncloud') +\n\t\t\t\t\t\t'\"></a>';\n\t\t\t\t\thtml += federatedCloudSharingDoc.replace('{docLink}',\n\t\t\t\t\t\toc_appconfig.core.federatedCloudShareDoc);\n\t\t\t\t}\n\t\t\t\thtml += '<span class=\"shareWithLoading icon-loading-small hidden\"></span>';\n\t\t\t\thtml += '<ul id=\"shareWithList\">';\n\t\t\t\thtml += '</ul>';\n\t\t\t\tvar linksAllowed = $('#allowShareWithLink').val() === 'yes';\n\t\t\t\tif (link && linksAllowed) {\n\t\t\t\t\thtml += '<div id=\"link\" class=\"linkShare\">';\n\t\t\t\t\thtml += '<span class=\"icon-loading-small hidden\"></span>';\n\t\t\t\t\thtml +=\n\t\t\t\t\t\t'<input type=\"checkbox\" class=\"checkbox checkbox--right\" ' +\n\t\t\t\t\t\t'name=\"linkCheckbox\" id=\"linkCheckbox\" value=\"1\" />' +\n\t\t\t\t\t\t'<label for=\"linkCheckbox\">' + t('core', 'Share link') + '</label>';\n\t\t\t\t\thtml += '<br />';\n\n\t\t\t\t\tvar defaultExpireMessage = '';\n\t\t\t\t\tif ((itemType === 'folder' || itemType === 'file') &&\n\t\t\t\t\t\toc_appconfig.core.defaultExpireDateEnforced) {\n\t\t\t\t\t\tdefaultExpireMessage =\n\t\t\t\t\t\t\tt('core',\n\t\t\t\t\t\t\t\t'The public link will expire no later than {days} days after it is created',\n\t\t\t\t\t\t\t\t{'days': oc_appconfig.core.defaultExpireDate}) + '<br/>';\n\t\t\t\t\t}\n\n\t\t\t\t\thtml += '<label for=\"linkText\" class=\"hidden-visually\">' + t('core', 'Link') +\n\t\t\t\t\t\t'</label>';\n\t\t\t\t\thtml += '<input id=\"linkText\" type=\"text\" readonly=\"readonly\" />';\n\t\t\t\t\thtml +=\n\t\t\t\t\t\t'<input type=\"checkbox\" class=\"checkbox checkbox--right\" ' +\n\t\t\t\t\t\t'name=\"showPassword\" id=\"showPassword\" value=\"1\" />' +\n\t\t\t\t\t\t'<label for=\"showPassword\" style=\"display:none;\">' +\n\t\t\t\t\t\tt('core', 'Password protect') + '</label>';\n\t\t\t\t\thtml += '<div id=\"linkPass\">';\n\t\t\t\t\thtml += '<label for=\"linkPassText\" class=\"hidden-visually\">' +\n\t\t\t\t\t\tt('core', 'Password') + '</label>';\n\t\t\t\t\thtml += '<input id=\"linkPassText\" type=\"password\" placeholder=\"' +\n\t\t\t\t\t\tt('core', 'Choose a password for the public link') + '\" />';\n\t\t\t\t\thtml += '<span class=\"icon-loading-small hidden\"></span>';\n\t\t\t\t\thtml += '</div>';\n\n\t\t\t\t\t// FIXME public uploading is not supported in Gallery\n\t\t\t\t\t/*if (itemType === 'folder' && (possiblePermissions & OC.PERMISSION_CREATE) &&\n\t\t\t\t\t publicUploadEnabled === 'yes') {\n\t\t\t\t\t html += '<div id=\"allowPublicUploadWrapper\" style=\"display:none;\">';\n\t\t\t\t\t html += '<span class=\"icon-loading-small hidden\"></span>';\n\t\t\t\t\t html +=\n\t\t\t\t\t '<input type=\"checkbox\" class=\"checkbox checkbox--right\" value=\"1\" name=\"allowPublicUpload\" id=\"sharingDialogAllowPublicUpload\"' +\n\t\t\t\t\t ((allowPublicUploadStatus) ? 'checked=\"checked\"' : '') + ' />';\n\t\t\t\t\t html += '<label for=\"sharingDialogAllowPublicUpload\">' +\n\t\t\t\t\t t('core', 'Allow editing') + '</label>';\n\t\t\t\t\t html += '</div>';\n\t\t\t\t\t }\n\t\t\t\t\t html += '</div>';\n\t\t\t\t\t var mailPublicNotificationEnabled = $(\n\t\t\t\t\t 'input:hidden[name=mailPublicNotificationEnabled]').val();\n\t\t\t\t\t if (mailPublicNotificationEnabled === 'yes') {\n\t\t\t\t\t html += '<form id=\"emailPrivateLink\">';\n\t\t\t\t\t html +=\n\t\t\t\t\t '<input id=\"email\" style=\"display:none; width:62%;\" value=\"\" placeholder=\"' +\n\t\t\t\t\t t('core', 'Email link to person') + '\" type=\"text\" />';\n\t\t\t\t\t html +=\n\t\t\t\t\t '<input id=\"emailButton\" style=\"display:none;\" type=\"submit\" value=\"' +\n\t\t\t\t\t t('core', 'Send') + '\" />';\n\t\t\t\t\t html += '</form>';\n\t\t\t\t\t }*/\n\t\t\t\t}\n\n\t\t\t\thtml += '<div id=\"expiration\">';\n\t\t\t\thtml +=\n\t\t\t\t\t'<input type=\"checkbox\" class=\"checkbox checkbox--right\" ' +\n\t\t\t\t\t'name=\"expirationCheckbox\" id=\"expirationCheckbox\" value=\"1\" />' +\n\t\t\t\t\t'<label for=\"expirationCheckbox\">' +\n\t\t\t\t\tt('core', 'Set expiration date') + '</label>';\n\t\t\t\thtml += '<label for=\"expirationDate\" class=\"hidden-visually\">' +\n\t\t\t\t\tt('core', 'Expiration') + '</label>';\n\t\t\t\thtml += '<input id=\"expirationDate\" type=\"text\" placeholder=\"' +\n\t\t\t\t\tt('core', 'Expiration date') + '\" style=\"display:none; width:90%;\" />';\n\t\t\t\thtml += '<em id=\"defaultExpireMessage\">' + defaultExpireMessage + '</em>';\n\t\t\t\thtml += '</div>';\n\t\t\t\tdropDownEl = $(html);\n\t\t\t\tdropDownEl = dropDownEl.appendTo(appendTo);\n\n\t\t\t\t// trigger remote share info tooltip\n\t\t\t\tif (oc_appconfig.core.remoteShareAllowed) {\n\t\t\t\t\t$('.shareWithRemoteInfo').tooltip({placement: 'top'});\n\t\t\t\t}\n\n\t\t\t\t//Get owner avatars\n\t\t\t\tif (oc_config.enable_avatars === true && data !== false && data[0] !== false &&\n\t\t\t\t\t!_.isUndefined(data[0]) && !_.isUndefined(data[0].uid_file_owner)) {\n\t\t\t\t\tdropDownEl.find(\".avatar\").avatar(data[0].uid_file_owner, 32);\n\t\t\t\t}\n\n\t\t\t\t// Reset item shares\n\t\t\t\tthis.itemShares = [];\n\t\t\t\tthis.currentShares = {};\n\t\t\t\tif (data) {\n\t\t\t\t\t$.each(data, function (index, share) {\n\t\t\t\t\t\tif (share.share_type === self.SHARE_TYPE_LINK) {\n\t\t\t\t\t\t\tself.showLink(share.id, share.token, share.share_with);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (share.share_with !== OC.currentUser) {\n\t\t\t\t\t\t\t\tif (share.share_type === self.SHARE_TYPE_REMOTE) {\n\t\t\t\t\t\t\t\t\tself._addShareWith(share.id,\n\t\t\t\t\t\t\t\t\t\tshare.share_type,\n\t\t\t\t\t\t\t\t\t\tshare.share_with,\n\t\t\t\t\t\t\t\t\t\tshare.share_with_displayname,\n\t\t\t\t\t\t\t\t\t\tshare.permissions,\n\t\t\t\t\t\t\t\t\t\tOC.PERMISSION_READ | OC.PERMISSION_UPDATE |\n\t\t\t\t\t\t\t\t\t\tOC.PERMISSION_CREATE,\n\t\t\t\t\t\t\t\t\t\tshare.mail_send,\n\t\t\t\t\t\t\t\t\t\tfalse);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tself._addShareWith(share.id,\n\t\t\t\t\t\t\t\t\t\tshare.share_type,\n\t\t\t\t\t\t\t\t\t\tshare.share_with,\n\t\t\t\t\t\t\t\t\t\tshare.share_with_displayname,\n\t\t\t\t\t\t\t\t\t\tshare.permissions,\n\t\t\t\t\t\t\t\t\t\tpossiblePermissions,\n\t\t\t\t\t\t\t\t\t\tshare.mail_send,\n\t\t\t\t\t\t\t\t\t\tfalse);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (share.expiration != null) {\n\t\t\t\t\t\t\tvar expireDate = moment(share.expiration, 'YYYY-MM-DD').format(\n\t\t\t\t\t\t\t\t'DD-MM-YYYY');\n\t\t\t\t\t\t\tself.showExpirationDate(expireDate, share.stime);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$('#shareWith').autocomplete({\n\t\t\t\t\tminLength: 2,\n\t\t\t\t\tdelay: 750,\n\t\t\t\t\tsource: function (search, response) {\n\t\t\t\t\t\tvar $loading = $('#dropdown .shareWithLoading');\n\t\t\t\t\t\t$loading.removeClass('hidden');\n\t\t\t\t\t\t// Can be replaced with Sharee API\n\t\t\t\t\t\t// https://github.com/owncloud/core/pull/18234\n\t\t\t\t\t\t$.get(OC.filePath('core', 'ajax', 'share.php'), {\n\t\t\t\t\t\t\tfetch: 'getShareWith',\n\t\t\t\t\t\t\tsearch: search.term.trim(),\n\t\t\t\t\t\t\tlimit: 200,\n\t\t\t\t\t\t\titemShares: this.itemShares,\n\t\t\t\t\t\t\titemType: itemType\n\t\t\t\t\t\t}, function (result) {\n\t\t\t\t\t\t\t$loading.addClass('hidden');\n\t\t\t\t\t\t\tif (result.status == 'success' && result.data.length > 0) {\n\t\t\t\t\t\t\t\t$(\"#shareWith\").autocomplete(\"option\", \"autoFocus\", true);\n\t\t\t\t\t\t\t\tresponse(result.data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresponse();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).fail(function () {\n\t\t\t\t\t\t\t$('#dropdown').find('.shareWithLoading').addClass('hidden');\n\t\t\t\t\t\t\tOC.Notification.show(t('core', 'An error occured. Please try again'));\n\t\t\t\t\t\t\twindow.setTimeout(OC.Notification.hide, 5000);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tfocus: function (event) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t},\n\t\t\t\t\tselect: function (event, selected) {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\tvar $dropDown = $('#dropdown');\n\t\t\t\t\t\tvar itemSource = $dropDown.data('item-source');\n\t\t\t\t\t\tvar expirationDate = '';\n\t\t\t\t\t\tif ($('#expirationCheckbox').is(':checked') === true) {\n\t\t\t\t\t\t\texpirationDate = $(\"#expirationDate\").val();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar shareType = selected.item.value.shareType;\n\t\t\t\t\t\tvar shareWith = selected.item.value.shareWith;\n\t\t\t\t\t\t$(this).val(shareWith);\n\t\t\t\t\t\t// Default permissions are Edit (CRUD) and Share\n\t\t\t\t\t\t// Check if these permissions are possible\n\t\t\t\t\t\tvar permissions = OC.PERMISSION_READ;\n\t\t\t\t\t\tif (shareType === Gallery.Share.SHARE_TYPE_REMOTE) {\n\t\t\t\t\t\t\tpermissions =\n\t\t\t\t\t\t\t\tOC.PERMISSION_CREATE | OC.PERMISSION_UPDATE | OC.PERMISSION_READ;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (possiblePermissions & OC.PERMISSION_UPDATE) {\n\t\t\t\t\t\t\t\tpermissions = permissions | OC.PERMISSION_UPDATE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (possiblePermissions & OC.PERMISSION_CREATE) {\n\t\t\t\t\t\t\t\tpermissions = permissions | OC.PERMISSION_CREATE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (possiblePermissions & OC.PERMISSION_DELETE) {\n\t\t\t\t\t\t\t\tpermissions = permissions | OC.PERMISSION_DELETE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (oc_appconfig.core.resharingAllowed &&\n\t\t\t\t\t\t\t\t(possiblePermissions & OC.PERMISSION_SHARE)) {\n\t\t\t\t\t\t\t\tpermissions = permissions | OC.PERMISSION_SHARE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar $input = $(this);\n\t\t\t\t\t\tvar $loading = $dropDown.find('.shareWithLoading');\n\t\t\t\t\t\t$loading.removeClass('hidden');\n\t\t\t\t\t\t$input.val(t('core', 'Adding user...'));\n\t\t\t\t\t\t$input.prop('disabled', true);\n\t\t\t\t\t\tGallery.Share.share(\n\t\t\t\t\t\t\titemSource,\n\t\t\t\t\t\t\tshareType,\n\t\t\t\t\t\t\tshareWith,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tpermissions,\n\t\t\t\t\t\t\tfunction (data) {\n\t\t\t\t\t\t\t\tvar posPermissions = possiblePermissions;\n\t\t\t\t\t\t\t\tif (shareType === Gallery.Share.SHARE_TYPE_REMOTE) {\n\t\t\t\t\t\t\t\t\tposPermissions = permissions;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tGallery.Share._addShareWith(data.id, shareType, shareWith,\n\t\t\t\t\t\t\t\t\tselected.item.label,\n\t\t\t\t\t\t\t\t\tpermissions, posPermissions);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t$input.prop('disabled', false);\n\t\t\t\t\t\t$loading.addClass('hidden');\n\t\t\t\t\t\t$('#shareWith').val('');\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).data(\"ui-autocomplete\")._renderItem = function (ul, item) {\n\t\t\t\t\t// customize internal _renderItem function to display groups and users\n\t\t\t\t\t// differently\n\t\t\t\t\tvar insert = $(\"<a>\");\n\t\t\t\t\tvar text = item.label;\n\t\t\t\t\tif (item.value.shareType === Gallery.Share.SHARE_TYPE_GROUP) {\n\t\t\t\t\t\ttext = text + ' (' + t('core', 'group') + ')';\n\t\t\t\t\t} else if (item.value.shareType === Gallery.Share.SHARE_TYPE_REMOTE) {\n\t\t\t\t\t\ttext = text + ' (' + t('core', 'remote') + ')';\n\t\t\t\t\t}\n\t\t\t\t\tinsert.text(text);\n\t\t\t\t\tif (item.value.shareType === Gallery.Share.SHARE_TYPE_GROUP) {\n\t\t\t\t\t\tinsert = insert.wrapInner('<strong></strong>');\n\t\t\t\t\t}\n\t\t\t\t\treturn $(\"<li>\")\n\t\t\t\t\t\t.addClass(\n\t\t\t\t\t\t\t(item.value.shareType ===\n\t\t\t\t\t\t\tGallery.Share.SHARE_TYPE_GROUP) ? 'group' : 'user')\n\t\t\t\t\t\t.append(insert)\n\t\t\t\t\t\t.appendTo(ul);\n\t\t\t\t};\n\t\t\t\t// FIXME Emailing links is not supported in Gallery\n\t\t\t\t/*if (link && linksAllowed && $('#email').length != 0) {\n\t\t\t\t $('#email').autocomplete({\n\t\t\t\t minLength: 1,\n\t\t\t\t source: function (search, response) {\n\t\t\t\t $.get(OC.filePath('core', 'ajax', 'share.php'), {\n\t\t\t\t fetch: 'getShareWithEmail',\n\t\t\t\t search: search.term\n\t\t\t\t }, function (result) {\n\t\t\t\t if (result.status == 'success' && result.data.length > 0) {\n\t\t\t\t response(result.data);\n\t\t\t\t }\n\t\t\t\t });\n\t\t\t\t },\n\t\t\t\t select: function (event, item) {\n\t\t\t\t $('#email').val(item.item.email);\n\t\t\t\t return false;\n\t\t\t\t }\n\t\t\t\t })\n\t\t\t\t .data(\"ui-autocomplete\")._renderItem = function (ul, item) {\n\t\t\t\t return $('<li>')\n\t\t\t\t .append('<a>' + escapeHTML(item.displayname) + \"<br>\" +\n\t\t\t\t escapeHTML(item.email) + '</a>')\n\t\t\t\t .appendTo(ul);\n\t\t\t\t };\n\t\t\t\t }*/\n\n\t\t\t} else {\n\t\t\t\thtml += '<input id=\"shareWith\" type=\"text\" placeholder=\"' +\n\t\t\t\t\tt('core', 'Resharing is not allowed') +\n\t\t\t\t\t'\" style=\"width:90%;\" disabled=\"disabled\"/>';\n\t\t\t\thtml += '</div>';\n\t\t\t\tdropDownEl = $(html);\n\t\t\t\tdropDownEl.appendTo(appendTo);\n\t\t\t}\n\t\t\tdropDownEl.attr('data-item-source-name', filename);\n\t\t\t$('#dropdown').slideDown(OC.menuSpeed, function () {\n\t\t\t\tGallery.Share.droppedDown = true;\n\t\t\t});\n\t\t\tif ($('html').hasClass('lte9')) {\n\t\t\t\t$('#dropdown input[placeholder]').placeholder();\n\t\t\t}\n\t\t\t$('#shareWith').focus();\n\t\t},\n\t\t/**\n\t\t *\n\t\t * @param callback\n\t\t */\n\t\thideDropDown: function (callback) {\n\t\t\tthis.currentShares = null;\n\t\t\t$('#dropdown').slideUp(OC.menuSpeed, function () {\n\t\t\t\tGallery.Share.droppedDown = false;\n\t\t\t\t$('#dropdown').remove();\n\t\t\t\tif (typeof FileActions !== 'undefined') {\n\t\t\t\t\t$('tr').removeClass('mouseOver');\n\t\t\t\t}\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback.call();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t *\n\t\t * @param id\n\t\t * @param token\n\t\t * @param password\n\t\t */\n\t\tshowLink: function (id, token, password) {\n\t\t\tvar $linkCheckbox = $('#linkCheckbox');\n\t\t\tthis.itemShares[this.SHARE_TYPE_LINK] = true;\n\t\t\t$linkCheckbox.attr('checked', true);\n\t\t\t$linkCheckbox.attr('data-id', id);\n\t\t\tvar $linkText = $('#linkText');\n\n\t\t\tvar link = parent.location.protocol + '//' + location.host +\n\t\t\t\tOC.generateUrl('/apps/' + Gallery.appName + '/s/') + token;\n\n\t\t\t$linkText.val(link);\n\t\t\t$linkText.slideDown(OC.menuSpeed);\n\t\t\t$linkText.css('display', 'block');\n\t\t\tif (oc_appconfig.core.enforcePasswordForPublicLink === false || password === null) {\n\t\t\t\t$('#showPassword+label').show();\n\t\t\t}\n\t\t\tif (password != null) {\n\t\t\t\t$('#linkPass').slideDown(OC.menuSpeed);\n\t\t\t\t$('#showPassword').attr('checked', true);\n\t\t\t\t$('#linkPassText').attr('placeholder', '**********');\n\t\t\t}\n\t\t\t$('#expiration').show();\n\t\t\t$('#emailPrivateLink #email').show();\n\t\t\t$('#emailPrivateLink #emailButton').show();\n\t\t\t$('#allowPublicUploadWrapper').show();\n\t\t},\n\t\t/**\n\t\t *\n\t\t */\n\t\thideLink: function () {\n\t\t\t$('#linkText').slideUp(OC.menuSpeed);\n\t\t\t$('#defaultExpireMessage').hide();\n\t\t\t$('#showPassword+label').hide();\n\t\t\t$('#linkPass').slideUp(OC.menuSpeed);\n\t\t\t$('#emailPrivateLink #email').hide();\n\t\t\t$('#emailPrivateLink #emailButton').hide();\n\t\t\t$('#allowPublicUploadWrapper').hide();\n\t\t},\n\t\t/**\n\t\t * Displays the expiration date field\n\t\t *\n\t\t * @param {String} date current expiration date\n\t\t * @param {Date|Number|String} [shareTime] share timestamp in seconds, defaults to now\n\t\t */\n\t\tshowExpirationDate: function (date, shareTime) {\n\t\t\tvar $expirationDate = $('#expirationDate');\n\t\t\tvar $expirationCheckbox = $('#expirationCheckbox');\n\t\t\tvar now = new Date();\n\t\t\t// min date should always be the next day\n\t\t\tvar minDate = new Date();\n\t\t\tminDate.setDate(minDate.getDate() + 1);\n\t\t\tvar datePickerOptions = {\n\t\t\t\tminDate: minDate,\n\t\t\t\tmaxDate: null\n\t\t\t};\n\t\t\t// TODO: hack: backend returns string instead of integer\n\t\t\tshareTime = this._parseTime(shareTime);\n\t\t\tif (_.isNumber(shareTime)) {\n\t\t\t\tshareTime = new Date(shareTime * 1000);\n\t\t\t}\n\t\t\tif (!shareTime) {\n\t\t\t\tshareTime = now;\n\t\t\t}\n\t\t\t$expirationCheckbox.attr('checked', true);\n\t\t\t$expirationDate.val(date);\n\t\t\t$expirationDate.slideDown(OC.menuSpeed);\n\t\t\t$expirationDate.css('display', 'block');\n\t\t\t$expirationDate.datepicker({\n\t\t\t\tdateFormat: 'dd-mm-yy'\n\t\t\t});\n\t\t\tif (oc_appconfig.core.defaultExpireDateEnforced) {\n\t\t\t\t$expirationCheckbox.attr('disabled', true);\n\t\t\t\tshareTime = OC.Util.stripTime(shareTime).getTime();\n\t\t\t\t// max date is share date + X days\n\t\t\t\tdatePickerOptions.maxDate =\n\t\t\t\t\tnew Date(shareTime + oc_appconfig.core.defaultExpireDate * 24 * 3600 * 1000);\n\t\t\t}\n\t\t\tif (oc_appconfig.core.defaultExpireDateEnabled) {\n\t\t\t\t$('#defaultExpireMessage').slideDown(OC.menuSpeed);\n\t\t\t}\n\t\t\t$.datepicker.setDefaults(datePickerOptions);\n\t\t},\n\t\t/**\n\t\t * Get the default Expire date\n\t\t *\n\t\t * @return {String} The expire date\n\t\t */\n\t\tgetDefaultExpirationDate: function () {\n\t\t\tvar expireDateString = '';\n\t\t\tif (oc_appconfig.core.defaultExpireDateEnabled) {\n\t\t\t\tvar date = new Date().getTime();\n\t\t\t\tvar expireAfterMs = oc_appconfig.core.defaultExpireDate * 24 * 60 * 60 * 1000;\n\t\t\t\tvar expireDate = new Date(date + expireAfterMs);\n\t\t\t\tvar month = expireDate.getMonth() + 1;\n\t\t\t\tvar year = expireDate.getFullYear();\n\t\t\t\tvar day = expireDate.getDate();\n\t\t\t\texpireDateString = year + \"-\" + month + '-' + day + ' 00:00:00';\n\t\t\t}\n\t\t\treturn expireDateString;\n\t\t},\n\t\t/**\n\t\t * Loads all shares associated with a path\n\t\t *\n\t\t * @param path\n\t\t *\n\t\t * @returns {Gallery.Share.Types.ShareInfo|Boolean}\n\t\t * @private\n\t\t */\n\t\t_loadShares: function (path) {\n\t\t\tvar data = false;\n\t\t\tvar url = OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares' + '?format=json';\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\ttype: 'GET',\n\t\t\t\tdata: {\n\t\t\t\t\tpath: path,\n\t\t\t\t\tshared_with_me: true\n\t\t\t\t},\n\t\t\t\tasync: false\n\t\t\t}).done(function (result) {\n\t\t\t\tdata = result.ocs.data;\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: url,\n\t\t\t\t\ttype: 'GET',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tpath: path,\n\t\t\t\t\t\treshares: true\n\t\t\t\t\t},\n\t\t\t\t\tasync: false\n\t\t\t\t}).done(function (result) {\n\t\t\t\t\tdata = _.union(data, result.ocs.data);\n\t\t\t\t})\n\n\t\t\t});\n\n\t\t\tif (data === false) {\n\t\t\t\tOC.dialogs.alert(t('gallery', 'Error while retrieving shares'),\n\t\t\t\t\tt('core', 'Error'));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\t\t/**\n\t\t *\n\t\t * @param shareId\n\t\t * @param shareType\n\t\t * @param shareWith\n\t\t * @param shareWithDisplayName\n\t\t * @param permissions\n\t\t * @param possiblePermissions\n\t\t * @param mailSend\n\t\t *\n\t\t * @private\n\t\t */\n\t\t_addShareWith: function (shareId, shareType, shareWith, shareWithDisplayName, permissions, possiblePermissions, mailSend) {\n\t\t\tvar shareItem = {\n\t\t\t\tshare_id: shareId,\n\t\t\t\tshare_type: shareType,\n\t\t\t\tshare_with: shareWith,\n\t\t\t\tshare_with_displayname: shareWithDisplayName,\n\t\t\t\tpermissions: permissions\n\t\t\t};\n\t\t\tif (shareType === this.SHARE_TYPE_GROUP) {\n\t\t\t\tshareWithDisplayName = shareWithDisplayName + \" (\" + t('core', 'group') + ')';\n\t\t\t}\n\t\t\tif (shareType === this.SHARE_TYPE_REMOTE) {\n\t\t\t\tshareWithDisplayName = shareWithDisplayName + \" (\" + t('core', 'remote') + ')';\n\t\t\t}\n\t\t\tif (!this.itemShares[shareType]) {\n\t\t\t\tthis.itemShares[shareType] = [];\n\t\t\t}\n\t\t\tthis.itemShares[shareType].push(shareWith);\n\n\t\t\tvar editChecked = '',\n\t\t\t\tcreateChecked = '',\n\t\t\t\tupdateChecked = '',\n\t\t\t\tdeleteChecked = '',\n\t\t\t\tshareChecked = '';\n\t\t\tif (permissions & OC.PERMISSION_CREATE) {\n\t\t\t\tcreateChecked = 'checked=\"checked\"';\n\t\t\t\teditChecked = 'checked=\"checked\"';\n\t\t\t}\n\t\t\tif (permissions & OC.PERMISSION_UPDATE) {\n\t\t\t\tupdateChecked = 'checked=\"checked\"';\n\t\t\t\teditChecked = 'checked=\"checked\"';\n\t\t\t}\n\t\t\tif (permissions & OC.PERMISSION_DELETE) {\n\t\t\t\tdeleteChecked = 'checked=\"checked\"';\n\t\t\t\teditChecked = 'checked=\"checked\"';\n\t\t\t}\n\t\t\tif (permissions & OC.PERMISSION_SHARE) {\n\t\t\t\tshareChecked = 'checked=\"checked\"';\n\t\t\t}\n\t\t\tvar html = '<li style=\"clear: both;\" ' +\n\t\t\t\t'data-id=\"' + escapeHTML(shareId) + '\"' +\n\t\t\t\t'data-share-type=\"' + escapeHTML(shareType) + '\"' +\n\t\t\t\t'data-share-with=\"' + escapeHTML(shareWith) + '\"' +\n\t\t\t\t'title=\"' + escapeHTML(shareWith) + '\">';\n\t\t\tvar showCrudsButton;\n\t\t\thtml +=\n\t\t\t\t'<a href=\"#\" class=\"unshare\"><img class=\"svg\" alt=\"' + t('core', 'Unshare') +\n\t\t\t\t'\" title=\"' + t('core', 'Unshare') + '\" src=\"' +\n\t\t\t\tOC.imagePath('core', 'actions/delete') + '\"/></a>';\n\t\t\tif (oc_config.enable_avatars === true) {\n\t\t\t\thtml += '<div class=\"avatar\"></div>';\n\t\t\t}\n\t\t\thtml += '<span class=\"username\">' + escapeHTML(shareWithDisplayName) + '</span>';\n\t\t\tvar mailNotificationEnabled = $('input:hidden[name=mailNotificationEnabled]').val();\n\t\t\tif (mailNotificationEnabled === 'yes' &&\n\t\t\t\tshareType !== this.SHARE_TYPE_REMOTE) {\n\t\t\t\tvar checked = '';\n\t\t\t\tif (mailSend === '1') {\n\t\t\t\t\tchecked = 'checked';\n\t\t\t\t}\n\t\t\t\thtml +=\n\t\t\t\t\t'<input type=\"checkbox\" class=\"checkbox checkbox--right\" ' +\n\t\t\t\t\t'name=\"mailNotification\" class=\"mailNotification\" ' +\n\t\t\t\t\tchecked + ' />';\n\t\t\t\thtml +=\n\t\t\t\t\t'<label>' + t('core', 'notify by email') + '</label>';\n\t\t\t}\n\t\t\tif (oc_appconfig.core.resharingAllowed &&\n\t\t\t\t(possiblePermissions & OC.PERMISSION_SHARE)) {\n\t\t\t\thtml += '<input id=\"canShare-' + escapeHTML(shareWith) +\n\t\t\t\t\t'\" type=\"checkbox\" class=\"permissions checkbox checkbox--right\" name=\"share\" ' +\n\t\t\t\t\tshareChecked + ' data-permissions=\"' + OC.PERMISSION_SHARE + '\" />';\n\t\t\t\thtml += '<label for=\"canShare-' + escapeHTML(shareWith) + '\">' +\n\t\t\t\t\tt('core', 'can share') + '</label>';\n\t\t\t}\n\t\t\tif (possiblePermissions & OC.PERMISSION_CREATE ||\n\t\t\t\tpossiblePermissions & OC.PERMISSION_UPDATE ||\n\t\t\t\tpossiblePermissions & OC.PERMISSION_DELETE) {\n\t\t\t\thtml += '<input id=\"canEdit-' + escapeHTML(shareWith) +\n\t\t\t\t\t'\" type=\"checkbox\" class=\"permissions checkbox checkbox--right\" name=\"edit\" ' +\n\t\t\t\t\teditChecked + ' />';\n\t\t\t\thtml += '<label for=\"canEdit-' + escapeHTML(shareWith) + '\">' +\n\t\t\t\t\tt('core', 'can edit') + '</label>';\n\t\t\t}\n\t\t\tif (shareType !== this.SHARE_TYPE_REMOTE) {\n\t\t\t\tshowCrudsButton = '<a href=\"#\" class=\"showCruds\"><img class=\"svg\" alt=\"' +\n\t\t\t\t\tt('core', 'access control') + '\" src=\"' +\n\t\t\t\t\tOC.imagePath('core', 'actions/triangle-s') + '\"/></a>';\n\t\t\t}\n\t\t\thtml += '<div class=\"cruds\" style=\"display:none;\">';\n\t\t\tif (possiblePermissions & OC.PERMISSION_CREATE) {\n\t\t\t\thtml += '<input id=\"canCreate-' + escapeHTML(shareWith) +\n\t\t\t\t\t'\" type=\"checkbox\" class=\"permissions checkbox checkbox--right\" name=\"create\" ' +\n\t\t\t\t\tcreateChecked + ' data-permissions=\"' + OC.PERMISSION_CREATE + '\"/>';\n\t\t\t\thtml += '<label for=\"canCreate-' + escapeHTML(shareWith) + '\">' +\n\t\t\t\t\tt('core', 'create') + '</label>';\n\t\t\t}\n\t\t\tif (possiblePermissions & OC.PERMISSION_UPDATE) {\n\t\t\t\thtml += '<input id=\"canUpdate-' + escapeHTML(shareWith) +\n\t\t\t\t\t'\" type=\"checkbox\" class=\"permissions checkbox checkbox--right\" name=\"update\" ' +\n\t\t\t\t\tupdateChecked + ' data-permissions=\"' + OC.PERMISSION_UPDATE + '\"/>';\n\t\t\t\thtml += '<label for=\"canUpdate-' + escapeHTML(shareWith) + '\">' +\n\t\t\t\t\tt('core', 'change') + '</label>';\n\t\t\t}\n\t\t\tif (possiblePermissions & OC.PERMISSION_DELETE) {\n\t\t\t\thtml += '<input id=\"canDelete-' + escapeHTML(shareWith) +\n\t\t\t\t\t'\" type=\"checkbox\" class=\"permissions checkbox checkbox--right\" name=\"delete\" ' +\n\t\t\t\t\tdeleteChecked + ' data-permissions=\"' + OC.PERMISSION_DELETE + '\"/>';\n\t\t\t\thtml += '<label for=\"canDelete-' + escapeHTML(shareWith) + '\">' +\n\t\t\t\t\tt('core', 'delete') + '</label>';\n\t\t\t}\n\t\t\thtml += '</div>';\n\t\t\thtml += '</li>';\n\t\t\thtml = $(html).appendTo('#shareWithList');\n\t\t\tif (oc_config.enable_avatars === true) {\n\t\t\t\tif (shareType === this.SHARE_TYPE_USER) {\n\t\t\t\t\thtml.find('.avatar').avatar(escapeHTML(shareWith), 32);\n\t\t\t\t} else {\n\t\t\t\t\t//Add sharetype to generate different seed if there is a group and use with\n\t\t\t\t\t// the same name\n\t\t\t\t\thtml.find('.avatar').imageplaceholder(\n\t\t\t\t\t\tescapeHTML(shareWith) + ' ' + shareType);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// insert cruds button into last label element\n\t\t\tvar lastLabel = html.find('>label:last');\n\t\t\tif (lastLabel.exists()) {\n\t\t\t\tlastLabel.append(showCrudsButton);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thtml.find('.cruds').before(showCrudsButton);\n\t\t\t}\n\t\t\tif (!this.currentShares[shareType]) {\n\t\t\t\tthis.currentShares[shareType] = [];\n\t\t\t}\n\t\t\tthis.currentShares[shareType].push(shareItem);\n\t\t},\n\t\t/**\n\t\t * Parses a string to an valid integer (unix timestamp)\n\t\t * @param time\n\t\t * @returns {*}\n\t\t * @internal Only used to work around a bug in the backend\n\t\t * @private\n\t\t */\n\t\t_parseTime: function (time) {\n\t\t\tif (_.isString(time)) {\n\t\t\t\t// skip empty strings and hex values\n\t\t\t\tif (time === '' || (time.length > 1 && time[0] === '0' && time[1] === 'x')) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\ttime = parseInt(time, 10);\n\t\t\t\tif (isNaN(time)) {\n\t\t\t\t\ttime = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn time;\n\t\t}\n\t};\n\n\tGallery.Share = Share;\n})(jQuery, Gallery);\n\n$(document).ready(function () {\n\n\tif (typeof monthNames != 'undefined') {\n\t\t// min date should always be the next day\n\t\tvar minDate = new Date();\n\t\tminDate.setDate(minDate.getDate() + 1);\n\t\t$.datepicker.setDefaults({\n\t\t\tmonthNames: monthNames,\n\t\t\tmonthNamesShort: $.map(monthNames, function (v) {\n\t\t\t\treturn v.slice(0, 3) + '.';\n\t\t\t}),\n\t\t\tdayNames: dayNames,\n\t\t\tdayNamesMin: $.map(dayNames, function (v) {\n\t\t\t\treturn v.slice(0, 2);\n\t\t\t}),\n\t\t\tdayNamesShort: $.map(dayNames, function (v) {\n\t\t\t\treturn v.slice(0, 3) + '.';\n\t\t\t}),\n\t\t\tfirstDay: firstDay,\n\t\t\tminDate: minDate\n\t\t});\n\t}\n\t$(document).on('click', 'a.share', function (event) {\n\t\tevent.stopPropagation();\n\t\tif ($(this).data('item-type') !== undefined && $(this).data('path') !== undefined) {\n\t\t\tvar itemType = $(this).data('item-type');\n\t\t\tvar path = $(this).data('path');\n\t\t\tvar appendTo = $(this).parent().parent();\n\t\t\tvar link = false;\n\t\t\tvar possiblePermissions = $(this).data('possible-permissions');\n\t\t\tif ($(this).data('link') !== undefined && $(this).data('link') == true) {\n\t\t\t\tlink = true;\n\t\t\t}\n\t\t\tif (Gallery.Share.droppedDown) {\n\t\t\t\tif (path != $('#dropdown').data('path')) {\n\t\t\t\t\tGallery.Share.hideDropDown(function () {\n\t\t\t\t\t\tGallery.Share.showDropDown(itemType, path, appendTo, link,\n\t\t\t\t\t\t\tpossiblePermissions);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tGallery.Share.hideDropDown();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tGallery.Share.showDropDown(itemType, path, appendTo, link, possiblePermissions);\n\t\t\t}\n\t\t}\n\t});\n\n\t$(this).click(function (event) {\n\t\tvar target = $(event.target);\n\t\tvar isMatched = !target.is('.drop, .ui-datepicker-next, .ui-datepicker-prev, .ui-icon')\n\t\t\t&& !target.closest('#ui-datepicker-div').length &&\n\t\t\t!target.closest('.ui-autocomplete').length;\n\t\tif (Gallery.Share.droppedDown && isMatched &&\n\t\t\t$('#dropdown').has(event.target).length === 0) {\n\t\t\tGallery.Share.hideDropDown();\n\t\t}\n\t});\n\n\t$(document).on('click', '#dropdown .showCruds', function () {\n\t\t$(this).closest('li').find('.cruds').toggle();\n\t\treturn false;\n\t});\n\n\t$(document).on('click', '#dropdown .unshare', function () {\n\t\tvar $li = $(this).closest('li');\n\t\tvar shareType = $li.data('share-type');\n\t\tvar shareWith = $li.attr('data-share-with');\n\t\tvar shareId = $li.attr('data-id');\n\t\tvar $button = $(this);\n\n\t\tif (!$button.is('a')) {\n\t\t\t$button = $button.closest('a');\n\t\t}\n\n\t\tif ($button.hasClass('icon-loading-small')) {\n\t\t\t// deletion in progress\n\t\t\treturn false;\n\t\t}\n\t\t$button.empty().addClass('icon-loading-small');\n\t\tGallery.Share.unshare(shareId, function () {\n\t\t\t$li.remove();\n\t\t\tvar index = Gallery.Share.itemShares[shareType].indexOf(shareWith);\n\t\t\tGallery.Share.itemShares[shareType].splice(index, 1);\n\t\t\t// updated list of shares\n\t\t\tGallery.Share.currentShares[shareType].splice(index, 1);\n\t\t});\n\n\t\treturn false;\n\t});\n\n\t$(document).on('change', '#dropdown .permissions', function () {\n\t\tvar $li = $(this).closest('li');\n\t\tvar checkboxes = $('.permissions', $li);\n\t\tif ($(this).attr('name') == 'edit') {\n\t\t\tvar checked = $(this).is(':checked');\n\t\t\t// Check/uncheck Create, Update, and Delete checkboxes if Edit is checked/unck\n\t\t\t$(checkboxes).filter('input[name=\"create\"]').attr('checked', checked);\n\t\t\t$(checkboxes).filter('input[name=\"update\"]').attr('checked', checked);\n\t\t\t$(checkboxes).filter('input[name=\"delete\"]').attr('checked', checked);\n\t\t} else {\n\t\t\t// Uncheck Edit if Create, Update, and Delete are not checked\n\t\t\tif (!$(this).is(':checked')\n\t\t\t\t&& !$(checkboxes).filter('input[name=\"create\"]').is(':checked')\n\t\t\t\t&& !$(checkboxes).filter('input[name=\"update\"]').is(':checked')\n\t\t\t\t&& !$(checkboxes).filter('input[name=\"delete\"]').is(':checked')) {\n\t\t\t\t$(checkboxes).filter('input[name=\"edit\"]').attr('checked', false);\n\t\t\t\t// Check Edit if Create, Update, or Delete is checked\n\t\t\t} else if (($(this).attr('name') == 'create'\n\t\t\t\t|| $(this).attr('name') == 'update'\n\t\t\t\t|| $(this).attr('name') == 'delete')) {\n\t\t\t\t$(checkboxes).filter('input[name=\"edit\"]').attr('checked', true);\n\t\t\t}\n\t\t}\n\t\tvar permissions = OC.PERMISSION_READ;\n\t\t$(checkboxes).filter(':not(input[name=\"edit\"])').filter(':checked').each(\n\t\t\tfunction (index, checkbox) {\n\t\t\t\tpermissions |= $(checkbox).data('permissions');\n\t\t\t});\n\n\t\tGallery.Share.setPermissions($li.attr('data-id'), permissions);\n\t});\n\n\t$(document).on('change', '#dropdown #linkCheckbox', function () {\n\t\tvar $dropDown = $('#dropdown');\n\t\tvar path = $dropDown.data('item-source');\n\t\tvar shareId = $('#linkCheckbox').data('id');\n\t\tvar shareWith = '';\n\t\tvar publicUpload = 0;\n\t\tvar $loading = $dropDown.find('#link .icon-loading-small');\n\t\tvar $button = $(this);\n\n\t\tif (!$loading.hasClass('hidden')) {\n\t\t\t// already in progress\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.checked) {\n\t\t\t// Reset password placeholder\n\t\t\t$('#linkPassText').attr('placeholder',\n\t\t\t\tt('core', 'Choose a password for the public link'));\n\t\t\t// Reset link\n\t\t\t$('#linkText').val('');\n\t\t\t$('#showPassword').prop('checked', false);\n\t\t\t$('#linkPass').hide();\n\t\t\t$('#sharingDialogAllowPublicUpload').prop('checked', false);\n\t\t\t$('#expirationCheckbox').prop('checked', false);\n\t\t\t$('#expirationDate').hide();\n\t\t\tvar expireDateString = '';\n\t\t\t// Create a link\n\t\t\tif (oc_appconfig.core.enforcePasswordForPublicLink === false) {\n\t\t\t\texpireDateString = Gallery.Share.getDefaultExpirationDate();\n\t\t\t\t$loading.removeClass('hidden');\n\t\t\t\t$button.addClass('hidden');\n\t\t\t\t$button.prop('disabled', true);\n\t\t\t\tGallery.Share.share(\n\t\t\t\t\tpath,\n\t\t\t\t\tGallery.Share.SHARE_TYPE_LINK,\n\t\t\t\t\tshareWith,\n\t\t\t\t\tpublicUpload,\n\t\t\t\t\tnull,\n\t\t\t\t\tOC.PERMISSION_READ,\n\t\t\t\t\tfunction (data) {\n\t\t\t\t\t\t$loading.addClass('hidden');\n\t\t\t\t\t\t$button.removeClass('hidden');\n\t\t\t\t\t\t$button.prop('disabled', false);\n\t\t\t\t\t\tGallery.Share.showLink(data.id, data.token, null);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t$('#linkPass').slideToggle(OC.menuSpeed);\n\t\t\t\t$('#linkPassText').focus();\n\t\t\t}\n\t\t\tif (expireDateString !== '') {\n\t\t\t\tGallery.Share.showExpirationDate(expireDateString);\n\t\t\t}\n\t\t} else {\n\t\t\t// Delete private link\n\t\t\tGallery.Share.hideLink();\n\t\t\t$('#expiration').slideUp(OC.menuSpeed);\n\t\t\tif ($('#linkText').val() !== '') {\n\t\t\t\t$loading.removeClass('hidden');\n\t\t\t\t$button.addClass('hidden');\n\t\t\t\t$button.prop('disabled', true);\n\t\t\t\tGallery.Share.unshare(shareId, function () {\n\t\t\t\t\t$loading.addClass('hidden');\n\t\t\t\t\t$button.removeClass('hidden');\n\t\t\t\t\t$button.prop('disabled', false);\n\t\t\t\t\tGallery.Share.itemShares[Gallery.Share.SHARE_TYPE_LINK] = false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\t$(document).on('click', '#dropdown #linkText', function () {\n\t\t$(this).focus();\n\t\t$(this).select();\n\t});\n\n\t// Handle the Allow Public Upload Checkbox\n\t// FIXME public uploading is not supported in Gallery\n\t/*$(document).on('click', '#sharingDialogAllowPublicUpload', function () {\n\n\t // Gather data\n\t var $dropDown = $('#dropdown');\n\t var allowPublicUpload = $(this).is(':checked');\n\t var $button = $(this);\n\t var $loading = $dropDown.find('#allowPublicUploadWrapper .icon-loading-small');\n\n\t if (!$loading.hasClass('hidden')) {\n\t // already in progress\n\t return false;\n\t }\n\n\t // Update the share information\n\t $button.addClass('hidden');\n\t $button.prop('disabled', true);\n\t $loading.removeClass('hidden');\n\t //(path, shareType, shareWith, publicUpload, password, permissions)\n\t $.ajax({\n\t url: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares/' + shareId +\n\t '?format=json',\n\t type: 'PUT',\n\t data: {\n\t publicUpload: allowPublicUpload\n\t }\n\t }).done(function () {\n\t $loading.addClass('hidden');\n\t $button.removeClass('hidden');\n\t $button.prop('disabled', false);\n\t });\n\t });*/\n\n\t$(document).on('click', '#dropdown #showPassword', function () {\n\t\t$('#linkPass').slideToggle(OC.menuSpeed);\n\t\tif (!$('#showPassword').is(':checked')) {\n\t\t\tvar shareId = $('#linkCheckbox').data('id');\n\t\t\tvar $loading = $('#showPassword .icon-loading-small');\n\n\t\t\t$loading.removeClass('hidden');\n\t\t\t$.ajax({\n\t\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares/' + shareId +\n\t\t\t\t'?format=json',\n\t\t\t\ttype: 'PUT',\n\t\t\t\tdata: {\n\t\t\t\t\tpassword: null\n\t\t\t\t}\n\t\t\t}).done(function () {\n\t\t\t\t$loading.addClass('hidden');\n\t\t\t\t$('#linkPassText').attr('placeholder',\n\t\t\t\t\tt('core', 'Choose a password for the public link'));\n\t\t\t});\n\t\t} else {\n\t\t\t$('#linkPassText').focus();\n\t\t}\n\t});\n\n\t$(document).on('focusout keyup', '#dropdown #linkPassText', function (event) {\n\t\tvar linkPassText = $('#linkPassText');\n\t\tif (linkPassText.val() != '' && (event.type == 'focusout' || event.keyCode == 13)) {\n\t\t\tvar dropDown = $('#dropdown');\n\t\t\tvar $loading = dropDown.find('#linkPass .icon-loading-small');\n\t\t\tvar shareId = $('#linkCheckbox').data('id');\n\n\t\t\t$loading.removeClass('hidden');\n\t\t\t$.ajax({\n\t\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares/' + shareId +\n\t\t\t\t'?format=json',\n\t\t\t\ttype: 'PUT',\n\t\t\t\tdata: {\n\t\t\t\t\tpassword: $('#linkPassText').val()\n\t\t\t\t}\n\t\t\t}).done(function (data) {\n\t\t\t\t$loading.addClass('hidden');\n\t\t\t\tlinkPassText.val('');\n\t\t\t\tlinkPassText.attr('placeholder', t('core', 'Password protected'));\n\n\t\t\t\tif (oc_appconfig.core.enforcePasswordForPublicLink) {\n\t\t\t\t\tGallery.Share.showLink(data.id, data.token, \"password set\");\n\t\t\t\t}\n\t\t\t}).fail(function (xhr) {\n\t\t\t\tvar result = xhr.responseJSON;\n\t\t\t\t$loading.addClass('hidden');\n\t\t\t\tlinkPassText.val('');\n\t\t\t\tlinkPassText.attr('placeholder', result.data.message);\n\t\t\t});\n\t\t}\n\t});\n\n\t$(document).on('click', '#dropdown #expirationCheckbox', function () {\n\t\tif (this.checked) {\n\t\t\tGallery.Share.showExpirationDate('');\n\t\t} else {\n\t\t\tvar shareId = $('#linkCheckbox').data('id');\n\t\t\t$.ajax({\n\t\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares/' + shareId +\n\t\t\t\t'?format=json',\n\t\t\t\ttype: 'PUT',\n\t\t\t\tdata: {\n\t\t\t\t\texpireDate: ''\n\t\t\t\t}\n\t\t\t}).done(function () {\n\t\t\t\t$('#expirationDate').slideUp(OC.menuSpeed);\n\t\t\t\tif (oc_appconfig.core.defaultExpireDateEnforced === false) {\n\t\t\t\t\t$('#defaultExpireMessage').slideDown(OC.menuSpeed);\n\t\t\t\t}\n\t\t\t}).fail(function () {\n\t\t\t\tOC.dialogs.alert(t('core', 'Error unsetting expiration date'),\n\t\t\t\t\tt('core', 'Error'));\n\t\t\t});\n\t\t}\n\t});\n\n\t$(document).on('change', '#dropdown #expirationDate', function () {\n\t\tvar shareId = $('#linkCheckbox').data('id');\n\n\t\t$(this).tooltip('hide');\n\t\t$(this).removeClass('error');\n\n\t\t$.ajax({\n\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'shares/' + shareId +\n\t\t\t'?format=json',\n\t\t\ttype: 'PUT',\n\t\t\tdata: {\n\t\t\t\texpireDate: $(this).val()\n\t\t\t}\n\t\t}).done(function () {\n\t\t\tif (oc_appconfig.core.defaultExpireDateEnforced === 'no') {\n\t\t\t\t$('#defaultExpireMessage').slideUp(OC.menuSpeed);\n\t\t\t}\n\t\t}).fail(function (xhr) {\n\t\t\tvar result = xhr.responseJSON;\n\t\t\tvar expirationDateField = $('#dropdown #expirationDate');\n\t\t\tif (result && !result.ocs.meta.message) {\n\t\t\t\texpirationDateField.attr('original-title',\n\t\t\t\t\tt('core', 'Error setting expiration date'));\n\t\t\t} else {\n\t\t\t\texpirationDateField.attr('original-title', result.ocs.meta.message);\n\t\t\t}\n\t\t\texpirationDateField.tooltip({placement: 'top'});\n\t\t\texpirationDateField.tooltip('show');\n\t\t\texpirationDateField.addClass('error');\n\t\t});\n\t});\n\n\n\t// FIXME Emailing links is not supported in Gallery\n\t/*$(document).on('submit', '#dropdown #emailPrivateLink', function (event) {\n\t event.preventDefault();\n\t var link = $('#linkText').val();\n\t var itemType = $('#dropdown').data('item-type');\n\t var itemSource = $('#dropdown').data('item-source');\n\t var file = $('tr').filterAttr('data-id', String(itemSource)).data('file');\n\t var email = $('#email').val();\n\t var expirationDate = '';\n\t if ($('#expirationCheckbox').is(':checked') === true) {\n\t expirationDate = $(\"#expirationDate\").val();\n\t }\n\t if (email != '') {\n\t $('#email').prop('disabled', true);\n\t $('#email').val(t('core', 'Sending ...'));\n\t $('#emailButton').prop('disabled', true);\n\n\t $.post(OC.filePath('core', 'ajax', 'share.php'), {\n\t action: 'email',\n\t toaddress: email,\n\t link: link,\n\t itemType: itemType,\n\t itemSource: itemSource,\n\t file: file,\n\t expiration: expirationDate\n\t },\n\t function (result) {\n\t $('#email').prop('disabled', false);\n\t $('#emailButton').prop('disabled', false);\n\t if (result && result.status == 'success') {\n\t $('#email').css('font-weight', 'bold').val(t('core', 'Email sent'));\n\t setTimeout(function () {\n\t $('#email').css('font-weight', 'normal').val('');\n\t }, 2000);\n\t } else {\n\t OC.dialogs.alert(result.data.message, t('core', 'Error while sharing'));\n\t }\n\t });\n\t }\n\t });*/\n\n\t// FIXME Emailing links is not supported in Gallery\n\t/*$(document).on('click', '#dropdown input[name=mailNotification]', function () {\n\t var $li = $(this).closest('li');\n\t var itemType = $('#dropdown').data('item-type');\n\t var itemSource = $('#dropdown').data('item-source');\n\t var action = '';\n\t if (this.checked) {\n\t action = 'informRecipients';\n\t } else {\n\t action = 'informRecipientsDisabled';\n\t }\n\n\t var shareType = $li.data('share-type');\n\t var shareWith = $li.attr('data-share-with');\n\n\t $.post(OC.filePath('core', 'ajax', 'share.php'), {\n\t action: action,\n\t recipient: shareWith,\n\t shareType: shareType,\n\t itemSource: itemSource,\n\t itemType: itemType\n\t }, function (result) {\n\t if (result.status !== 'success') {\n\t OC.dialogs.alert(t('core', result.data.message), t('core', 'Warning'));\n\t }\n\t });\n\n\t });*/\n});\n"], "filenames": ["js/vendor/owncloud/share.js"], "buggy_code_start_loc": [147], "buggy_code_end_loc": [149], "fixing_code_start_loc": [147], "fixing_code_end_loc": [149], "type": "CWE-79", "message": "Cross-site scripting (XSS) vulnerability in share.js in the gallery application in ownCloud Server before 9.0.4 and Nextcloud Server before 9.0.52 allows remote authenticated users to inject arbitrary web script or HTML via a crafted directory name.", "other": {"cve": {"id": "CVE-2016-7419", "sourceIdentifier": "cve@mitre.org", "published": "2016-09-17T21:59:11.777", "lastModified": "2017-04-07T19:38:45.380", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site scripting (XSS) vulnerability in share.js in the gallery application in ownCloud Server before 9.0.4 and Nextcloud Server before 9.0.52 allows remote authenticated users to inject arbitrary web script or HTML via a crafted directory name."}, {"lang": "es", "value": "Vulnerabilidad de XSS en share.js en la aplicaci\u00f3n de galer\u00eda en ownCloud Server en versiones anteriores a 9.0.4 y Nextcloud Server en versiones anteriores a 9.0.52 permite a usuarios remotos autenticados inyectar secuencias de comandos web o HTML arbitrarios a trav\u00e9s de un nombre de directorio manipulado."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:nextcloud:nextcloud_server:*:*:*:*:*:*:*:*", "versionEndIncluding": "9.0.51", "matchCriteriaId": "B7C653C0-53CE-4CC6-99C5-DB1AC94D539B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:owncloud:owncloud:*:*:*:*:*:*:*:*", "versionEndIncluding": "9.0.3", "matchCriteriaId": "AC698542-23B9-4101-BD01-10D2FB0870E9"}]}]}], "references": [{"url": "http://www.securityfocus.com/bid/92373", "source": "cve@mitre.org"}, {"url": "https://github.com/nextcloud/gallery/commit/6933d27afe518967bd1b60e6a7eacd88288929fc", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://hackerone.com/reports/145355", "source": "cve@mitre.org", "tags": ["Exploit", "Mailing List", "Third Party Advisory"]}, {"url": "https://nextcloud.com/security/advisory/?id=nc-sa-2016-001", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}, {"url": "https://owncloud.org/security/advisory/?id=oc-sa-2016-011", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}]}, "github_commit_url": "https://github.com/nextcloud/gallery/commit/6933d27afe518967bd1b60e6a7eacd88288929fc"}}