{"buggy_code": ["<?php\n/**\n * Materia\n * License outlined in licenses folder\n */\n\nclass Controller_Api extends Controller_Rest\n{\n\n\tuse Trait_Apiutils;\n\n\tprotected $_supported_formats = ['json' => 'application/json'];\n\n\tpublic function post_call($version, $format, $method)\n\t{\n\t\t$input = json_decode(Input::post('data', []));\n\n\t\t$result = $this->execute($version, $method, $input);\n\n\t\t$this->no_cache();\n\t\t$this->response($result, 200);\n\t}\n\n\tpublic function get_call($version, $format, $method)\n\t{\n\t\t$data   = array_slice($this->request->route->method_params, 3);\n\t\t$result = $this->execute($version, $method, $data);\n\n\t\t$this->no_cache();\n\t\t$this->response($result, 200);\n\t}\n\n\tprotected function execute($version, $method, $args)\n\t{\n\t\t$api = Materia\\Api::get_version($version);\n\n\t\tif ( ! method_exists($api, $method)) throw new HttpNotFoundException;\n\n\t\ttry\n\t\t{\n\t\t\t$result = call_user_func_array([$api, $method], $args);\n\t\t\treturn $result;\n\t\t}\n\t\tcatch (\\Exception $e)\n\t\t{\n\t\t\tMateria\\Log::profile([get_class($e), get_class($api), $method, json_encode($args)], 'exception');\n\t\t\ttrace($e);\n\t\t}\n\t}\n}\n"], "fixing_code": ["<?php\n/**\n * Materia\n * License outlined in licenses folder\n */\n\nclass Controller_Api extends Controller_Rest\n{\n\n\tuse Trait_Apiutils;\n\n\tprotected $_supported_formats = ['json' => 'application/json'];\n\n\tpublic function before()\n\t{\n\t\t// bare bones CSRF mitigation\n\t\t$headers = \\Input::headers();\n\t\t$header_origin = $headers['Origin'] ?? null;\n\t\t// if Origin is missing - fail immediately\n\t\tif ( ! isset($header_origin) || empty($header_origin))\n\t\t{\n\t\t\tthrow new HttpServerErrorException;\n\t\t}\n\t\t$expected_origin = \\Config::get('materia.urls.root');\n\t\t// URI generation in Fuel adds a trailing slash which may be absent from the Origin header\n\t\t// if it's missing, add it\n\t\tif (substr($header_origin, -1) != '/')\n\t\t{\n\t\t\t$header_origin .= '/';\n\t\t}\n\n\t\t// check to make sure Origin matches the expected root URL first\n\t\tif ($header_origin != $expected_origin)\n\t\t{\n\t\t\tthrow new HttpServerErrorException;\n\t\t}\n\t\t// make sure Referer matches Origin\n\t\tif (substr($headers['Referer'], 0, strlen($header_origin)) != $header_origin)\n\t\t{\n\t\t\tthrow new HttpServerErrorException;\n\t\t}\n\n\t\tparent::before();\n\t}\n\n\tpublic function post_call($version, $format, $method)\n\t{\n\t\t$input = json_decode(Input::post('data', []));\n\n\t\t$result = $this->execute($version, $method, $input);\n\n\t\t$this->no_cache();\n\t\t$this->response($result, 200);\n\t}\n\n\tpublic function get_call($version, $format, $method)\n\t{\n\t\t$data   = array_slice($this->request->route->method_params, 3);\n\t\t$result = $this->execute($version, $method, $data);\n\n\t\t$this->no_cache();\n\t\t$this->response($result, 200);\n\t}\n\n\tprotected function execute($version, $method, $args)\n\t{\n\t\t$api = Materia\\Api::get_version($version);\n\n\t\tif ( ! method_exists($api, $method)) throw new HttpNotFoundException;\n\n\t\ttry\n\t\t{\n\t\t\t$result = call_user_func_array([$api, $method], $args);\n\t\t\treturn $result;\n\t\t}\n\t\tcatch (\\Exception $e)\n\t\t{\n\t\t\tMateria\\Log::profile([get_class($e), get_class($api), $method, json_encode($args)], 'exception');\n\t\t\ttrace($e);\n\t\t}\n\t}\n}\n"], "filenames": ["fuel/app/classes/controller/api.php"], "buggy_code_start_loc": [12], "buggy_code_end_loc": [12], "fixing_code_start_loc": [13], "fixing_code_end_loc": [45], "type": "CWE-352", "message": "A vulnerability classified as problematic has been found in University of Central Florida Materia up to 9.0.0. This affects the function before of the file fuel/app/classes/controller/api.php of the component API Controller. The manipulation leads to cross-site request forgery. It is possible to initiate the attack remotely. Upgrading to version 9.0.1-alpha1 is able to address this issue. The name of the patch is af259115d2e8f17068e61902151ee8a9dbac397b. It is recommended to upgrade the affected component. The identifier VDB-215973 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2022-4564", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-16T17:15:09.253", "lastModified": "2023-03-01T02:45:53.373", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability classified as problematic has been found in University of Central Florida Materia up to 9.0.0. This affects the function before of the file fuel/app/classes/controller/api.php of the component API Controller. The manipulation leads to cross-site request forgery. It is possible to initiate the attack remotely. Upgrading to version 9.0.1-alpha1 is able to address this issue. The name of the patch is af259115d2e8f17068e61902151ee8a9dbac397b. It is recommended to upgrade the affected component. The identifier VDB-215973 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}, {"source": "nvd@nist.gov", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:ucf:materia:*:*:*:*:*:*:*:*", "versionEndIncluding": "9.0.0", "matchCriteriaId": "0CEBA900-CCA4-4763-8E81-BCA41A31DA9B"}]}]}], "references": [{"url": "https://github.com/ucfopen/Materia/commit/af259115d2e8f17068e61902151ee8a9dbac397b", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://github.com/ucfopen/Materia/pull/1371", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://github.com/ucfopen/Materia/releases/tag/v9.0.1-alpha1", "source": "cna@vuldb.com", "tags": ["Release Notes"]}, {"url": "https://vuldb.com/?id.215973", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/ucfopen/Materia/commit/af259115d2e8f17068e61902151ee8a9dbac397b"}}