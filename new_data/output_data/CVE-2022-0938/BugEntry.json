{"buggy_code": ["<?php\nnamespace Api\\Model;\nuse Api\\Model\\BaseModel;\nuse AsyncAws\\S3\\S3Client;\n\n/**\n * \n * @author star7th      \n */\nclass AttachmentModel extends BaseModel {\n\n\tProtected $autoCheckFields = false;  //\u4e00\u5b9a\u8981\u5173\u95ed\u5b57\u6bb5\u7f13\u5b58\uff0c\u4e0d\u7136\u4f1a\u62a5\u627e\u4e0d\u5230\u8868\u7684\u9519\u8bef\n\n\t//\u83b7\u53d6\u67d0\u4e2a\u7528\u6237\u7684\u5f53\u524d\u5df2\u4f7f\u7528\u9644\u4ef6\u6d41\u91cf\n\tpublic function getUserFlow($uid){\n\t\t$month = Date(\"Y-m\") ;\n\t\t$file_flow = D(\"FileFlow\")->where(\" uid = '%s'  and date_month = '$month' \" , array($uid))->find() ;\n\t\tif($file_flow){\n\t\t\treturn intval($file_flow['used']) ;\n\t\t}else{\n\t\t\tD(\"FileFlow\")->add(array(\n\t\t\t\t\"uid\" => $uid ,\n\t\t\t\t\"used\" => 0  ,\n\t\t\t\t\"date_month\" => $month ,\n\n\t\t\t));\n\t\t\treturn 0 ;\n\t\t}\n\t}\n\n\t//\u8bb0\u5f55\u67d0\u4e2a\u7528\u6237\u6d41\u91cf\n\tpublic function recordUserFlow($uid , $file_size){\n\t\t$month = Date(\"Y-m\") ;\n\t\t$used = $this->getUserFlow($uid) ;\n\t\treturn D(\"FileFlow\")->where(\" uid = '%s'  and date_month = '$month' \" , array($uid))->save(array(\n\t\t\t\"used\" => $used + intval($file_size) \n\t\t));\n\t}\n\n\tpublic function deleteFile($file_id){\n\t\t$file_id = intval($file_id) ;\n\t\t$file = D(\"UploadFile\")->where(\"file_id = '$file_id' \")->find();\n\t\t$real_url = $file['real_url'] ;\n\t\t$array = explode(\"/Public/Uploads/\", $real_url) ;\n\t\t$file_path = \"../Public/Uploads/\".$array[1] ;\n\t\tif (file_exists($file_path)) {\n\t\t\t@unlink($file_path);\n\t\t}\n\t\t$this->deleteOss($real_url);\n\t\tD(\"UploadFile\")->where(\" file_id = '$file_id' \")->delete();\n\t\tD(\"FilePage\")->where(\" file_id = '$file_id' \")->delete();\n\t\treturn true ;\n\n\t}\n\n\t//\u4e0a\u4f20\u6587\u4ef6\uff0c\u8fd4\u56deurl\n\tpublic function upload($_files , $file_key , $uid , $item_id = 0  , $page_id = 0  ){\n\t\t$uploadFile = $_files[$file_key] ;\n\n\t\tif($this->isDangerFilename($uploadFile['name'])){\n\t\t\treturn false;\n\t\t}\n\n\t\t$oss_open = D(\"Options\")->get(\"oss_open\" ) ;\n\t\tif ($oss_open) {\n\t\t\t\t$url = $this->uploadOss($uploadFile);\n\t\t\t\tif ($url) {\n\t\t\t\t\t\t$sign = md5($url.time().rand()) ;\n\t\t\t\t\t\t$insert = array(\n\t\t\t\t\t\t\"sign\" => $sign,\n\t\t\t\t\t\t\"uid\" => $uid,\n\t\t\t\t\t\t\"item_id\" => $item_id,\n\t\t\t\t\t\t\"page_id\" => $page_id,\n\t\t\t\t\t\t\"display_name\" => $uploadFile['name'],\n\t\t\t\t\t\t\"file_type\" => $uploadFile['type'],\n\t\t\t\t\t\t\"file_size\" => $uploadFile['size'],\n\t\t\t\t\t\t\"real_url\" => $url,\n\t\t\t\t\t\t\"addtime\" => time(),\n\t\t\t\t\t\t);\n\t\t\t\t\t\t$file_id = D(\"UploadFile\")->add($insert);\n\t\t\t\t\t\t$insert = array(\n\t\t\t\t\t\t\t\"file_id\" => $file_id,\n\t\t\t\t\t\t\t\"item_id\" => $item_id,\n\t\t\t\t\t\t\t\"page_id\" => $page_id,\n\t\t\t\t\t\t\t\"addtime\" => time(),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t$ret = D(\"FilePage\")->add($insert);\n\t\t\t\t\t\t$url = server_url(\"api/attachment/visitFile\",array(\"sign\" => $sign)); \n\t\t\t\t\t  return $url ;\n\t\t\t\t}\n\t\t}else{\n\t\t\t$upload = new \\Think\\Upload();// \u5b9e\u4f8b\u5316\u4e0a\u4f20\u7c7b\n\t\t\t$upload->maxSize  = 1003145728 ;// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5927\u5c0f\n\t\t\t$upload->rootPath = './../Public/Uploads/';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u76ee\u5f55\n\t\t\t$upload->savePath = '';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5b50\u76ee\u5f55\n\t\t\t$info = $upload->uploadOne($uploadFile) ;\n\t\t\tif(!$info) {// \u4e0a\u4f20\u9519\u8bef\u63d0\u793a\u9519\u8bef\u4fe1\u606f\n\t\t\t\tvar_dump($upload->getError());\n\t\t\t\treturn;\n\t\t\t}else{// \u4e0a\u4f20\u6210\u529f \u83b7\u53d6\u4e0a\u4f20\u6587\u4ef6\u4fe1\u606f\n\t\t\t\t$url = site_url().'/Public/Uploads/'.$info['savepath'].$info['savename'] ;\n\t\t\t\t$sign = md5($url.time().rand()) ;\n\t\t\t\t$insert = array(\n\t\t\t\t\t\"sign\" => $sign,\n\t\t\t\t\t\"uid\" => $uid,\n\t\t\t\t\t\"item_id\" => $item_id,\n\t\t\t\t\t\"page_id\" => $page_id,\n\t\t\t\t\t\"display_name\" => $uploadFile['name'],\n\t\t\t\t\t\"file_type\" => $uploadFile['type'],\n\t\t\t\t\t\"file_size\" => $uploadFile['size'],\n\t\t\t\t\t\"real_url\" => $url,\n\t\t\t\t\t\"addtime\" => time(),\n\t\t\t\t\t);\n\t\t\t\t\t$file_id = D(\"UploadFile\")->add($insert);\n\t\t\t\t\t$insert = array(\n\t\t\t\t\t\t\"file_id\" => $file_id,\n\t\t\t\t\t\t\"item_id\" => $item_id,\n\t\t\t\t\t\t\"page_id\" => $page_id,\n\t\t\t\t\t\t\"addtime\" => time(),\n\t\t\t\t\t\t);\n\t\t\t\t\t$ret = D(\"FilePage\")->add($insert);\n\t\t\t\t$url = server_url(\"api/attachment/visitFile\",array(\"sign\" => $sign));\n\t\t\t\treturn $url ;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n  \t//\u4e0a\u4f20\u5230oss\u3002\u53c2\u6570$uploadFile\u662f\u6587\u4ef6\u4e0a\u4f20\u6d41\uff0c\u5982$_FILES['file'] .\u4e5f\u53ef\u4ee5\u81ea\u5df1\u62fc\u51d1\n\tpublic function uploadOss($uploadFile){\n\t\t$oss_setting_json = D(\"Options\")->get(\"oss_setting\") ;\n\t\t$oss_setting = json_decode($oss_setting_json,1);\n\n\t\tif ($oss_setting && $oss_setting['oss_type'] && ( $oss_setting['oss_type'] == 's3_storage' || $oss_setting['oss_type'] == 'aliyun') ) {\n\n\t\t\treturn $this->uploadS3($uploadFile , $oss_setting);\n\n\t\t}\n\n\t\tif ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qiniu') {\n\n\t\t\t$oss_setting['endpoint'] = $this->getQiuniuEndpointByKey($oss_setting['key'] , $oss_setting['bucket']);\n\t\t\treturn $this->uploadS3($uploadFile , $oss_setting); \n\n\t\t}\n\t\t// \u817e\u8baf\u4e91\n\t\tif ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qcloud') {\n\t\t\t// \u817e\u8baf\u4e91\uff0c\u4e00\u5f00\u59cb\u8ba9\u7528\u6237\u586b\u5199region\u800c\u6ca1\u586b\u5199endpoint\uff0c\u6240\u4ee5\u8981\u81ea\u5df1\u62fc\u63a5\n\t\t\t$oss_setting['endpoint'] = \"https://cos.{$oss_setting['region']}.myqcloud.com\";\n\t\t\t// \u817e\u8baf\u4e91\u7684SecretId\u76f8\u5f53\u4e8es3\u7684key\uff0c secretKey\u76f8\u5f53\u4e8es3\u7684secret\n\t\t\t$oss_setting['key'] = $oss_setting['secretId']  ;\n\t\t\t$oss_setting['secret'] = $oss_setting['secretKey']  ;\n\t\t\treturn $this->uploadS3($uploadFile , $oss_setting); \n\t\t}\n\n\n\t\treturn false ;\n\t}\n\n\t// \u901a\u8fc7s3\u534f\u8bae\u4e0a\u4f20\n\t// \u6ce8\u610f\u4f20\u8fdb\u6765\u7684oss_setting\u6570\u7ec4\u9700\u8981\u5148\u8f6c\u6362\u6210\u5408\u6cd5\u683c\u5f0f\n\tpublic function uploadS3($uploadFile , $oss_setting){\n\n\t\t$ext = strrchr($uploadFile['name'], '.'); //\u83b7\u53d6\u6269\u5c55\u540d\n\t\t$oss_path = \"showdoc_\".get_rand_str().$ext;\n\n\t\t// \u5982\u679c\u4e0d\u5305\u542b\u534f\u8bae\u5934\uff0c\u81ea\u5df1\u7ed9\u5b83\u8865\u5145\n\t\tif(!strstr($oss_setting['endpoint'] , '://')){\n\t\t\t$oss_setting['endpoint'] = 'https://'.$oss_setting['endpoint'] ;\n\t\t}\n\n\t\t$s3 = new S3Client([\n\t\t\t'accessKeyId' => $oss_setting['key'],\n\t\t\t'accessKeySecret' => $oss_setting['secret'] ,\n\t\t\t'endpoint' => $oss_setting['endpoint'] ,\n\t\t\t'sendChunkedBody' => false\n\t\t]);\n\t\n\t\t// Send a PutObject request and get the result object.\n\t\t$resObj = $s3->putObject([\n\t\t\t'Bucket' => $oss_setting['bucket'],\n\t\t\t'Key'    => $oss_path,\n\t\t\t'Body'   => fopen($uploadFile['tmp_name'], 'rb')\n\t\t]);\n\n\t\t// \u4e0d\u629b\u51fa\u5f02\u5e38\uff0c\u9ed8\u8ba4\u5c31\u662f\u6210\u529f\u7684\n\n\t\tif ($oss_setting['domain']) {\n\t\t\treturn $oss_setting['protocol'] . '://'.$oss_setting['domain'].\"/\".$oss_path ;\n\t\t}else{\n\t\t\t$tmp_array = parse_url($oss_setting['endpoint']);\n\t\t\t$endpoint_host = $tmp_array['host'] ;\n\t\t\treturn 'https://'.$oss_setting['bucket'].'.'.$endpoint_host.'/'.$oss_path;\n\t\t}\n\t}\n\n  \t//\u4eceoss\u4e2d\u5220\u9664\n\tpublic function deleteOss($file_url){\n\t\t$oss_setting_json = D(\"Options\")->get(\"oss_setting\") ;\n\t\t$oss_setting = json_decode($oss_setting_json,1);\n\t\tif ($oss_setting && $oss_setting['oss_type'] && ( $oss_setting['oss_type'] == 's3_storage' || $oss_setting['oss_type'] == 'aliyun') ) {\n\t\t\treturn $this->deleteS3($file_url , $oss_setting);\n\t\t}\n\n\t\tif ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qiniu') {\n\t\t\t$oss_setting['endpoint'] = $this->getQiuniuEndpointByKey($oss_setting['key'] , $oss_setting['bucket']);\n\t\t\treturn $this->deleteS3($file_url , $oss_setting); \n\t\t}\n\t\t//var_dump($config);\n\t\t// \u817e\u8baf\u4e91\n\t\tif ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qcloud') {\n\n\t\t\t// \u817e\u8baf\u4e91\uff0c\u4e00\u5f00\u59cb\u8ba9\u7528\u6237\u586b\u5199region\u800c\u6ca1\u586b\u5199endpoint\uff0c\u6240\u4ee5\u8981\u81ea\u5df1\u62fc\u63a5\n\t\t\t$oss_setting['endpoint'] = \"https://cos.{$oss_setting['region']}.myqcloud.com\";\n\t\t\t// \u817e\u8baf\u4e91\u7684SecretId\u76f8\u5f53\u4e8es3\u7684key\uff0c secretKey\u76f8\u5f53\u4e8es3\u7684secret\n\t\t\t$oss_setting['key'] = $oss_setting['secretId']  ;\n\t\t\t$oss_setting['secret'] = $oss_setting['secretKey']  ;\n\t\t\treturn $this->deleteS3($file_url , $oss_setting); \n\n\t\t}\n\n\n\t\treturn false ;\n\t}\n\n\t// \u901a\u8fc7s3\u534f\u8bae\u5220\u9664\n\t// \u6ce8\u610f\u4f20\u8fdb\u6765\u7684oss_setting\u6570\u7ec4\u9700\u8981\u5148\u8f6c\u6362\u6210\u5408\u6cd5\u683c\u5f0f\n\tpublic function deleteS3($file_url , $oss_setting){\n\n\t\t$array = parse_url($file_url) ;\n\t\t$file = $array['path'] ;  // \u5f97\u5230\u7684\u662furl\u4e2d\u7684\u8def\u5f84\uff0c\u4f8b\u5982/path_.txt\n\t\t$file = substr($file, 1); // \u8981\u628a\u8def\u5f84\u524d\u7684/\u53bb\u6389\uff0c\u624d\u662f\u5f97\u5230\u6587\u4ef6\u540dpath_.txt\n\t\t// \u5982\u679c\u4e0d\u5305\u542b\u534f\u8bae\u5934\uff0c\u81ea\u5df1\u7ed9\u5b83\u8865\u5145\n\t\tif(!strstr($oss_setting['endpoint'] , '://')){\n\t\t\t$oss_setting['endpoint'] = 'https://'.$oss_setting['endpoint'] ;\n\t\t}\n\n\t\t$s3 = new S3Client([\n\t\t\t'accessKeyId' => $oss_setting['key'],\n\t\t\t'accessKeySecret' => $oss_setting['secret'] ,\n\t\t\t'endpoint' => $oss_setting['endpoint'] ,\n\t\t]);\n\t\n\t\t// Send a PutObject request and get the result object.\n\t\t$resObj = $s3->deleteObject([\n\t\t\t'Bucket' => $oss_setting['bucket'],\n\t\t\t'Key'    => $file,\n\t\t]);\n\n\t\t// \u4e0d\u629b\u51fa\u5f02\u5e38\uff0c\u9ed8\u8ba4\u5c31\u662f\u6210\u529f\u7684\n\n\n\t}\n\n\t// \u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c\u5f53\u521d\u6ca1\u6709\u8ba9\u7528\u6237\u586b\u5199\u4e03\u725b\u4e91\u7684region\u3002\u800c\u4e14\u5373\u4f7f\u586b\u5199\u4e86\uff0c\u4e5f\u4e0d\u80fd\u76f4\u63a5\u83b7\u53d6\u5230\u4e03\u725b\u4e91s3\u517c\u5bb9\u534f\u8bae\u4e0a\u4f20\u7684endpoint\n\t// \u6240\u4ee5\uff0c\u9700\u8981\u81ea\u5df1\u8c03\u63a5\u53e3\u67e5\u8be2\u7136\u540e\u62fc\u51d1\u3002\u4e03\u725b\u8fd9\u4e2a\u5751\u8d27\u3002\n\tpublic function getQiuniuEndpointByKey($key,$bucket){\n\n\t\t$query_url = \"https://api.qiniu.com/v2/query?ak={$key}&bucket={$bucket}\";\n\t\t$res = http_post($query_url,array());\n\n\t\t$array = json_decode($res,true) ;\n\t\t// var_dump($array);exit();\n\t\tif($array && $array['region'] ){\n\t\t\tswitch ($array['region']) {\n\t\t\t\tcase 'z0':\n\t\t\t\t\treturn 'https://s3-cn-east-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'z1':\n\t\t\t\t\treturn 'https://s3-cn-north-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'z2':\n\t\t\t\t\treturn 'https://s3-cn-south-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'na0':\n\t\t\t\t\treturn 'https://s3-us-north-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'as0':\n\t\t\t\t\treturn 'https://s3-ap-southeast-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// \u5224\u65ad\u6587\u4ef6\u540d\u662f\u5426\u5305\u542b\u5371\u9669\u7684\u6269\u5c55\u540d\n\tpublic function isDangerFilename($filename){\n\n\t\t$isDangerStr = function ($filename , $keyword){\n\t\t\tif(strstr(strip_tags(strtolower( $filename )), $keyword) ){\n\t\t\t\treturn true ;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tif (\n\t\t\t $isDangerStr($filename , \".php\")\n\t\t\t|| $isDangerStr($filename , \".svg\")\n\t\t\t|| $isDangerStr($filename , \".htm\")\n\t\t\t|| $isDangerStr($filename , \".shtm\")\n\t\t\t|| $isDangerStr($filename , \"%\")\n\t\t\t|| $isDangerStr($filename , \".xml\")\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\treturn false;\n\t}\n\n\n\n}"], "fixing_code": ["<?php\nnamespace Api\\Model;\nuse Api\\Model\\BaseModel;\nuse AsyncAws\\S3\\S3Client;\n\n/**\n * \n * @author star7th      \n */\nclass AttachmentModel extends BaseModel {\n\n\tProtected $autoCheckFields = false;  //\u4e00\u5b9a\u8981\u5173\u95ed\u5b57\u6bb5\u7f13\u5b58\uff0c\u4e0d\u7136\u4f1a\u62a5\u627e\u4e0d\u5230\u8868\u7684\u9519\u8bef\n\n\t//\u83b7\u53d6\u67d0\u4e2a\u7528\u6237\u7684\u5f53\u524d\u5df2\u4f7f\u7528\u9644\u4ef6\u6d41\u91cf\n\tpublic function getUserFlow($uid){\n\t\t$month = Date(\"Y-m\") ;\n\t\t$file_flow = D(\"FileFlow\")->where(\" uid = '%s'  and date_month = '$month' \" , array($uid))->find() ;\n\t\tif($file_flow){\n\t\t\treturn intval($file_flow['used']) ;\n\t\t}else{\n\t\t\tD(\"FileFlow\")->add(array(\n\t\t\t\t\"uid\" => $uid ,\n\t\t\t\t\"used\" => 0  ,\n\t\t\t\t\"date_month\" => $month ,\n\n\t\t\t));\n\t\t\treturn 0 ;\n\t\t}\n\t}\n\n\t//\u8bb0\u5f55\u67d0\u4e2a\u7528\u6237\u6d41\u91cf\n\tpublic function recordUserFlow($uid , $file_size){\n\t\t$month = Date(\"Y-m\") ;\n\t\t$used = $this->getUserFlow($uid) ;\n\t\treturn D(\"FileFlow\")->where(\" uid = '%s'  and date_month = '$month' \" , array($uid))->save(array(\n\t\t\t\"used\" => $used + intval($file_size) \n\t\t));\n\t}\n\n\tpublic function deleteFile($file_id){\n\t\t$file_id = intval($file_id) ;\n\t\t$file = D(\"UploadFile\")->where(\"file_id = '$file_id' \")->find();\n\t\t$real_url = $file['real_url'] ;\n\t\t$array = explode(\"/Public/Uploads/\", $real_url) ;\n\t\t$file_path = \"../Public/Uploads/\".$array[1] ;\n\t\tif (file_exists($file_path)) {\n\t\t\t@unlink($file_path);\n\t\t}\n\t\t$this->deleteOss($real_url);\n\t\tD(\"UploadFile\")->where(\" file_id = '$file_id' \")->delete();\n\t\tD(\"FilePage\")->where(\" file_id = '$file_id' \")->delete();\n\t\treturn true ;\n\n\t}\n\n\t//\u4e0a\u4f20\u6587\u4ef6\uff0c\u8fd4\u56deurl\n\tpublic function upload($_files , $file_key , $uid , $item_id = 0  , $page_id = 0  ){\n\t\t$uploadFile = $_files[$file_key] ;\n\n\t\tif($this->isDangerFilename($uploadFile['name'])){\n\t\t\treturn false;\n\t\t}\n\n\t\t$oss_open = D(\"Options\")->get(\"oss_open\" ) ;\n\t\tif ($oss_open) {\n\t\t\t\t$url = $this->uploadOss($uploadFile);\n\t\t\t\tif ($url) {\n\t\t\t\t\t\t$sign = md5($url.time().rand()) ;\n\t\t\t\t\t\t$insert = array(\n\t\t\t\t\t\t\"sign\" => $sign,\n\t\t\t\t\t\t\"uid\" => $uid,\n\t\t\t\t\t\t\"item_id\" => $item_id,\n\t\t\t\t\t\t\"page_id\" => $page_id,\n\t\t\t\t\t\t\"display_name\" => $uploadFile['name'],\n\t\t\t\t\t\t\"file_type\" => $uploadFile['type'],\n\t\t\t\t\t\t\"file_size\" => $uploadFile['size'],\n\t\t\t\t\t\t\"real_url\" => $url,\n\t\t\t\t\t\t\"addtime\" => time(),\n\t\t\t\t\t\t);\n\t\t\t\t\t\t$file_id = D(\"UploadFile\")->add($insert);\n\t\t\t\t\t\t$insert = array(\n\t\t\t\t\t\t\t\"file_id\" => $file_id,\n\t\t\t\t\t\t\t\"item_id\" => $item_id,\n\t\t\t\t\t\t\t\"page_id\" => $page_id,\n\t\t\t\t\t\t\t\"addtime\" => time(),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t$ret = D(\"FilePage\")->add($insert);\n\t\t\t\t\t\t$url = server_url(\"api/attachment/visitFile\",array(\"sign\" => $sign)); \n\t\t\t\t\t  return $url ;\n\t\t\t\t}\n\t\t}else{\n\t\t\t$upload = new \\Think\\Upload();// \u5b9e\u4f8b\u5316\u4e0a\u4f20\u7c7b\n\t\t\t$upload->maxSize  = 1003145728 ;// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5927\u5c0f\n\t\t\t$upload->rootPath = './../Public/Uploads/';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u76ee\u5f55\n\t\t\t$upload->savePath = '';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5b50\u76ee\u5f55\n\t\t\t$info = $upload->uploadOne($uploadFile) ;\n\t\t\tif(!$info) {// \u4e0a\u4f20\u9519\u8bef\u63d0\u793a\u9519\u8bef\u4fe1\u606f\n\t\t\t\tvar_dump($upload->getError());\n\t\t\t\treturn;\n\t\t\t}else{// \u4e0a\u4f20\u6210\u529f \u83b7\u53d6\u4e0a\u4f20\u6587\u4ef6\u4fe1\u606f\n\t\t\t\t$url = site_url().'/Public/Uploads/'.$info['savepath'].$info['savename'] ;\n\t\t\t\t$sign = md5($url.time().rand()) ;\n\t\t\t\t$insert = array(\n\t\t\t\t\t\"sign\" => $sign,\n\t\t\t\t\t\"uid\" => $uid,\n\t\t\t\t\t\"item_id\" => $item_id,\n\t\t\t\t\t\"page_id\" => $page_id,\n\t\t\t\t\t\"display_name\" => $uploadFile['name'],\n\t\t\t\t\t\"file_type\" => $uploadFile['type'],\n\t\t\t\t\t\"file_size\" => $uploadFile['size'],\n\t\t\t\t\t\"real_url\" => $url,\n\t\t\t\t\t\"addtime\" => time(),\n\t\t\t\t\t);\n\t\t\t\t\t$file_id = D(\"UploadFile\")->add($insert);\n\t\t\t\t\t$insert = array(\n\t\t\t\t\t\t\"file_id\" => $file_id,\n\t\t\t\t\t\t\"item_id\" => $item_id,\n\t\t\t\t\t\t\"page_id\" => $page_id,\n\t\t\t\t\t\t\"addtime\" => time(),\n\t\t\t\t\t\t);\n\t\t\t\t\t$ret = D(\"FilePage\")->add($insert);\n\t\t\t\t$url = server_url(\"api/attachment/visitFile\",array(\"sign\" => $sign));\n\t\t\t\treturn $url ;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n  \t//\u4e0a\u4f20\u5230oss\u3002\u53c2\u6570$uploadFile\u662f\u6587\u4ef6\u4e0a\u4f20\u6d41\uff0c\u5982$_FILES['file'] .\u4e5f\u53ef\u4ee5\u81ea\u5df1\u62fc\u51d1\n\tpublic function uploadOss($uploadFile){\n\t\t$oss_setting_json = D(\"Options\")->get(\"oss_setting\") ;\n\t\t$oss_setting = json_decode($oss_setting_json,1);\n\n\t\tif ($oss_setting && $oss_setting['oss_type'] && ( $oss_setting['oss_type'] == 's3_storage' || $oss_setting['oss_type'] == 'aliyun') ) {\n\n\t\t\treturn $this->uploadS3($uploadFile , $oss_setting);\n\n\t\t}\n\n\t\tif ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qiniu') {\n\n\t\t\t$oss_setting['endpoint'] = $this->getQiuniuEndpointByKey($oss_setting['key'] , $oss_setting['bucket']);\n\t\t\treturn $this->uploadS3($uploadFile , $oss_setting); \n\n\t\t}\n\t\t// \u817e\u8baf\u4e91\n\t\tif ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qcloud') {\n\t\t\t// \u817e\u8baf\u4e91\uff0c\u4e00\u5f00\u59cb\u8ba9\u7528\u6237\u586b\u5199region\u800c\u6ca1\u586b\u5199endpoint\uff0c\u6240\u4ee5\u8981\u81ea\u5df1\u62fc\u63a5\n\t\t\t$oss_setting['endpoint'] = \"https://cos.{$oss_setting['region']}.myqcloud.com\";\n\t\t\t// \u817e\u8baf\u4e91\u7684SecretId\u76f8\u5f53\u4e8es3\u7684key\uff0c secretKey\u76f8\u5f53\u4e8es3\u7684secret\n\t\t\t$oss_setting['key'] = $oss_setting['secretId']  ;\n\t\t\t$oss_setting['secret'] = $oss_setting['secretKey']  ;\n\t\t\treturn $this->uploadS3($uploadFile , $oss_setting); \n\t\t}\n\n\n\t\treturn false ;\n\t}\n\n\t// \u901a\u8fc7s3\u534f\u8bae\u4e0a\u4f20\n\t// \u6ce8\u610f\u4f20\u8fdb\u6765\u7684oss_setting\u6570\u7ec4\u9700\u8981\u5148\u8f6c\u6362\u6210\u5408\u6cd5\u683c\u5f0f\n\tpublic function uploadS3($uploadFile , $oss_setting){\n\n\t\t$ext = strrchr($uploadFile['name'], '.'); //\u83b7\u53d6\u6269\u5c55\u540d\n\t\t$oss_path = \"showdoc_\".get_rand_str().$ext;\n\n\t\t// \u5982\u679c\u4e0d\u5305\u542b\u534f\u8bae\u5934\uff0c\u81ea\u5df1\u7ed9\u5b83\u8865\u5145\n\t\tif(!strstr($oss_setting['endpoint'] , '://')){\n\t\t\t$oss_setting['endpoint'] = 'https://'.$oss_setting['endpoint'] ;\n\t\t}\n\n\t\t$s3 = new S3Client([\n\t\t\t'accessKeyId' => $oss_setting['key'],\n\t\t\t'accessKeySecret' => $oss_setting['secret'] ,\n\t\t\t'endpoint' => $oss_setting['endpoint'] ,\n\t\t\t'sendChunkedBody' => false\n\t\t]);\n\t\n\t\t// Send a PutObject request and get the result object.\n\t\t$resObj = $s3->putObject([\n\t\t\t'Bucket' => $oss_setting['bucket'],\n\t\t\t'Key'    => $oss_path,\n\t\t\t'Body'   => fopen($uploadFile['tmp_name'], 'rb')\n\t\t]);\n\n\t\t// \u4e0d\u629b\u51fa\u5f02\u5e38\uff0c\u9ed8\u8ba4\u5c31\u662f\u6210\u529f\u7684\n\n\t\tif ($oss_setting['domain']) {\n\t\t\treturn $oss_setting['protocol'] . '://'.$oss_setting['domain'].\"/\".$oss_path ;\n\t\t}else{\n\t\t\t$tmp_array = parse_url($oss_setting['endpoint']);\n\t\t\t$endpoint_host = $tmp_array['host'] ;\n\t\t\treturn 'https://'.$oss_setting['bucket'].'.'.$endpoint_host.'/'.$oss_path;\n\t\t}\n\t}\n\n  \t//\u4eceoss\u4e2d\u5220\u9664\n\tpublic function deleteOss($file_url){\n\t\t$oss_setting_json = D(\"Options\")->get(\"oss_setting\") ;\n\t\t$oss_setting = json_decode($oss_setting_json,1);\n\t\tif ($oss_setting && $oss_setting['oss_type'] && ( $oss_setting['oss_type'] == 's3_storage' || $oss_setting['oss_type'] == 'aliyun') ) {\n\t\t\treturn $this->deleteS3($file_url , $oss_setting);\n\t\t}\n\n\t\tif ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qiniu') {\n\t\t\t$oss_setting['endpoint'] = $this->getQiuniuEndpointByKey($oss_setting['key'] , $oss_setting['bucket']);\n\t\t\treturn $this->deleteS3($file_url , $oss_setting); \n\t\t}\n\t\t//var_dump($config);\n\t\t// \u817e\u8baf\u4e91\n\t\tif ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qcloud') {\n\n\t\t\t// \u817e\u8baf\u4e91\uff0c\u4e00\u5f00\u59cb\u8ba9\u7528\u6237\u586b\u5199region\u800c\u6ca1\u586b\u5199endpoint\uff0c\u6240\u4ee5\u8981\u81ea\u5df1\u62fc\u63a5\n\t\t\t$oss_setting['endpoint'] = \"https://cos.{$oss_setting['region']}.myqcloud.com\";\n\t\t\t// \u817e\u8baf\u4e91\u7684SecretId\u76f8\u5f53\u4e8es3\u7684key\uff0c secretKey\u76f8\u5f53\u4e8es3\u7684secret\n\t\t\t$oss_setting['key'] = $oss_setting['secretId']  ;\n\t\t\t$oss_setting['secret'] = $oss_setting['secretKey']  ;\n\t\t\treturn $this->deleteS3($file_url , $oss_setting); \n\n\t\t}\n\n\n\t\treturn false ;\n\t}\n\n\t// \u901a\u8fc7s3\u534f\u8bae\u5220\u9664\n\t// \u6ce8\u610f\u4f20\u8fdb\u6765\u7684oss_setting\u6570\u7ec4\u9700\u8981\u5148\u8f6c\u6362\u6210\u5408\u6cd5\u683c\u5f0f\n\tpublic function deleteS3($file_url , $oss_setting){\n\n\t\t$array = parse_url($file_url) ;\n\t\t$file = $array['path'] ;  // \u5f97\u5230\u7684\u662furl\u4e2d\u7684\u8def\u5f84\uff0c\u4f8b\u5982/path_.txt\n\t\t$file = substr($file, 1); // \u8981\u628a\u8def\u5f84\u524d\u7684/\u53bb\u6389\uff0c\u624d\u662f\u5f97\u5230\u6587\u4ef6\u540dpath_.txt\n\t\t// \u5982\u679c\u4e0d\u5305\u542b\u534f\u8bae\u5934\uff0c\u81ea\u5df1\u7ed9\u5b83\u8865\u5145\n\t\tif(!strstr($oss_setting['endpoint'] , '://')){\n\t\t\t$oss_setting['endpoint'] = 'https://'.$oss_setting['endpoint'] ;\n\t\t}\n\n\t\t$s3 = new S3Client([\n\t\t\t'accessKeyId' => $oss_setting['key'],\n\t\t\t'accessKeySecret' => $oss_setting['secret'] ,\n\t\t\t'endpoint' => $oss_setting['endpoint'] ,\n\t\t]);\n\t\n\t\t// Send a PutObject request and get the result object.\n\t\t$resObj = $s3->deleteObject([\n\t\t\t'Bucket' => $oss_setting['bucket'],\n\t\t\t'Key'    => $file,\n\t\t]);\n\n\t\t// \u4e0d\u629b\u51fa\u5f02\u5e38\uff0c\u9ed8\u8ba4\u5c31\u662f\u6210\u529f\u7684\n\n\n\t}\n\n\t// \u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c\u5f53\u521d\u6ca1\u6709\u8ba9\u7528\u6237\u586b\u5199\u4e03\u725b\u4e91\u7684region\u3002\u800c\u4e14\u5373\u4f7f\u586b\u5199\u4e86\uff0c\u4e5f\u4e0d\u80fd\u76f4\u63a5\u83b7\u53d6\u5230\u4e03\u725b\u4e91s3\u517c\u5bb9\u534f\u8bae\u4e0a\u4f20\u7684endpoint\n\t// \u6240\u4ee5\uff0c\u9700\u8981\u81ea\u5df1\u8c03\u63a5\u53e3\u67e5\u8be2\u7136\u540e\u62fc\u51d1\u3002\u4e03\u725b\u8fd9\u4e2a\u5751\u8d27\u3002\n\tpublic function getQiuniuEndpointByKey($key,$bucket){\n\n\t\t$query_url = \"https://api.qiniu.com/v2/query?ak={$key}&bucket={$bucket}\";\n\t\t$res = http_post($query_url,array());\n\n\t\t$array = json_decode($res,true) ;\n\t\t// var_dump($array);exit();\n\t\tif($array && $array['region'] ){\n\t\t\tswitch ($array['region']) {\n\t\t\t\tcase 'z0':\n\t\t\t\t\treturn 'https://s3-cn-east-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'z1':\n\t\t\t\t\treturn 'https://s3-cn-north-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'z2':\n\t\t\t\t\treturn 'https://s3-cn-south-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'na0':\n\t\t\t\t\treturn 'https://s3-us-north-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'as0':\n\t\t\t\t\treturn 'https://s3-ap-southeast-1.qiniucs.com';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// \u5224\u65ad\u6587\u4ef6\u540d\u662f\u5426\u5305\u542b\u5371\u9669\u7684\u6269\u5c55\u540d\n\tpublic function isDangerFilename($filename){\n\n\t\t$isDangerStr = function ($filename , $keyword){\n\t\t\tif(strstr(strip_tags(strtolower( $filename )), $keyword) ){\n\t\t\t\treturn true ;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tif (\n\t\t\t $isDangerStr($filename , \".php\")\n\t\t\t|| $isDangerStr($filename , \".svg\")\n\t\t\t|| $isDangerStr($filename , \".htm\")\n\t\t\t|| $isDangerStr($filename , \".shtm\")\n\t\t\t|| $isDangerStr($filename , \"%\")\n\t\t\t|| $isDangerStr($filename , \".xml\")\n\t\t\t|| $isDangerStr($filename , \".xxhtml\")\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\treturn false;\n\t}\n\n\n\n}\n"], "filenames": ["server/Application/Api/Model/AttachmentModel.class.php"], "buggy_code_start_loc": [305], "buggy_code_end_loc": [316], "fixing_code_start_loc": [306], "fixing_code_end_loc": [317], "type": "CWE-79", "message": "Stored XSS via file upload in GitHub repository star7th/showdoc prior to v2.10.4.", "other": {"cve": {"id": "CVE-2022-0938", "sourceIdentifier": "security@huntr.dev", "published": "2022-03-14T08:15:07.740", "lastModified": "2022-03-18T18:09:18.637", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Stored XSS via file upload in GitHub repository star7th/showdoc prior to v2.10.4."}, {"lang": "es", "value": "Una vulnerabilidad de tipo XSS almacenado por medio de una carga de archivos en el repositorio de GitHub star7th/showdoc versiones anteriores a v2.10.4"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 4.2}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:showdoc:showdoc:*:*:*:*:*:*:*:*", "versionEndIncluding": "2.10.3", "matchCriteriaId": "EB841EBE-162B-4399-B2A5-B1EE3350CD36"}]}]}], "references": [{"url": "https://github.com/star7th/showdoc/commit/830c89a4c2c5fd0dd491422bf8e97b4eb5713f55", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/3eb5a8f9-24e3-4eae-a212-070b2fbc237e", "source": "security@huntr.dev", "tags": ["Exploit", "Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/star7th/showdoc/commit/830c89a4c2c5fd0dd491422bf8e97b4eb5713f55"}}