{"buggy_code": ["$(document).ready(function(){function t(){api.IMAP.get().success(function(e){0==e.length?$(\"#lastlogindiv\").hide():(0==(e=e[0]).enabled?$(\"#lastlogindiv\").hide():$(\"#lastlogindiv\").show(),$(\"#imapusername\").val(e.username),$(\"#imaphost\").val(e.host),$(\"#imapport\").val(e.port),$(\"#imappassword\").val(e.password),$(\"#use_tls\").prop(\"checked\",e.tls),$(\"#use_imap\").prop(\"checked\",e.enabled),$(\"#folder\").val(e.folder),$(\"#restrictdomain\").val(e.restrict_domain),$(\"#deletecampaign\").prop(\"checked\",e.delete_reported_campaign_email),$(\"#lastloginraw\").val(e.last_login),$(\"#lastlogin\").val(moment.utc(e.last_login).fromNow()),$(\"#imapfreq\").val(e.imap_freq))}).error(function(){errorFlash(\"Error fetching IMAP settings\")})}$('[data-toggle=\"tooltip\"]').tooltip(),$(\"#apiResetForm\").submit(function(e){return api.reset().success(function(e){user.api_key=e.data,successFlash(e.message),$(\"#api_key\").val(user.api_key)}).error(function(e){errorFlash(e.message)}),!1}),$(\"#settingsForm\").submit(function(e){return $.post(\"/settings\",$(this).serialize()).done(function(e){successFlash(e.message)}).fail(function(e){errorFlash(e.responseJSON.message)}),!1}),$(\"#savesettings\").click(function(){var e={};return e.host=$(\"#imaphost\").val(),e.port=$(\"#imapport\").val(),e.username=$(\"#imapusername\").val(),e.password=$(\"#imappassword\").val(),e.enabled=$(\"#use_imap\").prop(\"checked\"),e.tls=$(\"#use_tls\").prop(\"checked\"),e.folder=$(\"#folder\").val(),e.imap_freq=$(\"#imapfreq\").val(),e.restrict_domain=$(\"#restrictdomain\").val(),e.delete_reported_campaign_email=$(\"#deletecampaign\").prop(\"checked\"),\"\"==e.host?(errorFlash(\"No IMAP Host specified\"),document.body.scrollTop=0,document.documentElement.scrollTop=0):\"\"==e.port?(errorFlash(\"No IMAP Port specified\"),document.body.scrollTop=0,document.documentElement.scrollTop=0):isNaN(e.port)||e.port<1||65535<e.port?(errorFlash(\"Invalid IMAP Port\"),document.body.scrollTop=0,document.documentElement.scrollTop=0):(\"\"==e.imap_freq&&(e.imap_freq=\"60\"),api.IMAP.post(e).done(function(e){1==e.success?successFlashFade(\"Successfully updated IMAP settings.\",2):errorFlash(\"Unable to update IMAP settings.\")}).success(function(e){t()}).fail(function(e){errorFlash(e.responseJSON.message)}).always(function(e){document.body.scrollTop=0,document.documentElement.scrollTop=0})),!1}),$(\"#validateimap\").click(function(){var e={};if(e.host=$(\"#imaphost\").val(),e.port=$(\"#imapport\").val(),e.username=$(\"#imapusername\").val(),e.password=$(\"#imappassword\").val(),e.tls=$(\"#use_tls\").prop(\"checked\"),\"\"==e.host)return errorFlash(\"No IMAP Host specified\"),document.body.scrollTop=0,document.documentElement.scrollTop=0,!1;if(\"\"==e.port)return errorFlash(\"No IMAP Port specified\"),document.body.scrollTop=0,document.documentElement.scrollTop=0,!1;if(isNaN(e.port)||e.port<1||65535<e.port)return errorFlash(\"Invalid IMAP Port\"),document.body.scrollTop=0,document.documentElement.scrollTop=0,!1;var t=$(\"#validateimap\").html();$(\"#imaphost\").attr(\"disabled\",!0),$(\"#imapport\").attr(\"disabled\",!0),$(\"#imapusername\").attr(\"disabled\",!0),$(\"#imappassword\").attr(\"disabled\",!0),$(\"#use_imap\").attr(\"disabled\",!0),$(\"#use_tls\").attr(\"disabled\",!0),$(\"#folder\").attr(\"disabled\",!0),$(\"#restrictdomain\").attr(\"disabled\",!0),$(\"#deletecampaign\").attr(\"disabled\",!0),$(\"#lastlogin\").attr(\"disabled\",!0),$(\"#imapfreq\").attr(\"disabled\",!0),$(\"#validateimap\").attr(\"disabled\",!0),$(\"#validateimap\").html(\"<i class='fa fa-circle-o-notch fa-spin'></i> Testing...\"),api.IMAP.validate(e).done(function(t){1==t.success?Swal.fire({title:\"Success\",html:\"Logged into <b>\"+$(\"#imaphost\").val()+\"</b>\",type:\"success\"}):Swal.fire({title:\"Failed!\",html:\"Unable to login to <b>\"+$(\"#imaphost\").val()+\"</b>.\",type:\"error\",showCancelButton:!0,cancelButtonText:\"Close\",confirmButtonText:\"More Info\",confirmButtonColor:\"#428bca\",allowOutsideClick:!1}).then(function(e){e.value&&Swal.fire({title:\"Error:\",text:t.message})})}).fail(function(){Swal.fire({title:\"Failed!\",text:\"An unecpected error occured.\",type:\"error\"})}).always(function(){$(\"#imaphost\").attr(\"disabled\",!1),$(\"#imapport\").attr(\"disabled\",!1),$(\"#imapusername\").attr(\"disabled\",!1),$(\"#imappassword\").attr(\"disabled\",!1),$(\"#use_imap\").attr(\"disabled\",!1),$(\"#use_tls\").attr(\"disabled\",!1),$(\"#folder\").attr(\"disabled\",!1),$(\"#restrictdomain\").attr(\"disabled\",!1),$(\"#deletecampaign\").attr(\"disabled\",!1),$(\"#lastlogin\").attr(\"disabled\",!1),$(\"#imapfreq\").attr(\"disabled\",!1),$(\"#validateimap\").attr(\"disabled\",!1),$(\"#validateimap\").html(t)})}),$(\"#reporttab\").click(function(){t()}),$(\"#advanced\").click(function(){$(\"#advancedarea\").toggle()});var e=localStorage.getItem(\"gophish.use_map\");$(\"#use_map\").prop(\"checked\",JSON.parse(e)),$(\"#use_map\").on(\"change\",function(){localStorage.setItem(\"gophish.use_map\",JSON.stringify(this.checked))}),t()});", "$(document).ready(function () {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n    $(\"#apiResetForm\").submit(function (e) {\n        api.reset()\n            .success(function (response) {\n                user.api_key = response.data\n                successFlash(response.message)\n                $(\"#api_key\").val(user.api_key)\n            })\n            .error(function (data) {\n                errorFlash(data.message)\n            })\n        return false\n    })\n    $(\"#settingsForm\").submit(function (e) {\n        $.post(\"/settings\", $(this).serialize())\n            .done(function (data) {\n                successFlash(data.message)\n            })\n            .fail(function (data) {\n                errorFlash(data.responseJSON.message)\n            })\n        return false\n    })\n    //$(\"#imapForm\").submit(function (e) {\n    $(\"#savesettings\").click(function() {\n        var imapSettings = {}\n        imapSettings.host = $(\"#imaphost\").val()\n        imapSettings.port = $(\"#imapport\").val()\n        imapSettings.username = $(\"#imapusername\").val()\n        imapSettings.password = $(\"#imappassword\").val()\n        imapSettings.enabled = $('#use_imap').prop('checked')\n        imapSettings.tls = $('#use_tls').prop('checked')\n\n        //Advanced settings\n        imapSettings.folder = $(\"#folder\").val()\n        imapSettings.imap_freq = $(\"#imapfreq\").val()\n        imapSettings.restrict_domain = $(\"#restrictdomain\").val()\n        imapSettings.delete_reported_campaign_email = $('#deletecampaign').prop('checked')\n        \n        //To avoid unmarshalling error in controllers/api/imap.go. It would fail gracefully, but with a generic error.\n        if (imapSettings.host == \"\"){\n            errorFlash(\"No IMAP Host specified\")\n            document.body.scrollTop = 0;\n            document.documentElement.scrollTop = 0;\n            return false\n        }\n        if (imapSettings.port == \"\"){\n            errorFlash(\"No IMAP Port specified\")\n            document.body.scrollTop = 0;\n            document.documentElement.scrollTop = 0;\n            return false\n        }\n        if (isNaN(imapSettings.port) || imapSettings.port <1 || imapSettings.port > 65535  ){ \n            errorFlash(\"Invalid IMAP Port\")\n            document.body.scrollTop = 0;\n            document.documentElement.scrollTop = 0;\n            return false\n        }\n        if (imapSettings.imap_freq == \"\"){\n            imapSettings.imap_freq = \"60\"\n        }\n\n        api.IMAP.post(imapSettings).done(function (data) {\n                if (data.success == true) {\n                    successFlashFade(\"Successfully updated IMAP settings.\", 2)\n                } else {\n                    errorFlash(\"Unable to update IMAP settings.\")\n                }\n            })\n            .success(function (data){\n                loadIMAPSettings()\n            })\n            .fail(function (data) {\n                errorFlash(data.responseJSON.message)\n            })\n            .always(function (data){\n                document.body.scrollTop = 0;\n                document.documentElement.scrollTop = 0;\n            })\n        \n        return false\n    })\n\n    $(\"#validateimap\").click(function() {\n\n        // Query validate imap server endpoint\n        var server = {}\n        server.host = $(\"#imaphost\").val()\n        server.port = $(\"#imapport\").val()\n        server.username = $(\"#imapusername\").val()\n        server.password = $(\"#imappassword\").val()\n        server.tls = $('#use_tls').prop('checked')\n\n        //To avoid unmarshalling error in controllers/api/imap.go. It would fail gracefully, but with a generic error. \n        if (server.host == \"\"){\n            errorFlash(\"No IMAP Host specified\")\n            document.body.scrollTop = 0;\n            document.documentElement.scrollTop = 0;\n            return false\n        }\n        if (server.port == \"\"){\n            errorFlash(\"No IMAP Port specified\")\n            document.body.scrollTop = 0;\n            document.documentElement.scrollTop = 0;\n            return false\n        }\n        if (isNaN(server.port) || server.port <1 || server.port > 65535  ){\n            errorFlash(\"Invalid IMAP Port\")\n            document.body.scrollTop = 0;\n            document.documentElement.scrollTop = 0;\n            return false\n        }\n\n        var oldHTML = $(\"#validateimap\").html();\n        // Disable inputs and change button text\n        $(\"#imaphost\").attr(\"disabled\", true);\n        $(\"#imapport\").attr(\"disabled\", true);\n        $(\"#imapusername\").attr(\"disabled\", true);\n        $(\"#imappassword\").attr(\"disabled\", true);\n        $(\"#use_imap\").attr(\"disabled\", true);\n        $(\"#use_tls\").attr(\"disabled\", true);\n        $(\"#folder\").attr(\"disabled\", true);\n        $(\"#restrictdomain\").attr(\"disabled\", true);\n        $('#deletecampaign').attr(\"disabled\", true);\n        $('#lastlogin').attr(\"disabled\", true);\n        $('#imapfreq').attr(\"disabled\", true);\n        $(\"#validateimap\").attr(\"disabled\", true);  \n        $(\"#validateimap\").html(\"<i class='fa fa-circle-o-notch fa-spin'></i> Testing...\");\n        \n        api.IMAP.validate(server).done(function(data) {\n            if (data.success == true) {\n                Swal.fire({\n                    title: \"Success\",\n                    html: \"Logged into <b>\" + $(\"#imaphost\").val() + \"</b>\",\n                    type: \"success\",\n                })\n            } else {\n                Swal.fire({\n                    title: \"Failed!\",\n                    html: \"Unable to login to <b>\" + $(\"#imaphost\").val() + \"</b>.\",\n                    type: \"error\",\n                    showCancelButton: true,\n                    cancelButtonText: \"Close\",\n                    confirmButtonText: \"More Info\",\n                    confirmButtonColor: \"#428bca\",\n                    allowOutsideClick: false,\n                }).then(function(result) {\n                    if (result.value) {\n                        Swal.fire({\n                            title: \"Error:\",\n                            text: data.message,\n                        })\n                    }\n                  })\n            }\n            \n          })\n          .fail(function() {\n            Swal.fire({\n                title: \"Failed!\",\n                text: \"An unecpected error occured.\",\n                type: \"error\",\n            })\n          })\n          .always(function() {\n            //Re-enable inputs and change button text\n            $(\"#imaphost\").attr(\"disabled\", false);\n            $(\"#imapport\").attr(\"disabled\", false);\n            $(\"#imapusername\").attr(\"disabled\", false);\n            $(\"#imappassword\").attr(\"disabled\", false);\n            $(\"#use_imap\").attr(\"disabled\", false);\n            $(\"#use_tls\").attr(\"disabled\", false);\n            $(\"#folder\").attr(\"disabled\", false);\n            $(\"#restrictdomain\").attr(\"disabled\", false);\n            $('#deletecampaign').attr(\"disabled\", false);\n            $('#lastlogin').attr(\"disabled\", false);\n            $('#imapfreq').attr(\"disabled\", false);\n            $(\"#validateimap\").attr(\"disabled\", false);\n            $(\"#validateimap\").html(oldHTML);\n\n          });\n\n      }); //end testclick\n\n    $(\"#reporttab\").click(function() {\n        loadIMAPSettings()\n    })\n\n    $(\"#advanced\").click(function() {\n        $(\"#advancedarea\").toggle();\n    })\n\n    function loadIMAPSettings(){\n        api.IMAP.get()\n        .success(function (imap) {\n            if (imap.length == 0){\n                $('#lastlogindiv').hide()\n            } else {\n                imap = imap[0]\n                if (imap.enabled == false){\n                    $('#lastlogindiv').hide()\n                } else {\n                    $('#lastlogindiv').show()\n                }\n                $(\"#imapusername\").val(imap.username)\n                $(\"#imaphost\").val(imap.host)\n                $(\"#imapport\").val(imap.port)\n                $(\"#imappassword\").val(imap.password)\n                $('#use_tls').prop('checked', imap.tls)\n                $('#use_imap').prop('checked', imap.enabled)\n                $(\"#folder\").val(imap.folder)\n                $(\"#restrictdomain\").val(imap.restrict_domain)\n                $('#deletecampaign').prop('checked', imap.delete_reported_campaign_email)\n                $('#lastloginraw').val(imap.last_login)\n                $('#lastlogin').val(moment.utc(imap.last_login).fromNow())\n                $('#imapfreq').val(imap.imap_freq)\n            }  \n\n        })\n        .error(function () {\n            errorFlash(\"Error fetching IMAP settings\")\n        })\n    }\n\n    var use_map = localStorage.getItem('gophish.use_map')\n    $(\"#use_map\").prop('checked', JSON.parse(use_map))\n    $(\"#use_map\").on('change', function () {\n        localStorage.setItem('gophish.use_map', JSON.stringify(this.checked))\n    })\n\n    loadIMAPSettings()\n})"], "fixing_code": ["$(document).ready(function(){function t(){api.IMAP.get().success(function(e){0==e.length?$(\"#lastlogindiv\").hide():(0==(e=e[0]).enabled?$(\"#lastlogindiv\").hide():$(\"#lastlogindiv\").show(),$(\"#imapusername\").val(e.username),$(\"#imaphost\").val(e.host),$(\"#imapport\").val(e.port),$(\"#imappassword\").val(e.password),$(\"#use_tls\").prop(\"checked\",e.tls),$(\"#use_imap\").prop(\"checked\",e.enabled),$(\"#folder\").val(e.folder),$(\"#restrictdomain\").val(e.restrict_domain),$(\"#deletecampaign\").prop(\"checked\",e.delete_reported_campaign_email),$(\"#lastloginraw\").val(e.last_login),$(\"#lastlogin\").val(moment.utc(e.last_login).fromNow()),$(\"#imapfreq\").val(e.imap_freq))}).error(function(){errorFlash(\"Error fetching IMAP settings\")})}$('[data-toggle=\"tooltip\"]').tooltip(),$(\"#apiResetForm\").submit(function(e){return api.reset().success(function(e){user.api_key=e.data,successFlash(e.message),$(\"#api_key\").val(user.api_key)}).error(function(e){errorFlash(e.message)}),!1}),$(\"#settingsForm\").submit(function(e){return $.post(\"/settings\",$(this).serialize()).done(function(e){successFlash(e.message)}).fail(function(e){errorFlash(e.responseJSON.message)}),!1}),$(\"#savesettings\").click(function(){var e={};return e.host=$(\"#imaphost\").val(),e.port=$(\"#imapport\").val(),e.username=$(\"#imapusername\").val(),e.password=$(\"#imappassword\").val(),e.enabled=$(\"#use_imap\").prop(\"checked\"),e.tls=$(\"#use_tls\").prop(\"checked\"),e.folder=$(\"#folder\").val(),e.imap_freq=$(\"#imapfreq\").val(),e.restrict_domain=$(\"#restrictdomain\").val(),e.delete_reported_campaign_email=$(\"#deletecampaign\").prop(\"checked\"),\"\"==e.host?(errorFlash(\"No IMAP Host specified\"),document.body.scrollTop=0,document.documentElement.scrollTop=0):\"\"==e.port?(errorFlash(\"No IMAP Port specified\"),document.body.scrollTop=0,document.documentElement.scrollTop=0):isNaN(e.port)||e.port<1||65535<e.port?(errorFlash(\"Invalid IMAP Port\"),document.body.scrollTop=0,document.documentElement.scrollTop=0):(\"\"==e.imap_freq&&(e.imap_freq=\"60\"),api.IMAP.post(e).done(function(e){1==e.success?successFlashFade(\"Successfully updated IMAP settings.\",2):errorFlash(\"Unable to update IMAP settings.\")}).success(function(e){t()}).fail(function(e){errorFlash(e.responseJSON.message)}).always(function(e){document.body.scrollTop=0,document.documentElement.scrollTop=0})),!1}),$(\"#validateimap\").click(function(){var e={};if(e.host=$(\"#imaphost\").val(),e.port=$(\"#imapport\").val(),e.username=$(\"#imapusername\").val(),e.password=$(\"#imappassword\").val(),e.tls=$(\"#use_tls\").prop(\"checked\"),\"\"==e.host)return errorFlash(\"No IMAP Host specified\"),document.body.scrollTop=0,document.documentElement.scrollTop=0,!1;if(\"\"==e.port)return errorFlash(\"No IMAP Port specified\"),document.body.scrollTop=0,document.documentElement.scrollTop=0,!1;if(isNaN(e.port)||e.port<1||65535<e.port)return errorFlash(\"Invalid IMAP Port\"),document.body.scrollTop=0,document.documentElement.scrollTop=0,!1;var t=$(\"#validateimap\").html();$(\"#imaphost\").attr(\"disabled\",!0),$(\"#imapport\").attr(\"disabled\",!0),$(\"#imapusername\").attr(\"disabled\",!0),$(\"#imappassword\").attr(\"disabled\",!0),$(\"#use_imap\").attr(\"disabled\",!0),$(\"#use_tls\").attr(\"disabled\",!0),$(\"#folder\").attr(\"disabled\",!0),$(\"#restrictdomain\").attr(\"disabled\",!0),$(\"#deletecampaign\").attr(\"disabled\",!0),$(\"#lastlogin\").attr(\"disabled\",!0),$(\"#imapfreq\").attr(\"disabled\",!0),$(\"#validateimap\").attr(\"disabled\",!0),$(\"#validateimap\").html(\"<i class='fa fa-circle-o-notch fa-spin'></i> Testing...\"),api.IMAP.validate(e).done(function(t){1==t.success?Swal.fire({title:\"Success\",html:\"Logged into <b>\"+escapeHtml($(\"#imaphost\").val())+\"</b>\",type:\"success\"}):Swal.fire({title:\"Failed!\",html:\"Unable to login to <b>\"+escapeHtml($(\"#imaphost\").val())+\"</b>.\",type:\"error\",showCancelButton:!0,cancelButtonText:\"Close\",confirmButtonText:\"More Info\",confirmButtonColor:\"#428bca\",allowOutsideClick:!1}).then(function(e){e.value&&Swal.fire({title:\"Error:\",text:t.message})})}).fail(function(){Swal.fire({title:\"Failed!\",text:\"An unecpected error occured.\",type:\"error\"})}).always(function(){$(\"#imaphost\").attr(\"disabled\",!1),$(\"#imapport\").attr(\"disabled\",!1),$(\"#imapusername\").attr(\"disabled\",!1),$(\"#imappassword\").attr(\"disabled\",!1),$(\"#use_imap\").attr(\"disabled\",!1),$(\"#use_tls\").attr(\"disabled\",!1),$(\"#folder\").attr(\"disabled\",!1),$(\"#restrictdomain\").attr(\"disabled\",!1),$(\"#deletecampaign\").attr(\"disabled\",!1),$(\"#lastlogin\").attr(\"disabled\",!1),$(\"#imapfreq\").attr(\"disabled\",!1),$(\"#validateimap\").attr(\"disabled\",!1),$(\"#validateimap\").html(t)})}),$(\"#reporttab\").click(function(){t()}),$(\"#advanced\").click(function(){$(\"#advancedarea\").toggle()});var e=localStorage.getItem(\"gophish.use_map\");$(\"#use_map\").prop(\"checked\",JSON.parse(e)),$(\"#use_map\").on(\"change\",function(){localStorage.setItem(\"gophish.use_map\",JSON.stringify(this.checked))}),t()});", "$(document).ready(function () {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n    $(\"#apiResetForm\").submit(function (e) {\n        api.reset()\n            .success(function (response) {\n                user.api_key = response.data\n                successFlash(response.message)\n                $(\"#api_key\").val(user.api_key)\n            })\n            .error(function (data) {\n                errorFlash(data.message)\n            })\n        return false\n    })\n    $(\"#settingsForm\").submit(function (e) {\n        $.post(\"/settings\", $(this).serialize())\n            .done(function (data) {\n                successFlash(data.message)\n            })\n            .fail(function (data) {\n                errorFlash(data.responseJSON.message)\n            })\n        return false\n    })\n    //$(\"#imapForm\").submit(function (e) {\n    $(\"#savesettings\").click(function() {\n        var imapSettings = {}\n        imapSettings.host = $(\"#imaphost\").val()\n        imapSettings.port = $(\"#imapport\").val()\n        imapSettings.username = $(\"#imapusername\").val()\n        imapSettings.password = $(\"#imappassword\").val()\n        imapSettings.enabled = $('#use_imap').prop('checked')\n        imapSettings.tls = $('#use_tls').prop('checked')\n\n        //Advanced settings\n        imapSettings.folder = $(\"#folder\").val()\n        imapSettings.imap_freq = $(\"#imapfreq\").val()\n        imapSettings.restrict_domain = $(\"#restrictdomain\").val()\n        imapSettings.delete_reported_campaign_email = $('#deletecampaign').prop('checked')\n        \n        //To avoid unmarshalling error in controllers/api/imap.go. It would fail gracefully, but with a generic error.\n        if (imapSettings.host == \"\"){\n            errorFlash(\"No IMAP Host specified\")\n            document.body.scrollTop = 0;\n            document.documentElement.scrollTop = 0;\n            return false\n        }\n        if (imapSettings.port == \"\"){\n            errorFlash(\"No IMAP Port specified\")\n            document.body.scrollTop = 0;\n            document.documentElement.scrollTop = 0;\n            return false\n        }\n        if (isNaN(imapSettings.port) || imapSettings.port <1 || imapSettings.port > 65535  ){ \n            errorFlash(\"Invalid IMAP Port\")\n            document.body.scrollTop = 0;\n            document.documentElement.scrollTop = 0;\n            return false\n        }\n        if (imapSettings.imap_freq == \"\"){\n            imapSettings.imap_freq = \"60\"\n        }\n\n        api.IMAP.post(imapSettings).done(function (data) {\n                if (data.success == true) {\n                    successFlashFade(\"Successfully updated IMAP settings.\", 2)\n                } else {\n                    errorFlash(\"Unable to update IMAP settings.\")\n                }\n            })\n            .success(function (data){\n                loadIMAPSettings()\n            })\n            .fail(function (data) {\n                errorFlash(data.responseJSON.message)\n            })\n            .always(function (data){\n                document.body.scrollTop = 0;\n                document.documentElement.scrollTop = 0;\n            })\n        \n        return false\n    })\n\n    $(\"#validateimap\").click(function() {\n\n        // Query validate imap server endpoint\n        var server = {}\n        server.host = $(\"#imaphost\").val()\n        server.port = $(\"#imapport\").val()\n        server.username = $(\"#imapusername\").val()\n        server.password = $(\"#imappassword\").val()\n        server.tls = $('#use_tls').prop('checked')\n\n        //To avoid unmarshalling error in controllers/api/imap.go. It would fail gracefully, but with a generic error. \n        if (server.host == \"\"){\n            errorFlash(\"No IMAP Host specified\")\n            document.body.scrollTop = 0;\n            document.documentElement.scrollTop = 0;\n            return false\n        }\n        if (server.port == \"\"){\n            errorFlash(\"No IMAP Port specified\")\n            document.body.scrollTop = 0;\n            document.documentElement.scrollTop = 0;\n            return false\n        }\n        if (isNaN(server.port) || server.port <1 || server.port > 65535  ){\n            errorFlash(\"Invalid IMAP Port\")\n            document.body.scrollTop = 0;\n            document.documentElement.scrollTop = 0;\n            return false\n        }\n\n        var oldHTML = $(\"#validateimap\").html();\n        // Disable inputs and change button text\n        $(\"#imaphost\").attr(\"disabled\", true);\n        $(\"#imapport\").attr(\"disabled\", true);\n        $(\"#imapusername\").attr(\"disabled\", true);\n        $(\"#imappassword\").attr(\"disabled\", true);\n        $(\"#use_imap\").attr(\"disabled\", true);\n        $(\"#use_tls\").attr(\"disabled\", true);\n        $(\"#folder\").attr(\"disabled\", true);\n        $(\"#restrictdomain\").attr(\"disabled\", true);\n        $('#deletecampaign').attr(\"disabled\", true);\n        $('#lastlogin').attr(\"disabled\", true);\n        $('#imapfreq').attr(\"disabled\", true);\n        $(\"#validateimap\").attr(\"disabled\", true);  \n        $(\"#validateimap\").html(\"<i class='fa fa-circle-o-notch fa-spin'></i> Testing...\");\n        \n        api.IMAP.validate(server).done(function(data) {\n            if (data.success == true) {\n                Swal.fire({\n                    title: \"Success\",\n                    html: \"Logged into <b>\" + escapeHtml($(\"#imaphost\").val()) + \"</b>\",\n                    type: \"success\",\n                })\n            } else {\n                Swal.fire({\n                    title: \"Failed!\",\n                    html: \"Unable to login to <b>\" + escapeHtml($(\"#imaphost\").val()) + \"</b>.\",\n                    type: \"error\",\n                    showCancelButton: true,\n                    cancelButtonText: \"Close\",\n                    confirmButtonText: \"More Info\",\n                    confirmButtonColor: \"#428bca\",\n                    allowOutsideClick: false,\n                }).then(function(result) {\n                    if (result.value) {\n                        Swal.fire({\n                            title: \"Error:\",\n                            text: data.message,\n                        })\n                    }\n                  })\n            }\n            \n          })\n          .fail(function() {\n            Swal.fire({\n                title: \"Failed!\",\n                text: \"An unecpected error occured.\",\n                type: \"error\",\n            })\n          })\n          .always(function() {\n            //Re-enable inputs and change button text\n            $(\"#imaphost\").attr(\"disabled\", false);\n            $(\"#imapport\").attr(\"disabled\", false);\n            $(\"#imapusername\").attr(\"disabled\", false);\n            $(\"#imappassword\").attr(\"disabled\", false);\n            $(\"#use_imap\").attr(\"disabled\", false);\n            $(\"#use_tls\").attr(\"disabled\", false);\n            $(\"#folder\").attr(\"disabled\", false);\n            $(\"#restrictdomain\").attr(\"disabled\", false);\n            $('#deletecampaign').attr(\"disabled\", false);\n            $('#lastlogin').attr(\"disabled\", false);\n            $('#imapfreq').attr(\"disabled\", false);\n            $(\"#validateimap\").attr(\"disabled\", false);\n            $(\"#validateimap\").html(oldHTML);\n\n          });\n\n      }); //end testclick\n\n    $(\"#reporttab\").click(function() {\n        loadIMAPSettings()\n    })\n\n    $(\"#advanced\").click(function() {\n        $(\"#advancedarea\").toggle();\n    })\n\n    function loadIMAPSettings(){\n        api.IMAP.get()\n        .success(function (imap) {\n            if (imap.length == 0){\n                $('#lastlogindiv').hide()\n            } else {\n                imap = imap[0]\n                if (imap.enabled == false){\n                    $('#lastlogindiv').hide()\n                } else {\n                    $('#lastlogindiv').show()\n                }\n                $(\"#imapusername\").val(imap.username)\n                $(\"#imaphost\").val(imap.host)\n                $(\"#imapport\").val(imap.port)\n                $(\"#imappassword\").val(imap.password)\n                $('#use_tls').prop('checked', imap.tls)\n                $('#use_imap').prop('checked', imap.enabled)\n                $(\"#folder\").val(imap.folder)\n                $(\"#restrictdomain\").val(imap.restrict_domain)\n                $('#deletecampaign').prop('checked', imap.delete_reported_campaign_email)\n                $('#lastloginraw').val(imap.last_login)\n                $('#lastlogin').val(moment.utc(imap.last_login).fromNow())\n                $('#imapfreq').val(imap.imap_freq)\n            }  \n\n        })\n        .error(function () {\n            errorFlash(\"Error fetching IMAP settings\")\n        })\n    }\n\n    var use_map = localStorage.getItem('gophish.use_map')\n    $(\"#use_map\").prop('checked', JSON.parse(use_map))\n    $(\"#use_map\").on('change', function () {\n        localStorage.setItem('gophish.use_map', JSON.stringify(this.checked))\n    })\n\n    loadIMAPSettings()\n})\n"], "filenames": ["static/js/dist/app/settings.min.js", "static/js/src/app/settings.js"], "buggy_code_start_loc": [1, 135], "buggy_code_end_loc": [2, 234], "fixing_code_start_loc": [1, 135], "fixing_code_end_loc": [2, 234], "type": "CWE-79", "message": "Cross Site Scripting (XSS) vulnerability in Gophish before 0.11.0 via the IMAP Host field on the account settings page.", "other": {"cve": {"id": "CVE-2020-24712", "sourceIdentifier": "cve@mitre.org", "published": "2020-10-28T20:15:13.527", "lastModified": "2020-10-30T20:25:30.710", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross Site Scripting (XSS) vulnerability in Gophish before 0.11.0 via the IMAP Host field on the account settings page."}, {"lang": "es", "value": "Una vulnerabilidad de tipo Cross Site Scripting (XSS) en Gophish versiones anteriores a 0.11.0, por medio del campo Host IMAP en la p\u00e1gina de configuraci\u00f3n de la cuenta"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:getgophish:gophish:*:*:*:*:*:*:*:*", "versionEndExcluding": "0.11.0", "matchCriteriaId": "EBAFA832-F932-4CA4-BAB8-3F639424B438"}]}]}], "references": [{"url": "https://github.com/gophish/gophish/commit/4e9b94b641755f359542b246cc0c555fa3bc6715", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/gophish/gophish/releases/tag/v0.11.0", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://herolab.usd.de/security-advisories/usd-2020-0050/", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/gophish/gophish/commit/4e9b94b641755f359542b246cc0c555fa3bc6715"}}