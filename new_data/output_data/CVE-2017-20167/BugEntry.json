{"buggy_code": ["<?php\n\nrequire 'includes/header.php';\n\n// If user is not an administrator.\nif (!allowed('manage_reports')) {\n    $_SESSION['notice'] = MESSAGE_PAGE_ACCESS_DENIED;\n    header('Location: '.DOMAIN);\n    exit('');\n}\n\nif ((int) $_GET['handle']) {\n    $link->update('reports', array('handled' => 1), 'id='.$link->escape((int) $_GET['handle']));\n    $_SESSION['notice'] = 'Report marked as handled.';\n    log_mod('handle_report', (int) $_GET['handle']);\n    header('Location: '.DOMAIN.'reports');\n    die();\n}\n\nif ((int) $_GET['topic'] && !$_GET['reply']) {\n    $link->update('reports', array('handled' => 1), 'reply=0 AND topic='.$link->escape((int) $_GET['topic']));\n    $_SESSION['notice'] = 'Reports marked as handled.';\n    log_mod('handle_reports', (int) $_GET['topic']);\n    header('Location: '.DOMAIN.'reports');\n    die();\n}\n\nif ((int) $_GET['topic'] && (int) $_GET['reply']) {\n    $link->update('reports', array('handled' => 1), 'reply='.(int) $_GET['reply'].' AND topic='.(int) $_GET['topic']);\n    $_SESSION['notice'] = 'Reports marked as handled.';\n    log_mod('handle_reports', (int) $_GET['topic'].'#reply_'.(int) $_GET['reply']);\n    header('Location: '.DOMAIN.'reports');\n    die();\n}\n\n$page_title = 'Reports ('.$NUM_REPORTS.')';\n$additional_head = '';\n\nif ($NUM_REPORTS > 0) {\n    $sql = 'SELECT reports.id, reports.topic, reports.reply, reports.reason, topics.headline, count(reports.id) as times_reported FROM reports, topics WHERE topics.id = reports.topic AND reports.handled = 0 GROUP BY reports.topic, reports.reply ORDER BY reports.id DESC';\n    $send = $link->db_exec($sql);\n    if ($link->num_rows() > 0) {\n        $continue = true;\n    }\n}\n\nif ($continue) {\n    echo '<table>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th class=\"minimal\">Link</th>\n\t\t\t\t<th>First reason</th>\n\t\t\t\t<th class=\"minimal\">Times reported</th>\n\t\t\t\t<th class=\"minimal\">Details</th>\n\t\t\t\t<th class=\"minimal\">Handle</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>';\n\n    $selecter = true;\n    while ($get = mysql_fetch_array($send)) {\n        if ($selecter) {\n            $class = '';\n        } else {\n            $class = 'odd';\n        }\n        $selecter = !$selecter;\n\n        $topiclink = \"<a href='\".DOMAIN.'topic/'.$get['topic'];\n        if ($get['reply']) {\n            $topiclink .= '#reply_'.$get['reply'];\n        }\n        $topiclink .= \"'>\".$get['headline'].'</a>';\n\n        $report_info = $get['topic'];\n        if ($get['reply']) {\n            $report_info .= '/'.$get['reply'];\n        }\n\n        // Get data.\n        echo \"<tr class=\\\"$class\\\">\n\t\t<td class=\\\"minimal\\\">\".$topiclink.'</td>\n\t\t<td>'.htmlspecialchars($get['reason']).'</td>\n\t\t<td class=\"minimal\">'.$get['times_reported'].\"</td>\n\t\t<td class=\\\"minimal\\\"><a href='\".DOMAIN.'show_report/'.$report_info.\"'>Details</a></td>\n\t\t<td class=\\\"minimal\\\"><a href='\".DOMAIN.'reports/handle/'.$report_info.\"'>Handle</a></td>\n\t\t</tr>\";\n    }\n    echo '</tbody> </table>';\n} else {\n    echo 'No unhandled reports.';\n}\n\necho '<h2>Past reports</h2>';\n    $sql = 'SELECT reports.id, reports.topic, reports.reply, reports.reason, topics.headline, count(reports.id) as times_reported FROM reports, topics WHERE topics.id = reports.topic AND reports.handled = 1 GROUP BY reports.topic, reports.reply ORDER BY reports.id DESC LIMIT 15';\n    $send = $link->db_exec($sql);\n    if ($link->num_rows() > 0) {\n        $continue = true;\n    } else {\n        $continue = false;\n    }\n\nif ($continue) {\n    echo '<table>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th class=\"minimal\">Link</th>\n\t\t\t\t<th>First reason</th>\n\t\t\t\t<th class=\"minimal\">Times reported</th>\n\t\t\t\t<th class=\"minimal\">Details</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>';\n\n    $selecter = true;\n    while ($get = mysql_fetch_array($send)) {\n        if ($selecter) {\n            $class = '';\n        } else {\n            $class = 'odd';\n        }\n        $selecter = !$selecter;\n\n        $topiclink = \"<a href='\".DOMAIN.'topic/'.$get['topic'];\n        if ($get['reply']) {\n            $topiclink .= '#reply_'.$get['reply'];\n        }\n        $topiclink .= \"'>\".$get['headline'].'</a>';\n\n        $report_info = $get['topic'];\n        if ($get['reply']) {\n            $report_info .= '/'.$get['reply'];\n        }\n\n        // Get data.\n        echo \"<tr class=\\\"$class\\\">\n\t\t<td class=\\\"minimal\\\">\".$topiclink.'</td>\n\t\t<td>'.htmlspecialchars($get['reason']).'</td>\n\t\t<td class=\"minimal\">'.$get['times_reported'].\"</td>\n\t\t<td class=\\\"minimal\\\"><a href='\".DOMAIN.'show_report/'.$report_info.\"'>Details</a></td>\n\t\t</tr>\";\n    }\n    echo '</tbody> </table>';\n} else {\n    echo 'No past reports.';\n}\n\nrequire 'includes/footer.php';\n"], "fixing_code": ["<?php\n\nrequire 'includes/header.php';\n\n// If user is not an administrator.\nif (!allowed('manage_reports')) {\n    $_SESSION['notice'] = MESSAGE_PAGE_ACCESS_DENIED;\n    header('Location: '.DOMAIN);\n    exit('');\n}\n\nif ((int) $_GET['handle']) {\n    $link->update('reports', array('handled' => 1), 'id='.$link->escape((int) $_GET['handle']));\n    $_SESSION['notice'] = 'Report marked as handled.';\n    log_mod('handle_report', (int) $_GET['handle']);\n    header('Location: '.DOMAIN.'reports');\n    die();\n}\n\nif ((int) $_GET['topic'] && !$_GET['reply']) {\n    $link->update('reports', array('handled' => 1), 'reply=0 AND topic='.$link->escape((int) $_GET['topic']));\n    $_SESSION['notice'] = 'Reports marked as handled.';\n    log_mod('handle_reports', (int) $_GET['topic']);\n    header('Location: '.DOMAIN.'reports');\n    die();\n}\n\nif ((int) $_GET['topic'] && (int) $_GET['reply']) {\n    $link->update('reports', array('handled' => 1), 'reply='.(int) $_GET['reply'].' AND topic='.(int) $_GET['topic']);\n    $_SESSION['notice'] = 'Reports marked as handled.';\n    log_mod('handle_reports', (int) $_GET['topic'].'#reply_'.(int) $_GET['reply']);\n    header('Location: '.DOMAIN.'reports');\n    die();\n}\n\n$page_title = 'Reports ('.$NUM_REPORTS.')';\n$additional_head = '';\n\nif ($NUM_REPORTS > 0) {\n    $sql = 'SELECT reports.id, reports.topic, reports.reply, reports.reason, topics.headline, count(reports.id) as times_reported FROM reports, topics WHERE topics.id = reports.topic AND reports.handled = 0 GROUP BY reports.topic, reports.reply ORDER BY reports.id DESC';\n    $send = $link->db_exec($sql);\n    if ($link->num_rows() > 0) {\n        $continue = true;\n    }\n}\n\nif ($continue) {\n    echo '<table>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th class=\"minimal\">Link</th>\n\t\t\t\t<th>First reason</th>\n\t\t\t\t<th class=\"minimal\">Times reported</th>\n\t\t\t\t<th class=\"minimal\">Details</th>\n\t\t\t\t<th class=\"minimal\">Handle</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>';\n\n    $selecter = true;\n    while ($get = mysql_fetch_array($send)) {\n        if ($selecter) {\n            $class = '';\n        } else {\n            $class = 'odd';\n        }\n        $selecter = !$selecter;\n\n        $topiclink = \"<a href='\".DOMAIN.'topic/'.$get['topic'];\n        if ($get['reply']) {\n            $topiclink .= '#reply_'.$get['reply'];\n        }\n        $topiclink .= \"'>\".htmlspecialchars($get['headline']).'</a>';\n\n        $report_info = $get['topic'];\n        if ($get['reply']) {\n            $report_info .= '/'.$get['reply'];\n        }\n\n        // Get data.\n        echo \"<tr class=\\\"$class\\\">\n\t\t<td class=\\\"minimal\\\">\".$topiclink.'</td>\n\t\t<td>'.htmlspecialchars($get['reason']).'</td>\n\t\t<td class=\"minimal\">'.$get['times_reported'].\"</td>\n\t\t<td class=\\\"minimal\\\"><a href='\".DOMAIN.'show_report/'.$report_info.\"'>Details</a></td>\n\t\t<td class=\\\"minimal\\\"><a href='\".DOMAIN.'reports/handle/'.$report_info.\"'>Handle</a></td>\n\t\t</tr>\";\n    }\n    echo '</tbody> </table>';\n} else {\n    echo 'No unhandled reports.';\n}\n\necho '<h2>Past reports</h2>';\n    $sql = 'SELECT reports.id, reports.topic, reports.reply, reports.reason, topics.headline, count(reports.id) as times_reported FROM reports, topics WHERE topics.id = reports.topic AND reports.handled = 1 GROUP BY reports.topic, reports.reply ORDER BY reports.id DESC LIMIT 15';\n    $send = $link->db_exec($sql);\n    if ($link->num_rows() > 0) {\n        $continue = true;\n    } else {\n        $continue = false;\n    }\n\nif ($continue) {\n    echo '<table>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th class=\"minimal\">Link</th>\n\t\t\t\t<th>First reason</th>\n\t\t\t\t<th class=\"minimal\">Times reported</th>\n\t\t\t\t<th class=\"minimal\">Details</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>';\n\n    $selecter = true;\n    while ($get = mysql_fetch_array($send)) {\n        if ($selecter) {\n            $class = '';\n        } else {\n            $class = 'odd';\n        }\n        $selecter = !$selecter;\n\n        $topiclink = \"<a href='\".DOMAIN.'topic/'.$get['topic'];\n        if ($get['reply']) {\n            $topiclink .= '#reply_'.$get['reply'];\n        }\n        $topiclink .= \"'>\".htmlspecialchars($get['headline']).'</a>';\n\n        $report_info = $get['topic'];\n        if ($get['reply']) {\n            $report_info .= '/'.$get['reply'];\n        }\n\n        // Get data.\n        echo \"<tr class=\\\"$class\\\">\n\t\t<td class=\\\"minimal\\\">\".$topiclink.'</td>\n\t\t<td>'.htmlspecialchars($get['reason']).'</td>\n\t\t<td class=\"minimal\">'.$get['times_reported'].\"</td>\n\t\t<td class=\\\"minimal\\\"><a href='\".DOMAIN.'show_report/'.$report_info.\"'>Details</a></td>\n\t\t</tr>\";\n    }\n    echo '</tbody> </table>';\n} else {\n    echo 'No past reports.';\n}\n\nrequire 'includes/footer.php';\n"], "filenames": ["reports.php"], "buggy_code_start_loc": [73], "buggy_code_end_loc": [129], "fixing_code_start_loc": [73], "fixing_code_end_loc": [129], "type": "CWE-79", "message": "A vulnerability, which was classified as problematic, was found in Minichan. This affects an unknown part of the file reports.php. The manipulation of the argument headline leads to cross site scripting. It is possible to initiate the attack remotely. The name of the patch is fc0e732e58630cba318d6bf49d1388a7aa9d390e. It is recommended to apply a patch to fix this issue. The identifier VDB-217785 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2017-20167", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-14T20:15:09.390", "lastModified": "2023-01-25T15:59:21.867", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability, which was classified as problematic, was found in Minichan. This affects an unknown part of the file reports.php. The manipulation of the argument headline leads to cross site scripting. It is possible to initiate the attack remotely. The name of the patch is fc0e732e58630cba318d6bf49d1388a7aa9d390e. It is recommended to apply a patch to fix this issue. The identifier VDB-217785 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:minichan:minichan:*:*:*:*:*:*:*:*", "versionEndExcluding": "2017-08-02", "matchCriteriaId": "AB9E45B6-12CA-41C7-A317-770197DB9E1B"}]}]}], "references": [{"url": "https://github.com/Minichan/Minichan/commit/fc0e732e58630cba318d6bf49d1388a7aa9d390e", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/Minichan/Minichan/pull/54", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217785", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217785", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Minichan/Minichan/commit/fc0e732e58630cba318d6bf49d1388a7aa9d390e"}}