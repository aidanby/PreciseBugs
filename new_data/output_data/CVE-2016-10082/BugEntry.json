{"buggy_code": ["Version 2.0.6 ()\n------------------------------------------------------------------------\n\n    * Fix Bug #428, regression when fetching remote files, wrong call\n      to HTTP_Request::getEffectiveUrl()\n\nVersion 2.0.5 (November 28th, 2016)\n------------------------------------------------------------------------\n\n    * [Security] Improve preventing fetching local files, thanks to\n      Xu Yue.\n      \n    * [Security] Prevent XSS in adding category and directory names, \n      thanks to Edric Teo @smarterbitbybit.\n\nVersion 2.0.4 (September 26th, 2016)\n------------------------------------------------------------------------\n\n    * [Security] Prevent moving files by using their directory name.\n      [Security] Possible SQL injection for entry category assignment\n      [Security] Possible SQL injection for removing&adding a plugin\n\n      All issues require a valid backend login.\n      Thanks to Hendrik Buchwald for finding this via their\n      RIPS source code analyzer (www.ripstech.com)\n\n    * [Security] Add new configuration option to enable fetching \n      local files for the media uploader. By default this is now\n      disabled to prevent Server Side Request Forgery (SSRF).\n      Thanks to Xu Yue for pointing this out!\n\n\nVersion 2.0.3 (January 4th, 2016)\n------------------------------------------------------------------------\n\n    * Fix XSS in backend comment editing form for logged-in authors,\n      thanks to Onur Yilmaz and Robert Abela from Netsparker.com\n\n    * Fix some backend entry form related event messages\n\n\nVersion 2.0.2 (Jul 24th, 2015)\n------------------------------------------------------------------------\n\n    * Fix security issues reported by Tim Coen of Curesec.com:\n\n      - Forbid uploading files with PHP contents and possible\n        PHP execution by authenticated users (critical if\n        you have possible untrustworthy authors)\n      - Add proper escaping for comment approval tokens to prevent\n        SQL injection (authenticated authors only)\n      - Add proper escaping of comment's author names in the\n        comment reply form to prevent XSS (2k11 template, javascript\n        based)\n\n    * Minor layout fixes for media DB media filters\n\n    * Backported some Importer db bugfixes\n\n    * CKEDITOR bugfix releases to 4.4.8 - please read the changelog.\n      Includes widget, lineutils, fakeobjects Plugins and S9y added\n      cheatsheet and procurator Plugins.\n      Changed config.autoParagraph set to false, to prevent wrapping\n      p tags around extraAllowedContent tags.\n\n    * Smarty bugfix upgrades to 3.1.27 - please read the changelog.\n      Compilation time was vastly improved.\n      New Features in NEW_FEATURES.txt.\n\n    * It is now possible to switch to a theme's admin theme if it has\n      been selected as a frontend theme first\n\n    * Syndication Plugin Issue #285:\n        - Add \"none\" as possible value for the xml-icon in the\n          syndication plugin, to enable plain links\n        - Reset subtome full icon path to support\n          serendipity_getTemplateFile()\n        - Link creation fixes for Bulletproof coloured style (eg blue)\n\n    * Fix auto include of a User theme /admin/user.css backend file.\n\n        PLEASE NOTE:\n\n        2.0.1 brought in an automatted include of a themes \"user.css\"\n        file. If you don't want to use such file any more (and you have\n        one), you will have to delete or rename it by hand!\n\n        Also please note, that user stylesheet selectors like\n\n            .selector {\n                background-image: url(img/example.jpg);\n            }\n\n        now need to use the {TEMPLATE_PATH} like\n\n            .selector {\n                background-image: url({TEMPLATE_PATH}img/example.jpg);\n            }\n\n        Content of a user.css will always be put LAST into the combined\n        CSS, this means it will override any possible plugin output.\n        If a user.css file does not exist in your own template directory,\n        but inside the default 2k11 template directory, this will always\n        be used (this behaviour is called \"default fallback chain\").\n\n    * Use https URLs for Atom feed, if called through HTTPS (hboeck)\n\n    * Restore the \"Show toolbar within media selector popup?\" option,\n      it was ignored before.\n\n    * Fix Issue #321, negative offset for LIMIT SQL statements when\n      using stable archive sorting and plugins like history.\n\n    * Templatechooser will not apply theme in backend admin.\n\n    * Use \"secure\" flag for (session) cookies sent over SSL, thanks to\n      dayton967\n\n    * Make preview_iframe.tpl template files load the proper frontend\n      CSS file, including cache-busting version string when changing\n      themes\n\n    * Implement patch to properly initiate templates_c on installation\n      for shared installs (thanks to fugue88)\n\n    * Allow templatechooser plugin to read a custom \"blacklist.txt\"\n      within its directory, that can blacklist certain themes from\n      being selected.\n\n    * Allow serendipity_setCookie() function to set custom expiry.\n\n    * Adapt .htaccess profile of \"mod_rewrite for 1&1 and problematic\n      servers\" to not include the \"Options -MultiViews\" option, since\n      this is often blocked\n\n    * Fix initializing smarty framework in the preview/saving iframe,\n      so that a template's config.inc.php is always loaded.\n\n    * Show debugging .tpl file information with relative directory only\n\n    * fix wrong upgrade removal of dead files with 2.0.1 update\n\n\nVersion 2.0.1 (March 12th, 2015)\n------------------------------------------------------------------------\n\n    * Fix missing escaping (possible XSS) of category names in the\n      Backend Entry Admin, which would allow editors that create a\n      forged category name to attack other editors in the backend\n      (privileged access to the backend required). Thanks a lot to Edric\n      Teo for reporting this issue.\n\n    * Improved detection for possible upgrade/plugin/PHP errors. A\n      warning will be emitted on the dashboard, when the Serendipity\n      JavaScript library could not be loaded.\n\n    * syndication fix: use absolute urls for subtome\n\n    * Issue 306: localStorage may be deactivated by setting a config\n      option or using security-related extensions at least in some\n      browsers, which might (at least in FF) break backend JS\n      functionality. Added extra tests to 2k11 backend JS.\n\n      If you use localStorage, please test if it is actually available\n      by testing if localStorage !== null in JS.\n\n    * Issue 280: Allow every theme to utilize a \"user.css\" file that\n      gets loaded on top of the frontend (or backend, if in admin/\n      subdirectory) theme. This file can be used for customized CSS of\n      a blog-admin which carries over to future Serendipity updates\n\n    * Issue 299: Do not display dashboard for users with no permission\n      to perform actions in the backend (frontend-users)\n\n    * Make \"rewriteURL\" smarty modifier available to do a\n      {$CONST.PATH_ARCHIVE|rewriteURL} within a smarty template file.\n\n    * Add a generic odd/even for backend dashboard widgets to align\n      properly. Future dashboard widgets need to get the new extra\n      class dashboard widget on the section element they create.\n\n    * Fix event emoticate plugin to reflect proper call usage of\n      serendipity_getTemplateFile(), if a theme uses custom emoticons.\n      UPDATE your themes emoticons.inc.php file, if have. See example\n      file in plugin dir.\n\n    * Change 2k11 config.inc.php to reflect proper\n      serendipity_getTemplateFile() when frontend files shall be\n      referenced within the backend.\n\n    * Fixed missing file message for deleted media items\n\n    * Fixed entry editor JS not emitting a 'No tags' msg in taxonomy\n      quick view. Improved serendipity.tagsList exit if freetag plugin\n      is not installed.\n\n    * Minor backend UI fixes (taxonomy quick view in entry editor,\n     'Done' msg emitted by Bayes plugin)\n\n    * Clearer language constants for entries in dashboard, labelled\n      \"In progress\"\n\n\nVersion 2.0 (January 23rd, 2015)\n------------------------------------------------------------------------\n\n    * Smarty fix for purging compiled files\n\n    * Fix wrong search page ordering when stable archive was active\n\n    * Prevent entryproperties from saving/displaying a browser-side\n      stored password that was actually not set.\n\n    * Stronger check for existing logger interface to prevent errors\n      when it is not actively used.\n\n    * Fix entryproperties being removed when publishing an article\n      from the dashboard and by specific plugins (freetag, trackback)\n      that modify entry data.\n\n    * Fix deleting comments when user is not an admin, but the entry\n      belongs to him. Thanks to berberic.\n\n    * Patch PEAR.php to use \"static\" isError declaration to prevent\n      PHP error messages\n\n    * Change order of IF-statements in entries.tpl to check for\n      comment_moderate/comment_added, to properly emit the message\n      whether a comment is being moderated.\n\n    * Fix searching for entries in the admin panel with database\n      types other than \"mysql\"\n\n    * Change entry editor's category assignment to toggle between\n      a hierarchical and a plain list (good for many categories)\n\n    * Fix date formatting in entry editor to not use ISO year\n      but the calendar year\n\n    * Fix autoupdate version read and transmit\n\n\nVersion 2.0-rc2 (December 23rd, 2014)\n------------------------------------------------------------------------\n\n    * Fixes escaping of comments in the new backend pane to prevent\n      XSS. Thanks to Steffen R\u9439mann for reporting!\n\n    * Fix wrong parameter count in serendipity_entity_decode\n\n\nVersion 2.0-rc1 (includes beta4/5/6) (December 19th, 2014)\n------------------------------------------------------------------------\n\n    * entryproperties plugin will now automatically disable nl2br\n      markup, when the WYSIWYG editor is used to create en entry\n\n    * PHP Requirement now is at: PHP 5.3+\n\n    * Fix for syndication subtome onclick handler\n\n    * Fix problematic preview stylesheet reference\n\n    * Optimized clearing smarty template files on upgrading\n\n    * Properly reset the \"disable markup\" feature of entryproperties\n      plugin when none selected\n\n    * PHP 5.4+ fix to properly call htmlspecialchars() / htmlentities() /\n      html_entity_decode() with a charset option, that has been\n      set to to default to UTF-8 and will yield empty strings when\n      being used in NON-UTF-8 environments. Now we utilize a\n      serendipity_specialchars() wrapper call.\n\n    * Added SQLite3 OO database layer for PHP 5.4+\n\n    * New personal preference to choose CKEditor toolbar presets.\n      Presets can be overwritte through a\n      templates/xxx/admin/ckeditor_custom_config.js if needed.\n      See htmlarea/ckeditor_s9y_config.js for details.\n\n    * Proof of concept templates \"default-php\" and \"default-xml\" have\n      been moved to Siber...Spartacus. They would need adapting to\n      Serendipity 2.0 (simple methods like getConfigDir() et al),\n      but since those Template APIs have virtually zero usage scenario,\n      they remain experimental.\n\n    * Added new PAT_JS mod_rewrite rule to .htaccess files\n\n    * Removed experimental support for PHP/SMARTY IN-MEMORY caching\n      added in 2.0-beta3, since this could not work.\n\n    * Smarty 3.1.21 upgrade (see changelog)\n\n    * Fix ImageMagick new sizing issues while forcing image geometry\n      exactly to given sizes with imageselectorplus\n\n    * Fix issue #220 with pdf directory moving rename() error\n\n    * Fix bug in entry listing, which showed wrong categories for\n      entries (Issue #201)\n\n    * Improve RegExp for Feed-URL matching, thanks to fugue88\n\n    * Proper SQLite PDO filenames in shared installations (Issue #214)\n\n    * ImageMagick now can get parameters to generate thumbnails,\n      see serendipity_config.inc.php for example values\n\n    * Allow to enable/disable the new autosave feature in personal\n      preferences (Issue #213)\n\n    * Re-added installer test for writable serendipity base directory\n\n\nVersion 2.0-beta3 (July 25th, 2014)\n------------------------------------------------------------------------\n\n    * Move admin/media_showitem.tpl to theme's directory in 2k11. With\n      an adaptation in serendipity_admin_image_selector.php, this now is\n      a \"true\" frontend template which uses the styles of the frontend\n      theme. Theme authors might want to adapt it to their themes.\n\n    * Moved general syndication plugin option into the core\n\n    * Smarty 3.1.19 upgrade (see changelog)\n\n    * Fixed thumbnail recreation, Issue #134\n\n    * Merged external JS libraries into a central \"plugins.js\" of the 2k11\n      backend template, can be updated through\n      templates/2k11/admin/js/gruntipity.php helper script.\n\n    * Adapted database table structure change for statistics, shoutbox,\n      karma and spamblock plugin (for new field definition of \"ip\" field)\n      Thanks to rohdef!\n\n    * Added new option \"enabledBackendPopups\" that allow to specify\n      if inline modal dialogs or popups are used in the backend for\n      e.g. the category selectory and media library\n\n    * added experimental support for PHP/SMARTY IN MEMORY caching\n      Enabled by default, if classes found loaded.\n      Disable with\n        $serendipity['disable_apc'] = true;\n      and\n        $serendipity['disable_memcache'] = true;\n\n    * Support added in serendipity_db_schema_import for sqlite\n      autoincrement\n\n    * Remove Google Reader button from syndication plugin options\n\n    * Add subToMe-button to syndication plugin and change its defaults\n\n    * Use Browsercache to save cache and restore entries\n\n    * Improved installer to forbid using database table prefixes with\n      special characters\n\n    * Themes using Engines are now able to use the parent's\n      configuration\n\n    * Prevent \"new\" plugin api to install double instances of plugins\n      that are not stackable (issue #45)\n\n    * Back button in plugin-config\n\n    * Adapted serendipity_editor.js to provide more global (though\n      deprecated) API access methods for plugins like amazonchooser\n      and linktrimmer, to perform insertion. Also fixed the\n      insertion of text when the ID of the element is not prefixed\n\n    * Move sort by name to simple filter in ML, replace file extension\n\n    * Remember selected media library folder\n\n    * Show upload-success or error with the ajax image uploader\n\n    * Fix preview entry exception (issue #119)\n\n    * Add serendipity.toggle_collapsible as a reusable JS function\n      for the core backend and backend sections emitted by plugins as\n      an easy way to provide show/hide functionality. (yellowled)\n\n    * Fixed media insert target bug (issued by #143, #145, #121)\n\n    * Fixed publish drafted-entries via dashboard (issue #160)\n\n    * All frontend themes that rely on the bundled Core jQuery library\n      are currently using the jquery.noConflict-mode for compatibility\n      to older plugins.\n      This mode is now considered deprecated and will be removed in\n      future releases. A new variable:\n        $serendipity['capabilities']['jquery-noconflict'] = false;\n      in your theme's config.inc.php file can now turn of that\n      noConflict-mode.\n\n    * Due to distinction of backend and frontend themes, each theme\n      that provides a custom jquery.js now only does so for the\n      frontend. The backend now listens to a:\n\n        $serendipity['capabilities']['jquery_backend'] = false;\n\n      variable, and the file needs to be jquery_backend.js that\n      a backend theme would reference to.\n\n    * Changed 2k11's config.inc.php file to provide a more stable\n      call of event hooks so that other themes can also hook\n      their own events.\n\n    * Changed JS for category filtering and its reset button to be a\n      reusable function, which is now also used in the list of\n      installable plugins.\n\n    * Fixed wrong local documentation URL in plugin configuration\n\n    * Added new \"backend_dashboard\" event-hook for plugins to use\n      within dashboard.\n\n    * Backend and Frontend themes can now be set independently from\n      each other. New backend themes now need to set:\n\n        Backend: Yes\n\n      in their info.txt file. If you adapt a custom admin theme,\n      ensure that it is compatible to the new \"2k11\" backend to\n      ensure proper future usage within Serendipity. The bulletproof\n      backend will now no longer be recognized as a backend theme\n      option, but can be selected as a new frontend theme, while\n      using 2k11 (=default) in the backend.\n\n    * Include klogger, call it as $serendipity['logger']->debug/error.\n      The log-level can be set in the general configuration and is\n      disabled by default.\n\n    * Fixed missing s9ymdb ID\n\n    * Add HTTP_Request2 and dependencies as bundled libraries and\n      update PEAR library to version 1.9.4\n\n    * Implemented AJAX uploadResize option to allow resizing an image\n      before upload (onli)\n\n    * Improved file/directory removal code to (hopefully) fail more\n      gracefully\n\n    * Change \"default\" admin backend template fallback chain so that\n      old admin themes can theoretically be shown with the \"old\"\n      admin interface. This however in many themes breaks the\n      Serendipity workflow. In other words, currently old custom backend\n      themes are deprecated. We are still working on how to deal\n      with this and if we can add some sort of compatibility or port.\n\n    * Fix bundled jquery's source mapping, upgraded to 1.11.1\n\n    * Fixed missing media name in resize GET URL\n\n    * Fix MediaDB overlay display\n\n    * Re-Added possibility to change filename/target directory for\n      media uploads\n\n    * Update CKEditor to 4.4\n\n    * Fixed some missing internationalization instances\n\n    * Minor CSS improvements for upgrader, plugin sequencing widget\n\n    * RSS importer accepts pubDate in addition to pubdate element.\n\n    * Upgrader in Dashboard can be disabled, returns error message when\n      URL not accessible\n\n    * Added a category filtering ability for the entry editor\n\n    * Better check when removing old/dead files to prevent error\n      messages\n\n    * WYSIWYG editor respects image floats\n\n    * Support html5 multiple file upload\n\n    * Modernizr, magnificPopup updates\n\n    * Improvements to equal heights js, button labels\n\n    * No longer truncate long entry titles\n\n    * Improve non-WYSIWYG editor tag insertion, url insertion\n\n    * Improve less DOM firing on certain javascript tasks\n\n    * Introduce js_backend event hook\n\n\nVersion 2.0-beta1 and followup -beta2 (April 14th, 2014)\n------------------------------------------------------------------------\n\n    * Upgrade Smarty libs to 3.1.18\n\n    * Automatic upgrade removal of old Smarty2 files (2.0-alpha2)\n      function uses SPL\n\n    * Implemented patch https://github.com/s9y/Serendipity/pull/15\n\n    * When switching Themes, both the backend and the frontend\n      will remember the timestamp of the last theme change,\n      to make sure that the browser will not cache a mismatching CSS.\n\n    * Fix theme change issues with global template vars in core\n      (1559472ca3) see 'temporary added empty $template_config_groups'\n      in 1.7-rc2 (eb77dc369a)\n\n    * Use Smarty for backend display output\n\n    * \"Themes\" are now what has previously been mixed as \"Design\",\n      \"Theme\", \"Template\" or \"Layouts\".\n\n    * WYSIWYG-Spawn-API reworked (2k11/admin/wysiwyg_init.tpl)\n\n    * All Javascript-functions like SetCookie now reside in a\n      serendipity-object, simulating a namespace.\n        SetCookie(...)\n      became\n        serendipity.SetCookie(...)\n\n    * Renamed JS-Function:\n        toggleCategorySelector became toggle_category_selector\n\n    * The advanced js option (eyecandy) got removed, as such a thing\n      like advanced js doesn't exist anymore\n\n    * dashboard_plugin has an equivalent in the core, replacing the\n      frontpage\n\n    * Constants like S9Y_FRAMEWORK_COMPAT are no longer set\n      (include_once is used instead)\n\n    * New additional option to render smarty-functions:\n      serendipity_smarty_show($template, $data)\n\n    * A number of functions now returns their result instead of echoing\n      them (TODO: a bunch of image- and\n      trackback-functions still use echo for messages\"):\n        serendipity_plugin_config\n        serendipity_printEntryForm\n        serendipity_printEntries\n        function serendipity_showMedia\n        serendipity_showPropertyForm\n        showMediaLibrary\n        serendipity_guessInput\n        memSnap\n        serendipity_displayTopUrlList\n        serendipity_displayTopExits\n        serendipity_displayTopReferrers\n        serendipity_printConfigTemplate\n        show_plugins\n\n    * Functions removed from the core:\n        serendipity_printConfigJS\n\n    * Functions added to the core:\n        serendipity_generateImageSelectorParams\n\n    * All internal plugins got extracted from plugin_internal.inc.php\n      and moved to plugins/.\n      They are renamed to work there (upgrader task provides migration):\n        serendipity_calendar_plugin    became serendipity_plugin_calendar\n        serendipity_quicksearch_plugin became serendipity_plugin_quicksearch\n        serendipity_archives_plugin    became serendipity_plugin_archives\n        serendipity_categories_plugin  became serendipity_plugin_categories\n        serendipity_syndication_plugin became serendipity_plugin_syndication\n        serendipity_superuser_plugin   became serendipity_plugin_superuser\n        serendipity_plug_plugin        became serendipity_plugin_plug\n\n    * Add plugin hook \"js\", generating a virtual serendipity.js\n\n    * Admin JS is now bundled in serendipity_editor.js.tpl and\n      rendered using smarty in the theme config\n\n    * Admin JS got rewritten using jQuery where applicable\n\n    * serendipity_define.js.php removed\n\n    * Removed support for layout.php\n\n    * The whole PHP-Code now almost never echoes integrated HTML, but\n      uses smarty template (TODO: Remove the almost)\n      The necessary smarty-templates reside in 2k11/admin/\n      Every theme can generate its own backend if it integrates those\n      templates under admin/ itself\n\n    * 2k11 is set as the new default backend, replacing bulletproof.\n      default remains the fallback so far.\n\n    * A number of functions had some arguments removed:\n        * function serendipity_displayImageList:\n            From\n                function serendipity_displayImageList($page = 0, $lineBreak = NULL, $manage = false, $url = NULL, $show_upload = false, $limit_path = NULL, $smarty_display = true)\n            to\n                function serendipity_displayImageList($page = 0, $lineBreak = NULL, $manage = false, $url = NULL, $show_upload = false, $limit_path = NULL)\n        * function serendipity_showMedia\n            From\n                function serendipity_showMedia(&$file, &$paths, $url = '', $manage = false, $lineBreak = 3, $enclose = true, $smarty_vars = array(), $smarty_display = true)\n            to\n                function serendipity_showMedia(&$file, &$paths, $url = '', $manage = false, $lineBreak = 3, $enclose = true, $smarty_vars = array())\n        * generate_plugins\n            From\n                static function generate_plugins($side, $tag = '', $negate = false, $class = null, $id = null, $tpl = 'sidebar.tpl')\n            to\n                static function generate_plugins($side, $negate = false, $class = null, $id = null, $tpl = 'sidebar.tpl')\n\n    * serendipity_showMedia now no longer returns the used template and\n      echoes the generated HTML, but only returns the generated HTML\n\n    * Themes now have their own configuration page,\n      ?serendipity[adminModule]=templates&serendipity[adminAction]=editConfiguration\n\n    * jQuery in the backend no longer runs in noConflict-mode. Use\n      $(...) instead of jQuery(...)\n\n    * The entryproperty-plugin will now always delete its cache on\n      uninstall, not only if the cache is activated then\n\n    * serendipity_is_iframe now really only checks for iframe and\n      doesn't also echo it\n\n    * Added option simpleFilters (meant to indicate to show less\n      filters and poweruser-options)\n\n    * serendipity_admin_image_selector.php no longer used by 2k11,\n      instead the media library (with admin/media_choose.tpl,\n      admin/media_upload.tpl, media_pane.tpl, media_items.tpl)\n      can generat the imageselector on its own. The editor calls\n      serendipity_admin.php?serendipity[adminModule]=media instead,\n      with serendipity[textarea] indicating the target, and\n      serendipity[showMediaToolbar] activating the imageSelector modus\n\n    * New required PHP-Version: 5.3 or higher (checked in the installer)\n\n\nVersion 1.7.8 (February 9th, 2014)\n------------------------------------------------------------------------\n\n    * Fixed POST for db entry insert, caused by 1.7.6 security feature\n\n\nVersion 1.7.7 (February 6th, 2014)\n------------------------------------------------------------------------\n\n    * Fixed PHP parse error in templatechooser plugin. Blame garvin. :(\n\n\nVersion 1.7.6 (February 6th, 2014)\n------------------------------------------------------------------------\n\n    * Fixed backend security issues, thanks to Stefan Schurtz:\n\n        - XSS of users realname in \"Manage users\" section\n          (Backend, requires login)\n        - XSS when creating an entry with bad id/timestamp values\n          (Backend, requires login)\n        - SQL-Injection for plugin installation parameter\n          (Backend, requires admin login)\n\n    * Templatechooser plugin uses \"default\" template as fallback,\n      not \"bulletproof\".\n\n\nVersion 1.7.5 (January 18th, 2014)\n------------------------------------------------------------------------\n\n    * Fixed textile PHP 5.2 (namespace) compat issue\n\n    * Added default value to spamblocks required_fields option [name,\n      comment]\n\n\nVersion 1.7.4 (January 11th, 2014)\n------------------------------------------------------------------------\n\n    * Fixed emoticate plugin icon link to check for textile class\n\n    * Upgrade textile plugin libs - lib3 extends to PHP >= 5.3.\n      Please check for new options!\n\n    * Fixed spamblocks Captcha imagecreate() with PHP > 5.3 versions\n\n    * Smarty 3.1.16 bugfix release - please read bundled-libs/Smarty/change_log.txt\n      about changes to versions 3.1.16 and 3.1.15.\n      Please also see special bundled-libs/Smarty/3.1.16_RELEASE_NOTES.txt\n\n    * Removed blogg.de filter from spamblock plugin, adapted htaccess\n      IP block algorithm for race conditions. .htaccess can now contain\n      multiple Deny From ranges to prevent parsing problems (DLange)\n\n    * Fixed IP columns in spamblocklog, spamblock_htaccess, karmalog, visitors\n      and shoutbox to varchar(45) for IPv6 - including tunneled IPv4 (39+6)\n\n    * Fixed possible double includement of plugin_internal.inc.php\n\n    * Fix possible temporary caching errors failing $eventData[0]['properties']\n\n    * Basic support for static blocks (includeentry plugin) in 2k11.\n\n    * Added \"backend_footer\" event hook\n\n    * Exclude \"frontpage extensions\" directories \"_vti_cnf\" on windows servers\n      in Media Library\n\n    * Fixed pagination when searching terms with fetchlimit < 4\n\n    * Fixed deprecated /e modifier with PHP >= 5.5 in nl2br plugin restore method\n\n\nVersion 1.7.3 (August 28th, 2013)\n------------------------------------------------------------------------\n\n    * Trackback to https:// style URLs will use proper port 443 instead\n      of 80.\n\n    * Disabled htmlarea spellchecker module, http://osvdb.org/87395\n      Thanks for Henri Salo for pointing this out. CVE-2013-5670\n\n\nVersion 1.7.2 (July 26th, 2013)\n------------------------------------------------------------------------\n\n    * Fix a syntax error in the \"mysql\" deprecation code, thanks\n      to Ian\n\n\nVersion 1.7.1 (July 26th, 2013)\n------------------------------------------------------------------------\n\n    * Added new event hooks \"backend_plugins_install\", \"backend_plugins_update\"\n      and \"backend_templates_install\".\n\n    * Serendipity will switch to mysqli if PHP >= 5.5 is used (mysql\n      is deprecated)\n\n    * Smarty upgrade to 3.1.14 (read changeLog and the README for API changes since Smarty 2)\n\n    * Upgrader will now remove/delete the browsercompatibility plugin\n\n    * Fixed Media Library exclude path to not show/proceed ckeditor/kcfinders .thumbs dir\n\n    * Fixed bulletproof->colorset GET mismatch with categorytemplates plugin\n      config.inc.php [Line 29]\n\n    * German translation for stable archives added (YL)\n\n    * Fixed curl result bug in spartacus plugin\n\n    * Create new migration task for propagate defaultBaseURL when\n      currently empty (onli)\n\n    * Fixed statistics sidebar querys ( & for PostgreSQL ) [242520b]\n      and added some missing html end tags\n\n    * Added missing current group name when editing usergroups\n\n\nVersion 1.7 (May 11th, 2013)\n------------------------------------------------------------------------\n\n    * rc4: Get ready for CKEDITOR-wysiwyg Plugin mode\n\n    * rc4: Fixed fetching javascript object (for nugget textareas) in non-wysiwyg-mode\n\n    * rc4: Change .htaccess blocking mechanism by spamblock plugin to not fetch\n      too many datarows, thanks to DLange from the forums. (The .htaccess\n      feature is still considered experimental, use at your own risk ;))\n\n    * rc4: Fixed entryproperties backend 'cache now' link\n\n    * rc3 + rc4: Media database: Escape more Cookie values to prevent storing\n      possible XSS (http://board.s9y.org/viewtopic.php?f=3&t=19142).\n      Escape hotlinked media filename. Escape importer host name error\n      Thanks to GreenSun from the forums for bringing this to attention,\n      originally reported by Dshellnoi Unix\n\n    * rc2: Alter entries.tpl to add the line:\n      {assign var=\"entry\" value=$entry scope=\"parent\"}\n      for proper propagation of $entry to sub-templates.\n\n    * rc2: Alter error reporting to only fail when 'debug' mode is enabled,\n      so that \"normal\" blog installations will not fail on specific\n      E_STRICT warnings that are not important.\n\n    * rc2: temporary added empty $template_config_groups into templates with config,\n      to avoid display troubles for template changes, if previous template had these set.\n      Please check your template.\n\n    * rc2: reflect POST submitted changes in Bulletproof template configs re-set situations\n\n    * various PHP 5 compatibility fixes in core and plugins\n\n    * Allow entryproperties plugin to define defaults for custom fields\n\n    * Onyx, Net_URL classes: Remove PHP4 style constructor due to\n      PHP5 error \"Constructor already defined\"\n\n    * Improved RSS sidebarplugin to support Atom\n\n    * Bundled simplepie\n\n    * For Blogs running on a non-UTF-8 language, set a Smarty constant\n      to indicate the actually used charset.\n\n    * Added to use MyISAM handler for s9y tables (we do not use InnoDB\n      features, but rely on MyISAM fulltext)\n\n    * fixed defaultBaseURL did not show up installer. Thanks to onli.\n      Follow up from c292bad\n\n    * fixed draft & future entries preview link in backend\n\n    * Improved karmarating plugin to be able to use AJAX calls\n      (gregman)\n\n    * Allow Smarty to fetch .tpl files from all directories so that\n      s9y plugin can use the fetch() call for their .tpl files no\n      matter which (symlinked) directory the plugin resides in.\n      The Smarty security policy to us only serves as a restriction\n      within .tpl files to not allow arbitrary PHP modifier/function calls.\n      If in the future Smarty supports enforcing trustedDir checks on\n      {include} calls seperately to smarty->fetch() calls, we'll also\n      add that to .tpl files.\n      (garvinhicking)\n\n    * Patch by Markus Br\u609ener: Properly handle files that have no\n      extension in media database\n\n    * Made Spartacus recognize github.com mirror (garvinhicking)\n\n    * Add \"Summary\" output to title of summary archive pages, patch by\n      hboeck\n\n    * Set the smarty object by instance (ophian)\n      It is often needed to access the Smarty object from anywhere in your code, e.g. in plugins\n      We now ensure that there is only one instance of the object available.\n      To obtain an instance of this class: $serendipity['smarty'] = Serendipity_Smarty::getInstance();\n      The first time this is called a new instance will be created. Thereafter, the same instance is handed back.\n      To overwrite use $serendipity['smarty'] = new Serendipity_Smarty; to create a new instance.\n\n    * Set a global Serendipity errorToExceptionHandler (ophian)\n      changed some old smarty trigger_errors to PHPs native function\n\n    * Updated spamblock plugin (ophian)\n      changed wordfilter to function and Commenters moderation check verify_once\n      to get checked via wordfilter to reject known spam comments before\n\n    * Changed backend comment (error) messages  (ophian)\n      as now captured and styleable messages\n      (newly added .serendipity_backend_msg_notice css class)\n\n    * Updated nl2br plugin (ophian)\n      added isolation tag using nl to br\n      this also adds some NoBR buttons to backend entry forms\n\n    * Smarty3 support (ophian)\n      with this upgrade Serendipity / Smarty will at least need a webserver running the PHP 5.2 series.\n      As of August 2011, all PHP users should note, that the PHP 5.2 series is NOT supported anymore by the PHP developers.\n      All users are strongly encouraged to upgrade to PHP 5.3.8 and up. Please refer to your ISP about this.\n\n    * Added new serendipity['defaultBaseURL'] variable that makes sure\n      that the baseURL is not overriden when configuring serendipity\n      with a possibly autodetected currentl URL. Patch by Manko10.\n\n\n(Older NEWS see file NEWS_OLD)\n", "<?php\n# Copyright (c) 2003-2005, Jannis Hermanns (on behalf the Serendipity Developer Team)\n# All rights reserved.  See LICENSE file for licensing details\n\nif (IN_serendipity !== true) {\n    die (\"Don't hack!\");\n}\n\n/**\n * Convert a PHP Ini setting to a boolean flag\n *\n * @access public\n * @param   mixed       input variable\n * @return  boolean     output variable\n */\nfunction serendipity_ini_bool($var) {\n    return ($var === 'on' || $var == '1');\n}\n\n/**\n * convert a size value from a PHP.ini to a bytesize\n *\n * @access public\n * @param   string  size value from PHP.ini\n * @return  string  bytesize\n */\nfunction serendipity_ini_bytesize($val) {\n    if ( $val == '' )\n        return 0;\n\n    switch(substr($val, -1)) {\n        case 'k':\n        case 'K':\n            return (int) $val * 1024;\n            break;\n        case 'm':\n        case 'M':\n            return (int) $val * 1048576;\n            break;\n        default:\n            return $val;\n   }\n}\n\n/**\n * Update the serendipity_config_local.inc.php file with core information\n *\n * @access public\n * @param   string  Database name\n * @param   string  Database prefix\n * @param   string  Database host\n * @param   string  Database user\n * @param   string  Datapase Passwort\n * @param   string  Database type\n * @param   string  Use persistent connections?\n * @param   array   An array of additional variables to be put into the config file\n * @return true\n */\nfunction serendipity_updateLocalConfig($dbName, $dbPrefix, $dbHost, $dbUser, $dbPass, $dbType, $dbPersistent, $privateVariables = null) {\n    global $serendipity;\n    umask(0000);\n\n    $file = 'serendipity_config_local.inc.php';\n    $path = $serendipity['serendipityPath'];\n\n    $oldconfig = @file_get_contents($path . $file);\n    $configfp  = fopen($path . $file, 'w');\n\n    if (!is_resource($configfp)) {\n        $errs[] = sprintf(FILE_WRITE_ERROR, $file);\n        $errs[] = sprintf(DIRECTORY_RUN_CMD, 'chown -R www:www', $path) . ' (' . WWW_USER . ')';\n        $errs[] = sprintf(DIRECTORY_RUN_CMD, 'chmod 770'       , $path);\n        $errs[] = BROWSER_RELOAD;\n\n        return $errs;\n    }\n\n    if (isset($_POST['sqlitedbName']) && !empty($_POST['sqlitedbName'])) {\n        $dbName = $_POST['sqlitedbName'];\n    }\n\n    $file_start    = \"<?php\\n\"\n                   . \"\\t/*\\n\"\n                   . \"\\t  Serendipity configuration file\\n\";\n    $file_mark     = \"\\n\\t// End of Serendipity configuration file\"\n                   . \"\\n\\t// You can place your own special variables after here:\\n\";\n    $file_end      = \"\\n?>\";\n    $file_personal = '';\n\n    preg_match('@' . preg_quote($file_start) . '.*' . preg_quote($file_mark) . '(.+)' . preg_quote($file_end) . '@imsU', $oldconfig, $match);\n    if (!empty($match[1])) {\n        $file_personal = $match[1];\n    }\n\n    fwrite($configfp, $file_start);\n\n    fwrite($configfp, \"\\t  Written on \". date('r') .\"\\n\");\n    fwrite($configfp, \"\\t*/\\n\\n\");\n\n    fwrite($configfp, \"\\t\\$serendipity['versionInstalled']  = '{$serendipity['version']}';\\n\");\n    fwrite($configfp, \"\\t\\$serendipity['dbName']            = '\" . addslashes($dbName) . \"';\\n\");\n    fwrite($configfp, \"\\t\\$serendipity['dbPrefix']          = '\" . addslashes($dbPrefix) . \"';\\n\");\n    fwrite($configfp, \"\\t\\$serendipity['dbHost']            = '\" . addslashes($dbHost) . \"';\\n\");\n    fwrite($configfp, \"\\t\\$serendipity['dbUser']            = '\" . addslashes($dbUser) . \"';\\n\");\n    fwrite($configfp, \"\\t\\$serendipity['dbPass']            = '\" . addslashes($dbPass) . \"';\\n\");\n    fwrite($configfp, \"\\t\\$serendipity['dbType']            = '\" . addslashes($dbType) . \"';\\n\");\n    fwrite($configfp, \"\\t\\$serendipity['dbPersistent']      = \". (serendipity_db_bool($dbPersistent) ? 'true' : 'false') .\";\\n\");\n    if ($serendipity['dbNames']) {\n        fwrite($configfp, \"\\t\\$serendipity['dbCharset']         = '\" . addslashes(SQL_CHARSET) . \"';\\n\");\n    }\n\n    if (is_array($privateVariables) && count($privateVariables) > 0) {\n        foreach($privateVariables AS $p_idx => $p_val) {\n            fwrite($configfp, \"\\t\\$serendipity['{$p_idx}']  = '\" . addslashes($p_val) . \"';\\n\");\n        }\n    }\n\n    fwrite($configfp, $file_mark .  $file_personal . $file_end);\n\n    fclose($configfp);\n\n    @chmod($path . $file, 0700);\n    return true;\n}\n\n/**\n * Setup the core database tables\n *\n * Creates the needed tables - beware, they will be empty and need to be stuffed with\n * default templates and such...\n *\n * @access public\n * @return null\n */\nfunction serendipity_installDatabase() {\n  global $serendipity;\n\n    $queries = serendipity_parse_sql_tables(S9Y_INCLUDE_PATH . 'sql/db.sql');\n    $queries = str_replace('{PREFIX}', $serendipity['dbPrefix'], $queries);\n\n    foreach ($queries as $query) {\n        serendipity_db_schema_import($query);\n    }\n\n    if (file_exists(S9Y_INCLUDE_PATH . 'sql/preload.sql')) {\n        $queries = serendipity_parse_sql_inserts(S9Y_INCLUDE_PATH . 'sql/preload.sql');\n        $queries = str_replace('{PREFIX}', $serendipity['dbPrefix'], $queries);\n        foreach ($queries as $query) {\n            serendipity_db_schema_import($query);\n        }\n    }\n}\n\n/**\n * Check a default value of a config item from the configuration template files\n *\n * @access public\n * @param   string      Name of the config item to check\n * @param   string      The default value, if none is found\n * @param   boolean     If true, it's the personal config template, if false its the global config template\n * @param   string      Protected fields will not be echo'd in the HTML form\n * @return  string      The default value\n */\nfunction serendipity_query_default($optname, $default, $usertemplate = false, $type = 'string') {\n    global $serendipity;\n\n    /* I won't tell you the password, it's MD5 anyway, you can't do anything with it */\n    if ($type == 'protected' && IS_installed === true) {\n        return '';\n    }\n\n    switch ($optname) {\n        case 'permalinkStructure':\n            return $default;\n\n        case 'dbType' :\n            if (extension_loaded('PDO') &&\n                in_array('pgsql', PDO::getAvailableDrivers())) {\n                $type = 'pdo-postgres';\n            }\n            if (extension_loaded('pgsql')) {\n                $type = 'postgres';\n            }\n            if (extension_loaded('mysql')) {\n                $type = 'mysql';\n            }\n            if (extension_loaded('mysqli')) {\n                $type = 'mysqli';\n            }\n            return $type;\n\n        case 'serendipityPath':\n            if (empty($_SERVER['PHP_SELF'])) {\n                $test_path1 = $_SERVER['DOCUMENT_ROOT'] . rtrim(dirname($_SERVER['SCRIPT_FILENAME']), '/') . '/';\n            } else {\n                $test_path1 = $_SERVER['DOCUMENT_ROOT'] . rtrim(dirname($_SERVER['PHP_SELF']), '/') . '/';\n            }\n            $test_path2 = serendipity_getRealDir(__FILE__);\n\n            if (!empty($_SERVER['ORIG_PATH_TRANSLATED']) && file_exists(dirname($_SERVER['ORIG_PATH_TRANSLATED']) . '/serendipity_admin.php')) {\n                return realpath(rtrim(dirname($_SERVER['ORIG_PATH_TRANSLATED']), '/')) . '/';\n            }\n\n            if (file_exists($test_path1 . 'serendipity_admin.php')) {\n                return $test_path1;\n            } elseif (defined('S9Y_DATA_PATH')) {\n                // Shared installation!\n                return S9Y_DATA_PATH;\n            } else {\n                return $test_path2;\n            }\n\n        case 'serendipityHTTPPath':\n            return rtrim(dirname($_SERVER['PHP_SELF']), '/') .'/';\n\n        case 'defaultBaseURL':\n        case 'baseURL':\n            $ssl  = isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on';\n            $port = $_SERVER['SERVER_PORT'];\n\n            return sprintf('http%s://%s%s%s',\n\n                            $ssl ? 's' : '',\n                            preg_replace('@^([^:]+):?.*$@', '\\1', $_SERVER['HTTP_HOST']),\n                            (($ssl && $port != 443) || (!$ssl && $port != 80)) ? (':' . $port) : '',\n                            rtrim(dirname($_SERVER['PHP_SELF']), '/') .'/'\n                   );\n\n        case 'convert':\n            $path = array();\n\n            $path[] = ini_get('safe_mode_exec_dir');\n\n            if (isset($_SERVER['PATH'])) {\n                $path = array_merge($path, explode(PATH_SEPARATOR, $_SERVER['PATH']));\n                // remove unwanted empty or system32 path parts, so that wrong system32/convert.exe is prevented.\n                foreach ($path as $pk => $pv) {\n                    if (stripos($pv, 'system32') !== false || empty($pv)) {\n                        unset($path[$pk]);\n                    }\n                }\n                $path = array_values($path); // 'reindex' array\n            }\n\n            /* add some other possible locations to the path while we are at it,\n             * as these are not always included in the apache path */\n            $path[] = '/usr/X11R6/bin';\n            $path[] = '/usr/bin';\n            $path[] = '/usr/local/bin';\n\n            foreach ($path as $dir) {\n                if (!empty($dir) && (function_exists('is_executable') && @is_readable($dir) && @is_executable($dir . '/convert')) || @is_file($dir . '/convert')) {\n                    return $dir . '/convert';\n                }\n\n                if (!empty($dir) && (function_exists('is_executable') && @is_readable($dir . '/convert') && @is_executable($dir . '/convert.exe')) || @is_file($dir . '/convert.exe')) {\n                    return $dir . '/convert.exe';\n                }\n            }\n            return $default;\n\n        case 'rewrite':\n            return serendipity_check_rewrite($default);\n\n        default:\n            if ($usertemplate) {\n                return serendipity_get_user_var($optname, $serendipity['authorid'], $default);\n            }\n\n            return $default;\n    }\n}\n\n/**\n * Parse a configuration template file\n *\n * @access public\n * @param   string      Path to the s9y configuration template file\n * @param   array       An array of config areas/sections that shall be returned from the template\n * @param   array       Restrict the return of template variables to items containing a specific flag\n * @return  array        An array with configuration items, keys and values\n */\nfunction serendipity_parseTemplate($filename, $areas = null, $onlyFlags=null) {\n    global $serendipity;\n\n    $userlevel = $serendipity['serendipityUserlevel'];\n\n    if ( !IS_installed ) {\n        $userlevel = USERLEVEL_ADMIN;\n    }\n\n    $config = @include($filename);\n    if (! is_array($config)) {\n        printf(INCLUDE_ERROR,$filename);\n    }\n\n    foreach ( $config as $n => $category ) {\n        /* If $areas is an array, we filter out those categories, not within the array */\n        if ( is_array($areas) && !in_array($n, $areas) ) {\n            unset($config[$n]);\n            continue;\n        }\n\n        foreach ( $category['items'] as $i => $item ) {\n            $items = &$config[$n]['items'][$i];\n\n            if (!isset($items['userlevel']) || !is_numeric($items['userlevel'])) {\n                $items['userlevel'] = USERLEVEL_ADMIN;\n            }\n\n            if (!isset($items['permission']) && $userlevel < $items['userlevel']) {\n                unset($config[$n]['items'][$i]);\n                continue;\n            } elseif (!is_array($items['permission']) && !serendipity_checkPermission($items['permission'])) {\n                unset($config[$n]['items'][$i]);\n                continue;\n            } elseif (is_array($items['permission'])) {\n                $one_found = false;\n                $all_found = true;\n                foreach($items['permission'] AS $check_permission) {\n                    if (serendipity_checkPermission($check_permission)) {\n                        $one_found = true;\n                    } else {\n                        $all_found = false;\n                    }\n                }\n\n                if (!isset($items['perm_mode'])) {\n                    $items['perm_mode'] = 'or';\n                }\n\n                if ($items['perm_mode'] == 'or' && !$one_found) {\n                    unset($config[$n]['items'][$i]);\n                    continue;\n                } elseif ($items['perm_mode'] == 'and' && !$one_found && !$all_found) {\n                    unset($config[$n]['items'][$i]);\n                    continue;\n                }\n            }\n\n            if (!isset($items['flags']) || !is_array($items['flags'])) {\n                $items['flags'] = array();\n            }\n\n            if ( is_array($onlyFlags) ) {\n                foreach ( $onlyFlags as $onlyFlag ) {\n                    if ( !in_array($onlyFlag, $items['flags']) ) {\n                        unset($config[$n]['items'][$i]);\n                        continue;\n                    }\n                }\n            }\n        }\n\n        if (sizeof($config[$n]['items']) < 1) {\n            unset($config[$n]);\n        }\n    }\n\n    return $config;\n}\n\n/**\n * Replace some variables within config item values with the right values\n *\n * @access public\n * @param   string  Input string\n * @return  string  Output string\n */\nfunction serendipity_replaceEmbeddedConfigVars ($s) {\n    return str_replace(\n                  array(\n                    '%clock%'\n                  ),\n\n                  array(\n                    date('H:i')\n                  ),\n\n                  $s);\n}\n\n/**\n * Preprocess the configuration value and put it into a HTML output field (radio, password, text, select, ...)\n *\n * @access public\n * @param   string  The type of the configuration item\n * @param   string  The name of the configuration item\n * @param   string  The current value of the configuration item\n * @param   string  The default value of the configuration item\n * @return null\n */\n\nfunction serendipity_guessInput($type, $name, $value='', $default='') {\n    $data = array();\n    $curOptions = array();\n\n    switch ($type) {\n        case 'bool':\n            $value = serendipity_get_bool($value);\n            if ($value === null) {\n                $value = $default;\n            }\n            break;\n\n        case 'multilist':\n            $default = (array)$default;\n            $value = (array)$value;\n            foreach ($default as $k => $v) {\n                $selected = false;\n                foreach($value AS $vk => $vv) {\n                    if ($vv['confkey'] == $v['confkey']) {\n                        $selected = true;\n                    }\n                }\n                $curOptions[$name][$k]['selected'] = $selected;\n            }\n            break;\n\n        case 'list':\n            $cval = (string)$value;\n            $default = (array)$default;\n            foreach ($default as $k => $v) {\n                $selected = ((string)$k == (string)$value);\n                if (empty($cval) && ((string)$k === 'false' || (string)$k === null)) {\n                    $selected = true;\n                }\n                $curOptions[$name][$k]['selected'] = $selected;\n            }\n            break;\n    }\n\n    $data['type'] = $type;\n    $data['name'] = $name;\n    $data['value'] = $value;\n    $data['default'] = $default;\n    $data['selected'] = $curOptions;\n\n    return serendipity_smarty_show('admin/guess_input.tpl', $data);\n}\n\n/**\n * Parses the configuration array and displays the configuration screen\n *\n * @access public\n * @param   array       Configuration superarray\n * @param   array       The previous values submitted by the user\n * @param   boolean     If true, no HTML FORM container will be emitted\n * @param   boolean     If true, the configuration sections will all be folded\n * @param   boolean     If true, the user can turn config sections on and off\n * @param   boolean     If true, the user can NOT display possibly dangerous options\n * @return null\n */\nfunction serendipity_printConfigTemplate($config, $from = false, $noForm = false, $folded = true, $allowToggle = true, $showDangerous = false) {\n    global $serendipity;\n    $data = array();\n    $data['noForm'] = $noForm;\n    $data['formToken'] = serendipity_setFormToken();\n\n    $data['allowToggle'] = $allowToggle;\n\n    foreach ($config as &$category) {\n        foreach ($category['items'] as &$item) {\n\n            $value = $from[$item['var']];\n\n            /* Calculate value if we are not installed, how clever :) */\n            if ($from == false) {\n                $value = serendipity_query_default($item['var'], $item['default']);\n            }\n\n            /* Check for installOnly flag */\n            if (in_array('installOnly', $item['flags']) && IS_installed === true) {\n                continue;\n            }\n\n            if (in_array('hideValue', $item['flags'])) {\n                $value = '';\n            }\n\n            if (!$showDangerous && $item['view'] == 'dangerous') {\n                continue;\n            }\n\n            if (in_array('config', $item['flags']) && isset($from['authorid'])) {\n                $value = serendipity_get_user_config_var($item['var'], $from['authorid'], $item['default']);\n            }\n\n            if (in_array('parseDescription', $item['flags'])) {\n                $item['description'] = serendipity_replaceEmbeddedConfigVars($item['description']);\n            }\n\n            if (in_array('probeDefault', $item['flags'])) {\n                $item['default'] = serendipity_probeInstallation($item['var']);\n            }\n\n            if (in_array('ifEmpty', $item['flags']) && empty($value)) {\n                $value = serendipity_query_default($item['var'], $item['default']);\n            }\n            $item['guessedInput'] = serendipity_guessInput($item['type'], $item['var'], $value, $item['default']);\n        }\n    }\n    $data['config'] = $config;\n    return serendipity_smarty_show('admin/config_template.tpl', $data);\n}\n\n/**\n * Parse .sql files for use within Serendipity, query by query,\n * accepting only CREATE commands.\n *\n * @access public\n * @param   string  The filename of the SQL file\n * @return array    An array of queries to execute\n */\nfunction serendipity_parse_sql_tables($filename) {\n    $in_table = 0;\n    $queries = array();\n\n    $fp = fopen($filename, 'r', 1);\n    if ($fp) {\n        while (!@feof($fp)) {\n            $line = trim(fgets($fp, 4096));\n            if ($in_table) {\n                $def .= $line;\n                if (preg_match('/^\\)\\s*(type\\=\\S+|\\{UTF_8\\})?\\s*\\;$/i', $line)) {\n                    $in_table = 0;\n                    array_push($queries, $def);\n                }\n            } else {\n                if (preg_match('#^create table \\{PREFIX\\}\\S+\\s*\\(#i', $line)) {\n                    $in_table = 1;\n                    $def = $line;\n                }\n\n                if (preg_match('#^create\\s*(\\{fulltext\\}|unique|\\{fulltext_mysql\\})?\\s*index#i', $line)) {\n                    array_push($queries, $line);\n                }\n            }\n        }\n        fclose($fp);\n    }\n\n    return $queries;\n}\n\n/**\n * Parse .sql files for use within Serendipity, query by query,\n * accepting only INSERT commands.\n *\n * @access public\n * @param   string  The filename of the SQL file\n * @return array    An array of queries to execute\n */\nfunction serendipity_parse_sql_inserts($filename) {\n    $queries = array();\n\n    $fp = fopen($filename, 'r', 1);\n    if ($fp) {\n        while (!@feof($fp)) {\n            $line = trim(fgets($fp, 65536));\n                if (preg_match('#^insert\\s*into.*;$#i', $line)) {\n                    array_push($queries, $line);\n                }\n            }\n        }\n        fclose($fp);\n\n    return $queries;\n}\n\n/**\n * Check the serendipity Installation for problems, during installation\n *\n * @access public\n * @return boolean  Errors encountered?\n */\nfunction serendipity_checkInstallation() {\n    global $serendipity, $umask;\n\n    $errs = array();\n\n    serendipity_initPermalinks();\n\n    // Check dirs\n    if (!is_dir($_POST['serendipityPath'])) {\n        $errs[] = sprintf(DIRECTORY_NON_EXISTANT, serendipity_specialchars($_POST['serendipityPath']));\n    }\n    elseif (!is_writable($_POST['serendipityPath']) ) {\n        $errs[] = sprintf(DIRECTORY_WRITE_ERROR, serendipity_specialchars($_POST['serendipityPath']));\n    }\n    elseif (!is_dir($_POST['serendipityPath'] . $_POST['uploadPath'] ) && @mkdir($_POST['serendipityPath'] . $_POST['uploadPath'], $umask) !== true) {\n        $errs[] = sprintf(DIRECTORY_CREATE_ERROR, serendipity_specialchars($_POST['serendipityPath']) . serendipity_specialchars($_POST['uploadPath']));\n    }\n    elseif (!is_writable($_POST['serendipityPath'] . $_POST['uploadPath'])) {\n        $errs[] = sprintf(DIRECTORY_WRITE_ERROR, serendipity_specialchars($_POST['serendipityPath']) . serendipity_specialchars($_POST['uploadPath']));\n        $errs[] = sprintf(DIRECTORY_RUN_CMD    , 'chmod go+rws', serendipity_specialchars($_POST['serendipityPath']) . serendipity_specialchars($_POST['uploadPath']));\n    }\n\n    // Attempt to create the template compile directory, it might already be there, but we just want to be sure\n    if (!is_dir($_POST['serendipityPath'] . PATH_SMARTY_COMPILE) && @mkdir($_POST['serendipityPath'] . PATH_SMARTY_COMPILE, $umask) !== true) {\n        $errs[] = sprintf(DIRECTORY_CREATE_ERROR, serendipity_specialchars($_POST['serendipityPath']) . PATH_SMARTY_COMPILE);\n        $errs[] = sprintf(DIRECTORY_RUN_CMD     , 'mkdir'      , serendipity_specialchars($_POST['serendipityPath']) . PATH_SMARTY_COMPILE);\n        $errs[] = sprintf(DIRECTORY_RUN_CMD     , 'chmod go+rwx', serendipity_specialchars($_POST['serendipityPath']) . PATH_SMARTY_COMPILE);\n    } elseif (is_dir($_POST['serendipityPath'] . PATH_SMARTY_COMPILE) && !is_writeable($_POST['serendipityPath'] . PATH_SMARTY_COMPILE) && @chmod($_POST['serendipityPath'] . PATH_SMARTY_COMPILE, $umask) !== true) {\n        $errs[] = sprintf(DIRECTORY_RUN_CMD     , 'chmod go+rwx', serendipity_specialchars($_POST['serendipityPath']) . PATH_SMARTY_COMPILE);\n    }\n\n    // Attempt to create the archives directory\n    if (!is_dir($_POST['serendipityPath'] . PATH_ARCHIVES) && @mkdir($_POST['serendipityPath'] . PATH_ARCHIVES, $umask) !== true) {\n        $errs[] = sprintf(DIRECTORY_CREATE_ERROR, serendipity_specialchars($_POST['serendipityPath']) . PATH_ARCHIVES);\n        $errs[] = sprintf(DIRECTORY_RUN_CMD     , 'mkdir'      , serendipity_specialchars($_POST['serendipityPath']) . PATH_ARCHIVES);\n        $errs[] = sprintf(DIRECTORY_RUN_CMD     , 'chmod go+rwx', serendipity_specialchars($_POST['serendipityPath']) . PATH_ARCHIVES);\n    }\n\n    // Check imagick\n    if ($_POST['magick'] == 'true' && function_exists('is_executable') && !@is_executable($_POST['convert'])) {\n        $errs[] = sprintf(CANT_EXECUTE_BINARY, 'convert imagemagick');\n    }\n\n    if ($_POST['dbType'] == 'sqlite' || $_POST['dbType'] == 'sqlite3' || $_POST['dbType'] == 'pdo-sqlite' || $_POST['dbType'] == 'sqlite3oo') {\n        // We don't want that our SQLite db file can be guessed from other applications on a server\n        // and have access to our's. So we randomize the SQLite dbname.\n        $_POST['sqlitedbName'] = $_POST['dbName'] . '_' . md5(time());\n    }\n\n    if (empty($_POST['dbPrefix']) && empty($serendipity['dbPrefix'])) {\n        $errs[] = sprintf(EMPTY_SETTING, INSTALL_DBPREFIX);\n    } elseif (!preg_match('@^[a-z0-9_]+$@i', $_POST['dbPrefix'])) {\n        $errs[] = INSTALL_DBPREFIX_INVALID;\n    }\n\n    $serendipity['dbType'] = $_POST['dbType'];\n    // Probe database\n    // (do it after the dir stuff, as we need to be able to create the sqlite database)\n    include_once(S9Y_INCLUDE_PATH . \"include/db/{$serendipity['dbType']}.inc.php\");\n    // For shared installations, probe the file on include path\n    //include_once(S9Y_INCLUDE_PATH . 'include/db/db.inc.php');\n\n    if (S9Y_DB_INCLUDED) {\n        serendipity_db_probe($_POST, $errs);\n    }\n\n    return (count($errs) > 0 ? $errs : '');\n}\n\n/**\n * Create the files needed by Serendipity [htaccess/serendipity_config_local.inc.php]\n *\n * @access public\n * @param   string      Path to the serendipity directory\n * @return  true\n */\nfunction serendipity_installFiles($serendipity_core = '') {\n    global $serendipity;\n\n    // This variable is transmitted from serendipity_admin_installer. If an empty variable is used,\n    // this means that serendipity_installFiles() was called from the auto-updater facility.\n    if (empty($serendipity_core)) {\n        $serendipity_core = $serendipity['serendipityPath'];\n    }\n\n    $htaccess = @file_get_contents($serendipity_core . '.htaccess');\n\n    // Let this function be callable outside installation and let it use existing settings.\n    $import = array('rewrite', 'serendipityHTTPPath', 'indexFile');\n    foreach($import AS $key) {\n        if (empty($_POST[$key]) && isset($serendipity[$key])) {\n            $$key = $serendipity[$key];\n        } else {\n            $$key = $_POST[$key];\n        }\n    }\n\n    if (php_sapi_name() == 'cgi' || php_sapi_name() == 'cgi-fcgi') {\n        $htaccess_cgi = '_cgi';\n    } else {\n        $htaccess_cgi = '';\n    }\n\n    /* If this file exists, a previous install failed painfully. We must consider the safer alternative now */\n    if (file_exists($serendipity_core . '.installer_detection_failsafe')) {\n        $htaccess_cgi = '_cgi';\n        @unlink($serendipity_core . '.htaccess');\n    }\n\n    /* Detect comptability with php_value directives */\n    if ($htaccess_cgi == '') {\n        $response = '';\n        $serendipity_root = dirname($_SERVER['PHP_SELF']) . '/';\n        $serendipity_host = preg_replace('@^([^:]+):?.*$@', '\\1', $_SERVER['HTTP_HOST']);\n\n        $old_htaccess = @file_get_contents($serendipity_core . '.htaccess');\n        $fp = @fopen($serendipity_core . '.htaccess', 'w');\n        if ($fp) {\n            fwrite($fp, 'php_value register_globals off'. \"\\n\" .'php_value session.use_trans_sid 0');\n            fclose($fp);\n\n            $safeFP = @fopen($serendipity_core . '.installer_detection_failsafe', 'w');\n            fclose($safeFP);\n            $sock = fsockopen($serendipity_host, $_SERVER['SERVER_PORT'], $errorno, $errorstring, 10);\n            if ($sock) {\n                fputs($sock, \"GET {$serendipityHTTPPath} HTTP/1.0\\r\\n\");\n                fputs($sock, \"Host: $serendipity_host\\r\\n\");\n                fputs($sock, \"User-Agent: Serendipity/{$serendipity['version']}\\r\\n\");\n                fputs($sock, \"Connection: close\\r\\n\\r\\n\");\n\n                while (!feof($sock) && strlen($response) < 4096) {\n                    $response .= fgets($sock, 400);\n                }\n                fclose($sock);\n            }\n\n            # If we get HTTP 500 Internal Server Error, we have to use the .cgi template\n            if (preg_match('@^HTTP/\\d\\.\\d 500@', $response)) {\n                $htaccess_cgi = '_cgi';\n            }\n\n            if (!empty($old_htaccess)) {\n                $fp = @fopen($serendipity_core . '.htaccess', 'w');\n                fwrite($fp, $old_htaccess);\n                fclose($fp);\n            } else {\n                @unlink($serendipity_core . '.htaccess');\n            }\n\n            @unlink($serendipity_core . '.installer_detection_failsafe');\n        }\n    }\n\n\n    if ($rewrite == 'rewrite2') {\n         $template = 'htaccess' . $htaccess_cgi . '_rewrite2.tpl';\n    } elseif ($rewrite == 'rewrite') {\n         $template = 'htaccess' . $htaccess_cgi . '_rewrite.tpl';\n    } elseif ($rewrite == 'errordocs') {\n        $template = 'htaccess' . $htaccess_cgi . '_errordocs.tpl';\n    } else {\n        $template = 'htaccess' . $htaccess_cgi . '_normal.tpl';\n    }\n\n    if (!($a = file(S9Y_INCLUDE_PATH . 'include/tpl/' . $template, 1))) {\n        $errs[] = ERROR_TEMPLATE_FILE;\n    }\n\n    // When we write this file we cannot rely on the constants defined\n    // earlier, as they do not yet contain the updated contents from the\n    // new config. Thus we re-define those. We do still use constants\n    // for backwards/code compatibility.\n\n    $PAT = serendipity_permalinkPatterns(true);\n\n    $content = str_replace(\n                 array(\n                   '{PREFIX}',\n                   '{indexFile}',\n                   '{PAT_UNSUBSCRIBE}', '{PATH_UNSUBSCRIBE}',\n                   '{PAT_ARCHIVES}', '{PATH_ARCHIVES}',\n                   '{PAT_FEEDS}', '{PATH_FEEDS}',\n                   '{PAT_FEED}',\n                   '{PAT_ADMIN}', '{PATH_ADMIN}',\n                   '{PAT_ARCHIVE}', '{PATH_ARCHIVE}',\n                   '{PAT_PLUGIN}', '{PATH_PLUGIN}',\n                   '{PAT_DELETE}', '{PATH_DELETE}',\n                   '{PAT_APPROVE}', '{PATH_APPROVE}',\n                   '{PAT_SEARCH}', '{PATH_SEARCH}',\n                   '{PAT_COMMENTS}', '{PATH_COMMENTS}',\n                   '{PAT_CSS}',\n                   '{PAT_JS}',\n                   '{PAT_PERMALINK}',\n                   '{PAT_PERMALINK_AUTHORS}',\n                   '{PAT_PERMALINK_FEEDCATEGORIES}',\n                   '{PAT_PERMALINK_CATEGORIES}',\n                   '{PAT_PERMALINK_FEEDAUTHORS}'\n                 ),\n\n                 array(\n                   $serendipityHTTPPath,\n                   $indexFile,\n                   trim($PAT['UNSUBSCRIBE'], '@/i'), $serendipity['permalinkUnsubscribePath'],\n                   trim($PAT['ARCHIVES'], '@/i'),    $serendipity['permalinkArchivesPath'],\n                   trim($PAT['FEEDS'], '@/i'),       $serendipity['permalinkFeedsPath'],\n                   trim(PAT_FEED, '@/i'),\n                   trim($PAT['ADMIN'], '@/i'),       $serendipity['permalinkAdminPath'],\n                   trim($PAT['ARCHIVE'], '@/i'),     $serendipity['permalinkArchivePath'],\n                   trim($PAT['PLUGIN'], '@/i'),      $serendipity['permalinkPluginPath'],\n                   trim($PAT['DELETE'], '@/i'),      $serendipity['permalinkDeletePath'],\n                   trim($PAT['APPROVE'], '@/i'),     $serendipity['permalinkApprovePath'],\n                   trim($PAT['SEARCH'], '@/i'),      $serendipity['permalinkSearchPath'],\n                   trim($PAT['COMMENTS'], '@/i'),    $serendipity['permalinkCommentsPath'],\n                   trim(PAT_CSS, '@/i'),\n                   trim(PAT_JS, '@/i'),\n                   trim($PAT['PERMALINK'], '@/i'),\n                   trim($PAT['PERMALINK_AUTHORS'], '@/i'),\n                   trim($PAT['PERMALINK_FEEDCATEGORIES'], '@/i'),\n                   trim($PAT['PERMALINK_CATEGORIES'], '@/i'),\n                   trim($PAT['PERMALINK_FEEDAUTHORS'], '@/i')\n                 ),\n\n                 implode('', $a)\n              );\n\n    $fp = @fopen($serendipity_core . '.htaccess', 'w');\n    if (!$fp) {\n        $errs[] = sprintf(FILE_WRITE_ERROR, $serendipity_core . '.htaccess') . ' ' . FILE_CREATE_YOURSELF;\n        $errs[] = sprintf(COPY_CODE_BELOW , $serendipity_core . '.htaccess', 'serendipity', serendipity_specialchars($content));\n        return $errs;\n    } else {\n        // Check if an old htaccess file existed and try to preserve its contents. Otherwise completely wipe the file.\n        if ($htaccess != '' && preg_match('@^(.*)#\\s+BEGIN\\s+s9y.*#\\s+END\\s+s9y(.*)$@isU', $htaccess, $match)) {\n            // Code outside from s9y-code was found.\n            fwrite($fp, $match[1] . $content . $match[2]);\n        } else {\n            fwrite($fp, $content);\n        }\n        fclose($fp);\n        return true;\n    }\n\n}\n\n/**\n * Check the flags of a configuration item for their belonging into a template\n *\n * @access public\n * @param   array       An item to check\n * @param   array       The area (configuration|local) where the config item might be displayed\n * @return  boolean\n */\nfunction serendipity_checkConfigItemFlags(&$item, $area) {\n\n    if ( in_array('nosave', $item['flags']) ) {\n        return false;\n    }\n\n    if ( in_array('local', $item['flags']) && $area == 'configuration' ) {\n        return false;\n    }\n\n    if ( in_array('config', $item['flags']) && $area == 'local' ) {\n        return false;\n    }\n\n    return true;\n}\n\n/**\n * When paths or other options are changed in the s9y configuration, update the core files\n *\n * @access public\n * @return boolean\n */\nfunction serendipity_updateConfiguration() {\n    global $serendipity, $umask;\n\n    // Save all basic config variables to the database\n    $config = serendipity_parseTemplate(S9Y_CONFIG_TEMPLATE);\n\n    if (isset($_POST['sqlitedbName']) && !empty($_POST['sqlitedbName'])) {\n        $_POST['dbName'] = $_POST['sqlitedbName'];\n    }\n\n    // Password can be hidden in re-configuring, but we need to store old password\n    if (empty($_POST['dbPass']) && !empty($serendipity['dbPass'])) {\n        $_POST['dbPass'] = $serendipity['dbPass'];\n    }\n\n    foreach($config as $category) {\n        foreach ( $category['items'] as $item ) {\n\n            /* Don't save trash */\n            if ( !serendipity_checkConfigItemFlags($item, 'configuration') ) {\n                continue;\n            }\n\n            if (!isset($item['userlevel'])) {\n                $item['userlevel'] = USERLEVEL_ADMIN;\n            }\n\n            // Check permission set. Changes to blogConfiguration or siteConfiguration items\n            // always required authorid = 0, so that it be not specific to a userlogin\n            if ( $serendipity['serendipityUserlevel'] >= $item['userlevel'] || IS_installed === false ) {\n                $authorid = 0;\n            } elseif ($item['permission'] == 'blogConfiguration' && serendipity_checkPermission('blogConfiguration')) {\n                $authorid = 0;\n            } elseif ($item['permission'] == 'siteConfiguration' && serendipity_checkPermission('siteConfiguration')) {\n                $authorid = 0;\n            } else {\n                $authorid = $serendipity['authorid'];\n            }\n\n            if (is_array($_POST[$item['var']])) {\n                // Arrays not allowed. Use first index value.\n                list($a_key, $a_val) = each($_POST[$item['var']]);\n                $_POST[$item['var']] = $a_key;\n\n                // If it still is an array, munge it all together.\n                if (is_array($_POST[$item['var']])) {\n                    $_POST[$item['var']] = @implode(',', $_POST[$item['var']]);\n                }\n            }\n\n            serendipity_set_config_var($item['var'], $_POST[$item['var']], $authorid);\n        }\n    }\n\n    if (IS_installed === false || serendipity_checkPermission('siteConfiguration')) {\n        return serendipity_updateLocalConfig($_POST['dbName'],\n                                             $_POST['dbPrefix'],\n                                             $_POST['dbHost'],\n                                             $_POST['dbUser'],\n                                             $_POST['dbPass'],\n                                             $_POST['dbType'],\n                                             $_POST['dbPersistent']);\n    } else {\n        return true;\n    }\n}\n\n/**\n * Get the root directory of Serendipity\n *\n * @access public\n * @return  string      The root directory of Serendipity\n */\nfunction serendipity_httpCoreDir() {\n    if (!empty($_SERVER['SCRIPT_FILENAME']) && substr(php_sapi_name(), 0, 3) != 'cgi') {\n        return dirname($_SERVER['SCRIPT_FILENAME']) . '/';\n    }\n\n    if (!empty($_SERVER['ORIG_PATH_TRANSLATED'])) {\n        return dirname(realpath($_SERVER['ORIG_PATH_TRANSLATED'])) . '/';\n    }\n\n    return $_SERVER['DOCUMENT_ROOT'] . dirname($_SERVER['PHP_SELF']) . '/';\n}\n\n/**\n * Delete obsolete files from Serendipity\n *\n * @access public\n * @param   array       List of files to remove (backup is tried)\n * @return boolean\n */\nfunction serendipity_removeFiles($files = null) {\n    global $serendipity, $errors;\n\n    if (!is_array($files)) {\n        return;\n    }\n\n    $backupdir = S9Y_INCLUDE_PATH . 'backup';\n    if (!is_dir($backupdir)) {\n        @mkdir($backupdir, 0777);\n        if (!is_dir($backupdir)) {\n            $errors[] = sprintf(DIRECTORY_CREATE_ERROR, $backupdir);\n            return false;\n        }\n    }\n\n    if (!is_writable($backupdir)) {\n        $errors[] = sprintf(DIRECTORY_WRITE_ERROR, $backupdir);\n        return false;\n    }\n\n    foreach($files AS $file) {\n        $source   = S9Y_INCLUDE_PATH . $file;\n        $sanefile = str_replace('/', '_', $file);\n        $target   = $backupdir . '/' . $sanefile;\n\n        if (!file_exists($source)) {\n            continue;\n        }\n\n        if (file_exists($target)) {\n            $target = $backupdir . '/' . time() . '.' . $sanefile; // Backupped file already exists. Append with timestamp as name.\n        }\n\n        if (!is_writable($source)) {\n            $errors[] = sprintf(FILE_WRITE_ERROR, $source) . '<br />';\n        } else {\n            rename($source, $target);\n        }\n    }\n}\n\n/**\n * Get the real directory of this function file\n *\n * @access public\n * @param   string      A filename to strip extra paths from\n * @return  string      The real directory name\n */\nfunction serendipity_getRealDir($file) {\n    $dir = str_replace( \"\\\\\", \"/\", dirname($file));\n    $base = preg_replace('@/include$@', '', $dir) . '/';\n    return $base;\n}\n\n/**\n * Try to detect if apache URL rewriting is available\n *\n * This function makes a dummy HTTP request and sees if it works\n *\n * @access public\n * @param   string      The default option when rewrite fails\n * @return  string      The best preference option for URL rewriting\n */\nfunction serendipity_check_rewrite($default) {\n    global $serendipity;\n\n    if (IS_installed == true) {\n        return $default;\n    }\n\n    $serendipity_root = dirname($_SERVER['PHP_SELF']) . '/';\n    $serendipity_core = serendipity_httpCoreDir();\n    $old_htaccess     = @file_get_contents($serendipity_core . '.htaccess');\n    $fp               = @fopen($serendipity_core . '.htaccess', 'w');\n    $serendipity_host = preg_replace('@^([^:]+):?.*$@', '\\1', $_SERVER['HTTP_HOST']);\n\n    if (!$fp) {\n        printf(HTACCESS_ERROR,\n          '<b>chmod go+rwx ' . getcwd() . '/</b>'\n        );\n        return $default;\n    } else {\n        fwrite($fp, 'ErrorDocument 404 ' . addslashes($serendipity_root) . 'index.php');\n        fclose($fp);\n\n        // Do a request on a nonexistant file to see, if our htaccess allows ErrorDocument\n        $sock = @fsockopen($serendipity_host, $_SERVER['SERVER_PORT'], $errorno, $errorstring, 10);\n        $response = '';\n\n        if ($sock) {\n            fputs($sock, \"GET {$_SERVER['PHP_SELF']}nonexistant HTTP/1.0\\r\\n\");\n            fputs($sock, \"Host: $serendipity_host\\r\\n\");\n            fputs($sock, \"User-Agent: Serendipity/{$serendipity['version']}\\r\\n\");\n            fputs($sock, \"Connection: close\\r\\n\\r\\n\");\n\n            while (!feof($sock) && strlen($response) < 4096) {\n                $response .= fgets($sock, 400);\n            }\n            fclose($sock);\n        }\n\n        if (preg_match('@^HTTP/\\d\\.\\d 200@', $response) && preg_match('@X\\-Blog: Serendipity@', $response)) {\n            $default = 'errordocs';\n        } else {\n            $default = 'none';\n        }\n\n        if (!empty($old_htaccess)) {\n            $fp = @fopen($serendipity_core . '.htaccess', 'w');\n            fwrite($fp, $old_htaccess);\n            fclose($fp);\n        } else {\n            @unlink($serendipity_core . '.htaccess');\n        }\n\n        return $default;\n    }\n}\n\n/**\n * Remove old configuration values that are no longer used by Serendipity\n *\n * @access public\n * @return null\n */\nfunction serendipity_removeObsoleteVars() {\nglobal $serendipity;\n\n    $config = serendipity_parseTemplate(S9Y_CONFIG_TEMPLATE);\n    foreach($config as $category) {\n        foreach($category['items'] as $item) {\n            /* Remove trash */\n            if (!serendipity_checkConfigItemFlags($item, 'remove')) {\n                serendipity_remove_config_var($item['var'], 0);\n            }\n        }\n    }\n}\n\n/**\n * Retrieve an FTP-compatible checksum for a file.\n *\n * @access public\n * @param string filename is the path to the file to checksum\n * @param string type forces a particular interpretation of newlines.  Mime\n *    types and strings starting with 'text' will cause newlines to be stripped\n *    before the checksum is calculated (default: null, determine from finfo\n *    and extension)\n * @return string An MD5 checksum of the file, with newlines removed if it's\n *    an ASCII type; or false if the file cannot be read\n */\nfunction serendipity_FTPChecksum($filename, $type = null) {\n    /** Only read the finfo database once */\n    static $debug_exts = array();\n\n    // Must be able to read the file\n    if (!is_readable($filename)) {\n        return false;\n    }\n\n    // Figure out whether it's binary or text by extension\n    if ($type == null) {\n        $parts = pathinfo($filename);\n        $ext = '';\n        // Some PHP versions throw a warning if the index doesn't exist\n        if (isset($parts['extension'])) {\n            $ext = $parts['extension'];\n        }\n        // If they're case-insensitive equal, strcasecmp() returns 0, or\n        // 'false'.  So I use && to find if any of them are 0, in the\n        // most likely fail-fast order.\n        if (strcasecmp($ext, 'php') &&\n            strcasecmp($ext, 'tpl') &&\n            strcasecmp($ext, 'sql') &&\n            strcasecmp($ext, 'js') &&\n            strcasecmp($ext, 'txt') &&\n            strcasecmp($ext, 'htc') &&\n            strcasecmp($ext, 'css') &&\n            strcasecmp($ext, 'dist') &&\n            strcasecmp($ext, 'lib') &&\n            strcasecmp($ext, 'sh') &&\n            strcasecmp($ext, 'html') &&\n            strcasecmp($ext, 'htm') &&\n            !empty($ext)) {\n            if (!in_array($ext, array_keys($debug_exts))) {\n                $debug_exts[$ext] = $filename;\n            }\n            $type = 'bin';\n        } else {\n            $type = 'text';\n        }\n    }\n\n    // Calculate the checksum\n    $md5 = false;\n    if (stristr($type, 'text')) {\n        // This is a text-type file.  We need to remove linefeeds before\n        // calculating a checksum, to account for possible FTP conversions\n        // that are inconvenient, but still valid.  But we don't want to\n        // allow newlines anywhere; just different *kinds* of newlines.\n        $newlines = array(\"#\\r\\n#\", \"#\\r#\", \"#\\n#\");\n        $file = file_get_contents($filename);\n        $file = preg_replace($newlines, ' ', $file);\n        $md5 = md5($file);\n    } else {\n        // Just get its md5sum\n        $md5 = md5_file($filename);\n    }\n\n    return $md5;\n}\n\n/**\n * Validate checksums for all required files.\n *\n * @return A list of all files that failed checksum, where keys are the\n *    relative path of the file, and values are the bad checksum\n */\nfunction serendipity_verifyFTPChecksums() {\n    global $serendipity;\n\n    $badsums = array();\n\n    // Load the checksums\n    $f = S9Y_INCLUDE_PATH . 'checksums.inc.php';\n\n    if (!file_exists($f) || filesize($f) < 1) {\n        return $badsums;\n    }\n\n    require_once $f;\n    // Verify that every file in the checksum list was uploaded correctly\n    $basedir = realpath(dirname(__FILE__) . '/../');\n\n    if (!is_array($serendipity['checksums_' . $serendipity['version']])) {\n        return $badsums;\n    }\n\n    foreach ($serendipity['checksums_' . $serendipity['version']] as $prel => $sum) {\n        $path = $basedir . '/' . $prel;\n        // Don't take checksums of directories\n        if (is_dir($path)) {\n            // Weird that it's even here.\n            continue;\n        }\n\n        // Can't checksum unreadable or nonexistent files\n        if (!is_readable($path)) {\n            $badsums[$prel] = 'missing';\n            continue;\n        }\n\n        // Validate checksum\n        $calcsum = serendipity_FTPChecksum($path);\n        if ($sum != $calcsum) {\n            $badsums[$prel] = $calcsum;\n            continue;\n        }\n    }\n\n    return $badsums;\n}\n\n\n/**\n * Check https://raw.github.com/s9y/Serendipity/master/docs/RELEASE for the newest available version\n *\n * If the file is not fetch- or parseable (behind a proxy, malformed by Garvin), this will return -1\n * */\nfunction serendipity_getCurrentVersion() {\n    global $serendipity;\n\n    if ($serendipity['updateCheck'] != \"stable\" && $serendipity['updateCheck'] != \"beta\") {\n        return -1;\n    }\n\n    // Perform update check once a day. We use a suffix of the configured channel, so when\n    // the user switches channels, it has its own timer.\n    if ($serendipity['last_update_check_' . $serendipity['updateCheck']] >= (time()-86400)) {\n        // Last update was performed less than a day ago. Return last result.\n        return $serendipity['last_update_version_' . $serendipity['updateCheck']];\n    }\n\n    serendipity_set_config_var('last_update_check_' . $serendipity['updateCheck'], time());\n    $updateURL = 'https://raw.githubusercontent.com/s9y/Serendipity/master/docs/RELEASE';\n    $context   = stream_context_create(array('http' => array('timeout' => 5.0)));\n    $file      = @file_get_contents($updateURL, false, $context);\n\n    if (!$file) {\n        if (function_exists('curl_init')) {\n            $ch = curl_init($updateURL);\n            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n            curl_setopt($ch, CURLOPT_TIMEOUT, \"5\");\n            $file = curl_exec($ch);\n            curl_close($ch);\n        }\n    }\n\n    if ($file) {\n        if ($serendipity['updateCheck'] == \"stable\") {\n            if (preg_match('/^stable:(.+)\\b/m', $file, $match)) {\n                serendipity_set_config_var('last_update_version_' . $serendipity['updateCheck'], $match[1]);\n                return $match[1];\n            }\n        } else {\n            if (preg_match('/^beta:(.+)\\b/m', $file, $match)) {\n                serendipity_set_config_var('last_update_version_' . $serendipity['updateCheck'], $match[1]);\n                return $match[1];\n            }\n        }\n    }\n\n    return -1;\n}\n\n/* vim: set sts=4 ts=4 sw=4 expandtab : */\n"], "fixing_code": ["Version 2.0.6 ()\n------------------------------------------------------------------------\n\n    * Fix Bug #428, regression when fetching remote files, wrong call\n      to HTTP_Request::getEffectiveUrl()\n\n    * Fix Bug #433, secure variable on first time installation to prevent\n      RCE, thanks to Shinkurt\n\nVersion 2.0.5 (November 28th, 2016)\n------------------------------------------------------------------------\n\n    * [Security] Improve preventing fetching local files, thanks to\n      Xu Yue.\n      \n    * [Security] Prevent XSS in adding category and directory names, \n      thanks to Edric Teo @smarterbitbybit.\n\nVersion 2.0.4 (September 26th, 2016)\n------------------------------------------------------------------------\n\n    * [Security] Prevent moving files by using their directory name.\n      [Security] Possible SQL injection for entry category assignment\n      [Security] Possible SQL injection for removing&adding a plugin\n\n      All issues require a valid backend login.\n      Thanks to Hendrik Buchwald for finding this via their\n      RIPS source code analyzer (www.ripstech.com)\n\n    * [Security] Add new configuration option to enable fetching \n      local files for the media uploader. By default this is now\n      disabled to prevent Server Side Request Forgery (SSRF).\n      Thanks to Xu Yue for pointing this out!\n\n\nVersion 2.0.3 (January 4th, 2016)\n------------------------------------------------------------------------\n\n    * Fix XSS in backend comment editing form for logged-in authors,\n      thanks to Onur Yilmaz and Robert Abela from Netsparker.com\n\n    * Fix some backend entry form related event messages\n\n\nVersion 2.0.2 (Jul 24th, 2015)\n------------------------------------------------------------------------\n\n    * Fix security issues reported by Tim Coen of Curesec.com:\n\n      - Forbid uploading files with PHP contents and possible\n        PHP execution by authenticated users (critical if\n        you have possible untrustworthy authors)\n      - Add proper escaping for comment approval tokens to prevent\n        SQL injection (authenticated authors only)\n      - Add proper escaping of comment's author names in the\n        comment reply form to prevent XSS (2k11 template, javascript\n        based)\n\n    * Minor layout fixes for media DB media filters\n\n    * Backported some Importer db bugfixes\n\n    * CKEDITOR bugfix releases to 4.4.8 - please read the changelog.\n      Includes widget, lineutils, fakeobjects Plugins and S9y added\n      cheatsheet and procurator Plugins.\n      Changed config.autoParagraph set to false, to prevent wrapping\n      p tags around extraAllowedContent tags.\n\n    * Smarty bugfix upgrades to 3.1.27 - please read the changelog.\n      Compilation time was vastly improved.\n      New Features in NEW_FEATURES.txt.\n\n    * It is now possible to switch to a theme's admin theme if it has\n      been selected as a frontend theme first\n\n    * Syndication Plugin Issue #285:\n        - Add \"none\" as possible value for the xml-icon in the\n          syndication plugin, to enable plain links\n        - Reset subtome full icon path to support\n          serendipity_getTemplateFile()\n        - Link creation fixes for Bulletproof coloured style (eg blue)\n\n    * Fix auto include of a User theme /admin/user.css backend file.\n\n        PLEASE NOTE:\n\n        2.0.1 brought in an automatted include of a themes \"user.css\"\n        file. If you don't want to use such file any more (and you have\n        one), you will have to delete or rename it by hand!\n\n        Also please note, that user stylesheet selectors like\n\n            .selector {\n                background-image: url(img/example.jpg);\n            }\n\n        now need to use the {TEMPLATE_PATH} like\n\n            .selector {\n                background-image: url({TEMPLATE_PATH}img/example.jpg);\n            }\n\n        Content of a user.css will always be put LAST into the combined\n        CSS, this means it will override any possible plugin output.\n        If a user.css file does not exist in your own template directory,\n        but inside the default 2k11 template directory, this will always\n        be used (this behaviour is called \"default fallback chain\").\n\n    * Use https URLs for Atom feed, if called through HTTPS (hboeck)\n\n    * Restore the \"Show toolbar within media selector popup?\" option,\n      it was ignored before.\n\n    * Fix Issue #321, negative offset for LIMIT SQL statements when\n      using stable archive sorting and plugins like history.\n\n    * Templatechooser will not apply theme in backend admin.\n\n    * Use \"secure\" flag for (session) cookies sent over SSL, thanks to\n      dayton967\n\n    * Make preview_iframe.tpl template files load the proper frontend\n      CSS file, including cache-busting version string when changing\n      themes\n\n    * Implement patch to properly initiate templates_c on installation\n      for shared installs (thanks to fugue88)\n\n    * Allow templatechooser plugin to read a custom \"blacklist.txt\"\n      within its directory, that can blacklist certain themes from\n      being selected.\n\n    * Allow serendipity_setCookie() function to set custom expiry.\n\n    * Adapt .htaccess profile of \"mod_rewrite for 1&1 and problematic\n      servers\" to not include the \"Options -MultiViews\" option, since\n      this is often blocked\n\n    * Fix initializing smarty framework in the preview/saving iframe,\n      so that a template's config.inc.php is always loaded.\n\n    * Show debugging .tpl file information with relative directory only\n\n    * fix wrong upgrade removal of dead files with 2.0.1 update\n\n\nVersion 2.0.1 (March 12th, 2015)\n------------------------------------------------------------------------\n\n    * Fix missing escaping (possible XSS) of category names in the\n      Backend Entry Admin, which would allow editors that create a\n      forged category name to attack other editors in the backend\n      (privileged access to the backend required). Thanks a lot to Edric\n      Teo for reporting this issue.\n\n    * Improved detection for possible upgrade/plugin/PHP errors. A\n      warning will be emitted on the dashboard, when the Serendipity\n      JavaScript library could not be loaded.\n\n    * syndication fix: use absolute urls for subtome\n\n    * Issue 306: localStorage may be deactivated by setting a config\n      option or using security-related extensions at least in some\n      browsers, which might (at least in FF) break backend JS\n      functionality. Added extra tests to 2k11 backend JS.\n\n      If you use localStorage, please test if it is actually available\n      by testing if localStorage !== null in JS.\n\n    * Issue 280: Allow every theme to utilize a \"user.css\" file that\n      gets loaded on top of the frontend (or backend, if in admin/\n      subdirectory) theme. This file can be used for customized CSS of\n      a blog-admin which carries over to future Serendipity updates\n\n    * Issue 299: Do not display dashboard for users with no permission\n      to perform actions in the backend (frontend-users)\n\n    * Make \"rewriteURL\" smarty modifier available to do a\n      {$CONST.PATH_ARCHIVE|rewriteURL} within a smarty template file.\n\n    * Add a generic odd/even for backend dashboard widgets to align\n      properly. Future dashboard widgets need to get the new extra\n      class dashboard widget on the section element they create.\n\n    * Fix event emoticate plugin to reflect proper call usage of\n      serendipity_getTemplateFile(), if a theme uses custom emoticons.\n      UPDATE your themes emoticons.inc.php file, if have. See example\n      file in plugin dir.\n\n    * Change 2k11 config.inc.php to reflect proper\n      serendipity_getTemplateFile() when frontend files shall be\n      referenced within the backend.\n\n    * Fixed missing file message for deleted media items\n\n    * Fixed entry editor JS not emitting a 'No tags' msg in taxonomy\n      quick view. Improved serendipity.tagsList exit if freetag plugin\n      is not installed.\n\n    * Minor backend UI fixes (taxonomy quick view in entry editor,\n     'Done' msg emitted by Bayes plugin)\n\n    * Clearer language constants for entries in dashboard, labelled\n      \"In progress\"\n\n\nVersion 2.0 (January 23rd, 2015)\n------------------------------------------------------------------------\n\n    * Smarty fix for purging compiled files\n\n    * Fix wrong search page ordering when stable archive was active\n\n    * Prevent entryproperties from saving/displaying a browser-side\n      stored password that was actually not set.\n\n    * Stronger check for existing logger interface to prevent errors\n      when it is not actively used.\n\n    * Fix entryproperties being removed when publishing an article\n      from the dashboard and by specific plugins (freetag, trackback)\n      that modify entry data.\n\n    * Fix deleting comments when user is not an admin, but the entry\n      belongs to him. Thanks to berberic.\n\n    * Patch PEAR.php to use \"static\" isError declaration to prevent\n      PHP error messages\n\n    * Change order of IF-statements in entries.tpl to check for\n      comment_moderate/comment_added, to properly emit the message\n      whether a comment is being moderated.\n\n    * Fix searching for entries in the admin panel with database\n      types other than \"mysql\"\n\n    * Change entry editor's category assignment to toggle between\n      a hierarchical and a plain list (good for many categories)\n\n    * Fix date formatting in entry editor to not use ISO year\n      but the calendar year\n\n    * Fix autoupdate version read and transmit\n\n\nVersion 2.0-rc2 (December 23rd, 2014)\n------------------------------------------------------------------------\n\n    * Fixes escaping of comments in the new backend pane to prevent\n      XSS. Thanks to Steffen R\u9439mann for reporting!\n\n    * Fix wrong parameter count in serendipity_entity_decode\n\n\nVersion 2.0-rc1 (includes beta4/5/6) (December 19th, 2014)\n------------------------------------------------------------------------\n\n    * entryproperties plugin will now automatically disable nl2br\n      markup, when the WYSIWYG editor is used to create en entry\n\n    * PHP Requirement now is at: PHP 5.3+\n\n    * Fix for syndication subtome onclick handler\n\n    * Fix problematic preview stylesheet reference\n\n    * Optimized clearing smarty template files on upgrading\n\n    * Properly reset the \"disable markup\" feature of entryproperties\n      plugin when none selected\n\n    * PHP 5.4+ fix to properly call htmlspecialchars() / htmlentities() /\n      html_entity_decode() with a charset option, that has been\n      set to to default to UTF-8 and will yield empty strings when\n      being used in NON-UTF-8 environments. Now we utilize a\n      serendipity_specialchars() wrapper call.\n\n    * Added SQLite3 OO database layer for PHP 5.4+\n\n    * New personal preference to choose CKEditor toolbar presets.\n      Presets can be overwritte through a\n      templates/xxx/admin/ckeditor_custom_config.js if needed.\n      See htmlarea/ckeditor_s9y_config.js for details.\n\n    * Proof of concept templates \"default-php\" and \"default-xml\" have\n      been moved to Siber...Spartacus. They would need adapting to\n      Serendipity 2.0 (simple methods like getConfigDir() et al),\n      but since those Template APIs have virtually zero usage scenario,\n      they remain experimental.\n\n    * Added new PAT_JS mod_rewrite rule to .htaccess files\n\n    * Removed experimental support for PHP/SMARTY IN-MEMORY caching\n      added in 2.0-beta3, since this could not work.\n\n    * Smarty 3.1.21 upgrade (see changelog)\n\n    * Fix ImageMagick new sizing issues while forcing image geometry\n      exactly to given sizes with imageselectorplus\n\n    * Fix issue #220 with pdf directory moving rename() error\n\n    * Fix bug in entry listing, which showed wrong categories for\n      entries (Issue #201)\n\n    * Improve RegExp for Feed-URL matching, thanks to fugue88\n\n    * Proper SQLite PDO filenames in shared installations (Issue #214)\n\n    * ImageMagick now can get parameters to generate thumbnails,\n      see serendipity_config.inc.php for example values\n\n    * Allow to enable/disable the new autosave feature in personal\n      preferences (Issue #213)\n\n    * Re-added installer test for writable serendipity base directory\n\n\nVersion 2.0-beta3 (July 25th, 2014)\n------------------------------------------------------------------------\n\n    * Move admin/media_showitem.tpl to theme's directory in 2k11. With\n      an adaptation in serendipity_admin_image_selector.php, this now is\n      a \"true\" frontend template which uses the styles of the frontend\n      theme. Theme authors might want to adapt it to their themes.\n\n    * Moved general syndication plugin option into the core\n\n    * Smarty 3.1.19 upgrade (see changelog)\n\n    * Fixed thumbnail recreation, Issue #134\n\n    * Merged external JS libraries into a central \"plugins.js\" of the 2k11\n      backend template, can be updated through\n      templates/2k11/admin/js/gruntipity.php helper script.\n\n    * Adapted database table structure change for statistics, shoutbox,\n      karma and spamblock plugin (for new field definition of \"ip\" field)\n      Thanks to rohdef!\n\n    * Added new option \"enabledBackendPopups\" that allow to specify\n      if inline modal dialogs or popups are used in the backend for\n      e.g. the category selectory and media library\n\n    * added experimental support for PHP/SMARTY IN MEMORY caching\n      Enabled by default, if classes found loaded.\n      Disable with\n        $serendipity['disable_apc'] = true;\n      and\n        $serendipity['disable_memcache'] = true;\n\n    * Support added in serendipity_db_schema_import for sqlite\n      autoincrement\n\n    * Remove Google Reader button from syndication plugin options\n\n    * Add subToMe-button to syndication plugin and change its defaults\n\n    * Use Browsercache to save cache and restore entries\n\n    * Improved installer to forbid using database table prefixes with\n      special characters\n\n    * Themes using Engines are now able to use the parent's\n      configuration\n\n    * Prevent \"new\" plugin api to install double instances of plugins\n      that are not stackable (issue #45)\n\n    * Back button in plugin-config\n\n    * Adapted serendipity_editor.js to provide more global (though\n      deprecated) API access methods for plugins like amazonchooser\n      and linktrimmer, to perform insertion. Also fixed the\n      insertion of text when the ID of the element is not prefixed\n\n    * Move sort by name to simple filter in ML, replace file extension\n\n    * Remember selected media library folder\n\n    * Show upload-success or error with the ajax image uploader\n\n    * Fix preview entry exception (issue #119)\n\n    * Add serendipity.toggle_collapsible as a reusable JS function\n      for the core backend and backend sections emitted by plugins as\n      an easy way to provide show/hide functionality. (yellowled)\n\n    * Fixed media insert target bug (issued by #143, #145, #121)\n\n    * Fixed publish drafted-entries via dashboard (issue #160)\n\n    * All frontend themes that rely on the bundled Core jQuery library\n      are currently using the jquery.noConflict-mode for compatibility\n      to older plugins.\n      This mode is now considered deprecated and will be removed in\n      future releases. A new variable:\n        $serendipity['capabilities']['jquery-noconflict'] = false;\n      in your theme's config.inc.php file can now turn of that\n      noConflict-mode.\n\n    * Due to distinction of backend and frontend themes, each theme\n      that provides a custom jquery.js now only does so for the\n      frontend. The backend now listens to a:\n\n        $serendipity['capabilities']['jquery_backend'] = false;\n\n      variable, and the file needs to be jquery_backend.js that\n      a backend theme would reference to.\n\n    * Changed 2k11's config.inc.php file to provide a more stable\n      call of event hooks so that other themes can also hook\n      their own events.\n\n    * Changed JS for category filtering and its reset button to be a\n      reusable function, which is now also used in the list of\n      installable plugins.\n\n    * Fixed wrong local documentation URL in plugin configuration\n\n    * Added new \"backend_dashboard\" event-hook for plugins to use\n      within dashboard.\n\n    * Backend and Frontend themes can now be set independently from\n      each other. New backend themes now need to set:\n\n        Backend: Yes\n\n      in their info.txt file. If you adapt a custom admin theme,\n      ensure that it is compatible to the new \"2k11\" backend to\n      ensure proper future usage within Serendipity. The bulletproof\n      backend will now no longer be recognized as a backend theme\n      option, but can be selected as a new frontend theme, while\n      using 2k11 (=default) in the backend.\n\n    * Include klogger, call it as $serendipity['logger']->debug/error.\n      The log-level can be set in the general configuration and is\n      disabled by default.\n\n    * Fixed missing s9ymdb ID\n\n    * Add HTTP_Request2 and dependencies as bundled libraries and\n      update PEAR library to version 1.9.4\n\n    * Implemented AJAX uploadResize option to allow resizing an image\n      before upload (onli)\n\n    * Improved file/directory removal code to (hopefully) fail more\n      gracefully\n\n    * Change \"default\" admin backend template fallback chain so that\n      old admin themes can theoretically be shown with the \"old\"\n      admin interface. This however in many themes breaks the\n      Serendipity workflow. In other words, currently old custom backend\n      themes are deprecated. We are still working on how to deal\n      with this and if we can add some sort of compatibility or port.\n\n    * Fix bundled jquery's source mapping, upgraded to 1.11.1\n\n    * Fixed missing media name in resize GET URL\n\n    * Fix MediaDB overlay display\n\n    * Re-Added possibility to change filename/target directory for\n      media uploads\n\n    * Update CKEditor to 4.4\n\n    * Fixed some missing internationalization instances\n\n    * Minor CSS improvements for upgrader, plugin sequencing widget\n\n    * RSS importer accepts pubDate in addition to pubdate element.\n\n    * Upgrader in Dashboard can be disabled, returns error message when\n      URL not accessible\n\n    * Added a category filtering ability for the entry editor\n\n    * Better check when removing old/dead files to prevent error\n      messages\n\n    * WYSIWYG editor respects image floats\n\n    * Support html5 multiple file upload\n\n    * Modernizr, magnificPopup updates\n\n    * Improvements to equal heights js, button labels\n\n    * No longer truncate long entry titles\n\n    * Improve non-WYSIWYG editor tag insertion, url insertion\n\n    * Improve less DOM firing on certain javascript tasks\n\n    * Introduce js_backend event hook\n\n\nVersion 2.0-beta1 and followup -beta2 (April 14th, 2014)\n------------------------------------------------------------------------\n\n    * Upgrade Smarty libs to 3.1.18\n\n    * Automatic upgrade removal of old Smarty2 files (2.0-alpha2)\n      function uses SPL\n\n    * Implemented patch https://github.com/s9y/Serendipity/pull/15\n\n    * When switching Themes, both the backend and the frontend\n      will remember the timestamp of the last theme change,\n      to make sure that the browser will not cache a mismatching CSS.\n\n    * Fix theme change issues with global template vars in core\n      (1559472ca3) see 'temporary added empty $template_config_groups'\n      in 1.7-rc2 (eb77dc369a)\n\n    * Use Smarty for backend display output\n\n    * \"Themes\" are now what has previously been mixed as \"Design\",\n      \"Theme\", \"Template\" or \"Layouts\".\n\n    * WYSIWYG-Spawn-API reworked (2k11/admin/wysiwyg_init.tpl)\n\n    * All Javascript-functions like SetCookie now reside in a\n      serendipity-object, simulating a namespace.\n        SetCookie(...)\n      became\n        serendipity.SetCookie(...)\n\n    * Renamed JS-Function:\n        toggleCategorySelector became toggle_category_selector\n\n    * The advanced js option (eyecandy) got removed, as such a thing\n      like advanced js doesn't exist anymore\n\n    * dashboard_plugin has an equivalent in the core, replacing the\n      frontpage\n\n    * Constants like S9Y_FRAMEWORK_COMPAT are no longer set\n      (include_once is used instead)\n\n    * New additional option to render smarty-functions:\n      serendipity_smarty_show($template, $data)\n\n    * A number of functions now returns their result instead of echoing\n      them (TODO: a bunch of image- and\n      trackback-functions still use echo for messages\"):\n        serendipity_plugin_config\n        serendipity_printEntryForm\n        serendipity_printEntries\n        function serendipity_showMedia\n        serendipity_showPropertyForm\n        showMediaLibrary\n        serendipity_guessInput\n        memSnap\n        serendipity_displayTopUrlList\n        serendipity_displayTopExits\n        serendipity_displayTopReferrers\n        serendipity_printConfigTemplate\n        show_plugins\n\n    * Functions removed from the core:\n        serendipity_printConfigJS\n\n    * Functions added to the core:\n        serendipity_generateImageSelectorParams\n\n    * All internal plugins got extracted from plugin_internal.inc.php\n      and moved to plugins/.\n      They are renamed to work there (upgrader task provides migration):\n        serendipity_calendar_plugin    became serendipity_plugin_calendar\n        serendipity_quicksearch_plugin became serendipity_plugin_quicksearch\n        serendipity_archives_plugin    became serendipity_plugin_archives\n        serendipity_categories_plugin  became serendipity_plugin_categories\n        serendipity_syndication_plugin became serendipity_plugin_syndication\n        serendipity_superuser_plugin   became serendipity_plugin_superuser\n        serendipity_plug_plugin        became serendipity_plugin_plug\n\n    * Add plugin hook \"js\", generating a virtual serendipity.js\n\n    * Admin JS is now bundled in serendipity_editor.js.tpl and\n      rendered using smarty in the theme config\n\n    * Admin JS got rewritten using jQuery where applicable\n\n    * serendipity_define.js.php removed\n\n    * Removed support for layout.php\n\n    * The whole PHP-Code now almost never echoes integrated HTML, but\n      uses smarty template (TODO: Remove the almost)\n      The necessary smarty-templates reside in 2k11/admin/\n      Every theme can generate its own backend if it integrates those\n      templates under admin/ itself\n\n    * 2k11 is set as the new default backend, replacing bulletproof.\n      default remains the fallback so far.\n\n    * A number of functions had some arguments removed:\n        * function serendipity_displayImageList:\n            From\n                function serendipity_displayImageList($page = 0, $lineBreak = NULL, $manage = false, $url = NULL, $show_upload = false, $limit_path = NULL, $smarty_display = true)\n            to\n                function serendipity_displayImageList($page = 0, $lineBreak = NULL, $manage = false, $url = NULL, $show_upload = false, $limit_path = NULL)\n        * function serendipity_showMedia\n            From\n                function serendipity_showMedia(&$file, &$paths, $url = '', $manage = false, $lineBreak = 3, $enclose = true, $smarty_vars = array(), $smarty_display = true)\n            to\n                function serendipity_showMedia(&$file, &$paths, $url = '', $manage = false, $lineBreak = 3, $enclose = true, $smarty_vars = array())\n        * generate_plugins\n            From\n                static function generate_plugins($side, $tag = '', $negate = false, $class = null, $id = null, $tpl = 'sidebar.tpl')\n            to\n                static function generate_plugins($side, $negate = false, $class = null, $id = null, $tpl = 'sidebar.tpl')\n\n    * serendipity_showMedia now no longer returns the used template and\n      echoes the generated HTML, but only returns the generated HTML\n\n    * Themes now have their own configuration page,\n      ?serendipity[adminModule]=templates&serendipity[adminAction]=editConfiguration\n\n    * jQuery in the backend no longer runs in noConflict-mode. Use\n      $(...) instead of jQuery(...)\n\n    * The entryproperty-plugin will now always delete its cache on\n      uninstall, not only if the cache is activated then\n\n    * serendipity_is_iframe now really only checks for iframe and\n      doesn't also echo it\n\n    * Added option simpleFilters (meant to indicate to show less\n      filters and poweruser-options)\n\n    * serendipity_admin_image_selector.php no longer used by 2k11,\n      instead the media library (with admin/media_choose.tpl,\n      admin/media_upload.tpl, media_pane.tpl, media_items.tpl)\n      can generat the imageselector on its own. The editor calls\n      serendipity_admin.php?serendipity[adminModule]=media instead,\n      with serendipity[textarea] indicating the target, and\n      serendipity[showMediaToolbar] activating the imageSelector modus\n\n    * New required PHP-Version: 5.3 or higher (checked in the installer)\n\n\nVersion 1.7.8 (February 9th, 2014)\n------------------------------------------------------------------------\n\n    * Fixed POST for db entry insert, caused by 1.7.6 security feature\n\n\nVersion 1.7.7 (February 6th, 2014)\n------------------------------------------------------------------------\n\n    * Fixed PHP parse error in templatechooser plugin. Blame garvin. :(\n\n\nVersion 1.7.6 (February 6th, 2014)\n------------------------------------------------------------------------\n\n    * Fixed backend security issues, thanks to Stefan Schurtz:\n\n        - XSS of users realname in \"Manage users\" section\n          (Backend, requires login)\n        - XSS when creating an entry with bad id/timestamp values\n          (Backend, requires login)\n        - SQL-Injection for plugin installation parameter\n          (Backend, requires admin login)\n\n    * Templatechooser plugin uses \"default\" template as fallback,\n      not \"bulletproof\".\n\n\nVersion 1.7.5 (January 18th, 2014)\n------------------------------------------------------------------------\n\n    * Fixed textile PHP 5.2 (namespace) compat issue\n\n    * Added default value to spamblocks required_fields option [name,\n      comment]\n\n\nVersion 1.7.4 (January 11th, 2014)\n------------------------------------------------------------------------\n\n    * Fixed emoticate plugin icon link to check for textile class\n\n    * Upgrade textile plugin libs - lib3 extends to PHP >= 5.3.\n      Please check for new options!\n\n    * Fixed spamblocks Captcha imagecreate() with PHP > 5.3 versions\n\n    * Smarty 3.1.16 bugfix release - please read bundled-libs/Smarty/change_log.txt\n      about changes to versions 3.1.16 and 3.1.15.\n      Please also see special bundled-libs/Smarty/3.1.16_RELEASE_NOTES.txt\n\n    * Removed blogg.de filter from spamblock plugin, adapted htaccess\n      IP block algorithm for race conditions. .htaccess can now contain\n      multiple Deny From ranges to prevent parsing problems (DLange)\n\n    * Fixed IP columns in spamblocklog, spamblock_htaccess, karmalog, visitors\n      and shoutbox to varchar(45) for IPv6 - including tunneled IPv4 (39+6)\n\n    * Fixed possible double includement of plugin_internal.inc.php\n\n    * Fix possible temporary caching errors failing $eventData[0]['properties']\n\n    * Basic support for static blocks (includeentry plugin) in 2k11.\n\n    * Added \"backend_footer\" event hook\n\n    * Exclude \"frontpage extensions\" directories \"_vti_cnf\" on windows servers\n      in Media Library\n\n    * Fixed pagination when searching terms with fetchlimit < 4\n\n    * Fixed deprecated /e modifier with PHP >= 5.5 in nl2br plugin restore method\n\n\nVersion 1.7.3 (August 28th, 2013)\n------------------------------------------------------------------------\n\n    * Trackback to https:// style URLs will use proper port 443 instead\n      of 80.\n\n    * Disabled htmlarea spellchecker module, http://osvdb.org/87395\n      Thanks for Henri Salo for pointing this out. CVE-2013-5670\n\n\nVersion 1.7.2 (July 26th, 2013)\n------------------------------------------------------------------------\n\n    * Fix a syntax error in the \"mysql\" deprecation code, thanks\n      to Ian\n\n\nVersion 1.7.1 (July 26th, 2013)\n------------------------------------------------------------------------\n\n    * Added new event hooks \"backend_plugins_install\", \"backend_plugins_update\"\n      and \"backend_templates_install\".\n\n    * Serendipity will switch to mysqli if PHP >= 5.5 is used (mysql\n      is deprecated)\n\n    * Smarty upgrade to 3.1.14 (read changeLog and the README for API changes since Smarty 2)\n\n    * Upgrader will now remove/delete the browsercompatibility plugin\n\n    * Fixed Media Library exclude path to not show/proceed ckeditor/kcfinders .thumbs dir\n\n    * Fixed bulletproof->colorset GET mismatch with categorytemplates plugin\n      config.inc.php [Line 29]\n\n    * German translation for stable archives added (YL)\n\n    * Fixed curl result bug in spartacus plugin\n\n    * Create new migration task for propagate defaultBaseURL when\n      currently empty (onli)\n\n    * Fixed statistics sidebar querys ( & for PostgreSQL ) [242520b]\n      and added some missing html end tags\n\n    * Added missing current group name when editing usergroups\n\n\nVersion 1.7 (May 11th, 2013)\n------------------------------------------------------------------------\n\n    * rc4: Get ready for CKEDITOR-wysiwyg Plugin mode\n\n    * rc4: Fixed fetching javascript object (for nugget textareas) in non-wysiwyg-mode\n\n    * rc4: Change .htaccess blocking mechanism by spamblock plugin to not fetch\n      too many datarows, thanks to DLange from the forums. (The .htaccess\n      feature is still considered experimental, use at your own risk ;))\n\n    * rc4: Fixed entryproperties backend 'cache now' link\n\n    * rc3 + rc4: Media database: Escape more Cookie values to prevent storing\n      possible XSS (http://board.s9y.org/viewtopic.php?f=3&t=19142).\n      Escape hotlinked media filename. Escape importer host name error\n      Thanks to GreenSun from the forums for bringing this to attention,\n      originally reported by Dshellnoi Unix\n\n    * rc2: Alter entries.tpl to add the line:\n      {assign var=\"entry\" value=$entry scope=\"parent\"}\n      for proper propagation of $entry to sub-templates.\n\n    * rc2: Alter error reporting to only fail when 'debug' mode is enabled,\n      so that \"normal\" blog installations will not fail on specific\n      E_STRICT warnings that are not important.\n\n    * rc2: temporary added empty $template_config_groups into templates with config,\n      to avoid display troubles for template changes, if previous template had these set.\n      Please check your template.\n\n    * rc2: reflect POST submitted changes in Bulletproof template configs re-set situations\n\n    * various PHP 5 compatibility fixes in core and plugins\n\n    * Allow entryproperties plugin to define defaults for custom fields\n\n    * Onyx, Net_URL classes: Remove PHP4 style constructor due to\n      PHP5 error \"Constructor already defined\"\n\n    * Improved RSS sidebarplugin to support Atom\n\n    * Bundled simplepie\n\n    * For Blogs running on a non-UTF-8 language, set a Smarty constant\n      to indicate the actually used charset.\n\n    * Added to use MyISAM handler for s9y tables (we do not use InnoDB\n      features, but rely on MyISAM fulltext)\n\n    * fixed defaultBaseURL did not show up installer. Thanks to onli.\n      Follow up from c292bad\n\n    * fixed draft & future entries preview link in backend\n\n    * Improved karmarating plugin to be able to use AJAX calls\n      (gregman)\n\n    * Allow Smarty to fetch .tpl files from all directories so that\n      s9y plugin can use the fetch() call for their .tpl files no\n      matter which (symlinked) directory the plugin resides in.\n      The Smarty security policy to us only serves as a restriction\n      within .tpl files to not allow arbitrary PHP modifier/function calls.\n      If in the future Smarty supports enforcing trustedDir checks on\n      {include} calls seperately to smarty->fetch() calls, we'll also\n      add that to .tpl files.\n      (garvinhicking)\n\n    * Patch by Markus Br\u609ener: Properly handle files that have no\n      extension in media database\n\n    * Made Spartacus recognize github.com mirror (garvinhicking)\n\n    * Add \"Summary\" output to title of summary archive pages, patch by\n      hboeck\n\n    * Set the smarty object by instance (ophian)\n      It is often needed to access the Smarty object from anywhere in your code, e.g. in plugins\n      We now ensure that there is only one instance of the object available.\n      To obtain an instance of this class: $serendipity['smarty'] = Serendipity_Smarty::getInstance();\n      The first time this is called a new instance will be created. Thereafter, the same instance is handed back.\n      To overwrite use $serendipity['smarty'] = new Serendipity_Smarty; to create a new instance.\n\n    * Set a global Serendipity errorToExceptionHandler (ophian)\n      changed some old smarty trigger_errors to PHPs native function\n\n    * Updated spamblock plugin (ophian)\n      changed wordfilter to function and Commenters moderation check verify_once\n      to get checked via wordfilter to reject known spam comments before\n\n    * Changed backend comment (error) messages  (ophian)\n      as now captured and styleable messages\n      (newly added .serendipity_backend_msg_notice css class)\n\n    * Updated nl2br plugin (ophian)\n      added isolation tag using nl to br\n      this also adds some NoBR buttons to backend entry forms\n\n    * Smarty3 support (ophian)\n      with this upgrade Serendipity / Smarty will at least need a webserver running the PHP 5.2 series.\n      As of August 2011, all PHP users should note, that the PHP 5.2 series is NOT supported anymore by the PHP developers.\n      All users are strongly encouraged to upgrade to PHP 5.3.8 and up. Please refer to your ISP about this.\n\n    * Added new serendipity['defaultBaseURL'] variable that makes sure\n      that the baseURL is not overriden when configuring serendipity\n      with a possibly autodetected currentl URL. Patch by Manko10.\n\n\n(Older NEWS see file NEWS_OLD)\n", "<?php\n# Copyright (c) 2003-2005, Jannis Hermanns (on behalf the Serendipity Developer Team)\n# All rights reserved.  See LICENSE file for licensing details\n\nif (IN_serendipity !== true) {\n    die (\"Don't hack!\");\n}\n\n/**\n * Convert a PHP Ini setting to a boolean flag\n *\n * @access public\n * @param   mixed       input variable\n * @return  boolean     output variable\n */\nfunction serendipity_ini_bool($var) {\n    return ($var === 'on' || $var == '1');\n}\n\n/**\n * convert a size value from a PHP.ini to a bytesize\n *\n * @access public\n * @param   string  size value from PHP.ini\n * @return  string  bytesize\n */\nfunction serendipity_ini_bytesize($val) {\n    if ( $val == '' )\n        return 0;\n\n    switch(substr($val, -1)) {\n        case 'k':\n        case 'K':\n            return (int) $val * 1024;\n            break;\n        case 'm':\n        case 'M':\n            return (int) $val * 1048576;\n            break;\n        default:\n            return $val;\n   }\n}\n\n/**\n * Update the serendipity_config_local.inc.php file with core information\n *\n * @access public\n * @param   string  Database name\n * @param   string  Database prefix\n * @param   string  Database host\n * @param   string  Database user\n * @param   string  Datapase Passwort\n * @param   string  Database type\n * @param   string  Use persistent connections?\n * @param   array   An array of additional variables to be put into the config file\n * @return true\n */\nfunction serendipity_updateLocalConfig($dbName, $dbPrefix, $dbHost, $dbUser, $dbPass, $dbType, $dbPersistent, $privateVariables = null) {\n    global $serendipity;\n    umask(0000);\n\n    $file = 'serendipity_config_local.inc.php';\n    $path = $serendipity['serendipityPath'];\n\n    $oldconfig = @file_get_contents($path . $file);\n    $configfp  = fopen($path . $file, 'w');\n\n    if (!is_resource($configfp)) {\n        $errs[] = sprintf(FILE_WRITE_ERROR, $file);\n        $errs[] = sprintf(DIRECTORY_RUN_CMD, 'chown -R www:www', $path) . ' (' . WWW_USER . ')';\n        $errs[] = sprintf(DIRECTORY_RUN_CMD, 'chmod 770'       , $path);\n        $errs[] = BROWSER_RELOAD;\n\n        return $errs;\n    }\n\n    if (isset($_POST['sqlitedbName']) && !empty($_POST['sqlitedbName'])) {\n        $dbName = $_POST['sqlitedbName'];\n    }\n\n    $file_start    = \"<?php\\n\"\n                   . \"\\t/*\\n\"\n                   . \"\\t  Serendipity configuration file\\n\";\n    $file_mark     = \"\\n\\t// End of Serendipity configuration file\"\n                   . \"\\n\\t// You can place your own special variables after here:\\n\";\n    $file_end      = \"\\n?>\";\n    $file_personal = '';\n\n    preg_match('@' . preg_quote($file_start) . '.*' . preg_quote($file_mark) . '(.+)' . preg_quote($file_end) . '@imsU', $oldconfig, $match);\n    if (!empty($match[1])) {\n        $file_personal = $match[1];\n    }\n\n    fwrite($configfp, $file_start);\n\n    fwrite($configfp, \"\\t  Written on \". date('r') .\"\\n\");\n    fwrite($configfp, \"\\t*/\\n\\n\");\n\n    fwrite($configfp, \"\\t\\$serendipity['versionInstalled']  = '{$serendipity['version']}';\\n\");\n    fwrite($configfp, \"\\t\\$serendipity['dbName']            = '\" . addslashes($dbName) . \"';\\n\");\n    fwrite($configfp, \"\\t\\$serendipity['dbPrefix']          = '\" . addslashes($dbPrefix) . \"';\\n\");\n    fwrite($configfp, \"\\t\\$serendipity['dbHost']            = '\" . addslashes($dbHost) . \"';\\n\");\n    fwrite($configfp, \"\\t\\$serendipity['dbUser']            = '\" . addslashes($dbUser) . \"';\\n\");\n    fwrite($configfp, \"\\t\\$serendipity['dbPass']            = '\" . addslashes($dbPass) . \"';\\n\");\n    fwrite($configfp, \"\\t\\$serendipity['dbType']            = '\" . addslashes($dbType) . \"';\\n\");\n    fwrite($configfp, \"\\t\\$serendipity['dbPersistent']      = \". (serendipity_db_bool($dbPersistent) ? 'true' : 'false') .\";\\n\");\n    if ($serendipity['dbNames']) {\n        fwrite($configfp, \"\\t\\$serendipity['dbCharset']         = '\" . addslashes(SQL_CHARSET) . \"';\\n\");\n    }\n\n    if (is_array($privateVariables) && count($privateVariables) > 0) {\n        foreach($privateVariables AS $p_idx => $p_val) {\n            fwrite($configfp, \"\\t\\$serendipity['{$p_idx}']  = '\" . addslashes($p_val) . \"';\\n\");\n        }\n    }\n\n    fwrite($configfp, $file_mark .  $file_personal . $file_end);\n\n    fclose($configfp);\n\n    @chmod($path . $file, 0700);\n    return true;\n}\n\n/**\n * Setup the core database tables\n *\n * Creates the needed tables - beware, they will be empty and need to be stuffed with\n * default templates and such...\n *\n * @access public\n * @return null\n */\nfunction serendipity_installDatabase() {\n  global $serendipity;\n\n    $queries = serendipity_parse_sql_tables(S9Y_INCLUDE_PATH . 'sql/db.sql');\n    $queries = str_replace('{PREFIX}', $serendipity['dbPrefix'], $queries);\n\n    foreach ($queries as $query) {\n        serendipity_db_schema_import($query);\n    }\n\n    if (file_exists(S9Y_INCLUDE_PATH . 'sql/preload.sql')) {\n        $queries = serendipity_parse_sql_inserts(S9Y_INCLUDE_PATH . 'sql/preload.sql');\n        $queries = str_replace('{PREFIX}', $serendipity['dbPrefix'], $queries);\n        foreach ($queries as $query) {\n            serendipity_db_schema_import($query);\n        }\n    }\n}\n\n/**\n * Check a default value of a config item from the configuration template files\n *\n * @access public\n * @param   string      Name of the config item to check\n * @param   string      The default value, if none is found\n * @param   boolean     If true, it's the personal config template, if false its the global config template\n * @param   string      Protected fields will not be echo'd in the HTML form\n * @return  string      The default value\n */\nfunction serendipity_query_default($optname, $default, $usertemplate = false, $type = 'string') {\n    global $serendipity;\n\n    /* I won't tell you the password, it's MD5 anyway, you can't do anything with it */\n    if ($type == 'protected' && IS_installed === true) {\n        return '';\n    }\n\n    switch ($optname) {\n        case 'permalinkStructure':\n            return $default;\n\n        case 'dbType' :\n            if (extension_loaded('PDO') &&\n                in_array('pgsql', PDO::getAvailableDrivers())) {\n                $type = 'pdo-postgres';\n            }\n            if (extension_loaded('pgsql')) {\n                $type = 'postgres';\n            }\n            if (extension_loaded('mysql')) {\n                $type = 'mysql';\n            }\n            if (extension_loaded('mysqli')) {\n                $type = 'mysqli';\n            }\n            return $type;\n\n        case 'serendipityPath':\n            if (empty($_SERVER['PHP_SELF'])) {\n                $test_path1 = $_SERVER['DOCUMENT_ROOT'] . rtrim(dirname($_SERVER['SCRIPT_FILENAME']), '/') . '/';\n            } else {\n                $test_path1 = $_SERVER['DOCUMENT_ROOT'] . rtrim(dirname($_SERVER['PHP_SELF']), '/') . '/';\n            }\n            $test_path2 = serendipity_getRealDir(__FILE__);\n\n            if (!empty($_SERVER['ORIG_PATH_TRANSLATED']) && file_exists(dirname($_SERVER['ORIG_PATH_TRANSLATED']) . '/serendipity_admin.php')) {\n                return realpath(rtrim(dirname($_SERVER['ORIG_PATH_TRANSLATED']), '/')) . '/';\n            }\n\n            if (file_exists($test_path1 . 'serendipity_admin.php')) {\n                return $test_path1;\n            } elseif (defined('S9Y_DATA_PATH')) {\n                // Shared installation!\n                return S9Y_DATA_PATH;\n            } else {\n                return $test_path2;\n            }\n\n        case 'serendipityHTTPPath':\n            return rtrim(dirname($_SERVER['PHP_SELF']), '/') .'/';\n\n        case 'defaultBaseURL':\n        case 'baseURL':\n            $ssl  = isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on';\n            $port = $_SERVER['SERVER_PORT'];\n\n            return sprintf('http%s://%s%s%s',\n\n                            $ssl ? 's' : '',\n                            preg_replace('@^([^:]+):?.*$@', '\\1', $_SERVER['HTTP_HOST']),\n                            (($ssl && $port != 443) || (!$ssl && $port != 80)) ? (':' . $port) : '',\n                            rtrim(dirname($_SERVER['PHP_SELF']), '/') .'/'\n                   );\n\n        case 'convert':\n            $path = array();\n\n            $path[] = ini_get('safe_mode_exec_dir');\n\n            if (isset($_SERVER['PATH'])) {\n                $path = array_merge($path, explode(PATH_SEPARATOR, $_SERVER['PATH']));\n                // remove unwanted empty or system32 path parts, so that wrong system32/convert.exe is prevented.\n                foreach ($path as $pk => $pv) {\n                    if (stripos($pv, 'system32') !== false || empty($pv)) {\n                        unset($path[$pk]);\n                    }\n                }\n                $path = array_values($path); // 'reindex' array\n            }\n\n            /* add some other possible locations to the path while we are at it,\n             * as these are not always included in the apache path */\n            $path[] = '/usr/X11R6/bin';\n            $path[] = '/usr/bin';\n            $path[] = '/usr/local/bin';\n\n            foreach ($path as $dir) {\n                if (!empty($dir) && (function_exists('is_executable') && @is_readable($dir) && @is_executable($dir . '/convert')) || @is_file($dir . '/convert')) {\n                    return $dir . '/convert';\n                }\n\n                if (!empty($dir) && (function_exists('is_executable') && @is_readable($dir . '/convert') && @is_executable($dir . '/convert.exe')) || @is_file($dir . '/convert.exe')) {\n                    return $dir . '/convert.exe';\n                }\n            }\n            return $default;\n\n        case 'rewrite':\n            return serendipity_check_rewrite($default);\n\n        default:\n            if ($usertemplate) {\n                return serendipity_get_user_var($optname, $serendipity['authorid'], $default);\n            }\n\n            return $default;\n    }\n}\n\n/**\n * Parse a configuration template file\n *\n * @access public\n * @param   string      Path to the s9y configuration template file\n * @param   array       An array of config areas/sections that shall be returned from the template\n * @param   array       Restrict the return of template variables to items containing a specific flag\n * @return  array        An array with configuration items, keys and values\n */\nfunction serendipity_parseTemplate($filename, $areas = null, $onlyFlags=null) {\n    global $serendipity;\n\n    $userlevel = $serendipity['serendipityUserlevel'];\n\n    if ( !IS_installed ) {\n        $userlevel = USERLEVEL_ADMIN;\n    }\n\n    $config = @include($filename);\n    if (! is_array($config)) {\n        printf(INCLUDE_ERROR,$filename);\n    }\n\n    foreach ( $config as $n => $category ) {\n        /* If $areas is an array, we filter out those categories, not within the array */\n        if ( is_array($areas) && !in_array($n, $areas) ) {\n            unset($config[$n]);\n            continue;\n        }\n\n        foreach ( $category['items'] as $i => $item ) {\n            $items = &$config[$n]['items'][$i];\n\n            if (!isset($items['userlevel']) || !is_numeric($items['userlevel'])) {\n                $items['userlevel'] = USERLEVEL_ADMIN;\n            }\n\n            if (!isset($items['permission']) && $userlevel < $items['userlevel']) {\n                unset($config[$n]['items'][$i]);\n                continue;\n            } elseif (!is_array($items['permission']) && !serendipity_checkPermission($items['permission'])) {\n                unset($config[$n]['items'][$i]);\n                continue;\n            } elseif (is_array($items['permission'])) {\n                $one_found = false;\n                $all_found = true;\n                foreach($items['permission'] AS $check_permission) {\n                    if (serendipity_checkPermission($check_permission)) {\n                        $one_found = true;\n                    } else {\n                        $all_found = false;\n                    }\n                }\n\n                if (!isset($items['perm_mode'])) {\n                    $items['perm_mode'] = 'or';\n                }\n\n                if ($items['perm_mode'] == 'or' && !$one_found) {\n                    unset($config[$n]['items'][$i]);\n                    continue;\n                } elseif ($items['perm_mode'] == 'and' && !$one_found && !$all_found) {\n                    unset($config[$n]['items'][$i]);\n                    continue;\n                }\n            }\n\n            if (!isset($items['flags']) || !is_array($items['flags'])) {\n                $items['flags'] = array();\n            }\n\n            if ( is_array($onlyFlags) ) {\n                foreach ( $onlyFlags as $onlyFlag ) {\n                    if ( !in_array($onlyFlag, $items['flags']) ) {\n                        unset($config[$n]['items'][$i]);\n                        continue;\n                    }\n                }\n            }\n        }\n\n        if (sizeof($config[$n]['items']) < 1) {\n            unset($config[$n]);\n        }\n    }\n\n    return $config;\n}\n\n/**\n * Replace some variables within config item values with the right values\n *\n * @access public\n * @param   string  Input string\n * @return  string  Output string\n */\nfunction serendipity_replaceEmbeddedConfigVars ($s) {\n    return str_replace(\n                  array(\n                    '%clock%'\n                  ),\n\n                  array(\n                    date('H:i')\n                  ),\n\n                  $s);\n}\n\n/**\n * Preprocess the configuration value and put it into a HTML output field (radio, password, text, select, ...)\n *\n * @access public\n * @param   string  The type of the configuration item\n * @param   string  The name of the configuration item\n * @param   string  The current value of the configuration item\n * @param   string  The default value of the configuration item\n * @return null\n */\n\nfunction serendipity_guessInput($type, $name, $value='', $default='') {\n    $data = array();\n    $curOptions = array();\n\n    switch ($type) {\n        case 'bool':\n            $value = serendipity_get_bool($value);\n            if ($value === null) {\n                $value = $default;\n            }\n            break;\n\n        case 'multilist':\n            $default = (array)$default;\n            $value = (array)$value;\n            foreach ($default as $k => $v) {\n                $selected = false;\n                foreach($value AS $vk => $vv) {\n                    if ($vv['confkey'] == $v['confkey']) {\n                        $selected = true;\n                    }\n                }\n                $curOptions[$name][$k]['selected'] = $selected;\n            }\n            break;\n\n        case 'list':\n            $cval = (string)$value;\n            $default = (array)$default;\n            foreach ($default as $k => $v) {\n                $selected = ((string)$k == (string)$value);\n                if (empty($cval) && ((string)$k === 'false' || (string)$k === null)) {\n                    $selected = true;\n                }\n                $curOptions[$name][$k]['selected'] = $selected;\n            }\n            break;\n    }\n\n    $data['type'] = $type;\n    $data['name'] = $name;\n    $data['value'] = $value;\n    $data['default'] = $default;\n    $data['selected'] = $curOptions;\n\n    return serendipity_smarty_show('admin/guess_input.tpl', $data);\n}\n\n/**\n * Parses the configuration array and displays the configuration screen\n *\n * @access public\n * @param   array       Configuration superarray\n * @param   array       The previous values submitted by the user\n * @param   boolean     If true, no HTML FORM container will be emitted\n * @param   boolean     If true, the configuration sections will all be folded\n * @param   boolean     If true, the user can turn config sections on and off\n * @param   boolean     If true, the user can NOT display possibly dangerous options\n * @return null\n */\nfunction serendipity_printConfigTemplate($config, $from = false, $noForm = false, $folded = true, $allowToggle = true, $showDangerous = false) {\n    global $serendipity;\n    $data = array();\n    $data['noForm'] = $noForm;\n    $data['formToken'] = serendipity_setFormToken();\n\n    $data['allowToggle'] = $allowToggle;\n\n    foreach ($config as &$category) {\n        foreach ($category['items'] as &$item) {\n\n            $value = $from[$item['var']];\n\n            /* Calculate value if we are not installed, how clever :) */\n            if ($from == false) {\n                $value = serendipity_query_default($item['var'], $item['default']);\n            }\n\n            /* Check for installOnly flag */\n            if (in_array('installOnly', $item['flags']) && IS_installed === true) {\n                continue;\n            }\n\n            if (in_array('hideValue', $item['flags'])) {\n                $value = '';\n            }\n\n            if (!$showDangerous && $item['view'] == 'dangerous') {\n                continue;\n            }\n\n            if (in_array('config', $item['flags']) && isset($from['authorid'])) {\n                $value = serendipity_get_user_config_var($item['var'], $from['authorid'], $item['default']);\n            }\n\n            if (in_array('parseDescription', $item['flags'])) {\n                $item['description'] = serendipity_replaceEmbeddedConfigVars($item['description']);\n            }\n\n            if (in_array('probeDefault', $item['flags'])) {\n                $item['default'] = serendipity_probeInstallation($item['var']);\n            }\n\n            if (in_array('ifEmpty', $item['flags']) && empty($value)) {\n                $value = serendipity_query_default($item['var'], $item['default']);\n            }\n            $item['guessedInput'] = serendipity_guessInput($item['type'], $item['var'], $value, $item['default']);\n        }\n    }\n    $data['config'] = $config;\n    return serendipity_smarty_show('admin/config_template.tpl', $data);\n}\n\n/**\n * Parse .sql files for use within Serendipity, query by query,\n * accepting only CREATE commands.\n *\n * @access public\n * @param   string  The filename of the SQL file\n * @return array    An array of queries to execute\n */\nfunction serendipity_parse_sql_tables($filename) {\n    $in_table = 0;\n    $queries = array();\n\n    $fp = fopen($filename, 'r', 1);\n    if ($fp) {\n        while (!@feof($fp)) {\n            $line = trim(fgets($fp, 4096));\n            if ($in_table) {\n                $def .= $line;\n                if (preg_match('/^\\)\\s*(type\\=\\S+|\\{UTF_8\\})?\\s*\\;$/i', $line)) {\n                    $in_table = 0;\n                    array_push($queries, $def);\n                }\n            } else {\n                if (preg_match('#^create table \\{PREFIX\\}\\S+\\s*\\(#i', $line)) {\n                    $in_table = 1;\n                    $def = $line;\n                }\n\n                if (preg_match('#^create\\s*(\\{fulltext\\}|unique|\\{fulltext_mysql\\})?\\s*index#i', $line)) {\n                    array_push($queries, $line);\n                }\n            }\n        }\n        fclose($fp);\n    }\n\n    return $queries;\n}\n\n/**\n * Parse .sql files for use within Serendipity, query by query,\n * accepting only INSERT commands.\n *\n * @access public\n * @param   string  The filename of the SQL file\n * @return array    An array of queries to execute\n */\nfunction serendipity_parse_sql_inserts($filename) {\n    $queries = array();\n\n    $fp = fopen($filename, 'r', 1);\n    if ($fp) {\n        while (!@feof($fp)) {\n            $line = trim(fgets($fp, 65536));\n                if (preg_match('#^insert\\s*into.*;$#i', $line)) {\n                    array_push($queries, $line);\n                }\n            }\n        }\n        fclose($fp);\n\n    return $queries;\n}\n\n/**\n * Check the serendipity Installation for problems, during installation\n *\n * @access public\n * @return boolean  Errors encountered?\n */\nfunction serendipity_checkInstallation() {\n    global $serendipity, $umask;\n\n    $errs = array();\n\n    serendipity_initPermalinks();\n\n    // Check dirs\n    if (!is_dir($_POST['serendipityPath'])) {\n        $errs[] = sprintf(DIRECTORY_NON_EXISTANT, serendipity_specialchars($_POST['serendipityPath']));\n    }\n    elseif (!is_writable($_POST['serendipityPath']) ) {\n        $errs[] = sprintf(DIRECTORY_WRITE_ERROR, serendipity_specialchars($_POST['serendipityPath']));\n    }\n    elseif (!is_dir($_POST['serendipityPath'] . $_POST['uploadPath'] ) && @mkdir($_POST['serendipityPath'] . $_POST['uploadPath'], $umask) !== true) {\n        $errs[] = sprintf(DIRECTORY_CREATE_ERROR, serendipity_specialchars($_POST['serendipityPath']) . serendipity_specialchars($_POST['uploadPath']));\n    }\n    elseif (!is_writable($_POST['serendipityPath'] . $_POST['uploadPath'])) {\n        $errs[] = sprintf(DIRECTORY_WRITE_ERROR, serendipity_specialchars($_POST['serendipityPath']) . serendipity_specialchars($_POST['uploadPath']));\n        $errs[] = sprintf(DIRECTORY_RUN_CMD    , 'chmod go+rws', serendipity_specialchars($_POST['serendipityPath']) . serendipity_specialchars($_POST['uploadPath']));\n    }\n\n    // Attempt to create the template compile directory, it might already be there, but we just want to be sure\n    if (!is_dir($_POST['serendipityPath'] . PATH_SMARTY_COMPILE) && @mkdir($_POST['serendipityPath'] . PATH_SMARTY_COMPILE, $umask) !== true) {\n        $errs[] = sprintf(DIRECTORY_CREATE_ERROR, serendipity_specialchars($_POST['serendipityPath']) . PATH_SMARTY_COMPILE);\n        $errs[] = sprintf(DIRECTORY_RUN_CMD     , 'mkdir'      , serendipity_specialchars($_POST['serendipityPath']) . PATH_SMARTY_COMPILE);\n        $errs[] = sprintf(DIRECTORY_RUN_CMD     , 'chmod go+rwx', serendipity_specialchars($_POST['serendipityPath']) . PATH_SMARTY_COMPILE);\n    } elseif (is_dir($_POST['serendipityPath'] . PATH_SMARTY_COMPILE) && !is_writeable($_POST['serendipityPath'] . PATH_SMARTY_COMPILE) && @chmod($_POST['serendipityPath'] . PATH_SMARTY_COMPILE, $umask) !== true) {\n        $errs[] = sprintf(DIRECTORY_RUN_CMD     , 'chmod go+rwx', serendipity_specialchars($_POST['serendipityPath']) . PATH_SMARTY_COMPILE);\n    }\n\n    // Attempt to create the archives directory\n    if (!is_dir($_POST['serendipityPath'] . PATH_ARCHIVES) && @mkdir($_POST['serendipityPath'] . PATH_ARCHIVES, $umask) !== true) {\n        $errs[] = sprintf(DIRECTORY_CREATE_ERROR, serendipity_specialchars($_POST['serendipityPath']) . PATH_ARCHIVES);\n        $errs[] = sprintf(DIRECTORY_RUN_CMD     , 'mkdir'      , serendipity_specialchars($_POST['serendipityPath']) . PATH_ARCHIVES);\n        $errs[] = sprintf(DIRECTORY_RUN_CMD     , 'chmod go+rwx', serendipity_specialchars($_POST['serendipityPath']) . PATH_ARCHIVES);\n    }\n\n    // Check imagick\n    if ($_POST['magick'] == 'true' && function_exists('is_executable') && !@is_executable($_POST['convert'])) {\n        $errs[] = sprintf(CANT_EXECUTE_BINARY, 'convert imagemagick');\n    }\n\n    if ($_POST['dbType'] == 'sqlite' || $_POST['dbType'] == 'sqlite3' || $_POST['dbType'] == 'pdo-sqlite' || $_POST['dbType'] == 'sqlite3oo') {\n        // We don't want that our SQLite db file can be guessed from other applications on a server\n        // and have access to our's. So we randomize the SQLite dbname.\n        $_POST['sqlitedbName'] = $_POST['dbName'] . '_' . md5(time());\n    }\n\n    if (empty($_POST['dbPrefix']) && empty($serendipity['dbPrefix'])) {\n        $errs[] = sprintf(EMPTY_SETTING, INSTALL_DBPREFIX);\n    } elseif (!preg_match('@^[a-z0-9_]+$@i', $_POST['dbPrefix'])) {\n        $errs[] = INSTALL_DBPREFIX_INVALID;\n    }\n\n    $serendipity['dbType'] = preg_replace('@[^a-z0-9-]@imsU', '', $_POST['dbType']);\n    // Probe database\n    // (do it after the dir stuff, as we need to be able to create the sqlite database)\n    include_once(S9Y_INCLUDE_PATH . \"include/db/{$serendipity['dbType']}.inc.php\");\n    // For shared installations, probe the file on include path\n    //include_once(S9Y_INCLUDE_PATH . 'include/db/db.inc.php');\n\n    if (S9Y_DB_INCLUDED) {\n        serendipity_db_probe($_POST, $errs);\n    }\n\n    return (count($errs) > 0 ? $errs : '');\n}\n\n/**\n * Create the files needed by Serendipity [htaccess/serendipity_config_local.inc.php]\n *\n * @access public\n * @param   string      Path to the serendipity directory\n * @return  true\n */\nfunction serendipity_installFiles($serendipity_core = '') {\n    global $serendipity;\n\n    // This variable is transmitted from serendipity_admin_installer. If an empty variable is used,\n    // this means that serendipity_installFiles() was called from the auto-updater facility.\n    if (empty($serendipity_core)) {\n        $serendipity_core = $serendipity['serendipityPath'];\n    }\n\n    $htaccess = @file_get_contents($serendipity_core . '.htaccess');\n\n    // Let this function be callable outside installation and let it use existing settings.\n    $import = array('rewrite', 'serendipityHTTPPath', 'indexFile');\n    foreach($import AS $key) {\n        if (empty($_POST[$key]) && isset($serendipity[$key])) {\n            $$key = $serendipity[$key];\n        } else {\n            $$key = $_POST[$key];\n        }\n    }\n\n    if (php_sapi_name() == 'cgi' || php_sapi_name() == 'cgi-fcgi') {\n        $htaccess_cgi = '_cgi';\n    } else {\n        $htaccess_cgi = '';\n    }\n\n    /* If this file exists, a previous install failed painfully. We must consider the safer alternative now */\n    if (file_exists($serendipity_core . '.installer_detection_failsafe')) {\n        $htaccess_cgi = '_cgi';\n        @unlink($serendipity_core . '.htaccess');\n    }\n\n    /* Detect comptability with php_value directives */\n    if ($htaccess_cgi == '') {\n        $response = '';\n        $serendipity_root = dirname($_SERVER['PHP_SELF']) . '/';\n        $serendipity_host = preg_replace('@^([^:]+):?.*$@', '\\1', $_SERVER['HTTP_HOST']);\n\n        $old_htaccess = @file_get_contents($serendipity_core . '.htaccess');\n        $fp = @fopen($serendipity_core . '.htaccess', 'w');\n        if ($fp) {\n            fwrite($fp, 'php_value register_globals off'. \"\\n\" .'php_value session.use_trans_sid 0');\n            fclose($fp);\n\n            $safeFP = @fopen($serendipity_core . '.installer_detection_failsafe', 'w');\n            fclose($safeFP);\n            $sock = fsockopen($serendipity_host, $_SERVER['SERVER_PORT'], $errorno, $errorstring, 10);\n            if ($sock) {\n                fputs($sock, \"GET {$serendipityHTTPPath} HTTP/1.0\\r\\n\");\n                fputs($sock, \"Host: $serendipity_host\\r\\n\");\n                fputs($sock, \"User-Agent: Serendipity/{$serendipity['version']}\\r\\n\");\n                fputs($sock, \"Connection: close\\r\\n\\r\\n\");\n\n                while (!feof($sock) && strlen($response) < 4096) {\n                    $response .= fgets($sock, 400);\n                }\n                fclose($sock);\n            }\n\n            # If we get HTTP 500 Internal Server Error, we have to use the .cgi template\n            if (preg_match('@^HTTP/\\d\\.\\d 500@', $response)) {\n                $htaccess_cgi = '_cgi';\n            }\n\n            if (!empty($old_htaccess)) {\n                $fp = @fopen($serendipity_core . '.htaccess', 'w');\n                fwrite($fp, $old_htaccess);\n                fclose($fp);\n            } else {\n                @unlink($serendipity_core . '.htaccess');\n            }\n\n            @unlink($serendipity_core . '.installer_detection_failsafe');\n        }\n    }\n\n\n    if ($rewrite == 'rewrite2') {\n         $template = 'htaccess' . $htaccess_cgi . '_rewrite2.tpl';\n    } elseif ($rewrite == 'rewrite') {\n         $template = 'htaccess' . $htaccess_cgi . '_rewrite.tpl';\n    } elseif ($rewrite == 'errordocs') {\n        $template = 'htaccess' . $htaccess_cgi . '_errordocs.tpl';\n    } else {\n        $template = 'htaccess' . $htaccess_cgi . '_normal.tpl';\n    }\n\n    if (!($a = file(S9Y_INCLUDE_PATH . 'include/tpl/' . $template, 1))) {\n        $errs[] = ERROR_TEMPLATE_FILE;\n    }\n\n    // When we write this file we cannot rely on the constants defined\n    // earlier, as they do not yet contain the updated contents from the\n    // new config. Thus we re-define those. We do still use constants\n    // for backwards/code compatibility.\n\n    $PAT = serendipity_permalinkPatterns(true);\n\n    $content = str_replace(\n                 array(\n                   '{PREFIX}',\n                   '{indexFile}',\n                   '{PAT_UNSUBSCRIBE}', '{PATH_UNSUBSCRIBE}',\n                   '{PAT_ARCHIVES}', '{PATH_ARCHIVES}',\n                   '{PAT_FEEDS}', '{PATH_FEEDS}',\n                   '{PAT_FEED}',\n                   '{PAT_ADMIN}', '{PATH_ADMIN}',\n                   '{PAT_ARCHIVE}', '{PATH_ARCHIVE}',\n                   '{PAT_PLUGIN}', '{PATH_PLUGIN}',\n                   '{PAT_DELETE}', '{PATH_DELETE}',\n                   '{PAT_APPROVE}', '{PATH_APPROVE}',\n                   '{PAT_SEARCH}', '{PATH_SEARCH}',\n                   '{PAT_COMMENTS}', '{PATH_COMMENTS}',\n                   '{PAT_CSS}',\n                   '{PAT_JS}',\n                   '{PAT_PERMALINK}',\n                   '{PAT_PERMALINK_AUTHORS}',\n                   '{PAT_PERMALINK_FEEDCATEGORIES}',\n                   '{PAT_PERMALINK_CATEGORIES}',\n                   '{PAT_PERMALINK_FEEDAUTHORS}'\n                 ),\n\n                 array(\n                   $serendipityHTTPPath,\n                   $indexFile,\n                   trim($PAT['UNSUBSCRIBE'], '@/i'), $serendipity['permalinkUnsubscribePath'],\n                   trim($PAT['ARCHIVES'], '@/i'),    $serendipity['permalinkArchivesPath'],\n                   trim($PAT['FEEDS'], '@/i'),       $serendipity['permalinkFeedsPath'],\n                   trim(PAT_FEED, '@/i'),\n                   trim($PAT['ADMIN'], '@/i'),       $serendipity['permalinkAdminPath'],\n                   trim($PAT['ARCHIVE'], '@/i'),     $serendipity['permalinkArchivePath'],\n                   trim($PAT['PLUGIN'], '@/i'),      $serendipity['permalinkPluginPath'],\n                   trim($PAT['DELETE'], '@/i'),      $serendipity['permalinkDeletePath'],\n                   trim($PAT['APPROVE'], '@/i'),     $serendipity['permalinkApprovePath'],\n                   trim($PAT['SEARCH'], '@/i'),      $serendipity['permalinkSearchPath'],\n                   trim($PAT['COMMENTS'], '@/i'),    $serendipity['permalinkCommentsPath'],\n                   trim(PAT_CSS, '@/i'),\n                   trim(PAT_JS, '@/i'),\n                   trim($PAT['PERMALINK'], '@/i'),\n                   trim($PAT['PERMALINK_AUTHORS'], '@/i'),\n                   trim($PAT['PERMALINK_FEEDCATEGORIES'], '@/i'),\n                   trim($PAT['PERMALINK_CATEGORIES'], '@/i'),\n                   trim($PAT['PERMALINK_FEEDAUTHORS'], '@/i')\n                 ),\n\n                 implode('', $a)\n              );\n\n    $fp = @fopen($serendipity_core . '.htaccess', 'w');\n    if (!$fp) {\n        $errs[] = sprintf(FILE_WRITE_ERROR, $serendipity_core . '.htaccess') . ' ' . FILE_CREATE_YOURSELF;\n        $errs[] = sprintf(COPY_CODE_BELOW , $serendipity_core . '.htaccess', 'serendipity', serendipity_specialchars($content));\n        return $errs;\n    } else {\n        // Check if an old htaccess file existed and try to preserve its contents. Otherwise completely wipe the file.\n        if ($htaccess != '' && preg_match('@^(.*)#\\s+BEGIN\\s+s9y.*#\\s+END\\s+s9y(.*)$@isU', $htaccess, $match)) {\n            // Code outside from s9y-code was found.\n            fwrite($fp, $match[1] . $content . $match[2]);\n        } else {\n            fwrite($fp, $content);\n        }\n        fclose($fp);\n        return true;\n    }\n\n}\n\n/**\n * Check the flags of a configuration item for their belonging into a template\n *\n * @access public\n * @param   array       An item to check\n * @param   array       The area (configuration|local) where the config item might be displayed\n * @return  boolean\n */\nfunction serendipity_checkConfigItemFlags(&$item, $area) {\n\n    if ( in_array('nosave', $item['flags']) ) {\n        return false;\n    }\n\n    if ( in_array('local', $item['flags']) && $area == 'configuration' ) {\n        return false;\n    }\n\n    if ( in_array('config', $item['flags']) && $area == 'local' ) {\n        return false;\n    }\n\n    return true;\n}\n\n/**\n * When paths or other options are changed in the s9y configuration, update the core files\n *\n * @access public\n * @return boolean\n */\nfunction serendipity_updateConfiguration() {\n    global $serendipity, $umask;\n\n    // Save all basic config variables to the database\n    $config = serendipity_parseTemplate(S9Y_CONFIG_TEMPLATE);\n\n    if (isset($_POST['sqlitedbName']) && !empty($_POST['sqlitedbName'])) {\n        $_POST['dbName'] = $_POST['sqlitedbName'];\n    }\n\n    // Password can be hidden in re-configuring, but we need to store old password\n    if (empty($_POST['dbPass']) && !empty($serendipity['dbPass'])) {\n        $_POST['dbPass'] = $serendipity['dbPass'];\n    }\n\n    foreach($config as $category) {\n        foreach ( $category['items'] as $item ) {\n\n            /* Don't save trash */\n            if ( !serendipity_checkConfigItemFlags($item, 'configuration') ) {\n                continue;\n            }\n\n            if (!isset($item['userlevel'])) {\n                $item['userlevel'] = USERLEVEL_ADMIN;\n            }\n\n            // Check permission set. Changes to blogConfiguration or siteConfiguration items\n            // always required authorid = 0, so that it be not specific to a userlogin\n            if ( $serendipity['serendipityUserlevel'] >= $item['userlevel'] || IS_installed === false ) {\n                $authorid = 0;\n            } elseif ($item['permission'] == 'blogConfiguration' && serendipity_checkPermission('blogConfiguration')) {\n                $authorid = 0;\n            } elseif ($item['permission'] == 'siteConfiguration' && serendipity_checkPermission('siteConfiguration')) {\n                $authorid = 0;\n            } else {\n                $authorid = $serendipity['authorid'];\n            }\n\n            if (is_array($_POST[$item['var']])) {\n                // Arrays not allowed. Use first index value.\n                list($a_key, $a_val) = each($_POST[$item['var']]);\n                $_POST[$item['var']] = $a_key;\n\n                // If it still is an array, munge it all together.\n                if (is_array($_POST[$item['var']])) {\n                    $_POST[$item['var']] = @implode(',', $_POST[$item['var']]);\n                }\n            }\n\n            serendipity_set_config_var($item['var'], $_POST[$item['var']], $authorid);\n        }\n    }\n\n    if (IS_installed === false || serendipity_checkPermission('siteConfiguration')) {\n        return serendipity_updateLocalConfig($_POST['dbName'],\n                                             $_POST['dbPrefix'],\n                                             $_POST['dbHost'],\n                                             $_POST['dbUser'],\n                                             $_POST['dbPass'],\n                                             $_POST['dbType'],\n                                             $_POST['dbPersistent']);\n    } else {\n        return true;\n    }\n}\n\n/**\n * Get the root directory of Serendipity\n *\n * @access public\n * @return  string      The root directory of Serendipity\n */\nfunction serendipity_httpCoreDir() {\n    if (!empty($_SERVER['SCRIPT_FILENAME']) && substr(php_sapi_name(), 0, 3) != 'cgi') {\n        return dirname($_SERVER['SCRIPT_FILENAME']) . '/';\n    }\n\n    if (!empty($_SERVER['ORIG_PATH_TRANSLATED'])) {\n        return dirname(realpath($_SERVER['ORIG_PATH_TRANSLATED'])) . '/';\n    }\n\n    return $_SERVER['DOCUMENT_ROOT'] . dirname($_SERVER['PHP_SELF']) . '/';\n}\n\n/**\n * Delete obsolete files from Serendipity\n *\n * @access public\n * @param   array       List of files to remove (backup is tried)\n * @return boolean\n */\nfunction serendipity_removeFiles($files = null) {\n    global $serendipity, $errors;\n\n    if (!is_array($files)) {\n        return;\n    }\n\n    $backupdir = S9Y_INCLUDE_PATH . 'backup';\n    if (!is_dir($backupdir)) {\n        @mkdir($backupdir, 0777);\n        if (!is_dir($backupdir)) {\n            $errors[] = sprintf(DIRECTORY_CREATE_ERROR, $backupdir);\n            return false;\n        }\n    }\n\n    if (!is_writable($backupdir)) {\n        $errors[] = sprintf(DIRECTORY_WRITE_ERROR, $backupdir);\n        return false;\n    }\n\n    foreach($files AS $file) {\n        $source   = S9Y_INCLUDE_PATH . $file;\n        $sanefile = str_replace('/', '_', $file);\n        $target   = $backupdir . '/' . $sanefile;\n\n        if (!file_exists($source)) {\n            continue;\n        }\n\n        if (file_exists($target)) {\n            $target = $backupdir . '/' . time() . '.' . $sanefile; // Backupped file already exists. Append with timestamp as name.\n        }\n\n        if (!is_writable($source)) {\n            $errors[] = sprintf(FILE_WRITE_ERROR, $source) . '<br />';\n        } else {\n            rename($source, $target);\n        }\n    }\n}\n\n/**\n * Get the real directory of this function file\n *\n * @access public\n * @param   string      A filename to strip extra paths from\n * @return  string      The real directory name\n */\nfunction serendipity_getRealDir($file) {\n    $dir = str_replace( \"\\\\\", \"/\", dirname($file));\n    $base = preg_replace('@/include$@', '', $dir) . '/';\n    return $base;\n}\n\n/**\n * Try to detect if apache URL rewriting is available\n *\n * This function makes a dummy HTTP request and sees if it works\n *\n * @access public\n * @param   string      The default option when rewrite fails\n * @return  string      The best preference option for URL rewriting\n */\nfunction serendipity_check_rewrite($default) {\n    global $serendipity;\n\n    if (IS_installed == true) {\n        return $default;\n    }\n\n    $serendipity_root = dirname($_SERVER['PHP_SELF']) . '/';\n    $serendipity_core = serendipity_httpCoreDir();\n    $old_htaccess     = @file_get_contents($serendipity_core . '.htaccess');\n    $fp               = @fopen($serendipity_core . '.htaccess', 'w');\n    $serendipity_host = preg_replace('@^([^:]+):?.*$@', '\\1', $_SERVER['HTTP_HOST']);\n\n    if (!$fp) {\n        printf(HTACCESS_ERROR,\n          '<b>chmod go+rwx ' . getcwd() . '/</b>'\n        );\n        return $default;\n    } else {\n        fwrite($fp, 'ErrorDocument 404 ' . addslashes($serendipity_root) . 'index.php');\n        fclose($fp);\n\n        // Do a request on a nonexistant file to see, if our htaccess allows ErrorDocument\n        $sock = @fsockopen($serendipity_host, $_SERVER['SERVER_PORT'], $errorno, $errorstring, 10);\n        $response = '';\n\n        if ($sock) {\n            fputs($sock, \"GET {$_SERVER['PHP_SELF']}nonexistant HTTP/1.0\\r\\n\");\n            fputs($sock, \"Host: $serendipity_host\\r\\n\");\n            fputs($sock, \"User-Agent: Serendipity/{$serendipity['version']}\\r\\n\");\n            fputs($sock, \"Connection: close\\r\\n\\r\\n\");\n\n            while (!feof($sock) && strlen($response) < 4096) {\n                $response .= fgets($sock, 400);\n            }\n            fclose($sock);\n        }\n\n        if (preg_match('@^HTTP/\\d\\.\\d 200@', $response) && preg_match('@X\\-Blog: Serendipity@', $response)) {\n            $default = 'errordocs';\n        } else {\n            $default = 'none';\n        }\n\n        if (!empty($old_htaccess)) {\n            $fp = @fopen($serendipity_core . '.htaccess', 'w');\n            fwrite($fp, $old_htaccess);\n            fclose($fp);\n        } else {\n            @unlink($serendipity_core . '.htaccess');\n        }\n\n        return $default;\n    }\n}\n\n/**\n * Remove old configuration values that are no longer used by Serendipity\n *\n * @access public\n * @return null\n */\nfunction serendipity_removeObsoleteVars() {\nglobal $serendipity;\n\n    $config = serendipity_parseTemplate(S9Y_CONFIG_TEMPLATE);\n    foreach($config as $category) {\n        foreach($category['items'] as $item) {\n            /* Remove trash */\n            if (!serendipity_checkConfigItemFlags($item, 'remove')) {\n                serendipity_remove_config_var($item['var'], 0);\n            }\n        }\n    }\n}\n\n/**\n * Retrieve an FTP-compatible checksum for a file.\n *\n * @access public\n * @param string filename is the path to the file to checksum\n * @param string type forces a particular interpretation of newlines.  Mime\n *    types and strings starting with 'text' will cause newlines to be stripped\n *    before the checksum is calculated (default: null, determine from finfo\n *    and extension)\n * @return string An MD5 checksum of the file, with newlines removed if it's\n *    an ASCII type; or false if the file cannot be read\n */\nfunction serendipity_FTPChecksum($filename, $type = null) {\n    /** Only read the finfo database once */\n    static $debug_exts = array();\n\n    // Must be able to read the file\n    if (!is_readable($filename)) {\n        return false;\n    }\n\n    // Figure out whether it's binary or text by extension\n    if ($type == null) {\n        $parts = pathinfo($filename);\n        $ext = '';\n        // Some PHP versions throw a warning if the index doesn't exist\n        if (isset($parts['extension'])) {\n            $ext = $parts['extension'];\n        }\n        // If they're case-insensitive equal, strcasecmp() returns 0, or\n        // 'false'.  So I use && to find if any of them are 0, in the\n        // most likely fail-fast order.\n        if (strcasecmp($ext, 'php') &&\n            strcasecmp($ext, 'tpl') &&\n            strcasecmp($ext, 'sql') &&\n            strcasecmp($ext, 'js') &&\n            strcasecmp($ext, 'txt') &&\n            strcasecmp($ext, 'htc') &&\n            strcasecmp($ext, 'css') &&\n            strcasecmp($ext, 'dist') &&\n            strcasecmp($ext, 'lib') &&\n            strcasecmp($ext, 'sh') &&\n            strcasecmp($ext, 'html') &&\n            strcasecmp($ext, 'htm') &&\n            !empty($ext)) {\n            if (!in_array($ext, array_keys($debug_exts))) {\n                $debug_exts[$ext] = $filename;\n            }\n            $type = 'bin';\n        } else {\n            $type = 'text';\n        }\n    }\n\n    // Calculate the checksum\n    $md5 = false;\n    if (stristr($type, 'text')) {\n        // This is a text-type file.  We need to remove linefeeds before\n        // calculating a checksum, to account for possible FTP conversions\n        // that are inconvenient, but still valid.  But we don't want to\n        // allow newlines anywhere; just different *kinds* of newlines.\n        $newlines = array(\"#\\r\\n#\", \"#\\r#\", \"#\\n#\");\n        $file = file_get_contents($filename);\n        $file = preg_replace($newlines, ' ', $file);\n        $md5 = md5($file);\n    } else {\n        // Just get its md5sum\n        $md5 = md5_file($filename);\n    }\n\n    return $md5;\n}\n\n/**\n * Validate checksums for all required files.\n *\n * @return A list of all files that failed checksum, where keys are the\n *    relative path of the file, and values are the bad checksum\n */\nfunction serendipity_verifyFTPChecksums() {\n    global $serendipity;\n\n    $badsums = array();\n\n    // Load the checksums\n    $f = S9Y_INCLUDE_PATH . 'checksums.inc.php';\n\n    if (!file_exists($f) || filesize($f) < 1) {\n        return $badsums;\n    }\n\n    require_once $f;\n    // Verify that every file in the checksum list was uploaded correctly\n    $basedir = realpath(dirname(__FILE__) . '/../');\n\n    if (!is_array($serendipity['checksums_' . $serendipity['version']])) {\n        return $badsums;\n    }\n\n    foreach ($serendipity['checksums_' . $serendipity['version']] as $prel => $sum) {\n        $path = $basedir . '/' . $prel;\n        // Don't take checksums of directories\n        if (is_dir($path)) {\n            // Weird that it's even here.\n            continue;\n        }\n\n        // Can't checksum unreadable or nonexistent files\n        if (!is_readable($path)) {\n            $badsums[$prel] = 'missing';\n            continue;\n        }\n\n        // Validate checksum\n        $calcsum = serendipity_FTPChecksum($path);\n        if ($sum != $calcsum) {\n            $badsums[$prel] = $calcsum;\n            continue;\n        }\n    }\n\n    return $badsums;\n}\n\n\n/**\n * Check https://raw.github.com/s9y/Serendipity/master/docs/RELEASE for the newest available version\n *\n * If the file is not fetch- or parseable (behind a proxy, malformed by Garvin), this will return -1\n * */\nfunction serendipity_getCurrentVersion() {\n    global $serendipity;\n\n    if ($serendipity['updateCheck'] != \"stable\" && $serendipity['updateCheck'] != \"beta\") {\n        return -1;\n    }\n\n    // Perform update check once a day. We use a suffix of the configured channel, so when\n    // the user switches channels, it has its own timer.\n    if ($serendipity['last_update_check_' . $serendipity['updateCheck']] >= (time()-86400)) {\n        // Last update was performed less than a day ago. Return last result.\n        return $serendipity['last_update_version_' . $serendipity['updateCheck']];\n    }\n\n    serendipity_set_config_var('last_update_check_' . $serendipity['updateCheck'], time());\n    $updateURL = 'https://raw.githubusercontent.com/s9y/Serendipity/master/docs/RELEASE';\n    $context   = stream_context_create(array('http' => array('timeout' => 5.0)));\n    $file      = @file_get_contents($updateURL, false, $context);\n\n    if (!$file) {\n        if (function_exists('curl_init')) {\n            $ch = curl_init($updateURL);\n            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n            curl_setopt($ch, CURLOPT_TIMEOUT, \"5\");\n            $file = curl_exec($ch);\n            curl_close($ch);\n        }\n    }\n\n    if ($file) {\n        if ($serendipity['updateCheck'] == \"stable\") {\n            if (preg_match('/^stable:(.+)\\b/m', $file, $match)) {\n                serendipity_set_config_var('last_update_version_' . $serendipity['updateCheck'], $match[1]);\n                return $match[1];\n            }\n        } else {\n            if (preg_match('/^beta:(.+)\\b/m', $file, $match)) {\n                serendipity_set_config_var('last_update_version_' . $serendipity['updateCheck'], $match[1]);\n                return $match[1];\n            }\n        }\n    }\n\n    return -1;\n}\n\n/* vim: set sts=4 ts=4 sw=4 expandtab : */\n"], "filenames": ["docs/NEWS", "include/functions_installer.inc.php"], "buggy_code_start_loc": [5, 632], "buggy_code_end_loc": [5, 633], "fixing_code_start_loc": [6, 632], "fixing_code_end_loc": [9, 633], "type": "CWE-284", "message": "include/functions_installer.inc.php in Serendipity through 2.0.5 is vulnerable to File Inclusion and a possible Code Execution attack during a first-time installation because it fails to sanitize the dbType POST parameter before adding it to an include() call in the bundled-libs/serendipity_generateFTPChecksums.php file.", "other": {"cve": {"id": "CVE-2016-10082", "sourceIdentifier": "cve@mitre.org", "published": "2016-12-30T07:59:00.143", "lastModified": "2017-01-03T19:32:50.377", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "include/functions_installer.inc.php in Serendipity through 2.0.5 is vulnerable to File Inclusion and a possible Code Execution attack during a first-time installation because it fails to sanitize the dbType POST parameter before adding it to an include() call in the bundled-libs/serendipity_generateFTPChecksums.php file."}, {"lang": "es", "value": "include/functions_installer.inc.php en Serendipity hasta la versi\u00f3n 2.0.5 es vulnerable a ataques File Inclusion y posiblemente Code Execution durante una primera instalaci\u00f3n porque falla en desinfectar el par\u00e1metro dbType POST antes de a\u00f1adirlo a una llamada include() en el archivo bundled-libs/serendipity_generateFTPChecksums.php."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-284"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:s9y:serendipity:*:*:*:*:*:*:*:*", "versionEndIncluding": "2.0.5", "matchCriteriaId": "A8C50710-D1C1-4D98-8905-2331437E2C29"}]}]}], "references": [{"url": "http://www.securityfocus.com/bid/95165", "source": "cve@mitre.org", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://github.com/s9y/Serendipity/commit/bba6a840f4d53cbaf62971a3078a98c8ddf92b85", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://github.com/s9y/Serendipity/issues/433", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/s9y/Serendipity/commit/bba6a840f4d53cbaf62971a3078a98c8ddf92b85"}}