{"buggy_code": ["/* IRC extension for TCP NAT alteration.\n *\n * (C) 2000-2001 by Harald Welte <laforge@gnumonks.org>\n * (C) 2004 Rusty Russell <rusty@rustcorp.com.au> IBM Corporation\n * based on a copy of RR's ip_nat_ftp.c\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version\n * 2 of the License, or (at your option) any later version.\n */\n\n#include <linux/module.h>\n#include <linux/moduleparam.h>\n#include <linux/tcp.h>\n#include <linux/kernel.h>\n\n#include <net/netfilter/nf_nat.h>\n#include <net/netfilter/nf_nat_helper.h>\n#include <net/netfilter/nf_conntrack_helper.h>\n#include <net/netfilter/nf_conntrack_expect.h>\n#include <linux/netfilter/nf_conntrack_irc.h>\n\nMODULE_AUTHOR(\"Harald Welte <laforge@gnumonks.org>\");\nMODULE_DESCRIPTION(\"IRC (DCC) NAT helper\");\nMODULE_LICENSE(\"GPL\");\nMODULE_ALIAS(\"ip_nat_irc\");\n\nstatic unsigned int help(struct sk_buff *skb,\n\t\t\t enum ip_conntrack_info ctinfo,\n\t\t\t unsigned int protoff,\n\t\t\t unsigned int matchoff,\n\t\t\t unsigned int matchlen,\n\t\t\t struct nf_conntrack_expect *exp)\n{\n\tchar buffer[sizeof(\"4294967296 65635\")];\n\tu_int16_t port;\n\tunsigned int ret;\n\n\t/* Reply comes from server. */\n\texp->saved_proto.tcp.port = exp->tuple.dst.u.tcp.port;\n\texp->dir = IP_CT_DIR_REPLY;\n\texp->expectfn = nf_nat_follow_master;\n\n\t/* Try to get same port: if not, try to change it. */\n\tfor (port = ntohs(exp->saved_proto.tcp.port); port != 0; port++) {\n\t\tint ret;\n\n\t\texp->tuple.dst.u.tcp.port = htons(port);\n\t\tret = nf_ct_expect_related(exp);\n\t\tif (ret == 0)\n\t\t\tbreak;\n\t\telse if (ret != -EBUSY) {\n\t\t\tport = 0;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (port == 0) {\n\t\tnf_ct_helper_log(skb, exp->master, \"all ports in use\");\n\t\treturn NF_DROP;\n\t}\n\n\tret = nf_nat_mangle_tcp_packet(skb, exp->master, ctinfo,\n\t\t\t\t       protoff, matchoff, matchlen, buffer,\n\t\t\t\t       strlen(buffer));\n\tif (ret != NF_ACCEPT) {\n\t\tnf_ct_helper_log(skb, exp->master, \"cannot mangle packet\");\n\t\tnf_ct_unexpect_related(exp);\n\t}\n\treturn ret;\n}\n\nstatic void __exit nf_nat_irc_fini(void)\n{\n\tRCU_INIT_POINTER(nf_nat_irc_hook, NULL);\n\tsynchronize_rcu();\n}\n\nstatic int __init nf_nat_irc_init(void)\n{\n\tBUG_ON(nf_nat_irc_hook != NULL);\n\tRCU_INIT_POINTER(nf_nat_irc_hook, help);\n\treturn 0;\n}\n\n/* Prior to 2.6.11, we had a ports param.  No longer, but don't break users. */\nstatic int warn_set(const char *val, struct kernel_param *kp)\n{\n\tprintk(KERN_INFO KBUILD_MODNAME\n\t       \": kernel >= 2.6.10 only uses 'ports' for conntrack modules\\n\");\n\treturn 0;\n}\nmodule_param_call(ports, warn_set, NULL, NULL, 0);\n\nmodule_init(nf_nat_irc_init);\nmodule_exit(nf_nat_irc_fini);\n"], "fixing_code": ["/* IRC extension for TCP NAT alteration.\n *\n * (C) 2000-2001 by Harald Welte <laforge@gnumonks.org>\n * (C) 2004 Rusty Russell <rusty@rustcorp.com.au> IBM Corporation\n * based on a copy of RR's ip_nat_ftp.c\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version\n * 2 of the License, or (at your option) any later version.\n */\n\n#include <linux/module.h>\n#include <linux/moduleparam.h>\n#include <linux/tcp.h>\n#include <linux/kernel.h>\n\n#include <net/netfilter/nf_nat.h>\n#include <net/netfilter/nf_nat_helper.h>\n#include <net/netfilter/nf_conntrack_helper.h>\n#include <net/netfilter/nf_conntrack_expect.h>\n#include <linux/netfilter/nf_conntrack_irc.h>\n\nMODULE_AUTHOR(\"Harald Welte <laforge@gnumonks.org>\");\nMODULE_DESCRIPTION(\"IRC (DCC) NAT helper\");\nMODULE_LICENSE(\"GPL\");\nMODULE_ALIAS(\"ip_nat_irc\");\n\nstatic unsigned int help(struct sk_buff *skb,\n\t\t\t enum ip_conntrack_info ctinfo,\n\t\t\t unsigned int protoff,\n\t\t\t unsigned int matchoff,\n\t\t\t unsigned int matchlen,\n\t\t\t struct nf_conntrack_expect *exp)\n{\n\tchar buffer[sizeof(\"4294967296 65635\")];\n\tstruct nf_conn *ct = exp->master;\n\tunion nf_inet_addr newaddr;\n\tu_int16_t port;\n\tunsigned int ret;\n\n\t/* Reply comes from server. */\n\tnewaddr = ct->tuplehash[IP_CT_DIR_REPLY].tuple.dst.u3;\n\n\texp->saved_proto.tcp.port = exp->tuple.dst.u.tcp.port;\n\texp->dir = IP_CT_DIR_REPLY;\n\texp->expectfn = nf_nat_follow_master;\n\n\t/* Try to get same port: if not, try to change it. */\n\tfor (port = ntohs(exp->saved_proto.tcp.port); port != 0; port++) {\n\t\tint ret;\n\n\t\texp->tuple.dst.u.tcp.port = htons(port);\n\t\tret = nf_ct_expect_related(exp);\n\t\tif (ret == 0)\n\t\t\tbreak;\n\t\telse if (ret != -EBUSY) {\n\t\t\tport = 0;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (port == 0) {\n\t\tnf_ct_helper_log(skb, ct, \"all ports in use\");\n\t\treturn NF_DROP;\n\t}\n\n\t/* strlen(\"\\1DCC CHAT chat AAAAAAAA P\\1\\n\")=27\n\t * strlen(\"\\1DCC SCHAT chat AAAAAAAA P\\1\\n\")=28\n\t * strlen(\"\\1DCC SEND F AAAAAAAA P S\\1\\n\")=26\n\t * strlen(\"\\1DCC MOVE F AAAAAAAA P S\\1\\n\")=26\n\t * strlen(\"\\1DCC TSEND F AAAAAAAA P S\\1\\n\")=27\n\t *\n\t * AAAAAAAAA: bound addr (1.0.0.0==16777216, min 8 digits,\n\t *                        255.255.255.255==4294967296, 10 digits)\n\t * P:         bound port (min 1 d, max 5d (65635))\n\t * F:         filename   (min 1 d )\n\t * S:         size       (min 1 d )\n\t * 0x01, \\n:  terminators\n\t */\n\t/* AAA = \"us\", ie. where server normally talks to. */\n\tsnprintf(buffer, sizeof(buffer), \"%u %u\", ntohl(newaddr.ip), port);\n\tpr_debug(\"nf_nat_irc: inserting '%s' == %pI4, port %u\\n\",\n\t\t buffer, &newaddr.ip, port);\n\n\tret = nf_nat_mangle_tcp_packet(skb, ct, ctinfo, protoff, matchoff,\n\t\t\t\t       matchlen, buffer, strlen(buffer));\n\tif (ret != NF_ACCEPT) {\n\t\tnf_ct_helper_log(skb, ct, \"cannot mangle packet\");\n\t\tnf_ct_unexpect_related(exp);\n\t}\n\n\treturn ret;\n}\n\nstatic void __exit nf_nat_irc_fini(void)\n{\n\tRCU_INIT_POINTER(nf_nat_irc_hook, NULL);\n\tsynchronize_rcu();\n}\n\nstatic int __init nf_nat_irc_init(void)\n{\n\tBUG_ON(nf_nat_irc_hook != NULL);\n\tRCU_INIT_POINTER(nf_nat_irc_hook, help);\n\treturn 0;\n}\n\n/* Prior to 2.6.11, we had a ports param.  No longer, but don't break users. */\nstatic int warn_set(const char *val, struct kernel_param *kp)\n{\n\tprintk(KERN_INFO KBUILD_MODNAME\n\t       \": kernel >= 2.6.10 only uses 'ports' for conntrack modules\\n\");\n\treturn 0;\n}\nmodule_param_call(ports, warn_set, NULL, NULL, 0);\n\nmodule_init(nf_nat_irc_init);\nmodule_exit(nf_nat_irc_fini);\n"], "filenames": ["net/netfilter/nf_nat_irc.c"], "buggy_code_start_loc": [36], "buggy_code_end_loc": [70], "fixing_code_start_loc": [37], "fixing_code_end_loc": [93], "type": "CWE-200", "message": "The help function in net/netfilter/nf_nat_irc.c in the Linux kernel before 3.12.8 allows remote attackers to obtain sensitive information from kernel memory by establishing an IRC DCC session in which incorrect packet data is transmitted during use of the NAT mangle feature.", "other": {"cve": {"id": "CVE-2014-1690", "sourceIdentifier": "secalert@redhat.com", "published": "2014-02-28T06:18:54.557", "lastModified": "2023-02-13T00:38:14.540", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "The help function in net/netfilter/nf_nat_irc.c in the Linux kernel before 3.12.8 allows remote attackers to obtain sensitive information from kernel memory by establishing an IRC DCC session in which incorrect packet data is transmitted during use of the NAT mangle feature."}, {"lang": "es", "value": "La funci\u00f3n de ayuda en net/netfilter/nf_nat_irc.c en el kernel de Linux anterior a 3.12.8 permite a atacantes remotos obtener informaci\u00f3n sensible de la memoria del kernel mediante el establecimiento de una sesi\u00f3n IRC DCC en la cual datos de paquetes incorrectos son transmitidos durante el uso de la funcionalidad NAT mangle."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.6}, "baseSeverity": "LOW", "exploitabilityScore": 4.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-200"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.12.8", "matchCriteriaId": "6B3D58B5-3A44-4506-B657-3BC3C83BE522"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:12.04:*:*:*:esm:*:*:*", "matchCriteriaId": "8D305F7A-D159-4716-AB26-5E38BB5CD991"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:13.10:*:*:*:*:*:*:*", "matchCriteriaId": "7F61F047-129C-41A6-8A27-FFCBB8563E91"}]}]}], "references": [{"url": "http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git%3Ba=commit%3Bh=2690d97ade05c5325cbf7c72b94b90d265659886", "source": "secalert@redhat.com"}, {"url": "http://www.kernel.org/pub/linux/kernel/v3.x/ChangeLog-3.12.8", "source": "secalert@redhat.com", "tags": ["Mailing List", "Patch", "Vendor Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2014/01/28/3", "source": "secalert@redhat.com", "tags": ["Mailing List", "Patch", "Third Party Advisory"]}, {"url": "http://www.ubuntu.com/usn/USN-2137-1", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://www.ubuntu.com/usn/USN-2140-1", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://www.ubuntu.com/usn/USN-2158-1", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1058748", "source": "secalert@redhat.com", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://github.com/torvalds/linux/commit/2690d97ade05c5325cbf7c72b94b90d265659886", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/torvalds/linux/commit/2690d97ade05c5325cbf7c72b94b90d265659886"}}