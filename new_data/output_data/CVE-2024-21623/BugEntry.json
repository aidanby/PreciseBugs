{"buggy_code": ["---\nname: Analysis - SonarCloud\n\non:\n  pull_request_target:\n    types: [opened, synchronize, reopened]\n  push:\n    branches:\n      - main\n\nenv:\n  VCPKG_BUILD_TYPE: release\n  CMAKE_BUILD_PARALLEL_LEVEL: 2\n  MAKEFLAGS: '-j 2'\n  NUMBER_OF_PROCESSORS: 2\n\njobs:\n  sonarcloud:\n    name: SonarCloud\n    runs-on: ubuntu-22.04\n\n    steps:\n      - uses: actions/checkout@main\n        if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}\n        with:\n          fetch-depth: 0\n          ref: ${{github.event.pull_request.head.ref}}\n          repository: ${{github.event.pull_request.head.repo.full_name}}\n\n      - uses: actions/checkout@main\n        if: ${{ github.event_name == 'push' }}\n        with:\n          fetch-depth: 0\n\n      - name: Install Linux Dependencies\n        run: >\n          sudo apt-get update && sudo apt-get install ccache libglew-dev libx11-dev linux-headers-$(uname -r)\n\n      - name: Switch to gcc-11\n        run: |\n          sudo apt install gcc-11 g++-11\n          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100 --slave /usr/bin/g++ g++ /usr/bin/g++-11 --slave /usr/bin/gcov gcov /usr/bin/gcov-11\n          sudo update-alternatives --set gcc /usr/bin/gcc-11\n\n      - name: CCache\n        id: ccache\n        uses: actions/cache@main\n        with:\n          path: $HOME/.ccache\n          key: ccache-${{ runner.os }}-${{ hashFiles('**/src') }}\n          restore-keys: |\n            ccache-${{ runner.os}}-\n\n      - name: Sonar cache\n        uses: actions/cache@main\n        with:\n          path: $HOME/.cfamily\n          key: sonar-${{ runner.os}}-${{ hashFiles('**/src') }}\n          restore-keys: |\n            sonar-${{ runner.os}}-\n\n      - name: Cache SonarCloud packages\n        uses: actions/cache@main\n        with:\n          path: $HOME/.sonar/cache\n          key: sonar-${{ runner.os}}-${{ hashFiles('**/src') }}\n          restore-keys: |\n            sonar-${{ runner.os}}-\n\n      - name: Restore artifacts and install vcpkg\n        id: vcpkg-step\n        run: |\n          vcpkgCommitId=$(grep '.builtin-baseline' vcpkg.json | awk -F: '{print $2}' | tr -d ',\" ')\n          echo \"vcpkg commit ID: $vcpkgCommitId\"\n          echo \"name=vcpkgGitCommitId::$vcpkgCommitId\" >> $env:GITHUB_OUTPUT\n\n      - name: Get vcpkg commit id from vcpkg.json\n        uses: lukka/run-vcpkg@main\n        with:\n          vcpkgGitURL: \"https://github.com/microsoft/vcpkg.git\"\n          vcpkgGitCommitId: ${{ steps.vcpkg-step.outputs.vcpkgGitCommitId }}\n\n      - name: Install sonar-scanner\n        uses: SonarSource/sonarcloud-github-c-cpp@v1\n\n      - name: Generate compilation database\n        run: |\n          mkdir -p build\n          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=\"$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake\" -DOPTIONS_ENABLE_CCACHE=ON -DSPEED_UP_BUILD_UNITY=OFF -S . -B build\n\n      - name: Run PR sonar-scanner\n        if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n        run: |\n          sonar-scanner \\\n            --define sonar.cfamily.threads=\"${{ env.NUMBER_OF_PROCESSORS  }}\" \\\n            --define sonar.cfamily.cache.enabled=true \\\n            --define sonar.cfamily.cache.path=\"$HOME/.cfamily\" \\\n            --define sonar.cfamily.compile-commands=build/compile_commands.json \\\n            --define sonar.pullrequest.key=${{ github.event.pull_request.number }} \\\n            --define sonar.pullrequest.branch=${{ github.event.pull_request.head.ref }} \\\n            --define sonar.pullrequest.base=${{ github.event.pull_request.base_ref }}\n\n      - name: Run sonar-scanner\n        if: ${{ github.event_name == 'push' }}\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n        run: |\n          sonar-scanner \\\n            --define sonar.cfamily.threads=\"${{ env.NUMBER_OF_PROCESSORS  }}\" \\\n            --define sonar.cfamily.cache.enabled=true \\\n            --define sonar.cfamily.cache.path=\"$HOME/.cfamily\" \\\n            --define sonar.cfamily.compile-commands=build/compile_commands.json\n"], "fixing_code": ["---\nname: Analysis - SonarCloud\n\non:\n  pull_request_target:\n    types: [opened, synchronize, reopened]\n  push:\n    branches:\n      - main\n\nenv:\n  VCPKG_BUILD_TYPE: release\n  CMAKE_BUILD_PARALLEL_LEVEL: 2\n  MAKEFLAGS: '-j 2'\n  NUMBER_OF_PROCESSORS: 2\n\njobs:\n  sonarcloud:\n    name: SonarCloud\n    runs-on: ubuntu-22.04\n\n    steps:\n      - uses: actions/checkout@main\n        if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}\n        with:\n          fetch-depth: 0\n          ref: ${{github.event.pull_request.head.ref}}\n          repository: ${{github.event.pull_request.head.repo.full_name}}\n\n      - uses: actions/checkout@main\n        if: ${{ github.event_name == 'push' }}\n        with:\n          fetch-depth: 0\n\n      - name: Install Linux Dependencies\n        run: >\n          sudo apt-get update && sudo apt-get install ccache libglew-dev libx11-dev linux-headers-$(uname -r)\n\n      - name: Switch to gcc-11\n        run: |\n          sudo apt install gcc-11 g++-11\n          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100 --slave /usr/bin/g++ g++ /usr/bin/g++-11 --slave /usr/bin/gcov gcov /usr/bin/gcov-11\n          sudo update-alternatives --set gcc /usr/bin/gcc-11\n\n      - name: CCache\n        id: ccache\n        uses: actions/cache@main\n        with:\n          path: $HOME/.ccache\n          key: ccache-${{ runner.os }}-${{ hashFiles('**/src') }}\n          restore-keys: |\n            ccache-${{ runner.os}}-\n\n      - name: Sonar cache\n        uses: actions/cache@main\n        with:\n          path: $HOME/.cfamily\n          key: sonar-${{ runner.os}}-${{ hashFiles('**/src') }}\n          restore-keys: |\n            sonar-${{ runner.os}}-\n\n      - name: Cache SonarCloud packages\n        uses: actions/cache@main\n        with:\n          path: $HOME/.sonar/cache\n          key: sonar-${{ runner.os}}-${{ hashFiles('**/src') }}\n          restore-keys: |\n            sonar-${{ runner.os}}-\n\n      - name: Restore artifacts and install vcpkg\n        id: vcpkg-step\n        run: |\n          vcpkgCommitId=$(grep '.builtin-baseline' vcpkg.json | awk -F: '{print $2}' | tr -d ',\" ')\n          echo \"vcpkg commit ID: $vcpkgCommitId\"\n          echo \"name=vcpkgGitCommitId::$vcpkgCommitId\" >> $env:GITHUB_OUTPUT\n\n      - name: Get vcpkg commit id from vcpkg.json\n        uses: lukka/run-vcpkg@main\n        with:\n          vcpkgGitURL: \"https://github.com/microsoft/vcpkg.git\"\n          vcpkgGitCommitId: ${{ steps.vcpkg-step.outputs.vcpkgGitCommitId }}\n\n      - name: Install sonar-scanner\n        uses: SonarSource/sonarcloud-github-c-cpp@v1\n\n      - name: Generate compilation database\n        run: |\n          mkdir -p build\n          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=\"$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake\" -DOPTIONS_ENABLE_CCACHE=ON -DSPEED_UP_BUILD_UNITY=OFF -S . -B build\n\n      - name: Run PR sonar-scanner\n        if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n          BRANCH: ${{ github.event.pull_request.head.ref }}\n        run: |\n          sonar-scanner \\\n            --define sonar.cfamily.threads=\"${{ env.NUMBER_OF_PROCESSORS  }}\" \\\n            --define sonar.cfamily.cache.enabled=true \\\n            --define sonar.cfamily.cache.path=\"$HOME/.cfamily\" \\\n            --define sonar.cfamily.compile-commands=build/compile_commands.json \\\n            --define sonar.pullrequest.key=${{ github.event.pull_request.number }} \\\n            --define sonar.pullrequest.branch=$BRANCH \\\n            --define sonar.pullrequest.base=${{ github.event.pull_request.base_ref }}\n\n      - name: Run sonar-scanner\n        if: ${{ github.event_name == 'push' }}\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n        run: |\n          sonar-scanner \\\n            --define sonar.cfamily.threads=\"${{ env.NUMBER_OF_PROCESSORS  }}\" \\\n            --define sonar.cfamily.cache.enabled=true \\\n            --define sonar.cfamily.cache.path=\"$HOME/.cfamily\" \\\n            --define sonar.cfamily.compile-commands=build/compile_commands.json\n"], "filenames": [".github/workflows/analysis-sonarcloud.yml"], "buggy_code_start_loc": [95], "buggy_code_end_loc": [104], "fixing_code_start_loc": [96], "fixing_code_end_loc": [105], "type": "CWE-74", "message": "OTCLient is an alternative tibia client for otserv. Prior to commit db560de0b56476c87a2f967466407939196dd254, the /mehah/otclient \"`Analysis - SonarCloud`\" workflow is vulnerable to an expression injection in Actions, allowing an attacker to run commands remotely on the runner, leak secrets, and alter the repository using this workflow. Commit db560de0b56476c87a2f967466407939196dd254 contains a fix for this issue.", "other": {"cve": {"id": "CVE-2024-21623", "sourceIdentifier": "security-advisories@github.com", "published": "2024-01-02T21:15:10.250", "lastModified": "2024-01-08T19:29:32.277", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "OTCLient is an alternative tibia client for otserv. Prior to commit db560de0b56476c87a2f967466407939196dd254, the /mehah/otclient \"`Analysis - SonarCloud`\" workflow is vulnerable to an expression injection in Actions, allowing an attacker to run commands remotely on the runner, leak secrets, and alter the repository using this workflow. Commit db560de0b56476c87a2f967466407939196dd254 contains a fix for this issue."}, {"lang": "es", "value": "OTCLient es un cliente de tibia alternativo para otserv. Antes del commit db560de0b56476c87a2f967466407939196dd254, el workflow /mehah/otclient \"`Analysis - SonarCloud`\" es vulnerable a una inyecci\u00f3n de expresi\u00f3n en Actions, lo que permite a un atacante ejecutar comandos de forma remota en el ejecutor, filtrar secretos y alterar el repositorio utilizando este workflow. El commit db560de0b56476c87a2f967466407939196dd254 contiene una soluci\u00f3n para este problema."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-74"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:mehah:otclient:*:*:*:*:*:*:*:*", "versionEndExcluding": "2023-12-30", "matchCriteriaId": "60A3865E-2453-4A5A-9685-34494CC8BCD1"}]}]}], "references": [{"url": "https://github.com/mehah/otclient/blob/72744edc3b9913b920e0fd12e929604f682fda75/.github/workflows/analysis-sonarcloud.yml#L91-L104", "source": "security-advisories@github.com", "tags": ["Product"]}, {"url": "https://github.com/mehah/otclient/commit/db560de0b56476c87a2f967466407939196dd254", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/mehah/otclient/security/advisories/GHSA-q6gr-wc79-v589", "source": "security-advisories@github.com", "tags": ["Exploit", "Vendor Advisory"]}, {"url": "https://securitylab.github.com/research/github-actions-preventing-pwn-requests/", "source": "security-advisories@github.com", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://securitylab.github.com/research/github-actions-untrusted-input/", "source": "security-advisories@github.com", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/mehah/otclient/commit/db560de0b56476c87a2f967466407939196dd254"}}