{"buggy_code": ["<?php\n\n/**\n * forms/eye_mag/js/eye_base.php\n *\n * JS Functions for eye_mag form(s), built with php features for run-time options and translations\n *\n * @package   OpenEMR\n * @link      https://www.open-emr.org\n * @author    Ray Magauran <rmagauran@gmail.com>\n * @copyright Copyright (c) 2016- Raymond Magauran <rmagauran@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\n    require_once(\"../../../globals.php\");\n    require_once(\"$srcdir/api.inc.php\");\n    require_once(\"$srcdir/forms.inc.php\");\n    require_once(\"$srcdir/patient.inc.php\");\n\n    $providerID = $_REQUEST['providerID'];\n\n?>\nvar prior_field;\nvar prior_text;\nvar response = [];\nvar update_chart;\nvar obj= [];\nvar IMP_order = [];\nvar CODING_items=[];\nvar CPT_92060='';\nvar IMP_target =\"0\";\nvar detail_reached_exam ='0';\nvar detail_reached_HPI ='0';\nvar chronic_reached_HPI ='0';\n    //Coding Engine Defaults\nvar Code_group=\"Eyes\";//options are Eyes - anything else and Coding Engine prefers E&M Codes\nvar digit_2=\"2\"; //Eye Code\nvar digit_4=\"1\"; //Established\nvar digit_5=\"4\"; //Level 4\nvar visit_code;\nvar config_byday;\nvar $root = $('html, body');\nvar scroll='';\nvar visit_modifier=[];\nvar visit_justifier=[];\nif (typeof Code_new_est === 'undefined') {\n  var Code_new_est = 'New';\n}\nvar TESTS_built='';\nvar doc=[];\n/*\n * Functions to add a quick pick selection to the correct fields on the form.\n */\nfunction fill_QP_2fields(PEZONE, ODOSOU, LOCATION_text, selection, fill_action, Code_to_process) {\n    var prefix = document.getElementById(PEZONE+'_prefix').value;\n    if (prefix > '' && prefix !='off') {prefix = prefix + \" \";}\n    if ((prefix =='off')||(LOCATION_text =='')) { prefix=''; }\n    var saved_prefix = prefix;\n    if (ODOSOU ==\"OU\") {\n        fill_QP_field(PEZONE, \"OD\", LOCATION_text, selection, fill_action, Code_to_process);\n        fill_QP_field(PEZONE, \"OS\", LOCATION_text, selection, fill_action, Code_to_process,saved_prefix);\n    } else if  (ODOSOU ==\"B\") {\n        fill_QP_field(PEZONE, \"R\", LOCATION_text, selection, fill_action, Code_to_process);\n        fill_QP_field(PEZONE, \"L\", LOCATION_text, selection, fill_action, Code_to_process,saved_prefix);\n    }\n}\nfunction fill_QP_field(PEZONE, ODOSOU, LOCATION_text, selection, fill_action, Code_to_process,saved_prefix) {\n    if (ODOSOU > '') {\n        var FIELDID =  ODOSOU  + LOCATION_text;\n    } else {\n        var FIELDID =  document.getElementById(PEZONE+'_'+ODOSOU).value  + LOCATION_text;\n    }\n    var bgcolor = $(\"#\" +FIELDID).css(\"background-color\");\n\n    if (saved_prefix) {\n        var prefix = saved_prefix;\n    } else {\n        var prefix = document.getElementById(PEZONE+'_prefix').value;\n    }\n\n    var Fvalue = document.getElementById(FIELDID).value;\n    if (prefix > '' && prefix !='off') {prefix = prefix + \" \";}\n    if (prefix =='off') { prefix=''; }\n    if (fill_action ==\"REPLACE\") {\n        $(\"#\" +FIELDID).val(prefix +selection);\n        $(\"#\" +FIELDID).css(\"background-color\",\"#F0F8FF\");\n    } else if (fill_action ==\"APPEND\") {\n        $(\"#\" +FIELDID).val(Fvalue+selection).css(\"background-color\",\"#F0F8FF\");\n    } else {\n        if (($(\"#\" +FIELDID).css(\"background-color\")==\"rgb(245, 245, 220)\") || (Fvalue ==''))  {\n                //rgb(245, 245, 220) is beige - the field is untouched\n            $(\"#\" +FIELDID).val(prefix+selection).css(\"background-color\",\"#F0F8FF\");\n        } else if (Fvalue.match(/x$/)) {\n            $(\"#\" +FIELDID).val(Fvalue+selection).css(\"background-color\",\"#F0F8FF\");\n        } else {\n            if (Fvalue >'') prefix = \", \"+prefix;\n            $(\"#\" +FIELDID).val(Fvalue + prefix +selection).css(\"background-color\",\"#F0F8FF\");\n        }\n    }\n    submit_form(FIELDID);\n    $('#'+PEZONE+'_prefix').val('off').trigger('change');\n}\n\n/*\n * This is the core function of the form.\n * It submits the data in the background via ajax.\n * It is the reason we don't use a submit button.\n * It is called often, perhaps too often for some installs because it uses bandwidth.\n * It needs to be keenly looked at by developers as it will affect scalability.\n * It returns either \"Code 400\" or positive hits from the clinical data passed through the Coding engine.\n * It ensures ownership of the form or provides background updates to READ-ONLY instances of the form.\n * It doesn't unlock a form to change ownership/provide write privileges.  This is done via the unlock() function.\n */\nfunction submit_form(action) {\n    var url = \"../../forms/eye_mag/save.php?sub=1&mode=update&id=\" + $(\"#form_id\").val();\n    if ($(\"#COPY_SECTION\").value == \"READONLY\") return;\n    formData = $(\"form#eye_mag\").serialize();\n    if (formData =='') return;\n    $(\"#menustate\").val('0');\n    top.restoreSession();\n    $.ajax({\n           type   : 'POST',\n           url    : url,\n           data   : formData //,           dataType: \"json\"\n           }).done(function(result) {\n                   if (result == 'Code 400') {\n                   code_400(); //Not the owner: read-only mode or take ownership\n                   } else {\n                       // ACTIVE chart.\n                       // Coding engine returns any positive Clinical findings.\n                       //List these findings in the IMP_PLAN Builder\n                       if (action !='1') {populate_form(result);}\n                   }\n                   });\n};\n\n/*\n *  This function alerts the user that they have lost write privileges to another user.\n *  The form is locked (fields disabled) and they enter the READ-ONLY mode.\n *  In READ-ONLY mode the form is refreshed every 15 seconds showing changes made by the user with write privileges.\n */\nfunction code_400() {\n        //User lost ownership.  Just watching now...\n        //now we should get every variable and update the form, every 15 seconds...\n    $(\"#active_flag\").html(\" READ-ONLY \");\n    toggle_active_flags(\"off\");\n    alert(\"Another user has taken control of this form.\\rEntering READ-ONLY mode.\");\n    update_READONLY();\n    this_form_id = $(\"#form_id\").val();\n    $(\"#COPY_SECTION\").val(\"READONLY\");\n    update_chart = setInterval(function() {\n                               if ($(\"#chart_status\").value == \"on\") { clearInterval(update_chart); }\n                               update_READONLY();\n                               }, 15000);\n}\n\n/**\n *  Convert the DB datetime values into date objects in JS\n *\n * \"You should parse them to get a Date object, for that format I always use the following function:\n * http://stackoverflow.com/questions/2627650/why-javascript-gettime-is-not-a-function\"\n *\n */\nfunction parseDate(input) {\n    var parts = input.match(/(\\d+)/g);\n        // new Date(year, month [, date [, hours[, minutes[, seconds[, ms]]]]])\n    return new Date(parts[0], parts[1]-1, parts[2]); // months are 0-based\n}\n/*\n *  Function to check locked state\n */\nfunction check_lock(modify) {\n    var locked = $(\"#LOCKED\").val();\n    var locked_by = $(\"#LOCKEDBY\").val();\n    if ($(\"#LOCKEDDATE\").val() > '') {\n        var locked_date = parseDate($(\"#LOCKEDDATE\").val());\n    } else{\n        var locked_date= new Date('2000-01-01');\n    }\n    var uniqueID = $('#uniqueID').val();\n\n    var url = \"../../forms/eye_mag/save.php?mode=update&id=\" + $(\"#form_id\").val();\n    clearInterval(update_chart);\n        //if the form was locked > 1 hour ago, tag we are it - we should auto-get ownership\n        //if not we have to physically take it.\n    var now =new Date();\n    now_time = now.getTime();\n    var interval = locked_date.setTime(locked_date.getTime() + (60*60*1000));//locked timestamp + 1 hour\n    if (modify=='1') {\n        if ($(\"#chart_status\").val() == \"on\") {\n            unlock();\n            toggle_active_flags(\"off\");\n            update_chart = setInterval(function() {\n                                       if ($(\"#chart_status\").val() == \"on\") { clearInterval(update_chart);}\n                                       update_READONLY();\n                                       }, 15000);\n            if ($(\"#chart_status\").value == \"on\") { clearInterval(update_chart); }\n        } else {\n            top.restoreSession();\n            $.ajax({\n                   type   : 'POST',\n                   url    : url,\n                   data   : {\n                   'acquire_lock'  : '1',\n                   'uniqueID'      : uniqueID,\n                   'form_id'       : $(\"#form_id\").val(),\n                   'locked_by'     : $(\"#LOCKEDBY\").val()\n                   }\n                   }).done(function(d) {\n                           $(\"#LOCKEDBY\").val(uniqueID);\n                           toggle_active_flags(\"on\");\n                           clearInterval(update_chart);\n                           });\n        }\n    } else if (locked =='1' && (interval < now_time)) { //it was locked more than an hour ago, take ownership quietly\n        top.restoreSession();\n        $.ajax({\n               type   : 'POST',\n               url    : url,\n               data   : {\n                 'acquire_lock'  : '1',\n                 'uniqueID'      : uniqueID, //this user is becoming the new owner\n                 'locked_by'     : locked_by, //this is the old owner\n                 'form_id'       : $(\"#form_id\").val()\n               }\n               }).done(function(d) {\n                       $(\"#LOCKEDBY\").val(uniqueID);\n                       $(\"#LOCKEDDATE\").val(d);\n                       toggle_active_flags(\"on\");\n                       }\n                       );\n    } else if (locked =='1' && locked_by >'' && (uniqueID != locked_by)) {\n            //form is locked by someone else, less than an hour ago...\n        $(\"#active_flag\").html(\" READ-ONLY \");\n        if (confirm('\\tLOCKED by another user:\\t\\n\\tSelect OK to take ownership or\\t\\n\\tCANCEL to enter READ-ONLY mode.\\t')) {\n            top.restoreSession();\n            $.ajax({\n                   type   : 'POST',\n                   url    : url,\n                   data     : {\n                   'acquire_lock'  : '1',\n                   'uniqueID'      : uniqueID, //this user is becoming the new owner\n                   'locked_by'     : locked_by, //this is the old owner\n                   'form_id'       : $(\"#form_id\").val()\n                   }\n                   }).done(function(d) {\n                           $(\"#LOCKEDBY\").val(uniqueID);\n                           toggle_active_flags(\"on\");\n                           }\n                           );\n        } else {\n                //User selected \"Cancel\" -- ie. doesn't want ownership.  Just watching...\n            toggle_active_flags(\"off\");\n            update_chart = setInterval(function() {\n                                       $(\"#COPY_SECTION\").trigger('change');\n                                       if ($(\"#chart_status\").val() == \"on\") { clearInterval(update_chart);}\n                                       update_READONLY();\n                                       }, 15000);\n            if ($(\"#chart_status\").value == \"on\") { clearInterval(update_chart); }\n\n        }\n    }\n}\n/*\n * Function to save a canvas by zone\n */\nfunction submit_canvas(zone) {\n    var id_here = document.getElementById('myCanvas_'+zone);\n    var dataURL = id_here.toDataURL('image/jpeg');\n    top.restoreSession();\n    $.ajax({\n           type: \"POST\",\n           url: \"../../forms/eye_mag/save.php?canvas=\"+zone+\"&id=\"+$(\"#form_id\").val(),\n           data: {\n           imgBase64     : dataURL,  //this contains the canvas + new strokes, the sketch.js foreground\n           'zone'        : zone,\n           'visit_date'  : $(\"#visit_date\").val(),\n           'encounter'   : $(\"#encounter\").val(),\n           'pid'         : $(\"#pid\").val()\n           }\n\n           }).done(function(o) {\n                   });\n}\n/*\n *  Function to update the user's preferences\n */\nfunction update_PREFS() {\n    var checker = $('#PREFS_TOOLTIPS').val();\n    if (checker > '') {\n        var url = \"../../forms/eye_mag/save.php\";\n        var formData = {\n            'AJAX_PREFS'            : \"1\",\n            'PREFS_VA'              : $('#PREFS_VA').val(),\n            'PREFS_W'               : $('#PREFS_W').val(),\n            'PREFS_MR'              : $('#PREFS_MR').val(),\n            'PREFS_W_width'         : $('#PREFS_W_width').val(),\n            'PREFS_MR_width'        : $('#PREFS_MR_width').val(),\n            'PREFS_CR'              : $('#PREFS_CR').val(),\n            'PREFS_CTL'             : $('#PREFS_CTL').val(),\n            'PREFS_ADDITIONAL'      : $('#PREFS_ADDITIONAL').val(),\n            'PREFS_VAX'             : $('#PREFS_VAX').val(),\n            'PREFS_RXHX'            : $('#PREFS_RXHX').val(),\n            'PREFS_IOP'             : $('#PREFS_IOP').val(),\n            'PREFS_CLINICAL'        : $('#PREFS_CLINICAL').val(),\n            'PREFS_EXAM'            : $('#PREFS_EXAM').val(),\n            'PREFS_CYL'             : $('#PREFS_CYL').val(),\n            'PREFS_EXT_VIEW'        : $('#PREFS_EXT_VIEW').val(),\n            'PREFS_ANTSEG_VIEW'     : $('#PREFS_ANTSEG_VIEW').val(),\n            'PREFS_RETINA_VIEW'     : $('#PREFS_RETINA_VIEW').val(),\n            'PREFS_NEURO_VIEW'      : $('#PREFS_NEURO_VIEW').val(),\n            'PREFS_ACT_VIEW'        : $('#PREFS_ACT_VIEW').val(),\n            'PREFS_ACT_SHOW'        : $('#PREFS_ACT_SHOW').val(),\n            'PREFS_HPI_RIGHT'       : $('#PREFS_HPI_RIGHT').val(),\n            'PREFS_PMH_RIGHT'       : $('#PREFS_PMH_RIGHT').val(),\n            'PREFS_EXT_RIGHT'       : $('#PREFS_EXT_RIGHT').val(),\n            'PREFS_ANTSEG_RIGHT'    : $('#PREFS_ANTSEG_RIGHT').val(),\n            'PREFS_RETINA_RIGHT'    : $('#PREFS_RETINA_RIGHT').val(),\n            'PREFS_NEURO_RIGHT'     : $('#PREFS_NEURO_RIGHT').val(),\n            'PREFS_PANEL_RIGHT'     : $('#PREFS_PANEL_RIGHT').val(),\n            'PREFS_IMPPLAN_RIGHT'   : $('#PREFS_IMPPLAN_DRAW').val(),\n            'PREFS_KB'              : $('#PREFS_KB').val(),\n            'PREFS_TOOLTIPS'        : $('#PREFS_TOOLTIPS').val(),\n            'setting_tabs_left'     : $('#setting_tabs_left').val(),\n            'setting_HPI'           : $('#setting_HPI').val(),\n            'setting_PMH'           : $('#setting_PMH').val(),\n            'setting_EXT'           : $('#setting_EXT').val(),\n            'setting_ANTSEG'        : $('#setting_ANTSEG').val(),\n            'setting_POSTSEG'       : $('#setting_POSTSEG').val(),\n            'setting_NEURO'         : $('#setting_NEURO').val(),\n            'setting_IMPPLAN'       : $('#setting_IMPPLAN').val(),\n        };\n        top.restoreSession();\n        $.ajax({\n               type     : 'POST',\n               url      : url,\n               data     : formData\n               });\n    }\n}\n/*\n *  Function to unlock the form - remove temporary lock at DB level.\n */\nfunction unlock() {\n    var url = \"../../forms/eye_mag/save.php?mode=update&id=\" + $(\"#form_id\").val();\n    var formData = {\n        'action'           : \"unlock\",\n        'unlock'           : \"1\",\n        'encounter'        : $('#encounter').val(),\n        'pid'              : $('#pid').val(),\n        'LOCKEDBY'         : $('#LOCKEDBY').val(),\n        'form_id'          : $(\"#form_id\").val()\n    };\n    top.restoreSession();\n    $.ajax({\n           type     : 'POST',\n           url          : url,\n           data     : formData }).done(function(o) {\n                                           $(\"#warning\").removeClass(\"nodisplay\");\n                                           $('#LOCKEDBY').val('');\n                                           $('#chart_status').val('off');\n                                           });\n}\n/*\n *  Function to fax this visit report to someone.\n */\nfunction create_task(to_id,task,to_type) {\n    $(this).addClass('fa-spin');\n    var url = \"../../forms/eye_mag/taskman.php\";\n    var formData = {\n        'action'            : \"make_task\",\n        'from_id'           : <?php echo js_escape($providerID); ?>,\n        'to_id'             : to_id,\n        'pid'               : $('#pid').val(),\n        'doc_type'          : task,\n        'enc'               : $('#encounter').val(),\n        'form_id'           : $('#form_id').val()\n    };\n    top.restoreSession();\n    $.ajax({\n           type         : 'POST',\n           url          : url,\n           data         : formData\n           }).done(function(result) {\n                   //OPTIONS to consider: we could return a status code from the server.\n                   //maybe 1 = no doc, 2= doc made and queued, 3= sent\n                   //maybe this is a checkbox.  Check to create the task, uncheck to delete it.\n                   //if the task is completed, checkbox is checked and disabled?\n                   //return doc_id and display it in html for id='status_'+task+'_'+to_type\n                   obj = JSON.parse(result);\n                   if (obj.DOC_link) {\n                   $('#status_'+task+'_'+to_type).html(obj.DOC_link);\n                   }\n                   if (obj.comments) alert(obj.comments);\n                   //maybe change an icon to sent?  Think.\n           });\n}\n\n\n/*\n *  START OF PMSFH FUNCTIONS\n */\nfunction alter_issue2(issue_number,issue_type,index) {\n    if (!obj.PMSFH) { refresh_page(); }\n    if (typeof obj.PMSFH == \"undefined\") { submit_form(); }\n    var here = obj.PMSFH[issue_type][index];\n    window.frames[0].frameElement.contentWindow.newtype(issue_type);\n    if (issue_type !='SOCH' && issue_type !='FH' && issue_type !='ROS') {\n        $('iframe').contents().find('#delete_button').removeClass('nodisplay');\n    } else {\n        $('iframe').contents().find('#delete_button').addClass('nodisplay');\n    }\n    $('iframe').contents().find('#issue').val(issue_number);\n    if (typeof here !== \"undefined\") {\n        $('iframe').contents().find('#form_title'           ).val(here.title);\n        $('iframe').contents().find('#form_diagnosis'       ).val(here.diagnosis);\n        $('iframe').contents().find('#form_begin'           ).val(here.begdate);\n        $('iframe').contents().find('#form_end'             ).val(here.enddate);\n        $('iframe').contents().find('#form_reaction'        ).val(here.reaction);\n        $('iframe').contents().find('#form_referredby'      ).val(here.referredby);\n        $('iframe').contents().find('#form_classification'  ).val(here.classification);\n        $('iframe').contents().find('#form_occur'           ).val(here.occurrence);\n        $('iframe').contents().find('#form_comments'        ).val(here.comments);\n        $('iframe').contents().find('#form_outcome'         ).val(here.outcome);\n        $('iframe').contents().find('#form_destination'     ).val(here.destination);\n        if (here.row_subtype =='eye') {\n            $('iframe').contents().find('#form_eye_subtype' ).prop(\"checked\",\"checked\");\n        } else {\n            $('iframe').contents().find('#form_eye_subtype' ).prop(\"checked\",false);\n        }\n        if (here.enddate > '') {\n            $('iframe').contents().find('#form_active' ).prop(\"checked\",true);\n            $('iframe').contents().find('#delete_button').addClass(\"nodisplay\");\n        } else {\n            $('iframe').contents().find('#form_active' ).prop(\"checked\",false);\n        }\n    }\n    var location = $(\"#PMH_left\").offset().top -55;\n    $root.animate({scrollTop: location }, \"slow\");\n}\nfunction showArray(arr) {\n    var tS = new String();\n    for (var iI in arr) {\n        tS += \"Index \"+iI+\", Type \"+(typeof arr[iI])+\", Value \"+arr[iI]+\"\\n\";\n    }\n    return tS;\n}\n\n/*\n * Function to delete an issue from server via ajax\n * Ajax returns json obj.PMSFH\n * Refresh displays (right_panel and QP_PMH panel)\n */\nfunction delete_issue2(issue_number,PMSFH_type) {\n    $('#form#theform issue').val(issue_number);\n    $('iframe').contents().find('#issue').val(issue_number);\n    $('form#theform form_type');\n\n    var url = '../../forms/eye_mag/a_issue.php';\n    var formData = {\n        'a_issue'           : issue_number,\n        'deletion'          : '1',\n        'PMSFH'             : '1'\n    };\n    top.restoreSession();\n    $.ajax({\n           type     : 'POST',\n           url      : url,\n           data     : formData,\n           success:(function(result) {\n                    populate_PMSFH(result);\n                    })\n           });\n    show_QP();\n    return false;\n}\n\n/*\n *  Function to save the PMSFH array to the server.\n *  This can be removed in the future - save for now\n */\nfunction submit_PMSFH() {\n    var url = \"../../forms/eye_mag/save.php?PMSFH_save=1&mode=update\";\n    formData = $(\"[id^=f]\").serialize();\n    var f = document.forms[0];\n    top.restoreSession();\n    $.ajax({\n           type   : 'POST',\n           url    : url,\n           data   : formData\n           }).done(function(result){\n                   f.form_title.value = '';\n                   f.form_diagnosis.value = '';\n                   f.form_begin.value ='';\n                   f.form_end.value ='';\n                   f.form_referredby.value ='';\n                   f.form_reaction.value ='';\n                   f.form_classification.value ='';\n                   f.form_occur.value='';\n                   f.form_comments.value ='';\n                   f.form_outcome.value ='';\n                   f.form_destination.value ='';\n                   f.issue.value ='';\n                   populate_form(result);\n                   });}\n\n/*\n *  END OF PMSFH FUNCTIONS\n */\n\n/*\n *  Function to refresh the issues, the panels and the Impression/coding areas.\n */\nfunction refresh_page() {\n    var url = '../../forms/eye_mag/view.php?display=PMSFH';\n    var formData = {\n        'action'           : \"refresh\",\n        'id'               : $('#form_id').val(),\n        'encounter'        : $('#encounter').val(),\n        'pid'              : $('#pid').val(),\n        'refresh'          : 'page'\n    };\n    top.restoreSession();\n    $.ajax({\n           type     : 'POST',\n           url          : url,\n           data     : formData,\n           success:(function(result) {\n                    populate_form(result);\n                    })\n           });\n        //Make the height of the panels equal if they grow really large\n    if ($('#PMH_right').height() > $('#PMH_left').height()) {\n        $('#PMH_left').height($('#PMH_right').height());\n    } else { $('#PMH_left').height($('#PMH_right').height()); }\n    return false;\n}\n\n/*\n *  Function to refresh the Glaucoma Flow Sheet.\n */\nfunction refresh_GFS() {\n    if (typeof config_byday == \"undefined\") { return; }\n\n    var indexToUpdate = '0';\n    $.each(config_byday.data.labels, function(key,value) {\n           if (value == visit_date) {\n           indexToUpdate = key;\n           }\n           });\n\n        //var indexToUpdate = config_byday.data.labels.length-1;\n    var ODIOP=0;\n    var OSIOP=0;\n    if ( $('#ODIOPAP').val()) {\n        ODIOP =  $('#ODIOPAP').val();\n    } else if (  $('#ODIOPTPN').val()) {\n        ODIOP =  $('#ODIOPTPN').val();\n    }\n\n    if ( $('#OSIOPAP').val() >'0') {\n        OSIOP =  $('#OSIOPAP').val();\n    } else if (  $('#OSIOPTPN').val() > '0') {\n        OSIOP =  $('#OSIOPTPN').val();\n    }\n\n    config_byday.data.datasets[0].data[indexToUpdate] = $('#ODIOPTARGET').val();\n    config_byday.data.datasets[1].data[indexToUpdate] = ODIOP;\n    config_byday.data.datasets[2].data[indexToUpdate] = OSIOP;\n    myLine.update();\n\n    var time = $('#IOPTIME').val();\n    times = time.match(/^(\\d{1,2}):(\\d{2})/);\n    if (times[1] < 10) times[1] = \"0\"+''+times[1];\n    time = times[1]+':'+times[2];\n    var indexToUpdate2 = '0';\n    $.each(config_byhour.data.labels, function(key,value) {\n           if (value == time) {\n           indexToUpdate2 = key;\n           }\n           });\n    config_byhour.data.datasets[0].data[indexToUpdate2] = ODIOP;\n    config_byhour.data.datasets[1].data[indexToUpdate2] = OSIOP;\n    myLine2.update();\n        // Update one of the points in the second dataset\n        //  myLine.data.datasets[1].data[indexToUpdate].val($('#ODIOPAP').val());\n        //alert(config_byday.data.datasets[1].data[indexToUpdate].val()+' is ending _bydat val');\n        //myLine.update();\n        //ctx2.update();\n    return;\n    /*\n     this should refresh locally and not go back to the server\n     the only things that would trigger a refresh are\n     a change in IOP\n     change in IOPTARGET\n     change in Eye Meds\n     change in GONIO fields\n     additional tests (VF/OCT) would not affect this in its live format\n\n     */\n}\n\nfunction populate_GFS(result) {\n    $(\"#LayerVision_IOP\").html(result);\n}\n\n/*\n *  Server returns a json encoding object: obj to update the page\n *  Here we refresh the PMSFH display panels,\n *  Rebuild the Impression/Plan Builder DX lists,\n *  the Impression Plan area\n *  and the CHRONIC fields.\n */\nfunction populate_form(result) {\n    obj = JSON.parse(result);\n    $(\"#QP_PMH\").html(obj.PMH_panel);\n    if ($('#PMH_right').height() > $('#PMH_left').height()) {\n        $('#PMH_left').height($('#PMH_right').height());\n    } else { $('#PMH_left').height($('#PMH_right').height()); }\n    $(\"#right_panel_refresh\").html(obj.right_panel);\n    build_IMPPLAN(obj.IMPPLAN_items);\n    build_Chronics(obj);\n    build_DX_list(obj); //build the list of DXs to show in the Impression/Plan Builder\n}\n/*\n *  Function to auto-fill CHRONIC fields\n *  To reach a detailed E&M level of documentation the chart\n *  may comment on the status of 3 or more CHRONIC/Inactive problems.\n *  The user can type them into the CHRONIC fields manually, or\n *  we can do it programatically if the user does the following:\n *     1.  documenting a PMH diagnosis in the PMSFH area\n *     2.  listing it as \"Chronic\"\n *     3.  making a comment about it\n *  With these three steps completed, this build_CHRONIC function displays the changes\n *  in the CHRONIC1-3 textareas, if not already filled in, for today's visit.\n *  On subsequent visits, the CHRONIC1-3 fields are blank, unless the above steps\n *  were performed previously, then they are filled in automatically on loading of the new form.\n */\nfunction build_Chronics(obj) {\n    if (typeof obj.PMSFH === \"undefined\") return;\n    var CHRONICS = obj.PMSFH['CHRONIC'];\n    var chronic_value;\n    var local_comment;\n    var here_already;\n    $.each(CHRONICS, function(key, value) {\n           local_comment = CHRONICS[key].title+\" \"+CHRONICS[key].diagnosis+\"\\n\"+CHRONICS[key].comments;\n           here_already ='0';\n           for (i=1; i < 4; i++) {\n           chronic_value = $('#CHRONIC'+i).val();\n           if (chronic_value == local_comment) {\n           here_already='1';  //this is here, move to next CHRONICS\n           break;\n           }\n           }\n           if (here_already !='1') {\n           for (i=1; i < 4; i++) {\n           chronic_value = $('#CHRONIC'+i).val();\n           if (chronic_value == '') {  //if the CHRONIC1-3 field is empty, fill it.\n           $('textarea#CHRONIC'+i).val(local_comment);\n           break;\n           }\n           }\n           }\n           });\n    return false;\n}\n/*\n * Function to autocreate a PDF of this form as a document linked to this encounter.\n * Each time it is runs it updates by replacing the encounter's PDF.\n * This used to be fired often,  but it is a server resource beast.\n * Use it sparingly, and intentionally only.\n * Currently only invoked via the bootstrap menu: Menu->File->Print/Store PDF\n */\nfunction store_PDF() {\n    var url = \"../../forms/eye_mag/save.php?mode=update\";\n    var formData = {\n        'action'        : 'store_PDF',\n        'patient_id'    : $('#pid').val(),\n        'pdf'           : '1',\n        'printable'     : '1',\n        'form_folder'   : $('#form_folder').val(),\n        'form_id'       : $('#form_id').val(),\n        'encounter'     : $('#encounter').val(),\n        'uniqueID'      : $('#uniqueID').val()\n    };\n    top.restoreSession();\n    $.ajax({\n           type         : 'POST',\n           url          : url,\n           data         : formData\n           });\n}\n\n/* START Functions related to form VIEW */\n/*\n * Function to blow out the form and display the right side of every section.\n */\nfunction show_right() {\n    $(\"#HPI_1\").removeClass(\"size50\").addClass(\"size100\");\n    $(\"#PMH_1\").removeClass(\"size50\").addClass(\"size100\");\n    $(\"#EXT_1\").removeClass(\"size50\").addClass(\"size100\");\n    $(\"#ANTSEG_1\").removeClass(\"size50\").addClass(\"size100\");\n    $(\"#NEURO_1\").removeClass(\"size50\").addClass(\"size100\");\n    $(\"#POSTSEG_1\").removeClass(\"size50\").addClass(\"size100\");\n    $(\"#IMPPLAN_1\").removeClass(\"size50\").addClass(\"size100\");\n    $(\"#HPI_right\").removeClass('nodisplay');\n    $(\"#PMH_right\").removeClass('nodisplay');\n    $(\"#EXT_right\").removeClass('nodisplay');\n    $(\"#ANTSEG_right\").removeClass('nodisplay');\n    $(\"#NEURO_right\").removeClass('nodisplay');\n    $(\"#RETINA_right\").removeClass('nodisplay');\n    $(\"#IMPPLAN_right\").removeClass('nodisplay');\n    $(\"#PMH_1\").addClass(\"clear_both\");\n    $(\"#ANTSEG_1\").addClass(\"clear_both\");\n    $(\"#POSTSEG_1\").addClass(\"clear_both\");\n    $(\"#NEURO_1\").addClass(\"clear_both\");\n    $(\"#IMPPLAN_1\").addClass(\"clear_both\");\n    hide_PRIORS();\n}\n/*\n * Function to implode the form and hide the right side of every section.\n */\nfunction hide_right() {\n    $(\"#HPI_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#PMH_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#EXT_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#ANTSEG_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#NEURO_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#RETINA_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#IMPPLAN_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#HPI_right\").addClass('nodisplay');\n    $(\"#PMH_right\").addClass('nodisplay');\n    $(\"#EXT_right\").addClass('nodisplay');\n    $(\"#ANTSEG_right\").addClass('nodisplay');\n    $(\"#NEURO_right\").addClass('nodisplay');\n    $(\"#RETINA_right\").addClass('nodisplay');\n    $(\"#PMH_1\").removeClass(\"clear_both\");\n    $(\"#ANTSEG_1\").removeClass(\"clear_both\");\n    $(\"#POSTSEG_1\").removeClass(\"clear_both\");\n    $(\"#NEURO_1\").removeClass(\"clear_both\");\n    update_PREFS();\n}\n/*\n * Function to explode the form and show the left side of every section.\n */\nfunction show_left() {\n    $(\"#HPI_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#PMH_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#EXT_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#ANTSEG_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#NEURO_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#POSTSEG_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#IMPPLAN_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#HPI_left\").removeClass('nodisplay');\n    $(\"#PMH_left\").removeClass('nodisplay');\n    $(\"#EXT_left\").removeClass('nodisplay');\n    $(\"#ANTSEG_left\").removeClass('nodisplay');\n    $(\"#RETINA_left\").removeClass('nodisplay');\n    $(\"#NEURO_left\").removeClass('nodisplay');\n    $(\"#IMPPLAN_left\").removeClass('nodisplay');\n    $(\"[name$='_left']\").removeClass('nodisplay');\n}\n/*\n * Function to implode the form and hide the left side of every section.\n */\nfunction hide_left() {\n    $(\"#HPI_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#PMH_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#EXT_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#ANTSEG_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#NEURO_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#POSTSEG_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#IMPPLAN_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#HPI_left\").addClass('nodisplay');\n    $(\"#PMH_left\").addClass('nodisplay');\n    $(\"#EXT_left\").addClass('nodisplay');\n    $(\"#ANTSEG_left\").addClass('nodisplay');\n    $(\"#RETINA_left\").addClass('nodisplay');\n    $(\"#NEURO_left\").addClass('nodisplay');\n    $(\"#IMPPLAN_left\").addClass('nodisplay');\n    $(\"[name $='_left']\").addClass('nodisplay');\n}\n/*\n * Function to display only the DRAW panels of every section.\n * The technical section, between HPI and Clinical section is still visible.\n */\nfunction show_DRAW() {\n    hide_QP();\n    hide_TEXT();\n    hide_PRIORS();\n    hide_left();\n    hide_KB();\n    show_right();\n\n    $(\"#HPI_right\").addClass('canvas');\n    $(\"#PMH_right\").addClass('canvas');\n    $(\"#EXT_right\").addClass('canvas');\n    $(\"#ANTSEG_right\").addClass('canvas');\n    $(\"#RETINA_right\").addClass('canvas');\n    $(\"#NEURO_right\").addClass('canvas');\n    $(\"#IMPPLAN_right\").addClass('canvas');\n    $(\".Draw_class\").removeClass('nodisplay');\n    if ($(\"#PREFS_CLINICAL\").val() !='1') {\n        $(\"#PREFS_CLINICAL\").val('1');\n        $(\"#PREFS_EXAM\").val('DRAW');\n    }\n    update_PREFS();\n}\n/*\n * Function to display only the TEXT panels in every section.\n */\nfunction show_TEXT() {\n    $(\".TEXT_class\").removeClass('nodisplay');\n    show_left();\n    hide_right(); //this hides the right half\n    hide_QP();\n    hide_DRAW();\n    hide_PRIORS();\n    if ($(\"#PREFS_CLINICAL\").val() !='1') {\n            // we want to show text_only which are found on left half\n        $(\"#PREFS_CLINICAL\").val('1');\n    }\n    $(\"#PREFS_EXAM\").val('TEXT');\n    $(\"#IMPPLAN_right\").addClass('canvas').removeClass('nodisplay');\n    $(\"#QP_IMPPLAN\").removeClass('nodisplay');\n    $(\"#DRAW_\"+zone).addClass('nodisplay');\n    $(\"#IMPPLAN_left\").removeClass('nodisplay');\n    $(\"#PREFS_IMPPLAN_RIGHT\").val('QP');\n    update_PREFS();\n}\n/*\n * Function to display the PRIORS panels in every right section.\n */\nfunction show_PRIORS() {\n    $(\"#NEURO_sections\").removeClass('nodisplay');\n    hide_DRAW();\n    $(\"#EXT_right\").addClass(\"PRIORS_color\");\n    show_TEXT();\n    show_right();\n    hide_QP();\n    $(\"#QP_HPI\").removeClass('nodisplay');\n    $(\"#QP_PMH\").removeClass('nodisplay');\n    $(\"#HPI_right\").addClass('canvas');\n    $(\"#PMH_right\").addClass('canvas');\n    $(\"#IMPPLAN_right\").addClass('canvas');\n    $(\"#EXT_right\").addClass('canvas');\n    $(\"#ANTSEG_right\").addClass('canvas');\n    $(\"#RETINA_right\").addClass('canvas');\n    $(\"#NEURO_right\").addClass('canvas');\n    $(\".PRIORS_class\").removeClass('nodisplay');\n    if ($(\"#PREFS_CLINICAL\").val() !='1') {\n            // we want to show text_only which are found on left half now that PRIORS are visible.\n        $(\"#PREFS_CLINICAL\").val('1');\n    }\n    $(\"#PREFS_EXAM\").val('PRIORS');\n    update_PREFS();\n}\n/*\n * Function to show the Quick Picks panel on the right side of every section.\n */\nfunction show_QP() {\n    hide_DRAW();\n    hide_PRIORS();\n    hide_KB();\n    show_TEXT();\n    show_right();\n    show_left();\n    $(\"#HPI_right\").addClass('canvas');\n    $(\"#PMH_right\").addClass('canvas');\n    $(\"#EXT_right\").addClass('canvas');\n    $(\"#ANTSEG_right\").addClass('canvas');\n    $(\"#RETINA_right\").addClass('canvas');\n    $(\"#NEURO_right\").addClass('canvas');\n    $(\"#IMPPLAN_right\").addClass('canvas');\n    $(\".QP_class\").removeClass('nodisplay');\n    $(\".QP_class2\").removeClass('nodisplay');\n    $(\"#PREFS_EXAM\").val('QP');\n    update_PREFS();\n}\n/*\n * Function to display only one DRAW panel of one section.\n */\nfunction show_DRAW_section(zone) {\n    $(\"#QP_\"+zone).addClass('nodisplay');\n    $(\"#\"+zone+\"_left\").removeClass('nodisplay');\n    $(\"#\"+zone+\"_right\").addClass('canvas').removeClass('nodisplay');\n    $(\"#Draw_\"+zone).addClass('canvas');\n    $(\"#Draw_\"+zone).removeClass('nodisplay');\n    $(\"#PREFS_\"+zone+\"_DRAW\").val(1);\n    update_PREFS();\n}\n/*\n * Function to display only one PRIORS panel of one section.\n */\nfunction show_PRIORS_section(section,newValue) {\n    var url = \"../../forms/eye_mag/save.php?mode=retrieve\";\n\n    var formData = {\n        'PRIORS_query'          : \"1\",\n        'zone'                  : section,\n        'id_to_show'            : newValue,\n        'pid'                   : $('#pid').val(),\n        'orig_id'               : $('#form_id').val()\n    }\n    top.restoreSession();\n    $.ajax({\n           type     : 'POST',\n           url       : url,\n           data     : formData,\n           success   : function(result) {\n                $(\"#PRIORS_\" + section + \"_left_text\").html(result);\n           }\n           });\n}\n/**\n *  Function to display a canvas/drawing from a prior visit.\n */\n\nfunction show_PRIOR_CANVAS_section(section, newValue) {\n    var pid    =  $('#pid').val();\n    var zone   = section;\n    var result = base+'/controller.php?document&retrieve&patient_id='+pid+'&document_id='+newValue+'&as_file=false';\n    var cp_forward = '<button onclick=\"replace_CANVAS(\\''+zone+'\\',\\''+result+'\\'); return false;\" id=\"Replace_Canvas_ANTSEG\" class=\"ui-button ui-corner-all ui-widget\"><?php echo xlt('Use this image'); ?></button>';\n    var filler = \"<div class='tools text-info'><?php echo xlt('Previous Encounter Drawings'); ?>: \"+cp_forward+\"</div><div class='borderShadow'><img src='\"+result+\"' alt='<?php echo xla(\"Loading prior image\");?>...'></div>\";\n\n    $(\"#\"+zone+\"_canvas\").addClass('nodisplay');\n    $(\"#\"+zone+\"_olddrawing\").html(filler);\n    $(\"#\"+zone+\"_olddrawing\").removeClass('nodisplay');\n}\n\nfunction replace_CANVAS(zone, url) {\n    $(\"#url_\"+zone).val(url);\n    cReplace(zone);\n$(\"#SELECT_CANVAS_\"+zone).val('current');\n    $(\"#\"+zone+\"_canvas\").removeClass('nodisplay');\n    $(\"#\"+zone+\"_olddrawing\").addClass('nodisplay');\n}\n/**\n * Function to show one of the Quick Picks section on the right side of its section.\n */\nfunction show_QP_section(zone,scroll) {\n    $(\"#\"+zone+\"_right\").addClass('canvas').removeClass('nodisplay');\n    $(\"#QP_\"+zone).removeClass('nodisplay');\n    $(\"#DRAW_\"+zone).addClass('nodisplay');\n    $(\"#\"+zone+\"_left\").removeClass('nodisplay');\n    $(\"#PREFS_\"+zone+\"_RIGHT\").val('QP');\n    if (!scroll) {\n        scroll = zone;\n        scrollTo(zone+\"_left\");\n    }\n   }\n/*\n * Function to hide all the DRAW panels of every section.\n */\nfunction hide_DRAW() {\n    $(\".Draw_class\").addClass('nodisplay');\n    hide_right();\n    $(\"#LayerTechnical_sections\").removeClass('nodisplay');\n    $(\"#REFRACTION_sections\").removeClass('nodisplay');\n    $(\"#PMH_sections\").removeClass('nodisplay');\n    $(\"#HPI_right\").addClass('nodisplay');\n    $(\"#HPI_right\").removeClass('canvas');\n    $(\"#EXT_right\").removeClass('canvas');\n    $(\"#RETINA_right\").removeClass('canvas');\n    $(\"#ANTSEG_right\").removeClass('canvas');\n}\n/*\n * Function to hide all the Quick Pick panels of every section.\n */\nfunction hide_QP() {\n    $(\".QP_class\").addClass('nodisplay');\n    $(\".QP_class2\").addClass('nodisplay');\n    $(\"[name$='_right']\").removeClass('canvas');\n}\n/*\n * Function to hide all the TEXT panels of every section.\n */\nfunction hide_TEXT() {\n    $(\".TEXT_class\").addClass('nodisplay');\n}\n/*\n * Function to hide all the PIORS panels of every section.\n */\nfunction hide_PRIORS() {\n    $(\"#EXT_right\").removeClass(\"PRIORS_color\");\n    $(\"#PRIORS_EXT_left_text\").addClass('nodisplay');\n    $(\"#PRIORS_ANTSEG_left_text\").addClass('nodisplay');\n    $(\"#PRIORS_RETINA_left_text\").addClass('nodisplay');\n    $(\"#PRIORS_NEURO_left_text\").addClass('nodisplay');\n    $(\".PRIORS_class\").addClass('nodisplay');\n}\n/*\n * Function to hide Shorthand/Keyboard Entry panel.\n */\nfunction hide_KB() {\n    $('.kb').addClass('nodisplay');\n    $('.kb_off').removeClass('nodisplay');\n    if ($(\"#PREFS_KB\").val() > 0) {\n        $(\"#PREFS_KB\").val('0');\n    }\n}\n/*\n * Function to show the Shorthand/Keyboard panel.\n */\nfunction show_KB() {\n    $('.kb').toggleClass('nodisplay');\n    $('.kb_off').toggleClass('nodisplay');\n    $('.copier').toggleClass('nodisplay');\n    if ($('#PREFS_EXAM').val() == 'DRAW') {\n        show_TEXT();\n    }\n\n    if ($(\"#PREFS_KB\").val() > 0) {\n        $(\"#PREFS_KB\").val('0');\n    } else {\n        $(\"#PREFS_KB\").val('1');\n    }\n    update_PREFS();\n}\n\nfunction editScripts(url) {\n    var pid = $('#pid').val();\n        var AddScript = function () {\n            var iam = top.frames.editScripts;\n            iam.location.href = base + \"/controller.php?prescription&edit&id=&pid=\"+encodeURIComponent(pid)\n        };\n        var ListScripts = function () {\n            var iam = top.frames.editScripts;\n            iam.location.href = base + \"/controller.php?prescription&list&id=\"+encodeURIComponent(pid)\n        };\n\n        let title = 'Prescriptions';\n        let w = 810;\n        w = 910;\n\n        dlgopen(url, 'editScripts', w, 300, '', '', {\n            buttons: [\n                {text: 'Add', close: false, style: 'primary  btn-sm', click: AddScript},\n                {text: 'List', close: false, style: 'primary  btn-sm', click: ListScripts},\n                {text: 'Done', close: true, style: 'default btn-sm'}\n            ],\n            onClosed: 'refreshme',\n            allowResize: true,\n            allowDrag: true,\n            dialogId: 'editscripts',\n            type: 'iframe'\n        });\n    }\n\n/* END Functions related to form VIEW */\n\n/*\n * Function contains menu commands specific to this form.\n */\nfunction menu_select(zone) {\n    $(\"#menu_\"+zone).addClass('active');\n    if (zone =='PREFERENCES') {\n        window.parent.RTop.document.location.href = base+\"interface/super/edit_globals.php\";\n        var url = base+\"/interface/super/edit_globals.php\";\n        var formData = {\n            'id'               : $('#id').val(),\n            'encounter'        : $('#encounter').val(),\n            'pid'              : $('#pid').val(),\n        };\n        top.restoreSession();\n        $.ajax({\n               type     : 'GET',\n               url      : url,\n               data     : formData,\n               success  : function(result) {\n                    window.parent.RTop.document.result;\n               }\n               });\n    }\n    if (zone =='Left_Panel') $(\"#left-panel-link\").trigger('click');\n    if (zone =='Right_Panel') $(\"#right-panel-link\").trigger('click');\n    if (zone =='PRIORS') $(\"#PRIORS_ALL_minus_one\").trigger(\"click\");\n    if (zone =='QP') show_QP();\n    if (zone =='KB') show_KB();\n    if (zone =='DRAW') show_DRAW();\n    if (zone =='TEXT') show_TEXT();\n    if (zone =='IOP_graph') $(\"#LayerVision_IOP_lightswitch\").trigger('click');\n    if (zone == \"HPI\") scrollTo(\"HPI_left\");\n    if (zone == \"PMH\") scrollTo(\"PMH_left\");\n    if (zone == \"EXT\") scrollTo(\"EXT_left\");\n    if (zone == \"ANTSEG\") scrollTo(\"ANTSEG_left\");\n    if (zone == \"POSTSEG\") scrollTo(\"RETINA_left\");\n    if (zone == \"NEURO\") scrollTo(\"NEURO_left\");\n    if (zone == \"IMPPLAN\") scrollTo(\"IMPPLAN_left\");\n}\n\n\n/*\n * Function to test blowing up any section to fullscren - towards tablet functionality?\n * Currently not used.\n */\nfunction show_Section(section) {\n    //hide everything, show the section.  For fullscreen perhaps Tablet view per section\n    show_right();\n    $(\"div[name='_sections']\").style.display= \"none\"; //\n    $('#'+section+'_sections').style.display= \"block\";\n        //.show().appendTo('form_container');\n}\n/*\n * Function to display Chief Complaint 1-3\n */\nfunction show_CC(CC_X) {\n    $(\"[name^='CC_']\").addClass('nodisplay');\n    $(\"#CC_\"+CC_X).removeClass('nodisplay');\n    $(\"#CC_\"+CC_X).index;\n}\n\n/* START Functions related to CODING */\n\n/*\n * Function to determine if add on NeuroSensory(92060) code can be billed.\n */\nfunction check_CPT_92060() {\n    var neuro1='';\n    var neuro2 ='';\n    if ($(\"#STEREOPSIS\").val() > '') (neuro1=\"1\");\n    $(\".neurosens2\").each(function(index) {\n                          if ($( this ).val() > '') {\n                          neuro2=\"1\";\n                          }\n                          });\n    if (neuro1 && neuro2){\n        $(\"#neurosens_code\").removeClass('nodisplay');\n        CPT_92060 = 'here';\n    } else {\n        $(\"#neurosens_code\").addClass('nodisplay');\n        CPT_92060 = '';\n    }\n}\n/*\n * Function to check documentation level for coding purposes\n * And make suggestions to end user.\n */\nfunction check_exam_detail() {\n    detail_reached_HPI='0';\n    chronic_reached_HPI='0';\n    $(\".count_HPI\").each(function(index) {\n                         if ($( this ).val() > '') detail_reached_HPI++;\n                         });\n    if (detail_reached_HPI > '3') {\n        $(\".detail_4_elements\").css(\"color\",\"red\");\n        $(\".CODE_LOW\").addClass(\"nodisplay\");\n        $(\".CODE_HIGH\").removeClass(\"nodisplay\");\n        $(\".detailed_HPI\").css(\"color\",\"red\");\n    } else {\n        $(\".detail_4_elements\").css(\"color\",\"#876F6F\");\n    }\n    $(\".chronic_HPI\").each(function(index) {\n                           if ($( this ).val() > '') chronic_reached_HPI++;\n                           });\n    if (chronic_reached_HPI > '2') {\n        $(\".chronic_3_elements\").css(\"color\",\"red\");\n        $(\".CODE_LOW\").addClass(\"nodisplay\");\n        $(\".CODE_HIGH\").removeClass(\"nodisplay\");\n        $(\".detailed_HPI\").css(\"color\",\"red\");\n    } else {\n        $(\".chronic_3_elements\").css(\"color\",\"#876F6F\");\n    }\n    if ((chronic_reached_HPI > '2')||(detail_reached_HPI > '3')) {\n        $(\".CODE_LOW\").addClass(\"nodisplay\");\n        $(\".CODE_HIGH\").removeClass(\"nodisplay\");\n        $(\".detailed_HPI\").css(\"color\",\"red\");\n        detail_reached_HPI = '1';\n    } else {\n        $(\".CODE_LOW\").removeClass(\"nodisplay\");\n        $(\".CODE_HIGH\").addClass(\"nodisplay\");\n        $(\".detailed_HPI\").css(\"color\",\"#876F6F\");\n        detail_reached_HPI = '0';\n    }\n    if ((($(\"#DIL_RISKS\").is(':checked')) || ($(\".dil_drug\").is(':checked'))) && (($('#ODPERIPH').val() >'') || ($('#OSPERIPH').val() >''))) {\n        $(\".EXAM_LOW\").addClass(\"nodisplay\");\n        $(\".DIL_RISKS\").removeClass(\"nodisplay\");\n        $(\"#DIL_RISKS\").prop(\"checked\",\"checked\");\n        detail_reached_exam = '1';\n    } else {\n        $(\".EXAM_LOW\").removeClass(\"nodisplay\");\n        $(\".DIL_RISKS\").addClass(\"nodisplay\");\n        detail_reached_exam = '0';\n    }\n    Suggest_visit_code();\n}\n\n/* END Functions related to CODING */\n\n/* START Functions related to IMPPLAN Builder */\n/*\n * Function to update the list of Dxs available for Impression/Plan and Coding(?).\n * Will use actual list from obj.IMPPLAN_items for coding.\n * After a new DX is added via PMSFH (or other ways), it updates the sortable and draggable list of DXs\n * available to build the Impression/Plan from.\n */\nfunction build_DX_list(obj) {\n    var out = \"\";\n    var diagnosis;\n    $( \"#build_DX_list\" ).empty();\n        //add in inc_FIELDCODES culled from the datafields\n    if (typeof obj.PMSFH === \"undefined\") return;\n    if (typeof obj.Clinical === \"undefined\") submit_form('obj.clinical is undefined');\n    if (!obj.PMSFH['POH']  && !obj.PMSFH['PMH'] && !obj.Clinical) {\n        out = '<br /><span class=\"bold\">The Past Ocular History (POH) and Past Medical History (PMH) are negative and no diagnosis was auto-generated from the clinical findings.</span><br /><br />Update the chart to activate the Builder.<br />';\n        $( \"#build_DX_list\" ).html(out);\n        return;\n    }\n    build_IMPPLAN(obj.IMPPLAN_items);\n    if ($('#inc_PE').is(':checked') && obj.Clinical) {\n        $.each(obj.Clinical, function(key, value) {\n               diagnosis='';\n               if (obj.Clinical[key][0].diagnosis > '') { //so we are just showing this first item of each Dx (Eg bilateral, x4 pterygium, only first shows up)\n               diagnosis = \"<code class='float-right ICD_CODE'>\"+obj.Clinical[key][0].code+\"</code>\";\n               }\n               out += \"<li class='ui-widget-content'><span name='DX_Clinical_\"+key+\"' id='DX_Clinical_\"+key+\"'>\"+obj.Clinical[key][0].title+\"</span> \"+diagnosis+\"</li> \";\n               });\n    }\n\n    if ($('#inc_POH').is(':checked') && (obj.PMSFH['POH']||obj.PMSFH['POS'])) {\n        $.each(obj.PMSFH['POH'], function(key, value) {\n               diagnosis='';\n               if (obj.PMSFH['POH'][key].diagnosis > '' ) {\n               diagnosis = \"<code class='float-right ICD_CODE'>\"+obj.PMSFH['POH'][key].code+\"</code>\";\n               }\n               out += \"<li class='ui-widget-content'><span name='DX_POH_\"+key+\"' id='DX_POH_\"+key+\"'>\"+obj.PMSFH['POH'][key].title+\"</span> \"+diagnosis+\"</li>\";\n               });\n        $.each(obj.PMSFH['POS'], function(key, value) {\n               diagnosis='';\n               if (obj.PMSFH['POS'][key].diagnosis > '' ) {\n               diagnosis = \"<code class='float-right ICD_CODE'>\"+obj.PMSFH['POS'][key].code+\"</code>\";\n               }\n               out += \"<li class='ui-widget-content'><span name='DX_POS_\"+key+\"' id='DX_POS_\"+key+\"'>\"+obj.PMSFH['POS'][key].title+\"</span> \"+diagnosis+\"</li>\";\n               });\n    }\n    if ($('#inc_PMH').is(':checked') && obj.PMSFH['PMH']) {\n        $.each(obj.PMSFH['PMH'], function(key, value) {\n               diagnosis='';\n               if (obj.PMSFH['PMH'][key].diagnosis > '') {\n               diagnosis = \"<code class='float-right ICD_CODE'>\"+obj.PMSFH['PMH'][key].code+\"</code>\";\n               }\n               out += \"<li class='ui-widget-content'><span name='DX_PMH_\"+key+\"' id='DX_PMH_\"+key+\"'>\"+obj.PMSFH['PMH'][key].title+\"</span>\"+diagnosis+\"</li> \";\n               });\n    }\n        //add in inc_FIELDCODES culled from the datafields\n    if (out !=\"\") {\n        rebuild_IMP($( \"#build_DX_list\" ));\n        $( \"#build_DX_list\" )\n        .html(out).sortable({ handle: \".handle\",stop: function(event, ui){ rebuild_IMP($( \"#build_DX_list\" )) } })\n        .selectable({ filter: \"li\", cancel: \".handle\",stop: function(event, ui){ rebuild_IMP($( \"#build_DX_list\" )) } })\n        .find( \"li\" )\n        .addClass( \"ui-corner-all  ui-selected\" )\n        .dblclick(function(){\n                  rebuild_IMP($( \"#build_DX_list\" ));\n                  $('#make_new_IMP').trigger('click'); //any items selected are sent to IMPPLAN directly.\n                  })\n            //this places the handle for the user to drag the item around.\n        .prepend( \"<div class='handle '><i class='fas fa-arrows-alt fa-1'></i></div>\" );\n    } else {\n        out = '<br /><span class=\"bold\"><?php echo xlt(\"Build Your Plan\") . \".\"; ?></span><br /><br />';\n        out += '<?php echo xlt('Suggestions for the Imp/Plan are built from the Exam, the Past Ocular History (POH and POS) and the Past Medical History (PMH)') . \".\"; ?><br />';\n        out += '<?php echo xlt('Update the chart to build this list') . \".\"; ?><br />';\n        $( \"#build_DX_list\" ).html(out);\n    }\n}\n/**\n * Function:  After the Builder DX list is built from all the available options,\n * the end user can select to use only certain Dxs and change their sort order of importance.\n * This function builds the list of DXs selected and in the order as the user sorted them,\n * so we know what to use to build the Impression/Plan area and in what order to display them.\n */\nfunction rebuild_IMP(obj2) {\n    var surface;\n    IMP_order=[];\n    k='0';\n    $( \".ui-selected\", obj2 ).each(function() {\n                                   var index = $( \"#build_DX_list li\" ).index( this );\n                                   if ($('#build_DX_list li span')[index].id.match(/DX_POH_(.*)/)) {\n                                   surface = 'POH_' + $( \"#build_DX_list li span\" )[index].id.match(/DX_POH_(.*)/)[1];\n                                   IMP_order[k] = surface;\n                                   }else if ($('#build_DX_list li span')[index].id.match(/DX_POS_(.*)/)) {\n                                   surface = 'POS_' + $( \"#build_DX_list li span\" )[index].id.match(/DX_POS_(.*)/)[1];\n                                   IMP_order[k] = surface;\n                                   } else if ($('#build_DX_list li span')[index].id.match(/DX_PMH_(.*)/)) {\n                                   surface = 'PMH_' + $( \"#build_DX_list li span\" )[index].id.match(/DX_PMH_(.*)/)[1];\n                                   IMP_order[k] = surface;\n                                   } else if ($('#build_DX_list li span')[index].id.match(/DX_Clinical_(.*)/)) {\n                                   surface = 'CLINICAL_' + $( \"#build_DX_list li span\" )[index].id.match(/DX_Clinical_(.*)/)[1];\n                                   IMP_order[k] = surface;\n                                   }\n                                   k++;\n                                   });\n }\n/*\n * This function builds the Impression/Plan area using the object supplied: items\n * It appends \"items\" into the Impression Plan area, complete with:\n *      contenteditable Titles (the Impression),\n *      its code (if part of the item object),\n *      Plan textareas (autofilled with the item/object's \"comment\")\n * for each member of \"items\".\n * Duplicates are removed by server.\n */\nfunction build_IMPPLAN(items,nodisplay) {\n    var contents_here;\n    if (typeof nodisplay == \"undefined\") {\n      $('#IMPPLAN_zone').html(\"\");\n    }\n      $('#Coding_DX_Codes').html(\"\");\n      $('#visit_justification').html(\"\");\n\n    if ((items == null) || ( (typeof items == \"undefined\") || (items.length =='0') ) ) {\n        items = [];\n        $('#IMPPLAN_text').removeClass('nodisplay'); //Display Builder instructions for starting out\n        $('#IMPPLAN_zone').addClass('nodisplay');\n    } else {\n            //ok we have at least one item, display them in order; hide the Builder instructions\n        $('#IMPPLAN_text').addClass('nodisplay');\n        $('#IMPPLAN_zone').removeClass('nodisplay');\n        count_dx=0;\n        visit_justifier =[];\n        $.each(items, function( index, value ) {\n            if (!value.codetext) value.codetext=\"\";\n            if (!value.code) value.code=\"\";\n            if ((value.code===\"\") || (value.code.match(/Code/) || (value.code==null))) {\n              value.code=\"<i class='fa fa-search-plus'></i>&nbsp;Code\";\n            } else {\n              count_dx++;\n\n              if (value.code.match(/\\,/g)) {\n                // If there is a comma in there, there is more than one code present for this item. Split them out.\n                // If code is manually changed or copied from a prior visit - item will not have a PMSFH_link\n                // PMSFH_link is only present when the Builder was used to make the entry.\n\n                // So if there is no PMSFH_link and it is not generated from a clinical field:\n                if ( ((typeof value.PMSFH_link !== \"undefined\") || (value.PMSFH_link !== null)) && (!value.PMSFH_link.match(/Clinical_(.*)/)) ) {\n                    //The Title should have the description.\n                    var CodeArr =  value.code.split(\",\");\n                    var TitleArr = value.codedesc.split(\"\\r\");//I don't see a second codedesc being adding in for this yet...\n                    for (i=0;i < CodeArr.length;i++) {\n                      if (CodeArr.length == (TitleArr.length-1)) { //there is a trailing \\r but second codedesc should have \"\\r\" also\n                        $('#Coding_DX_Codes').append(count_dx +'. '+CodeArr[i]+': '+TitleArr[i]+'<br />');\n\n                        justify_btn = '<span class=\"modifier status_on\" name=\"visit_justifier\" id=\"visit_just_'+count_dx+'\" value=\"\" data-justcode=\"'+value.codetype+'|'+value.code+'\" title=\"'+value.codedesc+'\">'+count_dx+'</span>';\n                        $('#visit_justification').append(justify_btn);\n                        visit_justifier.push(value.codetype+'|'+value.code[i]);\n                      } else {\n                        //just look it up via ajax or tell them to code it manually on the feesheet ;).\n                        $('#Coding_DX_Codes').append(CodeArr[i]+': <?php echo xlt('Manually retrieve description on Fee Sheet'); ?> <br />');\n\n                        var justify_btn = '<span class=\"modifier status_on\" id=\"visit_just_'+count_dx+'\" name=\"visit_justifier\" value=\"\" data-justcode=\"'+value.codetype+'|'+value.code+'\" title=\"'+value.codedesc+'\">'+count_dx+'</span>';\n\n                        $('#visit_justification').append(justify_btn);\n                        visit_justifier.push(value.codetype+'|'+value.code);\n                      }\n                      count_dx++;\n                    }\n                } else {\n                    // So there IS a PMSFH_link or it was generated from a clinical field:\n\n                    //this works for Clinical-derived terms with more than one Dx Code (found in more than one location/field)\n                  if (value.PMSFH_link.match(/Clinical_(.*)/)) {\n                    if (typeof obj.Clinical !== \"undefined\") {\n                      var location = value.PMSFH_link.match(/Clinical_(.*)/)[1];\n                      if (obj.Clinical[location]!=null ) {\n                        for (i=0; i < obj.Clinical[location].length; i++) {\n                            $('#Coding_DX_Codes').append(count_dx +'. '+obj.Clinical[location][i].code+': '+obj.Clinical[location][i].codedesc+'<br />');\n                            justify_btn = '<span class=\"modifier status_on\" id=\"visit_just_'+count_dx+'\" name=\"visit_justifier\" value=\"\" data-justcode=\"'+obj.Clinical[location][i].codetype+'|'+obj.Clinical[location][i].code+'\" title=\"'+obj.Clinical[location][i].codedesc+'\">'+count_dx+'</span>';\n                            count_dx++;\n                            $('#visit_justification').append(justify_btn);\n\n                            visit_justifier.push(obj.Clinical[location][i].codetype+'|'+obj.Clinical[location][i].code);\n                        }\n                      }\n                    }\n                  }\n                }\n              } else { //all is good, one code only\n                $('#Coding_DX_Codes').append(count_dx +'. '+value.code+': '+value.codedesc+'<br />');\n\n                justify_btn = ' <span class=\"modifier status_on\" id=\"visit_just_'+count_dx+'\" name=\"visit_justifier\" data-justcode=\"'+value.codetype+'|'+value.code+'\" title=\"'+value.codedesc+'\">'+count_dx+'</span> ';\n                $('#visit_justification').append(justify_btn);\n                //we assume the visit code will use this as a justification in billing so activate that link now.\n                visit_justifier.push(value.codetype+'|'+value.code);\n              }\n            }\n\n            if (typeof nodisplay !== \"undefined\") {\n              return;\n            }\n               var title2 = value.title.replace(/(\\')/g, '');\n               contents_here = \"<span class='bold' contenteditable title='<?php echo xla('Click to edit'); ?>' id='IMPRESSION_\"+index+\"'>\" +\n               value.title +\"</span>\"+\n               \" <span contenteditable class='float-right' onclick='sel_diagnosis(\"+index+\",\\\"\"+title2+\"\\\");' title='\"+value.codetext+\"' id='CODE_\"+index+\"'>\"+\n               value.code + \"</span>\"+\n               \"<br /><textarea id='PLAN_\"+index+\"' name='PLAN_\"+index+\n               \"' style='width:100%;max-width:100%;height:auto;min-height:3em;overflow-y: hidden;padding-top: 1.1em; '>\"+\n               value.plan +\"</textarea><br /></li>\";\n               $('#IMPPLAN_zone').append('<div id=\"IMPPLAN_zone_'+index+'\" class=\"IMPPLAN_class\">'+\n                                         '<i class=\"float-right fa fa-times\" id=\"BUTTON_IMPPLAN_'+index+'\"></i>'+\n                                         contents_here+'</div>');\n               $('#BUTTON_IMPPLAN_'+index).on('click', function() {//delete/close icon\n                                                 var item = this.id.match(/BUTTON_IMPPLAN_(.*)/)[1];\n                                                 obj.IMPPLAN_items.splice(item,1);\n                                                 build_IMPPLAN(obj.IMPPLAN_items);\n                                                 store_IMPPLAN(obj.IMPPLAN_items,'1');\n                                                 });\n               $('#PLAN_'+index).css(\"background-color\",\"#F0F8FF\");\n        });\n        //end each\n        //now attach visit_justifier(s) to each TEST\n        //If the TEST_justifiers were ever touched AND\n        $.each($(\".TESTS_justify\"), function( index, value) {\n            $( this ).html('');\n            var herenow = $(\"#TEST_\"+index+\"_justify\");\n\n            for (var i = 0, length = visit_justifier.length; i < length; i++) {\n                item2 = visit_justifier[i];\n                status ='';\n                for (var j=0;j< CODING_items.length; j++) {\n                    if (CODING_items[j].justify == item2) {\n                        status=\"status_on\";\n                    }\n                }\n                //if item2 is in CODING_items, it will have class=status_on and we need modifier 25, maybe 59 if there are two or more?\n                justify_btn = '&nbsp;<span class=\"modifier '+status+'\" id=\"TEST_'+index+'_just_'+i+'\" name=\"TEST_'+index+'_justifiers\" value=\"\" data-justcode=\"'+item2+'\" title=\"'+item2+'\">'+(i+1)+'</span>';\n                herenow.append(justify_btn);\n            }\n        });\n\n            // The IMPRESSION DXs are \"contenteditable\" spans.\n            // If the user changes the words in an IMPRESSION Diagnosis area, store it.\n        $('[id^=IMPRESSION_]').on('blur', function(e) {\n                                    e.preventDefault();\n                                    var item = this.id.match(/IMPRESSION_(.*)/)[1];\n                                    var content = this.innerText || this.innerHTML;\n\n                                    if (pmsfh_here = obj.IMPPLAN_items[item].PMSFH_link.match(/(.*)\\_(.*)/)) {\n                                        //we are going to change how this appears in PMH too.\n                                        var pmsfh_zone = pmsfh_here[1];\n                                        var pmsfh_item = pmsfh_here[2];\n                                        obj.PMSFH[pmsfh_zone][pmsfh_item].title = content;\n                                        alter_issue2(obj.PMSFH[pmsfh_zone][pmsfh_item].issue,pmsfh_zone,pmsfh_item);\n                                    }\n\n                                    obj.IMPPLAN_items[item].title = content;\n                                    store_IMPPLAN(obj.IMPPLAN_items,'1');\n                                    //$(this).css('background-color','#F0F8FF');\n                                    return false;\n                                    });\n        $('[id^=CODE_]').on('blur', function() {\n                              var item = this.id.match(/CODE_(.*)/)[1];\n                              var new_code = this.innerText || this.innerHTML;\n                              obj.IMPPLAN_items[item].code =  new_code;\n                              //obj.IMPPLAN_items[item].codetext = '';\n                              //obj.IMPPLAN_items[item].codedesc = '';\n                              $(this).css('background-color','#F0F8FF');\n                              store_IMPPLAN(obj.IMPPLAN_items);\n                            });\n\n        $('[id^=PLAN_]').on('change', function() {\n                                var item = this.id.match(/PLAN_(.*)/)[1];\n                                obj.IMPPLAN_items[item].plan =  $(this).val();\n                                store_IMPPLAN(obj.IMPPLAN_items,'1');\n                                $(this).css('background-color','#F0F8FF');\n                                });\n\n        $('#IMPPLAN_zone').on( 'keyup', 'textarea', function (e){\n                              //$(this).css('height', 'auto' );\n                             // $(this).height( this.scrollHeight );\n                              });\n        $('#IMPPLAN_zone').find( 'textarea' ).keyup();\n        obj.IMPPLAN_items = items;\n    }\n}\n\n\n/*\n * This functions updates a PMSFH item's code on the server via its issue number\n */\nfunction update_PMSFH_code(the_issue,new_code){\n    var url = \"../../forms/eye_mag/save.php?mode=update\";\n    top.restoreSession();\n    $.ajax({\n           type         : 'POST',\n           url          :  url,\n           data     : {\n           action       : 'code_PMSFH',\n           pid          : $('#pid').val(),\n           form_id      : $('#form_id').val(),\n           encounter    : $('#encounter').val(),\n           uniqueID     : $('#uniqueID').val(),\n           issue        : the_issue,\n           code         : new_code\n           }\n           }).done(function(result) {\n                   if (result == 'Code 400') {\n                   code_400(); //the user does not have write privileges!\n                   return;\n                   }\n                   });\n}\n\n\n/*\n *  This function sends the obj.IMPPLAN_items to the server for storage\n */\nfunction store_IMPPLAN(storage,nodisplay) {\n    if (typeof storage !== \"undefined\") {\n        var url = \"../../forms/eye_mag/save.php?mode=update&store_IMPPLAN\";\n        var formData =  JSON.stringify(storage);\n        top.restoreSession();\n        $.ajax({\n               type         : 'POST',\n               url          :  url,\n               dataType     : 'json',\n               data         : {\n                 parameter     : formData,\n                 action        : 'store_IMPPLAN',\n                 pid           : $('#pid').val(),\n                 form_id       : $('#form_id').val(),\n                 encounter     : $('#encounter').val(),\n                 uniqueID      : $('#uniqueID').val()\n               }\n               }).done(function(result) {\n                       if (result == \"Code 400\") {\n                       code_400(); //the user does not have write privileges!\n                       return;\n                       }\n                       obj.IMPPLAN_items = result;\n                    //   if (typeof nodisplay === \"undefined\") {\n                          build_IMPPLAN(obj.IMPPLAN_items,nodisplay);\n                      // }\n                       });\n    }\n}\n\n\n/*\n *  This submits any codes we have in the obj.IMPPLAN_items variable, ie. what is in the Impression Plan currently, to the coding engine.\n *\n */\nfunction CODING_to_feesheet(CODING_items) {\n    if (typeof CODING_items !== \"undefined\") {\n        var url = \"../../forms/eye_mag/save.php?mode=update&track=ThingOne\";\n        var formData =  JSON.stringify(CODING_items);\n        top.restoreSession();\n        $.ajax({\n               'type'         : 'POST',\n               'url'          :  url,\n               'data'         : {\n               'parameter'    : formData,\n               'action'       : 'code_visit',\n               'pid'          : $('#pid').val(),\n               'form_id'      : $('#form_id').val(),\n               'encounter'    : $('#encounter').val(),\n               'uniqueID'     : $('#uniqueID').val()\n               }\n               }).done(function(result) {\n                       if (result == \"Code 400\") {\n                        code_400(); //the user does not have write privileges!\n                        return;\n                       } else {\n                        //$(\"#goto_fee_sheet\").prop('disabled', false);\n                        $(\"#goto_fee_sheet\").removeClass('nodisplay');\n                       }\n                       });\n    }\n\n}\n\n/*\n * This function allows the user to drag a DX from the Impression/Plan Builder list directly onto the Impression Plan list.\n * This item is appended to the $('#IMPPLAN_zone').\n */\nfunction dragto_IMPPLAN_zone(event, ui) {\n    var findme = ui.draggable.find(\"span\").attr(\"id\");\n    var group = findme.match(/DX_(.*)_(.*)/)[1];\n    var location = findme.match(/DX_(.*)_(.*)/)[2];\n    var the_code ='';\n    var the_codedesc ='';\n    var the_codetext ='';\n    var the_plan ='';\n    if (obj.IMPPLAN_items ==null) obj.IMPPLAN_items = [];\n    if (group ==\"Clinical\") {\n            //more than one field can contain this DX.\n            //Group them into one IMPPLAN.\n        for (i=0;i < obj.Clinical[location].length; i++) {\n            the_code += obj.Clinical[location][i]['code']+',';\n            the_codedesc = obj.Clinical[location][i]['codedesc'];\n            the_codetext = obj.Clinical[location][i]['codetext'];\n            the_plan += obj.Clinical[location][i]['codedesc'] + \"\\r\";\n        }\n        if (i > 0) the_code = the_code.slice(0, -1);\n        obj.IMPPLAN_items.push({\n                               code:        the_code,\n                               codedesc:    the_codedesc,\n                               codetext:    the_codetext,\n                               codetype:    obj.Clinical[location][0]['codetype'],\n                               plan:        the_plan,\n                               PMSFH_link:  obj.Clinical[location][0]['PMSFH_link'],\n                               title:       obj.Clinical[location][0]['title']\n                               });\n\n    } else {\n        obj.IMPPLAN_items.push({\n                               code:        obj.PMSFH[group][location]['code'],\n                               codedesc:    obj.PMSFH[group][location]['codedesc'],\n                               codetext:    obj.PMSFH[group][location]['codetext'],\n                               codetype:    obj.PMSFH[group][location]['codetype'],\n                               plan:        obj.PMSFH[group][location]['comments'],\n                               PMSFH_link:  obj.PMSFH[group][location]['PMSFH_link'],\n                               title:       obj.PMSFH[group][location]['title']\n\n                               });\n    }\n    store_IMPPLAN(obj.IMPPLAN_items); //redisplay the items\n}\n/*\n * This function allows the user to drag a DX from the IMPRESSION list directly into the New Dx field (#IMP) <-- New Dx textarea\n * The data is appended to the end of the text.\n * It doesn't know what is already there (yet) so numbering if desired must be done manually.\n */\nfunction dragto_IMPPLAN(event, ui) {\n    var findme = ui.draggable.find(\"span\").attr(\"id\");\n    var group = findme.match(/DX_(.*)_(.*)/)[1];\n    var location = findme.match(/DX_(.*)_(.*)/)[2];\n    var draggable2 = ui.draggable;\n    if (group ==\"Clinical\") {\n        $('#IMP').val(ui.draggable[0].textContent+\"\\n\");\n    } else {\n        $('#IMP').val(ui.draggable[0].textContent+\"\\n\"+obj.PMSFH[group][location]['comments']);\n    }\n}\n/* END Functions related to IMPPLAN Builder */\n\nfunction Suggest_visit_code() {\n    //assume Eyes and established patient\n    (Code_group != 'Eyes')  ? (digit_2 = '9') : digit_2 = '2'; //920XX or 990XX\n    (Code_new_est == 'New')  ? (digit_4 = '0') : digit_4 = '1'; //9X01X or 9X00X\n    if (detail_reached_exam =='1' && (detail_reached_HPI =='1')) {\n        (Code_group =='Eyes') ? (digit_5 = '4') : (digit_5='3'); //920X4 or 990X3\n        detailed = \"comprehensive\";\n    } else {\n        digit_5 = '2'; //920X2\n        detailed = \"intermediate\";\n    }\n    visit_desc = Code_new_est +\" \"+ detailed +\" \"+digit_5;\n    visit_code = \"9\"+digit_2+\"0\"+digit_4+digit_5;\n    $('#visit_codes').val(\"CPT4|\"+visit_code+\"|\").change();\n}\n/*\n *  This function builds the codes and populates the billing table for this encounter.\n */\nfunction build_CODING_list() {\n    CODING_items =[];\n    /*  the following things get billed:\n     1. Visit code(s) including neurosensory if performed\n     2. Tests performed\n     3. Diagnostic codes\n     */\n         //3. Diagnostic Codes\n    $.each(obj.IMPPLAN_items, function( index, value ) {\n      if (value['codetype']) {\n        if (value['code'].match(/\\,/g)) {\n          // physical finding found in more than one location, more than one code...\n          // if there is a comma in there, there is more than one code present. Split them out.\n          // And all those in one group have the same link out (PMSFH_link) value\n          var location = value.PMSFH_link.match(/Clinical_(.*)/)[1];\n          for (i=0; i< obj.Clinical[location].length; i++) {\n            CODING_items.push({\n                             code:     obj.Clinical[location][i]['code'],\n                             codedesc: obj.Clinical[location][i]['codedesc'],\n                             codetext: obj.Clinical[location][i]['codetext'],\n                             codetype: obj.Clinical[location][i]['codetype'],\n                             title:    obj.Clinical[location][i]['title']\n                             });\n          }\n        } else if (value['code'].match(/Code/)){\n          //ignore\n        } else {\n          CODING_items.push({\n                             code:     value['code'],\n                             codedesc: value['codedesc'],\n                             codetext: value['codetext'],\n                             codetype: value['codetype'],\n                             title:    value['title']\n                             });\n\n        }\n      }\n    });\n        //1.  Visit Codes.  These can have a modifier (22,24,25,57 hard coded so far)\n        var visit_justify = visit_justifier.join(\":\");\n        if (typeof visit_modifier != \"object\") {\n          visit_modifiers = [];\n        } else {\n          visit_modifiers = visit_modifier.join(\":\");//\n        }\n    CODING_items.push({\n                      code:     visit_code,\n                      codedesc: visit_desc,\n                      codetext: '',\n                      codetype: 'CPT4',\n                      title:    'Visit Code',\n                      modifier: visit_modifiers,\n                      justify:  visit_justify\n                      });\n        //neurosensory\n    if (CPT_92060 == 'here') {\n        CODING_items.push({\n                          code:     '92060',\n                          codedesc: 'Sensorimotor exam',\n                          codetext: 'Sensorimotor exam (CPT4:92060)',\n                          codetype: 'CPT4',\n                          title:    'Neuro/Sensorimotor Code',\n                          justify:  visit_justify\n                          });\n    }\n        //2. Tests/procedures performed to bill\n    $('.TESTS').each(function(i, obj) {\n                    if  ($(this).is(':checked')) {\n                      var codetype = obj.value.match(/(.*):(.*)/)[1];\n                      var code = obj.value.match(/(.*):(.*)/)[2];\n                      var modifier = $('#'+obj.id+'_modifier').val();\n                      var justify = '';\n                      $('[name=\"TEST_'+i+'_justifiers\"]').each(function(j,obj2) {\n                          if ($('#TEST_'+i+'_just_'+j).hasClass('status_on') ) {\n                            var h = $(this).data();\n                            justify = h.justcode;\n                          }\n                      });\n                      var d = $(this).data();\n                      CODING_items.push({\n                                       'code'       : code,\n                                       'codedesc'   : d.title,\n                                       'codetext'   : d.codetext,\n                                       'codetype'   : codetype,\n                                       'title'      : d.title,\n                                       'modifier'   : modifier,\n                                       'justify'    : justify\n                                       });\n                    }\n                  });\n}\n\n/*\n * Function to make the form fields inactive or active depending on the form's state (Active vs. READ-ONLY)\n */\nfunction toggle_active_flags(new_state) {\n    if (($(\"#chart_status\").val() == \"off\") || (new_state == \"on\")) {\n            //  we are read-only and we want to go active.\n        $(\"#chart_status\").val(\"on\");\n        $(\"#active_flag\").html(\" Active Chart \");\n        $(\"#active_icon\").html(\"<i class='fa fa-toggle-on'></i>\");\n        $(\"#warning\").addClass(\"nodisplay\");\n        $('input, select, textarea, a').removeAttr('disabled');\n        $('input, textarea').removeAttr('readonly');\n    } else {\n            //else clicking this means we want to go from active to read-only\n        $(\"#chart_status\").val(\"off\");\n        $(\"#active_flag\").html(\" READ-ONLY \");\n        $(\"#active_icon\").html(\"<i class='fa fa-toggle-off'></i>\");\n        $(\"#warning\").removeClass(\"nodisplay\");\n            //we should tell the form fields to be disabled. should already be...\n        $('input, select, textarea, a').attr('disabled', 'disabled');\n        $('input, textarea').attr('readonly', 'readonly');\n            //need to also disable Ductions and Versions, PRIORS, Quicks Picks and Drawing!!! AND IMPPLAN area.\n            //Either way a save in READ-ONLY mode fails - just returns this pop_up again, without saving...\n        this_form_id = $(\"#form_id\").val();\n        $(\"#COPY_SECTION\").val(\"READONLY-\"+this_form_id);\n    }\n}\n/*\n * Function to update a form in READ-ONLY mode with any data added by the Active version of this form_id/encounter form\n */\nfunction update_READONLY() {\n    var data = {\n        'action'      : 'retrieve',\n        'copy'        : 'READONLY',\n        'zone'        : 'READONLY',\n        'copy_to'     : $(\"#form_id\").val(),\n        'copy_from'   : $(\"#form_id\").val(),\n        'pid'         : $(\"#pid\").val()\n    };\n        //we are going to update the whole form\n        //Imagine you are watching on your browser while the tech adds stuff in another room on another computer.\n        //We are not ready to actively chart, just looking to see how far along our staff is...\n        //or maybe just looking ahead to see the who's being worked up in the next room?\n        //Either way, we are looking at a record that at present will be disabled/we cannot change...\n        // yet it is updating every 10-15 seconds if another user is making changes.\n    top.restoreSession();\n    $.ajax({\n           type   : 'POST',\n           dataType : 'json',\n           url      :  \"../../forms/eye_mag/save.php?copy=READONLY\",\n           data   : data,\n           success  : function(result) {\n           $.map(result, function(valhere, keyhere) {\n                 if ($(\"#\"+keyhere).val() != valhere) {\n                 $(\"#\"+keyhere).val(valhere).css(\"background-color\",\"#CCF\");\n                 }\n                 if (keyhere.match(/MOTILITY_/)) {\n                 // Copy forward ductions and versions visually\n                 // Make each blank, and rebuild them\n                 $(\"[name='\"+keyhere+\"_1']\").html('');\n                 $(\"[name='\"+keyhere+\"_2']\").html('');\n                 $(\"[name='\"+keyhere+\"_3']\").html('');\n                 $(\"[name='\"+keyhere+\"_4']\").html('');\n                 if (keyhere.match(/(_RS|_LS|_RI|_LI|_RRSO|_RRIO|_RLSO|_RLIO|_LRSO|_LRIO|_LLSO|_LLIO)/)) {\n                 // Show a horizontal (minus) tag.\n                 hash_tag = '<i class=\"fa fa-minus\"></i>';\n                 } else { //show vertical tag\n                 hash_tag = '<i class=\"fa fa-minus rotate-left\"></i>';\n                 }\n                 for (index =1; index <= valhere; ++index) {\n                 $(\"#\"+keyhere+\"_\"+index).html(hash_tag);\n                 }\n                 } else if (keyhere.match(/^(ODVF|OSVF)\\d$/)) {\n                 if (valhere =='1') {\n                 $(\"#FieldsNormal\").prop('checked', false);\n                 $(\"#\"+keyhere).prop('checked', true);\n                 $(\"#\"+keyhere).val('1');\n                 } else {\n                 $(\"#\"+keyhere).val('0');\n                 $(\"#\"+keyhere).prop('checked', false);\n                 }\n                 } else if (keyhere.match(/AMSLERO(.)/)) {\n                 var sidehere = keyhere.match(/AMSLERO(.)/);\n                 if (valhere < '1') valhere ='0';\n                 $(\"#\"+keyhere).val(valhere);\n                 var srcvalue=\"AmslerO\"+sidehere[1];\n                 document.getElementById(srcvalue).src = document.getElementById(srcvalue).src.replace(/\\_\\d/g,\"_\"+valhere);\n                 $(\"#AmslerO\"+sidehere[1]+\"value\").text(valhere);\n                 } else if (keyhere.match(/VA$/)) {\n                 $(\"#\"+keyhere+\"_copy\").val(valhere).css(\"background-color\",\"#F0F8FF\");;\n                 $(\"#\"+keyhere+\"_copy_brd\").val(valhere).css(\"background-color\",\"#F0F8FF\");;\n                 } else if (keyhere.match(/^O.VA_/)) {\n                 var side=keyhere.match(/(O.)VA_(.)/)[1];\n                 var rx_number=keyhere.match(/(O.)VA_(.)/)[2];\n                 if (rx_number == '1') { //update VA_1_copy and VA_1_copy_brd (first wearing RX only)\n                 $('#'+side+'VA_1_copy').val(valhere).css(\"background-color\",\"#F0F8FF\");;\n                 $('#'+side+'VA_1_copy_brd').val(valhere).css(\"background-color\",\"#F0F8FF\");;\n                 }\n                 } else if (keyhere.match(/^RX_TYPE_\\d$/)) {\n                 if (typeof $('input:radio[name='+keyhere+']')[valhere] !== \"undefined\") {\n                 $('input:radio[name='+keyhere+']')[valhere].checked = true;\n                 }\n                 } else if (keyhere.match(/(alert|oriented|confused|PUPIL_NORMAL)/)) {\n                 if (valhere =='1') {\n                 $('#'+keyhere).val(valhere).prop('checked', true);\n                 } else {\n                 $('#'+keyhere).val(valhere).prop('checked', false);\n                 }\n                 }\n                 });\n           }});\n}\nfunction dopopup(url) {\n    window.open(url, 'clinical', 'width=fullscreen,height=fullscreen,resizable=1,scrollbars=1,directories=0,titlebar=0,toolbar=0,location=0,status=0,menubar=0');\n}\nfunction goto_url(url) {\n    R =  url;\n    top.restoreSession();\n    location.href = R;\n}\n//is this used anywhere?  Looks like it should be deleted...\nfunction openImage() {\n    dlgopen(base+'/controller.php?document&retrieve&patient_id=3&document_id=10&as_file=false', '_blank', 600, 475);\n}\n\n// Called to open a document in another tab for this encounter.\nfunction openDocumentNewTab(doc_id) {\n    var url = '../../interface/patient_file/encounter/view_form.php?formname=' + formdir + '&id=' + formid;\n    if (formdir == 'newpatient' || !parent.twAddFrameTab) {\n        top.restoreSession();\n        location.href = url;\n    } else {\n        parent.twAddFrameTab('enctabs', formname, url);\n    }\n    return false;\n}\n\nfunction HPI_sync_heights() {\n    if ( ($('#PMSFH_block_1').height() > $('#PMH_left').height() ) ||\n         ($('#PMSFH_block_2').height() > $('#PMH_left').height()) )\n    {\n        if ($('#PMSFH_block_1').height() > $('#PMSFH_block_2').height()) {\n            heights = $('#PMSFH_block_1').height();\n        } else {\n            heights = $('#PMSFH_block_2').height();\n        }\n        $('#PMH_left').height(heights);\n        $('#PMH_right').height(heights)\n        $('#PMH_1').height(heights+20);\n    } else if ( $(\"#PMH_2\").hasClass('nodisplay') ) {\n        $('#PMH_1').height($('#HPI_1').height());\n    } else {\n        $('#PMH_1').height($('#PMH_2').height());\n    }\n}\n/**\n *  Keyboard shortcut commands.\n */\n\nshortcut.add(\"Control+T\",function() {\n             show_TEXT();\n             });\nshortcut.add(\"Meta+T\",function() {\n             show_TEXT();\n             });\nshortcut.add(\"Control+D\",function() {\n             show_DRAW();\n             });\nshortcut.add(\"Meta+D\",function() {\n             show_DRAW();\n             });\nshortcut.add(\"Control+P\",function() {\n             $(\"#PRIOR_ALL\").val($('#form_id').val()).trigger(\"change\");\n             });\nshortcut.add(\"Meta+P\",function() {\n             show_PRIORS();\n             $(\"#PRIOR_ALL\").val($('#form_id').val()).trigger(\"change\");\n             });\nshortcut.add(\"Control+B\",function() {\n             show_QP();\n             });\nshortcut.add(\"Meta+B\",function() {\n             show_QP();\n             });\nshortcut.add(\"Control+K\",function() {\n             show_KB();\n             });\nshortcut.add(\"Meta+K\",function() {\n             show_KB();\n             });\n$(function () {\n  /*\n   * this swallows backspace keys on the \"rx\" elements.\n   * stops backspace -> back a page in the browser, a very annoying thing indeed.\n   */\n  var rx = /INPUT|SELECT|TEXTAREA|SPAN|DIV/i;\n\n  $(document).bind(\"keydown keypress\", function(e){\n                   if( e.which == 8 ){ // 8 == backspace\n                   if(!rx.test(e.target.tagName) || e.target.disabled || e.target.readOnly ){\n                   e.preventDefault();\n                   }\n                   }\n                   });\n  });\n\n/**\n *  Function to update the PCP and referring person\n *\n */\nfunction update_DOCS() {\n    var url = \"../../forms/eye_mag/save.php?mode=update\";\n    top.restoreSession();\n    $.ajax({\n           type         : 'POST',\n           url          :  url,\n           data         : {\n             action       : 'docs',\n             pid          : $('#pid').val(),\n             pcp          : $('#form_PCP').val(),\n             rDOC         : $('#form_rDOC').val(),\n             form_id      : $('#form_id').val(),\n             encounter    : $('#encounter').val(),\n             uniqueID     : $('#uniqueID').val()\n           }\n           }).done(function(result) {\n                   if (result == \"Code 400\") {\n                   code_400(); //the user does not have write privileges!\n                   return;\n                   }\n                   obj = JSON.parse(result);\n                   build_DOCS(obj);\n    });\n}\n\n/**\n *  Function to update the PCP and Referring Doctors data.\n *  Initial use:  update data returned from an ajax call.\n */\nfunction build_DOCS(DOCS) {\n    if (DOCS['pcp']) {\n        $(\"#pcp_name\").html(DOCS['pcp']['name']);\n        $(\"#pcp_address\").html(DOCS['pcp']['address']);\n        $(\"#pcp_phone\").html(DOCS['pcp']['phone']);\n        $(\"#pcp_phonew2\").html(DOCS['pcp']['phone2']);\n        $(\"#pcp_fax\").html(DOCS['pcp']['fax']);\n        $(\"#pcp_fax_info\").html(DOCS['pcp']['fax_info']);\n    } else {\n        $(\"#pcp_name\").html('');\n        $(\"#pcp_address\").html('');\n        $(\"#pcp_phone\").html('');\n        $(\"#pcp_phonew2\").html('');\n        $(\"#pcp_fax\").html('');\n        $(\"#pcp_fax_info\").html('');\n    }\n    if (DOCS['ref']) {\n        $(\"#ref_name\").html(DOCS['ref']['name']);\n        $(\"#ref_address\").html(DOCS['ref']['address']);\n        $(\"#ref_phone\").html(DOCS['ref']['phone']);\n        $(\"#ref_phonew2\").html(DOCS['ref']['phonew2']);\n        $(\"#ref_fax\").html(DOCS['ref']['fax']);\n        $(\"#ref_fax_info\").html(DOCS['ref']['fax_info']);\n    } else {\n        $(\"#ref_name\").html('');\n        $(\"#ref_address\").html('');\n        $(\"#ref_phone\").html('');\n        $(\"#ref_phonew2\").html('');\n        $(\"#ref_fax\").html('');\n        $(\"#ref_fax_info\").html('');\n    }\n}\n\n/**\n *      Function to update the patient's current pharmacy\n */\n\nfunction  update_Pharma() {\n    //$(#form_pharmacy_id) has changed value, update the patient_data field pharmacy_id\n    var pharm = $(\"#form_pharmacy_id\").val();\n    var url = \"../../forms/eye_mag/save.php?mode=update\";\n    top.restoreSession();\n    $.ajax({\n        type         : 'POST',\n        url          :  url,\n        data         : {\n            action       : 'new_pharmacy',\n            pid          : $('#pid').val(),\n            form_id      : $('#form_id').val(),\n            encounter    : $('#encounter').val(),\n            uniqueID     : $('#uniqueID').val(),\n            pc_eid       : $(\"#pc_eid\").val(),\n            visit_date   : $(\"#visit_date\").val(),\n            new_pharmacy : pharm\n        }\n    }).done(function(result) {\n        if (result == \"Code 400\") {\n            code_400(); //the user does not have write privileges!\n            return;\n        }\n    });\n}\n\n\n/**\n *  Function to convert ophthalmic prescriptions between plus cylinder and minus cylinder\n *\n */\nfunction reverse_cylinder(target) {\n    //target can be revW1-5,AR,MR,CR,CTL,\n    var prefix;\n    var suffix;\n    if (target.match(/^(AR|MR|CR|CTL)$/)) {\n        prefix = target;\n        suffix = '';\n    }\n    if (target.match(/^revW[1-5]{1}$/)) { //matches on digit only, here 1-5\n        target = target.replace(\"revW\",\"\");\n        prefix = '';\n        suffix = '_'+target;\n    }\n    var Rsph  = $('#'+prefix+'ODSPH'+suffix).val();\n    var Rcyl  = $('#'+prefix+'ODCYL'+suffix).val();\n    var Raxis = $('#'+prefix+'ODAXIS'+suffix).val();\n    var Lsph  = $('#'+prefix+'OSSPH'+suffix).val();\n    var Lcyl  = $('#'+prefix+'OSCYL'+suffix).val();\n    var Laxis = $('#'+prefix+'OSAXIS'+suffix).val();\n    if (Rsph=='' && Rcyl =='' && Lsph=='' && lcyl =='') return;\n    if ((!Rcyl.match(/SPH/i)) && (Rcyl >'')) {\n        if (Rsph.match(/plano/i)) Rsph ='0';\n        Rsph = Number(Rsph);\n        Rcyl = Number(Rcyl);\n        Rnewsph = Rsph + Rcyl;\n        if (Rnewsph ==0) Rnewsph =\"PLANO\";\n        Rnewcyl = Rcyl * -1;\n        if (Rnewcyl > 0) Rnewcyl = \"+\"+Rnewcyl;\n        if (parseInt(Raxis) < 90) {\n            Rnewaxis = parseInt(Raxis) + 90;\n        } else {\n            Rnewaxis = parseInt(Raxis) - 90;\n        }\n        if (Rnewcyl=='0') Rnewcyl = \"SPH\";\n        if (Rnewsph =='0') {\n            Rnewsph =\"PLANO\";\n            if (Rnewcyl ==\"SPH\") Rnewcyl = '';\n        }\n        $('#'+prefix+'ODSPH'+suffix).val(Rnewsph);\n        $('#'+prefix+'ODCYL'+suffix).val(Rnewcyl);\n        $('#'+prefix+'ODAXIS'+suffix).val(Rnewaxis);\n        $('#'+prefix+'ODAXIS'+suffix).trigger('blur');\n        $('#'+prefix+'ODSPH'+suffix).trigger('blur');\n        $('#'+prefix+'ODCYL'+suffix).trigger('blur');\n    }\n    if ((!Lcyl.match(/SPH/i)) && (Lcyl >'')) {\n        if (!Lsph.match(/\\d/)) Lsph ='0';\n        Lsph = Number(Lsph);\n        Lcyl = Number(Lcyl);\n        Lnewsph = Lsph + Lcyl;\n        Lnewcyl = Lcyl * -1;\n        if (Lnewcyl > 0) Lnewcyl = \"+\"+ Lnewcyl;\n        if (parseInt(Laxis) < 90) {\n            Lnewaxis = parseInt(Laxis) + 90;\n        } else {\n            Lnewaxis = parseInt(Laxis) - 90;\n        }\n\n        if (Lnewcyl=='0') Lnewcyl = \"SPH\";\n        if (Lnewsph =='0') {\n            Lnewsph =\"PLANO\";\n            if (Lnewcyl ==\"SPH\") Lnewcyl = '';\n        }\n\n        $('#'+prefix+'OSSPH'+suffix).val(Lnewsph);\n        $('#'+prefix+'OSCYL'+suffix).val(Lnewcyl);\n        $('#'+prefix+'OSAXIS'+suffix).val(Lnewaxis);\n        $('#'+prefix+'OSAXIS'+suffix).trigger('blur');\n        $('#'+prefix+'OSSPH'+suffix).trigger('blur');\n        $('#'+prefix+'OSCYL'+suffix).trigger('blur');\n    }\n}\nfunction scrollTo(target) {\n  var offset;\n  var scrollSpeed = 500;\n  var wheight = $(window).height();\n  offset = $(\"#\"+target).offset().top - (wheight / 2)+200;\n  if (offset > (window.pageYOffset +150)||offset < (window.pageYOffset -150)) {\n    $('html, body').animate({scrollTop:offset}, scrollSpeed);\n  }\n}\n\nfunction update_appt_status(new_status) {\n  var url = \"../../forms/eye_mag/save.php?mode=update\";\n  top.restoreSession();\n  $.ajax({\n           type         : 'POST',\n           url          :  url,\n           data         : {\n           action       : 'new_appt_status',\n           pid          : $('#pid').val(),\n           form_id      : $('#form_id').val(),\n           encounter    : $('#encounter').val(),\n           uniqueID     : $('#uniqueID').val(),\n           pc_eid       : $(\"#pc_eid\").val(),\n           visit_date   : $(\"#visit_date\").val(),\n           new_status   : new_status\n           }\n           }).done(function(result) {\n                   if (result == \"Code 400\") {\n                   code_400(); //the user does not have write privileges!\n                   return;\n                   }\n                   });\n}\nfunction color_IOP(IOP){\n    if (!$.isNumeric(IOP.value)) return;\n    if (IOP.value  > '21')  {\n        $(IOP).css(\"background-color\",\"rgb(255, 153, 153)\");\n    }\n}\nfunction showpnotes(docid) {\n    let btnClose = 'Done';\n    let url = base+'/interface/patient_file/summary/pnotes.php?docid=' + encodeURIComponent(docid);\n    dlgopen(url, 'pno1', 'modal-xl', 500, '', '', {\n        buttons: [\n                {text: btnClose, close: true, style: 'default btn-sm'}\n            ],\n        sizeHeight: 'auto',\n        allowResize: true,\n        allowDrag: true,\n        dialogId: '',\n        type: 'iframe'\n    });\n    return false;\n}\nfunction getTimeStamp() {\n    var now = new Date();\n    var AMPM = now.getHours() >= 12 ? 'PM' : 'AM';\n    return now.getHours() + ':' + ((now.getMinutes() < 10) ? (\"0\" + now.getMinutes()) : (now.getMinutes())) + AMPM;\n}\n\n/**\n * This function is only run onload to hide sections per user preference.\n * Any changes during the encounter to display or hide a section are stored\n * as a previous setting and the next eye form opened will appear the same way.\n */\nfunction show_by_setting() {\n    var tabs_left = $(\"#setting_tabs_left\").val();\n    if (typeof tabs_left ==undefined) exit;\n    var arrSet = [\"HPI\",\"PMH\",\"EXT\",\"ANTSEG\",\"POSTSEG\",\"NEURO\",\"IMPPLAN\"];\n    sLen = arrSet.length;\n    for (i = 0; i < sLen; i++) {\n        var value = $(\"#setting_\"+arrSet[i]).val();\n        if (typeof value !== undefined && value !='1') {\n            $('#tabs-left-'+arrSet[i]).addClass('ui-state-default');\n            $(\"#setting_\"+arrSet[i]).val('0');\n            $(\"#\"+arrSet[i]+'_1').addClass('nodisplay');\n            $(\"#setting_\"+arrSet[i]).val('0');\n        } else {\n            $(\"#setting_\"+arrSet[i]).val('1');\n        }\n    }\n    if (tabs_left == '0') {\n        $(\"#tabs_left\").addClass('nodisplay');\n    } else {\n        $(\"#tabs_left\").removeClass('nodisplay');\n    }\nshow_left();\n    return true;\n}\n\n$(function () {\n                  check_lock();\n\n                  var allPanels = $('.building_blocks > dd').hide();\n                  var allPanels2 = $('.building_blocks2 > dd').hide();\n                  refresh_page();\n\n                // AUTO- CODING FEATURES\n                  check_CPT_92060();\n                  check_exam_detail();\n                  hide_DRAW();\n                  hide_right();\n                //alert('Suggest a Code');\n                  Suggest_visit_code();\n                  show_QP_section('IMPPLAN','1');\n\n\n                  //on checking TESTS, show modifiers and justifier fields\n                  $(\".TESTS\").on(\"click\", function() {\n                    var test_id = this.id;\n                    if  ($(this).is(':checked')) {\n                      $(\"#\"+test_id+\"_justmods\").removeClass('nodisplay');\n                        $(\"#\"+test_id+\"_modifier\").val('59');\n//make vist_modifier 25 light up too...\n                      $(this).parent().removeClass('lights_off').addClass('lights_on');\n                    } else {\n                      $(\"#\"+test_id+\"_justmods\").addClass('nodisplay');\n                      $(this).parent().removeClass('lights_on').addClass('lights_off');\n                    }\n\n                  });\n                  $('[title]').tooltip();\n                  $('#form_PCP,#form_rDOC').on('change', function() {\n                                                   update_DOCS();\n                                                   });\n\n                  $(\"#form_pharmacy_id\").change(function() {\n                        update_Pharma();\n                  });\n\n                  $('#tooltips_status').html($('#PREFS_TOOLTIPS').val());\n                  if ($(\"#PREFS_TOOLTIPS\").val() == \"<?php echo xla('Off'); ?>\") {\n                    $('[title]').each(function() {\n                        var $this = $(this);\n                        $this.data('title',$this.attr('title'));\n                        $this.attr('title', '');\n                    });\n                  }\n                  $('#tooltips_toggle,#tooltips_status').on('click', function() {\n                                                               if ($(\"#PREFS_TOOLTIPS\").val() == \"<?php echo xla('On'); ?>\") {\n                                                               $('#PREFS_TOOLTIPS').val('<?php echo xla('Off'); ?>');\n                                                               $(\"#tooltips_status\").html('<?php echo xla('are off'); ?>');\n                                                               $('[title]').each(function() {\n                                                                   var $this = $(this);\n                                                                   $this.data('title',$this.attr('title'));\n                                                                   $this.attr('title', '');\n                                                               });\n                                                               } else {\n                                                               $('#PREFS_TOOLTIPS').val('<?php echo xla('On'); ?>');\n                                                               $('#tooltips_status').html('<?php echo xla('are on'); ?>');\n                                                               $('[title]').each(function() {\n                                                                   var $this = $(this);\n                                                                   $this.attr('title', $this.data('title'));\n                                                               });\n                                                               }\n                                                               update_PREFS();\n                                                               });\n                  $('#toggle_drugs').on('click', function(){\n                                           $('.hideme_drugs').toggleClass('nodisplay');\n                                           $(this).find('i').toggleClass('fa-toggle-down fa-toggle-up')\n                                           return false;\n                                           });\n                  $('#toggle_VFs').on('click', function(){\n                                         $('.hideme_VFs').toggleClass('nodisplay');\n                                         $(this).find('i').toggleClass('fa-toggle-down fa-toggle-up')\n                                         return false;\n                                         });\n                  $('#toggle_OCTs').on('click', function(){\n                                          $('.hideme_OCTs').toggleClass('nodisplay');\n                                          $(this).find('i').toggleClass('fa-toggle-down fa-toggle-up')\n                                          return false;\n                                          });\n                  $('#toggle_cups').on('click', function(){\n                                          $('.hideme_cups').toggleClass('nodisplay');\n                                          $(this).find('i').toggleClass('fa-toggle-down fa-toggle-up')\n                                          return false;\n                                          });\n                  $('#toggle_gonios').on('click', function(){\n                                            $('.hideme_gonios').toggleClass('nodisplay');\n                                            $(this).find('i').toggleClass('fa-toggle-down fa-toggle-up')\n                                            return false;\n                                            });\n                  $('.close').on('click', function(){\n                                    $('#GFS_accordion .hide').slideUp();\n                                    });\n                  $('#ODIOPTARGET').on('change', function() {\n                                           $('#OSIOPTARGET').val($('#ODIOPTARGET').val());\n                                           refresh_GFS();\n                                           });\n                  $('#ODIOPAP,#OSIOPAP,#ODIOPTARGET,#ODIOPTPN,#OSIOPTPN,#OSIOPTARGET').on('change', function() {\n                                                             //this is failing if there is no config_by_day variable.\n                                                             refresh_GFS();\n                                                             });\n                  if ($(\"#PREFS_KB\").val() =='1') {\n                    $(\".kb\").removeClass('nodisplay');\n                    $(\".kb_off\").addClass('nodisplay');\n                  } else {\n                    $(\".kb\").addClass('nodisplay');\n                    $(\".kb_off\").removeClass('nodisplay');\n                  }\n\n                  $(\"[name$='_kb']\").on('click', function() {\n                                           $('.kb').toggleClass('nodisplay');\n                                           $('.kb_off').toggleClass('nodisplay');\n                                           $('.copier').toggleClass('nodisplay');\n                                           if ($('#PREFS_EXAM').val() == 'DRAW') {\n                                                show_TEXT();\n                                           }\n\n                                           if ($(\"#PREFS_KB\").val() > 0) {\n                                           $(\"#PREFS_KB\").val('0');\n                                           } else {\n                                           $(\"#PREFS_KB\").val('1');\n                                           }\n                                           update_PREFS();\n                                           });\n                  $('.ke').on('mouseover', function() {\n                                     $(this).toggleClass('yellow');\n                                     });\n                  $('.ke').on('mouseout', function() {\n                                    $(this).toggleClass('yellow');\n                                    });\n                  $(\"[id$='_keyboard'],[id$='_keyboard_left']\").on('keydown', function(e) {\n                                                                   //this is the Shorthand engine's ignition\n                                                                   if (e.which == 13|| e.keyCode == 13||e.which == 9|| e.keyCode == 9) {\n                                                                   e.preventDefault();\n                                                                   var data_all = $(this).val();\n                                                                   var data_seg = data_all.match(/([^;]*)/gm);\n                                                                   var field2 ='';\n                                                                   var appendix =\".a\";\n                                                                   var zone;\n                                                                   for (index=0; index < data_seg.length; ++index) {\n                                                                     if (data_seg[index] =='') continue;\n                                                                     data_seg[index] = data_seg[index].replace(/^[\\n\\v\\f\\r\\x85\\u2028\\u2029\\W]*/,'');\n                                                                     data_seg[index] = data_seg[index].replace(/^[\\s]*/,'');\n                                                                     if (data_seg[index].match(/^D($|;)/i)) {\n                                                                     $(\"#EXT_defaults\").trigger(\"click\");\n                                                                     $(\"#ANTSEG_defaults\").trigger(\"click\");\n                                                                     $(\"#RETINA_defaults\").trigger(\"click\");\n                                                                     $(\"#NEURO_defaults\").trigger(\"click\");\n                                                                     continue;\n                                                                     }\n                                                                     if (data_seg[index].match(/^DEXT($|;)/i)) {\n                                                                     $(\"#EXT_defaults\").trigger(\"click\");\n                                                                     continue;\n                                                                     }\n                                                                     if (data_seg[index].match(/^DANTSEG($|;)/i)) {\n                                                                     $(\"#ANTSEG_defaults\").trigger(\"click\");\n                                                                     continue;\n                                                                     }\n                                                                     if (data_seg[index].match(/^DAS($|;)/i)) {\n                                                                     $(\"#ANTSEG_defaults\").trigger(\"click\");\n                                                                     continue;\n                                                                     }\n                                                                     if (data_seg[index].match(/^DRETINA($|;)/i)) {\n                                                                     $(\"#RETINA_defaults\").trigger(\"click\");\n                                                                     continue;\n                                                                     }\n                                                                     if (data_seg[index].match(/^DRET($|;)/i)) {\n                                                                     $(\"#RETINA_defaults\").trigger(\"click\");\n                                                                     continue;\n                                                                     }\n                                                                     if (data_seg[index].match(/^DNEURO($|;)/i)) {\n                                                                     $(\"#NEURO_defaults\").trigger(\"click\");\n                                                                     continue;\n                                                                    }\n                                                                   if ((data_seg[index].match(/^CLEAREXT($|;)/i))||\n                                                                       (data_seg[index].match(/^CEXT($|;)/i)))  {\n                                                                        $(\".EXT\").val('');\n                                                                        continue;\n                                                                   }\n                                                                   if ((data_seg[index].match(/^CLEARAS($|;)/i))||\n                                                                       (data_seg[index].match(/^CLEARANTSEG($|;)/i))||\n                                                                       (data_seg[index].match(/^CANTSEG($|;)/i))||\n                                                                       (data_seg[index].match(/^CANT($|;)/i))||\n                                                                       (data_seg[index].match(/^CAS($|;)/i))) {\n                                                                          $(\".ANTSEG\").val('');\n                                                                          continue;\n                                                                   }\n                                                                   if ((data_seg[index].match(/^CLEARRET($|;)/i))||\n                                                                       (data_seg[index].match(/^CRET($|;)/i)) ||\n                                                                       (data_seg[index].match(/^CLEARRETINA($|;)/i))||\n                                                                       (data_seg[index].match(/^CRETINA($|;)/i)))  {\n                                                                        $(\".RETINA\").val('');\n                                                                        continue;\n                                                                   }\n\n                                                                   appendix=\".a\";\n                                                                   var data = data_seg[index].match(/^(\\w*)\\:?(.*)/);\n                                                                   (data[2].match(/\\.a$/))?(data[2] = data[2].replace(/\\.a$/,'')):(appendix = \"nope\");\n                                                                   var field = data[1].toUpperCase();\n                                                                   var text = data[2];\n                                                                   text = expand_vocab(text);\n                                                                   priors = process_kb(field,text,appendix,prior_field,prior_text);\n                                                                   prior_field = priors['field'];\n                                                                   prior_text = priors['prior_text'];\n\n                                                                   }\n                                                                   submit_form('2');\n                                                                   $(this).val('');\n\n                                                                   }\n                                                                   });\n                  $(\"[id^='sketch_tools_']\").click(function() {\n                        var zone = this.id.match(/sketch_tools_(.*)_/)[1];\n                        $(\"[id^='sketch_tools_\"+zone+\"']\").css(\"height\",\"30px\");\n                        $(this).css(\"height\",\"50px\");\n                        $(\"#sketch_tool_\"+zone+\"_color\").css(\"background-image\",\"\").css(\"background-color\",$(\"#selColor_\"+zone).val());\n                  });\n                  $(\"[id^='sketch_sizes_']\").click(function() {\n                        var zone = this.id.match(/sketch_sizes_(.*)_/)[1];\n                        $(\"[id^='sketch_sizes_\"+zone+\"']\").css(\"background\",\"\").css(\"border-bottom\",\"\");\n                        $(this).css(\"border-bottom\",\"2pt solid black\");\n                  });\n\n\n                  //  Here we get CC1 to show\n                  $(\".tab_content\").addClass('nodisplay');\n                  $(\"#tab1_CC_text\").removeClass('nodisplay');\n                  $(\"#tab1_HPI_text\").removeClass('nodisplay');\n                  $(\"[id$='_CC'],[id$='_HPI_tab']\").on('click', function() {\n                                                          //  First remove class \"active\" from currently active tabs\n                                                          $(\"[id$='_CC']\").removeClass('active');\n                                                          $(\"[id$='_HPI_tab']\").removeClass('active');\n                                                          //  Hide all tab content\n                                                          $(\".tab_content\").addClass('nodisplay');\n                                                          //  Here we get the href value of the selected tab\n                                                          var selected_tab = $(this).find(\"a\").attr(\"href\");\n                                                          //  Now add class \"active\" to the selected/clicked tab and content\n                                                          $(selected_tab+\"_CC\").addClass('active');\n                                                          $(selected_tab+\"_CC_text\").removeClass('nodisplay');\n                                                          $(selected_tab+\"_HPI_tab\").addClass('active');\n                                                          $(selected_tab+\"_HPI_text\").removeClass('nodisplay');\n                                                          //  At the end, we add return false so that the click on the link is not executed\n                                                          return false;\n                                                          });\n                  $(\"input,textarea,text\").css(\"background-color\",\"#FFF8DC\");\n                  $(\"[id*=ODIOP],[id*=OSIOP]\").each(function() { color_IOP(this); });\n                  $(\"#IOPTIME\").css(\"background-color\",\"#FFFFFF\");\n                  $(\"#refraction_width\").css(\"width\",\"8.5in\");\n                  $(\".Draw_class\").addClass('nodisplay');\n                  $(\".PRIORS_class\").addClass('nodisplay');\n                  $(window).on(\"resize\", function() {\n                                   if (window.innerWidth >'900') {\n                                   $(\"#refraction_width\").css(\"width\",\"900px\");\n                                   $(\"#LayerVision2\").css(\"padding\",\"4px\");\n                                   }\n                                   if (window.innerWidth >'1300') {\n                                   $(\"#refraction_width\").css(\"width\",\"1300px\");\n                                   //$(\"#first\").css(\"width\",\"1300px\");\n                                   }\n                                   if (window.innerWidth >'1900') {\n                                   $(\"#refraction_width\").css(\"width\",\"1600px\");\n                                   }\n\n                                   });\n                  $(window).resize();\n\n                  var hash_tag = '<i class=\"fa fa-minus\"></i>';\n                  var index;\n                  // display any stored MOTILITY values\n                  $(\"#MOTILITY_RS\").value = parseInt($(\"#MOTILITY_RS\").val());\n                  if ($(\"#MOTILITY_RS\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_RS\").val()); ++index) {\n                  $(\"#MOTILITY_RS_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_RI\").value = parseInt($(\"#MOTILITY_RI\").val());\n                  if ($(\"#MOTILITY_RI\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_RI\").val()); ++index) {\n                  $(\"#MOTILITY_RI_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_LS\").value = parseInt($(\"#MOTILITY_LS\").val());\n                  if ($(\"#MOTILITY_LS\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_LS\").val()); ++index) {\n                  $(\"#MOTILITY_LS_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_LI\").value = parseInt($(\"#MOTILITY_LI\").val());\n                  if ($(\"#MOTILITY_LI\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_LI\").val()); ++index) {\n                  $(\"#MOTILITY_LI_\"+index).html(hash_tag);\n                  }\n                  }\n\n                  $(\"#MOTILITY_RRSO\").value = parseInt($(\"#MOTILITY_RRSO\").val());\n                  if ($(\"#MOTILITY_RRSO\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_RRSO\").val()); ++index) {\n                  $(\"#MOTILITY_RRSO_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_RRIO\").value = parseInt($(\"#MOTILITY_RRIO\").val());\n                  if ($(\"#MOTILITY_RRIO\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_RRIO\").val()); ++index) {\n                  $(\"#MOTILITY_RRIO_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_RLIO\").value = parseInt($(\"#MOTILITY_RLIO\").val());\n                  if ($(\"#MOTILITY_RLIO\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_RLIO\").val()); ++index) {\n                  $(\"#MOTILITY_RLIO_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_RLSO\").value = parseInt($(\"#MOTILITY_RLSO\").val());\n                  if ($(\"#MOTILITY_RLSO\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_RLSO\").val()); ++index) {\n                  $(\"#MOTILITY_RLSO_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_LRSO\").value = parseInt($(\"#MOTILITY_LRSO\").val());\n                  if ($(\"#MOTILITY_LRSO\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_LRSO\").val()); ++index) {\n                  $(\"#MOTILITY_LRSO_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_LRIO\").value = parseInt($(\"#MOTILITY_LRIO\").val());\n                  if ($(\"#MOTILITY_LRIO\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_LRIO\").val()); ++index) {\n                  $(\"#MOTILITY_LRIO_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_LLSO\").value = parseInt($(\"#MOTILITY_LLSO\").val());\n                  if ($(\"#MOTILITY_LLSO\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_LLSO\").val()); ++index) {\n                  $(\"#MOTILITY_LLSO_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_LLIO\").value = parseInt($(\"#MOTILITY_LLIO\").val());\n                  if ($(\"#MOTILITY_LLIO\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_LLIO\").val()); ++index) {\n                  $(\"#MOTILITY_LLIO_\"+index).html(hash_tag);\n                  }\n                  }\n\n                  var hash_tag = '<i class=\"fa fa-minus rotate-left\"></i>';\n                  $(\"#MOTILITY_LR\").value = parseInt($(\"#MOTILITY_LR\").val());\n                  if ($(\"#MOTILITY_LR\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_LR\").val()); ++index) {\n                  $(\"#MOTILITY_LR_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_LL\").value = parseInt($(\"#MOTILITY_LL\").val());\n                  if ($(\"#MOTILITY_LL\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_LL\").val()); ++index) {\n                  $(\"#MOTILITY_LL_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_RR\").value = parseInt($(\"#MOTILITY_RR\").val());\n                  if ($(\"#MOTILITY_RR\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_RR\").val()); ++index) {\n                  $(\"#MOTILITY_RR_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_RL\").value = parseInt($(\"#MOTILITY_RL\").val());\n                  if ($(\"#MOTILITY_RL\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_RL\").val()); ++index) {\n                  $(\"#MOTILITY_RL_\"+index).html(hash_tag);\n                  }\n                  }\n\n                  $(\".chronic_HPI,.count_HPI\").on(\"blur\", function() {\n                                                    check_exam_detail();\n                                                    });\n                  // Dilation status\n                  $(\"#DIL_RISKS\").on('change', function(o) {\n                                         ($(this).is(':checked')) ? ($(\".DIL_RISKS\").removeClass(\"nodisplay\")) : ($(\".DIL_RISKS\").addClass(\"nodisplay\"));\n                                         check_exam_detail();\n                                         });\n                  $(\".dil_drug\").on('change', function(o) {\n                                        if ($(this).is(':checked')) {\n                                            $(\"#DIL_RISKS\").prop(\"checked\",\"checked\");\n                                            check_exam_detail();\n                                            var timestamp = getTimeStamp();\n                                            $(\"#DIL_MEDS\").val(timestamp);\n                                        }});\n\n                  //neurosens exam = stereopsis + strab||NPC||NPA||etc\n                  $(\".neurosens,.neurosens2\").on(\"blur\", function() {\n                                                   check_CPT_92060();\n                                                   });\n\n                  //  functions to improve flow of refraction input\n                  $(\"input[name$='PRISM'],input[class^='prism']\").on(\"blur\", function() {\n                                                                       //make it all caps\n                                                                       var str = $(this).val();\n                                                                       str = str.toUpperCase();\n                                                                       $(this).val(str);\n                                                                       });\n                  $('input[class^=\"sphere\"],input[name$=\"SPH\"]').on(\"blur\", function() {\n                                                                      var mid = $(this).val();\n                                                                      if (mid.match(/PLANO/i)) {\n                                                                      $(this).val('PLANO');\n                                                                      return;\n                                                                      }\n                                                                      if (mid.match(/^[\\+\\-]?\\d{1}$/)) {\n                                                                      mid = mid+\".00\";\n                                                                      }\n                                                                      if (mid.match(/\\.[27]$/)) {\n                                                                      mid = mid + '5';\n                                                                      }\n                                                                      if (mid.match(/\\.\\d$/)) {\n                                                                      mid = mid + '0';\n                                                                      }\n                                                                      //if near is +2. make it +2.00\n                                                                      if (mid.match(/\\.$/)) {\n                                                                      mid= mid + '00';\n                                                                      }\n                                                                      if ((!mid.match(/\\./))&&(mid.match(00|25|50|75))) {\n                                                                      var front = mid.match(/(\\d{0,2})(00|25|50|75)/)[1];\n                                                                      var back = mid.match(/(\\d{0,2})(00|25|50|75)/)[2];\n                                                                      if (front =='') front ='0';\n                                                                      mid = front + \".\" + back;\n                                                                      }\n                                                                      if (!mid.match(/\\./)) {\n                                                                      var front = mid.match(/([\\+\\-]?\\d{0,2})(\\d{2})/)[1];\n                                                                      var back  = mid.match(/(\\d{0,2})(\\d{2})/)[2];\n                                                                      if (front =='') front ='0';\n                                                                      if (front =='-') front ='-0';\n                                                                      mid = front + \".\" + back;\n                                                                      }\n                                                                      if (!mid.match(/^(\\+|\\-){1}/)) {\n                                                                      mid = \"+\" + mid;\n                                                                      }\n                                                                      $(this).val(mid);\n                                                                      });\n\n                  $(\"input[class^='presbyopia'],input[name$='ADD'],#ODADD_1,#ODADD_2,#OSADD_1,#OSADD_2\").on(\"blur\", function() {\n                                                                                                              var add = $(this).val();\n                                                                                                              add = add.replace(/=/g,\"+\");\n                                                                                                              //if add is one digit, eg. 2, make it +2.00\n                                                                                                              if (add.match(/^\\d{1}$/)) {\n                                                                                                              add = \"+\"+add+\".00\";\n                                                                                                              }\n                                                                                                              //if add is '+'one digit, eg. +2, make it +2.00\n                                                                                                              if (add.match(/^\\+\\d{1}$/)) {\n                                                                                                              add = add+\".00\";\n                                                                                                              }\n                                                                                                              //if add is 2.5 or 2.0 make it 2.50 or 2.00\n                                                                                                              if (add.match(/\\.[05]$/)) {\n                                                                                                              add = add + '0';\n                                                                                                              }\n                                                                                                              //if add is 2.2 or 2.7 make it 2.25 or 2.75\n                                                                                                              if (add.match(/\\.[27]$/)) {\n                                                                                                              add = add + '5';\n                                                                                                              }\n                                                                                                              //if add is +2. make it +2.00\n                                                                                                              if (add.match(/\\.$/)) {\n                                                                                                              add = add + '00';\n                                                                                                              }\n                                                                                                              if ((!add.match(/\\./))&&(add.match(/(0|25|50|75)$/))) {\n                                                                                                              var front = add.match(/([\\+]?\\d{0,1})(00|25|50|75)/)[1];\n                                                                                                              var back  = add.match(/([\\+]?\\d{0,1})(00|25|50|75)/)[2];\n                                                                                                              if (front =='') front ='0';\n                                                                                                              add = front + \".\" + back;\n                                                                                                              }\n                                                                                                              if (!add.match(/^(\\+)/) && (add.length >  0)) {\n                                                                                                              add= \"+\" + add;\n                                                                                                              }\n                                                                                                              $(this).val(add);\n                                                                                                              if (this.id==\"ODADD_1\") $('#OSADD_1').val(add);\n                                                                                                              if (this.id==\"ODMIDADD_1\") $('#OSMIDADD_1').val(add);\n                                                                                                              if (this.id==\"ODADD_2\") $('#OSADD_2').val(add);\n                                                                                                              if (this.id==\"ODMIDADD_2\") $('#OSMIDADD_2').val(add);\n                                                                                                              if (this.id==\"ODADD_3\") $('#OSADD_3').val(add);\n                                                                                                              if (this.id==\"ODMIDADD_3\") $('#OSMIDADD_3').val(add);\n                                                                                                              if (this.id==\"ODADD_4\") $('#OSADD_4').val(add);\n                                                                                                              if (this.id==\"ODMIDADD_4\") $('#OSMIDADD_4').val(add);\n                                                                                                              if (this.id==\"ODADD_5\") $('#OSADD_5').val(add);\n                                                                                                              if (this.id==\"ODMIDADD_5\") $('#OSMIDADD_5').val(add);\n                                                                                                              if (this.id==\"MRODADD\") $('#MROSADD').val(add);\n                                                                                                              if (this.id==\"ARODADD\") $('#AROSADD').val(add);\n                                                                                                              if (this.id==\"CTLODADD\") $('#CTLOSADD').val(add);\n                                                                                                              });\n\n                  $(\"input[class^='axis'],input[name$='AXIS']\").on(\"blur\", function() {\n                                                                     // Make this a 3 digit leading zeros number.\n                                                                     // we are not translating text to numbers, just numbers to\n                                                                     // a 3 digit format with leading zeroes as needed.\n                                                                     // assume the end user KNOWS there are only numbers presented and\n                                                                     // more than 3 digits is a mistake...\n                                                                     // (although this may change with topography)\n                                                                     var axis = $(this).val();\n                                                                     if (this.name.match(/K2AXIS/)) {\n                                                                         var group = this.name.replace(\"AXIS\", \"\");\n                                                                     } else {\n                                                                         var group = this.name.replace(\"AXIS\", \"CYL\");\n                                                                     }\n                                                                     var cyl = $(\"#\"+group).val();\n                                                                     if ( (cyl > '') && (cyl != 'SPH') ) {\n                                                                     if (!axis.match(/\\d\\d\\d/)) {\n                                                                     if (!axis.match(/\\d\\d/)) {\n                                                                     if (!axis.match(/\\d/)) {\n                                                                     axis = '0';\n                                                                     }\n                                                                     axis = '0' + axis;\n                                                                     }\n                                                                     axis = '0' + axis;\n                                                                     }\n                                                                     } else {\n                                                                     axis = '';\n                                                                     }\n                                                                     //we can utilize a phoropter dial feature, we can start them at their age appropriate with/against the rule value.\n                                                                     //requires touch screen. requires complete touch interface development. Exists in refraction lanes. Would\n                                                                     //be nice to tie them all together.  Would require manufacturers to publish their APIs to communicate with\n                                                                     //the devices.\n                                                                     $(this).val(axis);\n                                                                     });\n                  $(\"input[class^='cylinder'],input[name$='CYL']\").on(\"blur\", function() {\n                                                                        var mid = $(this).val();\n                                                                        var group = this.name.replace(\"CYL\", \"SPH\");;\n                                                                        var sphere = $(\"#\"+group).val();\n                                                                        if (((mid.length == 0) && (sphere.length >  0))||(mid.match(/sph/i))) {\n                                                                        $(this).val('SPH');\n                                                                        if (sphere.match(/plano/i)) $(this).val('');\n                                                                        var axis = this.name.replace(\"CYL\", \"AXIS\");\n                                                                        $(\"#\"+axis).val('');\n                                                                        submit_form($(this));\n                                                                        return;\n                                                                        } else if (sphere.length >  0) {\n                                                                        if (mid.match(/^[\\+\\-]?\\d{1}$/)) {\n                                                                        mid = mid+\".00\";\n                                                                        }\n                                                                        if (mid.match(/^(\\d)(\\d)$/)) {\n                                                                        mid = mid[0] + '.' +mid[1];\n                                                                        }\n\n                                                                        //if mid is 2.5 or 2.0 make it 2.50 or 2.00\n                                                                        if (mid.match(/\\.[05]$/)) {\n                                                                        mid = mid + '0';\n                                                                        }\n                                                                        //if mid is 2.2 or 2.7 make it 2.25 or 2.75\n                                                                        if (mid.match(/\\.[27]$/)) {\n                                                                        mid = mid + '5';\n                                                                        }\n                                                                        //if mid is +2. make it +2.00\n                                                                        if (mid.match(/\\.$/)) {\n                                                                        mid = mid + '00';\n                                                                        }\n                                                                        if (mid.match(/([\\+\\-]?\\d{0,2})\\.?(00|25|50|75)/)) {\n                                                                        var front = mid.match(/([\\+\\-]?\\d{0,2})\\.?(00|25|50|75)/)[1];\n                                                                        var back  = mid.match(/([\\+\\-]?\\d{0,2})\\.?(00|25|50|75)/)[2];\n                                                                        if (front =='') front ='0';\n                                                                        mid = front + \".\" + back;\n                                                                        }\n                                                                        if (!$('#PREFS_CYL').val()) {\n                                                                        $('#PREFS_CYL').val('+');\n                                                                        update_PREFS();\n                                                                        }\n                                                                        if (!mid.match(/^(\\+|\\-){1}/) && (sphere.length >  0)) {\n                                                                        //no +/- sign at the start of the field.\n                                                                        //ok so there is a preference set\n                                                                        //Since it doesn't start with + or - then give it the preference value\n                                                                        mid = $('#PREFS_CYL').val() + mid;\n                                                                        } else if (mid.match(/^(\\+|\\-){1}/)) {\n                                                                        pref = mid.match(/^(\\+|\\-){1}/)[0];\n                                                                        //so they used a value + or - at the start of the field.\n                                                                        //The only reason to work on this is to change to cylinder preference\n                                                                        if ($('#PREFS_CYL').val() != pref){\n                                                                        //and that is what they are doing here\n                                                                        $('#PREFS_CYL').val(pref);\n                                                                        update_PREFS();\n                                                                        }\n                                                                        }\n                                                                        $(this).val(mid);\n                                                                        }\n                                                                        });\n                  //bootstrap menu functions\n                  $(\"[class='dropdown-toggle']\").hover(function(){\n                                                       $(\"[class='dropdown-toggle']\").parent().removeClass('open');\n                                                       var menuitem = this.id.match(/(.*)/)[1];\n                                                       //if the menu is active through a prior click, show it\n                                                       // Have to override Bootstrap then\n                                                       if ($(\"#menustate\").val() !=\"1\") { //menu not active -> ignore\n                                                       $(\"#\"+menuitem).css(\"background-color\", \"#C9DBF2\");\n                                                       $(\"#\"+menuitem).css(\"color\",\"#000\"); /*#262626;*/\n                                                       } else { //menu is active -> respond\n                                                       $(\"#\"+menuitem).css(\"background-color\", \"#1C5ECF\");\n                                                       $(\"#\"+menuitem).css(\"color\",\"#fff\"); /*#262626;*/\n                                                       $(\"#\"+menuitem).css(\"text-decoration\",\"none\");\n                                                       $(\"#\"+menuitem).parent().addClass('open');\n                                                       }\n                                                       },function() {\n                                                       var menuitem = this.id.match(/(.*)/)[1];\n                                                       $(\"#\"+menuitem).css(\"color\",\"#000\"); /*#262626;*/\n                                                       $(\"#\"+menuitem).css(\"background-color\", \"#C9DBF2\");\n                                                       }\n                                                       );\n                  $(\"[class='dropdown-toggle']\").on('click', function() {\n                                                       $(\"#menustate\").val('1');\n                                                       var menuitem = this.id.match(/(.*)/)[1];\n                                                       $(\"#\"+menuitem).css(\"background-color\", \"#1C5ECF\");\n                                                       $(\"#\"+menuitem).css(\"color\",\"#fff\"); /*#262626;*/\n                                                       $(\"#\"+menuitem).css(\"text-decoration\",\"none\");\n                                                       });\n                  $(\"#right-panel-link, #close-panel-bt,#right-panel-link_2\").on('click', function() {\n                                                                                    if ($(\"#PREFS_PANEL_RIGHT\").val() =='1') {\n                                                                                    $(\"#PREFS_PANEL_RIGHT\").val('0');\n                                                                                    } else {\n                                                                                    $(\"#PREFS_PANEL_RIGHT\").val('1');\n                                                                                    }\n                                                                                    update_PREFS();\n                                                                                    });\n                  $(\"[name^='menu_']\").on('click', function() {\n                                             $(\"[name^='menu_']\").removeClass('active');\n                                             var menuitem = this.id.match(/menu_(.*)/)[1];\n                                             $(this).addClass('active');\n                                             $(\"#menustate\").val('1');\n                                             if (menuitem =='left_tabs') {\n                                                var tabs_left = $(\"#setting_tabs_left\").val();\n                                                if (tabs_left == '1') {\n                                                    $(\"#tabs_left\").addClass('nodisplay');\n                                                    $(\"#setting_tabs_left\").val('0');\n                                                } else {\n                                                    $(\"#tabs_left\").removeClass('nodisplay');\n                                                    $(\"#setting_tabs_left\").val('1');\n                                                }\n                                                update_PREFS();\n                                             } else {\n                                                 $(\"#BUTTON_TAB_\"+menuitem).trigger('click');\n                                                 $(\"#tabs-left-\"+menuitem).trigger('click');\n                                                 menu_select(menuitem);\n                                            }\n                    });\n\n                  // set display functions for Draw panel appearance\n                  // for each DRAW area, if the value AREA_DRAW = 1, show it.\n                  var zones = [\"PMH\",\"HPI\",\"EXT\",\"ANTSEG\",\"POSTSEG\",\"NEURO\",\"IMPPLAN\"];\n                  for (index = '0'; index < zones.length; ++index) {\n                    if ($(\"#PREFS_\"+zones[index]+\"_RIGHT\").val() =='DRAW') {\n                        show_DRAW_section(zones[index]);\n                    } else if ($(\"#PREFS_\"+zones[index]+\"_RIGHT\").val() =='QP') {\n                        show_QP_section(zones[index],'1');\n                    }\n                  }\n                  $(\"body\").on(\"click\",\"[name$='_text_view']\" , function() {\n                               var header = this.id.match(/(.*)_text_view$/)[1];\n                               $(\"#\"+header+\"_text_list\").toggleClass('wide_textarea');\n                               $(\"#\"+header+\"_text_list\").toggleClass('narrow_textarea');\n                               $(this).toggleClass('fa-plus-square-o');\n                               $(this).toggleClass('fa-minus-square-o');\n                               if (header != /PRIOR/) {\n                               var imagine = $(\"#PREFS_\"+header+\"_VIEW\").val();\n                               imagine ^= true;\n                               $(\"#PREFS_\"+header+\"_VIEW\").val(imagine);\n                               update_PREFS();\n                              }\n                               return false;\n                               });\n                  $(\"body\").on(\"change\", \"select\", function(e){\n                            if (this.name.match(/PRIOR_(.*)/)) {\n                                var new_section = this.name.match(/PRIOR_(.*)/);\n                                var newValue = this.value;\n                                if (new_section[1] =='') return;\n                                if (new_section[1].match(/_canvas/)) {\n                                    goto_section = new_section[1].match(/_canvas/)[1];\n                                    show_PRIOR_CANVAS_section(goto_section,newValue);\n                                    return;\n                                }\n\n                                if (new_section[1] == /\\_/){\n                                    return;\n                                }\n                                var newValue = this.value;\n                                if (newValue == $(\"#form_id\").val()) {\n                                   if (new_section[1] ==\"ALL\") {\n                                     //click updates prefs too\n                                     $('#EXAM_QP').trigger(\"click\");\n\n                                   } else {\n                                      $('#BUTTON_QP_'+new_section[1]).trigger(\"click\").trigger(\"click\");//double click intended RM\n                                   }\n                                 $(\"#LayerTechnical_sections_1\").css(\"clear\",\"both\");\n                                 return;\n                                }\n                                //now go get the prior page via ajax\n                                $(\"#PRIORS_\"+ new_section[1] +\"_left_text\").removeClass('nodisplay');\n                                $(\"#DRAWS_\" + new_section[1] + \"_right\").addClass('nodisplay');\n                                $(\"#QP_\" + new_section[1]).addClass('nodisplay');\n\n                                if (new_section[1] ==\"ALL\") {\n                                    show_PRIORS();\n                                    show_PRIORS_section(\"ALL\",newValue);\n                                    show_PRIORS_section(\"EXT\",newValue);\n                                    show_PRIORS_section(\"ANTSEG\",newValue);\n                                    show_PRIORS_section(\"RETINA\",newValue);\n                                    show_PRIORS_section(\"NEURO\",newValue);\n                                    show_PRIORS_section(\"IMPPLAN\",newValue);\n                                    scrollTo(\"EXT_left\");\n                                } else {\n                                    show_PRIORS_section(new_section[1],newValue);\n                                }\n                            }\n                        });\n\n\n$(\"body\").on(\"click\",\"[name^='old_canvas']\", function() {\n//get zone\n//het h.step from SELECT_CANVAS_\" . attr($zone) . \"\n    var h = $(this).data();\n    var target = h.target;\n    var direction = h.direction;\n    var select = document.getElementById(target);\n    var len = select.getElementsByTagName('option').length-1;\n    var t = $(\"#\"+target).data();\n    var index=t.step;\n    if (direction==\"oldest\") {\n        index=len;\n        next = select.getElementsByTagName('option')[index];\n        if(typeof next !== undefined) {\n            select.options[index].selected = 'selected';\n        }\n    } else if (direction==\"older\") {\n        index++;\n        next = select.getElementsByTagName('option')[index];\n        if(typeof next !== undefined && index <= len) {\n            select.options[index].selected = 'selected';\n        } else {\n            index=len;\n        }\n    } else if (direction==\"newer\") {\n        index--;\n        next = select.getElementsByTagName('option')[index];\n        if (typeof next !== undefined && index >= 0) {\n            select.options[index].selected = 'selected';\n        } else {\n            index = 0;\n            select.options[index].selected = 'selected';\n        }\n    } else if (direction==\"newest\") {\n        index='0';\n        next = select.getElementsByTagName('option')[index];\n        if(typeof next !== undefined) {\n            select.options[index].selected = 'selected';\n        }\n    }\n    t.step=index;\n    $(\"#\"+target).trigger('change');\n});\n\n\n                  $(\"body\").on(\"click\",\"[id^='Close_PRIORS_']\", function() {\n                               var new_section = this.id.match(/Close_PRIORS_(.*)$/)[1];\n                               $(\"#PRIORS_\"+ new_section +\"_left_text\").addClass('nodisplay');\n                               $(\"#QP_\" + new_section).removeClass('nodisplay');\n                               });\n                  $(\"#pupils,#vision_tab,[name='CTL'],[name^='more_'],#ACTTRIGGER\").on(\"mouseover\", function() {\n                                                                                              $(this).toggleClass('buttonRefraction_selected').toggleClass('underline').css( 'cursor', 'pointer' );\n                                                                                              });\n                  $(\"#pupils,#vision_tab,[name='CTL']\").on(\"mouseout\", function() {\n                                                                 $(this).toggleClass('buttonRefraction_selected').toggleClass('underline');\n                                                                 });\n                  $(\"#pupils\").on(\"click\", function(){\n                                     if ($(\"#dim_pupils_panel\").hasClass(\"nodisplay\")) {\n                                        $(\"#dim_pupils_panel\").removeClass('nodisplay');\n                                      } else {\n                                        $(\"#dim_pupils_panel\").fadeToggle();\n                                      }\n                                     });\n                  $(\"#vision_tab\").on(\"click\", function(){\n                                         $(\"#REFRACTION_sections\").toggleClass('nodisplay');\n                                         ($(\"#PREFS_VA\").val() =='1') ? ($(\"#PREFS_VA\").val('0')) : $(\"#PREFS_VA\").val('1');\n                                         });\n                  //set wearing to single vision or bifocal? Bifocal\n                  $(\".WNEAR\").removeClass('nodisplay');\n                  $(\"#WNEARODAXIS\").addClass('nodisplay');\n                  $(\"#WNEARODCYL\").addClass('nodisplay');\n                  $(\"#WNEARODPRISM\").addClass('nodisplay');\n                  $(\"#WNEAROSAXIS\").addClass('nodisplay');\n                  $(\"#WNEAROSCYL\").addClass('nodisplay');\n                  $(\"#WNEAROSPRISM\").addClass('nodisplay');\n                  $(\"#Single\").on(\"click\", function(){\n                                     $(\"#WNEARODAXIS\").addClass('nodisplay');\n                                     $(\"#WNEARODCYL\").addClass('nodisplay');\n                                     $(\"#WNEARODPRISM\").addClass('nodisplay');\n                                     $(\"#WODADD2\").addClass('nodisplay');\n                                     $(\"#WOSADD2\").addClass('nodisplay');\n                                     $(\"#WNEAROSAXIS\").addClass('nodisplay');\n                                     $(\"#WNEAROSCYL\").addClass('nodisplay');\n                                     $(\"#WNEAROSPRISM\").addClass('nodisplay');\n                                     $(\".WSPACER\").removeClass('nodisplay');\n                                     });\n                  $(\"#Bifocal\").on(\"click\", function(){\n                                      $(\".WSPACER\").addClass('nodisplay');\n                                      $(\".WNEAR\").removeClass('nodisplay');\n                                      $(\".WMid\").addClass('nodisplay');\n                                      $(\".WHIDECYL\").removeClass('nodisplay');\n                                      $(\"[name=RX]\").val([\"1\"]);\n                                      $(\"#WNEARODAXIS\").addClass('nodisplay');\n                                      $(\"#WNEARODCYL\").addClass('nodisplay');\n                                      $(\"#WNEARODPRISM\").addClass('nodisplay');\n                                      $(\"#WNEAROSAXIS\").addClass('nodisplay');\n                                      $(\"#WNEAROSCYL\").addClass('nodisplay');\n                                      $(\"#WNEAROSPRISM\").addClass('nodisplay');\n                                      $(\"#WODADD2\").removeClass('nodisplay');\n                                      $(\"#WOSADD2\").removeClass('nodisplay');\n                                      });\n                  $(\"#Trifocal\").on(\"click\", function(){\n                                       $(\".WSPACER\").addClass('nodisplay');\n                                       $(\".WNEAR\").removeClass('nodisplay');\n                                       $(\".WMid\").removeClass('nodisplay');\n                                       $(\".WHIDECYL\").addClass('nodisplay');\n                                       $(\"[name=RX]\").val([\"2\"]);\n                                       $(\"#WNEARODAXIS\").addClass('nodisplay');\n                                       $(\"#WNEARODCYL\").addClass('nodisplay');\n                                       $(\"#WNEARODPRISM\").addClass('nodisplay');\n                                       $(\"#WNEAROSAXIS\").addClass('nodisplay');\n                                       $(\"#WNEAROSCYL\").addClass('nodisplay');\n                                       $(\"#WNEAROSPRISM\").addClass('nodisplay');\n                                       $(\"#WODADD2\").removeClass('nodisplay');\n                                       $(\"#WOSADD2\").removeClass('nodisplay');\n                                       });\n                  $(\"#Progressive\").on(\"click\", function(){\n                                          $(\".WSPACER\").addClass('nodisplay');\n                                          $(\".WNEAR\").removeClass('nodisplay');\n                                          $(\".WMid\").addClass('nodisplay');\n                                          $(\".WHIDECYL\").removeClass('nodisplay');\n                                          $(\"[name=RX]\").val([\"3\"]);\n                                          $(\"#WNEARODAXIS\").addClass('nodisplay');\n                                          $(\"#WNEARODCYL\").addClass('nodisplay');\n                                          $(\"#WNEARODPRISM\").addClass('nodisplay');\n                                          $(\"#WNEAROSAXIS\").addClass('nodisplay');\n                                          $(\"#WNEAROSCYL\").addClass('nodisplay');\n                                          $(\"#WNEAROSPRISM\").addClass('nodisplay');\n                                          $(\"#WODADD2\").removeClass('nodisplay');\n                                          $(\"#WOSADD2\").removeClass('nodisplay');\n                                          });\n                  $(\"[name=W_width_display]\").on(\"click\", function() {\n                                                    if ($(\"#PREFS_W_width\").val() !=\"1\") {\n                                                    $(\"#PREFS_W_width\").val('1');\n                                                    //make each display W wide\n                                                    $(\"[name=currentRX]\").addClass('refraction_wide');\n                                                    $(\"[name=W_wide]\").removeClass('nodisplay');\n                                                    $(\"[name=W_wide2]\").removeClass('nodisplay');\n                                                    } else {\n                                                    $(\"#PREFS_W_width\").val('0');\n                                                    //make each display W narrow\n                                                    $(\"[name=currentRX]\").removeClass('refraction_wide');\n                                                    $(\"[name=W_wide]\").addClass('nodisplay');\n                                                    $(\"[name=W_wide2]\").addClass('nodisplay');\n                                                    }\n                                                    update_PREFS();\n\n                                                    });\n                  if ($(\"#PREFS_W_width\").val() == '1') {\n                    $(\"[name=W_wide]\").removeClass('nodisplay');\n                    $(\"[name=W_wide2]\").removeClass('nodisplay')\n                  } else {\n                    $(\"[name=W_wide]\").addClass('nodisplay');\n                    $(\"[name=W_wide2]\").addClass('nodisplay');\n                  }\n                  $(\"#Amsler-Normal\").on(\"change\", function() {\n                                             if ($(this).is(':checked')) {\n                                             var number1 = document.getElementById(\"AmslerOD\").src.match(/(Amsler_\\d)/)[1];\n                                             document.getElementById(\"AmslerOD\").src = document.getElementById(\"AmslerOD\").src.replace(number1,\"Amsler_0\");\n                                             var number2 = document.getElementById(\"AmslerOS\").src.match(/(Amsler_\\d)/)[1];\n                                             document.getElementById(\"AmslerOS\").src = document.getElementById(\"AmslerOS\").src.replace(number2,\"Amsler_0\");\n                                             $(\"#AMSLEROD\").val(\"0\");\n                                             $(\"#AMSLEROS\").val(\"0\");\n                                             $(\"#AmslerODvalue\").text(\"0\");\n                                             $(\"#AmslerOSvalue\").text(\"0\");\n                                             submit_form(\"eye_mag\");\n                                             return;\n                                             }\n                                             });\n                  $(\"#PUPIL_NORMAL\").on(\"change\", function() {\n                                            if ($(this).is(':checked')) {\n                                            $(\"#ODPUPILSIZE1\").val('3.0');\n                                            $(\"#OSPUPILSIZE1\").val('3.0');\n                                            $(\"#ODPUPILSIZE2\").val('2.0');\n                                            $(\"#OSPUPILSIZE2\").val('2.0');\n                                            $(\"#ODPUPILREACTIVITY\").val('+2');\n                                            $(\"#OSPUPILREACTIVITY\").val('+2');\n                                            $(\"#ODAPD\").val('0');\n                                            $(\"#OSAPD\").val('0');\n                                            submit_form(\"eye_mag\");\n                                            return;\n                                            }\n                                            });\n                  $(\"[name$='PUPILREACTIVITY']\").on(\"change\", function() {\n                                                        var react = $(this).val();\n                                                        if (react.match(/^\\d{1}$/)) {\n                                                        react = \"+\"+react;\n                                                        }\n                                                        $(this).val(react);\n                                                        });\n\n                  $(\"[name^='EXAM']\").on(\"mouseover\", function(){\n                                                $(this).toggleClass(\"borderShadow2\").css( 'cursor', 'pointer' );\n                                                });\n                  $(\"[name^='EXAM']\").on(\"mouseout\", function(){\n                                               $(this).toggleClass(\"borderShadow2\");\n                                               });\n                  $(\"#AmslerOD, #AmslerOS\").on(\"click\", function() {\n                                                  if ($('#chart_status').val() !=\"on\") return;\n                                                  var number1 = this.src.match(/Amsler_(\\d)/)[1];\n                                                  var number2 = +number1 +1;\n                                                  this.src = this.src.replace('Amsler_'+number1,'Amsler_'+number2);\n                                                  this.src = this.src.replace('Amsler_6','Amsler_0');\n                                                  $(\"#Amsler-Normal\").removeAttr('checked');\n                                                  var number3 = this.src.match(/Amsler_(\\d)/)[1];\n                                                  this.html =  number3;\n                                                  if (number3 ==\"6\") {\n                                                  number3 = \"0\";\n                                                  }\n                                                  if ($(this).attr(\"id\")==\"AmslerOD\") {\n                                                  $(\"#AmslerODvalue\").text(number3);\n                                                  $('#AMSLEROD').val(number3);\n                                                  } else {\n                                                  $('#AMSLEROS').val(number3);\n                                                  $(\"#AmslerOSvalue\").text(number3);\n                                                  }\n                                                  var title = \"#\"+$(this).attr(\"id\")+\"_tag\";\n                                                  });\n\n                  $(\"#AmslerOD, #AmslerOS\").on(\"mouseout\", function() {\n                                                     submit_form(\"eye_mag\");\n                                                     });\n                  $(\"[name^='ODVF'],[name^='OSVF']\").on(\"click\", function() {\n                                                           if ($(this).is(':checked') == true) {\n                                                           $(\"#FieldsNormal\").prop('checked', false);\n                                                           $(this).val('1');\n                                                           }else{\n                                                           $(this).val('0');\n                                                           $(this).prop('checked', false);\n                                                           }\n                                                           submit_form(\"eye_mag\");\n                                                           });\n                  $(\"#FieldsNormal\").on(\"click\", function() {\n                                           if ($(this).is(':checked')) {\n                                           $(\"#ODVF1\").removeAttr('checked');\n                                           $(\"#ODVF2\").removeAttr('checked');\n                                           $(\"#ODVF3\").removeAttr('checked');\n                                           $(\"#ODVF4\").removeAttr('checked');\n                                           $(\"#OSVF1\").removeAttr('checked');\n                                           $(\"#OSVF2\").removeAttr('checked');\n                                           $(\"#OSVF3\").removeAttr('checked');\n                                           $(\"#OSVF4\").removeAttr('checked');\n                                           }\n                                           });\n                  $(\"[id^='EXT_prefix']\").on(\"change\", function() {\n                                                 var newValue =$('#EXT_prefix').val();\n                                                 newValue = newValue.replace('+', '');\n                                                 if (newValue ==\"off\") {$(this).val('');}\n                                                 if (newValue ==\"clear\") {\n                                                 if (confirm('\\tSelect OK to clear all the External Exam values\\t\\n\\t or CANCEL to continue.\\t')) {\n                                                 $(this).val('');\n                                                 $(\".EXT\").val('');\n                                                 }\n                                                 } else {\n                                                 $(\"[name^='EXT_prefix_']\").removeClass('eye_button_selected');\n                                                 $(\"#EXT_prefix_\"+ newValue).addClass(\"eye_button_selected\");\n                                                 }\n                                                 });\n                  $(\"#ANTSEG_prefix\").on(\"change\", function() {\n                                             var newValue = $(this).val().replace('+', '');\n                                             if ($(this).value ==\"off\") {$(this).val('');}\n                                             if (newValue ==\"clear\") {\n                                             if (confirm('\\tSelect OK to clear all the Anterior Segment Exam values\\t\\n\\t or CANCEL to continue.\\t')) {\n                                             $(this).val('');\n                                             $(\".ANTSEG\").val('');\n                                             }\n                                             } else {\n                                             $(\"[name^='ANTSEG_prefix_']\").removeClass('eye_button_selected');\n                                             $(\"#ANTSEG_prefix_\"+ newValue).addClass(\"eye_button_selected\");\n                                             }\n                                             });\n                  $(\"#RETINA_prefix\").on(\"change\", function() {\n                                             var newValue = $(\"#RETINA_prefix\").val().replace('+', '');\n                                             if ($(this).value ==\"off\") {$(this).val('');}\n                                             if (newValue ==\"clear\") {\n                                             if (confirm('\\tSelect OK to clear all the Retina Exam values\\t\\n\\t or CANCEL to continue.\\t')) {\n                                             $(this).val('');\n                                             $(\".RETINA\").val('');\n                                             }\n                                             } else {\n                                             $(\"[name^='RETINA_prefix_']\").removeClass('eye_button_selected');\n                                             $(\"#RETINA_prefix_\"+ newValue).addClass(\"eye_button_selected\");\n                                             }\n                                             });\n                  $(\"#NEURO_ACT_zone\").on(\"change\", function() {\n                                              var newValue = $(this).val();\n                                              $(\"[name^='NEURO_ACT_zone']\").removeClass('eye_button_selected');\n                                              $(\"#NEURO_ACT_zone_\"+ newValue).addClass(\"eye_button_selected\");\n                                              $(\"#PREFS_ACT_SHOW\").val(newValue);\n                                              update_PREFS;\n                                              $(\"#ACT_tab_\"+newValue).trigger('click');\n                                              });\n                  $(\"#NEURO_side\").on(\"change\", function() {\n                                          var newValue = $(this).val();\n                                          $(\"[name^='NEURO_side']\").removeClass('eye_button_selected');\n                                          $(\"#NEURO_side_\"+ newValue).addClass(\"eye_button_selected\");\n                                          });\n                  $('.ACT').on('focus', function() {\n                                  var id = this.id.match(/ACT(\\d*)/);\n                                  $('#NEURO_field').val(''+id[1]).trigger('change');\n                                  });\n                  $(\"#NEURO_field\").on(\"change\", function() {\n                                           var newValue = $(this).val();\n                                           $(\"[name^='NEURO_field']\").removeClass('eye_button_selected');\n                                           $(\"#NEURO_field_\"+ newValue).addClass(\"eye_button_selected\");\n                                           $('.ACT').each(function(i){\n                                                          var color = $(this).css('background-color');\n                                                          if ((color == 'rgb(255, 255, 153)')) {// =='blue' <- IE hack\n                                                          $(this).css(\"background-color\",\"red\");\n                                                          }\n                                                          });\n                                           //change to highlight field in zone entry is for\n                                           var zone = $(\"#NEURO_ACT_zone\").val();\n                                           $(\"#ACT\"+newValue+zone).css(\"background-color\",\"yellow\");\n                                           });\n                  $(\"[name^='NEURO_ACT_strab']\").on(\"click\", function() {\n                                                       var newValue = $(this).val();\n                                                       $(\"[name^='NEURO_ACT_strab']\").removeClass('eye_button_selected');\n                                                       $(this).addClass(\"eye_button_selected\");\n                                                       });\n                  $(\"#NEURO_value\").on(\"change\", function() {\n                                           var newValue = $(this).val();\n                                           $(\"[name^='NEURO_value']\").removeClass('eye_button_selected');\n                                           $(\"#NEURO_value_\"+ newValue).addClass(\"eye_button_selected\");\n                                           if (newValue == \"ortho\") {\n                                           $(\"#NEURO_ACT_strab\").val('');\n                                           $(\"[name^='NEURO_ACT_strab']\").removeClass('eye_button_selected');\n                                           $(\"#NEURO_side\").val('');\n                                           $(\"[name^='NEURO_side']\").removeClass('eye_button_selected');\n                                           }\n                                           });\n                  $(\"#NEURO_RECORD\").on(\"mouseover\", function() {\n                                               $(\"#NEURO_RECORD\").addClass('borderShadow2').css( 'cursor', 'pointer' );\n                                               });\n                  $(\"#NEURO_RECORD\").on(\"mouseout\", function() {\n                                              $(\"#NEURO_RECORD\").removeClass('borderShadow2');\n                                              });\n                  $(\"#NEURO_RECORD\").on(\"mousedown\", function() {\n                                               $(\"#NEURO_RECORD\").removeClass('borderShadow2');\n                                               $(this).toggleClass('button_over');\n                                               });\n                  $(\"#NEURO_RECORD\").on(\"mouseup\", function() {\n                                             $(\"#NEURO_RECORD\").removeClass('borderShadow2');\n                                             $(this).toggleClass('button_over');\n                                             });\n                  $(\"#NEURO_RECORD\").on(\"click\", function() {\n                                           //find out the field we are updating\n                                           var number = $(\"#NEURO_field\").val();\n                                           var zone = $(\"#NEURO_ACT_zone\").val();\n                                           var strab = $(\"#NEURO_value\").val() + ' '+ $(\"#NEURO_side\").val() + $(\"#NEURO_ACT_strab\").val();\n\n                                           $(\"#ACT\"+number+zone).val(strab).css(\"background-color\",\"#F0F8FF\");\n\n\n                                           });\n\n                  $(\"#LayerMood,#LayerVision, #LayerTension, #LayerMotility, #LayerAmsler, #LayerFields, #LayerPupils,#dim_pupils_panel,#PRIORS_ALL_left_text\").on(\"mouseover\", function(){\n                                                                                                                                                                          $(this).addClass(\"borderShadow2\");\n                                                                                                                                                                          });\n                  $(\"#LayerMood,#LayerVision, #LayerTension, #LayerMotility, #LayerAmsler, #LayerFields, #LayerPupils,#dim_pupils_panel,#PRIORS_ALL_left_text\").on(\"mouseout\", function(){\n                                                                                                                                                                         $(this).removeClass(\"borderShadow2\");\n                                                                                                                                                                         });\n                  $(\"[id$='_lightswitch']\").on(\"click\", function() {\n                                                  var section = \"#\"+this.id.match(/(.*)_lightswitch$/)[1];\n                                                  var section2 = this.id.match(/(.*)_(.*)_lightswitch$/)[2];\n                                                  var elem = document.getElementById(\"PREFS_\"+section2);\n                                                  $(\"#PREFS_VA\").val('0');\n                                                  if (section2 != \"IOP\")$(\"#REFRACTION_sections\").removeClass('nodisplay');\n                                                  if (elem.value == \"0\" || elem.value =='') {\n                                                  elem.value='1';\n                                                  if (section2 ==\"ADDITIONAL\") {\n                                                  $(\"#LayerVision_ADDITIONAL\").removeClass('nodisplay');\n                                                  }\n                                                  if (section2 ==\"IOP\") {\n                                                  $(\"#LayerVision_IOP\").removeClass('nodisplay');\n                                                  //plot_IOPs();\n                                                  }\n                                                  $(section).removeClass('nodisplay');\n                                                  $(this).addClass(\"buttonRefraction_selected\");\n                                                  } else {\n                                                  elem.value='0';\n                                                  $(section).addClass('nodisplay');\n                                                  if (section2 ==\"VAX\") {\n                                                  $(\"#LayerVision_ADDITIONAL_VISION\").addClass('nodisplay');\n                                                  }\n                                                  if (section2 ==\"IOP\") {\n                                                  $(\"#LayerVision_IOP\").addClass('nodisplay');\n                                                  }\n                                                  $(this).removeClass(\"buttonRefraction_selected\");\n                                                  }\n                                                  $(this).css( 'cursor', 'pointer' );\n                                                  update_PREFS();\n                                                  });\n\n                  $('[id$=_lightswitch]').on(\"mouseover\", function() {\n                                                    $(this).addClass('buttonRefraction_selected').css( 'cursor', 'pointer' );\n\n                                                    var section = this.id.match(/(.*)_(.*)_lightswitch$/)[2];\n                                                    if (section == 'IOP') {\n                                                    $(\"#LayerTension\").addClass(\"borderShadow2\");\n                                                    } else {\n                                                    $(\"#LayerVision\").addClass(\"borderShadow2\");\n                                                    }\n                                                    });\n                  $('[id$=_lightswitch]').on('mouseout', function() {\n                                                   var section2 = this.id.match(/(.*)_(.*)_lightswitch$/)[2];\n                                                   var elem = document.getElementById(\"PREFS_\"+section2);\n\n                                                   if (elem.value != \"1\") {\n                                                   $(this).removeClass('buttonRefraction_selected');\n                                                   } else {\n                                                   $(this).addClass('buttonRefraction_selected');\n                                                   }                                                                });\n\n                  // let users enter \"=\" sign for \"+\" to cut down on keyboard movements (keyCode 61)\n                  // \"+\" == \"shift\" + \"=\" ==> now \"=\" == \"+\", \"j\" ==> \"J\" for Jaeger acuity (keyCode 74)\n                  // \"-\" is still == \"-\"\n                  $(\"input[class^='jaeger'],input[name$='VA'],input[name$='VA_copy'],input[name$='VA_copy_brd'],input[name$='SPH'],input[name$='CYL'],input[name$='REACTIVITY'],input[name$='APD']\").on('keyup', function(e) {\n                                                                                                                                                                                                        if (e.keyCode=='61' || e.keyCode=='74') {\n                                                                                                                                                                                                        now = $(this).val();\n                                                                                                                                                                                                        now = now.replace(/=/g,\"+\").replace(/^j/g,\"J\");\n                                                                                                                                                                                                        $(this).val(now);\n                                                                                                                                                                                                        }\n                                                                                                                                                                                                        });\n                  //useful to make all VA fields stay in sync\n                  $(\"input[name$='VA']\").on('change',function() {\n                                            var hereValue = $(this).val();\n                                            var newValue = $(this).attr('name').replace('VA', 'VA_copy');\n                                            $(\"#\" + newValue).val(hereValue).css(\"background-color\",\"#F0F8FF\");;\n                                            $(\"#\" + newValue + \"_brd\").val(hereValue).css(\"background-color\",\"#F0F8FF\");;\n                                            });\n                  $(\"input[class^='jaeger'],input[name$='VA_1']\").on('change',function() {\n                                                                     var hereValue = $(this).val();\n                                                                     hereValue = hereValue.replace(/=$/g,\"+\").replace(/^j/g,\"J\");\n                                                                     $(this).val(hereValue);\n                                                                     if (this.name.match(/_1$/)) {\n                                                                     var newValue = $(this).attr('name').replace('VA_1', 'VA_1_copy');\n                                                                     $(\"#\" + newValue).val(hereValue).css(\"background-color\",\"#F0F8FF\");;\n                                                                     $(\"#\" + newValue + \"_brd\").val(hereValue).css(\"background-color\",\"#F0F8FF\");\n                                                                     }\n                                                                     });\n\n                  $(\"input[name$='_copy']\").on(\"blur\", function() {\n                                                 var hereValue = $(this).val();\n                                                 var newValue = $(this).attr('name').replace('_copy', '');\n                                                 $(\"#\" + newValue).val(hereValue).css(\"background-color\",\"#F0F8FF\");;\n                                                 $(\"#\" + newValue + \"_copy_brd\").val(hereValue).css(\"background-color\",\"#F0F8FF\");;\n                                                 });\n                  $(\"input[name$='_copy_brd']\").on(\"change\", function() {\n                                                       var hereValue = $(this).val();\n                                                       var newValue = $(this).attr('name').replace('_copy_brd', '');\n                                                       $(\"#\" + newValue).val(hereValue).css(\"background-color\",\"#F0F8FF\");;\n                                                       $(\"#\" + newValue + \"_copy\").val(hereValue).css(\"background-color\",\"#F0F8FF\");;\n                                                       });\n                  $(\"[name^='more_']\").on(\"mouseout\", function() {\n                                                $(this).toggleClass('buttonRefraction_selected').toggleClass('underline');\n                                                });\n                  $(\"[name^='more_']\").on(\"click\", function() {\n                                             $(\"#Visions_A\").toggleClass('nodisplay');\n                                             $(\"#Visions_B\").toggleClass('nodisplay');\n                                             });\n                  $(\"#EXAM_defaults\").on(\"click\", function() {\n                                            if (!confirm('<?php echo xla(\"Replace all exam findings with Default values?  Are you sure?\"); ?>')) {\n                                                return;\n                                            }\n                                            <?php\n                                            // This query is specific to the provider.\n                                            $query  = \"select seq from list_options where option_id=?\";\n                                            $result = sqlStatement($query, array(\"Eye_defaults_$providerID\"));\n\n                                            $list = sqlFetchArray($result);\n                                            $SEQ = $list['seq'];\n                                            if (!$SEQ) {\n                                              // If there is no list for this provider, we create it here.\n                                              // This list is part of the idea to create a way to add Eye_Defaults_$providerID specific to the\n                                              // subspecialty of the doctor. ie. Eye_defaults_for_GENERAL (the only one that exists today)\n                                              // or Eye_defaults_for_CORNEA, RETINA, NEURO, PLASTICS, REFRACTIVE, PEDS, UVEITIS\n                                              // Let's see if the public likes the form itself before developing these subspecialty lists...\n\n                                                //Copy the Eye_Defaults_for_GENERAL to Eye_defaults_$providerID\n                                                $sql = \"SELECT * from list_options where list_id = 'Eye_Defaults_for_GENERAL'\";\n                                                $start = sqlStatement($sql);\n                                                $add_fields = array();\n                                                while ($val = sqlFetchArray($start)) {\n                                                    $parameters .= \"(?, ?, ?, ?, ?, ?),\";\n                                                    array_push($add_fields, \"Eye_defaults_\" . $providerID, $val['option_id'], $val['title'], $val['notes'], '1', $val['seq']);\n                                                }\n                                                $parameters = rtrim($parameters, \",\");\n                                                $query = \"SELECT max(seq) as maxseq FROM list_options WHERE list_id= 'lists'\";\n                                                $pres = sqlStatement($query);\n                                                $maxseq = sqlFetchArray($pres);\n\n                                                $seq = $maxseq['maxseq'];\n                                                $query = \"INSERT INTO `list_options`\n                                                    (`list_id`, `option_id`, `title`, `seq`, `is_default`, `option_value`, `mapping`, `notes`, `codes`) VALUES\n                                                    ('lists', ?, ?, ?, '1', '0', '', '', '')\";\n                                                $providerNAME = getProviderName($providerID);\n\n                                                sqlStatement($query, array(\"Eye_defaults_$providerID\",\"Eye Exam Defaults $providerNAME \",$seq));\n                                                $query = \"INSERT INTO `list_options` (`list_id`, `option_id`, `title`,`notes`,`activity`,`seq`) VALUES \" . $parameters;\n                                                sqlStatement($query, $add_fields);\n                                            }\n\n                                            $query = \"select * from list_options where list_id =? and activity='1' order by seq\";\n\n                                            $DEFAULT_data = sqlStatement($query, array(\"Eye_defaults_$providerID\"));\n                                            while ($row = sqlFetchArray($DEFAULT_data)) {\n                                            //$row['notes'] is the clinical zone (EXT,ANTSEG,RETINA,NEURO)\n                                            //$row['option_id'] is the field name\n                                            //$row['title'] is the default value to use for this provider\n                                                ${$row['notes']}[$row['option_id']] = $row['title']; //This builds each clinical section into its own array (used below)\n                                                echo '$(\"#' . $row['option_id'] . '\").val(\"' . $row['title'] . '\").css(\"background-color\",\"beige\");\n                                            ';\n                                            }\n                                            function startsWith($str, $needle)\n                                            {\n                                                return substr($str, 0, strlen($needle)) === $needle;\n                                            }\n                                            ?>\n                                            submit_form(\"eye_mag\");\n                                            });\n                  $(\"#EXT_defaults_R\").on(\"click\", function() {\n                        <?php\n                        foreach ($EXT as $item => $value) {\n                            if (startsWith($item, \"R\")) {\n                                echo '$(\"#' . $item . '\").val(\"' . $value . '\").css(\"background-color\",\"beige\");\n                                                                                ';\n                            }\n                        }\n                        ?>\n                        submit_form(\"eye_mag\");\n\n                        });\n                  $(\"#EXT_defaults_L\").on(\"click\", function() {\n                        <?php\n                        foreach ($EXT as $item => $value) {\n                            if (startsWith($item, \"L\")) {\n                                echo '$(\"#' . $item . '\").val(\"' . $value . '\").css(\"background-color\",\"beige\");\n                                                                                ';\n                            }\n                        }\n                        ?>\n                        submit_form(\"eye_mag\");\n                        });\n                  $(\"#EXT_defaults\").on(\"click\", function() {\n                                            $(\"#EXT_defaults_L\").trigger('click');\n                                            $(\"#EXT_defaults_R\").trigger('click');\n                                            submit_form(\"eye_mag\");\n                                           });\n\n                    $(\"#EXT_R_L\").on('click', function () {\n                        $(\"#LBROW\").val($(\"#RBROW\").val());\n                        $(\"#LUL\").val($(\"#RUL\").val());\n                        $(\"#LLL\").val($(\"#RLL\").val());\n                        $(\"#LMCT\").val($(\"#RMCT\").val());\n                        $(\"#LADNEXA\").val($(\"#RADNEXA\").val());\n                        submit_form(\"eye_mag\");\n                    });\n\n                    $(\"#EXT_L_R\").on('click', function () {\n                        $(\"#RBROW\").val($(\"#LBROW\").val());\n                        $(\"#RUL\").val($(\"#LUL\").val());\n                        $(\"#RLL\").val($(\"#LLL\").val());\n                        $(\"#RMCT\").val($(\"#LMCT\").val());\n                        $(\"#RADNEXA\").val($(\"#LADNEXA\").val());\n                        submit_form(\"eye_mag\");\n                    });\n                    $(\"#ANTSEG_defaults_OD\").on(\"click\", function() {\n                    <?php\n                    foreach ($ANTSEG as $item => $value) {\n                        if (startsWith($item, \"OD\")) {\n                            echo '$(\"#' . $item . '\").val(\"' . $value . '\").css(\"background-color\",\"beige\");\n                                                                                                    ';\n                        }\n                    }\n                    ?>\n                    submit_form(\"eye_mag\");\n\n                    });\n                    $(\"#ANTSEG_defaults_OS\").on(\"click\", function() {\n                            <?php\n                            foreach ($ANTSEG as $item => $value) {\n                                if (startsWith($item, \"OS\")) {\n                                    echo '$(\"#' . $item . '\").val(\"' . $value . '\").css(\"background-color\",\"beige\");\n                                                                                                            ';\n                                }\n                            }\n                            ?>\n                            submit_form(\"eye_mag\");\n                    });\n                    $(\"#ANTSEG_defaults\").on(\"click\", function() {\n                            $(\"#ANTSEG_defaults_OD\").trigger('click');\n                            $(\"#ANTSEG_defaults_OS\").trigger('click');\n                            submit_form(\"eye_mag\");\n                    });\n                    $(\"#ANTSEG_OD_OS\").on('click', function () {\n                        $(\"#OSCONJ\").val($(\"#ODCONJ\").val());\n                        $(\"#OSCORNEA\").val($(\"#ODCORNEA\").val());\n                        $(\"#OSAC\").val($(\"#ODAC\").val());\n                        $(\"#OSLENS\").val($(\"#ODLENS\").val());\n                        $(\"#OSIRIS\").val($(\"#ODIRIS\").val());\n                        submit_form(\"eye_mag\");\n                    });\n                    $(\"#ANTSEG_OS_OD\").on('click', function () {\n                        $(\"#ODCONJ\").val($(\"#OSCONJ\").val());\n                        $(\"#ODCORNEA\").val($(\"#OSCORNEA\").val());\n                        $(\"#ODAC\").val($(\"#OSAC\").val());\n                        $(\"#ODLENS\").val($(\"#OSLENS\").val());\n                        $(\"#ODIRIS\").val($(\"#OSIRIS\").val());\n                        submit_form(\"eye_mag\");\n                    });\n\n                    $(\"#RETINA_OD_OS\").on('click', function () {\n                        $(\"#OSDISC\").val($(\"#ODDISC\").val());\n                        $(\"#OSCUP\").val($(\"#ODCUP\").val());\n                        $(\"#OSMACULA\").val($(\"#ODMACULA\").val());\n                        $(\"#OSVESSELS\").val($(\"#ODVESSELS\").val());\n                        $(\"#OSVITREOUS\").val($(\"#ODVITREOUS\").val());\n                        $(\"#OSPERIPH\").val($(\"#ODPERIPH\").val());\n                        submit_form(\"eye_mag\");\n                    });\n\n                    $(\"#RETINA_OS_OD\").on('click', function () {\n                        $(\"#ODDISC\").val($(\"#OSDISC\").val());\n                        $(\"#ODCUP\").val($(\"#OSCUP\").val());\n                        $(\"#ODMACULA\").val($(\"#OSMACULA\").val());\n                        $(\"#ODVESSELS\").val($(\"#OSVESSELS\").val());\n                        $(\"#ODVITREOUS\").val($(\"#OSVITREOUS\").val());\n                        $(\"#ODPERIPH\").val($(\"#OSPERIPH\").val());\n                        submit_form(\"eye_mag\");\n                    });\n\n                    $(\"#clear_EXT_L\").on('click', function () {\n                        $(\"#LBROW\").val('');\n                        $(\"#LUL\").val('');\n                        $(\"#LLL\").val('');\n                        $(\"#LMCT\").val('');\n                        $(\"#LADNEXA\").val('');\n                        $(\"#LLF\").val('');\n                        $(\"#LMRD\").val('');\n                        submit_form(\"eye_mag\");\n                    });\n\n                    $(\"#clear_EXT_R\").on('click', function () {\n                        $(\"#RBROW\").val('');\n                        $(\"#RUL\").val('');\n                        $(\"#RLL\").val('');\n                        $(\"#RMCT\").val('');\n                        $(\"#RADNEXA\").val('');\n                        $(\"#RLF\").val('');\n                        $(\"#RMRD\").val('');\n                        submit_form(\"eye_mag\");\n                    });\n\n                    $(\"#RETINA_defaults_OD\").on(\"click\", function() {\n                            <?php\n                            foreach ($RETINA as $item => $value) {\n                                if (startsWith($item, \"OD\")) {\n                                    echo '$(\"#' . $item . '\").val(\"' . $value . '\").css(\"background-color\",\"beige\");\n                                                                                                            ';\n                                }\n                            }\n                            ?>\n                            submit_form(\"eye_mag\");\n\n                            });\n                    $(\"#RETINA_defaults_OS\").on(\"click\", function() {\n                        <?php\n                        foreach ($RETINA as $item => $value) {\n                            if (startsWith($item, \"OS\")) {\n                                echo '$(\"#' . $item . '\").val(\"' . $value . '\").css(\"background-color\",\"beige\");\n                                                                                                        ';\n                            }\n                        }\n                        ?>\n                        submit_form(\"eye_mag\");\n                        });\n                    $(\"#RETINA_defaults\").on(\"click\", function() {\n                        $(\"#RETINA_defaults_OD\").trigger('click');\n                        $(\"#RETINA_defaults_OS\").trigger('click');\n                        submit_form(\"eye_mag\");\n                    });\n\n\n                    $(\"#NEURO_defaults\").on(\"click\", function() {\n                                                <?php\n                                                foreach ($NEURO as $item => $value) {\n                                                    echo '$(\"#' . $item . '\").val(\"' . $value . '\").css(\"background-color\",\"beige\");\n                                             ';\n                                                }\n                                                ?>\n                                             submit_form(\"eye_mag\");\n                                             });\n\n                    $(\"#clear_EXT_R\").on('click', function() {\n                        $('.right.EXT').val('');\n                        submit_form(\"eye_mag\");\n                    });\n                    $(\"#clear_EXT_L\").on('click', function() {\n                        $('.left.EXT').val('');\n                        submit_form(\"eye_mag\");\n                    });\n                    $(\"#clear_ANTSEG_OD\").on('click', function() {\n                        $('.right.ANTSEG').val('');\n                        submit_form(\"eye_mag\");});\n                    $(\"#clear_ANTSEG_OS\").on('click', function() {\n                        $('.left.ANTSEG').val('');\n                        submit_form(\"eye_mag\");\n                    });\n                    $(\"#clear_RETINA_OD\").on('click', function() {\n                        $('.right.RETINA').val('');\n                        submit_form(\"eye_mag\");\n                    });\n                    $(\"#clear_RETINA_OS\").on('click', function() {\n                        $('.left.RETINA').val('');\n                        submit_form(\"eye_mag\");\n                    });\n\n                    $(\"[id^='cpf_']\").on('click', function() {\n                        var to_field  = this.id.match(/cpf_(.*)_(.*)/)[1];\n                        var from_field    = this.id.match(/cpf_(.*)_(.*)/)[2];\n                        $(\"#\"+to_field).val($(\"#\"+from_field).val());\n                        submit_form(\"eye_mag\");\n                    });\n                    $(\"#MOTILITYNORMAL\").on(\"click\", function() {\n                                             $(\"#MOTILITY_RS\").val('0');\n                                             $(\"#MOTILITY_RI\").val('0');\n                                             $(\"#MOTILITY_RR\").val('0');\n                                             $(\"#MOTILITY_RL\").val('0');\n                                             $(\"#MOTILITY_LS\").val('0');\n                                             $(\"#MOTILITY_LI\").val('0');\n                                             $(\"#MOTILITY_LR\").val('0');\n                                             $(\"#MOTILITY_LL\").val('0');\n\n                                             $(\"#MOTILITY_RRSO\").val('0');\n                                             $(\"#MOTILITY_RRIO\").val('0');\n                                             $(\"#MOTILITY_RLSO\").val('0');\n                                             $(\"#MOTILITY_RLIO\").val('0');\n                                             $(\"#MOTILITY_LRSO\").val('0');\n                                             $(\"#MOTILITY_LRIO\").val('0');\n                                             $(\"#MOTILITY_LLSO\").val('0');\n                                             $(\"#MOTILITY_LLIO\").val('0');\n\n                                             for (index = '0'; index < 5; ++index) {\n                                             $(\"#MOTILITY_RS_\"+index).html('');\n                                             $(\"#MOTILITY_RI_\"+index).html('');\n                                             $(\"#MOTILITY_RR_\"+index).html('');\n                                             $(\"#MOTILITY_RL_\"+index).html('');\n                                             $(\"#MOTILITY_LS_\"+index).html('');\n                                             $(\"#MOTILITY_LI_\"+index).html('');\n                                             $(\"#MOTILITY_LR_\"+index).html('');\n                                             $(\"#MOTILITY_LL_\"+index).html('');\n\n                                             $(\"#MOTILITY_RRSO_\"+index).html('');\n                                             $(\"#MOTILITY_RRIO_\"+index).html('');\n                                             $(\"#MOTILITY_RLSO_\"+index).html('');\n                                             $(\"#MOTILITY_RLIO_\"+index).html('');\n                                             $(\"#MOTILITY_LRSO_\"+index).html('');\n                                             $(\"#MOTILITY_LRIO_\"+index).html('');\n                                             $(\"#MOTILITY_LLSO_\"+index).html('');\n                                             $(\"#MOTILITY_LLIO_\"+index).html('');\n                                             }\n                                             submit_form('eye_mag');\n                                             });\n\n                  $(\"[name^='MOTILITY_']\").on(\"click\", function()  {\n                                                 $(\"#MOTILITYNORMAL\").removeAttr('checked');\n\n                                                 if (this.id.match(/(MOTILITY_([A-Z]{4}))_(.)/)) {\n                                                 var zone = this.id.match(/(MOTILITY_([A-Z]{4}))_(.)/);\n                                                 var index   = '0';\n                                                 var valued = isNaN($(\"#\"+zone[1]).val());\n                                                 if ((zone[2] =='RLSO')||(zone[2] =='LLSO')||(zone[2] =='RRIO')||(zone[2] =='LRIO')) {\n                                                 //find or make a hash tage for \"\\\"\n                                                 var hash_tag = '<i class=\"fa fa-minus\"></i>';\n                                                 } else {\n                                                 //find or make a hash tage for \"/\"\n                                                 var hash_tag = '<i class=\"fa fa-minus\"></i>';\n                                                 }\n                                                 } else {\n                                                 var zone = this.id.match(/(MOTILITY_..)_(.)/);\n                                                 var section = this.id.match(/MOTILITY_(.)(.)_/);\n                                                 var section2 = section[2];\n                                                 var Eye = section[1];\n                                                 var SupInf = section2.search(/S|I/);\n                                                 var RorLside   = section2.search(/R|L/);\n\n\n                                                 if (RorLside =='0') {\n                                                 var hash_tag = '<i class=\"fa fa-minus rotate-left\"></i>';\n                                                 } else {\n                                                 var hash_tag = '<i class=\"fa fa-minus\"></i>';\n                                                 }\n                                                 }\n                                                 if (valued != true && $(\"#\"+zone[1]).val() <'4') {\n                                                 valued=$(\"#\"+zone[1]).val();\n                                                 valued++;\n                                                 } else {\n                                                 valued = '0';\n                                                 $(\"#\"+zone[1]).val('0');\n                                                 }\n\n                                                 $(\"#\"+zone[1]).val(valued);\n\n                                                 for (index = '0'; index < 5; ++index) {\n                                                 $(\"#\"+zone[1]+\"_\"+index).html('');\n                                                 }\n                                                 if (valued > '0') {\n                                                 for (index =1; index < (valued+1); ++index) {\n                                                 $(\"#\"+zone[1]+\"_\"+index).html(hash_tag);\n                                                 }\n                                                 }\n\n                                                 submit_form('3');\n                                                 });\n\n                  $(\"[name^='Close_']\").on(\"click\", function()  {\n                                              var section = this.id.match(/Close_(.*)$/)[1];\n                                              if (this.id.match(/Close_W_(.*)$/) != null) {\n                                              var W_section = this.id.match(/Close_W_(.*)$/)[1];\n                                              if (W_section > '1') {\n                                              $('#LayerVision_W_'+W_section).addClass('nodisplay');\n                                              $('[name$=SPH_'+W_section+']').val('');\n                                              $('[name$=CYL_'+W_section+']').val('');\n                                              $('[name$=AXIS_'+W_section+']').val('');\n                                              $('[name$=ADD_'+W_section+']').val('');\n                                              $('[name$=PRISM_'+W_section+']').val('');\n                                              $('[name$=VA_'+W_section+']').val('');\n                                              $('#RX_TYPE_'+W_section).val('');\n                                              $('#Add_Glasses').removeClass('nodisplay');\n                                              $('#W_'+W_section).val('');\n                                              submit_form('4');\n                                              } else {\n                                              $(\"#LayerVision_W_lightswitch\").click();\n                                              }\n                                              } else if (section ==\"ACTMAIN\") {\n                                              $(\"#ACTTRIGGER\").trigger( \"click\" );\n                                              } else {\n                                              $(\"#LayerVision_\"+section+\"_lightswitch\").click();\n                                              }\n                                              });\n\n\n                  $(\"#EXAM_DRAW, #BUTTON_DRAW_menu, #PANEL_DRAW\").on(\"click\", function() {\n                                                                        if ($(\"#PREFS_CLINICAL\").value !='0') {\n                                                                        show_right();\n                                                                        $(\"#PREFS_CLINICAL\").val('0');\n                                                                        update_PREFS();\n                                                                        }\n                                                                        if ($(\"#PREFS_EXAM\").val() != 'DRAW') {\n                                                                        $(\"#PREFS_EXAM\").val('DRAW');\n                                                                        $(\"#EXAM_QP\").removeClass('button_selected');\n                                                                        $(\"#EXAM_DRAW\").addClass('button_selected');\n                                                                        $(\"#EXAM_TEXT\").removeClass('button_selected');\n                                                                        update_PREFS();\n                                                                        }\n                                                                        show_DRAW();\n                                                                        });\n                  $(\"#EXAM_QP,#PANEL_QP\").on(\"click\", function() {\n                                                if ($(\"#PREFS_CLINICAL\").value !='0') {\n                                                $(\"#PREFS_CLINICAL\").val('0');\n                                                update_PREFS();\n                                                }\n                                                if ($(\"#PREFS_EXAM\").value != 'QP') {\n                                                $(\"#PREFS_EXAM\").val('QP');\n                                                $(\"#EXAM_QP\").addClass('button_selected');\n                                                $(\"#EXAM_DRAW\").removeClass('button_selected');\n                                                $(\"#EXAM_TEXT\").removeClass('button_selected');\n                                                update_PREFS();\n                                                }\n                                                HPI_sync_heights();\n                                                show_QP();\n                                                scrollTo(\"EXT_left\");\n                                                });\n\n                  $(\"#EXAM_TEXT,#PANEL_TEXT\").on(\"click\", function() {\n\n                                                    // also hide QP, DRAWs, and PRIORS\n\n                                                    hide_DRAW();\n                                                    hide_QP();\n                                                    hide_PRIORS();\n                                                    hide_right();\n                                                    show_TEXT();\n                                                    for (index = '0'; index < zones.length; ++index) {\n                                                    $(\"#PREFS_\"+zones[index]+\"_RIGHT\").val(0);\n                                                    }\n                                                    update_PREFS();\n\n                                                    $(\"#EXAM_DRAW\").removeClass('button_selected');\n                                                    $(\"#EXAM_QP\").removeClass('button_selected');\n                                                    $(\"#EXAM_TEXT\").addClass('button_selected');\n                                                    scrollTo(\"EXT_left\");\n                                                    });\n                  $(\"[id^='BUTTON_TEXT_']\").on(\"click\", function() {\n                                                  var zone = this.id.match(/BUTTON_TEXT_(.*)/)[1];\n                                                  if (zone != \"menu\") {\n                                                  $(\"#\"+zone+\"_right\").addClass('nodisplay');\n                                                  $(\"#\"+zone+\"_left\").removeClass('display');\n                                                  $(\"#\"+zone+\"_left_text\").removeClass('display');\n                                                  $(\"#PREFS_\"+zone+\"_RIGHT\").val(0);\n                                                  }\n                                                  show_TEXT();\n                                                  scrollTo(\"EXT_left\");\n                                                  });\n                  $(\"[id^='BUTTON_TEXTD_']\").on(\"click\", function() {\n                                                   var zone = this.id.match(/BUTTON_TEXTD_(.*)/)[1];\n                                                   if (zone != \"menu\") {\n                                                     if ((zone ==\"PMH\") || (zone == \"HPI\")) {\n                                                       $(\"#PMH_right\").addClass('nodisplay');\n                                                       $(\"#PREFS_PMH_RIGHT\").val(1);\n                                                       $(\"#HPI_right\").addClass('nodisplay');\n                                                       $(\"#PREFS_HPI_RIGHT\").val(1);\n                                                       var reset = $(\"#HPI_1\").height();\n                                                       $(\"#PMH_1\").css(\"min-height\",'0');\n                                                       $(\"#PMH_left\").height(reset-40);\n\n                                                       $(\"#LayerTechnical_sections_1\").css(\"clear\",\"both\");\n                                                     } else {\n                                                       $(\"#\"+zone+\"_right\").addClass('nodisplay');\n                                                       $(\"#PREFS_\"+zone+\"_RIGHT\").val(1);\n                                                     }\n                                                     scrollTo(zone+\"_left\");\n                                                     update_PREFS();\n                                                   }\n                                                  });\n\n                  $(\"#EXAM_TEXT\").addClass('button_selected');\n                  if (($(\"#PREFS_CLINICAL\").val() !='1')) {\n                  var actionQ = \"#EXAM_\"+$(\"#PREFS_EXAM\").val();\n                  $(actionQ).trigger('click');\n                  } else {\n                  $(\"#EXAM_TEXT\").addClass('button_selected');\n                  }\n                  if ($(\"#ANTSEG_prefix\").val() > '') {\n                  $(\"#ANTSEG_prefix_\"+$(\"#ANTSEG_prefix\").val()).addClass('button_selected');\n                  } else {\n                  $(\"#ANTSEG_prefix\").val('off').trigger('change');\n                  }\n                  $(\"[name^='ACT_tab_']\").on(\"mouseover\", function() {\n                                                    $(this).toggleClass('underline').css( 'cursor', 'pointer' );\n                                                    });\n                  $(\"[name^='ACT_tab_']\").on(\"mouseout\", function() {\n                                                   $(this).toggleClass('underline');\n                                                   });\n\n                  $(\"[name^='ACT_tab_']\").on(\"click\", function()  {\n                                                var section = this.id.match(/ACT_tab_(.*)/)[1];\n                                                $(\"[name^='ACT_']\").addClass('nodisplay');\n                                                $(\"[name^='ACT_tab_']\").removeClass('nodisplay').removeClass('ACT_selected').addClass('ACT_deselected');\n                                                $(\"#ACT_tab_\" + section).addClass('ACT_selected').removeClass('ACT_deselected');\n                                                $(\"#ACT_\" + section).removeClass('nodisplay');\n                                                $(\"#PREFS_ACT_SHOW\").val(section);\n                                                //selection correct QP zone\n                                                $(\"[name^='NEURO_ACT_zone']\").removeClass('eye_button_selected');\n                                                $(\"#NEURO_ACT_zone_\"+ section).addClass(\"eye_button_selected\");\n                                                $(\"#NEURO_ACT_zone\").val(section);\n                                                update_PREFS();\n                                                });\n                  $(\"#ACTTRIGGER\").on(\"mouseout\", function() {\n                                            $(\"#ACTTRIGGER\").toggleClass('buttonRefraction_selected').toggleClass('underline');\n                                            });\n                  if ($(\"#PREFS_ACT_VIEW\").val() == '1') {\n                  $(\"#ACTMAIN\").toggleClass('nodisplay');\n                  $(\"#NPCNPA\").toggleClass('nodisplay');\n                  $(\"#ACTNORMAL_CHECK\").toggleClass('nodisplay');\n                  $(\"#ACTTRIGGER\").toggleClass('underline');\n                  var show = $(\"#PREFS_ACT_SHOW\").val();\n                  $(\"#ACT_tab_\"+show).trigger('click');\n                  }\n                  $(\"#ACTTRIGGER\").on(\"click\", function() {\n                                         $(\"#ACTMAIN\").toggleClass('nodisplay').toggleClass('ACT_TEXT');\n                                         $(\"#NPCNPA\").toggleClass('nodisplay');\n                                         $(\"#ACTNORMAL_CHECK\").toggleClass('nodisplay');\n                                         $(\"#ACTTRIGGER\").toggleClass('underline');\n                                         if ($(\"#PREFS_ACT_VIEW\").val()=='1') {\n                                         $(\"#PREFS_ACT_VIEW\").val('0');\n                                         } else {\n                                         $(\"#PREFS_ACT_VIEW\").val('1');\n                                         }\n                                         var show = $(\"#PREFS_ACT_SHOW\").val();\n                                         $(\"#ACT_tab_\"+show).trigger('click');\n                                         update_PREFS();\n                                         });\n                  $(\"#NEURO_COLOR\").on(\"click\", function() {\n                                          $(\"#ODCOLOR\").val(\"11/11\");\n                                          $(\"#OSCOLOR\").val(\"11/11\");\n                                          submit_form(\"eye_mag\");\n                                          });\n\n                  $(\"#NEURO_COINS\").on(\"click\", function() {\n                                          $(\"#ODCOINS\").val(\"1.00\");\n                                          //leave currency symbol out unless it is an openEMR defined option\n                                          $(\"#OSCOINS\").val(\"1.00\");\n                                          submit_form(\"eye_mag\");\n                                          });\n\n                  $(\"#NEURO_REDDESAT\").on(\"click\", function() {\n                                             $(\"#ODREDDESAT\").val(\"100\");\n                                             $(\"#OSREDDESAT\").val(\"100\");\n                                             submit_form(\"eye_mag\");\n                                             });\n\n                  $(\"[id^='myCanvas_']\").on(\"mouseout\", function() {\n                                                  var zone = this.id.match(/myCanvas_(.*)/)[1];\n                                                  submit_canvas(zone);\n                                                  });\n                  $(\"[id^='Undo_']\").on(\"click\", function() {\n                                           var zone = this.id.match(/Undo_Canvas_(.*)/)[1];\n                                           submit_canvas(zone);\n                                           });\n                  $(\"[id^='Redo_']\").on(\"click\", function() {\n                                           var zone = this.id.match(/Redo_Canvas_(.*)/)[1];\n                                           submit_canvas(zone);\n                                           });\n                  $(\"[id^='Clear_']\").on(\"click\", function() {\n                                            var zone = this.id.match(/Clear_Canvas_(.*)/)[1];\n                                            submit_canvas(zone);\n                                            });\n                  $(\"[id^='Blank_']\").on(\"click\", function() {\n\n                                           var zone = this.id.match(/Blank_Canvas_(.*)/)[1];\n                                           $(\"#url_\"+zone).val(\"../../forms/eye_mag/images/BLANK_BASE.png\");\n                                           //canvas.renderAll();\n                                           drawImage(zone);\n                                           });\n\n                  $(\"#COPY_SECTION\").on(\"change\", function() {\n                                            var start = $(\"#COPY_SECTION\").val();\n                                            if (start =='') return;\n                                            var value = start.match(/(\\w*)-(\\w*)/);\n                                            var zone = value[1];\n                                            var copy_from = value[2];\n                                            if (zone ==\"READONLY\") copy_from = $(\"#form_id\").val();\n                                            var count_changes='0';\n\n                                            var data = {\n                                            action      : 'copy',\n                                            copy        : zone,\n                                            zone        : zone,\n                                            copy_to     : $(\"#form_id\").val(),\n                                            copy_from   : copy_from,\n                                            pid         : $(\"#pid\").val()\n                                            };\n                                            if (zone ==\"READONLY\") {\n                                            //we are going to update the whole form\n                                            //Imagine you are watching on your browser while the tech adds stuff in another room on another computer.\n                                            //We are not ready to actively chart, just looking to see how far along our staff is...\n                                            //or maybe just looking ahead to see who's next in the next room?\n                                            //Either way, we are looking at a record that at present will be disabled/we cannot change...\n                                            // yet it is updating every 10 seconds if another user is making changes.\n\n                                            //      READONLY does not show IMPPLAN changes!!!!\n                                            } else {\n                                            //here we are retrieving an old record to copy forward to today's active chart.\n                                            data = $(\"#\"+zone+\"_left_text\").serialize() + \"&\" + $.param(data);\n                                            }\n                                            top.restoreSession();\n                                            $.ajax({\n                                                   type   : 'POST',\n                                                   dataType : 'json',\n                                                   url      :  \"../../forms/eye_mag/save.php\",\n                                                   data   : data,\n                                                   success  : function(result) {\n                                                   //we have to process impplan differently\n                                                   if (zone =='IMPPLAN') {\n                                                   //we get a json result.IMPPLAN back from the prior visit\n                                                   //we need to add that to the current list? Replace for now.\n                                                   build_IMPPLAN(result.IMPPLAN);\n                                                   store_IMPPLAN(result.IMPPLAN);\n                                                   //   need to make the Plan areas purple?\n                                                   } else {\n                                                   $.map(result, function(valhere, keyhere) {\n                                                         if ($(\"#\"+keyhere).val() != valhere) {\n                                                         $(\"#\"+keyhere).val(valhere).css(\"background-color\",\"#CCF\");\n                                                         } else if (keyhere.match(/MOTILITY_/)) {\n                                                         // Copy forward ductions and versions visually\n                                                         // Make each blank, and rebuild them\n                                                         $(\"[name='\"+keyhere+\"_1']\").html('');\n                                                         $(\"[name='\"+keyhere+\"_2']\").html('');\n                                                         $(\"[name='\"+keyhere+\"_3']\").html('');\n                                                         $(\"[name='\"+keyhere+\"_4']\").html('');\n                                                         if (keyhere.match(/(_RS|_LS|_RI|_LI|_RRSO|_RRIO|_RLSO|_RLIO|_LRSO|_LRIO|_LLSO|_LLIO)/)) {\n                                                         // Show a horizontal (minus) tag.  When \"/\" and \"\\\" fa-icons are available will need to change.\n                                                         // Maybe just use small font \"/\" and \"\\\" directly.\n                                                         hash_tag = '<i class=\"fa fa-minus\"></i>';\n                                                         } else { //show vertical tag\n                                                         hash_tag = '<i class=\"fa fa-minus rotate-left\"></i>';\n                                                         }\n                                                         for (index =1; index <= valhere; ++index) {\n                                                         $(\"#\"+keyhere+\"_\"+index).html(hash_tag);\n                                                         }\n                                                         } else if (keyhere.match(/^(ODVF|OSVF)\\d$/)) {\n                                                         if (valhere =='1') {\n                                                         $(\"#FieldsNormal\").prop('checked', false);\n                                                         $(\"#\"+keyhere).prop('checked', true);\n                                                         $(\"#\"+keyhere).val('1');\n                                                         } else {\n                                                         $(\"#\"+keyhere).val('0');\n                                                         $(\"#\"+keyhere).prop('checked', false);\n                                                         }\n                                                         } else if (keyhere.match(/AMSLERO(.)/)) {\n                                                         var sidehere = keyhere.match(/AMSLERO(.)/);\n                                                         if (valhere < '1') valhere ='0';\n                                                         $(\"#\"+keyhere).val(valhere);\n                                                         var srcvalue=\"AmslerO\"+sidehere[1];\n                                                         document.getElementById(srcvalue).src = document.getElementById(srcvalue).src.replace(/\\_\\d/g,\"_\"+valhere);\n                                                         $(\"#AmslerO\"+sidehere[1]+\"value\").text(valhere);\n                                                         } else if (keyhere.match(/VA$/)) {\n                                                         $(\"#\"+keyhere+\"_copy\").val(valhere).css(\"background-color\",\"#F0F8FF\");;\n                                                         $(\"#\"+keyhere+\"_copy_brd\").val(valhere).css(\"background-color\",\"#F0F8FF\");;\n                                                         }\n                                                         });\n                                                   if (zone != \"READONLY\") { submit_form(\"eye_mag\"); }\n                                                   }\n                                                   }});\n                                            });\n                  $(\"[id^='BUTTON_DRAW_']\").on(\"click\", function() {\n                                                  var zone =this.id.match(/BUTTON_DRAW_(.*)$/)[1];\n                                                  if (zone ==\"ALL\") {\n                                                  } else {\n                                                  if ($('#PREFS_'+zone+'_RIGHT').val() ==\"DRAW\") {\n                                                  $('#BUTTON_TEXTD_'+zone).trigger(\"click\");//closes draw\n                                                  //maybe this should revert to last right panel state (qp,text)\n                                                  return;\n                                                  }\n                                                  $(\"#\"+zone+\"_1\").removeClass('nodisplay');\n                                                  $(\"#\"+zone+\"_right\").addClass('canvas').removeClass('nodisplay');\n                                                  $(\"#QP_\"+zone).addClass('nodisplay');\n                                                  $(\"#PRIORS_\"+zone+\"_left_text\").addClass('nodisplay');\n                                                  $(\"#Draw_\"+zone).removeClass('nodisplay');\n                                                  $(\"#PREFS_\"+zone+\"_RIGHT\").val('DRAW');\n                                                  scrollTo(zone+\"_left\");\n                                                  update_PREFS();\n                                                  }\n                                                  });\n                  $(\"[id^='BUTTON_QP_']\").on(\"click\", function() {\n                                                var zone = this.id.match(/BUTTON_QP_(.*)$/)[1].replace(/_\\d*/,'');\n                                                if (zone =='IMPPLAN2') {\n                                                  $('#IMP_start_acc').slideDown();\n                                                  zone='IMPPLAN';\n                                                }\n                                                if (($(\"#PREFS_\"+zone+\"_RIGHT\").val() =='QP')&&(zone !='IMPPLAN')) {\n                                                  $('#BUTTON_TEXTD_'+zone).trigger(\"click\");\n                                                  return;\n                                                }\n                                                $(\"#PRIORS_\"+zone+\"_left_text\").addClass('nodisplay');\n                                                $(\"#Draw_\"+zone).addClass('nodisplay');\n                                                show_QP_section(zone, '1');\n                                                $(\"#PREFS_\"+zone+\"_RIGHT\").val('QP');\n\n                                                if ((zone == 'PMH')||(zone == 'HPI')) {\n                                                    if ($('#HPI_right').css('display') == 'none') {\n                                                        $(\"#Draw_HPI\").addClass('nodisplay');\n                                                        show_QP_section('HPI', '1');\n                                                        $(\"#PREFS_HPI_RIGHT\").val('QP');\n                                                    }\n                                                }\n\n                                                HPI_sync_heights();\n                                                if (zone == 'HPI') {\n                                                    if ($('#PMH_right').css('display') == 'none') {\n                                                        $(\"#PRIORS_PMH_left_text\").addClass('nodisplay');\n                                                        $(\"#Draw_PMH\").addClass('nodisplay');\n                                                        show_QP_section('PMH','1');\n                                                        $(\"#PREFS_PMH_RIGHT\").val('QP');\n                                                    }\n                                                    if ($('#PMH_right').height() > $('#PMH_left').height()) {\n                                                        $('#PMH_left').height($('#PMH_right').height());\n                                                    } else {\n                                                        $('#PMH_1').height($('#HPI_1').height());\n                                                    }\n                                                } else if (zone == 'menu') {\n                                                    show_QP();\n                                                } else if (zone == 'IMPPLAN') {\n                                                    show_QP_section('IMPPLAN','1');\n\n                                                }\n                                                update_PREFS();\n                                                });\n\n                  // set default to ccDist.  Change as desired.\n                  $('#NEURO_ACT_zone').val('CCDIST').trigger('change');\n                  if ($(\"#RXStart\").val() ==\"2\") {\n                  $(\"#Trifocal\").trigger('click');\n                  }\n                  $(\"[id$='_loading']\").addClass('nodisplay');\n                  $(\"[id$='_sections']\").removeClass('nodisplay');\n\n                  $('#left-panel').css(\"right\",\"0px\");\n                  $('#EXAM_KB').css({position: 'fixed', top: '29px'});\n                  $('#EXAM_KB').css('display', 'block');\n                  $('#EXAM_KB').draggable();\n                  $('#IMP').droppable({ drop: dragto_IMPPLAN } );\n                  $('#IMPPLAN_zone').droppable({ drop: dragto_IMPPLAN_zone } );\n                  $('#IMPPLAN_text').droppable({ drop: dragto_IMPPLAN_zone } );\n\n                  $('[id^=\"PLANS\"]').draggable(  { cursor: 'move', revert: true });\n                  $('[id^=\"PLAN_\"]').height( $(this).scrollHeight );\n\n                  /*  Sorting of diagnoses in IMP/PLAN right panel builds IMP_order[] array.\n                   Foreach index => value in IMP_order[order,PMSFH[type][i]]:\n                   retrieve PMSFH[type][value] and build the IMPRESSION/PLAN area\n                   openEMR ICD-10 seems to have newlines in codetext?  strip them with replace.\n                   All the ISSUE_TYPES and their fields are available in obj.PMSFH:\n                   'title' => $disptitle,\n                   'status' => $statusCompute,\n                   'enddate' => $row['enddate'],\n                   'reaction' => $row['reaction'],\n                   'referredby' => $row['referredby'],\n                   'extrainfo' => $row['extrainfo'],\n                   'diagnosis' => $row['diagnosis'],\n                   'code' => $code,\n                   'codedesc' => $codedesc,\n                   'codetext' => $codetext,\n                   'codetype' => $codetype,\n                   'comments' => $row['comments'],\n                   'rowid' => $row['id'],\n                   'row_type' => $row['type']\n                   eg. obj.IMPPLAN_items[index] =  code: obj.PMSFH['POH'][value]['code'],\n                   codedesc:  obj.PMSFH['POH'][value]['codedesc'],\n                   codetype:  obj.PMSFH['POH'][value]['codetype']\n                   */\n\n                  $('#make_new_IMP').on(\"click\", function() {\n                                           var issue='';\n                                           if (IMP_order.length ==0) rebuild_IMP($( \"#build_DX_list\" ));\n                                           if (obj.IMPPLAN_items ==null) obj.IMPPLAN_items = [];\n                                           $.each(IMP_order, function( index, value ) {\n                                                  issue= value.match(/(.*)_(.*)/);\n                                                  if (issue[1] == \"CLINICAL\") {\n                                                      if (!$('#inc_PE').is(':checked')) { return; }\n\n                                                      var the_code='';\n                                                      var the_codedesc='';\n                                                      var the_codetext='';\n                                                      var the_plan='';\n                                                      for (i=0;i < obj.Clinical[issue[2]].length; i++) {\n                                                        if (i == 0) {\n                                                            the_code = obj.Clinical[issue[2]][i]['code'];\n                                                        } else if (i < obj.Clinical[issue[2]].length) {\n                                                            the_code += ', '+ obj.Clinical[issue[2]][i]['code'];\n                                                        }\n                                                        the_codedesc += obj.Clinical[issue[2]][i]['codedesc'] + \"\\r\";\n                                                        the_codetext += obj.Clinical[issue[2]][i]['codetext'] + \"\\r\";\n                                                        the_plan += obj.Clinical[issue[2]][i]['codedesc'] + \"\\r\";\n                                                      }\n                                                      obj.IMPPLAN_items.push({\n                                                                             title:obj.Clinical[issue[2]][0]['title'],\n                                                                             code: the_code,\n                                                                             codetype: obj.Clinical[issue[2]][0]['codetype'],\n                                                                             codedesc: the_codedesc,\n                                                                             codetext: the_codetext,\n                                                                             plan: the_plan,\n                                                                             PMSFH_link: obj.Clinical[issue[2]][0]['PMSFH_link']\n                                                                             });\n                                                  } else {\n                                                      if (issue[1] == \"PMH\") {\n                                                        if (!$('#inc_PMH').is(':checked')) { return; }\n                                                      } else if (issue[1] == \"POH\"){\n                                                        if (!$('#inc_POH').is(':checked')) { return; }\n                                                      } else if (issue[1] == \"POS\"){\n                                                        if (!$('#inc_POH').is(':checked')) { return; }\n                                                      }\n                                                      obj.IMPPLAN_items.push({\n                                                                         title:         obj.PMSFH[issue[1]][issue[2]]['title'],\n                                                                         code:          obj.PMSFH[issue[1]][issue[2]]['code'],\n                                                                         codetype:      obj.PMSFH[issue[1]][issue[2]]['codetype'],\n                                                                         codedesc:      obj.PMSFH[issue[1]][issue[2]]['codedesc'],\n                                                                         codetext:      obj.PMSFH[issue[1]][issue[2]]['codetext'].replace(/(\\r\\n|\\n|\\r)/gm,\"\"),\n                                                                         plan:          obj.PMSFH[issue[1]][issue[2]]['comments'],\n                                                                         PMSFH_link:    obj.PMSFH[issue[1]][issue[2]]['PMSFH_link']\n                                                                         });\n                                                  }\n                                            });\n                                           build_IMPPLAN(obj.IMPPLAN_items);\n                                           store_IMPPLAN(obj.IMPPLAN_items,'1');\n                                           });\n\n\n                  $('.building_blocks > dt ').on('click', function() {\n                                                            if ( $(this).next().css('display') !== 'block' ) {\n                                                                allPanels.slideUp();\n                                                                $(this).next().slideDown();\n                                                            } else {\n                                                                allPanels.slideUp();\n                                                            }\n                                                          });\n                  $('#IMP_start_acc').slideDown();\n                  $('[id^=inc_]').on('click', function() {\n                                        build_DX_list(obj);\n                                        });\n\n                  $('#active_flag').on('click', function() { check_lock('1'); });\n                  $('#active_icon').on('click', function() { check_lock('1'); });\n\n                  $(\"input,textarea,text,checkbox\").on(\"change\", function(){\n                                                           $(this).css(\"background-color\",\"#F0F8FF\");\n                                                           if (this.name.match(/IOP/)) { color_IOP(this); }\n                                                           if ( ($(this).id != 'IMP') &&\n                                                                (!this.name.match(/^inc_/)) &&\n                                                                (!this.name.match(/_modifier$/))\n                                                              ) {\n                                                              submit_form();\n                                                            } else {\n                                                                $(\"#IMP_start_acc\").slideDown();\n                                                           }\n                                                         });\n                $(\"[name='CANVAS_selector']\").on(\"change\", function(){\n                    //we are going to display an old image from a previous encounter\n                    zone = this.id.match(/CANVAS_(.*)/)[1];\n                    if (this.value != 'current') {\n                        $(\"#\"+zone+\"_canvas\").addClass('nodisplay');\n                        $(\"#\"+zone+\"_olddrawing\").removeClass('nodisplay');\n                        show_PRIOR_CANVAS_section(zone, this.value);\n                    } else {\n                        $(\"#\"+zone+\"_canvas\").removeClass('nodisplay');\n\n                        $(\"#\"+zone+\"_olddrawing\").addClass('nodisplay');\n                    }\n                });\n\n\n                  $('#IMP').on(\"blur\", function() {\n                                 //add this DX to the obj.IMPPLAN_items array\n                                 //take the first line as the impression and the rest as the plan\n                                 var total_imp = $('#IMP').val();\n                                 $('#IMP').val('');//clear the box\n                                 var local_plan = '';\n                                 var local_code= '';\n                                 if (total_imp.length < '2') return; //reject text under two letters?\n                                 var re = /\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/; //official list of line delimiters for a regex\n                                 //local_impression is first line only[1]\n                                 var local_imp = total_imp.match(/^(.*)(?:\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029])(.*)/);\n                                 if (local_imp == null || local_imp[1] == null) {\n                                 local_imp = total_imp;\n                                 } else {\n                                 // If the first line was dropped in from the Builder via a draggable DX_list\n                                 // it will include the IMPRESSION + CODE.\n                                 // Consider stripping out the CODE\n                                 var local_imp_code = local_imp[1].match(/(.*)(ICD.*)$/);\n                                 if (local_imp_code) {\n                                 local_imp = local_imp_code[1];\n                                 local_code = local_imp_code[2];\n                                 local_plan = total_imp.replace(local_imp_code[0],''); //plan is line 2+ if present, strip off first line\n                                 local_plan = local_plan.replace(/^\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/,'');\n                                 } else {\n                                 local_imp = local_imp[1];\n                                 local_code = '';\n                                 local_plan = total_imp.replace(local_imp,''); //plan is line 2+ if present, strip off first line\n                                 local_plan = local_plan.replace(/^\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/,'');\n                                 }\n                                 }\n                                 if (obj.IMPPLAN_items ==null) obj.IMPPLAN_items = [];//can't push if array does not exist\n                                 obj.IMPPLAN_items.push({\n                                                        form_id: $('#form_id').val(),\n                                                        pid: $('#pid').val(),\n                                                        title: local_imp,\n                                                        plan: local_plan,\n                                                        code: local_code,\n                                                        codetext:'',\n                                                        codetype:'',\n                                                        codedesc:'',\n                                                        PMSFH_link: ''\n                                                        });\n                                 build_IMPPLAN(obj.IMPPLAN_items,'1');\n                                 store_IMPPLAN(obj.IMPPLAN_items);\n                            });\n                  $('#Add_Glasses').on('click', function() {\n                                          for (i=2; i <6; i++) { //come on, 5 current rx glasses should be enough...\n                                          if ($('#W_'+i).val() != '1') {\n                                          $('#W_'+i).val('1');\n                                          $('#LayerVision_W_'+i).removeClass('nodisplay');\n                                          if (i==5) { $('#Add_Glasses').addClass('nodisplay'); }\n                                          break;\n                                          }\n                                          }\n                                          });\n                  $(\"[name='reverseme']\").on('click', function() {\n                                                var target = this.id;\n                                                reverse_cylinder(target);\n                                                });\n\n                  $('#code_me_now').on('click', function(event) {\n                                          event.preventDefault();\n                                          build_CODING_list();\n                                          CODING_to_feesheet(CODING_items);\n                                          });\n                  $( \".widget a\" ).button();\n\n                  $( \"button\" ).button().on('click', function( event ) {\n                         event.preventDefault();\n                         });\n                  $('#visit_codes').on('change', function() {\n                                           var data_all = $(this).val();\n                                           var data = data_all.match(/^(.*)\\|(.*)\\|/);\n                                           visit_code = data[2];\n                                           visit_type = data[1];\n                                           });\n                  $('[name=\"visit_modifier\"]').on('click', function () {\n                    var item = this.id.match(/visit_mod_(.*)/)[1];\n                    if ($(this).hasClass('status_on')) {\n                        $(this).css(\"background-color\",\"navy\");\n                        $(this).removeClass('status_on');\n                        visit_modifier = visit_modifier.filter(function(e) { return e !== item });\n                    } else {\n                      $(this).css(\"background-color\",\"red\");\n                      $(this).addClass('status_on');\n                      visit_modifier.push(item);\n                    }\n                    build_CODING_list();\n                  });\n\n                  $('[id^=\"tabs-left-\"]').on('click', function () {\n                        var item = this.id.match(/tabs-left-(.*)/)[1];\n                        var value = $(\"#setting_\"+item).val();\n                        if (value !='1') {\n                            $(\"#setting_\"+item).val('1');\n                            $(this).removeClass('ui-state-default');\n                            $('#'+ item +'_1').removeClass('nodisplay');\n                            menu_select(item);\n                        } else {\n                            $(\"#setting_\"+item).val('0');\n                            $(this).addClass('ui-state-default');\n                            $('#'+ item +'_1').addClass('nodisplay');\n                        }\n                        update_PREFS();\n                  });\n\n                  $(document).on('change','[name=\"visit_status\"]', function (event) {\n                        var item = $( \"input[type=radio][name=visit_status]:checked\" ).val();\n                        update_appt_status(item);\n                  });\n\n                  $(document).on(\"click\", \"[name='visit_justifier']\", function () {\n                                                   var d = $(this).data();\n                                                   var item = d.justcode;\n                                                   if ($(this).hasClass('status_on')) {\n                                                       $(this).css(\"background-color\",\"navy\");\n                                                       $(this).removeClass('status_on');\n                                                       visit_justifier = visit_justifier.filter(function(e) { return e !== item });\n                                                   } else {\n                                                        $(this).css(\"background-color\",\"red\");\n                                                        $(this).addClass('status_on');\n                                                        visit_justifier.push(item);\n                                                   }\n                                                    build_CODING_list();\n                                               });\n                  $(document).on(\"click\", \"span[name$='_justifiers']\", function () {\n                        var item = parseInt( this.id.match(/_just_(.*)/)[1] ) + 1;\n                        if ($(this).hasClass('status_on')) {\n                            $(this).css(\"background-color\",\"navy\");\n                            $(this).removeClass('status_on');\n                        } else {\n                            if ( $('#visit_just_'+item).hasClass('status_on') ) {\n                                $('#visit_just_'+item).trigger('click');\n                            }\n                            $(this).css(\"background-color\",\"red\");\n                            $(this).addClass('status_on');\n                            if (!$('#visit_mod_25').hasClass(\"status_on\")) {\n                                $('#visit_mod_25').trigger('click');\n                            }\n                        }\n                    build_CODING_list();\n                  });\n\n                  build_IMPPLAN(obj.IMPPLAN_items);\n\n                    $('[id^=\"BUTTON_TAB_\"]').on('click', function () {\n                        var item = this.id.match(/BUTTON_TAB_(.*)/)[1];\n\n                        $('#tabs-left-'+item).addClass('ui-state-default');\n                        $(\"#setting_\"+item).val('0');\n                        $(\"#\"+item+'_1').addClass('nodisplay');\n                        $(\"#tabs_left\").removeClass('nodisplay');\n                        update_PREFS();\n                    });\n                    show_by_setting();\n                  $(\"input,textarea,text\").on(\"focus\", function(){\n                                                 $(this).css(\"background-color\",\"#ffff99\");\n                                                 });\n                  //This listener no longer works in tabs because of the new tab wrapper.\n                  $(window).bind('onbeforeunload', function(){\n                    alert('Closing time');\n                    if ($('#chart_status').val()==\"on\") {\n                        unlock();\n                    }\n                  });\n                });\n", "<?php\n\n/**\n * dynamic_finder.php\n *\n * Sponsored by David Eschelbacher, MD\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Rod Roark <rod@sunsetsystems.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n * @copyright Copyright (c) 2012-2016 Rod Roark <rod@sunsetsystems.com>\n * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2019 Jerry Padgett <sjpadgett@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nrequire_once(dirname(__FILE__) . \"/../../globals.php\");\nrequire_once \"$srcdir/user.inc.php\";\nrequire_once \"$srcdir/options.inc.php\";\n\nuse OpenEMR\\Common\\Acl\\AclMain;\nuse OpenEMR\\Common\\Csrf\\CsrfUtils;\nuse OpenEMR\\Core\\Header;\nuse OpenEMR\\OeUI\\OemrUI;\n\n$uspfx = 'patient_finder.'; //substr(__FILE__, strlen($webserver_root)) . '.';\n$patient_finder_exact_search = prevSetting($uspfx, 'patient_finder_exact_search', 'patient_finder_exact_search', ' ');\n\n$popup = empty($_REQUEST['popup']) ? 0 : 1;\n$searchAny = empty($_GET['search_any']) ? \"\" : $_GET['search_any'];\nunset($_GET['search_any']);\n// Generate some code based on the list of columns.\n//\n$colcount = 0;\n$header0 = \"\";\n$header = \"\";\n$coljson = \"\";\n$orderjson = \"\";\n$res = sqlStatement(\"SELECT option_id, title, toggle_setting_1 FROM list_options WHERE \" .\n    \"list_id = 'ptlistcols' AND activity = 1 ORDER BY seq, title\");\n$sort_dir_map = generate_list_map('Sort_Direction');\nwhile ($row = sqlFetchArray($res)) {\n    $colname = $row['option_id'];\n    $colorder = $sort_dir_map[$row['toggle_setting_1']]; // Get the title 'asc' or 'desc' using the value\n    $title = xl_list_label($row['title']);\n    $title1 = ($title == xl('Full Name')) ? xl('Name') : $title;\n    $header .= \"   <th>\";\n    $header .= text($title);\n    $header .= \"</th>\\n\";\n    $header0 .= \"   <td ><input type='text' size='20' \";\n    $header0 .= \"value='' class='form-control search_init' placeholder='\" . xla(\"Search by\") . \" \" . $title1 . \"'/></td>\\n\";\n    if ($coljson) {\n        $coljson .= \", \";\n    }\n\n    $coljson .= \"{\\\"sName\\\": \\\"\" . addcslashes($colname, \"\\t\\r\\n\\\"\\\\\") . \"\\\"\";\n    if ($title1 == xl('Name')) {\n        $coljson .= \", \\\"mRender\\\": wrapInLink\";\n    }\n    $coljson .= \"}\";\n    if ($orderjson) {\n        $orderjson .= \", \";\n    }\n    $orderjson .= \"[\\\"$colcount\\\", \\\"\" . addcslashes($colorder, \"\\t\\r\\n\\\"\\\\\") . \"\\\"]\";\n    ++$colcount;\n}\n$loading = \"<div class='spinner-border' role='status'><span class='sr-only'>\" . xlt(\"Loading\") . \"...</span></div>\";\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <?php Header::setupHeader(['datatables', 'datatables-colreorder', 'datatables-dt', 'datatables-bs']); ?>\n    <title><?php echo xlt(\"Patient Finder\"); ?></title>\n<style>\n    /* Finder Processing style */\n    div.dataTables_wrapper div.dataTables_processing {\n        width: auto;\n        margin: 0;\n        color: var(--danger);\n        transform: translateX(-50%);\n    }\n    .card {\n        border: 0;\n        border-radius: 0;\n    }\n\n    @media screen and (max-width: 640px) {\n        .dataTables_wrapper .dataTables_length,\n        .dataTables_wrapper .dataTables_filter {\n            float: inherit;\n            text-align: justify;\n        }\n    }\n\n    /* Color Overrides for jQuery-DT */\n    table.dataTable thead th,\n    table.dataTable thead td {\n        border-bottom: 1px solid var(--gray900) !important;\n    }\n\n    table.dataTable tfoot th,\n    table.dataTable tfoot td {\n        border-top: 1px solid var(--gray900) !important;\n    }\n\n    table.dataTable tbody tr {\n        background-color: var(--white) !important;\n        cursor: pointer;\n    }\n\n    table.dataTable.row-border tbody th,\n    table.dataTable.row-border tbody td,\n    table.dataTable.display tbody th,\n    table.dataTable.display tbody td {\n        border-top: 1px solid var(--gray300) !important;\n    }\n\n    table.dataTable.cell-border tbody th,\n    table.dataTable.cell-border tbody td {\n        border-top: 1px solid var(--gray300) !important;\n        border-right: 1px solid var(--gray300) !important;\n    }\n\n    table.dataTable.cell-border tbody tr th:first-child,\n    table.dataTable.cell-border tbody tr td:first-child {\n        border-left: 1px solid var(--gray300) !important;\n    }\n\n    table.dataTable.stripe tbody tr.odd,\n    table.dataTable.display tbody tr.odd {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.hover tbody tr:hover,\n    table.dataTable.display tbody tr:hover {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.order-column tbody tr>.sorting_1,\n    table.dataTable.order-column tbody tr>.sorting_2,\n    table.dataTable.order-column tbody tr>.sorting_3,\n    table.dataTable.display tbody tr>.sorting_1,\n    table.dataTable.display tbody tr>.sorting_2,\n    table.dataTable.display tbody tr>.sorting_3 {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.display tbody tr.odd>.sorting_1,\n    table.dataTable.order-column.stripe tbody tr.odd>.sorting_1 {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.display tbody tr.odd>.sorting_2,\n    table.dataTable.order-column.stripe tbody tr.odd>.sorting_2 {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.display tbody tr.odd>.sorting_3,\n    table.dataTable.order-column.stripe tbody tr.odd>.sorting_3 {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.display tbody tr.even>.sorting_1,\n    table.dataTable.order-column.stripe tbody tr.even>.sorting_1 {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.display tbody tr.even>.sorting_2,\n    table.dataTable.order-column.stripe tbody tr.even>.sorting_2 {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.display tbody tr.even>.sorting_3,\n    table.dataTable.order-column.stripe tbody tr.even>.sorting_3 {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.display tbody tr:hover>.sorting_1,\n    table.dataTable.order-column.hover tbody tr:hover>.sorting_1 {\n        background-color: var(--gray200) !important;\n    }\n\n    table.dataTable.display tbody tr:hover>.sorting_2,\n    table.dataTable.order-column.hover tbody tr:hover>.sorting_2 {\n        background-color: var(--gray200) !important;\n    }\n\n    table.dataTable.display tbody tr:hover>.sorting_3,\n    table.dataTable.order-column.hover tbody tr:hover>.sorting_3 {\n        background-color: var(--gray200) !important;\n    }\n\n    table.dataTable.display tbody .odd:hover,\n    table.dataTable.display tbody .even:hover {\n        background-color: var(--gray200) !important;\n    }\n\n    table.dataTable.no-footer {\n        border-bottom: 1px solid var(--gray900) !important;\n    }\n\n    .dataTables_wrapper .dataTables_processing {\n        background-color: var(--white) !important;\n        background: -webkit-gradient(linear, left top, right top, color-stop(0%, transparent), color-stop(25%, rgba(var(--black), 0.9)), color-stop(75%, rgba(var(--black), 0.9)), color-stop(100%, transparent)) !important;\n        background: -webkit-linear-gradient(left, transparent 0%, rgba(var(--black), 0.9) 25%, rgba(var(--black), 0.9) 75%, transparent 100%) !important;\n        background: -moz-linear-gradient(left, transparent 0%, rgba(var(--black), 0.9) 25%, rgba(var(--black), 0.9) 75%, transparent 100%) !important;\n        background: -ms-linear-gradient(left, transparent 0%, rgba(var(--black), 0.9) 25%, rgba(var(--black), 0.9) 75%, transparent 100%) !important;\n        background: -o-linear-gradient(left, transparent 0%, rgba(var(--black), 0.9) 25%, rgba(var(--black), 0.9) 75%, transparent 100%) !important;\n        background: linear-gradient(to right, transparent 0%, rgba(var(--black), 0.9) 25%, rgba(var(--black), 0.9) 75%, transparent 100%) !important;\n    }\n\n    .dataTables_wrapper .dataTables_length,\n    .dataTables_wrapper .dataTables_filter,\n    .dataTables_wrapper .dataTables_info,\n    .dataTables_wrapper .dataTables_processing,\n    .dataTables_wrapper .dataTables_paginate {\n        color: var(--dark) !important;\n    }\n\n    div.dataTables_length select {\n        width: 50px !important;\n    }\n\n    .dataTables_wrapper.no-footer .dataTables_scrollBody {\n        border-bottom: 1px solid var(--gray900) !important;\n    }\n\n    /* Pagination button Overrides for jQuery-DT */\n    .dataTables_wrapper .dataTables_paginate .paginate_button {\n        padding: 0 !important;\n        margin: 0 !important;\n        border: 0 !important;\n    }\n\n    /* Sort indicator Overrides for jQuery-DT */\n    table thead .sorting::before,\n    table thead .sorting_asc::before,\n    table thead .sorting_asc::after,\n    table thead .sorting_desc::before,\n    table thead .sorting_desc::after,\n    table thead .sorting::after {\n        display: none !important;\n    }\n</style>\n<script>\n    var uspfx = '<?php echo attr($uspfx); ?>';\n\n    $(function () {\n        // Initializing the DataTable.\n        //\n        let serverUrl = \"dynamic_finder_ajax.php?csrf_token_form=\" + <?php echo js_url(CsrfUtils::collectCsrfToken()); ?>;\n        let srcAny = <?php echo js_url($searchAny); ?>;\n        if (srcAny) {\n            serverUrl += \"&search_any=\" + srcAny;\n        }\n        var oTable = $('#pt_table').dataTable({\n            \"processing\": true,\n            // next 2 lines invoke server side processing\n            \"serverSide\": true,\n            // NOTE kept the legacy command 'sAjaxSource' here for now since was unable to get\n            // the new 'ajax' command to work.\n            \"sAjaxSource\": serverUrl,\n            \"fnServerParams\": function (aoData) {\n                var searchType = $(\"#setting_search_type:checked\").length > 0;\n                aoData.push({\"name\": \"searchType\", \"value\": searchType});\n            },\n            // dom invokes ColReorderWithResize and allows inclusion of a custom div\n            \"dom\": 'Rlfrt<\"mytopdiv\">ip',\n            // These column names come over as $_GET['sColumns'], a comma-separated list of the names.\n            // See: http://datatables.net/usage/columns and\n            // http://datatables.net/release-datatables/extras/ColReorder/server_side.html\n            \"columns\": [ <?php echo $coljson; ?> ],\n            \"order\": [ <?php echo $orderjson; ?> ],\n            \"lengthMenu\": [10, 25, 50, 100],\n            \"pageLength\": <?php echo empty($GLOBALS['gbl_pt_list_page_size']) ? '10' : $GLOBALS['gbl_pt_list_page_size']; ?>,\n            <?php // Bring in the translations ?>\n            <?php $translationsDatatablesOverride = array('search' => (xla('Search all columns') . ':')); ?>\n            <?php $translationsDatatablesOverride = array('processing' => $loading); ?>\n            <?php require($GLOBALS['srcdir'] . '/js/xl/datatables-net.js.php'); ?>\n        });\n\n\n        <?php\n        $checked = (!empty($GLOBALS['gbl_pt_list_new_window'])) ? 'checked' : '';\n        ?>\n        $(\"div.mytopdiv\").html(\"<form name='myform'><div class='form-check form-check-inline'><label for='form_new_window' class='form-check-label' id='form_new_window_label'><input type='checkbox' class='form-check-input' id='form_new_window' name='form_new_window' value='1' <?php echo $checked; ?> /><?php echo xlt('Open in New Window'); ?></label></div><div class='form-check form-check-inline'><label for='setting_search_type' id='setting_search_type_label' class='form-check-label'><input type='checkbox' name='setting_search_type' class='form-check-input' id='setting_search_type' onchange='persistCriteria(this, event)' value='<?php echo attr($patient_finder_exact_search); ?>'<?php echo text($patient_finder_exact_search); ?>/><?php echo xlt('Search with exact method'); ?></label></div></form>\");\n\n        // This is to support column-specific search fields.\n        // Borrowed from the multi_filter.html example.\n        $(\"thead input\").keyup(function () {\n            // Filter on the column (the index) of this element\n            oTable.fnFilter(this.value, $(\"thead input\").index(this));\n        });\n\n        $('#pt_table').on('mouseenter', 'tbody tr', function() {\n            $(this).find('a').css('text-decoration', 'underline');\n        });\n        $('#pt_table').on('mouseleave', 'tbody tr', function() {\n            $(this).find('a').css('text-decoration', '');\n        });\n        // OnClick handler for the rows\n        $('#pt_table').on('click', 'tbody tr', function () {\n            // ID of a row element is pid_{value}\n            var newpid = this.id.substring(4);\n            // If the pid is invalid, then don't attempt to set\n            // The row display for \"No matching records found\" has no valid ID, but is\n            // otherwise clickable. (Matches this CSS selector).  This prevents an invalid\n            // state for the PID to be set.\n            if (newpid.length === 0) {\n                return;\n            }\n            if (document.myform.form_new_window.checked) {\n                openNewTopWindow(newpid);\n            }\n            else {\n                top.restoreSession();\n                top.RTop.location = \"../../patient_file/summary/demographics.php?set_pid=\" + encodeURIComponent(newpid);\n            }\n        });\n    });\n\n    function wrapInLink(data, type, full) {\n        if (type == 'display') {\n            return '<a href=\"\">' + data + \"</a>\";\n        } else {\n            return data;\n        }\n    }\n\n    function openNewTopWindow(pid) {\n        document.fnew.patientID.value = pid;\n        top.restoreSession();\n        document.fnew.submit();\n    }\n\n    function persistCriteria(el, e) {\n        e.preventDefault();\n        let target = uspfx + \"patient_finder_exact_search\";\n        let val = el.checked ? ' checked' : ' ';\n        top.restoreSession();\n        $.post(\"../../../library/ajax/user_settings.php\",\n            {\n                target: target,\n                setting: val,\n                csrf_token_form: \"<?php echo attr(CsrfUtils::collectCsrfToken()); ?>\"\n            }\n        );\n    }\n\n</script>\n<?php\n    $arrOeUiSettings = array(\n    'heading_title' => xl('Patient Finder'),\n    'include_patient_name' => false,\n    'expandable' => true,\n    'expandable_files' => array('dynamic_finder_xpd'),//all file names need suffix _xpd\n    'action' => \"search\",//conceal, reveal, search, reset, link or back\n    'action_title' => \"\",//only for action link, leave empty for conceal, reveal, search\n    'action_href' => \"\",//only for actions - reset, link or back\n    'show_help_icon' => false,\n    'help_file_name' => \"\"\n    );\n    $oemr_ui = new OemrUI($arrOeUiSettings);\n    ?>\n</head>\n<body>\n    <div id=\"container_div\" class=\"<?php echo attr($oemr_ui->oeContainer()); ?> mt-3\">\n         <div class=\"w-100\">\n            <?php echo $oemr_ui->pageHeading() . \"\\r\\n\"; ?>\n            <?php if (AclMain::aclCheckCore('patients', 'demo', '', array('write','addonly'))) { ?>\n                <button id=\"create_patient_btn1\" class=\"btn btn-primary btn-add\" onclick=\"top.restoreSession();top.RTop.location = '<?php echo $web_root ?>/interface/new/new.php'\"><?php echo xlt('Add New Patient'); ?></button>\n            <?php } ?>\n            <div>\n                <div id=\"dynamic\"><!-- TBD: id seems unused, is this div required? -->\n                    <!-- Class \"display\" is defined in demo_table.css -->\n                    <div class=\"table-responsive\">\n                        <table class=\"table\" class=\"border-0 display\" id=\"pt_table\">\n                            <thead class=\"thead-dark\">\n                                <tr id=\"advanced_search\" class=\"hideaway d-none\">\n                                    <?php echo $header0; ?>\n                                </tr>\n                                <tr class=\"\">\n                                    <?php echo $header; ?>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <!-- Class \"dataTables_empty\" is defined in jquery.dataTables.css -->\n                                    <td class=\"dataTables_empty\" colspan=\"<?php echo attr($colcount); ?>\">...</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n          </div>\n        </div>\n        <!-- form used to open a new top level window when a patient row is clicked -->\n        <form name='fnew' method='post' target='_blank' action='../main_screen.php?auth=login&site=<?php echo attr_url($_SESSION['site_id']); ?>'>\n            <input type=\"hidden\" name=\"csrf_token_form\" value=\"<?php echo attr(CsrfUtils::collectCsrfToken()); ?>\" />\n            <input type='hidden' name='patientID' value='0'/>\n        </form>\n    </div> <!--End of Container div-->\n    <?php $oemr_ui->oeBelowContainerDiv();?>\n\n    <script>\n        $(function () {\n            $(\"#exp_cont_icon\").click(function () {\n                $(\"#pt_table\").removeAttr(\"style\");\n            });\n        });\n\n        $(window).on(\"resize\", function() { //portrait vs landscape\n           $(\"#pt_table\").removeAttr(\"style\");\n        });\n    </script>\n    <script>\n      $(function() {\n        $(\"#pt_table_filter\").addClass(\"d-md-initial\");\n        $(\"#pt_table_length\").addClass(\"d-md-initial\");\n        $(\"#show_hide\").addClass(\"d-md-initial\");\n        $(\"#search_hide\").addClass(\"d-md-initial\");\n        $(\"#pt_table_length\").addClass(\"d-none\");\n        $(\"#show_hide\").addClass(\"d-none\");\n        $(\"#search_hide\").addClass(\"d-none\");\n      });\n    </script>\n\n    <script>\n        document.addEventListener('touchstart', {});\n    </script>\n\n    <script>\n        $(function() {\n            $('div.dataTables_filter input').focus();\n        });\n    </script>\n</body>\n</html>\n", "<?php\n\n/**\n * dynamic_finder_ajax.php\n *\n * Sponsored by David Eschelbacher, MD\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Rod Roark <rod@sunsetsystems.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n * @copyright Copyright (c) 2012 Rod Roark <rod@sunsetsystems.com>\n * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2019 Jerry Padgett <sjpadgett@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nrequire_once(dirname(__FILE__) . \"/../../globals.php\");\nrequire_once($GLOBALS['srcdir'] . \"/options.inc.php\");\n\nuse OpenEMR\\Events\\BoundFilter;\nuse OpenEMR\\Events\\PatientFinder\\PatientFinderFilterEvent;\nuse OpenEMR\\Events\\PatientFinder\\ColumnFilter;\n\n// Not checking csrf for good reasons.\n//  1. Not needed since no state changes in this script\n//  2. It will cause potential session clash fails because it throws a popup which messes things up\n//     when opening a patient in a new window.\n\n$popup = empty($_REQUEST['popup']) ? 0 : 1;\n$searchAny = !empty($_GET['search_any']) && empty($_GET['sSearch']) ? $_GET['search_any'] : \"\";\n\n// With the ColReorder or ColReorderWithResize plug-in, the expected column\n// ordering may have been changed by the user.  So we cannot depend on\n// list_options to provide that.\n// Addition of an any column search from dem layouts. sjp 05/04/2019\n// Probably could have used a session var here because datatable server url\n// presists not allowing easy way to unset any for normal search but opted not.\n//\nif ($searchAny) {\n    $_GET['sSearch'] = $searchAny;\n    $layoutCols = sqlStatement(\n        \"SELECT field_id FROM layout_options WHERE form_id = 'DEM'\n            AND field_id not like ? AND field_id not like ? AND uor !=0\",\n        array('em\\_%', 'add%')\n    );\n    for ($iter = 0; $row = sqlFetchArray($layoutCols); $iter++) {\n        $aColumns[] = $row['field_id'];\n    }\n} else {\n    $aColumns = explode(',', $_GET['sColumns']);\n}\n// Paging parameters.  -1 means not applicable.\n//\n$iDisplayStart  = isset($_GET['iDisplayStart' ]) ? 0 + $_GET['iDisplayStart' ] : -1;\n$iDisplayLength = isset($_GET['iDisplayLength']) ? 0 + $_GET['iDisplayLength'] : -1;\n$limit = '';\nif ($iDisplayStart >= 0 && $iDisplayLength >= 0) {\n    $limit = \"LIMIT \" . escape_limit($iDisplayStart) . \", \" . escape_limit($iDisplayLength);\n}\n// Search parameter.  -1 means .\n//\n$searchMethodInPatientList = isset($_GET['searchType' ]) && $_GET['searchType' ] === \"true\" ?  true : false;\n\n// Column sorting parameters.\n//\n$orderby = '';\nif (isset($_GET['iSortCol_0'])) {\n    for ($i = 0; $i < intval($_GET['iSortingCols']); ++$i) {\n        $iSortCol = intval($_GET[\"iSortCol_$i\"]);\n        if ($_GET[\"bSortable_$iSortCol\"] == \"true\") {\n            $sSortDir = escape_sort_order($_GET[\"sSortDir_$i\"]); // ASC or DESC\n            // We are to sort on column # $iSortCol in direction $sSortDir.\n            $orderby .= $orderby ? ', ' : 'ORDER BY ';\n            //\n            if ($aColumns[$iSortCol] == 'name') {\n                $orderby .= \"lname $sSortDir, fname $sSortDir, mname $sSortDir\";\n            } else {\n                $orderby .= \"`\" . escape_sql_column_name($aColumns[$iSortCol], array('patient_data')) . \"` $sSortDir\";\n            }\n        }\n    }\n}\n\n// Helper function for filtering dates. Returns a string for use with MySQL LIKE.\n// Examples (assuming US date formats):\n//   12       => Any date with \"12\" in it\n//   1977     => Any date with \"1977\" in it (therefore year 1977)\n//   197/12/1 => Dec. 1 of any year in the 1970's\n//   12/1/197 => Same\n//   12/1     => Dec. 1 of any year\n//   /1       => The first day of any month of any year\n// Any non-digit character may be used instead of \"/\".\n//\nfunction dateSearch($sSearch)\n{\n    // Determine if MDY date format is used, preferring Date Display Format from\n    // global settings if it's not YMD, otherwise guessing from country code.\n    $mdy = empty($GLOBALS['date_display_format']) ?\n        ($GLOBALS['phone_country_code'] == 1) : ($GLOBALS['date_display_format'] == 1);\n    // If no delimiters then just search the whole date.\n    $mystr = \"%$sSearch%\";\n    if (preg_match('/[^0-9]/', $sSearch)) {\n        // Delimiter found. Separate it all into year, month and day components.\n        $parts = preg_split('/[^0-9]/', $sSearch);\n        $parts[1] = $parts[1] ?? '';\n        $parts[2] = $parts[2] ?? '';\n        // If the first part is more than 2 digits then assume y/m/d format.\n        // Otherwise assume MDY or DMY format as appropriate.\n        if (strlen($parts[0]) <= 2) {\n            $parts = $mdy ? array($parts[2], $parts[0], $parts[1]) :\n                array($parts[2], $parts[1], $parts[0]);\n        }\n        // A single-digit day or month is zero-filled. Fill in other missing\n        // digits with wildcards. A 2-digit year like 19 becomes 19__, not __19.\n        $parts[0] = substr($parts[0] . '____', 0, 4);\n        if (strlen($parts[1]) == 0) {\n            $parts[1] = '__';\n        } elseif (strlen($parts[1]) == 1) {\n            $parts[1] = '0' . $parts[1];\n        }\n        if (strlen($parts[2]) == 0) {\n            $parts[2] = '__';\n        } elseif (strlen($parts[2]) == 1) {\n            $parts[2] = '0' . $parts[2];\n        }\n        $mystr = $parts[0] . '-' . $parts[1] . '-' . $parts[2];\n    }\n    return $mystr;\n}\n\n// Global filtering.\n//\n$where = \"\";\n$srch_bind = array();\nif (isset($_GET['sSearch']) && $_GET['sSearch'] !== \"\") {\n    $sSearch = trim($_GET['sSearch']);\n    foreach ($aColumns as $colname) {\n        $where .= $where ? \" OR \" : \" ( \";\n        if ($colname == 'name') {\n            $where .=\n                \"lname LIKE ? OR \" .\n                \"fname LIKE ? OR \" .\n                \"mname LIKE ? \";\n            if ($searchMethodInPatientList) { // exact search\n                array_push($srch_bind, $sSearch, $sSearch, $sSearch);\n            } else {// like search\n                array_push($srch_bind, ($sSearch . \"%\"), ($sSearch . \"%\"), ($sSearch . \"%\"));\n            }\n        } elseif ($searchMethodInPatientList) { // exact search\n            $where .= \"`\" . escape_sql_column_name($colname, array('patient_data')) . \"` LIKE ? \";\n            array_push($srch_bind, $sSearch);\n        } elseif ($searchAny) {\n            $where .= \" `\" . escape_sql_column_name($colname, array('patient_data')) . \"` LIKE ?\"; // any search\n            array_push($srch_bind, ('%' . $sSearch . '%'));\n        } else {\n            $where .= \"`\" . escape_sql_column_name($colname, array('patient_data')) . \"` LIKE ? \";\n            array_push($srch_bind, ($sSearch . '%'));\n        }\n    }\n\n    if ($where) {\n        $where .= \")\";\n    }\n}\n\n// Column-specific filtering.\n//\n$columnFilters = [];\nfor ($i = 0; $i < count($aColumns); ++$i) {\n    $colname = $aColumns[$i];\n    if (isset($_GET[\"bSearchable_$i\"]) && $_GET[\"bSearchable_$i\"] == \"true\" && $_GET[\"sSearch_$i\"] != '') {\n        $where .= $where ? ' AND ' : '';\n        $sSearch = $_GET[\"sSearch_$i\"];\n        $columnFilters[] = new ColumnFilter($colname, $sSearch);\n        if ($colname == 'name') {\n            $where .=\n                \"lname LIKE ? OR \" .\n                \"fname LIKE ? OR \" .\n                \"mname LIKE ? \";\n            if ($searchMethodInPatientList) { // exact search\n                array_push($srch_bind, $sSearch, $sSearch, $sSearch);\n            } else {// like search\n                array_push($srch_bind, ($sSearch . \"%\"), ($sSearch . \"%\"), ($sSearch . \"%\"));\n            }\n        } elseif ($colname == 'DOB') {\n            $where .= \"`\" . escape_sql_column_name($colname, array('patient_data')) . \"` LIKE ? \";\n            array_push($srch_bind, dateSearch($sSearch));\n        } elseif ($searchMethodInPatientList) { // exact search\n            $where .= \"`\" . escape_sql_column_name($colname, array('patient_data')) . \"` LIKE ? \";\n            array_push($srch_bind, $sSearch);\n        } else {\n            $where .= \"`\" . escape_sql_column_name($colname, array('patient_data')) . \"` LIKE ? \";\n            array_push($srch_bind, ($sSearch . '%'));\n        }\n    }\n}\n\n// Custom filtering, before datatables filtering created by the user\n// This allows a module to subscribe to a 'patient-finder.filter' event and\n// add filtering before data ever gets to the user\n$patientFinderFilterEvent = new PatientFinderFilterEvent(new BoundFilter(), $aColumns, $columnFilters);\n$patientFinderFilterEvent = $GLOBALS[\"kernel\"]->getEventDispatcher()->dispatch($patientFinderFilterEvent, PatientFinderFilterEvent::EVENT_HANDLE, 10);\n$boundFilter = $patientFinderFilterEvent->getBoundFilter();\n$customWhere = $boundFilter->getFilterClause();\n$srch_bind = array_merge($boundFilter->getBoundValues(), $srch_bind);\n\n// Compute list of column names for SELECT clause.\n// Always includes pid because we need it for row identification.\n//\nif ($searchAny) {\n    $aColumns = explode(',', $_GET['sColumns']);\n}\n$sellist = 'pid';\nforeach ($aColumns as $colname) {\n    if ($colname == 'pid') {\n        continue;\n    }\n\n    $sellist .= \", \";\n    if ($colname == 'name') {\n        $sellist .= \"lname, fname, mname\";\n    } else {\n        $sellist .= \"`\" . escape_sql_column_name($colname, array('patient_data')) . \"`\";\n    }\n}\n\n// Get total number of rows in the table.\n// Include the custom filter clause and bound values, if any\n$row = sqlQuery(\"SELECT COUNT(id) AS count FROM patient_data WHERE $customWhere\", $boundFilter->getBoundValues());\n$iTotal = $row['count'];\n\n// Get total number of rows in the table after filtering.\n//\nif (empty($where)) {\n    $where = $customWhere;\n} else {\n    $where = \"$customWhere AND ( $where )\";\n}\n$row = sqlQuery(\"SELECT COUNT(id) AS count FROM patient_data WHERE $where\", $srch_bind);\n$iFilteredTotal = $row['count'];\n\n// Build the output data array.\n//\n$out = array(\n    \"sEcho\"                => intval($_GET['sEcho']),\n    \"iTotalRecords\"        => $iTotal,\n    \"iTotalDisplayRecords\" => $iFilteredTotal,\n    \"aaData\"               => array()\n);\n\n// save into variable data about fields of 'patient_data' from 'layout_options'\n$fieldsInfo = array();\n$quoteSellist = preg_replace('/(\\w+)/i', '\"${1}\"', str_replace('`', '', $sellist));\n$res = sqlStatement('SELECT data_type, field_id, list_id FROM layout_options WHERE form_id = \"DEM\" AND field_id IN(' . $quoteSellist . ')');\nwhile ($row = sqlFetchArray($res)) {\n    $fieldsInfo[$row['field_id']] = $row;\n}\n\n$query = \"SELECT $sellist FROM patient_data WHERE $where $orderby $limit\";\n$res = sqlStatement($query, $srch_bind);\nwhile ($row = sqlFetchArray($res)) {\n    // Each <tr> will have an ID identifying the patient.\n    $arow = array('DT_RowId' => 'pid_' . $row['pid']);\n    foreach ($aColumns as $colname) {\n        if ($colname == 'name') {\n            $name = $row['lname'];\n            if ($name && $row['fname']) {\n                $name .= ', ';\n            }\n\n            if ($row['fname']) {\n                $name .= $row['fname'];\n            }\n\n            if ($row['mname']) {\n                $name .= ' ' . $row['mname'];\n            }\n\n            $arow[] = attr($name);\n        } else {\n            $arow[] = isset($fieldsInfo[$colname]) ? attr(generate_plaintext_field($fieldsInfo[$colname], $row[$colname])) : attr($row[$colname]);\n        }\n    }\n\n    $out['aaData'][] = $arow;\n}\n\n// error_log($query); // debugging\n\n// Dump the output array as JSON.\n//\n// Encoding with options for escaping a special chars - JSON_HEX_TAG (<)(>), JSON_HEX_AMP(&), JSON_HEX_APOS('), JSON_HEX_QUOT(\").\necho json_encode($out, 15);\n", "<?php\n\n// +-----------------------------------------------------------------------------+\n// Copyright (C) 2011 Z&H Consultancy Services Private Limited <sam@zhservices.com>\n//\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n//\n// A copy of the GNU General Public License is included along with this program:\n// openemr/interface/login/GnuGPL.html\n// For more information write to the Free Software\n// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n//\n// Author:   Eldho Chacko <eldho@zhservices.com>\n//           Jacob T Paul <jacob@zhservices.com>\n//\n// +------------------------------------------------------------------------------+\n\n\n\nrequire_once(\"../../interface/globals.php\");\n\nuse OpenEMR\\Core\\Header;\n\n$list_id = $_REQUEST['list_id'];\n?>\n<html>\n    <head>\n        <?php Header::setupHeader(); ?>\n        <script>\n        function add_template(){\n                top.restoreSession();\n                len = document.getElementById('provider').options.length;\n                sel_len=0;\n                val=\"\";\n                for(i=0;i<len;i++){\n                   if(document.getElementById('provider').options[i].selected==true){\n                    sel_len++;\n                    val+=document.getElementById('provider').options[i].value+\"|\";\n                   }\n                }\n                if(sel_len>0){\n                $.ajax({\n                type: \"POST\",\n                url: \"ajax_code.php\",\n                dataType: \"html\",\n                data: {\n                     list_id: <?php echo htmlspecialchars($list_id, ENT_QUOTES);?>,\n                     multi: val,\n                     source: \"save_provider\"\n                },\n                async: false,\n                success: function(thedata){\n\n                            },\n                error:function(){\n                    alert(\"fail\");\n                }\n                });\n                dlgclose();\n                return;\n                }\n                else{\n                    alert(\"<?php echo addslashes(xl('You should select at least one Provider'));?>\");\n                }\n\n        }\n        </script>\n    </head>\n    <body class=\"body_top\">\n        <form >\n            <table>\n                <tr class=\"text\">\n                    <td>\n                        <select multiple name=\"provider[]\" id=\"provider\" size=\"5\">\n                            <?php\n                            $query = \"SELECT id, lname, fname FROM users WHERE authorized = 1 AND username != '' \" .\n                                    \"AND active = 1 AND ( info IS NULL OR info NOT LIKE '%Inactive%' ) ORDER BY lname, fname\";\n                            $res = sqlStatement($query);\n                            $sel_query = \"SELECT tu_user_id FROM template_users WHERE tu_template_id=?\";\n                            $row_sel = sqlQuery($sel_query, array($list_id));\n                            while ($row = sqlFetchArray($res)) {\n                                foreach ($row_sel as $key => $value) {\n                                    if ($value == $row['id']) {\n                                        $sel = \"selected\";\n                                    } else {\n                                        $sel = '';\n                                    }\n                                }\n                                echo \"<option value='\" . htmlspecialchars($row['id'], ENT_QUOTES) . \"' $sel>\" . htmlspecialchars($row['lname'] . \",\" . $row['fname'], ENT_QUOTES) . \"</option>\";\n                            }\n                            ?>\n                        </select>\n                    </td>\n                    <td>\n                    <a href=\"#\" onclick=\"add_template()\" class=\"btn btn-primary\"><span><?php echo htmlspecialchars(xl('Save'), ENT_QUOTES);?></span></a>\n                    </td>\n                </tr>\n            </table>\n        </form>\n    </body>\n</html>\n"], "fixing_code": ["<?php\n\n/**\n * forms/eye_mag/js/eye_base.php\n *\n * JS Functions for eye_mag form(s), built with php features for run-time options and translations\n *\n * @package   OpenEMR\n * @link      https://www.open-emr.org\n * @author    Ray Magauran <rmagauran@gmail.com>\n * @copyright Copyright (c) 2016- Raymond Magauran <rmagauran@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\n    require_once(\"../../../globals.php\");\n    require_once(\"$srcdir/api.inc.php\");\n    require_once(\"$srcdir/forms.inc.php\");\n    require_once(\"$srcdir/patient.inc.php\");\n\n    $providerID = $_REQUEST['providerID'];\n\n?>\nvar prior_field;\nvar prior_text;\nvar response = [];\nvar update_chart;\nvar obj= [];\nvar IMP_order = [];\nvar CODING_items=[];\nvar CPT_92060='';\nvar IMP_target =\"0\";\nvar detail_reached_exam ='0';\nvar detail_reached_HPI ='0';\nvar chronic_reached_HPI ='0';\n    //Coding Engine Defaults\nvar Code_group=\"Eyes\";//options are Eyes - anything else and Coding Engine prefers E&M Codes\nvar digit_2=\"2\"; //Eye Code\nvar digit_4=\"1\"; //Established\nvar digit_5=\"4\"; //Level 4\nvar visit_code;\nvar config_byday;\nvar $root = $('html, body');\nvar scroll='';\nvar visit_modifier=[];\nvar visit_justifier=[];\nif (typeof Code_new_est === 'undefined') {\n  var Code_new_est = 'New';\n}\nvar TESTS_built='';\nvar doc=[];\n/*\n * Functions to add a quick pick selection to the correct fields on the form.\n */\nfunction fill_QP_2fields(PEZONE, ODOSOU, LOCATION_text, selection, fill_action, Code_to_process) {\n    var prefix = document.getElementById(PEZONE+'_prefix').value;\n    if (prefix > '' && prefix !='off') {prefix = prefix + \" \";}\n    if ((prefix =='off')||(LOCATION_text =='')) { prefix=''; }\n    var saved_prefix = prefix;\n    if (ODOSOU ==\"OU\") {\n        fill_QP_field(PEZONE, \"OD\", LOCATION_text, selection, fill_action, Code_to_process);\n        fill_QP_field(PEZONE, \"OS\", LOCATION_text, selection, fill_action, Code_to_process,saved_prefix);\n    } else if  (ODOSOU ==\"B\") {\n        fill_QP_field(PEZONE, \"R\", LOCATION_text, selection, fill_action, Code_to_process);\n        fill_QP_field(PEZONE, \"L\", LOCATION_text, selection, fill_action, Code_to_process,saved_prefix);\n    }\n}\nfunction fill_QP_field(PEZONE, ODOSOU, LOCATION_text, selection, fill_action, Code_to_process,saved_prefix) {\n    if (ODOSOU > '') {\n        var FIELDID =  ODOSOU  + LOCATION_text;\n    } else {\n        var FIELDID =  document.getElementById(PEZONE+'_'+ODOSOU).value  + LOCATION_text;\n    }\n    var bgcolor = $(\"#\" +FIELDID).css(\"background-color\");\n\n    if (saved_prefix) {\n        var prefix = saved_prefix;\n    } else {\n        var prefix = document.getElementById(PEZONE+'_prefix').value;\n    }\n\n    var Fvalue = document.getElementById(FIELDID).value;\n    if (prefix > '' && prefix !='off') {prefix = prefix + \" \";}\n    if (prefix =='off') { prefix=''; }\n    if (fill_action ==\"REPLACE\") {\n        $(\"#\" +FIELDID).val(prefix +selection);\n        $(\"#\" +FIELDID).css(\"background-color\",\"#F0F8FF\");\n    } else if (fill_action ==\"APPEND\") {\n        $(\"#\" +FIELDID).val(Fvalue+selection).css(\"background-color\",\"#F0F8FF\");\n    } else {\n        if (($(\"#\" +FIELDID).css(\"background-color\")==\"rgb(245, 245, 220)\") || (Fvalue ==''))  {\n                //rgb(245, 245, 220) is beige - the field is untouched\n            $(\"#\" +FIELDID).val(prefix+selection).css(\"background-color\",\"#F0F8FF\");\n        } else if (Fvalue.match(/x$/)) {\n            $(\"#\" +FIELDID).val(Fvalue+selection).css(\"background-color\",\"#F0F8FF\");\n        } else {\n            if (Fvalue >'') prefix = \", \"+prefix;\n            $(\"#\" +FIELDID).val(Fvalue + prefix +selection).css(\"background-color\",\"#F0F8FF\");\n        }\n    }\n    submit_form(FIELDID);\n    $('#'+PEZONE+'_prefix').val('off').trigger('change');\n}\n\n/*\n * This is the core function of the form.\n * It submits the data in the background via ajax.\n * It is the reason we don't use a submit button.\n * It is called often, perhaps too often for some installs because it uses bandwidth.\n * It needs to be keenly looked at by developers as it will affect scalability.\n * It returns either \"Code 400\" or positive hits from the clinical data passed through the Coding engine.\n * It ensures ownership of the form or provides background updates to READ-ONLY instances of the form.\n * It doesn't unlock a form to change ownership/provide write privileges.  This is done via the unlock() function.\n */\nfunction submit_form(action) {\n    var url = \"../../forms/eye_mag/save.php?sub=1&mode=update&id=\" + $(\"#form_id\").val();\n    if ($(\"#COPY_SECTION\").value == \"READONLY\") return;\n    formData = $(\"form#eye_mag\").serialize();\n    if (formData =='') return;\n    $(\"#menustate\").val('0');\n    top.restoreSession();\n    $.ajax({\n           type   : 'POST',\n           url    : url,\n           data   : formData //,           dataType: \"json\"\n           }).done(function(result) {\n                   if (result == 'Code 400') {\n                   code_400(); //Not the owner: read-only mode or take ownership\n                   } else {\n                       // ACTIVE chart.\n                       // Coding engine returns any positive Clinical findings.\n                       //List these findings in the IMP_PLAN Builder\n                       if (action !='1') {populate_form(result);}\n                   }\n                   });\n};\n\n/*\n *  This function alerts the user that they have lost write privileges to another user.\n *  The form is locked (fields disabled) and they enter the READ-ONLY mode.\n *  In READ-ONLY mode the form is refreshed every 15 seconds showing changes made by the user with write privileges.\n */\nfunction code_400() {\n        //User lost ownership.  Just watching now...\n        //now we should get every variable and update the form, every 15 seconds...\n    $(\"#active_flag\").html(\" READ-ONLY \");\n    toggle_active_flags(\"off\");\n    alert(\"Another user has taken control of this form.\\rEntering READ-ONLY mode.\");\n    update_READONLY();\n    this_form_id = $(\"#form_id\").val();\n    $(\"#COPY_SECTION\").val(\"READONLY\");\n    update_chart = setInterval(function() {\n                               if ($(\"#chart_status\").value == \"on\") { clearInterval(update_chart); }\n                               update_READONLY();\n                               }, 15000);\n}\n\n/**\n *  Convert the DB datetime values into date objects in JS\n *\n * \"You should parse them to get a Date object, for that format I always use the following function:\n * http://stackoverflow.com/questions/2627650/why-javascript-gettime-is-not-a-function\"\n *\n */\nfunction parseDate(input) {\n    var parts = input.match(/(\\d+)/g);\n        // new Date(year, month [, date [, hours[, minutes[, seconds[, ms]]]]])\n    return new Date(parts[0], parts[1]-1, parts[2]); // months are 0-based\n}\n/*\n *  Function to check locked state\n */\nfunction check_lock(modify) {\n    var locked = $(\"#LOCKED\").val();\n    var locked_by = $(\"#LOCKEDBY\").val();\n    if ($(\"#LOCKEDDATE\").val() > '') {\n        var locked_date = parseDate($(\"#LOCKEDDATE\").val());\n    } else{\n        var locked_date= new Date('2000-01-01');\n    }\n    var uniqueID = $('#uniqueID').val();\n\n    var url = \"../../forms/eye_mag/save.php?mode=update&id=\" + $(\"#form_id\").val();\n    clearInterval(update_chart);\n        //if the form was locked > 1 hour ago, tag we are it - we should auto-get ownership\n        //if not we have to physically take it.\n    var now =new Date();\n    now_time = now.getTime();\n    var interval = locked_date.setTime(locked_date.getTime() + (60*60*1000));//locked timestamp + 1 hour\n    if (modify=='1') {\n        if ($(\"#chart_status\").val() == \"on\") {\n            unlock();\n            toggle_active_flags(\"off\");\n            update_chart = setInterval(function() {\n                                       if ($(\"#chart_status\").val() == \"on\") { clearInterval(update_chart);}\n                                       update_READONLY();\n                                       }, 15000);\n            if ($(\"#chart_status\").value == \"on\") { clearInterval(update_chart); }\n        } else {\n            top.restoreSession();\n            $.ajax({\n                   type   : 'POST',\n                   url    : url,\n                   data   : {\n                   'acquire_lock'  : '1',\n                   'uniqueID'      : uniqueID,\n                   'form_id'       : $(\"#form_id\").val(),\n                   'locked_by'     : $(\"#LOCKEDBY\").val()\n                   }\n                   }).done(function(d) {\n                           $(\"#LOCKEDBY\").val(uniqueID);\n                           toggle_active_flags(\"on\");\n                           clearInterval(update_chart);\n                           });\n        }\n    } else if (locked =='1' && (interval < now_time)) { //it was locked more than an hour ago, take ownership quietly\n        top.restoreSession();\n        $.ajax({\n               type   : 'POST',\n               url    : url,\n               data   : {\n                 'acquire_lock'  : '1',\n                 'uniqueID'      : uniqueID, //this user is becoming the new owner\n                 'locked_by'     : locked_by, //this is the old owner\n                 'form_id'       : $(\"#form_id\").val()\n               }\n               }).done(function(d) {\n                       $(\"#LOCKEDBY\").val(uniqueID);\n                       $(\"#LOCKEDDATE\").val(d);\n                       toggle_active_flags(\"on\");\n                       }\n                       );\n    } else if (locked =='1' && locked_by >'' && (uniqueID != locked_by)) {\n            //form is locked by someone else, less than an hour ago...\n        $(\"#active_flag\").html(\" READ-ONLY \");\n        if (confirm('\\tLOCKED by another user:\\t\\n\\tSelect OK to take ownership or\\t\\n\\tCANCEL to enter READ-ONLY mode.\\t')) {\n            top.restoreSession();\n            $.ajax({\n                   type   : 'POST',\n                   url    : url,\n                   data     : {\n                   'acquire_lock'  : '1',\n                   'uniqueID'      : uniqueID, //this user is becoming the new owner\n                   'locked_by'     : locked_by, //this is the old owner\n                   'form_id'       : $(\"#form_id\").val()\n                   }\n                   }).done(function(d) {\n                           $(\"#LOCKEDBY\").val(uniqueID);\n                           toggle_active_flags(\"on\");\n                           }\n                           );\n        } else {\n                //User selected \"Cancel\" -- ie. doesn't want ownership.  Just watching...\n            toggle_active_flags(\"off\");\n            update_chart = setInterval(function() {\n                                       $(\"#COPY_SECTION\").trigger('change');\n                                       if ($(\"#chart_status\").val() == \"on\") { clearInterval(update_chart);}\n                                       update_READONLY();\n                                       }, 15000);\n            if ($(\"#chart_status\").value == \"on\") { clearInterval(update_chart); }\n\n        }\n    }\n}\n/*\n * Function to save a canvas by zone\n */\nfunction submit_canvas(zone) {\n    var id_here = document.getElementById('myCanvas_'+zone);\n    var dataURL = id_here.toDataURL('image/jpeg');\n    top.restoreSession();\n    $.ajax({\n           type: \"POST\",\n           url: \"../../forms/eye_mag/save.php?canvas=\"+zone+\"&id=\"+$(\"#form_id\").val(),\n           data: {\n           imgBase64     : dataURL,  //this contains the canvas + new strokes, the sketch.js foreground\n           'zone'        : zone,\n           'visit_date'  : $(\"#visit_date\").val(),\n           'encounter'   : $(\"#encounter\").val(),\n           'pid'         : $(\"#pid\").val()\n           }\n\n           }).done(function(o) {\n                   });\n}\n/*\n *  Function to update the user's preferences\n */\nfunction update_PREFS() {\n    var checker = $('#PREFS_TOOLTIPS').val();\n    if (checker > '') {\n        var url = \"../../forms/eye_mag/save.php\";\n        var formData = {\n            'AJAX_PREFS'            : \"1\",\n            'PREFS_VA'              : $('#PREFS_VA').val(),\n            'PREFS_W'               : $('#PREFS_W').val(),\n            'PREFS_MR'              : $('#PREFS_MR').val(),\n            'PREFS_W_width'         : $('#PREFS_W_width').val(),\n            'PREFS_MR_width'        : $('#PREFS_MR_width').val(),\n            'PREFS_CR'              : $('#PREFS_CR').val(),\n            'PREFS_CTL'             : $('#PREFS_CTL').val(),\n            'PREFS_ADDITIONAL'      : $('#PREFS_ADDITIONAL').val(),\n            'PREFS_VAX'             : $('#PREFS_VAX').val(),\n            'PREFS_RXHX'            : $('#PREFS_RXHX').val(),\n            'PREFS_IOP'             : $('#PREFS_IOP').val(),\n            'PREFS_CLINICAL'        : $('#PREFS_CLINICAL').val(),\n            'PREFS_EXAM'            : $('#PREFS_EXAM').val(),\n            'PREFS_CYL'             : $('#PREFS_CYL').val(),\n            'PREFS_EXT_VIEW'        : $('#PREFS_EXT_VIEW').val(),\n            'PREFS_ANTSEG_VIEW'     : $('#PREFS_ANTSEG_VIEW').val(),\n            'PREFS_RETINA_VIEW'     : $('#PREFS_RETINA_VIEW').val(),\n            'PREFS_NEURO_VIEW'      : $('#PREFS_NEURO_VIEW').val(),\n            'PREFS_ACT_VIEW'        : $('#PREFS_ACT_VIEW').val(),\n            'PREFS_ACT_SHOW'        : $('#PREFS_ACT_SHOW').val(),\n            'PREFS_HPI_RIGHT'       : $('#PREFS_HPI_RIGHT').val(),\n            'PREFS_PMH_RIGHT'       : $('#PREFS_PMH_RIGHT').val(),\n            'PREFS_EXT_RIGHT'       : $('#PREFS_EXT_RIGHT').val(),\n            'PREFS_ANTSEG_RIGHT'    : $('#PREFS_ANTSEG_RIGHT').val(),\n            'PREFS_RETINA_RIGHT'    : $('#PREFS_RETINA_RIGHT').val(),\n            'PREFS_NEURO_RIGHT'     : $('#PREFS_NEURO_RIGHT').val(),\n            'PREFS_PANEL_RIGHT'     : $('#PREFS_PANEL_RIGHT').val(),\n            'PREFS_IMPPLAN_RIGHT'   : $('#PREFS_IMPPLAN_DRAW').val(),\n            'PREFS_KB'              : $('#PREFS_KB').val(),\n            'PREFS_TOOLTIPS'        : $('#PREFS_TOOLTIPS').val(),\n            'setting_tabs_left'     : $('#setting_tabs_left').val(),\n            'setting_HPI'           : $('#setting_HPI').val(),\n            'setting_PMH'           : $('#setting_PMH').val(),\n            'setting_EXT'           : $('#setting_EXT').val(),\n            'setting_ANTSEG'        : $('#setting_ANTSEG').val(),\n            'setting_POSTSEG'       : $('#setting_POSTSEG').val(),\n            'setting_NEURO'         : $('#setting_NEURO').val(),\n            'setting_IMPPLAN'       : $('#setting_IMPPLAN').val(),\n        };\n        top.restoreSession();\n        $.ajax({\n               type     : 'POST',\n               url      : url,\n               data     : formData\n               });\n    }\n}\n/*\n *  Function to unlock the form - remove temporary lock at DB level.\n */\nfunction unlock() {\n    var url = \"../../forms/eye_mag/save.php?mode=update&id=\" + $(\"#form_id\").val();\n    var formData = {\n        'action'           : \"unlock\",\n        'unlock'           : \"1\",\n        'encounter'        : $('#encounter').val(),\n        'pid'              : $('#pid').val(),\n        'LOCKEDBY'         : $('#LOCKEDBY').val(),\n        'form_id'          : $(\"#form_id\").val()\n    };\n    top.restoreSession();\n    $.ajax({\n           type     : 'POST',\n           url          : url,\n           data     : formData }).done(function(o) {\n                                           $(\"#warning\").removeClass(\"nodisplay\");\n                                           $('#LOCKEDBY').val('');\n                                           $('#chart_status').val('off');\n                                           });\n}\n/*\n *  Function to fax this visit report to someone.\n */\nfunction create_task(to_id,task,to_type) {\n    $(this).addClass('fa-spin');\n    var url = \"../../forms/eye_mag/taskman.php\";\n    var formData = {\n        'action'            : \"make_task\",\n        'from_id'           : <?php echo attr_js($providerID); ?>,\n        'to_id'             : to_id,\n        'pid'               : $('#pid').val(),\n        'doc_type'          : task,\n        'enc'               : $('#encounter').val(),\n        'form_id'           : $('#form_id').val()\n    };\n    top.restoreSession();\n    $.ajax({\n           type         : 'POST',\n           url          : url,\n           data         : formData\n           }).done(function(result) {\n                   //OPTIONS to consider: we could return a status code from the server.\n                   //maybe 1 = no doc, 2= doc made and queued, 3= sent\n                   //maybe this is a checkbox.  Check to create the task, uncheck to delete it.\n                   //if the task is completed, checkbox is checked and disabled?\n                   //return doc_id and display it in html for id='status_'+task+'_'+to_type\n                   obj = JSON.parse(result);\n                   if (obj.DOC_link) {\n                   $('#status_'+task+'_'+to_type).html(obj.DOC_link);\n                   }\n                   if (obj.comments) alert(obj.comments);\n                   //maybe change an icon to sent?  Think.\n           });\n}\n\n\n/*\n *  START OF PMSFH FUNCTIONS\n */\nfunction alter_issue2(issue_number,issue_type,index) {\n    if (!obj.PMSFH) { refresh_page(); }\n    if (typeof obj.PMSFH == \"undefined\") { submit_form(); }\n    var here = obj.PMSFH[issue_type][index];\n    window.frames[0].frameElement.contentWindow.newtype(issue_type);\n    if (issue_type !='SOCH' && issue_type !='FH' && issue_type !='ROS') {\n        $('iframe').contents().find('#delete_button').removeClass('nodisplay');\n    } else {\n        $('iframe').contents().find('#delete_button').addClass('nodisplay');\n    }\n    $('iframe').contents().find('#issue').val(issue_number);\n    if (typeof here !== \"undefined\") {\n        $('iframe').contents().find('#form_title'           ).val(here.title);\n        $('iframe').contents().find('#form_diagnosis'       ).val(here.diagnosis);\n        $('iframe').contents().find('#form_begin'           ).val(here.begdate);\n        $('iframe').contents().find('#form_end'             ).val(here.enddate);\n        $('iframe').contents().find('#form_reaction'        ).val(here.reaction);\n        $('iframe').contents().find('#form_referredby'      ).val(here.referredby);\n        $('iframe').contents().find('#form_classification'  ).val(here.classification);\n        $('iframe').contents().find('#form_occur'           ).val(here.occurrence);\n        $('iframe').contents().find('#form_comments'        ).val(here.comments);\n        $('iframe').contents().find('#form_outcome'         ).val(here.outcome);\n        $('iframe').contents().find('#form_destination'     ).val(here.destination);\n        if (here.row_subtype =='eye') {\n            $('iframe').contents().find('#form_eye_subtype' ).prop(\"checked\",\"checked\");\n        } else {\n            $('iframe').contents().find('#form_eye_subtype' ).prop(\"checked\",false);\n        }\n        if (here.enddate > '') {\n            $('iframe').contents().find('#form_active' ).prop(\"checked\",true);\n            $('iframe').contents().find('#delete_button').addClass(\"nodisplay\");\n        } else {\n            $('iframe').contents().find('#form_active' ).prop(\"checked\",false);\n        }\n    }\n    var location = $(\"#PMH_left\").offset().top -55;\n    $root.animate({scrollTop: location }, \"slow\");\n}\nfunction showArray(arr) {\n    var tS = new String();\n    for (var iI in arr) {\n        tS += \"Index \"+iI+\", Type \"+(typeof arr[iI])+\", Value \"+arr[iI]+\"\\n\";\n    }\n    return tS;\n}\n\n/*\n * Function to delete an issue from server via ajax\n * Ajax returns json obj.PMSFH\n * Refresh displays (right_panel and QP_PMH panel)\n */\nfunction delete_issue2(issue_number,PMSFH_type) {\n    $('#form#theform issue').val(issue_number);\n    $('iframe').contents().find('#issue').val(issue_number);\n    $('form#theform form_type');\n\n    var url = '../../forms/eye_mag/a_issue.php';\n    var formData = {\n        'a_issue'           : issue_number,\n        'deletion'          : '1',\n        'PMSFH'             : '1'\n    };\n    top.restoreSession();\n    $.ajax({\n           type     : 'POST',\n           url      : url,\n           data     : formData,\n           success:(function(result) {\n                    populate_PMSFH(result);\n                    })\n           });\n    show_QP();\n    return false;\n}\n\n/*\n *  Function to save the PMSFH array to the server.\n *  This can be removed in the future - save for now\n */\nfunction submit_PMSFH() {\n    var url = \"../../forms/eye_mag/save.php?PMSFH_save=1&mode=update\";\n    formData = $(\"[id^=f]\").serialize();\n    var f = document.forms[0];\n    top.restoreSession();\n    $.ajax({\n           type   : 'POST',\n           url    : url,\n           data   : formData\n           }).done(function(result){\n                   f.form_title.value = '';\n                   f.form_diagnosis.value = '';\n                   f.form_begin.value ='';\n                   f.form_end.value ='';\n                   f.form_referredby.value ='';\n                   f.form_reaction.value ='';\n                   f.form_classification.value ='';\n                   f.form_occur.value='';\n                   f.form_comments.value ='';\n                   f.form_outcome.value ='';\n                   f.form_destination.value ='';\n                   f.issue.value ='';\n                   populate_form(result);\n                   });}\n\n/*\n *  END OF PMSFH FUNCTIONS\n */\n\n/*\n *  Function to refresh the issues, the panels and the Impression/coding areas.\n */\nfunction refresh_page() {\n    var url = '../../forms/eye_mag/view.php?display=PMSFH';\n    var formData = {\n        'action'           : \"refresh\",\n        'id'               : $('#form_id').val(),\n        'encounter'        : $('#encounter').val(),\n        'pid'              : $('#pid').val(),\n        'refresh'          : 'page'\n    };\n    top.restoreSession();\n    $.ajax({\n           type     : 'POST',\n           url          : url,\n           data     : formData,\n           success:(function(result) {\n                    populate_form(result);\n                    })\n           });\n        //Make the height of the panels equal if they grow really large\n    if ($('#PMH_right').height() > $('#PMH_left').height()) {\n        $('#PMH_left').height($('#PMH_right').height());\n    } else { $('#PMH_left').height($('#PMH_right').height()); }\n    return false;\n}\n\n/*\n *  Function to refresh the Glaucoma Flow Sheet.\n */\nfunction refresh_GFS() {\n    if (typeof config_byday == \"undefined\") { return; }\n\n    var indexToUpdate = '0';\n    $.each(config_byday.data.labels, function(key,value) {\n           if (value == visit_date) {\n           indexToUpdate = key;\n           }\n           });\n\n        //var indexToUpdate = config_byday.data.labels.length-1;\n    var ODIOP=0;\n    var OSIOP=0;\n    if ( $('#ODIOPAP').val()) {\n        ODIOP =  $('#ODIOPAP').val();\n    } else if (  $('#ODIOPTPN').val()) {\n        ODIOP =  $('#ODIOPTPN').val();\n    }\n\n    if ( $('#OSIOPAP').val() >'0') {\n        OSIOP =  $('#OSIOPAP').val();\n    } else if (  $('#OSIOPTPN').val() > '0') {\n        OSIOP =  $('#OSIOPTPN').val();\n    }\n\n    config_byday.data.datasets[0].data[indexToUpdate] = $('#ODIOPTARGET').val();\n    config_byday.data.datasets[1].data[indexToUpdate] = ODIOP;\n    config_byday.data.datasets[2].data[indexToUpdate] = OSIOP;\n    myLine.update();\n\n    var time = $('#IOPTIME').val();\n    times = time.match(/^(\\d{1,2}):(\\d{2})/);\n    if (times[1] < 10) times[1] = \"0\"+''+times[1];\n    time = times[1]+':'+times[2];\n    var indexToUpdate2 = '0';\n    $.each(config_byhour.data.labels, function(key,value) {\n           if (value == time) {\n           indexToUpdate2 = key;\n           }\n           });\n    config_byhour.data.datasets[0].data[indexToUpdate2] = ODIOP;\n    config_byhour.data.datasets[1].data[indexToUpdate2] = OSIOP;\n    myLine2.update();\n        // Update one of the points in the second dataset\n        //  myLine.data.datasets[1].data[indexToUpdate].val($('#ODIOPAP').val());\n        //alert(config_byday.data.datasets[1].data[indexToUpdate].val()+' is ending _bydat val');\n        //myLine.update();\n        //ctx2.update();\n    return;\n    /*\n     this should refresh locally and not go back to the server\n     the only things that would trigger a refresh are\n     a change in IOP\n     change in IOPTARGET\n     change in Eye Meds\n     change in GONIO fields\n     additional tests (VF/OCT) would not affect this in its live format\n\n     */\n}\n\nfunction populate_GFS(result) {\n    $(\"#LayerVision_IOP\").html(result);\n}\n\n/*\n *  Server returns a json encoding object: obj to update the page\n *  Here we refresh the PMSFH display panels,\n *  Rebuild the Impression/Plan Builder DX lists,\n *  the Impression Plan area\n *  and the CHRONIC fields.\n */\nfunction populate_form(result) {\n    obj = JSON.parse(result);\n    $(\"#QP_PMH\").html(obj.PMH_panel);\n    if ($('#PMH_right').height() > $('#PMH_left').height()) {\n        $('#PMH_left').height($('#PMH_right').height());\n    } else { $('#PMH_left').height($('#PMH_right').height()); }\n    $(\"#right_panel_refresh\").html(obj.right_panel);\n    build_IMPPLAN(obj.IMPPLAN_items);\n    build_Chronics(obj);\n    build_DX_list(obj); //build the list of DXs to show in the Impression/Plan Builder\n}\n/*\n *  Function to auto-fill CHRONIC fields\n *  To reach a detailed E&M level of documentation the chart\n *  may comment on the status of 3 or more CHRONIC/Inactive problems.\n *  The user can type them into the CHRONIC fields manually, or\n *  we can do it programatically if the user does the following:\n *     1.  documenting a PMH diagnosis in the PMSFH area\n *     2.  listing it as \"Chronic\"\n *     3.  making a comment about it\n *  With these three steps completed, this build_CHRONIC function displays the changes\n *  in the CHRONIC1-3 textareas, if not already filled in, for today's visit.\n *  On subsequent visits, the CHRONIC1-3 fields are blank, unless the above steps\n *  were performed previously, then they are filled in automatically on loading of the new form.\n */\nfunction build_Chronics(obj) {\n    if (typeof obj.PMSFH === \"undefined\") return;\n    var CHRONICS = obj.PMSFH['CHRONIC'];\n    var chronic_value;\n    var local_comment;\n    var here_already;\n    $.each(CHRONICS, function(key, value) {\n           local_comment = CHRONICS[key].title+\" \"+CHRONICS[key].diagnosis+\"\\n\"+CHRONICS[key].comments;\n           here_already ='0';\n           for (i=1; i < 4; i++) {\n           chronic_value = $('#CHRONIC'+i).val();\n           if (chronic_value == local_comment) {\n           here_already='1';  //this is here, move to next CHRONICS\n           break;\n           }\n           }\n           if (here_already !='1') {\n           for (i=1; i < 4; i++) {\n           chronic_value = $('#CHRONIC'+i).val();\n           if (chronic_value == '') {  //if the CHRONIC1-3 field is empty, fill it.\n           $('textarea#CHRONIC'+i).val(local_comment);\n           break;\n           }\n           }\n           }\n           });\n    return false;\n}\n/*\n * Function to autocreate a PDF of this form as a document linked to this encounter.\n * Each time it is runs it updates by replacing the encounter's PDF.\n * This used to be fired often,  but it is a server resource beast.\n * Use it sparingly, and intentionally only.\n * Currently only invoked via the bootstrap menu: Menu->File->Print/Store PDF\n */\nfunction store_PDF() {\n    var url = \"../../forms/eye_mag/save.php?mode=update\";\n    var formData = {\n        'action'        : 'store_PDF',\n        'patient_id'    : $('#pid').val(),\n        'pdf'           : '1',\n        'printable'     : '1',\n        'form_folder'   : $('#form_folder').val(),\n        'form_id'       : $('#form_id').val(),\n        'encounter'     : $('#encounter').val(),\n        'uniqueID'      : $('#uniqueID').val()\n    };\n    top.restoreSession();\n    $.ajax({\n           type         : 'POST',\n           url          : url,\n           data         : formData\n           });\n}\n\n/* START Functions related to form VIEW */\n/*\n * Function to blow out the form and display the right side of every section.\n */\nfunction show_right() {\n    $(\"#HPI_1\").removeClass(\"size50\").addClass(\"size100\");\n    $(\"#PMH_1\").removeClass(\"size50\").addClass(\"size100\");\n    $(\"#EXT_1\").removeClass(\"size50\").addClass(\"size100\");\n    $(\"#ANTSEG_1\").removeClass(\"size50\").addClass(\"size100\");\n    $(\"#NEURO_1\").removeClass(\"size50\").addClass(\"size100\");\n    $(\"#POSTSEG_1\").removeClass(\"size50\").addClass(\"size100\");\n    $(\"#IMPPLAN_1\").removeClass(\"size50\").addClass(\"size100\");\n    $(\"#HPI_right\").removeClass('nodisplay');\n    $(\"#PMH_right\").removeClass('nodisplay');\n    $(\"#EXT_right\").removeClass('nodisplay');\n    $(\"#ANTSEG_right\").removeClass('nodisplay');\n    $(\"#NEURO_right\").removeClass('nodisplay');\n    $(\"#RETINA_right\").removeClass('nodisplay');\n    $(\"#IMPPLAN_right\").removeClass('nodisplay');\n    $(\"#PMH_1\").addClass(\"clear_both\");\n    $(\"#ANTSEG_1\").addClass(\"clear_both\");\n    $(\"#POSTSEG_1\").addClass(\"clear_both\");\n    $(\"#NEURO_1\").addClass(\"clear_both\");\n    $(\"#IMPPLAN_1\").addClass(\"clear_both\");\n    hide_PRIORS();\n}\n/*\n * Function to implode the form and hide the right side of every section.\n */\nfunction hide_right() {\n    $(\"#HPI_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#PMH_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#EXT_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#ANTSEG_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#NEURO_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#RETINA_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#IMPPLAN_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#HPI_right\").addClass('nodisplay');\n    $(\"#PMH_right\").addClass('nodisplay');\n    $(\"#EXT_right\").addClass('nodisplay');\n    $(\"#ANTSEG_right\").addClass('nodisplay');\n    $(\"#NEURO_right\").addClass('nodisplay');\n    $(\"#RETINA_right\").addClass('nodisplay');\n    $(\"#PMH_1\").removeClass(\"clear_both\");\n    $(\"#ANTSEG_1\").removeClass(\"clear_both\");\n    $(\"#POSTSEG_1\").removeClass(\"clear_both\");\n    $(\"#NEURO_1\").removeClass(\"clear_both\");\n    update_PREFS();\n}\n/*\n * Function to explode the form and show the left side of every section.\n */\nfunction show_left() {\n    $(\"#HPI_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#PMH_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#EXT_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#ANTSEG_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#NEURO_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#POSTSEG_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#IMPPLAN_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#HPI_left\").removeClass('nodisplay');\n    $(\"#PMH_left\").removeClass('nodisplay');\n    $(\"#EXT_left\").removeClass('nodisplay');\n    $(\"#ANTSEG_left\").removeClass('nodisplay');\n    $(\"#RETINA_left\").removeClass('nodisplay');\n    $(\"#NEURO_left\").removeClass('nodisplay');\n    $(\"#IMPPLAN_left\").removeClass('nodisplay');\n    $(\"[name$='_left']\").removeClass('nodisplay');\n}\n/*\n * Function to implode the form and hide the left side of every section.\n */\nfunction hide_left() {\n    $(\"#HPI_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#PMH_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#EXT_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#ANTSEG_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#NEURO_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#POSTSEG_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#IMPPLAN_1\").removeClass(\"size100\").addClass(\"size50\");\n    $(\"#HPI_left\").addClass('nodisplay');\n    $(\"#PMH_left\").addClass('nodisplay');\n    $(\"#EXT_left\").addClass('nodisplay');\n    $(\"#ANTSEG_left\").addClass('nodisplay');\n    $(\"#RETINA_left\").addClass('nodisplay');\n    $(\"#NEURO_left\").addClass('nodisplay');\n    $(\"#IMPPLAN_left\").addClass('nodisplay');\n    $(\"[name $='_left']\").addClass('nodisplay');\n}\n/*\n * Function to display only the DRAW panels of every section.\n * The technical section, between HPI and Clinical section is still visible.\n */\nfunction show_DRAW() {\n    hide_QP();\n    hide_TEXT();\n    hide_PRIORS();\n    hide_left();\n    hide_KB();\n    show_right();\n\n    $(\"#HPI_right\").addClass('canvas');\n    $(\"#PMH_right\").addClass('canvas');\n    $(\"#EXT_right\").addClass('canvas');\n    $(\"#ANTSEG_right\").addClass('canvas');\n    $(\"#RETINA_right\").addClass('canvas');\n    $(\"#NEURO_right\").addClass('canvas');\n    $(\"#IMPPLAN_right\").addClass('canvas');\n    $(\".Draw_class\").removeClass('nodisplay');\n    if ($(\"#PREFS_CLINICAL\").val() !='1') {\n        $(\"#PREFS_CLINICAL\").val('1');\n        $(\"#PREFS_EXAM\").val('DRAW');\n    }\n    update_PREFS();\n}\n/*\n * Function to display only the TEXT panels in every section.\n */\nfunction show_TEXT() {\n    $(\".TEXT_class\").removeClass('nodisplay');\n    show_left();\n    hide_right(); //this hides the right half\n    hide_QP();\n    hide_DRAW();\n    hide_PRIORS();\n    if ($(\"#PREFS_CLINICAL\").val() !='1') {\n            // we want to show text_only which are found on left half\n        $(\"#PREFS_CLINICAL\").val('1');\n    }\n    $(\"#PREFS_EXAM\").val('TEXT');\n    $(\"#IMPPLAN_right\").addClass('canvas').removeClass('nodisplay');\n    $(\"#QP_IMPPLAN\").removeClass('nodisplay');\n    $(\"#DRAW_\"+zone).addClass('nodisplay');\n    $(\"#IMPPLAN_left\").removeClass('nodisplay');\n    $(\"#PREFS_IMPPLAN_RIGHT\").val('QP');\n    update_PREFS();\n}\n/*\n * Function to display the PRIORS panels in every right section.\n */\nfunction show_PRIORS() {\n    $(\"#NEURO_sections\").removeClass('nodisplay');\n    hide_DRAW();\n    $(\"#EXT_right\").addClass(\"PRIORS_color\");\n    show_TEXT();\n    show_right();\n    hide_QP();\n    $(\"#QP_HPI\").removeClass('nodisplay');\n    $(\"#QP_PMH\").removeClass('nodisplay');\n    $(\"#HPI_right\").addClass('canvas');\n    $(\"#PMH_right\").addClass('canvas');\n    $(\"#IMPPLAN_right\").addClass('canvas');\n    $(\"#EXT_right\").addClass('canvas');\n    $(\"#ANTSEG_right\").addClass('canvas');\n    $(\"#RETINA_right\").addClass('canvas');\n    $(\"#NEURO_right\").addClass('canvas');\n    $(\".PRIORS_class\").removeClass('nodisplay');\n    if ($(\"#PREFS_CLINICAL\").val() !='1') {\n            // we want to show text_only which are found on left half now that PRIORS are visible.\n        $(\"#PREFS_CLINICAL\").val('1');\n    }\n    $(\"#PREFS_EXAM\").val('PRIORS');\n    update_PREFS();\n}\n/*\n * Function to show the Quick Picks panel on the right side of every section.\n */\nfunction show_QP() {\n    hide_DRAW();\n    hide_PRIORS();\n    hide_KB();\n    show_TEXT();\n    show_right();\n    show_left();\n    $(\"#HPI_right\").addClass('canvas');\n    $(\"#PMH_right\").addClass('canvas');\n    $(\"#EXT_right\").addClass('canvas');\n    $(\"#ANTSEG_right\").addClass('canvas');\n    $(\"#RETINA_right\").addClass('canvas');\n    $(\"#NEURO_right\").addClass('canvas');\n    $(\"#IMPPLAN_right\").addClass('canvas');\n    $(\".QP_class\").removeClass('nodisplay');\n    $(\".QP_class2\").removeClass('nodisplay');\n    $(\"#PREFS_EXAM\").val('QP');\n    update_PREFS();\n}\n/*\n * Function to display only one DRAW panel of one section.\n */\nfunction show_DRAW_section(zone) {\n    $(\"#QP_\"+zone).addClass('nodisplay');\n    $(\"#\"+zone+\"_left\").removeClass('nodisplay');\n    $(\"#\"+zone+\"_right\").addClass('canvas').removeClass('nodisplay');\n    $(\"#Draw_\"+zone).addClass('canvas');\n    $(\"#Draw_\"+zone).removeClass('nodisplay');\n    $(\"#PREFS_\"+zone+\"_DRAW\").val(1);\n    update_PREFS();\n}\n/*\n * Function to display only one PRIORS panel of one section.\n */\nfunction show_PRIORS_section(section,newValue) {\n    var url = \"../../forms/eye_mag/save.php?mode=retrieve\";\n\n    var formData = {\n        'PRIORS_query'          : \"1\",\n        'zone'                  : section,\n        'id_to_show'            : newValue,\n        'pid'                   : $('#pid').val(),\n        'orig_id'               : $('#form_id').val()\n    }\n    top.restoreSession();\n    $.ajax({\n           type     : 'POST',\n           url       : url,\n           data     : formData,\n           success   : function(result) {\n                $(\"#PRIORS_\" + section + \"_left_text\").html(result);\n           }\n           });\n}\n/**\n *  Function to display a canvas/drawing from a prior visit.\n */\n\nfunction show_PRIOR_CANVAS_section(section, newValue) {\n    var pid    =  $('#pid').val();\n    var zone   = section;\n    var result = base+'/controller.php?document&retrieve&patient_id='+pid+'&document_id='+newValue+'&as_file=false';\n    var cp_forward = '<button onclick=\"replace_CANVAS(\\''+zone+'\\',\\''+result+'\\'); return false;\" id=\"Replace_Canvas_ANTSEG\" class=\"ui-button ui-corner-all ui-widget\"><?php echo xlt('Use this image'); ?></button>';\n    var filler = \"<div class='tools text-info'><?php echo xlt('Previous Encounter Drawings'); ?>: \"+cp_forward+\"</div><div class='borderShadow'><img src='\"+result+\"' alt='<?php echo xla(\"Loading prior image\");?>...'></div>\";\n\n    $(\"#\"+zone+\"_canvas\").addClass('nodisplay');\n    $(\"#\"+zone+\"_olddrawing\").html(filler);\n    $(\"#\"+zone+\"_olddrawing\").removeClass('nodisplay');\n}\n\nfunction replace_CANVAS(zone, url) {\n    $(\"#url_\"+zone).val(url);\n    cReplace(zone);\n$(\"#SELECT_CANVAS_\"+zone).val('current');\n    $(\"#\"+zone+\"_canvas\").removeClass('nodisplay');\n    $(\"#\"+zone+\"_olddrawing\").addClass('nodisplay');\n}\n/**\n * Function to show one of the Quick Picks section on the right side of its section.\n */\nfunction show_QP_section(zone,scroll) {\n    $(\"#\"+zone+\"_right\").addClass('canvas').removeClass('nodisplay');\n    $(\"#QP_\"+zone).removeClass('nodisplay');\n    $(\"#DRAW_\"+zone).addClass('nodisplay');\n    $(\"#\"+zone+\"_left\").removeClass('nodisplay');\n    $(\"#PREFS_\"+zone+\"_RIGHT\").val('QP');\n    if (!scroll) {\n        scroll = zone;\n        scrollTo(zone+\"_left\");\n    }\n   }\n/*\n * Function to hide all the DRAW panels of every section.\n */\nfunction hide_DRAW() {\n    $(\".Draw_class\").addClass('nodisplay');\n    hide_right();\n    $(\"#LayerTechnical_sections\").removeClass('nodisplay');\n    $(\"#REFRACTION_sections\").removeClass('nodisplay');\n    $(\"#PMH_sections\").removeClass('nodisplay');\n    $(\"#HPI_right\").addClass('nodisplay');\n    $(\"#HPI_right\").removeClass('canvas');\n    $(\"#EXT_right\").removeClass('canvas');\n    $(\"#RETINA_right\").removeClass('canvas');\n    $(\"#ANTSEG_right\").removeClass('canvas');\n}\n/*\n * Function to hide all the Quick Pick panels of every section.\n */\nfunction hide_QP() {\n    $(\".QP_class\").addClass('nodisplay');\n    $(\".QP_class2\").addClass('nodisplay');\n    $(\"[name$='_right']\").removeClass('canvas');\n}\n/*\n * Function to hide all the TEXT panels of every section.\n */\nfunction hide_TEXT() {\n    $(\".TEXT_class\").addClass('nodisplay');\n}\n/*\n * Function to hide all the PIORS panels of every section.\n */\nfunction hide_PRIORS() {\n    $(\"#EXT_right\").removeClass(\"PRIORS_color\");\n    $(\"#PRIORS_EXT_left_text\").addClass('nodisplay');\n    $(\"#PRIORS_ANTSEG_left_text\").addClass('nodisplay');\n    $(\"#PRIORS_RETINA_left_text\").addClass('nodisplay');\n    $(\"#PRIORS_NEURO_left_text\").addClass('nodisplay');\n    $(\".PRIORS_class\").addClass('nodisplay');\n}\n/*\n * Function to hide Shorthand/Keyboard Entry panel.\n */\nfunction hide_KB() {\n    $('.kb').addClass('nodisplay');\n    $('.kb_off').removeClass('nodisplay');\n    if ($(\"#PREFS_KB\").val() > 0) {\n        $(\"#PREFS_KB\").val('0');\n    }\n}\n/*\n * Function to show the Shorthand/Keyboard panel.\n */\nfunction show_KB() {\n    $('.kb').toggleClass('nodisplay');\n    $('.kb_off').toggleClass('nodisplay');\n    $('.copier').toggleClass('nodisplay');\n    if ($('#PREFS_EXAM').val() == 'DRAW') {\n        show_TEXT();\n    }\n\n    if ($(\"#PREFS_KB\").val() > 0) {\n        $(\"#PREFS_KB\").val('0');\n    } else {\n        $(\"#PREFS_KB\").val('1');\n    }\n    update_PREFS();\n}\n\nfunction editScripts(url) {\n    var pid = $('#pid').val();\n        var AddScript = function () {\n            var iam = top.frames.editScripts;\n            iam.location.href = base + \"/controller.php?prescription&edit&id=&pid=\"+encodeURIComponent(pid)\n        };\n        var ListScripts = function () {\n            var iam = top.frames.editScripts;\n            iam.location.href = base + \"/controller.php?prescription&list&id=\"+encodeURIComponent(pid)\n        };\n\n        let title = 'Prescriptions';\n        let w = 810;\n        w = 910;\n\n        dlgopen(url, 'editScripts', w, 300, '', '', {\n            buttons: [\n                {text: 'Add', close: false, style: 'primary  btn-sm', click: AddScript},\n                {text: 'List', close: false, style: 'primary  btn-sm', click: ListScripts},\n                {text: 'Done', close: true, style: 'default btn-sm'}\n            ],\n            onClosed: 'refreshme',\n            allowResize: true,\n            allowDrag: true,\n            dialogId: 'editscripts',\n            type: 'iframe'\n        });\n    }\n\n/* END Functions related to form VIEW */\n\n/*\n * Function contains menu commands specific to this form.\n */\nfunction menu_select(zone) {\n    $(\"#menu_\"+zone).addClass('active');\n    if (zone =='PREFERENCES') {\n        window.parent.RTop.document.location.href = base+\"interface/super/edit_globals.php\";\n        var url = base+\"/interface/super/edit_globals.php\";\n        var formData = {\n            'id'               : $('#id').val(),\n            'encounter'        : $('#encounter').val(),\n            'pid'              : $('#pid').val(),\n        };\n        top.restoreSession();\n        $.ajax({\n               type     : 'GET',\n               url      : url,\n               data     : formData,\n               success  : function(result) {\n                    window.parent.RTop.document.result;\n               }\n               });\n    }\n    if (zone =='Left_Panel') $(\"#left-panel-link\").trigger('click');\n    if (zone =='Right_Panel') $(\"#right-panel-link\").trigger('click');\n    if (zone =='PRIORS') $(\"#PRIORS_ALL_minus_one\").trigger(\"click\");\n    if (zone =='QP') show_QP();\n    if (zone =='KB') show_KB();\n    if (zone =='DRAW') show_DRAW();\n    if (zone =='TEXT') show_TEXT();\n    if (zone =='IOP_graph') $(\"#LayerVision_IOP_lightswitch\").trigger('click');\n    if (zone == \"HPI\") scrollTo(\"HPI_left\");\n    if (zone == \"PMH\") scrollTo(\"PMH_left\");\n    if (zone == \"EXT\") scrollTo(\"EXT_left\");\n    if (zone == \"ANTSEG\") scrollTo(\"ANTSEG_left\");\n    if (zone == \"POSTSEG\") scrollTo(\"RETINA_left\");\n    if (zone == \"NEURO\") scrollTo(\"NEURO_left\");\n    if (zone == \"IMPPLAN\") scrollTo(\"IMPPLAN_left\");\n}\n\n\n/*\n * Function to test blowing up any section to fullscren - towards tablet functionality?\n * Currently not used.\n */\nfunction show_Section(section) {\n    //hide everything, show the section.  For fullscreen perhaps Tablet view per section\n    show_right();\n    $(\"div[name='_sections']\").style.display= \"none\"; //\n    $('#'+section+'_sections').style.display= \"block\";\n        //.show().appendTo('form_container');\n}\n/*\n * Function to display Chief Complaint 1-3\n */\nfunction show_CC(CC_X) {\n    $(\"[name^='CC_']\").addClass('nodisplay');\n    $(\"#CC_\"+CC_X).removeClass('nodisplay');\n    $(\"#CC_\"+CC_X).index;\n}\n\n/* START Functions related to CODING */\n\n/*\n * Function to determine if add on NeuroSensory(92060) code can be billed.\n */\nfunction check_CPT_92060() {\n    var neuro1='';\n    var neuro2 ='';\n    if ($(\"#STEREOPSIS\").val() > '') (neuro1=\"1\");\n    $(\".neurosens2\").each(function(index) {\n                          if ($( this ).val() > '') {\n                          neuro2=\"1\";\n                          }\n                          });\n    if (neuro1 && neuro2){\n        $(\"#neurosens_code\").removeClass('nodisplay');\n        CPT_92060 = 'here';\n    } else {\n        $(\"#neurosens_code\").addClass('nodisplay');\n        CPT_92060 = '';\n    }\n}\n/*\n * Function to check documentation level for coding purposes\n * And make suggestions to end user.\n */\nfunction check_exam_detail() {\n    detail_reached_HPI='0';\n    chronic_reached_HPI='0';\n    $(\".count_HPI\").each(function(index) {\n                         if ($( this ).val() > '') detail_reached_HPI++;\n                         });\n    if (detail_reached_HPI > '3') {\n        $(\".detail_4_elements\").css(\"color\",\"red\");\n        $(\".CODE_LOW\").addClass(\"nodisplay\");\n        $(\".CODE_HIGH\").removeClass(\"nodisplay\");\n        $(\".detailed_HPI\").css(\"color\",\"red\");\n    } else {\n        $(\".detail_4_elements\").css(\"color\",\"#876F6F\");\n    }\n    $(\".chronic_HPI\").each(function(index) {\n                           if ($( this ).val() > '') chronic_reached_HPI++;\n                           });\n    if (chronic_reached_HPI > '2') {\n        $(\".chronic_3_elements\").css(\"color\",\"red\");\n        $(\".CODE_LOW\").addClass(\"nodisplay\");\n        $(\".CODE_HIGH\").removeClass(\"nodisplay\");\n        $(\".detailed_HPI\").css(\"color\",\"red\");\n    } else {\n        $(\".chronic_3_elements\").css(\"color\",\"#876F6F\");\n    }\n    if ((chronic_reached_HPI > '2')||(detail_reached_HPI > '3')) {\n        $(\".CODE_LOW\").addClass(\"nodisplay\");\n        $(\".CODE_HIGH\").removeClass(\"nodisplay\");\n        $(\".detailed_HPI\").css(\"color\",\"red\");\n        detail_reached_HPI = '1';\n    } else {\n        $(\".CODE_LOW\").removeClass(\"nodisplay\");\n        $(\".CODE_HIGH\").addClass(\"nodisplay\");\n        $(\".detailed_HPI\").css(\"color\",\"#876F6F\");\n        detail_reached_HPI = '0';\n    }\n    if ((($(\"#DIL_RISKS\").is(':checked')) || ($(\".dil_drug\").is(':checked'))) && (($('#ODPERIPH').val() >'') || ($('#OSPERIPH').val() >''))) {\n        $(\".EXAM_LOW\").addClass(\"nodisplay\");\n        $(\".DIL_RISKS\").removeClass(\"nodisplay\");\n        $(\"#DIL_RISKS\").prop(\"checked\",\"checked\");\n        detail_reached_exam = '1';\n    } else {\n        $(\".EXAM_LOW\").removeClass(\"nodisplay\");\n        $(\".DIL_RISKS\").addClass(\"nodisplay\");\n        detail_reached_exam = '0';\n    }\n    Suggest_visit_code();\n}\n\n/* END Functions related to CODING */\n\n/* START Functions related to IMPPLAN Builder */\n/*\n * Function to update the list of Dxs available for Impression/Plan and Coding(?).\n * Will use actual list from obj.IMPPLAN_items for coding.\n * After a new DX is added via PMSFH (or other ways), it updates the sortable and draggable list of DXs\n * available to build the Impression/Plan from.\n */\nfunction build_DX_list(obj) {\n    var out = \"\";\n    var diagnosis;\n    $( \"#build_DX_list\" ).empty();\n        //add in inc_FIELDCODES culled from the datafields\n    if (typeof obj.PMSFH === \"undefined\") return;\n    if (typeof obj.Clinical === \"undefined\") submit_form('obj.clinical is undefined');\n    if (!obj.PMSFH['POH']  && !obj.PMSFH['PMH'] && !obj.Clinical) {\n        out = '<br /><span class=\"bold\">The Past Ocular History (POH) and Past Medical History (PMH) are negative and no diagnosis was auto-generated from the clinical findings.</span><br /><br />Update the chart to activate the Builder.<br />';\n        $( \"#build_DX_list\" ).html(out);\n        return;\n    }\n    build_IMPPLAN(obj.IMPPLAN_items);\n    if ($('#inc_PE').is(':checked') && obj.Clinical) {\n        $.each(obj.Clinical, function(key, value) {\n               diagnosis='';\n               if (obj.Clinical[key][0].diagnosis > '') { //so we are just showing this first item of each Dx (Eg bilateral, x4 pterygium, only first shows up)\n               diagnosis = \"<code class='float-right ICD_CODE'>\"+obj.Clinical[key][0].code+\"</code>\";\n               }\n               out += \"<li class='ui-widget-content'><span name='DX_Clinical_\"+key+\"' id='DX_Clinical_\"+key+\"'>\"+obj.Clinical[key][0].title+\"</span> \"+diagnosis+\"</li> \";\n               });\n    }\n\n    if ($('#inc_POH').is(':checked') && (obj.PMSFH['POH']||obj.PMSFH['POS'])) {\n        $.each(obj.PMSFH['POH'], function(key, value) {\n               diagnosis='';\n               if (obj.PMSFH['POH'][key].diagnosis > '' ) {\n               diagnosis = \"<code class='float-right ICD_CODE'>\"+obj.PMSFH['POH'][key].code+\"</code>\";\n               }\n               out += \"<li class='ui-widget-content'><span name='DX_POH_\"+key+\"' id='DX_POH_\"+key+\"'>\"+obj.PMSFH['POH'][key].title+\"</span> \"+diagnosis+\"</li>\";\n               });\n        $.each(obj.PMSFH['POS'], function(key, value) {\n               diagnosis='';\n               if (obj.PMSFH['POS'][key].diagnosis > '' ) {\n               diagnosis = \"<code class='float-right ICD_CODE'>\"+obj.PMSFH['POS'][key].code+\"</code>\";\n               }\n               out += \"<li class='ui-widget-content'><span name='DX_POS_\"+key+\"' id='DX_POS_\"+key+\"'>\"+obj.PMSFH['POS'][key].title+\"</span> \"+diagnosis+\"</li>\";\n               });\n    }\n    if ($('#inc_PMH').is(':checked') && obj.PMSFH['PMH']) {\n        $.each(obj.PMSFH['PMH'], function(key, value) {\n               diagnosis='';\n               if (obj.PMSFH['PMH'][key].diagnosis > '') {\n               diagnosis = \"<code class='float-right ICD_CODE'>\"+obj.PMSFH['PMH'][key].code+\"</code>\";\n               }\n               out += \"<li class='ui-widget-content'><span name='DX_PMH_\"+key+\"' id='DX_PMH_\"+key+\"'>\"+obj.PMSFH['PMH'][key].title+\"</span>\"+diagnosis+\"</li> \";\n               });\n    }\n        //add in inc_FIELDCODES culled from the datafields\n    if (out !=\"\") {\n        rebuild_IMP($( \"#build_DX_list\" ));\n        $( \"#build_DX_list\" )\n        .html(out).sortable({ handle: \".handle\",stop: function(event, ui){ rebuild_IMP($( \"#build_DX_list\" )) } })\n        .selectable({ filter: \"li\", cancel: \".handle\",stop: function(event, ui){ rebuild_IMP($( \"#build_DX_list\" )) } })\n        .find( \"li\" )\n        .addClass( \"ui-corner-all  ui-selected\" )\n        .dblclick(function(){\n                  rebuild_IMP($( \"#build_DX_list\" ));\n                  $('#make_new_IMP').trigger('click'); //any items selected are sent to IMPPLAN directly.\n                  })\n            //this places the handle for the user to drag the item around.\n        .prepend( \"<div class='handle '><i class='fas fa-arrows-alt fa-1'></i></div>\" );\n    } else {\n        out = '<br /><span class=\"bold\"><?php echo xlt(\"Build Your Plan\") . \".\"; ?></span><br /><br />';\n        out += '<?php echo xlt('Suggestions for the Imp/Plan are built from the Exam, the Past Ocular History (POH and POS) and the Past Medical History (PMH)') . \".\"; ?><br />';\n        out += '<?php echo xlt('Update the chart to build this list') . \".\"; ?><br />';\n        $( \"#build_DX_list\" ).html(out);\n    }\n}\n/**\n * Function:  After the Builder DX list is built from all the available options,\n * the end user can select to use only certain Dxs and change their sort order of importance.\n * This function builds the list of DXs selected and in the order as the user sorted them,\n * so we know what to use to build the Impression/Plan area and in what order to display them.\n */\nfunction rebuild_IMP(obj2) {\n    var surface;\n    IMP_order=[];\n    k='0';\n    $( \".ui-selected\", obj2 ).each(function() {\n                                   var index = $( \"#build_DX_list li\" ).index( this );\n                                   if ($('#build_DX_list li span')[index].id.match(/DX_POH_(.*)/)) {\n                                   surface = 'POH_' + $( \"#build_DX_list li span\" )[index].id.match(/DX_POH_(.*)/)[1];\n                                   IMP_order[k] = surface;\n                                   }else if ($('#build_DX_list li span')[index].id.match(/DX_POS_(.*)/)) {\n                                   surface = 'POS_' + $( \"#build_DX_list li span\" )[index].id.match(/DX_POS_(.*)/)[1];\n                                   IMP_order[k] = surface;\n                                   } else if ($('#build_DX_list li span')[index].id.match(/DX_PMH_(.*)/)) {\n                                   surface = 'PMH_' + $( \"#build_DX_list li span\" )[index].id.match(/DX_PMH_(.*)/)[1];\n                                   IMP_order[k] = surface;\n                                   } else if ($('#build_DX_list li span')[index].id.match(/DX_Clinical_(.*)/)) {\n                                   surface = 'CLINICAL_' + $( \"#build_DX_list li span\" )[index].id.match(/DX_Clinical_(.*)/)[1];\n                                   IMP_order[k] = surface;\n                                   }\n                                   k++;\n                                   });\n }\n/*\n * This function builds the Impression/Plan area using the object supplied: items\n * It appends \"items\" into the Impression Plan area, complete with:\n *      contenteditable Titles (the Impression),\n *      its code (if part of the item object),\n *      Plan textareas (autofilled with the item/object's \"comment\")\n * for each member of \"items\".\n * Duplicates are removed by server.\n */\nfunction build_IMPPLAN(items,nodisplay) {\n    var contents_here;\n    if (typeof nodisplay == \"undefined\") {\n      $('#IMPPLAN_zone').html(\"\");\n    }\n      $('#Coding_DX_Codes').html(\"\");\n      $('#visit_justification').html(\"\");\n\n    if ((items == null) || ( (typeof items == \"undefined\") || (items.length =='0') ) ) {\n        items = [];\n        $('#IMPPLAN_text').removeClass('nodisplay'); //Display Builder instructions for starting out\n        $('#IMPPLAN_zone').addClass('nodisplay');\n    } else {\n            //ok we have at least one item, display them in order; hide the Builder instructions\n        $('#IMPPLAN_text').addClass('nodisplay');\n        $('#IMPPLAN_zone').removeClass('nodisplay');\n        count_dx=0;\n        visit_justifier =[];\n        $.each(items, function( index, value ) {\n            if (!value.codetext) value.codetext=\"\";\n            if (!value.code) value.code=\"\";\n            if ((value.code===\"\") || (value.code.match(/Code/) || (value.code==null))) {\n              value.code=\"<i class='fa fa-search-plus'></i>&nbsp;Code\";\n            } else {\n              count_dx++;\n\n              if (value.code.match(/\\,/g)) {\n                // If there is a comma in there, there is more than one code present for this item. Split them out.\n                // If code is manually changed or copied from a prior visit - item will not have a PMSFH_link\n                // PMSFH_link is only present when the Builder was used to make the entry.\n\n                // So if there is no PMSFH_link and it is not generated from a clinical field:\n                if ( ((typeof value.PMSFH_link !== \"undefined\") || (value.PMSFH_link !== null)) && (!value.PMSFH_link.match(/Clinical_(.*)/)) ) {\n                    //The Title should have the description.\n                    var CodeArr =  value.code.split(\",\");\n                    var TitleArr = value.codedesc.split(\"\\r\");//I don't see a second codedesc being adding in for this yet...\n                    for (i=0;i < CodeArr.length;i++) {\n                      if (CodeArr.length == (TitleArr.length-1)) { //there is a trailing \\r but second codedesc should have \"\\r\" also\n                        $('#Coding_DX_Codes').append(count_dx +'. '+CodeArr[i]+': '+TitleArr[i]+'<br />');\n\n                        justify_btn = '<span class=\"modifier status_on\" name=\"visit_justifier\" id=\"visit_just_'+count_dx+'\" value=\"\" data-justcode=\"'+value.codetype+'|'+value.code+'\" title=\"'+value.codedesc+'\">'+count_dx+'</span>';\n                        $('#visit_justification').append(justify_btn);\n                        visit_justifier.push(value.codetype+'|'+value.code[i]);\n                      } else {\n                        //just look it up via ajax or tell them to code it manually on the feesheet ;).\n                        $('#Coding_DX_Codes').append(CodeArr[i]+': <?php echo xlt('Manually retrieve description on Fee Sheet'); ?> <br />');\n\n                        var justify_btn = '<span class=\"modifier status_on\" id=\"visit_just_'+count_dx+'\" name=\"visit_justifier\" value=\"\" data-justcode=\"'+value.codetype+'|'+value.code+'\" title=\"'+value.codedesc+'\">'+count_dx+'</span>';\n\n                        $('#visit_justification').append(justify_btn);\n                        visit_justifier.push(value.codetype+'|'+value.code);\n                      }\n                      count_dx++;\n                    }\n                } else {\n                    // So there IS a PMSFH_link or it was generated from a clinical field:\n\n                    //this works for Clinical-derived terms with more than one Dx Code (found in more than one location/field)\n                  if (value.PMSFH_link.match(/Clinical_(.*)/)) {\n                    if (typeof obj.Clinical !== \"undefined\") {\n                      var location = value.PMSFH_link.match(/Clinical_(.*)/)[1];\n                      if (obj.Clinical[location]!=null ) {\n                        for (i=0; i < obj.Clinical[location].length; i++) {\n                            $('#Coding_DX_Codes').append(count_dx +'. '+obj.Clinical[location][i].code+': '+obj.Clinical[location][i].codedesc+'<br />');\n                            justify_btn = '<span class=\"modifier status_on\" id=\"visit_just_'+count_dx+'\" name=\"visit_justifier\" value=\"\" data-justcode=\"'+obj.Clinical[location][i].codetype+'|'+obj.Clinical[location][i].code+'\" title=\"'+obj.Clinical[location][i].codedesc+'\">'+count_dx+'</span>';\n                            count_dx++;\n                            $('#visit_justification').append(justify_btn);\n\n                            visit_justifier.push(obj.Clinical[location][i].codetype+'|'+obj.Clinical[location][i].code);\n                        }\n                      }\n                    }\n                  }\n                }\n              } else { //all is good, one code only\n                $('#Coding_DX_Codes').append(count_dx +'. '+value.code+': '+value.codedesc+'<br />');\n\n                justify_btn = ' <span class=\"modifier status_on\" id=\"visit_just_'+count_dx+'\" name=\"visit_justifier\" data-justcode=\"'+value.codetype+'|'+value.code+'\" title=\"'+value.codedesc+'\">'+count_dx+'</span> ';\n                $('#visit_justification').append(justify_btn);\n                //we assume the visit code will use this as a justification in billing so activate that link now.\n                visit_justifier.push(value.codetype+'|'+value.code);\n              }\n            }\n\n            if (typeof nodisplay !== \"undefined\") {\n              return;\n            }\n               var title2 = value.title.replace(/(\\')/g, '');\n               contents_here = \"<span class='bold' contenteditable title='<?php echo xla('Click to edit'); ?>' id='IMPRESSION_\"+index+\"'>\" +\n               value.title +\"</span>\"+\n               \" <span contenteditable class='float-right' onclick='sel_diagnosis(\"+index+\",\\\"\"+title2+\"\\\");' title='\"+value.codetext+\"' id='CODE_\"+index+\"'>\"+\n               value.code + \"</span>\"+\n               \"<br /><textarea id='PLAN_\"+index+\"' name='PLAN_\"+index+\n               \"' style='width:100%;max-width:100%;height:auto;min-height:3em;overflow-y: hidden;padding-top: 1.1em; '>\"+\n               value.plan +\"</textarea><br /></li>\";\n               $('#IMPPLAN_zone').append('<div id=\"IMPPLAN_zone_'+index+'\" class=\"IMPPLAN_class\">'+\n                                         '<i class=\"float-right fa fa-times\" id=\"BUTTON_IMPPLAN_'+index+'\"></i>'+\n                                         contents_here+'</div>');\n               $('#BUTTON_IMPPLAN_'+index).on('click', function() {//delete/close icon\n                                                 var item = this.id.match(/BUTTON_IMPPLAN_(.*)/)[1];\n                                                 obj.IMPPLAN_items.splice(item,1);\n                                                 build_IMPPLAN(obj.IMPPLAN_items);\n                                                 store_IMPPLAN(obj.IMPPLAN_items,'1');\n                                                 });\n               $('#PLAN_'+index).css(\"background-color\",\"#F0F8FF\");\n        });\n        //end each\n        //now attach visit_justifier(s) to each TEST\n        //If the TEST_justifiers were ever touched AND\n        $.each($(\".TESTS_justify\"), function( index, value) {\n            $( this ).html('');\n            var herenow = $(\"#TEST_\"+index+\"_justify\");\n\n            for (var i = 0, length = visit_justifier.length; i < length; i++) {\n                item2 = visit_justifier[i];\n                status ='';\n                for (var j=0;j< CODING_items.length; j++) {\n                    if (CODING_items[j].justify == item2) {\n                        status=\"status_on\";\n                    }\n                }\n                //if item2 is in CODING_items, it will have class=status_on and we need modifier 25, maybe 59 if there are two or more?\n                justify_btn = '&nbsp;<span class=\"modifier '+status+'\" id=\"TEST_'+index+'_just_'+i+'\" name=\"TEST_'+index+'_justifiers\" value=\"\" data-justcode=\"'+item2+'\" title=\"'+item2+'\">'+(i+1)+'</span>';\n                herenow.append(justify_btn);\n            }\n        });\n\n            // The IMPRESSION DXs are \"contenteditable\" spans.\n            // If the user changes the words in an IMPRESSION Diagnosis area, store it.\n        $('[id^=IMPRESSION_]').on('blur', function(e) {\n                                    e.preventDefault();\n                                    var item = this.id.match(/IMPRESSION_(.*)/)[1];\n                                    var content = this.innerText || this.innerHTML;\n\n                                    if (pmsfh_here = obj.IMPPLAN_items[item].PMSFH_link.match(/(.*)\\_(.*)/)) {\n                                        //we are going to change how this appears in PMH too.\n                                        var pmsfh_zone = pmsfh_here[1];\n                                        var pmsfh_item = pmsfh_here[2];\n                                        obj.PMSFH[pmsfh_zone][pmsfh_item].title = content;\n                                        alter_issue2(obj.PMSFH[pmsfh_zone][pmsfh_item].issue,pmsfh_zone,pmsfh_item);\n                                    }\n\n                                    obj.IMPPLAN_items[item].title = content;\n                                    store_IMPPLAN(obj.IMPPLAN_items,'1');\n                                    //$(this).css('background-color','#F0F8FF');\n                                    return false;\n                                    });\n        $('[id^=CODE_]').on('blur', function() {\n                              var item = this.id.match(/CODE_(.*)/)[1];\n                              var new_code = this.innerText || this.innerHTML;\n                              obj.IMPPLAN_items[item].code =  new_code;\n                              //obj.IMPPLAN_items[item].codetext = '';\n                              //obj.IMPPLAN_items[item].codedesc = '';\n                              $(this).css('background-color','#F0F8FF');\n                              store_IMPPLAN(obj.IMPPLAN_items);\n                            });\n\n        $('[id^=PLAN_]').on('change', function() {\n                                var item = this.id.match(/PLAN_(.*)/)[1];\n                                obj.IMPPLAN_items[item].plan =  $(this).val();\n                                store_IMPPLAN(obj.IMPPLAN_items,'1');\n                                $(this).css('background-color','#F0F8FF');\n                                });\n\n        $('#IMPPLAN_zone').on( 'keyup', 'textarea', function (e){\n                              //$(this).css('height', 'auto' );\n                             // $(this).height( this.scrollHeight );\n                              });\n        $('#IMPPLAN_zone').find( 'textarea' ).keyup();\n        obj.IMPPLAN_items = items;\n    }\n}\n\n\n/*\n * This functions updates a PMSFH item's code on the server via its issue number\n */\nfunction update_PMSFH_code(the_issue,new_code){\n    var url = \"../../forms/eye_mag/save.php?mode=update\";\n    top.restoreSession();\n    $.ajax({\n           type         : 'POST',\n           url          :  url,\n           data     : {\n           action       : 'code_PMSFH',\n           pid          : $('#pid').val(),\n           form_id      : $('#form_id').val(),\n           encounter    : $('#encounter').val(),\n           uniqueID     : $('#uniqueID').val(),\n           issue        : the_issue,\n           code         : new_code\n           }\n           }).done(function(result) {\n                   if (result == 'Code 400') {\n                   code_400(); //the user does not have write privileges!\n                   return;\n                   }\n                   });\n}\n\n\n/*\n *  This function sends the obj.IMPPLAN_items to the server for storage\n */\nfunction store_IMPPLAN(storage,nodisplay) {\n    if (typeof storage !== \"undefined\") {\n        var url = \"../../forms/eye_mag/save.php?mode=update&store_IMPPLAN\";\n        var formData =  JSON.stringify(storage);\n        top.restoreSession();\n        $.ajax({\n               type         : 'POST',\n               url          :  url,\n               dataType     : 'json',\n               data         : {\n                 parameter     : formData,\n                 action        : 'store_IMPPLAN',\n                 pid           : $('#pid').val(),\n                 form_id       : $('#form_id').val(),\n                 encounter     : $('#encounter').val(),\n                 uniqueID      : $('#uniqueID').val()\n               }\n               }).done(function(result) {\n                       if (result == \"Code 400\") {\n                       code_400(); //the user does not have write privileges!\n                       return;\n                       }\n                       obj.IMPPLAN_items = result;\n                    //   if (typeof nodisplay === \"undefined\") {\n                          build_IMPPLAN(obj.IMPPLAN_items,nodisplay);\n                      // }\n                       });\n    }\n}\n\n\n/*\n *  This submits any codes we have in the obj.IMPPLAN_items variable, ie. what is in the Impression Plan currently, to the coding engine.\n *\n */\nfunction CODING_to_feesheet(CODING_items) {\n    if (typeof CODING_items !== \"undefined\") {\n        var url = \"../../forms/eye_mag/save.php?mode=update&track=ThingOne\";\n        var formData =  JSON.stringify(CODING_items);\n        top.restoreSession();\n        $.ajax({\n               'type'         : 'POST',\n               'url'          :  url,\n               'data'         : {\n               'parameter'    : formData,\n               'action'       : 'code_visit',\n               'pid'          : $('#pid').val(),\n               'form_id'      : $('#form_id').val(),\n               'encounter'    : $('#encounter').val(),\n               'uniqueID'     : $('#uniqueID').val()\n               }\n               }).done(function(result) {\n                       if (result == \"Code 400\") {\n                        code_400(); //the user does not have write privileges!\n                        return;\n                       } else {\n                        //$(\"#goto_fee_sheet\").prop('disabled', false);\n                        $(\"#goto_fee_sheet\").removeClass('nodisplay');\n                       }\n                       });\n    }\n\n}\n\n/*\n * This function allows the user to drag a DX from the Impression/Plan Builder list directly onto the Impression Plan list.\n * This item is appended to the $('#IMPPLAN_zone').\n */\nfunction dragto_IMPPLAN_zone(event, ui) {\n    var findme = ui.draggable.find(\"span\").attr(\"id\");\n    var group = findme.match(/DX_(.*)_(.*)/)[1];\n    var location = findme.match(/DX_(.*)_(.*)/)[2];\n    var the_code ='';\n    var the_codedesc ='';\n    var the_codetext ='';\n    var the_plan ='';\n    if (obj.IMPPLAN_items ==null) obj.IMPPLAN_items = [];\n    if (group ==\"Clinical\") {\n            //more than one field can contain this DX.\n            //Group them into one IMPPLAN.\n        for (i=0;i < obj.Clinical[location].length; i++) {\n            the_code += obj.Clinical[location][i]['code']+',';\n            the_codedesc = obj.Clinical[location][i]['codedesc'];\n            the_codetext = obj.Clinical[location][i]['codetext'];\n            the_plan += obj.Clinical[location][i]['codedesc'] + \"\\r\";\n        }\n        if (i > 0) the_code = the_code.slice(0, -1);\n        obj.IMPPLAN_items.push({\n                               code:        the_code,\n                               codedesc:    the_codedesc,\n                               codetext:    the_codetext,\n                               codetype:    obj.Clinical[location][0]['codetype'],\n                               plan:        the_plan,\n                               PMSFH_link:  obj.Clinical[location][0]['PMSFH_link'],\n                               title:       obj.Clinical[location][0]['title']\n                               });\n\n    } else {\n        obj.IMPPLAN_items.push({\n                               code:        obj.PMSFH[group][location]['code'],\n                               codedesc:    obj.PMSFH[group][location]['codedesc'],\n                               codetext:    obj.PMSFH[group][location]['codetext'],\n                               codetype:    obj.PMSFH[group][location]['codetype'],\n                               plan:        obj.PMSFH[group][location]['comments'],\n                               PMSFH_link:  obj.PMSFH[group][location]['PMSFH_link'],\n                               title:       obj.PMSFH[group][location]['title']\n\n                               });\n    }\n    store_IMPPLAN(obj.IMPPLAN_items); //redisplay the items\n}\n/*\n * This function allows the user to drag a DX from the IMPRESSION list directly into the New Dx field (#IMP) <-- New Dx textarea\n * The data is appended to the end of the text.\n * It doesn't know what is already there (yet) so numbering if desired must be done manually.\n */\nfunction dragto_IMPPLAN(event, ui) {\n    var findme = ui.draggable.find(\"span\").attr(\"id\");\n    var group = findme.match(/DX_(.*)_(.*)/)[1];\n    var location = findme.match(/DX_(.*)_(.*)/)[2];\n    var draggable2 = ui.draggable;\n    if (group ==\"Clinical\") {\n        $('#IMP').val(ui.draggable[0].textContent+\"\\n\");\n    } else {\n        $('#IMP').val(ui.draggable[0].textContent+\"\\n\"+obj.PMSFH[group][location]['comments']);\n    }\n}\n/* END Functions related to IMPPLAN Builder */\n\nfunction Suggest_visit_code() {\n    //assume Eyes and established patient\n    (Code_group != 'Eyes')  ? (digit_2 = '9') : digit_2 = '2'; //920XX or 990XX\n    (Code_new_est == 'New')  ? (digit_4 = '0') : digit_4 = '1'; //9X01X or 9X00X\n    if (detail_reached_exam =='1' && (detail_reached_HPI =='1')) {\n        (Code_group =='Eyes') ? (digit_5 = '4') : (digit_5='3'); //920X4 or 990X3\n        detailed = \"comprehensive\";\n    } else {\n        digit_5 = '2'; //920X2\n        detailed = \"intermediate\";\n    }\n    visit_desc = Code_new_est +\" \"+ detailed +\" \"+digit_5;\n    visit_code = \"9\"+digit_2+\"0\"+digit_4+digit_5;\n    $('#visit_codes').val(\"CPT4|\"+visit_code+\"|\").change();\n}\n/*\n *  This function builds the codes and populates the billing table for this encounter.\n */\nfunction build_CODING_list() {\n    CODING_items =[];\n    /*  the following things get billed:\n     1. Visit code(s) including neurosensory if performed\n     2. Tests performed\n     3. Diagnostic codes\n     */\n         //3. Diagnostic Codes\n    $.each(obj.IMPPLAN_items, function( index, value ) {\n      if (value['codetype']) {\n        if (value['code'].match(/\\,/g)) {\n          // physical finding found in more than one location, more than one code...\n          // if there is a comma in there, there is more than one code present. Split them out.\n          // And all those in one group have the same link out (PMSFH_link) value\n          var location = value.PMSFH_link.match(/Clinical_(.*)/)[1];\n          for (i=0; i< obj.Clinical[location].length; i++) {\n            CODING_items.push({\n                             code:     obj.Clinical[location][i]['code'],\n                             codedesc: obj.Clinical[location][i]['codedesc'],\n                             codetext: obj.Clinical[location][i]['codetext'],\n                             codetype: obj.Clinical[location][i]['codetype'],\n                             title:    obj.Clinical[location][i]['title']\n                             });\n          }\n        } else if (value['code'].match(/Code/)){\n          //ignore\n        } else {\n          CODING_items.push({\n                             code:     value['code'],\n                             codedesc: value['codedesc'],\n                             codetext: value['codetext'],\n                             codetype: value['codetype'],\n                             title:    value['title']\n                             });\n\n        }\n      }\n    });\n        //1.  Visit Codes.  These can have a modifier (22,24,25,57 hard coded so far)\n        var visit_justify = visit_justifier.join(\":\");\n        if (typeof visit_modifier != \"object\") {\n          visit_modifiers = [];\n        } else {\n          visit_modifiers = visit_modifier.join(\":\");//\n        }\n    CODING_items.push({\n                      code:     visit_code,\n                      codedesc: visit_desc,\n                      codetext: '',\n                      codetype: 'CPT4',\n                      title:    'Visit Code',\n                      modifier: visit_modifiers,\n                      justify:  visit_justify\n                      });\n        //neurosensory\n    if (CPT_92060 == 'here') {\n        CODING_items.push({\n                          code:     '92060',\n                          codedesc: 'Sensorimotor exam',\n                          codetext: 'Sensorimotor exam (CPT4:92060)',\n                          codetype: 'CPT4',\n                          title:    'Neuro/Sensorimotor Code',\n                          justify:  visit_justify\n                          });\n    }\n        //2. Tests/procedures performed to bill\n    $('.TESTS').each(function(i, obj) {\n                    if  ($(this).is(':checked')) {\n                      var codetype = obj.value.match(/(.*):(.*)/)[1];\n                      var code = obj.value.match(/(.*):(.*)/)[2];\n                      var modifier = $('#'+obj.id+'_modifier').val();\n                      var justify = '';\n                      $('[name=\"TEST_'+i+'_justifiers\"]').each(function(j,obj2) {\n                          if ($('#TEST_'+i+'_just_'+j).hasClass('status_on') ) {\n                            var h = $(this).data();\n                            justify = h.justcode;\n                          }\n                      });\n                      var d = $(this).data();\n                      CODING_items.push({\n                                       'code'       : code,\n                                       'codedesc'   : d.title,\n                                       'codetext'   : d.codetext,\n                                       'codetype'   : codetype,\n                                       'title'      : d.title,\n                                       'modifier'   : modifier,\n                                       'justify'    : justify\n                                       });\n                    }\n                  });\n}\n\n/*\n * Function to make the form fields inactive or active depending on the form's state (Active vs. READ-ONLY)\n */\nfunction toggle_active_flags(new_state) {\n    if (($(\"#chart_status\").val() == \"off\") || (new_state == \"on\")) {\n            //  we are read-only and we want to go active.\n        $(\"#chart_status\").val(\"on\");\n        $(\"#active_flag\").html(\" Active Chart \");\n        $(\"#active_icon\").html(\"<i class='fa fa-toggle-on'></i>\");\n        $(\"#warning\").addClass(\"nodisplay\");\n        $('input, select, textarea, a').removeAttr('disabled');\n        $('input, textarea').removeAttr('readonly');\n    } else {\n            //else clicking this means we want to go from active to read-only\n        $(\"#chart_status\").val(\"off\");\n        $(\"#active_flag\").html(\" READ-ONLY \");\n        $(\"#active_icon\").html(\"<i class='fa fa-toggle-off'></i>\");\n        $(\"#warning\").removeClass(\"nodisplay\");\n            //we should tell the form fields to be disabled. should already be...\n        $('input, select, textarea, a').attr('disabled', 'disabled');\n        $('input, textarea').attr('readonly', 'readonly');\n            //need to also disable Ductions and Versions, PRIORS, Quicks Picks and Drawing!!! AND IMPPLAN area.\n            //Either way a save in READ-ONLY mode fails - just returns this pop_up again, without saving...\n        this_form_id = $(\"#form_id\").val();\n        $(\"#COPY_SECTION\").val(\"READONLY-\"+this_form_id);\n    }\n}\n/*\n * Function to update a form in READ-ONLY mode with any data added by the Active version of this form_id/encounter form\n */\nfunction update_READONLY() {\n    var data = {\n        'action'      : 'retrieve',\n        'copy'        : 'READONLY',\n        'zone'        : 'READONLY',\n        'copy_to'     : $(\"#form_id\").val(),\n        'copy_from'   : $(\"#form_id\").val(),\n        'pid'         : $(\"#pid\").val()\n    };\n        //we are going to update the whole form\n        //Imagine you are watching on your browser while the tech adds stuff in another room on another computer.\n        //We are not ready to actively chart, just looking to see how far along our staff is...\n        //or maybe just looking ahead to see the who's being worked up in the next room?\n        //Either way, we are looking at a record that at present will be disabled/we cannot change...\n        // yet it is updating every 10-15 seconds if another user is making changes.\n    top.restoreSession();\n    $.ajax({\n           type   : 'POST',\n           dataType : 'json',\n           url      :  \"../../forms/eye_mag/save.php?copy=READONLY\",\n           data   : data,\n           success  : function(result) {\n           $.map(result, function(valhere, keyhere) {\n                 if ($(\"#\"+keyhere).val() != valhere) {\n                 $(\"#\"+keyhere).val(valhere).css(\"background-color\",\"#CCF\");\n                 }\n                 if (keyhere.match(/MOTILITY_/)) {\n                 // Copy forward ductions and versions visually\n                 // Make each blank, and rebuild them\n                 $(\"[name='\"+keyhere+\"_1']\").html('');\n                 $(\"[name='\"+keyhere+\"_2']\").html('');\n                 $(\"[name='\"+keyhere+\"_3']\").html('');\n                 $(\"[name='\"+keyhere+\"_4']\").html('');\n                 if (keyhere.match(/(_RS|_LS|_RI|_LI|_RRSO|_RRIO|_RLSO|_RLIO|_LRSO|_LRIO|_LLSO|_LLIO)/)) {\n                 // Show a horizontal (minus) tag.\n                 hash_tag = '<i class=\"fa fa-minus\"></i>';\n                 } else { //show vertical tag\n                 hash_tag = '<i class=\"fa fa-minus rotate-left\"></i>';\n                 }\n                 for (index =1; index <= valhere; ++index) {\n                 $(\"#\"+keyhere+\"_\"+index).html(hash_tag);\n                 }\n                 } else if (keyhere.match(/^(ODVF|OSVF)\\d$/)) {\n                 if (valhere =='1') {\n                 $(\"#FieldsNormal\").prop('checked', false);\n                 $(\"#\"+keyhere).prop('checked', true);\n                 $(\"#\"+keyhere).val('1');\n                 } else {\n                 $(\"#\"+keyhere).val('0');\n                 $(\"#\"+keyhere).prop('checked', false);\n                 }\n                 } else if (keyhere.match(/AMSLERO(.)/)) {\n                 var sidehere = keyhere.match(/AMSLERO(.)/);\n                 if (valhere < '1') valhere ='0';\n                 $(\"#\"+keyhere).val(valhere);\n                 var srcvalue=\"AmslerO\"+sidehere[1];\n                 document.getElementById(srcvalue).src = document.getElementById(srcvalue).src.replace(/\\_\\d/g,\"_\"+valhere);\n                 $(\"#AmslerO\"+sidehere[1]+\"value\").text(valhere);\n                 } else if (keyhere.match(/VA$/)) {\n                 $(\"#\"+keyhere+\"_copy\").val(valhere).css(\"background-color\",\"#F0F8FF\");;\n                 $(\"#\"+keyhere+\"_copy_brd\").val(valhere).css(\"background-color\",\"#F0F8FF\");;\n                 } else if (keyhere.match(/^O.VA_/)) {\n                 var side=keyhere.match(/(O.)VA_(.)/)[1];\n                 var rx_number=keyhere.match(/(O.)VA_(.)/)[2];\n                 if (rx_number == '1') { //update VA_1_copy and VA_1_copy_brd (first wearing RX only)\n                 $('#'+side+'VA_1_copy').val(valhere).css(\"background-color\",\"#F0F8FF\");;\n                 $('#'+side+'VA_1_copy_brd').val(valhere).css(\"background-color\",\"#F0F8FF\");;\n                 }\n                 } else if (keyhere.match(/^RX_TYPE_\\d$/)) {\n                 if (typeof $('input:radio[name='+keyhere+']')[valhere] !== \"undefined\") {\n                 $('input:radio[name='+keyhere+']')[valhere].checked = true;\n                 }\n                 } else if (keyhere.match(/(alert|oriented|confused|PUPIL_NORMAL)/)) {\n                 if (valhere =='1') {\n                 $('#'+keyhere).val(valhere).prop('checked', true);\n                 } else {\n                 $('#'+keyhere).val(valhere).prop('checked', false);\n                 }\n                 }\n                 });\n           }});\n}\nfunction dopopup(url) {\n    window.open(url, 'clinical', 'width=fullscreen,height=fullscreen,resizable=1,scrollbars=1,directories=0,titlebar=0,toolbar=0,location=0,status=0,menubar=0');\n}\nfunction goto_url(url) {\n    R =  url;\n    top.restoreSession();\n    location.href = R;\n}\n//is this used anywhere?  Looks like it should be deleted...\nfunction openImage() {\n    dlgopen(base+'/controller.php?document&retrieve&patient_id=3&document_id=10&as_file=false', '_blank', 600, 475);\n}\n\n// Called to open a document in another tab for this encounter.\nfunction openDocumentNewTab(doc_id) {\n    var url = '../../interface/patient_file/encounter/view_form.php?formname=' + formdir + '&id=' + formid;\n    if (formdir == 'newpatient' || !parent.twAddFrameTab) {\n        top.restoreSession();\n        location.href = url;\n    } else {\n        parent.twAddFrameTab('enctabs', formname, url);\n    }\n    return false;\n}\n\nfunction HPI_sync_heights() {\n    if ( ($('#PMSFH_block_1').height() > $('#PMH_left').height() ) ||\n         ($('#PMSFH_block_2').height() > $('#PMH_left').height()) )\n    {\n        if ($('#PMSFH_block_1').height() > $('#PMSFH_block_2').height()) {\n            heights = $('#PMSFH_block_1').height();\n        } else {\n            heights = $('#PMSFH_block_2').height();\n        }\n        $('#PMH_left').height(heights);\n        $('#PMH_right').height(heights)\n        $('#PMH_1').height(heights+20);\n    } else if ( $(\"#PMH_2\").hasClass('nodisplay') ) {\n        $('#PMH_1').height($('#HPI_1').height());\n    } else {\n        $('#PMH_1').height($('#PMH_2').height());\n    }\n}\n/**\n *  Keyboard shortcut commands.\n */\n\nshortcut.add(\"Control+T\",function() {\n             show_TEXT();\n             });\nshortcut.add(\"Meta+T\",function() {\n             show_TEXT();\n             });\nshortcut.add(\"Control+D\",function() {\n             show_DRAW();\n             });\nshortcut.add(\"Meta+D\",function() {\n             show_DRAW();\n             });\nshortcut.add(\"Control+P\",function() {\n             $(\"#PRIOR_ALL\").val($('#form_id').val()).trigger(\"change\");\n             });\nshortcut.add(\"Meta+P\",function() {\n             show_PRIORS();\n             $(\"#PRIOR_ALL\").val($('#form_id').val()).trigger(\"change\");\n             });\nshortcut.add(\"Control+B\",function() {\n             show_QP();\n             });\nshortcut.add(\"Meta+B\",function() {\n             show_QP();\n             });\nshortcut.add(\"Control+K\",function() {\n             show_KB();\n             });\nshortcut.add(\"Meta+K\",function() {\n             show_KB();\n             });\n$(function () {\n  /*\n   * this swallows backspace keys on the \"rx\" elements.\n   * stops backspace -> back a page in the browser, a very annoying thing indeed.\n   */\n  var rx = /INPUT|SELECT|TEXTAREA|SPAN|DIV/i;\n\n  $(document).bind(\"keydown keypress\", function(e){\n                   if( e.which == 8 ){ // 8 == backspace\n                   if(!rx.test(e.target.tagName) || e.target.disabled || e.target.readOnly ){\n                   e.preventDefault();\n                   }\n                   }\n                   });\n  });\n\n/**\n *  Function to update the PCP and referring person\n *\n */\nfunction update_DOCS() {\n    var url = \"../../forms/eye_mag/save.php?mode=update\";\n    top.restoreSession();\n    $.ajax({\n           type         : 'POST',\n           url          :  url,\n           data         : {\n             action       : 'docs',\n             pid          : $('#pid').val(),\n             pcp          : $('#form_PCP').val(),\n             rDOC         : $('#form_rDOC').val(),\n             form_id      : $('#form_id').val(),\n             encounter    : $('#encounter').val(),\n             uniqueID     : $('#uniqueID').val()\n           }\n           }).done(function(result) {\n                   if (result == \"Code 400\") {\n                   code_400(); //the user does not have write privileges!\n                   return;\n                   }\n                   obj = JSON.parse(result);\n                   build_DOCS(obj);\n    });\n}\n\n/**\n *  Function to update the PCP and Referring Doctors data.\n *  Initial use:  update data returned from an ajax call.\n */\nfunction build_DOCS(DOCS) {\n    if (DOCS['pcp']) {\n        $(\"#pcp_name\").html(DOCS['pcp']['name']);\n        $(\"#pcp_address\").html(DOCS['pcp']['address']);\n        $(\"#pcp_phone\").html(DOCS['pcp']['phone']);\n        $(\"#pcp_phonew2\").html(DOCS['pcp']['phone2']);\n        $(\"#pcp_fax\").html(DOCS['pcp']['fax']);\n        $(\"#pcp_fax_info\").html(DOCS['pcp']['fax_info']);\n    } else {\n        $(\"#pcp_name\").html('');\n        $(\"#pcp_address\").html('');\n        $(\"#pcp_phone\").html('');\n        $(\"#pcp_phonew2\").html('');\n        $(\"#pcp_fax\").html('');\n        $(\"#pcp_fax_info\").html('');\n    }\n    if (DOCS['ref']) {\n        $(\"#ref_name\").html(DOCS['ref']['name']);\n        $(\"#ref_address\").html(DOCS['ref']['address']);\n        $(\"#ref_phone\").html(DOCS['ref']['phone']);\n        $(\"#ref_phonew2\").html(DOCS['ref']['phonew2']);\n        $(\"#ref_fax\").html(DOCS['ref']['fax']);\n        $(\"#ref_fax_info\").html(DOCS['ref']['fax_info']);\n    } else {\n        $(\"#ref_name\").html('');\n        $(\"#ref_address\").html('');\n        $(\"#ref_phone\").html('');\n        $(\"#ref_phonew2\").html('');\n        $(\"#ref_fax\").html('');\n        $(\"#ref_fax_info\").html('');\n    }\n}\n\n/**\n *      Function to update the patient's current pharmacy\n */\n\nfunction  update_Pharma() {\n    //$(#form_pharmacy_id) has changed value, update the patient_data field pharmacy_id\n    var pharm = $(\"#form_pharmacy_id\").val();\n    var url = \"../../forms/eye_mag/save.php?mode=update\";\n    top.restoreSession();\n    $.ajax({\n        type         : 'POST',\n        url          :  url,\n        data         : {\n            action       : 'new_pharmacy',\n            pid          : $('#pid').val(),\n            form_id      : $('#form_id').val(),\n            encounter    : $('#encounter').val(),\n            uniqueID     : $('#uniqueID').val(),\n            pc_eid       : $(\"#pc_eid\").val(),\n            visit_date   : $(\"#visit_date\").val(),\n            new_pharmacy : pharm\n        }\n    }).done(function(result) {\n        if (result == \"Code 400\") {\n            code_400(); //the user does not have write privileges!\n            return;\n        }\n    });\n}\n\n\n/**\n *  Function to convert ophthalmic prescriptions between plus cylinder and minus cylinder\n *\n */\nfunction reverse_cylinder(target) {\n    //target can be revW1-5,AR,MR,CR,CTL,\n    var prefix;\n    var suffix;\n    if (target.match(/^(AR|MR|CR|CTL)$/)) {\n        prefix = target;\n        suffix = '';\n    }\n    if (target.match(/^revW[1-5]{1}$/)) { //matches on digit only, here 1-5\n        target = target.replace(\"revW\",\"\");\n        prefix = '';\n        suffix = '_'+target;\n    }\n    var Rsph  = $('#'+prefix+'ODSPH'+suffix).val();\n    var Rcyl  = $('#'+prefix+'ODCYL'+suffix).val();\n    var Raxis = $('#'+prefix+'ODAXIS'+suffix).val();\n    var Lsph  = $('#'+prefix+'OSSPH'+suffix).val();\n    var Lcyl  = $('#'+prefix+'OSCYL'+suffix).val();\n    var Laxis = $('#'+prefix+'OSAXIS'+suffix).val();\n    if (Rsph=='' && Rcyl =='' && Lsph=='' && lcyl =='') return;\n    if ((!Rcyl.match(/SPH/i)) && (Rcyl >'')) {\n        if (Rsph.match(/plano/i)) Rsph ='0';\n        Rsph = Number(Rsph);\n        Rcyl = Number(Rcyl);\n        Rnewsph = Rsph + Rcyl;\n        if (Rnewsph ==0) Rnewsph =\"PLANO\";\n        Rnewcyl = Rcyl * -1;\n        if (Rnewcyl > 0) Rnewcyl = \"+\"+Rnewcyl;\n        if (parseInt(Raxis) < 90) {\n            Rnewaxis = parseInt(Raxis) + 90;\n        } else {\n            Rnewaxis = parseInt(Raxis) - 90;\n        }\n        if (Rnewcyl=='0') Rnewcyl = \"SPH\";\n        if (Rnewsph =='0') {\n            Rnewsph =\"PLANO\";\n            if (Rnewcyl ==\"SPH\") Rnewcyl = '';\n        }\n        $('#'+prefix+'ODSPH'+suffix).val(Rnewsph);\n        $('#'+prefix+'ODCYL'+suffix).val(Rnewcyl);\n        $('#'+prefix+'ODAXIS'+suffix).val(Rnewaxis);\n        $('#'+prefix+'ODAXIS'+suffix).trigger('blur');\n        $('#'+prefix+'ODSPH'+suffix).trigger('blur');\n        $('#'+prefix+'ODCYL'+suffix).trigger('blur');\n    }\n    if ((!Lcyl.match(/SPH/i)) && (Lcyl >'')) {\n        if (!Lsph.match(/\\d/)) Lsph ='0';\n        Lsph = Number(Lsph);\n        Lcyl = Number(Lcyl);\n        Lnewsph = Lsph + Lcyl;\n        Lnewcyl = Lcyl * -1;\n        if (Lnewcyl > 0) Lnewcyl = \"+\"+ Lnewcyl;\n        if (parseInt(Laxis) < 90) {\n            Lnewaxis = parseInt(Laxis) + 90;\n        } else {\n            Lnewaxis = parseInt(Laxis) - 90;\n        }\n\n        if (Lnewcyl=='0') Lnewcyl = \"SPH\";\n        if (Lnewsph =='0') {\n            Lnewsph =\"PLANO\";\n            if (Lnewcyl ==\"SPH\") Lnewcyl = '';\n        }\n\n        $('#'+prefix+'OSSPH'+suffix).val(Lnewsph);\n        $('#'+prefix+'OSCYL'+suffix).val(Lnewcyl);\n        $('#'+prefix+'OSAXIS'+suffix).val(Lnewaxis);\n        $('#'+prefix+'OSAXIS'+suffix).trigger('blur');\n        $('#'+prefix+'OSSPH'+suffix).trigger('blur');\n        $('#'+prefix+'OSCYL'+suffix).trigger('blur');\n    }\n}\nfunction scrollTo(target) {\n  var offset;\n  var scrollSpeed = 500;\n  var wheight = $(window).height();\n  offset = $(\"#\"+target).offset().top - (wheight / 2)+200;\n  if (offset > (window.pageYOffset +150)||offset < (window.pageYOffset -150)) {\n    $('html, body').animate({scrollTop:offset}, scrollSpeed);\n  }\n}\n\nfunction update_appt_status(new_status) {\n  var url = \"../../forms/eye_mag/save.php?mode=update\";\n  top.restoreSession();\n  $.ajax({\n           type         : 'POST',\n           url          :  url,\n           data         : {\n           action       : 'new_appt_status',\n           pid          : $('#pid').val(),\n           form_id      : $('#form_id').val(),\n           encounter    : $('#encounter').val(),\n           uniqueID     : $('#uniqueID').val(),\n           pc_eid       : $(\"#pc_eid\").val(),\n           visit_date   : $(\"#visit_date\").val(),\n           new_status   : new_status\n           }\n           }).done(function(result) {\n                   if (result == \"Code 400\") {\n                   code_400(); //the user does not have write privileges!\n                   return;\n                   }\n                   });\n}\nfunction color_IOP(IOP){\n    if (!$.isNumeric(IOP.value)) return;\n    if (IOP.value  > '21')  {\n        $(IOP).css(\"background-color\",\"rgb(255, 153, 153)\");\n    }\n}\nfunction showpnotes(docid) {\n    let btnClose = 'Done';\n    let url = base+'/interface/patient_file/summary/pnotes.php?docid=' + encodeURIComponent(docid);\n    dlgopen(url, 'pno1', 'modal-xl', 500, '', '', {\n        buttons: [\n                {text: btnClose, close: true, style: 'default btn-sm'}\n            ],\n        sizeHeight: 'auto',\n        allowResize: true,\n        allowDrag: true,\n        dialogId: '',\n        type: 'iframe'\n    });\n    return false;\n}\nfunction getTimeStamp() {\n    var now = new Date();\n    var AMPM = now.getHours() >= 12 ? 'PM' : 'AM';\n    return now.getHours() + ':' + ((now.getMinutes() < 10) ? (\"0\" + now.getMinutes()) : (now.getMinutes())) + AMPM;\n}\n\n/**\n * This function is only run onload to hide sections per user preference.\n * Any changes during the encounter to display or hide a section are stored\n * as a previous setting and the next eye form opened will appear the same way.\n */\nfunction show_by_setting() {\n    var tabs_left = $(\"#setting_tabs_left\").val();\n    if (typeof tabs_left ==undefined) exit;\n    var arrSet = [\"HPI\",\"PMH\",\"EXT\",\"ANTSEG\",\"POSTSEG\",\"NEURO\",\"IMPPLAN\"];\n    sLen = arrSet.length;\n    for (i = 0; i < sLen; i++) {\n        var value = $(\"#setting_\"+arrSet[i]).val();\n        if (typeof value !== undefined && value !='1') {\n            $('#tabs-left-'+arrSet[i]).addClass('ui-state-default');\n            $(\"#setting_\"+arrSet[i]).val('0');\n            $(\"#\"+arrSet[i]+'_1').addClass('nodisplay');\n            $(\"#setting_\"+arrSet[i]).val('0');\n        } else {\n            $(\"#setting_\"+arrSet[i]).val('1');\n        }\n    }\n    if (tabs_left == '0') {\n        $(\"#tabs_left\").addClass('nodisplay');\n    } else {\n        $(\"#tabs_left\").removeClass('nodisplay');\n    }\nshow_left();\n    return true;\n}\n\n$(function () {\n                  check_lock();\n\n                  var allPanels = $('.building_blocks > dd').hide();\n                  var allPanels2 = $('.building_blocks2 > dd').hide();\n                  refresh_page();\n\n                // AUTO- CODING FEATURES\n                  check_CPT_92060();\n                  check_exam_detail();\n                  hide_DRAW();\n                  hide_right();\n                //alert('Suggest a Code');\n                  Suggest_visit_code();\n                  show_QP_section('IMPPLAN','1');\n\n\n                  //on checking TESTS, show modifiers and justifier fields\n                  $(\".TESTS\").on(\"click\", function() {\n                    var test_id = this.id;\n                    if  ($(this).is(':checked')) {\n                      $(\"#\"+test_id+\"_justmods\").removeClass('nodisplay');\n                        $(\"#\"+test_id+\"_modifier\").val('59');\n//make vist_modifier 25 light up too...\n                      $(this).parent().removeClass('lights_off').addClass('lights_on');\n                    } else {\n                      $(\"#\"+test_id+\"_justmods\").addClass('nodisplay');\n                      $(this).parent().removeClass('lights_on').addClass('lights_off');\n                    }\n\n                  });\n                  $('[title]').tooltip();\n                  $('#form_PCP,#form_rDOC').on('change', function() {\n                                                   update_DOCS();\n                                                   });\n\n                  $(\"#form_pharmacy_id\").change(function() {\n                        update_Pharma();\n                  });\n\n                  $('#tooltips_status').html($('#PREFS_TOOLTIPS').val());\n                  if ($(\"#PREFS_TOOLTIPS\").val() == \"<?php echo xla('Off'); ?>\") {\n                    $('[title]').each(function() {\n                        var $this = $(this);\n                        $this.data('title',$this.attr('title'));\n                        $this.attr('title', '');\n                    });\n                  }\n                  $('#tooltips_toggle,#tooltips_status').on('click', function() {\n                                                               if ($(\"#PREFS_TOOLTIPS\").val() == \"<?php echo xla('On'); ?>\") {\n                                                               $('#PREFS_TOOLTIPS').val('<?php echo xla('Off'); ?>');\n                                                               $(\"#tooltips_status\").html('<?php echo xla('are off'); ?>');\n                                                               $('[title]').each(function() {\n                                                                   var $this = $(this);\n                                                                   $this.data('title',$this.attr('title'));\n                                                                   $this.attr('title', '');\n                                                               });\n                                                               } else {\n                                                               $('#PREFS_TOOLTIPS').val('<?php echo xla('On'); ?>');\n                                                               $('#tooltips_status').html('<?php echo xla('are on'); ?>');\n                                                               $('[title]').each(function() {\n                                                                   var $this = $(this);\n                                                                   $this.attr('title', $this.data('title'));\n                                                               });\n                                                               }\n                                                               update_PREFS();\n                                                               });\n                  $('#toggle_drugs').on('click', function(){\n                                           $('.hideme_drugs').toggleClass('nodisplay');\n                                           $(this).find('i').toggleClass('fa-toggle-down fa-toggle-up')\n                                           return false;\n                                           });\n                  $('#toggle_VFs').on('click', function(){\n                                         $('.hideme_VFs').toggleClass('nodisplay');\n                                         $(this).find('i').toggleClass('fa-toggle-down fa-toggle-up')\n                                         return false;\n                                         });\n                  $('#toggle_OCTs').on('click', function(){\n                                          $('.hideme_OCTs').toggleClass('nodisplay');\n                                          $(this).find('i').toggleClass('fa-toggle-down fa-toggle-up')\n                                          return false;\n                                          });\n                  $('#toggle_cups').on('click', function(){\n                                          $('.hideme_cups').toggleClass('nodisplay');\n                                          $(this).find('i').toggleClass('fa-toggle-down fa-toggle-up')\n                                          return false;\n                                          });\n                  $('#toggle_gonios').on('click', function(){\n                                            $('.hideme_gonios').toggleClass('nodisplay');\n                                            $(this).find('i').toggleClass('fa-toggle-down fa-toggle-up')\n                                            return false;\n                                            });\n                  $('.close').on('click', function(){\n                                    $('#GFS_accordion .hide').slideUp();\n                                    });\n                  $('#ODIOPTARGET').on('change', function() {\n                                           $('#OSIOPTARGET').val($('#ODIOPTARGET').val());\n                                           refresh_GFS();\n                                           });\n                  $('#ODIOPAP,#OSIOPAP,#ODIOPTARGET,#ODIOPTPN,#OSIOPTPN,#OSIOPTARGET').on('change', function() {\n                                                             //this is failing if there is no config_by_day variable.\n                                                             refresh_GFS();\n                                                             });\n                  if ($(\"#PREFS_KB\").val() =='1') {\n                    $(\".kb\").removeClass('nodisplay');\n                    $(\".kb_off\").addClass('nodisplay');\n                  } else {\n                    $(\".kb\").addClass('nodisplay');\n                    $(\".kb_off\").removeClass('nodisplay');\n                  }\n\n                  $(\"[name$='_kb']\").on('click', function() {\n                                           $('.kb').toggleClass('nodisplay');\n                                           $('.kb_off').toggleClass('nodisplay');\n                                           $('.copier').toggleClass('nodisplay');\n                                           if ($('#PREFS_EXAM').val() == 'DRAW') {\n                                                show_TEXT();\n                                           }\n\n                                           if ($(\"#PREFS_KB\").val() > 0) {\n                                           $(\"#PREFS_KB\").val('0');\n                                           } else {\n                                           $(\"#PREFS_KB\").val('1');\n                                           }\n                                           update_PREFS();\n                                           });\n                  $('.ke').on('mouseover', function() {\n                                     $(this).toggleClass('yellow');\n                                     });\n                  $('.ke').on('mouseout', function() {\n                                    $(this).toggleClass('yellow');\n                                    });\n                  $(\"[id$='_keyboard'],[id$='_keyboard_left']\").on('keydown', function(e) {\n                                                                   //this is the Shorthand engine's ignition\n                                                                   if (e.which == 13|| e.keyCode == 13||e.which == 9|| e.keyCode == 9) {\n                                                                   e.preventDefault();\n                                                                   var data_all = $(this).val();\n                                                                   var data_seg = data_all.match(/([^;]*)/gm);\n                                                                   var field2 ='';\n                                                                   var appendix =\".a\";\n                                                                   var zone;\n                                                                   for (index=0; index < data_seg.length; ++index) {\n                                                                     if (data_seg[index] =='') continue;\n                                                                     data_seg[index] = data_seg[index].replace(/^[\\n\\v\\f\\r\\x85\\u2028\\u2029\\W]*/,'');\n                                                                     data_seg[index] = data_seg[index].replace(/^[\\s]*/,'');\n                                                                     if (data_seg[index].match(/^D($|;)/i)) {\n                                                                     $(\"#EXT_defaults\").trigger(\"click\");\n                                                                     $(\"#ANTSEG_defaults\").trigger(\"click\");\n                                                                     $(\"#RETINA_defaults\").trigger(\"click\");\n                                                                     $(\"#NEURO_defaults\").trigger(\"click\");\n                                                                     continue;\n                                                                     }\n                                                                     if (data_seg[index].match(/^DEXT($|;)/i)) {\n                                                                     $(\"#EXT_defaults\").trigger(\"click\");\n                                                                     continue;\n                                                                     }\n                                                                     if (data_seg[index].match(/^DANTSEG($|;)/i)) {\n                                                                     $(\"#ANTSEG_defaults\").trigger(\"click\");\n                                                                     continue;\n                                                                     }\n                                                                     if (data_seg[index].match(/^DAS($|;)/i)) {\n                                                                     $(\"#ANTSEG_defaults\").trigger(\"click\");\n                                                                     continue;\n                                                                     }\n                                                                     if (data_seg[index].match(/^DRETINA($|;)/i)) {\n                                                                     $(\"#RETINA_defaults\").trigger(\"click\");\n                                                                     continue;\n                                                                     }\n                                                                     if (data_seg[index].match(/^DRET($|;)/i)) {\n                                                                     $(\"#RETINA_defaults\").trigger(\"click\");\n                                                                     continue;\n                                                                     }\n                                                                     if (data_seg[index].match(/^DNEURO($|;)/i)) {\n                                                                     $(\"#NEURO_defaults\").trigger(\"click\");\n                                                                     continue;\n                                                                    }\n                                                                   if ((data_seg[index].match(/^CLEAREXT($|;)/i))||\n                                                                       (data_seg[index].match(/^CEXT($|;)/i)))  {\n                                                                        $(\".EXT\").val('');\n                                                                        continue;\n                                                                   }\n                                                                   if ((data_seg[index].match(/^CLEARAS($|;)/i))||\n                                                                       (data_seg[index].match(/^CLEARANTSEG($|;)/i))||\n                                                                       (data_seg[index].match(/^CANTSEG($|;)/i))||\n                                                                       (data_seg[index].match(/^CANT($|;)/i))||\n                                                                       (data_seg[index].match(/^CAS($|;)/i))) {\n                                                                          $(\".ANTSEG\").val('');\n                                                                          continue;\n                                                                   }\n                                                                   if ((data_seg[index].match(/^CLEARRET($|;)/i))||\n                                                                       (data_seg[index].match(/^CRET($|;)/i)) ||\n                                                                       (data_seg[index].match(/^CLEARRETINA($|;)/i))||\n                                                                       (data_seg[index].match(/^CRETINA($|;)/i)))  {\n                                                                        $(\".RETINA\").val('');\n                                                                        continue;\n                                                                   }\n\n                                                                   appendix=\".a\";\n                                                                   var data = data_seg[index].match(/^(\\w*)\\:?(.*)/);\n                                                                   (data[2].match(/\\.a$/))?(data[2] = data[2].replace(/\\.a$/,'')):(appendix = \"nope\");\n                                                                   var field = data[1].toUpperCase();\n                                                                   var text = data[2];\n                                                                   text = expand_vocab(text);\n                                                                   priors = process_kb(field,text,appendix,prior_field,prior_text);\n                                                                   prior_field = priors['field'];\n                                                                   prior_text = priors['prior_text'];\n\n                                                                   }\n                                                                   submit_form('2');\n                                                                   $(this).val('');\n\n                                                                   }\n                                                                   });\n                  $(\"[id^='sketch_tools_']\").click(function() {\n                        var zone = this.id.match(/sketch_tools_(.*)_/)[1];\n                        $(\"[id^='sketch_tools_\"+zone+\"']\").css(\"height\",\"30px\");\n                        $(this).css(\"height\",\"50px\");\n                        $(\"#sketch_tool_\"+zone+\"_color\").css(\"background-image\",\"\").css(\"background-color\",$(\"#selColor_\"+zone).val());\n                  });\n                  $(\"[id^='sketch_sizes_']\").click(function() {\n                        var zone = this.id.match(/sketch_sizes_(.*)_/)[1];\n                        $(\"[id^='sketch_sizes_\"+zone+\"']\").css(\"background\",\"\").css(\"border-bottom\",\"\");\n                        $(this).css(\"border-bottom\",\"2pt solid black\");\n                  });\n\n\n                  //  Here we get CC1 to show\n                  $(\".tab_content\").addClass('nodisplay');\n                  $(\"#tab1_CC_text\").removeClass('nodisplay');\n                  $(\"#tab1_HPI_text\").removeClass('nodisplay');\n                  $(\"[id$='_CC'],[id$='_HPI_tab']\").on('click', function() {\n                                                          //  First remove class \"active\" from currently active tabs\n                                                          $(\"[id$='_CC']\").removeClass('active');\n                                                          $(\"[id$='_HPI_tab']\").removeClass('active');\n                                                          //  Hide all tab content\n                                                          $(\".tab_content\").addClass('nodisplay');\n                                                          //  Here we get the href value of the selected tab\n                                                          var selected_tab = $(this).find(\"a\").attr(\"href\");\n                                                          //  Now add class \"active\" to the selected/clicked tab and content\n                                                          $(selected_tab+\"_CC\").addClass('active');\n                                                          $(selected_tab+\"_CC_text\").removeClass('nodisplay');\n                                                          $(selected_tab+\"_HPI_tab\").addClass('active');\n                                                          $(selected_tab+\"_HPI_text\").removeClass('nodisplay');\n                                                          //  At the end, we add return false so that the click on the link is not executed\n                                                          return false;\n                                                          });\n                  $(\"input,textarea,text\").css(\"background-color\",\"#FFF8DC\");\n                  $(\"[id*=ODIOP],[id*=OSIOP]\").each(function() { color_IOP(this); });\n                  $(\"#IOPTIME\").css(\"background-color\",\"#FFFFFF\");\n                  $(\"#refraction_width\").css(\"width\",\"8.5in\");\n                  $(\".Draw_class\").addClass('nodisplay');\n                  $(\".PRIORS_class\").addClass('nodisplay');\n                  $(window).on(\"resize\", function() {\n                                   if (window.innerWidth >'900') {\n                                   $(\"#refraction_width\").css(\"width\",\"900px\");\n                                   $(\"#LayerVision2\").css(\"padding\",\"4px\");\n                                   }\n                                   if (window.innerWidth >'1300') {\n                                   $(\"#refraction_width\").css(\"width\",\"1300px\");\n                                   //$(\"#first\").css(\"width\",\"1300px\");\n                                   }\n                                   if (window.innerWidth >'1900') {\n                                   $(\"#refraction_width\").css(\"width\",\"1600px\");\n                                   }\n\n                                   });\n                  $(window).resize();\n\n                  var hash_tag = '<i class=\"fa fa-minus\"></i>';\n                  var index;\n                  // display any stored MOTILITY values\n                  $(\"#MOTILITY_RS\").value = parseInt($(\"#MOTILITY_RS\").val());\n                  if ($(\"#MOTILITY_RS\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_RS\").val()); ++index) {\n                  $(\"#MOTILITY_RS_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_RI\").value = parseInt($(\"#MOTILITY_RI\").val());\n                  if ($(\"#MOTILITY_RI\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_RI\").val()); ++index) {\n                  $(\"#MOTILITY_RI_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_LS\").value = parseInt($(\"#MOTILITY_LS\").val());\n                  if ($(\"#MOTILITY_LS\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_LS\").val()); ++index) {\n                  $(\"#MOTILITY_LS_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_LI\").value = parseInt($(\"#MOTILITY_LI\").val());\n                  if ($(\"#MOTILITY_LI\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_LI\").val()); ++index) {\n                  $(\"#MOTILITY_LI_\"+index).html(hash_tag);\n                  }\n                  }\n\n                  $(\"#MOTILITY_RRSO\").value = parseInt($(\"#MOTILITY_RRSO\").val());\n                  if ($(\"#MOTILITY_RRSO\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_RRSO\").val()); ++index) {\n                  $(\"#MOTILITY_RRSO_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_RRIO\").value = parseInt($(\"#MOTILITY_RRIO\").val());\n                  if ($(\"#MOTILITY_RRIO\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_RRIO\").val()); ++index) {\n                  $(\"#MOTILITY_RRIO_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_RLIO\").value = parseInt($(\"#MOTILITY_RLIO\").val());\n                  if ($(\"#MOTILITY_RLIO\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_RLIO\").val()); ++index) {\n                  $(\"#MOTILITY_RLIO_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_RLSO\").value = parseInt($(\"#MOTILITY_RLSO\").val());\n                  if ($(\"#MOTILITY_RLSO\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_RLSO\").val()); ++index) {\n                  $(\"#MOTILITY_RLSO_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_LRSO\").value = parseInt($(\"#MOTILITY_LRSO\").val());\n                  if ($(\"#MOTILITY_LRSO\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_LRSO\").val()); ++index) {\n                  $(\"#MOTILITY_LRSO_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_LRIO\").value = parseInt($(\"#MOTILITY_LRIO\").val());\n                  if ($(\"#MOTILITY_LRIO\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_LRIO\").val()); ++index) {\n                  $(\"#MOTILITY_LRIO_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_LLSO\").value = parseInt($(\"#MOTILITY_LLSO\").val());\n                  if ($(\"#MOTILITY_LLSO\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_LLSO\").val()); ++index) {\n                  $(\"#MOTILITY_LLSO_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_LLIO\").value = parseInt($(\"#MOTILITY_LLIO\").val());\n                  if ($(\"#MOTILITY_LLIO\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_LLIO\").val()); ++index) {\n                  $(\"#MOTILITY_LLIO_\"+index).html(hash_tag);\n                  }\n                  }\n\n                  var hash_tag = '<i class=\"fa fa-minus rotate-left\"></i>';\n                  $(\"#MOTILITY_LR\").value = parseInt($(\"#MOTILITY_LR\").val());\n                  if ($(\"#MOTILITY_LR\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_LR\").val()); ++index) {\n                  $(\"#MOTILITY_LR_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_LL\").value = parseInt($(\"#MOTILITY_LL\").val());\n                  if ($(\"#MOTILITY_LL\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_LL\").val()); ++index) {\n                  $(\"#MOTILITY_LL_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_RR\").value = parseInt($(\"#MOTILITY_RR\").val());\n                  if ($(\"#MOTILITY_RR\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_RR\").val()); ++index) {\n                  $(\"#MOTILITY_RR_\"+index).html(hash_tag);\n                  }\n                  }\n                  $(\"#MOTILITY_RL\").value = parseInt($(\"#MOTILITY_RL\").val());\n                  if ($(\"#MOTILITY_RL\").val() > '0') {\n                  $(\"#MOTILITYNORMAL\").removeAttr('checked');\n                  for (index =1; index <= ($(\"#MOTILITY_RL\").val()); ++index) {\n                  $(\"#MOTILITY_RL_\"+index).html(hash_tag);\n                  }\n                  }\n\n                  $(\".chronic_HPI,.count_HPI\").on(\"blur\", function() {\n                                                    check_exam_detail();\n                                                    });\n                  // Dilation status\n                  $(\"#DIL_RISKS\").on('change', function(o) {\n                                         ($(this).is(':checked')) ? ($(\".DIL_RISKS\").removeClass(\"nodisplay\")) : ($(\".DIL_RISKS\").addClass(\"nodisplay\"));\n                                         check_exam_detail();\n                                         });\n                  $(\".dil_drug\").on('change', function(o) {\n                                        if ($(this).is(':checked')) {\n                                            $(\"#DIL_RISKS\").prop(\"checked\",\"checked\");\n                                            check_exam_detail();\n                                            var timestamp = getTimeStamp();\n                                            $(\"#DIL_MEDS\").val(timestamp);\n                                        }});\n\n                  //neurosens exam = stereopsis + strab||NPC||NPA||etc\n                  $(\".neurosens,.neurosens2\").on(\"blur\", function() {\n                                                   check_CPT_92060();\n                                                   });\n\n                  //  functions to improve flow of refraction input\n                  $(\"input[name$='PRISM'],input[class^='prism']\").on(\"blur\", function() {\n                                                                       //make it all caps\n                                                                       var str = $(this).val();\n                                                                       str = str.toUpperCase();\n                                                                       $(this).val(str);\n                                                                       });\n                  $('input[class^=\"sphere\"],input[name$=\"SPH\"]').on(\"blur\", function() {\n                                                                      var mid = $(this).val();\n                                                                      if (mid.match(/PLANO/i)) {\n                                                                      $(this).val('PLANO');\n                                                                      return;\n                                                                      }\n                                                                      if (mid.match(/^[\\+\\-]?\\d{1}$/)) {\n                                                                      mid = mid+\".00\";\n                                                                      }\n                                                                      if (mid.match(/\\.[27]$/)) {\n                                                                      mid = mid + '5';\n                                                                      }\n                                                                      if (mid.match(/\\.\\d$/)) {\n                                                                      mid = mid + '0';\n                                                                      }\n                                                                      //if near is +2. make it +2.00\n                                                                      if (mid.match(/\\.$/)) {\n                                                                      mid= mid + '00';\n                                                                      }\n                                                                      if ((!mid.match(/\\./))&&(mid.match(00|25|50|75))) {\n                                                                      var front = mid.match(/(\\d{0,2})(00|25|50|75)/)[1];\n                                                                      var back = mid.match(/(\\d{0,2})(00|25|50|75)/)[2];\n                                                                      if (front =='') front ='0';\n                                                                      mid = front + \".\" + back;\n                                                                      }\n                                                                      if (!mid.match(/\\./)) {\n                                                                      var front = mid.match(/([\\+\\-]?\\d{0,2})(\\d{2})/)[1];\n                                                                      var back  = mid.match(/(\\d{0,2})(\\d{2})/)[2];\n                                                                      if (front =='') front ='0';\n                                                                      if (front =='-') front ='-0';\n                                                                      mid = front + \".\" + back;\n                                                                      }\n                                                                      if (!mid.match(/^(\\+|\\-){1}/)) {\n                                                                      mid = \"+\" + mid;\n                                                                      }\n                                                                      $(this).val(mid);\n                                                                      });\n\n                  $(\"input[class^='presbyopia'],input[name$='ADD'],#ODADD_1,#ODADD_2,#OSADD_1,#OSADD_2\").on(\"blur\", function() {\n                                                                                                              var add = $(this).val();\n                                                                                                              add = add.replace(/=/g,\"+\");\n                                                                                                              //if add is one digit, eg. 2, make it +2.00\n                                                                                                              if (add.match(/^\\d{1}$/)) {\n                                                                                                              add = \"+\"+add+\".00\";\n                                                                                                              }\n                                                                                                              //if add is '+'one digit, eg. +2, make it +2.00\n                                                                                                              if (add.match(/^\\+\\d{1}$/)) {\n                                                                                                              add = add+\".00\";\n                                                                                                              }\n                                                                                                              //if add is 2.5 or 2.0 make it 2.50 or 2.00\n                                                                                                              if (add.match(/\\.[05]$/)) {\n                                                                                                              add = add + '0';\n                                                                                                              }\n                                                                                                              //if add is 2.2 or 2.7 make it 2.25 or 2.75\n                                                                                                              if (add.match(/\\.[27]$/)) {\n                                                                                                              add = add + '5';\n                                                                                                              }\n                                                                                                              //if add is +2. make it +2.00\n                                                                                                              if (add.match(/\\.$/)) {\n                                                                                                              add = add + '00';\n                                                                                                              }\n                                                                                                              if ((!add.match(/\\./))&&(add.match(/(0|25|50|75)$/))) {\n                                                                                                              var front = add.match(/([\\+]?\\d{0,1})(00|25|50|75)/)[1];\n                                                                                                              var back  = add.match(/([\\+]?\\d{0,1})(00|25|50|75)/)[2];\n                                                                                                              if (front =='') front ='0';\n                                                                                                              add = front + \".\" + back;\n                                                                                                              }\n                                                                                                              if (!add.match(/^(\\+)/) && (add.length >  0)) {\n                                                                                                              add= \"+\" + add;\n                                                                                                              }\n                                                                                                              $(this).val(add);\n                                                                                                              if (this.id==\"ODADD_1\") $('#OSADD_1').val(add);\n                                                                                                              if (this.id==\"ODMIDADD_1\") $('#OSMIDADD_1').val(add);\n                                                                                                              if (this.id==\"ODADD_2\") $('#OSADD_2').val(add);\n                                                                                                              if (this.id==\"ODMIDADD_2\") $('#OSMIDADD_2').val(add);\n                                                                                                              if (this.id==\"ODADD_3\") $('#OSADD_3').val(add);\n                                                                                                              if (this.id==\"ODMIDADD_3\") $('#OSMIDADD_3').val(add);\n                                                                                                              if (this.id==\"ODADD_4\") $('#OSADD_4').val(add);\n                                                                                                              if (this.id==\"ODMIDADD_4\") $('#OSMIDADD_4').val(add);\n                                                                                                              if (this.id==\"ODADD_5\") $('#OSADD_5').val(add);\n                                                                                                              if (this.id==\"ODMIDADD_5\") $('#OSMIDADD_5').val(add);\n                                                                                                              if (this.id==\"MRODADD\") $('#MROSADD').val(add);\n                                                                                                              if (this.id==\"ARODADD\") $('#AROSADD').val(add);\n                                                                                                              if (this.id==\"CTLODADD\") $('#CTLOSADD').val(add);\n                                                                                                              });\n\n                  $(\"input[class^='axis'],input[name$='AXIS']\").on(\"blur\", function() {\n                                                                     // Make this a 3 digit leading zeros number.\n                                                                     // we are not translating text to numbers, just numbers to\n                                                                     // a 3 digit format with leading zeroes as needed.\n                                                                     // assume the end user KNOWS there are only numbers presented and\n                                                                     // more than 3 digits is a mistake...\n                                                                     // (although this may change with topography)\n                                                                     var axis = $(this).val();\n                                                                     if (this.name.match(/K2AXIS/)) {\n                                                                         var group = this.name.replace(\"AXIS\", \"\");\n                                                                     } else {\n                                                                         var group = this.name.replace(\"AXIS\", \"CYL\");\n                                                                     }\n                                                                     var cyl = $(\"#\"+group).val();\n                                                                     if ( (cyl > '') && (cyl != 'SPH') ) {\n                                                                     if (!axis.match(/\\d\\d\\d/)) {\n                                                                     if (!axis.match(/\\d\\d/)) {\n                                                                     if (!axis.match(/\\d/)) {\n                                                                     axis = '0';\n                                                                     }\n                                                                     axis = '0' + axis;\n                                                                     }\n                                                                     axis = '0' + axis;\n                                                                     }\n                                                                     } else {\n                                                                     axis = '';\n                                                                     }\n                                                                     //we can utilize a phoropter dial feature, we can start them at their age appropriate with/against the rule value.\n                                                                     //requires touch screen. requires complete touch interface development. Exists in refraction lanes. Would\n                                                                     //be nice to tie them all together.  Would require manufacturers to publish their APIs to communicate with\n                                                                     //the devices.\n                                                                     $(this).val(axis);\n                                                                     });\n                  $(\"input[class^='cylinder'],input[name$='CYL']\").on(\"blur\", function() {\n                                                                        var mid = $(this).val();\n                                                                        var group = this.name.replace(\"CYL\", \"SPH\");;\n                                                                        var sphere = $(\"#\"+group).val();\n                                                                        if (((mid.length == 0) && (sphere.length >  0))||(mid.match(/sph/i))) {\n                                                                        $(this).val('SPH');\n                                                                        if (sphere.match(/plano/i)) $(this).val('');\n                                                                        var axis = this.name.replace(\"CYL\", \"AXIS\");\n                                                                        $(\"#\"+axis).val('');\n                                                                        submit_form($(this));\n                                                                        return;\n                                                                        } else if (sphere.length >  0) {\n                                                                        if (mid.match(/^[\\+\\-]?\\d{1}$/)) {\n                                                                        mid = mid+\".00\";\n                                                                        }\n                                                                        if (mid.match(/^(\\d)(\\d)$/)) {\n                                                                        mid = mid[0] + '.' +mid[1];\n                                                                        }\n\n                                                                        //if mid is 2.5 or 2.0 make it 2.50 or 2.00\n                                                                        if (mid.match(/\\.[05]$/)) {\n                                                                        mid = mid + '0';\n                                                                        }\n                                                                        //if mid is 2.2 or 2.7 make it 2.25 or 2.75\n                                                                        if (mid.match(/\\.[27]$/)) {\n                                                                        mid = mid + '5';\n                                                                        }\n                                                                        //if mid is +2. make it +2.00\n                                                                        if (mid.match(/\\.$/)) {\n                                                                        mid = mid + '00';\n                                                                        }\n                                                                        if (mid.match(/([\\+\\-]?\\d{0,2})\\.?(00|25|50|75)/)) {\n                                                                        var front = mid.match(/([\\+\\-]?\\d{0,2})\\.?(00|25|50|75)/)[1];\n                                                                        var back  = mid.match(/([\\+\\-]?\\d{0,2})\\.?(00|25|50|75)/)[2];\n                                                                        if (front =='') front ='0';\n                                                                        mid = front + \".\" + back;\n                                                                        }\n                                                                        if (!$('#PREFS_CYL').val()) {\n                                                                        $('#PREFS_CYL').val('+');\n                                                                        update_PREFS();\n                                                                        }\n                                                                        if (!mid.match(/^(\\+|\\-){1}/) && (sphere.length >  0)) {\n                                                                        //no +/- sign at the start of the field.\n                                                                        //ok so there is a preference set\n                                                                        //Since it doesn't start with + or - then give it the preference value\n                                                                        mid = $('#PREFS_CYL').val() + mid;\n                                                                        } else if (mid.match(/^(\\+|\\-){1}/)) {\n                                                                        pref = mid.match(/^(\\+|\\-){1}/)[0];\n                                                                        //so they used a value + or - at the start of the field.\n                                                                        //The only reason to work on this is to change to cylinder preference\n                                                                        if ($('#PREFS_CYL').val() != pref){\n                                                                        //and that is what they are doing here\n                                                                        $('#PREFS_CYL').val(pref);\n                                                                        update_PREFS();\n                                                                        }\n                                                                        }\n                                                                        $(this).val(mid);\n                                                                        }\n                                                                        });\n                  //bootstrap menu functions\n                  $(\"[class='dropdown-toggle']\").hover(function(){\n                                                       $(\"[class='dropdown-toggle']\").parent().removeClass('open');\n                                                       var menuitem = this.id.match(/(.*)/)[1];\n                                                       //if the menu is active through a prior click, show it\n                                                       // Have to override Bootstrap then\n                                                       if ($(\"#menustate\").val() !=\"1\") { //menu not active -> ignore\n                                                       $(\"#\"+menuitem).css(\"background-color\", \"#C9DBF2\");\n                                                       $(\"#\"+menuitem).css(\"color\",\"#000\"); /*#262626;*/\n                                                       } else { //menu is active -> respond\n                                                       $(\"#\"+menuitem).css(\"background-color\", \"#1C5ECF\");\n                                                       $(\"#\"+menuitem).css(\"color\",\"#fff\"); /*#262626;*/\n                                                       $(\"#\"+menuitem).css(\"text-decoration\",\"none\");\n                                                       $(\"#\"+menuitem).parent().addClass('open');\n                                                       }\n                                                       },function() {\n                                                       var menuitem = this.id.match(/(.*)/)[1];\n                                                       $(\"#\"+menuitem).css(\"color\",\"#000\"); /*#262626;*/\n                                                       $(\"#\"+menuitem).css(\"background-color\", \"#C9DBF2\");\n                                                       }\n                                                       );\n                  $(\"[class='dropdown-toggle']\").on('click', function() {\n                                                       $(\"#menustate\").val('1');\n                                                       var menuitem = this.id.match(/(.*)/)[1];\n                                                       $(\"#\"+menuitem).css(\"background-color\", \"#1C5ECF\");\n                                                       $(\"#\"+menuitem).css(\"color\",\"#fff\"); /*#262626;*/\n                                                       $(\"#\"+menuitem).css(\"text-decoration\",\"none\");\n                                                       });\n                  $(\"#right-panel-link, #close-panel-bt,#right-panel-link_2\").on('click', function() {\n                                                                                    if ($(\"#PREFS_PANEL_RIGHT\").val() =='1') {\n                                                                                    $(\"#PREFS_PANEL_RIGHT\").val('0');\n                                                                                    } else {\n                                                                                    $(\"#PREFS_PANEL_RIGHT\").val('1');\n                                                                                    }\n                                                                                    update_PREFS();\n                                                                                    });\n                  $(\"[name^='menu_']\").on('click', function() {\n                                             $(\"[name^='menu_']\").removeClass('active');\n                                             var menuitem = this.id.match(/menu_(.*)/)[1];\n                                             $(this).addClass('active');\n                                             $(\"#menustate\").val('1');\n                                             if (menuitem =='left_tabs') {\n                                                var tabs_left = $(\"#setting_tabs_left\").val();\n                                                if (tabs_left == '1') {\n                                                    $(\"#tabs_left\").addClass('nodisplay');\n                                                    $(\"#setting_tabs_left\").val('0');\n                                                } else {\n                                                    $(\"#tabs_left\").removeClass('nodisplay');\n                                                    $(\"#setting_tabs_left\").val('1');\n                                                }\n                                                update_PREFS();\n                                             } else {\n                                                 $(\"#BUTTON_TAB_\"+menuitem).trigger('click');\n                                                 $(\"#tabs-left-\"+menuitem).trigger('click');\n                                                 menu_select(menuitem);\n                                            }\n                    });\n\n                  // set display functions for Draw panel appearance\n                  // for each DRAW area, if the value AREA_DRAW = 1, show it.\n                  var zones = [\"PMH\",\"HPI\",\"EXT\",\"ANTSEG\",\"POSTSEG\",\"NEURO\",\"IMPPLAN\"];\n                  for (index = '0'; index < zones.length; ++index) {\n                    if ($(\"#PREFS_\"+zones[index]+\"_RIGHT\").val() =='DRAW') {\n                        show_DRAW_section(zones[index]);\n                    } else if ($(\"#PREFS_\"+zones[index]+\"_RIGHT\").val() =='QP') {\n                        show_QP_section(zones[index],'1');\n                    }\n                  }\n                  $(\"body\").on(\"click\",\"[name$='_text_view']\" , function() {\n                               var header = this.id.match(/(.*)_text_view$/)[1];\n                               $(\"#\"+header+\"_text_list\").toggleClass('wide_textarea');\n                               $(\"#\"+header+\"_text_list\").toggleClass('narrow_textarea');\n                               $(this).toggleClass('fa-plus-square-o');\n                               $(this).toggleClass('fa-minus-square-o');\n                               if (header != /PRIOR/) {\n                               var imagine = $(\"#PREFS_\"+header+\"_VIEW\").val();\n                               imagine ^= true;\n                               $(\"#PREFS_\"+header+\"_VIEW\").val(imagine);\n                               update_PREFS();\n                              }\n                               return false;\n                               });\n                  $(\"body\").on(\"change\", \"select\", function(e){\n                            if (this.name.match(/PRIOR_(.*)/)) {\n                                var new_section = this.name.match(/PRIOR_(.*)/);\n                                var newValue = this.value;\n                                if (new_section[1] =='') return;\n                                if (new_section[1].match(/_canvas/)) {\n                                    goto_section = new_section[1].match(/_canvas/)[1];\n                                    show_PRIOR_CANVAS_section(goto_section,newValue);\n                                    return;\n                                }\n\n                                if (new_section[1] == /\\_/){\n                                    return;\n                                }\n                                var newValue = this.value;\n                                if (newValue == $(\"#form_id\").val()) {\n                                   if (new_section[1] ==\"ALL\") {\n                                     //click updates prefs too\n                                     $('#EXAM_QP').trigger(\"click\");\n\n                                   } else {\n                                      $('#BUTTON_QP_'+new_section[1]).trigger(\"click\").trigger(\"click\");//double click intended RM\n                                   }\n                                 $(\"#LayerTechnical_sections_1\").css(\"clear\",\"both\");\n                                 return;\n                                }\n                                //now go get the prior page via ajax\n                                $(\"#PRIORS_\"+ new_section[1] +\"_left_text\").removeClass('nodisplay');\n                                $(\"#DRAWS_\" + new_section[1] + \"_right\").addClass('nodisplay');\n                                $(\"#QP_\" + new_section[1]).addClass('nodisplay');\n\n                                if (new_section[1] ==\"ALL\") {\n                                    show_PRIORS();\n                                    show_PRIORS_section(\"ALL\",newValue);\n                                    show_PRIORS_section(\"EXT\",newValue);\n                                    show_PRIORS_section(\"ANTSEG\",newValue);\n                                    show_PRIORS_section(\"RETINA\",newValue);\n                                    show_PRIORS_section(\"NEURO\",newValue);\n                                    show_PRIORS_section(\"IMPPLAN\",newValue);\n                                    scrollTo(\"EXT_left\");\n                                } else {\n                                    show_PRIORS_section(new_section[1],newValue);\n                                }\n                            }\n                        });\n\n\n$(\"body\").on(\"click\",\"[name^='old_canvas']\", function() {\n//get zone\n//het h.step from SELECT_CANVAS_\" . attr($zone) . \"\n    var h = $(this).data();\n    var target = h.target;\n    var direction = h.direction;\n    var select = document.getElementById(target);\n    var len = select.getElementsByTagName('option').length-1;\n    var t = $(\"#\"+target).data();\n    var index=t.step;\n    if (direction==\"oldest\") {\n        index=len;\n        next = select.getElementsByTagName('option')[index];\n        if(typeof next !== undefined) {\n            select.options[index].selected = 'selected';\n        }\n    } else if (direction==\"older\") {\n        index++;\n        next = select.getElementsByTagName('option')[index];\n        if(typeof next !== undefined && index <= len) {\n            select.options[index].selected = 'selected';\n        } else {\n            index=len;\n        }\n    } else if (direction==\"newer\") {\n        index--;\n        next = select.getElementsByTagName('option')[index];\n        if (typeof next !== undefined && index >= 0) {\n            select.options[index].selected = 'selected';\n        } else {\n            index = 0;\n            select.options[index].selected = 'selected';\n        }\n    } else if (direction==\"newest\") {\n        index='0';\n        next = select.getElementsByTagName('option')[index];\n        if(typeof next !== undefined) {\n            select.options[index].selected = 'selected';\n        }\n    }\n    t.step=index;\n    $(\"#\"+target).trigger('change');\n});\n\n\n                  $(\"body\").on(\"click\",\"[id^='Close_PRIORS_']\", function() {\n                               var new_section = this.id.match(/Close_PRIORS_(.*)$/)[1];\n                               $(\"#PRIORS_\"+ new_section +\"_left_text\").addClass('nodisplay');\n                               $(\"#QP_\" + new_section).removeClass('nodisplay');\n                               });\n                  $(\"#pupils,#vision_tab,[name='CTL'],[name^='more_'],#ACTTRIGGER\").on(\"mouseover\", function() {\n                                                                                              $(this).toggleClass('buttonRefraction_selected').toggleClass('underline').css( 'cursor', 'pointer' );\n                                                                                              });\n                  $(\"#pupils,#vision_tab,[name='CTL']\").on(\"mouseout\", function() {\n                                                                 $(this).toggleClass('buttonRefraction_selected').toggleClass('underline');\n                                                                 });\n                  $(\"#pupils\").on(\"click\", function(){\n                                     if ($(\"#dim_pupils_panel\").hasClass(\"nodisplay\")) {\n                                        $(\"#dim_pupils_panel\").removeClass('nodisplay');\n                                      } else {\n                                        $(\"#dim_pupils_panel\").fadeToggle();\n                                      }\n                                     });\n                  $(\"#vision_tab\").on(\"click\", function(){\n                                         $(\"#REFRACTION_sections\").toggleClass('nodisplay');\n                                         ($(\"#PREFS_VA\").val() =='1') ? ($(\"#PREFS_VA\").val('0')) : $(\"#PREFS_VA\").val('1');\n                                         });\n                  //set wearing to single vision or bifocal? Bifocal\n                  $(\".WNEAR\").removeClass('nodisplay');\n                  $(\"#WNEARODAXIS\").addClass('nodisplay');\n                  $(\"#WNEARODCYL\").addClass('nodisplay');\n                  $(\"#WNEARODPRISM\").addClass('nodisplay');\n                  $(\"#WNEAROSAXIS\").addClass('nodisplay');\n                  $(\"#WNEAROSCYL\").addClass('nodisplay');\n                  $(\"#WNEAROSPRISM\").addClass('nodisplay');\n                  $(\"#Single\").on(\"click\", function(){\n                                     $(\"#WNEARODAXIS\").addClass('nodisplay');\n                                     $(\"#WNEARODCYL\").addClass('nodisplay');\n                                     $(\"#WNEARODPRISM\").addClass('nodisplay');\n                                     $(\"#WODADD2\").addClass('nodisplay');\n                                     $(\"#WOSADD2\").addClass('nodisplay');\n                                     $(\"#WNEAROSAXIS\").addClass('nodisplay');\n                                     $(\"#WNEAROSCYL\").addClass('nodisplay');\n                                     $(\"#WNEAROSPRISM\").addClass('nodisplay');\n                                     $(\".WSPACER\").removeClass('nodisplay');\n                                     });\n                  $(\"#Bifocal\").on(\"click\", function(){\n                                      $(\".WSPACER\").addClass('nodisplay');\n                                      $(\".WNEAR\").removeClass('nodisplay');\n                                      $(\".WMid\").addClass('nodisplay');\n                                      $(\".WHIDECYL\").removeClass('nodisplay');\n                                      $(\"[name=RX]\").val([\"1\"]);\n                                      $(\"#WNEARODAXIS\").addClass('nodisplay');\n                                      $(\"#WNEARODCYL\").addClass('nodisplay');\n                                      $(\"#WNEARODPRISM\").addClass('nodisplay');\n                                      $(\"#WNEAROSAXIS\").addClass('nodisplay');\n                                      $(\"#WNEAROSCYL\").addClass('nodisplay');\n                                      $(\"#WNEAROSPRISM\").addClass('nodisplay');\n                                      $(\"#WODADD2\").removeClass('nodisplay');\n                                      $(\"#WOSADD2\").removeClass('nodisplay');\n                                      });\n                  $(\"#Trifocal\").on(\"click\", function(){\n                                       $(\".WSPACER\").addClass('nodisplay');\n                                       $(\".WNEAR\").removeClass('nodisplay');\n                                       $(\".WMid\").removeClass('nodisplay');\n                                       $(\".WHIDECYL\").addClass('nodisplay');\n                                       $(\"[name=RX]\").val([\"2\"]);\n                                       $(\"#WNEARODAXIS\").addClass('nodisplay');\n                                       $(\"#WNEARODCYL\").addClass('nodisplay');\n                                       $(\"#WNEARODPRISM\").addClass('nodisplay');\n                                       $(\"#WNEAROSAXIS\").addClass('nodisplay');\n                                       $(\"#WNEAROSCYL\").addClass('nodisplay');\n                                       $(\"#WNEAROSPRISM\").addClass('nodisplay');\n                                       $(\"#WODADD2\").removeClass('nodisplay');\n                                       $(\"#WOSADD2\").removeClass('nodisplay');\n                                       });\n                  $(\"#Progressive\").on(\"click\", function(){\n                                          $(\".WSPACER\").addClass('nodisplay');\n                                          $(\".WNEAR\").removeClass('nodisplay');\n                                          $(\".WMid\").addClass('nodisplay');\n                                          $(\".WHIDECYL\").removeClass('nodisplay');\n                                          $(\"[name=RX]\").val([\"3\"]);\n                                          $(\"#WNEARODAXIS\").addClass('nodisplay');\n                                          $(\"#WNEARODCYL\").addClass('nodisplay');\n                                          $(\"#WNEARODPRISM\").addClass('nodisplay');\n                                          $(\"#WNEAROSAXIS\").addClass('nodisplay');\n                                          $(\"#WNEAROSCYL\").addClass('nodisplay');\n                                          $(\"#WNEAROSPRISM\").addClass('nodisplay');\n                                          $(\"#WODADD2\").removeClass('nodisplay');\n                                          $(\"#WOSADD2\").removeClass('nodisplay');\n                                          });\n                  $(\"[name=W_width_display]\").on(\"click\", function() {\n                                                    if ($(\"#PREFS_W_width\").val() !=\"1\") {\n                                                    $(\"#PREFS_W_width\").val('1');\n                                                    //make each display W wide\n                                                    $(\"[name=currentRX]\").addClass('refraction_wide');\n                                                    $(\"[name=W_wide]\").removeClass('nodisplay');\n                                                    $(\"[name=W_wide2]\").removeClass('nodisplay');\n                                                    } else {\n                                                    $(\"#PREFS_W_width\").val('0');\n                                                    //make each display W narrow\n                                                    $(\"[name=currentRX]\").removeClass('refraction_wide');\n                                                    $(\"[name=W_wide]\").addClass('nodisplay');\n                                                    $(\"[name=W_wide2]\").addClass('nodisplay');\n                                                    }\n                                                    update_PREFS();\n\n                                                    });\n                  if ($(\"#PREFS_W_width\").val() == '1') {\n                    $(\"[name=W_wide]\").removeClass('nodisplay');\n                    $(\"[name=W_wide2]\").removeClass('nodisplay')\n                  } else {\n                    $(\"[name=W_wide]\").addClass('nodisplay');\n                    $(\"[name=W_wide2]\").addClass('nodisplay');\n                  }\n                  $(\"#Amsler-Normal\").on(\"change\", function() {\n                                             if ($(this).is(':checked')) {\n                                             var number1 = document.getElementById(\"AmslerOD\").src.match(/(Amsler_\\d)/)[1];\n                                             document.getElementById(\"AmslerOD\").src = document.getElementById(\"AmslerOD\").src.replace(number1,\"Amsler_0\");\n                                             var number2 = document.getElementById(\"AmslerOS\").src.match(/(Amsler_\\d)/)[1];\n                                             document.getElementById(\"AmslerOS\").src = document.getElementById(\"AmslerOS\").src.replace(number2,\"Amsler_0\");\n                                             $(\"#AMSLEROD\").val(\"0\");\n                                             $(\"#AMSLEROS\").val(\"0\");\n                                             $(\"#AmslerODvalue\").text(\"0\");\n                                             $(\"#AmslerOSvalue\").text(\"0\");\n                                             submit_form(\"eye_mag\");\n                                             return;\n                                             }\n                                             });\n                  $(\"#PUPIL_NORMAL\").on(\"change\", function() {\n                                            if ($(this).is(':checked')) {\n                                            $(\"#ODPUPILSIZE1\").val('3.0');\n                                            $(\"#OSPUPILSIZE1\").val('3.0');\n                                            $(\"#ODPUPILSIZE2\").val('2.0');\n                                            $(\"#OSPUPILSIZE2\").val('2.0');\n                                            $(\"#ODPUPILREACTIVITY\").val('+2');\n                                            $(\"#OSPUPILREACTIVITY\").val('+2');\n                                            $(\"#ODAPD\").val('0');\n                                            $(\"#OSAPD\").val('0');\n                                            submit_form(\"eye_mag\");\n                                            return;\n                                            }\n                                            });\n                  $(\"[name$='PUPILREACTIVITY']\").on(\"change\", function() {\n                                                        var react = $(this).val();\n                                                        if (react.match(/^\\d{1}$/)) {\n                                                        react = \"+\"+react;\n                                                        }\n                                                        $(this).val(react);\n                                                        });\n\n                  $(\"[name^='EXAM']\").on(\"mouseover\", function(){\n                                                $(this).toggleClass(\"borderShadow2\").css( 'cursor', 'pointer' );\n                                                });\n                  $(\"[name^='EXAM']\").on(\"mouseout\", function(){\n                                               $(this).toggleClass(\"borderShadow2\");\n                                               });\n                  $(\"#AmslerOD, #AmslerOS\").on(\"click\", function() {\n                                                  if ($('#chart_status').val() !=\"on\") return;\n                                                  var number1 = this.src.match(/Amsler_(\\d)/)[1];\n                                                  var number2 = +number1 +1;\n                                                  this.src = this.src.replace('Amsler_'+number1,'Amsler_'+number2);\n                                                  this.src = this.src.replace('Amsler_6','Amsler_0');\n                                                  $(\"#Amsler-Normal\").removeAttr('checked');\n                                                  var number3 = this.src.match(/Amsler_(\\d)/)[1];\n                                                  this.html =  number3;\n                                                  if (number3 ==\"6\") {\n                                                  number3 = \"0\";\n                                                  }\n                                                  if ($(this).attr(\"id\")==\"AmslerOD\") {\n                                                  $(\"#AmslerODvalue\").text(number3);\n                                                  $('#AMSLEROD').val(number3);\n                                                  } else {\n                                                  $('#AMSLEROS').val(number3);\n                                                  $(\"#AmslerOSvalue\").text(number3);\n                                                  }\n                                                  var title = \"#\"+$(this).attr(\"id\")+\"_tag\";\n                                                  });\n\n                  $(\"#AmslerOD, #AmslerOS\").on(\"mouseout\", function() {\n                                                     submit_form(\"eye_mag\");\n                                                     });\n                  $(\"[name^='ODVF'],[name^='OSVF']\").on(\"click\", function() {\n                                                           if ($(this).is(':checked') == true) {\n                                                           $(\"#FieldsNormal\").prop('checked', false);\n                                                           $(this).val('1');\n                                                           }else{\n                                                           $(this).val('0');\n                                                           $(this).prop('checked', false);\n                                                           }\n                                                           submit_form(\"eye_mag\");\n                                                           });\n                  $(\"#FieldsNormal\").on(\"click\", function() {\n                                           if ($(this).is(':checked')) {\n                                           $(\"#ODVF1\").removeAttr('checked');\n                                           $(\"#ODVF2\").removeAttr('checked');\n                                           $(\"#ODVF3\").removeAttr('checked');\n                                           $(\"#ODVF4\").removeAttr('checked');\n                                           $(\"#OSVF1\").removeAttr('checked');\n                                           $(\"#OSVF2\").removeAttr('checked');\n                                           $(\"#OSVF3\").removeAttr('checked');\n                                           $(\"#OSVF4\").removeAttr('checked');\n                                           }\n                                           });\n                  $(\"[id^='EXT_prefix']\").on(\"change\", function() {\n                                                 var newValue =$('#EXT_prefix').val();\n                                                 newValue = newValue.replace('+', '');\n                                                 if (newValue ==\"off\") {$(this).val('');}\n                                                 if (newValue ==\"clear\") {\n                                                 if (confirm('\\tSelect OK to clear all the External Exam values\\t\\n\\t or CANCEL to continue.\\t')) {\n                                                 $(this).val('');\n                                                 $(\".EXT\").val('');\n                                                 }\n                                                 } else {\n                                                 $(\"[name^='EXT_prefix_']\").removeClass('eye_button_selected');\n                                                 $(\"#EXT_prefix_\"+ newValue).addClass(\"eye_button_selected\");\n                                                 }\n                                                 });\n                  $(\"#ANTSEG_prefix\").on(\"change\", function() {\n                                             var newValue = $(this).val().replace('+', '');\n                                             if ($(this).value ==\"off\") {$(this).val('');}\n                                             if (newValue ==\"clear\") {\n                                             if (confirm('\\tSelect OK to clear all the Anterior Segment Exam values\\t\\n\\t or CANCEL to continue.\\t')) {\n                                             $(this).val('');\n                                             $(\".ANTSEG\").val('');\n                                             }\n                                             } else {\n                                             $(\"[name^='ANTSEG_prefix_']\").removeClass('eye_button_selected');\n                                             $(\"#ANTSEG_prefix_\"+ newValue).addClass(\"eye_button_selected\");\n                                             }\n                                             });\n                  $(\"#RETINA_prefix\").on(\"change\", function() {\n                                             var newValue = $(\"#RETINA_prefix\").val().replace('+', '');\n                                             if ($(this).value ==\"off\") {$(this).val('');}\n                                             if (newValue ==\"clear\") {\n                                             if (confirm('\\tSelect OK to clear all the Retina Exam values\\t\\n\\t or CANCEL to continue.\\t')) {\n                                             $(this).val('');\n                                             $(\".RETINA\").val('');\n                                             }\n                                             } else {\n                                             $(\"[name^='RETINA_prefix_']\").removeClass('eye_button_selected');\n                                             $(\"#RETINA_prefix_\"+ newValue).addClass(\"eye_button_selected\");\n                                             }\n                                             });\n                  $(\"#NEURO_ACT_zone\").on(\"change\", function() {\n                                              var newValue = $(this).val();\n                                              $(\"[name^='NEURO_ACT_zone']\").removeClass('eye_button_selected');\n                                              $(\"#NEURO_ACT_zone_\"+ newValue).addClass(\"eye_button_selected\");\n                                              $(\"#PREFS_ACT_SHOW\").val(newValue);\n                                              update_PREFS;\n                                              $(\"#ACT_tab_\"+newValue).trigger('click');\n                                              });\n                  $(\"#NEURO_side\").on(\"change\", function() {\n                                          var newValue = $(this).val();\n                                          $(\"[name^='NEURO_side']\").removeClass('eye_button_selected');\n                                          $(\"#NEURO_side_\"+ newValue).addClass(\"eye_button_selected\");\n                                          });\n                  $('.ACT').on('focus', function() {\n                                  var id = this.id.match(/ACT(\\d*)/);\n                                  $('#NEURO_field').val(''+id[1]).trigger('change');\n                                  });\n                  $(\"#NEURO_field\").on(\"change\", function() {\n                                           var newValue = $(this).val();\n                                           $(\"[name^='NEURO_field']\").removeClass('eye_button_selected');\n                                           $(\"#NEURO_field_\"+ newValue).addClass(\"eye_button_selected\");\n                                           $('.ACT').each(function(i){\n                                                          var color = $(this).css('background-color');\n                                                          if ((color == 'rgb(255, 255, 153)')) {// =='blue' <- IE hack\n                                                          $(this).css(\"background-color\",\"red\");\n                                                          }\n                                                          });\n                                           //change to highlight field in zone entry is for\n                                           var zone = $(\"#NEURO_ACT_zone\").val();\n                                           $(\"#ACT\"+newValue+zone).css(\"background-color\",\"yellow\");\n                                           });\n                  $(\"[name^='NEURO_ACT_strab']\").on(\"click\", function() {\n                                                       var newValue = $(this).val();\n                                                       $(\"[name^='NEURO_ACT_strab']\").removeClass('eye_button_selected');\n                                                       $(this).addClass(\"eye_button_selected\");\n                                                       });\n                  $(\"#NEURO_value\").on(\"change\", function() {\n                                           var newValue = $(this).val();\n                                           $(\"[name^='NEURO_value']\").removeClass('eye_button_selected');\n                                           $(\"#NEURO_value_\"+ newValue).addClass(\"eye_button_selected\");\n                                           if (newValue == \"ortho\") {\n                                           $(\"#NEURO_ACT_strab\").val('');\n                                           $(\"[name^='NEURO_ACT_strab']\").removeClass('eye_button_selected');\n                                           $(\"#NEURO_side\").val('');\n                                           $(\"[name^='NEURO_side']\").removeClass('eye_button_selected');\n                                           }\n                                           });\n                  $(\"#NEURO_RECORD\").on(\"mouseover\", function() {\n                                               $(\"#NEURO_RECORD\").addClass('borderShadow2').css( 'cursor', 'pointer' );\n                                               });\n                  $(\"#NEURO_RECORD\").on(\"mouseout\", function() {\n                                              $(\"#NEURO_RECORD\").removeClass('borderShadow2');\n                                              });\n                  $(\"#NEURO_RECORD\").on(\"mousedown\", function() {\n                                               $(\"#NEURO_RECORD\").removeClass('borderShadow2');\n                                               $(this).toggleClass('button_over');\n                                               });\n                  $(\"#NEURO_RECORD\").on(\"mouseup\", function() {\n                                             $(\"#NEURO_RECORD\").removeClass('borderShadow2');\n                                             $(this).toggleClass('button_over');\n                                             });\n                  $(\"#NEURO_RECORD\").on(\"click\", function() {\n                                           //find out the field we are updating\n                                           var number = $(\"#NEURO_field\").val();\n                                           var zone = $(\"#NEURO_ACT_zone\").val();\n                                           var strab = $(\"#NEURO_value\").val() + ' '+ $(\"#NEURO_side\").val() + $(\"#NEURO_ACT_strab\").val();\n\n                                           $(\"#ACT\"+number+zone).val(strab).css(\"background-color\",\"#F0F8FF\");\n\n\n                                           });\n\n                  $(\"#LayerMood,#LayerVision, #LayerTension, #LayerMotility, #LayerAmsler, #LayerFields, #LayerPupils,#dim_pupils_panel,#PRIORS_ALL_left_text\").on(\"mouseover\", function(){\n                                                                                                                                                                          $(this).addClass(\"borderShadow2\");\n                                                                                                                                                                          });\n                  $(\"#LayerMood,#LayerVision, #LayerTension, #LayerMotility, #LayerAmsler, #LayerFields, #LayerPupils,#dim_pupils_panel,#PRIORS_ALL_left_text\").on(\"mouseout\", function(){\n                                                                                                                                                                         $(this).removeClass(\"borderShadow2\");\n                                                                                                                                                                         });\n                  $(\"[id$='_lightswitch']\").on(\"click\", function() {\n                                                  var section = \"#\"+this.id.match(/(.*)_lightswitch$/)[1];\n                                                  var section2 = this.id.match(/(.*)_(.*)_lightswitch$/)[2];\n                                                  var elem = document.getElementById(\"PREFS_\"+section2);\n                                                  $(\"#PREFS_VA\").val('0');\n                                                  if (section2 != \"IOP\")$(\"#REFRACTION_sections\").removeClass('nodisplay');\n                                                  if (elem.value == \"0\" || elem.value =='') {\n                                                  elem.value='1';\n                                                  if (section2 ==\"ADDITIONAL\") {\n                                                  $(\"#LayerVision_ADDITIONAL\").removeClass('nodisplay');\n                                                  }\n                                                  if (section2 ==\"IOP\") {\n                                                  $(\"#LayerVision_IOP\").removeClass('nodisplay');\n                                                  //plot_IOPs();\n                                                  }\n                                                  $(section).removeClass('nodisplay');\n                                                  $(this).addClass(\"buttonRefraction_selected\");\n                                                  } else {\n                                                  elem.value='0';\n                                                  $(section).addClass('nodisplay');\n                                                  if (section2 ==\"VAX\") {\n                                                  $(\"#LayerVision_ADDITIONAL_VISION\").addClass('nodisplay');\n                                                  }\n                                                  if (section2 ==\"IOP\") {\n                                                  $(\"#LayerVision_IOP\").addClass('nodisplay');\n                                                  }\n                                                  $(this).removeClass(\"buttonRefraction_selected\");\n                                                  }\n                                                  $(this).css( 'cursor', 'pointer' );\n                                                  update_PREFS();\n                                                  });\n\n                  $('[id$=_lightswitch]').on(\"mouseover\", function() {\n                                                    $(this).addClass('buttonRefraction_selected').css( 'cursor', 'pointer' );\n\n                                                    var section = this.id.match(/(.*)_(.*)_lightswitch$/)[2];\n                                                    if (section == 'IOP') {\n                                                    $(\"#LayerTension\").addClass(\"borderShadow2\");\n                                                    } else {\n                                                    $(\"#LayerVision\").addClass(\"borderShadow2\");\n                                                    }\n                                                    });\n                  $('[id$=_lightswitch]').on('mouseout', function() {\n                                                   var section2 = this.id.match(/(.*)_(.*)_lightswitch$/)[2];\n                                                   var elem = document.getElementById(\"PREFS_\"+section2);\n\n                                                   if (elem.value != \"1\") {\n                                                   $(this).removeClass('buttonRefraction_selected');\n                                                   } else {\n                                                   $(this).addClass('buttonRefraction_selected');\n                                                   }                                                                });\n\n                  // let users enter \"=\" sign for \"+\" to cut down on keyboard movements (keyCode 61)\n                  // \"+\" == \"shift\" + \"=\" ==> now \"=\" == \"+\", \"j\" ==> \"J\" for Jaeger acuity (keyCode 74)\n                  // \"-\" is still == \"-\"\n                  $(\"input[class^='jaeger'],input[name$='VA'],input[name$='VA_copy'],input[name$='VA_copy_brd'],input[name$='SPH'],input[name$='CYL'],input[name$='REACTIVITY'],input[name$='APD']\").on('keyup', function(e) {\n                                                                                                                                                                                                        if (e.keyCode=='61' || e.keyCode=='74') {\n                                                                                                                                                                                                        now = $(this).val();\n                                                                                                                                                                                                        now = now.replace(/=/g,\"+\").replace(/^j/g,\"J\");\n                                                                                                                                                                                                        $(this).val(now);\n                                                                                                                                                                                                        }\n                                                                                                                                                                                                        });\n                  //useful to make all VA fields stay in sync\n                  $(\"input[name$='VA']\").on('change',function() {\n                                            var hereValue = $(this).val();\n                                            var newValue = $(this).attr('name').replace('VA', 'VA_copy');\n                                            $(\"#\" + newValue).val(hereValue).css(\"background-color\",\"#F0F8FF\");;\n                                            $(\"#\" + newValue + \"_brd\").val(hereValue).css(\"background-color\",\"#F0F8FF\");;\n                                            });\n                  $(\"input[class^='jaeger'],input[name$='VA_1']\").on('change',function() {\n                                                                     var hereValue = $(this).val();\n                                                                     hereValue = hereValue.replace(/=$/g,\"+\").replace(/^j/g,\"J\");\n                                                                     $(this).val(hereValue);\n                                                                     if (this.name.match(/_1$/)) {\n                                                                     var newValue = $(this).attr('name').replace('VA_1', 'VA_1_copy');\n                                                                     $(\"#\" + newValue).val(hereValue).css(\"background-color\",\"#F0F8FF\");;\n                                                                     $(\"#\" + newValue + \"_brd\").val(hereValue).css(\"background-color\",\"#F0F8FF\");\n                                                                     }\n                                                                     });\n\n                  $(\"input[name$='_copy']\").on(\"blur\", function() {\n                                                 var hereValue = $(this).val();\n                                                 var newValue = $(this).attr('name').replace('_copy', '');\n                                                 $(\"#\" + newValue).val(hereValue).css(\"background-color\",\"#F0F8FF\");;\n                                                 $(\"#\" + newValue + \"_copy_brd\").val(hereValue).css(\"background-color\",\"#F0F8FF\");;\n                                                 });\n                  $(\"input[name$='_copy_brd']\").on(\"change\", function() {\n                                                       var hereValue = $(this).val();\n                                                       var newValue = $(this).attr('name').replace('_copy_brd', '');\n                                                       $(\"#\" + newValue).val(hereValue).css(\"background-color\",\"#F0F8FF\");;\n                                                       $(\"#\" + newValue + \"_copy\").val(hereValue).css(\"background-color\",\"#F0F8FF\");;\n                                                       });\n                  $(\"[name^='more_']\").on(\"mouseout\", function() {\n                                                $(this).toggleClass('buttonRefraction_selected').toggleClass('underline');\n                                                });\n                  $(\"[name^='more_']\").on(\"click\", function() {\n                                             $(\"#Visions_A\").toggleClass('nodisplay');\n                                             $(\"#Visions_B\").toggleClass('nodisplay');\n                                             });\n                  $(\"#EXAM_defaults\").on(\"click\", function() {\n                                            if (!confirm('<?php echo xla(\"Replace all exam findings with Default values?  Are you sure?\"); ?>')) {\n                                                return;\n                                            }\n                                            <?php\n                                            // This query is specific to the provider.\n                                            $query  = \"select seq from list_options where option_id=?\";\n                                            $result = sqlStatement($query, array(\"Eye_defaults_$providerID\"));\n\n                                            $list = sqlFetchArray($result);\n                                            $SEQ = $list['seq'];\n                                            if (!$SEQ) {\n                                              // If there is no list for this provider, we create it here.\n                                              // This list is part of the idea to create a way to add Eye_Defaults_$providerID specific to the\n                                              // subspecialty of the doctor. ie. Eye_defaults_for_GENERAL (the only one that exists today)\n                                              // or Eye_defaults_for_CORNEA, RETINA, NEURO, PLASTICS, REFRACTIVE, PEDS, UVEITIS\n                                              // Let's see if the public likes the form itself before developing these subspecialty lists...\n\n                                                //Copy the Eye_Defaults_for_GENERAL to Eye_defaults_$providerID\n                                                $sql = \"SELECT * from list_options where list_id = 'Eye_Defaults_for_GENERAL'\";\n                                                $start = sqlStatement($sql);\n                                                $add_fields = array();\n                                                while ($val = sqlFetchArray($start)) {\n                                                    $parameters .= \"(?, ?, ?, ?, ?, ?),\";\n                                                    array_push($add_fields, \"Eye_defaults_\" . $providerID, $val['option_id'], $val['title'], $val['notes'], '1', $val['seq']);\n                                                }\n                                                $parameters = rtrim($parameters, \",\");\n                                                $query = \"SELECT max(seq) as maxseq FROM list_options WHERE list_id= 'lists'\";\n                                                $pres = sqlStatement($query);\n                                                $maxseq = sqlFetchArray($pres);\n\n                                                $seq = $maxseq['maxseq'];\n                                                $query = \"INSERT INTO `list_options`\n                                                    (`list_id`, `option_id`, `title`, `seq`, `is_default`, `option_value`, `mapping`, `notes`, `codes`) VALUES\n                                                    ('lists', ?, ?, ?, '1', '0', '', '', '')\";\n                                                $providerNAME = getProviderName($providerID);\n\n                                                sqlStatement($query, array(\"Eye_defaults_$providerID\",\"Eye Exam Defaults $providerNAME \",$seq));\n                                                $query = \"INSERT INTO `list_options` (`list_id`, `option_id`, `title`,`notes`,`activity`,`seq`) VALUES \" . $parameters;\n                                                sqlStatement($query, $add_fields);\n                                            }\n\n                                            $query = \"select * from list_options where list_id =? and activity='1' order by seq\";\n\n                                            $DEFAULT_data = sqlStatement($query, array(\"Eye_defaults_$providerID\"));\n                                            while ($row = sqlFetchArray($DEFAULT_data)) {\n                                            //$row['notes'] is the clinical zone (EXT,ANTSEG,RETINA,NEURO)\n                                            //$row['option_id'] is the field name\n                                            //$row['title'] is the default value to use for this provider\n                                                ${$row['notes']}[$row['option_id']] = $row['title']; //This builds each clinical section into its own array (used below)\n                                                echo '$(\"#' . $row['option_id'] . '\").val(\"' . $row['title'] . '\").css(\"background-color\",\"beige\");\n                                            ';\n                                            }\n                                            function startsWith($str, $needle)\n                                            {\n                                                return substr($str, 0, strlen($needle)) === $needle;\n                                            }\n                                            ?>\n                                            submit_form(\"eye_mag\");\n                                            });\n                  $(\"#EXT_defaults_R\").on(\"click\", function() {\n                        <?php\n                        foreach ($EXT as $item => $value) {\n                            if (startsWith($item, \"R\")) {\n                                echo '$(\"#' . $item . '\").val(\"' . $value . '\").css(\"background-color\",\"beige\");\n                                                                                ';\n                            }\n                        }\n                        ?>\n                        submit_form(\"eye_mag\");\n\n                        });\n                  $(\"#EXT_defaults_L\").on(\"click\", function() {\n                        <?php\n                        foreach ($EXT as $item => $value) {\n                            if (startsWith($item, \"L\")) {\n                                echo '$(\"#' . $item . '\").val(\"' . $value . '\").css(\"background-color\",\"beige\");\n                                                                                ';\n                            }\n                        }\n                        ?>\n                        submit_form(\"eye_mag\");\n                        });\n                  $(\"#EXT_defaults\").on(\"click\", function() {\n                                            $(\"#EXT_defaults_L\").trigger('click');\n                                            $(\"#EXT_defaults_R\").trigger('click');\n                                            submit_form(\"eye_mag\");\n                                           });\n\n                    $(\"#EXT_R_L\").on('click', function () {\n                        $(\"#LBROW\").val($(\"#RBROW\").val());\n                        $(\"#LUL\").val($(\"#RUL\").val());\n                        $(\"#LLL\").val($(\"#RLL\").val());\n                        $(\"#LMCT\").val($(\"#RMCT\").val());\n                        $(\"#LADNEXA\").val($(\"#RADNEXA\").val());\n                        submit_form(\"eye_mag\");\n                    });\n\n                    $(\"#EXT_L_R\").on('click', function () {\n                        $(\"#RBROW\").val($(\"#LBROW\").val());\n                        $(\"#RUL\").val($(\"#LUL\").val());\n                        $(\"#RLL\").val($(\"#LLL\").val());\n                        $(\"#RMCT\").val($(\"#LMCT\").val());\n                        $(\"#RADNEXA\").val($(\"#LADNEXA\").val());\n                        submit_form(\"eye_mag\");\n                    });\n                    $(\"#ANTSEG_defaults_OD\").on(\"click\", function() {\n                    <?php\n                    foreach ($ANTSEG as $item => $value) {\n                        if (startsWith($item, \"OD\")) {\n                            echo '$(\"#' . $item . '\").val(\"' . $value . '\").css(\"background-color\",\"beige\");\n                                                                                                    ';\n                        }\n                    }\n                    ?>\n                    submit_form(\"eye_mag\");\n\n                    });\n                    $(\"#ANTSEG_defaults_OS\").on(\"click\", function() {\n                            <?php\n                            foreach ($ANTSEG as $item => $value) {\n                                if (startsWith($item, \"OS\")) {\n                                    echo '$(\"#' . $item . '\").val(\"' . $value . '\").css(\"background-color\",\"beige\");\n                                                                                                            ';\n                                }\n                            }\n                            ?>\n                            submit_form(\"eye_mag\");\n                    });\n                    $(\"#ANTSEG_defaults\").on(\"click\", function() {\n                            $(\"#ANTSEG_defaults_OD\").trigger('click');\n                            $(\"#ANTSEG_defaults_OS\").trigger('click');\n                            submit_form(\"eye_mag\");\n                    });\n                    $(\"#ANTSEG_OD_OS\").on('click', function () {\n                        $(\"#OSCONJ\").val($(\"#ODCONJ\").val());\n                        $(\"#OSCORNEA\").val($(\"#ODCORNEA\").val());\n                        $(\"#OSAC\").val($(\"#ODAC\").val());\n                        $(\"#OSLENS\").val($(\"#ODLENS\").val());\n                        $(\"#OSIRIS\").val($(\"#ODIRIS\").val());\n                        submit_form(\"eye_mag\");\n                    });\n                    $(\"#ANTSEG_OS_OD\").on('click', function () {\n                        $(\"#ODCONJ\").val($(\"#OSCONJ\").val());\n                        $(\"#ODCORNEA\").val($(\"#OSCORNEA\").val());\n                        $(\"#ODAC\").val($(\"#OSAC\").val());\n                        $(\"#ODLENS\").val($(\"#OSLENS\").val());\n                        $(\"#ODIRIS\").val($(\"#OSIRIS\").val());\n                        submit_form(\"eye_mag\");\n                    });\n\n                    $(\"#RETINA_OD_OS\").on('click', function () {\n                        $(\"#OSDISC\").val($(\"#ODDISC\").val());\n                        $(\"#OSCUP\").val($(\"#ODCUP\").val());\n                        $(\"#OSMACULA\").val($(\"#ODMACULA\").val());\n                        $(\"#OSVESSELS\").val($(\"#ODVESSELS\").val());\n                        $(\"#OSVITREOUS\").val($(\"#ODVITREOUS\").val());\n                        $(\"#OSPERIPH\").val($(\"#ODPERIPH\").val());\n                        submit_form(\"eye_mag\");\n                    });\n\n                    $(\"#RETINA_OS_OD\").on('click', function () {\n                        $(\"#ODDISC\").val($(\"#OSDISC\").val());\n                        $(\"#ODCUP\").val($(\"#OSCUP\").val());\n                        $(\"#ODMACULA\").val($(\"#OSMACULA\").val());\n                        $(\"#ODVESSELS\").val($(\"#OSVESSELS\").val());\n                        $(\"#ODVITREOUS\").val($(\"#OSVITREOUS\").val());\n                        $(\"#ODPERIPH\").val($(\"#OSPERIPH\").val());\n                        submit_form(\"eye_mag\");\n                    });\n\n                    $(\"#clear_EXT_L\").on('click', function () {\n                        $(\"#LBROW\").val('');\n                        $(\"#LUL\").val('');\n                        $(\"#LLL\").val('');\n                        $(\"#LMCT\").val('');\n                        $(\"#LADNEXA\").val('');\n                        $(\"#LLF\").val('');\n                        $(\"#LMRD\").val('');\n                        submit_form(\"eye_mag\");\n                    });\n\n                    $(\"#clear_EXT_R\").on('click', function () {\n                        $(\"#RBROW\").val('');\n                        $(\"#RUL\").val('');\n                        $(\"#RLL\").val('');\n                        $(\"#RMCT\").val('');\n                        $(\"#RADNEXA\").val('');\n                        $(\"#RLF\").val('');\n                        $(\"#RMRD\").val('');\n                        submit_form(\"eye_mag\");\n                    });\n\n                    $(\"#RETINA_defaults_OD\").on(\"click\", function() {\n                            <?php\n                            foreach ($RETINA as $item => $value) {\n                                if (startsWith($item, \"OD\")) {\n                                    echo '$(\"#' . $item . '\").val(\"' . $value . '\").css(\"background-color\",\"beige\");\n                                                                                                            ';\n                                }\n                            }\n                            ?>\n                            submit_form(\"eye_mag\");\n\n                            });\n                    $(\"#RETINA_defaults_OS\").on(\"click\", function() {\n                        <?php\n                        foreach ($RETINA as $item => $value) {\n                            if (startsWith($item, \"OS\")) {\n                                echo '$(\"#' . $item . '\").val(\"' . $value . '\").css(\"background-color\",\"beige\");\n                                                                                                        ';\n                            }\n                        }\n                        ?>\n                        submit_form(\"eye_mag\");\n                        });\n                    $(\"#RETINA_defaults\").on(\"click\", function() {\n                        $(\"#RETINA_defaults_OD\").trigger('click');\n                        $(\"#RETINA_defaults_OS\").trigger('click');\n                        submit_form(\"eye_mag\");\n                    });\n\n\n                    $(\"#NEURO_defaults\").on(\"click\", function() {\n                                                <?php\n                                                foreach ($NEURO as $item => $value) {\n                                                    echo '$(\"#' . $item . '\").val(\"' . $value . '\").css(\"background-color\",\"beige\");\n                                             ';\n                                                }\n                                                ?>\n                                             submit_form(\"eye_mag\");\n                                             });\n\n                    $(\"#clear_EXT_R\").on('click', function() {\n                        $('.right.EXT').val('');\n                        submit_form(\"eye_mag\");\n                    });\n                    $(\"#clear_EXT_L\").on('click', function() {\n                        $('.left.EXT').val('');\n                        submit_form(\"eye_mag\");\n                    });\n                    $(\"#clear_ANTSEG_OD\").on('click', function() {\n                        $('.right.ANTSEG').val('');\n                        submit_form(\"eye_mag\");});\n                    $(\"#clear_ANTSEG_OS\").on('click', function() {\n                        $('.left.ANTSEG').val('');\n                        submit_form(\"eye_mag\");\n                    });\n                    $(\"#clear_RETINA_OD\").on('click', function() {\n                        $('.right.RETINA').val('');\n                        submit_form(\"eye_mag\");\n                    });\n                    $(\"#clear_RETINA_OS\").on('click', function() {\n                        $('.left.RETINA').val('');\n                        submit_form(\"eye_mag\");\n                    });\n\n                    $(\"[id^='cpf_']\").on('click', function() {\n                        var to_field  = this.id.match(/cpf_(.*)_(.*)/)[1];\n                        var from_field    = this.id.match(/cpf_(.*)_(.*)/)[2];\n                        $(\"#\"+to_field).val($(\"#\"+from_field).val());\n                        submit_form(\"eye_mag\");\n                    });\n                    $(\"#MOTILITYNORMAL\").on(\"click\", function() {\n                                             $(\"#MOTILITY_RS\").val('0');\n                                             $(\"#MOTILITY_RI\").val('0');\n                                             $(\"#MOTILITY_RR\").val('0');\n                                             $(\"#MOTILITY_RL\").val('0');\n                                             $(\"#MOTILITY_LS\").val('0');\n                                             $(\"#MOTILITY_LI\").val('0');\n                                             $(\"#MOTILITY_LR\").val('0');\n                                             $(\"#MOTILITY_LL\").val('0');\n\n                                             $(\"#MOTILITY_RRSO\").val('0');\n                                             $(\"#MOTILITY_RRIO\").val('0');\n                                             $(\"#MOTILITY_RLSO\").val('0');\n                                             $(\"#MOTILITY_RLIO\").val('0');\n                                             $(\"#MOTILITY_LRSO\").val('0');\n                                             $(\"#MOTILITY_LRIO\").val('0');\n                                             $(\"#MOTILITY_LLSO\").val('0');\n                                             $(\"#MOTILITY_LLIO\").val('0');\n\n                                             for (index = '0'; index < 5; ++index) {\n                                             $(\"#MOTILITY_RS_\"+index).html('');\n                                             $(\"#MOTILITY_RI_\"+index).html('');\n                                             $(\"#MOTILITY_RR_\"+index).html('');\n                                             $(\"#MOTILITY_RL_\"+index).html('');\n                                             $(\"#MOTILITY_LS_\"+index).html('');\n                                             $(\"#MOTILITY_LI_\"+index).html('');\n                                             $(\"#MOTILITY_LR_\"+index).html('');\n                                             $(\"#MOTILITY_LL_\"+index).html('');\n\n                                             $(\"#MOTILITY_RRSO_\"+index).html('');\n                                             $(\"#MOTILITY_RRIO_\"+index).html('');\n                                             $(\"#MOTILITY_RLSO_\"+index).html('');\n                                             $(\"#MOTILITY_RLIO_\"+index).html('');\n                                             $(\"#MOTILITY_LRSO_\"+index).html('');\n                                             $(\"#MOTILITY_LRIO_\"+index).html('');\n                                             $(\"#MOTILITY_LLSO_\"+index).html('');\n                                             $(\"#MOTILITY_LLIO_\"+index).html('');\n                                             }\n                                             submit_form('eye_mag');\n                                             });\n\n                  $(\"[name^='MOTILITY_']\").on(\"click\", function()  {\n                                                 $(\"#MOTILITYNORMAL\").removeAttr('checked');\n\n                                                 if (this.id.match(/(MOTILITY_([A-Z]{4}))_(.)/)) {\n                                                 var zone = this.id.match(/(MOTILITY_([A-Z]{4}))_(.)/);\n                                                 var index   = '0';\n                                                 var valued = isNaN($(\"#\"+zone[1]).val());\n                                                 if ((zone[2] =='RLSO')||(zone[2] =='LLSO')||(zone[2] =='RRIO')||(zone[2] =='LRIO')) {\n                                                 //find or make a hash tage for \"\\\"\n                                                 var hash_tag = '<i class=\"fa fa-minus\"></i>';\n                                                 } else {\n                                                 //find or make a hash tage for \"/\"\n                                                 var hash_tag = '<i class=\"fa fa-minus\"></i>';\n                                                 }\n                                                 } else {\n                                                 var zone = this.id.match(/(MOTILITY_..)_(.)/);\n                                                 var section = this.id.match(/MOTILITY_(.)(.)_/);\n                                                 var section2 = section[2];\n                                                 var Eye = section[1];\n                                                 var SupInf = section2.search(/S|I/);\n                                                 var RorLside   = section2.search(/R|L/);\n\n\n                                                 if (RorLside =='0') {\n                                                 var hash_tag = '<i class=\"fa fa-minus rotate-left\"></i>';\n                                                 } else {\n                                                 var hash_tag = '<i class=\"fa fa-minus\"></i>';\n                                                 }\n                                                 }\n                                                 if (valued != true && $(\"#\"+zone[1]).val() <'4') {\n                                                 valued=$(\"#\"+zone[1]).val();\n                                                 valued++;\n                                                 } else {\n                                                 valued = '0';\n                                                 $(\"#\"+zone[1]).val('0');\n                                                 }\n\n                                                 $(\"#\"+zone[1]).val(valued);\n\n                                                 for (index = '0'; index < 5; ++index) {\n                                                 $(\"#\"+zone[1]+\"_\"+index).html('');\n                                                 }\n                                                 if (valued > '0') {\n                                                 for (index =1; index < (valued+1); ++index) {\n                                                 $(\"#\"+zone[1]+\"_\"+index).html(hash_tag);\n                                                 }\n                                                 }\n\n                                                 submit_form('3');\n                                                 });\n\n                  $(\"[name^='Close_']\").on(\"click\", function()  {\n                                              var section = this.id.match(/Close_(.*)$/)[1];\n                                              if (this.id.match(/Close_W_(.*)$/) != null) {\n                                              var W_section = this.id.match(/Close_W_(.*)$/)[1];\n                                              if (W_section > '1') {\n                                              $('#LayerVision_W_'+W_section).addClass('nodisplay');\n                                              $('[name$=SPH_'+W_section+']').val('');\n                                              $('[name$=CYL_'+W_section+']').val('');\n                                              $('[name$=AXIS_'+W_section+']').val('');\n                                              $('[name$=ADD_'+W_section+']').val('');\n                                              $('[name$=PRISM_'+W_section+']').val('');\n                                              $('[name$=VA_'+W_section+']').val('');\n                                              $('#RX_TYPE_'+W_section).val('');\n                                              $('#Add_Glasses').removeClass('nodisplay');\n                                              $('#W_'+W_section).val('');\n                                              submit_form('4');\n                                              } else {\n                                              $(\"#LayerVision_W_lightswitch\").click();\n                                              }\n                                              } else if (section ==\"ACTMAIN\") {\n                                              $(\"#ACTTRIGGER\").trigger( \"click\" );\n                                              } else {\n                                              $(\"#LayerVision_\"+section+\"_lightswitch\").click();\n                                              }\n                                              });\n\n\n                  $(\"#EXAM_DRAW, #BUTTON_DRAW_menu, #PANEL_DRAW\").on(\"click\", function() {\n                                                                        if ($(\"#PREFS_CLINICAL\").value !='0') {\n                                                                        show_right();\n                                                                        $(\"#PREFS_CLINICAL\").val('0');\n                                                                        update_PREFS();\n                                                                        }\n                                                                        if ($(\"#PREFS_EXAM\").val() != 'DRAW') {\n                                                                        $(\"#PREFS_EXAM\").val('DRAW');\n                                                                        $(\"#EXAM_QP\").removeClass('button_selected');\n                                                                        $(\"#EXAM_DRAW\").addClass('button_selected');\n                                                                        $(\"#EXAM_TEXT\").removeClass('button_selected');\n                                                                        update_PREFS();\n                                                                        }\n                                                                        show_DRAW();\n                                                                        });\n                  $(\"#EXAM_QP,#PANEL_QP\").on(\"click\", function() {\n                                                if ($(\"#PREFS_CLINICAL\").value !='0') {\n                                                $(\"#PREFS_CLINICAL\").val('0');\n                                                update_PREFS();\n                                                }\n                                                if ($(\"#PREFS_EXAM\").value != 'QP') {\n                                                $(\"#PREFS_EXAM\").val('QP');\n                                                $(\"#EXAM_QP\").addClass('button_selected');\n                                                $(\"#EXAM_DRAW\").removeClass('button_selected');\n                                                $(\"#EXAM_TEXT\").removeClass('button_selected');\n                                                update_PREFS();\n                                                }\n                                                HPI_sync_heights();\n                                                show_QP();\n                                                scrollTo(\"EXT_left\");\n                                                });\n\n                  $(\"#EXAM_TEXT,#PANEL_TEXT\").on(\"click\", function() {\n\n                                                    // also hide QP, DRAWs, and PRIORS\n\n                                                    hide_DRAW();\n                                                    hide_QP();\n                                                    hide_PRIORS();\n                                                    hide_right();\n                                                    show_TEXT();\n                                                    for (index = '0'; index < zones.length; ++index) {\n                                                    $(\"#PREFS_\"+zones[index]+\"_RIGHT\").val(0);\n                                                    }\n                                                    update_PREFS();\n\n                                                    $(\"#EXAM_DRAW\").removeClass('button_selected');\n                                                    $(\"#EXAM_QP\").removeClass('button_selected');\n                                                    $(\"#EXAM_TEXT\").addClass('button_selected');\n                                                    scrollTo(\"EXT_left\");\n                                                    });\n                  $(\"[id^='BUTTON_TEXT_']\").on(\"click\", function() {\n                                                  var zone = this.id.match(/BUTTON_TEXT_(.*)/)[1];\n                                                  if (zone != \"menu\") {\n                                                  $(\"#\"+zone+\"_right\").addClass('nodisplay');\n                                                  $(\"#\"+zone+\"_left\").removeClass('display');\n                                                  $(\"#\"+zone+\"_left_text\").removeClass('display');\n                                                  $(\"#PREFS_\"+zone+\"_RIGHT\").val(0);\n                                                  }\n                                                  show_TEXT();\n                                                  scrollTo(\"EXT_left\");\n                                                  });\n                  $(\"[id^='BUTTON_TEXTD_']\").on(\"click\", function() {\n                                                   var zone = this.id.match(/BUTTON_TEXTD_(.*)/)[1];\n                                                   if (zone != \"menu\") {\n                                                     if ((zone ==\"PMH\") || (zone == \"HPI\")) {\n                                                       $(\"#PMH_right\").addClass('nodisplay');\n                                                       $(\"#PREFS_PMH_RIGHT\").val(1);\n                                                       $(\"#HPI_right\").addClass('nodisplay');\n                                                       $(\"#PREFS_HPI_RIGHT\").val(1);\n                                                       var reset = $(\"#HPI_1\").height();\n                                                       $(\"#PMH_1\").css(\"min-height\",'0');\n                                                       $(\"#PMH_left\").height(reset-40);\n\n                                                       $(\"#LayerTechnical_sections_1\").css(\"clear\",\"both\");\n                                                     } else {\n                                                       $(\"#\"+zone+\"_right\").addClass('nodisplay');\n                                                       $(\"#PREFS_\"+zone+\"_RIGHT\").val(1);\n                                                     }\n                                                     scrollTo(zone+\"_left\");\n                                                     update_PREFS();\n                                                   }\n                                                  });\n\n                  $(\"#EXAM_TEXT\").addClass('button_selected');\n                  if (($(\"#PREFS_CLINICAL\").val() !='1')) {\n                  var actionQ = \"#EXAM_\"+$(\"#PREFS_EXAM\").val();\n                  $(actionQ).trigger('click');\n                  } else {\n                  $(\"#EXAM_TEXT\").addClass('button_selected');\n                  }\n                  if ($(\"#ANTSEG_prefix\").val() > '') {\n                  $(\"#ANTSEG_prefix_\"+$(\"#ANTSEG_prefix\").val()).addClass('button_selected');\n                  } else {\n                  $(\"#ANTSEG_prefix\").val('off').trigger('change');\n                  }\n                  $(\"[name^='ACT_tab_']\").on(\"mouseover\", function() {\n                                                    $(this).toggleClass('underline').css( 'cursor', 'pointer' );\n                                                    });\n                  $(\"[name^='ACT_tab_']\").on(\"mouseout\", function() {\n                                                   $(this).toggleClass('underline');\n                                                   });\n\n                  $(\"[name^='ACT_tab_']\").on(\"click\", function()  {\n                                                var section = this.id.match(/ACT_tab_(.*)/)[1];\n                                                $(\"[name^='ACT_']\").addClass('nodisplay');\n                                                $(\"[name^='ACT_tab_']\").removeClass('nodisplay').removeClass('ACT_selected').addClass('ACT_deselected');\n                                                $(\"#ACT_tab_\" + section).addClass('ACT_selected').removeClass('ACT_deselected');\n                                                $(\"#ACT_\" + section).removeClass('nodisplay');\n                                                $(\"#PREFS_ACT_SHOW\").val(section);\n                                                //selection correct QP zone\n                                                $(\"[name^='NEURO_ACT_zone']\").removeClass('eye_button_selected');\n                                                $(\"#NEURO_ACT_zone_\"+ section).addClass(\"eye_button_selected\");\n                                                $(\"#NEURO_ACT_zone\").val(section);\n                                                update_PREFS();\n                                                });\n                  $(\"#ACTTRIGGER\").on(\"mouseout\", function() {\n                                            $(\"#ACTTRIGGER\").toggleClass('buttonRefraction_selected').toggleClass('underline');\n                                            });\n                  if ($(\"#PREFS_ACT_VIEW\").val() == '1') {\n                  $(\"#ACTMAIN\").toggleClass('nodisplay');\n                  $(\"#NPCNPA\").toggleClass('nodisplay');\n                  $(\"#ACTNORMAL_CHECK\").toggleClass('nodisplay');\n                  $(\"#ACTTRIGGER\").toggleClass('underline');\n                  var show = $(\"#PREFS_ACT_SHOW\").val();\n                  $(\"#ACT_tab_\"+show).trigger('click');\n                  }\n                  $(\"#ACTTRIGGER\").on(\"click\", function() {\n                                         $(\"#ACTMAIN\").toggleClass('nodisplay').toggleClass('ACT_TEXT');\n                                         $(\"#NPCNPA\").toggleClass('nodisplay');\n                                         $(\"#ACTNORMAL_CHECK\").toggleClass('nodisplay');\n                                         $(\"#ACTTRIGGER\").toggleClass('underline');\n                                         if ($(\"#PREFS_ACT_VIEW\").val()=='1') {\n                                         $(\"#PREFS_ACT_VIEW\").val('0');\n                                         } else {\n                                         $(\"#PREFS_ACT_VIEW\").val('1');\n                                         }\n                                         var show = $(\"#PREFS_ACT_SHOW\").val();\n                                         $(\"#ACT_tab_\"+show).trigger('click');\n                                         update_PREFS();\n                                         });\n                  $(\"#NEURO_COLOR\").on(\"click\", function() {\n                                          $(\"#ODCOLOR\").val(\"11/11\");\n                                          $(\"#OSCOLOR\").val(\"11/11\");\n                                          submit_form(\"eye_mag\");\n                                          });\n\n                  $(\"#NEURO_COINS\").on(\"click\", function() {\n                                          $(\"#ODCOINS\").val(\"1.00\");\n                                          //leave currency symbol out unless it is an openEMR defined option\n                                          $(\"#OSCOINS\").val(\"1.00\");\n                                          submit_form(\"eye_mag\");\n                                          });\n\n                  $(\"#NEURO_REDDESAT\").on(\"click\", function() {\n                                             $(\"#ODREDDESAT\").val(\"100\");\n                                             $(\"#OSREDDESAT\").val(\"100\");\n                                             submit_form(\"eye_mag\");\n                                             });\n\n                  $(\"[id^='myCanvas_']\").on(\"mouseout\", function() {\n                                                  var zone = this.id.match(/myCanvas_(.*)/)[1];\n                                                  submit_canvas(zone);\n                                                  });\n                  $(\"[id^='Undo_']\").on(\"click\", function() {\n                                           var zone = this.id.match(/Undo_Canvas_(.*)/)[1];\n                                           submit_canvas(zone);\n                                           });\n                  $(\"[id^='Redo_']\").on(\"click\", function() {\n                                           var zone = this.id.match(/Redo_Canvas_(.*)/)[1];\n                                           submit_canvas(zone);\n                                           });\n                  $(\"[id^='Clear_']\").on(\"click\", function() {\n                                            var zone = this.id.match(/Clear_Canvas_(.*)/)[1];\n                                            submit_canvas(zone);\n                                            });\n                  $(\"[id^='Blank_']\").on(\"click\", function() {\n\n                                           var zone = this.id.match(/Blank_Canvas_(.*)/)[1];\n                                           $(\"#url_\"+zone).val(\"../../forms/eye_mag/images/BLANK_BASE.png\");\n                                           //canvas.renderAll();\n                                           drawImage(zone);\n                                           });\n\n                  $(\"#COPY_SECTION\").on(\"change\", function() {\n                                            var start = $(\"#COPY_SECTION\").val();\n                                            if (start =='') return;\n                                            var value = start.match(/(\\w*)-(\\w*)/);\n                                            var zone = value[1];\n                                            var copy_from = value[2];\n                                            if (zone ==\"READONLY\") copy_from = $(\"#form_id\").val();\n                                            var count_changes='0';\n\n                                            var data = {\n                                            action      : 'copy',\n                                            copy        : zone,\n                                            zone        : zone,\n                                            copy_to     : $(\"#form_id\").val(),\n                                            copy_from   : copy_from,\n                                            pid         : $(\"#pid\").val()\n                                            };\n                                            if (zone ==\"READONLY\") {\n                                            //we are going to update the whole form\n                                            //Imagine you are watching on your browser while the tech adds stuff in another room on another computer.\n                                            //We are not ready to actively chart, just looking to see how far along our staff is...\n                                            //or maybe just looking ahead to see who's next in the next room?\n                                            //Either way, we are looking at a record that at present will be disabled/we cannot change...\n                                            // yet it is updating every 10 seconds if another user is making changes.\n\n                                            //      READONLY does not show IMPPLAN changes!!!!\n                                            } else {\n                                            //here we are retrieving an old record to copy forward to today's active chart.\n                                            data = $(\"#\"+zone+\"_left_text\").serialize() + \"&\" + $.param(data);\n                                            }\n                                            top.restoreSession();\n                                            $.ajax({\n                                                   type   : 'POST',\n                                                   dataType : 'json',\n                                                   url      :  \"../../forms/eye_mag/save.php\",\n                                                   data   : data,\n                                                   success  : function(result) {\n                                                   //we have to process impplan differently\n                                                   if (zone =='IMPPLAN') {\n                                                   //we get a json result.IMPPLAN back from the prior visit\n                                                   //we need to add that to the current list? Replace for now.\n                                                   build_IMPPLAN(result.IMPPLAN);\n                                                   store_IMPPLAN(result.IMPPLAN);\n                                                   //   need to make the Plan areas purple?\n                                                   } else {\n                                                   $.map(result, function(valhere, keyhere) {\n                                                         if ($(\"#\"+keyhere).val() != valhere) {\n                                                         $(\"#\"+keyhere).val(valhere).css(\"background-color\",\"#CCF\");\n                                                         } else if (keyhere.match(/MOTILITY_/)) {\n                                                         // Copy forward ductions and versions visually\n                                                         // Make each blank, and rebuild them\n                                                         $(\"[name='\"+keyhere+\"_1']\").html('');\n                                                         $(\"[name='\"+keyhere+\"_2']\").html('');\n                                                         $(\"[name='\"+keyhere+\"_3']\").html('');\n                                                         $(\"[name='\"+keyhere+\"_4']\").html('');\n                                                         if (keyhere.match(/(_RS|_LS|_RI|_LI|_RRSO|_RRIO|_RLSO|_RLIO|_LRSO|_LRIO|_LLSO|_LLIO)/)) {\n                                                         // Show a horizontal (minus) tag.  When \"/\" and \"\\\" fa-icons are available will need to change.\n                                                         // Maybe just use small font \"/\" and \"\\\" directly.\n                                                         hash_tag = '<i class=\"fa fa-minus\"></i>';\n                                                         } else { //show vertical tag\n                                                         hash_tag = '<i class=\"fa fa-minus rotate-left\"></i>';\n                                                         }\n                                                         for (index =1; index <= valhere; ++index) {\n                                                         $(\"#\"+keyhere+\"_\"+index).html(hash_tag);\n                                                         }\n                                                         } else if (keyhere.match(/^(ODVF|OSVF)\\d$/)) {\n                                                         if (valhere =='1') {\n                                                         $(\"#FieldsNormal\").prop('checked', false);\n                                                         $(\"#\"+keyhere).prop('checked', true);\n                                                         $(\"#\"+keyhere).val('1');\n                                                         } else {\n                                                         $(\"#\"+keyhere).val('0');\n                                                         $(\"#\"+keyhere).prop('checked', false);\n                                                         }\n                                                         } else if (keyhere.match(/AMSLERO(.)/)) {\n                                                         var sidehere = keyhere.match(/AMSLERO(.)/);\n                                                         if (valhere < '1') valhere ='0';\n                                                         $(\"#\"+keyhere).val(valhere);\n                                                         var srcvalue=\"AmslerO\"+sidehere[1];\n                                                         document.getElementById(srcvalue).src = document.getElementById(srcvalue).src.replace(/\\_\\d/g,\"_\"+valhere);\n                                                         $(\"#AmslerO\"+sidehere[1]+\"value\").text(valhere);\n                                                         } else if (keyhere.match(/VA$/)) {\n                                                         $(\"#\"+keyhere+\"_copy\").val(valhere).css(\"background-color\",\"#F0F8FF\");;\n                                                         $(\"#\"+keyhere+\"_copy_brd\").val(valhere).css(\"background-color\",\"#F0F8FF\");;\n                                                         }\n                                                         });\n                                                   if (zone != \"READONLY\") { submit_form(\"eye_mag\"); }\n                                                   }\n                                                   }});\n                                            });\n                  $(\"[id^='BUTTON_DRAW_']\").on(\"click\", function() {\n                                                  var zone =this.id.match(/BUTTON_DRAW_(.*)$/)[1];\n                                                  if (zone ==\"ALL\") {\n                                                  } else {\n                                                  if ($('#PREFS_'+zone+'_RIGHT').val() ==\"DRAW\") {\n                                                  $('#BUTTON_TEXTD_'+zone).trigger(\"click\");//closes draw\n                                                  //maybe this should revert to last right panel state (qp,text)\n                                                  return;\n                                                  }\n                                                  $(\"#\"+zone+\"_1\").removeClass('nodisplay');\n                                                  $(\"#\"+zone+\"_right\").addClass('canvas').removeClass('nodisplay');\n                                                  $(\"#QP_\"+zone).addClass('nodisplay');\n                                                  $(\"#PRIORS_\"+zone+\"_left_text\").addClass('nodisplay');\n                                                  $(\"#Draw_\"+zone).removeClass('nodisplay');\n                                                  $(\"#PREFS_\"+zone+\"_RIGHT\").val('DRAW');\n                                                  scrollTo(zone+\"_left\");\n                                                  update_PREFS();\n                                                  }\n                                                  });\n                  $(\"[id^='BUTTON_QP_']\").on(\"click\", function() {\n                                                var zone = this.id.match(/BUTTON_QP_(.*)$/)[1].replace(/_\\d*/,'');\n                                                if (zone =='IMPPLAN2') {\n                                                  $('#IMP_start_acc').slideDown();\n                                                  zone='IMPPLAN';\n                                                }\n                                                if (($(\"#PREFS_\"+zone+\"_RIGHT\").val() =='QP')&&(zone !='IMPPLAN')) {\n                                                  $('#BUTTON_TEXTD_'+zone).trigger(\"click\");\n                                                  return;\n                                                }\n                                                $(\"#PRIORS_\"+zone+\"_left_text\").addClass('nodisplay');\n                                                $(\"#Draw_\"+zone).addClass('nodisplay');\n                                                show_QP_section(zone, '1');\n                                                $(\"#PREFS_\"+zone+\"_RIGHT\").val('QP');\n\n                                                if ((zone == 'PMH')||(zone == 'HPI')) {\n                                                    if ($('#HPI_right').css('display') == 'none') {\n                                                        $(\"#Draw_HPI\").addClass('nodisplay');\n                                                        show_QP_section('HPI', '1');\n                                                        $(\"#PREFS_HPI_RIGHT\").val('QP');\n                                                    }\n                                                }\n\n                                                HPI_sync_heights();\n                                                if (zone == 'HPI') {\n                                                    if ($('#PMH_right').css('display') == 'none') {\n                                                        $(\"#PRIORS_PMH_left_text\").addClass('nodisplay');\n                                                        $(\"#Draw_PMH\").addClass('nodisplay');\n                                                        show_QP_section('PMH','1');\n                                                        $(\"#PREFS_PMH_RIGHT\").val('QP');\n                                                    }\n                                                    if ($('#PMH_right').height() > $('#PMH_left').height()) {\n                                                        $('#PMH_left').height($('#PMH_right').height());\n                                                    } else {\n                                                        $('#PMH_1').height($('#HPI_1').height());\n                                                    }\n                                                } else if (zone == 'menu') {\n                                                    show_QP();\n                                                } else if (zone == 'IMPPLAN') {\n                                                    show_QP_section('IMPPLAN','1');\n\n                                                }\n                                                update_PREFS();\n                                                });\n\n                  // set default to ccDist.  Change as desired.\n                  $('#NEURO_ACT_zone').val('CCDIST').trigger('change');\n                  if ($(\"#RXStart\").val() ==\"2\") {\n                  $(\"#Trifocal\").trigger('click');\n                  }\n                  $(\"[id$='_loading']\").addClass('nodisplay');\n                  $(\"[id$='_sections']\").removeClass('nodisplay');\n\n                  $('#left-panel').css(\"right\",\"0px\");\n                  $('#EXAM_KB').css({position: 'fixed', top: '29px'});\n                  $('#EXAM_KB').css('display', 'block');\n                  $('#EXAM_KB').draggable();\n                  $('#IMP').droppable({ drop: dragto_IMPPLAN } );\n                  $('#IMPPLAN_zone').droppable({ drop: dragto_IMPPLAN_zone } );\n                  $('#IMPPLAN_text').droppable({ drop: dragto_IMPPLAN_zone } );\n\n                  $('[id^=\"PLANS\"]').draggable(  { cursor: 'move', revert: true });\n                  $('[id^=\"PLAN_\"]').height( $(this).scrollHeight );\n\n                  /*  Sorting of diagnoses in IMP/PLAN right panel builds IMP_order[] array.\n                   Foreach index => value in IMP_order[order,PMSFH[type][i]]:\n                   retrieve PMSFH[type][value] and build the IMPRESSION/PLAN area\n                   openEMR ICD-10 seems to have newlines in codetext?  strip them with replace.\n                   All the ISSUE_TYPES and their fields are available in obj.PMSFH:\n                   'title' => $disptitle,\n                   'status' => $statusCompute,\n                   'enddate' => $row['enddate'],\n                   'reaction' => $row['reaction'],\n                   'referredby' => $row['referredby'],\n                   'extrainfo' => $row['extrainfo'],\n                   'diagnosis' => $row['diagnosis'],\n                   'code' => $code,\n                   'codedesc' => $codedesc,\n                   'codetext' => $codetext,\n                   'codetype' => $codetype,\n                   'comments' => $row['comments'],\n                   'rowid' => $row['id'],\n                   'row_type' => $row['type']\n                   eg. obj.IMPPLAN_items[index] =  code: obj.PMSFH['POH'][value]['code'],\n                   codedesc:  obj.PMSFH['POH'][value]['codedesc'],\n                   codetype:  obj.PMSFH['POH'][value]['codetype']\n                   */\n\n                  $('#make_new_IMP').on(\"click\", function() {\n                                           var issue='';\n                                           if (IMP_order.length ==0) rebuild_IMP($( \"#build_DX_list\" ));\n                                           if (obj.IMPPLAN_items ==null) obj.IMPPLAN_items = [];\n                                           $.each(IMP_order, function( index, value ) {\n                                                  issue= value.match(/(.*)_(.*)/);\n                                                  if (issue[1] == \"CLINICAL\") {\n                                                      if (!$('#inc_PE').is(':checked')) { return; }\n\n                                                      var the_code='';\n                                                      var the_codedesc='';\n                                                      var the_codetext='';\n                                                      var the_plan='';\n                                                      for (i=0;i < obj.Clinical[issue[2]].length; i++) {\n                                                        if (i == 0) {\n                                                            the_code = obj.Clinical[issue[2]][i]['code'];\n                                                        } else if (i < obj.Clinical[issue[2]].length) {\n                                                            the_code += ', '+ obj.Clinical[issue[2]][i]['code'];\n                                                        }\n                                                        the_codedesc += obj.Clinical[issue[2]][i]['codedesc'] + \"\\r\";\n                                                        the_codetext += obj.Clinical[issue[2]][i]['codetext'] + \"\\r\";\n                                                        the_plan += obj.Clinical[issue[2]][i]['codedesc'] + \"\\r\";\n                                                      }\n                                                      obj.IMPPLAN_items.push({\n                                                                             title:obj.Clinical[issue[2]][0]['title'],\n                                                                             code: the_code,\n                                                                             codetype: obj.Clinical[issue[2]][0]['codetype'],\n                                                                             codedesc: the_codedesc,\n                                                                             codetext: the_codetext,\n                                                                             plan: the_plan,\n                                                                             PMSFH_link: obj.Clinical[issue[2]][0]['PMSFH_link']\n                                                                             });\n                                                  } else {\n                                                      if (issue[1] == \"PMH\") {\n                                                        if (!$('#inc_PMH').is(':checked')) { return; }\n                                                      } else if (issue[1] == \"POH\"){\n                                                        if (!$('#inc_POH').is(':checked')) { return; }\n                                                      } else if (issue[1] == \"POS\"){\n                                                        if (!$('#inc_POH').is(':checked')) { return; }\n                                                      }\n                                                      obj.IMPPLAN_items.push({\n                                                                         title:         obj.PMSFH[issue[1]][issue[2]]['title'],\n                                                                         code:          obj.PMSFH[issue[1]][issue[2]]['code'],\n                                                                         codetype:      obj.PMSFH[issue[1]][issue[2]]['codetype'],\n                                                                         codedesc:      obj.PMSFH[issue[1]][issue[2]]['codedesc'],\n                                                                         codetext:      obj.PMSFH[issue[1]][issue[2]]['codetext'].replace(/(\\r\\n|\\n|\\r)/gm,\"\"),\n                                                                         plan:          obj.PMSFH[issue[1]][issue[2]]['comments'],\n                                                                         PMSFH_link:    obj.PMSFH[issue[1]][issue[2]]['PMSFH_link']\n                                                                         });\n                                                  }\n                                            });\n                                           build_IMPPLAN(obj.IMPPLAN_items);\n                                           store_IMPPLAN(obj.IMPPLAN_items,'1');\n                                           });\n\n\n                  $('.building_blocks > dt ').on('click', function() {\n                                                            if ( $(this).next().css('display') !== 'block' ) {\n                                                                allPanels.slideUp();\n                                                                $(this).next().slideDown();\n                                                            } else {\n                                                                allPanels.slideUp();\n                                                            }\n                                                          });\n                  $('#IMP_start_acc').slideDown();\n                  $('[id^=inc_]').on('click', function() {\n                                        build_DX_list(obj);\n                                        });\n\n                  $('#active_flag').on('click', function() { check_lock('1'); });\n                  $('#active_icon').on('click', function() { check_lock('1'); });\n\n                  $(\"input,textarea,text,checkbox\").on(\"change\", function(){\n                                                           $(this).css(\"background-color\",\"#F0F8FF\");\n                                                           if (this.name.match(/IOP/)) { color_IOP(this); }\n                                                           if ( ($(this).id != 'IMP') &&\n                                                                (!this.name.match(/^inc_/)) &&\n                                                                (!this.name.match(/_modifier$/))\n                                                              ) {\n                                                              submit_form();\n                                                            } else {\n                                                                $(\"#IMP_start_acc\").slideDown();\n                                                           }\n                                                         });\n                $(\"[name='CANVAS_selector']\").on(\"change\", function(){\n                    //we are going to display an old image from a previous encounter\n                    zone = this.id.match(/CANVAS_(.*)/)[1];\n                    if (this.value != 'current') {\n                        $(\"#\"+zone+\"_canvas\").addClass('nodisplay');\n                        $(\"#\"+zone+\"_olddrawing\").removeClass('nodisplay');\n                        show_PRIOR_CANVAS_section(zone, this.value);\n                    } else {\n                        $(\"#\"+zone+\"_canvas\").removeClass('nodisplay');\n\n                        $(\"#\"+zone+\"_olddrawing\").addClass('nodisplay');\n                    }\n                });\n\n\n                  $('#IMP').on(\"blur\", function() {\n                                 //add this DX to the obj.IMPPLAN_items array\n                                 //take the first line as the impression and the rest as the plan\n                                 var total_imp = $('#IMP').val();\n                                 $('#IMP').val('');//clear the box\n                                 var local_plan = '';\n                                 var local_code= '';\n                                 if (total_imp.length < '2') return; //reject text under two letters?\n                                 var re = /\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/; //official list of line delimiters for a regex\n                                 //local_impression is first line only[1]\n                                 var local_imp = total_imp.match(/^(.*)(?:\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029])(.*)/);\n                                 if (local_imp == null || local_imp[1] == null) {\n                                 local_imp = total_imp;\n                                 } else {\n                                 // If the first line was dropped in from the Builder via a draggable DX_list\n                                 // it will include the IMPRESSION + CODE.\n                                 // Consider stripping out the CODE\n                                 var local_imp_code = local_imp[1].match(/(.*)(ICD.*)$/);\n                                 if (local_imp_code) {\n                                 local_imp = local_imp_code[1];\n                                 local_code = local_imp_code[2];\n                                 local_plan = total_imp.replace(local_imp_code[0],''); //plan is line 2+ if present, strip off first line\n                                 local_plan = local_plan.replace(/^\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/,'');\n                                 } else {\n                                 local_imp = local_imp[1];\n                                 local_code = '';\n                                 local_plan = total_imp.replace(local_imp,''); //plan is line 2+ if present, strip off first line\n                                 local_plan = local_plan.replace(/^\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/,'');\n                                 }\n                                 }\n                                 if (obj.IMPPLAN_items ==null) obj.IMPPLAN_items = [];//can't push if array does not exist\n                                 obj.IMPPLAN_items.push({\n                                                        form_id: $('#form_id').val(),\n                                                        pid: $('#pid').val(),\n                                                        title: local_imp,\n                                                        plan: local_plan,\n                                                        code: local_code,\n                                                        codetext:'',\n                                                        codetype:'',\n                                                        codedesc:'',\n                                                        PMSFH_link: ''\n                                                        });\n                                 build_IMPPLAN(obj.IMPPLAN_items,'1');\n                                 store_IMPPLAN(obj.IMPPLAN_items);\n                            });\n                  $('#Add_Glasses').on('click', function() {\n                                          for (i=2; i <6; i++) { //come on, 5 current rx glasses should be enough...\n                                          if ($('#W_'+i).val() != '1') {\n                                          $('#W_'+i).val('1');\n                                          $('#LayerVision_W_'+i).removeClass('nodisplay');\n                                          if (i==5) { $('#Add_Glasses').addClass('nodisplay'); }\n                                          break;\n                                          }\n                                          }\n                                          });\n                  $(\"[name='reverseme']\").on('click', function() {\n                                                var target = this.id;\n                                                reverse_cylinder(target);\n                                                });\n\n                  $('#code_me_now').on('click', function(event) {\n                                          event.preventDefault();\n                                          build_CODING_list();\n                                          CODING_to_feesheet(CODING_items);\n                                          });\n                  $( \".widget a\" ).button();\n\n                  $( \"button\" ).button().on('click', function( event ) {\n                         event.preventDefault();\n                         });\n                  $('#visit_codes').on('change', function() {\n                                           var data_all = $(this).val();\n                                           var data = data_all.match(/^(.*)\\|(.*)\\|/);\n                                           visit_code = data[2];\n                                           visit_type = data[1];\n                                           });\n                  $('[name=\"visit_modifier\"]').on('click', function () {\n                    var item = this.id.match(/visit_mod_(.*)/)[1];\n                    if ($(this).hasClass('status_on')) {\n                        $(this).css(\"background-color\",\"navy\");\n                        $(this).removeClass('status_on');\n                        visit_modifier = visit_modifier.filter(function(e) { return e !== item });\n                    } else {\n                      $(this).css(\"background-color\",\"red\");\n                      $(this).addClass('status_on');\n                      visit_modifier.push(item);\n                    }\n                    build_CODING_list();\n                  });\n\n                  $('[id^=\"tabs-left-\"]').on('click', function () {\n                        var item = this.id.match(/tabs-left-(.*)/)[1];\n                        var value = $(\"#setting_\"+item).val();\n                        if (value !='1') {\n                            $(\"#setting_\"+item).val('1');\n                            $(this).removeClass('ui-state-default');\n                            $('#'+ item +'_1').removeClass('nodisplay');\n                            menu_select(item);\n                        } else {\n                            $(\"#setting_\"+item).val('0');\n                            $(this).addClass('ui-state-default');\n                            $('#'+ item +'_1').addClass('nodisplay');\n                        }\n                        update_PREFS();\n                  });\n\n                  $(document).on('change','[name=\"visit_status\"]', function (event) {\n                        var item = $( \"input[type=radio][name=visit_status]:checked\" ).val();\n                        update_appt_status(item);\n                  });\n\n                  $(document).on(\"click\", \"[name='visit_justifier']\", function () {\n                                                   var d = $(this).data();\n                                                   var item = d.justcode;\n                                                   if ($(this).hasClass('status_on')) {\n                                                       $(this).css(\"background-color\",\"navy\");\n                                                       $(this).removeClass('status_on');\n                                                       visit_justifier = visit_justifier.filter(function(e) { return e !== item });\n                                                   } else {\n                                                        $(this).css(\"background-color\",\"red\");\n                                                        $(this).addClass('status_on');\n                                                        visit_justifier.push(item);\n                                                   }\n                                                    build_CODING_list();\n                                               });\n                  $(document).on(\"click\", \"span[name$='_justifiers']\", function () {\n                        var item = parseInt( this.id.match(/_just_(.*)/)[1] ) + 1;\n                        if ($(this).hasClass('status_on')) {\n                            $(this).css(\"background-color\",\"navy\");\n                            $(this).removeClass('status_on');\n                        } else {\n                            if ( $('#visit_just_'+item).hasClass('status_on') ) {\n                                $('#visit_just_'+item).trigger('click');\n                            }\n                            $(this).css(\"background-color\",\"red\");\n                            $(this).addClass('status_on');\n                            if (!$('#visit_mod_25').hasClass(\"status_on\")) {\n                                $('#visit_mod_25').trigger('click');\n                            }\n                        }\n                    build_CODING_list();\n                  });\n\n                  build_IMPPLAN(obj.IMPPLAN_items);\n\n                    $('[id^=\"BUTTON_TAB_\"]').on('click', function () {\n                        var item = this.id.match(/BUTTON_TAB_(.*)/)[1];\n\n                        $('#tabs-left-'+item).addClass('ui-state-default');\n                        $(\"#setting_\"+item).val('0');\n                        $(\"#\"+item+'_1').addClass('nodisplay');\n                        $(\"#tabs_left\").removeClass('nodisplay');\n                        update_PREFS();\n                    });\n                    show_by_setting();\n                  $(\"input,textarea,text\").on(\"focus\", function(){\n                                                 $(this).css(\"background-color\",\"#ffff99\");\n                                                 });\n                  //This listener no longer works in tabs because of the new tab wrapper.\n                  $(window).bind('onbeforeunload', function(){\n                    alert('Closing time');\n                    if ($('#chart_status').val()==\"on\") {\n                        unlock();\n                    }\n                  });\n                });\n", "<?php\n\n/**\n * dynamic_finder.php\n *\n * Sponsored by David Eschelbacher, MD\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Rod Roark <rod@sunsetsystems.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n * @copyright Copyright (c) 2012-2016 Rod Roark <rod@sunsetsystems.com>\n * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2019 Jerry Padgett <sjpadgett@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nrequire_once(dirname(__FILE__) . \"/../../globals.php\");\nrequire_once \"$srcdir/user.inc.php\";\nrequire_once \"$srcdir/options.inc.php\";\n\nuse OpenEMR\\Common\\Acl\\AclMain;\nuse OpenEMR\\Common\\Csrf\\CsrfUtils;\nuse OpenEMR\\Core\\Header;\nuse OpenEMR\\OeUI\\OemrUI;\n\n$uspfx = 'patient_finder.'; //substr(__FILE__, strlen($webserver_root)) . '.';\n$patient_finder_exact_search = prevSetting($uspfx, 'patient_finder_exact_search', 'patient_finder_exact_search', ' ');\n\n$popup = empty($_REQUEST['popup']) ? 0 : 1;\n$searchAny = empty($_GET['search_any']) ? \"\" : $_GET['search_any'];\nunset($_GET['search_any']);\n// Generate some code based on the list of columns.\n//\n$colcount = 0;\n$header0 = \"\";\n$header = \"\";\n$coljson = \"\";\n$orderjson = \"\";\n$res = sqlStatement(\"SELECT option_id, title, toggle_setting_1 FROM list_options WHERE \" .\n    \"list_id = 'ptlistcols' AND activity = 1 ORDER BY seq, title\");\n$sort_dir_map = generate_list_map('Sort_Direction');\nwhile ($row = sqlFetchArray($res)) {\n    $colname = $row['option_id'];\n    $colorder = $sort_dir_map[$row['toggle_setting_1']]; // Get the title 'asc' or 'desc' using the value\n    $title = xl_list_label($row['title']);\n    $title1 = ($title == xl('Full Name')) ? xl('Name') : $title;\n    $header .= \"   <th>\";\n    $header .= text($title);\n    $header .= \"</th>\\n\";\n    $header0 .= \"   <td ><input type='text' size='20' \";\n    $header0 .= \"value='' class='form-control search_init' placeholder='\" . xla(\"Search by\") . \" \" . $title1 . \"'/></td>\\n\";\n    if ($coljson) {\n        $coljson .= \", \";\n    }\n\n    $coljson .= \"{\\\"sName\\\": \\\"\" . addcslashes($colname, \"\\t\\r\\n\\\"\\\\\") . \"\\\"\";\n    if ($title1 == xl('Name')) {\n        $coljson .= \", \\\"mRender\\\": wrapInLink\";\n    }\n    $coljson .= \"}\";\n    if ($orderjson) {\n        $orderjson .= \", \";\n    }\n    $orderjson .= \"[\\\"$colcount\\\", \\\"\" . addcslashes($colorder, \"\\t\\r\\n\\\"\\\\\") . \"\\\"]\";\n    ++$colcount;\n}\n$loading = \"<div class='spinner-border' role='status'><span class='sr-only'>\" . xlt(\"Loading\") . \"...</span></div>\";\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <?php Header::setupHeader(['datatables', 'datatables-colreorder', 'datatables-dt', 'datatables-bs']); ?>\n    <title><?php echo xlt(\"Patient Finder\"); ?></title>\n<style>\n    /* Finder Processing style */\n    div.dataTables_wrapper div.dataTables_processing {\n        width: auto;\n        margin: 0;\n        color: var(--danger);\n        transform: translateX(-50%);\n    }\n    .card {\n        border: 0;\n        border-radius: 0;\n    }\n\n    @media screen and (max-width: 640px) {\n        .dataTables_wrapper .dataTables_length,\n        .dataTables_wrapper .dataTables_filter {\n            float: inherit;\n            text-align: justify;\n        }\n    }\n\n    /* Color Overrides for jQuery-DT */\n    table.dataTable thead th,\n    table.dataTable thead td {\n        border-bottom: 1px solid var(--gray900) !important;\n    }\n\n    table.dataTable tfoot th,\n    table.dataTable tfoot td {\n        border-top: 1px solid var(--gray900) !important;\n    }\n\n    table.dataTable tbody tr {\n        background-color: var(--white) !important;\n        cursor: pointer;\n    }\n\n    table.dataTable.row-border tbody th,\n    table.dataTable.row-border tbody td,\n    table.dataTable.display tbody th,\n    table.dataTable.display tbody td {\n        border-top: 1px solid var(--gray300) !important;\n    }\n\n    table.dataTable.cell-border tbody th,\n    table.dataTable.cell-border tbody td {\n        border-top: 1px solid var(--gray300) !important;\n        border-right: 1px solid var(--gray300) !important;\n    }\n\n    table.dataTable.cell-border tbody tr th:first-child,\n    table.dataTable.cell-border tbody tr td:first-child {\n        border-left: 1px solid var(--gray300) !important;\n    }\n\n    table.dataTable.stripe tbody tr.odd,\n    table.dataTable.display tbody tr.odd {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.hover tbody tr:hover,\n    table.dataTable.display tbody tr:hover {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.order-column tbody tr>.sorting_1,\n    table.dataTable.order-column tbody tr>.sorting_2,\n    table.dataTable.order-column tbody tr>.sorting_3,\n    table.dataTable.display tbody tr>.sorting_1,\n    table.dataTable.display tbody tr>.sorting_2,\n    table.dataTable.display tbody tr>.sorting_3 {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.display tbody tr.odd>.sorting_1,\n    table.dataTable.order-column.stripe tbody tr.odd>.sorting_1 {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.display tbody tr.odd>.sorting_2,\n    table.dataTable.order-column.stripe tbody tr.odd>.sorting_2 {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.display tbody tr.odd>.sorting_3,\n    table.dataTable.order-column.stripe tbody tr.odd>.sorting_3 {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.display tbody tr.even>.sorting_1,\n    table.dataTable.order-column.stripe tbody tr.even>.sorting_1 {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.display tbody tr.even>.sorting_2,\n    table.dataTable.order-column.stripe tbody tr.even>.sorting_2 {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.display tbody tr.even>.sorting_3,\n    table.dataTable.order-column.stripe tbody tr.even>.sorting_3 {\n        background-color: var(--light) !important;\n    }\n\n    table.dataTable.display tbody tr:hover>.sorting_1,\n    table.dataTable.order-column.hover tbody tr:hover>.sorting_1 {\n        background-color: var(--gray200) !important;\n    }\n\n    table.dataTable.display tbody tr:hover>.sorting_2,\n    table.dataTable.order-column.hover tbody tr:hover>.sorting_2 {\n        background-color: var(--gray200) !important;\n    }\n\n    table.dataTable.display tbody tr:hover>.sorting_3,\n    table.dataTable.order-column.hover tbody tr:hover>.sorting_3 {\n        background-color: var(--gray200) !important;\n    }\n\n    table.dataTable.display tbody .odd:hover,\n    table.dataTable.display tbody .even:hover {\n        background-color: var(--gray200) !important;\n    }\n\n    table.dataTable.no-footer {\n        border-bottom: 1px solid var(--gray900) !important;\n    }\n\n    .dataTables_wrapper .dataTables_processing {\n        background-color: var(--white) !important;\n        background: -webkit-gradient(linear, left top, right top, color-stop(0%, transparent), color-stop(25%, rgba(var(--black), 0.9)), color-stop(75%, rgba(var(--black), 0.9)), color-stop(100%, transparent)) !important;\n        background: -webkit-linear-gradient(left, transparent 0%, rgba(var(--black), 0.9) 25%, rgba(var(--black), 0.9) 75%, transparent 100%) !important;\n        background: -moz-linear-gradient(left, transparent 0%, rgba(var(--black), 0.9) 25%, rgba(var(--black), 0.9) 75%, transparent 100%) !important;\n        background: -ms-linear-gradient(left, transparent 0%, rgba(var(--black), 0.9) 25%, rgba(var(--black), 0.9) 75%, transparent 100%) !important;\n        background: -o-linear-gradient(left, transparent 0%, rgba(var(--black), 0.9) 25%, rgba(var(--black), 0.9) 75%, transparent 100%) !important;\n        background: linear-gradient(to right, transparent 0%, rgba(var(--black), 0.9) 25%, rgba(var(--black), 0.9) 75%, transparent 100%) !important;\n    }\n\n    .dataTables_wrapper .dataTables_length,\n    .dataTables_wrapper .dataTables_filter,\n    .dataTables_wrapper .dataTables_info,\n    .dataTables_wrapper .dataTables_processing,\n    .dataTables_wrapper .dataTables_paginate {\n        color: var(--dark) !important;\n    }\n\n    div.dataTables_length select {\n        width: 50px !important;\n    }\n\n    .dataTables_wrapper.no-footer .dataTables_scrollBody {\n        border-bottom: 1px solid var(--gray900) !important;\n    }\n\n    /* Pagination button Overrides for jQuery-DT */\n    .dataTables_wrapper .dataTables_paginate .paginate_button {\n        padding: 0 !important;\n        margin: 0 !important;\n        border: 0 !important;\n    }\n\n    /* Sort indicator Overrides for jQuery-DT */\n    table thead .sorting::before,\n    table thead .sorting_asc::before,\n    table thead .sorting_asc::after,\n    table thead .sorting_desc::before,\n    table thead .sorting_desc::after,\n    table thead .sorting::after {\n        display: none !important;\n    }\n</style>\n<script>\n    var uspfx = '<?php echo attr($uspfx); ?>';\n\n    $(function () {\n        // Initializing the DataTable.\n        //\n        let serverUrl = \"dynamic_finder_ajax.php\";\n        let srcAny = <?php echo js_url($searchAny); ?>;\n        if (srcAny) {\n            serverUrl += \"?search_any=\" + srcAny;\n        }\n        var oTable = $('#pt_table').dataTable({\n            \"processing\": true,\n            // next 2 lines invoke server side processing\n            \"serverSide\": true,\n            // NOTE kept the legacy command 'sAjaxSource' here for now since was unable to get\n            // the new 'ajax' command to work.\n            \"sAjaxSource\": serverUrl,\n            \"fnServerParams\": function (aoData) {\n                var searchType = $(\"#setting_search_type:checked\").length > 0;\n                aoData.push({\"name\": \"searchType\", \"value\": searchType});\n            },\n            // dom invokes ColReorderWithResize and allows inclusion of a custom div\n            \"dom\": 'Rlfrt<\"mytopdiv\">ip',\n            // These column names come over as $_GET['sColumns'], a comma-separated list of the names.\n            // See: http://datatables.net/usage/columns and\n            // http://datatables.net/release-datatables/extras/ColReorder/server_side.html\n            \"columns\": [ <?php echo $coljson; ?> ],\n            \"order\": [ <?php echo $orderjson; ?> ],\n            \"lengthMenu\": [10, 25, 50, 100],\n            \"pageLength\": <?php echo empty($GLOBALS['gbl_pt_list_page_size']) ? '10' : $GLOBALS['gbl_pt_list_page_size']; ?>,\n            <?php // Bring in the translations ?>\n            <?php $translationsDatatablesOverride = array('search' => (xla('Search all columns') . ':')); ?>\n            <?php $translationsDatatablesOverride = array('processing' => $loading); ?>\n            <?php require($GLOBALS['srcdir'] . '/js/xl/datatables-net.js.php'); ?>\n        });\n\n\n        <?php\n        $checked = (!empty($GLOBALS['gbl_pt_list_new_window'])) ? 'checked' : '';\n        ?>\n        $(\"div.mytopdiv\").html(\"<form name='myform'><div class='form-check form-check-inline'><label for='form_new_window' class='form-check-label' id='form_new_window_label'><input type='checkbox' class='form-check-input' id='form_new_window' name='form_new_window' value='1' <?php echo $checked; ?> /><?php echo xlt('Open in New Window'); ?></label></div><div class='form-check form-check-inline'><label for='setting_search_type' id='setting_search_type_label' class='form-check-label'><input type='checkbox' name='setting_search_type' class='form-check-input' id='setting_search_type' onchange='persistCriteria(this, event)' value='<?php echo attr($patient_finder_exact_search); ?>'<?php echo text($patient_finder_exact_search); ?>/><?php echo xlt('Search with exact method'); ?></label></div></form>\");\n\n        // This is to support column-specific search fields.\n        // Borrowed from the multi_filter.html example.\n        $(\"thead input\").keyup(function () {\n            // Filter on the column (the index) of this element\n            oTable.fnFilter(this.value, $(\"thead input\").index(this));\n        });\n\n        $('#pt_table').on('mouseenter', 'tbody tr', function() {\n            $(this).find('a').css('text-decoration', 'underline');\n        });\n        $('#pt_table').on('mouseleave', 'tbody tr', function() {\n            $(this).find('a').css('text-decoration', '');\n        });\n        // OnClick handler for the rows\n        $('#pt_table').on('click', 'tbody tr', function () {\n            // ID of a row element is pid_{value}\n            var newpid = this.id.substring(4);\n            // If the pid is invalid, then don't attempt to set\n            // The row display for \"No matching records found\" has no valid ID, but is\n            // otherwise clickable. (Matches this CSS selector).  This prevents an invalid\n            // state for the PID to be set.\n            if (newpid.length === 0) {\n                return;\n            }\n            if (document.myform.form_new_window.checked) {\n                openNewTopWindow(newpid);\n            }\n            else {\n                top.restoreSession();\n                top.RTop.location = \"../../patient_file/summary/demographics.php?set_pid=\" + encodeURIComponent(newpid);\n            }\n        });\n    });\n\n    function wrapInLink(data, type, full) {\n        if (type == 'display') {\n            return '<a href=\"\">' + data + \"</a>\";\n        } else {\n            return data;\n        }\n    }\n\n    function openNewTopWindow(pid) {\n        document.fnew.patientID.value = pid;\n        top.restoreSession();\n        document.fnew.submit();\n    }\n\n    function persistCriteria(el, e) {\n        e.preventDefault();\n        let target = uspfx + \"patient_finder_exact_search\";\n        let val = el.checked ? ' checked' : ' ';\n        top.restoreSession();\n        $.post(\"../../../library/ajax/user_settings.php\",\n            {\n                target: target,\n                setting: val,\n                csrf_token_form: \"<?php echo attr(CsrfUtils::collectCsrfToken()); ?>\"\n            }\n        );\n    }\n\n</script>\n<?php\n    $arrOeUiSettings = array(\n    'heading_title' => xl('Patient Finder'),\n    'include_patient_name' => false,\n    'expandable' => true,\n    'expandable_files' => array('dynamic_finder_xpd'),//all file names need suffix _xpd\n    'action' => \"search\",//conceal, reveal, search, reset, link or back\n    'action_title' => \"\",//only for action link, leave empty for conceal, reveal, search\n    'action_href' => \"\",//only for actions - reset, link or back\n    'show_help_icon' => false,\n    'help_file_name' => \"\"\n    );\n    $oemr_ui = new OemrUI($arrOeUiSettings);\n    ?>\n</head>\n<body>\n    <div id=\"container_div\" class=\"<?php echo attr($oemr_ui->oeContainer()); ?> mt-3\">\n         <div class=\"w-100\">\n            <?php echo $oemr_ui->pageHeading() . \"\\r\\n\"; ?>\n            <?php if (AclMain::aclCheckCore('patients', 'demo', '', array('write','addonly'))) { ?>\n                <button id=\"create_patient_btn1\" class=\"btn btn-primary btn-add\" onclick=\"top.restoreSession();top.RTop.location = '<?php echo $web_root ?>/interface/new/new.php'\"><?php echo xlt('Add New Patient'); ?></button>\n            <?php } ?>\n            <div>\n                <div id=\"dynamic\"><!-- TBD: id seems unused, is this div required? -->\n                    <!-- Class \"display\" is defined in demo_table.css -->\n                    <div class=\"table-responsive\">\n                        <table class=\"table\" class=\"border-0 display\" id=\"pt_table\">\n                            <thead class=\"thead-dark\">\n                                <tr id=\"advanced_search\" class=\"hideaway d-none\">\n                                    <?php echo $header0; ?>\n                                </tr>\n                                <tr class=\"\">\n                                    <?php echo $header; ?>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <!-- Class \"dataTables_empty\" is defined in jquery.dataTables.css -->\n                                    <td class=\"dataTables_empty\" colspan=\"<?php echo attr($colcount); ?>\">...</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n          </div>\n        </div>\n        <!-- form used to open a new top level window when a patient row is clicked -->\n        <form name='fnew' method='post' target='_blank' action='../main_screen.php?auth=login&site=<?php echo attr_url($_SESSION['site_id']); ?>'>\n            <input type=\"hidden\" name=\"csrf_token_form\" value=\"<?php echo attr(CsrfUtils::collectCsrfToken()); ?>\" />\n            <input type='hidden' name='patientID' value='0'/>\n        </form>\n    </div> <!--End of Container div-->\n    <?php $oemr_ui->oeBelowContainerDiv();?>\n\n    <script>\n        $(function () {\n            $(\"#exp_cont_icon\").click(function () {\n                $(\"#pt_table\").removeAttr(\"style\");\n            });\n        });\n\n        $(window).on(\"resize\", function() { //portrait vs landscape\n           $(\"#pt_table\").removeAttr(\"style\");\n        });\n    </script>\n    <script>\n      $(function() {\n        $(\"#pt_table_filter\").addClass(\"d-md-initial\");\n        $(\"#pt_table_length\").addClass(\"d-md-initial\");\n        $(\"#show_hide\").addClass(\"d-md-initial\");\n        $(\"#search_hide\").addClass(\"d-md-initial\");\n        $(\"#pt_table_length\").addClass(\"d-none\");\n        $(\"#show_hide\").addClass(\"d-none\");\n        $(\"#search_hide\").addClass(\"d-none\");\n      });\n    </script>\n\n    <script>\n        document.addEventListener('touchstart', {});\n    </script>\n\n    <script>\n        $(function() {\n            $('div.dataTables_filter input').focus();\n        });\n    </script>\n</body>\n</html>\n", "<?php\n\n/**\n * dynamic_finder_ajax.php\n *\n * Sponsored by David Eschelbacher, MD\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Rod Roark <rod@sunsetsystems.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n * @copyright Copyright (c) 2012 Rod Roark <rod@sunsetsystems.com>\n * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2019 Jerry Padgett <sjpadgett@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nrequire_once(dirname(__FILE__) . \"/../../globals.php\");\nrequire_once($GLOBALS['srcdir'] . \"/options.inc.php\");\n\nuse OpenEMR\\Events\\BoundFilter;\nuse OpenEMR\\Events\\PatientFinder\\PatientFinderFilterEvent;\nuse OpenEMR\\Events\\PatientFinder\\ColumnFilter;\n\n// Not checking csrf since it breaks when opening up a patient in a new frame.\n//  Also note that csrf checking is not needed in this script because of following 2 reasons.\n//  1. cookie_samesite in OpenEMR is set to 'Strict', which is an effective security measure to stop csrf vulnerabilities.\n//  2. Additionally, in this script there are no state changes, thus it is not even sensitive to csrf vulnerabilities.\n\n$popup = empty($_REQUEST['popup']) ? 0 : 1;\n$searchAny = !empty($_GET['search_any']) && empty($_GET['sSearch']) ? $_GET['search_any'] : \"\";\n\n// With the ColReorder or ColReorderWithResize plug-in, the expected column\n// ordering may have been changed by the user.  So we cannot depend on\n// list_options to provide that.\n// Addition of an any column search from dem layouts. sjp 05/04/2019\n// Probably could have used a session var here because datatable server url\n// presists not allowing easy way to unset any for normal search but opted not.\n//\nif ($searchAny) {\n    $_GET['sSearch'] = $searchAny;\n    $layoutCols = sqlStatement(\n        \"SELECT field_id FROM layout_options WHERE form_id = 'DEM'\n            AND field_id not like ? AND field_id not like ? AND uor !=0\",\n        array('em\\_%', 'add%')\n    );\n    for ($iter = 0; $row = sqlFetchArray($layoutCols); $iter++) {\n        $aColumns[] = $row['field_id'];\n    }\n} else {\n    $aColumns = explode(',', $_GET['sColumns']);\n}\n// Paging parameters.  -1 means not applicable.\n//\n$iDisplayStart  = isset($_GET['iDisplayStart' ]) ? 0 + $_GET['iDisplayStart' ] : -1;\n$iDisplayLength = isset($_GET['iDisplayLength']) ? 0 + $_GET['iDisplayLength'] : -1;\n$limit = '';\nif ($iDisplayStart >= 0 && $iDisplayLength >= 0) {\n    $limit = \"LIMIT \" . escape_limit($iDisplayStart) . \", \" . escape_limit($iDisplayLength);\n}\n// Search parameter.  -1 means .\n//\n$searchMethodInPatientList = isset($_GET['searchType' ]) && $_GET['searchType' ] === \"true\" ?  true : false;\n\n// Column sorting parameters.\n//\n$orderby = '';\nif (isset($_GET['iSortCol_0'])) {\n    for ($i = 0; $i < intval($_GET['iSortingCols']); ++$i) {\n        $iSortCol = intval($_GET[\"iSortCol_$i\"]);\n        if ($_GET[\"bSortable_$iSortCol\"] == \"true\") {\n            $sSortDir = escape_sort_order($_GET[\"sSortDir_$i\"]); // ASC or DESC\n            // We are to sort on column # $iSortCol in direction $sSortDir.\n            $orderby .= $orderby ? ', ' : 'ORDER BY ';\n            //\n            if ($aColumns[$iSortCol] == 'name') {\n                $orderby .= \"lname $sSortDir, fname $sSortDir, mname $sSortDir\";\n            } else {\n                $orderby .= \"`\" . escape_sql_column_name($aColumns[$iSortCol], array('patient_data')) . \"` $sSortDir\";\n            }\n        }\n    }\n}\n\n// Helper function for filtering dates. Returns a string for use with MySQL LIKE.\n// Examples (assuming US date formats):\n//   12       => Any date with \"12\" in it\n//   1977     => Any date with \"1977\" in it (therefore year 1977)\n//   197/12/1 => Dec. 1 of any year in the 1970's\n//   12/1/197 => Same\n//   12/1     => Dec. 1 of any year\n//   /1       => The first day of any month of any year\n// Any non-digit character may be used instead of \"/\".\n//\nfunction dateSearch($sSearch)\n{\n    // Determine if MDY date format is used, preferring Date Display Format from\n    // global settings if it's not YMD, otherwise guessing from country code.\n    $mdy = empty($GLOBALS['date_display_format']) ?\n        ($GLOBALS['phone_country_code'] == 1) : ($GLOBALS['date_display_format'] == 1);\n    // If no delimiters then just search the whole date.\n    $mystr = \"%$sSearch%\";\n    if (preg_match('/[^0-9]/', $sSearch)) {\n        // Delimiter found. Separate it all into year, month and day components.\n        $parts = preg_split('/[^0-9]/', $sSearch);\n        $parts[1] = $parts[1] ?? '';\n        $parts[2] = $parts[2] ?? '';\n        // If the first part is more than 2 digits then assume y/m/d format.\n        // Otherwise assume MDY or DMY format as appropriate.\n        if (strlen($parts[0]) <= 2) {\n            $parts = $mdy ? array($parts[2], $parts[0], $parts[1]) :\n                array($parts[2], $parts[1], $parts[0]);\n        }\n        // A single-digit day or month is zero-filled. Fill in other missing\n        // digits with wildcards. A 2-digit year like 19 becomes 19__, not __19.\n        $parts[0] = substr($parts[0] . '____', 0, 4);\n        if (strlen($parts[1]) == 0) {\n            $parts[1] = '__';\n        } elseif (strlen($parts[1]) == 1) {\n            $parts[1] = '0' . $parts[1];\n        }\n        if (strlen($parts[2]) == 0) {\n            $parts[2] = '__';\n        } elseif (strlen($parts[2]) == 1) {\n            $parts[2] = '0' . $parts[2];\n        }\n        $mystr = $parts[0] . '-' . $parts[1] . '-' . $parts[2];\n    }\n    return $mystr;\n}\n\n// Global filtering.\n//\n$where = \"\";\n$srch_bind = array();\nif (isset($_GET['sSearch']) && $_GET['sSearch'] !== \"\") {\n    $sSearch = trim($_GET['sSearch']);\n    foreach ($aColumns as $colname) {\n        $where .= $where ? \" OR \" : \" ( \";\n        if ($colname == 'name') {\n            $where .=\n                \"lname LIKE ? OR \" .\n                \"fname LIKE ? OR \" .\n                \"mname LIKE ? \";\n            if ($searchMethodInPatientList) { // exact search\n                array_push($srch_bind, $sSearch, $sSearch, $sSearch);\n            } else {// like search\n                array_push($srch_bind, ($sSearch . \"%\"), ($sSearch . \"%\"), ($sSearch . \"%\"));\n            }\n        } elseif ($searchMethodInPatientList) { // exact search\n            $where .= \"`\" . escape_sql_column_name($colname, array('patient_data')) . \"` LIKE ? \";\n            array_push($srch_bind, $sSearch);\n        } elseif ($searchAny) {\n            $where .= \" `\" . escape_sql_column_name($colname, array('patient_data')) . \"` LIKE ?\"; // any search\n            array_push($srch_bind, ('%' . $sSearch . '%'));\n        } else {\n            $where .= \"`\" . escape_sql_column_name($colname, array('patient_data')) . \"` LIKE ? \";\n            array_push($srch_bind, ($sSearch . '%'));\n        }\n    }\n\n    if ($where) {\n        $where .= \")\";\n    }\n}\n\n// Column-specific filtering.\n//\n$columnFilters = [];\nfor ($i = 0; $i < count($aColumns); ++$i) {\n    $colname = $aColumns[$i];\n    if (isset($_GET[\"bSearchable_$i\"]) && $_GET[\"bSearchable_$i\"] == \"true\" && $_GET[\"sSearch_$i\"] != '') {\n        $where .= $where ? ' AND ' : '';\n        $sSearch = $_GET[\"sSearch_$i\"];\n        $columnFilters[] = new ColumnFilter($colname, $sSearch);\n        if ($colname == 'name') {\n            $where .=\n                \"lname LIKE ? OR \" .\n                \"fname LIKE ? OR \" .\n                \"mname LIKE ? \";\n            if ($searchMethodInPatientList) { // exact search\n                array_push($srch_bind, $sSearch, $sSearch, $sSearch);\n            } else {// like search\n                array_push($srch_bind, ($sSearch . \"%\"), ($sSearch . \"%\"), ($sSearch . \"%\"));\n            }\n        } elseif ($colname == 'DOB') {\n            $where .= \"`\" . escape_sql_column_name($colname, array('patient_data')) . \"` LIKE ? \";\n            array_push($srch_bind, dateSearch($sSearch));\n        } elseif ($searchMethodInPatientList) { // exact search\n            $where .= \"`\" . escape_sql_column_name($colname, array('patient_data')) . \"` LIKE ? \";\n            array_push($srch_bind, $sSearch);\n        } else {\n            $where .= \"`\" . escape_sql_column_name($colname, array('patient_data')) . \"` LIKE ? \";\n            array_push($srch_bind, ($sSearch . '%'));\n        }\n    }\n}\n\n// Custom filtering, before datatables filtering created by the user\n// This allows a module to subscribe to a 'patient-finder.filter' event and\n// add filtering before data ever gets to the user\n$patientFinderFilterEvent = new PatientFinderFilterEvent(new BoundFilter(), $aColumns, $columnFilters);\n$patientFinderFilterEvent = $GLOBALS[\"kernel\"]->getEventDispatcher()->dispatch($patientFinderFilterEvent, PatientFinderFilterEvent::EVENT_HANDLE, 10);\n$boundFilter = $patientFinderFilterEvent->getBoundFilter();\n$customWhere = $boundFilter->getFilterClause();\n$srch_bind = array_merge($boundFilter->getBoundValues(), $srch_bind);\n\n// Compute list of column names for SELECT clause.\n// Always includes pid because we need it for row identification.\n//\nif ($searchAny) {\n    $aColumns = explode(',', $_GET['sColumns']);\n}\n$sellist = 'pid';\nforeach ($aColumns as $colname) {\n    if ($colname == 'pid') {\n        continue;\n    }\n\n    $sellist .= \", \";\n    if ($colname == 'name') {\n        $sellist .= \"lname, fname, mname\";\n    } else {\n        $sellist .= \"`\" . escape_sql_column_name($colname, array('patient_data')) . \"`\";\n    }\n}\n\n// Get total number of rows in the table.\n// Include the custom filter clause and bound values, if any\n$row = sqlQuery(\"SELECT COUNT(id) AS count FROM patient_data WHERE $customWhere\", $boundFilter->getBoundValues());\n$iTotal = $row['count'];\n\n// Get total number of rows in the table after filtering.\n//\nif (empty($where)) {\n    $where = $customWhere;\n} else {\n    $where = \"$customWhere AND ( $where )\";\n}\n$row = sqlQuery(\"SELECT COUNT(id) AS count FROM patient_data WHERE $where\", $srch_bind);\n$iFilteredTotal = $row['count'];\n\n// Build the output data array.\n//\n$out = array(\n    \"sEcho\"                => intval($_GET['sEcho']),\n    \"iTotalRecords\"        => $iTotal,\n    \"iTotalDisplayRecords\" => $iFilteredTotal,\n    \"aaData\"               => array()\n);\n\n// save into variable data about fields of 'patient_data' from 'layout_options'\n$fieldsInfo = array();\n$quoteSellist = preg_replace('/(\\w+)/i', '\"${1}\"', str_replace('`', '', $sellist));\n$res = sqlStatement('SELECT data_type, field_id, list_id FROM layout_options WHERE form_id = \"DEM\" AND field_id IN(' . $quoteSellist . ')');\nwhile ($row = sqlFetchArray($res)) {\n    $fieldsInfo[$row['field_id']] = $row;\n}\n\n$query = \"SELECT $sellist FROM patient_data WHERE $where $orderby $limit\";\n$res = sqlStatement($query, $srch_bind);\nwhile ($row = sqlFetchArray($res)) {\n    // Each <tr> will have an ID identifying the patient.\n    $arow = array('DT_RowId' => 'pid_' . $row['pid']);\n    foreach ($aColumns as $colname) {\n        if ($colname == 'name') {\n            $name = $row['lname'];\n            if ($name && $row['fname']) {\n                $name .= ', ';\n            }\n\n            if ($row['fname']) {\n                $name .= $row['fname'];\n            }\n\n            if ($row['mname']) {\n                $name .= ' ' . $row['mname'];\n            }\n\n            $arow[] = attr($name);\n        } else {\n            $arow[] = isset($fieldsInfo[$colname]) ? attr(generate_plaintext_field($fieldsInfo[$colname], $row[$colname])) : attr($row[$colname]);\n        }\n    }\n\n    $out['aaData'][] = $arow;\n}\n\n// error_log($query); // debugging\n\n// Dump the output array as JSON.\n//\n// Encoding with options for escaping a special chars - JSON_HEX_TAG (<)(>), JSON_HEX_AMP(&), JSON_HEX_APOS('), JSON_HEX_QUOT(\").\necho json_encode($out, 15);\n", "<?php\n\n// +-----------------------------------------------------------------------------+\n// Copyright (C) 2011 Z&H Consultancy Services Private Limited <sam@zhservices.com>\n//\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n//\n// A copy of the GNU General Public License is included along with this program:\n// openemr/interface/login/GnuGPL.html\n// For more information write to the Free Software\n// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n//\n// Author:   Eldho Chacko <eldho@zhservices.com>\n//           Jacob T Paul <jacob@zhservices.com>\n//\n// +------------------------------------------------------------------------------+\n\n\n\nrequire_once(\"../../interface/globals.php\");\n\nuse OpenEMR\\Core\\Header;\n\n$list_id = $_REQUEST['list_id'];\n?>\n<html>\n    <head>\n        <?php Header::setupHeader(); ?>\n        <script>\n        function add_template(){\n                top.restoreSession();\n                len = document.getElementById('provider').options.length;\n                sel_len=0;\n                val=\"\";\n                for(i=0;i<len;i++){\n                   if(document.getElementById('provider').options[i].selected==true){\n                    sel_len++;\n                    val+=document.getElementById('provider').options[i].value+\"|\";\n                   }\n                }\n                if(sel_len>0){\n                $.ajax({\n                type: \"POST\",\n                url: \"ajax_code.php\",\n                dataType: \"html\",\n                data: {\n                     list_id: <?php echo js_escape($list_id); ?>,\n                     multi: val,\n                     source: \"save_provider\"\n                },\n                async: false,\n                success: function(thedata){\n\n                            },\n                error:function(){\n                    alert(\"fail\");\n                }\n                });\n                dlgclose();\n                return;\n                }\n                else{\n                    alert(<?php echo xlj('You should select at least one Provider');?>);\n                }\n\n        }\n        </script>\n    </head>\n    <body class=\"body_top\">\n        <form >\n            <table>\n                <tr class=\"text\">\n                    <td>\n                        <select multiple name=\"provider[]\" id=\"provider\" size=\"5\">\n                            <?php\n                            $query = \"SELECT id, lname, fname FROM users WHERE authorized = 1 AND username != '' \" .\n                                    \"AND active = 1 AND ( info IS NULL OR info NOT LIKE '%Inactive%' ) ORDER BY lname, fname\";\n                            $res = sqlStatement($query);\n                            $sel_query = \"SELECT tu_user_id FROM template_users WHERE tu_template_id=?\";\n                            $row_sel = sqlQuery($sel_query, array($list_id));\n                            while ($row = sqlFetchArray($res)) {\n                                foreach ($row_sel as $key => $value) {\n                                    if ($value == $row['id']) {\n                                        $sel = \"selected\";\n                                    } else {\n                                        $sel = '';\n                                    }\n                                }\n                                echo \"<option value='\" . attr($row['id']) . \"' $sel>\" . text($row['lname'] . \",\" . $row['fname']) . \"</option>\";\n                            }\n                            ?>\n                        </select>\n                    </td>\n                    <td>\n                    <a href=\"#\" onclick=\"add_template()\" class=\"btn btn-primary\"><span><?php echo xlt('Save');?></span></a>\n                    </td>\n                </tr>\n            </table>\n        </form>\n    </body>\n</html>\n"], "filenames": ["interface/forms/eye_mag/js/eye_base.php", "interface/main/finder/dynamic_finder.php", "interface/main/finder/dynamic_finder_ajax.php", "library/custom_template/share_template.php"], "buggy_code_start_loc": [372, 253, 26, 58], "buggy_code_end_loc": [373, 257, 30, 107], "fixing_code_start_loc": [372, 253, 26, 58], "fixing_code_end_loc": [373, 257, 30, 107], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Generic in GitHub repository openemr/openemr prior to 7.0.1.", "other": {"cve": {"id": "CVE-2023-2948", "sourceIdentifier": "security@huntr.dev", "published": "2023-05-28T04:15:12.117", "lastModified": "2023-06-01T03:51:17.350", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Generic in GitHub repository openemr/openemr prior to 7.0.1."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "LOW", "baseScore": 8.3, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.5}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:open-emr:openemr:*:*:*:*:*:*:*:*", "versionEndExcluding": "7.0.1", "matchCriteriaId": "30B2EE3F-FA55-46FB-BC32-B041753826A4"}]}]}], "references": [{"url": "https://github.com/openemr/openemr/commit/af1ecf78d1342519791bda9d3079e88f7d859015", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/2393e4d9-9e9f-455f-bf50-f20f77b0a64d", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/openemr/openemr/commit/af1ecf78d1342519791bda9d3079e88f7d859015"}}