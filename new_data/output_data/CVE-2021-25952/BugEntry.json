{"buggy_code": ["module.exports = set;\n\n/*\n  var obj1 = {};\n  set(obj1, 'a.aa.aaa', 4); // true\n  obj1; // {a: {aa: {aaa: 4}}}\n\n  var obj2 = {};\n  set(obj2, ['a', 'aa', 'aaa'], 4); // true\n  obj2; // {a: {aa: {aaa: 4}}}\n\n  var obj3 = {a: {aa: {aaa: 2}}};\n  set(obj3, 'a.aa.aaa', 3); // true\n  obj3; // {a: {aa: {aaa: 3}}}\n\n  // don't clobber existing\n  var obj4 = {a: {aa: {aaa: 2}}};\n  set(obj4, 'a.aa', {bbb: 7}); // false\n\n  const obj5 = {a: {}};\n  const sym = Symbol();\n  set(obj5.a, sym, 7); // true\n  obj5; // {a: {Symbol(): 7}}\n*/\n\nfunction set(obj, props, value) {\n  if (typeof props == 'string') {\n    props = props.split('.');\n  }\n  if (typeof props == 'symbol') {\n    props = [props];\n  }\n  var lastProp = props.pop();\n  if (!lastProp) {\n    return false;\n  }\n  var thisProp;\n  while ((thisProp = props.shift())) {\n    if (typeof obj[thisProp] == 'undefined') {\n      obj[thisProp] = {};\n    }\n    obj = obj[thisProp];\n    if (!obj || typeof obj != 'object') {\n      return false;\n    }\n  }\n  obj[lastProp] = value;\n  return true;\n}\n", "{\n  \"name\": \"just-safe-set\",\n  \"version\": \"2.2.1\",\n  \"description\": \"set value at property, create intermediate properties if necessary\",\n  \"main\": \"index.js\",\n  \"types\": \"index.d.ts\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": \"https://github.com/angus-c/just\",\n  \"keywords\": [\n    \"object\",\n    \"safe\",\n    \"set\",\n    \"no-dependencies\",\n    \"just\"\n  ],\n  \"author\": \"Angus Croll\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/angus-c/just/issues\"\n  }\n}", "var test = require('../util/test')(__filename);\nvar set = require('../../packages/object-safe-set');\nvar compare = require('../../packages/collection-compare');\n\ntest('sets existing property using dot-notation arg', function(t) {\n  t.plan(4);\n  var obj1 = {a: {aa: {aaa: 2}}};\n  t.isEqual(set(obj1, 'a.aa.aaa', 3), true);\n  t.ok(compare(obj1, {a: {aa: {aaa: 3}}}));\n  var obj2 = {a: {aa: {aaa: 2}}};\n  t.isEqual(set(obj2, 'a.aa', {bbb: 7}), true);\n  t.ok(compare(obj2, {a: {aa: {bbb: 7}}}));\n  t.end();\n});\n\ntest('sets existing property using array arg', function(t) {\n  t.plan(4);\n  var obj1 = {a: {aa: {aaa: 2}}};\n  t.isEqual(set(obj1, ['a', 'aa', 'aaa'], 3), true);\n  t.ok(compare(obj1, {a: {aa: {aaa: 3}}}));\n  var obj2 = {a: {aa: {aaa: 2}}};\n  t.isEqual(set(obj2, ['a', 'aa'], {bbb: 7}), true);\n  t.ok(compare(obj2, {a: {aa: {bbb: 7}}}));\n  t.end();\n});\n\ntest('sets non-existent property using dot-notation arg', function(t) {\n  t.plan(4);\n  var obj1 = {};\n  t.isEqual(set(obj1, 'a.aa.aaa', 4), true);\n  t.ok(compare(obj1, {a: {aa: {aaa: 4}}}));\n  var obj2 = {};\n  t.isEqual(set(obj2, 'a.aa', {bbb: 7}), true);\n  t.ok(compare(obj2, {a: {aa: {bbb: 7}}}));\n  t.end();\n});\n\ntest('sets non-existent property using array arg', function(t) {\n  t.plan(4);\n  var obj1 = {};\n  t.isEqual(set(obj1, ['a', 'aa', 'aaa'], 4), true);\n  t.ok(compare(obj1, {a: {aa: {aaa: 4}}}));\n  var obj2 = {};\n  t.isEqual(set(obj2, ['a', 'aa'], {bbb: 7}), true);\n  t.ok(compare(obj2, {a: {aa: {bbb: 7}}}));\n  t.end();\n});\n\ntest(\"doesn't interrupt property chain, using dot-notation arg\", function(t) {\n  t.plan(2);\n  var obj1 = {a: 5};\n  t.isEqual(set(obj1, 'a.aa.aaa', 4), false);\n  // ok to clobber last property\n  var obj2 = {a: {aa: 9}};\n  t.isEqual(set(obj2, 'a.aa', {bbb: 7}), true);\n  t.end();\n});\n\ntest(\"doesn't interrupt property chain, using array arg\", function(t) {\n  t.plan(2);\n  var obj1 = {a: 5};\n  t.isEqual(set(obj1, ['a', 'aa', 'aaa'], 4), false);\n  // ok to clobber last property\n  var obj2 = {a: {aa: 9}};\n  t.isEqual(set(obj2, ['a', 'aa'], {bbb: 7}), true);\n  t.end();\n});\n\n/* eslint-disable no-undef*/\nif (typeof Symbol === 'function') {\n  test('supports symbol prop', function(t) {\n    t.plan(2);\n    var obj1 = {a: {}};\n    var sym = Symbol();\n    t.isEqual(set(obj1.a, sym, 7), true);\n    t.ok(obj1.a[sym] === 7);\n    t.end();\n  });\n}\n"], "fixing_code": ["module.exports = set;\n\n/*\n  var obj1 = {};\n  set(obj1, 'a.aa.aaa', 4); // true\n  obj1; // {a: {aa: {aaa: 4}}}\n\n  var obj2 = {};\n  set(obj2, ['a', 'aa', 'aaa'], 4); // true\n  obj2; // {a: {aa: {aaa: 4}}}\n\n  var obj3 = {a: {aa: {aaa: 2}}};\n  set(obj3, 'a.aa.aaa', 3); // true\n  obj3; // {a: {aa: {aaa: 3}}}\n\n  // don't clobber existing\n  var obj4 = {a: {aa: {aaa: 2}}};\n  set(obj4, 'a.aa', {bbb: 7}); // false\n\n  const obj5 = {a: {}};\n  const sym = Symbol();\n  set(obj5.a, sym, 7); // true\n  obj5; // {a: {Symbol(): 7}}\n*/\n\nfunction set(obj, props, value) {\n  if (typeof props == 'string') {\n    props = props.split('.');\n  }\n  if (typeof props == 'symbol') {\n    props = [props];\n  }\n  var lastProp = props.pop();\n  if (!lastProp) {\n    return false;\n  }\n  prototypeCheck(lastProp);\n  var thisProp;\n  while ((thisProp = props.shift())) {\n    prototypeCheck(thisProp);\n    if (typeof obj[thisProp] == 'undefined') {\n      obj[thisProp] = {};\n    }\n    obj = obj[thisProp];\n    if (!obj || typeof obj != 'object') {\n      return false;\n    }\n  }\n  obj[lastProp] = value;\n  return true;\n}\n\nfunction prototypeCheck(prop) {\n  if (prop === '__proto__' || prop === 'constructor' || prop === 'prototype') {\n    throw new Error('setting of prototype values not supported');\n  }\n}\n", "{\n  \"name\": \"just-safe-set\",\n  \"version\": \"2.2.2\",\n  \"description\": \"set value at property, create intermediate properties if necessary\",\n  \"main\": \"index.js\",\n  \"types\": \"index.d.ts\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": \"https://github.com/angus-c/just\",\n  \"keywords\": [\n    \"object\",\n    \"safe\",\n    \"set\",\n    \"no-dependencies\",\n    \"just\"\n  ],\n  \"author\": \"Angus Croll\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/angus-c/just/issues\"\n  }\n}", "var test = require('../util/test')(__filename);\nvar set = require('../../packages/object-safe-set');\nvar compare = require('../../packages/collection-compare');\n\ntest('sets existing property using dot-notation arg', function(t) {\n  t.plan(4);\n  var obj1 = {a: {aa: {aaa: 2}}};\n  t.isEqual(set(obj1, 'a.aa.aaa', 3), true);\n  t.ok(compare(obj1, {a: {aa: {aaa: 3}}}));\n  var obj2 = {a: {aa: {aaa: 2}}};\n  t.isEqual(set(obj2, 'a.aa', {bbb: 7}), true);\n  t.ok(compare(obj2, {a: {aa: {bbb: 7}}}));\n  t.end();\n});\n\ntest('sets existing property using array arg', function(t) {\n  t.plan(4);\n  var obj1 = {a: {aa: {aaa: 2}}};\n  t.isEqual(set(obj1, ['a', 'aa', 'aaa'], 3), true);\n  t.ok(compare(obj1, {a: {aa: {aaa: 3}}}));\n  var obj2 = {a: {aa: {aaa: 2}}};\n  t.isEqual(set(obj2, ['a', 'aa'], {bbb: 7}), true);\n  t.ok(compare(obj2, {a: {aa: {bbb: 7}}}));\n  t.end();\n});\n\ntest('sets non-existent property using dot-notation arg', function(t) {\n  t.plan(4);\n  var obj1 = {};\n  t.isEqual(set(obj1, 'a.aa.aaa', 4), true);\n  t.ok(compare(obj1, {a: {aa: {aaa: 4}}}));\n  var obj2 = {};\n  t.isEqual(set(obj2, 'a.aa', {bbb: 7}), true);\n  t.ok(compare(obj2, {a: {aa: {bbb: 7}}}));\n  t.end();\n});\n\ntest('sets non-existent property using array arg', function(t) {\n  t.plan(4);\n  var obj1 = {};\n  t.isEqual(set(obj1, ['a', 'aa', 'aaa'], 4), true);\n  t.ok(compare(obj1, {a: {aa: {aaa: 4}}}));\n  var obj2 = {};\n  t.isEqual(set(obj2, ['a', 'aa'], {bbb: 7}), true);\n  t.ok(compare(obj2, {a: {aa: {bbb: 7}}}));\n  t.end();\n});\n\ntest(\"doesn't interrupt property chain, using dot-notation arg\", function(t) {\n  t.plan(2);\n  var obj1 = {a: 5};\n  t.isEqual(set(obj1, 'a.aa.aaa', 4), false);\n  // ok to clobber last property\n  var obj2 = {a: {aa: 9}};\n  t.isEqual(set(obj2, 'a.aa', {bbb: 7}), true);\n  t.end();\n});\n\ntest(\"doesn't interrupt property chain, using array arg\", function(t) {\n  t.plan(2);\n  var obj1 = {a: 5};\n  t.isEqual(set(obj1, ['a', 'aa', 'aaa'], 4), false);\n  // ok to clobber last property\n  var obj2 = {a: {aa: 9}};\n  t.isEqual(set(obj2, ['a', 'aa'], {bbb: 7}), true);\n  t.end();\n});\n\ntest(\"doesn't support setting of prototype (and related) values\", function(t) {\n  t.plan(4);\n  t.throws(function() {\n    var obj1 = {a: {}};\n    set(obj1, '__proto__.x', function malice() {});\n  });\n  t.throws(function() {\n    var obj1 = {a: {}};\n    set(obj1, ['a', 'b', '__proto__'], {toString: 'hehehe'});\n  });\n  t.throws(function() {\n    var obj2 = {a: {}};\n    set(obj2, 'constructor', function FakeConstructor() {});\n  });\n  t.throws(function() {\n    var obj3 = {a: {}};\n    set(obj3, 'prototype.y', 'hahahaha');\n  });\n  t.end();\n});\n\n/* eslint-disable no-undef*/\nif (typeof Symbol === 'function') {\n  test('supports symbol prop', function(t) {\n    t.plan(2);\n    var obj1 = {a: {}};\n    var sym = Symbol();\n    t.isEqual(set(obj1.a, sym, 7), true);\n    t.ok(obj1.a[sym] === 7);\n    t.end();\n  });\n}\n"], "filenames": ["packages/object-safe-set/index.js", "packages/object-safe-set/package.json", "test/object-safe-set/index.js"], "buggy_code_start_loc": [36, 3, 68], "buggy_code_end_loc": [49, 4, 68], "fixing_code_start_loc": [37, 3, 69], "fixing_code_end_loc": [58, 4, 90], "type": "CWE-1321", "message": "Prototype pollution vulnerability in \u2018just-safe-set\u2019 versions 1.0.0 through 2.2.1 allows an attacker to cause a denial of service and may lead to remote code execution.", "other": {"cve": {"id": "CVE-2021-25952", "sourceIdentifier": "vulnerabilitylab@mend.io", "published": "2021-07-07T12:15:08.573", "lastModified": "2022-06-28T14:11:45.273", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Prototype pollution vulnerability in \u2018just-safe-set\u2019 versions 1.0.0 through 2.2.1 allows an attacker to cause a denial of service and may lead to remote code execution."}, {"lang": "es", "value": "Una vulnerabilidad de Contaminaci\u00f3n de Prototipos en \"just-safe-set\" versiones 1.0.0 hasta 2.2.1, permite a un atacante causar una denegaci\u00f3n de servicio y puede conllevar a una ejecuci\u00f3n de c\u00f3digo remota"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-1321"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:just-safe-set_project:just-safe-set:*:*:*:*:*:node.js:*:*", "versionStartIncluding": "1.0.0", "versionEndIncluding": "2.2.1", "matchCriteriaId": "90063D32-DAFB-4CD2-B306-54303FE41E20"}]}]}], "references": [{"url": "https://github.com/angus-c/just/commit/dd57a476f4bb9d78c6f60741898dc04c71d2eb53", "source": "vulnerabilitylab@mend.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25952", "source": "vulnerabilitylab@mend.io", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/angus-c/just/commit/dd57a476f4bb9d78c6f60741898dc04c71d2eb53"}}