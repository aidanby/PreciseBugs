{"buggy_code": ["<?php\n/* Icinga Web 2 | (c) 2020 Icinga GmbH | GPLv2+ */\n\nnamespace Icinga\\Web\\Controller;\n\nuse Icinga\\Application\\Icinga;\nuse Icinga\\Web\\Request;\n\nclass StaticController\n{\n    /**\n     * Handle incoming request\n     *\n     * @param Request $request\n     *\n     * @returns void\n     */\n    public function handle(Request $request)\n    {\n        $app = Icinga::app();\n\n        // +4 because strlen('/lib') === 4\n        $assetPath = ltrim(substr($request->getRequestUri(), strlen($request->getBaseUrl()) + 4), '/');\n\n        $library = null;\n        foreach ($app->getLibraries() as $candidate) {\n            if (substr($assetPath, 0, strlen($candidate->getName())) === $candidate->getName()) {\n                $library = $candidate;\n                $assetPath = ltrim(substr($assetPath, strlen($candidate->getName())), '/');\n                break;\n            }\n        }\n\n        if ($library === null) {\n            $app->getResponse()\n                ->setHttpResponseCode(404);\n\n            return;\n        }\n\n        $assetRoot = $library->getStaticAssetPath();\n        $filePath = $assetRoot . DIRECTORY_SEPARATOR . $assetPath;\n\n        // Doesn't use realpath as it isn't supposed to access files outside asset/static\n        if (! is_readable($filePath) || ! is_file($filePath)) {\n            $app->getResponse()\n                ->setHttpResponseCode(404);\n\n            return;\n        }\n\n        $fileStat = stat($filePath);\n        $eTag = sprintf(\n            '%x-%x-%x',\n            $fileStat['ino'],\n            $fileStat['size'],\n            (float) str_pad($fileStat['mtime'], 16, '0')\n        );\n\n        $app->getResponse()->setHeader(\n            'Cache-Control',\n            'public, max-age=1814400, stale-while-revalidate=604800',\n            true\n        );\n\n        if ($request->getServer('HTTP_IF_NONE_MATCH') === $eTag) {\n            $app->getResponse()\n                ->setHttpResponseCode(304);\n        } else {\n            $app->getResponse()\n                ->setHeader('ETag', $eTag)\n                ->setHeader('Content-Type', mime_content_type($filePath), true)\n                ->setHeader('Last-Modified', gmdate('D, d M Y H:i:s', $fileStat['mtime']) . ' GMT')\n                ->setBody(file_get_contents($filePath));\n        }\n    }\n}\n"], "fixing_code": ["<?php\n/* Icinga Web 2 | (c) 2020 Icinga GmbH | GPLv2+ */\n\nnamespace Icinga\\Web\\Controller;\n\nuse Icinga\\Application\\Icinga;\nuse Icinga\\Web\\Request;\n\nclass StaticController\n{\n    /**\n     * Handle incoming request\n     *\n     * @param Request $request\n     *\n     * @returns void\n     */\n    public function handle(Request $request)\n    {\n        $app = Icinga::app();\n\n        // +4 because strlen('/lib') === 4\n        $assetPath = ltrim(substr($request->getRequestUri(), strlen($request->getBaseUrl()) + 4), '/');\n\n        $library = null;\n        foreach ($app->getLibraries() as $candidate) {\n            if (substr($assetPath, 0, strlen($candidate->getName())) === $candidate->getName()) {\n                $library = $candidate;\n                $assetPath = ltrim(substr($assetPath, strlen($candidate->getName())), '/');\n                break;\n            }\n        }\n\n        if ($library === null) {\n            $app->getResponse()\n                ->setHttpResponseCode(404);\n\n            return;\n        }\n\n        $assetRoot = $library->getStaticAssetPath();\n        if (empty($assetRoot)) {\n            $app->getResponse()\n                ->setHttpResponseCode(404);\n\n            return;\n        }\n\n        $filePath = $assetRoot . DIRECTORY_SEPARATOR . $assetPath;\n        $dirPath = realpath(dirname($filePath)); // dirname, because the file may be a link\n\n        if (\n            $dirPath === false\n            || substr($dirPath, 0, strlen($assetRoot)) !== $assetRoot\n            || ! is_file($filePath)\n        ) {\n            $app->getResponse()\n                ->setHttpResponseCode(404);\n\n            return;\n        }\n\n        $fileStat = stat($filePath);\n        $eTag = sprintf(\n            '%x-%x-%x',\n            $fileStat['ino'],\n            $fileStat['size'],\n            (float) str_pad($fileStat['mtime'], 16, '0')\n        );\n\n        $app->getResponse()->setHeader(\n            'Cache-Control',\n            'public, max-age=1814400, stale-while-revalidate=604800',\n            true\n        );\n\n        if ($request->getServer('HTTP_IF_NONE_MATCH') === $eTag) {\n            $app->getResponse()\n                ->setHttpResponseCode(304);\n        } else {\n            $app->getResponse()\n                ->setHeader('ETag', $eTag)\n                ->setHeader('Content-Type', mime_content_type($filePath), true)\n                ->setHeader('Last-Modified', gmdate('D, d M Y H:i:s', $fileStat['mtime']) . ' GMT')\n                ->setBody(file_get_contents($filePath));\n        }\n    }\n}\n"], "filenames": ["library/Icinga/Web/Controller/StaticController.php"], "buggy_code_start_loc": [41], "buggy_code_end_loc": [46], "fixing_code_start_loc": [42], "fixing_code_end_loc": [57], "type": "CWE-22", "message": "Icinga Web 2 is an open source monitoring web interface, framework and command-line interface. Unauthenticated users can leak the contents of files of the local system accessible to the web-server user, including `icingaweb2` configuration files with database credentials. This issue has been resolved in versions 2.9.6 and 2.10 of Icinga Web 2. Database credentials should be rotated.", "other": {"cve": {"id": "CVE-2022-24716", "sourceIdentifier": "security-advisories@github.com", "published": "2022-03-08T20:15:07.853", "lastModified": "2023-04-10T20:15:07.683", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Icinga Web 2 is an open source monitoring web interface, framework and command-line interface. Unauthenticated users can leak the contents of files of the local system accessible to the web-server user, including `icingaweb2` configuration files with database credentials. This issue has been resolved in versions 2.9.6 and 2.10 of Icinga Web 2. Database credentials should be rotated."}, {"lang": "es", "value": "Icinga Web 2 es una interfaz web de monitorizaci\u00f3n de c\u00f3digo abierto, un framework y una interfaz de l\u00ednea de comandos. Los usuarios no autenticados pueden filtrar el contenido de los archivos del sistema local accesibles al usuario del servidor web, incluidos los archivos de configuraci\u00f3n de `icingaweb2` con credenciales de la base de datos. Este problema se ha resuelto en las versiones 2.9.6 y 2.10 de Icinga Web 2. Las credenciales de la base de datos deben rotarse"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}, {"source": "nvd@nist.gov", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:icinga:icinga_web_2:*:*:*:*:*:*:*:*", "versionStartIncluding": "2.9.0", "versionEndExcluding": "2.9.6", "matchCriteriaId": "CE7D185F-C8C8-4401-B8F5-580DF83D5D79"}]}]}], "references": [{"url": "http://packetstormsecurity.com/files/171774/Icinga-Web-2.10-Arbitrary-File-Disclosure.html", "source": "security-advisories@github.com"}, {"url": "https://github.com/Icinga/icingaweb2/commit/9931ed799650f5b8d5e1dc58ea3415a4cdc5773d", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/Icinga/icingaweb2/security/advisories/GHSA-5p3f-rh28-8frw", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://security.gentoo.org/glsa/202208-05", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Icinga/icingaweb2/commit/9931ed799650f5b8d5e1dc58ea3415a4cdc5773d"}}