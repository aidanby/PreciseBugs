{"buggy_code": ["****************************\nChangelog for eXtplorer\nVersion $Id: CHANGELOG.txt 249 2016-12-11 16:11:03Z soeren $\n****************************\n--- version 2.1.12 ---\n- fixed wrong version display\n- fixed empty language selector\n\n--- version 2.1.11 ---\n- fixed \"text.js not found\" message on server when editing text files\n- fixed PHP 7.2 incompatibility in Tar.php\n- PHP 5.3 compatibility fixes\n\n--- version 2.1.10 ---\n- fixed vulnerability discovered by ADLab of Venustech (command injection, but requires admin access)\n- webdav display UPPER/CASE/FULL/PATH with some webdav client\n- standalone extplorer webdav does not work with PHP7\n- CVE-2016-4313: archive path traversal vulnerability in extplorer 2.1.9\n- #202 Users with read only permissions should not be able to extract archives.\n- added indonesian language files\n\n--- version 2.1.9 ---\n- fixed PHP 7 compatibility issues\n- raising PHP compatibility to PHP >= 5.4\n\n--- version 2.1.8 ---\n- added security functions for protection against CSRF attacks\n- fixed \"directories with the name '0' are not loading\"\n\n--- version 2.1.7 ---\n- fixed SWFUpload against XSS vulnerabilities\n- fixed XSS vulnerability in file list\n\n--- version 2.1.6 ---\n- fixed https usage for ports other than 443\n- fixed XSS issue related to PHP_SELF\n- added date range filtering to file search\n- simplified search function\n- fixed scrambled non-ASCII file names on UTF-8 systems\n\n--- version 2.1.5 ---\n- fixed doubled subdirectories in directory tree\n- fixed wrong Joomla path detection (security issue on some systems)\n\n--- version 2.1.4 ---\n- fixed security issues found by Trustwave SpiderLabs, Vikas Singhal\n- update to the latest version of Archive_Tar\n- fixed version check link, now points to extplorer.net\n\n--- version 2.1.3 ---\n- fixed serious login vulnerability reported by Brendan Coles of itsecuritysolutions.org (the only changed file is /include/users.php)\n\n--- version 2.1.2 ---\n- hide the top and bottom bar in J! 3.0\n- fixed installer for J! 2.5\n\n--- version 2.1.1 ---\n- Joomla! 3.0 compatibility\n\n--- version 2.1.0 ---\n\n- fixed an XSS-vulnerability (impact: medium, users needs to be logged in)\n\n--- version 2.1.0 RC5 released ---\n\n- fixed password change functionality\n\n--- version 2.1.0 RC4 released ---\n\n- updated version check to work with J! 1.7\n- implemented PHPass Library for more secure hashing of passwords: http://www.openwall.com/phpass/ (backwards compatible with previous md5 hashing method)\n- updated to ExtJS 3.4.0 (brings support for IE9)\n- fixed file-disclosure issue reported by colonelxc@users.sourceforge.net\n- support for files with non-ascii chars for editing (thanks gr8ron)\n- fixed a fatal error in the webdav module\n- added ability to load without fetchscript.php (when it's inaccessible due to server permission problems)\n\n--- version 2.1.0 RC3 released ---\n\n- fixed filesize for files > 2GB\n- works and installs on Joomla! 1.6 now\n\n--- version 2.1.0 RC2 released ---\n\n- updated to ExtJS 3.3.1\n- fixed Flash Upload\n- updated to SWFUPload 2.5 beta\n- fixed deprecated warnings because of ereg functions\n- fixed some FTP file operations (upload, copy, move, delete)\n- fixed visibility of user form fields (form appeared empty)\n- fixed editable file types detection (+ added .ini)\n\n--- version 2.1.0 RC1 released ---\n- finally added the File Diff Feature\n- added RAR extraction feature\n- updated to ExtJS 3.2.1\n- only editable files are shown in source view now, viewing all other files will lead to a redirected to \"download\"\n- PDF files now open inline in an iframe\n\n--- version 2.1.0 beta6 released ---\n- updated to ExtJS 3.0.3\n\n--- version 2.1.0 beta5 released ---\n\n- added nice slide-in message box for success messages\n- removed deprecated ZIP library\n\n--- version 2.1.0 beta4 released ---\n\n- changed Save/Reopen/Cancel buttons in Edit View to appear in the top toolbar\n- changed directory drop-down lists to a vista-like location bar\n- new: Flash Upload! Using SWFUploadPanel\n- added pluggable authentication system\n\n--- version 2.1.0 beta3 released ---\n\n- changed default state of \"Show Directories\" to enabled\n- changed Edit Window to appear in a new Tab per File\n- assigned Keyboard Events to the Grid (Delete, Ctrl-A, Ctrl-C, Ctrl-X)\n- updated to ExtJS3 RC2\n- updated EditArea to version 0.8.1.1 (loads faster and is more stable)\n\n--- version 2.1.0 beta released ---\n\n- allowing Download by users with \"view\" permission\n- updated Services-JSON class to version 0.9.0\n- updated GeSHi to version 1.0.8.3\n- moved from ExtJS 1.1 to ExtJS 2.2\n\n-- version 2.0.1 released (2009-01-15) ----\n\n- added script for WebDAV access (disabled by default, requires 2 database tables and DB login credentials)\n- fixed a security issue within script initialization\n\n-- version 2.0.0 stable released (2008-08-05) ----\n\n- added .csv to the editable file types\n- when copying/moving multiple directories, only the first directory was processed\n- fixed failing extraction of larger archives (\"Failed to connect to the server\")\n- updated Editarea to 0.7.1.3\n- fixed browsing & working on external FTP servers\n- fixed dirselectors not working in FTP mode\n- fixed file-mode switch link\n\n-- version 2.0.0 RC4 released (2008-05-31) ----\n\n- fixed installation package for Joomla! 1.5\n- added Danish Language Files (thanks to Ronny Buelund!)\n\n-- version 2.0.0 RC3 released (2008-05-31) ----\n\n- [ 1944163 ] In germanf.php fehlt ein Eintrag\n- fixed compatibility problem with JomComment+MyBlog (Services_JSON was redeclared)\n- switched from \"Codepress\" to \"EditArea\" (http://www.cdolivet.net/index.php?page=editArea), which gives a lot of advantages:\n\t* faster loading of large files\n\t* built-in toggle feature\n\t* built-in Find, Search+Replace and Jump-To-Line Features\n\t\n-- version 2.0.0 RC3 released (2008-05-26) ----\n\n- fixed Cross-Site Scripting & File Disclosure Vulnerability\n- fixed MimeType detection for search results\n\n-- version 2.0.0 RC2 released (2008-02-10) ----\n\n- fixed Standalone scripts.zip extraction error\n- re-added System Info (moved to \"About\" Window)\n- implemented basic UTF-8 support for file mode\n- changed [ 1800028 ] Need to enlarge file edit box, or allow for full screen\n- fixed [ 1791706 ] incorrect error reporting\n- fixed [ 1790536 ] Browsing directory incorrect\n- fixed [ 1782937 ] when unzipping a zip containing a zip: zip not present!\n\n-- version 2.0.0 RC1 released ----\n\n- fixed [ 1755938 ] status bar messages truncated when path is too long\n- fixed [ 1759450 ] No textfield and browse button in upload file on IE7\n- fixed [ 1762000 ] copy a file from a subfolder to \"root\" folder doesn't work\n- fixed [ 1766233 ] Chmod error in FTP mode\n- fixed [ 1761083 ] IE7 closing button & seach action (file search - subdirectories weren't included)\n\n--- version 2.0.0 beta5 released ----\n\n- added Swedish and Slovenian Language Files\n- set \"zip\" as default archive type\n- added message box that prevents eXtplorer usage on Joomla! 1.0.x versions >= 1.0.13 and explains why.\n- added Joomla! version check\n- implemented some changes for compatibility on Windows Systems with IIS running\n\n--- version 2.0.0 beta4 released ----\n\n- fixed header-only problems on Mambo/Joomla! < 1.0.10\n- added Server-to-Server transfer capabilities (using fopen, cURL or fsockopen)\n- fixed [#6092] Some strings remained hardcoded\n- fixed [ 1754755 ] Save button when uploading file not translated\n- fixed the Frontend Browsing part (when being used as a Joomla! component)\n- updated finnish and french language file\n- updated ExtJS to 1.1 RC1, included Konqueror Patch\n- fixed [ 1752904 ] error on admin dialog opening\n- fixed [ 1752901 ] Combo on Login page doesn't work in IE6 and 7\n- fixed [ 1752534 ] Non-static method ext_Lang::msg()\n- removed dialog_status from onHide function for the dialog\n- fixed bugs in the language files  with undefined properties of non-existant var $_VERSION\n- fixed bug with undefined var $acl\n\n--- version 2.0.0 beta4 released ----\n\n- fixed a bug which caused that a maximum of 50 directories in the same level were listed in the tree, not all\n- fixed a bug with CodePress - didn't allow to edit files (when used in Joomla!)\n- added a check to the standalone version to extract the contents of the file \"scripts.zip\" online and throw a warning if it doesn't succeed.\n- removed the status bar from the Dialogs, moved the status bat into the Paging Toolbar\n- added CSS styles to make the dropdown lists smaller\n\n--- version 2.0.0 beta3 released ----\n\n- re-activated User Management for the stand-alone version\n- fixed a critical error which caused deletion of directories although \"Cancel\" was clicked\n- fixed an error which prevented correct listing of numeric directories/files\n\n--- version 2.0.0 beta2 released ----\n- added double-click action which opens the Context Menu in the grid (Opera and Konqueror don't allow custom right-click menus)\n- applied patches to ExtJS to allow usage with Konqueror\n- added new ext_Lang class to be able to escape quotes and line endings for using it in JavaScript Strings\n- fixed node context menu displaying outside of view\n- added the fetchscript.php file to bundle and compress javascript and stylesheet files\n  (Sending compressed js and css files significantly reduces the download size for ExtJS)\n\n--- version 2.0.0 beta1 released ----\n\n- fixed the \"symlink points to target which can't be accessed\" problem\n- fixed \"out of memory\" problems\n- directory names changed (no directories starting with a '.' anymore now)\n- completely changed layout: directory tree, file grid with renaming, context menu, drag&drop\n- added the ExtJS 1.0.1a library\n\n\n--- version 1.6.0 released ----\n\n- archives do not contain the whole file path anymore now, but only the relative one\n- added possibility to specify a directory where an archive file is saved to (allows to create archives even when the currenty directory is not writable)\n- added the great CodePress Sytnax Highlighting Editor (http://codepress.fermads.net/)\n- removed the extra spaces in the directory path\n- fixed the \"Strict Standards\" error (non-static method called statically)\n\n--- version 1.5.1 released ----\n\n- added ftp logout function to allow different ftp logins during one admin session\n- added possibility to specify an FTP host name and port (other than localhost:21)\n- bookmark functionality fixes (thanks to pokemon!)\n- fixed a critical error where wrong permissions would be applied to an uploaded file in FTP mode\n\t(leading to a 403 error on some servers)\n\t\n--- version 1.5.0 released ---\n\n- changed the way errors are displayed (+nice styling).\n- added support for *symbolic links*. You can create and delete links, but not change the target. You will have to create a new link to do so.\n\n- eXtplorer is an FTP client now! - added PEAR'S Net_FTP package to allow local FTP access/transactions\n\n- changed Archiving Section to ajax-based step-by-step system to prevent time-outs\n- added PEAR Package File_Archive to allow better archive handling\n- changed file links in the directory list to \"Edit\" or \"Download\"\n- added a simple file-based bookmark system\n- changed the download function to allow larger downloads (100MB+)\n- replaced hardcoded english strings with new variables (thanks to Paulino Michelazzo!)\n\n--- version 1.4.0 released ---\n\n- added a new \"View File\" feature to dispay a file's source code with GeSHi syntax highlighting\n\n- checking now, if a remembered directory exists (it might have been deleted meanwhile)\n- added line number / column monitoring on the \"Edit file\" form\n\tit also allows to jump to a certain line number\n- added feature to allow overwriting existing files on upload\n- fixed directory chmod issues \n\tDetails: when running a *chmod* command on files and directories \n\twith permissions that do not include \"execute\", directories would become inaccessible (e.g. d--------- (root). Tip by John, thanks!)\n- added basic frontend directory browsing and file download feature (not comparable to Docman or ReMOSitory, \n\tit's just a directory browser, no descriptions, no download counter!)\n\t!DISABLED BY DEFAULT!\n\tEnable by editing the file\n\t/components/com_extplorer/configuration.jx.php\n\n--- version 1.3.3 released ---\n\n- fixed a wrong image source (menu_divider.gif => png)\n- fixed a fatal error when using eXtplorer on installations with the SafeMode hack\n- added Bulgarian language (thanks to Ivo Apostolov)\n- fixed download problems under Mambo 4.5.2.3 with gzip compression = On\n\n\n--- version 1.3.2 released ---\n\n- fixed various problems (create file/directory, archiving, download) with $mosConfig_absolute_path\n\n\n--- version 1.3.1 released ---\n\n- last visited directory is stored in the session for quick go-back\n- updated finnish language\n- added Icelandic language\n- fixed an error which caused icons not to display\n  in directories outside of the Joomla/Mambo root directory\n\n--- version 1.3.0 released ---\n\n- the home directory is now ONE LEVEL ABOVE the joomla/mambo directory.\n\tIf you have joomla inside \n\t/public_html/\n\tYou will be able to browse to the root directory\n\t/\n\t! Check if you want this behaviour. When not, see /config/conf.php line 41....\n- created archives don't contain the full path anymore, but the relative path from the mosConfig_absolute_path\n- converted transparent .png to .gif\n- removed the IE transparency fix, which caused IE to slow down (really long load times!)\n- updated the language files\n- \"Chmod\", \"Edit\" and \"Delete\" links are not active now, when the file is not chmodable, writable or deletable\n- delete alert box will display the name of the file that is to be deleted\n- added a checkbox to chmod form, so the user can decide wether to chmod rescursively or not\n- added a rename feature\n- current user ID and group ID (on a *nix OS) are displayed correctly now\n- component name changed to \"eXtplorer\"\n\n--- version 1.2.1 released ---\n\n- bug fix: File Upload Icon is grey although file uploads are allowed\n- bug fix: [#4944] mamboXplorer strips \\r\\n to just rn\n- added Unzip / Unarchive Feature (Feature Request #6171)\n  to unpack archive types: zip, gz, bz2\n  directly on your webspace.\n- fix for the PNG Fix.\n\n--- version 1.2a released ---\n\n- new language variables + more languages\n- nice X - Icon for components Menu. thanks to Michael!\n- added PNG transparency fix for IE\n- added Owner / Group information to File List\n- bug fix: \"$ok @cmod\" changed to \"$ok = @chmod\"\n\n--- version 1.2 released ---\n- removed full path from Archive ( tar.gz /bzip2 Archive Creation)\n- added ability to change permissions recursiveley through all subdirectories\n\n--- version 1.1 released ---\n", "<?php\n// ensure this file is being included by a parent file\nif( !defined( '_JEXEC' ) && !defined( '_VALID_MOS' ) ) die( 'Restricted access' );\n/**\n * MAIN FILE! (formerly known as index.php)\n * \n * @version $Id: admin.extplorer.php 247 2016-02-23 10:06:18Z soeren $\n * \n * @package eXtplorer\n * @copyright soeren 2007-2018\n * @author The eXtplorer project (http://extplorer.net)\n * @author The\tThe QuiX project (http://quixplorer.sourceforge.net)\n * @license\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n * \n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n * \n * Alternatively, the contents of this file may be used under the terms\n * of the GNU General Public License Version 2 or later (the \"GPL\"), in\n * which case the provisions of the GPL are applicable instead of\n * those above. If you wish to allow use of your version of this file only\n * under the terms of the GPL and not to allow others to use\n * your version of this file under the MPL, indicate your decision by\n * deleting  the provisions above and replace  them with the notice and\n * other provisions required by the GPL.  If you do not delete\n * the provisions above, a recipient may use your version of this file\n * under either the MPL or the GPL.\"\n * \n *\n * This is a component with full access to the filesystem of your joomla Site\n * I wouldn't recommend to let in Managers\n * allowed: Superadministrator\n**/\n\n// The eXtplorer version number\n$GLOBALS['ext_version'] = '2.1.12';\n$GLOBALS['ext_home'] = 'http://extplorer.net';\n$dir = '';\n//------------------------------------------------------------------------------\nif( defined( 'E_STRICT' ) ) { // Suppress Strict Standards Warnings\n\terror_reporting(E_ALL & ~E_STRICT & ~E_NOTICE);\n}\n//------------------------------------------------------------------------------\numask(0002); // Added to make created files/dirs group writable\n//------------------------------------------------------------------------------\nrequire_once( dirname( __FILE__) . \"/include/init.php\" );\t// Init\n\nif( !@is_object($my) && is_callable(array('jfactory','getuser'))) {\n\t$my = JFactory::getUser();\n}\n\nif( @is_object($my)) {\n\t\n\tif( ext_isJoomla('1.6', '>=' )) {\n\t\t$access = $my->authorise('core.admin');\n\t} else {\n\t\t$access = $my->usertype == 'Super Administrator';\n\t}\n\t\n\tif (!$access) {\n\t\t$url = htmlspecialchars($_SERVER['PHP_SELF']);\n\t\tif (headers_sent()) {\n\t\t\techo \"<script>document.location.href='$url';</script>\\n\";\n\t\t} else {\n\t\t\t@ob_end_clean(); // clear output buffer\n\t\t\theader( 'HTTP/1.1 403 Forbidden' );\n\t\t\theader( \"Location: \". $url );\n\t\t}\n\t}\n}\n\n/** Needed to keep the filelist in the XML installer file up-to-date\n$path = dirname(__FILE__);\n$filelist = extReadDirectory( $path, '.', true, true );\n$contents ='';\nforeach($filelist as $file ) {\n\tif( is_dir( $file ) || strstr(dirname($file), \"scripts\" )) continue;\n\t$filepath = str_replace( $path.'/', '', $file );\n\t$contents .= '<filename>'.$filepath.\"</filename>\\n\";\n}\nfile_put_contents( 'extplorer_filelist.txt', $contents );\n*/\n//------------------------------------------------------------------------------\nif( $action == \"post\" )\n  $action = extGetParam( $_REQUEST, \"do_action\" );\nelseif( empty( $action ))\n  $action = \"list\";\n\n\nif( $action != 'show_error') {\n\text_Result::init();\n}\n\nif( defined( '_LOGIN_REQUIRED')) return;\n\n// Empty the output buffer if this is a XMLHttpRequest\nif( ext_isXHR() ) {\n\terror_reporting(0);\n\twhile( @ob_end_clean() );\n}\n\nif( file_exists( _EXT_PATH . '/include/'. strtolower(basename( $action )) .'.php') ) {\n\trequire_once( _EXT_PATH . '/include/'. strtolower(basename( $action )) .'.php');\n}\n$classname = 'ext_'.$action;\nif( class_exists(strtolower($classname)) && is_callable(array($classname,'execaction'))) {\n\t$handler = new $classname();\n\t$handler->execAction( $dir, $item );\n} else {\n\n\tswitch($action) {\t\t// Execute actions, which are not in class file\n\n\t//------------------------------------------------------------------------------\n\t// COPY/MOVE FILE(S)/DIR(S)\n\tcase \"copy\":\tcase \"move\":\n\t\trequire_once( _EXT_PATH .\"/include/copy_move.php\" );\n\t\text_copy_move_items($dir);\n\tbreak;\n\n\t//------------------------------------------------------------------------------\n\t// SEARCH FOR FILE(S)/DIR(S)\n\tcase \"search\":\n\t\trequire_once( _EXT_PATH .\"/include/search.php\" );\n\t\text_search_items($dir);\n\tbreak;\n\n\t//------------------------------------------------------------------------------\n\t// USER-ADMINISTRATION\n\tcase \"admin\":\n\t\trequire_once( _EXT_PATH . \"/include/admin.php\" );\n\t\text_show_admin($dir);\n\tbreak;\n\n\t//------------------------------------------------------------------------------\n\t\t// BOOKMARKS\n\tcase 'modify_bookmark':\n\t\t$task = extGetParam( $_REQUEST, 'task' );\n\t\trequire_once( _EXT_PATH.'/include/bookmarks.php' );\n\t\text_modify_bookmark( $task, $dir );\n\n\t\tbreak;\n\t//------------------------------------------------------------------------------\n\tcase 'show_error':\n\t\text_Result::sendResult('', false, '');\n\t\tbreak;\n\tcase'get_about':\n\t\trequire_once( _EXT_PATH . \"/include/system_info.php\" );\n\t\tsystem_info();\n\t\tbreak;\n\t//------------------------------------------------------------------------------\n\t// DEFAULT: LIST FILES & DIRS\n\tcase \"getdircontents\":\n\t\t\trequire_once( _EXT_PATH . \"/include/list.php\" );\n\t\t\t$requestedDir = stripslashes(str_replace( '_RRR_', '/', extGetParam( $_REQUEST, 'node' )));\n\t\t\tif( empty($requestedDir) || $requestedDir == 'ext_root') {\n\t\t\t\t$requestedDir = $dir;\n\t\t\t}\n\t\t\t\n\t\t\tsend_dircontents( $requestedDir, extGetParam($_REQUEST,'sendWhat','files') );\n\t\t\tbreak;\n\tcase 'get_dir_selects':\n\t\t\techo get_dir_selects( $dir );\n\t\t\tbreak;\n\tcase 'chdir_event':\n\t\t\trequire_once( _EXT_PATH.'/include/bookmarks.php' );\n\t\t\t$response = Array( 'bookmarks' => ext_list_bookmarks($dir) );\n\t\t\t$classname = class_exists('ext_Json') ? 'ext_Json' : 'Services_JSON';\n\t\t\t$json = new $classname();\n\t\t\techo $json->encode( $response );\n\t\t\tbreak;\n\tcase 'get_image':\n\t\t\trequire_once( _EXT_PATH . \"/include/view.php\" );\n\t\t\text_View::sendImage( $dir, $item );\n\tcase 'ftp_authentication': \n\tcase 'ssh2_authentication':\n\tcase 'extplorer_authentication':\n\t\t\t$auth_info = explode('_', $action);\n\t\t\t$auth_classname = 'ext_'.$action;\n\t\t\trequire_once(_EXT_PATH.'/include/authentication/'.$auth_info[0].'.php');\n\t\t\t$auth_plugin = new $auth_classname();\n\t\t\t$auth_plugin->onShowLoginForm();\n\t\t\tbreak;\n\tdefault:\n\t\trequire_once( _EXT_PATH . \"/include/list.php\" );\n\t\text_List::execAction($dir);\n\t//------------------------------------------------------------------------------\n\t}\n// end switch-statement\n}\n//------------------------------------------------------------------------------\n// Disconnect from ftp server\nif( ext_isFTPMode() && is_object($GLOBALS['FTPCONNECTION']) ) {\n\t$GLOBALS['FTPCONNECTION']->disconnect();\n}\n\n// Empty the output buffer if this is a XMLHttpRequest\nif( ext_isXHR() ) {\n\text_exit();\n}\n", "<?php\n// ensure this file is being included by a parent file\nif( !defined( '_JEXEC' ) && !defined( '_VALID_MOS' ) ) die( 'Restricted access' );\n/**\n * @version $Id: archive.php 248 2016-02-26 18:29:50Z soeren $\n * @package eXtplorer\n * @copyright soeren 2007-2015\n * @author The eXtplorer project (http://extplorer.net)\n * @author The\tThe QuiX project (http://quixplorer.sourceforge.net)\n * @license\n * @version $Id: archive.php 248 2016-02-26 18:29:50Z soeren $\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n * \n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n * \n * Alternatively, the contents of this file may be used under the terms\n * of the GNU General Public License Version 2 or later (the \"GPL\"), in\n * which case the provisions of the GPL are applicable instead of\n * those above. If you wish to allow use of your version of this file only\n * under the terms of the GPL and not to allow others to use\n * your version of this file under the MPL, indicate your decision by\n * deleting  the provisions above and replace  them with the notice and\n * other provisions required by the GPL.  If you do not delete\n * the provisions above, a recipient may use your version of this file\n * under either the MPL or the GPL.\"\n * \n*/\n\n/**\n * Zip & TarGzip Functions\n *\n */\nclass ext_Archive extends ext_Action {\n\n\tfunction execAction( $dir, $item=\"\" ) {\n\n\t\tif(($GLOBALS[\"permissions\"]&01)!=01) {\n\t\t\text_Result::sendResult('archive', false, $GLOBALS[\"error_msg\"][\"accessfunc\"]);\n\t\t}\n\t\tif(!$GLOBALS[\"zip\"] && !$GLOBALS[\"tgz\"]) {\n\t\t\text_Result::sendResult('archive', false, $GLOBALS[\"error_msg\"][\"miscnofunc\"]);\n\t\t}\n\n        // CSRF Security Check\n        if( !ext_checkToken($GLOBALS['__POST'][\"token\"]) ) {\n            ext_Result::sendResult('tokencheck', false, 'Request failed: Security Token not valid.');\n        }\n\t\t$allowed_types = array( 'zip', 'tgz', 'tbz', 'tar' );\n\n\t\t// If we have something to archive, let's do it now\n\t\tif(extGetParam($_POST, 'confirm' ) == 'true' ) {\n\t\t\t$saveToDir = utf8_decode($GLOBALS['__POST']['saveToDir']);\n\t\t\tif( !file_exists( get_abs_dir($saveToDir ) )) {\n\t\t\t\text_Result::sendResult('archive', false, ext_Lang::err('archive_dir_notexists'));\n\t\t\t}\n\t\t\tif( !is_writable( get_abs_dir($saveToDir ) )) {\n\t\t\t\text_Result::sendResult('archive', false, ext_Lang::err('archive_dir_unwritable'));\n\t\t\t}\n\t\t\trequire_once( _EXT_PATH .'/libraries/Archive/archive.php' );\n\n\t\t\tif( !in_array(strtolower( $GLOBALS['__POST'][\"type\"] ), $allowed_types )) {\n\t\t\t\text_Result::sendResult('archive', false, ext_Lang::err('extract_unknowntype').': '.htmlspecialchars($GLOBALS['__POST'][\"type\"]));\n\n\t\t\t}\n\t\t\t// This controls how many files are processed per Step (it's split up into steps to prevent time-outs)\n\t\t\t$files_per_step = 2000;\n\n\t\t\t$cnt=count($GLOBALS['__POST'][\"selitems\"]);\n\t\t\t$abs_dir= get_abs_dir($dir);\n\t\t\t$name=basename(stripslashes($GLOBALS['__POST'][\"name\"]));\n\t\t\tif($name==\"\") {\n\t\t\t\text_Result::sendResult('archive', false, $GLOBALS[\"error_msg\"][\"miscnoname\"]);\n\t\t\t}\n\n\t\t\t$startfrom = extGetParam( $_REQUEST, 'startfrom', 0 );\n\n\t\t\t$dir_contents_cache_name = 'ext_'.md5(implode(null, $GLOBALS['__POST'][\"selitems\"]));\n\t\t\t$dir_contents_cache_file = _EXT_FTPTMP_PATH.'/'.$dir_contents_cache_name.'.txt';\n\n\t\t\t$archive_name = get_abs_item($saveToDir,$name);\n\t\t\t$fileinfo = pathinfo( $archive_name );\n\n\t\t\tif( empty( $fileinfo['extension'] )) {\n\t\t\t\t$archive_name .= \".\".$GLOBALS['__POST'][\"type\"];\n\t\t\t\t$fileinfo['extension'] = $GLOBALS['__POST'][\"type\"];\n\n\t\t\t\tforeach( $allowed_types as $ext ) {\n\t\t\t\t\tif( $GLOBALS['__POST'][\"type\"] == $ext && @$fileinfo['extension'] != $ext ) {\n\t\t\t\t\t\t$archive_name .= \".\".$ext;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( $startfrom == 0 ) {\n\t\t\t\tfor($i=0;$i<$cnt;$i++) {\n\n\t\t\t\t\t$selitem=stripslashes($GLOBALS['__POST'][\"selitems\"][$i]);\n\t\t\t\t\tif( $selitem == 'ext_root') { \n\t\t\t\t\t\t$selitem = '';\n\t\t\t\t\t}\n\t\t\t\t\tif( is_dir( utf8_decode($abs_dir .\"/\". $selitem ))) {\n\t\t\t\t\t\t$items = extReadDirectory(utf8_decode($abs_dir .\"/\".  $selitem), '.', true, true );\n\t\t\t\t\t\tforeach ( $items as $item ) {\n\t\t\t\t\t\t\tif( is_dir( $item ) || !is_readable( $item ) || $item == $archive_name ) continue;\n\t\t\t\t\t\t\t$v_list[] = str_replace('\\\\', '/', $item );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$v_list[] = utf8_decode(str_replace('\\\\', '/', $abs_dir .\"/\". $selitem ));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( count($v_list) > $files_per_step ) {\n\t\t\t\t\tif( file_put_contents($dir_contents_cache_file, implode(\"\\n\", $v_list )) == false ) {\n\t\t\t\t\t\text_Result::sendResult('archive', false, 'Failed to create a temporary list of the directory contents' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$file_list_string = file_get_contents($dir_contents_cache_file);\n\t\t\t\tif( empty( $file_list_string )) {\n\t\t\t\t\text_Result::sendResult('archive', false, 'Failed to retrieve the temporary list of the directory contents' );\n\t\t\t\t}\n\t\t\t\t$v_list = explode(\"\\n\", $file_list_string );\n\t\t\t}\n\t\t\t$cnt_filelist = count( $v_list );\n\t\t\t// Now we go to the right range of files and \"slice\" the array\n\t\t\t$v_list = array_slice( $v_list, $startfrom, $files_per_step-1  );\n\n\t\t\t$remove_path = $GLOBALS[\"home_dir\"];\n\t\t\tif( $dir ) {\n\t\t\t\t$remove_path .= $dir;\n\t\t\t}\n\t\t\t$remove_path = str_replace( '\\\\', '/', realpath($remove_path) ).'/';\n\t\t\t$debug = 'Starting from: '.$startfrom.\"\\n\";\n\t\t\t$debug .= 'Files to process: '.$cnt_filelist.\"\\n\";\n\t\t\t$debug .= implode( \"\\n\", $v_list );\n\t\t\t//file_put_contents( 'log.txt', $debug, FILE_APPEND );\n\n\t\t\t// Do some setup stuff\n\t\t\tini_set('memory_limit', '128M');\n\t\t\t@set_time_limit( 0 );\n\t\t\t//error_reporting( E_ERROR | E_PARSE );\n\t\t\t$result = extArchive::create( $archive_name, $v_list, $GLOBALS['__POST'][\"type\"], '', $remove_path\t);\n\n\t\t\tif( PEAR::isError( $result ) ) {\n\t\t\t\text_Result::sendResult('archive', false, $name.': '.ext_Lang::err('archive_creation_failed').' ('.$result->getMessage().$archive_name.')' );\n\t\t\t}\n\t\t\t$classname = class_exists('ext_Json') ? 'ext_Json' : 'Services_JSON';\n\t\t\t$json = new $classname();\n\t\t\tif( $cnt_filelist > $startfrom+$files_per_step ) {\n\n\t\t\t\t$response = Array( 'startfrom' => $startfrom + $files_per_step,\n\t\t\t\t'totalitems' => $cnt_filelist,\n\t\t\t\t'success' => true,\n\t\t\t\t'action' => 'archive',\n\t\t\t\t\t'token' => ext_getToken(),\n\t\t\t\t'message' => sprintf( ext_Lang::msg('processed_x_files'), $startfrom + $files_per_step, $cnt_filelist )\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t@unlink($dir_contents_cache_file);\n\t\t\t\tif( $GLOBALS['__POST'][\"type\"] == 'tgz' || $GLOBALS['__POST'][\"type\"] == 'tbz') {\n\t\t\t\t\tchmod( $archive_name, 0644 );\n\t\t\t\t}\n\t\t\t\t$response = Array( 'action' => 'archive',\n\t\t\t\t'success' => true,\n\t\t\t\t'token' => ext_getToken(),\n\t\t\t\t'message' => ext_Lang::msg('archive_created'),\n\t\t\t\t'newlocation' => ext_make_link( 'download', $dir, basename($archive_name) )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\techo $json->encode( $response );\n\t\t\text_exit();\n\t\t}\n\t\t$default_archive_type = 'zip';\n\t?>\n\t\t{\n\t\t\"xtype\": \"form\",\n\t\t\"id\": \"simpleform\",\n\t\t\"height\": \"200\",\n\t\t\"width\": \"350\",\n\t\t\"labelWidth\": 125,\n\t\t\"url\":\"<?php echo basename( $GLOBALS['script_name']) ?>\",\n\t\t\"dialogtitle\": \"<?php echo $GLOBALS[\"messages\"][\"actarchive\"] ?>\",\n\t\t\"frame\": true,\n\t\t\"items\": [{\n\t\t\t\"xtype\": \"textfield\",\n\t\t\t\"fieldLabel\": \"<?php echo ext_Lang::msg('archive_name', true ) ?>\",\n\t\t\t\"name\": \"name\",\n\t\t\t\"value\": \"<?php echo $GLOBALS['item'] . '.'. $default_archive_type ?>\",\n\t\t\t\"width\": \"200\"\n\t\t},\n\t\t{\n\t\t\t\"xtype\": \"combo\",\n\t\t\t\"fieldLabel\": \"<?php echo ext_Lang::msg('typeheader', true ) ?>\",\n\t\t\t\"store\": [\n\t\t\t\t\t['zip', 'Zip (<?php echo ext_Lang::msg('normal_compression', true ) ?>)'],\n\t\t\t\t\t['tgz', 'Tar/Gz (<?php echo ext_Lang::msg('good_compression', true ) ?>)'],\n\t\t\t\t\t<?php\n\t\t\t\t\tif(extension_loaded(\"bz2\")) {\n\t\t\t\t\t\techo \"['tbz', 'Tar/Bzip2 (\".ext_Lang::msg('best_compression', true ).\")'],\";\n\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t\t['tar', 'Tar (<?php echo ext_Lang::msg('no_compression', true ) ?>)']\n\t\t\t\t\t],\n\t\t\t\"displayField\":\"typename\",\n\t\t\t\"valueField\": \"type\",\n\t\t\t\"name\": \"type\",\n\t\t\t\"value\": \"<?php echo $default_archive_type ?>\",\n\t\t\t\"triggerAction\": \"all\",\n\t\t\t\"hiddenName\": \"type\",\n\t\t\t\"disableKeyFilter\": \"true\",\n\t\t\t\"editable\": \"false\",\n\t\t\t\"mode\": \"local\",\n\t\t\t\"allowBlank\": \"false\",\n\t\t\t\"selectOnFocus\":\"true\",\n\t\t\t\"width\": \"200\",\n\t\t\t\"listeners\": { \"select\": { \n\t\t\t\t\t\t\tfn: function(o, record ) {\n\t\t\t\t\t\t\t\tform = Ext.getCmp(\"simpleform\").getForm();\n\t\t\t\t\t\t\t\tvar nameField = form.findField(\"name\").getValue();\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif( nameField.indexOf( '.' ) > 0 ) {\n\t\t\t\t\t\t\t\t\tform.findField('name').setValue( nameField.substring( 0, nameField.indexOf('.')+1 ) + o.getValue() );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tform.findField('name').setValue( nameField + '.'+ o.getValue());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t}\n\t\t\n\t\t\n\t\t}, {\n\t\t\t\"xtype\": \"textfield\",\n\t\t\t\"fieldLabel\": \"<?php echo ext_Lang::msg('archive_saveToDir', true ) ?>\",\n\t\t\t\"name\": \"saveToDir\",\n\t\t\t\"value\": \"<?php echo str_replace(\"'\", \"\\'\", $dir ) ?>\",\n\t\t\t\"width\": \"200\"\n\t\t},{\n\t\t\t\"xtype\": \"checkbox\",\n\t\t\t\"fieldLabel\": \"<?php echo ext_Lang::msg('downlink', true ) ?>?\",\n\t\t\t\"name\": \"download\",\n\t\t\t\"checked\": \"true\"\n\t\t}\n\t\t],\n\t\t\"buttons\": [{\n\t\t\t\"text\": \"<?php echo ext_Lang::msg( 'btncreate', true ) ?>\", \n\t\t\t\"type\": \"submit\", \n\t\t\t\"handler\": function() { \n\t\t\t\tExt.ux.OnDemandLoad.load( \"<?php echo $GLOBALS['script_name'] ?>?option=com_extplorer&action=include_javascript&file=archive.js\", \n\t\t\t\t\t\t\t\t\t\t\tfunction(options) { submitArchiveForm(0) } ); \n\t\t\t}\n\t\t},{\n\t\t\t\"text\": \"<?php echo ext_Lang::msg( 'btncancel', true ) ?>\", \n\t\t\t\"handler\": function() { Ext.getCmp(\"dialog\").destroy() }\n\t\t}]\n}\n\n\t<?php\n\t}\n}\n//------------------------------------------------------------------------------\n?>", "<?php\n// ensure this file is being included by a parent file\nif( !defined( '_JEXEC' ) && !defined( '_VALID_MOS' ) ) die( 'Restricted access' );\n/**\n * @version $Id: chmod.php 243 2015-08-31 18:33:58Z soeren $\n * @package eXtplorer\n * @copyright soeren 2007-2015\n * @author The eXtplorer project (http://extplorer.net)\n * @author The\tThe QuiX project (http://quixplorer.sourceforge.net)\n * \n * @license\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n * \n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n * \n * Alternatively, the contents of this file may be used under the terms\n * of the GNU General Public License Version 2 or later (the \"GPL\"), in\n * which case the provisions of the GPL are applicable instead of\n * those above. If you wish to allow use of your version of this file only\n * under the terms of the GPL and not to allow others to use\n * your version of this file under the MPL, indicate your decision by\n * deleting  the provisions above and replace  them with the notice and\n * other provisions required by the GPL.  If you do not delete\n * the provisions above, a recipient may use your version of this file\n * under either the MPL or the GPL.\"\n * \n * \n */\n\n/**\n * Permission-Change Functions\n *\n */\nclass ext_Chmod extends ext_Action {\n\tfunction execAction($dir, $item) {\t\t// change permissions\n\n\t\tif(($GLOBALS[\"permissions\"]&01)!=01) ext_Result::sendResult( 'chmod', false, $GLOBALS[\"error_msg\"][\"accessfunc\"]);\n\n        // CSRF Security Check\n        if( !ext_checkToken($GLOBALS['__POST'][\"token\"]) ) {\n            ext_Result::sendResult('tokencheck', false, 'Request failed: Security Token not valid.');\n        }\n\t\tif( !empty($GLOBALS['__POST'][\"selitems\"])) {\n\t\t\t$cnt=count($GLOBALS['__POST'][\"selitems\"]);\n\n\t\t}\n\t\telse {\n\t\t\t$GLOBALS['__POST'][\"selitems\"][]  = $item;\n\t\t\t$cnt = 1;\n\t\t}\n\t\tif( !empty($GLOBALS['__POST']['do_recurse'])) {\n\t\t\t$do_recurse = true;\n\t\t}\n\t\telse {\n\t\t\t$do_recurse = false;\n\t\t}\n\n\t\t// Execute\n\t\tif(isset($GLOBALS['__POST'][\"confirm\"]) && $GLOBALS['__POST'][\"confirm\"]==\"true\") {\n\t\t\t$bin='';\n\t\t\tfor($i=0;$i<3;$i++) for($j=0;$j<3;$j++) {\n\t\t\t\t$tmp=\"r_\".$i.$j;\n\t\t\t\tif(!empty($GLOBALS['__POST'][$tmp]) ) {\n\t\t\t\t\t$bin.='1';\n\t\t\t\t} else {\n\t\t\t\t\t$bin.='0';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( $bin == '0') { // Changing permissions to \"none\" is not allowed\n\t\t\t\text_Result::sendResult('chmod', false, $item.\": \".ext_Lang::err('chmod_none_not_allowed'));\n\t\t\t}\n\t\t\t$old_bin = $bin;\n\t\t\tfor($i=0;$i<$cnt;++$i) {\n\t\t\t\tif( ext_isFTPMode() ) {\n\t\t\t\t\t$mode = decoct(bindec($bin));\n\t\t\t\t} else {\n\t\t\t\t\t$mode = bindec($bin);\n\t\t\t\t}\n\t\t\t\t$item = $GLOBALS['__POST'][\"selitems\"][$i];\n\t\t\t\tif( ext_isFTPMode() ) {\n\t\t\t\t\t$abs_item = get_item_info( $dir,$item);\n\t\t\t\t} else {\n\t\t\t\t\t$abs_item = get_abs_item($dir,$item);\n\t\t\t\t}\n\t\t\t\tif(!$GLOBALS['ext_File']->file_exists( $abs_item )) {\n\t\t\t\t\text_Result::sendResult('chmod', false, $item.\": \".$GLOBALS[\"error_msg\"][\"fileexist\"]);\n\t\t\t\t}\n\t\t\t\tif(!get_show_item($dir, $item)) {\n\t\t\t\t\text_Result::sendResult('chmod', false, $item.\": \".$GLOBALS[\"error_msg\"][\"accessfile\"]);\n\t\t\t\t}\n\t\t\t\tif( $do_recurse ) {\n\t\t\t\t\t$ok = $GLOBALS['ext_File']->chmodRecursive( $abs_item, $mode );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif( get_is_dir( $abs_item )) {\n\t\t\t\t\t\t// when we chmod a directory we must care for the permissions\n\t\t\t\t\t\t// to prevent that the directory becomes not readable (when the \"execute bits\" are removed)\n\t\t\t\t\t\t$bin = substr_replace( $bin, '1', 2, 1 ); // set 1st x bit to 1\n\t\t\t\t\t\t$bin = substr_replace( $bin, '1', 5, 1 );// set  2nd x bit to 1\n\t\t\t\t\t\t$bin = substr_replace( $bin, '1', 8, 1 );// set 3rd x bit to 1\n\t\t\t\t\t\tif( ext_isFTPMode() ) {\n\t\t\t\t\t\t\t$mode = decoct(bindec($bin));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$mode = bindec($bin);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//ext_Result::sendResult('chmod', false, $GLOBALS['FTPCONNECTION']->pwd());\n\t\t\t\t\t$ok = @$GLOBALS['ext_File']->chmod( $abs_item, $mode );\n\t\t\t\t}\n\n\t\t\t\t$bin = $old_bin;\n\t\t\t}\n\n\t\t\tif($ok===false || PEAR::isError( $ok ) ) {\n\t\t\t\t$msg = $item.\": \".$GLOBALS[\"error_msg\"][\"permchange\"];\n\t\t\t\t$msg .= PEAR::isError( $ok ) ? ' [' . $ok->getMessage().']' : '';\n\t\t\t\text_Result::sendResult('chmod', false, $msg );\n\t\t\t}\n\t\t\text_Result::sendResult('chmod', true, ext_Lang::msg('permchange') );\n\t\t\treturn;\n\t\t}\n\t\tif( ext_isFTPMode() ) {\n\t\t\t$abs_item = get_item_info( $dir, $GLOBALS['__POST'][\"selitems\"][0]);\n\t\t} else {\n\t\t\t$abs_item = get_abs_item( $dir, $GLOBALS['__POST'][\"selitems\"][0]);\n\t\t\t$abs_item = utf8_decode($abs_item);\n\t\t}\n\n\t\t$mode = parse_file_perms(get_file_perms( $abs_item ));\n\t\tif($mode===false) {\n\t\t\text_Result::sendResult('chmod', false, $item.\": \".$GLOBALS[\"error_msg\"][\"permread\"]);\n\t\t}\n\t\t$pos = \"rwx\";\n\t\t$text = \"\";\n\t\tfor($i=0;$i<$cnt;++$i) {\n\t\t\t$s_item=get_rel_item($dir,$GLOBALS['__POST'][\"selitems\"][$i]);\n\t\t\tif(strlen($s_item)>50) $s_item=\"...\".substr($s_item,-47);\n\t\t\t$text .= $s_item.($i+1<$cnt ? ', ':'');\n\t\t}\n\t\t?>\n\t\t{\n\t\t\"xtype\": \"form\",\n\t\t\"id\": \"simpleform\",\n\t\t\"width\": \"300\",\n\t\t\"labelWidth\": 125,\n\t\t\"url\":\"<?php echo basename( $GLOBALS['script_name']) ?>\",\n\t\t\"dialogtitle\": \"<?php echo ext_Lang::msg('actperms') ?>\",\n\t\t\"title\" : \"<?php echo $text  ?>\",\n\t\t\"frame\": true,\n\t\t\"items\": [{\n\t\t\t\"layout\": \"column\",\n\t\t\t\"items\": [{\n\t<?php\n\t\t// print table with current perms & checkboxes to change\n\t\tfor($i=0;$i<3;++$i) {\n\t\t\t?>\n\t\t\t\"width\":80, \n\t\t\t\"title\":\"<?php echo ext_Lang::msg(array('miscchmod'=> $i ), true ) ?>\",\t\t\t\t\t\n\t\t\t\"items\": [{\n\t\t\t\t<?php\n\t\t\t\tfor($j=0;$j<3;++$j) {\n\t\t\t\t\t?>\n\t\t\t\t\t\"xtype\": \"checkbox\",\n\t\t\t\t\t\"boxLabel\":\"<?php echo $pos{$j}  ?>\",\n\t\t\t\t\t<?php if($mode{(3*$i)+$j} != \"-\") echo '\"checked\":true,' ?>\n\t\t\t\t\t\t\"name\":\"<?php echo \"r_\". $i.$j ?>\"\n\t\t\t\t\t}\t<?php\n\t\t\t\t\tif( $j<2 ) echo ',{';\n\t\t\t\t}\n\t\t\t\t?>\t\n\t\t\t\t]\n\t\t\t}\n\t\t<?php \n\t\t\tif( $i<2 ) echo ',{';\n\t\t}\n\t\t?>,{\n\t\t\t\"width\":400, \n\t\t\t\"style\":\"margin-left:10px\", \n\t\t\t\"clear\":true,\n\t\t\t\"html\": \"&nbsp;\"\n\t\t}]\n\n\t},{\n\t\t\"xtype\": \"checkbox\",\n\t\t\"fieldLabel\":\"<?php echo ext_Lang::msg('recurse_subdirs', true ) ?>\",\n\t\t\"name\":\"do_recurse\"\n\t}],\n\t\"buttons\": [{\n\t\t\"text\": \"<?php echo ext_Lang::msg( 'btnsave', true ) ?>\", \n\t\t\"handler\": function() {\n\t\t\tstatusBarMessage( '<?php echo ext_Lang::msg( 'permissions_processing', true ) ?>', true );\n\t\t\tform = Ext.getCmp(\"simpleform\").getForm();\n\t\t\tform.submit({\n\t\t\t\t//reset: true,\n\t\t\t\treset: false,\n\t\t\t\tsuccess: function(form, action) {\n\t\t\t\t\tstatusBarMessage( action.result.message, false, true );\n\t\t\t\t\tdatastore.reload();\n\t\t\t\t\tExt.getCmp(\"dialog\").destroy();\n\t\t\t\t},\n\t\t\t\tfailure: function(form, action) {\n\t\t\t\t\tstatusBarMessage( action.result.error, false, false );\n\t\t\t\t\tExt.Msg.alert('<?php echo ext_Lang::err( 'error', true ) ?>', action.result.error);\n\t\t\t\t},\n\t\t\t\tscope: form,\n\t\t\t\tparams: {\n\t\t\t\t\t\"option\": \"com_extplorer\", \n\t\t\t\t\t\"action\": \"chmod\", \n\t\t\t\t\t\"dir\": \"<?php echo stripslashes($GLOBALS['__POST'][\"dir\"]) ?>\", \n\t\t\t\t\t\"selitems[]\": ['<?php echo implode(\"','\", $GLOBALS['__POST'][\"selitems\"]) ?>'], \n\t\t\t\t\tconfirm: 'true',\n\t\t\t\t\ttoken: \"<?php echo ext_getToken() ?>\"\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},{\n\t\t\"text\": \"<?php echo ext_Lang::msg( 'btncancel', true ) ?>\", \n\t\t\"handler\": function() { Ext.getCmp(\"dialog\").destroy(); }\n\t}]\n}\n\t\n\t\t<?php\n\t}\n}\n//------------------------------------------------------------------------------\n?>", "<?php\n// ensure this file is being included by a parent file\nif( !defined( '_JEXEC' ) && !defined( '_VALID_MOS' ) ) die( 'Restricted access' );\n/**\n * @version $Id: functions.php 248 2016-02-26 18:29:50Z soeren $\n * @package eXtplorer\n * @copyright soeren 2007-2011\n * @author The eXtplorer project (http://extplorer.net)\n * @author The\tThe QuiX project (http://quixplorer.sourceforge.net)\n * \n * @license\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n * \n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n * \n * Alternatively, the contents of this file may be used under the terms\n * of the GNU General Public License Version 2 or later (the \"GPL\"), in\n * which case the provisions of the GPL are applicable instead of\n * those above. If you wish to allow use of your version of this file only\n * under the terms of the GPL and not to allow others to use\n * your version of this file under the MPL, indicate your decision by\n * deleting  the provisions above and replace  them with the notice and\n * other provisions required by the GPL.  If you do not delete\n * the provisions above, a recipient may use your version of this file\n * under either the MPL or the GPL.\"\n * \n */\n\n/**\n * THESE ARE NUMEROUS HELPER FUNCTIONS FOR THE OTHER INCLUDE FILES\n */\n\nfunction ext_make_link($_action,$_dir,$_item=NULL,$_order=NULL,$_srt=NULL,$languages=NULL, $extra=null) {\n\t// make link to next page\n\tif($_action==\"\" || $_action==NULL) $_action=\"list\";\n\n\tif($_item==\"\") $_item=NULL;\n\tif($_order==NULL) $_order=$GLOBALS[\"order\"];\n\tif($_srt==NULL) $_srt=$GLOBALS[\"direction\"];\n\tif($languages==NULL) $languages=(isset($GLOBALS[\"lang\"])?$GLOBALS[\"lang\"]:NULL);\n\n\t$link=$GLOBALS[\"script_name\"].\"?option=com_extplorer&action=\".$_action;\n\tif(!is_null($_dir )) {\n\t\t$link.=\"&dir=\".urlencode($_dir);\n\t}\n\tif($_item!=NULL) $link.=\"&item=\".urlencode($_item);\n\tif($_order!=NULL) $link.=\"&order=\".$_order;\n\tif($_srt!=NULL) $link.=\"&direction=\".$_srt;\n\tif($languages!=NULL) $link.=\"&lang=\".$languages;\n\tif(!is_null($extra)) {\n\t\t$link .= $extra;\n\t}\n\treturn $link;\n}\n//------------------------------------------------------------------------------\nfunction get_abs_dir($dir) {\t\t\t// get absolute path\n\tif( ext_isFTPMode() ) {\n\t\tif( $dir != '' && $dir[0] != '/' && $dir[1] != ':') {\n\t\t\t$dir = '/'.$dir;\n\t\t}\n\t\treturn $dir;\n\t}\n\t$abs_dir=file_exists($GLOBALS[\"home_dir\"]) ? $GLOBALS[\"home_dir\"] : $_SERVER[\"DOCUMENT_ROOT\"];\n\n\tif($dir!=\"\" && !@stristr( $dir, $abs_dir )) $abs_dir.=\"/\".$dir;\n\telseif(@stristr( $dir, $abs_dir )) $abs_dir = \"/\".$dir;\n\t/*else {\n\t\t$abs_dir = $dir;\n\t}*/\n\t$realpath = str_replace('\\\\', '/', realpath($abs_dir) );\n\tif( $realpath == '') {\n\t\treturn $abs_dir;\n\t}\n\telse {\n\t\treturn $realpath;\n\t}\n\n\treturn $realpath;\n}\n//------------------------------------------------------------------------------\nfunction get_abs_item($dir, $item) {\t\t// get absolute file+path\n\tif( is_array( $item )) {\n\t\t// FTP Mode\n\t\t$abs_item = '/' . get_abs_dir($dir).\"/\".$item['name'];\n\t\tif( get_is_dir($item)) $abs_item.='/';\n\t\treturn extPathName($abs_item); \n\t}\n\treturn extPathName( get_abs_dir($dir).\"/\".basename($item) );\n}\n/**\n * Returns the LS info array from an ftp directory listing\n *\n * @param unknown_type $dir\n * @param unknown_type $item\n * @return unknown\n */\nfunction get_item_info( $dir, $item ) {\n\t$ls = getCachedFTPListing( $dir );\n\tif( empty($ls)) return false;\n\tforeach( $ls as $entry ) {\n\t\tif( $entry['name'] == $item ) {\n\t\t\treturn $entry;\n\t\t}\n\t}\n\tif( $dir != '') {\n\t\treturn $dir.'/'.$item;\n\t}\n\treturn $item;\n}\n//------------------------------------------------------------------------------\nfunction get_rel_item($dir,$item) {\t\t// get file relative from home\n\tif($dir!=\"\") return $dir.\"/\".$item;\n\telse return $item;\n}\n//------------------------------------------------------------------------------\nfunction get_is_file( $abs_item) {\t\t// can this file be edited?\n\tif( ext_isFTPMode() && is_array( $abs_item )) {\n\t\treturn empty($abs_item['is_dir']);\n\t} elseif( ext_isFTPMode() ) {\n\t\t$info = get_item_info( dirname($abs_item), basename($abs_item));\n\t\treturn empty($info['is_dir']);\n\t}\n\n\treturn @is_file($abs_item);\n}\n//------------------------------------------------------------------------------\nfunction get_is_dir( $abs_item ) {\t\t// is this a directory?\n\tif( ext_isFTPMode() && is_array( $abs_item )) {\n\t\treturn !empty($abs_item['is_dir']);\n\t}\n\telseif( ext_isFTPMode() ) {\n\t\t$info = get_item_info( dirname( $abs_item), basename( $abs_item ));\n\t\treturn !empty($info['is_dir']);\n\t}\n\treturn @is_dir( $abs_item );\n}\n//------------------------------------------------------------------------------\nfunction parse_file_type( $abs_item ) {\t\t// parsed file type (d / l / -)\n\n\tif(@get_is_dir($abs_item)) return \"d\";\n\tif(@is_link($abs_item)) return \"l\";\n\treturn \"-\";\n}\n//------------------------------------------------------------------------------\nfunction get_file_perms( $item) {\t\t// file permissions\n\tif( ext_isFTPMode() && isset($item['rights']) ) {\n\t\t$perms = decoct( bindec( decode_ftp_rights($item['rights']) ) );\n\t\treturn $perms;\n\t} elseif( is_numeric($item['mode'])) { //SFTP\n\t\treturn @decoct($item['mode']  & 0777);\n\t}\t\n\treturn @decoct(@fileperms( $item ) & 0777);\n}\n\nfunction get_languages() {\n\t$langfiles = extReadDirectory( _EXT_PATH.'/languages' );\n\t$langs = array();\n\tforeach( $langfiles as $lang ) {\n\t\tif( stristr( $lang, '_mimes') || $lang == 'index.html') continue;\n\t\t$langs[basename( $lang, '.php' )] = ucwords(str_replace( '_', ' ', basename( $lang, '.php' )));\n\t}\n\treturn $langs;\n}\n//------------------------------------------------------------------------------\nfunction parse_file_perms($mode) {\t\t// parsed file permisions\n\n\tif(strlen($mode)<3) return \"---------\";\n\t$parsed_mode=\"\";\n\tfor($i=0;$i<3;$i++) {\n\t\t// read\n\t\tif(($mode{$i} & 04)) $parsed_mode .= \"r\";\n\t\telse $parsed_mode .= \"-\";\n\t\t// write\n\t\tif(($mode{$i} & 02)) $parsed_mode .= \"w\";\n\t\telse $parsed_mode .= \"-\";\n\t\t// execute\n\t\tif(($mode{$i} & 01)) $parsed_mode .= \"x\";\n\t\telse $parsed_mode .= \"-\";\n\t}\n\treturn $parsed_mode;\n}\n\nfunction decode_ftp_rights( $rights) {\n\t$parsed_mode=\"\";\n\tfor($i=0;$i<9;$i++) {\n\t\t// read\n\t\tif( $rights[$i] != '-' ) {\n\t\t\t$parsed_mode .= '1';\n\t\t}\n\t\telse {\n\t\t\t$parsed_mode.= '0';\n\t\t}\n\t}\n\n\treturn $parsed_mode;\n}\n//------------------------------------------------------------------------------\nfunction get_file_size( $abs_item) {\t\t// file size\n\treturn @$GLOBALS['ext_File']->filesize( $abs_item );\n}\n//------------------------------------------------------------------------------\n\nfunction get_dir_size($dir) {\n\tif(is_file($dir)) return array('size'=>filesize($dir),'howmany'=>0);\n\tif($dh=opendir($dir)) {\n\t\t$size=0;\n\t\t$n = 0;\n\t\twhile(($file=readdir($dh))!==false) {\n\t\t\tif($file=='.' || $file=='..') continue;\n\t\t\t$n++;\n\t\t\t$data = get_dir_size($dir.'/'.$file);\n\t\t\t$size += $data['size'];\n\t\t\t$n += $data['howmany'];\n\t\t}\n\t\tclosedir($dh);\n\t\treturn array('size'=>$size,'howmany'=>$n);\n\t}\n\treturn array('size'=>0,'howmany'=>0);\n}\n\nfunction parse_file_size($bytes, $precision = 2) {\n    $units = array('B', 'KB', 'MB', 'GB', 'TB');\n    if( !is_float($bytes)) {\n    \t$bytes = (float)sprintf(\"%u\", $bytes);\n    }\n    $bytes = max($bytes, 0);\n    $pow = floor(($bytes ? log($bytes) : 0) / log(1024));\n    $pow = min($pow, count($units) - 1);\n  \n    $bytes /= pow(1024, $pow);\n  \n    return round($bytes, $precision) . ' ' . $units[$pow];\n} \n//------------------------------------------------------------------------------\nfunction get_file_date( $item) {\t\t// file date\n\treturn @$GLOBALS['ext_File']->filemtime( $item );\n}\n//------------------------------------------------------------------------------\nfunction parse_file_date($date) {\t\t// parsed file date\n\tif ($date) {\n\t\treturn @date($GLOBALS[\"date_fmt\"],$date);\n\t} else {\n\t\treturn \" (unknown) \";\n\t}\n}\n//------------------------------------------------------------------------------\nfunction get_is_image( $abs_item ) {\t\t// is this file an image?\n\tif(!get_is_file($abs_item)) return false;\n\tif( isset($abs_item['name'])) {\n\t\t$abs_item = $abs_item['name'];\n\t}\n\treturn in_array(pathinfo($abs_item,PATHINFO_EXTENSION ), $GLOBALS[\"images_ext\"]);\n}\n//-----------------------------------------------------------------------------\nfunction get_is_editable( $abs_item ) {\t\t// is this file editable?\n\tif(!get_is_file( $abs_item )) return false;\n\t\n\tif( is_array( $abs_item ) ) {\n\t\t$abs_item = $abs_item['name'];\n\t}\n\n\tif(in_array(\".\".strtolower(pathinfo($abs_item,PATHINFO_EXTENSION )), $GLOBALS[\"editable_ext\"])) {\n\t\treturn true;\n\t}\n\n\treturn strpos( basename($abs_item), \".\" ) ? false : true;\n\n}\n//-----------------------------------------------------------------------------\nfunction get_mime_type( $abs_item, $query) {\t// get file's mimetype\n\n\tif(get_is_dir( $abs_item )) {\t\t\t// directory\n\t\t$mime_type\t= $GLOBALS[\"super_mimes\"][\"dir\"][0];\n\t\t$image\t\t= $GLOBALS[\"super_mimes\"][\"dir\"][1];\n\n\t\tif($query==\"img\") return $image;\n\t\telse return $mime_type;\n\t}\n\t$extra = $GLOBALS['ext_File']->is_link( $abs_item ) ? ' ('.$GLOBALS['mimes']['symlink'].')' : '';\n\tif( ext_isFTPMode() && isset($abs_item['name']) ) {\n\t\t$abs_item=$abs_item['name'];\n\t}\n\t\t\t\t// mime_type\n\tforeach($GLOBALS[\"used_mime_types\"] as $mime) {\n\t\tlist($desc,$img,$ext)\t= $mime;\n\n\t\tif(stristr(basename($abs_item), $ext )) {\n\t\t\t$mime_type\t= $desc;\n\t\t\t$image\t\t= $img;\n\t\t\tif($query==\"img\") return $image;\n\t\t\telse return $mime_type . $extra;\n\t\t}\n\t}\n\n\tif((function_exists(\"is_executable\") &&\n\t\t@is_executable( $abs_item )) ||\n\t\t@stristr($abs_item,$GLOBALS[\"super_mimes\"][\"exe\"][2]))\n\t{\t\t\t\t\t\t// executable\n\t\t$mime_type\t= $GLOBALS[\"super_mimes\"][\"exe\"][0];\n\t\t$image\t\t= $GLOBALS[\"super_mimes\"][\"exe\"][1];\n\t} else {\t\t\t\t\t// unknown file\n\t\t$mime_type\t= $GLOBALS[\"super_mimes\"][\"file\"][0];\n\t\t$image\t\t= $GLOBALS[\"super_mimes\"][\"file\"][1];\n\t}\n\n\tif($query==\"img\") {\n\t\treturn $image;\n\t}\n\telse {\n\t\treturn $mime_type . $extra;\n\t}\n}\n//------------------------------------------------------------------------------\nfunction get_show_item($dir, $item) {\t\t// show this file?\n\tif( is_array( $item )) {\n\t\t$item = $item['name'];\n\t}\n\tif($item == \".\" || $item == \"..\" ||\n\t\t(substr($item,0,1)==\".\" && $GLOBALS[\"show_hidden\"]==false)) return false;\n\n\tif($GLOBALS[\"no_access\"]!=\"\" && @preg_match($GLOBALS[\"no_access\"],$item)) return false;\n\n\tif($GLOBALS[\"show_hidden\"]==false) {\n\t\t$dirs=explode(\"/\",$dir);\n\t\tforeach($dirs as $i) if(substr($i,0,1)==\".\") return false;\n\t}\n\n\treturn true;\n}\n//------------------------------------------------------------------------------\nfunction get_dir_list( $dir='' ) {\n\tif( ext_isFTPMode()) {\n\t\t$files = getCachedFTPListing(empty($dir) ? '.' : $dir);\n\t} else {\n\t\t$files = extReadDirectory( get_abs_dir( $dir), '.', false, true );\n\t}\n\n\t$dirs =array();\n\tforeach( $files as $item) {\n\t\t$itemname = ext_isFTPMode() ? (empty($dir) ? '' : $dir.'/') .$item['name'] :  $item;\n\n\t\t$itemname = str_replace( '\\\\', '/', $itemname );\n\t\tif( get_is_dir($item)) {\n\t\t\t$index = str_replace( \n\t\t\t\t\t\tstr_replace('\\\\', '/', $GLOBALS['home_dir'].$GLOBALS['separator']), \n\t\t\t\t\t\t\t'', $itemname );\n\n\t\t\t$dirs[$index]= basename($index);\n\t\t}\n\t}\n\n\treturn $dirs;\n}\n/**\n * Returns select lists with all the subdirectories along the current directory path\n *\n * @param string $dir\n * @return string\n */\nfunction get_dir_selects( $dir ) {\n\t$dirs = explode( \"/\", str_replace( \"\\\\\", '/', $dir ) );\n\n\t$subdirs = get_dir_list();\n\tif( sizeof( $subdirs ) > 0) {\n\t\t$subdirs = array_merge(Array('ext_disabled' => '-'), $subdirs );\n\t}\n\n\tif( empty($dirs[0]) ) array_shift($dirs);\n\t$dirsCopy = $dirs;\n\t$implode = '';\n\t$selectedDir = @$dirs[0];\n\tforeach( $subdirs as $index => $val ) {\n\t\tif ($GLOBALS['use_mb']) {\n\t\t\tif (mb_detect_encoding($val) == 'ASCII') {\n\t\t\t\t$subdirs[$index] = utf8_encode($val);\n\t\t\t} else {\n\t\t\t\t$subdirs[$index] = $val;\n\t\t\t}\n\t\t} else {\n\t\t\t$subdirs[$index] = utf8_encode($val);\n\t\t}\n\t}\n\n\t$dir_links = ext_selectList('dirselect1', $selectedDir, $subdirs, 1, '', 'onchange=\"theDir=this.options[this.selectedIndex].value;if(theDir!=\\'ext_disabled\\' ) chDir(theDir);\"' );\n\t$i = 2;\n\tforeach( $dirs as $directory ) {\n\t\tif( $directory != \"\" ) {\n\t\t\t$implode .= $directory;\n\t\t\t$next = next($dirsCopy);\n\t\t\t$subdirs = get_dir_list( $implode );\n\n\t\t\tforeach( $subdirs as $index => $val ) {\n\t\t\t\tunset( $subdirs[$index]);\n\t\t\t\tif ($GLOBALS['use_mb']) {\n\t\t\t\t\tif (mb_detect_encoding($index) == 'ASCII') {\n\t\t\t\t\t\tif (mb_detect_encoding($val) == 'ASCII') {\n\t\t\t\t\t\t\t$subdirs[utf8_encode($index)] = utf8_encode($val);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$subdirs[utf8_encode($index)] = $val;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (mb_detect_encoding($val) == 'ASCII') {\n\t\t\t\t\t\t\t$subdirs[$index] = utf8_encode($val);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$subdirs[$index] = $val;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$subdirs[utf8_encode($index)] = utf8_encode($val);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( $next !== false ) {\n\t\t\t\t$selectedDir .= '/'.$next;\n\t\t\t} else {\n\t\t\t\tif( sizeof( $subdirs ) > 0) {\n\t\t\t\t\t$subdirs = array_merge(Array('ext_disabled' => '-'), $subdirs );\n\t\t\t\t}\n\t\t\t}\n\t\t\t$dir_links .= ' / '.ext_selectList('dirselect'.$i++, $selectedDir, $subdirs, 1, '', 'onchange=\"theDir=this.options[this.selectedIndex].value;if(theDir!=\\'ext_disabled\\' ) chDir(theDir);\"' );\n\t\t\t$implode .= '/';\n\t\t}\n\n\t}\n\t//echo '<pre>'.htmlspecialchars($dir_links).'</pre>';exit;\n\treturn $dir_links;\n}\n//------------------------------------------------------------------------------\nfunction ext_copy_dir($source,$dest) {\t\t// copy dir\n\t$ok = true;\n\t$source = str_replace( '\\\\', '/', $source );\n\t$dest = str_replace( '\\\\', '/', $dest );\n\tif(!@mkdir($dest,0777)) return false;\n\t$itemlist = extReadDirectory( $source, '.', true, true );\n\tif( empty( $itemlist )) return true;\n\n\tforeach( $itemlist as $file ) {\n\t\tif(($file==\"..\" || $file==\".\")) continue;\n\t\t$file = str_replace( '\\\\', '/', $file );\n\t\t$new_dest = str_replace( $source, $dest, $file );\n\n\t\tif(@is_dir($file)) {\n\t\t\t@mkdir($new_dest,0777);\n\t\t} else {\n\t\t\t$ok=@copy($file,$new_dest);\n\t\t}\n\t}\n\n\treturn $ok;\n}\n\n//------------------------------------------------------------------------------\nfunction remove($item) {\t\t\t// remove file / dir\n\n\tif( !is_link( $item )) {\n\t\t$item = realpath($item);\n\t}\n\t$ok = true;\n\tif( is_link($item) ||  is_file($item)) \n\t$ok =  unlink($item);\n\telseif( @is_dir($item)) {\n\n\t\tif(($handle= opendir($item))===false) \n\t\text_Result::sendResult('delete', false, basename($item).\": \".$GLOBALS[\"error_msg\"][\"opendir\"]);\n\n\t\twhile(($file=readdir($handle))!==false) {\n\t\t\tif(($file==\"..\" || $file==\".\")) continue;\n\n\t\t\t$new_item = $item.\"/\".$file;\n\t\t\tif(!file_exists($new_item)) \n\t\t\text_Result::sendResult('delete', false, basename($item).\": \".$GLOBALS[\"error_msg\"][\"readdir\"]);\n\t\t\t//if(!get_show_item($item, $new_item)) continue;\n\n\t\t\tif( @is_dir($new_item)) {\n\t\t\t\t$ok=remove($new_item);\n\t\t\t} else {\n\t\t\t\t$ok= unlink($new_item);\n\t\t\t}\n\t\t}\n\n\t\tclosedir($handle);\n\t\t$ok=@rmdir($item);\n\t}\n\treturn $ok;\n}\nfunction chmod_recursive($item, $mode) {\t\t\t// chmod file / dir\n\t$ok = true;\n\n\tif(@is_link($item) || @is_file($item)) {\n\t\t$ok=@chmod( $item, $mode );\n\t\tif($ok) ext_Result::add_message($GLOBALS['messages']['permchange'].' '.$new_item);\n\t\telse ext_Result::add_error($GLOBALS['error_msg']['permchange'].' '.$new_item);\n\t}\n\telseif(@is_dir($item)) {\n\t\tif(($handle=@opendir($item))===false) {\n\n\t\t\text_Result::add_error(basename($item).\": \".$GLOBALS[\"error_msg\"][\"opendir\"]);\n\t\t\treturn false; \n\t\t}\n\n\t\twhile(($file=readdir($handle))!==false) {\n\t\t\tif(($file==\"..\" || $file==\".\")) continue;\n\n\t\t\t$new_item = $item.\"/\".$file;\n\t\t\tif(!@file_exists($new_item)) {\n\t\t\t\text_Result::add_error(basename($item).\": \".$GLOBALS[\"error_msg\"][\"readdir\"]);\n\t\t\t\tcontinue; \n\t\t\t}\n\t\t\t//if(!get_show_item($item, $new_item)) continue;\n\n\t\t\tif(@is_dir($new_item)) {\n\t\t\t\t$ok=chmod_recursive($new_item, $mode);\n\t\t\t} else {\n\t\t\t\t$ok=@chmod($new_item, $mode);\n\t\t\t\tif($ok) ext_Result::add_message($GLOBALS['messages']['permchange'].' '.$new_item);\n\t\t\t\telse ext_Result::add_error($GLOBALS['error_msg']['permchange'].' '.$new_item);\n\t\t\t}\n\t\t}\n\t\tclosedir($handle);\n\t\tif( @is_dir( $item )) {\n\t\t\t$bin = decbin( $mode );\n\t\t\t// when we chmod a directory we must care for the permissions\n\t\t\t// to prevent that the directory becomes not readable (when the \"execute bits\" are removed)\n\t\t\t$bin = substr_replace( $bin, '1', 2, 1 ); // set 1st x bit to 1\n\t\t\t$bin = substr_replace( $bin, '1', 5, 1 );// set  2nd x bit to 1\n\t\t\t$bin = substr_replace( $bin, '1', 8, 1 );// set 3rd x bit to 1\n\t\t\t$mode = bindec( $bin ); \n\t\t}\n\t\t$ok=@chmod( $item, $mode );\n\t\tif($ok) ext_Result::add_message($GLOBALS['messages']['permchange'].' '.$item);\n\t\telse ext_Result::add_error($GLOBALS['error_msg']['permchange'].' '.$item);\n\t}\n\n\treturn $ok;\n}\n//------------------------------------------------------------------------------\nfunction get_max_file_size() {\t\t\t// get php max_upload_file_size\n\treturn calc_php_setting_bytes( ini_get(\"upload_max_filesize\") );\n}\nfunction get_max_upload_limit() {\n\treturn calc_php_setting_bytes( ini_get('post_max_size'));\n}\n\nfunction calc_php_setting_bytes( $value ) {\n\tswitch(strtoupper(substr($value,-1))) {\n\t\tcase 'G':\n\t\t$value = substr($value,0,-1);\n\t\t$value = round($value*1073741824);\n\t\tbreak;\n\tcase 'M':\n\t\t$value = substr($value,0,-1);\n\t\t$value = round($value*1048576);\n\t\tbreak;\n\tcase 'K':\n\t\t$value = substr($value,0,-1);\n\t\t$value = round($value*1024);\n\t\tbreak;\n\t}\n\n\treturn $value;\n}\n//------------------------------------------------------------------------------\nfunction down_home($abs_dir) {\t\t\t// dir deeper than home?\n\tif( ext_isFTPMode() ) {\n\t\treturn true;\n\t}\n\t$real_home = @realpath($GLOBALS[\"home_dir\"]);\n\t$real_dir = @realpath($abs_dir);\n\n\tif($real_home===false || $real_dir===false) {\n\t\tif(@stristr($abs_dir,\"\\\\.\\\\.\")) return false;\n\t} else if(strcmp($real_home,@substr($real_dir,0,strlen($real_home)))) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n//------------------------------------------------------------------------------\nfunction id_browser() {\n\t$browser=$GLOBALS['__SERVER']['HTTP_USER_AGENT'];\n\n\tif(preg_match('/Opera(\\/| )([0-9]\\.[0-9]{1,2})/', $browser)) {\n \t\treturn 'OPERA';\n\t} else if(preg_match('/MSIE ([0-9]\\.[0-9]{1,2})/', $browser)) {\n \t\treturn 'IE';\n\t} else if(preg_match('/OmniWeb\\/([0-9]\\.[0-9]{1,2})/', $browser)) {\n \t\treturn 'OMNIWEB';\n\t} else if(preg_match('/(Konqueror\\/)(.*)/', $browser)) {\n \t\treturn 'KONQUEROR';\n\t} else if(preg_match('/Mozilla\\/([0-9]\\.[0-9]{1,2})/', $browser)) {\n\t\treturn 'MOZILLA';\n\t} else {\n\t\treturn 'OTHER';\n\t}\n}\nfunction ext_isArchive( $file ) {\n  \n\t$file_info = pathinfo($file);\n\t$ext = @strtolower($file_info[\"extension\"]);\n\t$archive_types = array(\"tar\", \"gz\", \"tgz\", \"zip\", \"bzip2\", \"bz2\", \"tbz\", 'rar');\n\tif( in_array( $ext, $archive_types )) {\n\t\treturn true;\n\t}\n\treturn false;\n}\nif( !extension_loaded('posix') ) {\n\tfunction posix_geteuid() {\n\t\treturn false;\n\t}\n\tfunction posix_getpwnam() {\n\n\t}\n}\n\n//------------------------------------------------------------------------------\n/**\n * Checks if the User Agent String identifies the browser as Internet Explorer\n *\n * @return boolean\n */\nfunction ext_isWindows() {\n\tif(empty($GLOBALS['isWindows'])) {\n\t\t$GLOBALS['isWindows'] = substr(PHP_OS, 0, 3) == 'WIN';\n\t}\n\treturn $GLOBALS['isWindows'];\n}\n/**\n * Returns the valid directory separator for this OS & Webserver combination\n *\n * @return string\n */\nfunction ext_getSeparator() {\n\tif( defined( 'DIRECTORY_SEPARATOR')) {\n\t\treturn DIRECTORY_SEPARATOR;\n\t}\n\telseif (@preg_match('/Microsoft|WebSTAR|Xitami/', $_SERVER['SERVER_SOFTWARE']) ) {\n\t\treturn '\\\\';\n\t} else {\n\t\treturn '/';\n\t}\n}\n/**\n * Checks if the User Agent String identifies the browser as Internet Explorer\n *\n * @return boolean\n */\nfunction ext_isIE() {\n\treturn (preg_match('/MSIE ([0-9]\\.[0-9]{1,2})/', $_SERVER['HTTP_USER_AGENT']));\n}\n\n/**\n * Prints an HTML dropdown box named $name using $arr to\n * load the drop down.\tIf $value is in $arr, then $value\n * will be the selected option in the dropdown.\n * @author gday\n * @author soeren\n * \n * @param string $name The name of the select element\n * @param string $value The pre-selected value\n * @param array $arr The array containting $key and $val\n * @param int $size The size of the select element\n * @param string $multiple use \"multiple=\\\"multiple\\\" to have a multiple choice select list\n * @param string $extra More attributes when needed\n * @return string HTML drop-down list\n */\nfunction ext_selectList($name, $selectedkey, $arr, $size=1, $multiple=\"\", $extra=\"\") {\n\t$html = '';\n\tif( !empty( $arr ) ) {\n\t\t$html = \"<select class=\\\"inputbox\\\" name=\\\"$name\\\" id=\\\"$name\\\" size=\\\"$size\\\" $multiple $extra>\\n\";\n\n\t\tforeach($arr as $key => $value) {\n\t\t\t$selected = \"\";\n\t\t\tif( is_array( $selectedkey )) {\n\t\t\t    if( in_array( $key, $selectedkey )) {\n\t\t\t\t\t$selected = \"selected=\\\"selected\\\"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t    if(strtolower($selectedkey) == strtolower($key) ) {\n\t\t\t\t\t$selected = \"selected=\\\"selected\\\"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( $value == '-') {\n\t\t\t\t//$selected .= ' disabled=\"disabled\"';\n\t\t\t    $value = '- - - - -';\n\t\t\t}\n\t\t\t$html .= \"<option value=\\\"$key\\\" $selected>$value\";\n\t\t\t$html .= \"</option>\\n\";\n\t\t}\n\n\t\t$html .= \"</select>\\n\";\n\t}\n\treturn $html;\n}\nfunction ext_scriptTag( $src = '', $script = '') {\n\tif( $src!='') {\n\t\treturn '<script type=\"text/javascript\" src=\"'.$src.'\"></script>';\n\t}\n\tif( $script != '') {\n\t\treturn '<script type=\"text/javascript\">'.$script.'</script>';\n\t}\n}\nfunction ext_alertBox( $msg ) {\n\treturn ext_scriptTag('', 'Ext.Msg.alert( \\''.$GLOBALS[\"error_msg\"]['message'].'\\', \\''. @mysql_escape_string( $msg ) .'\\' );' );\n}\nfunction ext_successBox( $msg ) {\n\treturn ext_scriptTag('', 'Ext.msgBoxSlider.msg( \\''.ext_Lang::msg('success', true ).'\\', \\''. @mysql_escape_string( $msg ) .'\\' );' );\n}\nfunction ext_docLocation( $url ) {\n\treturn ext_scriptTag('', 'document.location=\\''. $url .'\\';' );\n}\nfunction ext_isXHR() {\n\treturn strtolower(extGetParam($_SERVER,'HTTP_X_REQUESTED_WITH')) == 'xmlhttprequest'\n\t\t|| strtolower(extGetParam($_POST,'requestType')) == 'xmlhttprequest';\n}\nfunction ext_exit() {\n\tglobal $mainframe;\n\tif( class_exists( 'jfactory' )) {\n\t\t$app = jfactory::getApplication();\n\t\t$app->close();\n\t}\n\tif( is_callable( array( $mainframe, 'close' ) ) ) {\n\t\t$mainframe->close();\n\t} else {\n\t\tsession_write_close();\n\t\texit;\n\t}\n}\nfunction ext_isJoomla( $version='', $operator='=', $compare_minor_versions=true) {\n\t$this_version = '';\n\tif( !empty($GLOBALS['_VERSION']) && is_object($GLOBALS['_VERSION'])) {\n\t\t$jversion =& $GLOBALS['_VERSION'];\n\t\t$this_version = $jversion->RELEASE .'.'. $jversion->DEV_LEVEL;\n\t}\n\telseif ( class_exists('JVersion') ) {\n\t\t$jversion = new JVersion();\n\t\t$this_version = $jversion->RELEASE .'.'. $jversion->DEV_LEVEL;\n\t} else {\n\t\treturn false;\n\t}\n\tif( empty( $version ) ) {\n\t\treturn !empty($this_version);\n\t}\n\t$allowed_operators = array( '<', 'lt', '<=', 'le', '>', 'gt', '>=', 'ge', '==', '=', 'eq', '!=', '<>', 'ne' );\n\n\tif( $compare_minor_versions ) {\n\t\t$this_version = $jversion->RELEASE;\n\t}\n\tif( in_array($operator, $allowed_operators )) {\n\t\n\t\treturn version_compare( $this_version, $version, $operator );\n\t}\n\treturn false;\n}\n/**\n * Raise the memory limit when it is lower than the needed value\n *\n * @param string $setLimit Example: 16M\n */\nfunction ext_RaiseMemoryLimit( $setLimit ) {\n\n\t$memLimit = @ini_get('memory_limit');\n\n\tif( stristr( $memLimit, 'k') ) {\n\t\t$memLimit = str_replace( 'k', '', str_replace( 'K', '', $memLimit )) * 1024;\n\t}\n\telseif( stristr( $memLimit, 'm') ) {\n\t\t$memLimit = str_replace( 'm', '', str_replace( 'M', '', $memLimit )) * 1024 * 1024;\n\t}\n\n\tif( stristr( $setLimit, 'k') ) {\n\t\t$setLimitB = str_replace( 'k', '', str_replace( 'K', '', $setLimit )) * 1024;\n\t}\n\telseif( stristr( $setLimit, 'm') ) {\n\t\t$setLimitB = str_replace( 'm', '', str_replace( 'M', '', $setLimit )) * 1024 * 1024;\n\t}\n\n\tif( $memLimit < $setLimitB ) {\n\t\t@ini_set('memory_limit', $setLimit );\n\t}\n}\n/**\n * Reads a file and sends them in chunks to the browser\n * This should overcome memory problems\n * http://www.php.net/manual/en/function.readfile.php#54295\n *\n * @since 1.4.1\n * @param string $filename\n * @param boolean $retbytes\n * @return mixed\n */\nfunction readFileChunked($filename,$retbytes=true) {\n\t$chunksize = 1*(1024*1024); // how many bytes per chunk\n\t$buffer = '';\n\t$cnt =0;\n\t// $handle = fopen($filename, 'rb');\n\t$handle = fopen($filename, 'rb');\n\tif ($handle === false) {\n\t\treturn false;\n\t}\n\twhile (!feof($handle)) {\n\t\t$buffer = fread($handle, $chunksize);\n\t\techo $buffer;\n\t\tsleep(1);\n\t\tob_flush();\n\t\tflush();\n\t\tif ($retbytes) {\n\t\t\t$cnt += strlen($buffer);\n\t\t}\n\t}\n\t$status = fclose($handle);\n\tif ($retbytes && $status) {\n\t\treturn $cnt; // return num. bytes delivered like readfile() does.\n\t}\n\treturn $status;\n}\n//implements file_put_contents function for compatability with PHP < 4.3\nif ( ! function_exists('file_put_contents') ) {\n\tfunction file_put_contents ( $filename, $filecont ){\n\t\t$handle = fopen( $filename, 'w' );\n\t\tif ( is_array($filecont) ) {\n\t\t\t$size = 0;\n\t\t\tforeach ( $filecont as $filestring ) {\n\t\t\t\tfwrite( $handle, $filestring );\n\t\t\t\t$size += strlen( $filestring );\n\t\t\t}\n\t\t\tfclose($handle);\n\t\t\treturn $size;\n\t\t} else {\n\t\t\tfwrite( $handle, $filecont );\n\t\t\tfclose($handle);\n\t\t\treturn strlen( $filecont );\n\t\t}\n\t}\n}\nif ( ! function_exists('scandir') ) {\nfunction scandir($dir,$listDirectories=false, $skipDots=true) {\n\t$dirArray = array();\n\tif ($handle = opendir($dir)) {\n\t\twhile (false !== ($file = readdir($handle))) {\n\t\t\tif (($file != \".\" && $file != \"..\") || $skipDots == true) {\n\t\t\t\tif($listDirectories == false) { if(@is_dir($file)) { continue; } }\n\t\t\t\tarray_push($dirArray,basename($file));\n\t\t\t}\n\t\t}\n\t\tclosedir($handle);\n\t}\n\treturn $dirArray;\n}\n}\n\n/**\n * Page generation time\n * @package Joomla\n */\nclass extProfiler {\n\t/** @var int Start time stamp */\n\tvar $start=0;\n\t/** @var string A prefix for mark messages */\n\tvar $prefix='';\n\n\t/**\n\t* Constructor\n\t* @param string A prefix for mark messages\n\t*/\n\tfunction __construct( $prefix='' ) {\n\t\t$this->start = $this->getmicrotime();\n\t\t$this->prefix = $prefix;\n\t}\n\n\t/**\n\t* @return string A format message of the elapsed time\n\t*/\n\tfunction mark( $label ) {\n\t\treturn sprintf ( \"\\n<div class=\\\"profiler\\\">$this->prefix %.3f $label</div>\", $this->getmicrotime() - $this->start );\n\t}\n\n\t/**\n\t* @return float The current time in milliseconds\n\t*/\n\tfunction getmicrotime(){\n\t\tlist($usec, $sec) = explode(\" \",microtime());\n\t\treturn ((float)$usec + (float)$sec);\n\t}\n}\n/**\n* Utility class for all HTML drawing classes\n* @package eXtplorer\n*/\nclass extHTML {\n    static function loadExtJS() {\n\t\t$scripts[] = array('dir' => 'scripts/editarea/', 'file' => 'edit_area_full_with_plugins.js');\n\t\t$scripts[] = array('dir' => 'scripts/extjs3/adapter/ext/', 'file' => 'ext-base.js');\n\t\t$scripts[] = array('dir' => 'scripts/extjs3/', 'file' => 'ext-all.js');\n\t\t$scripts[] = array('dir' => 'scripts/extjs3-ext/ux.ondemandload/', 'file' => 'scriptloader.js');\n\t\t$scripts[] = array('dir' => 'scripts/extjs3-ext/ux.editareaadapater/', 'file' => 'ext-editarea-adapter.js');\n\t\t$scripts[] = array('dir' => 'scripts/extjs3-ext/ux.statusbar/', 'file' => 'ext-statusbar.js');\n\t\t$scripts[] = array('dir' => 'scripts/extjs3-ext/ux.fileuploadfield/', 'file' => 'ext-fileUploadField.js');\n\t\t$scripts[] = array('dir' => 'scripts/extjs3-ext/ux.locationbar/', 'file' => 'Ext.ux.LocationBar.js');\n\t\t\n\t\t$styles[] = array('dir' => 'scripts/extjs3/resources/css/', 'file' => 'ext-all.css');\n\t\t$styles[] = array('dir' => 'scripts/extjs3-ext/ux.locationbar/', 'file' => 'LocationBar.css');\n\t\t$styles[] = array('dir' => 'scripts/extjs3-ext/ux.fileuploadfield/', 'file' => 'fileuploadfield.css');\n\t\t$scriptTag = '';\n\t\tif( !empty($_GET['nofetchscript']) || !empty( $_COOKIE['nofetchscript'])) {\n\t\t\tforeach( $scripts as $script ) {\n\t\t\t\t$scriptTag .= '<script type=\"text/javascript\" src=\"'.$script['dir'].$script['file'].'\"></script>';\n\t\t\t}\n\t\t\tforeach( $styles as $style ) {\n\t\t\t\t$scriptTag .= '<link type=\"text/css\" href=\"'.$style['dir'].$style['file'].'\" rel=\"stylesheet\" />';\n\t\t\t}\t\t\t\n\t\t} else {\n\t\t\t$scriptTag = '\n\t\t<script type=\"text/javascript\" src=\"'. _EXT_URL . '/fetchscript.php?'\n\t\t\t.'&amp;subdir[]=scripts/editarea/&amp;file[]=edit_area_full_with_plugins.js'\n\t\t\t.'&amp;subdir[]=scripts/extjs3/adapter/ext/&amp;file[]=ext-base.js'\n\t\t\t.'&amp;subdir[]=scripts/extjs3/&amp;file[]=ext-all.js'\n\t\t\t.'&amp;subdir[]=scripts/extjs3-ext/ux.ondemandload/&amp;file[]=scriptloader.js'\n\t\t\t.'&amp;subdir[]=scripts/extjs3-ext/ux.editareaadapater/&amp;file[]=ext-editarea-adapter.js'\n\t\t\t.'&amp;subdir[]=scripts/extjs3-ext/ux.statusbar/&amp;file[]=ext-statusbar.js'\n\t\t\t.'&amp;subdir[]=scripts/extjs3-ext/ux.fileuploadfield/&amp;file[]=ext-fileUploadField.js'\n\t\t\t.'&amp;subdir[]=scripts/extjs3-ext/ux.locationbar/&amp;file[]=Ext.ux.LocationBar.js'\n\t\t\t.'&amp;gzip=1\"></script>';\n\t\t\t$scriptTag .= '\n\t\t<link rel=\"stylesheet\" href=\"'. _EXT_URL . '/fetchscript.php?'\n\t\t\t.'subdir[]=scripts/extjs3/resources/css/&amp;file[]=ext-all.css'\n\t\t\t.'&amp;subdir[]=scripts/extjs3-ext/ux.locationbar/&amp;file[]=LocationBar.css'\n\t\t\t.'&amp;subdir[]=scripts/extjs3-ext/ux.fileuploadfield/&amp;file[]=fileuploadfield.css'\n\t\t\t.'&amp;gzip=1\" />';\n\t\t}\n\t\t$scriptTag .= '\n\t\t<script type=\"text/javascript\" src=\"'. $GLOBALS['script_name'].'?option=com_extplorer&amp;action=include_javascript&amp;file=functions.js\"></script>\n\t\t<script type=\"text/javascript\" >editAreaLoader.baseURL = \"'. _EXT_URL .'/scripts/editarea/\";</script>';\n\n\t\n\t\tif (defined('EXT_STANDALONE')) {\n\t\t\t$GLOBALS['mainframe']->addcustomheadtag($scriptTag);\n\t\t} else {\n\t\t\techo $scriptTag;\n\t\t}\n\t}\n\n    static function makeOption( $value, $text='', $value_name='value', $text_name='text' ) {\n\t\t$obj = new stdClass;\n\t\t$obj->$value_name = $value;\n\t\t$obj->$text_name = trim( $text ) ? $text : $value;\n\t\treturn $obj;\n\t}\n\n    static function writableCell( $folder, $relative=1, $text='', $visible=1 ) {\n\t$writeable \t\t= '<b><font color=\"green\">Writeable</font></b>';\n\t$unwriteable \t= '<b><font color=\"red\">Unwriteable</font></b>';\n\n  \techo '<tr>';\n  \techo '<td class=\"item\">';\n\techo $text;\n\tif ( $visible ) {\n\t\techo $folder . '/';\n\t}\n\techo '</td>';\n  \techo '<td align=\"left\">';\n\tif ( $relative ) {\n\t\techo is_writable( \"../$folder\" ) \t? $writeable : $unwriteable;\n\t} else {\n\t\techo is_writable( \"$folder\" ) \t\t? $writeable : $unwriteable;\n\t}\n\techo '</td>';\n  \techo '</tr>';\n  }\n\n\t/**\n\t* Generates an HTML select list\n\t* @param array An array of objects\n\t* @param string The value of the HTML name attribute\n\t* @param string Additional HTML attributes for the <select> tag\n\t* @param string The name of the object variable for the option value\n\t* @param string The name of the object variable for the option text\n\t* @param mixed The key that is selected\n\t* @returns string HTML for the select list\n\t*/\n    static function selectList( &$arr, $tag_name, $tag_attribs, $key, $text, $selected=NULL ) {\n\t\t// check if array\n\t\tif ( is_array( $arr ) ) {\n\t\t\treset( $arr );\n\t\t}\n\n\t\t$html \t= \"\\n<select name=\\\"$tag_name\\\" $tag_attribs>\";\n\t\t$count \t= count( $arr );\n\n\t\tfor ($i=0, $n=$count; $i < $n; $i++ ) {\n\t\t\t$k = $arr[$i]->$key;\n\t\t\t$t = $arr[$i]->$text;\n\t\t\t$id = ( isset($arr[$i]->id) ? @$arr[$i]->id : null);\n\n\t\t\t$extra = '';\n\t\t\t$extra .= $id ? \" id=\\\"\" . $arr[$i]->id . \"\\\"\" : '';\n\t\t\tif (is_array( $selected )) {\n\t\t\t\tforeach ($selected as $obj) {\n\t\t\t\t\t$k2 = $obj->$key;\n\t\t\t\t\tif ($k == $k2) {\n\t\t\t\t\t\t$extra .= \" selected=\\\"selected\\\"\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$extra .= ($k == $selected ? \" selected=\\\"selected\\\"\" : '');\n\t\t\t}\n\t\t\t$html .= \"\\n\\t<option value=\\\"\".$k.\"\\\"$extra>\" . $t . \"</option>\";\n\t\t}\n\t\t$html .= \"\\n</select>\\n\";\n\n\t\treturn $html;\n\t}\n\n\t/**\n\t* Writes a select list of integers\n\t* @param int The start integer\n\t* @param int The end integer\n\t* @param int The increment\n\t* @param string The value of the HTML name attribute\n\t* @param string Additional HTML attributes for the <select> tag\n\t* @param mixed The key that is selected\n\t* @param string The printf format to be applied to the number\n\t* @returns string HTML for the select list\n\t*/\n    static function integerSelectList( $start, $end, $inc, $tag_name, $tag_attribs, $selected, $format=\"\" ) {\n\t\t$start \t= intval( $start );\n\t\t$end \t= intval( $end );\n\t\t$inc \t= intval( $inc );\n\t\t$arr \t= array();\n\n\t\tfor ($i=$start; $i <= $end; $i+=$inc) {\n\t\t\t$fi = $format ? sprintf( \"$format\", $i ) : \"$i\";\n\t\t\t$arr[] = extHTML::makeOption( $fi, $fi );\n\t\t}\n\n\t\treturn extHTML::selectList( $arr, $tag_name, $tag_attribs, 'value', 'text', $selected );\n\t}\n\n\t/**\n\t* Writes a select list of month names based on Language settings\n\t* @param string The value of the HTML name attribute\n\t* @param string Additional HTML attributes for the <select> tag\n\t* @param mixed The key that is selected\n\t* @returns string HTML for the select list values\n\t*/\n    static function monthSelectList( $tag_name, $tag_attribs, $selected ) {\n\t\t$arr = array(\n\t\t\textHTML::makeOption( '01', _JAN ),\n\t\t\textHTML::makeOption( '02', _FEB ),\n\t\t\textHTML::makeOption( '03', _MAR ),\n\t\t\textHTML::makeOption( '04', _APR ),\n\t\t\textHTML::makeOption( '05', _MAY ),\n\t\t\textHTML::makeOption( '06', _JUN ),\n\t\t\textHTML::makeOption( '07', _JUL ),\n\t\t\textHTML::makeOption( '08', _AUG ),\n\t\t\textHTML::makeOption( '09', _SEP ),\n\t\t\textHTML::makeOption( '10', _OCT ),\n\t\t\textHTML::makeOption( '11', _NOV ),\n\t\t\textHTML::makeOption( '12', _DEC )\n\t\t);\n\n\t\treturn extHTML::selectList( $arr, $tag_name, $tag_attribs, 'value', 'text', $selected );\n\t}\n\n\t/**\n\t* Writes a yes/no select list\n\t* @param string The value of the HTML name attribute\n\t* @param string Additional HTML attributes for the <select> tag\n\t* @param mixed The key that is selected\n\t* @returns string HTML for the select list values\n\t*/\n    static function yesnoSelectList( $tag_name, $tag_attribs, $selected, $yes=_CMN_YES, $no=_CMN_NO ) {\n\t\t$arr = array(\n\t\textHTML::makeOption( '0', $no ),\n\t\textHTML::makeOption( '1', $yes ),\n\t\t);\n\n\t\treturn extHTML::selectList( $arr, $tag_name, $tag_attribs, 'value', 'text', $selected );\n\t}\n\n\t/**\n\t* Generates an HTML radio list\n\t* @param array An array of objects\n\t* @param string The value of the HTML name attribute\n\t* @param string Additional HTML attributes for the <select> tag\n\t* @param mixed The key that is selected\n\t* @param string The name of the object variable for the option value\n\t* @param string The name of the object variable for the option text\n\t* @returns string HTML for the select list\n\t*/\n    static function radioList( &$arr, $tag_name, $tag_attribs, $selected=null, $key='value', $text='text' ) {\n\t\treset( $arr );\n\t\t$html = \"\";\n\t\tfor ($i=0, $n=count( $arr ); $i < $n; $i++ ) {\n\t\t\t$k = $arr[$i]->$key;\n\t\t\t$t = $arr[$i]->$text;\n\t\t\t$id = ( isset($arr[$i]->id) ? @$arr[$i]->id : null);\n\n\t\t\t$extra = '';\n\t\t\t$extra .= $id ? \" id=\\\"\" . $arr[$i]->id . \"\\\"\" : '';\n\t\t\tif (is_array( $selected )) {\n\t\t\t\tforeach ($selected as $obj) {\n\t\t\t\t\t$k2 = $obj->$key;\n\t\t\t\t\tif ($k == $k2) {\n\t\t\t\t\t\t$extra .= \" selected=\\\"selected\\\"\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$extra .= ($k == $selected ? \" checked=\\\"checked\\\"\" : '');\n\t\t\t}\n\t\t\t$html .= \"\\n\\t<input type=\\\"radio\\\" name=\\\"$tag_name\\\" id=\\\"$tag_name$k\\\" value=\\\"\".$k.\"\\\"$extra $tag_attribs />\";\n\t\t\t$html .= \"\\n\\t<label for=\\\"$tag_name$k\\\">$t</label>\";\n\t\t}\n\t\t$html .= \"\\n\";\n\n\t\treturn $html;\n\t}\n\n\t/**\n\t* Writes a yes/no radio list\n\t* @param string The value of the HTML name attribute\n\t* @param string Additional HTML attributes for the <select> tag\n\t* @param mixed The key that is selected\n\t* @returns string HTML for the radio list\n\t*/\n    static function yesnoRadioList( $tag_name, $tag_attribs, $selected, $yes=_CMN_YES, $no=_CMN_NO ) {\n\t\t$arr = array(\n\t\t\textHTML::makeOption( '0', $no ),\n\t\t\textHTML::makeOption( '1', $yes )\n\t\t);\n\n\t\treturn extHTML::radioList( $arr, $tag_name, $tag_attribs, $selected );\n\t}\n\n\t/**\n\t* Cleans text of all formating and scripting code\n\t*/\n    static function cleanText ( &$text ) {\n\t\t$text = preg_replace( \"'<script[^>]*>.*?</script>'si\", '', $text );\n\t\t$text = preg_replace( '/<a\\s+.*?href=\"([^\"]+)\"[^>]*>([^<]+)<\\/a>/is', '\\2 (\\1)', $text );\n\t\t$text = preg_replace( '/<!--.+?-->/', '', $text );\n\t\t$text = preg_replace( '/{.+?}/', '', $text );\n\t\t$text = preg_replace( '/&nbsp;/', ' ', $text );\n\t\t$text = preg_replace( '/&amp;/', ' ', $text );\n\t\t$text = preg_replace( '/&quot;/', ' ', $text );\n\t\t$text = strip_tags( $text );\n\t\t$text = htmlspecialchars( $text );\n\n\t\treturn $text;\n\t}\n}\n/**\n * Utility function to return a value from a named array or a specified default\n * @param array A named array\n * @param string The key to search for\n * @param mixed The default value to give if no key found\n * @param int An options mask: _MOS_NOTRIM prevents trim, _MOS_ALLOWHTML allows safe html, _MOS_ALLOWRAW allows raw input\n */\ndefine( \"_ext_NOTRIM\", 0x0001 );\ndefine( \"_ext_ALLOWHTML\", 0x0002 );\ndefine( \"_ext_ALLOWRAW\", 0x0004 );\nfunction extGetParam( &$arr, $name, $def=null, $mask=0 ) {\n\tstatic $noHtmlFilter \t= null;\n\tstatic $safeHtmlFilter \t= null;\n\n\t$return = null;\n\tif (isset( $arr[$name] )) {\n\t\t$return = $arr[$name];\n\n\t\tif (is_string( $return )) {\n\t\t\t// trim data\n\t\t\tif (!($mask&_ext_NOTRIM)) {\n\t\t\t\t$return = trim( $return );\n\t\t\t}\n\n\t\t\tif ($mask&_ext_ALLOWRAW) {\n\t\t\t\t// do nothing\n\t\t\t} else if ($mask&_ext_ALLOWHTML) {\n\t\t\t\t// do nothing - compatibility mode\n\t\t\t} else {\n\t\t\t\t// send to inputfilter\n\t\t\t\tif (is_null( $noHtmlFilter )) {\n\t\t\t\t\t$noHtmlFilter = new InputFilter( /* $tags, $attr, $tag_method, $attr_method, $xss_auto */ );\n\t\t\t\t}\n\n                $return = $noHtmlFilter->sanitize( array($return) );\n                $return = $return[0];\n\n\t\t\t\tif (empty($return) && is_numeric($def)) {\n\t\t\t\t// if value is defined and default value is numeric set variable type to integer\n\t\t\t\t\t$return = intval($return);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// account for magic quotes setting\n\t\t\tif (!get_magic_quotes_gpc()) {\n\t\t\t\t$return = stripslashes( $return );\n\t\t\t}\n\t\t}\n\n\t\treturn $return;\n\t} else {\n\t\treturn $def;\n\t}\n}\n\n/**\n * Strip slashes from strings or arrays of strings\n * @param mixed The input string or array\n * @return mixed String or array stripped of slashes\n */\nfunction extStripslashes( &$value ) {\n\t$ret = '';\n\tif (is_string( $value )) {\n\t\t$ret = stripslashes( $value );\n\t} else {\n\t\tif (is_array( $value )) {\n\t\t\t$ret = array();\n\t\t\tforeach ($value as $key => $val) {\n\t\t\t\t$ret[$key] = extStripslashes( $val );\n\t\t\t}\n\t\t} else {\n\t\t\t$ret = $value;\n\t\t}\n\t}\n\treturn $ret;\n}\n/**\n * Recursively creates a new directory\n *\n * @param unknown_type $path\n * @param unknown_type $rights\n * @return unknown\n */\nfunction extMkdirR($path, $rights = 0777) {\n\n\t$folder_path = array(\n\tstrstr($path, '.') ? dirname($path) : $path);\n\n\twhile(!@is_dir(dirname(end($folder_path)))\n\t\t&& dirname(end($folder_path)) != '/'\n\t\t&& dirname(end($folder_path)) != '.'\n\t\t&& dirname(end($folder_path)) != '') {\n\t\tarray_push($folder_path, dirname(end($folder_path)));\n\t}\n\n\twhile($parent_folder_path = array_pop($folder_path)) {\n\t\t@mkdir($parent_folder_path, $rights);\n\t}\n\t@mkdir( $path );\n\treturn is_dir( $path );\n}\n/**\n* Utility function to read the files in a directory\n* @param string The file system path\n* @param string A filter for the names\n* @param boolean Recurse search into sub-directories\n* @param boolean True if to prepend the full path to the file name\n*/\nfunction extReadDirectory( $path, $filter='.', $recurse=false, $fullpath=false\t) {\n\t$arr = array();\n\tif (!@is_dir( $path )) {\n\t\treturn $arr;\n\t}\n\t$handle = opendir( $path );\n\n\twhile ($file = readdir($handle)) {\n\t\tif( is_array( $file )) $file = $file['name'];\n\t\t$dir = extPathName( $path.'/'.$file, false );\n\t\t$isDir = @is_dir( $dir );\n\t\tif (($file != \".\") && ($file != \"..\")) {\n\t\t\tif (preg_match( \"/$filter/\", $file )) {\n\t\t\t\tif ($fullpath) {\n\t\t\t\t\t$arr[] = trim( extPathName( $path.'/'.$file, false ) );\n\t\t\t\t} else {\n\t\t\t\t\t$arr[] = trim( $file );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($recurse && $isDir) {\n\t\t\t\t$arr2 = extReadDirectory( $dir, $filter, $recurse, $fullpath );\n\t\t\t\t$arr = array_merge( $arr, $arr2 );\n\t\t\t}\n\t\t}\n\t}\n\tclosedir($handle);\n\tasort($arr);\n\treturn $arr;\n}\n/**\n* Function to strip additional / or \\ in a path name\n* @param string The path\n* @param boolean Add trailing slash\n*/\nfunction extPathName($p_path,$p_addtrailingslash = false) {\n\t$retval = \"\";\n\n\t$isWin = (substr(PHP_OS, 0, 3) == 'WIN');\n\n\tif ($isWin)\t{\n\t\t$retval = str_replace( '/', '\\\\', $p_path );\n\t\tif ($p_addtrailingslash) {\n\t\t\tif (substr( $retval, -1 ) != '\\\\') {\n\t\t\t\t$retval .= '\\\\';\n\t\t\t}\n\t\t}\n\n\t\t// Check if UNC path\n\t\t$unc = substr($retval,0,2) == '\\\\\\\\' ? 1 : 0;\n\n\t\t// Remove double \\\\\n\t\t$retval = str_replace( '\\\\\\\\', '\\\\', $retval );\n\n\t\t// If UNC path, we have to add one \\ in front or everything breaks!\n\t\tif ( $unc == 1 ) {\n\t\t\t$retval = '\\\\'.$retval;\n\t\t}\n\t} else {\n\t\t$retval = str_replace( '\\\\', '/', $p_path );\n\t\tif ($p_addtrailingslash) {\n\t\t\tif (substr( $retval, -1 ) != '/') {\n\t\t\t\t$retval .= '/';\n\t\t\t}\n\t\t}\n\n\t\t// Check if UNC path\n\t\t$unc = substr($retval,0,2) == '//' ? 1 : 0;\n\n\t\t// Remove double //\n\t\t$retval = str_replace('//','/',$retval);\n\n\t\t// If UNC path, we have to add one / in front or everything breaks!\n\t\tif ( $unc == 1 ) {\n\t\t\t$retval = '/'.$retval;\n\t\t}\n\t}\n\n\treturn $retval;\n}\n/**\n* Utility function redirect the browser location to another url\n*\n* Can optionally provide a message.\n* @param string The file system path\n* @param string A filter for the names\n*/\nfunction extRedirect( $url, $msg='' ) {\n\n   global $mainframe;\n\n\t// specific filters\n\t$iFilter = new InputFilter();\n\t$url = $iFilter->process( $url );\n\tif (!empty($msg)) {\n\t\t$msg = $iFilter->process( $msg );\n\t}\n\n\tif ($iFilter->badAttributeValue( array( 'href', $url ))) {\n\t\t$url = $GLOBALS['home_dir'];\n\t}\n\n\tif (trim( $msg )) {\n\t\tif (strpos( $url, '?' )) {\n\t\t\t$url .= '&extmsg=' . urlencode( $msg );\n\t\t} else {\n\t\t\t$url .= '?extmsg=' . urlencode( $msg );\n\t\t}\n\t}\n\n\tif (headers_sent()) {\n\t\techo \"<script>document.location.href='$url';</script>\\n\";\n\t} else {\n\t\t@ob_end_clean(); // clear output buffer\n\t\theader( 'HTTP/1.1 301 Moved Permanently' );\n\t\theader( \"Location: \". $url );\n\t}\n\texit();\n}\n/**\n* Random password generator\n* @return password\n*/\nfunction extMakePassword($length=8) {\n\t$salt \t\t= \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n\t$makepass\t= '';\n\tmt_srand(10000000*(double)microtime());\n\tfor ($i = 0; $i < $length; $i++)\n\t\t$makepass .= $salt[mt_rand(0,61)];\n\treturn $makepass;\n}\n/**\n * Wrapper Function to encode passwords (maybe sometimes we don't use md5 anymore?)\n *\n * @param string $pass\n * @return string\n */\nfunction extEncodePassword( $pass ) {\n\trequire_once( _EXT_PATH.'/libraries/PasswordHash.php');\n\t$hasher = new PasswordHash(8, FALSE);\n\t$hash = $hasher->HashPassword($pass);\n\treturn $hash;\n}\n\nif (!function_exists('html_entity_decode')) {\n\t/**\n\t* html_entity_decode function for backward compatability in PHP\n\t* @param string\n\t* @param string\n\t*/\n\tfunction html_entity_decode ($string, $opt = ENT_COMPAT) {\n\n\t\t$trans_tbl = get_html_translation_table (HTML_ENTITIES);\n\t\t$trans_tbl = array_flip ($trans_tbl);\n\n\t\tif ($opt & 1) { // Translating single quotes\n\t\t\t// Add single quote to translation table;\n\t\t\t// doesn't appear to be there by default\n\t\t\t$trans_tbl[\"&apos;\"] = \"'\";\n\t\t}\n\n\t\tif (!($opt & 2)) { // Not translating double quotes\n\t\t\t// Remove double quote from translation table\n\t\t\tunset($trans_tbl[\"&quot;\"]);\n\t\t}\n\n\t\treturn strtr ($string, $trans_tbl);\n\t}\n}\n//------------------------------------------------------------------------------\nfunction logout() {\n\tsession_destroy();\n\tsession_write_close();\n\theader(\"Location: \".$GLOBALS[\"script_name\"]);\n}\n//------------------------------------------------------------------------------\n/**\n * Returns an IP- and BrowserID- based Session ID\n *\n * @param string $id\n * @return string\n */\nfunction generate_session_id( $id=null ) {\n\treturn extMakePassword( 32 );\n}\nfunction ext_getToken() {\n    return md5(session_id());\n}\nfunction ext_checkToken($token) {\n    return md5(session_id()) == $token;\n}", "<?php\n// ensure this file is being included by a parent file\nif (!defined('_JEXEC') && !defined('_VALID_MOS')) die('Restricted access');\n/**\n * @version $Id: init.php 238 2014-11-08 21:26:18Z soeren $\n * @package eXtplorer\n * @copyright soeren 2007-2011\n * @author The eXtplorer project (http://extplorer.net)\n * @author The\tThe QuiX project (http://quixplorer.sourceforge.net)\n * \n * @license\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n * \n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n * \n * Alternatively, the contents of this file may be used under the terms\n * of the GNU General Public License Version 2 or later (the \"GPL\"), in\n * which case the provisions of the GPL are applicable instead of\n * those above. If you wish to allow use of your version of this file only\n * under the terms of the GPL and not to allow others to use\n * your version of this file under the MPL, indicate your decision by\n * deleting  the provisions above and replace  them with the notice and\n * other provisions required by the GPL.  If you do not delete\n * the provisions above, a recipient may use your version of this file\n * under either the MPL or the GPL.\"\n * \n * This file initializes most of the variables and constants we need in eXtplorer\n */\n if (isset ($_SERVER['ORIG_PATH_INFO']) && $_SERVER['ORIG_PATH_INFO'] != $_SERVER['PHP_SELF']) {\n    $_SERVER['PATH_INFO'] = $_SERVER['ORIG_PATH_INFO'];\n}\n\n// Security measure, to avoid XSS exploit.\nif (!empty ($_SERVER['PATH_INFO']) && strrpos ($_SERVER['PHP_SELF'], $_SERVER['PATH_INFO'])) {\n    $_SERVER['PHP_SELF'] = substr ($_SERVER['PHP_SELF'], 0, -(strlen ($_SERVER['PATH_INFO'])));\n}\n// Vars\nif (isset($_SERVER)) {\n\t$GLOBALS['__GET']\t= &$_GET;\n\t$GLOBALS['__POST']\t= &$_POST;\n\t$GLOBALS['__SERVER'] = &$_SERVER;\n\t$GLOBALS['__FILES']  = &$_FILES;\n} elseif (isset($HTTP_SERVER_VARS)) {\n\t$GLOBALS['__GET']\t= &$HTTP_GET_VARS;\n\t$GLOBALS['__POST']\t= &$HTTP_POST_VARS;\n\t$GLOBALS['__SERVER'] = &$HTTP_SERVER_VARS;\n\t$GLOBALS['__FILES']  = &$HTTP_POST_FILES;\n} else {\n\tdie(\"<strong>ERROR: Your PHP version is too old</strong><br/>\".\n\t\"You need at least PHP 5.0 to run eXtplorer; preferably PHP 5.2 or higher.\");\n}\nif( !empty( $_GET['nofetchscript'])) {\n\t$_COOKIE['nofetchscript'] = 1;\n}\n//------------------------------------------------------------------------------\n\t// if gzcompress is available, we can use Zip, Tar and TGz\n\tif ( extension_loaded(\"zlib\")) {\n\t\t$GLOBALS[\"zip\"] = $GLOBALS[\"tgz\"] = true;\n\t}\n\telse {\n\t\t$GLOBALS[\"zip\"] = $GLOBALS[\"tgz\"] = false;\n\t}\n\n// the filename of the eXtplorer script: (you rarely need to change this)\n$GLOBALS[\"script_name\"] = \"//\"  . $GLOBALS['__SERVER']['HTTP_HOST'] . $GLOBALS['__SERVER'][\"PHP_SELF\"];\n$GLOBALS['home_url']\t= \"//\"  . $GLOBALS['__SERVER']['HTTP_HOST'] . dirname($GLOBALS['__SERVER'][\"PHP_SELF\"]);\n\n$GLOBALS['home_url'] = str_replace( '/administrator', '', $GLOBALS['home_url'] );\n$GLOBALS['home_dir'] = !empty( $_SERVER['DOCUMENT_ROOT'] ) ? $_SERVER['DOCUMENT_ROOT'] : '.';\n\n// Important Definitions!\ndefine (\"_EXT_PATH\",\t\trealpath(dirname( __FILE__ ) . '/..'));\ndefine (\"_EXT_FTPTMP_PATH\", realpath(dirname( __FILE__ ) . '/../ftp_tmp'));\n\nif (function_exists( 'mosGetParam') || class_exists( 'jconfig')) {\n\tdefine (\"_EXT_URL\", $GLOBALS['home_url'].\"/administrator/components/com_extplorer\");\n} else {\n\tdefine (\"_EXT_URL\", dirname($GLOBALS['script_name']));\n}\n\nrequire_once(_EXT_PATH . '/application.php');\nrequire_once(_EXT_PATH . '/include/functions.php');\n\n// check if we need login\n\tif ( !ext_isjoomla() ) {\n\t\t// login to use eXtplorer: (true/false)\n\t\t$GLOBALS[\"require_login\"] = true;\n\t} else {\n\t\t$GLOBALS[\"require_login\"] = false;\n\t}\n\nif (!class_exists('InputFilter')) {\n\trequire_once( _EXT_PATH . '/libraries/inputfilter.php' );\n}\nrequire_once(_EXT_PATH . \"/config/conf.php\");\n\n$GLOBALS[\"separator\"] = ext_getSeparator();\n\n$action \t\t\t= stripslashes(extGetParam( $_REQUEST, \"action\" ));\n$default_lang\t\t= !empty( $GLOBALS['mosConfig_lang'] ) ? $GLOBALS['mosConfig_lang'] : ext_Lang::detect_lang();\nif( !@is_object( $mainframe )) {\n\t$mainframe = JFactory::getApplication('administrator');\n}\n$GLOBALS[\"language\"] = basename($mainframe->getUserStateFromRequest( 'language', 'lang', $default_lang ));\n\n// Get Item\nif (isset($_REQUEST[\"item\"])) {\n  $GLOBALS[\"item\"]=$item = stripslashes(rawurldecode($_REQUEST[\"item\"]));\n} else {\n  $GLOBALS[\"item\"]=$item =\"\";\n}\n\nif (!empty( $GLOBALS['__POST'][\"selitems\"] )) {\n\t// Arrayfi the string 'selitems' if necessary\n\tif (!is_array( $GLOBALS['__POST'][\"selitems\"])) {\n\t\t$GLOBALS['__POST'][\"selitems\"] = array($GLOBALS['__POST'][\"selitems\"]);\n\t}\n\n\tforeach($GLOBALS['__POST'][\"selitems\"] as $i => $myItem) {\n\t\t$GLOBALS['__POST'][\"selitems\"][$i] = urldecode($myItem);\n\t}\n}\n\n// Get Sort\n$GLOBALS[\"order\"]\t= extGetParam( $_REQUEST, 'order', 'name');\n// Get Sortorder\n$GLOBALS[\"direction\"] = extGetParam( $_REQUEST, 'direction', 'ASC');\n$GLOBALS[\"start\"]\t= extGetParam( $_REQUEST, 'start', 0);\n$GLOBALS[\"limit\"]\t= extGetParam( $_REQUEST, 'limit', 50);\n\n//------------------------------------------------------------------------------\n\n/** @var $GLOBALS['file_mode'] Can be 'file' or 'ftp' */\nif (!isset($_REQUEST['file_mode']) && !empty($_SESSION['file_mode'])) {\n\t$GLOBALS['file_mode'] = extGetParam($_SESSION, 'file_mode', $GLOBALS['ext_conf']['authentication_method_default']);\n} else {\n\tif (@$_REQUEST['file_mode'] != @$_SESSION['file_mode'] && in_array($_REQUEST['file_mode'], $GLOBALS['ext_conf']['authentication_methods_allowed'])) {\n\t\tif ($action != 'login' && empty($_SESSION['credentials_'.extGetParam($_REQUEST, 'file_mode')])) {\n\t\t\textRedirect(ext_make_link( 'login','',null,null,null,null,'&type='.urlencode(extGetParam($_REQUEST, 'file_mode'))));\n\t\t} else {\n\t\t\t$GLOBALS['file_mode'] = $_SESSION['file_mode'] = extGetParam($_REQUEST, 'file_mode', $GLOBALS['ext_conf']['authentication_method_default']);\n\t\t}\n\t} elseif (isset($_REQUEST['file_mode'])) {\n\t\t$GLOBALS['file_mode'] = $_SESSION['file_mode'] = extGetParam($_REQUEST, 'file_mode', $GLOBALS['ext_conf']['authentication_method_default']);\n\t} else {\n\t\t$GLOBALS['file_mode'] = extGetParam($_SESSION, 'file_mode', $GLOBALS['ext_conf']['authentication_method_default']);\n\t}\n}\n\n// Necessary files\nrequire_once(_EXT_PATH.\"/languages/english.php\");\nif (file_exists(_EXT_PATH.\"/languages/\".$GLOBALS[\"language\"].\".php\")) {\n\trequire_once(_EXT_PATH.\"/languages/\".$GLOBALS[\"language\"].\".php\" );\n}\n\nrequire_once(_EXT_PATH . \"/languages/english_mimes.php\");\nif ( file_exists(_EXT_PATH . \"/languages/\" . $GLOBALS[\"language\"].\"_mimes.php\")) {\n\trequire_once(_EXT_PATH . \"/languages/\" . $GLOBALS[\"language\"].\"_mimes.php\");\n}\n\nrequire_once(_EXT_PATH . \"/config/mimes.php\");\nrequire_once(_EXT_PATH . '/libraries/JSON.php');\nrequire_once(_EXT_PATH . \"/libraries/Text/TextEncoding.php\");\nrequire_once(_EXT_PATH . \"/libraries/File_Operations.php\");\nrequire_once(_EXT_PATH . \"/include/header.php\");\nrequire_once(_EXT_PATH . \"/include/result.class.php\");\n\nif( $action == 'include_javascript' ) {\n  \twhile (@ob_end_clean());\n\tob_start();\n  \theader(\"Content-Type: text/javascript; charset=\".strtolower($GLOBALS[\"charset\"]));\n  \t$script_js_php = _EXT_PATH.'/scripts/'.basename(extGetParam($_REQUEST, 'file' )).'.php';\n  \tif( file_exists( $script_js_php ) ) include( $script_js_php );\n  \text_exit();\n}\n//------------------------------------------------------------------------------\n\n// Raise Memory Limit\next_RaiseMemoryLimit( '8M' );\n\n$GLOBALS['ext_File'] = new ext_File();\n\n\n//------------------------------------------------------------------------------\nif ($GLOBALS[\"require_login\"]) {\t// LOGIN\n\n\trequire(_EXT_PATH.\"/include/login.php\");\n\n\tif ($GLOBALS[\"action\"]==\"logout\") {\n\t\t$auth->onLogout();\n\t} else {\n\t\tif ($GLOBALS[\"action\"]==\"login\") {\n\t\t\t$GLOBALS[\"dir\"] = $dir = extGetParam( $_SESSION,'ext_'.$GLOBALS['file_mode'].'dir', '' );\n\t\t}\n\t\tlogin();\n\t\tif ($GLOBALS[\"action\"]==\"login\" || empty($_SESSION['credentials_'.$authentication_type]['username'])) {\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nif (ext_isWindows()) {\n\tif ( strstr($GLOBALS['home_dir'], ':')) {\n\t\t$GLOBALS['home_dir'][0] = strtoupper($GLOBALS['home_dir'][0]);\n\t}\n}\n\n//------------------------------------------------------------------------------\nif ( !isset( $_REQUEST['dir'] ) ) {\n\n\t$GLOBALS[\"dir\"] = $dir = extGetParam( $_SESSION,'ext_'.$GLOBALS['file_mode'].'dir', '' );\n\tif (!empty($dir)) {\n\t\t$dir = @$dir[0] == '/' ? substr( $dir, 1 ) : $dir;\n\t}\n\tif( @$GLOBALS[\"action\"]!=\"login\") {\n\t\t$try_this = ext_isFTPMode() ? '/'.$dir : $GLOBALS['home_dir'].'/'.$dir;\n\t\tif (!empty($dir) && !$GLOBALS['ext_File']->file_exists($try_this)) {\n\t\t\t$dir = '';\n\t\t}\n\t}\n} else {\n\t$GLOBALS[\"dir\"] = $dir = urldecode(stripslashes(extGetParam($_REQUEST, \"dir\")));\n}\n\nif ($dir == 'ext_root') {\n\t$GLOBALS[\"dir\"] = $dir = '';\n}\n\nif (ext_isFTPMode() && $dir != '') {\n\t$GLOBALS['FTPCONNECTION']->cd( $dir );\n}\n\n$abs_dir=get_abs_dir($GLOBALS[\"dir\"]);\n\nif (!file_exists($GLOBALS[\"home_dir\"])) {\n  if (!file_exists($GLOBALS[\"home_dir\"].$GLOBALS[\"separator\"])) {\n\tif ($GLOBALS[\"require_login\"]) {\n\t\t$extra = \"<a href=\\\"\" . ext_make_link(\"logout\",NULL,NULL) . \"\\\">\" . $GLOBALS[\"messages\"][\"btnlogout\"] . \"</a>\";\n\t} else {\n\t\t$extra = NULL;\n\t}\n\t//ext_Result::sendResult('', false, $GLOBALS[\"error_msg\"][\"home\"].\" (\".$GLOBALS[\"home_dir\"].\")\",$extra);\n  }\n}\n\nif (!$GLOBALS['ext_conf']['symlink_allow_abovehome']) {\n\tif (!down_home($abs_dir)) {\n\t\text_Result::sendResult('', false, $GLOBALS[\"dir\"].\" : \".$GLOBALS[\"error_msg\"][\"abovehome\"]);\n\t\t$dir = '';\n\t}\n}\n\nif (!get_is_dir(utf8_decode($abs_dir)) && !get_is_dir($abs_dir.$GLOBALS[\"separator\"])) {\n\text_Result::sendResult('', false, '\"'.$abs_dir.'\" - '.$GLOBALS[\"error_msg\"][\"direxist\"]);\n\t$dir = '';\n}\n\n$_SESSION['ext_'.$GLOBALS['file_mode'].'dir'] = $dir;\n//------------------------------------------------------------------------------\n", "<?php\n// ensure this file is being included by a parent file\nif( !defined( '_JEXEC' ) && !defined( '_VALID_MOS' ) ) die( 'Restricted access' );\n/**\n * @version $Id: mkitem.php 248 2016-02-26 18:29:50Z soeren $\n * @package eXtplorer\n * @copyright soeren 2007-2015\n * @author The eXtplorer project (http://extplorer.net)\n * @author The\tThe QuiX project (http://quixplorer.sourceforge.net)\n * \n * @license\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n * \n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n * \n * Alternatively, the contents of this file may be used under the terms\n * of the GNU General Public License Version 2 or later (the \"GPL\"), in\n * which case the provisions of the GPL are applicable instead of\n * those above. If you wish to allow use of your version of this file only\n * under the terms of the GPL and not to allow others to use\n * your version of this file under the MPL, indicate your decision by\n * deleting  the provisions above and replace  them with the notice and\n * other provisions required by the GPL.  If you do not delete\n * the provisions above, a recipient may use your version of this file\n * under either the MPL or the GPL.\"\n * \n */\n/**\n * Allows to create dirs, files and symlinks on a server\n *\n */\nclass ext_Mkitem extends ext_Action {\n\n\tfunction execAction($dir, $item=\"\") {\t\t// make new directory or file\n\t\tif(($GLOBALS[\"permissions\"]&01)!=01) ext_Result::sendResult( 'mkitem', false, $GLOBALS[\"error_msg\"][\"accessfunc\"]);\n\n\t\tif( extGetParam($_POST,'confirm') == 'true') {\n            // CSRF Security Check\n            if( !ext_checkToken($GLOBALS['__POST'][\"token\"]) ) {\n                ext_Result::sendResult('tokencheck', false, 'Request failed: Security Token not valid.');\n            }\n\t\t\t$mkname=$GLOBALS['__POST'][\"mkname\"];\n\t\t\t$mktype=$GLOBALS['__POST'][\"mktype\"];\n\t\t\t$symlink_target = $GLOBALS['__POST']['symlink_target'];\n\n\t\t\t$mkname=basename(stripslashes($mkname));\n\t\t\tif($mkname==\"\") ext_Result::sendResult( 'mkitem', false,  $GLOBALS[\"error_msg\"][\"miscnoname\"] );\n\n\t\t\t$new = get_abs_item($dir,$mkname);\n\n\t\t\tif(@$GLOBALS['ext_File']->file_exists($new)) {\n\t\t\t\text_Result::sendResult( 'mkitem', false, $mkname.\": \".$GLOBALS[\"error_msg\"][\"itemdoesexist\"]);\n\t\t\t}\n\t\t\t$err = print_r( $_POST, true );\n\t\t\tif($mktype==\"dir\") {\n\t\t\t\t$ok=@$GLOBALS['ext_File']->mkdir($new, 0777);\n\t\t\t\t$err=$GLOBALS[\"error_msg\"][\"createdir\"];\n\t\t\t} elseif( $mktype == 'file') {\n\t\t\t\t$ok=@$GLOBALS['ext_File']->mkfile($new);\n\t\t\t\t$err=$GLOBALS[\"error_msg\"][\"createfile\"];\n\t\t\t} elseif( $mktype == 'symlink' ) {\n\t\t\t\tif( empty( $symlink_target )) {\n\t\t\t\t\text_Result::sendResult( 'mkitem', false, 'Please provide a valid <strong>target</strong> for the symbolic link.');\n\t\t\t\t}\n\t\t\t\tif( !file_exists($symlink_target) || !is_readable($symlink_target)) {\n\t\t\t\t\text_Result::sendResult( 'mkitem', false, 'The file you wanted to make a symbolic link to does not exist or is not accessible by PHP.');\n\t\t\t\t}\n\t\t\t\t$ok = symlink( $symlink_target, $new );\n\t\t\t\t$err = 'The symbolic link could not be created.';\n\t\t\t}\n\n\t\t\tif($ok==false || PEAR::isError( $ok )) {\n\t\t\t\tif( PEAR::isError( $ok ) ) $err.= $ok->getMessage();\n\t\t\t\text_Result::sendResult( 'mkitem', false, $err);\n\t\t\t}\n\t\t\text_Result::sendResult( 'mkitem', true, 'The item '.$new.' was created' );\n\n\t\t\treturn;\n\t\t}\n\t?>\n\t\t{\n\t\t\"xtype\": \"form\",\n\t\t\"id\": \"simpleform\",\n\t\t\"labelWidth\": 125,\n\t\t\"url\":\"<?php echo basename( $GLOBALS['script_name']) ?>\",\n\t\t\"dialogtitle\": \"Create New File/Directory\",\n\t\t\"frame\": true,\n\t\t\"items\": [{\n\t\t\t\"xtype\": \"textfield\",\n\t\t\t\"fieldLabel\": \"<?php echo ext_Lang::msg( \"nameheader\", true ) ?>\",\n\t\t\t\"name\": \"mkname\",\n\t\t\t\"width\":175,\n\t\t\t\"allowBlank\":false\n\t\t\t},{\n\t\t\t\"xtype\": \"combo\",\n\t\t\t\"fieldLabel\": \"Type\",\n\t\t\t\"store\": [[\"file\", \"<?php echo ext_Lang::mime( 'file', true ) ?>\"],\n\t\t\t\t\t\t[\"dir\", \"<?php echo ext_Lang::mime( 'dir', true ) ?>\"]\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif( !ext_isFTPMode() && !$GLOBALS['isWindows']) { ?>\n\t\t\t\t\t\t,[\"symlink\", \"<?php echo ext_Lang::mime( 'symlink', true ) ?>\"]\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t} ?>\n\t\t\t\t\t],\n\t\t\tdisplayField:\"type\",\n\t\t\tvalueField: \"mktype\",\n\t\t\tvalue: \"file\",\n\t\t\thiddenName: \"mktype\",\n\t\t\tdisableKeyFilter: true,\n\t\t\teditable: false,\n\t\t\ttriggerAction: \"all\",\n\t\t\tmode: \"local\",\n\t\t\tallowBlank: false,\n\t\t\tselectOnFocus:true\n\t\t},{\n\t\t\t\"xtype\": \"textfield\",\n\t\t\t\"fieldLabel\": \"<?php echo ext_Lang::msg( 'symlink_target', true ) ?>\",\n\t\t\t\"name\": \"symlink_target\",\n\t\t\t\"width\":175,\n\t\t\t\"allowBlank\":true\n\t\t}],\n\t\t\"buttons\": [{\n\t\t\t\"text\": \"<?php echo ext_Lang::msg( 'btncreate', true ) ?>\", \n\t\t\t\"handler\": function() {\n\t\t\t\tstatusBarMessage( \"Please wait...\", true );\n\t\t\t\tExt.getCmp(\"simpleform\").getForm().submit({\n\t\t\t\t\t//reset: true,\n\t\t\t\t\treset: false,\n\t\t\t\t\tsuccess: function(form, action) {\n\t\t\t\t\t\tstatusBarMessage( action.result.message, false, true );\n\t\t\t\t\t\ttry{ \n\t\t\t\t\t\t\tdirTree.getSelectionModel().getSelectedNode().reload(); \n\t\t\t\t\t\t} catch(e) {}\n\t\t\t\t\t\tdatastore.reload();\n\t\t\t\t\t\tExt.getCmp(\"dialog\").destroy();\n\t\t\t\t\t},\n\t\t\t\t\tfailure: function(form, action) {\n\t\t\t\t\t\tif( !action.result ) return;\n\t\t\t\t\t\tExt.Msg.alert(\"Error!\", action.result.error);\n\t\t\t\t\t\tstatusBarMessage( action.result.error, false, false );\n\t\t\t\t\t},\n\t\t\t\t\tscope: Ext.getCmp(\"simpleform\"),\n\t\t\t\t\t// add some vars to the request, similar to hidden fields\n\t\t\t\t\tparams: {option: \"com_extplorer\", \n\t\t\t\t\t\t\taction: \"mkitem\", \n\t\t\t\t\t\t\tdir: datastore.directory, \n\t\t\t\t\t\t\tconfirm: \"true\",\n\t\t\t\t\t\t\ttoken: \"<?php echo ext_getToken() ?>\"\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t},{\n\t\t\t\"text\": \"<?php echo ext_Lang::msg( 'btncancel', true ) ?>\", \n\t\t\t\"handler\": function() { Ext.getCmp(\"dialog\").destroy(); }\n\t\t}]\n\t}\n\t<?php\n\t}\n}\n\n//------------------------------------------------------------------------------\n", "<?php\n// ensure this file is being included by a parent file\nif( !defined( '_JEXEC' ) && !defined( '_VALID_MOS' ) ) die( 'Restricted access' );\n/**\n * @version $Id: result.class.php 232 2014-02-13 20:08:10Z soeren $\n * @package eXtplorer\n * @copyright soeren 2007-2010\n * @author The eXtplorer project (http://extplorer.net)\n * \n * @license\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n * \n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n * \n * Alternatively, the contents of this file may be used under the terms\n * of the GNU General Public License Version 2 or later (the \"GPL\"), in\n * which case the provisions of the GPL are applicable instead of\n * those above. If you wish to allow use of your version of this file only\n * under the terms of the GPL and not to allow others to use\n * your version of this file under the MPL, indicate your decision by\n * deleting  the provisions above and replace  them with the notice and\n * other provisions required by the GPL.  If you do not delete\n * the provisions above, a recipient may use your version of this file\n * under either the MPL or the GPL.\"\n * \n */\n\n/**\n * Allows to handle errors and send results in JSON format\n *\n */\nclass ext_Result {\n    static function init() {\n\t\text_Result::empty_errors();\n\t\text_Result::empty_messages();\n\t}\n    static function add_message($message, $type='general') {\n\t\t$_SESSION['ext_message'][$type][] = $message;\n\t}\n    static function empty_messages() {\n\t\t$_SESSION['ext_message'] = array();\n\t}\n    static function count_messages() {\n\n\t\tif( empty($_SESSION['ext_message'])) {\n\t\t\treturn 0;\n\t\t}\n\t\t$count = 0;\n\t\tforeach( $_SESSION['ext_message'] as $type ) {\n\t\t\tif( !empty( $type ) && is_array( $type )) {\n\t\t\t\t$count += sizeof( $type );\n\t\t\t}\n\t\t}\n\t\treturn $count;\n\t}\n    static function add_error($error, $type='general') {\n\t\t$_SESSION['ext_error'][$type][] = $error;\n\t}\n    static function empty_errors() {\n\t\t$_SESSION['ext_error'] = array();\n\t}\n    static function count_errors() {\n\t\tif( empty($_SESSION['ext_error'])) {\n\t\t\treturn 0;\n\t\t}\n\t\t$count = 0;\n\t\tforeach( @$_SESSION['ext_error'] as $type ) {\n\t\t\tif( !empty( $type ) && is_array( $type )) {\n\t\t\t\t$count += sizeof( $type );\n\t\t\t}\n\t\t}\n\t\treturn $count;\n\t}\n\tstatic function sendResult( $action, $success, $msg,$extra=array() ) {\t\t// show error-message\n\t\t\n\t\tif( ext_isXHR() ) {\n\t\t\t\n\t\t\t$success = (bool)$success;\n\t\t\tif( $success && ext_Result::count_errors() > 0 ) {\n\t\t\t\t$success = false;\n\t\t\t\tforeach( @$_SESSION['ext_error'] as $type ) {\n\t\t\t\t\tif( is_array( $type )) {\n\t\t\t\t\t\tforeach( $type as $error ) {\n\t\t\t\t\t\t\t$msg .= '<br />'.$error;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$result = array('action' => $action,\n\t\t\t\t\t\t\t'message' => str_replace(\"'\", \"\\\\'\", $msg ),\n\t\t\t\t\t\t\t'error' => str_replace(\"'\", \"\\\\'\", $msg ),//.print_r($_POST,true),\n\t\t\t\t\t\t\t'success' => $success \n\t\t\t\t\t\t);\n\t\t\tforeach( $extra as $key => $value ) {\n\t\t\t\t$result[$key] = $value;\n\t\t\t}\n\t\t\t$classname = class_exists('ext_Json') ? 'ext_Json' : 'Services_JSON';\n\t\t\t$json = new $classname();\n\t\t\t$jresult = $json->encode($result);\n\t\t\tif(strtolower(extGetParam($_POST,'requestType')) == 'xmlhttprequest') {\n\t\t\t\theader(\"Content-type: text/html\");\n\t\t\t}\n\t\t\tprint $jresult;\n\t\t\text_exit();\n\t\t}\n\t\t$messagetxt = '';\n\t\tif($extra != NULL) {\n\t\t\t$msg .= \" - \".$extra;\n\t\t}\n\t\tif( $msg != '' ) {\n\t\t\text_Result::add_error( $msg );\n\t\t}\n\n\t\tif( ext_Result::count_messages() < 1 && ext_Result::count_errors() < 1 ) {\n\t\t\treturn;\n\t\t}\n\t\t\t\n\t\t\tif( ext_Result::count_messages() > 0 ) {\n\t\t\t\t$messagetxt .= '<h3>'.$GLOBALS[\"error_msg\"][\"message\"].':</h3>';\n\n\t\t\t\tforeach ( $_SESSION['ext_message'] as $msgtype ) {\n\t\t\t\t\tforeach ( $msgtype as $message ) {\n\t\t\t\t\t\t$messagetxt .= $message .'<br/>';\n\t\t\t\t\t}\n\t\t\t\t\t$messagetxt .= '<br /><hr /><br />';\n\t\t\t\t}\n\t\t\t\text_Result::empty_messages();\n\n\t\t\t\tif( !empty( $_REQUEST['extra'])) {\n\t\t\t\t\t$messagetxt .= ' - '.htmlspecialchars(urldecode($_REQUEST['extra']), ENT_QUOTES );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\tif( !empty( $_SESSION['ext_error'])) {\n\t\t\t\t$messagetxt .= '<h3>'.$GLOBALS[\"error_msg\"][\"error\"].':</h3>';\n\n\t\t\t\tforeach ( $_SESSION['ext_error'] as $errortype ) {\n\t\t\t\t\tforeach ( $errortype as $error ) {\n\t\t\t\t\t\t$messagetxt .= $error .'<br/>';\n\t\t\t\t\t}\n\t\t\t\t\t$messagetxt .= '<br /><hr /><br />';\n\t\t\t\t}\n\t\t\t\text_Result::empty_errors();\n\t\t\t}\n\t\t\t\n\t\t\tif( !empty( $_REQUEST['extra'])) {\n\t\t\t\t$messagetxt .= \" - \".htmlspecialchars(urldecode($_REQUEST['extra']), ENT_QUOTES );\n\t\t\t}\n\t\t\textHTML::loadExtJS();\n\t\t\tshow_header();\n\t\t\tdefined('EXPLORER_NOEXEC') or define('EXPLORER_NOEXEC', 1 );\n\t\t\t\n\t\t\techo ext_scriptTag('', 'Ext.Msg.alert(\\'Status\\', \\''.$messagetxt . '\\')' );\n\t\t//}\n\t\t$GLOBALS['action'] = 'show_error';\n\t}\n}\n//------------------------------------------------------------------------------\n", "<?php\n// ensure this file is being included by a parent file\nif( !defined( '_JEXEC' ) && !defined( '_VALID_MOS' ) ) die( 'Restricted access' );\n/**\n * @version $Id: search.php 237 2014-04-25 11:47:48Z soeren $\n * @package eXtplorer\n * @copyright soeren 2007-2014\n * @author The eXtplorer project (http://extplorer.net)\n * @author The\tThe QuiX project (http://quixplorer.sourceforge.net)\n *\n * @license\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n *\n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n *\n * Alternatively, the contents of this file may be used under the terms\n * of the GNU General Public License Version 2 or later (the \"GPL\"), in\n * which case the provisions of the GPL are applicable instead of\n * those above. If you wish to allow use of your version of this file only\n * under the terms of the GPL and not to allow others to use\n * your version of this file under the MPL, indicate your decision by\n * deleting  the provisions above and replace  them with the notice and\n * other provisions required by the GPL.  If you do not delete\n * the provisions above, a recipient may use your version of this file\n * under either the MPL or the GPL.\"\n *\n * File-Search Functions\n */\nfunction ext_search_items($dir)\n{ // search for item\n    if (empty($dir) && !empty($GLOBALS['__POST'][\"item\"])) {\n        $dir = $GLOBALS['__POST'][\"item\"];\n    }\n    if (isset($GLOBALS['__POST'][\"searchitem\"])) {\n\n        $searchitem = stripslashes($GLOBALS['__POST'][\"searchitem\"]);\n        $subdir = !empty($GLOBALS['__POST'][\"subdir\"]);\n        $content = $GLOBALS['__POST'][\"content\"];\n        $list = make_list($dir, $searchitem, $subdir, $content);\n    } else {\n        $searchitem = NULL;\n        $subdir = true;\n    }\n\n    if (empty($searchitem)) {\n        show_searchform($dir);\n        return;\n    }\n\n    // Results in JSON\n    $items['totalCount'] = count($list);\n    $result = get_result_array($list);\n    $start = (int)$GLOBALS['__POST'][\"start\"];\n    $limit = (int)$GLOBALS['__POST'][\"limit\"];\n\n    if ($start < $items['totalCount'] && $limit < $items['totalCount']) {\n        $result = array_splice($result, $start, $limit);\n    }\n\n    $items['items'] = $result;\n    $json = new ext_Json();\n\n    while (@ob_end_clean()) ;\n\n    echo $json->encode($items);\n\n}\n\n//------------------------------------------------------------------------------\nfunction make_list($dir, $item, $subdir, $content)\n{ // make list of found items\n\n    // search\n    if (ext_isFTPMode()) {\n        find_item_ftp($dir, $item, $list, $subdir, $content);\n    } else {\n        find_item($dir, $item, $list, $subdir, $content);\n    }\n    if (is_array($list)) sort($list);\n    return $list;\n}\n\nfunction find_item_ftp($dir,$item,&$list,$recur, $content) {\t// find items\n\t$homedir = realpath($GLOBALS['home_dir']);\n    $opendir = $dir;\n\t// convert shell-wildcards to PCRE Regex Syntax\n\t$pat=str_replace(\"?\",\".\",str_replace(\"*\",\".*\",str_replace(\".\",\"\\\\.\",$item)));\n\t\n    if( !is_dir( $dir )) {\n        $opendir = get_abs_dir($dir);\n    }\n\t$handle = @$GLOBALS['ext_File']->opendir( $opendir );\n\n\tif($handle===false && $dir==\"\") {\n\t\t$handle = @$GLOBALS['ext_File']->opendir($homedir . $GLOBALS['separator']);\n\t}\n\n\tif($handle===false) {\n\t\text_Result::sendResult('search', false, $opendir .\": \".$GLOBALS[\"error_msg\"][\"opendir\"]);\n\t}\n\n\twhile(($new_item=$GLOBALS['ext_File']->readdir($handle))!==false) {\n\t\tif( is_array( $new_item ))\t{\n\t\t\t$abs_new_item = $new_item;\n\t\t} else {\n\t\t\t$abs_new_item = get_abs_item($dir, $new_item);\n\t\t}\n\n\t\t//if(!$GLOBALS['ext_File']->file_exists($abs_new_item)) continue;\n\n\t\tif(!get_show_item($dir, $new_item)) continue;\n\n\t\t$isDir = get_is_dir($abs_new_item);\n\t\t// match?\n\t\t$include = false;\n\t\tif(@preg_match('@'.$pat.'@is',$new_item) > 0 ) {\n\t\t    $include = true;\n\t\t}\n\t\tif (!$isDir && $include && \n\t\t\t$content && \n\t\t\t$GLOBALS['ext_File']->filesize($abs_new_item) < 524288) {\n\n\t\t    $data = $GLOBALS['ext_File']->file_get_contents( $abs_new_item );\n            $pattern = preg_quote($content, '/');\n            // finalise the regular expression, matching the whole line\n            $pattern = \"/^.*$pattern.*\\$/m\";\n    \t\tif (preg_match('@'. $pattern.'@is', $data) > 0 ) {\n\t    \t    $include = true;\n\t\t    }\n\t\t    \n\t\t}\n        if( $include ) {\n            $list[]=array($dir,$new_item);\n        }\n\t\t// search sub-directories\n\t\tif($isDir && $recur) {\n\t\t\tfind_item($abs_new_item,$pat,$list,$recur, $content);\n\t\t}\n\t}\n\n\t$GLOBALS['ext_File']->closedir($handle);\n}\nfunction find_item($dir,$pat,&$files,$subdir, $content) {\n    if (!is_dir($dir)) {\n        $dir = get_abs_dir($dir);\n    }\n\tif( !$subdir ) {\n\t\t$files = glob($dir.'/'.$pat);\n\t} else {\n        $files = glob_recursive($dir.'/'.$pat);\n\t}\n\n\tif($files===false) {\n\t\text_Result::sendResult('search', false, $dir .\": \".$GLOBALS[\"error_msg\"][\"opendir\"]);\n\t}\n\tif( $content ) {\n\t\t$newList = array();\n\t\tforeach( $files as $file ) {\n            $contents = file_get_contents($file);\n\t\t\t$pattern = preg_quote($content, '/');\n\t\t\t// finalise the regular expression, matching the whole line\n\t\t\t$pattern = \"/^.*$pattern.*\\$/m\";\n\t\t\t// search, and store all matching occurences in $matches\n\t\t\tif(preg_match_all($pattern, $contents, $matches)){\n\t\t\t\t$newList[] = $file;\n\t\t\t}\n\t\t}\n\t\t$files = $newList;\n\t}\n\tif( !empty( $_POST['mdate_start'] )) {\n        $mdate_start = strtotime($_POST['mdate_start']);\n\t\tif( empty($_POST['mdate_end'] )) {\n\t\t\t$mdate_end = time();\n\t\t} else {\n\t\t\t$mdate_end = strtotime( $_POST['mdate_end'] );\n\t\t}\n\t\tif( $mdate_start  && $mdate_end ) {\n\t\t\t$newList = array();\n\t\t\tforeach( $files as $file ) {\n\t\t\t\t$filemtime = filemtime( $file );\n\t\t\t\tif( $filemtime > $mdate_start && $filemtime < $mdate_end ) {\n\t\t\t\t\t$newList[] = $file;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$files = $newList;\n\t\t}\n\t}\n\tif( !empty( $_POST['age_value'] )) {\n\t\t$age_value =(int)$_POST['age_value'];\n\t\t$age_units = array(\"minutes\", \"hours\", \"days\", \"weeks\", \"months\", \"years\");\n\t\tif (in_array($_POST['age_unit'], $age_units)) {\n\t\t\t$age_unit = $_POST['age_unit'];\n\t\t} else {\n\t\t\t$age_unit = \"days\";\n\t\t}\n\t\t$age_time = strtotime(\"-\".$age_value.\" \".$age_unit);\n\n\t\tif( $age_time ) {\n\t\t\t$newList = array();\n\t\t\tforeach( $files as $file ) {\n\t\t\t\t$filemtime = filemtime( $file );\n\t\t\t\tif( $filemtime > $age_time ) {\n\t\t\t\t\t$newList[] = $file;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$files = $newList;\n\t\t}\n\t}\n    $newList = array();\n    foreach( $files as $file ) {\n        $newList[] = array(dirname($file),basename($file));\n    }\n    $files  = $newList;\n}\n\n\n\nfunction get_result_array($list) {\t\t\t// print table of found items\n\tif(!is_array($list)) return;\n\n\t$cnt = count($list);\n\t$array = array();\n\tfor($i=0;$i<$cnt;++$i) {\n\t\t$dir = $list[$i][0];\t$item = $list[$i][1];\n\t\t$s_dir=str_ireplace($GLOBALS['home_dir'], '', $dir );\n\t\tif(strlen($s_dir)>65) $s_dir=substr($s_dir,0,62).\"...\";\n\t\t$s_item=str_ireplace($GLOBALS['home_dir'], '', $item );\tif(strlen($s_item)>45) $s_item=substr($s_item,0,42).\"...\";\n\t\t$link = \"\";\t$target = \"\";\n\t\t\n\t\t\n\t\tif(get_is_dir($dir,$item)) {\n\t\t\t$img = \"dir.png\";\n\t\t\t$link = ext_make_link(\"list\",get_rel_item($dir, $item),NULL);\n\t\t} else {\n\t\t\t$img = get_mime_type( $item, \"img\");\n\t\t\t//if(get_is_editable($dir,$item) || get_is_image($dir,$item)) {\n\t\t\t$link = $GLOBALS[\"home_url\"].\"/\".get_rel_item($dir, $item);\n\t\t\t$target = \"_blank\";\n\t\t\t//}\n\t\t}\n\t\t$array[$i]['last_mtime'] = ext_isFTPMode() ? $GLOBALS['ext_File']->filemtime($GLOBALS['home_dir'].'/'.$dir.'/'.$item) : filemtime($dir.'/'.$item);\n\t\t$array[$i]['file_id'] = md5($s_dir.$s_item);\n\t\t$array[$i]['dir'] = str_ireplace($GLOBALS['home_dir'], '', $dir );\n\t\t$array[$i]['s_dir'] = empty($s_dir) ? '' : $s_dir;\n\t\t$array[$i]['file'] = $s_item;\n\t\t$array[$i]['link'] = $link;\n\t\t$array[$i]['icon'] = _EXT_URL.\"/images/$img\";\n\t}\n\treturn $array;\n}\n\n/**\n * Recursive implementation of glob\n * @param $pattern\n * @param int $flags\n * @return array\n */\nfunction glob_recursive($pattern, $flags = 0)\n{\n    $files = glob($pattern, $flags);\n    if ($files === false) return array();\n    foreach (glob(dirname($pattern) . '/*', GLOB_ONLYDIR | GLOB_NOSORT) as $dir) {\n        $files = array_merge($files, glob_recursive($dir . '/' . basename($pattern), $flags));\n    }\n\n    return $files;\n}\n//------------------------------------------------------------------------------\n\nfunction show_searchform($dir='') {\n\t?>\n{\n     \"height\":400,\n     \"autoScroll\":true,\n\n     items: [\n        new Ext.TabPanel({\n        activeTab: 0,\n        items: [{\n            \"title\":\"<?php echo $GLOBALS[\"messages\"][\"searchlink\"] ?>\",\n            \"height\": \"370\",\n            \"autoScroll\":true,\n            \"items\":\n                new Ext.DataView({\n                \"id\": \"dataview\",\n                 tpl: new Ext.XTemplate(\n                    '<tpl for=\".\">',\n                    '<div class=\"search-item\">',\n                        '<h3>',\n                        '<a onclick=\"selectFile(\\'{dir}\\', \\'{file}\\');Ext.getCmp(\\'dialog\\').destroy();return false;\" href=\"#\" target=\"_blank\">{s_dir}/{file}, {lastModified:date(\"M j, Y\")}</a>',\n                        '</h3>',\n                    '</div></tpl>'\n                ),\n                 store: new Ext.data.Store({\n                        proxy: new Ext.data.HttpProxy({\n                            url: \"<?php echo $GLOBALS['script_name'] ?>\"\n                        }),\n                        reader: new Ext.data.JsonReader({\n                            root: 'items',\n                            totalProperty: 'totalCount',\n                            id: 'file_id'\n                        }, [\n                            {name: 'fileId', mapping: 'file_id'},\n                            {name: 'file', mapping: 'file'},\n                            {name: 'dir', mapping: 'dir'},\n                            {name: 's_dir', mapping: 's_dir'},\n                            {name: 'lastModified', mapping: 'last_mtime', type: 'date', dateFormat: 'timestamp'}\n                        ]),\n                        baseParams: {\n                            limit:20,\n                            option: \"com_extplorer\",\n                            action:\"search\",\n                            dir: \"<?php echo $dir ?>\",\n                            content: '0',\n                            subdir: '1'\n                        }\n                    }),\n                 itemSelector: 'div.search-item'\n            }),\n\n         tbar: [\n             'Search: ', ' ',\n             new Ext.app.SearchField({\n                 store: Ext.getCmp(\"dataview\").store,\n                 width:320,\n                value: \"*\"\n             })\n         ],\n\n         bbar: new Ext.PagingToolbar({\n             store: Ext.getCmp(\"dataview\").store,\n             pageSize: 20,\n             displayInfo: true,\n             displayMsg: 'Results {0} - {1} of {2}',\n             emptyMsg: \"No files to display\"\n         })\n    },\n    {\n        title: \"Search Options\",\n        xtype:\"form\",\n        layout: \"form\",\n        \"height\": \"350\",\n        items: [\n\n            {\n                id:'myGroup',\n                xtype: 'checkboxgroup',\n                fieldLabel: 'Extensive Search',\n                itemCls: 'x-check-group-alt',\n                // Put all controls in a single column with width 100%\n                columns: 1,\n                items: [\n                {\n                    boxLabel: 'Search within Subdirectories?', name: 'subdir',\n                    checked: true,\n                    tooltip: \"<?php echo ext_Lang::msg( 'miscsubdirs', true ) ?>?\",\n                    \"listeners\": {\n                        \"check\": {\n                            fn: function(box, checked) {\n                                Ext.getCmp(\"dataview\").store.baseParams.subdir = (checked ? '1' : '0');\n                            }\n                        }\n                    }\n                 }\n                ]\n            },{\n                fieldLabel: \"<?php echo ext_Lang::msg('misccontent', true) ?>\",\n                xtype: \"textfield\",\n                width: 200,\n                id: \"contentfield\",\n                name: \"content\",\n                \"listeners\": {\n                    \"change\": {\n                        fn: function(field, newValue) {\n                            Ext.getCmp(\"dataview\").store.baseParams.content = newValue;\n                        }\n                    }\n                }\n\n            },\n            {\n                xtype: \"compositefield\",\n                items: [\n                {\n                    xtype: \"checkbox\",\n                    fieldLabel: \"Modification Date between\",\n                    \"listeners\": {\n                    \"check\": {\n                        fn: function(box, checked) {\n                            if( checked ) {Ext.getCmp( \"mdate_start\" ).enable(); Ext.getCmp( \"mdate_end\" ).enable(); }\n                            else {\n\t\t\t\t\t\t\t\tExt.getCmp( \"mdate_start\" ).disable(); Ext.getCmp( \"mdate_end\" ).disable(); \t\n\t\t\t\t\t\t\t\tExt.getCmp(\"dataview\").store.baseParams.mdate_start = \"\";\n\t\t\t\t\t\t\t\tExt.getCmp(\"dataview\").store.baseParams.mdate_end = \"\";\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n                        }\n                    }\n                }\n                },\n                new Ext.form.DateField({\n                    tooltip: 'Start',\n                    name: 'mdate_start',\n                    id: 'mdate_start',\n                    \"listeners\": {\n                        \"change\": {\n                            fn: function(field, newValue) {\n                                Ext.getCmp(\"dataview\").store.baseParams.mdate_start = newValue;\n                            }\n                        }\n                    },\n                    width:90,\n                    disabled: true\n                }),\n                new Ext.form.DateField({\n                    tooltip: 'End',\n                    name: 'mdate_end',\n                    id: 'mdate_end',\n                    disabled: true,\n                    \"listeners\": {\n                        \"change\": {\n                            fn: function(field, newValue) {\n                                Ext.getCmp(\"dataview\").store.baseParams.mdate_end = newValue;\n                            }\n                        }\n                    },\n                    width:90\n                })\n\n                ]\n            },\n            {\n                xtype: \"compositefield\",\n                items: [\n                {\n                    xtype: \"checkbox\",\n                    name: \"age_enabled\",\n                    fieldLabel: \"max. File Age\",\n                    \"listeners\": {\n                        \"check\": {\n                            fn: function(box, checked) {\n                                if( checked ) {Ext.getCmp( \"age_unit\" ).enable(); Ext.getCmp( \"age_value\" ).enable(); }\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tExt.getCmp( \"age_value\" ).disable(); Ext.getCmp( \"age_unit\" ).disable(); \t\n\t\t\t\t\t\t\t\t\tExt.getCmp(\"dataview\").store.baseParams.age_value = \"\";\n\t\t\t\t\t\t\t\t\tExt.getCmp(\"dataview\").store.baseParams.age_unit = \"\";\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n                            }\n                        }\n                    }\n                },\n\t\t\t\t{\n\t\t\t\t\txtype: \"textfield\",\n\t\t\t\t\tname: \"age_value\",\n\t\t\t\t\tid: \"age_value\",\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\twidth: 40,\n                    \"listeners\": {\n                        \"change\": {\n                            fn: function(field, newValue) {\n                                Ext.getCmp(\"dataview\").store.baseParams.age_value = newValue;\n                            }\n                        }\n                    },\n\t\t\t\t\tdisabled: true\n\t\t\t\t},\n\t\t\t\t\tnew Ext.form.ComboBox({\n\t\t\t\t\t\ttriggerAction: 'all',\n\t\t\t\t\t\tlazyRender:true,\n\t\t\t\t\t\tmode: 'local',\n\t\t\t\t\t\tdisabled: true,\n\t\t\t\t\t\tname: \"age_unit\",\n\t\t\t\t\t\tid: \"age_unit\",\n\t\t\t\t\t\tvalue: \"days\",\n                        \"listeners\": {\n                            \"change\": {\n                                fn: function(field, newValue) {\n                                    Ext.getCmp(\"dataview\").store.baseParams.age_unit = newValue;\n                                }\n                            }\n                        },\n\t\t\t\t\t\tstore: new Ext.data.ArrayStore({\n\t\t\t\t\t\t\tid: 0,\n\t\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t\t'myId',\n\t\t\t\t\t\t\t\t'displayText'\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tdata: [[\"minute\", 'Minute(s)'], [\"hours\", 'Hour(s)'],\n\t\t\t\t\t\t\t\t[\"days\", \"Day(s)\"], [\"weeks\", \"Week(s)\"], [\"months\", \"Month(s)\"], [\"years\", \"Year(s)\" ]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tvalueField: 'myId',\n\t\t\t\t\t\tdisplayField: 'displayText'\n\t\t\t\t\t})\n                ]\n            }\n\n    ]\n    }]\n    })\n    ]\n}\n\n<?php \n\t\n}\n\n//------------------------------------------------------------------------------\n", "<?php\r\n\r\n// Turkish Language for eXtplorer (Translated by Sinan Ata, Tolga'(cumla.blogspot.com))\r\nglobal $_VERSION;\r\n\r\n$GLOBALS[\"charset\"] = \"UTF-8\";\r\n$GLOBALS[\"text_dir\"] = \"ltr\"; // ('ltr' for left to right, 'rtl' for right to left)\r\n$GLOBALS[\"date_fmt\"] = \"Y/m/d H:i\";\r\n$GLOBALS[\"error_msg\"] = array(\r\n\t// error\r\n\t\"error\"\t\t\t=> \"Hata(lar)\",\r\n\t\"message\"\t\t=> \"Mesaj(lar)\",\r\n\t\"back\"\t\t\t=> \"Geri Gel\",\r\n\t\r\n\t// root\r\n\t\"home\"\t\t\t=> \"Ana klas\u00f6r olu\u015fturulmam\u0131\u015f ayarlar\u0131n\u0131z\u0131 kontrol edin.\",\r\n\t\"abovehome\"\t\t=> \"Bu klas\u00f6r ana klas\u00f6r\u00fcn \u00fcst\u00fcnde olmamal\u0131d\u0131r.\",\r\n\t\"targetabovehome\"\t=> \"Hedef klas\u00f6r ana klas\u00f6r\u00fcn \u00fcst\u00fcnde olmamal\u0131d\u0131r.\",\r\n\t\r\n\t// exist\r\n\t\"direxist\"\t\t=> \"Bu klas\u00f6r olu\u015fturulamad\u0131.\",\r\n\t//\"filedoesexist\"\t=> \"Bu dosya zaten var.\",\r\n\t\"fileexist\"\t\t=> \"Bu dosya olu\u015fturulamad\u0131.\",\r\n\t\"itemdoesexist\"\t\t=> \"Bu \u00f6\u011fe zaten var.\",\r\n\t\"itemexist\"\t\t=> \"Bu \u00f6\u011fe mevcut de\u011fil.\",\r\n\t\"targetexist\"\t\t=> \"Hedef klas\u00f6r mevcut de\u011fil.\",\r\n\t\"targetdoesexist\"\t=> \"Hedef \u00f6\u011fe zaten mevcut.\",\r\n\t\r\n\t// open\r\n\t\"opendir\"\t\t=> \"Klas\u00f6r A\u00e7\u0131lamaz.\",\r\n\t\"readdir\"\t\t=> \"Klas\u00f6r Okunamaz.\",\r\n\t\r\n\t// access\r\n\t\"accessdir\"\t\t=> \"Bu klas\u00f6re ula\u015fmak i\u00e7in izinleriniz yetersiz.\",\r\n\t\"accessfile\"\t\t=> \"Bu dosyaya ula\u015fmak i\u00e7in izinleriniz yetersiz.\",\r\n\t\"accessitem\"\t\t=> \"Bu \u00f6\u011feye ula\u015fmak i\u00e7in izinleriniz yetersiz.\",\r\n\t\"accessfunc\"\t\t=> \"Bu fonksiyonu kullanmak i\u00e7in izinleriniz yetersiz.\",\r\n\t\"accesstarget\"\t\t=> \"Hedef klas\u00f6re ula\u015fmak i\u00e7in izinleriniz yetersiz.\",\r\n\t\r\n\t// actions\r\n\t\"permread\"\t\t=> \"\u0130zin g\u00f6sterimi ba\u015far\u0131s\u0131z.\",\r\n\t\"permchange\"\t\t=> \"\u0130zin de\u011fi\u015ftirme ba\u015far\u0131s\u0131z. (sebebi dosya sahiplik sorunu olabilir)\",\r\n\t\"openfile\"\t\t=> \"Dosya a\u00e7\u0131lmas\u0131 ba\u015far\u0131s\u0131z.\",\r\n\t\"savefile\"\t\t=> \"Dosya kayd\u0131 ba\u015far\u0131s\u0131z.\",\r\n\t\"createfile\"\t\t=> \"Dosya olu\u015fturma ba\u015far\u0131s\u0131z.\",\r\n\t\"createdir\"\t\t=> \"Klas\u00f6r olu\u015fturma ba\u015far\u0131s\u0131z.\",\r\n\t\"uploadfile\"\t\t=> \"Dosya y\u00fcklemesi ba\u015far\u0131s\u0131z.\",\r\n\t\"copyitem\"\t\t=> \"Kopyalama ba\u015far\u0131s\u0131z.\",\r\n\t\"moveitem\"\t\t=> \"Ta\u015f\u0131ma ba\u015far\u0131s\u0131z.\",\r\n\t\"delitem\"\t\t=> \"Silme ba\u015far\u0131s\u0131z.\",\r\n\t\"chpass\"\t\t=> \"\u015eifre de\u011fi\u015ftirme ba\u015far\u0131s\u0131z.\",\r\n\t\"deluser\"\t\t=> \"Kullan\u0131c\u0131 kald\u0131rma ba\u015far\u0131s\u0131z.\",\r\n\t\"adduser\"\t\t=> \"Kullan\u0131c\u0131 ekleme ba\u015far\u0131s\u0131z.\",\r\n\t\"saveuser\"\t\t=> \"Kullan\u0131c\u0131 de\u011fi\u015fiklik kayd\u0131 ba\u015far\u0131s\u0131z.\",\r\n\t\"searchnothing\"\t\t=> \"Aramak i\u00e7in bir de\u011fer girmelisiniz.\",\r\n\t\r\n\t// misc\r\n\t\"miscnofunc\"\t\t=> \"Fonksiyon kullan\u0131labilir.\",\r\n\t\"miscfilesize\"\t\t=> \"Dosya maksimum boyutu a\u015ft\u0131.\",\r\n\t\"miscfilepart\"\t\t=> \"Dosyan\u0131n yaln\u0131zca bir k\u0131sm\u0131 y\u00fcklenebildi.\",\r\n\t\"miscnoname\"\t\t=> \"Bir isim girmelisiniz.\",\r\n\t\"miscselitems\"\t\t=> \"Hi\u00e7bir \u00f6\u011fe(ler) se\u00e7mediniz.\",\r\n\t\"miscdelitems\"\t\t=> \" {0} ogeyi silmek istediginizden eminmisiniz?\",\r\n\t\"miscdeluser\"\t\t=> \"'{0}' kullan\u0131c\u0131s\u0131n\u0131 silmek istedi\u011finizden eminmisiniz?\",\r\n\t\"miscnopassdiff\"\t=> \"Yeni \u015fifre eskisinden farkl\u0131 de\u011fil.\",\r\n\t\"miscnopassmatch\"\t=> \"\u015eifreler e\u015fle\u015fmiyor.\",\r\n\t\"miscfieldmissed\"\t=> \"Gerekli bir bo\u015flu\u011fu atlad\u0131n\u0131z.\",\r\n\t\"miscnouserpass\"\t=> \"Kullan\u0131c\u0131 ad\u0131 yada \u015fifreniz yanl\u0131\u015f.\",\r\n\t\"miscselfremove\"\t=> \"Kendinizi silemezsiniz.\",\r\n\t\"miscuserexist\"\t\t=> \"Kullan\u0131c\u0131 zaten var.\",\r\n\t\"miscnofinduser\"\t=> \"Kullan\u0131c\u0131 bulunamad\u0131.\",\r\n\t\"extract_noarchive\" => \"The File is no extractable Archive.\",\r\n\t\"extract_unknowntype\" => \"Bilinmeyen ar\u015fiv t\u00fcr\u00fc\",\r\n\r\n\t'chmod_none_not_allowed' => 'Changing Permissions to <none> is not allowed',\r\n\t'archive_dir_notexists' => 'The Save-To Directory you have specified does not exist.',\r\n\t'archive_dir_unwritable' => 'Please specify a writable directory to save the archive to.',\r\n\t'archive_creation_failed' => 'Failed saving the Archive File'\r\n\t\r\n);\r\n$GLOBALS[\"messages\"] = array(\r\n\t// links\r\n\t\"permlink\"\t\t=> \"\u0130zinleri De\u011fi\u015ftir\",\r\n\t\"editlink\"\t\t=> \"De\u011fi\u015ftir\",\r\n\t\"downlink\"\t\t=> \"\u0130ndir\",\r\n\t\"uplink\"\t\t=> \"Yukar\u0131\",\r\n\t\"homelink\"\t\t=> \"Ba\u015fa D\u00f6n\",\r\n\t\"reloadlink\"\t\t=> \"Yenile\",\r\n\t\"copylink\"\t\t=> \"Kopyala\",\r\n\t\"movelink\"\t\t=> \"Ta\u015f\u0131\",\r\n\t\"dellink\"\t\t=> \"Sil\",\r\n\t\"comprlink\"\t\t=> \"Depola\",\r\n\t\"adminlink\"\t\t=> \"Y\u00f6netici\",\r\n\t\"logoutlink\"\t\t=> \"\u00c7\u0131k\u0131\u015f\",\r\n\t\"uploadlink\"\t\t=> \"Y\u00fckle\",\r\n\t\"searchlink\"\t\t=> \"Ara\",\r\n\t\"extractlink\"\t=> \"Extract Archive\",\r\n\t'chmodlink'\t\t=> '\u0130zinleri (chmod) De\u011fi\u015ftir (Klas\u00f6r/Dosya(lar))', // new mic\r\n\t'mossysinfolink'\t=> 'eXtplorer Sistem Bilgisi (eXtplorer, Server, PHP, mySQL)', // new mic\r\n\t'logolink'\t\t=> 'eXtplorer Websitesine git (yeni pencerede)', // new mic\r\n\t\r\n\t// list\r\n\t\"nameheader\"\t\t=> \"\u0130sim\",\r\n\t\"sizeheader\"\t\t=> \"Boyut\",\r\n\t\"typeheader\"\t\t=> \"Tip\",\r\n\t\"modifheader\"\t\t=> \"De\u011fi\u015ftirme\",\r\n\t\"permheader\"\t\t=> \"\u0130zinler\",\r\n\t\"actionheader\"\t\t=> \"Hareketler\",\r\n\t\"pathheader\"\t\t=> \"Yol\",\r\n\t\r\n\t// buttons\r\n\t\"btncancel\"\t\t=> \"\u00c7\u0131k\u0131\u015f\",\r\n\t\"btnsave\"\t\t=> \"Kaydet\",\r\n\t\"btnchange\"\t\t=> \"De\u011fi\u015ftir\",\r\n\t\"btnreset\"\t\t=> \"S\u0131f\u0131rla\",\r\n\t\"btnclose\"\t\t=> \"Kapat\",\r\n\t\"btncreate\"\t\t=> \"Olu\u015ftur\",\r\n\t\"btnsearch\"\t\t=> \"Ara\",\r\n\t\"btnupload\"\t\t=> \"Y\u00fckle\",\r\n\t\"btncopy\"\t\t=> \"Kopyala\",\r\n\t\"btnmove\"\t\t=> \"Ta\u015f\u0131\",\r\n\t\"btnlogin\"\t\t=> \"Giri\u015f\",\r\n\t\"btnlogout\"\t\t=> \"\u00c7\u0131k\u0131\u015f\",\r\n\t\"btnadd\"\t\t=> \"Ekle\",\r\n\t\"btnedit\"\t\t=> \"De\u011fi\u015ftir\",\r\n\t\"btnremove\"\t\t=> \"Kald\u0131r\",\r\n\t\r\n\t// user messages, new in eXtplorer 1.3.0\r\n\t'renamelink'\t=> 'Yeniden Adland\u0131r',\r\n\t'confirm_delete_file' => 'Bu dosyay\u0131 silmek istedi\u011finize eminmisiniz? <br />%s',\r\n\t'success_delete_file' => '\u00d6\u011fe(ler) ba\u015far\u0131yla silindi.',\r\n\t'success_rename_file' => 'Dizin/dosya %s ba\u015far\u0131yla yeniden adland\u0131r\u0131ld\u0131  %s.',\r\n\t\r\n\t// actions\r\n\t\"actdir\"\t\t=> \"Klas\u00f6r\",\r\n\t\"actperms\"\t\t=> \"\u0130zinleri De\u011fi\u015ftir\",\r\n\t\"actedit\"\t\t=> \"Dosyay\u0131 D\u00fczenle\",\r\n\t\"actsearchresults\"\t=> \"Arama Sonu\u00e7lar\u0131\",\r\n\t\"actcopyitems\"\t\t=> \"\u00f6\u011fe(ler)i kopyala\",\r\n\t\"actcopyfrom\"\t\t=> \" /%s dan /%s ya \",\r\n\t\"actmoveitems\"\t\t=> \"\u00f6\u011fe(ler)i ta\u015f\u0131\",\r\n\t\"actmovefrom\"\t\t=> \" /%s dan /%s ya ta\u015f\u0131 \",\r\n\t\"actlogin\"\t\t=> \"Giri\u015f\",\r\n\t\"actloginheader\"\t=> \"eXtplorer kullanmak i\u00e7in giri\u015f yap\u0131n\",\r\n\t\"actadmin\"\t\t=> \"Y\u00f6netim\",\r\n\t\"actchpwd\"\t\t=> \"\u015eifre De\u011fi\u015ftir\",\r\n\t\"actusers\"\t\t=> \"Kullan\u0131c\u0131lar\",\r\n\t\"actarchive\"\t\t=> \"\u00f6\u011fe(ler)i Yedekle\",\r\n\t\"actupload\"\t\t=> \"Dosya(lar\u0131) Y\u00fckle\",\r\n\t\r\n\t// misc\r\n\t\"miscitems\"\t\t=> \"\u00f6\u011fe(ler)\",\r\n\t\"miscfree\"\t\t=> \"Serbest\",\r\n\t\"miscusername\"\t\t=> \"Kullan\u0131c\u0131 Ad\u0131\",\r\n\t\"miscpassword\"\t\t=> \"\u015eifre\",\r\n\t\"miscoldpass\"\t\t=> \"Eski \u015eifre\",\r\n\t\"miscnewpass\"\t\t=> \"Yeni \u015eifre\",\r\n\t\"miscconfpass\"\t\t=> \"\u015eifreyi Onayla\",\r\n\t\"miscconfnewpass\"\t=> \"Yeni \u015eifeyi Onayla\",\r\n\t\"miscchpass\"\t\t=> \"\u015eifre De\u011fi\u015ftir\",\r\n\t\"mischomedir\"\t\t=> \"Ana Klas\u00f6r\",\r\n\t\"mischomeurl\"\t\t=> \"Ba\u015f URL\",\r\n\t\"miscshowhidden\"\t=> \"Gizli \u00f6\u011feleri G\u00f6ster\",\r\n\t\"mischidepattern\"\t=> \"Resim Gizle\",\r\n\t\"miscperms\"\t\t=> \"\u0130zinler\",\r\n\t\"miscuseritems\"\t\t=> \"(isim, ana klas\u00f6r, gizli \u00f6\u011feleri g\u00f6ster, izinler, Aktif)\",\r\n\t\"miscadduser\"\t\t=> \"Kullan\u0131c\u0131 ekle\",\r\n\t\"miscedituser\"\t\t=> \"'%s' kullan\u0131c\u0131s\u0131n\u0131 de\u011fi\u015ftir\",\r\n\t\"miscactive\"\t\t=> \"Aktif\",\r\n\t\"misclang\"\t\t=> \"Dil\",\r\n\t\"miscnoresult\"\t\t=> \"Hi\u00e7 sonu\u00e7 yok.\",\r\n\t\"miscsubdirs\"\t\t=> \"Alt kategorileri de ara\",\r\n\t\"miscpermnames\"\t\t=> array(\"Sadece bak\u0131labilir\",\"Modifiye\",\"\u015eifre de\u011fi\u015ftir\",\"Modifiye & \u015eifre De\u011fi\u015ftir\",\r\n\t\t\t\t\t\"Y\u00f6netici\"),\r\n\t\"miscyesno\"\t\t=> array(\"Evet\",\"Hay\u0131r\",\"E\",\"H\"),\r\n\t\"miscchmod\"\t\t=> array(\"Sahip\", \"Grup\", \"Halk\"),\r\n\r\n\t// from here all new by mic\r\n\t'miscowner'\t\t\t=> 'Sahip',\r\n\t'miscownerdesc'\t\t=> '<strong>A\u00e7\u0131klama:</strong><br />User (UID) /<br />Group (GID)<br />Current rights:<br /><strong> %s ( %s ) </strong>/<br /><strong> %s ( %s )</strong>',\r\n\r\n\t// sysinfo (new by mic)\r\n\t'simamsysinfo'\t\t=> \"eXtplorer Sistem Bilgisi\",\r\n\t'sisysteminfo'\t\t=> 'Sistem Bilgisi',\r\n\t'sibuilton'\t\t\t=> '\u0130\u015fletim Sistemi',\r\n\t'sidbversion'\t\t=> 'Veritaban\u0131 S\u00fcr\u00fcm\u00fc (MySQL)',\r\n\t'siphpversion'\t\t=> 'PHP S\u00fcr\u00fcm\u00fc',\r\n\t'siphpupdate'\t\t=> 'Bilgi: <span style=\"color: red;\">The PHP version you use is <strong>not</strong> actual!</span><br />To guarantee all functions and features of '.$_VERSION->PRODUCT.' and addons,<br />you should use as minimum <strong>PHP.Version 4.3</strong>!',\r\n\t'siwebserver'\t\t=> 'Webserver',\r\n\t'siwebsphpif'\t\t=> 'WebServer - PHP Interface',\r\n\t'simamboversion'\t=> 'eXtplorer S\u00fcr\u00fcm\u00fc',\r\n\t'siuseragent'\t\t=> 'Taray\u0131c\u0131 S\u00fcr\u00fcm\u00fc',\r\n\t'sirelevantsettings' => '\u00d6nemli PHP Ayarlar\u0131',\r\n\t'sisafemode'\t\t=> 'Safe Mode',\r\n\t'sibasedir'\t\t\t=> 'Open basedir',\r\n\t'sidisplayerrors'\t=> 'PHP Hatalar\u0131',\r\n\t'sishortopentags'\t=> 'Short Open Tags',\r\n\t'sifileuploads'\t\t=> 'File Uploads',\r\n\t'simagicquotes'\t\t=> 'Magic Quotes',\r\n\t'siregglobals'\t\t=> 'Register Globals',\r\n\t'sioutputbuf'\t\t=> 'Output Buffer',\r\n\t'sisesssavepath'\t=> 'Session Savepath',\r\n\t'sisessautostart'\t=> 'Session auto start',\r\n\t'sixmlenabled'\t\t=> 'XML enabled',\r\n\t'sizlibenabled'\t\t=> 'ZLIB enabled',\r\n\t'sidisabledfuncs'\t=> 'Non enabled functions',\r\n\t'sieditor'\t\t\t=> 'WYSIWYG Editor',\r\n\t'siconfigfile'\t\t=> 'Config file',\r\n\t'siphpinfo'\t\t\t=> 'PHP Bilgisi',\r\n\t'siphpinformation'\t=> 'PHP Information',\r\n\t'sipermissions'\t\t=> '\u0130zinler',\r\n\t'sidirperms'\t\t=> 'Dizin izinleri',\r\n\t'sidirpermsmess'\t=> 'To be shure that all functions and features of '.$_VERSION->PRODUCT.' are working correct, following folders should have permission to write [chmod 0777]',\r\n\t'sionoff'\t\t\t=> array( 'On', 'Off' ),\r\n\t\r\n\t'extract_warning' => \"Ger\u00e7ekten bu dosyay\u0131 \u00e7\u0131kartmak istiyormusunuz? Buraya?\\\\nThis will overwrite existing files when not used carefully!\",\r\n\t'extract_success' => \"Extraction was successful\",\r\n\t'extract_failure' => \"Extraction failed\",\r\n\t\r\n\t'overwrite_files' => 'Varolan dosyan\u0131n \u00fczerine yaz?',\r\n\t\"viewlink\"\t\t=> \"G\u00f6ster\",\r\n\t\"actview\"\t\t=> \"Kaynak dosyas\u0131n\u0131 g\u00f6ster\",\r\n\t\r\n\t// added by Paulino Michelazzo (paulino@michelazzo.com.br) to fun_chmod.php file\r\n\t'recurse_subdirs'\t=> 'Alt klas\u00f6rlerede uygula?',\r\n\t\r\n\t// added by Paulino Michelazzo (paulino@michelazzo.com.br) to footer.php file\r\n\t'check_version'\t=> 'Son s\u00fcr\u00fcm\u00fc kontrol et',\r\n\t\r\n\t// added by Paulino Michelazzo (paulino@michelazzo.com.br) to fun_rename.php file\r\n\t'rename_file'\t=>\t'Dizini yada dosyay\u0131 yenidien adland\u0131r...',\r\n\t'newname'\t\t=>\t'Yeni \u0130sim',\r\n\t\r\n\t// added by Paulino Michelazzo (paulino@michelazzo.com.br) to fun_edit.php file\r\n\t'returndir'\t=>\t'Kaydettikten sonra dizine geri d\u00f6n?',\r\n\t'line'\t\t=> \t'Line',\r\n\t'column'\t=>\t'Column',\r\n\t'wordwrap'\t=>\t'Wordwrap: (IE only)',\r\n\t'copyfile'\t=>\t'Copy file into this filename',\r\n\t\r\n\t// Bookmarks\r\n\t'quick_jump' => 'H\u0131zl\u0131 Atlama',\r\n\t'already_bookmarked' => 'Bu dizin zaten yer imlerinde',\r\n\t'bookmark_was_added' => 'Bu dizin yer imleri listesine eklendi.',\r\n\t'not_a_bookmark' => 'Bu dizin yer imlerinde de\u011fil.',\r\n\t'bookmark_was_removed' => 'Bu dizin yer imleri listesinden \u00e7\u0131kart\u0131ld\u0131.',\r\n\t'bookmarkfile_not_writable' => \"Failed to %s the bookmark.\\n The Bookmark File '%s' \\nis not writable.\",\r\n\t\r\n\t'lbl_add_bookmark' => 'Bu dizini yerimlerine ekle',\r\n\t'lbl_remove_bookmark' => 'Bu dizini yer imleri listesinden \u00e7\u0131kart',\r\n\t\r\n\t'enter_alias_name' => 'L\u00fctfen bu yer imi i\u00e7in takma ad girin',\r\n\t\r\n\t'normal_compression' => 'normal s\u0131k\u0131\u015ft\u0131rma',\r\n\t'good_compression' => 'iyi s\u0131k\u0131\u015ft\u0131rma',\r\n\t'best_compression' => 'en iyi s\u0131k\u0131\u015ft\u0131rma',\r\n\t'no_compression' => 's\u0131k\u0131\u015ft\u0131rma yok',\r\n\t\r\n\t'creating_archive' => 'Ar\u015fiv dosyas\u0131 olu\u015ftur...',\r\n\t'processed_x_files' => 'Processed %s of %s Files',\r\n\t\r\n\t'ftp_header' => 'Local FTP Authentication',\r\n\t'ftp_login_lbl' => 'Please enter the login credentials for the FTP server',\r\n\t'ftp_login_name' => 'FTP Kullan\u0131c\u0131 Ad\u0131',\r\n\t'ftp_login_pass' => 'FTP \u015eifresi',\r\n\t'ftp_hostname_port' => 'FTP Server Hostname and Port <br />(Port is optional)',\r\n\t'ftp_login_check' => 'FTP ba\u011flant\u0131s\u0131 Kontrol ediliyor...',\r\n\t'ftp_connection_failed' => \"FTP servera ba\u011flan\u0131lamad\u0131. \\nPlease check that the FTP server is running on your server.\",\r\n\t'ftp_login_failed' => \"FTP giri\u015finde hata. L\u00fctfen kullan\u0131c\u0131 ad\u0131 ve \u015fifrenizi kontrol ederek tekrar deneyin.\",\r\n\t\t\r\n\t'switch_file_mode' => '\u015eimdiki mod: <strong>%s</strong>. Dilerseniz %s moduna ge\u00e7ebilirsiniz.',\r\n\t'symlink_target' => 'Target of the Symbolic Link',\r\n\t\r\n\t\"permchange\"\t\t=> \"CHMOD Success:\",\r\n\t\"savefile\"\t\t=> \"Dosya kaydedildi.\",\r\n\t\"moveitem\"\t\t=> \"Ta\u015f\u0131ma Tamamland\u0131.\",\r\n\t\"copyitem\"\t\t=> \"Kopyalama Tamamland\u0131.\",\r\n\t'archive_name' \t=> 'Ar\u015fiv dosyas\u0131 ismi',\r\n\t'archive_saveToDir' \t=> 'Ar\u015fivi bu dizine kaydet',\r\n\t\r\n\t'editor_simple'\t=> 'Basit Edit\u00f6r Modu',\r\n\t'editor_syntaxhighlight'\t=> 'Syntax-Highlighted Mode',\r\n\r\n\t'newlink'\t=> 'Yeni Dosya/Dizin',\r\n\t'show_directories' => 'Dizinleri G\u00f6ster',\r\n\t'actlogin_success' => 'Giri\u015f ba\u015far\u0131l\u0131!',\r\n\t'actlogin_failure' => 'Giri\u015f hatal\u0131, tekrar deneyin.',\r\n\t'directory_tree' => 'Dizin A\u011fac\u0131',\r\n\t'browsing_directory' => 'Dizinlere G\u00f6zat',\r\n\t'filter_grid' => 'Filtrele',\r\n\t'paging_page' => 'Sayfa',\r\n\t'paging_of_X' => 'of {0}',\r\n\t'paging_firstpage' => '\u0130lk Sayfa',\r\n\t'paging_lastpage' => 'Son Sayfa',\r\n\t'paging_nextpage' => 'Sonraki Sayfa',\r\n\t'paging_prevpage' => '\u00d6nceki Sayfa',\r\n\t\r\n\t'paging_info' => 'G\u00f6sterilen \u00d6\u011feler {0} - {1} of {2}',\r\n\t'paging_noitems' => 'G\u00f6sterilecek \u00f6\u011fe yok',\r\n\t'aboutlink' => 'Hakk\u0131nda...',\r\n\t'password_warning_title' => 'Important - Change your Password!',\r\n\t'password_warning_text' => 'The user account you are logged in with (admin with password admin) corresponds to the default eXtplorer priviliged account. Your eXtplorer installation is open to intrusion and you should immediately fix this security hole!',\r\n\t'change_password_success' => 'Your Password has been changed!',\r\n\t'success' => 'Basarili',\r\n\t'failure' => 'Hata',\r\n\t'dialog_title' => 'Website Dialog',\r\n\t'upload_processing' => 'Y\u00fckleniyor, l\u00fctfen bekleyin...',\r\n\t'upload_completed' => 'Y\u00fckleme Ba\u015far\u0131l\u0131!',\r\n\t'acttransfer' => 'Ba\u015fka Sunucudan Transfer Et',\r\n\t'transfer_processing' => 'Sunucudan sunucuya transfer s\u00fcr\u00fcyor, l\u00fctfen bekleyin...',\r\n\t'transfer_completed' => 'Transfer tamamland\u0131!',\r\n\t'max_file_size' => 'Maksimum Dosya Boyutu',\r\n\t'max_post_size' => 'Maksimum Y\u00fckleme S\u0131n\u0131r\u0131',\r\n\t'done' => 'Tamam.',\r\n\t'permissions_processing' => '\u0130zinler uygulan\u0131yor, l\u00fctfen bekleyin...',\r\n\t'archive_created' => 'The Archive File has been created!',\r\n\t'save_processing' => 'Saving File...',\r\n\t'current_user' => 'This script currently runs with the permissions of the following user:',\r\n\t'your_version' => 'Sizin S\u00fcr\u00fcm\u00fcn\u00fcz',\r\n\t'search_processing' => 'Aran\u0131yor, l\u00fctfen bekleyin...',\r\n\t'url_to_file' => 'Dosya adresi',\r\n\t'file' => 'Dosya'\r\n\r\n);\r\n?>\r\n", "<?php\r\n\r\n// Turkish Language for QuiX (Translated by Sinan Ata 'From Turkey'(cumla.blogspot.com))\r\n\r\n$GLOBALS[\"mimes\"]=array(\r\n\t// dir, exe, file\r\n\t\"dir\"\t=> \"Klas\u00f6r\",\r\n\t\"exe\"\t=> \"A\u00e7\u0131labilir Dosya\",\r\n\t\"file\"\t=> \"Dosya\",\r\n\t\"symlink\"\t=> \"Symbolic Link\",\r\n\r\n\t// text\r\n\t\"text\"\t=> \"Metin Dosyas\u0131\",\r\n\t\r\n\t// programming\r\n\t\"php\"\t=> \"PHP Betik\",\r\n\t\"sql\"\t=> \"SQL Dosyas\u0131\",\r\n\t\"perl\"\t=> \"PERL Beti\u011fi\",\r\n\t\"html\"\t=> \"HTML Sayfas\u0131\",\r\n\t\"js\"\t=> \"JavaScript Dosyas\u0131\",\r\n\t\"css\"\t=> \"CSS Dosyas\u0131\",\r\n\t\"cgi\"\t=> \"CGI Betik\",\r\n\t// C++\r\n\t\"cpps\"\t=> \"C++ Kaynak Dosyas\u0131\",\r\n\t\"cpph\"\t=> \"C++ Ba\u015fl\u0131k Dosyas\u0131\",\r\n\t// Java\r\n\t\"javas\"\t=> \"Java Kaynak Dosyas\u0131\",\r\n\t\"javac\"\t=> \"Java S\u0131n\u0131f Dosyas\u0131\",\r\n\t// Pascal\r\n\t\"pas\"\t=> \"Pascal Dosyas\u0131\",\r\n\t\r\n\t// images\r\n\t\"gif\"\t=> \"GIF Resmi\",\r\n\t\"jpg\"\t=> \"JPG Resmi\",\r\n\t\"bmp\"\t=> \"BMP Resmi\",\r\n\t\"png\"\t=> \"PNG Resmi\",\r\n\t\r\n\t// compressed\r\n\t\"zip\"\t=> \"ZIP Ar\u015fivi\",\r\n\t\"tar\"\t=> \"TAR Ar\u015fivi\",\r\n\t\"gzip\"\t=> \"GZIP Ar\u015fivi\",\r\n\t\"bzip2\"\t=> \"BZIP2 Ar\u015fivi\",\r\n\t\"rar\"\t=> \"RAR Ar\u015fivi\",\r\n\t\r\n\t// music\r\n\t\"mp3\"\t=> \"MP3 Ses Dosyas\u0131\",\r\n\t\"wav\"\t=> \"WAV Ses Dosyas\u0131\",\r\n\t\"midi\"\t=> \"MIDI Ses Dosyas\u0131\",\r\n\t\"real\"\t=> \"RealAudio Ses Dosyas\u0131\",\r\n\t\r\n\t// movie\r\n\t\"mpg\"\t=> \"MPG Video Dosyas\u0131\",\r\n\t\"mov\"\t=> \"Movie Dosyas\u0131\",\r\n\t\"avi\"\t=> \"AVI Video Dosyas\u0131\",\r\n\t\"flash\"\t=> \"Flash Film Dosyas\u0131\",\r\n\t\r\n\t// Micosoft / Adobe\r\n\t\"word\"\t=> \"Word D\u00f6k\u00fcman\u0131\",\r\n\t\"excel\"\t=> \"Excel D\u00f6k\u00fcman\u0131\",\r\n\t\"pdf\"\t=> \"PDF Dosyas\u0131\"\r\n); ?>"], "fixing_code": ["****************************\nChangelog for eXtplorer\nVersion $Id: CHANGELOG.txt 249 2016-12-11 16:11:03Z soeren $\n****************************\n\n--- version 2.1.13 ---\n- fixed various security issues reported by Mario Korth:\n  * potential XSS \n  * Arbitrary file read\n  * Path traversal in listing directory contents\n  * Path traversal in archive feature\n- added new turkish translations \n\n--- version 2.1.12 ---\n- fixed wrong version display\n- fixed empty language selector\n\n--- version 2.1.11 ---\n- fixed \"text.js not found\" message on server when editing text files\n- fixed PHP 7.2 incompatibility in Tar.php\n- PHP 5.3 compatibility fixes\n\n--- version 2.1.10 ---\n- fixed vulnerability discovered by ADLab of Venustech (command injection, but requires admin access)\n- webdav display UPPER/CASE/FULL/PATH with some webdav client\n- standalone extplorer webdav does not work with PHP7\n- CVE-2016-4313: archive path traversal vulnerability in extplorer 2.1.9\n- #202 Users with read only permissions should not be able to extract archives.\n- added indonesian language files\n\n--- version 2.1.9 ---\n- fixed PHP 7 compatibility issues\n- raising PHP compatibility to PHP >= 5.4\n\n--- version 2.1.8 ---\n- added security functions for protection against CSRF attacks\n- fixed \"directories with the name '0' are not loading\"\n\n--- version 2.1.7 ---\n- fixed SWFUpload against XSS vulnerabilities\n- fixed XSS vulnerability in file list\n\n--- version 2.1.6 ---\n- fixed https usage for ports other than 443\n- fixed XSS issue related to PHP_SELF\n- added date range filtering to file search\n- simplified search function\n- fixed scrambled non-ASCII file names on UTF-8 systems\n\n--- version 2.1.5 ---\n- fixed doubled subdirectories in directory tree\n- fixed wrong Joomla path detection (security issue on some systems)\n\n--- version 2.1.4 ---\n- fixed security issues found by Trustwave SpiderLabs, Vikas Singhal\n- update to the latest version of Archive_Tar\n- fixed version check link, now points to extplorer.net\n\n--- version 2.1.3 ---\n- fixed serious login vulnerability reported by Brendan Coles of itsecuritysolutions.org (the only changed file is /include/users.php)\n\n--- version 2.1.2 ---\n- hide the top and bottom bar in J! 3.0\n- fixed installer for J! 2.5\n\n--- version 2.1.1 ---\n- Joomla! 3.0 compatibility\n\n--- version 2.1.0 ---\n\n- fixed an XSS-vulnerability (impact: medium, users needs to be logged in)\n\n--- version 2.1.0 RC5 released ---\n\n- fixed password change functionality\n\n--- version 2.1.0 RC4 released ---\n\n- updated version check to work with J! 1.7\n- implemented PHPass Library for more secure hashing of passwords: http://www.openwall.com/phpass/ (backwards compatible with previous md5 hashing method)\n- updated to ExtJS 3.4.0 (brings support for IE9)\n- fixed file-disclosure issue reported by colonelxc@users.sourceforge.net\n- support for files with non-ascii chars for editing (thanks gr8ron)\n- fixed a fatal error in the webdav module\n- added ability to load without fetchscript.php (when it's inaccessible due to server permission problems)\n\n--- version 2.1.0 RC3 released ---\n\n- fixed filesize for files > 2GB\n- works and installs on Joomla! 1.6 now\n\n--- version 2.1.0 RC2 released ---\n\n- updated to ExtJS 3.3.1\n- fixed Flash Upload\n- updated to SWFUPload 2.5 beta\n- fixed deprecated warnings because of ereg functions\n- fixed some FTP file operations (upload, copy, move, delete)\n- fixed visibility of user form fields (form appeared empty)\n- fixed editable file types detection (+ added .ini)\n\n--- version 2.1.0 RC1 released ---\n- finally added the File Diff Feature\n- added RAR extraction feature\n- updated to ExtJS 3.2.1\n- only editable files are shown in source view now, viewing all other files will lead to a redirected to \"download\"\n- PDF files now open inline in an iframe\n\n--- version 2.1.0 beta6 released ---\n- updated to ExtJS 3.0.3\n\n--- version 2.1.0 beta5 released ---\n\n- added nice slide-in message box for success messages\n- removed deprecated ZIP library\n\n--- version 2.1.0 beta4 released ---\n\n- changed Save/Reopen/Cancel buttons in Edit View to appear in the top toolbar\n- changed directory drop-down lists to a vista-like location bar\n- new: Flash Upload! Using SWFUploadPanel\n- added pluggable authentication system\n\n--- version 2.1.0 beta3 released ---\n\n- changed default state of \"Show Directories\" to enabled\n- changed Edit Window to appear in a new Tab per File\n- assigned Keyboard Events to the Grid (Delete, Ctrl-A, Ctrl-C, Ctrl-X)\n- updated to ExtJS3 RC2\n- updated EditArea to version 0.8.1.1 (loads faster and is more stable)\n\n--- version 2.1.0 beta released ---\n\n- allowing Download by users with \"view\" permission\n- updated Services-JSON class to version 0.9.0\n- updated GeSHi to version 1.0.8.3\n- moved from ExtJS 1.1 to ExtJS 2.2\n\n-- version 2.0.1 released (2009-01-15) ----\n\n- added script for WebDAV access (disabled by default, requires 2 database tables and DB login credentials)\n- fixed a security issue within script initialization\n\n-- version 2.0.0 stable released (2008-08-05) ----\n\n- added .csv to the editable file types\n- when copying/moving multiple directories, only the first directory was processed\n- fixed failing extraction of larger archives (\"Failed to connect to the server\")\n- updated Editarea to 0.7.1.3\n- fixed browsing & working on external FTP servers\n- fixed dirselectors not working in FTP mode\n- fixed file-mode switch link\n\n-- version 2.0.0 RC4 released (2008-05-31) ----\n\n- fixed installation package for Joomla! 1.5\n- added Danish Language Files (thanks to Ronny Buelund!)\n\n-- version 2.0.0 RC3 released (2008-05-31) ----\n\n- [ 1944163 ] In germanf.php fehlt ein Eintrag\n- fixed compatibility problem with JomComment+MyBlog (Services_JSON was redeclared)\n- switched from \"Codepress\" to \"EditArea\" (http://www.cdolivet.net/index.php?page=editArea), which gives a lot of advantages:\n\t* faster loading of large files\n\t* built-in toggle feature\n\t* built-in Find, Search+Replace and Jump-To-Line Features\n\t\n-- version 2.0.0 RC3 released (2008-05-26) ----\n\n- fixed Cross-Site Scripting & File Disclosure Vulnerability\n- fixed MimeType detection for search results\n\n-- version 2.0.0 RC2 released (2008-02-10) ----\n\n- fixed Standalone scripts.zip extraction error\n- re-added System Info (moved to \"About\" Window)\n- implemented basic UTF-8 support for file mode\n- changed [ 1800028 ] Need to enlarge file edit box, or allow for full screen\n- fixed [ 1791706 ] incorrect error reporting\n- fixed [ 1790536 ] Browsing directory incorrect\n- fixed [ 1782937 ] when unzipping a zip containing a zip: zip not present!\n\n-- version 2.0.0 RC1 released ----\n\n- fixed [ 1755938 ] status bar messages truncated when path is too long\n- fixed [ 1759450 ] No textfield and browse button in upload file on IE7\n- fixed [ 1762000 ] copy a file from a subfolder to \"root\" folder doesn't work\n- fixed [ 1766233 ] Chmod error in FTP mode\n- fixed [ 1761083 ] IE7 closing button & seach action (file search - subdirectories weren't included)\n\n--- version 2.0.0 beta5 released ----\n\n- added Swedish and Slovenian Language Files\n- set \"zip\" as default archive type\n- added message box that prevents eXtplorer usage on Joomla! 1.0.x versions >= 1.0.13 and explains why.\n- added Joomla! version check\n- implemented some changes for compatibility on Windows Systems with IIS running\n\n--- version 2.0.0 beta4 released ----\n\n- fixed header-only problems on Mambo/Joomla! < 1.0.10\n- added Server-to-Server transfer capabilities (using fopen, cURL or fsockopen)\n- fixed [#6092] Some strings remained hardcoded\n- fixed [ 1754755 ] Save button when uploading file not translated\n- fixed the Frontend Browsing part (when being used as a Joomla! component)\n- updated finnish and french language file\n- updated ExtJS to 1.1 RC1, included Konqueror Patch\n- fixed [ 1752904 ] error on admin dialog opening\n- fixed [ 1752901 ] Combo on Login page doesn't work in IE6 and 7\n- fixed [ 1752534 ] Non-static method ext_Lang::msg()\n- removed dialog_status from onHide function for the dialog\n- fixed bugs in the language files  with undefined properties of non-existant var $_VERSION\n- fixed bug with undefined var $acl\n\n--- version 2.0.0 beta4 released ----\n\n- fixed a bug which caused that a maximum of 50 directories in the same level were listed in the tree, not all\n- fixed a bug with CodePress - didn't allow to edit files (when used in Joomla!)\n- added a check to the standalone version to extract the contents of the file \"scripts.zip\" online and throw a warning if it doesn't succeed.\n- removed the status bar from the Dialogs, moved the status bat into the Paging Toolbar\n- added CSS styles to make the dropdown lists smaller\n\n--- version 2.0.0 beta3 released ----\n\n- re-activated User Management for the stand-alone version\n- fixed a critical error which caused deletion of directories although \"Cancel\" was clicked\n- fixed an error which prevented correct listing of numeric directories/files\n\n--- version 2.0.0 beta2 released ----\n- added double-click action which opens the Context Menu in the grid (Opera and Konqueror don't allow custom right-click menus)\n- applied patches to ExtJS to allow usage with Konqueror\n- added new ext_Lang class to be able to escape quotes and line endings for using it in JavaScript Strings\n- fixed node context menu displaying outside of view\n- added the fetchscript.php file to bundle and compress javascript and stylesheet files\n  (Sending compressed js and css files significantly reduces the download size for ExtJS)\n\n--- version 2.0.0 beta1 released ----\n\n- fixed the \"symlink points to target which can't be accessed\" problem\n- fixed \"out of memory\" problems\n- directory names changed (no directories starting with a '.' anymore now)\n- completely changed layout: directory tree, file grid with renaming, context menu, drag&drop\n- added the ExtJS 1.0.1a library\n\n\n--- version 1.6.0 released ----\n\n- archives do not contain the whole file path anymore now, but only the relative one\n- added possibility to specify a directory where an archive file is saved to (allows to create archives even when the currenty directory is not writable)\n- added the great CodePress Sytnax Highlighting Editor (http://codepress.fermads.net/)\n- removed the extra spaces in the directory path\n- fixed the \"Strict Standards\" error (non-static method called statically)\n\n--- version 1.5.1 released ----\n\n- added ftp logout function to allow different ftp logins during one admin session\n- added possibility to specify an FTP host name and port (other than localhost:21)\n- bookmark functionality fixes (thanks to pokemon!)\n- fixed a critical error where wrong permissions would be applied to an uploaded file in FTP mode\n\t(leading to a 403 error on some servers)\n\t\n--- version 1.5.0 released ---\n\n- changed the way errors are displayed (+nice styling).\n- added support for *symbolic links*. You can create and delete links, but not change the target. You will have to create a new link to do so.\n\n- eXtplorer is an FTP client now! - added PEAR'S Net_FTP package to allow local FTP access/transactions\n\n- changed Archiving Section to ajax-based step-by-step system to prevent time-outs\n- added PEAR Package File_Archive to allow better archive handling\n- changed file links in the directory list to \"Edit\" or \"Download\"\n- added a simple file-based bookmark system\n- changed the download function to allow larger downloads (100MB+)\n- replaced hardcoded english strings with new variables (thanks to Paulino Michelazzo!)\n\n--- version 1.4.0 released ---\n\n- added a new \"View File\" feature to dispay a file's source code with GeSHi syntax highlighting\n\n- checking now, if a remembered directory exists (it might have been deleted meanwhile)\n- added line number / column monitoring on the \"Edit file\" form\n\tit also allows to jump to a certain line number\n- added feature to allow overwriting existing files on upload\n- fixed directory chmod issues \n\tDetails: when running a *chmod* command on files and directories \n\twith permissions that do not include \"execute\", directories would become inaccessible (e.g. d--------- (root). Tip by John, thanks!)\n- added basic frontend directory browsing and file download feature (not comparable to Docman or ReMOSitory, \n\tit's just a directory browser, no descriptions, no download counter!)\n\t!DISABLED BY DEFAULT!\n\tEnable by editing the file\n\t/components/com_extplorer/configuration.jx.php\n\n--- version 1.3.3 released ---\n\n- fixed a wrong image source (menu_divider.gif => png)\n- fixed a fatal error when using eXtplorer on installations with the SafeMode hack\n- added Bulgarian language (thanks to Ivo Apostolov)\n- fixed download problems under Mambo 4.5.2.3 with gzip compression = On\n\n\n--- version 1.3.2 released ---\n\n- fixed various problems (create file/directory, archiving, download) with $mosConfig_absolute_path\n\n\n--- version 1.3.1 released ---\n\n- last visited directory is stored in the session for quick go-back\n- updated finnish language\n- added Icelandic language\n- fixed an error which caused icons not to display\n  in directories outside of the Joomla/Mambo root directory\n\n--- version 1.3.0 released ---\n\n- the home directory is now ONE LEVEL ABOVE the joomla/mambo directory.\n\tIf you have joomla inside \n\t/public_html/\n\tYou will be able to browse to the root directory\n\t/\n\t! Check if you want this behaviour. When not, see /config/conf.php line 41....\n- created archives don't contain the full path anymore, but the relative path from the mosConfig_absolute_path\n- converted transparent .png to .gif\n- removed the IE transparency fix, which caused IE to slow down (really long load times!)\n- updated the language files\n- \"Chmod\", \"Edit\" and \"Delete\" links are not active now, when the file is not chmodable, writable or deletable\n- delete alert box will display the name of the file that is to be deleted\n- added a checkbox to chmod form, so the user can decide wether to chmod rescursively or not\n- added a rename feature\n- current user ID and group ID (on a *nix OS) are displayed correctly now\n- component name changed to \"eXtplorer\"\n\n--- version 1.2.1 released ---\n\n- bug fix: File Upload Icon is grey although file uploads are allowed\n- bug fix: [#4944] mamboXplorer strips \\r\\n to just rn\n- added Unzip / Unarchive Feature (Feature Request #6171)\n  to unpack archive types: zip, gz, bz2\n  directly on your webspace.\n- fix for the PNG Fix.\n\n--- version 1.2a released ---\n\n- new language variables + more languages\n- nice X - Icon for components Menu. thanks to Michael!\n- added PNG transparency fix for IE\n- added Owner / Group information to File List\n- bug fix: \"$ok @cmod\" changed to \"$ok = @chmod\"\n\n--- version 1.2 released ---\n- removed full path from Archive ( tar.gz /bzip2 Archive Creation)\n- added ability to change permissions recursiveley through all subdirectories\n\n--- version 1.1 released ---\n", "<?php\n// ensure this file is being included by a parent file\nif( !defined( '_JEXEC' ) && !defined( '_VALID_MOS' ) ) die( 'Restricted access' );\n/**\n * MAIN FILE! (formerly known as index.php)\n * \n * @version $Id: admin.extplorer.php 247 2016-02-23 10:06:18Z soeren $\n * \n * @package eXtplorer\n * @copyright soeren 2007-2018\n * @author The eXtplorer project (http://extplorer.net)\n * @author The\tThe QuiX project (http://quixplorer.sourceforge.net)\n * @license\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n * \n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n * \n * Alternatively, the contents of this file may be used under the terms\n * of the GNU General Public License Version 2 or later (the \"GPL\"), in\n * which case the provisions of the GPL are applicable instead of\n * those above. If you wish to allow use of your version of this file only\n * under the terms of the GPL and not to allow others to use\n * your version of this file under the MPL, indicate your decision by\n * deleting  the provisions above and replace  them with the notice and\n * other provisions required by the GPL.  If you do not delete\n * the provisions above, a recipient may use your version of this file\n * under either the MPL or the GPL.\"\n * \n *\n * This is a component with full access to the filesystem of your joomla Site\n * I wouldn't recommend to let in Managers\n * allowed: Superadministrator\n**/\n\n// The eXtplorer version number\n$GLOBALS['ext_version'] = '2.1.12';\n$GLOBALS['ext_home'] = 'http://extplorer.net';\n$dir = '';\n//------------------------------------------------------------------------------\nif( defined( 'E_STRICT' ) ) { // Suppress Strict Standards Warnings\n\terror_reporting(E_ALL & ~E_STRICT & ~E_NOTICE);\n}\n//------------------------------------------------------------------------------\numask(0002); // Added to make created files/dirs group writable\n//------------------------------------------------------------------------------\nrequire_once( dirname( __FILE__) . \"/include/init.php\" );\t// Init\n\nif( !@is_object($my) && is_callable(array('jfactory','getuser'))) {\n\t$my = JFactory::getUser();\n}\n\nif( @is_object($my)) {\n\t\n\tif( ext_isJoomla('1.6', '>=' )) {\n\t\t$access = $my->authorise('core.admin');\n\t} else {\n\t\t$access = $my->usertype == 'Super Administrator';\n\t}\n\t\n\tif (!$access) {\n\t\t$url = htmlspecialchars($_SERVER['PHP_SELF']);\n\t\tif (headers_sent()) {\n\t\t\techo \"<script>document.location.href='$url';</script>\\n\";\n\t\t} else {\n\t\t\t@ob_end_clean(); // clear output buffer\n\t\t\theader( 'HTTP/1.1 403 Forbidden' );\n\t\t\theader( \"Location: \". $url );\n\t\t}\n\t}\n}\n\n/** Needed to keep the filelist in the XML installer file up-to-date\n$path = dirname(__FILE__);\n$filelist = extReadDirectory( $path, '.', true, true );\n$contents ='';\nforeach($filelist as $file ) {\n\tif( is_dir( $file ) || strstr(dirname($file), \"scripts\" )) continue;\n\t$filepath = str_replace( $path.'/', '', $file );\n\t$contents .= '<filename>'.$filepath.\"</filename>\\n\";\n}\nfile_put_contents( 'extplorer_filelist.txt', $contents );\n*/\n//------------------------------------------------------------------------------\nif( $action == \"post\" )\n  $action = extGetParam( $_REQUEST, \"do_action\" );\nelseif( empty( $action ))\n  $action = \"list\";\n\n\nif( $action != 'show_error') {\n\text_Result::init();\n}\n\nif( defined( '_LOGIN_REQUIRED')) return;\n\n// Empty the output buffer if this is a XMLHttpRequest\nif( ext_isXHR() ) {\n\terror_reporting(0);\n\twhile( @ob_end_clean() );\n}\n\nif( file_exists( _EXT_PATH . '/include/'. strtolower(basename( $action )) .'.php') ) {\n\trequire_once( _EXT_PATH . '/include/'. strtolower(basename( $action )) .'.php');\n}\n$classname = 'ext_'.$action;\nif( class_exists(strtolower($classname)) && is_callable(array($classname,'execaction'))) {\n\t$handler = new $classname();\n\t$handler->execAction( $dir, $item );\n} else {\n\n\tswitch($action) {\t\t// Execute actions, which are not in class file\n\n\t//------------------------------------------------------------------------------\n\t// COPY/MOVE FILE(S)/DIR(S)\n\tcase \"copy\":\tcase \"move\":\n\t\trequire_once( _EXT_PATH .\"/include/copy_move.php\" );\n\t\text_copy_move_items($dir);\n\tbreak;\n\n\t//------------------------------------------------------------------------------\n\t// SEARCH FOR FILE(S)/DIR(S)\n\tcase \"search\":\n\t\trequire_once( _EXT_PATH .\"/include/search.php\" );\n\t\text_search_items($dir);\n\tbreak;\n\n\t//------------------------------------------------------------------------------\n\t// USER-ADMINISTRATION\n\tcase \"admin\":\n\t\trequire_once( _EXT_PATH . \"/include/admin.php\" );\n\t\text_show_admin($dir);\n\tbreak;\n\n\t//------------------------------------------------------------------------------\n\t\t// BOOKMARKS\n\tcase 'modify_bookmark':\n\t\t$task = extGetParam( $_REQUEST, 'task' );\n\t\trequire_once( _EXT_PATH.'/include/bookmarks.php' );\n\t\text_modify_bookmark( $task, $dir );\n\n\t\tbreak;\n\t//------------------------------------------------------------------------------\n\tcase 'show_error':\n\t\text_Result::sendResult('', false, '');\n\t\tbreak;\n\tcase'get_about':\n\t\trequire_once( _EXT_PATH . \"/include/system_info.php\" );\n\t\tsystem_info();\n\t\tbreak;\n\t//------------------------------------------------------------------------------\n\t// DEFAULT: LIST FILES & DIRS\n\tcase \"getdircontents\":\n\t\t\trequire_once( _EXT_PATH . \"/include/list.php\" );\n\t\t\t$requestedDir = stripslashes(str_replace( '_RRR_', '/', extGetParam( $_REQUEST, 'node' )));\n\t\t\tif( empty($requestedDir) || $requestedDir == 'ext_root') {\n\t\t\t\t$requestedDir = $dir;\n\t\t\t}\n\t\t\t\n\t\t\tif (!down_home(get_abs_dir($requestedDir))) {\n\t\t\t    ext_Result::sendResult('', false, $requestedDir.\": \".$GLOBALS[\"error_msg\"][\"abovehome\"]);\n\t\t\t    $requestedDir = '';\n\t\t\t}\n\t\t\tsend_dircontents( $requestedDir, extGetParam($_REQUEST,'sendWhat','files') );\n\t\t\tbreak;\n\tcase 'get_dir_selects':\n\t\t\techo get_dir_selects( $dir );\n\t\t\tbreak;\n\tcase 'chdir_event':\n\t\t\trequire_once( _EXT_PATH.'/include/bookmarks.php' );\n\t\t\t$response = Array( 'bookmarks' => ext_list_bookmarks($dir) );\n\t\t\t$classname = class_exists('ext_Json') ? 'ext_Json' : 'Services_JSON';\n\t\t\t$json = new $classname();\n\t\t\techo $json->encode( $response );\n\t\t\tbreak;\n\tcase 'get_image':\n\t\t\trequire_once( _EXT_PATH . \"/include/view.php\" );\n\t\t\text_View::sendImage( $dir, $item );\n\tcase 'ftp_authentication': \n\tcase 'ssh2_authentication':\n\tcase 'extplorer_authentication':\n\t\t\t$auth_info = explode('_', $action);\n\t\t\t$auth_classname = 'ext_'.$action;\n\t\t\trequire_once(_EXT_PATH.'/include/authentication/'.$auth_info[0].'.php');\n\t\t\t$auth_plugin = new $auth_classname();\n\t\t\t$auth_plugin->onShowLoginForm();\n\t\t\tbreak;\n\tdefault:\n\t\trequire_once( _EXT_PATH . \"/include/list.php\" );\n\t\text_List::execAction($dir);\n\t//------------------------------------------------------------------------------\n\t}\n// end switch-statement\n}\n//------------------------------------------------------------------------------\n// Disconnect from ftp server\nif( ext_isFTPMode() && is_object($GLOBALS['FTPCONNECTION']) ) {\n\t$GLOBALS['FTPCONNECTION']->disconnect();\n}\n\n// Empty the output buffer if this is a XMLHttpRequest\nif( ext_isXHR() ) {\n\text_exit();\n}\n", "<?php\n// ensure this file is being included by a parent file\nif( !defined( '_JEXEC' ) && !defined( '_VALID_MOS' ) ) die( 'Restricted access' );\n/**\n * @version $Id: archive.php 248 2016-02-26 18:29:50Z soeren $\n * @package eXtplorer\n * @copyright soeren 2007-2015\n * @author The eXtplorer project (http://extplorer.net)\n * @author The\tThe QuiX project (http://quixplorer.sourceforge.net)\n * @license\n * @version $Id: archive.php 248 2016-02-26 18:29:50Z soeren $\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n * \n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n * \n * Alternatively, the contents of this file may be used under the terms\n * of the GNU General Public License Version 2 or later (the \"GPL\"), in\n * which case the provisions of the GPL are applicable instead of\n * those above. If you wish to allow use of your version of this file only\n * under the terms of the GPL and not to allow others to use\n * your version of this file under the MPL, indicate your decision by\n * deleting  the provisions above and replace  them with the notice and\n * other provisions required by the GPL.  If you do not delete\n * the provisions above, a recipient may use your version of this file\n * under either the MPL or the GPL.\"\n * \n*/\n\n/**\n * Zip & TarGzip Functions\n *\n */\nclass ext_Archive extends ext_Action {\n\n\tfunction execAction( $dir, $item=\"\" ) {\n\n\t\tif(($GLOBALS[\"permissions\"]&01)!=01) {\n\t\t\text_Result::sendResult('archive', false, $GLOBALS[\"error_msg\"][\"accessfunc\"]);\n\t\t}\n\t\tif(!$GLOBALS[\"zip\"] && !$GLOBALS[\"tgz\"]) {\n\t\t\text_Result::sendResult('archive', false, $GLOBALS[\"error_msg\"][\"miscnofunc\"]);\n\t\t}\n\n        // CSRF Security Check\n        if( !ext_checkToken($GLOBALS['__POST'][\"token\"]) ) {\n            ext_Result::sendResult('tokencheck', false, 'Request failed: Security Token not valid.');\n        }\n\t\t$allowed_types = array( 'zip', 'tgz', 'tbz', 'tar' );\n\n\t\t// If we have something to archive, let's do it now\n\t\tif(extGetParam($_POST, 'confirm' ) == 'true' ) {\n\t\t\t$saveToDir = utf8_decode($GLOBALS['__POST']['saveToDir']);\n\t\t\tif( !file_exists( get_abs_dir($saveToDir ) )) {\n\t\t\t\text_Result::sendResult('archive', false, ext_Lang::err('archive_dir_notexists'));\n\t\t\t}\n\t\t\tif( !is_writable( get_abs_dir($saveToDir ) )) {\n\t\t\t\text_Result::sendResult('archive', false, ext_Lang::err('archive_dir_unwritable'));\n\t\t\t}\n\t\t\trequire_once( _EXT_PATH .'/libraries/Archive/archive.php' );\n\n\t\t\tif( !in_array(strtolower( $GLOBALS['__POST'][\"type\"] ), $allowed_types )) {\n\t\t\t\text_Result::sendResult('archive', false, ext_Lang::err('extract_unknowntype').': '.htmlspecialchars($GLOBALS['__POST'][\"type\"]));\n\n\t\t\t}\n\t\t\t// This controls how many files are processed per Step (it's split up into steps to prevent time-outs)\n\t\t\t$files_per_step = 2000;\n\n\t\t\t$cnt=count($GLOBALS['__POST'][\"selitems\"]);\n\t\t\t$abs_dir= get_abs_dir($dir);\n\t\t\t$name=basename(stripslashes($GLOBALS['__POST'][\"name\"]));\n\t\t\tif($name==\"\") {\n\t\t\t\text_Result::sendResult('archive', false, $GLOBALS[\"error_msg\"][\"miscnoname\"]);\n\t\t\t}\n\n\t\t\t$startfrom = extGetParam( $_REQUEST, 'startfrom', 0 );\n\n\t\t\t$dir_contents_cache_name = 'ext_'.md5(implode(null, $GLOBALS['__POST'][\"selitems\"]));\n\t\t\t$dir_contents_cache_file = _EXT_FTPTMP_PATH.'/'.$dir_contents_cache_name.'.txt';\n\n\t\t\t$archive_name = get_abs_item($saveToDir,$name);\n\t\t\t$fileinfo = pathinfo( $archive_name );\n\n\t\t\tif( empty( $fileinfo['extension'] )) {\n\t\t\t\t$archive_name .= \".\".$GLOBALS['__POST'][\"type\"];\n\t\t\t\t$fileinfo['extension'] = $GLOBALS['__POST'][\"type\"];\n\n\t\t\t\tforeach( $allowed_types as $ext ) {\n\t\t\t\t\tif( $GLOBALS['__POST'][\"type\"] == $ext && @$fileinfo['extension'] != $ext ) {\n\t\t\t\t\t\t$archive_name .= \".\".$ext;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( $startfrom == 0 ) {\n\t\t\t\tfor($i=0;$i<$cnt;$i++) {\n\n\t\t\t\t\t$selitem=basename(stripslashes($GLOBALS['__POST'][\"selitems\"][$i]));\n\t\t\t\t\tif( $selitem == 'ext_root') { \n\t\t\t\t\t\t$selitem = '';\n\t\t\t\t\t}\n\t\t\t\t\tif( is_dir( utf8_decode($abs_dir .\"/\". $selitem ))) {\n\t\t\t\t\t\t$items = extReadDirectory(utf8_decode($abs_dir .\"/\".  $selitem), '.', true, true );\n\t\t\t\t\t\tforeach ( $items as $item ) {\n\t\t\t\t\t\t\tif( is_dir( $item ) || !is_readable( $item ) || $item == $archive_name ) continue;\n\t\t\t\t\t\t\t$v_list[] = str_replace('\\\\', '/', $item );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$v_list[] = utf8_decode(str_replace('\\\\', '/', $abs_dir .\"/\". $selitem ));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( count($v_list) > $files_per_step ) {\n\t\t\t\t\tif( file_put_contents($dir_contents_cache_file, implode(\"\\n\", $v_list )) == false ) {\n\t\t\t\t\t\text_Result::sendResult('archive', false, 'Failed to create a temporary list of the directory contents' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$file_list_string = file_get_contents($dir_contents_cache_file);\n\t\t\t\tif( empty( $file_list_string )) {\n\t\t\t\t\text_Result::sendResult('archive', false, 'Failed to retrieve the temporary list of the directory contents' );\n\t\t\t\t}\n\t\t\t\t$v_list = explode(\"\\n\", $file_list_string );\n\t\t\t}\n\t\t\t$cnt_filelist = count( $v_list );\n\t\t\t// Now we go to the right range of files and \"slice\" the array\n\t\t\t$v_list = array_slice( $v_list, $startfrom, $files_per_step-1  );\n\n\t\t\t$remove_path = $GLOBALS[\"home_dir\"];\n\t\t\tif( $dir ) {\n\t\t\t\t$remove_path .= $dir;\n\t\t\t}\n\t\t\t$remove_path = str_replace( '\\\\', '/', realpath($remove_path) ).'/';\n\t\t\t$debug = 'Starting from: '.$startfrom.\"\\n\";\n\t\t\t$debug .= 'Files to process: '.$cnt_filelist.\"\\n\";\n\t\t\t$debug .= implode( \"\\n\", $v_list );\n\t\t\t//file_put_contents( 'log.txt', $debug, FILE_APPEND );\n\n\t\t\t// Do some setup stuff\n\t\t\tini_set('memory_limit', '128M');\n\t\t\t@set_time_limit( 0 );\n\t\t\t//error_reporting( E_ERROR | E_PARSE );\n\t\t\t$result = extArchive::create( $archive_name, $v_list, $GLOBALS['__POST'][\"type\"], '', $remove_path\t);\n\n\t\t\tif( PEAR::isError( $result ) ) {\n\t\t\t\text_Result::sendResult('archive', false, $name.': '.ext_Lang::err('archive_creation_failed').' ('.$result->getMessage().$archive_name.')' );\n\t\t\t}\n\t\t\t$classname = class_exists('ext_Json') ? 'ext_Json' : 'Services_JSON';\n\t\t\t$json = new $classname();\n\t\t\tif( $cnt_filelist > $startfrom+$files_per_step ) {\n\n\t\t\t\t$response = Array( 'startfrom' => $startfrom + $files_per_step,\n\t\t\t\t'totalitems' => $cnt_filelist,\n\t\t\t\t'success' => true,\n\t\t\t\t'action' => 'archive',\n\t\t\t\t\t'token' => ext_getToken(),\n\t\t\t\t'message' => sprintf( ext_Lang::msg('processed_x_files'), $startfrom + $files_per_step, $cnt_filelist )\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t@unlink($dir_contents_cache_file);\n\t\t\t\tif( $GLOBALS['__POST'][\"type\"] == 'tgz' || $GLOBALS['__POST'][\"type\"] == 'tbz') {\n\t\t\t\t\tchmod( $archive_name, 0644 );\n\t\t\t\t}\n\t\t\t\t$response = Array( 'action' => 'archive',\n\t\t\t\t'success' => true,\n\t\t\t\t'token' => ext_getToken(),\n\t\t\t\t'message' => ext_Lang::msg('archive_created'),\n\t\t\t\t'newlocation' => ext_make_link( 'download', $dir, basename($archive_name) )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\techo $json->encode( $response );\n\t\t\text_exit();\n\t\t}\n\t\t$default_archive_type = 'zip';\n\t?>\n\t\t{\n\t\t\"xtype\": \"form\",\n\t\t\"id\": \"simpleform\",\n\t\t\"height\": \"200\",\n\t\t\"width\": \"350\",\n\t\t\"labelWidth\": 125,\n\t\t\"url\":\"<?php echo basename( $GLOBALS['script_name']) ?>\",\n\t\t\"dialogtitle\": \"<?php echo $GLOBALS[\"messages\"][\"actarchive\"] ?>\",\n\t\t\"frame\": true,\n\t\t\"items\": [{\n\t\t\t\"xtype\": \"textfield\",\n\t\t\t\"fieldLabel\": \"<?php echo ext_Lang::msg('archive_name', true ) ?>\",\n\t\t\t\"name\": \"name\",\n\t\t\t\"value\": \"<?php echo htmlspecialchars($GLOBALS['item'], ENT_QUOTES) . '.'. $default_archive_type ?>\",\n\t\t\t\"width\": \"200\"\n\t\t},\n\t\t{\n\t\t\t\"xtype\": \"combo\",\n\t\t\t\"fieldLabel\": \"<?php echo ext_Lang::msg('typeheader', true ) ?>\",\n\t\t\t\"store\": [\n\t\t\t\t\t['zip', 'Zip (<?php echo ext_Lang::msg('normal_compression', true ) ?>)'],\n\t\t\t\t\t['tgz', 'Tar/Gz (<?php echo ext_Lang::msg('good_compression', true ) ?>)'],\n\t\t\t\t\t<?php\n\t\t\t\t\tif(extension_loaded(\"bz2\")) {\n\t\t\t\t\t\techo \"['tbz', 'Tar/Bzip2 (\".ext_Lang::msg('best_compression', true ).\")'],\";\n\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t\t['tar', 'Tar (<?php echo ext_Lang::msg('no_compression', true ) ?>)']\n\t\t\t\t\t],\n\t\t\t\"displayField\":\"typename\",\n\t\t\t\"valueField\": \"type\",\n\t\t\t\"name\": \"type\",\n\t\t\t\"value\": \"<?php echo $default_archive_type ?>\",\n\t\t\t\"triggerAction\": \"all\",\n\t\t\t\"hiddenName\": \"type\",\n\t\t\t\"disableKeyFilter\": \"true\",\n\t\t\t\"editable\": \"false\",\n\t\t\t\"mode\": \"local\",\n\t\t\t\"allowBlank\": \"false\",\n\t\t\t\"selectOnFocus\":\"true\",\n\t\t\t\"width\": \"200\",\n\t\t\t\"listeners\": { \"select\": { \n\t\t\t\t\t\t\tfn: function(o, record ) {\n\t\t\t\t\t\t\t\tform = Ext.getCmp(\"simpleform\").getForm();\n\t\t\t\t\t\t\t\tvar nameField = form.findField(\"name\").getValue();\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif( nameField.indexOf( '.' ) > 0 ) {\n\t\t\t\t\t\t\t\t\tform.findField('name').setValue( nameField.substring( 0, nameField.indexOf('.')+1 ) + o.getValue() );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tform.findField('name').setValue( nameField + '.'+ o.getValue());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t}\n\t\t\n\t\t\n\t\t}, {\n\t\t\t\"xtype\": \"textfield\",\n\t\t\t\"fieldLabel\": \"<?php echo ext_Lang::msg('archive_saveToDir', true ) ?>\",\n\t\t\t\"name\": \"saveToDir\",\n\t\t\t\"value\": \"<?php echo str_replace(\"'\", \"\\'\", $dir ) ?>\",\n\t\t\t\"width\": \"200\"\n\t\t},{\n\t\t\t\"xtype\": \"checkbox\",\n\t\t\t\"fieldLabel\": \"<?php echo ext_Lang::msg('downlink', true ) ?>?\",\n\t\t\t\"name\": \"download\",\n\t\t\t\"checked\": \"true\"\n\t\t}\n\t\t],\n\t\t\"buttons\": [{\n\t\t\t\"text\": \"<?php echo ext_Lang::msg( 'btncreate', true ) ?>\", \n\t\t\t\"type\": \"submit\", \n\t\t\t\"handler\": function() { \n\t\t\t\tExt.ux.OnDemandLoad.load( \"<?php echo $GLOBALS['script_name'] ?>?option=com_extplorer&action=include_javascript&file=archive.js\", \n\t\t\t\t\t\t\t\t\t\t\tfunction(options) { submitArchiveForm(0) } ); \n\t\t\t}\n\t\t},{\n\t\t\t\"text\": \"<?php echo ext_Lang::msg( 'btncancel', true ) ?>\", \n\t\t\t\"handler\": function() { Ext.getCmp(\"dialog\").destroy() }\n\t\t}]\n}\n\n\t<?php\n\t}\n}\n//------------------------------------------------------------------------------\n?>", "<?php\n// ensure this file is being included by a parent file\nif( !defined( '_JEXEC' ) && !defined( '_VALID_MOS' ) ) die( 'Restricted access' );\n/**\n * @version $Id: chmod.php 243 2015-08-31 18:33:58Z soeren $\n * @package eXtplorer\n * @copyright soeren 2007-2015\n * @author The eXtplorer project (http://extplorer.net)\n * @author The\tThe QuiX project (http://quixplorer.sourceforge.net)\n * \n * @license\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n * \n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n * \n * Alternatively, the contents of this file may be used under the terms\n * of the GNU General Public License Version 2 or later (the \"GPL\"), in\n * which case the provisions of the GPL are applicable instead of\n * those above. If you wish to allow use of your version of this file only\n * under the terms of the GPL and not to allow others to use\n * your version of this file under the MPL, indicate your decision by\n * deleting  the provisions above and replace  them with the notice and\n * other provisions required by the GPL.  If you do not delete\n * the provisions above, a recipient may use your version of this file\n * under either the MPL or the GPL.\"\n * \n * \n */\n\n/**\n * Permission-Change Functions\n *\n */\nclass ext_Chmod extends ext_Action {\n\tfunction execAction($dir, $item) {\t\t// change permissions\n\n\t\tif(($GLOBALS[\"permissions\"]&01)!=01) ext_Result::sendResult( 'chmod', false, $GLOBALS[\"error_msg\"][\"accessfunc\"]);\n\n        // CSRF Security Check\n        if( !ext_checkToken($GLOBALS['__POST'][\"token\"]) ) {\n            ext_Result::sendResult('tokencheck', false, 'Request failed: Security Token not valid.');\n        }\n\t\tif( !empty($GLOBALS['__POST'][\"selitems\"])) {\n\t\t\t$cnt=count($GLOBALS['__POST'][\"selitems\"]);\n\n\t\t}\n\t\telse {\n\t\t\t$GLOBALS['__POST'][\"selitems\"][]  = $item;\n\t\t\t$cnt = 1;\n\t\t}\n\t\tif( !empty($GLOBALS['__POST']['do_recurse'])) {\n\t\t\t$do_recurse = true;\n\t\t}\n\t\telse {\n\t\t\t$do_recurse = false;\n\t\t}\n\n\t\t// Execute\n\t\tif(isset($GLOBALS['__POST'][\"confirm\"]) && $GLOBALS['__POST'][\"confirm\"]==\"true\") {\n\t\t\t$bin='';\n\t\t\tfor($i=0;$i<3;$i++) for($j=0;$j<3;$j++) {\n\t\t\t\t$tmp=\"r_\".$i.$j;\n\t\t\t\tif(!empty($GLOBALS['__POST'][$tmp]) ) {\n\t\t\t\t\t$bin.='1';\n\t\t\t\t} else {\n\t\t\t\t\t$bin.='0';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( $bin == '0') { // Changing permissions to \"none\" is not allowed\n\t\t\t\text_Result::sendResult('chmod', false, $item.\": \".ext_Lang::err('chmod_none_not_allowed'));\n\t\t\t}\n\t\t\t$old_bin = $bin;\n\t\t\tfor($i=0;$i<$cnt;++$i) {\n\t\t\t\tif( ext_isFTPMode() ) {\n\t\t\t\t\t$mode = decoct(bindec($bin));\n\t\t\t\t} else {\n\t\t\t\t\t$mode = bindec($bin);\n\t\t\t\t}\n\t\t\t\t$item = html_entity_decode($GLOBALS['__POST'][\"selitems\"][$i], ENT_QUOTES);\n\t\t\t\tif( ext_isFTPMode() ) {\n\t\t\t\t\t$abs_item = get_item_info( $dir,$item);\n\t\t\t\t} else {\n\t\t\t\t\t$abs_item = get_abs_item($dir,$item);\n\t\t\t\t}\n\t\t\t\tif(!$GLOBALS['ext_File']->file_exists( $abs_item )) {\n\t\t\t\t\text_Result::sendResult('chmod', false, $item.\": \".$GLOBALS[\"error_msg\"][\"fileexist\"]);\n\t\t\t\t}\n\t\t\t\tif(!get_show_item($dir, $item)) {\n\t\t\t\t\text_Result::sendResult('chmod', false, $item.\": \".$GLOBALS[\"error_msg\"][\"accessfile\"]);\n\t\t\t\t}\n\t\t\t\tif( $do_recurse ) {\n\t\t\t\t\t$ok = $GLOBALS['ext_File']->chmodRecursive( $abs_item, $mode );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif( get_is_dir( $abs_item )) {\n\t\t\t\t\t\t// when we chmod a directory we must care for the permissions\n\t\t\t\t\t\t// to prevent that the directory becomes not readable (when the \"execute bits\" are removed)\n\t\t\t\t\t\t$bin = substr_replace( $bin, '1', 2, 1 ); // set 1st x bit to 1\n\t\t\t\t\t\t$bin = substr_replace( $bin, '1', 5, 1 );// set  2nd x bit to 1\n\t\t\t\t\t\t$bin = substr_replace( $bin, '1', 8, 1 );// set 3rd x bit to 1\n\t\t\t\t\t\tif( ext_isFTPMode() ) {\n\t\t\t\t\t\t\t$mode = decoct(bindec($bin));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$mode = bindec($bin);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//ext_Result::sendResult('chmod', false, $GLOBALS['FTPCONNECTION']->pwd());\n\t\t\t\t\t$ok = @$GLOBALS['ext_File']->chmod( $abs_item, $mode );\n\t\t\t\t}\n\n\t\t\t\t$bin = $old_bin;\n\t\t\t}\n\n\t\t\tif($ok===false || PEAR::isError( $ok ) ) {\n\t\t\t\t$msg = $item.\": \".$GLOBALS[\"error_msg\"][\"permchange\"];\n\t\t\t\t$msg .= PEAR::isError( $ok ) ? ' [' . $ok->getMessage().']' : '';\n\t\t\t\text_Result::sendResult('chmod', false, $msg );\n\t\t\t}\n\t\t\text_Result::sendResult('chmod', true, ext_Lang::msg('permchange') );\n\t\t\treturn;\n\t\t}\n\t\tif( ext_isFTPMode() ) {\n\t\t\t$abs_item = get_item_info( $dir, $GLOBALS['__POST'][\"selitems\"][0]);\n\t\t} else {\n\t\t\t$abs_item = get_abs_item( $dir, $GLOBALS['__POST'][\"selitems\"][0]);\n\t\t\t$abs_item = utf8_decode($abs_item);\n\t\t}\n\n\t\t$mode = parse_file_perms(get_file_perms( $abs_item ));\n\t\tif($mode===false) {\n\t\t\text_Result::sendResult('chmod', false, $item.\": \".$GLOBALS[\"error_msg\"][\"permread\"]);\n\t\t}\n\t\t$pos = \"rwx\";\n\t\t$text = \"\";\n\t\tfor($i=0;$i<$cnt;++$i) {\n\t\t\t$s_item=get_rel_item($dir,$GLOBALS['__POST'][\"selitems\"][$i]);\n\t\t\tif(strlen($s_item)>50) $s_item=\"...\".substr($s_item,-47);\n\t\t\t$text .= $s_item.($i+1<$cnt ? ', ':'');\n\t\t}\n\t\t?>\n\t\t{\n\t\t\"xtype\": \"form\",\n\t\t\"id\": \"simpleform\",\n\t\t\"width\": \"300\",\n\t\t\"labelWidth\": 125,\n\t\t\"url\":\"<?php echo basename( $GLOBALS['script_name']) ?>\",\n\t\t\"dialogtitle\": \"<?php echo ext_Lang::msg('actperms') ?>\",\n\t\t\"title\" : \"<?php echo htmlspecialchars($text,ENT_QUOTES)  ?>\",\n\t\t\"frame\": true,\n\t\t\"items\": [{\n\t\t\t\"layout\": \"column\",\n\t\t\t\"items\": [{\n\t<?php\n\t\t// print table with current perms & checkboxes to change\n\t\tfor($i=0;$i<3;++$i) {\n\t\t\t?>\n\t\t\t\"width\":80, \n\t\t\t\"title\":\"<?php echo ext_Lang::msg(array('miscchmod'=> $i ), true ) ?>\",\t\t\t\t\t\n\t\t\t\"items\": [{\n\t\t\t\t<?php\n\t\t\t\tfor($j=0;$j<3;++$j) {\n\t\t\t\t\t?>\n\t\t\t\t\t\"xtype\": \"checkbox\",\n\t\t\t\t\t\"boxLabel\":\"<?php echo $pos{$j}  ?>\",\n\t\t\t\t\t<?php if($mode{(3*$i)+$j} != \"-\") echo '\"checked\":true,' ?>\n\t\t\t\t\t\t\"name\":\"<?php echo \"r_\". $i.$j ?>\"\n\t\t\t\t\t}\t<?php\n\t\t\t\t\tif( $j<2 ) echo ',{';\n\t\t\t\t}\n\t\t\t\t?>\t\n\t\t\t\t]\n\t\t\t}\n\t\t<?php \n\t\t\tif( $i<2 ) echo ',{';\n\t\t}\n\t\t?>,{\n\t\t\t\"width\":400, \n\t\t\t\"style\":\"margin-left:10px\", \n\t\t\t\"clear\":true,\n\t\t\t\"html\": \"&nbsp;\"\n\t\t}]\n\n\t},{\n\t\t\"xtype\": \"checkbox\",\n\t\t\"fieldLabel\":\"<?php echo ext_Lang::msg('recurse_subdirs', true ) ?>\",\n\t\t\"name\":\"do_recurse\"\n\t}],\n\t\"buttons\": [{\n\t\t\"text\": \"<?php echo ext_Lang::msg( 'btnsave', true ) ?>\", \n\t\t\"handler\": function() {\n\t\t\tstatusBarMessage( '<?php echo ext_Lang::msg( 'permissions_processing', true ) ?>', true );\n\t\t\tform = Ext.getCmp(\"simpleform\").getForm();\n\t\t\tform.submit({\n\t\t\t\t//reset: true,\n\t\t\t\treset: false,\n\t\t\t\tsuccess: function(form, action) {\n\t\t\t\t\tstatusBarMessage( action.result.message, false, true );\n\t\t\t\t\tdatastore.reload();\n\t\t\t\t\tExt.getCmp(\"dialog\").destroy();\n\t\t\t\t},\n\t\t\t\tfailure: function(form, action) {\n\t\t\t\t\tstatusBarMessage( action.result.error, false, false );\n\t\t\t\t\tExt.Msg.alert('<?php echo ext_Lang::err( 'error', true ) ?>', action.result.error);\n\t\t\t\t},\n\t\t\t\tscope: form,\n\t\t\t\tparams: {\n\t\t\t\t\t\"option\": \"com_extplorer\", \n\t\t\t\t\t\"action\": \"chmod\", \n\t\t\t\t\t\"dir\": \"<?php echo stripslashes(htmlentities($GLOBALS['__POST'][\"dir\"],ENT_QUOTES)) ?>\", \n\t\t\t\t\t\"selitems[]\": ['<?php echo htmlentities(implode(\"','\", $GLOBALS['__POST'][\"selitems\"]),ENT_QUOTES) ?>'], \n\t\t\t\t\tconfirm: 'true',\n\t\t\t\t\ttoken: \"<?php echo ext_getToken() ?>\"\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},{\n\t\t\"text\": \"<?php echo ext_Lang::msg( 'btncancel', true ) ?>\", \n\t\t\"handler\": function() { Ext.getCmp(\"dialog\").destroy(); }\n\t}]\n}\n\t\n\t\t<?php\n\t}\n}\n//------------------------------------------------------------------------------\n?>", "<?php\n// ensure this file is being included by a parent file\nif( !defined( '_JEXEC' ) && !defined( '_VALID_MOS' ) ) die( 'Restricted access' );\n/**\n * @version $Id: functions.php 248 2016-02-26 18:29:50Z soeren $\n * @package eXtplorer\n * @copyright soeren 2007-2011\n * @author The eXtplorer project (http://extplorer.net)\n * @author The\tThe QuiX project (http://quixplorer.sourceforge.net)\n * \n * @license\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n * \n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n * \n * Alternatively, the contents of this file may be used under the terms\n * of the GNU General Public License Version 2 or later (the \"GPL\"), in\n * which case the provisions of the GPL are applicable instead of\n * those above. If you wish to allow use of your version of this file only\n * under the terms of the GPL and not to allow others to use\n * your version of this file under the MPL, indicate your decision by\n * deleting  the provisions above and replace  them with the notice and\n * other provisions required by the GPL.  If you do not delete\n * the provisions above, a recipient may use your version of this file\n * under either the MPL or the GPL.\"\n * \n */\n\n/**\n * THESE ARE NUMEROUS HELPER FUNCTIONS FOR THE OTHER INCLUDE FILES\n */\n\nfunction ext_make_link($_action,$_dir,$_item=NULL,$_order=NULL,$_srt=NULL,$languages=NULL, $extra=null) {\n\t// make link to next page\n\tif($_action==\"\" || $_action==NULL) $_action=\"list\";\n\n\tif($_item==\"\") $_item=NULL;\n\tif($_order==NULL) $_order=$GLOBALS[\"order\"];\n\tif($_srt==NULL) $_srt=$GLOBALS[\"direction\"];\n\tif($languages==NULL) $languages=(isset($GLOBALS[\"lang\"])?$GLOBALS[\"lang\"]:NULL);\n\n\t$link=$GLOBALS[\"script_name\"].\"?option=com_extplorer&action=\".$_action;\n\tif(!is_null($_dir )) {\n\t\t$link.=\"&dir=\".urlencode($_dir);\n\t}\n\tif($_item!=NULL) $link.=\"&item=\".urlencode($_item);\n\tif($_order!=NULL) $link.=\"&order=\".$_order;\n\tif($_srt!=NULL) $link.=\"&direction=\".$_srt;\n\tif($languages!=NULL) $link.=\"&lang=\".$languages;\n\tif(!is_null($extra)) {\n\t\t$link .= $extra;\n\t}\n\treturn $link;\n}\n//------------------------------------------------------------------------------\nfunction get_abs_dir($dir) {\t\t\t// get absolute path\n\tif( ext_isFTPMode() ) {\n\t\tif( $dir != '' && $dir[0] != '/' && $dir[1] != ':') {\n\t\t\t$dir = '/'.$dir;\n\t\t}\n\t\treturn $dir;\n\t}\n\t$abs_dir=file_exists($GLOBALS[\"home_dir\"]) ? $GLOBALS[\"home_dir\"] : $_SERVER[\"DOCUMENT_ROOT\"];\n\n\tif($dir!=\"\" && !@stristr( $dir, $abs_dir )) $abs_dir.=\"/\".$dir;\n\telseif(@stristr( $dir, $abs_dir )) $abs_dir = \"/\".$dir;\n\t/*else {\n\t\t$abs_dir = $dir;\n\t}*/\n\t$realpath = str_replace('\\\\', '/', realpath($abs_dir) );\n\tif( $realpath == '') {\n\t\treturn $abs_dir;\n\t}\n\telse {\n\t\treturn $realpath;\n\t}\n\n\treturn $realpath;\n}\n//------------------------------------------------------------------------------\nfunction get_abs_item($dir, $item) {\t\t// get absolute file+path\n\tif( is_array( $item )) {\n\t\t// FTP Mode\n\t\t$abs_item = '/' . get_abs_dir($dir).\"/\".$item['name'];\n\t\tif( get_is_dir($item)) $abs_item.='/';\n\t\treturn extPathName($abs_item); \n\t}\n\treturn extPathName( get_abs_dir($dir).\"/\".basename($item) );\n}\n/**\n * Returns the LS info array from an ftp directory listing\n *\n * @param unknown_type $dir\n * @param unknown_type $item\n * @return unknown\n */\nfunction get_item_info( $dir, $item ) {\n\t$ls = getCachedFTPListing( $dir );\n\tif( empty($ls)) return false;\n\tforeach( $ls as $entry ) {\n\t\tif( $entry['name'] == $item ) {\n\t\t\treturn $entry;\n\t\t}\n\t}\n\tif( $dir != '') {\n\t\treturn $dir.'/'.$item;\n\t}\n\treturn $item;\n}\n//------------------------------------------------------------------------------\nfunction get_rel_item($dir,$item) {\t\t// get file relative from home\n\tif($dir!=\"\") return $dir.\"/\".$item;\n\telse return $item;\n}\n//------------------------------------------------------------------------------\nfunction get_is_file( $abs_item) {\t\t// can this file be edited?\n\tif( ext_isFTPMode() && is_array( $abs_item )) {\n\t\treturn empty($abs_item['is_dir']);\n\t} elseif( ext_isFTPMode() ) {\n\t\t$info = get_item_info( dirname($abs_item), basename($abs_item));\n\t\treturn empty($info['is_dir']);\n\t}\n\n\treturn @is_file($abs_item);\n}\n//------------------------------------------------------------------------------\nfunction get_is_dir( $abs_item ) {\t\t// is this a directory?\n\tif( ext_isFTPMode() && is_array( $abs_item )) {\n\t\treturn !empty($abs_item['is_dir']);\n\t}\n\telseif( ext_isFTPMode() ) {\n\t\t$info = get_item_info( dirname( $abs_item), basename( $abs_item ));\n\t\treturn !empty($info['is_dir']);\n\t}\n\treturn @is_dir( $abs_item );\n}\n//------------------------------------------------------------------------------\nfunction parse_file_type( $abs_item ) {\t\t// parsed file type (d / l / -)\n\n\tif(@get_is_dir($abs_item)) return \"d\";\n\tif(@is_link($abs_item)) return \"l\";\n\treturn \"-\";\n}\n//------------------------------------------------------------------------------\nfunction get_file_perms( $item) {\t\t// file permissions\n\tif( ext_isFTPMode() && isset($item['rights']) ) {\n\t\t$perms = decoct( bindec( decode_ftp_rights($item['rights']) ) );\n\t\treturn $perms;\n\t} elseif( is_numeric($item['mode'])) { //SFTP\n\t\treturn @decoct($item['mode']  & 0777);\n\t}\t\n\treturn @decoct(@fileperms( $item ) & 0777);\n}\n\nfunction get_languages() {\n\t$langfiles = extReadDirectory( _EXT_PATH.'/languages' );\n\t$langs = array();\n\tforeach( $langfiles as $lang ) {\n\t\tif( stristr( $lang, '_mimes') || $lang == 'index.html') continue;\n\t\t$langs[basename( $lang, '.php' )] = ucwords(str_replace( '_', ' ', basename( $lang, '.php' )));\n\t}\n\treturn $langs;\n}\n//------------------------------------------------------------------------------\nfunction parse_file_perms($mode) {\t\t// parsed file permisions\n\n\tif(strlen($mode)<3) return \"---------\";\n\t$parsed_mode=\"\";\n\tfor($i=0;$i<3;$i++) {\n\t\t// read\n\t\tif(($mode{$i} & 04)) $parsed_mode .= \"r\";\n\t\telse $parsed_mode .= \"-\";\n\t\t// write\n\t\tif(($mode{$i} & 02)) $parsed_mode .= \"w\";\n\t\telse $parsed_mode .= \"-\";\n\t\t// execute\n\t\tif(($mode{$i} & 01)) $parsed_mode .= \"x\";\n\t\telse $parsed_mode .= \"-\";\n\t}\n\treturn $parsed_mode;\n}\n\nfunction decode_ftp_rights( $rights) {\n\t$parsed_mode=\"\";\n\tfor($i=0;$i<9;$i++) {\n\t\t// read\n\t\tif( $rights[$i] != '-' ) {\n\t\t\t$parsed_mode .= '1';\n\t\t}\n\t\telse {\n\t\t\t$parsed_mode.= '0';\n\t\t}\n\t}\n\n\treturn $parsed_mode;\n}\n//------------------------------------------------------------------------------\nfunction get_file_size( $abs_item) {\t\t// file size\n\treturn @$GLOBALS['ext_File']->filesize( $abs_item );\n}\n//------------------------------------------------------------------------------\n\nfunction get_dir_size($dir) {\n\tif(is_file($dir)) return array('size'=>filesize($dir),'howmany'=>0);\n\tif($dh=opendir($dir)) {\n\t\t$size=0;\n\t\t$n = 0;\n\t\twhile(($file=readdir($dh))!==false) {\n\t\t\tif($file=='.' || $file=='..') continue;\n\t\t\t$n++;\n\t\t\t$data = get_dir_size($dir.'/'.$file);\n\t\t\t$size += $data['size'];\n\t\t\t$n += $data['howmany'];\n\t\t}\n\t\tclosedir($dh);\n\t\treturn array('size'=>$size,'howmany'=>$n);\n\t}\n\treturn array('size'=>0,'howmany'=>0);\n}\n\nfunction parse_file_size($bytes, $precision = 2) {\n    $units = array('B', 'KB', 'MB', 'GB', 'TB');\n    if( !is_float($bytes)) {\n    \t$bytes = (float)sprintf(\"%u\", $bytes);\n    }\n    $bytes = max($bytes, 0);\n    $pow = floor(($bytes ? log($bytes) : 0) / log(1024));\n    $pow = min($pow, count($units) - 1);\n  \n    $bytes /= pow(1024, $pow);\n  \n    return round($bytes, $precision) . ' ' . $units[$pow];\n} \n//------------------------------------------------------------------------------\nfunction get_file_date( $item) {\t\t// file date\n\treturn @$GLOBALS['ext_File']->filemtime( $item );\n}\n//------------------------------------------------------------------------------\nfunction parse_file_date($date) {\t\t// parsed file date\n\tif ($date) {\n\t\treturn @date($GLOBALS[\"date_fmt\"],$date);\n\t} else {\n\t\treturn \" (unknown) \";\n\t}\n}\n//------------------------------------------------------------------------------\nfunction get_is_image( $abs_item ) {\t\t// is this file an image?\n\tif(!get_is_file($abs_item)) return false;\n\tif( isset($abs_item['name'])) {\n\t\t$abs_item = $abs_item['name'];\n\t}\n\treturn in_array(pathinfo($abs_item,PATHINFO_EXTENSION ), $GLOBALS[\"images_ext\"]);\n}\n//-----------------------------------------------------------------------------\nfunction get_is_editable( $abs_item ) {\t\t// is this file editable?\n\tif(!get_is_file( $abs_item )) return false;\n\t\n\tif( is_array( $abs_item ) ) {\n\t\t$abs_item = $abs_item['name'];\n\t}\n\n\tif(in_array(\".\".strtolower(pathinfo($abs_item,PATHINFO_EXTENSION )), $GLOBALS[\"editable_ext\"])) {\n\t\treturn true;\n\t}\n\n\treturn strpos( basename($abs_item), \".\" ) ? false : true;\n\n}\n//-----------------------------------------------------------------------------\nfunction get_mime_type( $abs_item, $query) {\t// get file's mimetype\n\n\tif(get_is_dir( $abs_item )) {\t\t\t// directory\n\t\t$mime_type\t= $GLOBALS[\"super_mimes\"][\"dir\"][0];\n\t\t$image\t\t= $GLOBALS[\"super_mimes\"][\"dir\"][1];\n\n\t\tif($query==\"img\") return $image;\n\t\telse return $mime_type;\n\t}\n\t$extra = $GLOBALS['ext_File']->is_link( $abs_item ) ? ' ('.$GLOBALS['mimes']['symlink'].')' : '';\n\tif( ext_isFTPMode() && isset($abs_item['name']) ) {\n\t\t$abs_item=$abs_item['name'];\n\t}\n\t\t\t\t// mime_type\n\tforeach($GLOBALS[\"used_mime_types\"] as $mime) {\n\t\tlist($desc,$img,$ext)\t= $mime;\n\n\t\tif(stristr(basename($abs_item), $ext )) {\n\t\t\t$mime_type\t= $desc;\n\t\t\t$image\t\t= $img;\n\t\t\tif($query==\"img\") return $image;\n\t\t\telse return $mime_type . $extra;\n\t\t}\n\t}\n\n\tif((function_exists(\"is_executable\") &&\n\t\t@is_executable( $abs_item )) ||\n\t\t@stristr($abs_item,$GLOBALS[\"super_mimes\"][\"exe\"][2]))\n\t{\t\t\t\t\t\t// executable\n\t\t$mime_type\t= $GLOBALS[\"super_mimes\"][\"exe\"][0];\n\t\t$image\t\t= $GLOBALS[\"super_mimes\"][\"exe\"][1];\n\t} else {\t\t\t\t\t// unknown file\n\t\t$mime_type\t= $GLOBALS[\"super_mimes\"][\"file\"][0];\n\t\t$image\t\t= $GLOBALS[\"super_mimes\"][\"file\"][1];\n\t}\n\n\tif($query==\"img\") {\n\t\treturn $image;\n\t}\n\telse {\n\t\treturn $mime_type . $extra;\n\t}\n}\n//------------------------------------------------------------------------------\nfunction get_show_item($dir, $item) {\t\t// show this file?\n\tif( is_array( $item )) {\n\t\t$item = $item['name'];\n\t}\n\tif($item == \".\" || $item == \"..\" ||\n\t\t(substr($item,0,1)==\".\" && $GLOBALS[\"show_hidden\"]==false)) return false;\n\n\tif($GLOBALS[\"no_access\"]!=\"\" && @preg_match($GLOBALS[\"no_access\"],$item)) return false;\n\n\tif($GLOBALS[\"show_hidden\"]==false) {\n\t\t$dirs=explode(\"/\",$dir);\n\t\tforeach($dirs as $i) if(substr($i,0,1)==\".\") return false;\n\t}\n\n\treturn true;\n}\n//------------------------------------------------------------------------------\nfunction get_dir_list( $dir='' ) {\n\tif( ext_isFTPMode()) {\n\t\t$files = getCachedFTPListing(empty($dir) ? '.' : $dir);\n\t} else {\n\t\t$files = extReadDirectory( get_abs_dir( $dir), '.', false, true );\n\t}\n\n\t$dirs =array();\n\tforeach( $files as $item) {\n\t\t$itemname = ext_isFTPMode() ? (empty($dir) ? '' : $dir.'/') .$item['name'] :  $item;\n\n\t\t$itemname = str_replace( '\\\\', '/', $itemname );\n\t\tif( get_is_dir($item)) {\n\t\t\t$index = str_replace( \n\t\t\t\t\t\tstr_replace('\\\\', '/', $GLOBALS['home_dir'].$GLOBALS['separator']), \n\t\t\t\t\t\t\t'', $itemname );\n\n\t\t\t$dirs[$index]= basename($index);\n\t\t}\n\t}\n\n\treturn $dirs;\n}\n/**\n * Returns select lists with all the subdirectories along the current directory path\n *\n * @param string $dir\n * @return string\n */\nfunction get_dir_selects( $dir ) {\n\t$dirs = explode( \"/\", str_replace( \"\\\\\", '/', $dir ) );\n\n\t$subdirs = get_dir_list();\n\tif( sizeof( $subdirs ) > 0) {\n\t\t$subdirs = array_merge(Array('ext_disabled' => '-'), $subdirs );\n\t}\n\n\tif( empty($dirs[0]) ) array_shift($dirs);\n\t$dirsCopy = $dirs;\n\t$implode = '';\n\t$selectedDir = @$dirs[0];\n\tforeach( $subdirs as $index => $val ) {\n\t\tif ($GLOBALS['use_mb']) {\n\t\t\tif (mb_detect_encoding($val) == 'ASCII') {\n\t\t\t\t$subdirs[$index] = utf8_encode($val);\n\t\t\t} else {\n\t\t\t\t$subdirs[$index] = $val;\n\t\t\t}\n\t\t} else {\n\t\t\t$subdirs[$index] = utf8_encode($val);\n\t\t}\n\t}\n\n\t$dir_links = ext_selectList('dirselect1', $selectedDir, $subdirs, 1, '', 'onchange=\"theDir=this.options[this.selectedIndex].value;if(theDir!=\\'ext_disabled\\' ) chDir(theDir);\"' );\n\t$i = 2;\n\tforeach( $dirs as $directory ) {\n\t\tif( $directory != \"\" ) {\n\t\t\t$implode .= $directory;\n\t\t\t$next = next($dirsCopy);\n\t\t\t$subdirs = get_dir_list( $implode );\n\n\t\t\tforeach( $subdirs as $index => $val ) {\n\t\t\t\tunset( $subdirs[$index]);\n\t\t\t\tif ($GLOBALS['use_mb']) {\n\t\t\t\t\tif (mb_detect_encoding($index) == 'ASCII') {\n\t\t\t\t\t\tif (mb_detect_encoding($val) == 'ASCII') {\n\t\t\t\t\t\t\t$subdirs[utf8_encode($index)] = utf8_encode($val);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$subdirs[utf8_encode($index)] = $val;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (mb_detect_encoding($val) == 'ASCII') {\n\t\t\t\t\t\t\t$subdirs[$index] = utf8_encode($val);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$subdirs[$index] = $val;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$subdirs[utf8_encode($index)] = utf8_encode($val);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( $next !== false ) {\n\t\t\t\t$selectedDir .= '/'.$next;\n\t\t\t} else {\n\t\t\t\tif( sizeof( $subdirs ) > 0) {\n\t\t\t\t\t$subdirs = array_merge(Array('ext_disabled' => '-'), $subdirs );\n\t\t\t\t}\n\t\t\t}\n\t\t\t$dir_links .= ' / '.ext_selectList('dirselect'.$i++, $selectedDir, $subdirs, 1, '', 'onchange=\"theDir=this.options[this.selectedIndex].value;if(theDir!=\\'ext_disabled\\' ) chDir(theDir);\"' );\n\t\t\t$implode .= '/';\n\t\t}\n\n\t}\n\t//echo '<pre>'.htmlspecialchars($dir_links).'</pre>';exit;\n\treturn $dir_links;\n}\n//------------------------------------------------------------------------------\nfunction ext_copy_dir($source,$dest) {\t\t// copy dir\n\t$ok = true;\n\t$source = str_replace( '\\\\', '/', $source );\n\t$dest = str_replace( '\\\\', '/', $dest );\n\tif(!@mkdir($dest,0777)) return false;\n\t$itemlist = extReadDirectory( $source, '.', true, true );\n\tif( empty( $itemlist )) return true;\n\n\tforeach( $itemlist as $file ) {\n\t\tif(($file==\"..\" || $file==\".\")) continue;\n\t\t$file = str_replace( '\\\\', '/', $file );\n\t\t$new_dest = str_replace( $source, $dest, $file );\n\n\t\tif(@is_dir($file)) {\n\t\t\t@mkdir($new_dest,0777);\n\t\t} else {\n\t\t\t$ok=@copy($file,$new_dest);\n\t\t}\n\t}\n\n\treturn $ok;\n}\n\n//------------------------------------------------------------------------------\nfunction remove($item) {\t\t\t// remove file / dir\n\n\tif( !is_link( $item )) {\n\t\t$item = realpath($item);\n\t}\n\t$ok = true;\n\tif( is_link($item) ||  is_file($item)) \n\t$ok =  unlink($item);\n\telseif( @is_dir($item)) {\n\n\t\tif(($handle= opendir($item))===false) \n\t\text_Result::sendResult('delete', false, basename($item).\": \".$GLOBALS[\"error_msg\"][\"opendir\"]);\n\n\t\twhile(($file=readdir($handle))!==false) {\n\t\t\tif(($file==\"..\" || $file==\".\")) continue;\n\n\t\t\t$new_item = $item.\"/\".$file;\n\t\t\tif(!file_exists($new_item)) \n\t\t\text_Result::sendResult('delete', false, basename($item).\": \".$GLOBALS[\"error_msg\"][\"readdir\"]);\n\t\t\t//if(!get_show_item($item, $new_item)) continue;\n\n\t\t\tif( @is_dir($new_item)) {\n\t\t\t\t$ok=remove($new_item);\n\t\t\t} else {\n\t\t\t\t$ok= unlink($new_item);\n\t\t\t}\n\t\t}\n\n\t\tclosedir($handle);\n\t\t$ok=@rmdir($item);\n\t}\n\treturn $ok;\n}\nfunction chmod_recursive($item, $mode) {\t\t\t// chmod file / dir\n\t$ok = true;\n\n\tif(@is_link($item) || @is_file($item)) {\n\t\t$ok=@chmod( $item, $mode );\n\t\tif($ok) ext_Result::add_message($GLOBALS['messages']['permchange'].' '.$new_item);\n\t\telse ext_Result::add_error($GLOBALS['error_msg']['permchange'].' '.$new_item);\n\t}\n\telseif(@is_dir($item)) {\n\t\tif(($handle=@opendir($item))===false) {\n\n\t\t\text_Result::add_error(basename($item).\": \".$GLOBALS[\"error_msg\"][\"opendir\"]);\n\t\t\treturn false; \n\t\t}\n\n\t\twhile(($file=readdir($handle))!==false) {\n\t\t\tif(($file==\"..\" || $file==\".\")) continue;\n\n\t\t\t$new_item = $item.\"/\".$file;\n\t\t\tif(!@file_exists($new_item)) {\n\t\t\t\text_Result::add_error(basename($item).\": \".$GLOBALS[\"error_msg\"][\"readdir\"]);\n\t\t\t\tcontinue; \n\t\t\t}\n\t\t\t//if(!get_show_item($item, $new_item)) continue;\n\n\t\t\tif(@is_dir($new_item)) {\n\t\t\t\t$ok=chmod_recursive($new_item, $mode);\n\t\t\t} else {\n\t\t\t\t$ok=@chmod($new_item, $mode);\n\t\t\t\tif($ok) ext_Result::add_message($GLOBALS['messages']['permchange'].' '.$new_item);\n\t\t\t\telse ext_Result::add_error($GLOBALS['error_msg']['permchange'].' '.$new_item);\n\t\t\t}\n\t\t}\n\t\tclosedir($handle);\n\t\tif( @is_dir( $item )) {\n\t\t\t$bin = decbin( $mode );\n\t\t\t// when we chmod a directory we must care for the permissions\n\t\t\t// to prevent that the directory becomes not readable (when the \"execute bits\" are removed)\n\t\t\t$bin = substr_replace( $bin, '1', 2, 1 ); // set 1st x bit to 1\n\t\t\t$bin = substr_replace( $bin, '1', 5, 1 );// set  2nd x bit to 1\n\t\t\t$bin = substr_replace( $bin, '1', 8, 1 );// set 3rd x bit to 1\n\t\t\t$mode = bindec( $bin ); \n\t\t}\n\t\t$ok=@chmod( $item, $mode );\n\t\tif($ok) ext_Result::add_message($GLOBALS['messages']['permchange'].' '.$item);\n\t\telse ext_Result::add_error($GLOBALS['error_msg']['permchange'].' '.$item);\n\t}\n\n\treturn $ok;\n}\n//------------------------------------------------------------------------------\nfunction get_max_file_size() {\t\t\t// get php max_upload_file_size\n\treturn calc_php_setting_bytes( ini_get(\"upload_max_filesize\") );\n}\nfunction get_max_upload_limit() {\n\treturn calc_php_setting_bytes( ini_get('post_max_size'));\n}\n\nfunction calc_php_setting_bytes( $value ) {\n\tswitch(strtoupper(substr($value,-1))) {\n\t\tcase 'G':\n\t\t$value = substr($value,0,-1);\n\t\t$value = round($value*1073741824);\n\t\tbreak;\n\tcase 'M':\n\t\t$value = substr($value,0,-1);\n\t\t$value = round($value*1048576);\n\t\tbreak;\n\tcase 'K':\n\t\t$value = substr($value,0,-1);\n\t\t$value = round($value*1024);\n\t\tbreak;\n\t}\n\n\treturn $value;\n}\n//------------------------------------------------------------------------------\nfunction down_home($abs_dir) {\t\t\t// dir deeper than home?\n\tif( ext_isFTPMode() ) {\n\t\treturn true;\n\t}\n\t$real_home = @realpath($GLOBALS[\"home_dir\"]);\n\t$real_dir = @realpath($abs_dir);\n\tif( $real_dir == '' ) $real_dir = dirname( $abs_dir );\n\tif( $real_home == '' ) $real_home = $_SERVER['DOCUMENT_ROOT'];\n\t//echo 'NOW: $real_home = '.$real_home;\n\t//echo ', $real_dir = '.$real_dir;\n\n\tif(@stristr($abs_dir,\"\\\\.\\\\.\")) return false;\n\tif(strcmp($real_home,@substr($real_dir,0,strlen($real_home)))) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n//------------------------------------------------------------------------------\nfunction id_browser() {\n\t$browser=$GLOBALS['__SERVER']['HTTP_USER_AGENT'];\n\n\tif(preg_match('/Opera(\\/| )([0-9]\\.[0-9]{1,2})/', $browser)) {\n \t\treturn 'OPERA';\n\t} else if(preg_match('/MSIE ([0-9]\\.[0-9]{1,2})/', $browser)) {\n \t\treturn 'IE';\n\t} else if(preg_match('/OmniWeb\\/([0-9]\\.[0-9]{1,2})/', $browser)) {\n \t\treturn 'OMNIWEB';\n\t} else if(preg_match('/(Konqueror\\/)(.*)/', $browser)) {\n \t\treturn 'KONQUEROR';\n\t} else if(preg_match('/Mozilla\\/([0-9]\\.[0-9]{1,2})/', $browser)) {\n\t\treturn 'MOZILLA';\n\t} else {\n\t\treturn 'OTHER';\n\t}\n}\nfunction ext_isArchive( $file ) {\n  \n\t$file_info = pathinfo($file);\n\t$ext = @strtolower($file_info[\"extension\"]);\n\t$archive_types = array(\"tar\", \"gz\", \"tgz\", \"zip\", \"bzip2\", \"bz2\", \"tbz\", 'rar');\n\tif( in_array( $ext, $archive_types )) {\n\t\treturn true;\n\t}\n\treturn false;\n}\nif( !extension_loaded('posix') ) {\n\tfunction posix_geteuid() {\n\t\treturn false;\n\t}\n\tfunction posix_getpwnam() {\n\n\t}\n}\n\n//------------------------------------------------------------------------------\n/**\n * Checks if the User Agent String identifies the browser as Internet Explorer\n *\n * @return boolean\n */\nfunction ext_isWindows() {\n\tif(empty($GLOBALS['isWindows'])) {\n\t\t$GLOBALS['isWindows'] = substr(PHP_OS, 0, 3) == 'WIN';\n\t}\n\treturn $GLOBALS['isWindows'];\n}\n/**\n * Returns the valid directory separator for this OS & Webserver combination\n *\n * @return string\n */\nfunction ext_getSeparator() {\n\tif( defined( 'DIRECTORY_SEPARATOR')) {\n\t\treturn DIRECTORY_SEPARATOR;\n\t}\n\telseif (@preg_match('/Microsoft|WebSTAR|Xitami/', $_SERVER['SERVER_SOFTWARE']) ) {\n\t\treturn '\\\\';\n\t} else {\n\t\treturn '/';\n\t}\n}\n/**\n * Checks if the User Agent String identifies the browser as Internet Explorer\n *\n * @return boolean\n */\nfunction ext_isIE() {\n\treturn (preg_match('/MSIE ([0-9]\\.[0-9]{1,2})/', $_SERVER['HTTP_USER_AGENT']));\n}\n\n/**\n * Prints an HTML dropdown box named $name using $arr to\n * load the drop down.\tIf $value is in $arr, then $value\n * will be the selected option in the dropdown.\n * @author gday\n * @author soeren\n * \n * @param string $name The name of the select element\n * @param string $value The pre-selected value\n * @param array $arr The array containting $key and $val\n * @param int $size The size of the select element\n * @param string $multiple use \"multiple=\\\"multiple\\\" to have a multiple choice select list\n * @param string $extra More attributes when needed\n * @return string HTML drop-down list\n */\nfunction ext_selectList($name, $selectedkey, $arr, $size=1, $multiple=\"\", $extra=\"\") {\n\t$html = '';\n\tif( !empty( $arr ) ) {\n\t\t$html = \"<select class=\\\"inputbox\\\" name=\\\"$name\\\" id=\\\"$name\\\" size=\\\"$size\\\" $multiple $extra>\\n\";\n\n\t\tforeach($arr as $key => $value) {\n\t\t\t$selected = \"\";\n\t\t\tif( is_array( $selectedkey )) {\n\t\t\t    if( in_array( $key, $selectedkey )) {\n\t\t\t\t\t$selected = \"selected=\\\"selected\\\"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t    if(strtolower($selectedkey) == strtolower($key) ) {\n\t\t\t\t\t$selected = \"selected=\\\"selected\\\"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( $value == '-') {\n\t\t\t\t//$selected .= ' disabled=\"disabled\"';\n\t\t\t    $value = '- - - - -';\n\t\t\t}\n\t\t\t$html .= \"<option value=\\\"$key\\\" $selected>$value\";\n\t\t\t$html .= \"</option>\\n\";\n\t\t}\n\n\t\t$html .= \"</select>\\n\";\n\t}\n\treturn $html;\n}\nfunction ext_scriptTag( $src = '', $script = '') {\n\tif( $src!='') {\n\t\treturn '<script type=\"text/javascript\" src=\"'.$src.'\"></script>';\n\t}\n\tif( $script != '') {\n\t\treturn '<script type=\"text/javascript\">'.$script.'</script>';\n\t}\n}\nfunction ext_alertBox( $msg ) {\n\treturn ext_scriptTag('', 'Ext.Msg.alert( \\''.$GLOBALS[\"error_msg\"]['message'].'\\', \\''. @mysql_escape_string( $msg ) .'\\' );' );\n}\nfunction ext_successBox( $msg ) {\n\treturn ext_scriptTag('', 'Ext.msgBoxSlider.msg( \\''.ext_Lang::msg('success', true ).'\\', \\''. @mysql_escape_string( $msg ) .'\\' );' );\n}\nfunction ext_docLocation( $url ) {\n\treturn ext_scriptTag('', 'document.location=\\''. $url .'\\';' );\n}\nfunction ext_isXHR() {\n\treturn strtolower(extGetParam($_SERVER,'HTTP_X_REQUESTED_WITH')) == 'xmlhttprequest'\n\t\t|| strtolower(extGetParam($_POST,'requestType')) == 'xmlhttprequest';\n}\nfunction ext_exit() {\n\tglobal $mainframe;\n\tif( class_exists( 'jfactory' )) {\n\t\t$app = jfactory::getApplication();\n\t\t$app->close();\n\t}\n\tif( is_callable( array( $mainframe, 'close' ) ) ) {\n\t\t$mainframe->close();\n\t} else {\n\t\tsession_write_close();\n\t\texit;\n\t}\n}\nfunction ext_isJoomla( $version='', $operator='=', $compare_minor_versions=true) {\n\t$this_version = '';\n\tif( !empty($GLOBALS['_VERSION']) && is_object($GLOBALS['_VERSION'])) {\n\t\t$jversion =& $GLOBALS['_VERSION'];\n\t\t$this_version = $jversion->RELEASE .'.'. $jversion->DEV_LEVEL;\n\t}\n\telseif ( class_exists('JVersion') ) {\n\t\t$jversion = new JVersion();\n\t\t$this_version = $jversion->RELEASE .'.'. $jversion->DEV_LEVEL;\n\t} else {\n\t\treturn false;\n\t}\n\tif( empty( $version ) ) {\n\t\treturn !empty($this_version);\n\t}\n\t$allowed_operators = array( '<', 'lt', '<=', 'le', '>', 'gt', '>=', 'ge', '==', '=', 'eq', '!=', '<>', 'ne' );\n\n\tif( $compare_minor_versions ) {\n\t\t$this_version = $jversion->RELEASE;\n\t}\n\tif( in_array($operator, $allowed_operators )) {\n\t\n\t\treturn version_compare( $this_version, $version, $operator );\n\t}\n\treturn false;\n}\n/**\n * Raise the memory limit when it is lower than the needed value\n *\n * @param string $setLimit Example: 16M\n */\nfunction ext_RaiseMemoryLimit( $setLimit ) {\n\n\t$memLimit = @ini_get('memory_limit');\n\n\tif( stristr( $memLimit, 'k') ) {\n\t\t$memLimit = str_replace( 'k', '', str_replace( 'K', '', $memLimit )) * 1024;\n\t}\n\telseif( stristr( $memLimit, 'm') ) {\n\t\t$memLimit = str_replace( 'm', '', str_replace( 'M', '', $memLimit )) * 1024 * 1024;\n\t}\n\n\tif( stristr( $setLimit, 'k') ) {\n\t\t$setLimitB = str_replace( 'k', '', str_replace( 'K', '', $setLimit )) * 1024;\n\t}\n\telseif( stristr( $setLimit, 'm') ) {\n\t\t$setLimitB = str_replace( 'm', '', str_replace( 'M', '', $setLimit )) * 1024 * 1024;\n\t}\n\n\tif( $memLimit < $setLimitB ) {\n\t\t@ini_set('memory_limit', $setLimit );\n\t}\n}\n/**\n * Reads a file and sends them in chunks to the browser\n * This should overcome memory problems\n * http://www.php.net/manual/en/function.readfile.php#54295\n *\n * @since 1.4.1\n * @param string $filename\n * @param boolean $retbytes\n * @return mixed\n */\nfunction readFileChunked($filename,$retbytes=true) {\n\t$chunksize = 1*(1024*1024); // how many bytes per chunk\n\t$buffer = '';\n\t$cnt =0;\n\t// $handle = fopen($filename, 'rb');\n\t$handle = fopen($filename, 'rb');\n\tif ($handle === false) {\n\t\treturn false;\n\t}\n\twhile (!feof($handle)) {\n\t\t$buffer = fread($handle, $chunksize);\n\t\techo $buffer;\n\t\tsleep(1);\n\t\tob_flush();\n\t\tflush();\n\t\tif ($retbytes) {\n\t\t\t$cnt += strlen($buffer);\n\t\t}\n\t}\n\t$status = fclose($handle);\n\tif ($retbytes && $status) {\n\t\treturn $cnt; // return num. bytes delivered like readfile() does.\n\t}\n\treturn $status;\n}\n//implements file_put_contents function for compatability with PHP < 4.3\nif ( ! function_exists('file_put_contents') ) {\n\tfunction file_put_contents ( $filename, $filecont ){\n\t\t$handle = fopen( $filename, 'w' );\n\t\tif ( is_array($filecont) ) {\n\t\t\t$size = 0;\n\t\t\tforeach ( $filecont as $filestring ) {\n\t\t\t\tfwrite( $handle, $filestring );\n\t\t\t\t$size += strlen( $filestring );\n\t\t\t}\n\t\t\tfclose($handle);\n\t\t\treturn $size;\n\t\t} else {\n\t\t\tfwrite( $handle, $filecont );\n\t\t\tfclose($handle);\n\t\t\treturn strlen( $filecont );\n\t\t}\n\t}\n}\nif ( ! function_exists('scandir') ) {\nfunction scandir($dir,$listDirectories=false, $skipDots=true) {\n\t$dirArray = array();\n\tif ($handle = opendir($dir)) {\n\t\twhile (false !== ($file = readdir($handle))) {\n\t\t\tif (($file != \".\" && $file != \"..\") || $skipDots == true) {\n\t\t\t\tif($listDirectories == false) { if(@is_dir($file)) { continue; } }\n\t\t\t\tarray_push($dirArray,basename($file));\n\t\t\t}\n\t\t}\n\t\tclosedir($handle);\n\t}\n\treturn $dirArray;\n}\n}\n\n/**\n * Page generation time\n * @package Joomla\n */\nclass extProfiler {\n\t/** @var int Start time stamp */\n\tvar $start=0;\n\t/** @var string A prefix for mark messages */\n\tvar $prefix='';\n\n\t/**\n\t* Constructor\n\t* @param string A prefix for mark messages\n\t*/\n\tfunction __construct( $prefix='' ) {\n\t\t$this->start = $this->getmicrotime();\n\t\t$this->prefix = $prefix;\n\t}\n\n\t/**\n\t* @return string A format message of the elapsed time\n\t*/\n\tfunction mark( $label ) {\n\t\treturn sprintf ( \"\\n<div class=\\\"profiler\\\">$this->prefix %.3f $label</div>\", $this->getmicrotime() - $this->start );\n\t}\n\n\t/**\n\t* @return float The current time in milliseconds\n\t*/\n\tfunction getmicrotime(){\n\t\tlist($usec, $sec) = explode(\" \",microtime());\n\t\treturn ((float)$usec + (float)$sec);\n\t}\n}\n/**\n* Utility class for all HTML drawing classes\n* @package eXtplorer\n*/\nclass extHTML {\n    static function loadExtJS() {\n\t\t$scripts[] = array('dir' => 'scripts/editarea/', 'file' => 'edit_area_full_with_plugins.js');\n\t\t$scripts[] = array('dir' => 'scripts/extjs3/adapter/ext/', 'file' => 'ext-base.js');\n\t\t$scripts[] = array('dir' => 'scripts/extjs3/', 'file' => 'ext-all.js');\n\t\t$scripts[] = array('dir' => 'scripts/extjs3-ext/ux.ondemandload/', 'file' => 'scriptloader.js');\n\t\t$scripts[] = array('dir' => 'scripts/extjs3-ext/ux.editareaadapater/', 'file' => 'ext-editarea-adapter.js');\n\t\t$scripts[] = array('dir' => 'scripts/extjs3-ext/ux.statusbar/', 'file' => 'ext-statusbar.js');\n\t\t$scripts[] = array('dir' => 'scripts/extjs3-ext/ux.fileuploadfield/', 'file' => 'ext-fileUploadField.js');\n\t\t$scripts[] = array('dir' => 'scripts/extjs3-ext/ux.locationbar/', 'file' => 'Ext.ux.LocationBar.js');\n\t\t\n\t\t$styles[] = array('dir' => 'scripts/extjs3/resources/css/', 'file' => 'ext-all.css');\n\t\t$styles[] = array('dir' => 'scripts/extjs3-ext/ux.locationbar/', 'file' => 'LocationBar.css');\n\t\t$styles[] = array('dir' => 'scripts/extjs3-ext/ux.fileuploadfield/', 'file' => 'fileuploadfield.css');\n\t\t$scriptTag = '';\n\t\tif( !empty($_GET['nofetchscript']) || !empty( $_COOKIE['nofetchscript'])) {\n\t\t\tforeach( $scripts as $script ) {\n\t\t\t\t$scriptTag .= '<script type=\"text/javascript\" src=\"'.$script['dir'].$script['file'].'\"></script>';\n\t\t\t}\n\t\t\tforeach( $styles as $style ) {\n\t\t\t\t$scriptTag .= '<link type=\"text/css\" href=\"'.$style['dir'].$style['file'].'\" rel=\"stylesheet\" />';\n\t\t\t}\t\t\t\n\t\t} else {\n\t\t\t$scriptTag = '\n\t\t<script type=\"text/javascript\" src=\"'. _EXT_URL . '/fetchscript.php?'\n\t\t\t.'&amp;subdir[]=scripts/editarea/&amp;file[]=edit_area_full_with_plugins.js'\n\t\t\t.'&amp;subdir[]=scripts/extjs3/adapter/ext/&amp;file[]=ext-base.js'\n\t\t\t.'&amp;subdir[]=scripts/extjs3/&amp;file[]=ext-all.js'\n\t\t\t.'&amp;subdir[]=scripts/extjs3-ext/ux.ondemandload/&amp;file[]=scriptloader.js'\n\t\t\t.'&amp;subdir[]=scripts/extjs3-ext/ux.editareaadapater/&amp;file[]=ext-editarea-adapter.js'\n\t\t\t.'&amp;subdir[]=scripts/extjs3-ext/ux.statusbar/&amp;file[]=ext-statusbar.js'\n\t\t\t.'&amp;subdir[]=scripts/extjs3-ext/ux.fileuploadfield/&amp;file[]=ext-fileUploadField.js'\n\t\t\t.'&amp;subdir[]=scripts/extjs3-ext/ux.locationbar/&amp;file[]=Ext.ux.LocationBar.js'\n\t\t\t.'&amp;gzip=1\"></script>';\n\t\t\t$scriptTag .= '\n\t\t<link rel=\"stylesheet\" href=\"'. _EXT_URL . '/fetchscript.php?'\n\t\t\t.'subdir[]=scripts/extjs3/resources/css/&amp;file[]=ext-all.css'\n\t\t\t.'&amp;subdir[]=scripts/extjs3-ext/ux.locationbar/&amp;file[]=LocationBar.css'\n\t\t\t.'&amp;subdir[]=scripts/extjs3-ext/ux.fileuploadfield/&amp;file[]=fileuploadfield.css'\n\t\t\t.'&amp;gzip=1\" />';\n\t\t}\n\t\t$scriptTag .= '\n\t\t<script type=\"text/javascript\" src=\"'. $GLOBALS['script_name'].'?option=com_extplorer&amp;action=include_javascript&amp;file=functions.js\"></script>\n\t\t<script type=\"text/javascript\" >editAreaLoader.baseURL = \"'. _EXT_URL .'/scripts/editarea/\";</script>';\n\n\t\n\t\tif (defined('EXT_STANDALONE')) {\n\t\t\t$GLOBALS['mainframe']->addcustomheadtag($scriptTag);\n\t\t} else {\n\t\t\techo $scriptTag;\n\t\t}\n\t}\n\n    static function makeOption( $value, $text='', $value_name='value', $text_name='text' ) {\n\t\t$obj = new stdClass;\n\t\t$obj->$value_name = $value;\n\t\t$obj->$text_name = trim( $text ) ? $text : $value;\n\t\treturn $obj;\n\t}\n\n    static function writableCell( $folder, $relative=1, $text='', $visible=1 ) {\n\t$writeable \t\t= '<b><font color=\"green\">Writeable</font></b>';\n\t$unwriteable \t= '<b><font color=\"red\">Unwriteable</font></b>';\n\n  \techo '<tr>';\n  \techo '<td class=\"item\">';\n\techo $text;\n\tif ( $visible ) {\n\t\techo $folder . '/';\n\t}\n\techo '</td>';\n  \techo '<td align=\"left\">';\n\tif ( $relative ) {\n\t\techo is_writable( \"../$folder\" ) \t? $writeable : $unwriteable;\n\t} else {\n\t\techo is_writable( \"$folder\" ) \t\t? $writeable : $unwriteable;\n\t}\n\techo '</td>';\n  \techo '</tr>';\n  }\n\n\t/**\n\t* Generates an HTML select list\n\t* @param array An array of objects\n\t* @param string The value of the HTML name attribute\n\t* @param string Additional HTML attributes for the <select> tag\n\t* @param string The name of the object variable for the option value\n\t* @param string The name of the object variable for the option text\n\t* @param mixed The key that is selected\n\t* @returns string HTML for the select list\n\t*/\n    static function selectList( &$arr, $tag_name, $tag_attribs, $key, $text, $selected=NULL ) {\n\t\t// check if array\n\t\tif ( is_array( $arr ) ) {\n\t\t\treset( $arr );\n\t\t}\n\n\t\t$html \t= \"\\n<select name=\\\"$tag_name\\\" $tag_attribs>\";\n\t\t$count \t= count( $arr );\n\n\t\tfor ($i=0, $n=$count; $i < $n; $i++ ) {\n\t\t\t$k = $arr[$i]->$key;\n\t\t\t$t = $arr[$i]->$text;\n\t\t\t$id = ( isset($arr[$i]->id) ? @$arr[$i]->id : null);\n\n\t\t\t$extra = '';\n\t\t\t$extra .= $id ? \" id=\\\"\" . $arr[$i]->id . \"\\\"\" : '';\n\t\t\tif (is_array( $selected )) {\n\t\t\t\tforeach ($selected as $obj) {\n\t\t\t\t\t$k2 = $obj->$key;\n\t\t\t\t\tif ($k == $k2) {\n\t\t\t\t\t\t$extra .= \" selected=\\\"selected\\\"\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$extra .= ($k == $selected ? \" selected=\\\"selected\\\"\" : '');\n\t\t\t}\n\t\t\t$html .= \"\\n\\t<option value=\\\"\".$k.\"\\\"$extra>\" . $t . \"</option>\";\n\t\t}\n\t\t$html .= \"\\n</select>\\n\";\n\n\t\treturn $html;\n\t}\n\n\t/**\n\t* Writes a select list of integers\n\t* @param int The start integer\n\t* @param int The end integer\n\t* @param int The increment\n\t* @param string The value of the HTML name attribute\n\t* @param string Additional HTML attributes for the <select> tag\n\t* @param mixed The key that is selected\n\t* @param string The printf format to be applied to the number\n\t* @returns string HTML for the select list\n\t*/\n    static function integerSelectList( $start, $end, $inc, $tag_name, $tag_attribs, $selected, $format=\"\" ) {\n\t\t$start \t= intval( $start );\n\t\t$end \t= intval( $end );\n\t\t$inc \t= intval( $inc );\n\t\t$arr \t= array();\n\n\t\tfor ($i=$start; $i <= $end; $i+=$inc) {\n\t\t\t$fi = $format ? sprintf( \"$format\", $i ) : \"$i\";\n\t\t\t$arr[] = extHTML::makeOption( $fi, $fi );\n\t\t}\n\n\t\treturn extHTML::selectList( $arr, $tag_name, $tag_attribs, 'value', 'text', $selected );\n\t}\n\n\t/**\n\t* Writes a select list of month names based on Language settings\n\t* @param string The value of the HTML name attribute\n\t* @param string Additional HTML attributes for the <select> tag\n\t* @param mixed The key that is selected\n\t* @returns string HTML for the select list values\n\t*/\n    static function monthSelectList( $tag_name, $tag_attribs, $selected ) {\n\t\t$arr = array(\n\t\t\textHTML::makeOption( '01', _JAN ),\n\t\t\textHTML::makeOption( '02', _FEB ),\n\t\t\textHTML::makeOption( '03', _MAR ),\n\t\t\textHTML::makeOption( '04', _APR ),\n\t\t\textHTML::makeOption( '05', _MAY ),\n\t\t\textHTML::makeOption( '06', _JUN ),\n\t\t\textHTML::makeOption( '07', _JUL ),\n\t\t\textHTML::makeOption( '08', _AUG ),\n\t\t\textHTML::makeOption( '09', _SEP ),\n\t\t\textHTML::makeOption( '10', _OCT ),\n\t\t\textHTML::makeOption( '11', _NOV ),\n\t\t\textHTML::makeOption( '12', _DEC )\n\t\t);\n\n\t\treturn extHTML::selectList( $arr, $tag_name, $tag_attribs, 'value', 'text', $selected );\n\t}\n\n\t/**\n\t* Writes a yes/no select list\n\t* @param string The value of the HTML name attribute\n\t* @param string Additional HTML attributes for the <select> tag\n\t* @param mixed The key that is selected\n\t* @returns string HTML for the select list values\n\t*/\n    static function yesnoSelectList( $tag_name, $tag_attribs, $selected, $yes=_CMN_YES, $no=_CMN_NO ) {\n\t\t$arr = array(\n\t\textHTML::makeOption( '0', $no ),\n\t\textHTML::makeOption( '1', $yes ),\n\t\t);\n\n\t\treturn extHTML::selectList( $arr, $tag_name, $tag_attribs, 'value', 'text', $selected );\n\t}\n\n\t/**\n\t* Generates an HTML radio list\n\t* @param array An array of objects\n\t* @param string The value of the HTML name attribute\n\t* @param string Additional HTML attributes for the <select> tag\n\t* @param mixed The key that is selected\n\t* @param string The name of the object variable for the option value\n\t* @param string The name of the object variable for the option text\n\t* @returns string HTML for the select list\n\t*/\n    static function radioList( &$arr, $tag_name, $tag_attribs, $selected=null, $key='value', $text='text' ) {\n\t\treset( $arr );\n\t\t$html = \"\";\n\t\tfor ($i=0, $n=count( $arr ); $i < $n; $i++ ) {\n\t\t\t$k = $arr[$i]->$key;\n\t\t\t$t = $arr[$i]->$text;\n\t\t\t$id = ( isset($arr[$i]->id) ? @$arr[$i]->id : null);\n\n\t\t\t$extra = '';\n\t\t\t$extra .= $id ? \" id=\\\"\" . $arr[$i]->id . \"\\\"\" : '';\n\t\t\tif (is_array( $selected )) {\n\t\t\t\tforeach ($selected as $obj) {\n\t\t\t\t\t$k2 = $obj->$key;\n\t\t\t\t\tif ($k == $k2) {\n\t\t\t\t\t\t$extra .= \" selected=\\\"selected\\\"\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$extra .= ($k == $selected ? \" checked=\\\"checked\\\"\" : '');\n\t\t\t}\n\t\t\t$html .= \"\\n\\t<input type=\\\"radio\\\" name=\\\"$tag_name\\\" id=\\\"$tag_name$k\\\" value=\\\"\".$k.\"\\\"$extra $tag_attribs />\";\n\t\t\t$html .= \"\\n\\t<label for=\\\"$tag_name$k\\\">$t</label>\";\n\t\t}\n\t\t$html .= \"\\n\";\n\n\t\treturn $html;\n\t}\n\n\t/**\n\t* Writes a yes/no radio list\n\t* @param string The value of the HTML name attribute\n\t* @param string Additional HTML attributes for the <select> tag\n\t* @param mixed The key that is selected\n\t* @returns string HTML for the radio list\n\t*/\n    static function yesnoRadioList( $tag_name, $tag_attribs, $selected, $yes=_CMN_YES, $no=_CMN_NO ) {\n\t\t$arr = array(\n\t\t\textHTML::makeOption( '0', $no ),\n\t\t\textHTML::makeOption( '1', $yes )\n\t\t);\n\n\t\treturn extHTML::radioList( $arr, $tag_name, $tag_attribs, $selected );\n\t}\n\n\t/**\n\t* Cleans text of all formating and scripting code\n\t*/\n    static function cleanText ( &$text ) {\n\t\t$text = preg_replace( \"'<script[^>]*>.*?</script>'si\", '', $text );\n\t\t$text = preg_replace( '/<a\\s+.*?href=\"([^\"]+)\"[^>]*>([^<]+)<\\/a>/is', '\\2 (\\1)', $text );\n\t\t$text = preg_replace( '/<!--.+?-->/', '', $text );\n\t\t$text = preg_replace( '/{.+?}/', '', $text );\n\t\t$text = preg_replace( '/&nbsp;/', ' ', $text );\n\t\t$text = preg_replace( '/&amp;/', ' ', $text );\n\t\t$text = preg_replace( '/&quot;/', ' ', $text );\n\t\t$text = strip_tags( $text );\n\t\t$text = htmlspecialchars( $text );\n\n\t\treturn $text;\n\t}\n}\n/**\n * Utility function to return a value from a named array or a specified default\n * @param array A named array\n * @param string The key to search for\n * @param mixed The default value to give if no key found\n * @param int An options mask: _MOS_NOTRIM prevents trim, _MOS_ALLOWHTML allows safe html, _MOS_ALLOWRAW allows raw input\n */\ndefine( \"_ext_NOTRIM\", 0x0001 );\ndefine( \"_ext_ALLOWHTML\", 0x0002 );\ndefine( \"_ext_ALLOWRAW\", 0x0004 );\nfunction extGetParam( &$arr, $name, $def=null, $mask=0 ) {\n\tstatic $noHtmlFilter \t= null;\n\tstatic $safeHtmlFilter \t= null;\n\n\t$return = null;\n\tif (isset( $arr[$name] )) {\n\t\t$return = $arr[$name];\n\n\t\tif (is_string( $return )) {\n\t\t\t// trim data\n\t\t\tif (!($mask&_ext_NOTRIM)) {\n\t\t\t\t$return = trim( $return );\n\t\t\t}\n\n\t\t\tif ($mask&_ext_ALLOWRAW) {\n\t\t\t\t// do nothing\n\t\t\t} else if ($mask&_ext_ALLOWHTML) {\n\t\t\t\t// do nothing - compatibility mode\n\t\t\t} else {\n\t\t\t\t// send to inputfilter\n\t\t\t\tif (is_null( $noHtmlFilter )) {\n\t\t\t\t\t$noHtmlFilter = new InputFilter( /* $tags, $attr, $tag_method, $attr_method, $xss_auto */ );\n\t\t\t\t}\n\n                $return = $noHtmlFilter->sanitize( array($return) );\n                $return = $return[0];\n\n\t\t\t\tif (empty($return) && is_numeric($def)) {\n\t\t\t\t// if value is defined and default value is numeric set variable type to integer\n\t\t\t\t\t$return = intval($return);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// account for magic quotes setting\n\t\t\tif (!get_magic_quotes_gpc()) {\n\t\t\t\t$return = stripslashes( $return );\n\t\t\t}\n\t\t}\n\n\t\treturn $return;\n\t} else {\n\t\treturn $def;\n\t}\n}\n\n/**\n * Strip slashes from strings or arrays of strings\n * @param mixed The input string or array\n * @return mixed String or array stripped of slashes\n */\nfunction extStripslashes( &$value ) {\n\t$ret = '';\n\tif (is_string( $value )) {\n\t\t$ret = stripslashes( $value );\n\t} else {\n\t\tif (is_array( $value )) {\n\t\t\t$ret = array();\n\t\t\tforeach ($value as $key => $val) {\n\t\t\t\t$ret[$key] = extStripslashes( $val );\n\t\t\t}\n\t\t} else {\n\t\t\t$ret = $value;\n\t\t}\n\t}\n\treturn $ret;\n}\n/**\n * Recursively creates a new directory\n *\n * @param unknown_type $path\n * @param unknown_type $rights\n * @return unknown\n */\nfunction extMkdirR($path, $rights = 0777) {\n\n\t$folder_path = array(\n\tstrstr($path, '.') ? dirname($path) : $path);\n\n\twhile(!@is_dir(dirname(end($folder_path)))\n\t\t&& dirname(end($folder_path)) != '/'\n\t\t&& dirname(end($folder_path)) != '.'\n\t\t&& dirname(end($folder_path)) != '') {\n\t\tarray_push($folder_path, dirname(end($folder_path)));\n\t}\n\n\twhile($parent_folder_path = array_pop($folder_path)) {\n\t\t@mkdir($parent_folder_path, $rights);\n\t}\n\t@mkdir( $path );\n\treturn is_dir( $path );\n}\n/**\n* Utility function to read the files in a directory\n* @param string The file system path\n* @param string A filter for the names\n* @param boolean Recurse search into sub-directories\n* @param boolean True if to prepend the full path to the file name\n*/\nfunction extReadDirectory( $path, $filter='.', $recurse=false, $fullpath=false\t) {\n\t$arr = array();\n\tif (!@is_dir( $path )) {\n\t\treturn $arr;\n\t}\n\t$handle = opendir( $path );\n\n\twhile ($file = readdir($handle)) {\n\t\tif( is_array( $file )) $file = $file['name'];\n\t\t$dir = extPathName( $path.'/'.$file, false );\n\t\t$isDir = @is_dir( $dir );\n\t\tif (($file != \".\") && ($file != \"..\")) {\n\t\t\tif (preg_match( \"/$filter/\", $file )) {\n\t\t\t\tif ($fullpath) {\n\t\t\t\t\t$arr[] = trim( extPathName( $path.'/'.$file, false ) );\n\t\t\t\t} else {\n\t\t\t\t\t$arr[] = trim( $file );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($recurse && $isDir) {\n\t\t\t\t$arr2 = extReadDirectory( $dir, $filter, $recurse, $fullpath );\n\t\t\t\t$arr = array_merge( $arr, $arr2 );\n\t\t\t}\n\t\t}\n\t}\n\tclosedir($handle);\n\tasort($arr);\n\treturn $arr;\n}\n/**\n* Function to strip additional / or \\ in a path name\n* @param string The path\n* @param boolean Add trailing slash\n*/\nfunction extPathName($p_path,$p_addtrailingslash = false) {\n\t$retval = \"\";\n\n\t$isWin = (substr(PHP_OS, 0, 3) == 'WIN');\n\n\tif ($isWin)\t{\n\t\t$retval = str_replace( '/', '\\\\', $p_path );\n\t\tif ($p_addtrailingslash) {\n\t\t\tif (substr( $retval, -1 ) != '\\\\') {\n\t\t\t\t$retval .= '\\\\';\n\t\t\t}\n\t\t}\n\n\t\t// Check if UNC path\n\t\t$unc = substr($retval,0,2) == '\\\\\\\\' ? 1 : 0;\n\n\t\t// Remove double \\\\\n\t\t$retval = str_replace( '\\\\\\\\', '\\\\', $retval );\n\n\t\t// If UNC path, we have to add one \\ in front or everything breaks!\n\t\tif ( $unc == 1 ) {\n\t\t\t$retval = '\\\\'.$retval;\n\t\t}\n\t} else {\n\t\t$retval = str_replace( '\\\\', '/', $p_path );\n\t\tif ($p_addtrailingslash) {\n\t\t\tif (substr( $retval, -1 ) != '/') {\n\t\t\t\t$retval .= '/';\n\t\t\t}\n\t\t}\n\n\t\t// Check if UNC path\n\t\t$unc = substr($retval,0,2) == '//' ? 1 : 0;\n\n\t\t// Remove double //\n\t\t$retval = str_replace('//','/',$retval);\n\n\t\t// If UNC path, we have to add one / in front or everything breaks!\n\t\tif ( $unc == 1 ) {\n\t\t\t$retval = '/'.$retval;\n\t\t}\n\t}\n\n\treturn $retval;\n}\n/**\n* Utility function redirect the browser location to another url\n*\n* Can optionally provide a message.\n* @param string The file system path\n* @param string A filter for the names\n*/\nfunction extRedirect( $url, $msg='' ) {\n\n   global $mainframe;\n\n\t// specific filters\n\t$iFilter = new InputFilter();\n\t$url = $iFilter->process( $url );\n\tif (!empty($msg)) {\n\t\t$msg = $iFilter->process( $msg );\n\t}\n\n\tif ($iFilter->badAttributeValue( array( 'href', $url ))) {\n\t\t$url = $GLOBALS['home_dir'];\n\t}\n\n\tif (trim( $msg )) {\n\t\tif (strpos( $url, '?' )) {\n\t\t\t$url .= '&extmsg=' . urlencode( $msg );\n\t\t} else {\n\t\t\t$url .= '?extmsg=' . urlencode( $msg );\n\t\t}\n\t}\n\n\tif (headers_sent()) {\n\t\techo \"<script>document.location.href='$url';</script>\\n\";\n\t} else {\n\t\t@ob_end_clean(); // clear output buffer\n\t\theader( 'HTTP/1.1 301 Moved Permanently' );\n\t\theader( \"Location: \". $url );\n\t}\n\texit();\n}\n/**\n* Random password generator\n* @return password\n*/\nfunction extMakePassword($length=8) {\n\t$salt \t\t= \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n\t$makepass\t= '';\n\tmt_srand(10000000*(double)microtime());\n\tfor ($i = 0; $i < $length; $i++)\n\t\t$makepass .= $salt[mt_rand(0,61)];\n\treturn $makepass;\n}\n/**\n * Wrapper Function to encode passwords (maybe sometimes we don't use md5 anymore?)\n *\n * @param string $pass\n * @return string\n */\nfunction extEncodePassword( $pass ) {\n\trequire_once( _EXT_PATH.'/libraries/PasswordHash.php');\n\t$hasher = new PasswordHash(8, FALSE);\n\t$hash = $hasher->HashPassword($pass);\n\treturn $hash;\n}\n\nif (!function_exists('html_entity_decode')) {\n\t/**\n\t* html_entity_decode function for backward compatability in PHP\n\t* @param string\n\t* @param string\n\t*/\n\tfunction html_entity_decode ($string, $opt = ENT_COMPAT) {\n\n\t\t$trans_tbl = get_html_translation_table (HTML_ENTITIES);\n\t\t$trans_tbl = array_flip ($trans_tbl);\n\n\t\tif ($opt & 1) { // Translating single quotes\n\t\t\t// Add single quote to translation table;\n\t\t\t// doesn't appear to be there by default\n\t\t\t$trans_tbl[\"&apos;\"] = \"'\";\n\t\t}\n\n\t\tif (!($opt & 2)) { // Not translating double quotes\n\t\t\t// Remove double quote from translation table\n\t\t\tunset($trans_tbl[\"&quot;\"]);\n\t\t}\n\n\t\treturn strtr ($string, $trans_tbl);\n\t}\n}\n//------------------------------------------------------------------------------\nfunction logout() {\n\tsession_destroy();\n\tsession_write_close();\n\theader(\"Location: \".$GLOBALS[\"script_name\"]);\n}\n//------------------------------------------------------------------------------\n/**\n * Returns an IP- and BrowserID- based Session ID\n *\n * @param string $id\n * @return string\n */\nfunction generate_session_id( $id=null ) {\n\treturn extMakePassword( 32 );\n}\nfunction ext_getToken() {\n    return md5(session_id());\n}\nfunction ext_checkToken($token) {\n    return md5(session_id()) == $token;\n}", "<?php\n// ensure this file is being included by a parent file\nif (!defined('_JEXEC') && !defined('_VALID_MOS')) die('Restricted access');\n/**\n * @version $Id: init.php 238 2014-11-08 21:26:18Z soeren $\n * @package eXtplorer\n * @copyright soeren 2007-2011\n * @author The eXtplorer project (http://extplorer.net)\n * @author The\tThe QuiX project (http://quixplorer.sourceforge.net)\n * \n * @license\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n * \n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n * \n * Alternatively, the contents of this file may be used under the terms\n * of the GNU General Public License Version 2 or later (the \"GPL\"), in\n * which case the provisions of the GPL are applicable instead of\n * those above. If you wish to allow use of your version of this file only\n * under the terms of the GPL and not to allow others to use\n * your version of this file under the MPL, indicate your decision by\n * deleting  the provisions above and replace  them with the notice and\n * other provisions required by the GPL.  If you do not delete\n * the provisions above, a recipient may use your version of this file\n * under either the MPL or the GPL.\"\n * \n * This file initializes most of the variables and constants we need in eXtplorer\n */\n if (isset ($_SERVER['ORIG_PATH_INFO']) && $_SERVER['ORIG_PATH_INFO'] != $_SERVER['PHP_SELF']) {\n    $_SERVER['PATH_INFO'] = $_SERVER['ORIG_PATH_INFO'];\n}\n\n// Security measure, to avoid XSS exploit.\nif (!empty ($_SERVER['PATH_INFO']) && strrpos ($_SERVER['PHP_SELF'], $_SERVER['PATH_INFO'])) {\n    $_SERVER['PHP_SELF'] = substr ($_SERVER['PHP_SELF'], 0, -(strlen ($_SERVER['PATH_INFO'])));\n}\n// Vars\nif (isset($_SERVER)) {\n\t$GLOBALS['__GET']\t= &$_GET;\n\t$GLOBALS['__POST']\t= &$_POST;\n\t$GLOBALS['__SERVER'] = &$_SERVER;\n\t$GLOBALS['__FILES']  = &$_FILES;\n} elseif (isset($HTTP_SERVER_VARS)) {\n\t$GLOBALS['__GET']\t= &$HTTP_GET_VARS;\n\t$GLOBALS['__POST']\t= &$HTTP_POST_VARS;\n\t$GLOBALS['__SERVER'] = &$HTTP_SERVER_VARS;\n\t$GLOBALS['__FILES']  = &$HTTP_POST_FILES;\n} else {\n\tdie(\"<strong>ERROR: Your PHP version is too old</strong><br/>\".\n\t\"You need at least PHP 5.0 to run eXtplorer; preferably PHP 5.2 or higher.\");\n}\nif( !empty( $_GET['nofetchscript'])) {\n\t$_COOKIE['nofetchscript'] = 1;\n}\n//------------------------------------------------------------------------------\n\t// if gzcompress is available, we can use Zip, Tar and TGz\n\tif ( extension_loaded(\"zlib\")) {\n\t\t$GLOBALS[\"zip\"] = $GLOBALS[\"tgz\"] = true;\n\t}\n\telse {\n\t\t$GLOBALS[\"zip\"] = $GLOBALS[\"tgz\"] = false;\n\t}\n\n// the filename of the eXtplorer script: (you rarely need to change this)\n$GLOBALS[\"script_name\"] = \"//\"  . $GLOBALS['__SERVER']['HTTP_HOST'] . $GLOBALS['__SERVER'][\"PHP_SELF\"];\n$GLOBALS['home_url']\t= \"//\"  . $GLOBALS['__SERVER']['HTTP_HOST'] . dirname($GLOBALS['__SERVER'][\"PHP_SELF\"]);\n\n$GLOBALS['home_url'] = str_replace( '/administrator', '', $GLOBALS['home_url'] );\n$GLOBALS['home_dir'] = !empty( $_SERVER['DOCUMENT_ROOT'] ) ? $_SERVER['DOCUMENT_ROOT'] : '.';\n\n// Important Definitions!\ndefine (\"_EXT_PATH\",\t\trealpath(dirname( __FILE__ ) . '/..'));\ndefine (\"_EXT_FTPTMP_PATH\", realpath(dirname( __FILE__ ) . '/../ftp_tmp'));\n\nif (function_exists( 'mosGetParam') || class_exists( 'jconfig')) {\n\tdefine (\"_EXT_URL\", $GLOBALS['home_url'].\"/administrator/components/com_extplorer\");\n} else {\n\tdefine (\"_EXT_URL\", dirname($GLOBALS['script_name']));\n}\n\nrequire_once(_EXT_PATH . '/application.php');\nrequire_once(_EXT_PATH . '/include/functions.php');\n\n// check if we need login\n\tif ( !ext_isjoomla() ) {\n\t\t// login to use eXtplorer: (true/false)\n\t\t$GLOBALS[\"require_login\"] = true;\n\t} else {\n\t\t$GLOBALS[\"require_login\"] = false;\n\t}\n\nif (!class_exists('InputFilter')) {\n\trequire_once( _EXT_PATH . '/libraries/inputfilter.php' );\n}\nrequire_once(_EXT_PATH . \"/config/conf.php\");\n\n$GLOBALS[\"separator\"] = ext_getSeparator();\n\n$action \t\t\t= stripslashes(extGetParam( $_REQUEST, \"action\" ));\n$default_lang\t\t= !empty( $GLOBALS['mosConfig_lang'] ) ? $GLOBALS['mosConfig_lang'] : ext_Lang::detect_lang();\nif( !@is_object( $mainframe )) {\n\t$mainframe = JFactory::getApplication('administrator');\n}\n$GLOBALS[\"language\"] = basename($mainframe->getUserStateFromRequest( 'language', 'lang', $default_lang ));\n\n// Get Item\nif (isset($_REQUEST[\"item\"])) {\n  $GLOBALS[\"item\"]=$item = stripslashes(rawurldecode($_REQUEST[\"item\"]));\n} else {\n  $GLOBALS[\"item\"]=$item =\"\";\n}\n\nif (!empty( $GLOBALS['__POST'][\"selitems\"] )) {\n\t// Arrayfi the string 'selitems' if necessary\n\tif (!is_array( $GLOBALS['__POST'][\"selitems\"])) {\n\t\t$GLOBALS['__POST'][\"selitems\"] = array($GLOBALS['__POST'][\"selitems\"]);\n\t}\n\n\tforeach($GLOBALS['__POST'][\"selitems\"] as $i => $myItem) {\n\t\t$GLOBALS['__POST'][\"selitems\"][$i] = urldecode($myItem);\n\t}\n}\n\n// Get Sort\n$GLOBALS[\"order\"]\t= extGetParam( $_REQUEST, 'order', 'name');\n// Get Sortorder\n$GLOBALS[\"direction\"] = extGetParam( $_REQUEST, 'direction', 'ASC');\n$GLOBALS[\"start\"]\t= extGetParam( $_REQUEST, 'start', 0);\n$GLOBALS[\"limit\"]\t= extGetParam( $_REQUEST, 'limit', 50);\n\n//------------------------------------------------------------------------------\n\n/** @var $GLOBALS['file_mode'] Can be 'file' or 'ftp' */\nif (!isset($_REQUEST['file_mode']) && !empty($_SESSION['file_mode'])) {\n\t$GLOBALS['file_mode'] = extGetParam($_SESSION, 'file_mode', $GLOBALS['ext_conf']['authentication_method_default']);\n} else {\n\tif (@$_REQUEST['file_mode'] != @$_SESSION['file_mode'] && in_array($_REQUEST['file_mode'], $GLOBALS['ext_conf']['authentication_methods_allowed'])) {\n\t\tif ($action != 'login' && empty($_SESSION['credentials_'.extGetParam($_REQUEST, 'file_mode')])) {\n\t\t\textRedirect(ext_make_link( 'login','',null,null,null,null,'&type='.urlencode(extGetParam($_REQUEST, 'file_mode'))));\n\t\t} else {\n\t\t\t$GLOBALS['file_mode'] = $_SESSION['file_mode'] = extGetParam($_REQUEST, 'file_mode', $GLOBALS['ext_conf']['authentication_method_default']);\n\t\t}\n\t} elseif (isset($_REQUEST['file_mode'])) {\n\t\t$GLOBALS['file_mode'] = $_SESSION['file_mode'] = extGetParam($_REQUEST, 'file_mode', $GLOBALS['ext_conf']['authentication_method_default']);\n\t} else {\n\t\t$GLOBALS['file_mode'] = extGetParam($_SESSION, 'file_mode', $GLOBALS['ext_conf']['authentication_method_default']);\n\t}\n}\n\n// Necessary files\nrequire_once(_EXT_PATH.\"/languages/english.php\");\nif (file_exists(_EXT_PATH.\"/languages/\".$GLOBALS[\"language\"].\".php\")) {\n\trequire_once(_EXT_PATH.\"/languages/\".$GLOBALS[\"language\"].\".php\" );\n}\n\nrequire_once(_EXT_PATH . \"/languages/english_mimes.php\");\nif ( file_exists(_EXT_PATH . \"/languages/\" . $GLOBALS[\"language\"].\"_mimes.php\")) {\n\trequire_once(_EXT_PATH . \"/languages/\" . $GLOBALS[\"language\"].\"_mimes.php\");\n}\n\nrequire_once(_EXT_PATH . \"/config/mimes.php\");\nrequire_once(_EXT_PATH . '/libraries/JSON.php');\nrequire_once(_EXT_PATH . \"/libraries/Text/TextEncoding.php\");\nrequire_once(_EXT_PATH . \"/libraries/File_Operations.php\");\nrequire_once(_EXT_PATH . \"/include/header.php\");\nrequire_once(_EXT_PATH . \"/include/result.class.php\");\n\nif( $action == 'include_javascript' ) {\n  \twhile (@ob_end_clean());\n\tob_start();\n  \theader(\"Content-Type: text/javascript; charset=\".strtolower($GLOBALS[\"charset\"]));\n  \t$script_js_php = _EXT_PATH.'/scripts/'.basename(extGetParam($_REQUEST, 'file' )).'.php';\n  \tif( file_exists( $script_js_php ) ) include( $script_js_php );\n  \text_exit();\n}\n//------------------------------------------------------------------------------\n\n// Raise Memory Limit\next_RaiseMemoryLimit( '8M' );\n\n$GLOBALS['ext_File'] = new ext_File();\n\n\n//------------------------------------------------------------------------------\nif ($GLOBALS[\"require_login\"]) {\t// LOGIN\n\n\trequire(_EXT_PATH.\"/include/login.php\");\n\n\tif ($GLOBALS[\"action\"]==\"logout\") {\n\t\t$auth->onLogout();\n\t} else {\n\t\tif ($GLOBALS[\"action\"]==\"login\") {\n\t\t\t$GLOBALS[\"dir\"] = $dir = extGetParam( $_SESSION,'ext_'.$GLOBALS['file_mode'].'dir', '' );\n\t\t}\n\t\tlogin();\n\t\tif ($GLOBALS[\"action\"]==\"login\" || empty($_SESSION['credentials_'.$authentication_type]['username'])) {\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nif (ext_isWindows()) {\n\tif ( strstr($GLOBALS['home_dir'], ':')) {\n\t\t$GLOBALS['home_dir'][0] = strtoupper($GLOBALS['home_dir'][0]);\n\t}\n}\n\n//------------------------------------------------------------------------------\nif ( !isset( $_REQUEST['dir'] ) ) {\n\n\t$GLOBALS[\"dir\"] = $dir = extGetParam( $_SESSION,'ext_'.$GLOBALS['file_mode'].'dir', '' );\n\tif (!empty($dir)) {\n\t\t$dir = @$dir[0] == '/' ? substr( $dir, 1 ) : $dir;\n\t}\n\tif( @$GLOBALS[\"action\"]!=\"login\") {\n\t\t$try_this = ext_isFTPMode() ? '/'.$dir : $GLOBALS['home_dir'].'/'.$dir;\n\t\tif (!empty($dir) && !$GLOBALS['ext_File']->file_exists($try_this)) {\n\t\t\t$dir = '';\n\t\t}\n\t}\n} else {\n\t$GLOBALS[\"dir\"] = $dir = urldecode(stripslashes(extGetParam($_REQUEST, \"dir\")));\n}\n\nif ($dir == 'ext_root') {\n\t$GLOBALS[\"dir\"] = $dir = '';\n}\n\nif (ext_isFTPMode() && $dir != '') {\n\t$GLOBALS['FTPCONNECTION']->cd( $dir );\n}\n\n//echo \"Down home: \".down_home( \"/etc/passwd\" );exit;\n$abs_dir=get_abs_dir($GLOBALS[\"dir\"]);\n\nif (!file_exists($GLOBALS[\"home_dir\"])) {\n  if (!file_exists($GLOBALS[\"home_dir\"].$GLOBALS[\"separator\"])) {\n\tif ($GLOBALS[\"require_login\"]) {\n\t\t$extra = \"<a href=\\\"\" . ext_make_link(\"logout\",NULL,NULL) . \"\\\">\" . $GLOBALS[\"messages\"][\"btnlogout\"] . \"</a>\";\n\t} else {\n\t\t$extra = NULL;\n\t}\n\t//ext_Result::sendResult('', false, $GLOBALS[\"error_msg\"][\"home\"].\" (\".$GLOBALS[\"home_dir\"].\")\",$extra);\n  }\n}\n\nif (!$GLOBALS['ext_conf']['symlink_allow_abovehome']) {\n\tif (!down_home($abs_dir)) {\n\t\text_Result::sendResult('', false, $GLOBALS[\"dir\"].\" : \".$GLOBALS[\"error_msg\"][\"abovehome\"]);\n\t\t$dir = '';\n\t}\n}\n\nif (!get_is_dir(utf8_decode($abs_dir)) && !get_is_dir($abs_dir.$GLOBALS[\"separator\"])) {\n\text_Result::sendResult('', false, '\"'.htmlspecialchars($abs_dir,ENT_QUOTES).'\" - '.$GLOBALS[\"error_msg\"][\"direxist\"]);\n\t$dir = '';\n}\n\n$_SESSION['ext_'.$GLOBALS['file_mode'].'dir'] = $dir;\n//------------------------------------------------------------------------------\n", "<?php\n// ensure this file is being included by a parent file\nif( !defined( '_JEXEC' ) && !defined( '_VALID_MOS' ) ) die( 'Restricted access' );\n/**\n * @version $Id: mkitem.php 248 2016-02-26 18:29:50Z soeren $\n * @package eXtplorer\n * @copyright soeren 2007-2015\n * @author The eXtplorer project (http://extplorer.net)\n * @author The\tThe QuiX project (http://quixplorer.sourceforge.net)\n * \n * @license\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n * \n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n * \n * Alternatively, the contents of this file may be used under the terms\n * of the GNU General Public License Version 2 or later (the \"GPL\"), in\n * which case the provisions of the GPL are applicable instead of\n * those above. If you wish to allow use of your version of this file only\n * under the terms of the GPL and not to allow others to use\n * your version of this file under the MPL, indicate your decision by\n * deleting  the provisions above and replace  them with the notice and\n * other provisions required by the GPL.  If you do not delete\n * the provisions above, a recipient may use your version of this file\n * under either the MPL or the GPL.\"\n * \n */\n/**\n * Allows to create dirs, files and symlinks on a server\n *\n */\nclass ext_Mkitem extends ext_Action {\n\n\tfunction execAction($dir, $item=\"\") {\t\t// make new directory or file\n\t\tif(($GLOBALS[\"permissions\"]&01)!=01) ext_Result::sendResult( 'mkitem', false, $GLOBALS[\"error_msg\"][\"accessfunc\"]);\n\n\t\tif( extGetParam($_POST,'confirm') == 'true') {\n            // CSRF Security Check\n            if( !ext_checkToken($GLOBALS['__POST'][\"token\"]) ) {\n                ext_Result::sendResult('tokencheck', false, 'Request failed: Security Token not valid.');\n            }\n\t\t\t$mkname=$GLOBALS['__POST'][\"mkname\"];\n\t\t\t$mktype=$GLOBALS['__POST'][\"mktype\"];\n\t\t\t$symlink_target = $GLOBALS['__POST']['symlink_target'];\n\n\t\t\t$mkname=basename(stripslashes($mkname));\n\t\t\tif($mkname==\"\") ext_Result::sendResult( 'mkitem', false,  $GLOBALS[\"error_msg\"][\"miscnoname\"] );\n\n\t\t\t$new = get_abs_item($dir,$mkname);\n\n\t\t\tif(@$GLOBALS['ext_File']->file_exists($new)) {\n\t\t\t\text_Result::sendResult( 'mkitem', false, $mkname.\": \".$GLOBALS[\"error_msg\"][\"itemdoesexist\"]);\n\t\t\t}\n\t\t\t$err = print_r( $_POST, true );\n\t\t\tif($mktype==\"dir\") {\n\t\t\t\t$ok=@$GLOBALS['ext_File']->mkdir($new, 0777);\n\t\t\t\t$err=$GLOBALS[\"error_msg\"][\"createdir\"];\n\t\t\t} elseif( $mktype == 'file') {\n\t\t\t\t$ok=@$GLOBALS['ext_File']->mkfile($new);\n\t\t\t\t$err=$GLOBALS[\"error_msg\"][\"createfile\"];\n\t\t\t} elseif( $mktype == 'symlink' ) {\n\t\t\t\tif( empty( $symlink_target )) {\n\t\t\t\t\text_Result::sendResult( 'mkitem', false, 'Please provide a valid <strong>target</strong> for the symbolic link.');\n\t\t\t\t}\n\t\t\t\tif (!down_home(dirname($symlink_target))) {\n\t\t\t\t    ext_Result::sendResult('', false, $symlink_target.\": \".$GLOBALS[\"error_msg\"][\"abovehome\"]);\n\t\t\t\t}\n\t\t\t\tif( !file_exists($symlink_target) || !is_readable($symlink_target)) {\n\t\t\t\t\text_Result::sendResult( 'mkitem', false, 'The file you wanted to make a symbolic link to does not exist or is not accessible by PHP.');\n\t\t\t\t}\n\t\t\t\t$ok = symlink( $symlink_target, $new );\n\t\t\t\t$err = 'The symbolic link could not be created.';\n\t\t\t}\n\n\t\t\tif($ok==false || PEAR::isError( $ok )) {\n\t\t\t\tif( PEAR::isError( $ok ) ) $err.= $ok->getMessage();\n\t\t\t\text_Result::sendResult( 'mkitem', false, $err);\n\t\t\t}\n\t\t\text_Result::sendResult( 'mkitem', true, 'The item '.$new.' was created' );\n\n\t\t\treturn;\n\t\t}\n\t?>\n\t\t{\n\t\t\"xtype\": \"form\",\n\t\t\"id\": \"simpleform\",\n\t\t\"labelWidth\": 125,\n\t\t\"url\":\"<?php echo basename( $GLOBALS['script_name']) ?>\",\n\t\t\"dialogtitle\": \"Create New File/Directory\",\n\t\t\"frame\": true,\n\t\t\"items\": [{\n\t\t\t\"xtype\": \"textfield\",\n\t\t\t\"fieldLabel\": \"<?php echo ext_Lang::msg( \"nameheader\", true ) ?>\",\n\t\t\t\"name\": \"mkname\",\n\t\t\t\"width\":175,\n\t\t\t\"allowBlank\":false\n\t\t\t},{\n\t\t\t\"xtype\": \"combo\",\n\t\t\t\"fieldLabel\": \"Type\",\n\t\t\t\"store\": [[\"file\", \"<?php echo ext_Lang::mime( 'file', true ) ?>\"],\n\t\t\t\t\t\t[\"dir\", \"<?php echo ext_Lang::mime( 'dir', true ) ?>\"]\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif( !ext_isFTPMode() && !$GLOBALS['isWindows']) { ?>\n\t\t\t\t\t\t,[\"symlink\", \"<?php echo ext_Lang::mime( 'symlink', true ) ?>\"]\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t} ?>\n\t\t\t\t\t],\n\t\t\tdisplayField:\"type\",\n\t\t\tvalueField: \"mktype\",\n\t\t\tvalue: \"file\",\n\t\t\thiddenName: \"mktype\",\n\t\t\tdisableKeyFilter: true,\n\t\t\teditable: false,\n\t\t\ttriggerAction: \"all\",\n\t\t\tmode: \"local\",\n\t\t\tallowBlank: false,\n\t\t\tselectOnFocus:true\n\t\t},{\n\t\t\t\"xtype\": \"textfield\",\n\t\t\t\"fieldLabel\": \"<?php echo ext_Lang::msg( 'symlink_target', true ) ?>\",\n\t\t\t\"name\": \"symlink_target\",\n\t\t\t\"width\":175,\n\t\t\t\"allowBlank\":true\n\t\t}],\n\t\t\"buttons\": [{\n\t\t\t\"text\": \"<?php echo ext_Lang::msg( 'btncreate', true ) ?>\", \n\t\t\t\"handler\": function() {\n\t\t\t\tstatusBarMessage( \"Please wait...\", true );\n\t\t\t\tExt.getCmp(\"simpleform\").getForm().submit({\n\t\t\t\t\t//reset: true,\n\t\t\t\t\treset: false,\n\t\t\t\t\tsuccess: function(form, action) {\n\t\t\t\t\t\tstatusBarMessage( action.result.message, false, true );\n\t\t\t\t\t\ttry{ \n\t\t\t\t\t\t\tdirTree.getSelectionModel().getSelectedNode().reload(); \n\t\t\t\t\t\t} catch(e) {}\n\t\t\t\t\t\tdatastore.reload();\n\t\t\t\t\t\tExt.getCmp(\"dialog\").destroy();\n\t\t\t\t\t},\n\t\t\t\t\tfailure: function(form, action) {\n\t\t\t\t\t\tif( !action.result ) return;\n\t\t\t\t\t\tExt.Msg.alert(\"Error!\", action.result.error);\n\t\t\t\t\t\tstatusBarMessage( action.result.error, false, false );\n\t\t\t\t\t},\n\t\t\t\t\tscope: Ext.getCmp(\"simpleform\"),\n\t\t\t\t\t// add some vars to the request, similar to hidden fields\n\t\t\t\t\tparams: {option: \"com_extplorer\", \n\t\t\t\t\t\t\taction: \"mkitem\", \n\t\t\t\t\t\t\tdir: datastore.directory, \n\t\t\t\t\t\t\tconfirm: \"true\",\n\t\t\t\t\t\t\ttoken: \"<?php echo ext_getToken() ?>\"\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t},{\n\t\t\t\"text\": \"<?php echo ext_Lang::msg( 'btncancel', true ) ?>\", \n\t\t\t\"handler\": function() { Ext.getCmp(\"dialog\").destroy(); }\n\t\t}]\n\t}\n\t<?php\n\t}\n}\n\n//------------------------------------------------------------------------------\n", "<?php\n// ensure this file is being included by a parent file\nif( !defined( '_JEXEC' ) && !defined( '_VALID_MOS' ) ) die( 'Restricted access' );\n/**\n * @version $Id: result.class.php 232 2014-02-13 20:08:10Z soeren $\n * @package eXtplorer\n * @copyright soeren 2007-2010\n * @author The eXtplorer project (http://extplorer.net)\n * \n * @license\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n * \n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n * \n * Alternatively, the contents of this file may be used under the terms\n * of the GNU General Public License Version 2 or later (the \"GPL\"), in\n * which case the provisions of the GPL are applicable instead of\n * those above. If you wish to allow use of your version of this file only\n * under the terms of the GPL and not to allow others to use\n * your version of this file under the MPL, indicate your decision by\n * deleting  the provisions above and replace  them with the notice and\n * other provisions required by the GPL.  If you do not delete\n * the provisions above, a recipient may use your version of this file\n * under either the MPL or the GPL.\"\n * \n */\n\n/**\n * Allows to handle errors and send results in JSON format\n *\n */\nclass ext_Result {\n    static function init() {\n\t\text_Result::empty_errors();\n\t\text_Result::empty_messages();\n\t}\n    static function add_message($message, $type='general') {\n\t\t$_SESSION['ext_message'][$type][] = $message;\n\t}\n    static function empty_messages() {\n\t\t$_SESSION['ext_message'] = array();\n\t}\n    static function count_messages() {\n\n\t\tif( empty($_SESSION['ext_message'])) {\n\t\t\treturn 0;\n\t\t}\n\t\t$count = 0;\n\t\tforeach( $_SESSION['ext_message'] as $type ) {\n\t\t\tif( !empty( $type ) && is_array( $type )) {\n\t\t\t\t$count += sizeof( $type );\n\t\t\t}\n\t\t}\n\t\treturn $count;\n\t}\n    static function add_error($error, $type='general') {\n\t\t$_SESSION['ext_error'][$type][] = $error;\n\t}\n    static function empty_errors() {\n\t\t$_SESSION['ext_error'] = array();\n\t}\n    static function count_errors() {\n\t\tif( empty($_SESSION['ext_error'])) {\n\t\t\treturn 0;\n\t\t}\n\t\t$count = 0;\n\t\tforeach( @$_SESSION['ext_error'] as $type ) {\n\t\t\tif( !empty( $type ) && is_array( $type )) {\n\t\t\t\t$count += sizeof( $type );\n\t\t\t}\n\t\t}\n\t\treturn $count;\n\t}\n\tstatic function sendResult( $action, $success, $msg,$extra=array() ) {\t\t// show error-message\n\t\t\n\t\tif( ext_isXHR() ) {\n\t\t\t\n\t\t\t$success = (bool)$success;\n\t\t\tif( $success && ext_Result::count_errors() > 0 ) {\n\t\t\t\t$success = false;\n\t\t\t\tforeach( @$_SESSION['ext_error'] as $type ) {\n\t\t\t\t\tif( is_array( $type )) {\n\t\t\t\t\t\tforeach( $type as $error ) {\n\t\t\t\t\t\t\t$msg .= '<br />'.$error;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$result = array('action' => $action,\n\t\t\t\t\t\t\t'message' => str_replace(\"'\", \"\\\\'\", $msg ),\n\t\t\t\t\t\t\t'error' => str_replace(\"'\", \"\\\\'\", $msg ),//.print_r($_POST,true),\n\t\t\t\t\t\t\t'success' => $success \n\t\t\t\t\t\t);\n\t\t\tforeach( $extra as $key => $value ) {\n\t\t\t\t$result[$key] = $value;\n\t\t\t}\n\t\t\t$classname = class_exists('ext_Json') ? 'ext_Json' : 'Services_JSON';\n\t\t\t$json = new $classname();\n\t\t\t$jresult = $json->encode($result);\n\t\t\tif(strtolower(extGetParam($_POST,'requestType')) == 'xmlhttprequest') {\n\t\t\t\theader(\"Content-type: text/html\");\n\t\t\t}\n\t\t\tprint $jresult;\n\t\t\text_exit();\n\t\t}\n\t\t$messagetxt = '';\n\t\tif($extra != NULL) {\n\t\t\t$msg .= \" - \".$extra;\n\t\t}\n\t\tif( $msg != '' ) {\n\t\t\text_Result::add_error( $msg );\n\t\t}\n\n\t\tif( ext_Result::count_messages() < 1 && ext_Result::count_errors() < 1 ) {\n\t\t\treturn;\n\t\t}\n\t\t\t\n\t\t\tif( ext_Result::count_messages() > 0 ) {\n\t\t\t\t$messagetxt .= '<h3>'.$GLOBALS[\"error_msg\"][\"message\"].':</h3>';\n\n\t\t\t\tforeach ( $_SESSION['ext_message'] as $msgtype ) {\n\t\t\t\t\tforeach ( $msgtype as $message ) {\n\t\t\t\t\t    $messagetxt .= htmlspecialchars($message, ENT_QUOTES ) .'<br/>';\n\t\t\t\t\t}\n\t\t\t\t\t$messagetxt .= '<br /><hr /><br />';\n\t\t\t\t}\n\t\t\t\text_Result::empty_messages();\n\n\t\t\t\tif( !empty( $_REQUEST['extra'])) {\n\t\t\t\t\t$messagetxt .= ' - '.htmlspecialchars(urldecode($_REQUEST['extra']), ENT_QUOTES );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\tif( !empty( $_SESSION['ext_error'])) {\n\t\t\t\t$messagetxt .= '<h3>'.$GLOBALS[\"error_msg\"][\"error\"].':</h3>';\n\n\t\t\t\tforeach ( $_SESSION['ext_error'] as $errortype ) {\n\t\t\t\t\tforeach ( $errortype as $error ) {\n\t\t\t\t\t    $messagetxt .=  htmlspecialchars($error, ENT_QUOTES ) .'<br/>';\n\t\t\t\t\t}\n\t\t\t\t\t$messagetxt .= '<br /><hr /><br />';\n\t\t\t\t}\n\t\t\t\text_Result::empty_errors();\n\t\t\t}\n\t\t\t\n\t\t\tif( !empty( $_REQUEST['extra'])) {\n\t\t\t\t$messagetxt .= \" - \".htmlspecialchars(urldecode($_REQUEST['extra']), ENT_QUOTES );\n\t\t\t}\n\t\t\textHTML::loadExtJS();\n\t\t\tshow_header();\n\t\t\tdefined('EXPLORER_NOEXEC') or define('EXPLORER_NOEXEC', 1 );\n\t\t\t\n\t\t\techo ext_scriptTag('', 'Ext.Msg.alert(\\'Status\\', \\''.$messagetxt . '\\')' );\n\t\t//}\n\t\t$GLOBALS['action'] = 'show_error';\n\t}\n}\n//------------------------------------------------------------------------------\n", "<?php\n// ensure this file is being included by a parent file\nif( !defined( '_JEXEC' ) && !defined( '_VALID_MOS' ) ) die( 'Restricted access' );\n/**\n * @version $Id: search.php 237 2014-04-25 11:47:48Z soeren $\n * @package eXtplorer\n * @copyright soeren 2007-2014\n * @author The eXtplorer project (http://extplorer.net)\n * @author The\tThe QuiX project (http://quixplorer.sourceforge.net)\n *\n * @license\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n *\n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n *\n * Alternatively, the contents of this file may be used under the terms\n * of the GNU General Public License Version 2 or later (the \"GPL\"), in\n * which case the provisions of the GPL are applicable instead of\n * those above. If you wish to allow use of your version of this file only\n * under the terms of the GPL and not to allow others to use\n * your version of this file under the MPL, indicate your decision by\n * deleting  the provisions above and replace  them with the notice and\n * other provisions required by the GPL.  If you do not delete\n * the provisions above, a recipient may use your version of this file\n * under either the MPL or the GPL.\"\n *\n * File-Search Functions\n */\nfunction ext_search_items($dir)\n{ // search for item\n    if (empty($dir) && !empty($GLOBALS['__POST'][\"item\"])) {\n        $dir = $GLOBALS['__POST'][\"item\"];\n    }\n    if (isset($GLOBALS['__POST'][\"searchitem\"])) {\n\n        $searchitem = stripslashes($GLOBALS['__POST'][\"searchitem\"]);\n        $subdir = !empty($GLOBALS['__POST'][\"subdir\"]);\n        $content = $GLOBALS['__POST'][\"content\"];\n        $list = make_list($dir, $searchitem, $subdir, $content);\n    } else {\n        $searchitem = NULL;\n        $subdir = true;\n    }\n\n    if (empty($searchitem)) {\n        show_searchform($dir);\n        return;\n    }\n\n    // Results in JSON\n    $items['totalCount'] = count($list);\n    $result = get_result_array($list);\n    $start = (int)$GLOBALS['__POST'][\"start\"];\n    $limit = (int)$GLOBALS['__POST'][\"limit\"];\n\n    if ($start < $items['totalCount'] && $limit < $items['totalCount']) {\n        $result = array_splice($result, $start, $limit);\n    }\n\n    $items['items'] = $result;\n    $json = new ext_Json();\n\n    while (@ob_end_clean()) ;\n\n    echo $json->encode($items);\n\n}\n\n//------------------------------------------------------------------------------\nfunction make_list($dir, $item, $subdir, $content)\n{ // make list of found items\n\n    // search\n    if (ext_isFTPMode()) {\n        find_item_ftp($dir, $item, $list, $subdir, $content);\n    } else {\n        find_item($dir, $item, $list, $subdir, $content);\n    }\n    if (is_array($list)) sort($list);\n    return $list;\n}\n\nfunction find_item_ftp($dir,$item,&$list,$recur, $content) {\t// find items\n\t$homedir = realpath($GLOBALS['home_dir']);\n    $opendir = $dir;\n\t// convert shell-wildcards to PCRE Regex Syntax\n\t$pat=str_replace(\"?\",\".\",str_replace(\"*\",\".*\",str_replace(\".\",\"\\\\.\",$item)));\n\t\n    if( !is_dir( $dir )) {\n        $opendir = get_abs_dir($dir);\n    }\n\t$handle = @$GLOBALS['ext_File']->opendir( $opendir );\n\n\tif($handle===false && $dir==\"\") {\n\t\t$handle = @$GLOBALS['ext_File']->opendir($homedir . $GLOBALS['separator']);\n\t}\n\n\tif($handle===false) {\n\t\text_Result::sendResult('search', false, $opendir .\": \".$GLOBALS[\"error_msg\"][\"opendir\"]);\n\t}\n\n\twhile(($new_item=$GLOBALS['ext_File']->readdir($handle))!==false) {\n\t\tif( is_array( $new_item ))\t{\n\t\t\t$abs_new_item = $new_item;\n\t\t} else {\n\t\t\t$abs_new_item = get_abs_item($dir, $new_item);\n\t\t}\n\n\t\t//if(!$GLOBALS['ext_File']->file_exists($abs_new_item)) continue;\n\n\t\tif(!get_show_item($dir, $new_item)) continue;\n\n\t\t$isDir = get_is_dir($abs_new_item);\n\t\t// match?\n\t\t$include = false;\n\t\tif(@preg_match('@'.$pat.'@is',$new_item) > 0 ) {\n\t\t    $include = true;\n\t\t}\n\t\tif (!$isDir && $include && \n\t\t\t$content && \n\t\t\t$GLOBALS['ext_File']->filesize($abs_new_item) < 524288) {\n\n\t\t    $data = $GLOBALS['ext_File']->file_get_contents( $abs_new_item );\n            $pattern = preg_quote($content, '/');\n            // finalise the regular expression, matching the whole line\n            $pattern = \"/^.*$pattern.*\\$/m\";\n    \t\tif (preg_match('@'. $pattern.'@is', $data) > 0 ) {\n\t    \t    $include = true;\n\t\t    }\n\t\t    \n\t\t}\n        if( $include ) {\n            $list[]=array($dir,$new_item);\n        }\n\t\t// search sub-directories\n\t\tif($isDir && $recur) {\n\t\t\tfind_item($abs_new_item,$pat,$list,$recur, $content);\n\t\t}\n\t}\n\n\t$GLOBALS['ext_File']->closedir($handle);\n}\nfunction find_item($dir,$pat,&$files,$subdir, $content) {\n    if (!is_dir($dir)) {\n        $dir = get_abs_dir($dir);\n    }\n\tif( !$subdir ) {\n\t\t$files = glob($dir.'/'.$pat);\n\t} else {\n        $files = glob_recursive($dir.'/'.$pat);\n\t}\n\n\tif($files===false) {\n\t\text_Result::sendResult('search', false, $dir .\": \".$GLOBALS[\"error_msg\"][\"opendir\"]);\n\t}\n\tif( $content ) {\n\t\t$newList = array();\n\t\tforeach( $files as $file ) {\n            $contents = file_get_contents($file);\n\t\t\t$pattern = preg_quote($content, '/');\n\t\t\t// finalise the regular expression, matching the whole line\n\t\t\t$pattern = \"/^.*$pattern.*\\$/m\";\n\t\t\t// search, and store all matching occurences in $matches\n\t\t\tif(preg_match_all($pattern, $contents, $matches)){\n\t\t\t\t$newList[] = $file;\n\t\t\t}\n\t\t}\n\t\t$files = $newList;\n\t}\n\tif( !empty( $_POST['mdate_start'] )) {\n        $mdate_start = strtotime($_POST['mdate_start']);\n\t\tif( empty($_POST['mdate_end'] )) {\n\t\t\t$mdate_end = time();\n\t\t} else {\n\t\t\t$mdate_end = strtotime( $_POST['mdate_end'] );\n\t\t}\n\t\tif( $mdate_start  && $mdate_end ) {\n\t\t\t$newList = array();\n\t\t\tforeach( $files as $file ) {\n\t\t\t\t$filemtime = filemtime( $file );\n\t\t\t\tif( $filemtime > $mdate_start && $filemtime < $mdate_end ) {\n\t\t\t\t\t$newList[] = $file;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$files = $newList;\n\t\t}\n\t}\n\tif( !empty( $_POST['age_value'] )) {\n\t\t$age_value =(int)$_POST['age_value'];\n\t\t$age_units = array(\"minutes\", \"hours\", \"days\", \"weeks\", \"months\", \"years\");\n\t\tif (in_array($_POST['age_unit'], $age_units)) {\n\t\t\t$age_unit = $_POST['age_unit'];\n\t\t} else {\n\t\t\t$age_unit = \"days\";\n\t\t}\n\t\t$age_time = strtotime(\"-\".$age_value.\" \".$age_unit);\n\n\t\tif( $age_time ) {\n\t\t\t$newList = array();\n\t\t\tforeach( $files as $file ) {\n\t\t\t\t$filemtime = filemtime( $file );\n\t\t\t\tif( $filemtime > $age_time ) {\n\t\t\t\t\t$newList[] = $file;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$files = $newList;\n\t\t}\n\t}\n    $newList = array();\n    foreach( $files as $file ) {\n        $newList[] = array(dirname($file),basename($file));\n    }\n    $files  = $newList;\n}\n\n\n\nfunction get_result_array($list) {\t\t\t// print table of found items\n\tif(!is_array($list)) return;\n\n\t$cnt = count($list);\n\t$array = array();\n\tfor($i=0;$i<$cnt;++$i) {\n\t\t$dir = $list[$i][0];\t$item = $list[$i][1];\n\t\t$s_dir=str_ireplace($GLOBALS['home_dir'], '', $dir );\n\t\tif(strlen($s_dir)>65) $s_dir=substr($s_dir,0,62).\"...\";\n\t\t$s_item=str_ireplace($GLOBALS['home_dir'], '', $item );\tif(strlen($s_item)>45) $s_item=substr($s_item,0,42).\"...\";\n\t\t$link = \"\";\t$target = \"\";\n\t\t\n\t\t\n\t\tif(get_is_dir($dir,$item)) {\n\t\t\t$img = \"dir.png\";\n\t\t\t$link = ext_make_link(\"list\",get_rel_item($dir, $item),NULL);\n\t\t} else {\n\t\t\t$img = get_mime_type( $item, \"img\");\n\t\t\t//if(get_is_editable($dir,$item) || get_is_image($dir,$item)) {\n\t\t\t$link = $GLOBALS[\"home_url\"].\"/\".get_rel_item($dir, $item);\n\t\t\t$target = \"_blank\";\n\t\t\t//}\n\t\t}\n\t\t$array[$i]['last_mtime'] = ext_isFTPMode() ? $GLOBALS['ext_File']->filemtime($GLOBALS['home_dir'].'/'.$dir.'/'.$item) : filemtime($dir.'/'.$item);\n\t\t$array[$i]['file_id'] = md5($s_dir.$s_item);\n\t\t$array[$i]['dir'] = str_ireplace($GLOBALS['home_dir'], '', $dir );\n\t\t$array[$i]['s_dir'] = empty($s_dir) ? '' : $s_dir;\n\t\t$array[$i]['file'] = htmlentities($s_item, ENT_QUOTES );\n\t\t$array[$i]['link'] = $link;\n\t\t$array[$i]['icon'] = _EXT_URL.\"/images/$img\";\n\t}\n\treturn $array;\n}\n\n/**\n * Recursive implementation of glob\n * @param $pattern\n * @param int $flags\n * @return array\n */\nfunction glob_recursive($pattern, $flags = 0)\n{\n    $files = glob($pattern, $flags);\n    if ($files === false) return array();\n    foreach (glob(dirname($pattern) . '/*', GLOB_ONLYDIR | GLOB_NOSORT) as $dir) {\n        $files = array_merge($files, glob_recursive($dir . '/' . basename($pattern), $flags));\n    }\n\n    return $files;\n}\n//------------------------------------------------------------------------------\n\nfunction show_searchform($dir='') {\n\t?>\n{\n     \"height\":400,\n     \"autoScroll\":true,\n\n     items: [\n        new Ext.TabPanel({\n        activeTab: 0,\n        items: [{\n            \"title\":\"<?php echo $GLOBALS[\"messages\"][\"searchlink\"] ?>\",\n            \"height\": \"370\",\n            \"autoScroll\":true,\n            \"items\":\n                new Ext.DataView({\n                \"id\": \"dataview\",\n                 tpl: new Ext.XTemplate(\n                    '<tpl for=\".\">',\n                    '<div class=\"search-item\">',\n                        '<h3>',\n                        '<a onclick=\"selectFile(\\'{dir}\\', \\'{file}\\');Ext.getCmp(\\'dialog\\').destroy();return false;\" href=\"#\" target=\"_blank\">{s_dir}/{file}, {lastModified:date(\"M j, Y\")}</a>',\n                        '</h3>',\n                    '</div></tpl>'\n                ),\n                 store: new Ext.data.Store({\n                        proxy: new Ext.data.HttpProxy({\n                            url: \"<?php echo $GLOBALS['script_name'] ?>\"\n                        }),\n                        reader: new Ext.data.JsonReader({\n                            root: 'items',\n                            totalProperty: 'totalCount',\n                            id: 'file_id'\n                        }, [\n                            {name: 'fileId', mapping: 'file_id'},\n                            {name: 'file', mapping: 'file'},\n                            {name: 'dir', mapping: 'dir'},\n                            {name: 's_dir', mapping: 's_dir'},\n                            {name: 'lastModified', mapping: 'last_mtime', type: 'date', dateFormat: 'timestamp'}\n                        ]),\n                        baseParams: {\n                            limit:20,\n                            option: \"com_extplorer\",\n                            action:\"search\",\n                            dir: \"<?php echo $dir ?>\",\n                            content: '0',\n                            subdir: '1'\n                        }\n                    }),\n                 itemSelector: 'div.search-item'\n            }),\n\n         tbar: [\n             'Search: ', ' ',\n             new Ext.app.SearchField({\n                 store: Ext.getCmp(\"dataview\").store,\n                 width:320,\n                value: \"*\"\n             })\n         ],\n\n         bbar: new Ext.PagingToolbar({\n             store: Ext.getCmp(\"dataview\").store,\n             pageSize: 20,\n             displayInfo: true,\n             displayMsg: 'Results {0} - {1} of {2}',\n             emptyMsg: \"No files to display\"\n         })\n    },\n    {\n        title: \"Search Options\",\n        xtype:\"form\",\n        layout: \"form\",\n        \"height\": \"350\",\n        items: [\n\n            {\n                id:'myGroup',\n                xtype: 'checkboxgroup',\n                fieldLabel: 'Extensive Search',\n                itemCls: 'x-check-group-alt',\n                // Put all controls in a single column with width 100%\n                columns: 1,\n                items: [\n                {\n                    boxLabel: 'Search within Subdirectories?', name: 'subdir',\n                    checked: true,\n                    tooltip: \"<?php echo ext_Lang::msg( 'miscsubdirs', true ) ?>?\",\n                    \"listeners\": {\n                        \"check\": {\n                            fn: function(box, checked) {\n                                Ext.getCmp(\"dataview\").store.baseParams.subdir = (checked ? '1' : '0');\n                            }\n                        }\n                    }\n                 }\n                ]\n            },{\n                fieldLabel: \"<?php echo ext_Lang::msg('misccontent', true) ?>\",\n                xtype: \"textfield\",\n                width: 200,\n                id: \"contentfield\",\n                name: \"content\",\n                \"listeners\": {\n                    \"change\": {\n                        fn: function(field, newValue) {\n                            Ext.getCmp(\"dataview\").store.baseParams.content = newValue;\n                        }\n                    }\n                }\n\n            },\n            {\n                xtype: \"compositefield\",\n                items: [\n                {\n                    xtype: \"checkbox\",\n                    fieldLabel: \"Modification Date between\",\n                    \"listeners\": {\n                    \"check\": {\n                        fn: function(box, checked) {\n                            if( checked ) {Ext.getCmp( \"mdate_start\" ).enable(); Ext.getCmp( \"mdate_end\" ).enable(); }\n                            else {\n\t\t\t\t\t\t\t\tExt.getCmp( \"mdate_start\" ).disable(); Ext.getCmp( \"mdate_end\" ).disable(); \t\n\t\t\t\t\t\t\t\tExt.getCmp(\"dataview\").store.baseParams.mdate_start = \"\";\n\t\t\t\t\t\t\t\tExt.getCmp(\"dataview\").store.baseParams.mdate_end = \"\";\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n                        }\n                    }\n                }\n                },\n                new Ext.form.DateField({\n                    tooltip: 'Start',\n                    name: 'mdate_start',\n                    id: 'mdate_start',\n                    \"listeners\": {\n                        \"change\": {\n                            fn: function(field, newValue) {\n                                Ext.getCmp(\"dataview\").store.baseParams.mdate_start = newValue;\n                            }\n                        }\n                    },\n                    width:90,\n                    disabled: true\n                }),\n                new Ext.form.DateField({\n                    tooltip: 'End',\n                    name: 'mdate_end',\n                    id: 'mdate_end',\n                    disabled: true,\n                    \"listeners\": {\n                        \"change\": {\n                            fn: function(field, newValue) {\n                                Ext.getCmp(\"dataview\").store.baseParams.mdate_end = newValue;\n                            }\n                        }\n                    },\n                    width:90\n                })\n\n                ]\n            },\n            {\n                xtype: \"compositefield\",\n                items: [\n                {\n                    xtype: \"checkbox\",\n                    name: \"age_enabled\",\n                    fieldLabel: \"max. File Age\",\n                    \"listeners\": {\n                        \"check\": {\n                            fn: function(box, checked) {\n                                if( checked ) {Ext.getCmp( \"age_unit\" ).enable(); Ext.getCmp( \"age_value\" ).enable(); }\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tExt.getCmp( \"age_value\" ).disable(); Ext.getCmp( \"age_unit\" ).disable(); \t\n\t\t\t\t\t\t\t\t\tExt.getCmp(\"dataview\").store.baseParams.age_value = \"\";\n\t\t\t\t\t\t\t\t\tExt.getCmp(\"dataview\").store.baseParams.age_unit = \"\";\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n                            }\n                        }\n                    }\n                },\n\t\t\t\t{\n\t\t\t\t\txtype: \"textfield\",\n\t\t\t\t\tname: \"age_value\",\n\t\t\t\t\tid: \"age_value\",\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\twidth: 40,\n                    \"listeners\": {\n                        \"change\": {\n                            fn: function(field, newValue) {\n                                Ext.getCmp(\"dataview\").store.baseParams.age_value = newValue;\n                            }\n                        }\n                    },\n\t\t\t\t\tdisabled: true\n\t\t\t\t},\n\t\t\t\t\tnew Ext.form.ComboBox({\n\t\t\t\t\t\ttriggerAction: 'all',\n\t\t\t\t\t\tlazyRender:true,\n\t\t\t\t\t\tmode: 'local',\n\t\t\t\t\t\tdisabled: true,\n\t\t\t\t\t\tname: \"age_unit\",\n\t\t\t\t\t\tid: \"age_unit\",\n\t\t\t\t\t\tvalue: \"days\",\n                        \"listeners\": {\n                            \"change\": {\n                                fn: function(field, newValue) {\n                                    Ext.getCmp(\"dataview\").store.baseParams.age_unit = newValue;\n                                }\n                            }\n                        },\n\t\t\t\t\t\tstore: new Ext.data.ArrayStore({\n\t\t\t\t\t\t\tid: 0,\n\t\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t\t'myId',\n\t\t\t\t\t\t\t\t'displayText'\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tdata: [[\"minute\", 'Minute(s)'], [\"hours\", 'Hour(s)'],\n\t\t\t\t\t\t\t\t[\"days\", \"Day(s)\"], [\"weeks\", \"Week(s)\"], [\"months\", \"Month(s)\"], [\"years\", \"Year(s)\" ]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tvalueField: 'myId',\n\t\t\t\t\t\tdisplayField: 'displayText'\n\t\t\t\t\t})\n                ]\n            }\n\n    ]\n    }]\n    })\n    ]\n}\n\n<?php \n\t\n}\n\n//------------------------------------------------------------------------------\n", "<?php\r\n\r\n// Turkish Language for eXtplorer v2.1.12 (Translated by Mehmet Ta\u015f)\r\nglobal $_VERSION;\r\n\r\n$GLOBALS[\"charset\"] = \"UTF-8\";\r\n$GLOBALS[\"text_dir\"] = \"ltr\"; // ('ltr' for left to right, 'rtl' for right to left)\r\n$GLOBALS[\"date_fmt\"] = \"Y/m/d H:i\";\r\n$GLOBALS[\"error_msg\"] = array(\r\n\t// error\r\n\t\"error\"\t\t\t=> \"Hata(lar)\",\r\n\t\"message\"\t\t=> \"Mesaj(lar)\",\r\n\t\"back\"\t\t\t=> \"Geri Al\",\r\n\t\r\n\t// root\r\n\t\"home\"\t\t\t=> \"Ana klas\u00f6r olu\u015fturulmam\u0131\u015f. Ayarlar\u0131n\u0131z\u0131 kontrol edin.\",\r\n\t\"abovehome\"\t\t=> \"Bu klas\u00f6r ana klas\u00f6r\u00fcn \u00fcst\u00fcnde olmamal\u0131d\u0131r.\",\r\n\t\"targetabovehome\"\t=> \"Hedef klas\u00f6r ana klas\u00f6r\u00fcn \u00fcst\u00fcnde olmamal\u0131d\u0131r.\",\r\n\t\r\n\t// exist\r\n\t\"direxist\"\t\t=> \"Bu klas\u00f6r olu\u015fturulamad\u0131.\",\r\n\t//\"filedoesexist\"\t=> \"Bu dosya zaten var.\",\r\n\t\"fileexist\"\t\t=> \"Bu dosya olu\u015fturulamad\u0131.\",\r\n\t\"itemdoesexist\"\t\t=> \"Bu \u00f6\u011fe zaten var.\",\r\n\t\"itemexist\"\t\t=> \"Bu \u00f6\u011fe mevcut de\u011fil.\",\r\n\t\"targetexist\"\t\t=> \"Hedef klas\u00f6r mevcut de\u011fil.\",\r\n\t\"targetdoesexist\"\t=> \"Hedef \u00f6\u011fe zaten mevcut.\",\r\n\t\r\n\t// open\r\n\t\"opendir\"\t\t=> \"Klas\u00f6r A\u00e7\u0131lamaz.\",\r\n\t\"readdir\"\t\t=> \"Klas\u00f6r Okunamaz.\",\r\n\t\r\n\t// access\r\n\t\"accessdir\"\t\t=> \"Bu klas\u00f6re ula\u015fmak i\u00e7in izinleriniz yetersiz.\",\r\n\t\"accessfile\"\t\t=> \"Bu dosyaya ula\u015fmak i\u00e7in izinleriniz yetersiz.\",\r\n\t\"accessitem\"\t\t=> \"Bu \u00f6\u011feye ula\u015fmak i\u00e7in izinleriniz yetersiz.\",\r\n\t\"accessfunc\"\t\t=> \"Bu fonksiyonu kullanmak i\u00e7in izinleriniz yetersiz.\",\r\n\t\"accesstarget\"\t\t=> \"Hedef klas\u00f6re ula\u015fmak i\u00e7in izinleriniz yetersiz.\",\r\n\t\r\n\t// actions\r\n\t\"permread\"\t\t=> \"\u0130zin g\u00f6sterimi ba\u015far\u0131s\u0131z.\",\r\n\t\"permchange\"\t\t=> \"\u0130zin de\u011fi\u015ftirme ba\u015far\u0131s\u0131z. (Nedeni dosya sahiplik sorunu olabilir.)\",\r\n\t\"openfile\"\t\t=> \"Dosya a\u00e7\u0131lmas\u0131 ba\u015far\u0131s\u0131z.\",\r\n\t\"savefile\"\t\t=> \"Dosya kayd\u0131 ba\u015far\u0131s\u0131z.\",\r\n\t\"createfile\"\t\t=> \"Dosya olu\u015fturma ba\u015far\u0131s\u0131z.\",\r\n\t\"createdir\"\t\t=> \"Klas\u00f6r olu\u015fturma ba\u015far\u0131s\u0131z.\",\r\n\t\"uploadfile\"\t\t=> \"Dosya y\u00fcklemesi ba\u015far\u0131s\u0131z.\",\r\n\t\"copyitem\"\t\t=> \"Kopyalama ba\u015far\u0131s\u0131z.\",\r\n\t\"moveitem\"\t\t=> \"Ta\u015f\u0131ma ba\u015far\u0131s\u0131z.\",\r\n\t\"delitem\"\t\t=> \"Silme ba\u015far\u0131s\u0131z.\",\r\n\t\"chpass\"\t\t=> \"\u015eifre de\u011fi\u015ftirme ba\u015far\u0131s\u0131z.\",\r\n\t\"deluser\"\t\t=> \"Kullan\u0131c\u0131 kald\u0131rma ba\u015far\u0131s\u0131z.\",\r\n\t\"adduser\"\t\t=> \"Kullan\u0131c\u0131 ekleme ba\u015far\u0131s\u0131z.\",\r\n\t\"saveuser\"\t\t=> \"Kullan\u0131c\u0131 de\u011fi\u015fiklik kayd\u0131 ba\u015far\u0131s\u0131z.\",\r\n\t\"searchnothing\"\t\t=> \"Aramak i\u00e7in bir de\u011fer girmelisiniz.\",\r\n\t\r\n\t// misc\r\n\t\"miscnofunc\"\t\t=> \"Fonksiyon kullan\u0131labilir.\",\r\n\t\"miscfilesize\"\t\t=> \"Dosya en b\u00fcy\u00fck boyutu a\u015ft\u0131.\",\r\n\t\"miscfilepart\"\t\t=> \"Dosyan\u0131n yaln\u0131zca bir k\u0131sm\u0131 y\u00fcklenebildi.\",\r\n\t\"miscnoname\"\t\t=> \"Bir isim girmelisiniz.\",\r\n\t\"miscselitems\"\t\t=> \"Hi\u00e7bir \u00f6\u011fe(ler) se\u00e7mediniz.\",\r\n\t\"miscdelitems\"\t\t=> \" {0} ogeyi silmek istediginizden eminmisiniz?\",\r\n\t\"miscdeluser\"\t\t=> \"'{0}' kullan\u0131c\u0131s\u0131n\u0131 silmek istedi\u011finizden eminmisiniz?\",\r\n\t\"miscnopassdiff\"\t=> \"Yeni \u015fifre eskisinden farkl\u0131 de\u011fil.\",\r\n\t\"miscnopassmatch\"\t=> \"\u015eifreler e\u015fle\u015fmiyor.\",\r\n\t\"miscfieldmissed\"\t=> \"Gerekli bir bo\u015flu\u011fu atlad\u0131n\u0131z.\",\r\n\t\"miscnouserpass\"\t=> \"Kullan\u0131c\u0131 ad\u0131 yada \u015fifreniz yanl\u0131\u015f.\",\r\n\t\"miscselfremove\"\t=> \"Kendinizi silemezsiniz.\",\r\n\t\"miscuserexist\"\t\t=> \"Kullan\u0131c\u0131 zaten var.\",\r\n\t\"miscnofinduser\"\t=> \"Kullan\u0131c\u0131 bulunamad\u0131.\",\r\n\t\"extract_noarchive\" => \"Dosya uygun ar\u015fivlenmemi\u015f.\",\r\n\t\"extract_unknowntype\" => \"Bilinmeyen ar\u015fiv t\u00fcr\u00fc\",\r\n\r\n\t'chmod_none_not_allowed' => '\u0130zinleri <hi\u00e7biri> olarak de\u011fi\u015ftirmek yasakt\u0131r',\r\n\t'archive_dir_notexists' => 'Belirledi\u011finiz Kaydetme Dizini mevcut de\u011fil.',\r\n\t'archive_dir_unwritable' => 'Ar\u015fiv kaydetmek i\u00e7in l\u00fctfen yaz\u0131labilir dizin belirtin.',\r\n\t'archive_creation_failed' => 'Ar\u015fiv Dosyas\u0131n\u0131 Kaydetme Ba\u015far\u0131s\u0131z'\r\n\t\r\n);\r\n$GLOBALS[\"messages\"] = array(\r\n\t// links\r\n\t\"permlink\"\t\t=> \"\u0130zinleri De\u011fi\u015ftir\",\r\n\t\"editlink\"\t\t=> \"De\u011fi\u015ftir\",\r\n\t\"downlink\"\t\t=> \"\u0130ndir\",\r\n\t\"uplink\"\t\t=> \"Yukar\u0131\",\r\n\t\"homelink\"\t\t=> \"Anadizin\",\r\n\t\"reloadlink\"\t\t=> \"Yenile\",\r\n\t\"copylink\"\t\t=> \"Kopyala\",\r\n\t\"movelink\"\t\t=> \"Ta\u015f\u0131\",\r\n\t\"dellink\"\t\t=> \"Sil\",\r\n\t\"comprlink\"\t\t=> \"S\u0131k\u0131\u015ft\u0131r\",\r\n\t\"adminlink\"\t\t=> \"Y\u00f6netici\",\r\n\t\"logoutlink\"\t\t=> \"\u00c7\u0131k\u0131\u015f\",\r\n\t\"uploadlink\"\t\t=> \"Y\u00fckle\",\r\n\t\"searchlink\"\t\t=> \"Ara\",\r\n\t\"extractlink\"\t        => \"Ar\u015fivi \u00c7\u0131kart\",\r\n\t'chmodlink'\t\t=> '\u0130zinleri (Chmod) De\u011fi\u015ftir', // new mic\r\n\t'mossysinfolink'\t=> 'eXtplorer Sistem Bilgisi (eXtplorer, Server, PHP, mySQL)', // new mic\r\n\t'logolink'\t\t=> 'eXtplorer Websitesine Git (yeni pencerede)', // new mic\r\n\t\r\n\t// list\r\n\t\"nameheader\"\t\t=> \"\u0130sim\",\r\n\t\"sizeheader\"\t\t=> \"Boyut\",\r\n\t\"typeheader\"\t\t=> \"Tip\",\r\n\t\"modifheader\"\t\t=> \"De\u011fi\u015ftirme\",\r\n\t\"permheader\"\t\t=> \"\u0130zinler\",\r\n\t\"actionheader\"\t\t=> \"Hareketler\",\r\n\t\"pathheader\"\t\t=> \"Yol\",\r\n\t\r\n\t// buttons\r\n\t\"btncancel\"\t\t=> \"\u00c7\u0131k\u0131\u015f\",\r\n\t\"btnsave\"\t\t=> \"Kaydet\",\r\n\t\"btnchange\"\t\t=> \"De\u011fi\u015ftir\",\r\n\t\"btnreset\"\t\t=> \"S\u0131f\u0131rla\",\r\n\t\"btnclose\"\t\t=> \"Kapat\",\r\n\t\"btncreate\"\t\t=> \"Olu\u015ftur\",\r\n\t\"btnsearch\"\t\t=> \"Ara\",\r\n\t\"btnupload\"\t\t=> \"Y\u00fckle\",\r\n\t\"btncopy\"\t\t=> \"Kopyala\",\r\n\t\"btnmove\"\t\t=> \"Ta\u015f\u0131\",\r\n\t\"btnlogin\"\t\t=> \"Giri\u015f\",\r\n\t\"btnlogout\"\t\t=> \"\u00c7\u0131k\u0131\u015f\",\r\n\t\"btnadd\"\t\t=> \"Ekle\",\r\n\t\"btnedit\"\t\t=> \"De\u011fi\u015ftir\",\r\n\t\"btnremove\"\t\t=> \"Kald\u0131r\",\r\n\t\r\n\t// user messages, new in eXtplorer 1.3.0\r\n\t'renamelink'\t=> 'Yeniden Adland\u0131r',\r\n\t'confirm_delete_file' => 'Bu dosyay\u0131 silmek istedi\u011finizden emin misiniz? <br />%s',\r\n\t'success_delete_file' => '\u00d6\u011fe(ler) ba\u015far\u0131yla silindi.',\r\n\t'success_rename_file' => 'Dizin/dosya %s ba\u015far\u0131yla yeniden adland\u0131r\u0131ld\u0131  %s.',\r\n\t\r\n\t// actions\r\n\t\"actdir\"\t\t=> \"Klas\u00f6r\",\r\n\t\"actperms\"\t\t=> \"\u0130zinleri De\u011fi\u015ftir\",\r\n\t\"actedit\"\t\t=> \"Dosyay\u0131 D\u00fczenle\",\r\n\t\"actsearchresults\"\t=> \"Arama Sonu\u00e7lar\u0131\",\r\n\t\"actcopyitems\"\t\t=> \"\u00f6\u011fe(ler)i kopyala\",\r\n\t\"actcopyfrom\"\t\t=> \" /%s dan /%s ya \",\r\n\t\"actmoveitems\"\t\t=> \"\u00f6\u011fe(ler)i ta\u015f\u0131\",\r\n\t\"actmovefrom\"\t\t=> \" /%s dan /%s ya ta\u015f\u0131 \",\r\n\t\"actlogin\"\t\t=> \"Giri\u015f\",\r\n\t\"actloginheader\"\t=> \"eXtplorer kullanmak i\u00e7in giri\u015f yap\u0131n\",\r\n\t\"actadmin\"\t\t=> \"Y\u00f6netim\",\r\n\t\"actchpwd\"\t\t=> \"\u015eifre De\u011fi\u015ftir\",\r\n\t\"actusers\"\t\t=> \"Kullan\u0131c\u0131lar\",\r\n\t\"actarchive\"\t\t=> \"\u00f6\u011fe(ler)i Yedekle\",\r\n\t\"actupload\"\t\t=> \"Dosya(lar\u0131) Y\u00fckle\",\r\n\t\r\n\t// misc\r\n\t\"miscitems\"\t\t=> \"\u00f6\u011fe(ler)\",\r\n\t\"miscfree\"\t\t=> \"Serbest\",\r\n\t\"miscusername\"\t\t=> \"Kullan\u0131c\u0131 Ad\u0131\",\r\n\t\"miscpassword\"\t\t=> \"\u015eifre\",\r\n\t\"miscoldpass\"\t\t=> \"Eski \u015eifre\",\r\n\t\"miscnewpass\"\t\t=> \"Yeni \u015eifre\",\r\n\t\"miscconfpass\"\t\t=> \"\u015eifreyi Onaylay\u0131n\",\r\n\t\"miscconfnewpass\"\t=> \"Yeni \u015eifeyi Onaylay\u0131n\",\r\n\t\"miscchpass\"\t\t=> \"\u015eifre De\u011fi\u015ftir\",\r\n\t\"mischomedir\"\t\t=> \"Ana Klas\u00f6r\",\r\n\t\"mischomeurl\"\t\t=> \"Ba\u015f URL\",\r\n\t\"miscshowhidden\"\t=> \"Gizli \u00d6\u011feleri G\u00f6sterin\",\r\n\t\"mischidepattern\"\t=> \"Resim Gizle\",\r\n\t\"miscperms\"\t\t=> \"\u0130zinler\",\r\n\t\"miscuseritems\"\t\t=> \"(isim, ana klas\u00f6r, gizli \u00f6\u011feleri g\u00f6ster, izinler, Aktif)\",\r\n\t\"miscadduser\"\t\t=> \"Kullan\u0131c\u0131 ekleyin\",\r\n\t\"miscedituser\"\t\t=> \"'%s' kullan\u0131c\u0131s\u0131n\u0131 de\u011fi\u015ftirin\",\r\n\t\"miscactive\"\t\t=> \"Aktif\",\r\n\t\"misclang\"\t\t=> \"Dil\",\r\n\t\"miscnoresult\"\t\t=> \"Hi\u00e7 sonu\u00e7 yok.\",\r\n\t\"miscsubdirs\"\t\t=> \"Alt kategorileri de aray\u0131n\",\r\n\t\"miscpermnames\"\t\t=> array(\"Sadece bak\u0131labilir\",\"Modifiye\",\"\u015eifre de\u011fi\u015ftir\",\"Modifiye & \u015eifre De\u011fi\u015ftir\",\r\n\t\t\t\t\t\"Y\u00f6netici\"),\r\n\t\"miscyesno\"\t\t=> array(\"Evet\",\"Hay\u0131r\",\"E\",\"H\"),\r\n\t\"miscchmod\"\t\t=> array(\"Sahip\", \"Grup\", \"Genel\"),\r\n\r\n\t// from here all new by mic\r\n\t'miscowner'\t\t\t=> 'Sahip',\r\n\t'miscownerdesc'\t\t=> '<strong>A\u00e7\u0131klama:</strong><br />Kullan\u0131c\u0131 (UID) /<br />Grup (GID)<br />Mevcut Haklar:<br /><strong> %s ( %s ) </strong>/<br /><strong> %s ( %s )</strong>',\r\n\r\n\t// sysinfo (new by mic)\r\n\t'simamsysinfo'\t\t=> \"eXtplorer Sistem Bilgisi\",\r\n\t'sisysteminfo'\t\t=> 'Sistem Bilgisi',\r\n\t'sibuilton'\t\t\t=> '\u0130\u015fletim Sistemi',\r\n\t'sidbversion'\t\t=> 'Veritaban\u0131 S\u00fcr\u00fcm\u00fc (MySQL)',\r\n\t'siphpversion'\t\t=> 'PHP S\u00fcr\u00fcm\u00fc',\r\n\t'siphpupdate'\t\t=> 'Bilgi: <span style=\"color: red;\">Kulland\u0131\u011f\u0131n\u0131z PHP s\u00fcr\u00fcm\u00fc <strong>g\u00fcncel de\u011fil!</strong></span><br />'.$_VERSION->PRODUCT.' t\u00fcm ekleriyle fonksiyonlar\u0131n\u0131 ve \u00f6zelliklerini garantilemek i\u00e7in <br />en d\u00fc\u015f\u00fck <strong>PHP s\u00fcr\u00fcm\u00fc 4.3</strong> kullanmal\u0131s\u0131n\u0131z!',\r\n\t'siwebserver'\t\t=> 'Web Sunucu',\r\n\t'siwebsphpif'\t\t=> 'WebServer - PHP Interface',\r\n\t'simamboversion'\t=> 'eXtplorer S\u00fcr\u00fcm\u00fc',\r\n\t'siuseragent'\t\t=> 'Taray\u0131c\u0131 S\u00fcr\u00fcm\u00fc',\r\n\t'sirelevantsettings' => '\u00d6nemli PHP Ayarlar\u0131',\r\n\t'sisafemode'\t\t=> 'G\u00fcvenli Mod',\r\n\t'sibasedir'\t\t\t=> 'Open basedir',\r\n\t'sidisplayerrors'\t=> 'PHP Hatalar\u0131',\r\n\t'sishortopentags'\t=> 'K\u0131sa A\u00e7\u0131k Etiketler',\r\n\t'sifileuploads'\t\t=> 'Dosya Y\u00fcklemeleri',\r\n\t'simagicquotes'\t\t=> 'Magic Quotes',\r\n\t'siregglobals'\t\t=> 'Genel Kay\u0131tlar',\r\n\t'sioutputbuf'\t\t=> 'Output Buffer',\r\n\t'sisesssavepath'\t=> 'Session Savepath',\r\n\t'sisessautostart'\t=> 'Session auto start',\r\n\t'sixmlenabled'\t\t=> 'XML Etkin',\r\n\t'sizlibenabled'\t\t=> 'ZLIB Etkin',\r\n\t'sidisabledfuncs'\t=> 'Etkin Olmayan \u0130\u015flevler',\r\n\t'sieditor'\t\t\t=> 'WYSIWYG Edit\u00f6r',\r\n\t'siconfigfile'\t\t=> 'Yap\u0131land\u0131rma Dosyas\u0131',\r\n\t'siphpinfo'\t\t\t=> 'PHP Bilgisi',\r\n\t'siphpinformation'\t=> 'PHP Information',\r\n\t'sipermissions'\t\t=> '\u0130zinler',\r\n\t'sidirperms'\t\t=> 'Dizin izinleri',\r\n\t'sidirpermsmess'\t=> '\u015eu uygulaman\u0131n '.$_VERSION->PRODUCT.' t\u00fcm i\u015flevleri ve \u00f6zelliklerinin do\u011fru \u00e7al\u0131\u015ft\u0131\u011f\u0131ndan emin olmak i\u00e7in, a\u015fa\u011f\u0131daki klas\u00f6rlerin yazma izinleri [chmod 0777] olmal\u0131d\u0131r',\r\n\t'sionoff'\t\t=> array( 'A\u00e7\u0131k', 'Kapal\u0131' ),\r\n\t\r\n\t'extract_warning'\t=> \"Ger\u00e7ekten bu dosyay\u0131 buraya \u00e7\u0131kartmak istiyor musunuz?<br />Dikkatli kullan\u0131lmad\u0131\u011f\u0131nda varolan dosyalar\u0131n \u00fczerine yaz\u0131lacak!\",\r\n\t'extract_success'\t=> \"Ar\u015fiv \u00c7\u0131kartma Ba\u015far\u0131l\u0131\",\r\n\t'extract_failure'\t=> \"Ar\u015fiv \u00c7\u0131kartma Ba\u015far\u0131s\u0131z\",\r\n        \r\n\r\n\r\n'overwrite_files' => 'Varolan dosyan\u0131n \u00fczerine yaz?',\r\n\t\"viewlink\"\t\t=> \"G\u00f6ster\",\r\n\t\"actview\"\t\t=> \"Kaynak dosyas\u0131n\u0131 g\u00f6ster\",\r\n\t\r\n\t// added by Paulino Michelazzo (paulino@michelazzo.com.br) to fun_chmod.php file\r\n\t'recurse_subdirs'\t=> 'Alt Klas\u00f6rlere Uygulans\u0131n m\u0131?',\r\n\t\r\n\t// added by Paulino Michelazzo (paulino@michelazzo.com.br) to footer.php file\r\n\t'check_version'\t=> 'Son s\u00fcr\u00fcm\u00fc kontrol et',\r\n\t\r\n\t// added by Paulino Michelazzo (paulino@michelazzo.com.br) to fun_rename.php file\r\n\t'rename_file'\t=>\t'Dizini yada dosyay\u0131 yenidien adland\u0131r...',\r\n\t'newname'\t\t=>\t'Yeni \u0130sim',\r\n\t\r\n\t// added by Paulino Michelazzo (paulino@michelazzo.com.br) to fun_edit.php file\r\n\t'returndir'\t=>\t'Kaydettikten sonra dizine geri d\u00f6n\u00fcls\u00fcn m\u00fc?',\r\n\t'line'\t\t=> \t'Sat\u0131r',\r\n\t'column'\t=>\t'S\u00fctun',\r\n\t'wordwrap'\t=>\t'S\u00f6zc\u00fck Kayd\u0131rma: (yaln\u0131z IE)',\r\n\t'copyfile'\t=>\t'Dosyay\u0131, bu dosya ad\u0131na kopyalay\u0131n',\r\n\t\r\n\t// Bookmarks\r\n\t'quick_jump' => 'H\u0131zl\u0131 Atlama',\r\n\t'already_bookmarked' => 'Bu dizin zaten yer imlerinde',\r\n\t'bookmark_was_added' => 'Bu dizin yer imleri listesine eklendi.',\r\n\t'not_a_bookmark' => 'Bu dizin yer imlerinde de\u011fil.',\r\n\t'bookmark_was_removed' => 'Bu dizin yer imleri listesinden \u00e7\u0131kart\u0131ld\u0131.',\r\n\t'bookmarkfile_not_writable' => \"Yer imi % s konumuna getirilemedi. \\n Yer \u0130mi Dosyas\u0131 '%s' \\nis yaz\u0131labilir de\u011fil.\",\r\n\t\r\n\t'lbl_add_bookmark' => 'Bu dizini yerimlerine ekle',\r\n\t'lbl_remove_bookmark' => 'Bu dizini yer imleri listesinden \u00e7\u0131kar',\r\n\t\r\n\t'enter_alias_name' => 'L\u00fctfen bu yer imi i\u00e7in takma ad girin',\r\n\t\r\n\t'normal_compression' => 'normal s\u0131k\u0131\u015ft\u0131rma',\r\n\t'good_compression' => '\u0130yi S\u0131k\u0131\u015ft\u0131rma',\r\n\t'best_compression' => 'En \u0130yi S\u0131k\u0131\u015ft\u0131rma',\r\n\t'no_compression' => 's\u0131k\u0131\u015ft\u0131rma yok',\r\n\t\r\n\t'creating_archive' => 'Ar\u015fiv dosyas\u0131 olu\u015ftur...',\r\n\t'processed_x_files' => 'Processed %s of %s Files',\r\n\t\r\n\t'ftp_header' => 'Yerel FTP Kimlik Do\u011frulama',\r\n\t'ftp_login_lbl' => 'FTP Sunucusu Oturum A\u00e7ma Kimlik Bilgilerini Giriniz',\r\n\t\r\n\t'ftp_login_name' => 'FTP Kullan\u0131c\u0131 Ad\u0131',\r\n\t'ftp_login_pass' => 'FTP \u015eifresi',\r\n\t'ftp_hostname_port' => 'FTP Sunucusu',\r\n\t'ftp_login_check' => 'FTP ba\u011flant\u0131s\u0131 Kontrol ediliyor...',\r\n\t'ftp_connection_failed' => \"FTP sunucusuna ba\u011flan\u0131lamad\u0131. \\nFTP sunucusunun \u00e7al\u0131\u015f\u0131p \u00e7al\u0131\u015fmad\u0131\u011f\u0131n\u0131 kontrol edin.\",\r\n\t'ftp_login_failed' => \"FTP giri\u015finde hata. L\u00fctfen kullan\u0131c\u0131 ad\u0131 ve \u015fifrenizi kontrol ederek tekrar deneyin.\",\r\n\t\t\r\n\t'switch_file_mode' => '\u015eimdiki Mod: <strong>%s</strong>. Dilerseniz %s moduna ge\u00e7ebilirsiniz. <br/> T\u00fcrk\u00e7e \u00c7eviri: <a href=\"https://durualan.com\" target=\"_blank\" rel=\"noopener\"><b>Mehmet TA\u015e</b></a>',\r\n\t'symlink_target' => 'Sembolik Ba\u011flant\u0131 Hedefi',\r\n\t\r\n\t\"permchange\"\t\t=> \"Yazma \u0130zinleri Ba\u015far\u0131l\u0131:\",\r\n\t\"savefile\"\t\t=> \"Dosya kaydedildi.\",\r\n\t\"moveitem\"\t\t=> \"Ta\u015f\u0131ma Tamamland\u0131.\",\r\n\t\"copyitem\"\t\t=> \"Kopyalama Tamamland\u0131.\",\r\n\t'archive_name' \t=> 'Ar\u015fiv dosyas\u0131 ismi',\r\n\t'archive_saveToDir' \t=> 'Ar\u015fivi bu dizine kaydet',\r\n\t\r\n\t'editor_simple'\t=> 'Basit Edit\u00f6r Modu',\r\n\t'editor_syntaxhighlight'\t=> 'Syntax-Highlighted Mode',\r\n\r\n\t'newlink'\t=> 'Yeni Dosya/Dizin',\r\n\t'show_directories' => 'Dizinleri G\u00f6ster',\r\n\t'actlogin_success' => 'Giri\u015f ba\u015far\u0131l\u0131!',\r\n\t'actlogin_failure' => 'Giri\u015f hatal\u0131, tekrar deneyin.',\r\n\t'directory_tree' => 'Dizin A\u011fac\u0131',\r\n\t'browsing_directory' => 'Dizinlere G\u00f6zat\u0131n',\r\n\t'filter_grid' => 'Filtreleyin',\r\n\t'paging_page' => 'Sayfa',\r\n\t'paging_of_X' => 'of {0}',\r\n\t'paging_firstpage' => '\u0130lk Sayfa',\r\n\t'paging_lastpage' => 'Son Sayfa',\r\n\t'paging_nextpage' => 'Sonraki Sayfa',\r\n\t'paging_prevpage' => '\u00d6nceki Sayfa',\r\n\t\r\n\t'paging_info' => 'G\u00f6sterilen \u00d6\u011feler {0} - {1} of {2}',\r\n\t'paging_noitems' => 'G\u00f6sterilecek \u00f6\u011fe yok',\r\n\t'aboutlink' => 'Hakk\u0131nda...',\r\n\t'password_warning_title' => '\u00d6nemli - \u015eifrenizi de\u011fi\u015ftirin!',\r\n\t'password_warning_text' => 'Giri\u015f yapm\u0131\u015f oldu\u011funuz kullan\u0131c\u0131 hesab\u0131, varsay\u0131lan eXtplorer taraf\u0131ndan ayr\u0131lan hesaba kar\u015f\u0131l\u0131k gelir. EXtplorer kurulumunuz izinsiz giri\u015fe a\u00e7\u0131k ve bu g\u00fcvenlik a\u00e7\u0131\u011f\u0131n\u0131 hemen d\u00fczeltmelisiniz!',\r\n\t'change_password_success' => '\u015eifreniz de\u011fi\u015ftirildi!',\r\n\t'success' => 'Ba\u015far\u0131l\u0131',\r\n\t'failure' => 'Hata',\r\n\t'dialog_title' => 'Website Uyar\u0131s\u0131',\r\n\t'upload_processing' => 'Y\u00fckleniyor, l\u00fctfen bekleyin...',\r\n\t'upload_completed' => 'Y\u00fckleme Ba\u015far\u0131l\u0131!',\r\n\t'acttransfer' => 'Ba\u015fka Sunucudan Transfer Edin',\r\n\t'transfer_processing' => 'Sunucudan sunucuya transfer s\u00fcr\u00fcyor, l\u00fctfen bekleyin...',\r\n\t'transfer_completed' => 'Transfer tamamland\u0131!',\r\n\t'max_file_size' => 'En B\u00fcy\u00fck Dosya Boyutu',\r\n\t'max_post_size' => 'En B\u00fcy\u00fck Y\u00fckleme S\u0131n\u0131r\u0131',\r\n\t'done' => 'Tamam.',\r\n\t'permissions_processing' => '\u0130zinler uygulan\u0131yor, l\u00fctfen bekleyin...',\r\n\t'archive_created' => 'Ar\u015fiv Dosyas\u0131 Olu\u015fturuldu!',\r\n\t'save_processing' => 'Dosya Kaydediliyor...',\r\n\t'current_user' => 'Bu uygulama \u015fu anda a\u015fa\u011f\u0131daki kullan\u0131c\u0131lar\u0131n izinleriyle \u00e7al\u0131\u015f\u0131r:',\r\n\t'your_version' => 'Sizin S\u00fcr\u00fcm\u00fcn\u00fcz',\r\n\t'search_processing' => 'Aran\u0131yor, l\u00fctfen bekleyin...',\r\n\t'url_to_file' => 'Dosya adresi',\r\n\t'file' => 'Dosya'\r\n\r\n);\r\n?>\r\n", "<?php\r\n\r\n// Turkish Language for 2.1.12 (Translated by Mehmet Ta\u015f)\r\n\r\n$GLOBALS[\"mimes\"]=array(\r\n\t// dir, exe, file\r\n\t\"dir\"\t=> \"Klas\u00f6r\",\r\n\t\"exe\"\t=> \"A\u00e7\u0131labilir Dosya\",\r\n\t\"file\"\t=> \"Dosya\",\r\n\t\"symlink\"=> \"Simgesel Ba\u011flant\u0131\",\r\n\r\n\t// text\r\n\t\"text\"\t=> \"Metin Dosyas\u0131\",\r\n\t\r\n\t// programming\r\n\t\"php\"\t=> \"PHP Betik\",\r\n\t\"sql\"\t=> \"SQL Dosyas\u0131\",\r\n\t\"perl\"\t=> \"PERL Beti\u011fi\",\r\n\t\"html\"\t=> \"HTML Sayfas\u0131\",\r\n\t\"js\"\t=> \"JavaScript Dosyas\u0131\",\r\n\t\"css\"\t=> \"CSS Dosyas\u0131\",\r\n\t\"cgi\"\t=> \"CGI Betik\",\r\n\t// C++\r\n\t\"cpps\"\t=> \"C++ Kaynak Dosyas\u0131\",\r\n\t\"cpph\"\t=> \"C++ Ba\u015fl\u0131k Dosyas\u0131\",\r\n\t// Java\r\n\t\"javas\"\t=> \"Java Kaynak Dosyas\u0131\",\r\n\t\"javac\"\t=> \"Java S\u0131n\u0131f Dosyas\u0131\",\r\n\t// Pascal\r\n\t\"pas\"\t=> \"Pascal Dosyas\u0131\",\r\n\t\r\n\t// images\r\n\t\"gif\"\t=> \"GIF Resmi\",\r\n\t\"jpg\"\t=> \"JPG Resmi\",\r\n\t\"bmp\"\t=> \"BMP Resmi\",\r\n\t\"png\"\t=> \"PNG Resmi\",\r\n\t\r\n\t// compressed\r\n\t\"zip\"\t=> \"ZIP Ar\u015fivi\",\r\n\t\"tar\"\t=> \"TAR Ar\u015fivi\",\r\n\t\"gzip\"\t=> \"GZIP Ar\u015fivi\",\r\n\t\"bzip2\"\t=> \"BZIP2 Ar\u015fivi\",\r\n\t\"rar\"\t=> \"RAR Ar\u015fivi\",\r\n\t\r\n\t// music\r\n\t\"mp3\"\t=> \"MP3 Ses Dosyas\u0131\",\r\n\t\"wav\"\t=> \"WAV Ses Dosyas\u0131\",\r\n\t\"midi\"\t=> \"MIDI Ses Dosyas\u0131\",\r\n\t\"real\"\t=> \"RealAudio Ses Dosyas\u0131\",\r\n\t\r\n\t// movie\r\n\t\"mpg\"\t=> \"MPG Video Dosyas\u0131\",\r\n\t\"mov\"\t=> \"Movie Dosyas\u0131\",\r\n\t\"avi\"\t=> \"AVI Video Dosyas\u0131\",\r\n\t\"flash\"\t=> \"Flash Film Dosyas\u0131\",\r\n\t\r\n\t// Micosoft / Adobe\r\n\t\"word\"\t=> \"Word D\u00f6k\u00fcman\u0131\",\r\n\t\"excel\"\t=> \"Excel D\u00f6k\u00fcman\u0131\",\r\n\t\"pdf\"\t=> \"PDF Dosyas\u0131\"\r\n); ?>"], "filenames": ["CHANGELOG.txt", "admin.extplorer.php", "include/archive.php", "include/chmod.php", "include/functions.php", "include/init.php", "include/mkitem.php", "include/result.class.php", "include/search.php", "languages/turkish.php", "languages/turkish_mimes.php"], "buggy_code_start_loc": [4, 164, 102, 85, 574, 238, 69, 129, 251, 3, 3], "buggy_code_end_loc": [4, 164, 197, 217, 578, 261, 69, 147, 252, 319, 11], "fixing_code_start_loc": [5, 165, 102, 85, 574, 239, 70, 129, 251, 3, 3], "fixing_code_end_loc": [14, 169, 197, 217, 581, 262, 73, 147, 252, 322, 11], "type": "CWE-22", "message": "A vulnerability was found in soerennb eXtplorer up to 2.1.12. It has been classified as critical. This affects an unknown part of the file include/archive.php of the component Archive Handler. The manipulation leads to path traversal. Upgrading to version 2.1.13 is able to address this issue. The name of the patch is b8fcb888f4ff5e171c16797a4b075c6c6f50bf46. It is recommended to upgrade the affected component. The identifier VDB-217437 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2019-25098", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-05T08:15:08.673", "lastModified": "2023-01-11T18:17:29.510", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in soerennb eXtplorer up to 2.1.12. It has been classified as critical. This affects an unknown part of the file include/archive.php of the component Archive Handler. The manipulation leads to path traversal. Upgrading to version 2.1.13 is able to address this issue. The name of the patch is b8fcb888f4ff5e171c16797a4b075c6c6f50bf46. It is recommended to upgrade the affected component. The identifier VDB-217437 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.2}, "baseSeverity": "MEDIUM", "exploitabilityScore": 5.1, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:extplorer:extplorer:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.1.13", "matchCriteriaId": "BF227209-F23B-4221-B104-757DA2C3935A"}]}]}], "references": [{"url": "https://github.com/soerennb/extplorer/commit/b8fcb888f4ff5e171c16797a4b075c6c6f50bf46", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/soerennb/extplorer/releases/tag/v2.1.13", "source": "cna@vuldb.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217437", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217437", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/soerennb/extplorer/commit/b8fcb888f4ff5e171c16797a4b075c6c6f50bf46"}}