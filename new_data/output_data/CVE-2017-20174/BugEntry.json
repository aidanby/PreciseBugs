{"buggy_code": ["<?php\n\nnamespace Kirby\\Webmentions;\n\nuse A;\nuse Field;\nuse Obj;\nuse F;\nuse Media;\nuse Str;\nuse Url;\nuse C;\nuse Remote;\nuse Tpl;\nuse V;\n\nclass Author extends Obj {\n\n  public $mention = null;\n  public $data    = array();\n  public $page    = null;\n  public $name    = null;\n  public $url     = null;\n  public $photo   = null;\n\n  public function __construct($mention) {\n\n    $this->mention = $mention;\n    $this->data    = $mention->data['author'];\n    $this->page    = $mention->page;\n\n    if(empty($this->data['url'])) {\n      $this->data['url'] = $this->mention->data['url'];\n    }\n\n    if(empty($this->data['name'])) {\n      $this->data['name'] = url::short(url::base($this->data['url']));\n    }\n\n    $this->field('url');\n    $this->field('name');\n\n  }\n\n  public function field($key, $field = null) {\n    if(is_null($field)) $field = $key;\n\n    $value = a::get($this->data, $field);\n\n    if($key == 'url' and !v::url($value)) {\n      $value = null;\n    }\n\n    $this->$key = new Field($this->page, $key, esc($value));\n  }\n\n  public function photo() {\n\n    if(!is_null($this->photo)) return $this->photo;\n\n    $extension = f::extension($this->data['photo']);\n    $filename  = rtrim(sha1($this->url) . '.' . $extension, '.');    \n    $path      = c::get('webmentions.images', 'assets/images/mentions');\n    $root      = kirby()->roots()->index() . DS . str_replace('/', DS, $path) . DS . $filename;\n    $url       = kirby()->urls()->index() . '/' . $path . '/' . $filename;\n    $photo     = new Media($root, $url);\n    \n    if(!$photo->exists()) {    \n\n      $image   = remote::get($this->data['photo']);\n      $allowed = array('image/jpeg', 'image/png', 'image/gif');\n\n      f::write($root, $image->content());\n\n      if(!in_array($photo->mime(), $allowed) or $photo->size() == 0) {\n        $photo->delete();\n      }\n\n    }\n\n    if(!$photo->exists() or !$photo->type() == 'image') {\n      $photo = new Obj(array(\n        'url'    => $this->data['photo'],\n        'exists' => false\n      ));\n    }\n\n    return $this->photo = $photo;    \n\n  }\n\n  public function toHtml() {\n\n    $snippet = kirby()->roots()->snippets() . DS . 'webmentions' . DS . 'author.php';\n\n    if(!file_exists($snippet)) {\n      $snippet = dirname(__DIR__) . DS . 'snippets' . DS . 'author.php';\n    }\n\n    return tpl::load($snippet, array(\n      'author'  => $this,\n      'mention' => $this->mention\n    ));\n\n  }\n\n  public function __toString() {\n    return (string)$this->toHtml();\n  }\n\n}"], "fixing_code": ["<?php\n\nnamespace Kirby\\Webmentions;\n\nuse A;\nuse Field;\nuse Obj;\nuse F;\nuse Media;\nuse Str;\nuse Url;\nuse C;\nuse Remote;\nuse Tpl;\nuse V;\n\nclass Author extends Obj {\n\n  public $mention = null;\n  public $data    = array();\n  public $page    = null;\n  public $name    = null;\n  public $url     = null;\n  public $photo   = null;\n\n  public function __construct($mention) {\n\n    $this->mention = $mention;\n    $this->data    = $mention->data['author'];\n    $this->page    = $mention->page;\n\n    if(empty($this->data['url'])) {\n      $this->data['url'] = $this->mention->data['url'];\n    }\n\n    if(empty($this->data['name'])) {\n      $this->data['name'] = url::short(url::base($this->data['url']));\n    }\n\n    $this->field('url');\n    $this->field('name');\n\n  }\n\n  public function field($key, $field = null) {\n    if(is_null($field)) $field = $key;\n\n    $value = a::get($this->data, $field);\n\n    if($key == 'url' and !v::url($value)) {\n      $value = null;\n    }\n\n    $this->$key = new Field($this->page, $key, esc($value));\n  }\n\n  public function photo() {\n\n    if(!is_null($this->photo)) return $this->photo;\n\n    $extension = f::extension($this->data['photo']);\n    $filename  = rtrim(sha1($this->url) . '.' . $extension, '.');    \n    $path      = c::get('webmentions.images', 'assets/images/mentions');\n    $root      = kirby()->roots()->index() . DS . str_replace('/', DS, $path) . DS . $filename;\n    $url       = kirby()->urls()->index() . '/' . $path . '/' . $filename;\n    $photo     = new Media($root, $url);\n    \n    // only allow images with a correct extension\n    if(in_array(strtolower($extension), ['jpg', 'jpeg', 'png', 'gif']) && !$photo->exists()) {    \n\n      $image   = remote::get($this->data['photo']);\n      $mime    = a::get($image->headers, 'Content-Type');      \n      $allowed = array('image/jpeg', 'image/png', 'image/gif');\n      \n      // check the mime type of the remote request response\n      if(in_array($mime, $allowed)) {\n\n        // write the file to disk\n        f::write($root, $image->content());\n  \n        // check the mime type and file size again to make sure it's all ok\n        if(!in_array($photo->mime(), $allowed) or $photo->size() == 0) {\n          $photo->delete();\n        }        \n      \n      }\n\n    }\n\n    if(!$photo->exists() || $photo->type() !== 'image') {\n      $photo = new Obj(array(\n        'url'    => $this->data['photo'],\n        'exists' => false\n      ));\n    }\n\n    return $this->photo = $photo;    \n\n  }\n\n  public function toHtml() {\n\n    $snippet = kirby()->roots()->snippets() . DS . 'webmentions' . DS . 'author.php';\n\n    if(!file_exists($snippet)) {\n      $snippet = dirname(__DIR__) . DS . 'snippets' . DS . 'author.php';\n    }\n\n    return tpl::load($snippet, array(\n      'author'  => $this,\n      'mention' => $this->mention\n    ));\n\n  }\n\n  public function __toString() {\n    return (string)$this->toHtml();\n  }\n\n}\n"], "filenames": ["lib/author.php"], "buggy_code_start_loc": [68], "buggy_code_end_loc": [112], "fixing_code_start_loc": [68], "fixing_code_end_loc": [121], "type": "CWE-74", "message": "A vulnerability was found in bastianallgeier Kirby Webmentions Plugin and classified as problematic. Affected by this issue is some unknown functionality. The manipulation leads to injection. The attack may be launched remotely. The name of the patch is 55bedea78ae9af916a9a41497bd9996417851502. It is recommended to apply a patch to fix this issue. VDB-218894 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2017-20174", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-19T08:15:12.620", "lastModified": "2023-01-25T21:12:37.163", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in bastianallgeier Kirby Webmentions Plugin and classified as problematic. Affected by this issue is some unknown functionality. The manipulation leads to injection. The attack may be launched remotely. The name of the patch is 55bedea78ae9af916a9a41497bd9996417851502. It is recommended to apply a patch to fix this issue. VDB-218894 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.6, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.2, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.1}, "baseSeverity": "MEDIUM", "exploitabilityScore": 4.9, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-74"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:getkirby:webmentions:*:*:*:*:*:kirby:*:*", "versionEndExcluding": "2017-02-01", "matchCriteriaId": "9CF10F8E-C934-46C1-B99B-20E10BC2901C"}]}]}], "references": [{"url": "https://github.com/bastianallgeier/kirby-webmentions/commit/55bedea78ae9af916a9a41497bd9996417851502", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.218894", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.218894", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/bastianallgeier/kirby-webmentions/commit/55bedea78ae9af916a9a41497bd9996417851502"}}