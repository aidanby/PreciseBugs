{"buggy_code": ["<?php\n/* Copyright (C) 2003      Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2003      Jean-Louis Bergamo   <jlb@j1b.org>\n * Copyright (C) 2006-2011 Laurent Destailleur  <eldy@users.sourceforge.net>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file \t\thtdocs/adherents/cartes/carte.php\n *\t\\ingroup    member\n *\t\\brief      Page to output members business cards\n */\nrequire '../../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/format_cards.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/modules/member/modules_cards.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/modules/printsheet/modules_labels.php';\n\n$langs->load(\"members\");\n$langs->load(\"errors\");\n\n// Choix de l'annee d'impression ou annee courante.\n$now = dol_now();\n$year=dol_print_date($now,'%Y');\n$month=dol_print_date($now,'%m');\n$day=dol_print_date($now,'%d');\n$foruserid=GETPOST('foruserid');\n$foruserlogin=GETPOST('foruserlogin');\n$mode=GETPOST('mode');\n$model=GETPOST(\"model\");\t\t\t// Doc template to use for business cards\n$modellabel=GETPOST(\"modellabel\");\t// Doc template to use for address sheet\n$mesg='';\n\n$adherentstatic=new Adherent($db);\n\n$extrafields = new ExtraFields($db);\n// fetch optionals attributes and labels\n$extralabels = $extrafields->fetch_name_optionals_label('adherent');\n\n\n/*\n * Actions\n */\n\nif ($mode == 'cardlogin' && empty($foruserlogin))\n{\n    $mesg=$langs->trans(\"ErrorFieldRequired\",$langs->transnoentitiesnoconv(\"Login\"));\n}\n\nif ((! empty($foruserid) || ! empty($foruserlogin) || ! empty($mode)) && ! $mesg)\n{\n    $arrayofmembers=array();\n\n    // request taking into account member with up to date subscriptions\n    $sql = \"SELECT d.rowid, d.firstname, d.lastname, d.login, d.societe as company, d.datefin,\";\n    $sql.= \" d.address, d.zip, d.town, d.country, d.birth, d.email, d.photo,\";\n    $sql.= \" t.libelle as type,\";\n    $sql.= \" c.code as country_code, c.label as country\";\n    // Add fields from extrafields\n    foreach ($extrafields->attribute_label as $key => $val)\n        $sql.=($extrafields->attribute_type[$key] != 'separate' ? \",ef.\".$key.' as options_'.$key : '');\n    $sql.= \" FROM \".MAIN_DB_PREFIX.\"adherent_type as t, \".MAIN_DB_PREFIX.\"adherent as d\";\n    $sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"c_country as c ON d.country = c.rowid\";\n    if (is_array($extrafields->attribute_label) && count($extrafields->attribute_label)) $sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"adherent_extrafields as ef on (d.rowid = ef.fk_object)\";\n    $sql.= \" WHERE d.fk_adherent_type = t.rowid AND d.statut = 1\";\n    $sql.= \" AND d.entity IN (\".getEntity('adherent').\")\";\n    if (is_numeric($foruserid)) $sql.=\" AND d.rowid=\".$foruserid;\n    if ($foruserlogin) $sql.=\" AND d.login='\".$db->escape($foruserlogin).\"'\";\n    $sql.= \" ORDER BY d.rowid ASC\";\n\n    dol_syslog(\"Search members\", LOG_DEBUG);\n    $result = $db->query($sql);\n    if ($result)\n    {\n    \t$num = $db->num_rows($result);\n    \t$i = 0;\n    \twhile ($i < $num)\n    \t{\n    \t\t$objp = $db->fetch_object($result);\n\n    \t\tif ($objp->country == '-') $objp->country='';\n\n    \t\t$adherentstatic->id=$objp->rowid;\n    \t\t$adherentstatic->lastname=$objp->lastname;\n    \t\t$adherentstatic->firstname=$objp->firstname;\n\n            // format extrafiled so they can be parsed in function complete_substitutions_array\n            if (is_array($extrafields->attribute_label) && count($extrafields->attribute_label))\n            {\n                $adherentstatic->array_options = array();\n                foreach($extrafields->attribute_label as $key => $val)\n                {\n                    $tmpkey='options_'.$key;\n                    if (!empty($objp->$tmpkey))\n                    {\n                        $adherentstatic->array_options[$tmpkey] = $objp->$tmpkey;\n                    }\n                    //if (!empty($objp->$key))\n                    //    $objp->array_options[$tmpkey] = $objp->$key;\n                    //$objp->array_options[$tmpkey] = $extrafields->showOutputField($key, $objp->$tmpkey, '', 1); //$objp->$tmpkey;\n                }\n            }\n\n    \t\t// List of values to scan for a replacement\n            $substitutionarray = array (\n                '__ID__'=>$objp->rowid,\n                '__LOGIN__'=>$objp->login,\n                '__FIRSTNAME__'=>$objp->firstname,\n                '__LASTNAME__'=>$objp->lastname,\n                '__FULLNAME__'=>$adherentstatic->getFullName($langs),\n                '__COMPANY__'=>$objp->company,\n                '__ADDRESS__'=>$objp->address,\n                '__ZIP__'=>$objp->zip,\n                '__TOWN__'=>$objp->town,\n                '__COUNTRY__'=>$objp->country,\n                '__COUNTRY_CODE__'=>$objp->country_code,\n                '__EMAIL__'=>$objp->email,\n                '__BIRTH__'=>dol_print_date($objp->birth,'day'),\n                '__TYPE__'=>$objp->type,\n                '__YEAR__'=>$year,\n                '__MONTH__'=>$month,\n                '__DAY__'=>$day,\n                '__DOL_MAIN_URL_ROOT__'=>DOL_MAIN_URL_ROOT,\n                '__SERVER__'=>\"http://\".$_SERVER[\"SERVER_NAME\"].\"/\"\n            );\n            complete_substitutions_array($substitutionarray, $langs, $adherentstatic);\n\n            // For business cards\n            if (empty($mode) || $mode=='card' || $mode=='cardlogin')\n            {\n                $textleft=make_substitutions($conf->global->ADHERENT_CARD_TEXT, $substitutionarray);\n                $textheader=make_substitutions($conf->global->ADHERENT_CARD_HEADER_TEXT, $substitutionarray);\n                $textfooter=make_substitutions($conf->global->ADHERENT_CARD_FOOTER_TEXT, $substitutionarray);\n                $textright=make_substitutions($conf->global->ADHERENT_CARD_TEXT_RIGHT, $substitutionarray);\n\n                if (is_numeric($foruserid) || $foruserlogin)\n                {\n                    $nb = $_Avery_Labels[$model]['NX'] * $_Avery_Labels[$model]['NY'];\n                    if ($nb <= 0) $nb=1;  // Protection to avoid empty page\n\n                    for($j=0;$j<$nb;$j++)\n                    {\n                        $arrayofmembers[]=array(\n                        \t'textleft'=>$textleft,\n                            'textheader'=>$textheader,\n                            'textfooter'=>$textfooter,\n                            'textright'=>$textright,\n                            'id'=>$objp->rowid,\n                            'photo'=>$objp->photo\n                        );\n                    }\n                }\n                else\n                {\n                    $arrayofmembers[]=array(\n                    \t'textleft'=>$textleft,\n                        'textheader'=>$textheader,\n                        'textfooter'=>$textfooter,\n                        'textright'=>$textright,\n                        'id'=>$objp->rowid,\n                        'photo'=>$objp->photo\n                    );\n                }\n            }\n\n            // For labels\n            if ($mode == 'label')\n            {\n            \tif (empty($conf->global->ADHERENT_ETIQUETTE_TEXT)) $conf->global->ADHERENT_ETIQUETTE_TEXT=\"__FULLNAME__\\n__ADDRESS__\\n__ZIP__ __TOWN__\\n__COUNTRY__\";\n                $textleft=make_substitutions($conf->global->ADHERENT_ETIQUETTE_TEXT, $substitutionarray);\n                $textheader='';\n                $textfooter='';\n                $textright='';\n\n                $arrayofmembers[]=array('textleft'=>$textleft,\n                                        'textheader'=>$textheader,\n                                        'textfooter'=>$textfooter,\n                                        'textright'=>$textright,\n                                        'id'=>$objp->rowid,\n                                        'photo'=>$objp->photo);\n            }\n\n            $i++;\n    \t}\n\n    \t// Build and output PDF\n        if (empty($mode) || $mode=='card' || $mode=='cardlogin')\n        {\n            if (! count($arrayofmembers))\n            {\n                $mesg=$langs->trans(\"ErrorRecordNotFound\");\n            }\n            if (empty($model) || $model == '-1')\n            {\n            \t$mesg=$langs->trans(\"ErrorFieldRequired\",$langs->transnoentitiesnoconv(\"DescADHERENT_CARD_TYPE\"));\n            }\n            if (! $mesg) $result=members_card_pdf_create($db, $arrayofmembers, $model, $outputlangs);\n\n        }\n        elseif ($mode == 'label')\n        {\n            if (! count($arrayofmembers))\n            {\n                $mesg=$langs->trans(\"ErrorRecordNotFound\");\n            }\n        \tif (empty($modellabel) || $modellabel == '-1')\n    \t\t{\n    \t\t\t$mesg=$langs->trans(\"ErrorFieldRequired\",$langs->transnoentitiesnoconv(\"DescADHERENT_ETIQUETTE_TYPE\"));\n    \t\t}\n        \tif (! $mesg) $result=doc_label_pdf_create($db, $arrayofmembers, $modellabel, $outputlangs);\n        }\n\n    \tif ($result <= 0)\n    \t{\n    \t\tdol_print_error('',$result);\n    \t}\n    }\n    else\n    {\n    \tdol_print_error($db);\n    }\n\n    if (! $mesg)\n    {\n    \t$db->close();\n    \texit;\n    }\n}\n\n\n/*\n * View\n */\n\n$form=new Form($db);\n\nllxHeader('',$langs->trans(\"MembersCards\"));\n\nprint load_fiche_titre($langs->trans(\"LinkToGeneratedPages\"));\nprint '<br>';\n\nprint $langs->trans(\"LinkToGeneratedPagesDesc\").'<br>';\nprint '<br>';\n\ndol_htmloutput_errors($mesg);\n\nprint img_picto('','puce').' '.$langs->trans(\"DocForAllMembersCards\",($conf->global->ADHERENT_CARD_TYPE?$conf->global->ADHERENT_CARD_TYPE:$langs->transnoentitiesnoconv(\"None\"))).' ';\nprint '<form action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"POST\">';\nprint '<input type=\"hidden\" name=\"foruserid\" value=\"all\">';\nprint '<input type=\"hidden\" name=\"mode\" value=\"card\">';\nprint '<input type=\"hidden\" name=\"action\" value=\"builddoc\">';\nprint $langs->trans(\"DescADHERENT_CARD_TYPE\").' ';\n// List of possible labels (defined into $_Avery_Labels variable set into format_cards.lib.php)\n$arrayoflabels=array();\nforeach(array_keys($_Avery_Labels) as $codecards)\n{\n\t$arrayoflabels[$codecards]=$_Avery_Labels[$codecards]['name'];\n}\nasort($arrayoflabels);\nprint $form->selectarray('model', $arrayoflabels, (GETPOST('model')?GETPOST('model'):$conf->global->ADHERENT_CARD_TYPE), 1, 0, 0, '', 0, 0, 0, '', '', 1);\nprint '<br><input class=\"button\" type=\"submit\" value=\"'.$langs->trans(\"BuildDoc\").'\">';\nprint '</form>';\nprint '<br>';\n\nprint img_picto('','puce').' '.$langs->trans(\"DocForOneMemberCards\",($conf->global->ADHERENT_CARD_TYPE?$conf->global->ADHERENT_CARD_TYPE:$langs->transnoentitiesnoconv(\"None\"))).' ';\nprint '<form action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"POST\">';\nprint '<input type=\"hidden\" name=\"mode\" value=\"cardlogin\">';\nprint '<input type=\"hidden\" name=\"action\" value=\"builddoc\">';\nprint $langs->trans(\"DescADHERENT_CARD_TYPE\").' ';\n// List of possible labels (defined into $_Avery_Labels variable set into format_cards.lib.php)\n$arrayoflabels=array();\nforeach(array_keys($_Avery_Labels) as $codecards)\n{\n\t$arrayoflabels[$codecards]=$_Avery_Labels[$codecards]['name'];\n}\nasort($arrayoflabels);\nprint $form->selectarray('model',$arrayoflabels,(GETPOST('model')?GETPOST('model'):$conf->global->ADHERENT_CARD_TYPE), 1, 0, 0, '', 0, 0, 0, '', '', 1);\nprint '<br>'.$langs->trans(\"Login\").': <input size=\"10\" type=\"text\" name=\"foruserlogin\" value=\"'.GETPOST('foruserlogin').'\">';\nprint '<br><input class=\"button\" type=\"submit\" value=\"'.$langs->trans(\"BuildDoc\").'\">';\nprint '</form>';\nprint '<br>';\n\nprint img_picto('','puce').' '.$langs->trans(\"DocForLabels\",$conf->global->ADHERENT_ETIQUETTE_TYPE).' ';\nprint '<form action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"POST\">';\nprint '<input type=\"hidden\" name=\"mode\" value=\"label\">';\nprint '<input type=\"hidden\" name=\"action\" value=\"builddoc\">';\nprint $langs->trans(\"DescADHERENT_ETIQUETTE_TYPE\").' ';\n// List of possible labels (defined into $_Avery_Labels variable set into format_cards.lib.php)\n$arrayoflabels=array();\nforeach(array_keys($_Avery_Labels) as $codecards)\n{\n\t$arrayoflabels[$codecards]=$_Avery_Labels[$codecards]['name'];\n}\nasort($arrayoflabels);\nprint $form->selectarray('modellabel',$arrayoflabels,(GETPOST('modellabel')?GETPOST('modellabel'):$conf->global->ADHERENT_ETIQUETTE_TYPE), 1, 0, 0, '', 0, 0, 0, '', '', 1);\nprint '<br><input class=\"button\" type=\"submit\" value=\"'.$langs->trans(\"BuildDoc\").'\">';\nprint '</form>';\nprint '<br>';\n\nllxFooter();\n\n$db->close();\n"], "fixing_code": ["<?php\n/* Copyright (C) 2003      Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2003      Jean-Louis Bergamo   <jlb@j1b.org>\n * Copyright (C) 2006-2011 Laurent Destailleur  <eldy@users.sourceforge.net>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file \t\thtdocs/adherents/cartes/carte.php\n *\t\\ingroup    member\n *\t\\brief      Page to output members business cards\n */\nrequire '../../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/format_cards.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/modules/member/modules_cards.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/modules/printsheet/modules_labels.php';\n\n$langs->loadLangs(array(\"members\",\"errors\"));\n\n// Choix de l'annee d'impression ou annee courante.\n$now = dol_now();\n$year=dol_print_date($now,'%Y');\n$month=dol_print_date($now,'%m');\n$day=dol_print_date($now,'%d');\n$foruserid=GETPOST('foruserid','alphanohtml');\n$foruserlogin=GETPOST('foruserlogin','alphanohtml');\n$mode=GETPOST('mode','aZ09');\n$model=GETPOST(\"model\",'aZ09');\t\t\t\t// Doc template to use for business cards\n$modellabel=GETPOST(\"modellabel\",'aZ09');\t// Doc template to use for address sheet\n$mesg='';\n\n$adherentstatic=new Adherent($db);\n\n$extrafields = new ExtraFields($db);\n// fetch optionals attributes and labels\n$extralabels = $extrafields->fetch_name_optionals_label('adherent');\n\n\n/*\n * Actions\n */\n\nif ($mode == 'cardlogin' && empty($foruserlogin))\n{\n    $mesg=$langs->trans(\"ErrorFieldRequired\",$langs->transnoentitiesnoconv(\"Login\"));\n}\n\nif ((! empty($foruserid) || ! empty($foruserlogin) || ! empty($mode)) && ! $mesg)\n{\n    $arrayofmembers=array();\n\n    // request taking into account member with up to date subscriptions\n    $sql = \"SELECT d.rowid, d.firstname, d.lastname, d.login, d.societe as company, d.datefin,\";\n    $sql.= \" d.address, d.zip, d.town, d.country, d.birth, d.email, d.photo,\";\n    $sql.= \" t.libelle as type,\";\n    $sql.= \" c.code as country_code, c.label as country\";\n    // Add fields from extrafields\n    foreach ($extrafields->attribute_label as $key => $val)\n        $sql.=($extrafields->attribute_type[$key] != 'separate' ? \",ef.\".$key.' as options_'.$key : '');\n    $sql.= \" FROM \".MAIN_DB_PREFIX.\"adherent_type as t, \".MAIN_DB_PREFIX.\"adherent as d\";\n    $sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"c_country as c ON d.country = c.rowid\";\n    if (is_array($extrafields->attribute_label) && count($extrafields->attribute_label)) $sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"adherent_extrafields as ef on (d.rowid = ef.fk_object)\";\n    $sql.= \" WHERE d.fk_adherent_type = t.rowid AND d.statut = 1\";\n    $sql.= \" AND d.entity IN (\".getEntity('adherent').\")\";\n    if (is_numeric($foruserid)) $sql.=\" AND d.rowid=\".$foruserid;\n    if ($foruserlogin) $sql.=\" AND d.login='\".$db->escape($foruserlogin).\"'\";\n    $sql.= \" ORDER BY d.rowid ASC\";\n\n    dol_syslog(\"Search members\", LOG_DEBUG);\n    $result = $db->query($sql);\n    if ($result)\n    {\n    \t$num = $db->num_rows($result);\n    \t$i = 0;\n    \twhile ($i < $num)\n    \t{\n    \t\t$objp = $db->fetch_object($result);\n\n    \t\tif ($objp->country == '-') $objp->country='';\n\n    \t\t$adherentstatic->id=$objp->rowid;\n    \t\t$adherentstatic->lastname=$objp->lastname;\n    \t\t$adherentstatic->firstname=$objp->firstname;\n\n            // format extrafiled so they can be parsed in function complete_substitutions_array\n            if (is_array($extrafields->attribute_label) && count($extrafields->attribute_label))\n            {\n                $adherentstatic->array_options = array();\n                foreach($extrafields->attribute_label as $key => $val)\n                {\n                    $tmpkey='options_'.$key;\n                    if (!empty($objp->$tmpkey))\n                    {\n                        $adherentstatic->array_options[$tmpkey] = $objp->$tmpkey;\n                    }\n                    //if (!empty($objp->$key))\n                    //    $objp->array_options[$tmpkey] = $objp->$key;\n                    //$objp->array_options[$tmpkey] = $extrafields->showOutputField($key, $objp->$tmpkey, '', 1); //$objp->$tmpkey;\n                }\n            }\n\n    \t\t// List of values to scan for a replacement\n            $substitutionarray = array (\n                '__ID__'=>$objp->rowid,\n                '__LOGIN__'=>$objp->login,\n                '__FIRSTNAME__'=>$objp->firstname,\n                '__LASTNAME__'=>$objp->lastname,\n                '__FULLNAME__'=>$adherentstatic->getFullName($langs),\n                '__COMPANY__'=>$objp->company,\n                '__ADDRESS__'=>$objp->address,\n                '__ZIP__'=>$objp->zip,\n                '__TOWN__'=>$objp->town,\n                '__COUNTRY__'=>$objp->country,\n                '__COUNTRY_CODE__'=>$objp->country_code,\n                '__EMAIL__'=>$objp->email,\n                '__BIRTH__'=>dol_print_date($objp->birth,'day'),\n                '__TYPE__'=>$objp->type,\n                '__YEAR__'=>$year,\n                '__MONTH__'=>$month,\n                '__DAY__'=>$day,\n                '__DOL_MAIN_URL_ROOT__'=>DOL_MAIN_URL_ROOT,\n                '__SERVER__'=>\"http://\".$_SERVER[\"SERVER_NAME\"].\"/\"\n            );\n            complete_substitutions_array($substitutionarray, $langs, $adherentstatic);\n\n            // For business cards\n            if (empty($mode) || $mode=='card' || $mode=='cardlogin')\n            {\n                $textleft=make_substitutions($conf->global->ADHERENT_CARD_TEXT, $substitutionarray);\n                $textheader=make_substitutions($conf->global->ADHERENT_CARD_HEADER_TEXT, $substitutionarray);\n                $textfooter=make_substitutions($conf->global->ADHERENT_CARD_FOOTER_TEXT, $substitutionarray);\n                $textright=make_substitutions($conf->global->ADHERENT_CARD_TEXT_RIGHT, $substitutionarray);\n\n                if (is_numeric($foruserid) || $foruserlogin)\n                {\n                    $nb = $_Avery_Labels[$model]['NX'] * $_Avery_Labels[$model]['NY'];\n                    if ($nb <= 0) $nb=1;  // Protection to avoid empty page\n\n                    for($j=0;$j<$nb;$j++)\n                    {\n                        $arrayofmembers[]=array(\n                        \t'textleft'=>$textleft,\n                            'textheader'=>$textheader,\n                            'textfooter'=>$textfooter,\n                            'textright'=>$textright,\n                            'id'=>$objp->rowid,\n                            'photo'=>$objp->photo\n                        );\n                    }\n                }\n                else\n                {\n                    $arrayofmembers[]=array(\n                    \t'textleft'=>$textleft,\n                        'textheader'=>$textheader,\n                        'textfooter'=>$textfooter,\n                        'textright'=>$textright,\n                        'id'=>$objp->rowid,\n                        'photo'=>$objp->photo\n                    );\n                }\n            }\n\n            // For labels\n            if ($mode == 'label')\n            {\n            \tif (empty($conf->global->ADHERENT_ETIQUETTE_TEXT)) $conf->global->ADHERENT_ETIQUETTE_TEXT=\"__FULLNAME__\\n__ADDRESS__\\n__ZIP__ __TOWN__\\n__COUNTRY__\";\n                $textleft=make_substitutions($conf->global->ADHERENT_ETIQUETTE_TEXT, $substitutionarray);\n                $textheader='';\n                $textfooter='';\n                $textright='';\n\n                $arrayofmembers[]=array('textleft'=>$textleft,\n                                        'textheader'=>$textheader,\n                                        'textfooter'=>$textfooter,\n                                        'textright'=>$textright,\n                                        'id'=>$objp->rowid,\n                                        'photo'=>$objp->photo);\n            }\n\n            $i++;\n    \t}\n\n    \t// Build and output PDF\n        if (empty($mode) || $mode=='card' || $mode=='cardlogin')\n        {\n            if (! count($arrayofmembers))\n            {\n                $mesg=$langs->trans(\"ErrorRecordNotFound\");\n            }\n            if (empty($model) || $model == '-1')\n            {\n            \t$mesg=$langs->trans(\"ErrorFieldRequired\",$langs->transnoentitiesnoconv(\"DescADHERENT_CARD_TYPE\"));\n            }\n            if (! $mesg) $result=members_card_pdf_create($db, $arrayofmembers, $model, $outputlangs);\n\n        }\n        elseif ($mode == 'label')\n        {\n            if (! count($arrayofmembers))\n            {\n                $mesg=$langs->trans(\"ErrorRecordNotFound\");\n            }\n        \tif (empty($modellabel) || $modellabel == '-1')\n    \t\t{\n    \t\t\t$mesg=$langs->trans(\"ErrorFieldRequired\",$langs->transnoentitiesnoconv(\"DescADHERENT_ETIQUETTE_TYPE\"));\n    \t\t}\n        \tif (! $mesg) $result=doc_label_pdf_create($db, $arrayofmembers, $modellabel, $outputlangs);\n        }\n\n    \tif ($result <= 0)\n    \t{\n    \t\tdol_print_error('',$result);\n    \t}\n    }\n    else\n    {\n    \tdol_print_error($db);\n    }\n\n    if (! $mesg)\n    {\n    \t$db->close();\n    \texit;\n    }\n}\n\n\n/*\n * View\n */\n\n$form=new Form($db);\n\nllxHeader('',$langs->trans(\"MembersCards\"));\n\nprint load_fiche_titre($langs->trans(\"LinkToGeneratedPages\"));\nprint '<br>';\n\nprint $langs->trans(\"LinkToGeneratedPagesDesc\").'<br>';\nprint '<br>';\n\ndol_htmloutput_errors($mesg);\n\nprint img_picto('','puce').' '.$langs->trans(\"DocForAllMembersCards\",($conf->global->ADHERENT_CARD_TYPE?$conf->global->ADHERENT_CARD_TYPE:$langs->transnoentitiesnoconv(\"None\"))).' ';\nprint '<form action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"POST\">';\nprint '<input type=\"hidden\" name=\"foruserid\" value=\"all\">';\nprint '<input type=\"hidden\" name=\"mode\" value=\"card\">';\nprint '<input type=\"hidden\" name=\"action\" value=\"builddoc\">';\nprint $langs->trans(\"DescADHERENT_CARD_TYPE\").' ';\n// List of possible labels (defined into $_Avery_Labels variable set into format_cards.lib.php)\n$arrayoflabels=array();\nforeach(array_keys($_Avery_Labels) as $codecards)\n{\n\t$arrayoflabels[$codecards]=$_Avery_Labels[$codecards]['name'];\n}\nasort($arrayoflabels);\nprint $form->selectarray('model', $arrayoflabels, (GETPOST('model')?GETPOST('model'):$conf->global->ADHERENT_CARD_TYPE), 1, 0, 0, '', 0, 0, 0, '', '', 1);\nprint '<br><input class=\"button\" type=\"submit\" value=\"'.$langs->trans(\"BuildDoc\").'\">';\nprint '</form>';\nprint '<br>';\n\nprint img_picto('','puce').' '.$langs->trans(\"DocForOneMemberCards\",($conf->global->ADHERENT_CARD_TYPE?$conf->global->ADHERENT_CARD_TYPE:$langs->transnoentitiesnoconv(\"None\"))).' ';\nprint '<form action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"POST\">';\nprint '<input type=\"hidden\" name=\"mode\" value=\"cardlogin\">';\nprint '<input type=\"hidden\" name=\"action\" value=\"builddoc\">';\nprint $langs->trans(\"DescADHERENT_CARD_TYPE\").' ';\n// List of possible labels (defined into $_Avery_Labels variable set into format_cards.lib.php)\n$arrayoflabels=array();\nforeach(array_keys($_Avery_Labels) as $codecards)\n{\n\t$arrayoflabels[$codecards]=$_Avery_Labels[$codecards]['name'];\n}\nasort($arrayoflabels);\nprint $form->selectarray('model',$arrayoflabels,(GETPOST('model')?GETPOST('model'):$conf->global->ADHERENT_CARD_TYPE), 1, 0, 0, '', 0, 0, 0, '', '', 1);\nprint '<br>'.$langs->trans(\"Login\").': <input size=\"10\" type=\"text\" name=\"foruserlogin\" value=\"'.GETPOST('foruserlogin').'\">';\nprint '<br><input class=\"button\" type=\"submit\" value=\"'.$langs->trans(\"BuildDoc\").'\">';\nprint '</form>';\nprint '<br>';\n\nprint img_picto('','puce').' '.$langs->trans(\"DocForLabels\",$conf->global->ADHERENT_ETIQUETTE_TYPE).' ';\nprint '<form action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"POST\">';\nprint '<input type=\"hidden\" name=\"mode\" value=\"label\">';\nprint '<input type=\"hidden\" name=\"action\" value=\"builddoc\">';\nprint $langs->trans(\"DescADHERENT_ETIQUETTE_TYPE\").' ';\n// List of possible labels (defined into $_Avery_Labels variable set into format_cards.lib.php)\n$arrayoflabels=array();\nforeach(array_keys($_Avery_Labels) as $codecards)\n{\n\t$arrayoflabels[$codecards]=$_Avery_Labels[$codecards]['name'];\n}\nasort($arrayoflabels);\nprint $form->selectarray('modellabel',$arrayoflabels,(GETPOST('modellabel')?GETPOST('modellabel'):$conf->global->ADHERENT_ETIQUETTE_TYPE), 1, 0, 0, '', 0, 0, 0, '', '', 1);\nprint '<br><input class=\"button\" type=\"submit\" value=\"'.$langs->trans(\"BuildDoc\").'\">';\nprint '</form>';\nprint '<br>';\n\nllxFooter();\n\n$db->close();\n"], "filenames": ["htdocs/adherents/cartes/carte.php"], "buggy_code_start_loc": [32], "buggy_code_end_loc": [45], "fixing_code_start_loc": [32], "fixing_code_end_loc": [44], "type": "CWE-79", "message": "Cross-site scripting (XSS) vulnerability in Dolibarr before 7.0.2 allows remote attackers to inject arbitrary web script or HTML via the foruserlogin parameter to adherents/cartes/carte.php.", "other": {"cve": {"id": "CVE-2018-10095", "sourceIdentifier": "cve@mitre.org", "published": "2018-05-22T20:29:01.227", "lastModified": "2018-06-06T13:14:03.550", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site scripting (XSS) vulnerability in Dolibarr before 7.0.2 allows remote attackers to inject arbitrary web script or HTML via the foruserlogin parameter to adherents/cartes/carte.php."}, {"lang": "es", "value": "Una vulnerabilidad de Cross-Site Scripting (XSS) en Dolibarr, en versiones anteriores a la 7.0.2, permite que atacantes remotos inyecten scripts web o HTML mediante el par\u00e1metro foruserlogin en adherents/cartes/carte.php."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:dolibarr:dolibarr:*:*:*:*:*:*:*:*", "versionEndExcluding": "7.0.2", "matchCriteriaId": "846C6EFB-F67D-4C61-9E8B-7CEE5B97AF08"}]}]}], "references": [{"url": "http://www.openwall.com/lists/oss-security/2018/05/21/3", "source": "cve@mitre.org", "tags": ["Mailing List"]}, {"url": "https://github.com/Dolibarr/dolibarr/blob/7.0.2/ChangeLog", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Vendor Advisory"]}, {"url": "https://github.com/Dolibarr/dolibarr/commit/1dc466e1fb687cfe647de4af891720419823ed56", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Vendor Advisory"]}, {"url": "https://sysdream.com/news/lab/2018-05-21-cve-2018-10095-dolibarr-xss-injection-vulnerability/", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Dolibarr/dolibarr/commit/1dc466e1fb687cfe647de4af891720419823ed56"}}