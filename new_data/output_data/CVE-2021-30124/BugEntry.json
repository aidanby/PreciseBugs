{"buggy_code": ["# VSCode PHP Mess Detector\r\n\r\n[![Build Status](https://travis-ci.org/sandhje/vscode-phpmd.svg?branch=master)](https://travis-ci.org/sandhje/vscode-phpmd)\r\n[![codecov](https://codecov.io/gh/sandhje/vscode-phpmd/branch/master/graph/badge.svg)](https://codecov.io/gh/sandhje/vscode-phpmd)\r\n[![Join the chat at https://gitter.im/sandhje/vscode-phpmd](https://badges.gitter.im/sandhje/vscode-phpmd.svg)](https://gitter.im/sandhje/vscode-phpmd?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n## Features\r\n\r\n* Analyze your PHP source code on save with PHP mess detector\r\n* No additional setup required if PHP is installed on your system\r\n* Customize which PHPMD rules are used\r\n* Supports custom PHPMD ruleset files\r\n\r\n## Installation\r\n\r\nTo install the extension: Press `F1`, type `ext install vscode-phpmd`\r\n\r\n### Using the built-in PHPMD PHAR\r\n\r\nTo use the built-in PHP mess detector you need to have PHP in your PATH. To test, open a shell or command window and type `php -v`, this should return \"PHP x.x.x ...\". If PHP is in your PATH you can directly use this extension, no further setup is required.\r\n\r\n### Using a custom PHPMD PHAR or executable\r\n\r\nIf you want to customize the default PHP mess detector command, e.g. you have PHP mess detector globally installed through composer or have PHP available on a different location, you can customize the command with the `command` setting. \r\n\r\n## Configuration\r\n\r\nThe following configuration options are available:\r\n\r\n### phpmd.command: \r\nCustomize the PHP mess detector command. If left empty the built-in PHPMD PHAR archive will be executed and PHP needs to be available on your PATH. If you want to use a different PHPMD PHAR you can customize the command here. \r\n\r\n#### Examples:\r\nTo use PHPMD installed globally with composer on a windows machine set this setting to: \r\n```\r\n\"phpmd.command\": \"C:/Users/{USER}/AppData/Roaming/Composer/vendor/bin/phpmd.bat\"\r\n```\r\n\r\nOr to use your own PHPMD PHAR on a custom location: \r\n```\r\n\"phpmd.command\": \"php C:/path/to/phpmd.phar\"`\r\n```\r\n\r\n### phpmd.rules: \r\n\r\nCustomize the PHPMD ruleset files used. This option can also take the path to a custom [PHPMD ruleset file](https://phpmd.org/documentation/creating-a-ruleset.html). Use VS Code's workspace settings to control the rules or ruleset files per workspace. When setting a path to a ruleset file, and the path starts with \"~/\" this will be replaced with the OS homedir. The string \"${workspaceFolder}\" in a path to a ruleset file will be replaced with an absolute path to the folder in the workspace which relates to the file that is being validated. Refer to [PHPMD's documentation](https://phpmd.org/documentation/index.html) for more information on the ruleset parameter.\r\n\r\n#### Examples:\r\nTo use only the cleancode ruleset and skip all the others: \r\n```\r\n\"phpmd.rules\": \"cleancode\"\r\n```\r\n\r\nPass a comma seperated list of rulesets: \r\n```\r\n\"phpmd.rules\": \"cleancode,codesize\"\r\n```\r\n\r\nPass the path to a ruleset file: \r\n```\r\n\"phpmd.rules\": \"C:/path/to/phpmd_config.xml\"\r\n```\r\n\r\nPass the path to a ruleset file located in the home directory: \r\n```\r\n\"phpmd.rules\": \"~/phpmd_config.xml\"\r\n```\r\n\r\nPass the path to a ruleset file located in the workspace folder: \r\n```\r\n\"phpmd.rules\": \"${workspaceFolder}/phpmd_config.xml\"\r\n```\r\n\r\n### phpmd.verbose: \r\nTurn verbose logging on or off. All log entries can be viewed VS Code's output panel. Generally this can be turned off (default) unless you need to troubleshoot problems.\r\n\r\n#### Examples:\r\nTo enable verbose logging: \r\n```\r\n\"phpmd.verbose\": true\r\n```\r\n\r\n## System requirements\r\n* PHP_Depend >= 2.0.0\r\n* PHP >= 5.3.9\r\n* [PHP XML extension](https://www.php.net/manual/en/simplexml.installation.php)\r\n\r\n## Troubleshooting\r\n* Turn on verbose logging through settings and check output\r\n* Ask a question on [gitter](https://gitter.im/sandhje/vscode-phpmd)\r\n* Found a bug? [file an issue](https://github.com/sandhje/vscode-phpmd/issues) (include the logs)\r\n\r\n## Contributing\r\n\r\nIf you found a bug or can help with adding a new feature to this extension you can submit any code through a pull request. The requirements for a pull request to be accepted are:\r\n\r\n* Add unit tests for all new code (code coverage must not drop)\r\n* Add JSDoc comments to all \"things\"\r\n* Make sure there are no TSLint violations (see tslint.json)\r\n\r\nBefore contributing also make sure you are familiar with VSCode's [language server development](https://code.visualstudio.com/docs/extensions/example-language-server)\r\n\r\nInstall all dependencies with [yarn](https://yarnpkg.com/lang/en/)\r\n\r\n## History\r\n\r\nSee client/CHANGELOG.md\r\n\r\n## Acknowledgements\r\n\r\n* The people behind [PHPMD](https://phpmd.org/people-behind.html)\r\n* The Microsoft VSCode team for [VSCode](https://code.visualstudio.com/) and [vscode-languageserver-node](https://github.com/Microsoft/vscode-languageserver-node).\r\n* Quentin Dreyer for his OS homedir replacement solution (https://github.com/qkdreyer)\r\n* Shane Smith for his spelling fixes (https://github.com/shane-smith)\r\n", "{\n  \"name\": \"vscode-phpmd\",\n  \"displayName\": \"PHP Mess Detector\",\n  \"description\": \"VSCode plugin for PHP Mess Detector\",\n  \"author\": \"Ecodes.io\",\n  \"license\": \"MIT\",\n  \"version\": \"1.2.0\",\n  \"publisher\": \"ecodes\",\n  \"engines\": {\n    \"vscode\": \"^1.8.0\"\n  },\n  \"categories\": [\n    \"Linters\"\n  ],\n  \"activationEvents\": [\n    \"onLanguage:php\"\n  ],\n  \"keywords\": [\n    \"php\",\n    \"phpmd\",\n    \"mess detector\",\n    \"diagnostics\",\n    \"linter\"\n  ],\n  \"bugs\": {\n    \"url\": \"https://github.com/sandhje/vscode-phpmd/issues\"\n  },\n  \"homepage\": \"https://github.com/sandhje/vscode-phpmd\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/sandhje/vscode-phpmd.git\"\n  },\n  \"icon\": \"images/vscode-phpmd.png\",\n  \"main\": \"./out/client/client\",\n  \"contributes\": {\n    \"configuration\": {\n      \"type\": \"object\",\n      \"title\": \"PHP Mess Detector configuration\",\n      \"properties\": {\n        \"phpmd.enabled\": {\n          \"type\": \"boolean\",\n          \"default\": true,\n          \"description\": \"Enable mess detector\"\n        },\n        \"phpmd.command\": {\n          \"type\": \"string\",\n          \"default\": \"\",\n          \"description\": \"The phpmd command. Leave empty to use the shipped phpmd phar (local php executable is required)\"\n        },\n        \"phpmd.rules\": {\n          \"type\": \"string\",\n          \"default\": \"cleancode,codesize,controversial,design,unusedcode,naming\",\n          \"description\": \"Phpmd ruleset (comma separated list of rulesets or the location of a config file)\"\n        },\n        \"phpmd.verbose\": {\n          \"type\": \"boolean\",\n          \"default\": false,\n          \"description\": \"Enable verbose logging\"\n        },\n        \"phpmd.clearOnClose\": {\n          \"type\": \"boolean\",\n          \"default\": true,\n          \"description\": \"Clear diagnostics for a file upon closing it\"\n        }\n      }\n    }\n  },\n  \"scripts\": {\n    \"vscode:prepublish\": \"tsc -p ./\",\n    \"test\": \"nyc mocha --opts mocha.opts\",\n    \"report-coverage\": \"nyc report --reporter=json\",\n    \"compile\": \"tsc -p .\",\n    \"watch\": \"tsc --watch -p .\"\n  },\n  \"devDependencies\": {\n    \"@types/chai\": \"^4.2.5\",\n    \"@types/mocha\": \"^5.2.7\",\n    \"@types/node\": \"^12.12.11\",\n    \"@types/sinon\": \"^7.5.1\",\n    \"@types/xml2js\": \"^0.4.5\",\n    \"@types/vscode\": \"^1.37.0\",\n    \"chai\": \"^4.2.0\",\n    \"codecov.io\": \"^0.1.6\",\n    \"mocha\": \"^6.2.2\",\n    \"mocha-typescript\": \"^1.0.15\",\n    \"nyc\": \"^14.1.1\",\n    \"sinon\": \"^7.5.0\",\n    \"source-map-support\": \"^0.5.16\",\n    \"ts-node\": \"^8.5.2\",\n    \"tslint\": \"^5.20.1\",\n    \"typescript\": \"3.7.2\"\n  },\n  \"dependencies\": {\n    \"@open-sourcerers/j-stillery\": \"^0.2.0\",\n    \"vscode-languageclient\": \"^5.2.1\",\n    \"vscode-languageserver\": \"^5.2.1\",\n    \"vscode-uri\": \"^2.1.1\",\n    \"xml2js\": \"^0.4.17\"\n  },\n  \"nyc\": {\n    \"include\": [\n      \"server/*.ts\",\n      \"server/**/*.ts\"\n    ],\n    \"extension\": [\n      \".ts\"\n    ],\n    \"require\": [\n      \"ts-node/register\"\n    ],\n    \"reporter\": [\n      \"text-summary\"\n    ],\n    \"sourceMap\": true,\n    \"instrument\": true\n  }\n}\n"], "fixing_code": ["# VSCode PHP Mess Detector\r\n\r\n[![Build Status](https://travis-ci.org/sandhje/vscode-phpmd.svg?branch=master)](https://travis-ci.org/sandhje/vscode-phpmd)\r\n[![codecov](https://codecov.io/gh/sandhje/vscode-phpmd/branch/master/graph/badge.svg)](https://codecov.io/gh/sandhje/vscode-phpmd)\r\n[![Join the chat at https://gitter.im/sandhje/vscode-phpmd](https://badges.gitter.im/sandhje/vscode-phpmd.svg)](https://gitter.im/sandhje/vscode-phpmd?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n## Features\r\n\r\n* Analyze your PHP source code on save with PHP mess detector\r\n* No additional setup required if PHP is installed on your system\r\n* Customize which PHPMD rules are used\r\n* Supports custom PHPMD ruleset files\r\n\r\n## Installation\r\n\r\nTo install the extension: Press `F1`, type `ext install vscode-phpmd`\r\n\r\n### Using the built-in PHPMD PHAR\r\n\r\nTo use the built-in PHP mess detector you need to have PHP in your PATH. To test, open a shell or command window and type `php -v`, this should return \"PHP x.x.x ...\". If PHP is in your PATH you can directly use this extension, no further setup is required.\r\n\r\n### Using a custom PHPMD PHAR or executable\r\n\r\nIf you want to customize the default PHP mess detector command, e.g. you have PHP mess detector globally installed through composer or have PHP available on a different location, you can customize the command with the `command` setting. \r\n\r\n## Configuration\r\n\r\nThe following configuration options are available:\r\n\r\n### phpmd.command: \r\nCustomize the PHP mess detector command. If left empty the built-in PHPMD PHAR archive will be executed and PHP needs to be available on your PATH. If you want to use a different PHPMD PHAR you can customize the command here. \r\n\r\n#### Examples:\r\nTo use PHPMD installed globally with composer on a windows machine set this setting to: \r\n```\r\n\"phpmd.command\": \"C:/Users/{USER}/AppData/Roaming/Composer/vendor/bin/phpmd.bat\"\r\n```\r\n\r\nOr to use your own PHPMD PHAR on a custom location: \r\n```\r\n\"phpmd.command\": \"php C:/path/to/phpmd.phar\"`\r\n```\r\n***Security fix in version 1.3.0:*** *Before version 1.3.0 it was possible to set `phpmd.command` through workspace settings. This unfortunately opened possibilities for a remote code execution attack. Although I recognize that some users used this workspace setting in their day to day work I feel it is more important that anyone can use this extension without worrying about their system's security. As such, since version 1.3.0, this setting is disabled at workspace level to address this issue.* \r\n\r\n### phpmd.rules: \r\n\r\nCustomize the PHPMD ruleset files used. This option can also take the path to a custom [PHPMD ruleset file](https://phpmd.org/documentation/creating-a-ruleset.html). Use VS Code's workspace settings to control the rules or ruleset files per workspace. When setting a path to a ruleset file, and the path starts with \"~/\" this will be replaced with the OS homedir. The string \"${workspaceFolder}\" in a path to a ruleset file will be replaced with an absolute path to the folder in the workspace which relates to the file that is being validated. Refer to [PHPMD's documentation](https://phpmd.org/documentation/index.html) for more information on the ruleset parameter.\r\n\r\n#### Examples:\r\nTo use only the cleancode ruleset and skip all the others: \r\n```\r\n\"phpmd.rules\": \"cleancode\"\r\n```\r\n\r\nPass a comma seperated list of rulesets: \r\n```\r\n\"phpmd.rules\": \"cleancode,codesize\"\r\n```\r\n\r\nPass the path to a ruleset file: \r\n```\r\n\"phpmd.rules\": \"C:/path/to/phpmd_config.xml\"\r\n```\r\n\r\nPass the path to a ruleset file located in the home directory: \r\n```\r\n\"phpmd.rules\": \"~/phpmd_config.xml\"\r\n```\r\n\r\nPass the path to a ruleset file located in the workspace folder: \r\n```\r\n\"phpmd.rules\": \"${workspaceFolder}/phpmd_config.xml\"\r\n```\r\n\r\n### phpmd.verbose: \r\nTurn verbose logging on or off. All log entries can be viewed VS Code's output panel. Generally this can be turned off (default) unless you need to troubleshoot problems.\r\n\r\n#### Examples:\r\nTo enable verbose logging: \r\n```\r\n\"phpmd.verbose\": true\r\n```\r\n\r\n## System requirements\r\n* PHP_Depend >= 2.0.0\r\n* PHP >= 5.3.9\r\n* [PHP XML extension](https://www.php.net/manual/en/simplexml.installation.php)\r\n\r\n## Troubleshooting\r\n* Turn on verbose logging through settings and check output\r\n* Ask a question on [gitter](https://gitter.im/sandhje/vscode-phpmd)\r\n* Found a bug? [file an issue](https://github.com/sandhje/vscode-phpmd/issues) (include the logs)\r\n\r\n## Contributing\r\n\r\nIf you found a bug or can help with adding a new feature to this extension you can submit any code through a pull request. The requirements for a pull request to be accepted are:\r\n\r\n* Add unit tests for all new code (code coverage must not drop)\r\n* Add JSDoc comments to all \"things\"\r\n* Make sure there are no TSLint violations (see tslint.json)\r\n\r\nBefore contributing also make sure you are familiar with VSCode's [language server development](https://code.visualstudio.com/docs/extensions/example-language-server)\r\n\r\nInstall all dependencies with [yarn](https://yarnpkg.com/lang/en/)\r\n\r\n## History\r\n\r\nSee client/CHANGELOG.md\r\n\r\n## Acknowledgements\r\n\r\n* The people behind [PHPMD](https://phpmd.org/people-behind.html)\r\n* The Microsoft VSCode team for [VSCode](https://code.visualstudio.com/) and [vscode-languageserver-node](https://github.com/Microsoft/vscode-languageserver-node).\r\n* Quentin Dreyer for his OS homedir replacement solution (https://github.com/qkdreyer)\r\n* Shane Smith for his spelling fixes (https://github.com/shane-smith)\r\n* Ryotek for reporting the phpmd.command security issue (https://twitter.com/ryotkak)", "{\n  \"name\": \"vscode-phpmd\",\n  \"displayName\": \"PHP Mess Detector\",\n  \"description\": \"VSCode plugin for PHP Mess Detector\",\n  \"author\": \"Ecodes.io\",\n  \"license\": \"MIT\",\n  \"version\": \"1.2.0\",\n  \"publisher\": \"ecodes\",\n  \"engines\": {\n    \"vscode\": \"^1.8.0\"\n  },\n  \"categories\": [\n    \"Linters\"\n  ],\n  \"activationEvents\": [\n    \"onLanguage:php\"\n  ],\n  \"keywords\": [\n    \"php\",\n    \"phpmd\",\n    \"mess detector\",\n    \"diagnostics\",\n    \"linter\"\n  ],\n  \"bugs\": {\n    \"url\": \"https://github.com/sandhje/vscode-phpmd/issues\"\n  },\n  \"homepage\": \"https://github.com/sandhje/vscode-phpmd\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/sandhje/vscode-phpmd.git\"\n  },\n  \"icon\": \"images/vscode-phpmd.png\",\n  \"main\": \"./out/client/client\",\n  \"contributes\": {\n    \"configuration\": {\n      \"type\": \"object\",\n      \"title\": \"PHP Mess Detector configuration\",\n      \"properties\": {\n        \"phpmd.enabled\": {\n          \"type\": \"boolean\",\n          \"default\": true,\n          \"description\": \"Enable mess detector\"\n        },\n        \"phpmd.command\": {\n          \"type\": \"string\",\n          \"scope\": \"machine\",\n          \"default\": \"\",\n          \"description\": \"The phpmd command. Leave empty to use the shipped phpmd phar (local php executable is required)\"\n        },\n        \"phpmd.rules\": {\n          \"type\": \"string\",\n          \"default\": \"cleancode,codesize,controversial,design,unusedcode,naming\",\n          \"description\": \"Phpmd ruleset (comma separated list of rulesets or the location of a config file)\"\n        },\n        \"phpmd.verbose\": {\n          \"type\": \"boolean\",\n          \"default\": false,\n          \"description\": \"Enable verbose logging\"\n        },\n        \"phpmd.clearOnClose\": {\n          \"type\": \"boolean\",\n          \"default\": true,\n          \"description\": \"Clear diagnostics for a file upon closing it\"\n        }\n      }\n    }\n  },\n  \"scripts\": {\n    \"vscode:prepublish\": \"tsc -p ./\",\n    \"test\": \"nyc mocha --opts mocha.opts\",\n    \"report-coverage\": \"nyc report --reporter=json\",\n    \"compile\": \"tsc -p .\",\n    \"watch\": \"tsc --watch -p .\"\n  },\n  \"devDependencies\": {\n    \"@types/chai\": \"^4.2.5\",\n    \"@types/mocha\": \"^5.2.7\",\n    \"@types/node\": \"^12.12.11\",\n    \"@types/sinon\": \"^7.5.1\",\n    \"@types/xml2js\": \"^0.4.5\",\n    \"@types/vscode\": \"^1.37.0\",\n    \"chai\": \"^4.2.0\",\n    \"codecov.io\": \"^0.1.6\",\n    \"mocha\": \"^6.2.2\",\n    \"mocha-typescript\": \"^1.0.15\",\n    \"nyc\": \"^14.1.1\",\n    \"sinon\": \"^7.5.0\",\n    \"source-map-support\": \"^0.5.16\",\n    \"ts-node\": \"^8.5.2\",\n    \"tslint\": \"^5.20.1\",\n    \"typescript\": \"3.7.2\"\n  },\n  \"dependencies\": {\n    \"@open-sourcerers/j-stillery\": \"^0.2.0\",\n    \"vscode-languageclient\": \"^5.2.1\",\n    \"vscode-languageserver\": \"^5.2.1\",\n    \"vscode-uri\": \"^2.1.1\",\n    \"xml2js\": \"^0.4.17\"\n  },\n  \"nyc\": {\n    \"include\": [\n      \"server/*.ts\",\n      \"server/**/*.ts\"\n    ],\n    \"extension\": [\n      \".ts\"\n    ],\n    \"require\": [\n      \"ts-node/register\"\n    ],\n    \"reporter\": [\n      \"text-summary\"\n    ],\n    \"sourceMap\": true,\n    \"instrument\": true\n  }\n}\n"], "filenames": ["README.md", "package.json"], "buggy_code_start_loc": [42, 46], "buggy_code_end_loc": [114, 46], "fixing_code_start_loc": [43, 47], "fixing_code_end_loc": [117, 48], "type": "NVD-CWE-noinfo", "message": "The unofficial vscode-phpmd (aka PHP Mess Detector) extension before 1.3.0 for Visual Studio Code allows remote attackers to execute arbitrary code via a crafted phpmd.command value in a workspace folder.", "other": {"cve": {"id": "CVE-2021-30124", "sourceIdentifier": "cve@mitre.org", "published": "2021-07-30T14:15:16.380", "lastModified": "2022-06-28T14:11:45.273", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The unofficial vscode-phpmd (aka PHP Mess Detector) extension before 1.3.0 for Visual Studio Code allows remote attackers to execute arbitrary code via a crafted phpmd.command value in a workspace folder."}, {"lang": "es", "value": "La extensi\u00f3n no oficial vscode-phpmd (tambi\u00e9n se conoce como PHP Mess Detector) versiones anteriores a 1.3.0 para Visual Studio Code, permite a atacantes remotos ejecutar c\u00f3digo arbitrario por medio de un valor phpmd.command dise\u00f1ado en una carpeta del workspace"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:vscode-phpmd_project:vscode-phpmd:*:*:*:*:*:visual_studio_code:*:*", "versionEndExcluding": "1.3.0", "matchCriteriaId": "B03488EE-CF10-49A2-9347-4C98DF6C6F16"}]}]}], "references": [{"url": "https://github.com/sandhje/vscode-phpmd/commit/c462bf5c6f0160d0199855d5f8ed76be8d9beac0", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://marketplace.visualstudio.com/items?itemName=ecodes.vscode-phpmd", "source": "cve@mitre.org", "tags": ["Product"]}, {"url": "https://vuln.ryotak.me/advisories/25", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/sandhje/vscode-phpmd/commit/c462bf5c6f0160d0199855d5f8ed76be8d9beac0"}}