{"buggy_code": ["version: '3.7'\n\nvolumes:\n  kong_data: {}\n\nnetworks:\n  kong-net:\n    external: false\n\nservices:\n  kong-migrations:\n    image: \"${KONG_DOCKER_TAG:-kong:latest}\"\n    command: kong migrations bootstrap\n    depends_on:\n      - db\n    environment:\n      KONG_DATABASE: postgres\n      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}\n      KONG_PG_HOST: db\n      KONG_PG_USER: ${KONG_PG_USER:-kong}\n      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password\n    secrets:\n      - kong_postgres_password\n    networks:\n      - kong-net\n    restart: on-failure\n    deploy:\n      restart_policy:\n        condition: on-failure\n\n  kong-migrations-up:\n    image: \"${KONG_DOCKER_TAG:-kong:latest}\"\n    command: kong migrations up && kong migrations finish\n    depends_on:\n      - db\n    environment:\n      KONG_DATABASE: postgres\n      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}\n      KONG_PG_HOST: db\n      KONG_PG_USER: ${KONG_PG_USER:-kong}\n      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password\n    secrets:\n      - kong_postgres_password\n    networks:\n      - kong-net\n    restart: on-failure\n    deploy:\n      restart_policy:\n        condition: on-failure\n\n  kong:\n    image: \"${KONG_DOCKER_TAG:-kong:latest}\"\n    user: \"${KONG_USER:-kong}\"\n    depends_on:\n      - db\n    environment:\n      KONG_ADMIN_ACCESS_LOG: /dev/stdout\n      KONG_ADMIN_ERROR_LOG: /dev/stderr\n      KONG_ADMIN_LISTEN: '0.0.0.0:8001'\n      KONG_CASSANDRA_CONTACT_POINTS: db\n      KONG_DATABASE: postgres\n      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}\n      KONG_PG_HOST: db\n      KONG_PG_USER: ${KONG_PG_USER:-kong}\n      KONG_PROXY_ACCESS_LOG: /dev/stdout\n      KONG_PROXY_ERROR_LOG: /dev/stderr\n      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password\n    secrets:\n      - kong_postgres_password\n    networks:\n      - kong-net\n    ports:\n      - \"8000:8000/tcp\"\n      - \"8001:8001/tcp\"\n      - \"8443:8443/tcp\"\n      - \"8444:8444/tcp\"\n    healthcheck:\n      test: [\"CMD\", \"kong\", \"health\"]\n      interval: 10s\n      timeout: 10s\n      retries: 10\n    restart: on-failure\n    deploy:\n      restart_policy:\n        condition: on-failure\n    \n  db:\n    image: postgres:9.5\n    environment:\n      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}\n      POSTGRES_USER: ${KONG_PG_USER:-kong}\n      POSTGRES_PASSWORD_FILE: /run/secrets/kong_postgres_password\n    secrets:\n      - kong_postgres_password\n    healthcheck:\n      test: [\"CMD\", \"pg_isready\", \"-U\", \"${KONG_PG_USER:-kong}\"]\n      interval: 30s\n      timeout: 30s\n      retries: 3\n    restart: on-failure\n    deploy:\n      restart_policy:\n        condition: on-failure\n    stdin_open: true\n    tty: true\n    networks:\n      - kong-net\n    volumes:\n      - kong_data:/var/lib/postgresql/data\n\nsecrets:\n  kong_postgres_password:\n    file: ./POSTGRES_PASSWORD\n", "#!/bin/bash\n\nset -ex\n\n# Test the proper version was buid\npushd $BASE\nversion_given=\"$(grep -o -P '(?<=-).*(?=})' build-ce.sh)\"\nversion_built=\"$(docker run -ti --rm kong-$BASE kong version | tr -d '[:space:]')\"\n\nif [[ \"$version_given\" != \"$version_built\" ]]; then\n  echo \"Kong version mismatch:\";\n  echo \"\\tVersion given is $version_given\";\n  echo \"\\tVersion built is $version_built\";\n  exit 1;\nfi\n\npopd\n\n# Docker swarm test\n\npushd compose\ndocker swarm init\nKONG_DOCKER_TAG=kong:1.5.0 docker stack deploy -c<(curl -fsSL https://raw.githubusercontent.com/Kong/docker-kong/1.5.0/swarm/docker-compose.yml) kong\nuntil docker ps | grep kong:1.5.0 | grep -q healthy;  do\n  docker stack ps kong\n  docker service ps kong_kong\n  sleep 20\ndone\n\nsleep 20\ncurl -I localhost:8001 | grep 'Server: openresty'\n\nKONG_DOCKER_TAG=${KONG_DOCKER_TAG} docker stack deploy -c docker-compose.yml kong\nsleep 20\nuntil docker ps | grep ${KONG_DOCKER_TAG}:latest | grep -q healthy; do\n  docker stack ps kong\n  docker service ps kong_kong\n  sleep 20\ndone\n\nsleep 20\ncurl -I localhost:8001 | grep 'Server: openresty'\n\ndocker stack rm kong\nsleep 20\ndocker swarm leave --force\ndocker volume prune -f\npopd\n\n# Validate Kong is running as the Kong user\npushd compose\ndocker-compose up -d\nuntil docker-compose ps | grep compose_kong_1 | grep -q \"Up\"; do sleep 1; done\nsleep 20\ndocker-compose exec kong ps aux | sed -n 2p | grep -q kong\nif [ $? -ne 0 ]; then\n  echo \"Kong is not running as the Kong user\";\n  echo \"\\tRunning instead as \";\n  docker-compose exec kong ps aux | sed -n 2p\n  exit 1;\nfi\n\nKONG_USER=1001 docker-compose up -d\nuntil docker-compose ps | grep compose_kong_1 | grep -q \"Up\"; do sleep 1; done\nsleep 20\ndocker-compose exec kong ps aux | sed -n 2p | grep -q 1001\nif [ $? -ne 0 ]; then\n  echo \"Kong is not running as the overridden 1001 user\";\n  echo \"\\tRunning instead as \";\n  docker-compose exec kong ps aux | sed -n 2p\n  exit 1;\nfi\ndocker-compose stop\n\npopd\n\n# Run Kong functional tests\n\ngit clone https://github.com/Kong/kong.git || true\npushd kong\ngit checkout $version_given\npopd\n\npushd kong-build-tools\nrm -rf test/tests/03-go-plugins\nKONG_VERSION=$version_given KONG_TEST_IMAGE_NAME=kong-$BASE RESTY_IMAGE_TAG=$BASE make test\npopd\n"], "fixing_code": ["version: '3.7'\n\nvolumes:\n  kong_data: {}\n\nnetworks:\n  kong-net:\n    external: false\n\nservices:\n  kong-migrations:\n    image: \"${KONG_DOCKER_TAG:-kong:latest}\"\n    command: kong migrations bootstrap\n    depends_on:\n      - db\n    environment:\n      KONG_DATABASE: postgres\n      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}\n      KONG_PG_HOST: db\n      KONG_PG_USER: ${KONG_PG_USER:-kong}\n      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password\n    secrets:\n      - kong_postgres_password\n    networks:\n      - kong-net\n    restart: on-failure\n    deploy:\n      restart_policy:\n        condition: on-failure\n\n  kong-migrations-up:\n    image: \"${KONG_DOCKER_TAG:-kong:latest}\"\n    command: kong migrations up && kong migrations finish\n    depends_on:\n      - db\n    environment:\n      KONG_DATABASE: postgres\n      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}\n      KONG_PG_HOST: db\n      KONG_PG_USER: ${KONG_PG_USER:-kong}\n      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password\n    secrets:\n      - kong_postgres_password\n    networks:\n      - kong-net\n    restart: on-failure\n    deploy:\n      restart_policy:\n        condition: on-failure\n\n  kong:\n    image: \"${KONG_DOCKER_TAG:-kong:latest}\"\n    user: \"${KONG_USER:-kong}\"\n    depends_on:\n      - db\n    environment:\n      KONG_ADMIN_ACCESS_LOG: /dev/stdout\n      KONG_ADMIN_ERROR_LOG: /dev/stderr\n      KONG_ADMIN_LISTEN: '0.0.0.0:8001'\n      KONG_CASSANDRA_CONTACT_POINTS: db\n      KONG_DATABASE: postgres\n      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}\n      KONG_PG_HOST: db\n      KONG_PG_USER: ${KONG_PG_USER:-kong}\n      KONG_PROXY_ACCESS_LOG: /dev/stdout\n      KONG_PROXY_ERROR_LOG: /dev/stderr\n      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password\n    secrets:\n      - kong_postgres_password\n    networks:\n      - kong-net\n    ports:\n      - \"8000:8000/tcp\"\n      - \"127.0.0.1:8001:8001/tcp\"\n      - \"8443:8443/tcp\"\n      - \"127.0.0.1:8444:8444/tcp\"\n    healthcheck:\n      test: [\"CMD\", \"kong\", \"health\"]\n      interval: 10s\n      timeout: 10s\n      retries: 10\n    restart: on-failure\n    deploy:\n      restart_policy:\n        condition: on-failure\n    \n  db:\n    image: postgres:9.5\n    environment:\n      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}\n      POSTGRES_USER: ${KONG_PG_USER:-kong}\n      POSTGRES_PASSWORD_FILE: /run/secrets/kong_postgres_password\n    secrets:\n      - kong_postgres_password\n    healthcheck:\n      test: [\"CMD\", \"pg_isready\", \"-U\", \"${KONG_PG_USER:-kong}\"]\n      interval: 30s\n      timeout: 30s\n      retries: 3\n    restart: on-failure\n    deploy:\n      restart_policy:\n        condition: on-failure\n    stdin_open: true\n    tty: true\n    networks:\n      - kong-net\n    volumes:\n      - kong_data:/var/lib/postgresql/data\n\nsecrets:\n  kong_postgres_password:\n    file: ./POSTGRES_PASSWORD\n", "#!/bin/bash\n\nset -ex\n\n# Test the proper version was buid\npushd $BASE\nversion_given=\"$(grep -o -P '(?<=-).*(?=})' build-ce.sh)\"\nversion_built=\"$(docker run -ti --rm kong-$BASE kong version | tr -d '[:space:]')\"\n\nif [[ \"$version_given\" != \"$version_built\" ]]; then\n  echo \"Kong version mismatch:\";\n  echo \"\\tVersion given is $version_given\";\n  echo \"\\tVersion built is $version_built\";\n  exit 1;\nfi\n\npopd\n\n# Docker swarm test\n\npushd compose\ndocker swarm init\nKONG_DOCKER_TAG=kong:1.5.0 docker stack deploy -c<(curl -fsSL https://raw.githubusercontent.com/Kong/docker-kong/1.5.0/swarm/docker-compose.yml) kong\nuntil docker ps | grep kong:1.5.0 | grep -q healthy;  do\n  docker stack ps kong\n  docker service ps kong_kong\n  sleep 20\ndone\n\nsleep 20\ncurl -I localhost:8001 | grep 'Server: openresty'\nsed -i -e 's/127.0.0.1://g' docker-compose.yml\nKONG_DOCKER_TAG=${KONG_DOCKER_TAG} docker stack deploy -c docker-compose.yml kong\nsleep 20\nuntil docker ps | grep ${KONG_DOCKER_TAG}:latest | grep -q healthy; do\n  docker stack ps kong\n  docker service ps kong_kong\n  sleep 20\ndone\n\nsleep 20\ncurl -I localhost:8001 | grep 'Server: openresty'\n\ndocker stack rm kong\nsleep 20\ndocker swarm leave --force\ndocker volume prune -f\ngit checkout -- docker-compose.yml\npopd\n\n# Validate Kong is running as the Kong user\npushd compose\ndocker-compose up -d\nuntil docker-compose ps | grep compose_kong_1 | grep -q \"Up\"; do sleep 1; done\nsleep 20\ndocker-compose exec kong ps aux | sed -n 2p | grep -q kong\nif [ $? -ne 0 ]; then\n  echo \"Kong is not running as the Kong user\";\n  echo \"\\tRunning instead as \";\n  docker-compose exec kong ps aux | sed -n 2p\n  exit 1;\nfi\n\nKONG_USER=1001 docker-compose up -d\nuntil docker-compose ps | grep compose_kong_1 | grep -q \"Up\"; do sleep 1; done\nsleep 20\ndocker-compose exec kong ps aux | sed -n 2p | grep -q 1001\nif [ $? -ne 0 ]; then\n  echo \"Kong is not running as the overridden 1001 user\";\n  echo \"\\tRunning instead as \";\n  docker-compose exec kong ps aux | sed -n 2p\n  exit 1;\nfi\ndocker-compose stop\n\npopd\n\n# Run Kong functional tests\n\ngit clone https://github.com/Kong/kong.git || true\npushd kong\ngit checkout $version_given\npopd\n\npushd kong-build-tools\nrm -rf test/tests/03-go-plugins\nKONG_VERSION=$version_given KONG_TEST_IMAGE_NAME=kong-$BASE RESTY_IMAGE_TAG=$BASE make test\npopd\n"], "filenames": ["compose/docker-compose.yml", "tests.sh"], "buggy_code_start_loc": [74, 32], "buggy_code_end_loc": [77, 47], "fixing_code_start_loc": [74, 32], "fixing_code_end_loc": [77, 49], "type": "NVD-CWE-Other", "message": "** DISPUTED ** An issue was discovered in docker-kong (for Kong) through 2.0.3. The admin API port may be accessible on interfaces other than 127.0.0.1. NOTE: The vendor argue that this CVE is not a vulnerability because it has an inaccurate bug scope and patch links. \u201c1) Inaccurate Bug Scope - The issue scope was on Kong's docker-compose template, and not Kong's docker image itself. In reality, this issue is not associated with any version of the Kong gateway. As such, the description stating \u2018An issue was discovered in docker-kong (for Kong) through 2.0.3.\u2019 is incorrect. This issue only occurs if a user decided to spin up Kong via docker-compose without following the security documentation. The docker-compose template is meant for users to quickly get started with Kong, and is meant for development purposes only. 2) Incorrect Patch Links - The CVE currently points to a documentation improvement as a \u201cPatch\u201d link: https://github.com/Kong/docs.konghq.com/commit/d693827c32144943a2f45abc017c1321b33ff611.This link actually points to an improvement Kong Inc made for fool-proofing. However, instructions for how to protect the admin API were already well-documented here: https://docs.konghq.com/2.0.x/secure-admin-api/#network-layer-access-restrictions , which was first published back in 2017 (as shown in this commit: https://github.com/Kong/docs.konghq.com/commit/e99cf875d875dd84fdb751079ac37882c9972949) Lastly, the hyperlink to https://github.com/Kong/kong (an unrelated Github Repo to this issue) on the Hyperlink list does not include any meaningful information on this topic.\u201d", "other": {"cve": {"id": "CVE-2020-11710", "sourceIdentifier": "cve@mitre.org", "published": "2020-04-12T17:15:10.737", "lastModified": "2020-05-21T15:15:09.593", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "** DISPUTED ** An issue was discovered in docker-kong (for Kong) through 2.0.3. The admin API port may be accessible on interfaces other than 127.0.0.1. NOTE: The vendor argue that this CVE is not a vulnerability because it has an inaccurate bug scope and patch links. \u201c1) Inaccurate Bug Scope - The issue scope was on Kong's docker-compose template, and not Kong's docker image itself. In reality, this issue is not associated with any version of the Kong gateway. As such, the description stating \u2018An issue was discovered in docker-kong (for Kong) through 2.0.3.\u2019 is incorrect. This issue only occurs if a user decided to spin up Kong via docker-compose without following the security documentation. The docker-compose template is meant for users to quickly get started with Kong, and is meant for development purposes only. 2) Incorrect Patch Links - The CVE currently points to a documentation improvement as a \u201cPatch\u201d link: https://github.com/Kong/docs.konghq.com/commit/d693827c32144943a2f45abc017c1321b33ff611.This link actually points to an improvement Kong Inc made for fool-proofing. However, instructions for how to protect the admin API were already well-documented here: https://docs.konghq.com/2.0.x/secure-admin-api/#network-layer-access-restrictions , which was first published back in 2017 (as shown in this commit: https://github.com/Kong/docs.konghq.com/commit/e99cf875d875dd84fdb751079ac37882c9972949) Lastly, the hyperlink to https://github.com/Kong/kong (an unrelated Github Repo to this issue) on the Hyperlink list does not include any meaningful information on this topic.\u201d"}, {"lang": "es", "value": "** EN DISPUTA ** Se descubri\u00f3 un problema en docker-kong (para Kong) hasta la versi\u00f3n 2.0.3. El puerto API de administrador puede ser accesible en interfaces que no sean 127.0.0.1. NOTA: El proveedor argumenta que este CVE no es una vulnerabilidad porque tiene un alcance de error y enlaces de parche imprecisos. \u201c1) Alcance de error inexacto: el alcance del problema estaba en la plantilla de compilaci\u00f3n de acoplador de Kong, y no en la imagen de acoplador de Kong en s\u00ed. En realidad, este problema no est\u00e1 asociado con ninguna versi\u00f3n de la puerta de enlace Kong. Como tal, la descripci\u00f3n que indica \"Se descubri\u00f3 un problema en docker-kong (para Kong) a trav\u00e9s de 2.0.3.\" Es incorrecta. Este problema solo ocurre si un usuario decidi\u00f3 girar Kong a trav\u00e9s de Docker-compose sin seguir la documentaci\u00f3n de seguridad. La plantilla Docker-compose est\u00e1 dise\u00f1ada para que los usuarios comiencen r\u00e1pidamente con Kong, y solo para fines de desarrollo. 2) Enlaces de parches incorrectos: el CVE actualmente apunta a una mejora de la documentaci\u00f3n como un enlace de \"Parche\": https://github.com/Kong/docs.konghq.com/commit/d693827c32144943a2f45abc017c1321b33ff611 Este enlace en realidad apunta a una mejora que Kong Inc hizo para la prueba de tontos. Sin embargo, las instrucciones sobre c\u00f3mo proteger la API de administraci\u00f3n ya estaban bien documentadas aqu\u00ed: https://docs.konghq.com/2.0.x/secure-admin-api/#network-layer-access-restrictions, que se public\u00f3 por primera vez en 2017 (como se muestra en esta confirmaci\u00f3n: https://github.com/Kong/docs.konghq.com/commit/e99cf875d875dd84fdb751079ac37882c9972949) Por \u00faltimo, el hiperv\u00ednculo a https://github.com/Kong/kong (un repositorio de Github no relacionado con este problema) en la lista de hiperv\u00ednculos no incluye ninguna informaci\u00f3n significativa sobre este tema \"."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-Other"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:konghq:docker-kong:*:*:*:*:*:kong:*:*", "versionEndIncluding": "2.0.3", "matchCriteriaId": "7410A9B7-24FE-417D-8FEA-E9B4EF3F6352"}]}]}], "references": [{"url": "https://github.com/Kong/docker-kong/commit/dfa095cadf7e8309155be51982d8720daf32e31c", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/Kong/docs.konghq.com/commit/d693827c32144943a2f45abc017c1321b33ff611", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/Kong/docs.konghq.com/commit/e99cf875d875dd84fdb751079ac37882c9972949", "source": "cve@mitre.org"}, {"url": "https://github.com/Kong/kong", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Kong/docker-kong/commit/dfa095cadf7e8309155be51982d8720daf32e31c"}}