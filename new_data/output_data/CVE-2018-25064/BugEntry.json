{"buggy_code": ["<!DOCTYPE html>\n<html>\n<head>\n    <title>Show Me The Way</title>\n    <meta charset='utf-8' />\n    <link rel='stylesheet' href='//cdnjs.cloudflare.com/ajax/libs/leaflet/0.5/leaflet.css' />\n    <link rel='stylesheet' href='css/style.css' />\n    <link rel='stylesheet' href='css/site.css' />\n    <!--[if lte IE 8]><link rel='stylesheet' href='http://cdn.leafletjs.com/leaflet-0.5/leaflet.ie.css' /><![endif]-->\n    <link href='//fonts.googleapis.com/css?family=Open+Sans:400,700|Open+Sans+Condensed:700' rel='stylesheet' type='text/css'>\n\n</head>\n<body>\n<div class='container'>\n    <div class='sq overlay round'>\n        <div id='overview_map'></div>\n        <p class='pad2 change-meta' id='reverse-location'></p>\n    </div>\n    <div class='overlay align-bottom'>\n        <div class='pad2' id='changeset_info'></div>\n        <p class='pad2 change-meta' id='comment'></p>\n    </div>\n    <div class='indicator' id='queuesize'></div>\n    <div id='map' class='col12 full-height'></div>\n    <a href='http://openstreetmap.org/' class='byosm'></a>\n</div>\n    <script id='changeset-template' type='template'>\n<% var past_tense = { modify: 'modified', create: 'created', 'delete': 'deleted' }; %>\n<p><a target='_blank' href='//openstreetmap.org/browse/changeset/<%=change.meta.changeset%>'><%=change.timetext%></a> <a target='_blank' href='//openstreetmap.org/user/<%= change.meta.user %>'><%= change.meta.user %></a>\n     <%= past_tense[change.type] %> <a target='_blank' href='//openstreetmap.org/browse/<%= change.meta.type %>/<%= change.meta.id %>'><%= change.tagtext %></a>\n    </p>\n    </script>\n    <script src='//cdnjs.cloudflare.com/ajax/libs/leaflet/0.5/leaflet.js'></script>\n    <script src='js/Bing.js'></script>\n    <script src='js/bundle.js'></script>\n    <script type=\"text/javascript\">\n\n      var _gaq = _gaq || [];\n      _gaq.push(['_setAccount', 'UA-39286611-2']);\n      _gaq.push(['_trackPageview']);\n\n      (function() {\n        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n      })();\n\n    </script>\n</body>\n</html>\n", "\"use strict\";\n\nvar osmStream = require('osm-stream'),\n    reqwest = require('reqwest'),\n    moment = require('moment'),\n    _ = require('underscore'),\n    LRU = require('lru-cache'),\n    query_string = require('querystring');\n\nvar bboxArray = [\"-90.0\", \"-180.0\", \"90.0\", \"180.0\"];\nvar mapCenter = [51.505, -0.09];\nvar filteredBbox = false;\nvar changeset_comment_match = null;\nif (location.hash) {\n    var parsed_hash = query_string.parse(location.hash.replace('#', ''));\n    if (parsed_hash.length === 1 && parsed_hash[Object.keys(parsed_hash)[0]] === null) {\n        // To be backwards compatible with pages that assumed the only\n        // item in the hash would be the bbox\n        bboxArray = Object.keys(parsed_hash)[0].split(',');\n    } else {\n        if (parsed_hash.bounds) {\n            bboxArray = parsed_hash.bounds.split(',');\n            filteredBbox = true;\n        }\n        if (parsed_hash.comment) {\n            changeset_comment_match = parsed_hash.comment;\n            document.title += ' #' + changeset_comment_match;\n        }\n    }\n}\n\nvar bbox = makeBbox(bboxArray);\nvar bboxString = null;\nif (filteredBbox && isBboxSizeAcceptable(bbox)) {\n    bboxString = bbox.toBBoxString();\n}\n\nvar ignore = ['bot-mode'];\nvar BING_KEY = 'Arzdiw4nlOJzRwOz__qailc8NiR31Tt51dN2D7cm57NrnceZnCpgOkmJhNpGoppU';\n\nvar map = L.map('map', {\n    zoomControl: false,\n    dragging: false,\n    scrollWheelZoom: false,\n    doubleClickZoom: false,\n    boxZoom: false\n});\nif (filteredBbox) {\n    map.fitBounds(bbox);\n} else {\n    map.setView(mapCenter, 13);\n}\n\nvar overview_map = L.map('overview_map', {\n    zoomControl: false,\n    dragging: false,\n    touchZoom: false,\n    scrollWheelZoom: false,\n    doubleClickZoom: false,\n    boxZoom: false,\n    minZoom: 4,\n    maxZoom: 8\n});\nif (filteredBbox) {\n    overview_map.fitBounds(bbox);\n} else {\n    overview_map.setView(mapCenter, 4);\n}\n\nvar bing = new L.BingLayer(BING_KEY, 'Aerial').addTo(map);\n\nvar osm = new L.TileLayer('https://api.mapbox.com/styles/v1/openstreetmapus/cj8xtgojqhd3z2sorzpi01csj/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1Ijoib3BlbnN0cmVldG1hcHVzIiwiYSI6ImNpc2x0eGF1MjBhZTIydXB1eTkxbTdrdXoifQ.9reDkEfppIvAOfAD3tRDJQ', {\n    minZoom: 4,\n    maxZoom: 8,\n    attribution: '<a href=\"https://mapbox.com/about/maps/\">Terms &amp; Conditions</a>'\n}).addTo(overview_map);\n\nvar lineGroup = L.featureGroup().addTo(map);\n\nvar changeset_info = document.getElementById('changeset_info');\nvar changeset_tmpl = _.template(document.getElementById('changeset-template').innerHTML);\nvar queue = [];\nvar changeset_cache = LRU(50);\n\n// Remove Leaflet shoutouts\nmap.attributionControl.setPrefix('');\noverview_map.attributionControl.setPrefix('');\n\nchangeset_info.innerHTML = '<div class=\"loading\">loading...</div>';\n\nvar lastLocation = L.latLng(0, 0);\n\nfunction isBboxSizeAcceptable(bbox) { // heuristic to fetch\n    var width = Math.abs(bbox.getSouthWest().lat - bbox.getNorthEast().lat);\n    var height = Math.abs(bbox.getSouthWest().lng - bbox.getNorthEast().lng);\n    // A guesstimate of the maximum filtered area size that the server would accept.\n    // For larger areas, we fall back to the global (server-cached) change file\n    // ...and we process it client-side as usual.\n    return (width * height) < 2;\n}\n\nfunction farFromLast(c) {\n    try {\n        return lastLocation.distanceTo(c) > 1000;\n    } finally {\n        lastLocation = c;\n    }\n}\n\nfunction showLocation(ll) {\n    var nominatim_tmpl = '//nominatim.openstreetmap.org/reverse?format=json' +\n        '&lat={lat}&lon={lon}&zoom=5';\n    reqwest({\n        url: nominatim_tmpl.replace('{lat}', ll.lat).replace('{lon}', ll.lng),\n        crossOrigin: true,\n        type: 'json'\n    }, function(resp) {\n        document.getElementById('reverse-location').innerHTML =\n            '' + resp.display_name + '';\n    });\n}\n\nfunction fetchChangesetData(id, callback) {\n    var cached_changeset_data = changeset_cache.get(id);\n\n    if (!cached_changeset_data) {\n        var changeset_url_tmpl = '//www.openstreetmap.org/api/0.6/changeset/{id}';\n        reqwest({\n            url: changeset_url_tmpl.replace('{id}', id),\n            crossOrigin: true,\n            type: 'xml'\n        }, function(resp) {\n            var changeset_data = {};\n            var tags = resp.getElementsByTagName('tag');\n            for (var i = 0; i < tags.length; i++) {\n                var key = tags[i].getAttribute('k');\n                var value = tags[i].getAttribute('v');\n                changeset_data[key] = value;\n            }\n            changeset_cache.set(id, changeset_data);\n            callback(null, changeset_data);\n        });\n    } else {\n        callback(null, cached_changeset_data);\n    }\n}\n\nfunction showComment(id) {\n    fetchChangesetData(id, function(err, changeset_data) {\n        document.getElementById('comment').innerHTML = changeset_data.comment + ' in ' + changeset_data.created_by;\n    });\n}\n\nfunction makeBbox(bounds_array) {\n    return new L.LatLngBounds(\n        new L.LatLng(bounds_array[0], bounds_array[1]),\n        new L.LatLng(bounds_array[2], bounds_array[3])\n    );\n}\n\nvar runSpeed = 2000;\n\nosmStream.runFn(function(err, data) {\n    queue = _.filter(data, function(f) {\n        var is_a_way = (f.old && f.old.type === 'way') || (f.neu && f.neu.type === 'way');\n        if (is_a_way) {\n            var bbox_intersects_old = (f.old && f.old.bounds && bbox.intersects(makeBbox(f.old.bounds)));\n            var bbox_intersects_new = (f.neu && f.neu.bounds && bbox.intersects(makeBbox(f.neu.bounds)));\n            var happened_today = moment((f.neu && f.neu.timestamp) || (f.neu && f.neu.timestamp)).format(\"MMM Do YY\") === moment().format(\"MMM Do YY\");\n            var user_not_ignored = (f.old && ignore.indexOf(f.old.user) === -1) || (f.neu && ignore.indexOf(f.neu.user) === -1);\n            var way_long_enough = (f.old && f.old.linestring && f.old.linestring.length > 4) || (f.neu && f.neu.linestring && f.neu.linestring.length > 4);\n            return is_a_way &&\n                (bbox_intersects_old || bbox_intersects_new) &&\n                happened_today &&\n                user_not_ignored &&\n                way_long_enough;\n        } else {\n            return false;\n        }\n    }).sort(function(a, b) {\n        return (+new Date((a.neu && a.neu.timestamp) || (a.neu && a.neu.timestamp))) -\n            (+new Date((b.neu && b.neu.timestamp) || (b.neu && b.neu.timestamp)));\n    });\n    // if (queue.length > 2000) queue = queue.slice(0, 2000);\n    runSpeed = 1500;\n}, null, null, bboxString);\n\nfunction doDrawWay() {\n    document.getElementById('queuesize').innerHTML = queue.length;\n    if (queue.length) {\n        var change = queue.pop();\n        var way = change.neu || change.old;\n\n        // Skip ways that are part of a changeset we don't care about\n        if (changeset_comment_match && way.changeset) {\n            fetchChangesetData(way.changeset, function(err, changeset_data) {\n                if (err) {\n                    console.log(\"Error filtering changeset: \" + err);\n                    doDrawWay();\n                    return;\n                }\n\n                if (changeset_data.comment && changeset_data.comment.indexOf(changeset_comment_match) > -1) {\n                    console.log(\"Drawing way \" + way.id);\n                    drawWay(change, function() {\n                        doDrawWay();\n                    });\n                } else {\n                    console.log(\"Skipping way \" + way.id + \" because changeset \" + way.changeset + \" didn't match \" + changeset_comment_match);\n                    doDrawWay();\n                }\n            });\n        } else {\n            drawWay(change, function() {\n                doDrawWay();\n            });\n        }\n    } else {\n        window.setTimeout(doDrawWay, runSpeed);\n    }\n}\n\nfunction pruneLines() {\n    var mb = map.getBounds();\n    lineGroup.eachLayer(function(l) {\n        if (!mb.intersects(l.getBounds())) {\n            lineGroup.removeLayer(l);\n        } else {\n            l.setStyle({ opacity: 0.5 });\n        }\n    });\n}\n\nfunction setTagText(change) {\n    var showTags = ['building', 'natural', 'leisure', 'waterway',\n        'barrier', 'landuse', 'highway', 'power'];\n    for (var i = 0; i < showTags.length; i++) {\n        var tags = change.type === 'delete' ? change.old.tags : change.neu.tags;\n        if (tags[showTags[i]]) {\n            change.tagtext = showTags[i] + '=' + tags[showTags[i]];\n            return change;\n        }\n    }\n    change.tagtext = 'a way';\n    return change;\n}\n\nfunction drawWay(change, cb) {\n    pruneLines();\n\n    var way = change.type === 'delete' ? change.old : change.neu;\n    change.meta = {\n        id: way.id,\n        type: way.type,\n        // Always pull in the new side user, timestamp, and changeset info\n        user: change.neu.user,\n        changeset: change.neu.changeset\n    };\n\n    // Zoom to the area in question\n    var bounds = makeBbox(way.bounds);\n\n    if (farFromLast(bounds.getCenter())) showLocation(bounds.getCenter());\n    showComment(change.neu.changeset);\n\n    var timedate = moment(change.neu.timestamp);\n    change.timetext = timedate.fromNow();\n\n    map.fitBounds(bounds);\n    overview_map.panTo(bounds.getCenter());\n    setTagText(change);\n    changeset_info.innerHTML = changeset_tmpl({ change: change });\n\n    var color = { 'create': '#B7FF00', 'modify': '#FF00EA', 'delete': '#FF0000' }[change.type];\n    var newLine;\n    if (way.tags.building || way.tags.area) {\n        newLine = L.polygon([], {\n            opacity: 1,\n            color: color,\n            fill: color\n        }).addTo(lineGroup);\n    } else {\n        newLine = L.polyline([], {\n            opacity: 1,\n            color: color\n        }).addTo(lineGroup);\n    }\n    // This is a bit lower than 3000 because we want the whole way\n    // to stay on the screen for a bit before moving on.\n    var perPt = runSpeed / way.linestring.length;\n\n    function drawPt(pt) {\n        newLine.addLatLng(pt);\n        if (way.linestring.length) {\n            window.setTimeout(function() {\n                drawPt(way.linestring.pop());\n            }, perPt);\n        } else {\n            window.setTimeout(cb, perPt * 2);\n        }\n    }\n\n    newLine.addLatLng(way.linestring.pop());\n    drawPt(way.linestring.pop());\n}\n\ndoDrawWay();\n"], "fixing_code": ["<!DOCTYPE html>\n<html>\n<head>\n    <title>Show Me The Way</title>\n    <meta charset='utf-8' />\n    <link rel='stylesheet' href='//cdnjs.cloudflare.com/ajax/libs/leaflet/0.5/leaflet.css' />\n    <link rel='stylesheet' href='css/style.css' />\n    <link rel='stylesheet' href='css/site.css' />\n    <!--[if lte IE 8]><link rel='stylesheet' href='http://cdn.leafletjs.com/leaflet-0.5/leaflet.ie.css' /><![endif]-->\n    <link href='//fonts.googleapis.com/css?family=Open+Sans:400,700|Open+Sans+Condensed:700' rel='stylesheet' type='text/css'>\n\n</head>\n<body>\n<div class='container'>\n    <div class='sq overlay round'>\n        <div id='overview_map'></div>\n        <p class='pad2 change-meta' id='reverse-location'></p>\n    </div>\n    <div class='overlay align-bottom'>\n        <div class='pad2' id='changeset_info'></div>\n        <p class='pad2 change-meta' id='comment'></p>\n    </div>\n    <div class='indicator' id='queuesize'></div>\n    <div id='map' class='col12 full-height'></div>\n    <a href='http://openstreetmap.org/' class='byosm'></a>\n</div>\n    <script id='changeset-template' type='template'>\n<% var past_tense = { modify: 'modified', create: 'created', 'delete': 'deleted' }; %>\n<p><a target='_blank' href='//openstreetmap.org/browse/changeset/<%-change.meta.changeset%>'><%-change.timetext%></a> <a target='_blank' href='//openstreetmap.org/user/<%- change.meta.user %>'><%- change.meta.user %></a>\n     <%- past_tense[change.type] %> <a target='_blank' href='//openstreetmap.org/browse/<%- change.meta.type %>/<%- change.meta.id %>'><%- change.tagtext %></a>\n    </p>\n    </script>\n    <script src='//cdnjs.cloudflare.com/ajax/libs/leaflet/0.5/leaflet.js'></script>\n    <script src='js/Bing.js'></script>\n    <script src='js/bundle.js'></script>\n    <script type=\"text/javascript\">\n\n      var _gaq = _gaq || [];\n      _gaq.push(['_setAccount', 'UA-39286611-2']);\n      _gaq.push(['_trackPageview']);\n\n      (function() {\n        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n      })();\n\n    </script>\n</body>\n</html>\n", "\"use strict\";\n\nvar osmStream = require('osm-stream'),\n    reqwest = require('reqwest'),\n    moment = require('moment'),\n    _ = require('underscore'),\n    LRU = require('lru-cache'),\n    query_string = require('querystring');\n\nvar bboxArray = [\"-90.0\", \"-180.0\", \"90.0\", \"180.0\"];\nvar mapCenter = [51.505, -0.09];\nvar filteredBbox = false;\nvar changeset_comment_match = null;\nif (location.hash) {\n    var parsed_hash = query_string.parse(location.hash.replace('#', ''));\n    if (parsed_hash.length === 1 && parsed_hash[Object.keys(parsed_hash)[0]] === null) {\n        // To be backwards compatible with pages that assumed the only\n        // item in the hash would be the bbox\n        bboxArray = Object.keys(parsed_hash)[0].split(',');\n    } else {\n        if (parsed_hash.bounds) {\n            bboxArray = parsed_hash.bounds.split(',');\n            filteredBbox = true;\n        }\n        if (parsed_hash.comment) {\n            changeset_comment_match = parsed_hash.comment;\n            document.title += ' #' + changeset_comment_match;\n        }\n    }\n}\n\nvar bbox = makeBbox(bboxArray);\nvar bboxString = null;\nif (filteredBbox && isBboxSizeAcceptable(bbox)) {\n    bboxString = bbox.toBBoxString();\n}\n\nvar ignore = ['bot-mode'];\nvar BING_KEY = 'Arzdiw4nlOJzRwOz__qailc8NiR31Tt51dN2D7cm57NrnceZnCpgOkmJhNpGoppU';\n\nvar map = L.map('map', {\n    zoomControl: false,\n    dragging: false,\n    scrollWheelZoom: false,\n    doubleClickZoom: false,\n    boxZoom: false\n});\nif (filteredBbox) {\n    map.fitBounds(bbox);\n} else {\n    map.setView(mapCenter, 13);\n}\n\nvar overview_map = L.map('overview_map', {\n    zoomControl: false,\n    dragging: false,\n    touchZoom: false,\n    scrollWheelZoom: false,\n    doubleClickZoom: false,\n    boxZoom: false,\n    minZoom: 4,\n    maxZoom: 8\n});\nif (filteredBbox) {\n    overview_map.fitBounds(bbox);\n} else {\n    overview_map.setView(mapCenter, 4);\n}\n\nvar bing = new L.BingLayer(BING_KEY, 'Aerial').addTo(map);\n\nvar osm = new L.TileLayer('https://api.mapbox.com/styles/v1/openstreetmapus/cj8xtgojqhd3z2sorzpi01csj/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1Ijoib3BlbnN0cmVldG1hcHVzIiwiYSI6ImNpc2x0eGF1MjBhZTIydXB1eTkxbTdrdXoifQ.9reDkEfppIvAOfAD3tRDJQ', {\n    minZoom: 4,\n    maxZoom: 8,\n    attribution: '<a href=\"https://mapbox.com/about/maps/\">Terms &amp; Conditions</a>'\n}).addTo(overview_map);\n\nvar lineGroup = L.featureGroup().addTo(map);\n\nvar changeset_info = document.getElementById('changeset_info');\nvar changeset_tmpl = _.template(document.getElementById('changeset-template').innerHTML);\nvar queue = [];\nvar changeset_cache = LRU(50);\n\n// Remove Leaflet shoutouts\nmap.attributionControl.setPrefix('');\noverview_map.attributionControl.setPrefix('');\n\nchangeset_info.innerHTML = '<div class=\"loading\">loading...</div>';\n\nvar lastLocation = L.latLng(0, 0);\n\nfunction isBboxSizeAcceptable(bbox) { // heuristic to fetch\n    var width = Math.abs(bbox.getSouthWest().lat - bbox.getNorthEast().lat);\n    var height = Math.abs(bbox.getSouthWest().lng - bbox.getNorthEast().lng);\n    // A guesstimate of the maximum filtered area size that the server would accept.\n    // For larger areas, we fall back to the global (server-cached) change file\n    // ...and we process it client-side as usual.\n    return (width * height) < 2;\n}\n\nfunction farFromLast(c) {\n    try {\n        return lastLocation.distanceTo(c) > 1000;\n    } finally {\n        lastLocation = c;\n    }\n}\n\nfunction showLocation(ll) {\n    var nominatim_tmpl = '//nominatim.openstreetmap.org/reverse?format=json' +\n        '&lat={lat}&lon={lon}&zoom=5';\n    reqwest({\n        url: nominatim_tmpl.replace('{lat}', ll.lat).replace('{lon}', ll.lng),\n        crossOrigin: true,\n        type: 'json'\n    }, function(resp) {\n        document.getElementById('reverse-location').textContent =\n            '' + resp.display_name + '';\n    });\n}\n\nfunction fetchChangesetData(id, callback) {\n    var cached_changeset_data = changeset_cache.get(id);\n\n    if (!cached_changeset_data) {\n        var changeset_url_tmpl = '//www.openstreetmap.org/api/0.6/changeset/{id}';\n        reqwest({\n            url: changeset_url_tmpl.replace('{id}', id),\n            crossOrigin: true,\n            type: 'xml'\n        }, function(resp) {\n            var changeset_data = {};\n            var tags = resp.getElementsByTagName('tag');\n            for (var i = 0; i < tags.length; i++) {\n                var key = tags[i].getAttribute('k');\n                var value = tags[i].getAttribute('v');\n                changeset_data[key] = value;\n            }\n            changeset_cache.set(id, changeset_data);\n            callback(null, changeset_data);\n        });\n    } else {\n        callback(null, cached_changeset_data);\n    }\n}\n\nfunction showComment(id) {\n    fetchChangesetData(id, function(err, changeset_data) {\n        document.getElementById('comment').textContent = changeset_data.comment + ' in ' + changeset_data.created_by;\n    });\n}\n\nfunction makeBbox(bounds_array) {\n    return new L.LatLngBounds(\n        new L.LatLng(bounds_array[0], bounds_array[1]),\n        new L.LatLng(bounds_array[2], bounds_array[3])\n    );\n}\n\nvar runSpeed = 2000;\n\nosmStream.runFn(function(err, data) {\n    queue = _.filter(data, function(f) {\n        var is_a_way = (f.old && f.old.type === 'way') || (f.neu && f.neu.type === 'way');\n        if (is_a_way) {\n            var bbox_intersects_old = (f.old && f.old.bounds && bbox.intersects(makeBbox(f.old.bounds)));\n            var bbox_intersects_new = (f.neu && f.neu.bounds && bbox.intersects(makeBbox(f.neu.bounds)));\n            var happened_today = moment((f.neu && f.neu.timestamp) || (f.neu && f.neu.timestamp)).format(\"MMM Do YY\") === moment().format(\"MMM Do YY\");\n            var user_not_ignored = (f.old && ignore.indexOf(f.old.user) === -1) || (f.neu && ignore.indexOf(f.neu.user) === -1);\n            var way_long_enough = (f.old && f.old.linestring && f.old.linestring.length > 4) || (f.neu && f.neu.linestring && f.neu.linestring.length > 4);\n            return is_a_way &&\n                (bbox_intersects_old || bbox_intersects_new) &&\n                happened_today &&\n                user_not_ignored &&\n                way_long_enough;\n        } else {\n            return false;\n        }\n    }).sort(function(a, b) {\n        return (+new Date((a.neu && a.neu.timestamp) || (a.neu && a.neu.timestamp))) -\n            (+new Date((b.neu && b.neu.timestamp) || (b.neu && b.neu.timestamp)));\n    });\n    // if (queue.length > 2000) queue = queue.slice(0, 2000);\n    runSpeed = 1500;\n}, null, null, bboxString);\n\nfunction doDrawWay() {\n    document.getElementById('queuesize').textContent = queue.length;\n    if (queue.length) {\n        var change = queue.pop();\n        var way = change.neu || change.old;\n\n        // Skip ways that are part of a changeset we don't care about\n        if (changeset_comment_match && way.changeset) {\n            fetchChangesetData(way.changeset, function(err, changeset_data) {\n                if (err) {\n                    console.log(\"Error filtering changeset: \" + err);\n                    doDrawWay();\n                    return;\n                }\n\n                if (changeset_data.comment && changeset_data.comment.indexOf(changeset_comment_match) > -1) {\n                    console.log(\"Drawing way \" + way.id);\n                    drawWay(change, function() {\n                        doDrawWay();\n                    });\n                } else {\n                    console.log(\"Skipping way \" + way.id + \" because changeset \" + way.changeset + \" didn't match \" + changeset_comment_match);\n                    doDrawWay();\n                }\n            });\n        } else {\n            drawWay(change, function() {\n                doDrawWay();\n            });\n        }\n    } else {\n        window.setTimeout(doDrawWay, runSpeed);\n    }\n}\n\nfunction pruneLines() {\n    var mb = map.getBounds();\n    lineGroup.eachLayer(function(l) {\n        if (!mb.intersects(l.getBounds())) {\n            lineGroup.removeLayer(l);\n        } else {\n            l.setStyle({ opacity: 0.5 });\n        }\n    });\n}\n\nfunction setTagText(change) {\n    var showTags = ['building', 'natural', 'leisure', 'waterway',\n        'barrier', 'landuse', 'highway', 'power'];\n    for (var i = 0; i < showTags.length; i++) {\n        var tags = change.type === 'delete' ? change.old.tags : change.neu.tags;\n        if (tags[showTags[i]]) {\n            change.tagtext = showTags[i] + '=' + tags[showTags[i]];\n            return change;\n        }\n    }\n    change.tagtext = 'a way';\n    return change;\n}\n\nfunction drawWay(change, cb) {\n    pruneLines();\n\n    var way = change.type === 'delete' ? change.old : change.neu;\n    change.meta = {\n        id: way.id,\n        type: way.type,\n        // Always pull in the new side user, timestamp, and changeset info\n        user: change.neu.user,\n        changeset: change.neu.changeset\n    };\n\n    // Zoom to the area in question\n    var bounds = makeBbox(way.bounds);\n\n    if (farFromLast(bounds.getCenter())) showLocation(bounds.getCenter());\n    showComment(change.neu.changeset);\n\n    var timedate = moment(change.neu.timestamp);\n    change.timetext = timedate.fromNow();\n\n    map.fitBounds(bounds);\n    overview_map.panTo(bounds.getCenter());\n    setTagText(change);\n    changeset_info.innerHTML = changeset_tmpl({ change: change });\n\n    var color = { 'create': '#B7FF00', 'modify': '#FF00EA', 'delete': '#FF0000' }[change.type];\n    var newLine;\n    if (way.tags.building || way.tags.area) {\n        newLine = L.polygon([], {\n            opacity: 1,\n            color: color,\n            fill: color\n        }).addTo(lineGroup);\n    } else {\n        newLine = L.polyline([], {\n            opacity: 1,\n            color: color\n        }).addTo(lineGroup);\n    }\n    // This is a bit lower than 3000 because we want the whole way\n    // to stay on the screen for a bit before moving on.\n    var perPt = runSpeed / way.linestring.length;\n\n    function drawPt(pt) {\n        newLine.addLatLng(pt);\n        if (way.linestring.length) {\n            window.setTimeout(function() {\n                drawPt(way.linestring.pop());\n            }, perPt);\n        } else {\n            window.setTimeout(cb, perPt * 2);\n        }\n    }\n\n    newLine.addLatLng(way.linestring.pop());\n    drawPt(way.linestring.pop());\n}\n\ndoDrawWay();\n"], "filenames": ["index.html", "js/site.js"], "buggy_code_start_loc": [29, 118], "buggy_code_end_loc": [31, 190], "fixing_code_start_loc": [29, 118], "fixing_code_end_loc": [31, 190], "type": "CWE-79", "message": "A vulnerability was found in OSM Lab show-me-the-way. It has been rated as problematic. This issue affects some unknown processing of the file js/site.js. The manipulation leads to cross site scripting. The attack may be initiated remotely. The name of the patch is 4bed3b34dcc01fe6661f39c0e5d2285b340f7cac. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217439.", "other": {"cve": {"id": "CVE-2018-25064", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-05T09:15:08.493", "lastModified": "2023-01-11T17:08:39.347", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in OSM Lab show-me-the-way. It has been rated as problematic. This issue affects some unknown processing of the file js/site.js. The manipulation leads to cross site scripting. The attack may be initiated remotely. The name of the patch is 4bed3b34dcc01fe6661f39c0e5d2285b340f7cac. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217439."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:show-me-the-way_project:show-me-the-way:*:*:*:*:*:*:*:*", "versionEndExcluding": "2018-02-19", "matchCriteriaId": "BD128C0F-4DF3-4859-8BB6-7FBF7B8748CD"}]}]}], "references": [{"url": "https://github.com/osmlab/show-me-the-way/commit/4bed3b34dcc01fe6661f39c0e5d2285b340f7cac", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/osmlab/show-me-the-way/pull/57", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217439", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217439", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/osmlab/show-me-the-way/commit/4bed3b34dcc01fe6661f39c0e5d2285b340f7cac"}}