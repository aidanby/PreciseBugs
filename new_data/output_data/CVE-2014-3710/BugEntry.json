{"buggy_code": ["2014-10-11  15:02  Christos Zoulas <christos@zoulas.com>\n\n\t* fix autoconf glue for setlocale and locale_t; some OS's\n\t  have locale_t in xlocale.h\n\n2014-10-10  15:01  Christos Zoulas <christos@zoulas.com>\n\n\t* release 5.20\n\n2014-08-17  10:01  Christos Zoulas <christos@zoulas.com>\n\n\t* recognize encrypted CDF documents\n\n2014-08-04   9:18  Christos Zoulas <christos@zoulas.com>\n\n\t* add magic_load_buffers from Brooks Davis\n\n2014-07-24  16:40  Christos Zoulas <christos@zoulas.com>\n\n\t* add thumbs.db support\n\n2014-06-12  12:28  Christos Zoulas <christos@zoulas.com>\n\n\t* release 5.19\n\n2014-06-09   9:04  Christos Zoulas <christos@zoulas.com>\n\t\n\t* Misc buffer overruns and missing buffer size tests in cdf parsing\n\t  (Francisco Alonso, Jan Kaluza)\n\n2014-06-02  14:50  Christos Zoulas <christos@zoulas.com>\n\n\t* Enforce limit of 8K on regex searches that have no limits\n\t* Allow the l modifier for regex to mean line count. Default\n\t  to byte count. If line count is specified, assume a max\n\t  of 80 characters per line to limit the byte count.\n\t* Don't allow conversions to be used for dates, allowing\n\t  the mask field to be used as an offset.\n\n2014-05-30  12:51  Christos Zoulas <christos@zoulas.com>\n\n\t* Make the range operator limit the length of the\n\t  regex search.\n\n2014-05-14  19:23  Christos Zoulas <christos@zoulas.com>\n\n\t* PR/347: Windows fixes\n\t* PR/352: Hangul word processor recognition\n\t* PR/354: Encoding irregularities in text files\n\n2014-05-06  6:12  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix uninitialized title in CDF files (Jan Kaluza)\n\n2014-05-04  14:55  Christos Zoulas <christos@zoulas.com>\n\n\t* PR/351: Fix compilation of empty files \n\n2014-04-30  17:39  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix integer formats: We don't specify 'l' or\n\t  'h' and 'hh' specifiers anymore, only 'll' for\n\t  quads and nothing for the rest. This is so that\n\t  magic writing is simpler.\n\n2014-04-01  15:25  Christos Zoulas <christos@zoulas.com>\n\n\t* PR/341: Jan Kaluza, fix memory leak\n\t* PR/342: Jan Kaluza, fix out of bounds read\n\n2014-03-28  15:25  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix issue with long formats not matching fmtcheck\n\n2014-03-26  11:25  Christos Zoulas <christos@zoulas.com>\n\n\t* release 5.18\n\n2014-03-15  17:45  Christos Zoulas <christos@zoulas.com>\n\n\t* add fmtcheck(3) for those who don't have it\n\n2014-03-14  15:12  Christos Zoulas <christos@zoulas.com>\n\n\t* prevent mime entries from being attached to magic\n\t  entries with no descriptions\n\n\t* adjust magic strength for regex type\n\n\t* remove superfluous ascmagic with encoding test\n\n2014-03-06  12:01  Christos Zoulas <christos@zoulas.com>\n\n\t* fix regression fix echo -ne \"\\012\\013\\014\" | file -i -\n\t  which printed \"binary\" instead of \"application/octet-stream\"\n\n\t* add size_t overflow check for magic file size\n\n2014-02-27  16:01  Christos Zoulas <christos@zoulas.com>\n\n\t* experimental support for matching with CFD CLSID\n\n2014-02-18  13:04  Kimmo Suominen (kimmo@suominen.com)\n\n\t* Cache old LC_CTYPE locale before setting it to \"C\", so\n\t  we can use it to restore LC_CTYPE instead of asking\n\t  setlocale() to scan the environment variables.\n\n2014-02-12  18:21  Christos Zoulas <christos@zoulas.com>\n\n\t* Count recursion levels through indirect magic\n\n2014-02-11  10:40  Christos Zoulas <christos@zoulas.com>\n\n\t* Prevent infinite recursion on files with indirect offsets of 0\n\n2014-01-30  21:00  Christos Zoulas <christos@zoulas.com>\n\n\t* Add -E flag that makes file print filesystem errors to stderr\n\t  and exit.\n\n2014-01-08  17:20  Christos Zoulas <christos@zoulas.com>\n\n\t* mime printing could print results from multiple magic entries\n\t  if there were multiple matches.\n\t* in some cases overflow was not detected when computing offsets\n\t  in softmagic.\n\n2013-12-05  12:00  Christos Zoulas <christos@zoulas.com>\n\n\t* use strcasestr() to for cdf strings\n\t* reset to the \"C\" locale while doing regex operations, or case\n\t  insensitive comparisons; this is provisional\n\n2013-11-19  20:10  Christos Zoulas <christos@zoulas.com>\n\n\t* always leave magic file loaded, don't unload for magic_check, etc.\n\t* fix default encoding to binary instead of unknown which broke recently\n\t* handle empty and one byte files, less specially so that\n\t  --mime-encoding does not break completely.\n\t\t`\n2013-11-06  14:40  Christos Zoulas <christos@zoulas.com>\n\n\t* fix erroneous non-zero exit code from non-existant file and message\n\n2013-10-29  14:25  Christos Zoulas <christos@zoulas.com>\n\n\t* add CDF MSI file detection (Guy Helmer)\n\n2013-09-03  11:56  Christos Zoulas <christos@zoulas.com>\n\n\t* Don't mix errors and regular output if there was an error\n\t* in magic_descriptor() don't close the file and try to restore\n\t  its position\n\n2013-05-30  17:25  Christos Zoulas <christos@zoulas.com>\n\n\t* Don't treat magic as an error if offset was past EOF (Christoph Biedl)\n\n2013-05-28  17:25  Christos Zoulas <christos@zoulas.com>\n\t\n\t* Fix spacing issues in softmagic and elf (Jan Kaluza)\n\n2013-05-02  18:00  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix segmentation fault with multiple magic_load commands.\n\n2013-04-22  11:20  Christos Zoulas <christos@zoulas.com>\n\n\t* The way \"default\" was implemented was not very useful\n\t  because the \"if something was printed at that level\"\n\t  was not easily controlled by the user, and the format\n\t  was bound to a string which is too restrictive. Add\n\t  a \"clear\" for that level keyword and make \"default\"\n\t  void. This way one can do:\n\n\t\t>>13\tclear\tx\n\t\t>>13\tlelong\t1\tfoo\n\t\t>>13\tlelong\t2\tbar\n\t\t>>13\tdefault\tx\n\t\t>>>13\tlelong\tx\tunknown %x\n\n2013-03-25  13:20  Christos Zoulas <christos@zoulas.com>\n\n\t* disallow strength setting in \"name\" entries\n\n2013-03-06  21:24  Christos Zoulas <christos@zoulas.com>\n\n\t* fix recursive magic separator printing\n\n2013-02-26  19:28  Christos Zoulas <christos@zoulas.com>\n\n\t* limit recursion level for mget\n\t* fix pread() related breakage in cdf\n\t* handle offsets properly in recursive \"use\"\n\n2013-02-18  10:39  Christos Zoulas <christos@zoulas.com>\n\n\t* add elf reading of debug info to determine if file is stripped\n\t  (Jan Kaluza)\n\t* use pread()\n\n2013-01-25  18:05  Christos Zoulas <christos@zoulas.com>\n\n\t* change mime description size from 64 to 80 to accommodate OOXML.\n\n2013-01-11  14:50  Christos Zoulas <christos@zoulas.com>\n\n\t* Warn about inconsistent continuation levels.\n\t* Change fsmagic to add a space after it prints.\n\n2013-01-10  21:00  Christos Zoulas <christos@zoulas.com>\n\n\t* Make getline public so that file can link against it.\n\t  Perhaps it is better to rename it, or hide it differently.\n\t  Fixes builds on platforms that do not provide it.\n\t  \n2013-01-07  16:30  Christos Zoulas <christos@zoulas.com>\n\n\t* Add SuS d{,1,2,4,8}, u{,1,2,4,8} and document\n\t  what long, int, short, etc is (Guy Harris)\n\n2013-01-06  11:20  Christos Zoulas <christos@zoulas.com>\n\n\t* add magic_version function and constant\n\t* Redo memory allocation and de-allocation.\n\t  (prevents double frees on non mmap platforms)\n\t* Fix bug with name/use having to do with passing\n\t  found state from the parent to the child and back.\n\n2012-12-19   8:47  Christos Zoulas <christos@zoulas.com>\n\n\t* Only print elf capabilities for archs we know (Jan Kaluza)\n\n2012-10-30  19:14  Christos Zoulas <christos@zoulas.com>\n\n\t* Add \"name\" and \"use\" file types in order to look\n\t  inside mach-o files.\n\n2012-09-06  10:40  Christos Zoulas <christos@zoulas.com>\n\n\t* make --version exit 0 (Matthew Schultz)\n\t* add string/T (Jan Kaluza)\n\n2012-08-09  2:15  Christos Zoulas <christos@zoulas.com>\n\n\t* add z and t modifiers for our own vasprintf\n\t* search for $HOME/.magic.mgc if it is there first\n\t* fix reads from a pipe, and preserve errno\n\n2012-05-15  13:12  Christos Zoulas <christos@zoulas.com>\n\n\t* use ctime_r, asctime_r\n\n2012-04-06  17:18  Christos Zoulas <christos@zoulas.com>\n\n\t* Fixes for indirect offsets to handle apple disk formats\n\n2012-04-03  18:26  Christos Zoulas <christos@zoulas.com>\n\n\t* Add windows date field types\n\t* More info for windows shortcuts (incomplete)\n\n2012-02-20  17:33  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix CDF parsing issues found by CERT's fuzzing tool (Will Dormann)\n\n2011-12-15  12:17  Chris Metcalf <cmetcalf@tilera.com>\n\n\t* Support Tilera architectures (tile64, tilepro, tilegx).\n\n2011-12-16  16:33  Reuben Thomas <rrt@sc3d.org>\n\n\t* Add magic for /usr/bin/env Perl scripts\n\t* Weaken generic script magic to avoid clashing with\n\tlanguage-specific magic.\n\n2011-12-08  13:37  Reuben Thomas <rrt@sc3d.org>\n\n\t* Simplify if (p) free(p) to free(p).\n\n2011-12-08  13:07  Reuben Thomas <rrt@sc3d.org>\n\n\t* Remove hardwired token finding (names.h), turning it into soft\n\tmagic. Patterns are either anchored regexs or search/8192. English\n\tlanguage detection and PL/1 detection have been removed as they\n\twere too fragile. -e tokens is still accepted for backwards\n\tcompatibility.\n\t* Move 3ds patterns (which are commented out anyway) into autodesk\n\t(they were, oddly, in c-lang).\n\n2011-12-06  00:16  Reuben Thomas <rrt@sc3d.org>\n\n\t* Tweak strength of generic hash-bang detectors to be less than\n\tspecific ones.\n\t* Make an inconsistent description of Python scripts consistent.\n\n2011-12-05  23:58  Reuben Thomas <rrt@sc3d.org>\n\n\t* Fix minor error in file(1).\n\n2011-11-05  00:00  Reuben Thomas <rrt@sc3d.org>\n\n\t* Fix issue #150 (I hope).\n\n2011-09-22  12:57  Christos Zoulas <christos@zoulas.com>\n\n\t* Python3 binding fixes from Kelly Anderson\n\n2011-09-20  11:32  Christos Zoulas <christos@zoulas.com>\n\n\t* If a string type magic entry is marked as text or binary\n\t  only match text files against text entries and binary\n\t  files against binary entries.\n\n2011-09-01  12:12  Christos Zoulas <christos@zoulas.com>\n\n\t* Don't wait for any subprocess, just the one we forked.\n\n2011-08-26  16:40  Christos Zoulas <christos@zoulas.com>\n\n\t* If the application name is not set in a cdf file, try to see\n\t  if it has a directory with the application name on it.\n\n2011-08-17  14:32  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix ELF lseek(2) madness. Inspired by PR/134 by Jan Kaluza\n\n2011-08-14  09:03  Christos Zoulas <christos@zoulas.com>\n\n\t* Don't use variable string formats.\n\n2011-07-12  12:32  Reuben Thomas <rrt@sc3d.org>\n\n\t* Fix detection of Zip files (Mantis #128).\n\t* Make some minor improvements to file(1).\n\t* Rename MIME types for filesystem objects for consistency with\n\t  xdg-utils. Typically this means that application/x-foo becomes\n\t  inode/foo, but some names also change slightly, e.g.\n\t  application/x-character-device becomes inode/chardevice.\n\n2011-05-10  20:57  Christos Zoulas <christos@zoulas.com>\n\n\t* fix mingw compilation (Abradoks)\n\n2011-05-10  20:57  Christos Zoulas <christos@zoulas.com>\n\n\t* remove patchlevel.h\n\t* Fix read past allocated memory caused by double-incrementing\n\t  a pointer in a loop (reported by Roberto Maar)\n\n2011-03-30  15:45  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix cdf string buffer setting (Sven Anders)\n\n2011-03-20  16:35  Christos Zoulas <christos@zoulas.com>\n\n\t* Eliminate MAXPATHLEN and use dynamic allocation for\n\t  path and file buffers.\n\n2011-03-15  18:15  Christos Zoulas <christos@zoulas.com>\n\n\t* binary tests on magic entries with masks could spuriously\n\t  get converted to ascii.\n\n2011-03-12  18:06  Reuben Thomas <rrt@sc3d.org>\n\n\t* Improve file.man (remove BUGS, present email addresses consistently).\n\n2011-03-07  19:38  Christos Zoulas <christos@zoulas.com>\n\n\t* add lrzip support (from Ville Skytta)\n\n2011-02-10  16:36  Christos Zoulas <christos@zoulas.com>\n\n\t* fix CDF bounds checking (Guy Helmer)\n\n2011-02-10  12:03  Christos Zoulas <christos@zoulas.com>\n\n\t* add cdf_ctime() that prints a meaningful error when time cannot\n\t  be converted.\n\n2011-02-02  20:40  Christos Zoulas <christos@zoulas.com>\n\n\t* help and version output to stdout.\n\n\t* When matching softmagic for ascii files, don't just print\n\t  the softmagic classification, keep going and print the\n\t  text classification too. This fixes broken troff files when\n\t  we moved them from keyword recognition to softmagic\n\t  (they stopped printing \"with CRLF\" etc.)\n\t  Reported by Doug McIlroy.\n\n2011-01-16  19:31  Reuben Thomas <rrt@sc3d.org>\n\n\t* Fix two potential buffer overruns in apprentice_list.\n\n2011-01-14  22:33  Reuben Thomas <rrt@sc3d.org>\n\n\t* New Python binding in pure Python.\n\t* Update libmagic(3).\n\n2011-01-06  21:40  Reuben Thomas <rrt@sc3d.org>\n\n\t* Fix Python bindings (including recent Python 3 compatibility\n\t  update).\n\n2011-01-04  18:43  Reuben Thomas <rrt@sc3d.org>\n\n\t* magic/Makefile.am: make it easier to recover from magic build failures.\n\t* Fix pstring length specifier parsing to avoid generating invalid\n\t  magic files.\n\t* Add pstring length \"J\" (for \"JPEG\") to specify that the length\n\t  include itself.\n\t* Fix JPEG comment parsing at last using pstring/HJ!\n\t* Ignore section 5 man pages in doc/.cvsignore.\n\n2010-12-22  13:12  Christos Zoulas <christos@zoulas.com>\n\n\t* Add pstring/BHhLl to specify the type of the length of pascal\n\t  strings.\n\n2010-11-26  18:39  Reuben Thomas <rrt@sc3d.org>\n\n\t* Fix \"-e soft\": it was ignored when softmagic was called\n\t  during asciimagic.\n\t* Improve comments and use \"unsigned char\" in tar.h/is_tar.c.\n\n2010-11-05  17:26  Reuben Thomas <rrt@sc3d.org>\n\n\t* Make bug reporting addresses more visible.\n\n2010-11-01  18:35  Reuben Thomas <rrt@sc3d.org>\n\n\t* Add tcl magic from Gustaf Neumann\n\n2010-10-24  10:42  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix the whitespace comparing code (Christopher Chittleborough)\n\n2010-10-06  21:05  Christos Zoulas <christos@zoulas.com>\n\n\t* allow string/t to work (Jan Kaluza)\n\n2010-09-20  22:11  Reuben Thomas <rrt@sc3d.org>\n\n\t* Apply some patches from Ubuntu and Fedora.\n\n2010-09-20  21:16  Reuben Thomas <rrt@sc3d.org>\n\n\t* Apply all patches from Debian package 5.04-6 which have not\n\t  already been applied and are not Debian-specific.\n\n2010-09-20  15:24  Reuben Thomas <rrt@sc3d.org>\n\n\t* Minor security fix to softmagic.c (don't use untrusted\n\t  string as printf format).\n\n2010-07-21  12:20  Christos Zoulas <christos@zoulas.com>\n\n\t* MINGW32 portability from LRN\n\n\t* Don't warn about escaping magic regex chars when we are in a regex.\n\n2010-07-19  10:55  Christos Zoulas <christos@zoulas.com>\n\n\t* Only try to print prpsinfo for core files. (Jan Kaluza)\n\n2010-04-22  12:55  Christos Zoulas <christos@zoulas.com>\n\n\t* Try more elf offsets for Debian core files.  (Arnaud Giersch)\n\n2010-02-20  15:18  Reuben Thomas <rrt@sc3d.org>\n\n\t* Clarify which sort of CDF we mean.\n\n2010-02-14  22:58  Reuben Thomas <rrt@sc3d.org>\n\n\t* Re-jig Zip file type magic so that unsupported special\n\t  Zip types (those with \"mimetype\" at offset 30) can be\n\t  recognized.\n\n2010-02-02  21:50  Reuben Thomas <rrt@sc3d.org>\n\n\t* Add support for OCF (EPUB) files (application/epub+zip)\n\n2010-01-28  18:25  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix core-dump from unbound loop:\n\t  https://bugzilla.redhat.com/show_bug.cgi?id=533245\n\n2010-01-22  15:45  Christos Zoulas <christos@zoulas.com>\n\n\t* print proper mime for crystal reports file\n\n\t* print the last summary information of a cdf document, not the\n\t  first so that nested documents print the right info\n\n2010-01-16  18:42  Charles Longeau <chl@tuxfamily.org>\n\n\t* bring back some fixes from OpenBSD:\n\t\t- make gcc2 builds file\n\t\t- fix typos in a magic file comment\n\n2009-11-17  18:35  Christos Zoulas <christos@zoulas.com>\n\n\t* ctime/asctime can return NULL on some OS's although\n\t  they should not (Toshit Antani)\n\n2009-09-14  13:49  Christos Zoulas <christos@zoulas.com>\n\n\t* Centralize magic path handling routines and remove the\n\t  special-casing from file.c so that the python module for\n\t  example comes up with the same magic path (Fixes ~/.magic\n\t  handling) (from Gab)\n\n2009-09-11  23:38  Reuben Thomas <rrt@sc3d.org>\n\n\t* When magic argument is a directory, read the files in\n\t  strcmp-sorted order (fixes Debian bug #488562 and our own FIXME).\n\n2009-09-11  13:11  Reuben Thomas <rrt@sc3d.org>\n\n\t* Combine overlapping epoc and psion magic files into one (epoc).\n\n\t* Add some more EPOC MIME types.\n\n2009-08-19  15:55  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix 3 bugs (From Ian Darwin):\n\t    - file_showstr could move one past the end of the array\n\t    - parse_apple did not nul terminate the string in the overflow case\n\t    - parse_mime truncated the wrong string in the overflow case\n\n2009-08-12  12:28  Robert Byrnes  <byrnes@wildpumpkin.net>\n\n\t* Include Localstuff when compiling magic.\n\n2009-07-15  10:05  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix logic for including mygetopts.h\n\n\t* Make cdf.c compile again with debugging\n\n\t* Add the necessary field handling for crystal reports files to work\n\n2009-06-23 01:34  Reuben Thomas <rrt@sc3d.org>\n\n\t* Stop \"(if\" identifying Lisp files, that's plain dumb!\n\n2009-06-09 22:13  Reuben Thomas <rrt@sc3d.org>\n\n\t* Add a couple of missing MP3 MIME types.\n\n2009-05-27 23:00  Reuben Thomas <rrt@sc3d.org>\n\n\t* Add full range of hash-bang tests for Python and Ruby.\n\n\t* Add MIME types for Python and Ruby scripts.\n\n2009-05-13  10:44  Christos Zoulas <christos@zoulas.com>\n\n\t* off by one in parsing hw capabilities in elf\n\t  (Cheng Renquan)\n\n2009-05-08  13:40  Christos Zoulas <christos@zoulas.com>\n\t\n\t* lint fixes and more from NetBSD\n\n2009-05-06  10:25  Christos Zoulas <christos@zoulas.com>\n\n\t* Avoid null dereference in cdf code (Drew Yao)\n\n\t* More cdf bounds checks and overflow checks\n\n2009-05-01  18:37  Christos Zoulas <christos@zoulas.com>\n\n\t* Buffer overflow fixes from Drew Yao\n\n2009-04-30  17:10  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix more cdf lossage. All the documents I have\n\t  right now print the correct information.\n\n2009-03-27  18:43  Christos Zoulas <christos@zoulas.com>\n\n\t* don't print \\012- separators in the same magic entry \n\t  if it consists of multiple magic printing lines.\n\n2009-03-23  10:20  Christos Zoulas <christos@zoulas.com>\n\n\t* Avoid file descriptor leak in compress code from\n\t  (Daniel Novotny)\n\n2009-03-18  16:50  Christos Zoulas <christos@zoulas.com>\n\n\t* Allow escaping of relation characters, so that we can say \\^[A-Z]\n\t  and the ^ is not eaten as a relation char.\n\n\t* Fix troff and fortran to their previous glory using\n\t  regex. This was broken since their removel from ascmagic.\n\n2009-03-10  16:50  Christos Zoulas <christos@zoulas.com>\n\n\t* don't use strlen in strndup() (Toby Peterson)\n\n2009-03-10  7:45  Christos Zoulas <christos@zoulas.com>\n\n\t* avoid c99 syntax.\n\n2009-02-23 15:45  Christos Zoulas <christos@zoulas.com>\n\n\t* make the cdf code use the buffer first if available,\n\t  and then the fd code.\n\n2009-02-13 13:45  Christos Zoulas <christos@zoulas.com>\n\n\t* look for struct option to determine if getopt.h is usable for IRIX.\n\n\t* sanitize cdf document strings\n\n2009-02-04 13:25  Christos Zoulas <christos@zoulas.com>\n\n\t* fix OS/2 warnings.\n\n2008-12-12 15:50  Christos Zoulas <christos@zoulas.com>\n\n\t* fix initial offset calculation for non 4K sector files\n\n\t* add loop limits to avoid DoS attacks by constructing\n\t  looping sector references.\n\n2008-12-03 13:05  Christos Zoulas <christos@zoulas.com>\n\n\t* fix memory botches on cdf file parsing.\n\n\t* exit with non-zero value for any error, not just for the last\n\t  file processed.\n\n2008-11-09 20:42  Charles Longeau <chl@tuxfamily.org>\n\n\t* Replace all str{cpy,cat} functions with strl{cpy,cat}\n\t* Ensure that strl{cpy,cat} are included in libmagic,\n\t  as needed.\n\n2008-11-06 18:18  Christos Zoulas <christos@zoulas.com>\n\n\t* Handle ID3 format files.\n\n2008-11-06 23:00  Reuben Thomas <rrt@sc3d.org>\n\n\t* Fix --mime, --mime-type and --mime-encoding under new scheme.\n\n\t* Rename \"ascii\" to \"text\" and add \"encoding\" test.\n\n\t* Return a precise (\"utf-16le\" or \"utf-16be\") MIME charset for\n\t  UTF-16.\n\n\t* Fix error in comment caused by automatic indentation adding\n\t  words!\n\n2008-11-06 10:35  Christos Zoulas <christos@astron.com>\n\n\t* use memchr instead of strchr because the string\n\t  might not be NUL terminated (Scott MacVicar)\n\n2008-11-03 07:31  Reuben Thomas <rrt@sc3d.org>\n\n\t* Fix a printf with a non-literal format string.\n\n\t* Fix formatting and punctuation of help for \"--apple\".\n\n2008-10-30 11:00  Reuben Thomas <rrt@sc3d.org>\n\n\t* Correct words counts in comments of struct magic.\n\n\t* Fix handle_annotation to allow both Apple and MIME types to be\n\t  printed, and to return correct code if MIME type is\n\t  printed (1, not 0) or if there's an error (-1 not 1).\n\n\t* Fix output of charset for MIME type (precede with semi-colon;\n\t  fixes Debian bug #501460).\n\n\t* Fix potential attacks via conversion specifications in magic\n\t  strings.\n\n\t* Add a FIXME for Debian bug #488562 (magic files should be\n\t  read in a defined order, by sorting the names).\n\n2008-10-18 16:45  Christos Zoulas <christos@astron.com>\n\n\t* Added APPLE file creator/type\n\n2008-10-12 10:20  Christos Zoulas <christos@astron.com>\n\n\t* Added CDF parsing\n\n2008-10-09 16:40  Christos Zoulas <christos@astron.com>\n\n\t* filesystem and msdos patches (Joerg Jenderek)\n\n2008-10-09 13:20  Christos Zoulas <christos@astron.com>\n\n\t* correct --exclude documentation issues: remove troff and fortran\n\t  and rename \"token\" to \"tokens\". (Randy McMurchy)\n\n2008-10-01 10:30  Christos Zoulas <christos@astron.com>\n\n\t* Read ~/.magic in addition to the default magic file not instead\n\t  of, as documented in the man page.\n\n2008-09-10 21:30  Reuben Thomas  <rrt@sc3d.org>\n\n\t* Comment out graphviz patterns, as they match too many files.\n\n2008-08-30 12:54  Christos Zoulas <christos@astron.com>\n\n\t* Don't eat trailing \\n in magic enties.\n\n\t* Cast defines to allow compilation using a c++ compiler.\n\n2008-08-25 23:56  Reuben Thomas  <rrt@sc3d.org>\n\n\t* Add text/x-lua MIME type for Lua scripts.\n\n\t* Escape { in regex in graphviz patterns.\n\n2008-07-26 00:59  Reuben Thomas  <rrt@sc3d.org>\n\n\t* Add MIME types for special files.\n\n\t* Use access to give more accurate information for files that\n\t  can't be opened.\n\n\t* Add a TODO list.\n\n2008-07-02 11:15  Christos Zoulas  <christos@astron.com>\n\n\t* add !:strength op to adjust magic strength (experimental)\n\n2008-06-16 21:41  Reuben Thomas  <rrt@sc3d.org>\n\n\t* Fix automake error in configure.ac.\n\n\t* Add MIME type for Psion Sketch files.\n\n2008-06-05 08:59  Christos Zoulas  <christos@astron.com>\n\n\t* Don't print warnings about bad namesize in stripped\n\t  binaries with PT_NOTE is still there, and the actual\n\t  note is gone (Jakub Jelinek)\n\n2008-05-28 15:12  Robert Byrnes  <byrnes@wildpumpkin.net>\n\n\t* magic/Magdir/elf:\n\t  Note invalid byte order for little-endian SPARC32PLUS.\n\t  Add SPARC V9 vendor extensions and memory model.\n\n\t* src/elfclass.h:\n\t  Pass target machine to doshn (for Solaris hardware capabilities).\n\n\t* src/readelf.c (doshn):\n\t  Add support for Solaris hardware/software capabilities.\n\n\t* src/readelf.h:\n\t  Ditto.\n\n\t* src/vasprintf.c (dispatch):\n\t  Add support for ll modifier.\n\n2008-05-16 10:25  Christos Zoulas  <christos@astron.com>\n\n\t* Fix compiler warnings.\n\n\t* remove stray printf, and fix a vprintf bug. (Martin Dorey)\n\n2008-05-06 00:13  Robert Byrnes  <byrnes@wildpumpkin.net>\n\n\t* src/Makefile.am:\n\t  Ensure that getopt_long and [v]asprintf are included in libmagic,\n\t  as needed.\n\n\t  Remove unnecessary EXTRA_DIST.\n\n\t* src/Makefile.in:\n\t  Rerun automake.\n\n\t* src/vasprintf.c (dispatch):\n\t  Fix variable precision bug: be sure to step past '*'.\n\n\t* src/vasprintf.c (core):\n\t  Remove unreachable code.\n\n\t* src/apprentice.c (set_test_type):\n\t  Add cast to avoid compiler warning.\n\n2008-04-22 23:45  Christos Zoulas  <christos@astron.com>\n\n\t* Add magic submission guidelines (Abel Cheung)\n\n\t* split msdos and windows magic (Abel Cheung)\n\n2008-04-04 11:00  Christos Zoulas  <christos@astron.com>\n\n\t* >= <= is not supported, so fix the magic and warn about it.\n\t  reported by: Thien-Thi Nguyen <ttn@gnuvola.org>\n\n2008-03-27 16:16  Robert Byrnes  <byrnes@wildpumpkin.net>\n\n\t* src/readelf.c (donote):\n\t  ELF core file command name/line bug fixes and enhancements:\n\n\t  Try larger offsets first to avoid false matches\n\t  from earlier data that happen to look like strings;\n\t  this primarily affected SunOS 5.x 32-bit Intel core files.\n\n\t  Add support for command line (instead of just short name)\n\t  for SunOS 5.x.\n\n\t  Add information about NT_PSINFO for SunOS 5.x.\n\n\t  Only trim whitespace from end of command line.\n\n2007-02-11 01:36 Reuben Thomas <rrt@sc3d.org>\n\n\t* Change strength of ! from MULT to 0, as it matches almost\n\t\t  anything (Reuben Thomas)\n\n\t* Debian fixes (Reuben Thomas)\n\n2007-02-11 00:17 Reuben Thomas <rrt@sc3d.org>\n\n\t* Clarify UTF-8 BOM message (Reuben Thomas)\n\n\t* Add HTML comment to token list in names.h\n\n2007-02-04 15:50 Christos Zoulas <christos@astron.com>\n\n\t* Debian fixes (Reuben Thomas)\n\n2007-02-04 11:31 Christos Zoulas <christos@astron.com>\n\n\t* !:mime annotations in magic files (Reuben Thomas)\n\n2007-01-29 15:35 Christos Zoulas <christos@astron.com>\n\n\t* zero out utime/utimes structs (Gavin Atkinson)\n\n2007-01-26 13:45 Christos Zoulas <christos@astron.com>\n\n\t* reduce writable data from Diego \"Flameeyes\" Petten\n\n2007-12-28 15:06 Christos Zoulas <christos@astron.com>\n\n\t* strtof detection\n\n\t* remove bogus regex magic that could cause a DoS\n\n\t* better mismatch version message\n\n2007-12-27 11:35 Christos Zoulas <christos@astron.com>\n\n\t* bring back some fixes from OpenBSD\n\n\t* treat ELF dynamic objects as executables\n\n\t* fix gcc warnings\n\n2007-12-01 19:55 Christos Zoulas <christos@astron.com>\n\n\t* make sure we have zlib.h and libz to compile the builtin\n\t  decompress code\n\n2007-10-28 20:48 Christos Zoulas <christos@astron.com>\n\n \t* float and double magic support (Behan Webster)\n\n2007-10-28 20:48 Christos Zoulas <christos@astron.com>\n\n\t* Convert fortran to a soft test (Reuben Thomas)\n\n2007-10-23  5:25 Christos Zoulas <christos@astron.com>\n\n\t* Add --with-filename, and --no-filename (Reuben Thomas)\n\n2007-10-23  3:59 Christos Zoulas <christos@astron.com>\n\n\t* Rest of the mime split (Reuben Thomas)\n\n\t* Make usage message generated from the flags so that\n\t  they stay consistent (Reuben Thomas)\n\n2007-10-20  3:06 Christos Zoulas <christos@astron.com>\n\n\t* typo in comment, missing ifdef QUICK, remove unneeded code\n\t\t(Charles Longeau)\n\n2007-10-17  3:33 Christos Zoulas <christos@astron.com>\n\n\t* Fix problem printing -\\012 in some entries\n\n\t* Separate magic type and encoding flags (Reuben Thomas)\n\n2007-10-09  3:55 Christos Zoulas <christos@astron.com>\n\n\t* configure fix for int64 and strndup (Reuben Thomas)\n\n2007-09-26  4:45 Christos Zoulas <christos@astron.com>\n\n\t* Add magic_descriptor() function.\n\n\t* Fix regression in elf reading code where the core name was\n\t  not being printed.\n\n\t* Don't convert NUL's to spaces in {l,b}estring16 (Daniel Dawson)\n\n2007-08-19  6:30 Christos Zoulas <christos@astron.com>\n\n\t* Make mime format consistent so that it can\n\t  be easily parsed:\n\t      mimetype [charset=character-set] [encoding=encoding-mime-type]\n\n\t  Remove spurious extra text from some MIME type printouts\n\t  (mostly in is_tar).\n\n\t  Fix one case where -i produced nothing at all (for a 1-byte file,\n\t  which is now classed as application/octet-stream).\n\n\t  Remove 7/8bit classifications, since they were arbitrary\n\t  and not based on the file data.\n\n\t  This work was done by Reuben Thomas\n\n2007-05-24 10:00 Christos Zoulas <christos@astron.com>\n\n\t* Fix another integer overflow (Colin Percival)\n\n2007-03-26 13:58 Christos Zoulas <christos@astron.com>\n\n\t* make sure that all of struct magic_set is initialized appropriately\n\t  (Brett)\n\n2007-03-25 17:44 Christos Zoulas <christos@astron.com>\n\n\t* reset left bytes in the buffer (Dmitry V. Levin)\n\n\t* compilation failed with COMPILE_ONLY and ENABLE_CONDITIONALS\n\t  (Peter Avalos)\n\n2007-03-15 10:51 Christos Zoulas <christos@astron.com>\n\n\t* fix fortran and nroff reversed tests (Dmitry V. Levin)\n\n\t* fix exclude option (Dmitry V. Levin)\n\n2007-02-08 17:30 Christos Zoulas <christos@astron.com>\n\n\t* fix integer underflow in file_printf which can lead to\n\t  to exploitable heap overflow (Jean-Sebastien Guay-Lero)\n\n2007-02-05 11:35 Christos Zoulas <christos@astron.com>\n\n\t* make socket/pipe reading more robust\n\n2007-01-25 16:01 Christos Zoulas <christos@astron.com>\n\n\t* Centralize all the tests in file_buffer.\n\n\t* Add exclude flag.\n\n2007-01-18 05:29 Anon Ymous <do@not.spam.me>\n\n\t* Move the \"type\" detection code from parse() into its own table\n\t  driven routine.  This avoids maintaining multiple lists in\n\t  file.h.\n\n\t* Add an optional conditional field (ust before the type field).\n\t  This code is wrapped in \"#ifdef ENABLE_CONDITIONALS\" as it is\n\t  likely to go away.\n\n2007-01-16 23:24 Anon Ymous <do@not.spam.me>\n\n\t* Fix an initialization bug in check_mem().\n\n2007-01-16 14:58 Anon Ymous <do@not.spam.me>\n\n\t* Add a \"default\" type to print a message if nothing previously\n\t  matched at that level or since the last default at that\n\t  level.  This is useful for setting up switch-like statements.\n\t  It can also be used to do if/else constructions without a\n\t  redundant second test.\n\n\t* Fix the \"x\" special case test so that one can test for that\n\t  string with \"=x\".\n\n\t* Allow \"search\" to search the entire buffer if the \"/N\"\n\t  search count is missing.\n\n\t* Make \"regex\" work!  It now starts its search at the\n\t  specified offset and takes an (optional) \"/N\" line count to\n\t  specify the search range; otherwise it searches to the end\n\t  of the file.  The match is now grabbed correctly for format\n\t  strings and the offset set to the end of the match.\n\n\t* Add a \"/s\" flag to \"regex\" and \"search\" to set the offset to\n\t  the start of the match.  By default the offset is set to the\n\t  end of the match, as it is with other tests.  This is mostly\n\t  useful for \"regex\".\n\n\t* Make \"search\", \"string\" and \"pstring\" use the same\n\t  file_strncmp() routine so that they support the same flags;\n\t  \"bestring16\" and \"lestring16\" call the same routine, but\n\t  with flags = 0.  Also add a \"/C\" flag (in analogy to \"/c\")\n\t  to ignore the case on uppercase (lowercase) characters in\n\t  the test string.\n\n\t* Strict adherence to C style string escapes.  A warnings are\n\t  printed when compiling.  Note: previously \"\\a\" was\n\t  incorrectly translated to 'a' instead of an <alert> (i.e.,\n\t  BELL, typically 0x07).\n\n\t* Make this compile with \"-Wall -Wextra\" and all the warning\n\t  flags used with WARNS=4 in the NetBSD source.  Also make it\n\t  pass lint.\n\n\t* Many \"cleanups\" and hopefully not too many new bugs!\n\n2007-01-16 14:56 Anon Ymous <do@not.spam.me>\n\n\t* make several more files compile with gcc warnings\n\t  on and also make them pass lint.\n\n2007-01-16 14:54 Anon Ymous <do@not.spam.me>\n\n\t* fix a puts()/putc() usage goof in file.c\n\n\t* make file.c compile with gcc warnings and pass lint\n\n2006-12-11 16:49 Christos Zoulas <christos@astron.com>\n\n\t* fix byteswapping issue\n\n\t* report the number of bytes we tried to\n\t  allocate when allocation fails\n\n\t* add a few missed cases in the strength routine\n\n2006-12-08 16:32 Christos Zoulas <christos@astron.com>\n\n\t* store and print the line number of the magic\n\t  entry for debugging.\n\n\t* if the magic entry did not print anything,\n\t  don't treat it as a match\n\n\t* change the magic strength algorithm to take\n\t  into account the relationship op.\n\n\t* fix a bug in search where we could accidentally\n\t  return a match.\n\n\t* propagate the error return from match to\n\t  file_softmagic.\n\n2006-11-25 13:35 Christos Zoulas <christos@astron.com>\n\n\t* Don't store the current offset in the magic\n\t  struct, because it needs to be restored and\n\t  it was not done properly all the time. Bug\n\t  found by: Arkadiusz Miskiewicz\n\n\t* Fix problem in the '\\0' separator; and don't\n\t  print it as an additional separator; print\n\t  it as the only separator.\n\n2006-11-17 10:51 Christos Zoulas <christos@astron.com>\n\n\t* Added a -0 option to print a '\\0' separator\n\t  Etienne Buira <etienne.buira@free.fr>\n\n2006-10-31 15:14 Christos Zoulas <christos@astron.com>\n\n\t* Check offset before copying (Mike Frysinger)\n\n\t* merge duplicated code\n\n\t* add quad date support\n\n\t* make sure that we nul terminate desc (Ryoji Kanai)\n\n\t* don't process elf notes multiple times\n\n\t* allow -z to report empty compressed files\n\n\t* use calloc to initialize the ascii buffers (Jos van den Oever)\n\n2006-06-08 11:11 Christos Zoulas <christos@astron.com>\n\n\t* QNX fixes (Mike Gorchak)\n\n\t* Add quad support.\n\n\t* FIFO checks (Dr. Werner Fink)\n\n\t* Linux ELF fixes (Dr. Werner Fink)\n\n\t* Magic format checks (Dr. Werner Fink)\n\n\t* Magic format function improvent (Karl Chen)\n\n2006-05-03 11:11 Christos Zoulas <christos@astron.com>\n\n\t* Pick up some elf changes and some constant fixes from SUSE\n\n\t* Identify gnu tar vs. posix tar\n\n\t* When keep going, don't print spurious newlines (Radek Vokal)\n\n2006-04-01 12:02 Christos Zoulas <christos@astron.com>\n\n\t* Use calloc instead of malloc (Mike Frysinger)\n\n\t* Fix configure script to detect wctypes.h (Mike Frysinger)\n\n2006-03-02 16:06 Christos Zoulas <christos@astron.com>\n\n\t* Print empty if the file is (Mike Frysinger)\n\n\t* Don't try to read past the end of the buffer (Mike Frysinger)\n\n\t* Sort magic entries by strength [experimental]\n\n2005-11-29 13:26 Christos Zoulas <christos@astron.com>\n\n\t* Use iswprint() to convert the output string.\n\t    (Bastien Nocera)\n\n2005-10-31 8:54 Christos Zoulas <christos@astron.com>\n\n\t* Fix regression where the core info was not completely processed\n\t    (Radek Vokal)\n\n2005-10-20 11:15 Christos Zoulas <christos@astron.com>\n\n\t* Middle Endian magic (Diomidis Spinellis)\n\n2005-10-17 11:15 Christos Zoulas <christos@astron.com>\n\n\t* Open with O_BINARY for CYGWIN (Corinna Vinschen)\n\n\t* Don't close stdin (Arkadiusz Miskiewicz)\n\n\t* Look for note sections in non executables.\n\n2005-09-20 13:33 Christos Zoulas <christos@astron.com>\n\n\t* Don't print SVR4 Style in core files multiple times\n\t    (Radek Vokal)\n\n2005-08-27 04:09 Christos Zoulas <christos@astron.com>\n\n\t* Cygwin changes Corinna Vinschen\n\n2005-08-18 09:53 Christos Zoulas <christos@astron.com>\n\n\t* Remove erroreous mention of /etc/magic in the file man page\n\t  This is gentoo bug 101639. (Mike Frysinger)\n\n\t* Cross-compile support and detection (Mike Frysinger)\n\n2005-08-12 10:17 Christos Zoulas <christos@astron.com>\n\n\t* Add -h flag and dereference symlinks if POSIXLY_CORRECT\n\t  is set.\n\n2005-07-29 13:57 Christos Zoulas <christos@astron.com>\n\n\t* Avoid search and regex buffer overflows (Kelledin)\n\n2005-07-12 11:48 Christos Zoulas <christos@astron.com>\n\n\t* Provide stub implementations for {v,}nsprintf() for older\n\t  OS's that don't have them.\n\t* Change mbstate_t autoconf detection macro from AC_MBSTATE_T\n\t  to AC_TYPE_MBSTATE_T.\n\n2005-06-25 11:48 Christos Zoulas <christos@astron.com>\n\n\t* Dynamically allocate the string buffers and make the\n\t  default read size 256K.\n\n2005-06-01 00:00 Joerg Sonnenberger <joerg@britannica.bec.de>\n\n\t* Dragonfly ELF note support\n\n2005-03-14 00:00 Giuliano Bertoletti <gb@symbolic.it>\n\n\t* Avoid NULL pointer dereference in time conversion.\n\n2005-03-06 00:00  Joerg Walter <jwalt@mail.garni.ch>\n\n\t* Add indirect magic offset support, and search mode.\n\n2005-01-12 00:00  Stepan Kasal  <kasal@ucw.cz>\n\n\t* src/ascmagic.c (file_ascmagic): Fix three bugs about text files:\n\t  If a CRLF text file happens to have CR at offset HOWMANY - 1\n\t  (currently 0xffff), it should not be counted as CR line\n\t  terminator.\n\t  If a line has length exactly MAXLINELEN, it should not yet be\n\t  treated as a ``very long line'', as MAXLINELEN is ``longest sane\n\t  line length''.\n\t  With CRLF, the line length was not computed correctly, and even\n\t  lines of length MAXLINELEN - 1 were treated as ``very long''.\n\n2004-12-07 14:15  Christos Zoulas  <christos@astron.com>\n\n\t* bzip2 needs a lot of input buffer space on some files\n\t  before it can begin uncompressing. This makes file -z\n\t  fail on some bz2 files. Fix it by giving it a copy of\n\t  the file descriptor to read as much as it wants if we\n\t  have access to it. <christos@astron.com>\n\n2004-11-24 12:39  Christos Zoulas  <christos@astron.com>\n\n\t* Stack smash fix, and ELF more conservative reading.\n\t  Jakub Bogusz <qboosh@pld-linux.org>\n\n2004-11-20 18:50  Christos Zoulas  <christos@astron.com>\n\n\t* New FreeBSD version parsing code:\n\t  Jon Noack <noackjr@alumni.rice.edu>\n\n\t* Hackish support for ucs16 strings <christos@astron.com>\n\n2004-11-13 03:07  Christos Zoulas  <christos@astron.com>\n\n\t* print the file name and line number in syntax errors.\n\n2004 10-12 10:50  Christos Zoulas  <christos@astron.com>\n\n\t* Fix stack overwriting on 0 length strings: Tim Waugh\n\t    <twaugh@redhat.com> Ned Ludd <solar@gentoo.org>\n\n2004-09-27 11:30  Christos Zoulas  <christos@astron.com>\n\n\t* Remove 3rd and 4th copyright clause; approved by Ian Darwin.\n\n\t* Fix small memory leaks; caught by: Tamas Sarlos\n\t    <stamas@csillag.ilab.sztaki.hu>\n\n2004-07-24 16:33  Christos Zoulas  <christos@astron.com>\n\n\t* magic.mime update Danny Milosavljevic <danny.milo@gmx.net>\n\n\t* FreeBSD version update Oliver Eikemeier <eikemeier@fillmore-labs.com>\n\n\t* utime/utimes detection Ian Lance Taylor <ian@wasabisystems.com>\n\n  \t* errors reading elf magic Jakub Bogusz <qboosh@pld-linux.org>\n\n2004-04-12 10:55  Christos Zoulas  <christos@astron.com>\n\n\t* make sure that magic formats match magic types during compilation\n\n\t* fix broken sgi magic file\n\n2004-04-06 20:36  Christos Zoulas  <christos@astron.com>\n\n\t* detect present of mbstate_t Petter Reinholdtsen <pere@hungry.com>\n\n\t* magic fixes\n\n2004-03-22 15:25  Christos Zoulas  <christos@astron.com>\n\n\t* Lots of mime fixes\n\t  (Joerg Ostertag) <ostertag@rechengilde.de>\n\n\t* FreeBSD ELF version handling\n\t  (Edwin Groothuis) <edwin@mavetju.org>\n\n\t* correct cleanup in all cases; don't just close the file.\n\t  (Christos Zoulas) <christos@astron.com>\n\n\t* add gettext message catalogue support\n\t  (Michael Piefel) <piefel@debian.org>\n\n\t* better printout for unreadable files\n\t  (Michael Piefel) <piefel@debian.org>\n\n\t* compensate for missing MAXPATHLEN\n\t  (Michael Piefel) <piefel@debian.org>\n\n\t* add wide character string length computation\n\t  (Michael Piefel) <piefel@debian.org>\n\n\t* Avoid infinite loops caused by bad elf alignments\n\t  or name and description note sizes. Reported by\n\t  (Mikael Magnusson) <mmikael@comhem.se>\n\n2004-03-09 13:55  Christos Zoulas  <christos@astron.com>\n\n\t* Fix possible memory leak on error and add missing regfree\n\t  (Dmitry V. Levin) <ldv@altlinux.org>\n\n2003-12-23 12:12  Christos Zoulas  <christos@astron.com>\n\n\t* fix -k flag (Maciej W. Rozycki)\n\n2003-11-18 14:10  Christos Zoulas  <christos@astron.com>\n\n\t* Try to give us much info as possible on corrupt elf files.\n\t  (Willy Tarreau) <willy@w.ods.org>\n\t* Updated python bindings (Brett Funderburg)\n\t   <brettf@deepfile.com>\n\n2003-11-11 15:03  Christos Zoulas  <christos@astron.com>\n\n\t* Include file.h first, because it includes config.h\n\t  breaks largefile test macros otherwise.\n\t  (Paul Eggert <eggert@CS.UCLA.EDU> via\n\t   Lars Hecking <lhecking@nmrc.ie>)\n\n2003-10-14 21:39  Christos Zoulas  <christos@astron.com>\n\n\t* Python bindings (Brett Funderburg) <brettf@deepfile.com>\n\t* Don't lookup past the end of the buffer\n\t  (Chad Hanson) <chanson@tcs-sec.com>\n\t* Add MAGIC_ERROR and api on magic_errno()\n\n2003-10-08 12:40  Christos Zoulas  <christos@astron.com>\n\n\t* handle error conditions from compile as fatal\n\t  (Antti Kantee) <pooka@netbsd.org>\n\t* handle magic filename parsing sanely\n\t* more magic fixes.\n\t* fix a memory leak (Illes Marton) <illes.marton@balabit.hu>\n\t* describe magic file handling\n\t  (Bryan Henderson) <bryanh@giraffe-data.com>\n\n2003-09-12 15:09  Christos Zoulas  <christos@astron.com>\n\n\t* update magic files.\n\t* remove largefile support from file.h; it breaks things on most OS's\n\n2003-08-10 10:25  Christos Zoulas  <christos@astron.com>\n\n\t* fix unmapping'ing of mmaped files.\n\n2003-07-10 12:03  Christos Zoulas  <christos@astron.com>\n\n\t* don't exit with -1 on error; always exit 1 (Marty Leisner)\n\t* restore utimes code.\n\n2003-06-10 17:03  Christos Zoulas  <christos@astron.com>\n\n\t* make sure we don't access uninitialized memory.\n\t* pass lint\n\t* #ifdef __cplusplus in magic.h\n\n2003-05-25 19:23  Christos Zoulas  <christos@astron.com>\n\n\t* rename cvs magic file to revision to deal with\n\t  case insensitive filesystems.\n\n2003-05-23 17:03  Christos Zoulas  <christos@astron.com>\n\n\t* documentation fixes from Michael Piefel <piefel@debian.org>\n\t* magic fixes (various)\n\t* revert basename magic in .mgc name determination\n\t* buffer protection in uncompress,\n\t  signness issues,\n\t  close files\n\t  Maciej W. Rozycki <macro@ds2.pg.gda.pl\n\n2003-04-21 20:12  Christos Zoulas  <christos@astron.com>\n\n\t* fix zsh magic\n\n2003-04-04 16:59  Christos Zoulas  <christos@astron.com>\n\n\t* fix operand sort order in string.\n\n2003-04-02 17:30  Christos Zoulas  <christos@astron.com>\n\n\t* cleanup namespace in magic.h\n\n2003-04-02 13:50  Christos Zoulas  <christos@astron.com>\n\n\t* Magic additions (Alex Ott)\n\t* Fix bug that broke VPATH compilation (Peter Breitenlohner)\n\n2003-03-28 16:03  Christos Zoulas  <christos@astron.com>\n\n\t* remove packed attribute from magic struct.\n\t* make the magic struct properly aligned.\n\t* bump version number of compiled files to 2.\n\n2003-03-27 13:10  Christos Zoulas  <christos@astron.com>\n\n\t* separate tar detection and run it before softmagic.\n\t* fix reversed symlink test.\n\t* fix version printing.\n\t* make separator a string instead of a char.\n\t* update manual page and sort options.\n\n2003-03-26 11:00  Christos Zoulas  <christos@astron.com>\n\n\t* Pass lint\n\t* make NULL in magic_file mean stdin\n\t* Fix \"-\" argument to file to pass NULL to magic_file\n\t* avoid pointer casts by using memcpy\n\t* rename magic_buf -> magic_buffer\n\t* keep only the first error\n\t* manual page: new sentence, new line\n\t* fix typo in api function (magic_buf -> magic_buffer)\n", "/*\n * Copyright (c) Christos Zoulas 2003.\n * All Rights Reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice immediately at the beginning of the file, without modification,\n *    this list of conditions, and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *  \n * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n#include \"file.h\"\n\n#ifndef lint\nFILE_RCSID(\"@(#)$File: readelf.c,v 1.102 2014/03/11 21:00:13 christos Exp $\")\n#endif\n\n#ifdef BUILTIN_ELF\n#include <string.h>\n#include <ctype.h>\n#include <stdlib.h>\n#ifdef HAVE_UNISTD_H\n#include <unistd.h>\n#endif\n\n#include \"readelf.h\"\n#include \"magic.h\"\n\n#ifdef\tELFCORE\nprivate int dophn_core(struct magic_set *, int, int, int, off_t, int, size_t,\n    off_t, int *);\n#endif\nprivate int dophn_exec(struct magic_set *, int, int, int, off_t, int, size_t,\n    off_t, int *, int);\nprivate int doshn(struct magic_set *, int, int, int, off_t, int, size_t,\n    off_t, int *, int, int);\nprivate size_t donote(struct magic_set *, void *, size_t, size_t, int,\n    int, size_t, int *);\n\n#define\tELF_ALIGN(a)\t((((a) + align - 1) / align) * align)\n\n#define isquote(c) (strchr(\"'\\\"`\", (c)) != NULL)\n\nprivate uint16_t getu16(int, uint16_t);\nprivate uint32_t getu32(int, uint32_t);\nprivate uint64_t getu64(int, uint64_t);\n\nprivate uint16_t\ngetu16(int swap, uint16_t value)\n{\n\tunion {\n\t\tuint16_t ui;\n\t\tchar c[2];\n\t} retval, tmpval;\n\n\tif (swap) {\n\t\ttmpval.ui = value;\n\n\t\tretval.c[0] = tmpval.c[1];\n\t\tretval.c[1] = tmpval.c[0];\n\t\t\n\t\treturn retval.ui;\n\t} else\n\t\treturn value;\n}\n\nprivate uint32_t\ngetu32(int swap, uint32_t value)\n{\n\tunion {\n\t\tuint32_t ui;\n\t\tchar c[4];\n\t} retval, tmpval;\n\n\tif (swap) {\n\t\ttmpval.ui = value;\n\n\t\tretval.c[0] = tmpval.c[3];\n\t\tretval.c[1] = tmpval.c[2];\n\t\tretval.c[2] = tmpval.c[1];\n\t\tretval.c[3] = tmpval.c[0];\n\t\t\n\t\treturn retval.ui;\n\t} else\n\t\treturn value;\n}\n\nprivate uint64_t\ngetu64(int swap, uint64_t value)\n{\n\tunion {\n\t\tuint64_t ui;\n\t\tchar c[8];\n\t} retval, tmpval;\n\n\tif (swap) {\n\t\ttmpval.ui = value;\n\n\t\tretval.c[0] = tmpval.c[7];\n\t\tretval.c[1] = tmpval.c[6];\n\t\tretval.c[2] = tmpval.c[5];\n\t\tretval.c[3] = tmpval.c[4];\n\t\tretval.c[4] = tmpval.c[3];\n\t\tretval.c[5] = tmpval.c[2];\n\t\tretval.c[6] = tmpval.c[1];\n\t\tretval.c[7] = tmpval.c[0];\n\t\t\n\t\treturn retval.ui;\n\t} else\n\t\treturn value;\n}\n\n#define elf_getu16(swap, value) getu16(swap, value)\n#define elf_getu32(swap, value) getu32(swap, value)\n#define elf_getu64(swap, value) getu64(swap, value)\n\n#define xsh_addr\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? (void *)&sh32\t\t\t\\\n\t\t\t : (void *)&sh64)\n#define xsh_sizeof\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? sizeof(sh32)\t\t\t\t\\\n\t\t\t : sizeof(sh64))\n#define xsh_size\t(size_t)(clazz == ELFCLASS32\t\t\\\n\t\t\t ? elf_getu32(swap, sh32.sh_size)\t\\\n\t\t\t : elf_getu64(swap, sh64.sh_size))\n#define xsh_offset\t(off_t)(clazz == ELFCLASS32\t\t\\\n\t\t\t ? elf_getu32(swap, sh32.sh_offset)\t\\\n\t\t\t : elf_getu64(swap, sh64.sh_offset))\n#define xsh_type\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? elf_getu32(swap, sh32.sh_type)\t\\\n\t\t\t : elf_getu32(swap, sh64.sh_type))\n#define xsh_name    \t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? elf_getu32(swap, sh32.sh_name)\t\\\n\t\t\t : elf_getu32(swap, sh64.sh_name))\n#define xph_addr\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? (void *) &ph32\t\t\t\\\n\t\t\t : (void *) &ph64)\n#define xph_sizeof\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? sizeof(ph32)\t\t\t\t\\\n\t\t\t : sizeof(ph64))\n#define xph_type\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? elf_getu32(swap, ph32.p_type)\t\\\n\t\t\t : elf_getu32(swap, ph64.p_type))\n#define xph_offset\t(off_t)(clazz == ELFCLASS32\t\t\\\n\t\t\t ? elf_getu32(swap, ph32.p_offset)\t\\\n\t\t\t : elf_getu64(swap, ph64.p_offset))\n#define xph_align\t(size_t)((clazz == ELFCLASS32\t\t\\\n\t\t\t ? (off_t) (ph32.p_align ? \t\t\\\n\t\t\t    elf_getu32(swap, ph32.p_align) : 4) \\\n\t\t\t : (off_t) (ph64.p_align ?\t\t\\\n\t\t\t    elf_getu64(swap, ph64.p_align) : 4)))\n#define xph_filesz\t(size_t)((clazz == ELFCLASS32\t\t\\\n\t\t\t ? elf_getu32(swap, ph32.p_filesz)\t\\\n\t\t\t : elf_getu64(swap, ph64.p_filesz)))\n#define xnh_addr\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? (void *)&nh32\t\t\t\\\n\t\t\t : (void *)&nh64)\n#define xph_memsz\t(size_t)((clazz == ELFCLASS32\t\t\\\n\t\t\t ? elf_getu32(swap, ph32.p_memsz)\t\\\n\t\t\t : elf_getu64(swap, ph64.p_memsz)))\n#define xnh_sizeof\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? sizeof nh32\t\t\t\t\\\n\t\t\t : sizeof nh64)\n#define xnh_type\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? elf_getu32(swap, nh32.n_type)\t\\\n\t\t\t : elf_getu32(swap, nh64.n_type))\n#define xnh_namesz\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? elf_getu32(swap, nh32.n_namesz)\t\\\n\t\t\t : elf_getu32(swap, nh64.n_namesz))\n#define xnh_descsz\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? elf_getu32(swap, nh32.n_descsz)\t\\\n\t\t\t : elf_getu32(swap, nh64.n_descsz))\n#define prpsoffsets(i)\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? prpsoffsets32[i]\t\t\t\\\n\t\t\t : prpsoffsets64[i])\n#define xcap_addr\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? (void *)&cap32\t\t\t\\\n\t\t\t : (void *)&cap64)\n#define xcap_sizeof\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? sizeof cap32\t\t\t\t\\\n\t\t\t : sizeof cap64)\n#define xcap_tag\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? elf_getu32(swap, cap32.c_tag)\t\\\n\t\t\t : elf_getu64(swap, cap64.c_tag))\n#define xcap_val\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? elf_getu32(swap, cap32.c_un.c_val)\t\\\n\t\t\t : elf_getu64(swap, cap64.c_un.c_val))\n\n#ifdef ELFCORE\n/*\n * Try larger offsets first to avoid false matches\n * from earlier data that happen to look like strings.\n */\nstatic const size_t\tprpsoffsets32[] = {\n#ifdef USE_NT_PSINFO\n\t104,\t\t/* SunOS 5.x (command line) */\n\t88,\t\t/* SunOS 5.x (short name) */\n#endif /* USE_NT_PSINFO */\n\n\t100,\t\t/* SunOS 5.x (command line) */\n\t84,\t\t/* SunOS 5.x (short name) */\n\n\t44,\t\t/* Linux (command line) */\n\t28,\t\t/* Linux 2.0.36 (short name) */\n\n\t8,\t\t/* FreeBSD */\n};\n\nstatic const size_t\tprpsoffsets64[] = {\n#ifdef USE_NT_PSINFO\n\t152,\t\t/* SunOS 5.x (command line) */\n\t136,\t\t/* SunOS 5.x (short name) */\n#endif /* USE_NT_PSINFO */\n\n\t136,\t\t/* SunOS 5.x, 64-bit (command line) */\n\t120,\t\t/* SunOS 5.x, 64-bit (short name) */\n\n\t56,\t\t/* Linux (command line) */\n\t40,             /* Linux (tested on core from 2.4.x, short name) */\n\n\t16,\t\t/* FreeBSD, 64-bit */\n};\n\n#define\tNOFFSETS32\t(sizeof prpsoffsets32 / sizeof prpsoffsets32[0])\n#define NOFFSETS64\t(sizeof prpsoffsets64 / sizeof prpsoffsets64[0])\n\n#define NOFFSETS\t(clazz == ELFCLASS32 ? NOFFSETS32 : NOFFSETS64)\n\n/*\n * Look through the program headers of an executable image, searching\n * for a PT_NOTE section of type NT_PRPSINFO, with a name \"CORE\" or\n * \"FreeBSD\"; if one is found, try looking in various places in its\n * contents for a 16-character string containing only printable\n * characters - if found, that string should be the name of the program\n * that dropped core.  Note: right after that 16-character string is,\n * at least in SunOS 5.x (and possibly other SVR4-flavored systems) and\n * Linux, a longer string (80 characters, in 5.x, probably other\n * SVR4-flavored systems, and Linux) containing the start of the\n * command line for that program.\n *\n * SunOS 5.x core files contain two PT_NOTE sections, with the types\n * NT_PRPSINFO (old) and NT_PSINFO (new).  These structs contain the\n * same info about the command name and command line, so it probably\n * isn't worthwhile to look for NT_PSINFO, but the offsets are provided\n * above (see USE_NT_PSINFO), in case we ever decide to do so.  The\n * NT_PRPSINFO and NT_PSINFO sections are always in order and adjacent;\n * the SunOS 5.x file command relies on this (and prefers the latter).\n *\n * The signal number probably appears in a section of type NT_PRSTATUS,\n * but that's also rather OS-dependent, in ways that are harder to\n * dissect with heuristics, so I'm not bothering with the signal number.\n * (I suppose the signal number could be of interest in situations where\n * you don't have the binary of the program that dropped core; if you\n * *do* have that binary, the debugger will probably tell you what\n * signal it was.)\n */\n\n#define\tOS_STYLE_SVR4\t\t0\n#define\tOS_STYLE_FREEBSD\t1\n#define\tOS_STYLE_NETBSD\t\t2\n\nprivate const char os_style_names[][8] = {\n\t\"SVR4\",\n\t\"FreeBSD\",\n\t\"NetBSD\",\n};\n\n#define FLAGS_DID_CORE\t\t0x01\n#define FLAGS_DID_NOTE\t\t0x02\n#define FLAGS_DID_BUILD_ID\t0x04\n#define FLAGS_DID_CORE_STYLE\t0x08\n#define FLAGS_IS_CORE\t\t0x10\n\nprivate int\ndophn_core(struct magic_set *ms, int clazz, int swap, int fd, off_t off,\n    int num, size_t size, off_t fsize, int *flags)\n{\n\tElf32_Phdr ph32;\n\tElf64_Phdr ph64;\n\tsize_t offset, len;\n\tunsigned char nbuf[BUFSIZ];\n\tssize_t bufsize;\n\n\tif (size != xph_sizeof) {\n\t\tif (file_printf(ms, \", corrupted program header size\") == -1)\n\t\t\treturn -1;\n\t\treturn 0;\n\t}\n\n\t/*\n\t * Loop through all the program headers.\n\t */\n\tfor ( ; num; num--) {\n\t\tif (pread(fd, xph_addr, xph_sizeof, off) == -1) {\n\t\t\tfile_badread(ms);\n\t\t\treturn -1;\n\t\t}\n\t\toff += size;\n\n\t\tif (xph_offset > fsize) {\n\t\t\t/* Perhaps warn here */\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (xph_type != PT_NOTE)\n\t\t\tcontinue;\n\n\t\t/*\n\t\t * This is a PT_NOTE section; loop through all the notes\n\t\t * in the section.\n\t\t */\n\t\tlen = xph_filesz < sizeof(nbuf) ? xph_filesz : sizeof(nbuf);\n\t\tif ((bufsize = pread(fd, nbuf, len, xph_offset)) == -1) {\n\t\t\tfile_badread(ms);\n\t\t\treturn -1;\n\t\t}\n\t\toffset = 0;\n\t\tfor (;;) {\n\t\t\tif (offset >= (size_t)bufsize)\n\t\t\t\tbreak;\n\t\t\toffset = donote(ms, nbuf, offset, (size_t)bufsize,\n\t\t\t    clazz, swap, 4, flags);\n\t\t\tif (offset == 0)\n\t\t\t\tbreak;\n\n\t\t}\n\t}\n\treturn 0;\n}\n#endif\n\nstatic void\ndo_note_netbsd_version(struct magic_set *ms, int swap, void *v)\n{\n\tuint32_t desc;\n\t(void)memcpy(&desc, v, sizeof(desc));\n\tdesc = elf_getu32(swap, desc);\n\n\tif (file_printf(ms, \", for NetBSD\") == -1)\n\t\treturn;\n\t/*\n\t * The version number used to be stuck as 199905, and was thus\n\t * basically content-free.  Newer versions of NetBSD have fixed\n\t * this and now use the encoding of __NetBSD_Version__:\n\t *\n\t *\tMMmmrrpp00\n\t *\n\t * M = major version\n\t * m = minor version\n\t * r = release [\"\",A-Z,Z[A-Z] but numeric]\n\t * p = patchlevel\n\t */\n\tif (desc > 100000000U) {\n\t\tuint32_t ver_patch = (desc / 100) % 100;\n\t\tuint32_t ver_rel = (desc / 10000) % 100;\n\t\tuint32_t ver_min = (desc / 1000000) % 100;\n\t\tuint32_t ver_maj = desc / 100000000;\n\n\t\tif (file_printf(ms, \" %u.%u\", ver_maj, ver_min) == -1)\n\t\t\treturn;\n\t\tif (ver_rel == 0 && ver_patch != 0) {\n\t\t\tif (file_printf(ms, \".%u\", ver_patch) == -1)\n\t\t\t\treturn;\n\t\t} else if (ver_rel != 0) {\n\t\t\twhile (ver_rel > 26) {\n\t\t\t\tif (file_printf(ms, \"Z\") == -1)\n\t\t\t\t\treturn;\n\t\t\t\tver_rel -= 26;\n\t\t\t}\n\t\t\tif (file_printf(ms, \"%c\", 'A' + ver_rel - 1)\n\t\t\t    == -1)\n\t\t\t\treturn;\n\t\t}\n\t}\n}\n\nstatic void\ndo_note_freebsd_version(struct magic_set *ms, int swap, void *v)\n{\n\tuint32_t desc;\n\n\t(void)memcpy(&desc, v, sizeof(desc));\n\tdesc = elf_getu32(swap, desc);\n\tif (file_printf(ms, \", for FreeBSD\") == -1)\n\t\treturn;\n\n\t/*\n\t * Contents is __FreeBSD_version, whose relation to OS\n\t * versions is defined by a huge table in the Porter's\n\t * Handbook.  This is the general scheme:\n\t * \n\t * Releases:\n\t * \tMmp000 (before 4.10)\n\t * \tMmi0p0 (before 5.0)\n\t * \tMmm0p0\n\t * \n\t * Development branches:\n\t * \tMmpxxx (before 4.6)\n\t * \tMmp1xx (before 4.10)\n\t * \tMmi1xx (before 5.0)\n\t * \tM000xx (pre-M.0)\n\t * \tMmm1xx\n\t * \n\t * M = major version\n\t * m = minor version\n\t * i = minor version increment (491000 -> 4.10)\n\t * p = patchlevel\n\t * x = revision\n\t * \n\t * The first release of FreeBSD to use ELF by default\n\t * was version 3.0.\n\t */\n\tif (desc == 460002) {\n\t\tif (file_printf(ms, \" 4.6.2\") == -1)\n\t\t\treturn;\n\t} else if (desc < 460100) {\n\t\tif (file_printf(ms, \" %d.%d\", desc / 100000,\n\t\t    desc / 10000 % 10) == -1)\n\t\t\treturn;\n\t\tif (desc / 1000 % 10 > 0)\n\t\t\tif (file_printf(ms, \".%d\", desc / 1000 % 10) == -1)\n\t\t\t\treturn;\n\t\tif ((desc % 1000 > 0) || (desc % 100000 == 0))\n\t\t\tif (file_printf(ms, \" (%d)\", desc) == -1)\n\t\t\t\treturn;\n\t} else if (desc < 500000) {\n\t\tif (file_printf(ms, \" %d.%d\", desc / 100000,\n\t\t    desc / 10000 % 10 + desc / 1000 % 10) == -1)\n\t\t\treturn;\n\t\tif (desc / 100 % 10 > 0) {\n\t\t\tif (file_printf(ms, \" (%d)\", desc) == -1)\n\t\t\t\treturn;\n\t\t} else if (desc / 10 % 10 > 0) {\n\t\t\tif (file_printf(ms, \".%d\", desc / 10 % 10) == -1)\n\t\t\t\treturn;\n\t\t}\n\t} else {\n\t\tif (file_printf(ms, \" %d.%d\", desc / 100000,\n\t\t    desc / 1000 % 100) == -1)\n\t\t\treturn;\n\t\tif ((desc / 100 % 10 > 0) ||\n\t\t    (desc % 100000 / 100 == 0)) {\n\t\t\tif (file_printf(ms, \" (%d)\", desc) == -1)\n\t\t\t\treturn;\n\t\t} else if (desc / 10 % 10 > 0) {\n\t\t\tif (file_printf(ms, \".%d\", desc / 10 % 10) == -1)\n\t\t\t\treturn;\n\t\t}\n\t}\n}\n\nprivate size_t\ndonote(struct magic_set *ms, void *vbuf, size_t offset, size_t size,\n    int clazz, int swap, size_t align, int *flags)\n{\n\tElf32_Nhdr nh32;\n\tElf64_Nhdr nh64;\n\tsize_t noff, doff;\n#ifdef ELFCORE\n\tint os_style = -1;\n#endif\n\tuint32_t namesz, descsz;\n\tunsigned char *nbuf = CAST(unsigned char *, vbuf);\n\n\t(void)memcpy(xnh_addr, &nbuf[offset], xnh_sizeof);\n\toffset += xnh_sizeof;\n\n\tnamesz = xnh_namesz;\n\tdescsz = xnh_descsz;\n\tif ((namesz == 0) && (descsz == 0)) {\n\t\t/*\n\t\t * We're out of note headers.\n\t\t */\n\t\treturn (offset >= size) ? offset : size;\n\t}\n\n\tif (namesz & 0x80000000) {\n\t    (void)file_printf(ms, \", bad note name size 0x%lx\",\n\t\t(unsigned long)namesz);\n\t    return offset;\n\t}\n\n\tif (descsz & 0x80000000) {\n\t    (void)file_printf(ms, \", bad note description size 0x%lx\",\n\t\t(unsigned long)descsz);\n\t    return offset;\n\t}\n\n\n\tnoff = offset;\n\tdoff = ELF_ALIGN(offset + namesz);\n\n\tif (offset + namesz > size) {\n\t\t/*\n\t\t * We're past the end of the buffer.\n\t\t */\n\t\treturn doff;\n\t}\n\n\toffset = ELF_ALIGN(doff + descsz);\n\tif (doff + descsz > size) {\n\t\t/*\n\t\t * We're past the end of the buffer.\n\t\t */\n\t\treturn (offset >= size) ? offset : size;\n\t}\n\n\tif ((*flags & (FLAGS_DID_NOTE|FLAGS_DID_BUILD_ID)) ==\n\t    (FLAGS_DID_NOTE|FLAGS_DID_BUILD_ID))\n\t\tgoto core;\n\n\tif (namesz == 5 && strcmp((char *)&nbuf[noff], \"SuSE\") == 0 &&\n\t    xnh_type == NT_GNU_VERSION && descsz == 2) {\n\t    file_printf(ms, \", for SuSE %d.%d\", nbuf[doff], nbuf[doff + 1]);\n\t}\n\tif (namesz == 4 && strcmp((char *)&nbuf[noff], \"GNU\") == 0 &&\n\t    xnh_type == NT_GNU_VERSION && descsz == 16) {\n\t\tuint32_t desc[4];\n\t\t(void)memcpy(desc, &nbuf[doff], sizeof(desc));\n\n\t\tif (file_printf(ms, \", for GNU/\") == -1)\n\t\t\treturn size;\n\t\tswitch (elf_getu32(swap, desc[0])) {\n\t\tcase GNU_OS_LINUX:\n\t\t\tif (file_printf(ms, \"Linux\") == -1)\n\t\t\t\treturn size;\n\t\t\tbreak;\n\t\tcase GNU_OS_HURD:\n\t\t\tif (file_printf(ms, \"Hurd\") == -1)\n\t\t\t\treturn size;\n\t\t\tbreak;\n\t\tcase GNU_OS_SOLARIS:\n\t\t\tif (file_printf(ms, \"Solaris\") == -1)\n\t\t\t\treturn size;\n\t\t\tbreak;\n\t\tcase GNU_OS_KFREEBSD:\n\t\t\tif (file_printf(ms, \"kFreeBSD\") == -1)\n\t\t\t\treturn size;\n\t\t\tbreak;\n\t\tcase GNU_OS_KNETBSD:\n\t\t\tif (file_printf(ms, \"kNetBSD\") == -1)\n\t\t\t\treturn size;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (file_printf(ms, \"<unknown>\") == -1)\n\t\t\t\treturn size; \n\t\t}\n\t\tif (file_printf(ms, \" %d.%d.%d\", elf_getu32(swap, desc[1]),\n\t\t    elf_getu32(swap, desc[2]), elf_getu32(swap, desc[3])) == -1)\n\t\t\treturn size;\n\t\t*flags |= FLAGS_DID_NOTE;\n\t\treturn size;\n\t}\n\n\tif (namesz == 4 && strcmp((char *)&nbuf[noff], \"GNU\") == 0 &&\n\t    xnh_type == NT_GNU_BUILD_ID && (descsz == 16 || descsz == 20)) {\n\t    uint8_t desc[20];\n\t    uint32_t i;\n\t    if (file_printf(ms, \", BuildID[%s]=\", descsz == 16 ? \"md5/uuid\" :\n\t\t\"sha1\") == -1)\n\t\t    return size;\n\t    (void)memcpy(desc, &nbuf[doff], descsz);\n\t    for (i = 0; i < descsz; i++)\n\t\tif (file_printf(ms, \"%02x\", desc[i]) == -1)\n\t\t    return size;\n\t    *flags |= FLAGS_DID_BUILD_ID;\n\t}\n\n\tif (namesz == 4 && strcmp((char *)&nbuf[noff], \"PaX\") == 0 &&\n\t    xnh_type == NT_NETBSD_PAX && descsz == 4) {\n\t\tstatic const char *pax[] = {\n\t\t    \"+mprotect\",\n\t\t    \"-mprotect\",\n\t\t    \"+segvguard\",\n\t\t    \"-segvguard\",\n\t\t    \"+ASLR\",\n\t\t    \"-ASLR\",\n\t\t};\n\t\tuint32_t desc;\n\t\tsize_t i;\n\t\tint did = 0;\n\n\t\t(void)memcpy(&desc, &nbuf[doff], sizeof(desc));\n\t\tdesc = elf_getu32(swap, desc);\n\n\t\tif (desc && file_printf(ms, \", PaX: \") == -1)\n\t\t\treturn size;\n\n\t\tfor (i = 0; i < __arraycount(pax); i++) {\n\t\t\tif (((1 << i) & desc) == 0)\n\t\t\t\tcontinue;\n\t\t\tif (file_printf(ms, \"%s%s\", did++ ? \",\" : \"\",\n\t\t\t    pax[i]) == -1)\n\t\t\t\treturn size;\n\t\t}\n\t}\n\n\tif (namesz == 7 && strcmp((char *)&nbuf[noff], \"NetBSD\") == 0) {\n\t\tswitch (xnh_type) {\n\t\tcase NT_NETBSD_VERSION:\n\t\t\tif (descsz == 4) {\n\t\t\t\tdo_note_netbsd_version(ms, swap, &nbuf[doff]);\n\t\t\t\t*flags |= FLAGS_DID_NOTE;\n\t\t\t\treturn size;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase NT_NETBSD_MARCH:\n\t\t\tif (file_printf(ms, \", compiled for: %.*s\", (int)descsz,\n\t\t\t    (const char *)&nbuf[doff]) == -1)\n\t\t\t\treturn size;\n\t\t\tbreak;\n\t\tcase NT_NETBSD_CMODEL:\n\t\t\tif (file_printf(ms, \", compiler model: %.*s\",\n\t\t\t    (int)descsz, (const char *)&nbuf[doff]) == -1)\n\t\t\t\treturn size;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (file_printf(ms, \", note=%u\", xnh_type) == -1)\n\t\t\t\treturn size;\n\t\t\tbreak;\n\t\t}\n\t\treturn size;\n\t}\n\n\tif (namesz == 8 && strcmp((char *)&nbuf[noff], \"FreeBSD\") == 0) {\n\t    \tif (xnh_type == NT_FREEBSD_VERSION && descsz == 4) {\n\t\t\tdo_note_freebsd_version(ms, swap, &nbuf[doff]);\n\t\t\t*flags |= FLAGS_DID_NOTE;\n\t\t\treturn size;\n\t\t}\n\t}\n\n\tif (namesz == 8 && strcmp((char *)&nbuf[noff], \"OpenBSD\") == 0 &&\n\t    xnh_type == NT_OPENBSD_VERSION && descsz == 4) {\n\t\tif (file_printf(ms, \", for OpenBSD\") == -1)\n\t\t\treturn size;\n\t\t/* Content of note is always 0 */\n\t\t*flags |= FLAGS_DID_NOTE;\n\t\treturn size;\n\t}\n\n\tif (namesz == 10 && strcmp((char *)&nbuf[noff], \"DragonFly\") == 0 &&\n\t    xnh_type == NT_DRAGONFLY_VERSION && descsz == 4) {\n\t\tuint32_t desc;\n\t\tif (file_printf(ms, \", for DragonFly\") == -1)\n\t\t\treturn size;\n\t\t(void)memcpy(&desc, &nbuf[doff], sizeof(desc));\n\t\tdesc = elf_getu32(swap, desc);\n\t\tif (file_printf(ms, \" %d.%d.%d\", desc / 100000,\n\t\t    desc / 10000 % 10, desc % 10000) == -1)\n\t\t\treturn size;\n\t\t*flags |= FLAGS_DID_NOTE;\n\t\treturn size;\n\t}\n\ncore:\n\t/*\n\t * Sigh.  The 2.0.36 kernel in Debian 2.1, at\n\t * least, doesn't correctly implement name\n\t * sections, in core dumps, as specified by\n\t * the \"Program Linking\" section of \"UNIX(R) System\n\t * V Release 4 Programmer's Guide: ANSI C and\n\t * Programming Support Tools\", because my copy\n\t * clearly says \"The first 'namesz' bytes in 'name'\n\t * contain a *null-terminated* [emphasis mine]\n\t * character representation of the entry's owner\n\t * or originator\", but the 2.0.36 kernel code\n\t * doesn't include the terminating null in the\n\t * name....\n\t */\n\tif ((namesz == 4 && strncmp((char *)&nbuf[noff], \"CORE\", 4) == 0) ||\n\t    (namesz == 5 && strcmp((char *)&nbuf[noff], \"CORE\") == 0)) {\n\t\tos_style = OS_STYLE_SVR4;\n\t} \n\n\tif ((namesz == 8 && strcmp((char *)&nbuf[noff], \"FreeBSD\") == 0)) {\n\t\tos_style = OS_STYLE_FREEBSD;\n\t}\n\n\tif ((namesz >= 11 && strncmp((char *)&nbuf[noff], \"NetBSD-CORE\", 11)\n\t    == 0)) {\n\t\tos_style = OS_STYLE_NETBSD;\n\t}\n\n#ifdef ELFCORE\n\tif ((*flags & FLAGS_DID_CORE) != 0)\n\t\treturn size;\n\n\tif (os_style != -1 && (*flags & FLAGS_DID_CORE_STYLE) == 0) {\n\t\tif (file_printf(ms, \", %s-style\", os_style_names[os_style])\n\t\t    == -1)\n\t\t\treturn size;\n\t\t*flags |= FLAGS_DID_CORE_STYLE;\n\t}\n\n\tswitch (os_style) {\n\tcase OS_STYLE_NETBSD:\n\t\tif (xnh_type == NT_NETBSD_CORE_PROCINFO) {\n\t\t\tuint32_t signo;\n\t\t\t/*\n\t\t\t * Extract the program name.  It is at\n\t\t\t * offset 0x7c, and is up to 32-bytes,\n\t\t\t * including the terminating NUL.\n\t\t\t */\n\t\t\tif (file_printf(ms, \", from '%.31s'\",\n\t\t\t    &nbuf[doff + 0x7c]) == -1)\n\t\t\t\treturn size;\n\t\t\t\n\t\t\t/*\n\t\t\t * Extract the signal number.  It is at\n\t\t\t * offset 0x08.\n\t\t\t */\n\t\t\t(void)memcpy(&signo, &nbuf[doff + 0x08],\n\t\t\t    sizeof(signo));\n\t\t\tif (file_printf(ms, \" (signal %u)\",\n\t\t\t    elf_getu32(swap, signo)) == -1)\n\t\t\t\treturn size;\n\t\t\t*flags |= FLAGS_DID_CORE;\n\t\t\treturn size;\n\t\t}\n\t\tbreak;\n\n\tdefault:\n\t\tif (xnh_type == NT_PRPSINFO && *flags & FLAGS_IS_CORE) {\n\t\t\tsize_t i, j;\n\t\t\tunsigned char c;\n\t\t\t/*\n\t\t\t * Extract the program name.  We assume\n\t\t\t * it to be 16 characters (that's what it\n\t\t\t * is in SunOS 5.x and Linux).\n\t\t\t *\n\t\t\t * Unfortunately, it's at a different offset\n\t\t\t * in various OSes, so try multiple offsets.\n\t\t\t * If the characters aren't all printable,\n\t\t\t * reject it.\n\t\t\t */\n\t\t\tfor (i = 0; i < NOFFSETS; i++) {\n\t\t\t\tunsigned char *cname, *cp;\n\t\t\t\tsize_t reloffset = prpsoffsets(i);\n\t\t\t\tsize_t noffset = doff + reloffset;\n\t\t\t\tsize_t k;\n\t\t\t\tfor (j = 0; j < 16; j++, noffset++,\n\t\t\t\t    reloffset++) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Make sure we're not past\n\t\t\t\t\t * the end of the buffer; if\n\t\t\t\t\t * we are, just give up.\n\t\t\t\t\t */\n\t\t\t\t\tif (noffset >= size)\n\t\t\t\t\t\tgoto tryanother;\n\n\t\t\t\t\t/*\n\t\t\t\t\t * Make sure we're not past\n\t\t\t\t\t * the end of the contents;\n\t\t\t\t\t * if we are, this obviously\n\t\t\t\t\t * isn't the right offset.\n\t\t\t\t\t */\n\t\t\t\t\tif (reloffset >= descsz)\n\t\t\t\t\t\tgoto tryanother;\n\n\t\t\t\t\tc = nbuf[noffset];\n\t\t\t\t\tif (c == '\\0') {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * A '\\0' at the\n\t\t\t\t\t\t * beginning is\n\t\t\t\t\t\t * obviously wrong.\n\t\t\t\t\t\t * Any other '\\0'\n\t\t\t\t\t\t * means we're done.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (j == 0)\n\t\t\t\t\t\t\tgoto tryanother;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * A nonprintable\n\t\t\t\t\t\t * character is also\n\t\t\t\t\t\t * wrong.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (!isprint(c) || isquote(c))\n\t\t\t\t\t\t\tgoto tryanother;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\t * Well, that worked.\n\t\t\t\t */\n\n\t\t\t\t/*\n\t\t\t\t * Try next offsets, in case this match is\n\t\t\t\t * in the middle of a string.\n\t\t\t\t */\n\t\t\t\tfor (k = i + 1 ; k < NOFFSETS ; k++) {\n\t\t\t\t\tsize_t no;\n\t\t\t\t\tint adjust = 1;\n\t\t\t\t\tif (prpsoffsets(k) >= prpsoffsets(i))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tfor (no = doff + prpsoffsets(k);\n\t\t\t\t\t     no < doff + prpsoffsets(i); no++)\n\t\t\t\t\t\tadjust = adjust\n\t\t\t\t\t\t         && isprint(nbuf[no]);\n\t\t\t\t\tif (adjust)\n\t\t\t\t\t\ti = k;\n\t\t\t\t}\n\n\t\t\t\tcname = (unsigned char *)\n\t\t\t\t    &nbuf[doff + prpsoffsets(i)];\n\t\t\t\tfor (cp = cname; *cp && isprint(*cp); cp++)\n\t\t\t\t\tcontinue;\n\t\t\t\t/*\n\t\t\t\t * Linux apparently appends a space at the end\n\t\t\t\t * of the command line: remove it.\n\t\t\t\t */\n\t\t\t\twhile (cp > cname && isspace(cp[-1]))\n\t\t\t\t\tcp--;\n\t\t\t\tif (file_printf(ms, \", from '%.*s'\",\n\t\t\t\t    (int)(cp - cname), cname) == -1)\n\t\t\t\t\treturn size;\n\t\t\t\t*flags |= FLAGS_DID_CORE;\n\t\t\t\treturn size;\n\n\t\t\ttryanother:\n\t\t\t\t;\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n#endif\n\treturn offset;\n}\n\n/* SunOS 5.x hardware capability descriptions */\ntypedef struct cap_desc {\n\tuint64_t cd_mask;\n\tconst char *cd_name;\n} cap_desc_t;\n\nstatic const cap_desc_t cap_desc_sparc[] = {\n\t{ AV_SPARC_MUL32,\t\t\"MUL32\" },\n\t{ AV_SPARC_DIV32,\t\t\"DIV32\" },\n\t{ AV_SPARC_FSMULD,\t\t\"FSMULD\" },\n\t{ AV_SPARC_V8PLUS,\t\t\"V8PLUS\" },\n\t{ AV_SPARC_POPC,\t\t\"POPC\" },\n\t{ AV_SPARC_VIS,\t\t\t\"VIS\" },\n\t{ AV_SPARC_VIS2,\t\t\"VIS2\" },\n\t{ AV_SPARC_ASI_BLK_INIT,\t\"ASI_BLK_INIT\" },\n\t{ AV_SPARC_FMAF,\t\t\"FMAF\" },\n\t{ AV_SPARC_FJFMAU,\t\t\"FJFMAU\" },\n\t{ AV_SPARC_IMA,\t\t\t\"IMA\" },\n\t{ 0, NULL }\n};\n\nstatic const cap_desc_t cap_desc_386[] = {\n\t{ AV_386_FPU,\t\t\t\"FPU\" },\n\t{ AV_386_TSC,\t\t\t\"TSC\" },\n\t{ AV_386_CX8,\t\t\t\"CX8\" },\n\t{ AV_386_SEP,\t\t\t\"SEP\" },\n\t{ AV_386_AMD_SYSC,\t\t\"AMD_SYSC\" },\n\t{ AV_386_CMOV,\t\t\t\"CMOV\" },\n\t{ AV_386_MMX,\t\t\t\"MMX\" },\n\t{ AV_386_AMD_MMX,\t\t\"AMD_MMX\" },\n\t{ AV_386_AMD_3DNow,\t\t\"AMD_3DNow\" },\n\t{ AV_386_AMD_3DNowx,\t\t\"AMD_3DNowx\" },\n\t{ AV_386_FXSR,\t\t\t\"FXSR\" },\n\t{ AV_386_SSE,\t\t\t\"SSE\" },\n\t{ AV_386_SSE2,\t\t\t\"SSE2\" },\n\t{ AV_386_PAUSE,\t\t\t\"PAUSE\" },\n\t{ AV_386_SSE3,\t\t\t\"SSE3\" },\n\t{ AV_386_MON,\t\t\t\"MON\" },\n\t{ AV_386_CX16,\t\t\t\"CX16\" },\n\t{ AV_386_AHF,\t\t\t\"AHF\" },\n\t{ AV_386_TSCP,\t\t\t\"TSCP\" },\n\t{ AV_386_AMD_SSE4A,\t\t\"AMD_SSE4A\" },\n\t{ AV_386_POPCNT,\t\t\"POPCNT\" },\n\t{ AV_386_AMD_LZCNT,\t\t\"AMD_LZCNT\" },\n\t{ AV_386_SSSE3,\t\t\t\"SSSE3\" },\n\t{ AV_386_SSE4_1,\t\t\"SSE4.1\" },\n\t{ AV_386_SSE4_2,\t\t\"SSE4.2\" },\n\t{ 0, NULL }\n};\n\nprivate int\ndoshn(struct magic_set *ms, int clazz, int swap, int fd, off_t off, int num,\n    size_t size, off_t fsize, int *flags, int mach, int strtab)\n{\n\tElf32_Shdr sh32;\n\tElf64_Shdr sh64;\n\tint stripped = 1;\n\tvoid *nbuf;\n\toff_t noff, coff, name_off;\n\tuint64_t cap_hw1 = 0;\t/* SunOS 5.x hardware capabilites */\n\tuint64_t cap_sf1 = 0;\t/* SunOS 5.x software capabilites */\n\tchar name[50];\n\n\tif (size != xsh_sizeof) {\n\t\tif (file_printf(ms, \", corrupted section header size\") == -1)\n\t\t\treturn -1;\n\t\treturn 0;\n\t}\n\n\t/* Read offset of name section to be able to read section names later */\n\tif (pread(fd, xsh_addr, xsh_sizeof, off + size * strtab) == -1) {\n\t\tfile_badread(ms);\n\t\treturn -1;\n\t}\n\tname_off = xsh_offset;\n\n\tfor ( ; num; num--) {\n\t\t/* Read the name of this section. */\n\t\tif (pread(fd, name, sizeof(name), name_off + xsh_name) == -1) {\n\t\t\tfile_badread(ms);\n\t\t\treturn -1;\n\t\t}\n\t\tname[sizeof(name) - 1] = '\\0';\n\t\tif (strcmp(name, \".debug_info\") == 0)\n\t\t\tstripped = 0;\n\n\t\tif (pread(fd, xsh_addr, xsh_sizeof, off) == -1) {\n\t\t\tfile_badread(ms);\n\t\t\treturn -1;\n\t\t}\n\t\toff += size;\n\n\t\t/* Things we can determine before we seek */\n\t\tswitch (xsh_type) {\n\t\tcase SHT_SYMTAB:\n#if 0\n\t\tcase SHT_DYNSYM:\n#endif\n\t\t\tstripped = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (xsh_offset > fsize) {\n\t\t\t\t/* Perhaps warn here */\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\t/* Things we can determine when we seek */\n\t\tswitch (xsh_type) {\n\t\tcase SHT_NOTE:\n\t\t\tif ((nbuf = malloc(xsh_size)) == NULL) {\n\t\t\t\tfile_error(ms, errno, \"Cannot allocate memory\"\n\t\t\t\t    \" for note\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (pread(fd, nbuf, xsh_size, xsh_offset) == -1) {\n\t\t\t\tfile_badread(ms);\n\t\t\t\tfree(nbuf);\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tnoff = 0;\n\t\t\tfor (;;) {\n\t\t\t\tif (noff >= (off_t)xsh_size)\n\t\t\t\t\tbreak;\n\t\t\t\tnoff = donote(ms, nbuf, (size_t)noff,\n\t\t\t\t    xsh_size, clazz, swap, 4, flags);\n\t\t\t\tif (noff == 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfree(nbuf);\n\t\t\tbreak;\n\t\tcase SHT_SUNW_cap:\n\t\t\tswitch (mach) {\n\t\t\tcase EM_SPARC:\n\t\t\tcase EM_SPARCV9:\n\t\t\tcase EM_IA_64:\n\t\t\tcase EM_386:\n\t\t\tcase EM_AMD64:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tgoto skip;\n\t\t\t}\n\n\t\t\tif (lseek(fd, xsh_offset, SEEK_SET) == (off_t)-1) {\n\t\t\t\tfile_badseek(ms);\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tcoff = 0;\n\t\t\tfor (;;) {\n\t\t\t\tElf32_Cap cap32;\n\t\t\t\tElf64_Cap cap64;\n\t\t\t\tchar cbuf[/*CONSTCOND*/\n\t\t\t\t    MAX(sizeof cap32, sizeof cap64)];\n\t\t\t\tif ((coff += xcap_sizeof) > (off_t)xsh_size)\n\t\t\t\t\tbreak;\n\t\t\t\tif (read(fd, cbuf, (size_t)xcap_sizeof) !=\n\t\t\t\t    (ssize_t)xcap_sizeof) {\n\t\t\t\t\tfile_badread(ms);\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (cbuf[0] == 'A') {\n#ifdef notyet\n\t\t\t\t\tchar *p = cbuf + 1;\n\t\t\t\t\tuint32_t len, tag;\n\t\t\t\t\tmemcpy(&len, p, sizeof(len));\n\t\t\t\t\tp += 4;\n\t\t\t\t\tlen = getu32(swap, len);\n\t\t\t\t\tif (memcmp(\"gnu\", p, 3) != 0) {\n\t\t\t\t\t    if (file_printf(ms,\n\t\t\t\t\t\t\", unknown capability %.3s\", p)\n\t\t\t\t\t\t== -1)\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t    break;\n\t\t\t\t\t}\n\t\t\t\t\tp += strlen(p) + 1;\n\t\t\t\t\ttag = *p++;\n\t\t\t\t\tmemcpy(&len, p, sizeof(len));\n\t\t\t\t\tp += 4;\n\t\t\t\t\tlen = getu32(swap, len);\n\t\t\t\t\tif (tag != 1) {\n\t\t\t\t\t    if (file_printf(ms, \", unknown gnu\"\n\t\t\t\t\t\t\" capability tag %d\", tag)\n\t\t\t\t\t\t== -1)\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t    break;\n\t\t\t\t\t}\n\t\t\t\t\t// gnu attributes \n#endif\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t(void)memcpy(xcap_addr, cbuf, xcap_sizeof);\n\t\t\t\tswitch (xcap_tag) {\n\t\t\t\tcase CA_SUNW_NULL:\n\t\t\t\t\tbreak;\n\t\t\t\tcase CA_SUNW_HW_1:\n\t\t\t\t\tcap_hw1 |= xcap_val;\n\t\t\t\t\tbreak;\n\t\t\t\tcase CA_SUNW_SF_1:\n\t\t\t\t\tcap_sf1 |= xcap_val;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (file_printf(ms,\n\t\t\t\t\t    \", with unknown capability \"\n\t\t\t\t\t    \"0x%\" INT64_T_FORMAT \"x = 0x%\"\n\t\t\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t\t\t    (unsigned long long)xcap_tag,\n\t\t\t\t\t    (unsigned long long)xcap_val) == -1)\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*FALLTHROUGH*/\n\t\tskip:\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (file_printf(ms, \", %sstripped\", stripped ? \"\" : \"not \") == -1)\n\t\treturn -1;\n\tif (cap_hw1) {\n\t\tconst cap_desc_t *cdp;\n\t\tswitch (mach) {\n\t\tcase EM_SPARC:\n\t\tcase EM_SPARC32PLUS:\n\t\tcase EM_SPARCV9:\n\t\t\tcdp = cap_desc_sparc;\n\t\t\tbreak;\n\t\tcase EM_386:\n\t\tcase EM_IA_64:\n\t\tcase EM_AMD64:\n\t\t\tcdp = cap_desc_386;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcdp = NULL;\n\t\t\tbreak;\n\t\t}\n\t\tif (file_printf(ms, \", uses\") == -1)\n\t\t\treturn -1;\n\t\tif (cdp) {\n\t\t\twhile (cdp->cd_name) {\n\t\t\t\tif (cap_hw1 & cdp->cd_mask) {\n\t\t\t\t\tif (file_printf(ms,\n\t\t\t\t\t    \" %s\", cdp->cd_name) == -1)\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\tcap_hw1 &= ~cdp->cd_mask;\n\t\t\t\t}\n\t\t\t\t++cdp;\n\t\t\t}\n\t\t\tif (cap_hw1)\n\t\t\t\tif (file_printf(ms,\n\t\t\t\t    \" unknown hardware capability 0x%\"\n\t\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t\t    (unsigned long long)cap_hw1) == -1)\n\t\t\t\t\treturn -1;\n\t\t} else {\n\t\t\tif (file_printf(ms,\n\t\t\t    \" hardware capability 0x%\" INT64_T_FORMAT \"x\",\n\t\t\t    (unsigned long long)cap_hw1) == -1)\n\t\t\t\treturn -1;\n\t\t}\n\t}\n\tif (cap_sf1) {\n\t\tif (cap_sf1 & SF1_SUNW_FPUSED) {\n\t\t\tif (file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\") == -1)\n\t\t\t\treturn -1;\n\t\t}\n\t\tcap_sf1 &= ~SF1_SUNW_MASK;\n\t\tif (cap_sf1)\n\t\t\tif (file_printf(ms,\n\t\t\t    \", with unknown software capability 0x%\"\n\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t    (unsigned long long)cap_sf1) == -1)\n\t\t\t\treturn -1;\n\t}\n\treturn 0;\n}\n\n/*\n * Look through the program headers of an executable image, searching\n * for a PT_INTERP section; if one is found, it's dynamically linked,\n * otherwise it's statically linked.\n */\nprivate int\ndophn_exec(struct magic_set *ms, int clazz, int swap, int fd, off_t off,\n    int num, size_t size, off_t fsize, int *flags, int sh_num)\n{\n\tElf32_Phdr ph32;\n\tElf64_Phdr ph64;\n\tconst char *linking_style = \"statically\";\n\tconst char *shared_libraries = \"\";\n\tunsigned char nbuf[BUFSIZ];\n\tssize_t bufsize;\n\tsize_t offset, align, len;\n\t\n\tif (size != xph_sizeof) {\n\t\tif (file_printf(ms, \", corrupted program header size\") == -1)\n\t\t\treturn -1;\n\t\treturn 0;\n\t}\n\n  \tfor ( ; num; num--) {\n\t\tif (pread(fd, xph_addr, xph_sizeof, off) == -1) {\n\t\t\tfile_badread(ms);\n\t\t\treturn -1;\n\t\t}\n\n\t\toff += size;\n\n\t\t/* Things we can determine before we seek */\n\t\tswitch (xph_type) {\n\t\tcase PT_DYNAMIC:\n\t\t\tlinking_style = \"dynamically\";\n\t\t\tbreak;\n\t\tcase PT_INTERP:\n\t\t\tshared_libraries = \" (uses shared libs)\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (xph_offset > fsize) {\n\t\t\t\t/* Maybe warn here? */\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\t/* Things we can determine when we seek */\n\t\tswitch (xph_type) {\n\t\tcase PT_NOTE:\n\t\t\tif ((align = xph_align) & 0x80000000UL) {\n\t\t\t\tif (file_printf(ms, \n\t\t\t\t    \", invalid note alignment 0x%lx\",\n\t\t\t\t    (unsigned long)align) == -1)\n\t\t\t\t\treturn -1;\n\t\t\t\talign = 4;\n\t\t\t}\n\t\t\tif (sh_num)\n\t\t\t\tbreak;\n\t\t\t/*\n\t\t\t * This is a PT_NOTE section; loop through all the notes\n\t\t\t * in the section.\n\t\t\t */\n\t\t\tlen = xph_filesz < sizeof(nbuf) ? xph_filesz\n\t\t\t    : sizeof(nbuf);\n\t\t\tbufsize = pread(fd, nbuf, len, xph_offset);\n\t\t\tif (bufsize == -1) {\n\t\t\t\tfile_badread(ms);\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\toffset = 0;\n\t\t\tfor (;;) {\n\t\t\t\tif (offset >= (size_t)bufsize)\n\t\t\t\t\tbreak;\n\t\t\t\toffset = donote(ms, nbuf, offset,\n\t\t\t\t    (size_t)bufsize, clazz, swap, align,\n\t\t\t\t    flags);\n\t\t\t\tif (offset == 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (file_printf(ms, \", %s linked%s\", linking_style, shared_libraries)\n\t    == -1)\n\t    return -1;\n\treturn 0;\n}\n\n\nprotected int\nfile_tryelf(struct magic_set *ms, int fd, const unsigned char *buf,\n    size_t nbytes)\n{\n\tunion {\n\t\tint32_t l;\n\t\tchar c[sizeof (int32_t)];\n\t} u;\n\tint clazz;\n\tint swap;\n\tstruct stat st;\n\toff_t fsize;\n\tint flags = 0;\n\tElf32_Ehdr elf32hdr;\n\tElf64_Ehdr elf64hdr;\n\tuint16_t type;\n\n\tif (ms->flags & (MAGIC_MIME|MAGIC_APPLE))\n\t\treturn 0;\n\t/*\n\t * ELF executables have multiple section headers in arbitrary\n\t * file locations and thus file(1) cannot determine it from easily.\n\t * Instead we traverse thru all section headers until a symbol table\n\t * one is found or else the binary is stripped.\n\t * Return immediately if it's not ELF (so we avoid pipe2file unless needed).\n\t */\n\tif (buf[EI_MAG0] != ELFMAG0\n\t    || (buf[EI_MAG1] != ELFMAG1 && buf[EI_MAG1] != OLFMAG1)\n\t    || buf[EI_MAG2] != ELFMAG2 || buf[EI_MAG3] != ELFMAG3)\n\t\treturn 0;\n\n\t/*\n\t * If we cannot seek, it must be a pipe, socket or fifo.\n\t */\n\tif((lseek(fd, (off_t)0, SEEK_SET) == (off_t)-1) && (errno == ESPIPE))\n\t\tfd = file_pipe2file(ms, fd, buf, nbytes);\n\n\tif (fstat(fd, &st) == -1) {\n  \t\tfile_badread(ms);\n\t\treturn -1;\n\t}\n\tfsize = st.st_size;\n\n\tclazz = buf[EI_CLASS];\n\n\tswitch (clazz) {\n\tcase ELFCLASS32:\n#undef elf_getu\n#define elf_getu(a, b)\telf_getu32(a, b)\n#undef elfhdr\n#define elfhdr elf32hdr\n#include \"elfclass.h\"\n\tcase ELFCLASS64:\n#undef elf_getu\n#define elf_getu(a, b)\telf_getu64(a, b)\n#undef elfhdr\n#define elfhdr elf64hdr\n#include \"elfclass.h\"\n\tdefault:\n\t    if (file_printf(ms, \", unknown class %d\", clazz) == -1)\n\t\t    return -1;\n\t    break;\n\t}\n\treturn 0;\n}\n#endif\n"], "fixing_code": ["2014-10-17  11:48  Christos Zoulas <christos@zoulas.com>\n\n\t* fix bounds in note reading (Francisco Alonso / Red Hat)\n\n2014-10-11  15:02  Christos Zoulas <christos@zoulas.com>\n\n\t* fix autoconf glue for setlocale and locale_t; some OS's\n\t  have locale_t in xlocale.h\n\n2014-10-10  15:01  Christos Zoulas <christos@zoulas.com>\n\n\t* release 5.20\n\n2014-08-17  10:01  Christos Zoulas <christos@zoulas.com>\n\n\t* recognize encrypted CDF documents\n\n2014-08-04   9:18  Christos Zoulas <christos@zoulas.com>\n\n\t* add magic_load_buffers from Brooks Davis\n\n2014-07-24  16:40  Christos Zoulas <christos@zoulas.com>\n\n\t* add thumbs.db support\n\n2014-06-12  12:28  Christos Zoulas <christos@zoulas.com>\n\n\t* release 5.19\n\n2014-06-09   9:04  Christos Zoulas <christos@zoulas.com>\n\t\n\t* Misc buffer overruns and missing buffer size tests in cdf parsing\n\t  (Francisco Alonso, Jan Kaluza)\n\n2014-06-02  14:50  Christos Zoulas <christos@zoulas.com>\n\n\t* Enforce limit of 8K on regex searches that have no limits\n\t* Allow the l modifier for regex to mean line count. Default\n\t  to byte count. If line count is specified, assume a max\n\t  of 80 characters per line to limit the byte count.\n\t* Don't allow conversions to be used for dates, allowing\n\t  the mask field to be used as an offset.\n\n2014-05-30  12:51  Christos Zoulas <christos@zoulas.com>\n\n\t* Make the range operator limit the length of the\n\t  regex search.\n\n2014-05-14  19:23  Christos Zoulas <christos@zoulas.com>\n\n\t* PR/347: Windows fixes\n\t* PR/352: Hangul word processor recognition\n\t* PR/354: Encoding irregularities in text files\n\n2014-05-06  6:12  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix uninitialized title in CDF files (Jan Kaluza)\n\n2014-05-04  14:55  Christos Zoulas <christos@zoulas.com>\n\n\t* PR/351: Fix compilation of empty files \n\n2014-04-30  17:39  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix integer formats: We don't specify 'l' or\n\t  'h' and 'hh' specifiers anymore, only 'll' for\n\t  quads and nothing for the rest. This is so that\n\t  magic writing is simpler.\n\n2014-04-01  15:25  Christos Zoulas <christos@zoulas.com>\n\n\t* PR/341: Jan Kaluza, fix memory leak\n\t* PR/342: Jan Kaluza, fix out of bounds read\n\n2014-03-28  15:25  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix issue with long formats not matching fmtcheck\n\n2014-03-26  11:25  Christos Zoulas <christos@zoulas.com>\n\n\t* release 5.18\n\n2014-03-15  17:45  Christos Zoulas <christos@zoulas.com>\n\n\t* add fmtcheck(3) for those who don't have it\n\n2014-03-14  15:12  Christos Zoulas <christos@zoulas.com>\n\n\t* prevent mime entries from being attached to magic\n\t  entries with no descriptions\n\n\t* adjust magic strength for regex type\n\n\t* remove superfluous ascmagic with encoding test\n\n2014-03-06  12:01  Christos Zoulas <christos@zoulas.com>\n\n\t* fix regression fix echo -ne \"\\012\\013\\014\" | file -i -\n\t  which printed \"binary\" instead of \"application/octet-stream\"\n\n\t* add size_t overflow check for magic file size\n\n2014-02-27  16:01  Christos Zoulas <christos@zoulas.com>\n\n\t* experimental support for matching with CFD CLSID\n\n2014-02-18  13:04  Kimmo Suominen (kimmo@suominen.com)\n\n\t* Cache old LC_CTYPE locale before setting it to \"C\", so\n\t  we can use it to restore LC_CTYPE instead of asking\n\t  setlocale() to scan the environment variables.\n\n2014-02-12  18:21  Christos Zoulas <christos@zoulas.com>\n\n\t* Count recursion levels through indirect magic\n\n2014-02-11  10:40  Christos Zoulas <christos@zoulas.com>\n\n\t* Prevent infinite recursion on files with indirect offsets of 0\n\n2014-01-30  21:00  Christos Zoulas <christos@zoulas.com>\n\n\t* Add -E flag that makes file print filesystem errors to stderr\n\t  and exit.\n\n2014-01-08  17:20  Christos Zoulas <christos@zoulas.com>\n\n\t* mime printing could print results from multiple magic entries\n\t  if there were multiple matches.\n\t* in some cases overflow was not detected when computing offsets\n\t  in softmagic.\n\n2013-12-05  12:00  Christos Zoulas <christos@zoulas.com>\n\n\t* use strcasestr() to for cdf strings\n\t* reset to the \"C\" locale while doing regex operations, or case\n\t  insensitive comparisons; this is provisional\n\n2013-11-19  20:10  Christos Zoulas <christos@zoulas.com>\n\n\t* always leave magic file loaded, don't unload for magic_check, etc.\n\t* fix default encoding to binary instead of unknown which broke recently\n\t* handle empty and one byte files, less specially so that\n\t  --mime-encoding does not break completely.\n\t\t`\n2013-11-06  14:40  Christos Zoulas <christos@zoulas.com>\n\n\t* fix erroneous non-zero exit code from non-existant file and message\n\n2013-10-29  14:25  Christos Zoulas <christos@zoulas.com>\n\n\t* add CDF MSI file detection (Guy Helmer)\n\n2013-09-03  11:56  Christos Zoulas <christos@zoulas.com>\n\n\t* Don't mix errors and regular output if there was an error\n\t* in magic_descriptor() don't close the file and try to restore\n\t  its position\n\n2013-05-30  17:25  Christos Zoulas <christos@zoulas.com>\n\n\t* Don't treat magic as an error if offset was past EOF (Christoph Biedl)\n\n2013-05-28  17:25  Christos Zoulas <christos@zoulas.com>\n\t\n\t* Fix spacing issues in softmagic and elf (Jan Kaluza)\n\n2013-05-02  18:00  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix segmentation fault with multiple magic_load commands.\n\n2013-04-22  11:20  Christos Zoulas <christos@zoulas.com>\n\n\t* The way \"default\" was implemented was not very useful\n\t  because the \"if something was printed at that level\"\n\t  was not easily controlled by the user, and the format\n\t  was bound to a string which is too restrictive. Add\n\t  a \"clear\" for that level keyword and make \"default\"\n\t  void. This way one can do:\n\n\t\t>>13\tclear\tx\n\t\t>>13\tlelong\t1\tfoo\n\t\t>>13\tlelong\t2\tbar\n\t\t>>13\tdefault\tx\n\t\t>>>13\tlelong\tx\tunknown %x\n\n2013-03-25  13:20  Christos Zoulas <christos@zoulas.com>\n\n\t* disallow strength setting in \"name\" entries\n\n2013-03-06  21:24  Christos Zoulas <christos@zoulas.com>\n\n\t* fix recursive magic separator printing\n\n2013-02-26  19:28  Christos Zoulas <christos@zoulas.com>\n\n\t* limit recursion level for mget\n\t* fix pread() related breakage in cdf\n\t* handle offsets properly in recursive \"use\"\n\n2013-02-18  10:39  Christos Zoulas <christos@zoulas.com>\n\n\t* add elf reading of debug info to determine if file is stripped\n\t  (Jan Kaluza)\n\t* use pread()\n\n2013-01-25  18:05  Christos Zoulas <christos@zoulas.com>\n\n\t* change mime description size from 64 to 80 to accommodate OOXML.\n\n2013-01-11  14:50  Christos Zoulas <christos@zoulas.com>\n\n\t* Warn about inconsistent continuation levels.\n\t* Change fsmagic to add a space after it prints.\n\n2013-01-10  21:00  Christos Zoulas <christos@zoulas.com>\n\n\t* Make getline public so that file can link against it.\n\t  Perhaps it is better to rename it, or hide it differently.\n\t  Fixes builds on platforms that do not provide it.\n\t  \n2013-01-07  16:30  Christos Zoulas <christos@zoulas.com>\n\n\t* Add SuS d{,1,2,4,8}, u{,1,2,4,8} and document\n\t  what long, int, short, etc is (Guy Harris)\n\n2013-01-06  11:20  Christos Zoulas <christos@zoulas.com>\n\n\t* add magic_version function and constant\n\t* Redo memory allocation and de-allocation.\n\t  (prevents double frees on non mmap platforms)\n\t* Fix bug with name/use having to do with passing\n\t  found state from the parent to the child and back.\n\n2012-12-19   8:47  Christos Zoulas <christos@zoulas.com>\n\n\t* Only print elf capabilities for archs we know (Jan Kaluza)\n\n2012-10-30  19:14  Christos Zoulas <christos@zoulas.com>\n\n\t* Add \"name\" and \"use\" file types in order to look\n\t  inside mach-o files.\n\n2012-09-06  10:40  Christos Zoulas <christos@zoulas.com>\n\n\t* make --version exit 0 (Matthew Schultz)\n\t* add string/T (Jan Kaluza)\n\n2012-08-09  2:15  Christos Zoulas <christos@zoulas.com>\n\n\t* add z and t modifiers for our own vasprintf\n\t* search for $HOME/.magic.mgc if it is there first\n\t* fix reads from a pipe, and preserve errno\n\n2012-05-15  13:12  Christos Zoulas <christos@zoulas.com>\n\n\t* use ctime_r, asctime_r\n\n2012-04-06  17:18  Christos Zoulas <christos@zoulas.com>\n\n\t* Fixes for indirect offsets to handle apple disk formats\n\n2012-04-03  18:26  Christos Zoulas <christos@zoulas.com>\n\n\t* Add windows date field types\n\t* More info for windows shortcuts (incomplete)\n\n2012-02-20  17:33  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix CDF parsing issues found by CERT's fuzzing tool (Will Dormann)\n\n2011-12-15  12:17  Chris Metcalf <cmetcalf@tilera.com>\n\n\t* Support Tilera architectures (tile64, tilepro, tilegx).\n\n2011-12-16  16:33  Reuben Thomas <rrt@sc3d.org>\n\n\t* Add magic for /usr/bin/env Perl scripts\n\t* Weaken generic script magic to avoid clashing with\n\tlanguage-specific magic.\n\n2011-12-08  13:37  Reuben Thomas <rrt@sc3d.org>\n\n\t* Simplify if (p) free(p) to free(p).\n\n2011-12-08  13:07  Reuben Thomas <rrt@sc3d.org>\n\n\t* Remove hardwired token finding (names.h), turning it into soft\n\tmagic. Patterns are either anchored regexs or search/8192. English\n\tlanguage detection and PL/1 detection have been removed as they\n\twere too fragile. -e tokens is still accepted for backwards\n\tcompatibility.\n\t* Move 3ds patterns (which are commented out anyway) into autodesk\n\t(they were, oddly, in c-lang).\n\n2011-12-06  00:16  Reuben Thomas <rrt@sc3d.org>\n\n\t* Tweak strength of generic hash-bang detectors to be less than\n\tspecific ones.\n\t* Make an inconsistent description of Python scripts consistent.\n\n2011-12-05  23:58  Reuben Thomas <rrt@sc3d.org>\n\n\t* Fix minor error in file(1).\n\n2011-11-05  00:00  Reuben Thomas <rrt@sc3d.org>\n\n\t* Fix issue #150 (I hope).\n\n2011-09-22  12:57  Christos Zoulas <christos@zoulas.com>\n\n\t* Python3 binding fixes from Kelly Anderson\n\n2011-09-20  11:32  Christos Zoulas <christos@zoulas.com>\n\n\t* If a string type magic entry is marked as text or binary\n\t  only match text files against text entries and binary\n\t  files against binary entries.\n\n2011-09-01  12:12  Christos Zoulas <christos@zoulas.com>\n\n\t* Don't wait for any subprocess, just the one we forked.\n\n2011-08-26  16:40  Christos Zoulas <christos@zoulas.com>\n\n\t* If the application name is not set in a cdf file, try to see\n\t  if it has a directory with the application name on it.\n\n2011-08-17  14:32  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix ELF lseek(2) madness. Inspired by PR/134 by Jan Kaluza\n\n2011-08-14  09:03  Christos Zoulas <christos@zoulas.com>\n\n\t* Don't use variable string formats.\n\n2011-07-12  12:32  Reuben Thomas <rrt@sc3d.org>\n\n\t* Fix detection of Zip files (Mantis #128).\n\t* Make some minor improvements to file(1).\n\t* Rename MIME types for filesystem objects for consistency with\n\t  xdg-utils. Typically this means that application/x-foo becomes\n\t  inode/foo, but some names also change slightly, e.g.\n\t  application/x-character-device becomes inode/chardevice.\n\n2011-05-10  20:57  Christos Zoulas <christos@zoulas.com>\n\n\t* fix mingw compilation (Abradoks)\n\n2011-05-10  20:57  Christos Zoulas <christos@zoulas.com>\n\n\t* remove patchlevel.h\n\t* Fix read past allocated memory caused by double-incrementing\n\t  a pointer in a loop (reported by Roberto Maar)\n\n2011-03-30  15:45  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix cdf string buffer setting (Sven Anders)\n\n2011-03-20  16:35  Christos Zoulas <christos@zoulas.com>\n\n\t* Eliminate MAXPATHLEN and use dynamic allocation for\n\t  path and file buffers.\n\n2011-03-15  18:15  Christos Zoulas <christos@zoulas.com>\n\n\t* binary tests on magic entries with masks could spuriously\n\t  get converted to ascii.\n\n2011-03-12  18:06  Reuben Thomas <rrt@sc3d.org>\n\n\t* Improve file.man (remove BUGS, present email addresses consistently).\n\n2011-03-07  19:38  Christos Zoulas <christos@zoulas.com>\n\n\t* add lrzip support (from Ville Skytta)\n\n2011-02-10  16:36  Christos Zoulas <christos@zoulas.com>\n\n\t* fix CDF bounds checking (Guy Helmer)\n\n2011-02-10  12:03  Christos Zoulas <christos@zoulas.com>\n\n\t* add cdf_ctime() that prints a meaningful error when time cannot\n\t  be converted.\n\n2011-02-02  20:40  Christos Zoulas <christos@zoulas.com>\n\n\t* help and version output to stdout.\n\n\t* When matching softmagic for ascii files, don't just print\n\t  the softmagic classification, keep going and print the\n\t  text classification too. This fixes broken troff files when\n\t  we moved them from keyword recognition to softmagic\n\t  (they stopped printing \"with CRLF\" etc.)\n\t  Reported by Doug McIlroy.\n\n2011-01-16  19:31  Reuben Thomas <rrt@sc3d.org>\n\n\t* Fix two potential buffer overruns in apprentice_list.\n\n2011-01-14  22:33  Reuben Thomas <rrt@sc3d.org>\n\n\t* New Python binding in pure Python.\n\t* Update libmagic(3).\n\n2011-01-06  21:40  Reuben Thomas <rrt@sc3d.org>\n\n\t* Fix Python bindings (including recent Python 3 compatibility\n\t  update).\n\n2011-01-04  18:43  Reuben Thomas <rrt@sc3d.org>\n\n\t* magic/Makefile.am: make it easier to recover from magic build failures.\n\t* Fix pstring length specifier parsing to avoid generating invalid\n\t  magic files.\n\t* Add pstring length \"J\" (for \"JPEG\") to specify that the length\n\t  include itself.\n\t* Fix JPEG comment parsing at last using pstring/HJ!\n\t* Ignore section 5 man pages in doc/.cvsignore.\n\n2010-12-22  13:12  Christos Zoulas <christos@zoulas.com>\n\n\t* Add pstring/BHhLl to specify the type of the length of pascal\n\t  strings.\n\n2010-11-26  18:39  Reuben Thomas <rrt@sc3d.org>\n\n\t* Fix \"-e soft\": it was ignored when softmagic was called\n\t  during asciimagic.\n\t* Improve comments and use \"unsigned char\" in tar.h/is_tar.c.\n\n2010-11-05  17:26  Reuben Thomas <rrt@sc3d.org>\n\n\t* Make bug reporting addresses more visible.\n\n2010-11-01  18:35  Reuben Thomas <rrt@sc3d.org>\n\n\t* Add tcl magic from Gustaf Neumann\n\n2010-10-24  10:42  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix the whitespace comparing code (Christopher Chittleborough)\n\n2010-10-06  21:05  Christos Zoulas <christos@zoulas.com>\n\n\t* allow string/t to work (Jan Kaluza)\n\n2010-09-20  22:11  Reuben Thomas <rrt@sc3d.org>\n\n\t* Apply some patches from Ubuntu and Fedora.\n\n2010-09-20  21:16  Reuben Thomas <rrt@sc3d.org>\n\n\t* Apply all patches from Debian package 5.04-6 which have not\n\t  already been applied and are not Debian-specific.\n\n2010-09-20  15:24  Reuben Thomas <rrt@sc3d.org>\n\n\t* Minor security fix to softmagic.c (don't use untrusted\n\t  string as printf format).\n\n2010-07-21  12:20  Christos Zoulas <christos@zoulas.com>\n\n\t* MINGW32 portability from LRN\n\n\t* Don't warn about escaping magic regex chars when we are in a regex.\n\n2010-07-19  10:55  Christos Zoulas <christos@zoulas.com>\n\n\t* Only try to print prpsinfo for core files. (Jan Kaluza)\n\n2010-04-22  12:55  Christos Zoulas <christos@zoulas.com>\n\n\t* Try more elf offsets for Debian core files.  (Arnaud Giersch)\n\n2010-02-20  15:18  Reuben Thomas <rrt@sc3d.org>\n\n\t* Clarify which sort of CDF we mean.\n\n2010-02-14  22:58  Reuben Thomas <rrt@sc3d.org>\n\n\t* Re-jig Zip file type magic so that unsupported special\n\t  Zip types (those with \"mimetype\" at offset 30) can be\n\t  recognized.\n\n2010-02-02  21:50  Reuben Thomas <rrt@sc3d.org>\n\n\t* Add support for OCF (EPUB) files (application/epub+zip)\n\n2010-01-28  18:25  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix core-dump from unbound loop:\n\t  https://bugzilla.redhat.com/show_bug.cgi?id=533245\n\n2010-01-22  15:45  Christos Zoulas <christos@zoulas.com>\n\n\t* print proper mime for crystal reports file\n\n\t* print the last summary information of a cdf document, not the\n\t  first so that nested documents print the right info\n\n2010-01-16  18:42  Charles Longeau <chl@tuxfamily.org>\n\n\t* bring back some fixes from OpenBSD:\n\t\t- make gcc2 builds file\n\t\t- fix typos in a magic file comment\n\n2009-11-17  18:35  Christos Zoulas <christos@zoulas.com>\n\n\t* ctime/asctime can return NULL on some OS's although\n\t  they should not (Toshit Antani)\n\n2009-09-14  13:49  Christos Zoulas <christos@zoulas.com>\n\n\t* Centralize magic path handling routines and remove the\n\t  special-casing from file.c so that the python module for\n\t  example comes up with the same magic path (Fixes ~/.magic\n\t  handling) (from Gab)\n\n2009-09-11  23:38  Reuben Thomas <rrt@sc3d.org>\n\n\t* When magic argument is a directory, read the files in\n\t  strcmp-sorted order (fixes Debian bug #488562 and our own FIXME).\n\n2009-09-11  13:11  Reuben Thomas <rrt@sc3d.org>\n\n\t* Combine overlapping epoc and psion magic files into one (epoc).\n\n\t* Add some more EPOC MIME types.\n\n2009-08-19  15:55  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix 3 bugs (From Ian Darwin):\n\t    - file_showstr could move one past the end of the array\n\t    - parse_apple did not nul terminate the string in the overflow case\n\t    - parse_mime truncated the wrong string in the overflow case\n\n2009-08-12  12:28  Robert Byrnes  <byrnes@wildpumpkin.net>\n\n\t* Include Localstuff when compiling magic.\n\n2009-07-15  10:05  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix logic for including mygetopts.h\n\n\t* Make cdf.c compile again with debugging\n\n\t* Add the necessary field handling for crystal reports files to work\n\n2009-06-23 01:34  Reuben Thomas <rrt@sc3d.org>\n\n\t* Stop \"(if\" identifying Lisp files, that's plain dumb!\n\n2009-06-09 22:13  Reuben Thomas <rrt@sc3d.org>\n\n\t* Add a couple of missing MP3 MIME types.\n\n2009-05-27 23:00  Reuben Thomas <rrt@sc3d.org>\n\n\t* Add full range of hash-bang tests for Python and Ruby.\n\n\t* Add MIME types for Python and Ruby scripts.\n\n2009-05-13  10:44  Christos Zoulas <christos@zoulas.com>\n\n\t* off by one in parsing hw capabilities in elf\n\t  (Cheng Renquan)\n\n2009-05-08  13:40  Christos Zoulas <christos@zoulas.com>\n\t\n\t* lint fixes and more from NetBSD\n\n2009-05-06  10:25  Christos Zoulas <christos@zoulas.com>\n\n\t* Avoid null dereference in cdf code (Drew Yao)\n\n\t* More cdf bounds checks and overflow checks\n\n2009-05-01  18:37  Christos Zoulas <christos@zoulas.com>\n\n\t* Buffer overflow fixes from Drew Yao\n\n2009-04-30  17:10  Christos Zoulas <christos@zoulas.com>\n\n\t* Fix more cdf lossage. All the documents I have\n\t  right now print the correct information.\n\n2009-03-27  18:43  Christos Zoulas <christos@zoulas.com>\n\n\t* don't print \\012- separators in the same magic entry \n\t  if it consists of multiple magic printing lines.\n\n2009-03-23  10:20  Christos Zoulas <christos@zoulas.com>\n\n\t* Avoid file descriptor leak in compress code from\n\t  (Daniel Novotny)\n\n2009-03-18  16:50  Christos Zoulas <christos@zoulas.com>\n\n\t* Allow escaping of relation characters, so that we can say \\^[A-Z]\n\t  and the ^ is not eaten as a relation char.\n\n\t* Fix troff and fortran to their previous glory using\n\t  regex. This was broken since their removel from ascmagic.\n\n2009-03-10  16:50  Christos Zoulas <christos@zoulas.com>\n\n\t* don't use strlen in strndup() (Toby Peterson)\n\n2009-03-10  7:45  Christos Zoulas <christos@zoulas.com>\n\n\t* avoid c99 syntax.\n\n2009-02-23 15:45  Christos Zoulas <christos@zoulas.com>\n\n\t* make the cdf code use the buffer first if available,\n\t  and then the fd code.\n\n2009-02-13 13:45  Christos Zoulas <christos@zoulas.com>\n\n\t* look for struct option to determine if getopt.h is usable for IRIX.\n\n\t* sanitize cdf document strings\n\n2009-02-04 13:25  Christos Zoulas <christos@zoulas.com>\n\n\t* fix OS/2 warnings.\n\n2008-12-12 15:50  Christos Zoulas <christos@zoulas.com>\n\n\t* fix initial offset calculation for non 4K sector files\n\n\t* add loop limits to avoid DoS attacks by constructing\n\t  looping sector references.\n\n2008-12-03 13:05  Christos Zoulas <christos@zoulas.com>\n\n\t* fix memory botches on cdf file parsing.\n\n\t* exit with non-zero value for any error, not just for the last\n\t  file processed.\n\n2008-11-09 20:42  Charles Longeau <chl@tuxfamily.org>\n\n\t* Replace all str{cpy,cat} functions with strl{cpy,cat}\n\t* Ensure that strl{cpy,cat} are included in libmagic,\n\t  as needed.\n\n2008-11-06 18:18  Christos Zoulas <christos@zoulas.com>\n\n\t* Handle ID3 format files.\n\n2008-11-06 23:00  Reuben Thomas <rrt@sc3d.org>\n\n\t* Fix --mime, --mime-type and --mime-encoding under new scheme.\n\n\t* Rename \"ascii\" to \"text\" and add \"encoding\" test.\n\n\t* Return a precise (\"utf-16le\" or \"utf-16be\") MIME charset for\n\t  UTF-16.\n\n\t* Fix error in comment caused by automatic indentation adding\n\t  words!\n\n2008-11-06 10:35  Christos Zoulas <christos@astron.com>\n\n\t* use memchr instead of strchr because the string\n\t  might not be NUL terminated (Scott MacVicar)\n\n2008-11-03 07:31  Reuben Thomas <rrt@sc3d.org>\n\n\t* Fix a printf with a non-literal format string.\n\n\t* Fix formatting and punctuation of help for \"--apple\".\n\n2008-10-30 11:00  Reuben Thomas <rrt@sc3d.org>\n\n\t* Correct words counts in comments of struct magic.\n\n\t* Fix handle_annotation to allow both Apple and MIME types to be\n\t  printed, and to return correct code if MIME type is\n\t  printed (1, not 0) or if there's an error (-1 not 1).\n\n\t* Fix output of charset for MIME type (precede with semi-colon;\n\t  fixes Debian bug #501460).\n\n\t* Fix potential attacks via conversion specifications in magic\n\t  strings.\n\n\t* Add a FIXME for Debian bug #488562 (magic files should be\n\t  read in a defined order, by sorting the names).\n\n2008-10-18 16:45  Christos Zoulas <christos@astron.com>\n\n\t* Added APPLE file creator/type\n\n2008-10-12 10:20  Christos Zoulas <christos@astron.com>\n\n\t* Added CDF parsing\n\n2008-10-09 16:40  Christos Zoulas <christos@astron.com>\n\n\t* filesystem and msdos patches (Joerg Jenderek)\n\n2008-10-09 13:20  Christos Zoulas <christos@astron.com>\n\n\t* correct --exclude documentation issues: remove troff and fortran\n\t  and rename \"token\" to \"tokens\". (Randy McMurchy)\n\n2008-10-01 10:30  Christos Zoulas <christos@astron.com>\n\n\t* Read ~/.magic in addition to the default magic file not instead\n\t  of, as documented in the man page.\n\n2008-09-10 21:30  Reuben Thomas  <rrt@sc3d.org>\n\n\t* Comment out graphviz patterns, as they match too many files.\n\n2008-08-30 12:54  Christos Zoulas <christos@astron.com>\n\n\t* Don't eat trailing \\n in magic enties.\n\n\t* Cast defines to allow compilation using a c++ compiler.\n\n2008-08-25 23:56  Reuben Thomas  <rrt@sc3d.org>\n\n\t* Add text/x-lua MIME type for Lua scripts.\n\n\t* Escape { in regex in graphviz patterns.\n\n2008-07-26 00:59  Reuben Thomas  <rrt@sc3d.org>\n\n\t* Add MIME types for special files.\n\n\t* Use access to give more accurate information for files that\n\t  can't be opened.\n\n\t* Add a TODO list.\n\n2008-07-02 11:15  Christos Zoulas  <christos@astron.com>\n\n\t* add !:strength op to adjust magic strength (experimental)\n\n2008-06-16 21:41  Reuben Thomas  <rrt@sc3d.org>\n\n\t* Fix automake error in configure.ac.\n\n\t* Add MIME type for Psion Sketch files.\n\n2008-06-05 08:59  Christos Zoulas  <christos@astron.com>\n\n\t* Don't print warnings about bad namesize in stripped\n\t  binaries with PT_NOTE is still there, and the actual\n\t  note is gone (Jakub Jelinek)\n\n2008-05-28 15:12  Robert Byrnes  <byrnes@wildpumpkin.net>\n\n\t* magic/Magdir/elf:\n\t  Note invalid byte order for little-endian SPARC32PLUS.\n\t  Add SPARC V9 vendor extensions and memory model.\n\n\t* src/elfclass.h:\n\t  Pass target machine to doshn (for Solaris hardware capabilities).\n\n\t* src/readelf.c (doshn):\n\t  Add support for Solaris hardware/software capabilities.\n\n\t* src/readelf.h:\n\t  Ditto.\n\n\t* src/vasprintf.c (dispatch):\n\t  Add support for ll modifier.\n\n2008-05-16 10:25  Christos Zoulas  <christos@astron.com>\n\n\t* Fix compiler warnings.\n\n\t* remove stray printf, and fix a vprintf bug. (Martin Dorey)\n\n2008-05-06 00:13  Robert Byrnes  <byrnes@wildpumpkin.net>\n\n\t* src/Makefile.am:\n\t  Ensure that getopt_long and [v]asprintf are included in libmagic,\n\t  as needed.\n\n\t  Remove unnecessary EXTRA_DIST.\n\n\t* src/Makefile.in:\n\t  Rerun automake.\n\n\t* src/vasprintf.c (dispatch):\n\t  Fix variable precision bug: be sure to step past '*'.\n\n\t* src/vasprintf.c (core):\n\t  Remove unreachable code.\n\n\t* src/apprentice.c (set_test_type):\n\t  Add cast to avoid compiler warning.\n\n2008-04-22 23:45  Christos Zoulas  <christos@astron.com>\n\n\t* Add magic submission guidelines (Abel Cheung)\n\n\t* split msdos and windows magic (Abel Cheung)\n\n2008-04-04 11:00  Christos Zoulas  <christos@astron.com>\n\n\t* >= <= is not supported, so fix the magic and warn about it.\n\t  reported by: Thien-Thi Nguyen <ttn@gnuvola.org>\n\n2008-03-27 16:16  Robert Byrnes  <byrnes@wildpumpkin.net>\n\n\t* src/readelf.c (donote):\n\t  ELF core file command name/line bug fixes and enhancements:\n\n\t  Try larger offsets first to avoid false matches\n\t  from earlier data that happen to look like strings;\n\t  this primarily affected SunOS 5.x 32-bit Intel core files.\n\n\t  Add support for command line (instead of just short name)\n\t  for SunOS 5.x.\n\n\t  Add information about NT_PSINFO for SunOS 5.x.\n\n\t  Only trim whitespace from end of command line.\n\n2007-02-11 01:36 Reuben Thomas <rrt@sc3d.org>\n\n\t* Change strength of ! from MULT to 0, as it matches almost\n\t\t  anything (Reuben Thomas)\n\n\t* Debian fixes (Reuben Thomas)\n\n2007-02-11 00:17 Reuben Thomas <rrt@sc3d.org>\n\n\t* Clarify UTF-8 BOM message (Reuben Thomas)\n\n\t* Add HTML comment to token list in names.h\n\n2007-02-04 15:50 Christos Zoulas <christos@astron.com>\n\n\t* Debian fixes (Reuben Thomas)\n\n2007-02-04 11:31 Christos Zoulas <christos@astron.com>\n\n\t* !:mime annotations in magic files (Reuben Thomas)\n\n2007-01-29 15:35 Christos Zoulas <christos@astron.com>\n\n\t* zero out utime/utimes structs (Gavin Atkinson)\n\n2007-01-26 13:45 Christos Zoulas <christos@astron.com>\n\n\t* reduce writable data from Diego \"Flameeyes\" Petten\n\n2007-12-28 15:06 Christos Zoulas <christos@astron.com>\n\n\t* strtof detection\n\n\t* remove bogus regex magic that could cause a DoS\n\n\t* better mismatch version message\n\n2007-12-27 11:35 Christos Zoulas <christos@astron.com>\n\n\t* bring back some fixes from OpenBSD\n\n\t* treat ELF dynamic objects as executables\n\n\t* fix gcc warnings\n\n2007-12-01 19:55 Christos Zoulas <christos@astron.com>\n\n\t* make sure we have zlib.h and libz to compile the builtin\n\t  decompress code\n\n2007-10-28 20:48 Christos Zoulas <christos@astron.com>\n\n \t* float and double magic support (Behan Webster)\n\n2007-10-28 20:48 Christos Zoulas <christos@astron.com>\n\n\t* Convert fortran to a soft test (Reuben Thomas)\n\n2007-10-23  5:25 Christos Zoulas <christos@astron.com>\n\n\t* Add --with-filename, and --no-filename (Reuben Thomas)\n\n2007-10-23  3:59 Christos Zoulas <christos@astron.com>\n\n\t* Rest of the mime split (Reuben Thomas)\n\n\t* Make usage message generated from the flags so that\n\t  they stay consistent (Reuben Thomas)\n\n2007-10-20  3:06 Christos Zoulas <christos@astron.com>\n\n\t* typo in comment, missing ifdef QUICK, remove unneeded code\n\t\t(Charles Longeau)\n\n2007-10-17  3:33 Christos Zoulas <christos@astron.com>\n\n\t* Fix problem printing -\\012 in some entries\n\n\t* Separate magic type and encoding flags (Reuben Thomas)\n\n2007-10-09  3:55 Christos Zoulas <christos@astron.com>\n\n\t* configure fix for int64 and strndup (Reuben Thomas)\n\n2007-09-26  4:45 Christos Zoulas <christos@astron.com>\n\n\t* Add magic_descriptor() function.\n\n\t* Fix regression in elf reading code where the core name was\n\t  not being printed.\n\n\t* Don't convert NUL's to spaces in {l,b}estring16 (Daniel Dawson)\n\n2007-08-19  6:30 Christos Zoulas <christos@astron.com>\n\n\t* Make mime format consistent so that it can\n\t  be easily parsed:\n\t      mimetype [charset=character-set] [encoding=encoding-mime-type]\n\n\t  Remove spurious extra text from some MIME type printouts\n\t  (mostly in is_tar).\n\n\t  Fix one case where -i produced nothing at all (for a 1-byte file,\n\t  which is now classed as application/octet-stream).\n\n\t  Remove 7/8bit classifications, since they were arbitrary\n\t  and not based on the file data.\n\n\t  This work was done by Reuben Thomas\n\n2007-05-24 10:00 Christos Zoulas <christos@astron.com>\n\n\t* Fix another integer overflow (Colin Percival)\n\n2007-03-26 13:58 Christos Zoulas <christos@astron.com>\n\n\t* make sure that all of struct magic_set is initialized appropriately\n\t  (Brett)\n\n2007-03-25 17:44 Christos Zoulas <christos@astron.com>\n\n\t* reset left bytes in the buffer (Dmitry V. Levin)\n\n\t* compilation failed with COMPILE_ONLY and ENABLE_CONDITIONALS\n\t  (Peter Avalos)\n\n2007-03-15 10:51 Christos Zoulas <christos@astron.com>\n\n\t* fix fortran and nroff reversed tests (Dmitry V. Levin)\n\n\t* fix exclude option (Dmitry V. Levin)\n\n2007-02-08 17:30 Christos Zoulas <christos@astron.com>\n\n\t* fix integer underflow in file_printf which can lead to\n\t  to exploitable heap overflow (Jean-Sebastien Guay-Lero)\n\n2007-02-05 11:35 Christos Zoulas <christos@astron.com>\n\n\t* make socket/pipe reading more robust\n\n2007-01-25 16:01 Christos Zoulas <christos@astron.com>\n\n\t* Centralize all the tests in file_buffer.\n\n\t* Add exclude flag.\n\n2007-01-18 05:29 Anon Ymous <do@not.spam.me>\n\n\t* Move the \"type\" detection code from parse() into its own table\n\t  driven routine.  This avoids maintaining multiple lists in\n\t  file.h.\n\n\t* Add an optional conditional field (ust before the type field).\n\t  This code is wrapped in \"#ifdef ENABLE_CONDITIONALS\" as it is\n\t  likely to go away.\n\n2007-01-16 23:24 Anon Ymous <do@not.spam.me>\n\n\t* Fix an initialization bug in check_mem().\n\n2007-01-16 14:58 Anon Ymous <do@not.spam.me>\n\n\t* Add a \"default\" type to print a message if nothing previously\n\t  matched at that level or since the last default at that\n\t  level.  This is useful for setting up switch-like statements.\n\t  It can also be used to do if/else constructions without a\n\t  redundant second test.\n\n\t* Fix the \"x\" special case test so that one can test for that\n\t  string with \"=x\".\n\n\t* Allow \"search\" to search the entire buffer if the \"/N\"\n\t  search count is missing.\n\n\t* Make \"regex\" work!  It now starts its search at the\n\t  specified offset and takes an (optional) \"/N\" line count to\n\t  specify the search range; otherwise it searches to the end\n\t  of the file.  The match is now grabbed correctly for format\n\t  strings and the offset set to the end of the match.\n\n\t* Add a \"/s\" flag to \"regex\" and \"search\" to set the offset to\n\t  the start of the match.  By default the offset is set to the\n\t  end of the match, as it is with other tests.  This is mostly\n\t  useful for \"regex\".\n\n\t* Make \"search\", \"string\" and \"pstring\" use the same\n\t  file_strncmp() routine so that they support the same flags;\n\t  \"bestring16\" and \"lestring16\" call the same routine, but\n\t  with flags = 0.  Also add a \"/C\" flag (in analogy to \"/c\")\n\t  to ignore the case on uppercase (lowercase) characters in\n\t  the test string.\n\n\t* Strict adherence to C style string escapes.  A warnings are\n\t  printed when compiling.  Note: previously \"\\a\" was\n\t  incorrectly translated to 'a' instead of an <alert> (i.e.,\n\t  BELL, typically 0x07).\n\n\t* Make this compile with \"-Wall -Wextra\" and all the warning\n\t  flags used with WARNS=4 in the NetBSD source.  Also make it\n\t  pass lint.\n\n\t* Many \"cleanups\" and hopefully not too many new bugs!\n\n2007-01-16 14:56 Anon Ymous <do@not.spam.me>\n\n\t* make several more files compile with gcc warnings\n\t  on and also make them pass lint.\n\n2007-01-16 14:54 Anon Ymous <do@not.spam.me>\n\n\t* fix a puts()/putc() usage goof in file.c\n\n\t* make file.c compile with gcc warnings and pass lint\n\n2006-12-11 16:49 Christos Zoulas <christos@astron.com>\n\n\t* fix byteswapping issue\n\n\t* report the number of bytes we tried to\n\t  allocate when allocation fails\n\n\t* add a few missed cases in the strength routine\n\n2006-12-08 16:32 Christos Zoulas <christos@astron.com>\n\n\t* store and print the line number of the magic\n\t  entry for debugging.\n\n\t* if the magic entry did not print anything,\n\t  don't treat it as a match\n\n\t* change the magic strength algorithm to take\n\t  into account the relationship op.\n\n\t* fix a bug in search where we could accidentally\n\t  return a match.\n\n\t* propagate the error return from match to\n\t  file_softmagic.\n\n2006-11-25 13:35 Christos Zoulas <christos@astron.com>\n\n\t* Don't store the current offset in the magic\n\t  struct, because it needs to be restored and\n\t  it was not done properly all the time. Bug\n\t  found by: Arkadiusz Miskiewicz\n\n\t* Fix problem in the '\\0' separator; and don't\n\t  print it as an additional separator; print\n\t  it as the only separator.\n\n2006-11-17 10:51 Christos Zoulas <christos@astron.com>\n\n\t* Added a -0 option to print a '\\0' separator\n\t  Etienne Buira <etienne.buira@free.fr>\n\n2006-10-31 15:14 Christos Zoulas <christos@astron.com>\n\n\t* Check offset before copying (Mike Frysinger)\n\n\t* merge duplicated code\n\n\t* add quad date support\n\n\t* make sure that we nul terminate desc (Ryoji Kanai)\n\n\t* don't process elf notes multiple times\n\n\t* allow -z to report empty compressed files\n\n\t* use calloc to initialize the ascii buffers (Jos van den Oever)\n\n2006-06-08 11:11 Christos Zoulas <christos@astron.com>\n\n\t* QNX fixes (Mike Gorchak)\n\n\t* Add quad support.\n\n\t* FIFO checks (Dr. Werner Fink)\n\n\t* Linux ELF fixes (Dr. Werner Fink)\n\n\t* Magic format checks (Dr. Werner Fink)\n\n\t* Magic format function improvent (Karl Chen)\n\n2006-05-03 11:11 Christos Zoulas <christos@astron.com>\n\n\t* Pick up some elf changes and some constant fixes from SUSE\n\n\t* Identify gnu tar vs. posix tar\n\n\t* When keep going, don't print spurious newlines (Radek Vokal)\n\n2006-04-01 12:02 Christos Zoulas <christos@astron.com>\n\n\t* Use calloc instead of malloc (Mike Frysinger)\n\n\t* Fix configure script to detect wctypes.h (Mike Frysinger)\n\n2006-03-02 16:06 Christos Zoulas <christos@astron.com>\n\n\t* Print empty if the file is (Mike Frysinger)\n\n\t* Don't try to read past the end of the buffer (Mike Frysinger)\n\n\t* Sort magic entries by strength [experimental]\n\n2005-11-29 13:26 Christos Zoulas <christos@astron.com>\n\n\t* Use iswprint() to convert the output string.\n\t    (Bastien Nocera)\n\n2005-10-31 8:54 Christos Zoulas <christos@astron.com>\n\n\t* Fix regression where the core info was not completely processed\n\t    (Radek Vokal)\n\n2005-10-20 11:15 Christos Zoulas <christos@astron.com>\n\n\t* Middle Endian magic (Diomidis Spinellis)\n\n2005-10-17 11:15 Christos Zoulas <christos@astron.com>\n\n\t* Open with O_BINARY for CYGWIN (Corinna Vinschen)\n\n\t* Don't close stdin (Arkadiusz Miskiewicz)\n\n\t* Look for note sections in non executables.\n\n2005-09-20 13:33 Christos Zoulas <christos@astron.com>\n\n\t* Don't print SVR4 Style in core files multiple times\n\t    (Radek Vokal)\n\n2005-08-27 04:09 Christos Zoulas <christos@astron.com>\n\n\t* Cygwin changes Corinna Vinschen\n\n2005-08-18 09:53 Christos Zoulas <christos@astron.com>\n\n\t* Remove erroreous mention of /etc/magic in the file man page\n\t  This is gentoo bug 101639. (Mike Frysinger)\n\n\t* Cross-compile support and detection (Mike Frysinger)\n\n2005-08-12 10:17 Christos Zoulas <christos@astron.com>\n\n\t* Add -h flag and dereference symlinks if POSIXLY_CORRECT\n\t  is set.\n\n2005-07-29 13:57 Christos Zoulas <christos@astron.com>\n\n\t* Avoid search and regex buffer overflows (Kelledin)\n\n2005-07-12 11:48 Christos Zoulas <christos@astron.com>\n\n\t* Provide stub implementations for {v,}nsprintf() for older\n\t  OS's that don't have them.\n\t* Change mbstate_t autoconf detection macro from AC_MBSTATE_T\n\t  to AC_TYPE_MBSTATE_T.\n\n2005-06-25 11:48 Christos Zoulas <christos@astron.com>\n\n\t* Dynamically allocate the string buffers and make the\n\t  default read size 256K.\n\n2005-06-01 00:00 Joerg Sonnenberger <joerg@britannica.bec.de>\n\n\t* Dragonfly ELF note support\n\n2005-03-14 00:00 Giuliano Bertoletti <gb@symbolic.it>\n\n\t* Avoid NULL pointer dereference in time conversion.\n\n2005-03-06 00:00  Joerg Walter <jwalt@mail.garni.ch>\n\n\t* Add indirect magic offset support, and search mode.\n\n2005-01-12 00:00  Stepan Kasal  <kasal@ucw.cz>\n\n\t* src/ascmagic.c (file_ascmagic): Fix three bugs about text files:\n\t  If a CRLF text file happens to have CR at offset HOWMANY - 1\n\t  (currently 0xffff), it should not be counted as CR line\n\t  terminator.\n\t  If a line has length exactly MAXLINELEN, it should not yet be\n\t  treated as a ``very long line'', as MAXLINELEN is ``longest sane\n\t  line length''.\n\t  With CRLF, the line length was not computed correctly, and even\n\t  lines of length MAXLINELEN - 1 were treated as ``very long''.\n\n2004-12-07 14:15  Christos Zoulas  <christos@astron.com>\n\n\t* bzip2 needs a lot of input buffer space on some files\n\t  before it can begin uncompressing. This makes file -z\n\t  fail on some bz2 files. Fix it by giving it a copy of\n\t  the file descriptor to read as much as it wants if we\n\t  have access to it. <christos@astron.com>\n\n2004-11-24 12:39  Christos Zoulas  <christos@astron.com>\n\n\t* Stack smash fix, and ELF more conservative reading.\n\t  Jakub Bogusz <qboosh@pld-linux.org>\n\n2004-11-20 18:50  Christos Zoulas  <christos@astron.com>\n\n\t* New FreeBSD version parsing code:\n\t  Jon Noack <noackjr@alumni.rice.edu>\n\n\t* Hackish support for ucs16 strings <christos@astron.com>\n\n2004-11-13 03:07  Christos Zoulas  <christos@astron.com>\n\n\t* print the file name and line number in syntax errors.\n\n2004 10-12 10:50  Christos Zoulas  <christos@astron.com>\n\n\t* Fix stack overwriting on 0 length strings: Tim Waugh\n\t    <twaugh@redhat.com> Ned Ludd <solar@gentoo.org>\n\n2004-09-27 11:30  Christos Zoulas  <christos@astron.com>\n\n\t* Remove 3rd and 4th copyright clause; approved by Ian Darwin.\n\n\t* Fix small memory leaks; caught by: Tamas Sarlos\n\t    <stamas@csillag.ilab.sztaki.hu>\n\n2004-07-24 16:33  Christos Zoulas  <christos@astron.com>\n\n\t* magic.mime update Danny Milosavljevic <danny.milo@gmx.net>\n\n\t* FreeBSD version update Oliver Eikemeier <eikemeier@fillmore-labs.com>\n\n\t* utime/utimes detection Ian Lance Taylor <ian@wasabisystems.com>\n\n  \t* errors reading elf magic Jakub Bogusz <qboosh@pld-linux.org>\n\n2004-04-12 10:55  Christos Zoulas  <christos@astron.com>\n\n\t* make sure that magic formats match magic types during compilation\n\n\t* fix broken sgi magic file\n\n2004-04-06 20:36  Christos Zoulas  <christos@astron.com>\n\n\t* detect present of mbstate_t Petter Reinholdtsen <pere@hungry.com>\n\n\t* magic fixes\n\n2004-03-22 15:25  Christos Zoulas  <christos@astron.com>\n\n\t* Lots of mime fixes\n\t  (Joerg Ostertag) <ostertag@rechengilde.de>\n\n\t* FreeBSD ELF version handling\n\t  (Edwin Groothuis) <edwin@mavetju.org>\n\n\t* correct cleanup in all cases; don't just close the file.\n\t  (Christos Zoulas) <christos@astron.com>\n\n\t* add gettext message catalogue support\n\t  (Michael Piefel) <piefel@debian.org>\n\n\t* better printout for unreadable files\n\t  (Michael Piefel) <piefel@debian.org>\n\n\t* compensate for missing MAXPATHLEN\n\t  (Michael Piefel) <piefel@debian.org>\n\n\t* add wide character string length computation\n\t  (Michael Piefel) <piefel@debian.org>\n\n\t* Avoid infinite loops caused by bad elf alignments\n\t  or name and description note sizes. Reported by\n\t  (Mikael Magnusson) <mmikael@comhem.se>\n\n2004-03-09 13:55  Christos Zoulas  <christos@astron.com>\n\n\t* Fix possible memory leak on error and add missing regfree\n\t  (Dmitry V. Levin) <ldv@altlinux.org>\n\n2003-12-23 12:12  Christos Zoulas  <christos@astron.com>\n\n\t* fix -k flag (Maciej W. Rozycki)\n\n2003-11-18 14:10  Christos Zoulas  <christos@astron.com>\n\n\t* Try to give us much info as possible on corrupt elf files.\n\t  (Willy Tarreau) <willy@w.ods.org>\n\t* Updated python bindings (Brett Funderburg)\n\t   <brettf@deepfile.com>\n\n2003-11-11 15:03  Christos Zoulas  <christos@astron.com>\n\n\t* Include file.h first, because it includes config.h\n\t  breaks largefile test macros otherwise.\n\t  (Paul Eggert <eggert@CS.UCLA.EDU> via\n\t   Lars Hecking <lhecking@nmrc.ie>)\n\n2003-10-14 21:39  Christos Zoulas  <christos@astron.com>\n\n\t* Python bindings (Brett Funderburg) <brettf@deepfile.com>\n\t* Don't lookup past the end of the buffer\n\t  (Chad Hanson) <chanson@tcs-sec.com>\n\t* Add MAGIC_ERROR and api on magic_errno()\n\n2003-10-08 12:40  Christos Zoulas  <christos@astron.com>\n\n\t* handle error conditions from compile as fatal\n\t  (Antti Kantee) <pooka@netbsd.org>\n\t* handle magic filename parsing sanely\n\t* more magic fixes.\n\t* fix a memory leak (Illes Marton) <illes.marton@balabit.hu>\n\t* describe magic file handling\n\t  (Bryan Henderson) <bryanh@giraffe-data.com>\n\n2003-09-12 15:09  Christos Zoulas  <christos@astron.com>\n\n\t* update magic files.\n\t* remove largefile support from file.h; it breaks things on most OS's\n\n2003-08-10 10:25  Christos Zoulas  <christos@astron.com>\n\n\t* fix unmapping'ing of mmaped files.\n\n2003-07-10 12:03  Christos Zoulas  <christos@astron.com>\n\n\t* don't exit with -1 on error; always exit 1 (Marty Leisner)\n\t* restore utimes code.\n\n2003-06-10 17:03  Christos Zoulas  <christos@astron.com>\n\n\t* make sure we don't access uninitialized memory.\n\t* pass lint\n\t* #ifdef __cplusplus in magic.h\n\n2003-05-25 19:23  Christos Zoulas  <christos@astron.com>\n\n\t* rename cvs magic file to revision to deal with\n\t  case insensitive filesystems.\n\n2003-05-23 17:03  Christos Zoulas  <christos@astron.com>\n\n\t* documentation fixes from Michael Piefel <piefel@debian.org>\n\t* magic fixes (various)\n\t* revert basename magic in .mgc name determination\n\t* buffer protection in uncompress,\n\t  signness issues,\n\t  close files\n\t  Maciej W. Rozycki <macro@ds2.pg.gda.pl\n\n2003-04-21 20:12  Christos Zoulas  <christos@astron.com>\n\n\t* fix zsh magic\n\n2003-04-04 16:59  Christos Zoulas  <christos@astron.com>\n\n\t* fix operand sort order in string.\n\n2003-04-02 17:30  Christos Zoulas  <christos@astron.com>\n\n\t* cleanup namespace in magic.h\n\n2003-04-02 13:50  Christos Zoulas  <christos@astron.com>\n\n\t* Magic additions (Alex Ott)\n\t* Fix bug that broke VPATH compilation (Peter Breitenlohner)\n\n2003-03-28 16:03  Christos Zoulas  <christos@astron.com>\n\n\t* remove packed attribute from magic struct.\n\t* make the magic struct properly aligned.\n\t* bump version number of compiled files to 2.\n\n2003-03-27 13:10  Christos Zoulas  <christos@astron.com>\n\n\t* separate tar detection and run it before softmagic.\n\t* fix reversed symlink test.\n\t* fix version printing.\n\t* make separator a string instead of a char.\n\t* update manual page and sort options.\n\n2003-03-26 11:00  Christos Zoulas  <christos@astron.com>\n\n\t* Pass lint\n\t* make NULL in magic_file mean stdin\n\t* Fix \"-\" argument to file to pass NULL to magic_file\n\t* avoid pointer casts by using memcpy\n\t* rename magic_buf -> magic_buffer\n\t* keep only the first error\n\t* manual page: new sentence, new line\n\t* fix typo in api function (magic_buf -> magic_buffer)\n", "/*\n * Copyright (c) Christos Zoulas 2003.\n * All Rights Reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice immediately at the beginning of the file, without modification,\n *    this list of conditions, and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *  \n * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n#include \"file.h\"\n\n#ifndef lint\nFILE_RCSID(\"@(#)$File: readelf.c,v 1.103 2014/05/02 02:25:10 christos Exp $\")\n#endif\n\n#ifdef BUILTIN_ELF\n#include <string.h>\n#include <ctype.h>\n#include <stdlib.h>\n#ifdef HAVE_UNISTD_H\n#include <unistd.h>\n#endif\n\n#include \"readelf.h\"\n#include \"magic.h\"\n\n#ifdef\tELFCORE\nprivate int dophn_core(struct magic_set *, int, int, int, off_t, int, size_t,\n    off_t, int *);\n#endif\nprivate int dophn_exec(struct magic_set *, int, int, int, off_t, int, size_t,\n    off_t, int *, int);\nprivate int doshn(struct magic_set *, int, int, int, off_t, int, size_t,\n    off_t, int *, int, int);\nprivate size_t donote(struct magic_set *, void *, size_t, size_t, int,\n    int, size_t, int *);\n\n#define\tELF_ALIGN(a)\t((((a) + align - 1) / align) * align)\n\n#define isquote(c) (strchr(\"'\\\"`\", (c)) != NULL)\n\nprivate uint16_t getu16(int, uint16_t);\nprivate uint32_t getu32(int, uint32_t);\nprivate uint64_t getu64(int, uint64_t);\n\nprivate uint16_t\ngetu16(int swap, uint16_t value)\n{\n\tunion {\n\t\tuint16_t ui;\n\t\tchar c[2];\n\t} retval, tmpval;\n\n\tif (swap) {\n\t\ttmpval.ui = value;\n\n\t\tretval.c[0] = tmpval.c[1];\n\t\tretval.c[1] = tmpval.c[0];\n\t\t\n\t\treturn retval.ui;\n\t} else\n\t\treturn value;\n}\n\nprivate uint32_t\ngetu32(int swap, uint32_t value)\n{\n\tunion {\n\t\tuint32_t ui;\n\t\tchar c[4];\n\t} retval, tmpval;\n\n\tif (swap) {\n\t\ttmpval.ui = value;\n\n\t\tretval.c[0] = tmpval.c[3];\n\t\tretval.c[1] = tmpval.c[2];\n\t\tretval.c[2] = tmpval.c[1];\n\t\tretval.c[3] = tmpval.c[0];\n\t\t\n\t\treturn retval.ui;\n\t} else\n\t\treturn value;\n}\n\nprivate uint64_t\ngetu64(int swap, uint64_t value)\n{\n\tunion {\n\t\tuint64_t ui;\n\t\tchar c[8];\n\t} retval, tmpval;\n\n\tif (swap) {\n\t\ttmpval.ui = value;\n\n\t\tretval.c[0] = tmpval.c[7];\n\t\tretval.c[1] = tmpval.c[6];\n\t\tretval.c[2] = tmpval.c[5];\n\t\tretval.c[3] = tmpval.c[4];\n\t\tretval.c[4] = tmpval.c[3];\n\t\tretval.c[5] = tmpval.c[2];\n\t\tretval.c[6] = tmpval.c[1];\n\t\tretval.c[7] = tmpval.c[0];\n\t\t\n\t\treturn retval.ui;\n\t} else\n\t\treturn value;\n}\n\n#define elf_getu16(swap, value) getu16(swap, value)\n#define elf_getu32(swap, value) getu32(swap, value)\n#define elf_getu64(swap, value) getu64(swap, value)\n\n#define xsh_addr\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? (void *)&sh32\t\t\t\\\n\t\t\t : (void *)&sh64)\n#define xsh_sizeof\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? sizeof(sh32)\t\t\t\t\\\n\t\t\t : sizeof(sh64))\n#define xsh_size\t(size_t)(clazz == ELFCLASS32\t\t\\\n\t\t\t ? elf_getu32(swap, sh32.sh_size)\t\\\n\t\t\t : elf_getu64(swap, sh64.sh_size))\n#define xsh_offset\t(off_t)(clazz == ELFCLASS32\t\t\\\n\t\t\t ? elf_getu32(swap, sh32.sh_offset)\t\\\n\t\t\t : elf_getu64(swap, sh64.sh_offset))\n#define xsh_type\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? elf_getu32(swap, sh32.sh_type)\t\\\n\t\t\t : elf_getu32(swap, sh64.sh_type))\n#define xsh_name    \t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? elf_getu32(swap, sh32.sh_name)\t\\\n\t\t\t : elf_getu32(swap, sh64.sh_name))\n#define xph_addr\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? (void *) &ph32\t\t\t\\\n\t\t\t : (void *) &ph64)\n#define xph_sizeof\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? sizeof(ph32)\t\t\t\t\\\n\t\t\t : sizeof(ph64))\n#define xph_type\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? elf_getu32(swap, ph32.p_type)\t\\\n\t\t\t : elf_getu32(swap, ph64.p_type))\n#define xph_offset\t(off_t)(clazz == ELFCLASS32\t\t\\\n\t\t\t ? elf_getu32(swap, ph32.p_offset)\t\\\n\t\t\t : elf_getu64(swap, ph64.p_offset))\n#define xph_align\t(size_t)((clazz == ELFCLASS32\t\t\\\n\t\t\t ? (off_t) (ph32.p_align ? \t\t\\\n\t\t\t    elf_getu32(swap, ph32.p_align) : 4) \\\n\t\t\t : (off_t) (ph64.p_align ?\t\t\\\n\t\t\t    elf_getu64(swap, ph64.p_align) : 4)))\n#define xph_filesz\t(size_t)((clazz == ELFCLASS32\t\t\\\n\t\t\t ? elf_getu32(swap, ph32.p_filesz)\t\\\n\t\t\t : elf_getu64(swap, ph64.p_filesz)))\n#define xnh_addr\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? (void *)&nh32\t\t\t\\\n\t\t\t : (void *)&nh64)\n#define xph_memsz\t(size_t)((clazz == ELFCLASS32\t\t\\\n\t\t\t ? elf_getu32(swap, ph32.p_memsz)\t\\\n\t\t\t : elf_getu64(swap, ph64.p_memsz)))\n#define xnh_sizeof\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? sizeof nh32\t\t\t\t\\\n\t\t\t : sizeof nh64)\n#define xnh_type\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? elf_getu32(swap, nh32.n_type)\t\\\n\t\t\t : elf_getu32(swap, nh64.n_type))\n#define xnh_namesz\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? elf_getu32(swap, nh32.n_namesz)\t\\\n\t\t\t : elf_getu32(swap, nh64.n_namesz))\n#define xnh_descsz\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? elf_getu32(swap, nh32.n_descsz)\t\\\n\t\t\t : elf_getu32(swap, nh64.n_descsz))\n#define prpsoffsets(i)\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? prpsoffsets32[i]\t\t\t\\\n\t\t\t : prpsoffsets64[i])\n#define xcap_addr\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? (void *)&cap32\t\t\t\\\n\t\t\t : (void *)&cap64)\n#define xcap_sizeof\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? sizeof cap32\t\t\t\t\\\n\t\t\t : sizeof cap64)\n#define xcap_tag\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? elf_getu32(swap, cap32.c_tag)\t\\\n\t\t\t : elf_getu64(swap, cap64.c_tag))\n#define xcap_val\t(clazz == ELFCLASS32\t\t\t\\\n\t\t\t ? elf_getu32(swap, cap32.c_un.c_val)\t\\\n\t\t\t : elf_getu64(swap, cap64.c_un.c_val))\n\n#ifdef ELFCORE\n/*\n * Try larger offsets first to avoid false matches\n * from earlier data that happen to look like strings.\n */\nstatic const size_t\tprpsoffsets32[] = {\n#ifdef USE_NT_PSINFO\n\t104,\t\t/* SunOS 5.x (command line) */\n\t88,\t\t/* SunOS 5.x (short name) */\n#endif /* USE_NT_PSINFO */\n\n\t100,\t\t/* SunOS 5.x (command line) */\n\t84,\t\t/* SunOS 5.x (short name) */\n\n\t44,\t\t/* Linux (command line) */\n\t28,\t\t/* Linux 2.0.36 (short name) */\n\n\t8,\t\t/* FreeBSD */\n};\n\nstatic const size_t\tprpsoffsets64[] = {\n#ifdef USE_NT_PSINFO\n\t152,\t\t/* SunOS 5.x (command line) */\n\t136,\t\t/* SunOS 5.x (short name) */\n#endif /* USE_NT_PSINFO */\n\n\t136,\t\t/* SunOS 5.x, 64-bit (command line) */\n\t120,\t\t/* SunOS 5.x, 64-bit (short name) */\n\n\t56,\t\t/* Linux (command line) */\n\t40,             /* Linux (tested on core from 2.4.x, short name) */\n\n\t16,\t\t/* FreeBSD, 64-bit */\n};\n\n#define\tNOFFSETS32\t(sizeof prpsoffsets32 / sizeof prpsoffsets32[0])\n#define NOFFSETS64\t(sizeof prpsoffsets64 / sizeof prpsoffsets64[0])\n\n#define NOFFSETS\t(clazz == ELFCLASS32 ? NOFFSETS32 : NOFFSETS64)\n\n/*\n * Look through the program headers of an executable image, searching\n * for a PT_NOTE section of type NT_PRPSINFO, with a name \"CORE\" or\n * \"FreeBSD\"; if one is found, try looking in various places in its\n * contents for a 16-character string containing only printable\n * characters - if found, that string should be the name of the program\n * that dropped core.  Note: right after that 16-character string is,\n * at least in SunOS 5.x (and possibly other SVR4-flavored systems) and\n * Linux, a longer string (80 characters, in 5.x, probably other\n * SVR4-flavored systems, and Linux) containing the start of the\n * command line for that program.\n *\n * SunOS 5.x core files contain two PT_NOTE sections, with the types\n * NT_PRPSINFO (old) and NT_PSINFO (new).  These structs contain the\n * same info about the command name and command line, so it probably\n * isn't worthwhile to look for NT_PSINFO, but the offsets are provided\n * above (see USE_NT_PSINFO), in case we ever decide to do so.  The\n * NT_PRPSINFO and NT_PSINFO sections are always in order and adjacent;\n * the SunOS 5.x file command relies on this (and prefers the latter).\n *\n * The signal number probably appears in a section of type NT_PRSTATUS,\n * but that's also rather OS-dependent, in ways that are harder to\n * dissect with heuristics, so I'm not bothering with the signal number.\n * (I suppose the signal number could be of interest in situations where\n * you don't have the binary of the program that dropped core; if you\n * *do* have that binary, the debugger will probably tell you what\n * signal it was.)\n */\n\n#define\tOS_STYLE_SVR4\t\t0\n#define\tOS_STYLE_FREEBSD\t1\n#define\tOS_STYLE_NETBSD\t\t2\n\nprivate const char os_style_names[][8] = {\n\t\"SVR4\",\n\t\"FreeBSD\",\n\t\"NetBSD\",\n};\n\n#define FLAGS_DID_CORE\t\t0x01\n#define FLAGS_DID_NOTE\t\t0x02\n#define FLAGS_DID_BUILD_ID\t0x04\n#define FLAGS_DID_CORE_STYLE\t0x08\n#define FLAGS_IS_CORE\t\t0x10\n\nprivate int\ndophn_core(struct magic_set *ms, int clazz, int swap, int fd, off_t off,\n    int num, size_t size, off_t fsize, int *flags)\n{\n\tElf32_Phdr ph32;\n\tElf64_Phdr ph64;\n\tsize_t offset, len;\n\tunsigned char nbuf[BUFSIZ];\n\tssize_t bufsize;\n\n\tif (size != xph_sizeof) {\n\t\tif (file_printf(ms, \", corrupted program header size\") == -1)\n\t\t\treturn -1;\n\t\treturn 0;\n\t}\n\n\t/*\n\t * Loop through all the program headers.\n\t */\n\tfor ( ; num; num--) {\n\t\tif (pread(fd, xph_addr, xph_sizeof, off) == -1) {\n\t\t\tfile_badread(ms);\n\t\t\treturn -1;\n\t\t}\n\t\toff += size;\n\n\t\tif (xph_offset > fsize) {\n\t\t\t/* Perhaps warn here */\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (xph_type != PT_NOTE)\n\t\t\tcontinue;\n\n\t\t/*\n\t\t * This is a PT_NOTE section; loop through all the notes\n\t\t * in the section.\n\t\t */\n\t\tlen = xph_filesz < sizeof(nbuf) ? xph_filesz : sizeof(nbuf);\n\t\tif ((bufsize = pread(fd, nbuf, len, xph_offset)) == -1) {\n\t\t\tfile_badread(ms);\n\t\t\treturn -1;\n\t\t}\n\t\toffset = 0;\n\t\tfor (;;) {\n\t\t\tif (offset >= (size_t)bufsize)\n\t\t\t\tbreak;\n\t\t\toffset = donote(ms, nbuf, offset, (size_t)bufsize,\n\t\t\t    clazz, swap, 4, flags);\n\t\t\tif (offset == 0)\n\t\t\t\tbreak;\n\n\t\t}\n\t}\n\treturn 0;\n}\n#endif\n\nstatic void\ndo_note_netbsd_version(struct magic_set *ms, int swap, void *v)\n{\n\tuint32_t desc;\n\t(void)memcpy(&desc, v, sizeof(desc));\n\tdesc = elf_getu32(swap, desc);\n\n\tif (file_printf(ms, \", for NetBSD\") == -1)\n\t\treturn;\n\t/*\n\t * The version number used to be stuck as 199905, and was thus\n\t * basically content-free.  Newer versions of NetBSD have fixed\n\t * this and now use the encoding of __NetBSD_Version__:\n\t *\n\t *\tMMmmrrpp00\n\t *\n\t * M = major version\n\t * m = minor version\n\t * r = release [\"\",A-Z,Z[A-Z] but numeric]\n\t * p = patchlevel\n\t */\n\tif (desc > 100000000U) {\n\t\tuint32_t ver_patch = (desc / 100) % 100;\n\t\tuint32_t ver_rel = (desc / 10000) % 100;\n\t\tuint32_t ver_min = (desc / 1000000) % 100;\n\t\tuint32_t ver_maj = desc / 100000000;\n\n\t\tif (file_printf(ms, \" %u.%u\", ver_maj, ver_min) == -1)\n\t\t\treturn;\n\t\tif (ver_rel == 0 && ver_patch != 0) {\n\t\t\tif (file_printf(ms, \".%u\", ver_patch) == -1)\n\t\t\t\treturn;\n\t\t} else if (ver_rel != 0) {\n\t\t\twhile (ver_rel > 26) {\n\t\t\t\tif (file_printf(ms, \"Z\") == -1)\n\t\t\t\t\treturn;\n\t\t\t\tver_rel -= 26;\n\t\t\t}\n\t\t\tif (file_printf(ms, \"%c\", 'A' + ver_rel - 1)\n\t\t\t    == -1)\n\t\t\t\treturn;\n\t\t}\n\t}\n}\n\nstatic void\ndo_note_freebsd_version(struct magic_set *ms, int swap, void *v)\n{\n\tuint32_t desc;\n\n\t(void)memcpy(&desc, v, sizeof(desc));\n\tdesc = elf_getu32(swap, desc);\n\tif (file_printf(ms, \", for FreeBSD\") == -1)\n\t\treturn;\n\n\t/*\n\t * Contents is __FreeBSD_version, whose relation to OS\n\t * versions is defined by a huge table in the Porter's\n\t * Handbook.  This is the general scheme:\n\t * \n\t * Releases:\n\t * \tMmp000 (before 4.10)\n\t * \tMmi0p0 (before 5.0)\n\t * \tMmm0p0\n\t * \n\t * Development branches:\n\t * \tMmpxxx (before 4.6)\n\t * \tMmp1xx (before 4.10)\n\t * \tMmi1xx (before 5.0)\n\t * \tM000xx (pre-M.0)\n\t * \tMmm1xx\n\t * \n\t * M = major version\n\t * m = minor version\n\t * i = minor version increment (491000 -> 4.10)\n\t * p = patchlevel\n\t * x = revision\n\t * \n\t * The first release of FreeBSD to use ELF by default\n\t * was version 3.0.\n\t */\n\tif (desc == 460002) {\n\t\tif (file_printf(ms, \" 4.6.2\") == -1)\n\t\t\treturn;\n\t} else if (desc < 460100) {\n\t\tif (file_printf(ms, \" %d.%d\", desc / 100000,\n\t\t    desc / 10000 % 10) == -1)\n\t\t\treturn;\n\t\tif (desc / 1000 % 10 > 0)\n\t\t\tif (file_printf(ms, \".%d\", desc / 1000 % 10) == -1)\n\t\t\t\treturn;\n\t\tif ((desc % 1000 > 0) || (desc % 100000 == 0))\n\t\t\tif (file_printf(ms, \" (%d)\", desc) == -1)\n\t\t\t\treturn;\n\t} else if (desc < 500000) {\n\t\tif (file_printf(ms, \" %d.%d\", desc / 100000,\n\t\t    desc / 10000 % 10 + desc / 1000 % 10) == -1)\n\t\t\treturn;\n\t\tif (desc / 100 % 10 > 0) {\n\t\t\tif (file_printf(ms, \" (%d)\", desc) == -1)\n\t\t\t\treturn;\n\t\t} else if (desc / 10 % 10 > 0) {\n\t\t\tif (file_printf(ms, \".%d\", desc / 10 % 10) == -1)\n\t\t\t\treturn;\n\t\t}\n\t} else {\n\t\tif (file_printf(ms, \" %d.%d\", desc / 100000,\n\t\t    desc / 1000 % 100) == -1)\n\t\t\treturn;\n\t\tif ((desc / 100 % 10 > 0) ||\n\t\t    (desc % 100000 / 100 == 0)) {\n\t\t\tif (file_printf(ms, \" (%d)\", desc) == -1)\n\t\t\t\treturn;\n\t\t} else if (desc / 10 % 10 > 0) {\n\t\t\tif (file_printf(ms, \".%d\", desc / 10 % 10) == -1)\n\t\t\t\treturn;\n\t\t}\n\t}\n}\n\nprivate size_t\ndonote(struct magic_set *ms, void *vbuf, size_t offset, size_t size,\n    int clazz, int swap, size_t align, int *flags)\n{\n\tElf32_Nhdr nh32;\n\tElf64_Nhdr nh64;\n\tsize_t noff, doff;\n#ifdef ELFCORE\n\tint os_style = -1;\n#endif\n\tuint32_t namesz, descsz;\n\tunsigned char *nbuf = CAST(unsigned char *, vbuf);\n\n\tif (xnh_sizeof + offset > size) {\n\t\t/*\n\t\t * We're out of note headers.\n\t\t */\n\t\treturn xnh_sizeof + offset;\n\t}\n\n\t(void)memcpy(xnh_addr, &nbuf[offset], xnh_sizeof);\n\toffset += xnh_sizeof;\n\n\tnamesz = xnh_namesz;\n\tdescsz = xnh_descsz;\n\tif ((namesz == 0) && (descsz == 0)) {\n\t\t/*\n\t\t * We're out of note headers.\n\t\t */\n\t\treturn (offset >= size) ? offset : size;\n\t}\n\n\tif (namesz & 0x80000000) {\n\t    (void)file_printf(ms, \", bad note name size 0x%lx\",\n\t\t(unsigned long)namesz);\n\t    return offset;\n\t}\n\n\tif (descsz & 0x80000000) {\n\t    (void)file_printf(ms, \", bad note description size 0x%lx\",\n\t\t(unsigned long)descsz);\n\t    return offset;\n\t}\n\n\n\tnoff = offset;\n\tdoff = ELF_ALIGN(offset + namesz);\n\n\tif (offset + namesz > size) {\n\t\t/*\n\t\t * We're past the end of the buffer.\n\t\t */\n\t\treturn doff;\n\t}\n\n\toffset = ELF_ALIGN(doff + descsz);\n\tif (doff + descsz > size) {\n\t\t/*\n\t\t * We're past the end of the buffer.\n\t\t */\n\t\treturn (offset >= size) ? offset : size;\n\t}\n\n\tif ((*flags & (FLAGS_DID_NOTE|FLAGS_DID_BUILD_ID)) ==\n\t    (FLAGS_DID_NOTE|FLAGS_DID_BUILD_ID))\n\t\tgoto core;\n\n\tif (namesz == 5 && strcmp((char *)&nbuf[noff], \"SuSE\") == 0 &&\n\t    xnh_type == NT_GNU_VERSION && descsz == 2) {\n\t    file_printf(ms, \", for SuSE %d.%d\", nbuf[doff], nbuf[doff + 1]);\n\t}\n\tif (namesz == 4 && strcmp((char *)&nbuf[noff], \"GNU\") == 0 &&\n\t    xnh_type == NT_GNU_VERSION && descsz == 16) {\n\t\tuint32_t desc[4];\n\t\t(void)memcpy(desc, &nbuf[doff], sizeof(desc));\n\n\t\tif (file_printf(ms, \", for GNU/\") == -1)\n\t\t\treturn size;\n\t\tswitch (elf_getu32(swap, desc[0])) {\n\t\tcase GNU_OS_LINUX:\n\t\t\tif (file_printf(ms, \"Linux\") == -1)\n\t\t\t\treturn size;\n\t\t\tbreak;\n\t\tcase GNU_OS_HURD:\n\t\t\tif (file_printf(ms, \"Hurd\") == -1)\n\t\t\t\treturn size;\n\t\t\tbreak;\n\t\tcase GNU_OS_SOLARIS:\n\t\t\tif (file_printf(ms, \"Solaris\") == -1)\n\t\t\t\treturn size;\n\t\t\tbreak;\n\t\tcase GNU_OS_KFREEBSD:\n\t\t\tif (file_printf(ms, \"kFreeBSD\") == -1)\n\t\t\t\treturn size;\n\t\t\tbreak;\n\t\tcase GNU_OS_KNETBSD:\n\t\t\tif (file_printf(ms, \"kNetBSD\") == -1)\n\t\t\t\treturn size;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (file_printf(ms, \"<unknown>\") == -1)\n\t\t\t\treturn size; \n\t\t}\n\t\tif (file_printf(ms, \" %d.%d.%d\", elf_getu32(swap, desc[1]),\n\t\t    elf_getu32(swap, desc[2]), elf_getu32(swap, desc[3])) == -1)\n\t\t\treturn size;\n\t\t*flags |= FLAGS_DID_NOTE;\n\t\treturn size;\n\t}\n\n\tif (namesz == 4 && strcmp((char *)&nbuf[noff], \"GNU\") == 0 &&\n\t    xnh_type == NT_GNU_BUILD_ID && (descsz == 16 || descsz == 20)) {\n\t    uint8_t desc[20];\n\t    uint32_t i;\n\t    if (file_printf(ms, \", BuildID[%s]=\", descsz == 16 ? \"md5/uuid\" :\n\t\t\"sha1\") == -1)\n\t\t    return size;\n\t    (void)memcpy(desc, &nbuf[doff], descsz);\n\t    for (i = 0; i < descsz; i++)\n\t\tif (file_printf(ms, \"%02x\", desc[i]) == -1)\n\t\t    return size;\n\t    *flags |= FLAGS_DID_BUILD_ID;\n\t}\n\n\tif (namesz == 4 && strcmp((char *)&nbuf[noff], \"PaX\") == 0 &&\n\t    xnh_type == NT_NETBSD_PAX && descsz == 4) {\n\t\tstatic const char *pax[] = {\n\t\t    \"+mprotect\",\n\t\t    \"-mprotect\",\n\t\t    \"+segvguard\",\n\t\t    \"-segvguard\",\n\t\t    \"+ASLR\",\n\t\t    \"-ASLR\",\n\t\t};\n\t\tuint32_t desc;\n\t\tsize_t i;\n\t\tint did = 0;\n\n\t\t(void)memcpy(&desc, &nbuf[doff], sizeof(desc));\n\t\tdesc = elf_getu32(swap, desc);\n\n\t\tif (desc && file_printf(ms, \", PaX: \") == -1)\n\t\t\treturn size;\n\n\t\tfor (i = 0; i < __arraycount(pax); i++) {\n\t\t\tif (((1 << i) & desc) == 0)\n\t\t\t\tcontinue;\n\t\t\tif (file_printf(ms, \"%s%s\", did++ ? \",\" : \"\",\n\t\t\t    pax[i]) == -1)\n\t\t\t\treturn size;\n\t\t}\n\t}\n\n\tif (namesz == 7 && strcmp((char *)&nbuf[noff], \"NetBSD\") == 0) {\n\t\tswitch (xnh_type) {\n\t\tcase NT_NETBSD_VERSION:\n\t\t\tif (descsz == 4) {\n\t\t\t\tdo_note_netbsd_version(ms, swap, &nbuf[doff]);\n\t\t\t\t*flags |= FLAGS_DID_NOTE;\n\t\t\t\treturn size;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase NT_NETBSD_MARCH:\n\t\t\tif (file_printf(ms, \", compiled for: %.*s\", (int)descsz,\n\t\t\t    (const char *)&nbuf[doff]) == -1)\n\t\t\t\treturn size;\n\t\t\tbreak;\n\t\tcase NT_NETBSD_CMODEL:\n\t\t\tif (file_printf(ms, \", compiler model: %.*s\",\n\t\t\t    (int)descsz, (const char *)&nbuf[doff]) == -1)\n\t\t\t\treturn size;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (file_printf(ms, \", note=%u\", xnh_type) == -1)\n\t\t\t\treturn size;\n\t\t\tbreak;\n\t\t}\n\t\treturn size;\n\t}\n\n\tif (namesz == 8 && strcmp((char *)&nbuf[noff], \"FreeBSD\") == 0) {\n\t    \tif (xnh_type == NT_FREEBSD_VERSION && descsz == 4) {\n\t\t\tdo_note_freebsd_version(ms, swap, &nbuf[doff]);\n\t\t\t*flags |= FLAGS_DID_NOTE;\n\t\t\treturn size;\n\t\t}\n\t}\n\n\tif (namesz == 8 && strcmp((char *)&nbuf[noff], \"OpenBSD\") == 0 &&\n\t    xnh_type == NT_OPENBSD_VERSION && descsz == 4) {\n\t\tif (file_printf(ms, \", for OpenBSD\") == -1)\n\t\t\treturn size;\n\t\t/* Content of note is always 0 */\n\t\t*flags |= FLAGS_DID_NOTE;\n\t\treturn size;\n\t}\n\n\tif (namesz == 10 && strcmp((char *)&nbuf[noff], \"DragonFly\") == 0 &&\n\t    xnh_type == NT_DRAGONFLY_VERSION && descsz == 4) {\n\t\tuint32_t desc;\n\t\tif (file_printf(ms, \", for DragonFly\") == -1)\n\t\t\treturn size;\n\t\t(void)memcpy(&desc, &nbuf[doff], sizeof(desc));\n\t\tdesc = elf_getu32(swap, desc);\n\t\tif (file_printf(ms, \" %d.%d.%d\", desc / 100000,\n\t\t    desc / 10000 % 10, desc % 10000) == -1)\n\t\t\treturn size;\n\t\t*flags |= FLAGS_DID_NOTE;\n\t\treturn size;\n\t}\n\ncore:\n\t/*\n\t * Sigh.  The 2.0.36 kernel in Debian 2.1, at\n\t * least, doesn't correctly implement name\n\t * sections, in core dumps, as specified by\n\t * the \"Program Linking\" section of \"UNIX(R) System\n\t * V Release 4 Programmer's Guide: ANSI C and\n\t * Programming Support Tools\", because my copy\n\t * clearly says \"The first 'namesz' bytes in 'name'\n\t * contain a *null-terminated* [emphasis mine]\n\t * character representation of the entry's owner\n\t * or originator\", but the 2.0.36 kernel code\n\t * doesn't include the terminating null in the\n\t * name....\n\t */\n\tif ((namesz == 4 && strncmp((char *)&nbuf[noff], \"CORE\", 4) == 0) ||\n\t    (namesz == 5 && strcmp((char *)&nbuf[noff], \"CORE\") == 0)) {\n\t\tos_style = OS_STYLE_SVR4;\n\t} \n\n\tif ((namesz == 8 && strcmp((char *)&nbuf[noff], \"FreeBSD\") == 0)) {\n\t\tos_style = OS_STYLE_FREEBSD;\n\t}\n\n\tif ((namesz >= 11 && strncmp((char *)&nbuf[noff], \"NetBSD-CORE\", 11)\n\t    == 0)) {\n\t\tos_style = OS_STYLE_NETBSD;\n\t}\n\n#ifdef ELFCORE\n\tif ((*flags & FLAGS_DID_CORE) != 0)\n\t\treturn size;\n\n\tif (os_style != -1 && (*flags & FLAGS_DID_CORE_STYLE) == 0) {\n\t\tif (file_printf(ms, \", %s-style\", os_style_names[os_style])\n\t\t    == -1)\n\t\t\treturn size;\n\t\t*flags |= FLAGS_DID_CORE_STYLE;\n\t}\n\n\tswitch (os_style) {\n\tcase OS_STYLE_NETBSD:\n\t\tif (xnh_type == NT_NETBSD_CORE_PROCINFO) {\n\t\t\tuint32_t signo;\n\t\t\t/*\n\t\t\t * Extract the program name.  It is at\n\t\t\t * offset 0x7c, and is up to 32-bytes,\n\t\t\t * including the terminating NUL.\n\t\t\t */\n\t\t\tif (file_printf(ms, \", from '%.31s'\",\n\t\t\t    &nbuf[doff + 0x7c]) == -1)\n\t\t\t\treturn size;\n\t\t\t\n\t\t\t/*\n\t\t\t * Extract the signal number.  It is at\n\t\t\t * offset 0x08.\n\t\t\t */\n\t\t\t(void)memcpy(&signo, &nbuf[doff + 0x08],\n\t\t\t    sizeof(signo));\n\t\t\tif (file_printf(ms, \" (signal %u)\",\n\t\t\t    elf_getu32(swap, signo)) == -1)\n\t\t\t\treturn size;\n\t\t\t*flags |= FLAGS_DID_CORE;\n\t\t\treturn size;\n\t\t}\n\t\tbreak;\n\n\tdefault:\n\t\tif (xnh_type == NT_PRPSINFO && *flags & FLAGS_IS_CORE) {\n\t\t\tsize_t i, j;\n\t\t\tunsigned char c;\n\t\t\t/*\n\t\t\t * Extract the program name.  We assume\n\t\t\t * it to be 16 characters (that's what it\n\t\t\t * is in SunOS 5.x and Linux).\n\t\t\t *\n\t\t\t * Unfortunately, it's at a different offset\n\t\t\t * in various OSes, so try multiple offsets.\n\t\t\t * If the characters aren't all printable,\n\t\t\t * reject it.\n\t\t\t */\n\t\t\tfor (i = 0; i < NOFFSETS; i++) {\n\t\t\t\tunsigned char *cname, *cp;\n\t\t\t\tsize_t reloffset = prpsoffsets(i);\n\t\t\t\tsize_t noffset = doff + reloffset;\n\t\t\t\tsize_t k;\n\t\t\t\tfor (j = 0; j < 16; j++, noffset++,\n\t\t\t\t    reloffset++) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Make sure we're not past\n\t\t\t\t\t * the end of the buffer; if\n\t\t\t\t\t * we are, just give up.\n\t\t\t\t\t */\n\t\t\t\t\tif (noffset >= size)\n\t\t\t\t\t\tgoto tryanother;\n\n\t\t\t\t\t/*\n\t\t\t\t\t * Make sure we're not past\n\t\t\t\t\t * the end of the contents;\n\t\t\t\t\t * if we are, this obviously\n\t\t\t\t\t * isn't the right offset.\n\t\t\t\t\t */\n\t\t\t\t\tif (reloffset >= descsz)\n\t\t\t\t\t\tgoto tryanother;\n\n\t\t\t\t\tc = nbuf[noffset];\n\t\t\t\t\tif (c == '\\0') {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * A '\\0' at the\n\t\t\t\t\t\t * beginning is\n\t\t\t\t\t\t * obviously wrong.\n\t\t\t\t\t\t * Any other '\\0'\n\t\t\t\t\t\t * means we're done.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (j == 0)\n\t\t\t\t\t\t\tgoto tryanother;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * A nonprintable\n\t\t\t\t\t\t * character is also\n\t\t\t\t\t\t * wrong.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (!isprint(c) || isquote(c))\n\t\t\t\t\t\t\tgoto tryanother;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\t * Well, that worked.\n\t\t\t\t */\n\n\t\t\t\t/*\n\t\t\t\t * Try next offsets, in case this match is\n\t\t\t\t * in the middle of a string.\n\t\t\t\t */\n\t\t\t\tfor (k = i + 1 ; k < NOFFSETS ; k++) {\n\t\t\t\t\tsize_t no;\n\t\t\t\t\tint adjust = 1;\n\t\t\t\t\tif (prpsoffsets(k) >= prpsoffsets(i))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tfor (no = doff + prpsoffsets(k);\n\t\t\t\t\t     no < doff + prpsoffsets(i); no++)\n\t\t\t\t\t\tadjust = adjust\n\t\t\t\t\t\t         && isprint(nbuf[no]);\n\t\t\t\t\tif (adjust)\n\t\t\t\t\t\ti = k;\n\t\t\t\t}\n\n\t\t\t\tcname = (unsigned char *)\n\t\t\t\t    &nbuf[doff + prpsoffsets(i)];\n\t\t\t\tfor (cp = cname; *cp && isprint(*cp); cp++)\n\t\t\t\t\tcontinue;\n\t\t\t\t/*\n\t\t\t\t * Linux apparently appends a space at the end\n\t\t\t\t * of the command line: remove it.\n\t\t\t\t */\n\t\t\t\twhile (cp > cname && isspace(cp[-1]))\n\t\t\t\t\tcp--;\n\t\t\t\tif (file_printf(ms, \", from '%.*s'\",\n\t\t\t\t    (int)(cp - cname), cname) == -1)\n\t\t\t\t\treturn size;\n\t\t\t\t*flags |= FLAGS_DID_CORE;\n\t\t\t\treturn size;\n\n\t\t\ttryanother:\n\t\t\t\t;\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n#endif\n\treturn offset;\n}\n\n/* SunOS 5.x hardware capability descriptions */\ntypedef struct cap_desc {\n\tuint64_t cd_mask;\n\tconst char *cd_name;\n} cap_desc_t;\n\nstatic const cap_desc_t cap_desc_sparc[] = {\n\t{ AV_SPARC_MUL32,\t\t\"MUL32\" },\n\t{ AV_SPARC_DIV32,\t\t\"DIV32\" },\n\t{ AV_SPARC_FSMULD,\t\t\"FSMULD\" },\n\t{ AV_SPARC_V8PLUS,\t\t\"V8PLUS\" },\n\t{ AV_SPARC_POPC,\t\t\"POPC\" },\n\t{ AV_SPARC_VIS,\t\t\t\"VIS\" },\n\t{ AV_SPARC_VIS2,\t\t\"VIS2\" },\n\t{ AV_SPARC_ASI_BLK_INIT,\t\"ASI_BLK_INIT\" },\n\t{ AV_SPARC_FMAF,\t\t\"FMAF\" },\n\t{ AV_SPARC_FJFMAU,\t\t\"FJFMAU\" },\n\t{ AV_SPARC_IMA,\t\t\t\"IMA\" },\n\t{ 0, NULL }\n};\n\nstatic const cap_desc_t cap_desc_386[] = {\n\t{ AV_386_FPU,\t\t\t\"FPU\" },\n\t{ AV_386_TSC,\t\t\t\"TSC\" },\n\t{ AV_386_CX8,\t\t\t\"CX8\" },\n\t{ AV_386_SEP,\t\t\t\"SEP\" },\n\t{ AV_386_AMD_SYSC,\t\t\"AMD_SYSC\" },\n\t{ AV_386_CMOV,\t\t\t\"CMOV\" },\n\t{ AV_386_MMX,\t\t\t\"MMX\" },\n\t{ AV_386_AMD_MMX,\t\t\"AMD_MMX\" },\n\t{ AV_386_AMD_3DNow,\t\t\"AMD_3DNow\" },\n\t{ AV_386_AMD_3DNowx,\t\t\"AMD_3DNowx\" },\n\t{ AV_386_FXSR,\t\t\t\"FXSR\" },\n\t{ AV_386_SSE,\t\t\t\"SSE\" },\n\t{ AV_386_SSE2,\t\t\t\"SSE2\" },\n\t{ AV_386_PAUSE,\t\t\t\"PAUSE\" },\n\t{ AV_386_SSE3,\t\t\t\"SSE3\" },\n\t{ AV_386_MON,\t\t\t\"MON\" },\n\t{ AV_386_CX16,\t\t\t\"CX16\" },\n\t{ AV_386_AHF,\t\t\t\"AHF\" },\n\t{ AV_386_TSCP,\t\t\t\"TSCP\" },\n\t{ AV_386_AMD_SSE4A,\t\t\"AMD_SSE4A\" },\n\t{ AV_386_POPCNT,\t\t\"POPCNT\" },\n\t{ AV_386_AMD_LZCNT,\t\t\"AMD_LZCNT\" },\n\t{ AV_386_SSSE3,\t\t\t\"SSSE3\" },\n\t{ AV_386_SSE4_1,\t\t\"SSE4.1\" },\n\t{ AV_386_SSE4_2,\t\t\"SSE4.2\" },\n\t{ 0, NULL }\n};\n\nprivate int\ndoshn(struct magic_set *ms, int clazz, int swap, int fd, off_t off, int num,\n    size_t size, off_t fsize, int *flags, int mach, int strtab)\n{\n\tElf32_Shdr sh32;\n\tElf64_Shdr sh64;\n\tint stripped = 1;\n\tvoid *nbuf;\n\toff_t noff, coff, name_off;\n\tuint64_t cap_hw1 = 0;\t/* SunOS 5.x hardware capabilites */\n\tuint64_t cap_sf1 = 0;\t/* SunOS 5.x software capabilites */\n\tchar name[50];\n\n\tif (size != xsh_sizeof) {\n\t\tif (file_printf(ms, \", corrupted section header size\") == -1)\n\t\t\treturn -1;\n\t\treturn 0;\n\t}\n\n\t/* Read offset of name section to be able to read section names later */\n\tif (pread(fd, xsh_addr, xsh_sizeof, off + size * strtab) == -1) {\n\t\tfile_badread(ms);\n\t\treturn -1;\n\t}\n\tname_off = xsh_offset;\n\n\tfor ( ; num; num--) {\n\t\t/* Read the name of this section. */\n\t\tif (pread(fd, name, sizeof(name), name_off + xsh_name) == -1) {\n\t\t\tfile_badread(ms);\n\t\t\treturn -1;\n\t\t}\n\t\tname[sizeof(name) - 1] = '\\0';\n\t\tif (strcmp(name, \".debug_info\") == 0)\n\t\t\tstripped = 0;\n\n\t\tif (pread(fd, xsh_addr, xsh_sizeof, off) == -1) {\n\t\t\tfile_badread(ms);\n\t\t\treturn -1;\n\t\t}\n\t\toff += size;\n\n\t\t/* Things we can determine before we seek */\n\t\tswitch (xsh_type) {\n\t\tcase SHT_SYMTAB:\n#if 0\n\t\tcase SHT_DYNSYM:\n#endif\n\t\t\tstripped = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (xsh_offset > fsize) {\n\t\t\t\t/* Perhaps warn here */\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\t/* Things we can determine when we seek */\n\t\tswitch (xsh_type) {\n\t\tcase SHT_NOTE:\n\t\t\tif ((nbuf = malloc(xsh_size)) == NULL) {\n\t\t\t\tfile_error(ms, errno, \"Cannot allocate memory\"\n\t\t\t\t    \" for note\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (pread(fd, nbuf, xsh_size, xsh_offset) == -1) {\n\t\t\t\tfile_badread(ms);\n\t\t\t\tfree(nbuf);\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tnoff = 0;\n\t\t\tfor (;;) {\n\t\t\t\tif (noff >= (off_t)xsh_size)\n\t\t\t\t\tbreak;\n\t\t\t\tnoff = donote(ms, nbuf, (size_t)noff,\n\t\t\t\t    xsh_size, clazz, swap, 4, flags);\n\t\t\t\tif (noff == 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfree(nbuf);\n\t\t\tbreak;\n\t\tcase SHT_SUNW_cap:\n\t\t\tswitch (mach) {\n\t\t\tcase EM_SPARC:\n\t\t\tcase EM_SPARCV9:\n\t\t\tcase EM_IA_64:\n\t\t\tcase EM_386:\n\t\t\tcase EM_AMD64:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tgoto skip;\n\t\t\t}\n\n\t\t\tif (lseek(fd, xsh_offset, SEEK_SET) == (off_t)-1) {\n\t\t\t\tfile_badseek(ms);\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tcoff = 0;\n\t\t\tfor (;;) {\n\t\t\t\tElf32_Cap cap32;\n\t\t\t\tElf64_Cap cap64;\n\t\t\t\tchar cbuf[/*CONSTCOND*/\n\t\t\t\t    MAX(sizeof cap32, sizeof cap64)];\n\t\t\t\tif ((coff += xcap_sizeof) > (off_t)xsh_size)\n\t\t\t\t\tbreak;\n\t\t\t\tif (read(fd, cbuf, (size_t)xcap_sizeof) !=\n\t\t\t\t    (ssize_t)xcap_sizeof) {\n\t\t\t\t\tfile_badread(ms);\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (cbuf[0] == 'A') {\n#ifdef notyet\n\t\t\t\t\tchar *p = cbuf + 1;\n\t\t\t\t\tuint32_t len, tag;\n\t\t\t\t\tmemcpy(&len, p, sizeof(len));\n\t\t\t\t\tp += 4;\n\t\t\t\t\tlen = getu32(swap, len);\n\t\t\t\t\tif (memcmp(\"gnu\", p, 3) != 0) {\n\t\t\t\t\t    if (file_printf(ms,\n\t\t\t\t\t\t\", unknown capability %.3s\", p)\n\t\t\t\t\t\t== -1)\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t    break;\n\t\t\t\t\t}\n\t\t\t\t\tp += strlen(p) + 1;\n\t\t\t\t\ttag = *p++;\n\t\t\t\t\tmemcpy(&len, p, sizeof(len));\n\t\t\t\t\tp += 4;\n\t\t\t\t\tlen = getu32(swap, len);\n\t\t\t\t\tif (tag != 1) {\n\t\t\t\t\t    if (file_printf(ms, \", unknown gnu\"\n\t\t\t\t\t\t\" capability tag %d\", tag)\n\t\t\t\t\t\t== -1)\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t    break;\n\t\t\t\t\t}\n\t\t\t\t\t// gnu attributes \n#endif\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t(void)memcpy(xcap_addr, cbuf, xcap_sizeof);\n\t\t\t\tswitch (xcap_tag) {\n\t\t\t\tcase CA_SUNW_NULL:\n\t\t\t\t\tbreak;\n\t\t\t\tcase CA_SUNW_HW_1:\n\t\t\t\t\tcap_hw1 |= xcap_val;\n\t\t\t\t\tbreak;\n\t\t\t\tcase CA_SUNW_SF_1:\n\t\t\t\t\tcap_sf1 |= xcap_val;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (file_printf(ms,\n\t\t\t\t\t    \", with unknown capability \"\n\t\t\t\t\t    \"0x%\" INT64_T_FORMAT \"x = 0x%\"\n\t\t\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t\t\t    (unsigned long long)xcap_tag,\n\t\t\t\t\t    (unsigned long long)xcap_val) == -1)\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*FALLTHROUGH*/\n\t\tskip:\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (file_printf(ms, \", %sstripped\", stripped ? \"\" : \"not \") == -1)\n\t\treturn -1;\n\tif (cap_hw1) {\n\t\tconst cap_desc_t *cdp;\n\t\tswitch (mach) {\n\t\tcase EM_SPARC:\n\t\tcase EM_SPARC32PLUS:\n\t\tcase EM_SPARCV9:\n\t\t\tcdp = cap_desc_sparc;\n\t\t\tbreak;\n\t\tcase EM_386:\n\t\tcase EM_IA_64:\n\t\tcase EM_AMD64:\n\t\t\tcdp = cap_desc_386;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcdp = NULL;\n\t\t\tbreak;\n\t\t}\n\t\tif (file_printf(ms, \", uses\") == -1)\n\t\t\treturn -1;\n\t\tif (cdp) {\n\t\t\twhile (cdp->cd_name) {\n\t\t\t\tif (cap_hw1 & cdp->cd_mask) {\n\t\t\t\t\tif (file_printf(ms,\n\t\t\t\t\t    \" %s\", cdp->cd_name) == -1)\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\tcap_hw1 &= ~cdp->cd_mask;\n\t\t\t\t}\n\t\t\t\t++cdp;\n\t\t\t}\n\t\t\tif (cap_hw1)\n\t\t\t\tif (file_printf(ms,\n\t\t\t\t    \" unknown hardware capability 0x%\"\n\t\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t\t    (unsigned long long)cap_hw1) == -1)\n\t\t\t\t\treturn -1;\n\t\t} else {\n\t\t\tif (file_printf(ms,\n\t\t\t    \" hardware capability 0x%\" INT64_T_FORMAT \"x\",\n\t\t\t    (unsigned long long)cap_hw1) == -1)\n\t\t\t\treturn -1;\n\t\t}\n\t}\n\tif (cap_sf1) {\n\t\tif (cap_sf1 & SF1_SUNW_FPUSED) {\n\t\t\tif (file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\") == -1)\n\t\t\t\treturn -1;\n\t\t}\n\t\tcap_sf1 &= ~SF1_SUNW_MASK;\n\t\tif (cap_sf1)\n\t\t\tif (file_printf(ms,\n\t\t\t    \", with unknown software capability 0x%\"\n\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t    (unsigned long long)cap_sf1) == -1)\n\t\t\t\treturn -1;\n\t}\n\treturn 0;\n}\n\n/*\n * Look through the program headers of an executable image, searching\n * for a PT_INTERP section; if one is found, it's dynamically linked,\n * otherwise it's statically linked.\n */\nprivate int\ndophn_exec(struct magic_set *ms, int clazz, int swap, int fd, off_t off,\n    int num, size_t size, off_t fsize, int *flags, int sh_num)\n{\n\tElf32_Phdr ph32;\n\tElf64_Phdr ph64;\n\tconst char *linking_style = \"statically\";\n\tconst char *shared_libraries = \"\";\n\tunsigned char nbuf[BUFSIZ];\n\tssize_t bufsize;\n\tsize_t offset, align, len;\n\t\n\tif (size != xph_sizeof) {\n\t\tif (file_printf(ms, \", corrupted program header size\") == -1)\n\t\t\treturn -1;\n\t\treturn 0;\n\t}\n\n  \tfor ( ; num; num--) {\n\t\tif (pread(fd, xph_addr, xph_sizeof, off) == -1) {\n\t\t\tfile_badread(ms);\n\t\t\treturn -1;\n\t\t}\n\n\t\toff += size;\n\n\t\t/* Things we can determine before we seek */\n\t\tswitch (xph_type) {\n\t\tcase PT_DYNAMIC:\n\t\t\tlinking_style = \"dynamically\";\n\t\t\tbreak;\n\t\tcase PT_INTERP:\n\t\t\tshared_libraries = \" (uses shared libs)\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (xph_offset > fsize) {\n\t\t\t\t/* Maybe warn here? */\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\t/* Things we can determine when we seek */\n\t\tswitch (xph_type) {\n\t\tcase PT_NOTE:\n\t\t\tif ((align = xph_align) & 0x80000000UL) {\n\t\t\t\tif (file_printf(ms, \n\t\t\t\t    \", invalid note alignment 0x%lx\",\n\t\t\t\t    (unsigned long)align) == -1)\n\t\t\t\t\treturn -1;\n\t\t\t\talign = 4;\n\t\t\t}\n\t\t\tif (sh_num)\n\t\t\t\tbreak;\n\t\t\t/*\n\t\t\t * This is a PT_NOTE section; loop through all the notes\n\t\t\t * in the section.\n\t\t\t */\n\t\t\tlen = xph_filesz < sizeof(nbuf) ? xph_filesz\n\t\t\t    : sizeof(nbuf);\n\t\t\tbufsize = pread(fd, nbuf, len, xph_offset);\n\t\t\tif (bufsize == -1) {\n\t\t\t\tfile_badread(ms);\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\toffset = 0;\n\t\t\tfor (;;) {\n\t\t\t\tif (offset >= (size_t)bufsize)\n\t\t\t\t\tbreak;\n\t\t\t\toffset = donote(ms, nbuf, offset,\n\t\t\t\t    (size_t)bufsize, clazz, swap, align,\n\t\t\t\t    flags);\n\t\t\t\tif (offset == 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (file_printf(ms, \", %s linked%s\", linking_style, shared_libraries)\n\t    == -1)\n\t    return -1;\n\treturn 0;\n}\n\n\nprotected int\nfile_tryelf(struct magic_set *ms, int fd, const unsigned char *buf,\n    size_t nbytes)\n{\n\tunion {\n\t\tint32_t l;\n\t\tchar c[sizeof (int32_t)];\n\t} u;\n\tint clazz;\n\tint swap;\n\tstruct stat st;\n\toff_t fsize;\n\tint flags = 0;\n\tElf32_Ehdr elf32hdr;\n\tElf64_Ehdr elf64hdr;\n\tuint16_t type;\n\n\tif (ms->flags & (MAGIC_MIME|MAGIC_APPLE))\n\t\treturn 0;\n\t/*\n\t * ELF executables have multiple section headers in arbitrary\n\t * file locations and thus file(1) cannot determine it from easily.\n\t * Instead we traverse thru all section headers until a symbol table\n\t * one is found or else the binary is stripped.\n\t * Return immediately if it's not ELF (so we avoid pipe2file unless needed).\n\t */\n\tif (buf[EI_MAG0] != ELFMAG0\n\t    || (buf[EI_MAG1] != ELFMAG1 && buf[EI_MAG1] != OLFMAG1)\n\t    || buf[EI_MAG2] != ELFMAG2 || buf[EI_MAG3] != ELFMAG3)\n\t\treturn 0;\n\n\t/*\n\t * If we cannot seek, it must be a pipe, socket or fifo.\n\t */\n\tif((lseek(fd, (off_t)0, SEEK_SET) == (off_t)-1) && (errno == ESPIPE))\n\t\tfd = file_pipe2file(ms, fd, buf, nbytes);\n\n\tif (fstat(fd, &st) == -1) {\n  \t\tfile_badread(ms);\n\t\treturn -1;\n\t}\n\tfsize = st.st_size;\n\n\tclazz = buf[EI_CLASS];\n\n\tswitch (clazz) {\n\tcase ELFCLASS32:\n#undef elf_getu\n#define elf_getu(a, b)\telf_getu32(a, b)\n#undef elfhdr\n#define elfhdr elf32hdr\n#include \"elfclass.h\"\n\tcase ELFCLASS64:\n#undef elf_getu\n#define elf_getu(a, b)\telf_getu64(a, b)\n#undef elfhdr\n#define elfhdr elf64hdr\n#include \"elfclass.h\"\n\tdefault:\n\t    if (file_printf(ms, \", unknown class %d\", clazz) == -1)\n\t\t    return -1;\n\t    break;\n\t}\n\treturn 0;\n}\n#endif\n"], "filenames": ["ChangeLog", "src/readelf.c"], "buggy_code_start_loc": [0, 30], "buggy_code_end_loc": [0, 479], "fixing_code_start_loc": [1, 30], "fixing_code_end_loc": [5, 487], "type": "CWE-20", "message": "The donote function in readelf.c in file through 5.20, as used in the Fileinfo component in PHP 5.4.34, does not ensure that sufficient note headers are present, which allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted ELF file.", "other": {"cve": {"id": "CVE-2014-3710", "sourceIdentifier": "secalert@redhat.com", "published": "2014-11-05T11:55:06.027", "lastModified": "2022-11-05T02:10:56.480", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The donote function in readelf.c in file through 5.20, as used in the Fileinfo component in PHP 5.4.34, does not ensure that sufficient note headers are present, which allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted ELF file."}, {"lang": "es", "value": "La funci\u00f3n donote en readelf.c en file hasta 5.20, utilizado en el componente Fileinfo en PHP 5.4.34, no asegura que suficientes cabeceras de notas est\u00e1n presentes, lo que permite a atacantes remotos causar una denegaci\u00f3n de servicio (lectura fuera de rango y ca\u00edda de aplicaci\u00f3n) a trav\u00e9s de un fichero ELF manipulado."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-20"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:php:php:*:*:*:*:*:*:*:*", "versionStartIncluding": "5.4.0", "versionEndExcluding": "5.4.35", "matchCriteriaId": "263164CF-17DF-4696-846C-636AD840A86D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:*:*:*:*:*:*:*:*", "versionStartIncluding": "5.5.0", "versionEndExcluding": "5.5.19", "matchCriteriaId": "66D331E2-CE0F-47C4-9EE8-398D9F8C2B54"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:*:*:*:*:*:*:*:*", "versionStartIncluding": "5.6.0", "versionEndExcluding": "5.6.3", "matchCriteriaId": "24CA357B-EB19-4EFE-B170-CB7276A44AF6"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:7.0:*:*:*:*:*:*:*", "matchCriteriaId": "16F59A04-14CF-49E2-9973-645477EA09DA"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:8.0:*:*:*:*:*:*:*", "matchCriteriaId": "C11E6FB0-C8C0-4527-9AA0-CB9B316F8F43"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:10.04:*:*:*:-:*:*:*", "matchCriteriaId": "01EDA41C-6B2E-49AF-B503-EB3882265C11"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:12.04:*:*:*:-:*:*:*", "matchCriteriaId": "CB66DB75-2B16-4EBF-9B93-CE49D8086E41"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:14.04:*:*:*:esm:*:*:*", "matchCriteriaId": "815D70A8-47D3-459C-A32C-9FEACA0659D1"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:14.10:*:*:*:*:*:*:*", "matchCriteriaId": "49A63F39-30BE-443F-AF10-6245587D3359"}]}]}], "references": [{"url": "http://git.php.net/?p=php-src.git;a=commit;h=1803228597e82218a8c105e67975bc50e6f5bf0d", "source": "secalert@redhat.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "http://linux.oracle.com/errata/ELSA-2014-1767.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://linux.oracle.com/errata/ELSA-2014-1768.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://lists.apple.com/archives/security-announce/2015/Apr/msg00001.html", "source": "secalert@redhat.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://lists.opensuse.org/opensuse-updates/2014-11/msg00113.html", "source": "secalert@redhat.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://rhn.redhat.com/errata/RHSA-2014-1765.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://rhn.redhat.com/errata/RHSA-2014-1766.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://rhn.redhat.com/errata/RHSA-2014-1767.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://rhn.redhat.com/errata/RHSA-2014-1768.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://rhn.redhat.com/errata/RHSA-2016-0760.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://www.debian.org/security/2014/dsa-3072", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://www.oracle.com/technetwork/topics/security/bulletinjan2015-2370101.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://www.oracle.com/technetwork/topics/security/bulletinjul2015-2511963.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://www.oracle.com/technetwork/topics/security/linuxbulletinapr2016-2952096.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://www.oracle.com/technetwork/topics/security/linuxbulletinoct2015-2719645.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://www.securityfocus.com/bid/70807", "source": "secalert@redhat.com", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "http://www.securitytracker.com/id/1031344", "source": "secalert@redhat.com", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "http://www.ubuntu.com/usn/USN-2391-1", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://www.ubuntu.com/usn/USN-2494-1", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://bugs.php.net/bug.php?id=68283", "source": "secalert@redhat.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1155071", "source": "secalert@redhat.com", "tags": ["Issue Tracking", "Third Party Advisory"]}, {"url": "https://github.com/file/file/commit/39c7ac1106be844a5296d3eb5971946cc09ffda0", "source": "secalert@redhat.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://security.gentoo.org/glsa/201503-03", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://security.gentoo.org/glsa/201701-42", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://support.apple.com/HT204659", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://www.freebsd.org/security/advisories/FreeBSD-SA-14:28.file.asc", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/file/file/commit/39c7ac1106be844a5296d3eb5971946cc09ffda0"}}