{"buggy_code": ["# WP-DBManager\nContributors: GamerZ  \nDonate link: http://lesterchan.net/site/donation/  \nTags: database, manage, wp-dbmanager, manager, table, optimize, backup, queries, query, drop, empty, tables, table, run, repair, cron, schedule, scheduling, automatic  \nRequires at least: 3.9  \nTested up to: 4.0  \nStable tag: 2.72  \n\nManages your WordPress database.\n\n## Description\nAllows you to optimize database, repair database, backup database, restore database, delete backup database , drop/empty tables and run selected queries. Supports automatic scheduling of backing up, optimizing and repairing of database.\n\n### Build Status\n[![Build Status](https://travis-ci.org/lesterchan/wp-dbmanager.svg?branch=master)](https://travis-ci.org/lesterchan/wp-dbmanager)\n\n### Development\n* [https://github.com/lesterchan/wp-dbmanager](https://github.com/lesterchan/wp-dbmanager \"https://github.com/lesterchan/wp-dbmanager\")\n\n### Translations\n* [http://dev.wp-plugins.org/browser/wp-dbmanager/i18n/](http://dev.wp-plugins.org/browser/wp-dbmanager/i18n/ \"http://dev.wp-plugins.org/browser/wp-dbmanager/i18n/\")\n\n### Credits\n* Plugin icon by [Freepik](http://www.freepik.com) from [Flaticon](http://www.flaticon.com)\n\n### Donations\n* I spent most of my free time creating, updating, maintaining and supporting these plugins, if you really love my plugins and could spare me a couple of bucks, I will really appericiate it. If not feel free to use it without any obligations.\n\n### Disclaimer\n* Note that this plugin passes your datababase password via --password in the command line of mysqldump. This is convenient but as a trade off, it is insecure.\n* On some systems, your password becomes visible to system status programs such as ps that may be invoked by other users to display command lines. MySQL clients typically overwrite the command-line password argument with zeros during their initialization sequence. However, there is still a brief interval during which the value is visible. Also, on some systems this overwriting strategy is ineffective and the password remains visible to ps. Source: [End-User Guidelines for Password Security](http://dev.mysql.com/doc/refman/5.5/en/password-security-user.html)\n* If this is a concern to you, I recommend another database backup plugin called [WP-DB-Backup](https://wordpress.org/plugins/wp-db-backup/)\n* To know about the difference between WP-DBManager and WP-DB-backup, checkout __What is the difference between WP-DBManager and WP-DB-Backup?__ in the [FAQ section](https://wordpress.org/plugins/wp-dbmanager/faq/).\n\n## Changelog\n### Version 2.72\n* FIXED: Use dbmanager_is_valid_path() to check for mysql and mysqldump path. Fixes arbitrary command injection using backup path. Props Larry W. Cashdollari.\n* FIXED: Use realpath() to check for backup path. Fixes arbitrary command injection using backup path. Props Larry W. Cashdollari.\n\n### Version 2.71\n* NEW: Bump to 4.0\n\n### Version 2.70\n* New: Uses WordPress 3.9 Dashicons\n* NEW: Allow you to hide admin notices in the DB Options page\n* NEW: Allow Multisite Network Activate\n* NEW: Uses WordPress uninstall.php file to uninstall the plugin\n* NEW: Uses wp_mail() to send email instead of PHP mail()\n* NEW: New From E-mail, From Name & Subject template\n* FIXED: Issues with email from field if site title contains , (comma)\n* FIXED: Notices\n\n### Version 2.65\n* FIXED: Set default character set to UTF-8. Props Karsonito\n\n### Version 2.64\n* FIXED: Use intval() instead of is_int() when checking for port number. Props [Webby Scots](http://webbyscots.com/ \"Webby Scots\")\n\n### Version 2.63 (03-05-2011)\n* NEW: Added Auto Repair Functionality\n* NEW: Added nonce To All Forms For Added Security\n\n### Version 2.61 (30-04-2011)\n* FIXED: Checks File Extension And Sanitise File Name That Is Pass Through The URL When Downloading Database File. Props to [Joakim Jardenberg](http://jardenberg.se \"Joakim Jardenberg\"), [Jonas Nordstram](http://jonasnordstrom.se \"Jonas Nordstram\"), [Andreas Viklund](http://andreasviklund.com/ \"Andreas Viklund\")\n\n### Version 2.60 (01-12-2009)\n* FIXED: Bug In Cron Backup On Windows Server\n\n### Version 2.50 (01-06-2009)\n* NEW: Works For WordPress 2.8 Only\n* NEW: Uses jQuery Framework\n* NEW: Ensure That .htaccess Is In Backup Folder By Informing The User If It Is NOT There\n* NEW: Use _n() Instead Of __ngettext() And _n_noop() Instead Of __ngettext_noop()\n* FIXED: Uses $_SERVER['PHP_SELF'] With plugin_basename(__FILE__) Instead Of Just $_SERVER['REQUEST_URI']\n\n### Version 2.40 (12-12-2008)\n* NEW: Works For WordPress 2.7 Only\n* NEW: Load Admin JS And CSS Only In WP-DBManager Admin Pages\n* NEW: Added database-admin-css.css For WP-DBManager Admin CSS Styles\n* NEW: Uses admin_url(), plugins_url() And site_url()\n* NEW: Better Translation Using __ngetext() by Anna Ozeritskaya\n* NEW: Right To Left Language Support by Kambiz R. Khojasteh\n* FIXED: SSL Support\n* FIXED: Bug In Downloading Backups In Other Languages by Kambiz R. Khojasteh\n* FIXED: Bug In Backup/Restore On Windows Server When Path To mysqldump/mysql Or Backup File Contains Space Kambiz R. Khojasteh\n* FIXED: In database-manage.php, $nice_file_date Was Calculated More Than Once by Kambiz R. Khojasteh\n* FIXED: Returning Only DBManager Cron Schedules\n\n### Version 2.31 (16-07-2008)\n* NEW: Works For WordPress 2.6\n* FIXED: Unable To Optimize Or Repair Tables If Table Name Contains - (dash)\n\n### Version 2.30 (01-06-2008)\n* NEW: Uses /wp-dbmanager/ Folder Instead Of /dbmanager/\n* NEW: Uses wp-dbmanager.php Instead Of dbmanager.php\n* NEW: Added Minute(s) Option To Backup And Optimize Cron Jobs\n* NEW: Uses GiB, MiB, KiB Instead Of GB, MB, KB\n\n### Version 2.20 (01-10-2007)\n* NEW: Added --skip-lock-tables Argument When Backing Up Database\n* NEW: Limit The Maximum Number Of Backup Files In The Backup Folder\n* NEW: Ability To Uninstall WP-DBManager\n\n### Version 2.11 (01-06-2007)\n* NEW: Sort Database Backup Files By Date In Descending Order\n* NEW: Added Repair Database Feature\n* NEW: Automatic Scheduling Of Backing Up And Optimizing Of Database\n\n### Version 2.10 (01-02-2007)\n* NEW: Works For WordPress 2.1 Only\n* NEW: Removed database-config.php\n* NEW: Localize WP-DBManager\n* NEW: Added The Ability To Auto Detect MYSQL And MYSQL Dump Path\n\n### Version 2.05 (01-06-2006)\n* FIXED: Database Table Names Not Appearing Correctly\n* NEW: DBManager Administration Panel Is XHTML 1.0 Transitional\n\n### Version 2.04 (10-05-2006)\n* FIXED: Unable To Download Backup DB Due To Header Sent Error\n* FIXED: Some XHTML Code Fixes\n\n### Version 2.03 (01-04-2006)\n* FIXED: Run Query Box Too Big\n* FIXED: Header Sent Error\n* FIXED: Extra Slashes For Mysql/Mysql Dump Path\n* FIXED: Mismatch Date Due To GMT\n\n### Version 2.02 (01-03-2006)\n* NEW: Improved On 'manage_database' Capabilities\n* NEW: Added GigaBytes To File Size\n* NEW: Added ALTER Statement To Allowed Queries\n* NEW: Able To Empty/Drop Tables\n* NEW: Able To EMail Database Backup File\n* NEW: Splitted database-manager.php Into Individual Files\n* NEW: Merge Restore And Delete Backup Database\n* NEW: Included .htaccess File To Protect Backup Folder\n* NEW: Checking Of Backup Status\n* FIXED: Using Old Method To Add Submenu\n* FIXED: PHP Short Tags\n* FIXED: Redirect Back To The Same Page Instead Of Manage Database Page After Submitting Form\n\n### Version 2.01 (01-02-2006)\n* NEW: Added 'manage_database' Capabilities To Administrator Role\n\n### Version 2.00 (01-01-2006)\n* NEW: Compatible With WordPress 2.0 Only\n* NEW: GPL License Added\n\n## Installation\n\n1. Open `wp-content/plugins` Folder\n2. Put: `Folder: wp-dbmanager`\n3. Activate `WP-DBManager` Plugin\n4. Rename `htaccess.txt` to `.htaccess` file in `Folder: wp-content/plugins/wp-dbmanager`\n5. The script will automatically create a folder called `backup-db` in the wp-content folder if that folder is writable. If it is not created, please create it and CHMOD it to 777\n6. Open `Folder: wp-content/backup-db`\n7. Move the `.htaccess` file from `Folder: wp-content/plugins/wp-dbmanager` to `Folder: wp-content/backup-db`\n8. Go to `WP-Admin -> Database -> DB Options` to configure the database options.\n\n## Upgrading\n\n1. Deactivate `WP-DBManager` Plugin\n2. Open `wp-content/plugins` Folder\n3. Put/Overwrite: `Folder: wp-dbmanager`\n4. Activate `WP-DBManager` Plugin\n5. Go to `WP-Admin -> Database -> DB Options` to re-configure the database options.\n\n## Upgrade Notice\n\nN/A\n\n## Screenshots\n\n1. Admin - Backup DB\n2. Admin - Empty/Drop Tables In DB\n3. Admin - DB Information\n4. Admin - Manage DB\n5. Admin - Optimize DB\n6. Admin - DB Options\n7. Admin - DB Options\n8. Admin - Repair DB\n9. Admin - Run Query in DB\n\n## Frequently Asked Questions\n\n### My database is not backed up / My backup file is 0Kb\n* Ensure that your host allows you to access mysqldump. You can try to narrow the problem by Debugging via SSH:\n1. In `wp-dbmanager.php`\n2. Find `check_backup_files();` on line 210\n3. Add below it `echo $command;`\n4. Go to `WP-Admin -> Database -> Backup`\n5. Click `Backup`\n6. It should print some debugging statements\n7. Copy that line than run it in SSH\n8. If you need help on SSH contact your host or google for more info\n\n### What is the difference between WP-DBManager and WP-DB-Backup?\n* WP-DBManager uses `mysqldump` application to generate the backup and `mysql` application to restore them via shell.\n* WP-DB-Backup uses PHP to generate the backup. In some cases WP-DB-Backup will work better for you because it requires less permissions. Not all host allows you to access mysqldump/mysql directly via shell.\n* WP-DBManager allows you to have automatic optimizing and repairing of database on top of backing up of database.\n\n### Why do I get the message \"Warning: Your backup folder MIGHT be visible to the public!\"?\n* Ensure that you have renamed `htaccess.txt` to `.htaccess` and placed it in your backup folder (defaults to `wp-content/backup-db/`)\n* If you are 100% sure you have did that and have verfied that the folder no longer is accessible to the public by visiting the URL `http://yousite.com/wp-content/backup-db/`, you can safely disable the notice by going to `WP-Admin -> Database -> DB Options` and set `Hide Admin Notices` to `Yes`.\n", "<?php\n### Check Whether User Can Manage Database\nif(!current_user_can('manage_database')) {\n\tdie('Access Denied');\n}\n\n\n### Variables Variables Variables\n$base_name = plugin_basename('wp-dbmanager/database-manager.php');\n$base_page = 'admin.php?page='.$base_name;\n$current_date = mysql2date(sprintf(__('%s @ %s', 'wp-dbmanager'), get_option('date_format'), get_option('time_format')), gmdate('Y-m-d H:i:s', current_time('timestamp')));\n$backup = array();\n$backup_options = get_option('dbmanager_options');\n$backup['date'] = current_time('timestamp');\n$backup['mysqldumppath'] = $backup_options['mysqldumppath'];\n$backup['mysqlpath'] = $backup_options['mysqlpath'];\n$backup['path'] = $backup_options['path'];\n$backup['password'] = str_replace('$', '\\$', DB_PASSWORD);\n$backup['charset'] = ' --default-character-set=\"utf8\"';\n\n### Form Processing\nif(!empty($_POST['do'])) {\n\t$text = '';\n\t// Decide What To Do\n\tswitch($_POST['do']) {\n\t\tcase __('Backup', 'wp-dbmanager'):\n\t\t\tcheck_admin_referer('wp-dbmanager_backup');\n\t\t\t$brace = (substr(PHP_OS, 0, 3) == 'WIN') ? '\"' : '';\n\t\t\t$backup['host'] = DB_HOST;\n\t\t\t$backup['port'] = '';\n\t\t\t$backup['sock'] = '';\n\t\t\tif(strpos(DB_HOST, ':') !== false) {\n\t\t\t\t$db_host = explode(':', DB_HOST);\n\t\t\t\t$backup['host'] = $db_host[0];\n\t\t\t\tif(intval($db_host[1]) != 0) {\n\t\t\t\t\t$backup['port'] = ' --port=\"'.intval($db_host[1]).'\"';\n\t\t\t\t} else {\n\t\t\t\t\t$backup['sock'] = ' --socket=\"'.$db_host[1].'\"';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$gzip = intval($_POST['gzip']);\n\t\t\tif($gzip == 1) {\n\t\t\t\t$backup['filename'] = $backup['date'].'_-_'.DB_NAME.'.sql.gz';\n\t\t\t\t$backup['filepath'] = $backup['path'].'/'.$backup['filename'];\n\t\t\t\t$backup['command'] = $brace.$backup['mysqldumppath'].$brace.' --force --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].$backup['charset'].' --add-drop-table --skip-lock-tables '.DB_NAME.' | gzip > '.$brace.$backup['filepath'].$brace;\n\t\t\t} else {\n\t\t\t\t$backup['filename'] = $backup['date'].'_-_'.DB_NAME.'.sql';\n\t\t\t\t$backup['filepath'] = $backup['path'].'/'.$backup['filename'];\n\t\t\t\t$backup['command'] = $brace.$backup['mysqldumppath'].$brace.' --force --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].$backup['charset'].' --add-drop-table --skip-lock-tables '.DB_NAME.' > '.$brace.$backup['filepath'].$brace;\n\t\t\t}\n\t\t\t$error = execute_backup($backup['command']);\n\t\t\tif(!is_writable($backup['path'])) {\n\t\t\t\t$text = '<p style=\"color: red;\">'.sprintf(__('Database Failed To Backup On \\'%s\\'. Backup Folder Not Writable.', 'wp-dbmanager'), $current_date).'</p>';\n\t\t\t} elseif(filesize($backup['filepath']) == 0) {\n\t\t\t\tunlink($backup['filepath']);\n\t\t\t\t$text = '<p style=\"color: red;\">'.sprintf(__('Database Failed To Backup On \\'%s\\'. Backup File Size Is 0KB.', 'wp-dbmanager'), $current_date).'</p>';\n\t\t\t} elseif(!is_file($backup['filepath'])) {\n\t\t\t\t$text = '<p style=\"color: red;\">'.sprintf(__('Database Failed To Backup On \\'%s\\'. Invalid Backup File Path.', 'wp-dbmanager'), $current_date).'</p>';\n\t\t\t} elseif($error) {\n\t\t\t\t$text = '<p style=\"color: red;\">'.sprintf(__('Database Failed To Backup On \\'%s\\'.', 'wp-dbmanager'), $current_date).'</p>';\n\t\t\t} else {\n\t\t\t\t$text = '<p style=\"color: green;\">'.sprintf(__('Database Backed Up Successfully On \\'%s\\'.', 'wp-dbmanager'), $current_date).'</p>';\n\t\t\t}\n\t\t\tbreak;\n\t}\n}\n\n\n### Backup File Name\n$backup['filename'] = $backup['date'].'_-_'.DB_NAME.'.sql';\n\n\n### MYSQL Base Dir\n$status_count = 0;\n$stats_function_disabled = 0;\n?>\n<?php if(!empty($text)) { echo '<!-- Last Action --><div id=\"message\" class=\"updated fade\"><p>'.$text.'</p></div>'; } ?>\n<!-- Checking Backup Status -->\n<div class=\"wrap\">\n\t<h2><?php _e('Backup Database', 'wp-dbmanager'); ?></h2>\n\t<h3><?php _e('Checking Backup Status', 'wp-dbmanager'); ?></h3>\n\t<p>\n\t\t<?php _e('Checking Backup Folder', 'wp-dbmanager'); ?> <span dir=\"ltr\">(<strong><?php echo stripslashes($backup['path']); ?></strong>)</span> ...<br />\n\t\t<?php\n\t\t\tif( realpath( $backup['path'] ) === false ) {\n\t\t\t\techo '<p style=\"color: red;\">' . sprintf( __( '%s is not a valid backup path', 'wp-dbmanager' ), stripslashes( $backup['path'] ) ) . '</p>';\n\t\t\t\t$status_count++;\n\t\t\t} else {\n\t\t\t\tif (@is_dir(stripslashes($backup['path']))) {\n\t\t\t\t\techo '<p style=\"color: green;\">' . __('Backup folder exists', 'wp-dbmanager') . '</p>';\n\t\t\t\t\t$status_count++;\n\t\t\t\t} else {\n\t\t\t\t\techo '<p style=\"color: red;\">' . sprintf(__('Backup folder does NOT exist. Please create \\'backup-db\\' folder in \\'%s\\' folder and CHMOD it to \\'777\\' or change the location of the backup folder under DB Option.', 'wp-dbmanager'), WP_CONTENT_DIR) . '</p>';\n\t\t\t\t}\n\t\t\t\tif (@is_writable(stripslashes($backup['path']))) {\n\t\t\t\t\techo '<p style=\"color: green;\">' . __('Backup folder is writable', 'wp-dbmanager') . '</p>';\n\t\t\t\t\t$status_count++;\n\t\t\t\t} else {\n\t\t\t\t\techo '<p style=\"color: red;\">' . __('Backup folder is NOT writable. Please CHMOD it to \\'777\\'.', 'wp-dbmanager') . '</p>';\n\t\t\t\t}\n\t\t\t}\n\t\t?>\n\t</p>\n\t<p>\n\t\t<?php\n\t\t\tif( dbmanager_is_valid_path( $backup['mysqldumppath'] ) === 0 ) {\n\t\t\t\techo '<p style=\"color: red;\">' . sprintf( __( '%s is not a valid backup mysqldump path', 'wp-dbmanager' ), stripslashes( $backup['mysqldumppath'] ) ) . '</p>';\n\t\t\t\t$status_count++;\n\t\t\t} else {\n\t\t\t\tif (@file_exists(stripslashes($backup['mysqldumppath']))) {\n\t\t\t\t\techo __('Checking MYSQL Dump Path', 'wp-dbmanager') . ' <span dir=\"ltr\">(<strong>' . stripslashes($backup['mysqldumppath']) . '</strong>)</span> ...<br />';\n\t\t\t\t\techo '<p style=\"color: green;\">' . __('MYSQL dump path exists.', 'wp-dbmanager') . '</p>';\n\t\t\t\t\t$status_count++;\n\t\t\t\t} else {\n\t\t\t\t\techo __('Checking MYSQL Dump Path', 'wp-dbmanager') . ' ...<br />';\n\t\t\t\t\techo '<p style=\"color: red;\">' . __('MYSQL dump path does NOT exist. Please check your mysqldump path under DB Options. If uncertain, contact your server administrator.', 'wp-dbmanager') . '</p>';\n\t\t\t\t}\n\t\t\t}\n\t\t?>\n\t</p>\n\t<p>\n\t\t<?php\n\t\t\tif( dbmanager_is_valid_path( $backup['mysqlpath'] ) === 0 ) {\n\t\t\t\techo '<p style=\"color: red;\">' . sprintf( __( '%s is not a valid backup mysql path', 'wp-dbmanager' ), stripslashes( $backup['mysqlpath'] ) ) . '</p>';\n\t\t\t\t$status_count++;\n\t\t\t} else {\n\t\t\t\tif (@file_exists(stripslashes($backup['mysqlpath']))) {\n\t\t\t\t\techo __('Checking MYSQL Path', 'wp-dbmanager') . ' <span dir=\"ltr\">(<strong>' . stripslashes($backup['mysqlpath']) . '</strong>)</span> ...<br />';\n\t\t\t\t\techo '<p style=\"color: green;\">' . __('MYSQL path exists.', 'wp-dbmanager') . '</p>';\n\t\t\t\t\t$status_count++;\n\t\t\t\t} else {\n\t\t\t\t\techo __('Checking MYSQL Path', 'wp-dbmanager') . ' ...<br />';\n\t\t\t\t\techo '<p style=\"color: red;\">' . __('MYSQL path does NOT exist. Please check your mysql path under DB Options. If uncertain, contact your server administrator.', 'wp-dbmanager') . '</p>';\n\t\t\t\t}\n\t\t\t}\n\t\t?>\n\t</p>\n\t<p>\n\t\t<?php _e('Checking PHP Functions', 'wp-dbmanager'); ?> <span dir=\"ltr\">(<strong>passthru()</strong>, <strong>system()</strong> <?php _e('and', 'wp-dbmanager'); ?> <strong>exec()</strong>)</span> ...<br />\n\t\t<?php\n\t\t\tif(function_exists('passthru')) {\n\t\t\t\techo '<p style=\"color: green;\"><span dir=\"ltr\">passthru()</span> '.__('enabled', 'wp-dbmanager').'.</p>';\n\t\t\t\t$status_count++;\n\t\t\t} else {\n\t\t\t\techo '<p style=\"color: red;\"><span dir=\"ltr\">passthru()</span> '.__('disabled', 'wp-dbmanager').'.</p>';\n\t\t\t\t$stats_function_disabled++;\n\t\t\t}\n\t\t\tif(function_exists('system')) {\n\t\t\t\techo '<p style=\"color: green;\"><span dir=\"ltr\">system()</span> '.__('enabled', 'wp-dbmanager').'.</p>';\n\t\t\t} else {\n\t\t\t\techo '<p style=\"color: red;\"><span dir=\"ltr\">system()</span> '.__('disabled', 'wp-dbmanager').'.</p>';\n\t\t\t\t$stats_function_disabled++;\n\t\t\t}\n\t\t\tif(function_exists('exec')) {\n\t\t\t\techo '<p style=\"color: green;\"><span dir=\"ltr\">exec()</span> '.__('enabled', 'wp-dbmanager').'.</p>';\n\t\t\t} else {\n\t\t\t\techo '<p style=\"color: red;\"><span dir=\"ltr\">exec()</span> '.__('disabled', 'wp-dbmanager').'.</p>';\n\t\t\t\t$stats_function_disabled++;\n\t\t\t}\n\t\t?>\n\t</p>\n\t<p>\n\t\t<?php\n\t\t\tif($status_count == 5) {\n\t\t\t\techo '<strong><p style=\"color: green;\">'.__('Excellent. You Are Good To Go.', 'wp-dbmanager').'</p></strong>';\n\t\t\t} else if($stats_function_disabled == 3) {\n\t\t\t\techo '<strong><p style=\"color: red;\">'.__('I\\'m sorry, your server administrator has disabled passthru(), system() and exec(), thus you cannot use this backup script. You may consider using the default WordPress database backup script instead.', 'wp-dbmanager').'</p></strong>';\n\t\t\t} else {\n\t\t\t\techo '<strong><p style=\"color: red;\">'.__('Please Rectify The Error Highlighted In Red Before Proceeding On.', 'wp-dbmanager').'</p></strong>';\n\t\t\t}\n\t\t?>\n\t</p>\n\t<p><i><?php _e('Note: The checking of backup status is still undergoing testing, it may not be accurate.', 'wp-dbmanager'); ?></i></p>\n</div>\n<!-- Backup Database -->\n<form method=\"post\" action=\"<?php echo admin_url('admin.php?page='.plugin_basename(__FILE__)); ?>\">\n\t<?php wp_nonce_field('wp-dbmanager_backup'); ?>\n\t<div class=\"wrap\">\n\t\t<h3><?php _e('Backup Database', 'wp-dbmanager'); ?></h3>\n\t\t<br style=\"clear\" />\n\t\t<table class=\"widefat\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th><?php _e('Option', 'wp-dbmanager'); ?></th>\n\t\t\t\t\t<th><?php _e('Value', 'wp-dbmanager'); ?></th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tr>\n\t\t\t\t<th><?php _e('Database Name:', 'wp-dbmanager'); ?></th>\n\t\t\t\t<td><?php echo DB_NAME; ?></td>\n\t\t\t</tr>\n\t\t\t<tr style=\"background-color: #eee;\">\n\t\t\t\t<th><?php _e('Database Backup To:', 'wp-dbmanager'); ?></th>\n\t\t\t\t<td><span dir=\"ltr\"><?php echo stripslashes($backup['path']); ?></span></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th><?php _e('Database Backup Date:', 'wp-dbmanager'); ?></th>\n\t\t\t\t<td><?php echo mysql2date(sprintf(__('%s @ %s', 'wp-dbmanager'), get_option('date_format'), get_option('time_format')), gmdate('Y-m-d H:i:s', $backup['date'])); ?></td>\n\t\t\t</tr>\n\t\t\t<tr style=\"background-color: #eee;\">\n\t\t\t\t<th><?php _e('Database Backup File Name:', 'wp-dbmanager'); ?></th>\n\t\t\t\t<td><span dir=\"ltr\"><?php echo $backup['filename']; ?></span></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th><?php _e('Database Backup Type:', 'wp-dbmanager'); ?></th>\n\t\t\t\t<td><?php _e('Full (Structure and Data)', 'wp-dbmanager'); ?></td>\n\t\t\t</tr>\n\t\t\t<tr style=\"background-color: #eee;\">\n\t\t\t\t<th><?php _e('MYSQL Dump Location:', 'wp-dbmanager'); ?></th>\n\t\t\t\t<td><span dir=\"ltr\"><?php echo stripslashes($backup['mysqldumppath']); ?></span></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th><?php _e('GZIP Database Backup File?', 'wp-dbmanager'); ?></th>\n\t\t\t\t<td><input type=\"radio\" id=\"gzip-yes\" name=\"gzip\" value=\"1\" />&nbsp;<label for=\"gzip-yes\"><?php _e('Yes', 'wp-dbmanager'); ?></label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type=\"radio\" id=\"gzip-no\" name=\"gzip\" value=\"0\" checked=\"checked\" />&nbsp;<label for=\"gzip-no\"><?php _e('No', 'wp-dbmanager'); ?></label></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td colspan=\"2\" align=\"center\"><input type=\"submit\" name=\"do\" value=\"<?php _e('Backup', 'wp-dbmanager'); ?>\" class=\"button\" />&nbsp;&nbsp;<input type=\"button\" name=\"cancel\" value=\"<?php _e('Cancel', 'wp-dbmanager'); ?>\" class=\"button\" onclick=\"javascript:history.go(-1)\" /></td>\n\t\t\t</tr>\n\t\t</table>\n\t</div>\n</form>\n", "<?php\n### Check Whether User Can Manage Database\nif(!current_user_can('manage_database')) {\n\tdie('Access Denied');\n}\n\n\n### Variables Variables Variables\n$base_name = plugin_basename('wp-dbmanager/database-manager.php');\n$base_page = 'admin.php?page='.$base_name;\n$backup = array();\n$backup_options = get_option('dbmanager_options');\n$backup['date'] = current_time('timestamp');\n$backup['mysqldumppath'] = $backup_options['mysqldumppath'];\n$backup['mysqlpath'] = $backup_options['mysqlpath'];\n$backup['path'] = $backup_options['path'];\n$backup['password'] = str_replace('$', '\\$', DB_PASSWORD);\n$backup['charset'] = ' --default-character-set=\"utf8\"';\n\n\n### Form Processing\nif( !empty( $_POST['do'] ) ) {\n\tcheck_admin_referer('wp-dbmanager_manage');\n\t// Lets Prepare The Variables\n\t$database_file = trim($_POST['database_file']);\n\t$nice_file_date = mysql2date(sprintf(__('%s @ %s', 'wp-dbmanager'), get_option('date_format'), get_option('time_format')), gmdate('Y-m-d H:i:s', substr($database_file, 0, 10)));\n\t$text = '';\n\n\t// Decide What To Do\n\tswitch($_POST['do']) {\n\t\tcase __('Restore', 'wp-dbmanager'):\n\t\t\tif(!empty($database_file)) {\n\t\t\t\t$brace = (substr(PHP_OS, 0, 3) == 'WIN') ? '\"' : '';\n\t\t\t\t$backup['host'] = DB_HOST;\n\t\t\t\t$backup['port'] = '';\n\t\t\t\t$backup['sock'] = '';\n\t\t\t\tif(strpos(DB_HOST, ':') !== false) {\n\t\t\t\t\t$db_host = explode(':', DB_HOST);\n\t\t\t\t\t$backup['host'] = $db_host[0];\n\t\t\t\t\tif(intval($db_host[1]) != 0) {\n\t\t\t\t\t\t$backup['port'] = ' --port=\"'.intval($db_host[1]).'\"';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$backup['sock'] = ' --socket=\"'.$db_host[1].'\"';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(stristr($database_file, '.gz')) {\n\t\t\t\t\t$backup['command'] = 'gunzip < '.$brace.$backup['path'].'/'.$database_file.$brace.' | '.$brace.$backup['mysqlpath'].$brace.' --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].$backup['charset'].' '.DB_NAME;\n\t\t\t\t} else {\n\t\t\t\t\t$backup['command'] = $brace.$backup['mysqlpath'].$brace.' --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].$backup['charset'].' '.DB_NAME.' < '.$brace.$backup['path'].'/'.$database_file.$brace;\n\t\t\t\t}\n\t\t\t\tif( realpath( $backup['path'] ) === false ) {\n\t\t\t\t\t$text = '<p style=\"color: red;\">' . sprintf(__('%s is not a valid backup path', 'wp-dbmanager'), stripslashes( $backup['path'] ) ) . '</p>';\n\t\t\t\t} else if( dbmanager_is_valid_path( $backup['mysqlpath'] ) === 0 ) {\n\t\t\t\t\t$text = '<p style=\"color: red;\">' . sprintf(__('%s is not a valid mysql path', 'wp-dbmanager'), stripslashes( $backup['mysqlpath'] ) ) . '</p>';\n\t\t\t\t} else {\n\t\t\t\t\tpassthru( $backup['command'], $error );\n\t\t\t\t}\n\t\t\t\tif($error) {\n\t\t\t\t\t$text = '<p style=\"color: red;\">'.sprintf(__('Database On \\'%s\\' Failed To Restore', 'wp-dbmanager'), $nice_file_date).'</p>';\n\t\t\t\t} else {\n\t\t\t\t\t$text = '<p style=\"color: green;\">'.sprintf(__('Database On \\'%s\\' Restored Successfully', 'wp-dbmanager'), $nice_file_date).'</p>';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$text = '<p style=\"color: red;\">'.__('No Backup Database File Selected', 'wp-dbmanager').'</p>';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase __('E-Mail', 'wp-dbmanager'):\n\t\t\tif(!empty($database_file)) {\n\t\t\t\t$to = ( !empty( $_POST['email_to'] ) ? sanitize_email( $_POST['email_to'] ) : get_option( 'admin_email' ) );\n\n\t\t\t\tif( dbmanager_email_backup( $to, $backup['path'].'/'.$database_file ) ) {\n\t\t\t\t\t$text .= '<p style=\"color: green;\">'.sprintf(__('Database Backup File For \\'%s\\' Successfully E-Mailed To \\'%s\\'', 'wp-dbmanager'), $nice_file_date, $to).'</p>';\n\t\t\t\t} else {\n\t\t\t\t\t$text = '<p style=\"color: red;\">'.sprintf(__('Unable To E-Mail Database Backup File For \\'%s\\' To \\'%s\\'', 'wp-dbmanager'), $nice_file_date, $to).'</p>';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$text = '<p style=\"color: red;\">'.__('No Backup Database File Selected', 'wp-dbmanager').'</p>';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase __('Download', 'wp-dbmanager'):\n\t\t\tif(empty($database_file)) {\n\t\t\t\t$text = '<p style=\"color: red;\">'.__('No Backup Database File Selected', 'wp-dbmanager').'</p>';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase __('Delete', 'wp-dbmanager'):\n\t\t\tif(!empty($database_file)) {\n\t\t\t\tif(is_file($backup['path'].'/'.$database_file)) {\n\t\t\t\t\tif(!unlink($backup['path'].'/'.$database_file)) {\n\t\t\t\t\t\t$text .= '<p style=\"color: red;\">'.sprintf(__('Unable To Delete Database Backup File On \\'%s\\'', 'wp-dbmanager'), $nice_file_date).'</p>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$text .= '<p style=\"color: green;\">'.sprintf(__('Database Backup File On \\'%s\\' Deleted Successfully', 'wp-dbmanager'), $nice_file_date).'</p>';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$text = '<p style=\"color: red;\">'.sprintf(__('Invalid Database Backup File On \\'%s\\'', 'wp-dbmanager'), $nice_file_date).'</p>';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$text = '<p style=\"color: red;\">'.__('No Backup Database File Selected', 'wp-dbmanager').'</p>';\n\t\t\t}\n\t\t\tbreak;\n\t}\n}\n?>\n<?php if(!empty($text)) { echo '<!-- Last Action --><div id=\"message\" class=\"updated\">'.$text.'</div>'; } ?>\n<!-- Manage Backup Database -->\n<form method=\"post\" action=\"<?php echo admin_url('admin.php?page='.plugin_basename(__FILE__)); ?>\">\n\t<?php wp_nonce_field('wp-dbmanager_manage'); ?>\n\t<div class=\"wrap\">\n\t\t<h2><?php _e('Manage Backup Database', 'wp-dbmanager'); ?></h2>\n\t\t<p><?php _e('Choose A Backup Date To E-Mail, Restore, Download Or Delete', 'wp-dbmanager'); ?></p>\n\t\t<table class=\"widefat\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th><?php _e('No.', 'wp-dbmanager'); ?></th>\n\t\t\t\t\t<th><?php _e('Database File', 'wp-dbmanager'); ?></th>\n\t\t\t\t\t<th><?php _e('Date/Time', 'wp-dbmanager'); ?></th>\n\t\t\t\t\t<th><?php _e('Size', 'wp-dbmanager'); ?></th>\n\t\t\t\t\t<th><?php _e('Select', 'wp-dbmanager'); ?></th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<?php\n\t\t\t\t$no = 0;\n\t\t\t\t$totalsize = 0;\n\t\t\t\tif(!is_emtpy_folder($backup['path'])) {\n\t\t\t\t\tif ($handle = opendir($backup['path'])) {\n\t\t\t\t\t\t$database_files = array();\n\t\t\t\t\t\twhile (false !== ($file = readdir($handle))) {\n\t\t\t\t\t\t\tif ($file != '.' && $file != '..' && $file != '.htaccess' && (file_ext($file) == 'sql' || file_ext($file) == 'gz')) {\n\t\t\t\t\t\t\t\t$database_files[] = $file;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclosedir($handle);\n\t\t\t\t\t\tsort($database_files);\n\t\t\t\t\t\tfor($i = (sizeof($database_files)-1); $i > -1; $i--) {\n\t\t\t\t\t\t\tif($no%2 == 0) {\n\t\t\t\t\t\t\t\t$style = '';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$style = ' class=\"alternate\"';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$no++;\n\t\t\t\t\t\t\t$database_text = substr($database_files[$i], 13);\n\t\t\t\t\t\t\t$date_text = mysql2date(sprintf(__('%s @ %s', 'wp-dbmanager'), get_option('date_format'), get_option('time_format')), gmdate('Y-m-d H:i:s', substr($database_files[$i], 0, 10)));\n\t\t\t\t\t\t\t$size_text = filesize($backup['path'].'/'.$database_files[$i]);\n\t\t\t\t\t\t\techo \"<tr$style>\\n\";\n\t\t\t\t\t\t\techo '<td>'.number_format_i18n($no).'</td>';\n\t\t\t\t\t\t\techo \"<td>$database_text</td>\";\n\t\t\t\t\t\t\techo \"<td>$date_text</td>\";\n\t\t\t\t\t\t\techo '<td>'.format_size($size_text).'</td>';\n\t\t\t\t\t\t\techo \"<td><input type=\\\"radio\\\" name=\\\"database_file\\\" value=\\\"$database_files[$i]\\\" /></td>\\n</tr>\\n\";\n\t\t\t\t\t\t\t$totalsize += $size_text;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\techo '<tr><td align=\"center\" colspan=\"5\">'.__('There Are No Database Backup Files Available.', 'wp-dbmanager').'</td></tr>';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\techo '<tr><td align=\"center\" colspan=\"5\">'.__('There Are No Database Backup Files Available.', 'wp-dbmanager').'</td></tr>';\n\t\t\t\t}\n\t\t\t?>\n\t\t\t<tr class=\"thead\">\n\t\t\t\t<th colspan=\"3\"><?php printf(_n('%s Backup File', '%s Backup Files', $no, 'wp-dbmanager'), number_format_i18n($no)); ?></th>\n\t\t\t\t<th><?php echo format_size($totalsize); ?></th>\n\t\t\t\t<th>&nbsp;</th>\n\t\t\t</tr>\n\t\t</table>\n\t\t<table class=\"form-table\">\n\t\t\t<tr>\n\t\t\t\t<td colspan=\"5\" align=\"center\"><label for=\"email_to\"><?php _e('E-mail database backup file to:', 'wp-dbmanager'); ?></label> <input type=\"text\" id=\"email_to\" name=\"email_to\" size=\"30\" maxlength=\"50\" value=\"<?php echo get_option('admin_email'); ?>\" dir=\"ltr\" />&nbsp;&nbsp;<input type=\"submit\" name=\"do\" value=\"<?php _e('E-Mail', 'wp-dbmanager'); ?>\" class=\"button\" /></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td colspan=\"5\" align=\"center\">\n\t\t\t\t\t<input type=\"submit\" name=\"do\" value=\"<?php _e('Download', 'wp-dbmanager'); ?>\" class=\"button\" />&nbsp;&nbsp;\n\t\t\t\t\t<input type=\"submit\" name=\"do\" value=\"<?php _e('Restore', 'wp-dbmanager'); ?>\" onclick=\"return confirm('<?php _e('You Are About To Restore A Database.\\nThis Action Is Not Reversible.\\nAny Data Inserted After The Backup Date Will Be Gone.\\n\\n Choose [Cancel] to stop, [Ok] to restore.', 'wp-dbmanager'); ?>')\" class=\"button\" />&nbsp;&nbsp;\n\t\t\t\t\t<input type=\"submit\" class=\"button\" name=\"do\" value=\"<?php _e('Delete', 'wp-dbmanager'); ?>\" onclick=\"return confirm('<?php _e('You Are About To Delete The Selected Database Backup Files.\\nThis Action Is Not Reversible.\\n\\n Choose [Cancel] to stop, [Ok] to delete.', 'wp-dbmanager'); ?>')\" />&nbsp;&nbsp;\n\t\t\t\t\t<input type=\"button\" name=\"cancel\" value=\"<?php _e('Cancel', 'wp-dbmanager'); ?>\" class=\"button\" onclick=\"javascript:history.go(-1)\" /></td>\n\t\t\t</tr>\n\t\t</table>\n\t</div>\n</form>\n", "<?php\n### Check Whether User Can Manage Database\nif(!current_user_can('manage_database')) {\n\tdie('Access Denied');\n}\n\n\n### Variables Variables Variables\n$base_name = plugin_basename('wp-dbmanager/database-manager.php');\n$base_page = 'admin.php?page='.$base_name;\n$backup = array();\n$backup_options = get_option('dbmanager_options');\n$backup['date'] = current_time('timestamp');\n$backup['mysqldumppath'] = $backup_options['mysqldumppath'];\n$backup['mysqlpath'] = $backup_options['mysqlpath'];\n$backup['path'] = $backup_options['path'];\n\n\n### Form Processing\nif(!empty($_POST['do'])) {\n\t$text = '';\n\t// Decide What To Do\n\tswitch($_POST['do']) {\n\t\tcase __('Run', 'wp-dbmanager'):\n\t\t\tcheck_admin_referer('wp-dbmanager_run');\n\t\t\t$sql_queries2 = trim($_POST['sql_query']);\n\t\t\t$totalquerycount = 0;\n\t\t\t$successquery = 0;\n\t\t\tif($sql_queries2) {\n\t\t\t\t$sql_queries = array();\n\t\t\t\t$sql_queries2 = explode(\"\\n\", $sql_queries2);\n\t\t\t\tforeach($sql_queries2 as $sql_query2) {\n\t\t\t\t\t$sql_query2 = trim(stripslashes($sql_query2));\n\t\t\t\t\t$sql_query2 = preg_replace(\"/[\\r\\n]+/\", '', $sql_query2);\n\t\t\t\t\tif(!empty($sql_query2)) {\n\t\t\t\t\t\t$sql_queries[] = $sql_query2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif($sql_queries) {\n\t\t\t\t\tforeach($sql_queries as $sql_query) {\n\t\t\t\t\t\tif (preg_match(\"/^\\\\s*(insert|update|replace|delete|create|alter) /i\",$sql_query)) {\n\t\t\t\t\t\t\t$run_query = $wpdb->query($sql_query);\n\t\t\t\t\t\t\tif(!$run_query) {\n\t\t\t\t\t\t\t\t$text .= \"<p style=\\\"color: red;\\\">$sql_query</p>\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$successquery++;\n\t\t\t\t\t\t\t\t$text .= \"<p style=\\\"color: green;\\\">$sql_query</p>\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$totalquerycount++;\n\t\t\t\t\t\t} elseif (preg_match(\"/^\\\\s*(select|drop|show|grant) /i\",$sql_query)) {\n\t\t\t\t\t\t\t$text .= \"<p style=\\\"color: red;\\\">$sql_query</p>\";\n\t\t\t\t\t\t\t$totalquerycount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$text .= '<p style=\"color: blue;\">'.number_format_i18n($successquery).'/'.number_format_i18n($totalquerycount).' '.__('Query(s) Executed Successfully', 'wp-dbmanager').'</p>';\n\t\t\t\t} else {\n\t\t\t\t\t$text = '<p style=\"color: red;\">'.__('Empty Query', 'wp-dbmanager').'</p>';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$text = '<p style=\"color: red;\">'.__('Empty Query', 'wp-dbmanager').'</p>';\n\t\t\t}\n\t\t\tbreak;\n\t}\n}\n?>\n<?php if(!empty($text)) { echo '<!-- Last Action --><div id=\"message\" class=\"updated fade\"><p>'.$text.'</p></div>'; } ?>\n<!-- Run SQL Query -->\n<form method=\"post\" action=\"<?php echo admin_url('admin.php?page='.plugin_basename(__FILE__)); ?>\">\n\t<?php wp_nonce_field('wp-dbmanager_run'); ?>\n\t<div class=\"wrap\">\n\t\t<h2><?php _e('Run SQL Query', 'wp-dbmanager'); ?></h2>\n\t\t<br style=\"clear\" />\n\t\t<div>\n\t\t\t<strong><?php _e('Seperate Multiple Queries With A New Line', 'wp-dbmanager'); ?></strong><br />\n\t\t\t<p style=\"color: green;\"><?php _e('Use Only INSERT, UPDATE, REPLACE, DELETE, CREATE and ALTER statements.', 'wp-dbmanager'); ?></p>\n\t\t</div>\n\t\t<table class=\"form-table\">\n\t\t\t<tr>\n\t\t\t\t<td align=\"center\"><textarea cols=\"120\" rows=\"30\" name=\"sql_query\" style=\"width: 99%;\" dir=\"ltr\" ></textarea></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td align=\"center\"><input type=\"submit\" name=\"do\" value=\"<?php _e('Run', 'wp-dbmanager'); ?>\" class=\"button\" />&nbsp;&nbsp;<input type=\"button\" name=\"cancel\" value=\"<?php _e('Cancel', 'wp-dbmanager'); ?>\" class=\"button\" onclick=\"javascript:history.go(-1)\" /></td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<p>\n\t\t\t<?php _e('1. CREATE statement will return an error, which is perfectly normal due to the database class. To confirm that your table has been created check the Manage Database page.', 'wp-dbmanager'); ?><br />\n\t\t\t<?php _e('2. UPDATE statement may return an error sometimes due to the newly updated value being the same as the previous value.', 'wp-dbmanager'); ?><br />\n\t\t\t<?php _e('3. ALTER statement will return an error because there is no value returned.', 'wp-dbmanager'); ?>\n\t\t</p>\n\t</div>\n</form>", "<?php\n/*\nPlugin Name: WP-DBManager\nPlugin URI: http://lesterchan.net/portfolio/programming/php/\nDescription: Manages your WordPress database. Allows you to optimize database, repair database, backup database, restore database, delete backup database , drop/empty tables and run selected queries. Supports automatic scheduling of backing up, optimizing and repairing of database.\nVersion: 2.71\nAuthor: Lester 'GaMerZ' Chan\nAuthor URI: http://lesterchan.net\nText Domain: wp-dbmanager\n*/\n\n\n/*\n\tCopyright 2014  Lester Chan  (email : lesterchan@gmail.com)\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n*/\n\n\n### Create Text Domain For Translations\nadd_action( 'plugins_loaded', 'dbmanager_textdomain' );\nfunction dbmanager_textdomain() {\n\tload_plugin_textdomain( 'wp-dbmanager', false, dirname( plugin_basename( __FILE__ ) ) );\n}\n\n\n### Function: Database Manager Menu\nadd_action('admin_menu', 'dbmanager_menu');\nfunction dbmanager_menu() {\n\tif (function_exists('add_menu_page')) {\n\t\tadd_menu_page(__('Database', 'wp-dbmanager'), __('Database', 'wp-dbmanager'), 'manage_database', 'wp-dbmanager/database-manager.php', '', 'dashicons-archive');\n\t}\n\tif (function_exists('add_submenu_page')) {\n\t\tadd_submenu_page('wp-dbmanager/database-manager.php', __('Backup DB', 'wp-dbmanager'), __('Backup DB', 'wp-dbmanager'), 'manage_database', 'wp-dbmanager/database-backup.php');\n\t\tadd_submenu_page('wp-dbmanager/database-manager.php', __('Manage Backup DB', 'wp-dbmanager'), __('Manage Backup DB', 'wp-dbmanager'), 'manage_database', 'wp-dbmanager/database-manage.php');\n\t\tadd_submenu_page('wp-dbmanager/database-manager.php', __('Optimize DB', 'wp-dbmanager'), __('Optimize DB', 'wp-dbmanager'), 'manage_database', 'wp-dbmanager/database-optimize.php');\n\t\tadd_submenu_page('wp-dbmanager/database-manager.php', __('Repair DB', 'wp-dbmanager'), __('Repair DB', 'wp-dbmanager'), 'manage_database', 'wp-dbmanager/database-repair.php');\n\t\tadd_submenu_page('wp-dbmanager/database-manager.php', __('Empty/Drop Tables', 'wp-dbmanager'), __('Empty/Drop Tables', 'wp-dbmanager'), 'manage_database', 'wp-dbmanager/database-empty.php');\n\t\tadd_submenu_page('wp-dbmanager/database-manager.php', __('Run SQL Query', 'wp-dbmanager'), __('Run SQL Query', 'wp-dbmanager'), 'manage_database', 'wp-dbmanager/database-run.php');\n\t\tadd_submenu_page('wp-dbmanager/database-manager.php', __('DB Options', 'wp-dbmanager'),  __('DB Options', 'wp-dbmanager'), 'manage_database', 'wp-dbmanager/wp-dbmanager.php', 'dbmanager_options');\n\t}\n}\n\n\n### Funcion: Database Manager Cron\nadd_filter('cron_schedules', 'cron_dbmanager_reccurences');\nadd_action('dbmanager_cron_backup', 'cron_dbmanager_backup');\nadd_action('dbmanager_cron_optimize', 'cron_dbmanager_optimize');\nadd_action('dbmanager_cron_repair', 'cron_dbmanager_repair');\nfunction cron_dbmanager_backup() {\n\tglobal $wpdb;\n\t$backup_options = get_option('dbmanager_options');\n\t$backup_email = stripslashes($backup_options['backup_email']);\n\tif(intval($backup_options['backup_period']) > 0) {\n\t\t$backup = array();\n\t\t$backup['date'] = current_time('timestamp');\n\t\t$backup['mysqldumppath'] = $backup_options['mysqldumppath'];\n\t\t$backup['mysqlpath'] = $backup_options['mysqlpath'];\n\t\t$backup['path'] = $backup_options['path'];\n\t\t$backup['password'] = str_replace('$', '\\$', DB_PASSWORD);\n\t\t$backup['host'] = DB_HOST;\n\t\t$backup['port'] = '';\n\t\t$backup['sock'] = '';\n\t\tif(strpos(DB_HOST, ':') !== false) {\n\t\t\t$db_host = explode(':', DB_HOST);\n\t\t\t$backup['host'] = $db_host[0];\n\t\t\tif(intval($db_host[1]) != 0) {\n\t\t\t\t$backup['port'] = ' --port=\"'.intval($db_host[1]).'\"';\n\t\t\t} else {\n\t\t\t\t$backup['sock'] = ' --socket=\"'.$db_host[1].'\"';\n\t\t\t}\n\t\t}\n\t\t$backup['command'] = '';\n\t\t$brace = (substr(PHP_OS, 0, 3) == 'WIN') ? '\"' : '';\n\t\tif(intval($backup_options['backup_gzip']) == 1) {\n\t\t\t$backup['filename'] = $backup['date'].'_-_'.DB_NAME.'.sql.gz';\n\t\t\t$backup['filepath'] = $backup['path'].'/'.$backup['filename'];\n\t\t\t$backup['command'] = $brace.$backup['mysqldumppath'].$brace.' --force --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].' --add-drop-table --skip-lock-tables '.DB_NAME.' | gzip > '.$brace.$backup['filepath'].$brace;\n\t\t} else {\n\t\t\t$backup['filename'] = $backup['date'].'_-_'.DB_NAME.'.sql';\n\t\t\t$backup['filepath'] = $backup['path'].'/'.$backup['filename'];\n\t\t\t$backup['command'] = $brace.$backup['mysqldumppath'].$brace.' --force --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].' --add-drop-table --skip-lock-tables '.DB_NAME.' > '.$brace.$backup['filepath'].$brace;\n\t\t}\n\t\texecute_backup($backup['command']);\n\t\tif( !empty( $backup_email ) )\n\t\t{\n\t\t\tdbmanager_email_backup( $backup_email, $backup['filepath'] );\n\t\t}\n\t}\n\treturn;\n}\nfunction cron_dbmanager_optimize() {\n\tglobal $wpdb;\n\t$backup_options = get_option('dbmanager_options');\n\t$optimize_period = intval($backup_options['optimize_period']);\n\tif($optimize_period > 0) {\n\t\t$optimize_tables = array();\n\t\t$tables = $wpdb->get_col(\"SHOW TABLES\");\n\t\t\tforeach($tables as $table_name) {\n\t\t\t\t$optimize_tables[] = '`'.$table_name.'`';\n\t\t}\n\t\t$wpdb->query('OPTIMIZE TABLE '.implode(',', $optimize_tables));\n\t}\n\treturn;\n}\nfunction cron_dbmanager_repair() {\n\tglobal $wpdb;\n\t$backup_options = get_option('dbmanager_options');\n\t$repair_period = intval($backup_options['repair_period']);\n\tif($repair_period > 0) {\n\t\t$repair_tables = array();\n\t\t$tables = $wpdb->get_col(\"SHOW TABLES\");\n\t\t\tforeach($tables as $table_name) {\n\t\t\t\t$repair_tables[] = '`'.$table_name.'`';\n\t\t}\n\t\t$wpdb->query('REPAIR TABLE '.implode(',', $repair_tables));\n\t}\n\treturn;\n}\nfunction cron_dbmanager_reccurences($schedules) {\n\t$backup_options = get_option('dbmanager_options');\n\t$backup = intval($backup_options['backup'])*intval($backup_options['backup_period']);\n\t$optimize = intval($backup_options['optimize'])*intval($backup_options['optimize_period']);\n\t$repair = intval($backup_options['repair'])*intval($backup_options['repair_period']);\n\tif($backup == 0) {\n\t\t$backup = 31536000;\n\t}\n\tif($optimize == 0) {\n\t\t$optimize = 31536000;\n\t}\n\tif($repair == 0) {\n\t\t$repair = 31536000;\n\t}\n   $schedules['dbmanager_backup'] = array('interval' => $backup, 'display' => __('WP-DBManager Backup Schedule', 'wp-dbmanager'));\n   $schedules['dbmanager_optimize'] = array('interval' => $optimize, 'display' => __('WP-DBManager Optimize Schedule', 'wp-dbmanager'));\n   $schedules['dbmanager_repair'] = array('interval' => $repair, 'display' => __('WP-DBManager Repair Schedule', 'wp-dbmanager'));\n   return $schedules;\n}\n\n\n### Function: Ensure .htaccess Is In The Backup Folder\nadd_action( 'admin_notices', 'dbmanager_admin_notices' );\nfunction dbmanager_admin_notices() {\n\t$backup_options = get_option( 'dbmanager_options' );\n\t$backup_folder_writable = ( is_dir( $backup_options['path'] ) && wp_is_writable( $backup_options['path'] ) );\n\t$htaccess_exists = ( file_exists( $backup_options['path'] . '/.htaccess' ) );\n\n\tif( !isset( $backup_options['hide_admin_notices'] ) || intval( $backup_options['hide_admin_notices'] ) === 0 )\n\t{\n\t\tif( !$backup_folder_writable || !$htaccess_exists ) {\n\t\t\techo '<div class=\"error\">';\n\n\t\t\tif( !$backup_folder_writable ) {\n\t\t\t\techo '<p style=\"font-weight: bold;\">'.__('Your backup folder is NOT writable', 'wp-postratings').'</p>';\n\t\t\t\techo '<p>'.sprintf( __( 'To correct this issue, make the folder <strong>%s</strong> writable.', 'wp-dbmanager'), $backup_options['path'] ).'</p>';\n\t\t\t}\n\t\t\tif( !$htaccess_exists ) {\n\t\t\t\techo '<p style=\"font-weight: bold;\">'.__('Your backup folder MIGHT be visible to the public', 'wp-dbmanager').'</p>';\n\t\t\t\techo '<p>'.sprintf( __( 'To correct this issue, move the file from <strong>%s</strong> to <strong>%s</strong>', 'wp-dbmanager'), plugin_dir_path( __FILE__ ) . 'htaccess.txt', $backup_options['path'] .'/.htaccess' ).'</p>';\n\t\t\t}\n\n\t\t\techo '</div>';\n\t\t}\n\t}\n}\n\n\n### Function: Auto Detect MYSQL and MYSQL Dump Paths\nfunction detect_mysql() {\n\tglobal $wpdb;\n\t$paths = array('mysq' => '', 'mysqldump' => '');\n\tif(substr(PHP_OS,0,3) == 'WIN') {\n\t\t$mysql_install = $wpdb->get_row(\"SHOW VARIABLES LIKE 'basedir'\");\n\t\tif($mysql_install) {\n\t\t\t$install_path = str_replace('\\\\', '/', $mysql_install->Value);\n\t\t\t$paths['mysql'] = $install_path.'bin/mysql.exe';\n\t\t\t$paths['mysqldump'] = $install_path.'bin/mysqldump.exe';\n\t\t} else {\n\t\t\t$paths['mysql'] = 'mysql.exe';\n\t\t\t$paths['mysqldump'] = 'mysqldump.exe';\n\t\t}\n\t} else {\n\t\tif(function_exists('exec')) {\n\t\t\t$paths['mysql'] = @exec('which mysql');\n\t\t\t$paths['mysqldump'] = @exec('which mysqldump');\n\t\t} else {\n\t\t\t$paths['mysql'] = 'mysql';\n\t\t\t$paths['mysqldump'] = 'mysqldump';\n\t\t}\n\t}\n\treturn $paths;\n}\n\n\n### Executes OS-Dependent mysqldump Command (By: Vlad Sharanhovich)\nfunction execute_backup($command) {\n\t$backup_options = get_option('dbmanager_options');\n\tcheck_backup_files();\n\n\tif( realpath( $backup_options['path'] ) === false ) {\n\t\treturn sprintf( __( '%s is not a valid backup path', 'wp-dbmanager' ), stripslashes( $backup_options['path'] ) );\n\t} else if( dbmanager_is_valid_path( $backup_options['mysqldumppath'] ) === 0 ) {\n\t\treturn sprintf( __( '%s is not a valid mysqldump path', 'wp-dbmanager' ), stripslashes( $backup_options['mysqldumppath'] ) );\n\t} else if( dbmanager_is_valid_path( $backup_options['mysqlpath'] ) === 0 ) {\n\t\treturn sprintf( __( '%s is not a valid mysql path', 'wp-dbmanager' ), stripslashes( $backup_options['mysqlpath'] ) );\n\t}\n\n\tif(substr(PHP_OS, 0, 3) == 'WIN') {\n\t\t$writable_dir = $backup_options['path'];\n\t\t$tmpnam = $writable_dir.'/wp-dbmanager.bat';\n\t\t$fp = fopen($tmpnam, 'w');\n\t\tfwrite($fp, $command);\n\t\tfclose($fp);\n\t\tsystem($tmpnam.' > NUL', $error);\n\t\tunlink($tmpnam);\n\t} else {\n\t\tpassthru($command, $error);\n\t}\n\treturn $error;\n}\n\n### Function: Check for valid file path\nfunction dbmanager_is_valid_path( $path ) {\n\treturn preg_match( '/^[^*?\"<>|;]*$/', $path );\n}\n\n### Function: Email database backup\nfunction dbmanager_email_backup($to = '', $backup_file_path)\n{\n\tif( is_email( $to ) && file_exists( $backup_file_path ) )\n\t{\n\t\t$backup_options = get_option( 'dbmanager_options' );\n\n\t\t$file_name = basename( $backup_file_path );\n\t\t$file_gmt_date = gmdate( 'Y-m-d H:i:s', substr( $file_name, 0, 10 ) );\n\t\t$file_size = format_size( filesize( $backup_file_path) );\n\t\t$file_date = mysql2date( sprintf( __( '%s @ %s', 'wp-dbmanager' ), get_option( 'date_format' ), get_option( 'time_format' ) ), $file_gmt_date );\n\n\t\t$to = ( !empty( $to ) ? $to : get_option( 'admin_email' ) );\n\n\t\t$subject = ( !empty( $backup_options['backup_email_subject'] ) ? $backup_options['backup_email_subject'] : dbmanager_default_options( 'backup_email_subject' ) );\n\t\t$subject = str_replace(\n\t\t\t  array(\n\t\t\t\t  '%SITE_NAME%'\n\t\t\t    , '%POST_DATE%'\n\t\t\t    , '%POST_TIME%'\n\t\t\t  )\n\t\t\t, array(\n\t\t\t\t  wp_specialchars_decode( get_bloginfo( 'name' ), ENT_QUOTES )\n\t\t\t\t, mysql2date( get_option( 'date_format' ), $file_gmt_date )\n\t\t\t\t, mysql2date( get_option( 'time_format' ), $file_gmt_date )\n\t\t\t)\n\t\t\t, $subject\n\t\t);\n\t\t$message = __( 'Website Name:', 'wp-dbmanager').' '. wp_specialchars_decode( get_bloginfo( 'name' ), ENT_QUOTES ) . \"\\n\".\n\t\t\t__( 'Website URL:', 'wp-dbmanager' ).' '.get_bloginfo( 'url' ).\"\\n\".\n\t\t\t__( 'Backup File Name:', 'wp-dbmanager' ).' '.$file_name.\"\\n\".\n\t\t\t__( 'Backup File Date:', 'wp-dbmanager' ).' '.$file_date.\"\\n\".\n\t\t\t__( 'Backup File Size:', 'wp-dbmanager' ).' '.$file_size.\"\\n\\n\".\n\t\t\t__( 'With Regards,', 'wp-dbmanager' ).\"\\n\".\n\t\t\twp_specialchars_decode( get_bloginfo( 'name' ),  ENT_QUOTES ). ' ' . __('Administrator', 'wp-dbmanager' ).\"\\n\".\n\t\t\tget_bloginfo('url');\n\n\t\t$from = ( !empty( $backup_options['backup_email_from'] ) ? $backup_options['backup_email_from'] : dbmanager_default_options( 'backup_email_from' ) );\n\t\t$from_name = ( !empty( $backup_options['backup_email_from_name'] ) ? $backup_options['backup_email_from_name'] : dbmanager_default_options( 'backup_email_from_name' ) );\n\t\t$headers[] = 'From: \"' . wp_specialchars_decode( stripslashes_deep( $from_name ), ENT_QUOTES ) . '\" <'.$from.'>';\n\n\t\treturn wp_mail( $to, $subject, $message, $headers, $backup_file_path );\n\t}\n\n\treturn false;\n}\n\n\n### Function: Format Bytes Into KB/MB\nif(!function_exists('format_size')) {\n\tfunction format_size($rawSize) {\n\t\tif($rawSize / 1073741824 > 1)\n\t\t\treturn number_format_i18n($rawSize/1048576, 1) . ' '.__('GiB', 'wp-dbmanager');\n\t\telse if ($rawSize / 1048576 > 1)\n\t\t\treturn number_format_i18n($rawSize/1048576, 1) . ' '.__('MiB', 'wp-dbmanager');\n\t\telse if ($rawSize / 1024 > 1)\n\t\t\treturn number_format_i18n($rawSize/1024, 1) . ' '.__('KiB', 'wp-dbmanager');\n\t\telse\n\t\t\treturn number_format_i18n($rawSize, 0) . ' '.__('bytes', 'wp-dbmanager');\n\t}\n}\n\n\n### Function: Get File Extension\nif(!function_exists('file_ext')) {\n\tfunction file_ext($file_name) {\n\t\treturn substr(strrchr($file_name, '.'), 1);\n\t}\n}\n\n\n### Function: Check Folder Whether There Is Any File Inside\nif(!function_exists('is_emtpy_folder')) {\n\tfunction is_emtpy_folder($folder){\n\t   if(is_dir($folder) ){\n\t\t   $folder_content = '';\n\t\t   $handle = opendir($folder);\n\t\t   while( (gettype( $name = readdir($handle)) != 'boolean')){\n\t\t\t\tif($name != '.htaccess') {\n\t\t\t\t\t$name_array[] = $name;\n\t\t\t\t}\n\t\t   }\n\t\t   foreach($name_array as $temp)\n\t\t\t   $folder_content .= $temp;\n\n\t\t   if($folder_content == '...')\n\t\t\t   return true;\n\t\t   else\n\t\t\t   return false;\n\t\t   closedir($handle);\n\t   }\n\t   else\n\t\t   return true;\n\t}\n}\n\n\n### Function: Make Sure Maximum Number Of Database Backup Files Does Not Exceed\nfunction check_backup_files() {\n\t$backup_options = get_option('dbmanager_options');\n\t$database_files = array();\n\tif(!is_emtpy_folder($backup_options['path'])) {\n\t\tif ($handle = opendir($backup_options['path'])) {\n\t\t\twhile (false !== ($file = readdir($handle))) {\n\t\t\t\tif ($file != '.' && $file != '..' && (file_ext($file) == 'sql' || file_ext($file) == 'gz')) {\n\t\t\t\t\t$database_files[] = $file;\n\t\t\t\t}\n\t\t\t}\n\t\t\tclosedir($handle);\n\t\t\tsort($database_files);\n\t\t}\n\t}\n\tif(sizeof($database_files) >= $backup_options['max_backup']) {\n\t\t@unlink($backup_options['path'].'/'.$database_files[0]);\n\t}\n}\n\n\n### Function: DBManager Default Options\nfunction dbmanager_default_options( $option_name )\n{\n\tswitch( $option_name )\n\t{\n\t\tcase 'backup_email_from':\n\t\t\treturn get_option( 'admin_email' );\n\t\t\tbreak;\n\t\tcase 'backup_email_from_name':\n\t\t\treturn wp_specialchars_decode( get_bloginfo( 'name' ),  ENT_QUOTES )  .' '.__( 'Administrator', 'wp-dbmanager' );\n\t\t\tbreak;\n\t\tcase 'backup_email_subject':\n\t\t\treturn __( '%SITE_NAME% Database Backup File For %POST_DATE% @ %POST_TIME%', 'wp-dbmanager' );\n\t\t\tbreak;\n\t\tcase 'hide_admin_notices':\n\t\t\treturn 0;\n\t\t\tbreak;\n\t}\n}\n\n### Function: Acticate Plugin\nregister_activation_hook( __FILE__, 'dbmanager_activation' );\nfunction dbmanager_activation( $network_wide )\n{\n\t$auto = detect_mysql();\n\t// Add Options\n\t$option_name = 'dbmanager_options';\n\t$option = array(\n\t\t  'mysqldumppath'           => $auto['mysqldump']\n\t\t, 'mysqlpath'               => $auto['mysql']\n\t\t, 'path'                    => str_replace( '\\\\', '/', WP_CONTENT_DIR ).'/backup-db'\n\t\t, 'max_backup'              => 10\n\t\t, 'backup'                  => 1\n\t\t, 'backup_gzip'             => 0\n\t\t, 'backup_period'           => 604800\n\t\t, 'backup_email'            => get_option( 'admin_email' )\n\t\t, 'backup_email_from'       => dbmanager_default_options( 'backup_email_from' )\n\t\t, 'backup_email_from_name'  => dbmanager_default_options( 'backup_email_from_name' )\n\t\t, 'backup_email_subject'    => dbmanager_default_options( 'backup_email_subject' )\n\t\t, 'optimize'                => 3\n\t\t, 'optimize_period'         => 86400\n\t\t, 'repair'                  => 2\n\t\t, 'repair_period'           => 604800\n\t\t, 'hide_admin_notices'      => 0\n\t);\n\n\tif ( is_multisite() && $network_wide )\n\t{\n\t\t$ms_sites = wp_get_sites();\n\n\t\tif( 0 < sizeof( $ms_sites ) )\n\t\t{\n\t\t\tforeach ( $ms_sites as $ms_site )\n\t\t\t{\n\t\t\t\tswitch_to_blog( $ms_site['blog_id'] );\n\t\t\t\tadd_option( $option_name, $option );\n\t\t\t\tdbmanager_activate();\n\t\t\t}\n\t\t}\n\n\t\trestore_current_blog();\n\t}\n\telse\n\t{\n\t\tadd_option( $option_name, $option );\n\t\tdbmanager_activate();\n\t}\n}\n\nfunction dbmanager_activate() {\n\t$plugin_path = plugin_dir_path( __FILE__ );\n\t$default_backup_folder = WP_CONTENT_DIR . '/backup-db';\n\n\t// Create Backup Folder\n\tif( is_dir( $default_backup_folder ) && wp_is_writable( $default_backup_folder ) )\n\t{\n\t\tif( wp_mkdir_p( $default_backup_folder ) )\n\t\t{\n\t\t\t@copy( $plugin_path . 'htaccess.txt', $default_backup_folder . '/.htaccess' );\n\t\t\t@chmod( $default_backup_folder, 0750 );\n\t\t}\n\t}\n\n\t// Set 'manage_database' Capabilities To Administrator\n\t$role = get_role( 'administrator' );\n\tif( !$role->has_cap( 'manage_database') )\n\t{\n\t\t$role->add_cap( 'manage_database' );\n\t}\n}\n\n\n### Function: Download Database\nadd_action('init', 'download_database');\nfunction download_database() {\n\tif(isset($_POST['do']) && $_POST['do'] == __('Download', 'wp-dbmanager') && !empty($_POST['database_file'])) {\n\t\tif(strpos($_SERVER['HTTP_REFERER'], admin_url('admin.php?page=wp-dbmanager/database-manage.php')) !== false) {\n\t\t\t$database_file = trim($_POST['database_file']);\n\t\t\tif(substr($database_file, strlen($database_file) - 4, 4) == '.sql' || substr($database_file, strlen($database_file) - 7, 7) == '.sql.gz') {\n\t\t\t\tcheck_admin_referer('wp-dbmanager_manage');\n\t\t\t\t$backup_options = get_option('dbmanager_options');\n\t\t\t\t$clean_file_name = sanitize_file_name($database_file);\n\t\t\t\t$clean_file_name = str_replace('sql_.gz', 'sql.gz', $clean_file_name);\n\t\t\t\t$file_path = $backup_options['path'].'/'.$clean_file_name;\n\t\t\t\theader(\"Pragma: public\");\n\t\t\t\theader(\"Expires: 0\");\n\t\t\t\theader(\"Cache-Control: must-revalidate, post-check=0, pre-check=0\");\n\t\t\t\theader(\"Content-Type: application/force-download\");\n\t\t\t\theader(\"Content-Type: application/octet-stream\");\n\t\t\t\theader(\"Content-Type: application/download\");\n\t\t\t\theader(\"Content-Disposition: attachment; filename=\".basename($file_path).\";\");\n\t\t\t\theader(\"Content-Transfer-Encoding: binary\");\n\t\t\t\theader(\"Content-Length: \".filesize($file_path));\n\t\t\t\t@readfile($file_path);\n\t\t\t}\n\t\t}\n\t\texit();\n\t}\n}\n\n### Function: Database Options\nfunction dbmanager_options() {\n\t$text = '';\n\t$backup_options = get_option('dbmanager_options');\n\t$old_backup_options = $backup_options;\n\tif(!empty($_POST['Submit'])) {\n\t\tcheck_admin_referer('wp-dbmanager_options');\n\t\t$backup_options['mysqldumppath']            = sanitize_text_field( $_POST['db_mysqldumppath'] );\n\t\t$backup_options['mysqlpath']                = sanitize_text_field( $_POST['db_mysqlpath'] );\n\t\t$backup_options['path']                     = sanitize_text_field( $_POST['db_path'] );\n\t\t$backup_options['max_backup']               = intval( $_POST['db_max_backup'] );\n\t\t$backup_options['backup']                   = intval( $_POST['db_backup'] );\n\t\t$backup_options['backup_gzip']              = intval( $_POST['db_backup_gzip'] );\n\t\t$backup_options['backup_period']            = intval( $_POST['db_backup_period'] );\n\t\t$backup_options['backup_email']             = sanitize_email( $_POST['db_backup_email'] );\n\t\t$backup_options['backup_email_from']        = sanitize_email( $_POST['db_backup_email_from'] );\n\t\t$backup_options['backup_email_from_name']   = sanitize_text_field( $_POST['db_backup_email_from_name'] );\n\t\t$backup_options['backup_email_subject']     = sanitize_text_field( $_POST['db_backup_email_subject'] );\n\t\t$backup_options['optimize']                 = intval( $_POST['db_optimize'] );\n\t\t$backup_options['optimize_period']          = intval( $_POST['db_optimize_period'] );\n\t\t$backup_options['repair']                   = intval( $_POST['db_repair'] );\n\t\t$backup_options['repair_period']            = intval( $_POST['db_repair_period'] );\n\t\t$backup_options['hide_admin_notices']       = intval( $_POST['db_hide_admin_notices'] );\n\n\t\tif( realpath( $backup_options['path'] ) === false ) {\n\t\t\t$text = '<div id=\"message\" class=\"error\"><p>' . sprintf( __( '%s is not a valid backup path', 'wp-dbmanager' ), stripslashes( $backup_options['path'] ) ) . '</p></div>';\n\t\t\t$backup_options['path'] = $old_backup_options['path'];\n\t\t} else if( dbmanager_is_valid_path( $backup_options['mysqldumppath'] ) === 0 ) {\n\t\t\t$text = '<div id=\"message\" class=\"error\"><p>' . sprintf( __( '%s is not a valid mysqldump path', 'wp-dbmanager' ), stripslashes( $backup_options['mysqldumppath'] ) ) . '</p></div>';\n\t\t\t$backup_options['mysqldumppath'] = $old_backup_options['mysqldumppath'];\n\t\t} else if( dbmanager_is_valid_path( $backup_options['mysqlpath'] ) === 0 ) {\n\t\t\t$text = '<div id=\"message\" class=\"error\"><p>' . sprintf( __( '%s is not a valid mysql path', 'wp-dbmanager' ), stripslashes( $backup_options['mysqlpath'] ) ) . '</p></div>';\n\t\t\t$backup_options['mysqlpath'] = $old_backup_options['mysqlpath'];\n\t\t}\n\n\t\t$update_db_options = update_option( 'dbmanager_options', $backup_options );\n\t\tif( $update_db_options ) {\n\t\t\t$text = '<div id=\"message\" class=\"updated\"><p>' . __( 'Database Options Updated', 'wp-dbmanager' ) . '</p></div>';\n\t\t}\n\t\tif( empty( $text ) ) {\n\t\t\t$text = '<div id=\"message\" class=\"error\"><p>' . __( 'No Database Option Updated', 'wp-dbmanager' ) . '</p></div>';\n\t\t}\n\t\twp_clear_scheduled_hook( 'dbmanager_cron_backup' );\n\t\tif( $backup_options['backup_period'] > 0 ) {\n\t\t\tif ( ! wp_next_scheduled( 'dbmanager_cron_backup' ) ) {\n\t\t\t\twp_schedule_event( time(), 'dbmanager_backup', 'dbmanager_cron_backup' );\n\t\t\t}\n\t\t}\n\t\twp_clear_scheduled_hook( 'dbmanager_cron_optimize' );\n\t\tif( $backup_options['optimize_period'] > 0 ) {\n\t\t\tif ( ! wp_next_scheduled('dbmanager_cron_optimize' ) ) {\n\t\t\t\twp_schedule_event( time(), 'dbmanager_optimize', 'dbmanager_cron_optimize' );\n\t\t\t}\n\t\t}\n\t\twp_clear_scheduled_hook( 'dbmanager_cron_repair' );\n\t\tif( $backup_options['repair_period'] > 0 ) {\n\t\t\tif ( ! wp_next_scheduled( 'dbmanager_cron_repair' ) ) {\n\t\t\t\twp_schedule_event( time(), 'dbmanager_repair', 'dbmanager_cron_repair' );\n\t\t\t}\n\t\t}\n\t}\n\t$path = detect_mysql();\n\n\t// Default Options\n\tif( !isset( $backup_options['backup_email_from'] ) )\n\t{\n\t\t$backup_options['backup_email_from'] = dbmanager_default_options( 'backup_email_from' );\n\t}\n\tif( !isset( $backup_options['backup_email_from_name'] ) )\n\t{\n\t\t$backup_options['backup_email_from_name'] = dbmanager_default_options( 'backup_email_from_name' );\n\t}\n\tif( !isset( $backup_options['backup_email_subject'] ) )\n\t{\n\t\t$backup_options['backup_email_subject'] = dbmanager_default_options( 'backup_email_subject' );\n\t}\n\tif( !isset( $backup_options['hide_admin_notices'] ) )\n\t{\n\t\t$backup_options['hide_admin_notices'] = dbmanager_default_options( 'hide_admin_notices' );\n\t}\n\n?>\n<script type=\"text/javascript\">\n/* <![CDATA[*/\n\tfunction mysqlpath() {\n\t\tjQuery(\"#db_mysqlpath\").val(\"<?php echo $path['mysql']; ?>\");\n\t}\n\tfunction mysqldumppath() {\n\t\tjQuery(\"#db_mysqldumppath\").val(\"<?php echo $path['mysqldump']; ?>\");\n\t}\n/* ]]> */\n</script>\n<?php if( ! empty( $text ) ) { echo $text; } ?>\n<!-- Database Options -->\n<form method=\"post\" action=\"<?php echo admin_url('admin.php?page='.plugin_basename(__FILE__)); ?>\">\n\t<?php wp_nonce_field('wp-dbmanager_options'); ?>\n\t<div class=\"wrap\">\n\t\t<h2><?php _e('Database Options', 'wp-dbmanager'); ?></h2>\n\t\t<h3><?php _e('Paths', 'wp-dbmanager'); ?></h3>\n\t\t<table class=\"form-table\">\n\t\t\t<tr>\n\t\t\t\t<td width=\"20%\" valign=\"top\"><strong><?php _e('Path To mysqldump:', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td width=\"80%\">\n\t\t\t\t\t<input type=\"text\" id=\"db_mysqldumppath\" name=\"db_mysqldumppath\" size=\"60\" maxlength=\"100\" value=\"<?php echo stripslashes($backup_options['mysqldumppath']); ?>\" dir=\"ltr\" />&nbsp;&nbsp;<input type=\"button\" value=\"<?php _e('Auto Detect', 'wp-dbmanager'); ?>\" onclick=\"mysqldumppath();\" />\n\t\t\t\t\t<p><?php _e('The absolute path to mysqldump without trailing slash. If unsure, please email your server administrator about this.', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('Path To mysql:', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<input type=\"text\" id=\"db_mysqlpath\" name=\"db_mysqlpath\" size=\"60\" maxlength=\"100\" value=\"<?php echo stripslashes($backup_options['mysqlpath']); ?>\" dir=\"ltr\" />&nbsp;&nbsp;<input type=\"button\" value=\"<?php _e('Auto Detect', 'wp-dbmanager'); ?>\" onclick=\"mysqlpath();\" />\n\t\t\t\t\t<p><?php _e('The absolute path to mysql without trailing slash. If unsure, please email your server administrator about this.', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('Path To Backup:', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<input type=\"text\" name=\"db_path\" size=\"60\" maxlength=\"100\" value=\"<?php echo stripslashes($backup_options['path']); ?>\" dir=\"ltr\" />\n\t\t\t\t\t<p><?php _e('The absolute path to your database backup folder without trailing slash. Make sure the folder is writable.', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('Maximum Backup Files:', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<input type=\"text\" name=\"db_max_backup\" size=\"5\" maxlength=\"5\" value=\"<?php echo stripslashes($backup_options['max_backup']); ?>\" />\n\t\t\t\t\t<p><?php _e('The maximum number of database backup files that is allowed in the backup folder as stated above. The oldest database backup file is always deleted in order to maintain this value. This is to prevent the backup folder from getting too large.', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\n\t\t<h3><?php _e('Note', 'wp-dbmanager'); ?></h3>\n\t\t<table class=\"form-table\">\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<strong><?php _e('Windows Server', 'wp-dbmanager'); ?></strong><br />\n\t\t\t\t\t<?php _e('For mysqldump path, you can try \\'<strong>mysqldump.exe</strong>\\'.', 'wp-dbmanager'); ?><br />\n\t\t\t\t\t<?php _e('For mysql path, you can try \\'<strong>mysql.exe</strong>\\'.', 'wp-dbmanager'); ?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<strong><?php _e('Linux Server', 'wp-dbmanager'); ?></strong><br />\n\t\t\t\t\t<?php _e('For mysqldump path, normally is just \\'<strong>mysqldump</strong>\\'.', 'wp-dbmanager'); ?><br />\n\t\t\t\t\t<?php _e('For mysql path, normally is just \\'<strong>mysql</strong>\\'.', 'wp-dbmanager'); ?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<strong><?php _e('Note', 'wp-dbmanager'); ?></strong><br />\n\t\t\t\t\t<?php _e('The \\'Auto Detect\\' function does not work for some servers. If it does not work for you, please contact your server administrator for the MYSQL and MYSQL DUMP paths.', 'wp-dbmanager'); ?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\n\t\t<h3><?php _e('Automatic Scheduling', 'wp-dbmanager'); ?></h3>\n\t\t<table class=\"form-table\">\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('Automatic Backing Up Of DB:', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php\n\t\t\t\t\t\t_e('Next backup date: ', 'wp-dbmanager');\n\t\t\t\t\t\tif(wp_next_scheduled('dbmanager_cron_backup')) {\n\t\t\t\t\t\t\techo '<strong>'.mysql2date(sprintf(__('%s @ %s', 'wp-dbmanager'), get_option('date_format'), get_option('time_format')), gmdate('Y-m-d H:i:s', (wp_next_scheduled('dbmanager_cron_backup') + (get_option('gmt_offset') * 3600)))).'</strong>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_e('N/A', 'wp-dbmanager');\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<?php _e('Every', 'wp-dbmanager'); ?>&nbsp;<input type=\"text\" name=\"db_backup\" size=\"3\" maxlength=\"5\" value=\"<?php echo intval($backup_options['backup']); ?>\" />&nbsp;\n\t\t\t\t\t\t<select name=\"db_backup_period\" size=\"1\">\n\t\t\t\t\t\t\t<option value=\"0\"<?php selected('0', $backup_options['backup_period']); ?>><?php _e('Disable', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t\t<option value=\"60\"<?php selected('60', $backup_options['backup_period']); ?>><?php _e('Minutes(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t\t<option value=\"3600\"<?php selected('3600', $backup_options['backup_period']); ?>><?php _e('Hour(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t\t<option value=\"86400\"<?php selected('86400', $backup_options['backup_period']); ?>><?php _e('Day(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t\t<option value=\"604800\"<?php selected('604800', $backup_options['backup_period']); ?>><?php _e('Week(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t\t<option value=\"18144000\"<?php selected('18144000', $backup_options['backup_period']); ?>><?php _e('Month(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t</select>&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t<?php _e('Gzip', 'wp-dbmanager'); ?>\n\t\t\t\t\t\t<select name=\"db_backup_gzip\" size=\"1\">\n\t\t\t\t\t\t\t<option value=\"0\"<?php selected('0', $backup_options['backup_gzip']); ?>><?php _e('No', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t\t<option value=\"1\"<?php selected('1', $backup_options['backup_gzip']); ?>><?php _e('Yes', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p><?php _e('WP-DBManager can automatically backup your database after a certain period.', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('Automatic Optimizing Of DB:', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php\n\t\t\t\t\t\t_e('Next optimize date: ', 'wp-dbmanager');\n\t\t\t\t\t\tif(wp_next_scheduled('dbmanager_cron_optimize')) {\n\t\t\t\t\t\t\techo '<strong>'.mysql2date(sprintf(__('%s @ %s', 'wp-dbmanager'), get_option('date_format'), get_option('time_format')), gmdate('Y-m-d H:i:s', (wp_next_scheduled('dbmanager_cron_optimize') + (get_option('gmt_offset') * 3600)))).'</strong>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_e('N/A', 'wp-dbmanager');\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t\t<p>\n\t\t\t\t\t<?php _e('Every', 'wp-dbmanager'); ?>&nbsp;<input type=\"text\" name=\"db_optimize\" size=\"3\" maxlength=\"5\" value=\"<?php echo intval($backup_options['optimize']); ?>\" />&nbsp;\n\t\t\t\t\t<select name=\"db_optimize_period\" size=\"1\">\n\t\t\t\t\t\t<option value=\"0\"<?php selected('0', $backup_options['optimize_period']); ?>><?php _e('Disable', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"60\"<?php selected('60', $backup_options['optimize_period']); ?>><?php _e('Minutes(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"3600\"<?php selected('3600', $backup_options['optimize_period']); ?>><?php _e('Hour(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"86400\"<?php selected('86400', $backup_options['optimize_period']); ?>><?php _e('Day(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"604800\"<?php selected('604800', $backup_options['optimize_period']); ?>><?php _e('Week(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"18144000\"<?php selected('18144000', $backup_options['optimize_period']); ?>><?php _e('Month(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t</select>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p><?php _e('WP-DBManager can automatically optimize your database after a certain period.', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('Automatic Repairing Of DB:', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php\n\t\t\t\t\t\t_e('Next repair date: ', 'wp-dbmanager');\n\t\t\t\t\t\tif(wp_next_scheduled('dbmanager_cron_repair')) {\n\t\t\t\t\t\t\techo '<strong>'.mysql2date(sprintf(__('%s @ %s', 'wp-dbmanager'), get_option('date_format'), get_option('time_format')), gmdate('Y-m-d H:i:s', (wp_next_scheduled('dbmanager_cron_repair') + (get_option('gmt_offset') * 3600)))).'</strong>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_e('N/A', 'wp-dbmanager');\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t\t<p>\n\t\t\t\t\t<?php _e('Every', 'wp-dbmanager'); ?>&nbsp;<input type=\"text\" name=\"db_repair\" size=\"3\" maxlength=\"5\" value=\"<?php echo intval($backup_options['repair']); ?>\" />&nbsp;\n\t\t\t\t\t<select name=\"db_repair_period\" size=\"1\">\n\t\t\t\t\t\t<option value=\"0\"<?php selected('0', $backup_options['repair_period']); ?>><?php _e('Disable', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"60\"<?php selected('60', $backup_options['repair_period']); ?>><?php _e('Minutes(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"3600\"<?php selected('3600', $backup_options['repair_period']); ?>><?php _e('Hour(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"86400\"<?php selected('86400', $backup_options['repair_period']); ?>><?php _e('Day(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"604800\"<?php selected('604800', $backup_options['repair_period']); ?>><?php _e('Week(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"18144000\"<?php selected('18144000', $backup_options['repair_period']); ?>><?php _e('Month(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t</select>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p><?php _e('WP-DBManager can automatically repair your database after a certain period.', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\n\t\t<h3><?php _e('Backup Email Options', 'wp-dbmanager'); ?></h3>\n\t\t<table class=\"form-table\">\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('To', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<input type=\"text\" name=\"db_backup_email\" size=\"30\" maxlength=\"250\" placeholder=\"<?php _e ( 'To E-mail', 'wp-dbmanager' ); ?>\"  value=\"<?php echo esc_attr( stripslashes( $backup_options['backup_email'] ) ) ?>\" dir=\"ltr\" />\n\t\t\t\t\t</p>\n\t\t\t\t\t<p><?php _e('(Leave blank to disable this feature)', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('From', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<input type=\"text\" name=\"db_backup_email_from_name\" size=\"60\" maxlength=\"250\" placeholder=\"<?php _e ( 'From Name', 'wp-dbmanager' ); ?>\" value=\"<?php echo esc_attr( stripslashes( $backup_options['backup_email_from_name'] ) ) ?>\" dir=\"ltr\" />&nbsp;\n\t\t\t\t\t\t&lt;<input type=\"text\" name=\"db_backup_email_from\" size=\"30\" maxlength=\"250\" placeholder=\"<?php _e ( 'From E-mail', 'wp-dbmanager' ); ?>\"  value=\"<?php echo esc_attr( stripslashes( $backup_options['backup_email_from'] ) ) ?>\" dir=\"ltr\" />&gt;\n\t\t\t\t\t</p>\n\t\t\t\t\t<p><?php _e('(Leave blank to use the default)', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('Subject:', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<input type=\"text\" name=\"db_backup_email_subject\" size=\"90\" maxlength=\"255\" placeholder=\"<?php _e ( 'Subject', 'wp-dbmanager' ); ?>\"  value=\"<?php echo esc_attr( stripslashes( $backup_options['backup_email_subject'] ) ) ?>\" dir=\"ltr\" />\n\t\t\t\t\t</p>\n\t\t\t\t\t<p><?php _e('(Leave blank to use the default)', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\n\t\t<h3><?php _e('Miscellaneous Options', 'wp-dbmanager'); ?></h3>\n\t\t<table class=\"form-table\">\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('Hide Admin Notices', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<input type=\"radio\" name=\"db_hide_admin_notices\" value=\"1\"<?php echo (intval( $backup_options['hide_admin_notices'] ) === 1 ? ' checked=\"checked\"' : '' ); ?> />&nbsp;<?php _e('Yes', 'wp-dbmanager'); ?>\n\t\t\t\t\t\t<input type=\"radio\" name=\"db_hide_admin_notices\" value=\"0\"<?php echo (intval( $backup_options['hide_admin_notices'] ) === 0 ? ' checked=\"checked\"' : '' ); ?> />&nbsp;<?php _e('No', 'wp-dbmanager'); ?>\n\t\t\t\t\t</p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\n\t\t<p class=\"submit\">\n\t\t\t<input type=\"submit\" name=\"Submit\" class=\"button\" value=\"<?php _e('Save Changes', 'wp-dbmanager'); ?>\" />\n\t\t</p>\n\t</div>\n</form>\n<?php\n}\n?>"], "fixing_code": ["# WP-DBManager\nContributors: GamerZ  \nDonate link: http://lesterchan.net/site/donation/  \nTags: database, manage, wp-dbmanager, manager, table, optimize, backup, queries, query, drop, empty, tables, table, run, repair, cron, schedule, scheduling, automatic  \nRequires at least: 3.9  \nTested up to: 4.0  \nStable tag: 2.72  \n\nManages your WordPress database.\n\n## Description\nAllows you to optimize database, repair database, backup database, restore database, delete backup database , drop/empty tables and run selected queries. Supports automatic scheduling of backing up, optimizing and repairing of database.\n\n### Build Status\n[![Build Status](https://travis-ci.org/lesterchan/wp-dbmanager.svg?branch=master)](https://travis-ci.org/lesterchan/wp-dbmanager)\n\n### Development\n* [https://github.com/lesterchan/wp-dbmanager](https://github.com/lesterchan/wp-dbmanager \"https://github.com/lesterchan/wp-dbmanager\")\n\n### Translations\n* [http://dev.wp-plugins.org/browser/wp-dbmanager/i18n/](http://dev.wp-plugins.org/browser/wp-dbmanager/i18n/ \"http://dev.wp-plugins.org/browser/wp-dbmanager/i18n/\")\n\n### Credits\n* Plugin icon by [Freepik](http://www.freepik.com) from [Flaticon](http://www.flaticon.com)\n\n### Donations\n* I spent most of my free time creating, updating, maintaining and supporting these plugins, if you really love my plugins and could spare me a couple of bucks, I will really appericiate it. If not feel free to use it without any obligations.\n\n### Disclaimer\n* Note that this plugin passes your datababase password via --password in the command line of mysqldump. This is convenient but as a trade off, it is insecure.\n* On some systems, your password becomes visible to system status programs such as ps that may be invoked by other users to display command lines. MySQL clients typically overwrite the command-line password argument with zeros during their initialization sequence. However, there is still a brief interval during which the value is visible. Also, on some systems this overwriting strategy is ineffective and the password remains visible to ps. Source: [End-User Guidelines for Password Security](http://dev.mysql.com/doc/refman/5.5/en/password-security-user.html)\n* If this is a concern to you, I recommend another database backup plugin called [WP-DB-Backup](https://wordpress.org/plugins/wp-db-backup/)\n* To know about the difference between WP-DBManager and WP-DB-backup, checkout __What is the difference between WP-DBManager and WP-DB-Backup?__ in the [FAQ section](https://wordpress.org/plugins/wp-dbmanager/faq/).\n\n## Changelog\n### Version 2.72\n* FIXED: Uses escapeshellcmd() to escape shell commands\n* FIXED: Do not allow LOAD_FILE to be run\n* FIXED: Uses dbmanager_is_valid_path() to check for mysql and mysqldump path. Fixes arbitrary command injection using backup path. Props Larry W. Cashdollari.\n* FIXED: Uses realpath() to check for backup path. Fixes arbitrary command injection using backup path. Props Larry W. Cashdollari.\n\n### Version 2.71\n* NEW: Bump to 4.0\n\n### Version 2.70\n* New: Uses WordPress 3.9 Dashicons\n* NEW: Allow you to hide admin notices in the DB Options page\n* NEW: Allow Multisite Network Activate\n* NEW: Uses WordPress uninstall.php file to uninstall the plugin\n* NEW: Uses wp_mail() to send email instead of PHP mail()\n* NEW: New From E-mail, From Name & Subject template\n* FIXED: Issues with email from field if site title contains , (comma)\n* FIXED: Notices\n\n### Version 2.65\n* FIXED: Set default character set to UTF-8. Props Karsonito\n\n### Version 2.64\n* FIXED: Use intval() instead of is_int() when checking for port number. Props [Webby Scots](http://webbyscots.com/ \"Webby Scots\")\n\n### Version 2.63 (03-05-2011)\n* NEW: Added Auto Repair Functionality\n* NEW: Added nonce To All Forms For Added Security\n\n### Version 2.61 (30-04-2011)\n* FIXED: Checks File Extension And Sanitise File Name That Is Pass Through The URL When Downloading Database File. Props to [Joakim Jardenberg](http://jardenberg.se \"Joakim Jardenberg\"), [Jonas Nordstram](http://jonasnordstrom.se \"Jonas Nordstram\"), [Andreas Viklund](http://andreasviklund.com/ \"Andreas Viklund\")\n\n### Version 2.60 (01-12-2009)\n* FIXED: Bug In Cron Backup On Windows Server\n\n### Version 2.50 (01-06-2009)\n* NEW: Works For WordPress 2.8 Only\n* NEW: Uses jQuery Framework\n* NEW: Ensure That .htaccess Is In Backup Folder By Informing The User If It Is NOT There\n* NEW: Use _n() Instead Of __ngettext() And _n_noop() Instead Of __ngettext_noop()\n* FIXED: Uses $_SERVER['PHP_SELF'] With plugin_basename(__FILE__) Instead Of Just $_SERVER['REQUEST_URI']\n\n### Version 2.40 (12-12-2008)\n* NEW: Works For WordPress 2.7 Only\n* NEW: Load Admin JS And CSS Only In WP-DBManager Admin Pages\n* NEW: Added database-admin-css.css For WP-DBManager Admin CSS Styles\n* NEW: Uses admin_url(), plugins_url() And site_url()\n* NEW: Better Translation Using __ngetext() by Anna Ozeritskaya\n* NEW: Right To Left Language Support by Kambiz R. Khojasteh\n* FIXED: SSL Support\n* FIXED: Bug In Downloading Backups In Other Languages by Kambiz R. Khojasteh\n* FIXED: Bug In Backup/Restore On Windows Server When Path To mysqldump/mysql Or Backup File Contains Space Kambiz R. Khojasteh\n* FIXED: In database-manage.php, $nice_file_date Was Calculated More Than Once by Kambiz R. Khojasteh\n* FIXED: Returning Only DBManager Cron Schedules\n\n### Version 2.31 (16-07-2008)\n* NEW: Works For WordPress 2.6\n* FIXED: Unable To Optimize Or Repair Tables If Table Name Contains - (dash)\n\n### Version 2.30 (01-06-2008)\n* NEW: Uses /wp-dbmanager/ Folder Instead Of /dbmanager/\n* NEW: Uses wp-dbmanager.php Instead Of dbmanager.php\n* NEW: Added Minute(s) Option To Backup And Optimize Cron Jobs\n* NEW: Uses GiB, MiB, KiB Instead Of GB, MB, KB\n\n### Version 2.20 (01-10-2007)\n* NEW: Added --skip-lock-tables Argument When Backing Up Database\n* NEW: Limit The Maximum Number Of Backup Files In The Backup Folder\n* NEW: Ability To Uninstall WP-DBManager\n\n### Version 2.11 (01-06-2007)\n* NEW: Sort Database Backup Files By Date In Descending Order\n* NEW: Added Repair Database Feature\n* NEW: Automatic Scheduling Of Backing Up And Optimizing Of Database\n\n### Version 2.10 (01-02-2007)\n* NEW: Works For WordPress 2.1 Only\n* NEW: Removed database-config.php\n* NEW: Localize WP-DBManager\n* NEW: Added The Ability To Auto Detect MYSQL And MYSQL Dump Path\n\n### Version 2.05 (01-06-2006)\n* FIXED: Database Table Names Not Appearing Correctly\n* NEW: DBManager Administration Panel Is XHTML 1.0 Transitional\n\n### Version 2.04 (10-05-2006)\n* FIXED: Unable To Download Backup DB Due To Header Sent Error\n* FIXED: Some XHTML Code Fixes\n\n### Version 2.03 (01-04-2006)\n* FIXED: Run Query Box Too Big\n* FIXED: Header Sent Error\n* FIXED: Extra Slashes For Mysql/Mysql Dump Path\n* FIXED: Mismatch Date Due To GMT\n\n### Version 2.02 (01-03-2006)\n* NEW: Improved On 'manage_database' Capabilities\n* NEW: Added GigaBytes To File Size\n* NEW: Added ALTER Statement To Allowed Queries\n* NEW: Able To Empty/Drop Tables\n* NEW: Able To EMail Database Backup File\n* NEW: Splitted database-manager.php Into Individual Files\n* NEW: Merge Restore And Delete Backup Database\n* NEW: Included .htaccess File To Protect Backup Folder\n* NEW: Checking Of Backup Status\n* FIXED: Using Old Method To Add Submenu\n* FIXED: PHP Short Tags\n* FIXED: Redirect Back To The Same Page Instead Of Manage Database Page After Submitting Form\n\n### Version 2.01 (01-02-2006)\n* NEW: Added 'manage_database' Capabilities To Administrator Role\n\n### Version 2.00 (01-01-2006)\n* NEW: Compatible With WordPress 2.0 Only\n* NEW: GPL License Added\n\n## Installation\n\n1. Open `wp-content/plugins` Folder\n2. Put: `Folder: wp-dbmanager`\n3. Activate `WP-DBManager` Plugin\n4. Rename `htaccess.txt` to `.htaccess` file in `Folder: wp-content/plugins/wp-dbmanager`\n5. The script will automatically create a folder called `backup-db` in the wp-content folder if that folder is writable. If it is not created, please create it and CHMOD it to 777\n6. Open `Folder: wp-content/backup-db`\n7. Move the `.htaccess` file from `Folder: wp-content/plugins/wp-dbmanager` to `Folder: wp-content/backup-db`\n8. Go to `WP-Admin -> Database -> DB Options` to configure the database options.\n\n## Upgrading\n\n1. Deactivate `WP-DBManager` Plugin\n2. Open `wp-content/plugins` Folder\n3. Put/Overwrite: `Folder: wp-dbmanager`\n4. Activate `WP-DBManager` Plugin\n5. Go to `WP-Admin -> Database -> DB Options` to re-configure the database options.\n\n## Upgrade Notice\n\nN/A\n\n## Screenshots\n\n1. Admin - Backup DB\n2. Admin - Empty/Drop Tables In DB\n3. Admin - DB Information\n4. Admin - Manage DB\n5. Admin - Optimize DB\n6. Admin - DB Options\n7. Admin - DB Options\n8. Admin - Repair DB\n9. Admin - Run Query in DB\n\n## Frequently Asked Questions\n\n### My database is not backed up / My backup file is 0Kb\n* Ensure that your host allows you to access mysqldump. You can try to narrow the problem by Debugging via SSH:\n1. In `wp-dbmanager.php`\n2. Find `check_backup_files();` on line 210\n3. Add below it `echo $command;`\n4. Go to `WP-Admin -> Database -> Backup`\n5. Click `Backup`\n6. It should print some debugging statements\n7. Copy that line than run it in SSH\n8. If you need help on SSH contact your host or google for more info\n\n### What is the difference between WP-DBManager and WP-DB-Backup?\n* WP-DBManager uses `mysqldump` application to generate the backup and `mysql` application to restore them via shell.\n* WP-DB-Backup uses PHP to generate the backup. In some cases WP-DB-Backup will work better for you because it requires less permissions. Not all host allows you to access mysqldump/mysql directly via shell.\n* WP-DBManager allows you to have automatic optimizing and repairing of database on top of backing up of database.\n\n### Why do I get the message \"Warning: Your backup folder MIGHT be visible to the public!\"?\n* Ensure that you have renamed `htaccess.txt` to `.htaccess` and placed it in your backup folder (defaults to `wp-content/backup-db/`)\n* If you are 100% sure you have did that and have verfied that the folder no longer is accessible to the public by visiting the URL `http://yousite.com/wp-content/backup-db/`, you can safely disable the notice by going to `WP-Admin -> Database -> DB Options` and set `Hide Admin Notices` to `Yes`.\n", "<?php\n### Check Whether User Can Manage Database\nif(!current_user_can('manage_database')) {\n\tdie('Access Denied');\n}\n\n\n### Variables Variables Variables\n$base_name = plugin_basename('wp-dbmanager/database-manager.php');\n$base_page = 'admin.php?page='.$base_name;\n$current_date = mysql2date(sprintf(__('%s @ %s', 'wp-dbmanager'), get_option('date_format'), get_option('time_format')), gmdate('Y-m-d H:i:s', current_time('timestamp')));\n$backup = array();\n$backup_options = get_option('dbmanager_options');\n$backup['date'] = current_time('timestamp');\n$backup['mysqldumppath'] = $backup_options['mysqldumppath'];\n$backup['mysqlpath'] = $backup_options['mysqlpath'];\n$backup['path'] = $backup_options['path'];\n$backup['password'] = str_replace('$', '\\$', DB_PASSWORD);\n$backup['charset'] = ' --default-character-set=\"utf8\"';\n\n### Form Processing\nif(!empty($_POST['do'])) {\n\t$text = '';\n\t// Decide What To Do\n\tswitch($_POST['do']) {\n\t\tcase __('Backup', 'wp-dbmanager'):\n\t\t\tcheck_admin_referer('wp-dbmanager_backup');\n\t\t\t$brace = (substr(PHP_OS, 0, 3) == 'WIN') ? '\"' : '';\n\t\t\t$backup['host'] = DB_HOST;\n\t\t\t$backup['port'] = '';\n\t\t\t$backup['sock'] = '';\n\t\t\tif(strpos(DB_HOST, ':') !== false) {\n\t\t\t\t$db_host = explode(':', DB_HOST);\n\t\t\t\t$backup['host'] = $db_host[0];\n\t\t\t\tif(intval($db_host[1]) != 0) {\n\t\t\t\t\t$backup['port'] = ' --port=\"'.intval($db_host[1]).'\"';\n\t\t\t\t} else {\n\t\t\t\t\t$backup['sock'] = ' --socket=\"'.$db_host[1].'\"';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$gzip = intval($_POST['gzip']);\n\t\t\tif($gzip == 1) {\n\t\t\t\t$backup['filename'] = $backup['date'].'_-_'.DB_NAME.'.sql.gz';\n\t\t\t\t$backup['filepath'] = $backup['path'].'/'.$backup['filename'];\n\t\t\t\t$backup['command'] = escapeshellcmd( $brace.$backup['mysqldumppath'].$brace.' --force --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].$backup['charset'].' --add-drop-table --skip-lock-tables '.DB_NAME ).' | gzip > '.escapeshellcmd( $brace.$backup['filepath'].$brace );\n\t\t\t} else {\n\t\t\t\t$backup['filename'] = $backup['date'].'_-_'.DB_NAME.'.sql';\n\t\t\t\t$backup['filepath'] = $backup['path'].'/'.$backup['filename'];\n\t\t\t\t$backup['command'] = escapeshellcmd( $brace.$backup['mysqldumppath'].$brace.' --force --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].$backup['charset'].' --add-drop-table --skip-lock-tables '.DB_NAME ).' > '.escapeshellcmd( $brace.$backup['filepath'].$brace );\n\t\t\t}\n\t\t\t$error = execute_backup($backup['command']);\n\t\t\tif(!is_writable($backup['path'])) {\n\t\t\t\t$text = '<p style=\"color: red;\">'.sprintf(__('Database Failed To Backup On \\'%s\\'. Backup Folder Not Writable.', 'wp-dbmanager'), $current_date).'</p>';\n\t\t\t} elseif(filesize($backup['filepath']) == 0) {\n\t\t\t\tunlink($backup['filepath']);\n\t\t\t\t$text = '<p style=\"color: red;\">'.sprintf(__('Database Failed To Backup On \\'%s\\'. Backup File Size Is 0KB.', 'wp-dbmanager'), $current_date).'</p>';\n\t\t\t} elseif(!is_file($backup['filepath'])) {\n\t\t\t\t$text = '<p style=\"color: red;\">'.sprintf(__('Database Failed To Backup On \\'%s\\'. Invalid Backup File Path.', 'wp-dbmanager'), $current_date).'</p>';\n\t\t\t} elseif($error) {\n\t\t\t\t$text = '<p style=\"color: red;\">'.sprintf(__('Database Failed To Backup On \\'%s\\'.', 'wp-dbmanager'), $current_date).'</p>';\n\t\t\t} else {\n\t\t\t\t$text = '<p style=\"color: green;\">'.sprintf(__('Database Backed Up Successfully On \\'%s\\'.', 'wp-dbmanager'), $current_date).'</p>';\n\t\t\t}\n\t\t\tbreak;\n\t}\n}\n\n\n### Backup File Name\n$backup['filename'] = $backup['date'].'_-_'.DB_NAME.'.sql';\n\n\n### MYSQL Base Dir\n$status_count = 0;\n$stats_function_disabled = 0;\n?>\n<?php if(!empty($text)) { echo '<!-- Last Action --><div id=\"message\" class=\"updated fade\"><p>'.$text.'</p></div>'; } ?>\n<!-- Checking Backup Status -->\n<div class=\"wrap\">\n\t<h2><?php _e('Backup Database', 'wp-dbmanager'); ?></h2>\n\t<h3><?php _e('Checking Backup Status', 'wp-dbmanager'); ?></h3>\n\t<p>\n\t\t<?php _e('Checking Backup Folder', 'wp-dbmanager'); ?> <span dir=\"ltr\">(<strong><?php echo stripslashes($backup['path']); ?></strong>)</span> ...<br />\n\t\t<?php\n\t\t\tif( realpath( $backup['path'] ) === false ) {\n\t\t\t\techo '<p style=\"color: red;\">' . sprintf( __( '%s is not a valid backup path', 'wp-dbmanager' ), stripslashes( $backup['path'] ) ) . '</p>';\n\t\t\t\t$status_count++;\n\t\t\t} else {\n\t\t\t\tif (@is_dir(stripslashes($backup['path']))) {\n\t\t\t\t\techo '<p style=\"color: green;\">' . __('Backup folder exists', 'wp-dbmanager') . '</p>';\n\t\t\t\t\t$status_count++;\n\t\t\t\t} else {\n\t\t\t\t\techo '<p style=\"color: red;\">' . sprintf(__('Backup folder does NOT exist. Please create \\'backup-db\\' folder in \\'%s\\' folder and CHMOD it to \\'777\\' or change the location of the backup folder under DB Option.', 'wp-dbmanager'), WP_CONTENT_DIR) . '</p>';\n\t\t\t\t}\n\t\t\t\tif (@is_writable(stripslashes($backup['path']))) {\n\t\t\t\t\techo '<p style=\"color: green;\">' . __('Backup folder is writable', 'wp-dbmanager') . '</p>';\n\t\t\t\t\t$status_count++;\n\t\t\t\t} else {\n\t\t\t\t\techo '<p style=\"color: red;\">' . __('Backup folder is NOT writable. Please CHMOD it to \\'777\\'.', 'wp-dbmanager') . '</p>';\n\t\t\t\t}\n\t\t\t}\n\t\t?>\n\t</p>\n\t<p>\n\t\t<?php\n\t\t\tif( dbmanager_is_valid_path( $backup['mysqldumppath'] ) === 0 ) {\n\t\t\t\techo '<p style=\"color: red;\">' . sprintf( __( '%s is not a valid backup mysqldump path', 'wp-dbmanager' ), stripslashes( $backup['mysqldumppath'] ) ) . '</p>';\n\t\t\t\t$status_count++;\n\t\t\t} else {\n\t\t\t\tif (@file_exists(stripslashes($backup['mysqldumppath']))) {\n\t\t\t\t\techo __('Checking MYSQL Dump Path', 'wp-dbmanager') . ' <span dir=\"ltr\">(<strong>' . stripslashes($backup['mysqldumppath']) . '</strong>)</span> ...<br />';\n\t\t\t\t\techo '<p style=\"color: green;\">' . __('MYSQL dump path exists.', 'wp-dbmanager') . '</p>';\n\t\t\t\t\t$status_count++;\n\t\t\t\t} else {\n\t\t\t\t\techo __('Checking MYSQL Dump Path', 'wp-dbmanager') . ' ...<br />';\n\t\t\t\t\techo '<p style=\"color: red;\">' . __('MYSQL dump path does NOT exist. Please check your mysqldump path under DB Options. If uncertain, contact your server administrator.', 'wp-dbmanager') . '</p>';\n\t\t\t\t}\n\t\t\t}\n\t\t?>\n\t</p>\n\t<p>\n\t\t<?php\n\t\t\tif( dbmanager_is_valid_path( $backup['mysqlpath'] ) === 0 ) {\n\t\t\t\techo '<p style=\"color: red;\">' . sprintf( __( '%s is not a valid backup mysql path', 'wp-dbmanager' ), stripslashes( $backup['mysqlpath'] ) ) . '</p>';\n\t\t\t\t$status_count++;\n\t\t\t} else {\n\t\t\t\tif (@file_exists(stripslashes($backup['mysqlpath']))) {\n\t\t\t\t\techo __('Checking MYSQL Path', 'wp-dbmanager') . ' <span dir=\"ltr\">(<strong>' . stripslashes($backup['mysqlpath']) . '</strong>)</span> ...<br />';\n\t\t\t\t\techo '<p style=\"color: green;\">' . __('MYSQL path exists.', 'wp-dbmanager') . '</p>';\n\t\t\t\t\t$status_count++;\n\t\t\t\t} else {\n\t\t\t\t\techo __('Checking MYSQL Path', 'wp-dbmanager') . ' ...<br />';\n\t\t\t\t\techo '<p style=\"color: red;\">' . __('MYSQL path does NOT exist. Please check your mysql path under DB Options. If uncertain, contact your server administrator.', 'wp-dbmanager') . '</p>';\n\t\t\t\t}\n\t\t\t}\n\t\t?>\n\t</p>\n\t<p>\n\t\t<?php _e('Checking PHP Functions', 'wp-dbmanager'); ?> <span dir=\"ltr\">(<strong>passthru()</strong>, <strong>system()</strong> <?php _e('and', 'wp-dbmanager'); ?> <strong>exec()</strong>)</span> ...<br />\n\t\t<?php\n\t\t\tif(function_exists('passthru')) {\n\t\t\t\techo '<p style=\"color: green;\"><span dir=\"ltr\">passthru()</span> '.__('enabled', 'wp-dbmanager').'.</p>';\n\t\t\t\t$status_count++;\n\t\t\t} else {\n\t\t\t\techo '<p style=\"color: red;\"><span dir=\"ltr\">passthru()</span> '.__('disabled', 'wp-dbmanager').'.</p>';\n\t\t\t\t$stats_function_disabled++;\n\t\t\t}\n\t\t\tif(function_exists('system')) {\n\t\t\t\techo '<p style=\"color: green;\"><span dir=\"ltr\">system()</span> '.__('enabled', 'wp-dbmanager').'.</p>';\n\t\t\t} else {\n\t\t\t\techo '<p style=\"color: red;\"><span dir=\"ltr\">system()</span> '.__('disabled', 'wp-dbmanager').'.</p>';\n\t\t\t\t$stats_function_disabled++;\n\t\t\t}\n\t\t\tif(function_exists('exec')) {\n\t\t\t\techo '<p style=\"color: green;\"><span dir=\"ltr\">exec()</span> '.__('enabled', 'wp-dbmanager').'.</p>';\n\t\t\t} else {\n\t\t\t\techo '<p style=\"color: red;\"><span dir=\"ltr\">exec()</span> '.__('disabled', 'wp-dbmanager').'.</p>';\n\t\t\t\t$stats_function_disabled++;\n\t\t\t}\n\t\t?>\n\t</p>\n\t<p>\n\t\t<?php\n\t\t\tif($status_count == 5) {\n\t\t\t\techo '<strong><p style=\"color: green;\">'.__('Excellent. You Are Good To Go.', 'wp-dbmanager').'</p></strong>';\n\t\t\t} else if($stats_function_disabled == 3) {\n\t\t\t\techo '<strong><p style=\"color: red;\">'.__('I\\'m sorry, your server administrator has disabled passthru(), system() and exec(), thus you cannot use this backup script. You may consider using the default WordPress database backup script instead.', 'wp-dbmanager').'</p></strong>';\n\t\t\t} else {\n\t\t\t\techo '<strong><p style=\"color: red;\">'.__('Please Rectify The Error Highlighted In Red Before Proceeding On.', 'wp-dbmanager').'</p></strong>';\n\t\t\t}\n\t\t?>\n\t</p>\n\t<p><i><?php _e('Note: The checking of backup status is still undergoing testing, it may not be accurate.', 'wp-dbmanager'); ?></i></p>\n</div>\n<!-- Backup Database -->\n<form method=\"post\" action=\"<?php echo admin_url('admin.php?page='.plugin_basename(__FILE__)); ?>\">\n\t<?php wp_nonce_field('wp-dbmanager_backup'); ?>\n\t<div class=\"wrap\">\n\t\t<h3><?php _e('Backup Database', 'wp-dbmanager'); ?></h3>\n\t\t<br style=\"clear\" />\n\t\t<table class=\"widefat\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th><?php _e('Option', 'wp-dbmanager'); ?></th>\n\t\t\t\t\t<th><?php _e('Value', 'wp-dbmanager'); ?></th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tr>\n\t\t\t\t<th><?php _e('Database Name:', 'wp-dbmanager'); ?></th>\n\t\t\t\t<td><?php echo DB_NAME; ?></td>\n\t\t\t</tr>\n\t\t\t<tr style=\"background-color: #eee;\">\n\t\t\t\t<th><?php _e('Database Backup To:', 'wp-dbmanager'); ?></th>\n\t\t\t\t<td><span dir=\"ltr\"><?php echo stripslashes($backup['path']); ?></span></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th><?php _e('Database Backup Date:', 'wp-dbmanager'); ?></th>\n\t\t\t\t<td><?php echo mysql2date(sprintf(__('%s @ %s', 'wp-dbmanager'), get_option('date_format'), get_option('time_format')), gmdate('Y-m-d H:i:s', $backup['date'])); ?></td>\n\t\t\t</tr>\n\t\t\t<tr style=\"background-color: #eee;\">\n\t\t\t\t<th><?php _e('Database Backup File Name:', 'wp-dbmanager'); ?></th>\n\t\t\t\t<td><span dir=\"ltr\"><?php echo $backup['filename']; ?></span></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th><?php _e('Database Backup Type:', 'wp-dbmanager'); ?></th>\n\t\t\t\t<td><?php _e('Full (Structure and Data)', 'wp-dbmanager'); ?></td>\n\t\t\t</tr>\n\t\t\t<tr style=\"background-color: #eee;\">\n\t\t\t\t<th><?php _e('MYSQL Dump Location:', 'wp-dbmanager'); ?></th>\n\t\t\t\t<td><span dir=\"ltr\"><?php echo stripslashes($backup['mysqldumppath']); ?></span></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th><?php _e('GZIP Database Backup File?', 'wp-dbmanager'); ?></th>\n\t\t\t\t<td><input type=\"radio\" id=\"gzip-yes\" name=\"gzip\" value=\"1\" />&nbsp;<label for=\"gzip-yes\"><?php _e('Yes', 'wp-dbmanager'); ?></label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type=\"radio\" id=\"gzip-no\" name=\"gzip\" value=\"0\" checked=\"checked\" />&nbsp;<label for=\"gzip-no\"><?php _e('No', 'wp-dbmanager'); ?></label></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td colspan=\"2\" align=\"center\"><input type=\"submit\" name=\"do\" value=\"<?php _e('Backup', 'wp-dbmanager'); ?>\" class=\"button\" />&nbsp;&nbsp;<input type=\"button\" name=\"cancel\" value=\"<?php _e('Cancel', 'wp-dbmanager'); ?>\" class=\"button\" onclick=\"javascript:history.go(-1)\" /></td>\n\t\t\t</tr>\n\t\t</table>\n\t</div>\n</form>\n", "<?php\n### Check Whether User Can Manage Database\nif(!current_user_can('manage_database')) {\n\tdie('Access Denied');\n}\n\n\n### Variables Variables Variables\n$base_name = plugin_basename('wp-dbmanager/database-manager.php');\n$base_page = 'admin.php?page='.$base_name;\n$backup = array();\n$backup_options = get_option('dbmanager_options');\n$backup['date'] = current_time('timestamp');\n$backup['mysqldumppath'] = $backup_options['mysqldumppath'];\n$backup['mysqlpath'] = $backup_options['mysqlpath'];\n$backup['path'] = $backup_options['path'];\n$backup['password'] = str_replace('$', '\\$', DB_PASSWORD);\n$backup['charset'] = ' --default-character-set=\"utf8\"';\n\n\n### Form Processing\nif( !empty( $_POST['do'] ) ) {\n\tcheck_admin_referer('wp-dbmanager_manage');\n\t// Lets Prepare The Variables\n\t$database_file = trim($_POST['database_file']);\n\t$nice_file_date = mysql2date(sprintf(__('%s @ %s', 'wp-dbmanager'), get_option('date_format'), get_option('time_format')), gmdate('Y-m-d H:i:s', substr($database_file, 0, 10)));\n\t$text = '';\n\n\t// Decide What To Do\n\tswitch($_POST['do']) {\n\t\tcase __('Restore', 'wp-dbmanager'):\n\t\t\tif(!empty($database_file)) {\n\t\t\t\t$brace = (substr(PHP_OS, 0, 3) == 'WIN') ? '\"' : '';\n\t\t\t\t$backup['host'] = DB_HOST;\n\t\t\t\t$backup['port'] = '';\n\t\t\t\t$backup['sock'] = '';\n\t\t\t\tif(strpos(DB_HOST, ':') !== false) {\n\t\t\t\t\t$db_host = explode(':', DB_HOST);\n\t\t\t\t\t$backup['host'] = $db_host[0];\n\t\t\t\t\tif(intval($db_host[1]) != 0) {\n\t\t\t\t\t\t$backup['port'] = ' --port=\"'.intval($db_host[1]).'\"';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$backup['sock'] = ' --socket=\"'.$db_host[1].'\"';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(stristr($database_file, '.gz')) {\n\t\t\t\t\t$backup['command'] = 'gunzip < '.escapeshellcmd( $brace.$backup['path'].'/'.$database_file.$brace ).' | '.escapeshellcmd( $brace.$backup['mysqlpath'].$brace.' --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].$backup['charset'].' '.DB_NAME );\n\t\t\t\t} else {\n\t\t\t\t\t$backup['command'] = escapeshellcmd( $brace.$backup['mysqlpath'].$brace.' --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].$backup['charset'].' '.DB_NAME ).' < '.escapeshellcmd( $brace.$backup['path'].'/'.$database_file.$brace );\n\t\t\t\t}\n\t\t\t\tif( realpath( $backup['path'] ) === false ) {\n\t\t\t\t\t$text = '<p style=\"color: red;\">' . sprintf(__('%s is not a valid backup path', 'wp-dbmanager'), stripslashes( $backup['path'] ) ) . '</p>';\n\t\t\t\t} else if( dbmanager_is_valid_path( $backup['mysqlpath'] ) === 0 ) {\n\t\t\t\t\t$text = '<p style=\"color: red;\">' . sprintf(__('%s is not a valid mysql path', 'wp-dbmanager'), stripslashes( $backup['mysqlpath'] ) ) . '</p>';\n\t\t\t\t} else {\n\t\t\t\t\tpassthru( $backup['command'], $error );\n\t\t\t\t}\n\t\t\t\tif($error) {\n\t\t\t\t\t$text = '<p style=\"color: red;\">'.sprintf(__('Database On \\'%s\\' Failed To Restore', 'wp-dbmanager'), $nice_file_date).'</p>';\n\t\t\t\t} else {\n\t\t\t\t\t$text = '<p style=\"color: green;\">'.sprintf(__('Database On \\'%s\\' Restored Successfully', 'wp-dbmanager'), $nice_file_date).'</p>';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$text = '<p style=\"color: red;\">'.__('No Backup Database File Selected', 'wp-dbmanager').'</p>';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase __('E-Mail', 'wp-dbmanager'):\n\t\t\tif(!empty($database_file)) {\n\t\t\t\t$to = ( !empty( $_POST['email_to'] ) ? sanitize_email( $_POST['email_to'] ) : get_option( 'admin_email' ) );\n\n\t\t\t\tif( dbmanager_email_backup( $to, $backup['path'].'/'.$database_file ) ) {\n\t\t\t\t\t$text .= '<p style=\"color: green;\">'.sprintf(__('Database Backup File For \\'%s\\' Successfully E-Mailed To \\'%s\\'', 'wp-dbmanager'), $nice_file_date, $to).'</p>';\n\t\t\t\t} else {\n\t\t\t\t\t$text = '<p style=\"color: red;\">'.sprintf(__('Unable To E-Mail Database Backup File For \\'%s\\' To \\'%s\\'', 'wp-dbmanager'), $nice_file_date, $to).'</p>';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$text = '<p style=\"color: red;\">'.__('No Backup Database File Selected', 'wp-dbmanager').'</p>';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase __('Download', 'wp-dbmanager'):\n\t\t\tif(empty($database_file)) {\n\t\t\t\t$text = '<p style=\"color: red;\">'.__('No Backup Database File Selected', 'wp-dbmanager').'</p>';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase __('Delete', 'wp-dbmanager'):\n\t\t\tif(!empty($database_file)) {\n\t\t\t\tif(is_file($backup['path'].'/'.$database_file)) {\n\t\t\t\t\tif(!unlink($backup['path'].'/'.$database_file)) {\n\t\t\t\t\t\t$text .= '<p style=\"color: red;\">'.sprintf(__('Unable To Delete Database Backup File On \\'%s\\'', 'wp-dbmanager'), $nice_file_date).'</p>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$text .= '<p style=\"color: green;\">'.sprintf(__('Database Backup File On \\'%s\\' Deleted Successfully', 'wp-dbmanager'), $nice_file_date).'</p>';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$text = '<p style=\"color: red;\">'.sprintf(__('Invalid Database Backup File On \\'%s\\'', 'wp-dbmanager'), $nice_file_date).'</p>';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$text = '<p style=\"color: red;\">'.__('No Backup Database File Selected', 'wp-dbmanager').'</p>';\n\t\t\t}\n\t\t\tbreak;\n\t}\n}\n?>\n<?php if(!empty($text)) { echo '<!-- Last Action --><div id=\"message\" class=\"updated\">'.$text.'</div>'; } ?>\n<!-- Manage Backup Database -->\n<form method=\"post\" action=\"<?php echo admin_url('admin.php?page='.plugin_basename(__FILE__)); ?>\">\n\t<?php wp_nonce_field('wp-dbmanager_manage'); ?>\n\t<div class=\"wrap\">\n\t\t<h2><?php _e('Manage Backup Database', 'wp-dbmanager'); ?></h2>\n\t\t<p><?php _e('Choose A Backup Date To E-Mail, Restore, Download Or Delete', 'wp-dbmanager'); ?></p>\n\t\t<table class=\"widefat\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th><?php _e('No.', 'wp-dbmanager'); ?></th>\n\t\t\t\t\t<th><?php _e('Database File', 'wp-dbmanager'); ?></th>\n\t\t\t\t\t<th><?php _e('Date/Time', 'wp-dbmanager'); ?></th>\n\t\t\t\t\t<th><?php _e('Size', 'wp-dbmanager'); ?></th>\n\t\t\t\t\t<th><?php _e('Select', 'wp-dbmanager'); ?></th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<?php\n\t\t\t\t$no = 0;\n\t\t\t\t$totalsize = 0;\n\t\t\t\tif(!is_emtpy_folder($backup['path'])) {\n\t\t\t\t\tif ($handle = opendir($backup['path'])) {\n\t\t\t\t\t\t$database_files = array();\n\t\t\t\t\t\twhile (false !== ($file = readdir($handle))) {\n\t\t\t\t\t\t\tif ($file != '.' && $file != '..' && $file != '.htaccess' && (file_ext($file) == 'sql' || file_ext($file) == 'gz')) {\n\t\t\t\t\t\t\t\t$database_files[] = $file;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclosedir($handle);\n\t\t\t\t\t\tsort($database_files);\n\t\t\t\t\t\tfor($i = (sizeof($database_files)-1); $i > -1; $i--) {\n\t\t\t\t\t\t\tif($no%2 == 0) {\n\t\t\t\t\t\t\t\t$style = '';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$style = ' class=\"alternate\"';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$no++;\n\t\t\t\t\t\t\t$database_text = substr($database_files[$i], 13);\n\t\t\t\t\t\t\t$date_text = mysql2date(sprintf(__('%s @ %s', 'wp-dbmanager'), get_option('date_format'), get_option('time_format')), gmdate('Y-m-d H:i:s', substr($database_files[$i], 0, 10)));\n\t\t\t\t\t\t\t$size_text = filesize($backup['path'].'/'.$database_files[$i]);\n\t\t\t\t\t\t\techo \"<tr$style>\\n\";\n\t\t\t\t\t\t\techo '<td>'.number_format_i18n($no).'</td>';\n\t\t\t\t\t\t\techo \"<td>$database_text</td>\";\n\t\t\t\t\t\t\techo \"<td>$date_text</td>\";\n\t\t\t\t\t\t\techo '<td>'.format_size($size_text).'</td>';\n\t\t\t\t\t\t\techo \"<td><input type=\\\"radio\\\" name=\\\"database_file\\\" value=\\\"$database_files[$i]\\\" /></td>\\n</tr>\\n\";\n\t\t\t\t\t\t\t$totalsize += $size_text;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\techo '<tr><td align=\"center\" colspan=\"5\">'.__('There Are No Database Backup Files Available.', 'wp-dbmanager').'</td></tr>';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\techo '<tr><td align=\"center\" colspan=\"5\">'.__('There Are No Database Backup Files Available.', 'wp-dbmanager').'</td></tr>';\n\t\t\t\t}\n\t\t\t?>\n\t\t\t<tr class=\"thead\">\n\t\t\t\t<th colspan=\"3\"><?php printf(_n('%s Backup File', '%s Backup Files', $no, 'wp-dbmanager'), number_format_i18n($no)); ?></th>\n\t\t\t\t<th><?php echo format_size($totalsize); ?></th>\n\t\t\t\t<th>&nbsp;</th>\n\t\t\t</tr>\n\t\t</table>\n\t\t<table class=\"form-table\">\n\t\t\t<tr>\n\t\t\t\t<td colspan=\"5\" align=\"center\"><label for=\"email_to\"><?php _e('E-mail database backup file to:', 'wp-dbmanager'); ?></label> <input type=\"text\" id=\"email_to\" name=\"email_to\" size=\"30\" maxlength=\"50\" value=\"<?php echo get_option('admin_email'); ?>\" dir=\"ltr\" />&nbsp;&nbsp;<input type=\"submit\" name=\"do\" value=\"<?php _e('E-Mail', 'wp-dbmanager'); ?>\" class=\"button\" /></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td colspan=\"5\" align=\"center\">\n\t\t\t\t\t<input type=\"submit\" name=\"do\" value=\"<?php _e('Download', 'wp-dbmanager'); ?>\" class=\"button\" />&nbsp;&nbsp;\n\t\t\t\t\t<input type=\"submit\" name=\"do\" value=\"<?php _e('Restore', 'wp-dbmanager'); ?>\" onclick=\"return confirm('<?php _e('You Are About To Restore A Database.\\nThis Action Is Not Reversible.\\nAny Data Inserted After The Backup Date Will Be Gone.\\n\\n Choose [Cancel] to stop, [Ok] to restore.', 'wp-dbmanager'); ?>')\" class=\"button\" />&nbsp;&nbsp;\n\t\t\t\t\t<input type=\"submit\" class=\"button\" name=\"do\" value=\"<?php _e('Delete', 'wp-dbmanager'); ?>\" onclick=\"return confirm('<?php _e('You Are About To Delete The Selected Database Backup Files.\\nThis Action Is Not Reversible.\\n\\n Choose [Cancel] to stop, [Ok] to delete.', 'wp-dbmanager'); ?>')\" />&nbsp;&nbsp;\n\t\t\t\t\t<input type=\"button\" name=\"cancel\" value=\"<?php _e('Cancel', 'wp-dbmanager'); ?>\" class=\"button\" onclick=\"javascript:history.go(-1)\" /></td>\n\t\t\t</tr>\n\t\t</table>\n\t</div>\n</form>\n", "<?php\n### Check Whether User Can Manage Database\nif(!current_user_can('manage_database')) {\n\tdie('Access Denied');\n}\n\n\n### Variables Variables Variables\n$base_name = plugin_basename('wp-dbmanager/database-manager.php');\n$base_page = 'admin.php?page='.$base_name;\n$backup = array();\n$backup_options = get_option('dbmanager_options');\n$backup['date'] = current_time('timestamp');\n$backup['mysqldumppath'] = $backup_options['mysqldumppath'];\n$backup['mysqlpath'] = $backup_options['mysqlpath'];\n$backup['path'] = $backup_options['path'];\n\n\n### Form Processing\nif(!empty($_POST['do'])) {\n\t$text = '';\n\t// Decide What To Do\n\tswitch($_POST['do']) {\n\t\tcase __('Run', 'wp-dbmanager'):\n\t\t\tcheck_admin_referer('wp-dbmanager_run');\n\t\t\t$sql_queries2 = trim($_POST['sql_query']);\n\t\t\t$totalquerycount = 0;\n\t\t\t$successquery = 0;\n\t\t\tif($sql_queries2) {\n\t\t\t\t$sql_queries = array();\n\t\t\t\t$sql_queries2 = explode(\"\\n\", $sql_queries2);\n\t\t\t\tforeach($sql_queries2 as $sql_query2) {\n\t\t\t\t\t$sql_query2 = trim(stripslashes($sql_query2));\n\t\t\t\t\t$sql_query2 = preg_replace(\"/[\\r\\n]+/\", '', $sql_query2);\n\t\t\t\t\tif(!empty($sql_query2)) {\n\t\t\t\t\t\t$sql_queries[] = $sql_query2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif($sql_queries) {\n\t\t\t\t\tforeach( $sql_queries as $sql_query ) {\n\t\t\t\t\t\tif ( preg_match( \"/LOAD_FILE/i\", $sql_query ) ) {\n\t\t\t\t\t\t\t$text .= \"<p style=\\\"color: red;\\\">$sql_query</p>\";\n\t\t\t\t\t\t\t$totalquerycount++;\n\t\t\t\t\t\t} elseif( preg_match( \"/^\\\\s*(select|drop|show|grant) /i\", $sql_query ) ) {\n\t\t\t\t\t\t\t$text .= \"<p style=\\\"color: red;\\\">$sql_query</p>\";\n\t\t\t\t\t\t\t$totalquerycount++;\n\t\t\t\t\t\t} else if ( preg_match( \"/^\\\\s*(insert|update|replace|delete|create|alter) /i\", $sql_query ) ) {\n\t\t\t\t\t\t\t$run_query = $wpdb->query( $sql_query );\n\t\t\t\t\t\t\tif( ! $run_query ) {\n\t\t\t\t\t\t\t\t$text .= \"<p style=\\\"color: red;\\\">$sql_query</p>\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$successquery++;\n\t\t\t\t\t\t\t\t$text .= \"<p style=\\\"color: green;\\\">$sql_query</p>\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$totalquerycount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$text .= '<p style=\"color: blue;\">'.number_format_i18n($successquery).'/'.number_format_i18n($totalquerycount).' '.__('Query(s) Executed Successfully', 'wp-dbmanager').'</p>';\n\t\t\t\t} else {\n\t\t\t\t\t$text = '<p style=\"color: red;\">'.__('Empty Query', 'wp-dbmanager').'</p>';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$text = '<p style=\"color: red;\">'.__('Empty Query', 'wp-dbmanager').'</p>';\n\t\t\t}\n\t\t\tbreak;\n\t}\n}\n?>\n<?php if(!empty($text)) { echo '<!-- Last Action --><div id=\"message\" class=\"updated fade\"><p>'.$text.'</p></div>'; } ?>\n<!-- Run SQL Query -->\n<form method=\"post\" action=\"<?php echo admin_url('admin.php?page='.plugin_basename(__FILE__)); ?>\">\n\t<?php wp_nonce_field('wp-dbmanager_run'); ?>\n\t<div class=\"wrap\">\n\t\t<h2><?php _e('Run SQL Query', 'wp-dbmanager'); ?></h2>\n\t\t<br style=\"clear\" />\n\t\t<div>\n\t\t\t<strong><?php _e('Seperate Multiple Queries With A New Line', 'wp-dbmanager'); ?></strong><br />\n\t\t\t<p style=\"color: green;\"><?php _e('Use Only INSERT, UPDATE, REPLACE, DELETE, CREATE and ALTER statements.', 'wp-dbmanager'); ?></p>\n\t\t</div>\n\t\t<table class=\"form-table\">\n\t\t\t<tr>\n\t\t\t\t<td align=\"center\"><textarea cols=\"120\" rows=\"30\" name=\"sql_query\" style=\"width: 99%;\" dir=\"ltr\" ></textarea></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td align=\"center\"><input type=\"submit\" name=\"do\" value=\"<?php _e('Run', 'wp-dbmanager'); ?>\" class=\"button\" />&nbsp;&nbsp;<input type=\"button\" name=\"cancel\" value=\"<?php _e('Cancel', 'wp-dbmanager'); ?>\" class=\"button\" onclick=\"javascript:history.go(-1)\" /></td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<p>\n\t\t\t<?php _e('1. CREATE statement will return an error, which is perfectly normal due to the database class. To confirm that your table has been created check the Manage Database page.', 'wp-dbmanager'); ?><br />\n\t\t\t<?php _e('2. UPDATE statement may return an error sometimes due to the newly updated value being the same as the previous value.', 'wp-dbmanager'); ?><br />\n\t\t\t<?php _e('3. ALTER statement will return an error because there is no value returned.', 'wp-dbmanager'); ?>\n\t\t</p>\n\t</div>\n</form>", "<?php\n/*\nPlugin Name: WP-DBManager\nPlugin URI: http://lesterchan.net/portfolio/programming/php/\nDescription: Manages your WordPress database. Allows you to optimize database, repair database, backup database, restore database, delete backup database , drop/empty tables and run selected queries. Supports automatic scheduling of backing up, optimizing and repairing of database.\nVersion: 2.71\nAuthor: Lester 'GaMerZ' Chan\nAuthor URI: http://lesterchan.net\nText Domain: wp-dbmanager\n*/\n\n\n/*\n\tCopyright 2014  Lester Chan  (email : lesterchan@gmail.com)\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n*/\n\n\n### Create Text Domain For Translations\nadd_action( 'plugins_loaded', 'dbmanager_textdomain' );\nfunction dbmanager_textdomain() {\n\tload_plugin_textdomain( 'wp-dbmanager', false, dirname( plugin_basename( __FILE__ ) ) );\n}\n\n\n### Function: Database Manager Menu\nadd_action('admin_menu', 'dbmanager_menu');\nfunction dbmanager_menu() {\n\tif (function_exists('add_menu_page')) {\n\t\tadd_menu_page(__('Database', 'wp-dbmanager'), __('Database', 'wp-dbmanager'), 'manage_database', 'wp-dbmanager/database-manager.php', '', 'dashicons-archive');\n\t}\n\tif (function_exists('add_submenu_page')) {\n\t\tadd_submenu_page('wp-dbmanager/database-manager.php', __('Backup DB', 'wp-dbmanager'), __('Backup DB', 'wp-dbmanager'), 'manage_database', 'wp-dbmanager/database-backup.php');\n\t\tadd_submenu_page('wp-dbmanager/database-manager.php', __('Manage Backup DB', 'wp-dbmanager'), __('Manage Backup DB', 'wp-dbmanager'), 'manage_database', 'wp-dbmanager/database-manage.php');\n\t\tadd_submenu_page('wp-dbmanager/database-manager.php', __('Optimize DB', 'wp-dbmanager'), __('Optimize DB', 'wp-dbmanager'), 'manage_database', 'wp-dbmanager/database-optimize.php');\n\t\tadd_submenu_page('wp-dbmanager/database-manager.php', __('Repair DB', 'wp-dbmanager'), __('Repair DB', 'wp-dbmanager'), 'manage_database', 'wp-dbmanager/database-repair.php');\n\t\tadd_submenu_page('wp-dbmanager/database-manager.php', __('Empty/Drop Tables', 'wp-dbmanager'), __('Empty/Drop Tables', 'wp-dbmanager'), 'manage_database', 'wp-dbmanager/database-empty.php');\n\t\tadd_submenu_page('wp-dbmanager/database-manager.php', __('Run SQL Query', 'wp-dbmanager'), __('Run SQL Query', 'wp-dbmanager'), 'manage_database', 'wp-dbmanager/database-run.php');\n\t\tadd_submenu_page('wp-dbmanager/database-manager.php', __('DB Options', 'wp-dbmanager'),  __('DB Options', 'wp-dbmanager'), 'manage_database', 'wp-dbmanager/wp-dbmanager.php', 'dbmanager_options');\n\t}\n}\n\n\n### Funcion: Database Manager Cron\nadd_filter('cron_schedules', 'cron_dbmanager_reccurences');\nadd_action('dbmanager_cron_backup', 'cron_dbmanager_backup');\nadd_action('dbmanager_cron_optimize', 'cron_dbmanager_optimize');\nadd_action('dbmanager_cron_repair', 'cron_dbmanager_repair');\nfunction cron_dbmanager_backup() {\n\t$backup_options = get_option('dbmanager_options');\n\t$backup_email = stripslashes($backup_options['backup_email']);\n\tif(intval($backup_options['backup_period']) > 0) {\n\t\t$backup = array();\n\t\t$backup['date'] = current_time('timestamp');\n\t\t$backup['mysqldumppath'] = $backup_options['mysqldumppath'];\n\t\t$backup['mysqlpath'] = $backup_options['mysqlpath'];\n\t\t$backup['path'] = $backup_options['path'];\n\t\t$backup['password'] = str_replace('$', '\\$', DB_PASSWORD);\n\t\t$backup['host'] = DB_HOST;\n\t\t$backup['port'] = '';\n\t\t$backup['sock'] = '';\n\t\tif(strpos(DB_HOST, ':') !== false) {\n\t\t\t$db_host = explode(':', DB_HOST);\n\t\t\t$backup['host'] = $db_host[0];\n\t\t\tif(intval($db_host[1]) != 0) {\n\t\t\t\t$backup['port'] = ' --port=\"'.intval($db_host[1]).'\"';\n\t\t\t} else {\n\t\t\t\t$backup['sock'] = ' --socket=\"'.$db_host[1].'\"';\n\t\t\t}\n\t\t}\n\t\t$backup['command'] = '';\n\t\t$brace = (substr(PHP_OS, 0, 3) == 'WIN') ? '\"' : '';\n\t\tif(intval($backup_options['backup_gzip']) == 1) {\n\t\t\t$backup['filename'] = $backup['date'].'_-_'.DB_NAME.'.sql.gz';\n\t\t\t$backup['filepath'] = $backup['path'].'/'.$backup['filename'];\n\t\t\t$backup['command'] = escapeshellcmd( $brace.$backup['mysqldumppath'].$brace.' --force --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].' --add-drop-table --skip-lock-tables '.DB_NAME ). ' | gzip > '.escapeshellcmd( $brace.$backup['filepath'].$brace );\n\t\t} else {\n\t\t\t$backup['filename'] = $backup['date'].'_-_'.DB_NAME.'.sql';\n\t\t\t$backup['filepath'] = $backup['path'].'/'.$backup['filename'];\n\t\t\t$backup['command'] = escapeshellcmd( $brace.$backup['mysqldumppath'].$brace.' --force --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].' --add-drop-table --skip-lock-tables '.DB_NAME ). ' > '.escapeshellcmd( $brace.$backup['filepath'].$brace );\n\t\t}\n\t\texecute_backup($backup['command']);\n\t\tif( ! empty( $backup_email ) )\n\t\t{\n\t\t\tdbmanager_email_backup( $backup_email, $backup['filepath'] );\n\t\t}\n\t}\n\treturn;\n}\nfunction cron_dbmanager_optimize() {\n\tglobal $wpdb;\n\t$backup_options = get_option('dbmanager_options');\n\t$optimize_period = intval($backup_options['optimize_period']);\n\tif($optimize_period > 0) {\n\t\t$optimize_tables = array();\n\t\t$tables = $wpdb->get_col(\"SHOW TABLES\");\n\t\t\tforeach($tables as $table_name) {\n\t\t\t\t$optimize_tables[] = '`'.$table_name.'`';\n\t\t}\n\t\t$wpdb->query('OPTIMIZE TABLE '.implode(',', $optimize_tables));\n\t}\n\treturn;\n}\nfunction cron_dbmanager_repair() {\n\tglobal $wpdb;\n\t$backup_options = get_option('dbmanager_options');\n\t$repair_period = intval($backup_options['repair_period']);\n\tif($repair_period > 0) {\n\t\t$repair_tables = array();\n\t\t$tables = $wpdb->get_col(\"SHOW TABLES\");\n\t\t\tforeach($tables as $table_name) {\n\t\t\t\t$repair_tables[] = '`'.$table_name.'`';\n\t\t}\n\t\t$wpdb->query('REPAIR TABLE '.implode(',', $repair_tables));\n\t}\n\treturn;\n}\nfunction cron_dbmanager_reccurences($schedules) {\n\t$backup_options = get_option('dbmanager_options');\n\t$backup = intval($backup_options['backup'])*intval($backup_options['backup_period']);\n\t$optimize = intval($backup_options['optimize'])*intval($backup_options['optimize_period']);\n\t$repair = intval($backup_options['repair'])*intval($backup_options['repair_period']);\n\tif($backup == 0) {\n\t\t$backup = 31536000;\n\t}\n\tif($optimize == 0) {\n\t\t$optimize = 31536000;\n\t}\n\tif($repair == 0) {\n\t\t$repair = 31536000;\n\t}\n   $schedules['dbmanager_backup'] = array('interval' => $backup, 'display' => __('WP-DBManager Backup Schedule', 'wp-dbmanager'));\n   $schedules['dbmanager_optimize'] = array('interval' => $optimize, 'display' => __('WP-DBManager Optimize Schedule', 'wp-dbmanager'));\n   $schedules['dbmanager_repair'] = array('interval' => $repair, 'display' => __('WP-DBManager Repair Schedule', 'wp-dbmanager'));\n   return $schedules;\n}\n\n\n### Function: Ensure .htaccess Is In The Backup Folder\nadd_action( 'admin_notices', 'dbmanager_admin_notices' );\nfunction dbmanager_admin_notices() {\n\t$backup_options = get_option( 'dbmanager_options' );\n\t$backup_folder_writable = ( is_dir( $backup_options['path'] ) && wp_is_writable( $backup_options['path'] ) );\n\t$htaccess_exists = ( file_exists( $backup_options['path'] . '/.htaccess' ) );\n\n\tif( !isset( $backup_options['hide_admin_notices'] ) || intval( $backup_options['hide_admin_notices'] ) === 0 )\n\t{\n\t\tif( !$backup_folder_writable || !$htaccess_exists ) {\n\t\t\techo '<div class=\"error\">';\n\n\t\t\tif( !$backup_folder_writable ) {\n\t\t\t\techo '<p style=\"font-weight: bold;\">'.__('Your backup folder is NOT writable', 'wp-postratings').'</p>';\n\t\t\t\techo '<p>'.sprintf( __( 'To correct this issue, make the folder <strong>%s</strong> writable.', 'wp-dbmanager'), $backup_options['path'] ).'</p>';\n\t\t\t}\n\t\t\tif( !$htaccess_exists ) {\n\t\t\t\techo '<p style=\"font-weight: bold;\">'.__('Your backup folder MIGHT be visible to the public', 'wp-dbmanager').'</p>';\n\t\t\t\techo '<p>'.sprintf( __( 'To correct this issue, move the file from <strong>%s</strong> to <strong>%s</strong>', 'wp-dbmanager'), plugin_dir_path( __FILE__ ) . 'htaccess.txt', $backup_options['path'] .'/.htaccess' ).'</p>';\n\t\t\t}\n\n\t\t\techo '</div>';\n\t\t}\n\t}\n}\n\n\n### Function: Auto Detect MYSQL and MYSQL Dump Paths\nfunction detect_mysql() {\n\tglobal $wpdb;\n\t$paths = array('mysq' => '', 'mysqldump' => '');\n\tif(substr(PHP_OS,0,3) == 'WIN') {\n\t\t$mysql_install = $wpdb->get_row(\"SHOW VARIABLES LIKE 'basedir'\");\n\t\tif($mysql_install) {\n\t\t\t$install_path = str_replace('\\\\', '/', $mysql_install->Value);\n\t\t\t$paths['mysql'] = $install_path.'bin/mysql.exe';\n\t\t\t$paths['mysqldump'] = $install_path.'bin/mysqldump.exe';\n\t\t} else {\n\t\t\t$paths['mysql'] = 'mysql.exe';\n\t\t\t$paths['mysqldump'] = 'mysqldump.exe';\n\t\t}\n\t} else {\n\t\tif(function_exists('exec')) {\n\t\t\t$paths['mysql'] = @exec('which mysql');\n\t\t\t$paths['mysqldump'] = @exec('which mysqldump');\n\t\t} else {\n\t\t\t$paths['mysql'] = 'mysql';\n\t\t\t$paths['mysqldump'] = 'mysqldump';\n\t\t}\n\t}\n\treturn $paths;\n}\n\n\n### Executes OS-Dependent mysqldump Command (By: Vlad Sharanhovich)\nfunction execute_backup($command) {\n\t$backup_options = get_option('dbmanager_options');\n\tcheck_backup_files();\n\n\tif( realpath( $backup_options['path'] ) === false ) {\n\t\treturn sprintf( __( '%s is not a valid backup path', 'wp-dbmanager' ), stripslashes( $backup_options['path'] ) );\n\t} else if( dbmanager_is_valid_path( $backup_options['mysqldumppath'] ) === 0 ) {\n\t\treturn sprintf( __( '%s is not a valid mysqldump path', 'wp-dbmanager' ), stripslashes( $backup_options['mysqldumppath'] ) );\n\t} else if( dbmanager_is_valid_path( $backup_options['mysqlpath'] ) === 0 ) {\n\t\treturn sprintf( __( '%s is not a valid mysql path', 'wp-dbmanager' ), stripslashes( $backup_options['mysqlpath'] ) );\n\t}\n\n\tif( substr( PHP_OS, 0, 3 ) === 'WIN' ) {\n\t\t$writable_dir = $backup_options['path'];\n\t\t$tmpnam = $writable_dir.'/wp-dbmanager.bat';\n\t\t$fp = fopen( $tmpnam, 'w' );\n\t\tfwrite ($fp, $command );\n\t\tfclose( $fp );\n\t\tsystem( $tmpnam.' > NUL', $error );\n\t\tunlink( $tmpnam );\n\t} else {\n\t\tpassthru( $command, $error );\n\t}\n\treturn $error;\n}\n\n### Function: Check for valid file path\nfunction dbmanager_is_valid_path( $path ) {\n\treturn preg_match( '/^[^*?\"<>|;]*$/', $path );\n}\n\n### Function: Email database backup\nfunction dbmanager_email_backup($to = '', $backup_file_path)\n{\n\tif( is_email( $to ) && file_exists( $backup_file_path ) )\n\t{\n\t\t$backup_options = get_option( 'dbmanager_options' );\n\n\t\t$file_name = basename( $backup_file_path );\n\t\t$file_gmt_date = gmdate( 'Y-m-d H:i:s', substr( $file_name, 0, 10 ) );\n\t\t$file_size = format_size( filesize( $backup_file_path) );\n\t\t$file_date = mysql2date( sprintf( __( '%s @ %s', 'wp-dbmanager' ), get_option( 'date_format' ), get_option( 'time_format' ) ), $file_gmt_date );\n\n\t\t$to = ( !empty( $to ) ? $to : get_option( 'admin_email' ) );\n\n\t\t$subject = ( !empty( $backup_options['backup_email_subject'] ) ? $backup_options['backup_email_subject'] : dbmanager_default_options( 'backup_email_subject' ) );\n\t\t$subject = str_replace(\n\t\t\t  array(\n\t\t\t\t  '%SITE_NAME%'\n\t\t\t    , '%POST_DATE%'\n\t\t\t    , '%POST_TIME%'\n\t\t\t  )\n\t\t\t, array(\n\t\t\t\t  wp_specialchars_decode( get_bloginfo( 'name' ), ENT_QUOTES )\n\t\t\t\t, mysql2date( get_option( 'date_format' ), $file_gmt_date )\n\t\t\t\t, mysql2date( get_option( 'time_format' ), $file_gmt_date )\n\t\t\t)\n\t\t\t, $subject\n\t\t);\n\t\t$message = __( 'Website Name:', 'wp-dbmanager').' '. wp_specialchars_decode( get_bloginfo( 'name' ), ENT_QUOTES ) . \"\\n\".\n\t\t\t__( 'Website URL:', 'wp-dbmanager' ).' '.get_bloginfo( 'url' ).\"\\n\".\n\t\t\t__( 'Backup File Name:', 'wp-dbmanager' ).' '.$file_name.\"\\n\".\n\t\t\t__( 'Backup File Date:', 'wp-dbmanager' ).' '.$file_date.\"\\n\".\n\t\t\t__( 'Backup File Size:', 'wp-dbmanager' ).' '.$file_size.\"\\n\\n\".\n\t\t\t__( 'With Regards,', 'wp-dbmanager' ).\"\\n\".\n\t\t\twp_specialchars_decode( get_bloginfo( 'name' ),  ENT_QUOTES ). ' ' . __('Administrator', 'wp-dbmanager' ).\"\\n\".\n\t\t\tget_bloginfo('url');\n\n\t\t$from = ( !empty( $backup_options['backup_email_from'] ) ? $backup_options['backup_email_from'] : dbmanager_default_options( 'backup_email_from' ) );\n\t\t$from_name = ( !empty( $backup_options['backup_email_from_name'] ) ? $backup_options['backup_email_from_name'] : dbmanager_default_options( 'backup_email_from_name' ) );\n\t\t$headers[] = 'From: \"' . wp_specialchars_decode( stripslashes_deep( $from_name ), ENT_QUOTES ) . '\" <'.$from.'>';\n\n\t\treturn wp_mail( $to, $subject, $message, $headers, $backup_file_path );\n\t}\n\n\treturn false;\n}\n\n\n### Function: Format Bytes Into KB/MB\nif(!function_exists('format_size')) {\n\tfunction format_size($rawSize) {\n\t\tif($rawSize / 1073741824 > 1)\n\t\t\treturn number_format_i18n($rawSize/1048576, 1) . ' '.__('GiB', 'wp-dbmanager');\n\t\telse if ($rawSize / 1048576 > 1)\n\t\t\treturn number_format_i18n($rawSize/1048576, 1) . ' '.__('MiB', 'wp-dbmanager');\n\t\telse if ($rawSize / 1024 > 1)\n\t\t\treturn number_format_i18n($rawSize/1024, 1) . ' '.__('KiB', 'wp-dbmanager');\n\t\telse\n\t\t\treturn number_format_i18n($rawSize, 0) . ' '.__('bytes', 'wp-dbmanager');\n\t}\n}\n\n\n### Function: Get File Extension\nif(!function_exists('file_ext')) {\n\tfunction file_ext($file_name) {\n\t\treturn substr(strrchr($file_name, '.'), 1);\n\t}\n}\n\n\n### Function: Check Folder Whether There Is Any File Inside\nif(!function_exists('is_emtpy_folder')) {\n\tfunction is_emtpy_folder($folder){\n\t   if(is_dir($folder) ){\n\t\t   $folder_content = '';\n\t\t   $handle = opendir($folder);\n\t\t   while( (gettype( $name = readdir($handle)) != 'boolean')){\n\t\t\t\tif($name != '.htaccess') {\n\t\t\t\t\t$name_array[] = $name;\n\t\t\t\t}\n\t\t   }\n\t\t   foreach($name_array as $temp)\n\t\t\t   $folder_content .= $temp;\n\n\t\t   if($folder_content == '...')\n\t\t\t   return true;\n\t\t   else\n\t\t\t   return false;\n\t\t   closedir($handle);\n\t   }\n\t   else\n\t\t   return true;\n\t}\n}\n\n\n### Function: Make Sure Maximum Number Of Database Backup Files Does Not Exceed\nfunction check_backup_files() {\n\t$backup_options = get_option('dbmanager_options');\n\t$database_files = array();\n\tif(!is_emtpy_folder($backup_options['path'])) {\n\t\tif ($handle = opendir($backup_options['path'])) {\n\t\t\twhile (false !== ($file = readdir($handle))) {\n\t\t\t\tif ($file != '.' && $file != '..' && (file_ext($file) == 'sql' || file_ext($file) == 'gz')) {\n\t\t\t\t\t$database_files[] = $file;\n\t\t\t\t}\n\t\t\t}\n\t\t\tclosedir($handle);\n\t\t\tsort($database_files);\n\t\t}\n\t}\n\tif(sizeof($database_files) >= $backup_options['max_backup']) {\n\t\t@unlink($backup_options['path'].'/'.$database_files[0]);\n\t}\n}\n\n\n### Function: DBManager Default Options\nfunction dbmanager_default_options( $option_name )\n{\n\tswitch( $option_name )\n\t{\n\t\tcase 'backup_email_from':\n\t\t\treturn get_option( 'admin_email' );\n\t\t\tbreak;\n\t\tcase 'backup_email_from_name':\n\t\t\treturn wp_specialchars_decode( get_bloginfo( 'name' ),  ENT_QUOTES )  .' '.__( 'Administrator', 'wp-dbmanager' );\n\t\t\tbreak;\n\t\tcase 'backup_email_subject':\n\t\t\treturn __( '%SITE_NAME% Database Backup File For %POST_DATE% @ %POST_TIME%', 'wp-dbmanager' );\n\t\t\tbreak;\n\t\tcase 'hide_admin_notices':\n\t\t\treturn 0;\n\t\t\tbreak;\n\t}\n}\n\n### Function: Acticate Plugin\nregister_activation_hook( __FILE__, 'dbmanager_activation' );\nfunction dbmanager_activation( $network_wide )\n{\n\t$auto = detect_mysql();\n\t// Add Options\n\t$option_name = 'dbmanager_options';\n\t$option = array(\n\t\t  'mysqldumppath'           => $auto['mysqldump']\n\t\t, 'mysqlpath'               => $auto['mysql']\n\t\t, 'path'                    => str_replace( '\\\\', '/', WP_CONTENT_DIR ).'/backup-db'\n\t\t, 'max_backup'              => 10\n\t\t, 'backup'                  => 1\n\t\t, 'backup_gzip'             => 0\n\t\t, 'backup_period'           => 604800\n\t\t, 'backup_email'            => get_option( 'admin_email' )\n\t\t, 'backup_email_from'       => dbmanager_default_options( 'backup_email_from' )\n\t\t, 'backup_email_from_name'  => dbmanager_default_options( 'backup_email_from_name' )\n\t\t, 'backup_email_subject'    => dbmanager_default_options( 'backup_email_subject' )\n\t\t, 'optimize'                => 3\n\t\t, 'optimize_period'         => 86400\n\t\t, 'repair'                  => 2\n\t\t, 'repair_period'           => 604800\n\t\t, 'hide_admin_notices'      => 0\n\t);\n\n\tif ( is_multisite() && $network_wide )\n\t{\n\t\t$ms_sites = wp_get_sites();\n\n\t\tif( 0 < sizeof( $ms_sites ) )\n\t\t{\n\t\t\tforeach ( $ms_sites as $ms_site )\n\t\t\t{\n\t\t\t\tswitch_to_blog( $ms_site['blog_id'] );\n\t\t\t\tadd_option( $option_name, $option );\n\t\t\t\tdbmanager_activate();\n\t\t\t}\n\t\t}\n\n\t\trestore_current_blog();\n\t}\n\telse\n\t{\n\t\tadd_option( $option_name, $option );\n\t\tdbmanager_activate();\n\t}\n}\n\nfunction dbmanager_activate() {\n\t$plugin_path = plugin_dir_path( __FILE__ );\n\t$default_backup_folder = WP_CONTENT_DIR . '/backup-db';\n\n\t// Create Backup Folder\n\tif( is_dir( $default_backup_folder ) && wp_is_writable( $default_backup_folder ) )\n\t{\n\t\tif( wp_mkdir_p( $default_backup_folder ) )\n\t\t{\n\t\t\t@copy( $plugin_path . 'htaccess.txt', $default_backup_folder . '/.htaccess' );\n\t\t\t@chmod( $default_backup_folder, 0750 );\n\t\t}\n\t}\n\n\t// Set 'manage_database' Capabilities To Administrator\n\t$role = get_role( 'administrator' );\n\tif( !$role->has_cap( 'manage_database') )\n\t{\n\t\t$role->add_cap( 'manage_database' );\n\t}\n}\n\n\n### Function: Download Database\nadd_action('init', 'download_database');\nfunction download_database() {\n\tif(isset($_POST['do']) && $_POST['do'] == __('Download', 'wp-dbmanager') && !empty($_POST['database_file'])) {\n\t\tif(strpos($_SERVER['HTTP_REFERER'], admin_url('admin.php?page=wp-dbmanager/database-manage.php')) !== false) {\n\t\t\t$database_file = trim($_POST['database_file']);\n\t\t\tif(substr($database_file, strlen($database_file) - 4, 4) == '.sql' || substr($database_file, strlen($database_file) - 7, 7) == '.sql.gz') {\n\t\t\t\tcheck_admin_referer('wp-dbmanager_manage');\n\t\t\t\t$backup_options = get_option('dbmanager_options');\n\t\t\t\t$clean_file_name = sanitize_file_name($database_file);\n\t\t\t\t$clean_file_name = str_replace('sql_.gz', 'sql.gz', $clean_file_name);\n\t\t\t\t$file_path = $backup_options['path'].'/'.$clean_file_name;\n\t\t\t\theader(\"Pragma: public\");\n\t\t\t\theader(\"Expires: 0\");\n\t\t\t\theader(\"Cache-Control: must-revalidate, post-check=0, pre-check=0\");\n\t\t\t\theader(\"Content-Type: application/force-download\");\n\t\t\t\theader(\"Content-Type: application/octet-stream\");\n\t\t\t\theader(\"Content-Type: application/download\");\n\t\t\t\theader(\"Content-Disposition: attachment; filename=\".basename($file_path).\";\");\n\t\t\t\theader(\"Content-Transfer-Encoding: binary\");\n\t\t\t\theader(\"Content-Length: \".filesize($file_path));\n\t\t\t\t@readfile($file_path);\n\t\t\t}\n\t\t}\n\t\texit();\n\t}\n}\n\n### Function: Database Options\nfunction dbmanager_options() {\n\t$text = '';\n\t$backup_options = get_option('dbmanager_options');\n\t$old_backup_options = $backup_options;\n\tif(!empty($_POST['Submit'])) {\n\t\tcheck_admin_referer('wp-dbmanager_options');\n\t\t$backup_options['mysqldumppath']            = sanitize_text_field( $_POST['db_mysqldumppath'] );\n\t\t$backup_options['mysqlpath']                = sanitize_text_field( $_POST['db_mysqlpath'] );\n\t\t$backup_options['path']                     = sanitize_text_field( $_POST['db_path'] );\n\t\t$backup_options['max_backup']               = intval( $_POST['db_max_backup'] );\n\t\t$backup_options['backup']                   = intval( $_POST['db_backup'] );\n\t\t$backup_options['backup_gzip']              = intval( $_POST['db_backup_gzip'] );\n\t\t$backup_options['backup_period']            = intval( $_POST['db_backup_period'] );\n\t\t$backup_options['backup_email']             = sanitize_email( $_POST['db_backup_email'] );\n\t\t$backup_options['backup_email_from']        = sanitize_email( $_POST['db_backup_email_from'] );\n\t\t$backup_options['backup_email_from_name']   = sanitize_text_field( $_POST['db_backup_email_from_name'] );\n\t\t$backup_options['backup_email_subject']     = sanitize_text_field( $_POST['db_backup_email_subject'] );\n\t\t$backup_options['optimize']                 = intval( $_POST['db_optimize'] );\n\t\t$backup_options['optimize_period']          = intval( $_POST['db_optimize_period'] );\n\t\t$backup_options['repair']                   = intval( $_POST['db_repair'] );\n\t\t$backup_options['repair_period']            = intval( $_POST['db_repair_period'] );\n\t\t$backup_options['hide_admin_notices']       = intval( $_POST['db_hide_admin_notices'] );\n\n\t\tif( realpath( $backup_options['path'] ) === false ) {\n\t\t\t$text = '<div id=\"message\" class=\"error\"><p>' . sprintf( __( '%s is not a valid backup path', 'wp-dbmanager' ), stripslashes( $backup_options['path'] ) ) . '</p></div>';\n\t\t\t$backup_options['path'] = $old_backup_options['path'];\n\t\t} else if( dbmanager_is_valid_path( $backup_options['mysqldumppath'] ) === 0 ) {\n\t\t\t$text = '<div id=\"message\" class=\"error\"><p>' . sprintf( __( '%s is not a valid mysqldump path', 'wp-dbmanager' ), stripslashes( $backup_options['mysqldumppath'] ) ) . '</p></div>';\n\t\t\t$backup_options['mysqldumppath'] = $old_backup_options['mysqldumppath'];\n\t\t} else if( dbmanager_is_valid_path( $backup_options['mysqlpath'] ) === 0 ) {\n\t\t\t$text = '<div id=\"message\" class=\"error\"><p>' . sprintf( __( '%s is not a valid mysql path', 'wp-dbmanager' ), stripslashes( $backup_options['mysqlpath'] ) ) . '</p></div>';\n\t\t\t$backup_options['mysqlpath'] = $old_backup_options['mysqlpath'];\n\t\t}\n\n\t\t$update_db_options = update_option( 'dbmanager_options', $backup_options );\n\t\tif( $update_db_options ) {\n\t\t\t$text = '<div id=\"message\" class=\"updated\"><p>' . __( 'Database Options Updated', 'wp-dbmanager' ) . '</p></div>';\n\t\t}\n\t\tif( empty( $text ) ) {\n\t\t\t$text = '<div id=\"message\" class=\"error\"><p>' . __( 'No Database Option Updated', 'wp-dbmanager' ) . '</p></div>';\n\t\t}\n\t\twp_clear_scheduled_hook( 'dbmanager_cron_backup' );\n\t\tif( $backup_options['backup_period'] > 0 ) {\n\t\t\tif ( ! wp_next_scheduled( 'dbmanager_cron_backup' ) ) {\n\t\t\t\twp_schedule_event( time(), 'dbmanager_backup', 'dbmanager_cron_backup' );\n\t\t\t}\n\t\t}\n\t\twp_clear_scheduled_hook( 'dbmanager_cron_optimize' );\n\t\tif( $backup_options['optimize_period'] > 0 ) {\n\t\t\tif ( ! wp_next_scheduled('dbmanager_cron_optimize' ) ) {\n\t\t\t\twp_schedule_event( time(), 'dbmanager_optimize', 'dbmanager_cron_optimize' );\n\t\t\t}\n\t\t}\n\t\twp_clear_scheduled_hook( 'dbmanager_cron_repair' );\n\t\tif( $backup_options['repair_period'] > 0 ) {\n\t\t\tif ( ! wp_next_scheduled( 'dbmanager_cron_repair' ) ) {\n\t\t\t\twp_schedule_event( time(), 'dbmanager_repair', 'dbmanager_cron_repair' );\n\t\t\t}\n\t\t}\n\t}\n\t$path = detect_mysql();\n\n\t// Default Options\n\tif( !isset( $backup_options['backup_email_from'] ) )\n\t{\n\t\t$backup_options['backup_email_from'] = dbmanager_default_options( 'backup_email_from' );\n\t}\n\tif( !isset( $backup_options['backup_email_from_name'] ) )\n\t{\n\t\t$backup_options['backup_email_from_name'] = dbmanager_default_options( 'backup_email_from_name' );\n\t}\n\tif( !isset( $backup_options['backup_email_subject'] ) )\n\t{\n\t\t$backup_options['backup_email_subject'] = dbmanager_default_options( 'backup_email_subject' );\n\t}\n\tif( !isset( $backup_options['hide_admin_notices'] ) )\n\t{\n\t\t$backup_options['hide_admin_notices'] = dbmanager_default_options( 'hide_admin_notices' );\n\t}\n\n?>\n<script type=\"text/javascript\">\n/* <![CDATA[*/\n\tfunction mysqlpath() {\n\t\tjQuery(\"#db_mysqlpath\").val(\"<?php echo $path['mysql']; ?>\");\n\t}\n\tfunction mysqldumppath() {\n\t\tjQuery(\"#db_mysqldumppath\").val(\"<?php echo $path['mysqldump']; ?>\");\n\t}\n/* ]]> */\n</script>\n<?php if( ! empty( $text ) ) { echo $text; } ?>\n<!-- Database Options -->\n<form method=\"post\" action=\"<?php echo admin_url('admin.php?page='.plugin_basename(__FILE__)); ?>\">\n\t<?php wp_nonce_field('wp-dbmanager_options'); ?>\n\t<div class=\"wrap\">\n\t\t<h2><?php _e('Database Options', 'wp-dbmanager'); ?></h2>\n\t\t<h3><?php _e('Paths', 'wp-dbmanager'); ?></h3>\n\t\t<table class=\"form-table\">\n\t\t\t<tr>\n\t\t\t\t<td width=\"20%\" valign=\"top\"><strong><?php _e('Path To mysqldump:', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td width=\"80%\">\n\t\t\t\t\t<input type=\"text\" id=\"db_mysqldumppath\" name=\"db_mysqldumppath\" size=\"60\" maxlength=\"100\" value=\"<?php echo stripslashes($backup_options['mysqldumppath']); ?>\" dir=\"ltr\" />&nbsp;&nbsp;<input type=\"button\" value=\"<?php _e('Auto Detect', 'wp-dbmanager'); ?>\" onclick=\"mysqldumppath();\" />\n\t\t\t\t\t<p><?php _e('The absolute path to mysqldump without trailing slash. If unsure, please email your server administrator about this.', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('Path To mysql:', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<input type=\"text\" id=\"db_mysqlpath\" name=\"db_mysqlpath\" size=\"60\" maxlength=\"100\" value=\"<?php echo stripslashes($backup_options['mysqlpath']); ?>\" dir=\"ltr\" />&nbsp;&nbsp;<input type=\"button\" value=\"<?php _e('Auto Detect', 'wp-dbmanager'); ?>\" onclick=\"mysqlpath();\" />\n\t\t\t\t\t<p><?php _e('The absolute path to mysql without trailing slash. If unsure, please email your server administrator about this.', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('Path To Backup:', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<input type=\"text\" name=\"db_path\" size=\"60\" maxlength=\"100\" value=\"<?php echo stripslashes($backup_options['path']); ?>\" dir=\"ltr\" />\n\t\t\t\t\t<p><?php _e('The absolute path to your database backup folder without trailing slash. Make sure the folder is writable.', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('Maximum Backup Files:', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<input type=\"text\" name=\"db_max_backup\" size=\"5\" maxlength=\"5\" value=\"<?php echo stripslashes($backup_options['max_backup']); ?>\" />\n\t\t\t\t\t<p><?php _e('The maximum number of database backup files that is allowed in the backup folder as stated above. The oldest database backup file is always deleted in order to maintain this value. This is to prevent the backup folder from getting too large.', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\n\t\t<h3><?php _e('Note', 'wp-dbmanager'); ?></h3>\n\t\t<table class=\"form-table\">\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<strong><?php _e('Windows Server', 'wp-dbmanager'); ?></strong><br />\n\t\t\t\t\t<?php _e('For mysqldump path, you can try \\'<strong>mysqldump.exe</strong>\\'.', 'wp-dbmanager'); ?><br />\n\t\t\t\t\t<?php _e('For mysql path, you can try \\'<strong>mysql.exe</strong>\\'.', 'wp-dbmanager'); ?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<strong><?php _e('Linux Server', 'wp-dbmanager'); ?></strong><br />\n\t\t\t\t\t<?php _e('For mysqldump path, normally is just \\'<strong>mysqldump</strong>\\'.', 'wp-dbmanager'); ?><br />\n\t\t\t\t\t<?php _e('For mysql path, normally is just \\'<strong>mysql</strong>\\'.', 'wp-dbmanager'); ?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<strong><?php _e('Note', 'wp-dbmanager'); ?></strong><br />\n\t\t\t\t\t<?php _e('The \\'Auto Detect\\' function does not work for some servers. If it does not work for you, please contact your server administrator for the MYSQL and MYSQL DUMP paths.', 'wp-dbmanager'); ?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\n\t\t<h3><?php _e('Automatic Scheduling', 'wp-dbmanager'); ?></h3>\n\t\t<table class=\"form-table\">\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('Automatic Backing Up Of DB:', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php\n\t\t\t\t\t\t_e('Next backup date: ', 'wp-dbmanager');\n\t\t\t\t\t\tif(wp_next_scheduled('dbmanager_cron_backup')) {\n\t\t\t\t\t\t\techo '<strong>'.mysql2date(sprintf(__('%s @ %s', 'wp-dbmanager'), get_option('date_format'), get_option('time_format')), gmdate('Y-m-d H:i:s', (wp_next_scheduled('dbmanager_cron_backup') + (get_option('gmt_offset') * 3600)))).'</strong>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_e('N/A', 'wp-dbmanager');\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<?php _e('Every', 'wp-dbmanager'); ?>&nbsp;<input type=\"text\" name=\"db_backup\" size=\"3\" maxlength=\"5\" value=\"<?php echo intval($backup_options['backup']); ?>\" />&nbsp;\n\t\t\t\t\t\t<select name=\"db_backup_period\" size=\"1\">\n\t\t\t\t\t\t\t<option value=\"0\"<?php selected('0', $backup_options['backup_period']); ?>><?php _e('Disable', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t\t<option value=\"60\"<?php selected('60', $backup_options['backup_period']); ?>><?php _e('Minutes(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t\t<option value=\"3600\"<?php selected('3600', $backup_options['backup_period']); ?>><?php _e('Hour(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t\t<option value=\"86400\"<?php selected('86400', $backup_options['backup_period']); ?>><?php _e('Day(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t\t<option value=\"604800\"<?php selected('604800', $backup_options['backup_period']); ?>><?php _e('Week(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t\t<option value=\"18144000\"<?php selected('18144000', $backup_options['backup_period']); ?>><?php _e('Month(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t</select>&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t<?php _e('Gzip', 'wp-dbmanager'); ?>\n\t\t\t\t\t\t<select name=\"db_backup_gzip\" size=\"1\">\n\t\t\t\t\t\t\t<option value=\"0\"<?php selected('0', $backup_options['backup_gzip']); ?>><?php _e('No', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t\t<option value=\"1\"<?php selected('1', $backup_options['backup_gzip']); ?>><?php _e('Yes', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p><?php _e('WP-DBManager can automatically backup your database after a certain period.', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('Automatic Optimizing Of DB:', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php\n\t\t\t\t\t\t_e('Next optimize date: ', 'wp-dbmanager');\n\t\t\t\t\t\tif(wp_next_scheduled('dbmanager_cron_optimize')) {\n\t\t\t\t\t\t\techo '<strong>'.mysql2date(sprintf(__('%s @ %s', 'wp-dbmanager'), get_option('date_format'), get_option('time_format')), gmdate('Y-m-d H:i:s', (wp_next_scheduled('dbmanager_cron_optimize') + (get_option('gmt_offset') * 3600)))).'</strong>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_e('N/A', 'wp-dbmanager');\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t\t<p>\n\t\t\t\t\t<?php _e('Every', 'wp-dbmanager'); ?>&nbsp;<input type=\"text\" name=\"db_optimize\" size=\"3\" maxlength=\"5\" value=\"<?php echo intval($backup_options['optimize']); ?>\" />&nbsp;\n\t\t\t\t\t<select name=\"db_optimize_period\" size=\"1\">\n\t\t\t\t\t\t<option value=\"0\"<?php selected('0', $backup_options['optimize_period']); ?>><?php _e('Disable', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"60\"<?php selected('60', $backup_options['optimize_period']); ?>><?php _e('Minutes(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"3600\"<?php selected('3600', $backup_options['optimize_period']); ?>><?php _e('Hour(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"86400\"<?php selected('86400', $backup_options['optimize_period']); ?>><?php _e('Day(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"604800\"<?php selected('604800', $backup_options['optimize_period']); ?>><?php _e('Week(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"18144000\"<?php selected('18144000', $backup_options['optimize_period']); ?>><?php _e('Month(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t</select>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p><?php _e('WP-DBManager can automatically optimize your database after a certain period.', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('Automatic Repairing Of DB:', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php\n\t\t\t\t\t\t_e('Next repair date: ', 'wp-dbmanager');\n\t\t\t\t\t\tif(wp_next_scheduled('dbmanager_cron_repair')) {\n\t\t\t\t\t\t\techo '<strong>'.mysql2date(sprintf(__('%s @ %s', 'wp-dbmanager'), get_option('date_format'), get_option('time_format')), gmdate('Y-m-d H:i:s', (wp_next_scheduled('dbmanager_cron_repair') + (get_option('gmt_offset') * 3600)))).'</strong>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_e('N/A', 'wp-dbmanager');\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t\t<p>\n\t\t\t\t\t<?php _e('Every', 'wp-dbmanager'); ?>&nbsp;<input type=\"text\" name=\"db_repair\" size=\"3\" maxlength=\"5\" value=\"<?php echo intval($backup_options['repair']); ?>\" />&nbsp;\n\t\t\t\t\t<select name=\"db_repair_period\" size=\"1\">\n\t\t\t\t\t\t<option value=\"0\"<?php selected('0', $backup_options['repair_period']); ?>><?php _e('Disable', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"60\"<?php selected('60', $backup_options['repair_period']); ?>><?php _e('Minutes(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"3600\"<?php selected('3600', $backup_options['repair_period']); ?>><?php _e('Hour(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"86400\"<?php selected('86400', $backup_options['repair_period']); ?>><?php _e('Day(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"604800\"<?php selected('604800', $backup_options['repair_period']); ?>><?php _e('Week(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t\t<option value=\"18144000\"<?php selected('18144000', $backup_options['repair_period']); ?>><?php _e('Month(s)', 'wp-dbmanager'); ?></option>\n\t\t\t\t\t</select>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p><?php _e('WP-DBManager can automatically repair your database after a certain period.', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\n\t\t<h3><?php _e('Backup Email Options', 'wp-dbmanager'); ?></h3>\n\t\t<table class=\"form-table\">\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('To', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<input type=\"text\" name=\"db_backup_email\" size=\"30\" maxlength=\"250\" placeholder=\"<?php _e ( 'To E-mail', 'wp-dbmanager' ); ?>\"  value=\"<?php echo esc_attr( stripslashes( $backup_options['backup_email'] ) ) ?>\" dir=\"ltr\" />\n\t\t\t\t\t</p>\n\t\t\t\t\t<p><?php _e('(Leave blank to disable this feature)', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('From', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<input type=\"text\" name=\"db_backup_email_from_name\" size=\"60\" maxlength=\"250\" placeholder=\"<?php _e ( 'From Name', 'wp-dbmanager' ); ?>\" value=\"<?php echo esc_attr( stripslashes( $backup_options['backup_email_from_name'] ) ) ?>\" dir=\"ltr\" />&nbsp;\n\t\t\t\t\t\t&lt;<input type=\"text\" name=\"db_backup_email_from\" size=\"30\" maxlength=\"250\" placeholder=\"<?php _e ( 'From E-mail', 'wp-dbmanager' ); ?>\"  value=\"<?php echo esc_attr( stripslashes( $backup_options['backup_email_from'] ) ) ?>\" dir=\"ltr\" />&gt;\n\t\t\t\t\t</p>\n\t\t\t\t\t<p><?php _e('(Leave blank to use the default)', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('Subject:', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<input type=\"text\" name=\"db_backup_email_subject\" size=\"90\" maxlength=\"255\" placeholder=\"<?php _e ( 'Subject', 'wp-dbmanager' ); ?>\"  value=\"<?php echo esc_attr( stripslashes( $backup_options['backup_email_subject'] ) ) ?>\" dir=\"ltr\" />\n\t\t\t\t\t</p>\n\t\t\t\t\t<p><?php _e('(Leave blank to use the default)', 'wp-dbmanager'); ?></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\n\t\t<h3><?php _e('Miscellaneous Options', 'wp-dbmanager'); ?></h3>\n\t\t<table class=\"form-table\">\n\t\t\t<tr>\n\t\t\t\t<td valign=\"top\"><strong><?php _e('Hide Admin Notices', 'wp-dbmanager'); ?></strong></td>\n\t\t\t\t<td>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<input type=\"radio\" name=\"db_hide_admin_notices\" value=\"1\"<?php echo (intval( $backup_options['hide_admin_notices'] ) === 1 ? ' checked=\"checked\"' : '' ); ?> />&nbsp;<?php _e('Yes', 'wp-dbmanager'); ?>\n\t\t\t\t\t\t<input type=\"radio\" name=\"db_hide_admin_notices\" value=\"0\"<?php echo (intval( $backup_options['hide_admin_notices'] ) === 0 ? ' checked=\"checked\"' : '' ); ?> />&nbsp;<?php _e('No', 'wp-dbmanager'); ?>\n\t\t\t\t\t</p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\n\t\t<p class=\"submit\">\n\t\t\t<input type=\"submit\" name=\"Submit\" class=\"button\" value=\"<?php _e('Save Changes', 'wp-dbmanager'); ?>\" />\n\t\t</p>\n\t</div>\n</form>\n<?php\n}\n?>"], "filenames": ["README.md", "database-backup.php", "database-manage.php", "database-run.php", "wp-dbmanager.php"], "buggy_code_start_loc": [37, 45, 47, 40, 63], "buggy_code_end_loc": [39, 50, 50, 52, 230], "fixing_code_start_loc": [37, 45, 47, 40, 62], "fixing_code_end_loc": [41, 50, 50, 54, 229], "type": "CWE-255", "message": "(1) wp-dbmanager.php and (2) database-manage.php in the WP-DBManager (aka Database Manager) plugin before 2.7.2 for WordPress place credentials on the mysqldump command line, which allows local users to obtain sensitive information by listing the process.", "other": {"cve": {"id": "CVE-2014-8335", "sourceIdentifier": "cve@mitre.org", "published": "2018-01-05T16:29:00.197", "lastModified": "2018-01-19T14:47:17.460", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "(1) wp-dbmanager.php and (2) database-manage.php in the WP-DBManager (aka Database Manager) plugin before 2.7.2 for WordPress place credentials on the mysqldump command line, which allows local users to obtain sensitive information by listing the process."}, {"lang": "es", "value": "(1) wp-dbmanager.php y (2) database-manage.php en el plugin WP-DBManager (tambi\u00e9n conocido como Database Manager) en versiones anteriores a la 2.7.2 para WordPress ubica credenciales en la l\u00ednea de comandos mysqldump, lo que permite que los usuarios locales obtengan informaci\u00f3n sensible listando el proceso."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-255"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wp-dbmanager_project:wp-dbmanager:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "2.7.1", "matchCriteriaId": "BD1B10CB-5B4C-4C8D-9F4B-75817BB0AC06"}]}]}], "references": [{"url": "http://packetstormsecurity.com/files/128785/WordPress-Database-Manager-2.7.1-Command-Injection-Credential-Leak.html", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking", "Third Party Advisory", "VDB Entry"]}, {"url": "http://www.openwall.com/lists/oss-security/2014/10/20/7", "source": "cve@mitre.org", "tags": ["Mailing List"]}, {"url": "http://www.vapid.dhs.org/advisories/wordpress/plugins/wp-dbmanager-2.7.1/index.html", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/97691", "source": "cve@mitre.org", "tags": ["VDB Entry"]}, {"url": "https://github.com/lesterchan/wp-dbmanager/commit/7037fa8f61644098044379190d1d4bf1883b8e4a", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://wordpress.org/plugins/wp-dbmanager/#developers", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/lesterchan/wp-dbmanager/commit/7037fa8f61644098044379190d1d4bf1883b8e4a"}}