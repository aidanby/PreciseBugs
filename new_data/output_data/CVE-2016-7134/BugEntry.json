{"buggy_code": ["/*\n   +----------------------------------------------------------------------+\n   | PHP Version 7                                                        |\n   +----------------------------------------------------------------------+\n   | Copyright (c) 1997-2016 The PHP Group                                |\n   +----------------------------------------------------------------------+\n   | This source file is subject to version 3.01 of the PHP license,      |\n   | that is bundled with this package in the file LICENSE, and is        |\n   | available through the world-wide-web at the following url:           |\n   | http://www.php.net/license/3_01.txt                                  |\n   | If you did not receive a copy of the PHP license and are unable to   |\n   | obtain it through the world-wide-web, please send a note to          |\n   | license@php.net so we can mail you a copy immediately.               |\n   +----------------------------------------------------------------------+\n   | Author: Sterling Hughes <sterling@php.net>                           |\n   +----------------------------------------------------------------------+\n*/\n\n/* $Id$ */\n\n#define ZEND_INCLUDE_FULL_WINDOWS_HEADERS\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n\n#if HAVE_CURL\n\n#include <stdio.h>\n#include <string.h>\n\n#ifdef PHP_WIN32\n#include <winsock2.h>\n#include <sys/types.h>\n#endif\n\n#include <curl/curl.h>\n#include <curl/easy.h>\n\n/* As of curl 7.11.1 this is no longer defined inside curl.h */\n#ifndef HttpPost\n#define HttpPost curl_httppost\n#endif\n\n/* {{{ cruft for thread safe SSL crypto locks */\n#if defined(ZTS) && defined(HAVE_CURL_SSL)\n# ifdef PHP_WIN32\n#  define PHP_CURL_NEED_OPENSSL_TSL\n#  include <openssl/crypto.h>\n# else /* !PHP_WIN32 */\n#  if defined(HAVE_CURL_OPENSSL)\n#   if defined(HAVE_OPENSSL_CRYPTO_H)\n#    define PHP_CURL_NEED_OPENSSL_TSL\n#    include <openssl/crypto.h>\n#   else\n#    warning \\\n\t\"libcurl was compiled with OpenSSL support, but configure could not find \" \\\n\t\"openssl/crypto.h; thus no SSL crypto locking callbacks will be set, which may \" \\\n\t\"cause random crashes on SSL requests\"\n#   endif\n#  elif defined(HAVE_CURL_GNUTLS)\n#   if defined(HAVE_GCRYPT_H)\n#    define PHP_CURL_NEED_GNUTLS_TSL\n#    include <gcrypt.h>\n#   else\n#    warning \\\n\t\"libcurl was compiled with GnuTLS support, but configure could not find \" \\\n\t\"gcrypt.h; thus no SSL crypto locking callbacks will be set, which may \" \\\n\t\"cause random crashes on SSL requests\"\n#   endif\n#  else\n#   warning \\\n\t\"libcurl was compiled with SSL support, but configure could not determine which\" \\\n\t\"library was used; thus no SSL crypto locking callbacks will be set, which may \" \\\n\t\"cause random crashes on SSL requests\"\n#  endif /* HAVE_CURL_OPENSSL || HAVE_CURL_GNUTLS */\n# endif /* PHP_WIN32 */\n#endif /* ZTS && HAVE_CURL_SSL */\n/* }}} */\n\n#define SMART_STR_PREALLOC 4096\n\n#include \"zend_smart_str.h\"\n#include \"ext/standard/info.h\"\n#include \"ext/standard/file.h\"\n#include \"ext/standard/url.h\"\n#include \"php_curl.h\"\n\nint  le_curl;\nint  le_curl_multi_handle;\nint  le_curl_share_handle;\n\n#ifdef PHP_CURL_NEED_OPENSSL_TSL /* {{{ */\nstatic MUTEX_T *php_curl_openssl_tsl = NULL;\n\nstatic void php_curl_ssl_lock(int mode, int n, const char * file, int line)\n{\n\tif (mode & CRYPTO_LOCK) {\n\t\ttsrm_mutex_lock(php_curl_openssl_tsl[n]);\n\t} else {\n\t\ttsrm_mutex_unlock(php_curl_openssl_tsl[n]);\n\t}\n}\n\nstatic unsigned long php_curl_ssl_id(void)\n{\n\treturn (unsigned long) tsrm_thread_id();\n}\n#endif\n/* }}} */\n\n#ifdef PHP_CURL_NEED_GNUTLS_TSL /* {{{ */\nstatic int php_curl_ssl_mutex_create(void **m)\n{\n\tif (*((MUTEX_T *) m) = tsrm_mutex_alloc()) {\n\t\treturn SUCCESS;\n\t} else {\n\t\treturn FAILURE;\n\t}\n}\n\nstatic int php_curl_ssl_mutex_destroy(void **m)\n{\n\ttsrm_mutex_free(*((MUTEX_T *) m));\n\treturn SUCCESS;\n}\n\nstatic int php_curl_ssl_mutex_lock(void **m)\n{\n\treturn tsrm_mutex_lock(*((MUTEX_T *) m));\n}\n\nstatic int php_curl_ssl_mutex_unlock(void **m)\n{\n\treturn tsrm_mutex_unlock(*((MUTEX_T *) m));\n}\n\nstatic struct gcry_thread_cbs php_curl_gnutls_tsl = {\n\tGCRY_THREAD_OPTION_USER,\n\tNULL,\n\tphp_curl_ssl_mutex_create,\n\tphp_curl_ssl_mutex_destroy,\n\tphp_curl_ssl_mutex_lock,\n\tphp_curl_ssl_mutex_unlock\n};\n#endif\n/* }}} */\n\nstatic void _php_curl_close_ex(php_curl *ch);\nstatic void _php_curl_close(zend_resource *rsrc);\n\n\n#define SAVE_CURL_ERROR(__handle, __err) (__handle)->err.no = (int) __err;\n\n#define CAAL(s, v) add_assoc_long_ex(return_value, s, sizeof(s) - 1, (zend_long) v);\n#define CAAD(s, v) add_assoc_double_ex(return_value, s, sizeof(s) - 1, (double) v);\n#define CAAS(s, v) add_assoc_string_ex(return_value, s, sizeof(s) - 1, (char *) (v ? v : \"\"));\n#define CAASTR(s, v) add_assoc_str_ex(return_value, s, sizeof(s) - 1, \\\n\t\tv ? zend_string_copy(v) : ZSTR_EMPTY_ALLOC());\n#define CAAZ(s, v) add_assoc_zval_ex(return_value, s, sizeof(s) -1 , (zval *) v);\n\n#if defined(PHP_WIN32) || defined(__GNUC__)\n# define php_curl_ret(__ret) RETVAL_FALSE; return __ret;\n#else\n# define php_curl_ret(__ret) RETVAL_FALSE; return;\n#endif\n\nstatic int php_curl_option_str(php_curl *ch, zend_long option, const char *str, const int len, zend_bool make_copy)\n{\n\tCURLcode error = CURLE_OK;\n\n\tif (strlen(str) != len) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Curl option contains invalid characters (\\\\0)\");\n\t\treturn FAILURE;\n\t}\n\n#if LIBCURL_VERSION_NUM >= 0x071100\n\tif (make_copy) {\n#endif\n\t\tchar *copystr;\n\n\t\t/* Strings passed to libcurl as 'char *' arguments, are copied by the library since 7.17.0 */\n\t\tcopystr = estrndup(str, len);\n\t\terror = curl_easy_setopt(ch->cp, option, copystr);\n\t\tzend_llist_add_element(&ch->to_free->str, &copystr);\n#if LIBCURL_VERSION_NUM >= 0x071100\n\t} else {\n\t\terror = curl_easy_setopt(ch->cp, option, str);\n\t}\n#endif\n\n\tSAVE_CURL_ERROR(ch, error)\n\n\treturn error == CURLE_OK ? SUCCESS : FAILURE;\n}\n\nstatic int php_curl_option_url(php_curl *ch, const char *url, const int len) /* {{{ */\n{\n\t/* Disable file:// if open_basedir are used */\n\tif (PG(open_basedir) && *PG(open_basedir)) {\n#if LIBCURL_VERSION_NUM >= 0x071304\n\t\tcurl_easy_setopt(ch->cp, CURLOPT_PROTOCOLS, CURLPROTO_ALL & ~CURLPROTO_FILE);\n#else\n\t\tphp_url *uri;\n\n\t\tif (!(uri = php_url_parse_ex(url, len))) {\n\t\t\tphp_error_docref(NULL, E_WARNING, \"Invalid URL '%s'\", url);\n\t\t\treturn FAILURE;\n\t\t}\n\n\t\tif (uri->scheme && !strncasecmp(\"file\", uri->scheme, sizeof(\"file\"))) {\n\t\t\tphp_error_docref(NULL, E_WARNING, \"Protocol 'file' disabled in cURL\");\n\t\t\tphp_url_free(uri);\n\t\t\treturn FAILURE;\n\t\t}\n\t\tphp_url_free(uri);\n#endif\n\t}\n\n\treturn php_curl_option_str(ch, CURLOPT_URL, url, len, 0);\n}\n/* }}} */\n\nvoid _php_curl_verify_handlers(php_curl *ch, int reporterror) /* {{{ */\n{\n\tphp_stream *stream;\n\n\tZEND_ASSERT(ch && ch->handlers);\n\n\tif (!Z_ISUNDEF(ch->handlers->std_err)) {\n\t\tstream = (php_stream *)zend_fetch_resource2_ex(&ch->handlers->std_err, NULL, php_file_le_stream(), php_file_le_pstream());\n\t\tif (stream == NULL) {\n\t\t\tif (reporterror) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"CURLOPT_STDERR resource has gone away, resetting to stderr\");\n\t\t\t}\n\t\t\tzval_ptr_dtor(&ch->handlers->std_err);\n\t\t\tZVAL_UNDEF(&ch->handlers->std_err);\n\n\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_STDERR, stderr);\n\t\t}\n\t}\n\tif (ch->handlers->read && !Z_ISUNDEF(ch->handlers->read->stream)) {\n\t\tstream = (php_stream *)zend_fetch_resource2_ex(&ch->handlers->read->stream, NULL, php_file_le_stream(), php_file_le_pstream());\n\t\tif (stream == NULL) {\n\t\t\tif (reporterror) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"CURLOPT_INFILE resource has gone away, resetting to default\");\n\t\t\t}\n\t\t\tzval_ptr_dtor(&ch->handlers->read->stream);\n\t\t\tZVAL_UNDEF(&ch->handlers->read->stream);\n\t\t\tch->handlers->read->res = NULL;\n\t\t\tch->handlers->read->fp = 0;\n\n\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_INFILE, (void *) ch);\n\t\t}\n\t}\n\tif (ch->handlers->write_header && !Z_ISUNDEF(ch->handlers->write_header->stream)) {\n\t\tstream = (php_stream *)zend_fetch_resource2_ex(&ch->handlers->write_header->stream, NULL, php_file_le_stream(), php_file_le_pstream());\n\t\tif (stream == NULL) {\n\t\t\tif (reporterror) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"CURLOPT_WRITEHEADER resource has gone away, resetting to default\");\n\t\t\t}\n\t\t\tzval_ptr_dtor(&ch->handlers->write_header->stream);\n\t\t\tZVAL_UNDEF(&ch->handlers->write_header->stream);\n\t\t\tch->handlers->write_header->fp = 0;\n\n\t\t\tch->handlers->write_header->method = PHP_CURL_IGNORE;\n\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_WRITEHEADER, (void *) ch);\n\t\t}\n\t}\n\tif (ch->handlers->write && !Z_ISUNDEF(ch->handlers->write->stream)) {\n\t\tstream = (php_stream *)zend_fetch_resource2_ex(&ch->handlers->write->stream, NULL, php_file_le_stream(), php_file_le_pstream());\n\t\tif (stream == NULL) {\n\t\t\tif (reporterror) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"CURLOPT_FILE resource has gone away, resetting to default\");\n\t\t\t}\n\t\t\tzval_ptr_dtor(&ch->handlers->write->stream);\n\t\t\tZVAL_UNDEF(&ch->handlers->write->stream);\n\t\t\tch->handlers->write->fp = 0;\n\n\t\t\tch->handlers->write->method = PHP_CURL_STDOUT;\n\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_FILE, (void *) ch);\n\t\t}\n\t}\n\treturn;\n}\n/* }}} */\n\n/* {{{ arginfo */\nZEND_BEGIN_ARG_INFO_EX(arginfo_curl_version, 0, 0, 0)\n\tZEND_ARG_INFO(0, version)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_curl_init, 0, 0, 0)\n\tZEND_ARG_INFO(0, url)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_copy_handle, 0)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_setopt, 0)\n\tZEND_ARG_INFO(0, ch)\n\tZEND_ARG_INFO(0, option)\n\tZEND_ARG_INFO(0, value)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_setopt_array, 0)\n\tZEND_ARG_INFO(0, ch)\n\tZEND_ARG_ARRAY_INFO(0, options, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_exec, 0)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_curl_getinfo, 0, 0, 1)\n\tZEND_ARG_INFO(0, ch)\n\tZEND_ARG_INFO(0, option)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_error, 0)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_errno, 0)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_close, 0)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n\n#if LIBCURL_VERSION_NUM >= 0x070c01 /* 7.12.1 */\nZEND_BEGIN_ARG_INFO(arginfo_curl_reset, 0)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n#endif\n\n#if LIBCURL_VERSION_NUM > 0x070f03 /* 7.15.4 */\nZEND_BEGIN_ARG_INFO(arginfo_curl_escape, 0)\n\tZEND_ARG_INFO(0, ch)\n\tZEND_ARG_INFO(0, str)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_unescape, 0)\n\tZEND_ARG_INFO(0, ch)\n\tZEND_ARG_INFO(0, str)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_multi_setopt, 0)\n\tZEND_ARG_INFO(0, sh)\n\tZEND_ARG_INFO(0, option)\n\tZEND_ARG_INFO(0, value)\nZEND_END_ARG_INFO()\n#endif\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_multi_init, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_multi_add_handle, 0)\n\tZEND_ARG_INFO(0, mh)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_multi_remove_handle, 0)\n\tZEND_ARG_INFO(0, mh)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_curl_multi_select, 0, 0, 1)\n\tZEND_ARG_INFO(0, mh)\n\tZEND_ARG_INFO(0, timeout)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_curl_multi_exec, 0, 0, 1)\n\tZEND_ARG_INFO(0, mh)\n\tZEND_ARG_INFO(1, still_running)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_multi_getcontent, 0)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_curl_multi_info_read, 0, 0, 1)\n\tZEND_ARG_INFO(0, mh)\n\tZEND_ARG_INFO(1, msgs_in_queue)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_multi_close, 0)\n\tZEND_ARG_INFO(0, mh)\nZEND_END_ARG_INFO()\n\n#if LIBCURL_VERSION_NUM >= 0x070c00 /* Available since 7.12.0 */\nZEND_BEGIN_ARG_INFO(arginfo_curl_strerror, 0)\n\tZEND_ARG_INFO(0, errornum)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_multi_strerror, 0)\n\tZEND_ARG_INFO(0, errornum)\nZEND_END_ARG_INFO()\n#endif\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_share_init, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_share_close, 0)\n\tZEND_ARG_INFO(0, sh)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_share_setopt, 0)\n\tZEND_ARG_INFO(0, sh)\n\tZEND_ARG_INFO(0, option)\n\tZEND_ARG_INFO(0, value)\nZEND_END_ARG_INFO()\n\n#if LIBCURL_VERSION_NUM >= 0x071200 /* Available since 7.18.0 */\nZEND_BEGIN_ARG_INFO(arginfo_curl_pause, 0)\n\tZEND_ARG_INFO(0, ch)\n\tZEND_ARG_INFO(0, bitmask)\nZEND_END_ARG_INFO()\n#endif\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_curlfile_create, 0, 0, 1)\n\tZEND_ARG_INFO(0, filename)\n\tZEND_ARG_INFO(0, mimetype)\n\tZEND_ARG_INFO(0, postname)\nZEND_END_ARG_INFO()\n/* }}} */\n\n/* {{{ curl_functions[]\n */\nconst zend_function_entry curl_functions[] = {\n\tPHP_FE(curl_init,                arginfo_curl_init)\n\tPHP_FE(curl_copy_handle,         arginfo_curl_copy_handle)\n\tPHP_FE(curl_version,             arginfo_curl_version)\n\tPHP_FE(curl_setopt,              arginfo_curl_setopt)\n\tPHP_FE(curl_setopt_array,        arginfo_curl_setopt_array)\n\tPHP_FE(curl_exec,                arginfo_curl_exec)\n\tPHP_FE(curl_getinfo,             arginfo_curl_getinfo)\n\tPHP_FE(curl_error,               arginfo_curl_error)\n\tPHP_FE(curl_errno,               arginfo_curl_errno)\n\tPHP_FE(curl_close,               arginfo_curl_close)\n#if LIBCURL_VERSION_NUM >= 0x070c00 /* 7.12.0 */\n\tPHP_FE(curl_strerror,            arginfo_curl_strerror)\n\tPHP_FE(curl_multi_strerror,      arginfo_curl_multi_strerror)\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070c01 /* 7.12.1 */\n\tPHP_FE(curl_reset,               arginfo_curl_reset)\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070f04 /* 7.15.4 */\n\tPHP_FE(curl_escape,              arginfo_curl_escape)\n\tPHP_FE(curl_unescape,            arginfo_curl_unescape)\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071200 /* 7.18.0 */\n\tPHP_FE(curl_pause,               arginfo_curl_pause)\n#endif\n\tPHP_FE(curl_multi_init,          arginfo_curl_multi_init)\n\tPHP_FE(curl_multi_add_handle,    arginfo_curl_multi_add_handle)\n\tPHP_FE(curl_multi_remove_handle, arginfo_curl_multi_remove_handle)\n\tPHP_FE(curl_multi_select,        arginfo_curl_multi_select)\n\tPHP_FE(curl_multi_exec,          arginfo_curl_multi_exec)\n\tPHP_FE(curl_multi_getcontent,    arginfo_curl_multi_getcontent)\n\tPHP_FE(curl_multi_info_read,     arginfo_curl_multi_info_read)\n\tPHP_FE(curl_multi_close,         arginfo_curl_multi_close)\n#if LIBCURL_VERSION_NUM >= 0x070f04 /* 7.15.4 */\n\tPHP_FE(curl_multi_setopt,        arginfo_curl_multi_setopt)\n#endif\n\tPHP_FE(curl_share_init,          arginfo_curl_share_init)\n\tPHP_FE(curl_share_close,         arginfo_curl_share_close)\n\tPHP_FE(curl_share_setopt,        arginfo_curl_share_setopt)\n\tPHP_FE(curl_file_create,         arginfo_curlfile_create)\n\tPHP_FE_END\n};\n/* }}} */\n\n/* {{{ curl_module_entry\n */\nzend_module_entry curl_module_entry = {\n\tSTANDARD_MODULE_HEADER,\n\t\"curl\",\n\tcurl_functions,\n\tPHP_MINIT(curl),\n\tPHP_MSHUTDOWN(curl),\n\tNULL,\n\tNULL,\n\tPHP_MINFO(curl),\n\tPHP_CURL_VERSION,\n\tSTANDARD_MODULE_PROPERTIES\n};\n/* }}} */\n\n#ifdef COMPILE_DL_CURL\nZEND_GET_MODULE (curl)\n#endif\n\n/* {{{ PHP_INI_BEGIN */\nPHP_INI_BEGIN()\n\tPHP_INI_ENTRY(\"curl.cainfo\", \"\", PHP_INI_SYSTEM, NULL)\nPHP_INI_END()\n/* }}} */\n\n/* {{{ PHP_MINFO_FUNCTION\n */\nPHP_MINFO_FUNCTION(curl)\n{\n\tcurl_version_info_data *d;\n\tchar **p;\n\tchar str[1024];\n\tsize_t n = 0;\n\n\td = curl_version_info(CURLVERSION_NOW);\n\tphp_info_print_table_start();\n\tphp_info_print_table_row(2, \"cURL support\",    \"enabled\");\n\tphp_info_print_table_row(2, \"cURL Information\", d->version);\n\tsprintf(str, \"%d\", d->age);\n\tphp_info_print_table_row(2, \"Age\", str);\n\n\t/* To update on each new cURL release using src/main.c in cURL sources */\n\tif (d->features) {\n\t\tstruct feat {\n\t\t\tconst char *name;\n\t\t\tint bitmask;\n\t\t};\n\n\t\tunsigned int i;\n\n\t\tstatic const struct feat feats[] = {\n#if LIBCURL_VERSION_NUM >= 0x070a07 /* 7.10.7 */\n\t\t\t{\"AsynchDNS\", CURL_VERSION_ASYNCHDNS},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070f04 /* 7.15.4 */\n\t\t\t{\"CharConv\", CURL_VERSION_CONV},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070a06 /* 7.10.6 */\n\t\t\t{\"Debug\", CURL_VERSION_DEBUG},\n\t\t\t{\"GSS-Negotiate\", CURL_VERSION_GSSNEGOTIATE},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070c00 /* 7.12.0 */\n\t\t\t{\"IDN\", CURL_VERSION_IDN},\n#endif\n\t\t\t{\"IPv6\", CURL_VERSION_IPV6},\n\t\t\t{\"krb4\", CURL_VERSION_KERBEROS4},\n#if LIBCURL_VERSION_NUM >= 0x070b01 /* 7.11.1 */\n\t\t\t{\"Largefile\", CURL_VERSION_LARGEFILE},\n#endif\n\t\t\t{\"libz\", CURL_VERSION_LIBZ},\n#if LIBCURL_VERSION_NUM >= 0x070a06 /* 7.10.6 */\n\t\t\t{\"NTLM\", CURL_VERSION_NTLM},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071600 /* 7.22.0 */\n\t\t\t{\"NTLMWB\", CURL_VERSION_NTLM_WB},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070a08 /* 7.10.8 */\n\t\t\t{\"SPNEGO\", CURL_VERSION_SPNEGO},\n#endif\n\t\t\t{\"SSL\",  CURL_VERSION_SSL},\n#if LIBCURL_VERSION_NUM >= 0x070d02 /* 7.13.2 */\n\t\t\t{\"SSPI\",  CURL_VERSION_SSPI},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071504 /* 7.21.4 */\n\t\t\t{\"TLS-SRP\", CURL_VERSION_TLSAUTH_SRP},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072100 /* 7.33.0 */\n\t\t\t{\"HTTP2\", CURL_VERSION_HTTP2},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072600 /* 7.38.0 */\n\t\t\t{\"GSSAPI\", CURL_VERSION_GSSAPI},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072800 /* 7.40.0 */\n\t\t\t{\"KERBEROS5\", CURL_VERSION_KERBEROS5},\n\t\t\t{\"UNIX_SOCKETS\", CURL_VERSION_UNIX_SOCKETS},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072f00 /* 7.47.0 */\n\t\t\t{\"PSL\", CURL_VERSION_PSL},\n#endif\n\t\t\t{NULL, 0}\n\t\t};\n\n\t\tphp_info_print_table_row(1, \"Features\");\n\t\tfor(i=0; i<sizeof(feats)/sizeof(feats[0]); i++) {\n\t\t\tif (feats[i].name) {\n\t\t\t\tphp_info_print_table_row(2, feats[i].name, d->features & feats[i].bitmask ? \"Yes\" : \"No\");\n\t\t\t}\n\t\t}\n\t}\n\n\tn = 0;\n\tp = (char **) d->protocols;\n\twhile (*p != NULL) {\n\t\t\tn += sprintf(str + n, \"%s%s\", *p, *(p + 1) != NULL ? \", \" : \"\");\n\t\t\tp++;\n\t}\n\tphp_info_print_table_row(2, \"Protocols\", str);\n\n\tphp_info_print_table_row(2, \"Host\", d->host);\n\n\tif (d->ssl_version) {\n\t\tphp_info_print_table_row(2, \"SSL Version\", d->ssl_version);\n\t}\n\n\tif (d->libz_version) {\n\t\tphp_info_print_table_row(2, \"ZLib Version\", d->libz_version);\n\t}\n\n#if defined(CURLVERSION_SECOND) && CURLVERSION_NOW >= CURLVERSION_SECOND\n\tif (d->ares) {\n\t\tphp_info_print_table_row(2, \"ZLib Version\", d->ares);\n\t}\n#endif\n\n#if defined(CURLVERSION_THIRD) && CURLVERSION_NOW >= CURLVERSION_THIRD\n\tif (d->libidn) {\n\t\tphp_info_print_table_row(2, \"libIDN Version\", d->libidn);\n\t}\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071300\n\n\tif (d->iconv_ver_num) {\n\t\tphp_info_print_table_row(2, \"IconV Version\", d->iconv_ver_num);\n\t}\n\n\tif (d->libssh_version) {\n\t\tphp_info_print_table_row(2, \"libSSH Version\", d->libssh_version);\n\t}\n#endif\n\tphp_info_print_table_end();\n}\n/* }}} */\n\n#define REGISTER_CURL_CONSTANT(__c) REGISTER_LONG_CONSTANT(#__c, __c, CONST_CS | CONST_PERSISTENT)\n\n/* {{{ PHP_MINIT_FUNCTION\n */\nPHP_MINIT_FUNCTION(curl)\n{\n\tle_curl = zend_register_list_destructors_ex(_php_curl_close, NULL, \"curl\", module_number);\n\tle_curl_multi_handle = zend_register_list_destructors_ex(_php_curl_multi_close, NULL, \"curl_multi\", module_number);\n\tle_curl_share_handle = zend_register_list_destructors_ex(_php_curl_share_close, NULL, \"curl_share\", module_number);\n\n\tREGISTER_INI_ENTRIES();\n\n\t/* See http://curl.haxx.se/lxr/source/docs/libcurl/symbols-in-versions\n\t   or curl src/docs/libcurl/symbols-in-versions for a (almost) complete list\n\t   of options and which version they were introduced */\n\n\t/* Constants for curl_setopt() */\n\tREGISTER_CURL_CONSTANT(CURLOPT_AUTOREFERER);\n\tREGISTER_CURL_CONSTANT(CURLOPT_BINARYTRANSFER);\n\tREGISTER_CURL_CONSTANT(CURLOPT_BUFFERSIZE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_CAINFO);\n\tREGISTER_CURL_CONSTANT(CURLOPT_CAPATH);\n\tREGISTER_CURL_CONSTANT(CURLOPT_CONNECTTIMEOUT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_COOKIE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_COOKIEFILE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_COOKIEJAR);\n\tREGISTER_CURL_CONSTANT(CURLOPT_COOKIESESSION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_CRLF);\n\tREGISTER_CURL_CONSTANT(CURLOPT_CUSTOMREQUEST);\n\tREGISTER_CURL_CONSTANT(CURLOPT_DNS_CACHE_TIMEOUT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_DNS_USE_GLOBAL_CACHE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_EGDSOCKET);\n\tREGISTER_CURL_CONSTANT(CURLOPT_ENCODING);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FAILONERROR);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FILE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FILETIME);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FOLLOWLOCATION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FORBID_REUSE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FRESH_CONNECT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTPAPPEND);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTPLISTONLY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTPPORT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_USE_EPRT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_USE_EPSV);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HEADER);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HEADERFUNCTION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HTTP200ALIASES);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HTTPGET);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HTTPHEADER);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HTTPPROXYTUNNEL);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HTTP_VERSION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_INFILE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_INFILESIZE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_INTERFACE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_KRB4LEVEL);\n\tREGISTER_CURL_CONSTANT(CURLOPT_LOW_SPEED_LIMIT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_LOW_SPEED_TIME);\n\tREGISTER_CURL_CONSTANT(CURLOPT_MAXCONNECTS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_MAXREDIRS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_NETRC);\n\tREGISTER_CURL_CONSTANT(CURLOPT_NOBODY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_NOPROGRESS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_NOSIGNAL);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PORT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_POST);\n\tREGISTER_CURL_CONSTANT(CURLOPT_POSTFIELDS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_POSTQUOTE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PREQUOTE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PRIVATE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROGRESSFUNCTION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXYPORT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXYTYPE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXYUSERPWD);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PUT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_QUOTE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RANDOM_FILE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RANGE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_READDATA);\n\tREGISTER_CURL_CONSTANT(CURLOPT_READFUNCTION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_REFERER);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RESUME_FROM);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RETURNTRANSFER);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SHARE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLCERT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLCERTPASSWD);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLCERTTYPE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLENGINE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLENGINE_DEFAULT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLKEY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLKEYPASSWD);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLKEYTYPE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLVERSION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_CIPHER_LIST);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_VERIFYHOST);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_VERIFYPEER);\n\tREGISTER_CURL_CONSTANT(CURLOPT_STDERR);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TELNETOPTIONS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TIMECONDITION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TIMEOUT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TIMEVALUE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TRANSFERTEXT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_UNRESTRICTED_AUTH);\n\tREGISTER_CURL_CONSTANT(CURLOPT_UPLOAD);\n\tREGISTER_CURL_CONSTANT(CURLOPT_URL);\n\tREGISTER_CURL_CONSTANT(CURLOPT_USERAGENT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_USERPWD);\n\tREGISTER_CURL_CONSTANT(CURLOPT_VERBOSE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_WRITEFUNCTION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_WRITEHEADER);\n\n\t/* */\n\tREGISTER_CURL_CONSTANT(CURLE_ABORTED_BY_CALLBACK);\n\tREGISTER_CURL_CONSTANT(CURLE_BAD_CALLING_ORDER);\n\tREGISTER_CURL_CONSTANT(CURLE_BAD_CONTENT_ENCODING);\n\tREGISTER_CURL_CONSTANT(CURLE_BAD_DOWNLOAD_RESUME);\n\tREGISTER_CURL_CONSTANT(CURLE_BAD_FUNCTION_ARGUMENT);\n\tREGISTER_CURL_CONSTANT(CURLE_BAD_PASSWORD_ENTERED);\n\tREGISTER_CURL_CONSTANT(CURLE_COULDNT_CONNECT);\n\tREGISTER_CURL_CONSTANT(CURLE_COULDNT_RESOLVE_HOST);\n\tREGISTER_CURL_CONSTANT(CURLE_COULDNT_RESOLVE_PROXY);\n\tREGISTER_CURL_CONSTANT(CURLE_FAILED_INIT);\n\tREGISTER_CURL_CONSTANT(CURLE_FILE_COULDNT_READ_FILE);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_ACCESS_DENIED);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_BAD_DOWNLOAD_RESUME);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_CANT_GET_HOST);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_CANT_RECONNECT);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_COULDNT_GET_SIZE);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_COULDNT_RETR_FILE);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_COULDNT_SET_ASCII);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_COULDNT_SET_BINARY);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_COULDNT_STOR_FILE);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_COULDNT_USE_REST);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_PARTIAL_FILE);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_PORT_FAILED);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_QUOTE_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_USER_PASSWORD_INCORRECT);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_WEIRD_227_FORMAT);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_WEIRD_PASS_REPLY);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_WEIRD_PASV_REPLY);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_WEIRD_SERVER_REPLY);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_WEIRD_USER_REPLY);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_WRITE_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_FUNCTION_NOT_FOUND);\n\tREGISTER_CURL_CONSTANT(CURLE_GOT_NOTHING);\n\tREGISTER_CURL_CONSTANT(CURLE_HTTP_NOT_FOUND);\n\tREGISTER_CURL_CONSTANT(CURLE_HTTP_PORT_FAILED);\n\tREGISTER_CURL_CONSTANT(CURLE_HTTP_POST_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_HTTP_RANGE_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_HTTP_RETURNED_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_LDAP_CANNOT_BIND);\n\tREGISTER_CURL_CONSTANT(CURLE_LDAP_SEARCH_FAILED);\n\tREGISTER_CURL_CONSTANT(CURLE_LIBRARY_NOT_FOUND);\n\tREGISTER_CURL_CONSTANT(CURLE_MALFORMAT_USER);\n\tREGISTER_CURL_CONSTANT(CURLE_OBSOLETE);\n\tREGISTER_CURL_CONSTANT(CURLE_OK);\n\tREGISTER_CURL_CONSTANT(CURLE_OPERATION_TIMEDOUT);\n\tREGISTER_CURL_CONSTANT(CURLE_OPERATION_TIMEOUTED);\n\tREGISTER_CURL_CONSTANT(CURLE_OUT_OF_MEMORY);\n\tREGISTER_CURL_CONSTANT(CURLE_PARTIAL_FILE);\n\tREGISTER_CURL_CONSTANT(CURLE_READ_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_RECV_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_SEND_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_SHARE_IN_USE);\n\tREGISTER_CURL_CONSTANT(CURLE_SSL_CACERT);\n\tREGISTER_CURL_CONSTANT(CURLE_SSL_CERTPROBLEM);\n\tREGISTER_CURL_CONSTANT(CURLE_SSL_CIPHER);\n\tREGISTER_CURL_CONSTANT(CURLE_SSL_CONNECT_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_SSL_ENGINE_NOTFOUND);\n\tREGISTER_CURL_CONSTANT(CURLE_SSL_ENGINE_SETFAILED);\n\tREGISTER_CURL_CONSTANT(CURLE_SSL_PEER_CERTIFICATE);\n\tREGISTER_CURL_CONSTANT(CURLE_TELNET_OPTION_SYNTAX);\n\tREGISTER_CURL_CONSTANT(CURLE_TOO_MANY_REDIRECTS);\n\tREGISTER_CURL_CONSTANT(CURLE_UNKNOWN_TELNET_OPTION);\n\tREGISTER_CURL_CONSTANT(CURLE_UNSUPPORTED_PROTOCOL);\n\tREGISTER_CURL_CONSTANT(CURLE_URL_MALFORMAT);\n\tREGISTER_CURL_CONSTANT(CURLE_URL_MALFORMAT_USER);\n\tREGISTER_CURL_CONSTANT(CURLE_WRITE_ERROR);\n\n\t/* cURL info constants */\n\tREGISTER_CURL_CONSTANT(CURLINFO_CONNECT_TIME);\n\tREGISTER_CURL_CONSTANT(CURLINFO_CONTENT_LENGTH_DOWNLOAD);\n\tREGISTER_CURL_CONSTANT(CURLINFO_CONTENT_LENGTH_UPLOAD);\n\tREGISTER_CURL_CONSTANT(CURLINFO_CONTENT_TYPE);\n\tREGISTER_CURL_CONSTANT(CURLINFO_EFFECTIVE_URL);\n\tREGISTER_CURL_CONSTANT(CURLINFO_FILETIME);\n\tREGISTER_CURL_CONSTANT(CURLINFO_HEADER_OUT);\n\tREGISTER_CURL_CONSTANT(CURLINFO_HEADER_SIZE);\n\tREGISTER_CURL_CONSTANT(CURLINFO_HTTP_CODE);\n\tREGISTER_CURL_CONSTANT(CURLINFO_LASTONE);\n\tREGISTER_CURL_CONSTANT(CURLINFO_NAMELOOKUP_TIME);\n\tREGISTER_CURL_CONSTANT(CURLINFO_PRETRANSFER_TIME);\n\tREGISTER_CURL_CONSTANT(CURLINFO_PRIVATE);\n\tREGISTER_CURL_CONSTANT(CURLINFO_REDIRECT_COUNT);\n\tREGISTER_CURL_CONSTANT(CURLINFO_REDIRECT_TIME);\n\tREGISTER_CURL_CONSTANT(CURLINFO_REQUEST_SIZE);\n\tREGISTER_CURL_CONSTANT(CURLINFO_SIZE_DOWNLOAD);\n\tREGISTER_CURL_CONSTANT(CURLINFO_SIZE_UPLOAD);\n\tREGISTER_CURL_CONSTANT(CURLINFO_SPEED_DOWNLOAD);\n\tREGISTER_CURL_CONSTANT(CURLINFO_SPEED_UPLOAD);\n\tREGISTER_CURL_CONSTANT(CURLINFO_SSL_VERIFYRESULT);\n\tREGISTER_CURL_CONSTANT(CURLINFO_STARTTRANSFER_TIME);\n\tREGISTER_CURL_CONSTANT(CURLINFO_TOTAL_TIME);\n\n\t/* Other */\n\tREGISTER_CURL_CONSTANT(CURLMSG_DONE);\n\tREGISTER_CURL_CONSTANT(CURLVERSION_NOW);\n\n\t/* Curl Multi Constants */\n\tREGISTER_CURL_CONSTANT(CURLM_BAD_EASY_HANDLE);\n\tREGISTER_CURL_CONSTANT(CURLM_BAD_HANDLE);\n\tREGISTER_CURL_CONSTANT(CURLM_CALL_MULTI_PERFORM);\n\tREGISTER_CURL_CONSTANT(CURLM_INTERNAL_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLM_OK);\n\tREGISTER_CURL_CONSTANT(CURLM_OUT_OF_MEMORY);\n#if LIBCURL_VERSION_NUM >= 0x072001 /* Available since 7.32.1 */\n\tREGISTER_CURL_CONSTANT(CURLM_ADDED_ALREADY);\n#endif\n\n\t/* Curl proxy constants */\n\tREGISTER_CURL_CONSTANT(CURLPROXY_HTTP);\n\tREGISTER_CURL_CONSTANT(CURLPROXY_SOCKS4);\n\tREGISTER_CURL_CONSTANT(CURLPROXY_SOCKS5);\n\n\t/* Curl Share constants */\n\tREGISTER_CURL_CONSTANT(CURLSHOPT_NONE);\n\tREGISTER_CURL_CONSTANT(CURLSHOPT_SHARE);\n\tREGISTER_CURL_CONSTANT(CURLSHOPT_UNSHARE);\n\n\t/* Curl Http Version constants (CURLOPT_HTTP_VERSION) */\n\tREGISTER_CURL_CONSTANT(CURL_HTTP_VERSION_1_0);\n\tREGISTER_CURL_CONSTANT(CURL_HTTP_VERSION_1_1);\n\tREGISTER_CURL_CONSTANT(CURL_HTTP_VERSION_NONE);\n\n\t/* Curl Lock constants */\n\tREGISTER_CURL_CONSTANT(CURL_LOCK_DATA_COOKIE);\n\tREGISTER_CURL_CONSTANT(CURL_LOCK_DATA_DNS);\n\tREGISTER_CURL_CONSTANT(CURL_LOCK_DATA_SSL_SESSION);\n\n\t/* Curl NETRC constants (CURLOPT_NETRC) */\n\tREGISTER_CURL_CONSTANT(CURL_NETRC_IGNORED);\n\tREGISTER_CURL_CONSTANT(CURL_NETRC_OPTIONAL);\n\tREGISTER_CURL_CONSTANT(CURL_NETRC_REQUIRED);\n\n\t/* Curl SSL Version constants (CURLOPT_SSLVERSION) */\n\tREGISTER_CURL_CONSTANT(CURL_SSLVERSION_DEFAULT);\n\tREGISTER_CURL_CONSTANT(CURL_SSLVERSION_SSLv2);\n\tREGISTER_CURL_CONSTANT(CURL_SSLVERSION_SSLv3);\n\tREGISTER_CURL_CONSTANT(CURL_SSLVERSION_TLSv1);\n\n\t/* Curl TIMECOND constants (CURLOPT_TIMECONDITION) */\n\tREGISTER_CURL_CONSTANT(CURL_TIMECOND_IFMODSINCE);\n\tREGISTER_CURL_CONSTANT(CURL_TIMECOND_IFUNMODSINCE);\n\tREGISTER_CURL_CONSTANT(CURL_TIMECOND_LASTMOD);\n\tREGISTER_CURL_CONSTANT(CURL_TIMECOND_NONE);\n\n\t/* Curl version constants */\n\tREGISTER_CURL_CONSTANT(CURL_VERSION_IPV6);\n\tREGISTER_CURL_CONSTANT(CURL_VERSION_KERBEROS4);\n\tREGISTER_CURL_CONSTANT(CURL_VERSION_LIBZ);\n\tREGISTER_CURL_CONSTANT(CURL_VERSION_SSL);\n\n#if LIBCURL_VERSION_NUM >= 0x070a06 /* Available since 7.10.6 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_HTTPAUTH);\n\t/* http authentication options */\n\tREGISTER_CURL_CONSTANT(CURLAUTH_ANY);\n\tREGISTER_CURL_CONSTANT(CURLAUTH_ANYSAFE);\n\tREGISTER_CURL_CONSTANT(CURLAUTH_BASIC);\n\tREGISTER_CURL_CONSTANT(CURLAUTH_DIGEST);\n\tREGISTER_CURL_CONSTANT(CURLAUTH_GSSNEGOTIATE);\n\tREGISTER_CURL_CONSTANT(CURLAUTH_NONE);\n\tREGISTER_CURL_CONSTANT(CURLAUTH_NTLM);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070a07 /* Available since 7.10.7 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_HTTP_CONNECTCODE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_CREATE_MISSING_DIRS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXYAUTH);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070a08 /* Available since 7.10.8 */\n\tREGISTER_CURL_CONSTANT(CURLE_FILESIZE_EXCEEDED);\n\tREGISTER_CURL_CONSTANT(CURLE_LDAP_INVALID_URL);\n\tREGISTER_CURL_CONSTANT(CURLINFO_HTTPAUTH_AVAIL);\n\tREGISTER_CURL_CONSTANT(CURLINFO_RESPONSE_CODE);\n\tREGISTER_CURL_CONSTANT(CURLINFO_PROXYAUTH_AVAIL);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_RESPONSE_TIMEOUT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_IPRESOLVE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_MAXFILESIZE);\n\tREGISTER_CURL_CONSTANT(CURL_IPRESOLVE_V4);\n\tREGISTER_CURL_CONSTANT(CURL_IPRESOLVE_V6);\n\tREGISTER_CURL_CONSTANT(CURL_IPRESOLVE_WHATEVER);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070b00 /* Available since 7.11.0 */\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_SSL_FAILED);\n\tREGISTER_CURL_CONSTANT(CURLFTPSSL_ALL);\n\tREGISTER_CURL_CONSTANT(CURLFTPSSL_CONTROL);\n\tREGISTER_CURL_CONSTANT(CURLFTPSSL_NONE);\n\tREGISTER_CURL_CONSTANT(CURLFTPSSL_TRY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_SSL);\n\tREGISTER_CURL_CONSTANT(CURLOPT_NETRC_FILE);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070c02 /* Available since 7.12.2 */\n\tREGISTER_CURL_CONSTANT(CURLFTPAUTH_DEFAULT);\n\tREGISTER_CURL_CONSTANT(CURLFTPAUTH_SSL);\n\tREGISTER_CURL_CONSTANT(CURLFTPAUTH_TLS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTPSSLAUTH);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070d00 /* Available since 7.13.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_ACCOUNT);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070b02 /* Available since 7.11.2 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_TCP_NODELAY);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070c02 /* Available since 7.12.2 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_OS_ERRNO);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070c03 /* Available since 7.12.3 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_NUM_CONNECTS);\n\tREGISTER_CURL_CONSTANT(CURLINFO_SSL_ENGINES);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070e01 /* Available since 7.14.1 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_COOKIELIST);\n\tREGISTER_CURL_CONSTANT(CURLOPT_COOKIELIST);\n\tREGISTER_CURL_CONSTANT(CURLOPT_IGNORE_CONTENT_LENGTH);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070f00 /* Available since 7.15.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_SKIP_PASV_IP);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070f01 /* Available since 7.15.1 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_FILEMETHOD);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070f02 /* Available since 7.15.2 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_CONNECT_ONLY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_LOCALPORT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_LOCALPORTRANGE);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070f03 /* Available since 7.15.3 */\n\tREGISTER_CURL_CONSTANT(CURLFTPMETHOD_MULTICWD);\n\tREGISTER_CURL_CONSTANT(CURLFTPMETHOD_NOCWD);\n\tREGISTER_CURL_CONSTANT(CURLFTPMETHOD_SINGLECWD);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070f04 /* Available since 7.15.4 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_FTP_ENTRY_PATH);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070f05 /* Available since 7.15.5 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_ALTERNATIVE_TO_USER);\n\tREGISTER_CURL_CONSTANT(CURLOPT_MAX_RECV_SPEED_LARGE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_MAX_SEND_SPEED_LARGE);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071000 /* Available since 7.16.0 */\n\tREGISTER_CURL_CONSTANT(CURLE_SSL_CACERT_BADFILE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_SESSIONID_CACHE);\n\tREGISTER_CURL_CONSTANT(CURLMOPT_PIPELINING);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071001 /* Available since 7.16.1 */\n\tREGISTER_CURL_CONSTANT(CURLE_SSH);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_SSL_CCC);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSH_AUTH_TYPES);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSH_PRIVATE_KEYFILE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSH_PUBLIC_KEYFILE);\n\tREGISTER_CURL_CONSTANT(CURLFTPSSL_CCC_ACTIVE);\n\tREGISTER_CURL_CONSTANT(CURLFTPSSL_CCC_NONE);\n\tREGISTER_CURL_CONSTANT(CURLFTPSSL_CCC_PASSIVE);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071002 /* Available since 7.16.2 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_CONNECTTIMEOUT_MS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HTTP_CONTENT_DECODING);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HTTP_TRANSFER_DECODING);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TIMEOUT_MS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071003 /* Available since 7.16.3 */\n\tREGISTER_CURL_CONSTANT(CURLMOPT_MAXCONNECTS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071004 /* Available since 7.16.4 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_KRBLEVEL);\n\tREGISTER_CURL_CONSTANT(CURLOPT_NEW_DIRECTORY_PERMS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_NEW_FILE_PERMS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071100 /* Available since 7.17.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_APPEND);\n\tREGISTER_CURL_CONSTANT(CURLOPT_DIRLISTONLY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_USE_SSL);\n\t/* Curl SSL Constants */\n\tREGISTER_CURL_CONSTANT(CURLUSESSL_ALL);\n\tREGISTER_CURL_CONSTANT(CURLUSESSL_CONTROL);\n\tREGISTER_CURL_CONSTANT(CURLUSESSL_NONE);\n\tREGISTER_CURL_CONSTANT(CURLUSESSL_TRY);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071101 /* Available since 7.17.1 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSH_HOST_PUBLIC_KEY_MD5);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071200 /* Available since 7.18.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXY_TRANSFER_MODE);\n\tREGISTER_CURL_CONSTANT(CURLPAUSE_ALL);\n\tREGISTER_CURL_CONSTANT(CURLPAUSE_CONT);\n\tREGISTER_CURL_CONSTANT(CURLPAUSE_RECV);\n\tREGISTER_CURL_CONSTANT(CURLPAUSE_RECV_CONT);\n\tREGISTER_CURL_CONSTANT(CURLPAUSE_SEND);\n\tREGISTER_CURL_CONSTANT(CURLPAUSE_SEND_CONT);\n\tREGISTER_CURL_CONSTANT(CURL_READFUNC_PAUSE);\n\tREGISTER_CURL_CONSTANT(CURL_WRITEFUNC_PAUSE);\n\n\tREGISTER_CURL_CONSTANT(CURLPROXY_SOCKS4A);\n\tREGISTER_CURL_CONSTANT(CURLPROXY_SOCKS5_HOSTNAME);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071202 /* Available since 7.18.2 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_REDIRECT_URL);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071300 /* Available since 7.19.0 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_APPCONNECT_TIME);\n\tREGISTER_CURL_CONSTANT(CURLINFO_PRIMARY_IP);\n\n\tREGISTER_CURL_CONSTANT(CURLOPT_ADDRESS_SCOPE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_CRLFILE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_ISSUERCERT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_KEYPASSWD);\n\n\tREGISTER_CURL_CONSTANT(CURLSSH_AUTH_ANY);\n\tREGISTER_CURL_CONSTANT(CURLSSH_AUTH_DEFAULT);\n\tREGISTER_CURL_CONSTANT(CURLSSH_AUTH_HOST);\n\tREGISTER_CURL_CONSTANT(CURLSSH_AUTH_KEYBOARD);\n\tREGISTER_CURL_CONSTANT(CURLSSH_AUTH_NONE);\n\tREGISTER_CURL_CONSTANT(CURLSSH_AUTH_PASSWORD);\n\tREGISTER_CURL_CONSTANT(CURLSSH_AUTH_PUBLICKEY);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071301 /* Available since 7.19.1 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_CERTINFO);\n\tREGISTER_CURL_CONSTANT(CURLOPT_CERTINFO);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PASSWORD);\n\tREGISTER_CURL_CONSTANT(CURLOPT_POSTREDIR);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXYPASSWORD);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXYUSERNAME);\n\tREGISTER_CURL_CONSTANT(CURLOPT_USERNAME);\n\tREGISTER_CURL_CONSTANT(CURL_REDIR_POST_301);\n\tREGISTER_CURL_CONSTANT(CURL_REDIR_POST_302);\n\tREGISTER_CURL_CONSTANT(CURL_REDIR_POST_ALL);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071303 /* Available since 7.19.3 */\n\tREGISTER_CURL_CONSTANT(CURLAUTH_DIGEST_IE);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071304 /* Available since 7.19.4 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_CONDITION_UNMET);\n\n\tREGISTER_CURL_CONSTANT(CURLOPT_NOPROXY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROTOCOLS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_REDIR_PROTOCOLS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SOCKS5_GSSAPI_NEC);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SOCKS5_GSSAPI_SERVICE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TFTP_BLKSIZE);\n\n\tREGISTER_CURL_CONSTANT(CURLPROTO_ALL);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_DICT);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_FILE);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_FTP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_FTPS);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_HTTP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_HTTPS);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_LDAP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_LDAPS);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_SCP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_SFTP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_TELNET);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_TFTP);\n\n\tREGISTER_CURL_CONSTANT(CURLPROXY_HTTP_1_0);\n\n\tREGISTER_CURL_CONSTANT(CURLFTP_CREATE_DIR);\n\tREGISTER_CURL_CONSTANT(CURLFTP_CREATE_DIR_NONE);\n\tREGISTER_CURL_CONSTANT(CURLFTP_CREATE_DIR_RETRY);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071306 /* Available since 7.19.6 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSH_KNOWNHOSTS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071400 /* Available since 7.20.0 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_RTSP_CLIENT_CSEQ);\n\tREGISTER_CURL_CONSTANT(CURLINFO_RTSP_CSEQ_RECV);\n\tREGISTER_CURL_CONSTANT(CURLINFO_RTSP_SERVER_CSEQ);\n\tREGISTER_CURL_CONSTANT(CURLINFO_RTSP_SESSION_ID);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_USE_PRET);\n\tREGISTER_CURL_CONSTANT(CURLOPT_MAIL_FROM);\n\tREGISTER_CURL_CONSTANT(CURLOPT_MAIL_RCPT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RTSP_CLIENT_CSEQ);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RTSP_REQUEST);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RTSP_SERVER_CSEQ);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RTSP_SESSION_ID);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RTSP_STREAM_URI);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RTSP_TRANSPORT);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_IMAP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_IMAPS);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_POP3);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_POP3S);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_RTSP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_SMTP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_SMTPS);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_ANNOUNCE);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_DESCRIBE);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_GET_PARAMETER);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_OPTIONS);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_PAUSE);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_PLAY);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_RECEIVE);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_RECORD);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_SET_PARAMETER);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_SETUP);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_TEARDOWN);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071500 /* Available since 7.21.0 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_LOCAL_IP);\n\tREGISTER_CURL_CONSTANT(CURLINFO_LOCAL_PORT);\n\tREGISTER_CURL_CONSTANT(CURLINFO_PRIMARY_PORT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FNMATCH_FUNCTION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_WILDCARDMATCH);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_RTMP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_RTMPE);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_RTMPS);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_RTMPT);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_RTMPTE);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_RTMPTS);\n\tREGISTER_CURL_CONSTANT(CURL_FNMATCHFUNC_FAIL);\n\tREGISTER_CURL_CONSTANT(CURL_FNMATCHFUNC_MATCH);\n\tREGISTER_CURL_CONSTANT(CURL_FNMATCHFUNC_NOMATCH);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071502 /* Available since 7.21.2 */\n\tREGISTER_CURL_CONSTANT(CURLPROTO_GOPHER);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071503 /* Available since 7.21.3 */\n\tREGISTER_CURL_CONSTANT(CURLAUTH_ONLY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RESOLVE);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071504 /* Available since 7.21.4 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_TLSAUTH_PASSWORD);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TLSAUTH_TYPE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TLSAUTH_USERNAME);\n\tREGISTER_CURL_CONSTANT(CURL_TLSAUTH_SRP);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071506 /* Available since 7.21.6 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_ACCEPT_ENCODING);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TRANSFER_ENCODING);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071600 /* Available since 7.22.0 */\n\tREGISTER_CURL_CONSTANT(CURLAUTH_NTLM_WB);\n\tREGISTER_CURL_CONSTANT(CURLGSSAPI_DELEGATION_FLAG);\n\tREGISTER_CURL_CONSTANT(CURLGSSAPI_DELEGATION_POLICY_FLAG);\n\tREGISTER_CURL_CONSTANT(CURLOPT_GSSAPI_DELEGATION);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071800 /* Available since 7.24.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_ACCEPTTIMEOUT_MS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_DNS_SERVERS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071900 /* Available since 7.25.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_MAIL_AUTH);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_OPTIONS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TCP_KEEPALIVE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TCP_KEEPIDLE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TCP_KEEPINTVL);\n\tREGISTER_CURL_CONSTANT(CURLSSLOPT_ALLOW_BEAST);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071901 /* Available since 7.25.1 */\n\tREGISTER_CURL_CONSTANT(CURL_REDIR_POST_303);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071c00 /* Available since 7.28.0 */\n\tREGISTER_CURL_CONSTANT(CURLSSH_AUTH_AGENT);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071e00 /* Available since 7.30.0 */\n\tREGISTER_CURL_CONSTANT(CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE);\n\tREGISTER_CURL_CONSTANT(CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE);\n\tREGISTER_CURL_CONSTANT(CURLMOPT_MAX_HOST_CONNECTIONS);\n\tREGISTER_CURL_CONSTANT(CURLMOPT_MAX_PIPELINE_LENGTH);\n\tREGISTER_CURL_CONSTANT(CURLMOPT_MAX_TOTAL_CONNECTIONS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071f00 /* Available since 7.31.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_SASL_IR);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072100 /* Available since 7.33.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_DNS_INTERFACE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_DNS_LOCAL_IP4);\n\tREGISTER_CURL_CONSTANT(CURLOPT_DNS_LOCAL_IP6);\n\tREGISTER_CURL_CONSTANT(CURLOPT_XOAUTH2_BEARER);\n\n\tREGISTER_CURL_CONSTANT(CURL_HTTP_VERSION_2_0);\n\tREGISTER_CURL_CONSTANT(CURL_VERSION_HTTP2);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072200 /* Available since 7.34.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_LOGIN_OPTIONS);\n\n\tREGISTER_CURL_CONSTANT(CURL_SSLVERSION_TLSv1_0);\n\tREGISTER_CURL_CONSTANT(CURL_SSLVERSION_TLSv1_1);\n\tREGISTER_CURL_CONSTANT(CURL_SSLVERSION_TLSv1_2);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072400 /* Available since 7.36.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_EXPECT_100_TIMEOUT_MS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_ENABLE_ALPN);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_ENABLE_NPN);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072500 /* Available since 7.37.0 */\n\tREGISTER_CURL_CONSTANT(CURLHEADER_SEPARATE);\n\tREGISTER_CURL_CONSTANT(CURLHEADER_UNIFIED);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HEADEROPT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXYHEADER);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072600 /* Available since 7.38.0 */\n\tREGISTER_CURL_CONSTANT(CURLAUTH_NEGOTIATE);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072700 /* Available since 7.39.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_PINNEDPUBLICKEY);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072800 /* Available since 7.40.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_UNIX_SOCKET_PATH);\n\n\tREGISTER_CURL_CONSTANT(CURLPROTO_SMB);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_SMBS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072900 /* Available since 7.41.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_VERIFYSTATUS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072a00 /* Available since 7.42.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_PATH_AS_IS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_FALSESTART);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072b00 /* Available since 7.43.0 */\n\tREGISTER_CURL_CONSTANT(CURL_HTTP_VERSION_2);\n\n\tREGISTER_CURL_CONSTANT(CURLOPT_PIPEWAIT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXY_SERVICE_NAME);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SERVICE_NAME);\n\n\tREGISTER_CURL_CONSTANT(CURLPIPE_NOTHING);\n\tREGISTER_CURL_CONSTANT(CURLPIPE_HTTP1);\n\tREGISTER_CURL_CONSTANT(CURLPIPE_MULTIPLEX);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072c00 /* Available since 7.44.0 */\n\tREGISTER_CURL_CONSTANT(CURLSSLOPT_NO_REVOKE);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072d00 /* Available since 7.45.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_DEFAULT_PROTOCOL);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072e00 /* Available since 7.46.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_STREAM_WEIGHT);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072f00 /* Available since 7.47.0 */\n\tREGISTER_CURL_CONSTANT(CURL_HTTP_VERSION_2TLS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x073000 /* Available since 7.48.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_TFTP_NO_OPTIONS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x073100 /* Available since 7.49.0 */\n\tREGISTER_CURL_CONSTANT(CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_CONNECT_TO);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TCP_FASTOPEN);\n#endif\n\n#if CURLOPT_FTPASCII != 0\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTPASCII);\n#endif\n#if CURLOPT_MUTE != 0\n\tREGISTER_CURL_CONSTANT(CURLOPT_MUTE);\n#endif\n#if CURLOPT_PASSWDFUNCTION != 0\n\tREGISTER_CURL_CONSTANT(CURLOPT_PASSWDFUNCTION);\n#endif\n\tREGISTER_CURL_CONSTANT(CURLOPT_SAFE_UPLOAD);\n\n#ifdef PHP_CURL_NEED_OPENSSL_TSL\n\tif (!CRYPTO_get_id_callback()) {\n\t\tint i, c = CRYPTO_num_locks();\n\n\t\tphp_curl_openssl_tsl = malloc(c * sizeof(MUTEX_T));\n\t\tif (!php_curl_openssl_tsl) {\n\t\t\treturn FAILURE;\n\t\t}\n\n\t\tfor (i = 0; i < c; ++i) {\n\t\t\tphp_curl_openssl_tsl[i] = tsrm_mutex_alloc();\n\t\t}\n\n\t\tCRYPTO_set_id_callback(php_curl_ssl_id);\n\t\tCRYPTO_set_locking_callback(php_curl_ssl_lock);\n\t}\n#endif\n#ifdef PHP_CURL_NEED_GNUTLS_TSL\n\tgcry_control(GCRYCTL_SET_THREAD_CBS, &php_curl_gnutls_tsl);\n#endif\n\n\tif (curl_global_init(CURL_GLOBAL_DEFAULT) != CURLE_OK) {\n\t\treturn FAILURE;\n\t}\n\n\tcurlfile_register_class();\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/* {{{ PHP_MSHUTDOWN_FUNCTION\n */\nPHP_MSHUTDOWN_FUNCTION(curl)\n{\n\tcurl_global_cleanup();\n#ifdef PHP_CURL_NEED_OPENSSL_TSL\n\tif (php_curl_openssl_tsl) {\n\t\tint i, c = CRYPTO_num_locks();\n\n\t\tCRYPTO_set_id_callback(NULL);\n\t\tCRYPTO_set_locking_callback(NULL);\n\n\t\tfor (i = 0; i < c; ++i) {\n\t\t\ttsrm_mutex_free(php_curl_openssl_tsl[i]);\n\t\t}\n\n\t\tfree(php_curl_openssl_tsl);\n\t\tphp_curl_openssl_tsl = NULL;\n\t}\n#endif\n\tUNREGISTER_INI_ENTRIES();\n\treturn SUCCESS;\n}\n/* }}} */\n\n/* {{{ curl_write_nothing\n * Used as a work around. See _php_curl_close_ex\n */\nstatic size_t curl_write_nothing(char *data, size_t size, size_t nmemb, void *ctx)\n{\n\treturn size * nmemb;\n}\n/* }}} */\n\n/* {{{ curl_write\n */\nstatic size_t curl_write(char *data, size_t size, size_t nmemb, void *ctx)\n{\n\tphp_curl *ch = (php_curl *) ctx;\n\tphp_curl_write *t = ch->handlers->write;\n\tsize_t length = size * nmemb;\n\n#if PHP_CURL_DEBUG\n\tfprintf(stderr, \"curl_write() called\\n\");\n\tfprintf(stderr, \"data = %s, size = %d, nmemb = %d, ctx = %x\\n\", data, size, nmemb, ctx);\n#endif\n\n\tswitch (t->method) {\n\t\tcase PHP_CURL_STDOUT:\n\t\t\tPHPWRITE(data, length);\n\t\t\tbreak;\n\t\tcase PHP_CURL_FILE:\n\t\t\treturn fwrite(data, size, nmemb, t->fp);\n\t\tcase PHP_CURL_RETURN:\n\t\t\tif (length > 0) {\n\t\t\t\tsmart_str_appendl(&t->buf, data, (int) length);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase PHP_CURL_USER: {\n\t\t\tzval argv[2];\n\t\t\tzval retval;\n\t\t\tint  error;\n\t\t\tzend_fcall_info fci;\n\n\t\t\tZVAL_RES(&argv[0], ch->res);\n\t\t\tZ_ADDREF(argv[0]);\n\t\t\tZVAL_STRINGL(&argv[1], data, length);\n\n\t\t\tfci.size = sizeof(fci);\n\t\t\tfci.function_table = EG(function_table);\n\t\t\tfci.object = NULL;\n\t\t\tZVAL_COPY_VALUE(&fci.function_name, &t->func_name);\n\t\t\tfci.retval = &retval;\n\t\t\tfci.param_count = 2;\n\t\t\tfci.params = argv;\n\t\t\tfci.no_separation = 0;\n\t\t\tfci.symbol_table = NULL;\n\n\t\t\tch->in_callback = 1;\n\t\t\terror = zend_call_function(&fci, &t->fci_cache);\n\t\t\tch->in_callback = 0;\n\t\t\tif (error == FAILURE) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Could not call the CURLOPT_WRITEFUNCTION\");\n\t\t\t\tlength = -1;\n\t\t\t} else if (!Z_ISUNDEF(retval)) {\n\t\t\t\t_php_curl_verify_handlers(ch, 1);\n\t\t\t\tlength = zval_get_long(&retval);\n\t\t\t}\n\n\t\t\tzval_ptr_dtor(&argv[0]);\n\t\t\tzval_ptr_dtor(&argv[1]);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn length;\n}\n/* }}} */\n\n#if LIBCURL_VERSION_NUM >= 0x071500 /* Available since 7.21.0 */\n/* {{{ curl_fnmatch\n */\nstatic int curl_fnmatch(void *ctx, const char *pattern, const char *string)\n{\n\tphp_curl *ch = (php_curl *) ctx;\n\tphp_curl_fnmatch *t = ch->handlers->fnmatch;\n\tint rval = CURL_FNMATCHFUNC_FAIL;\n\tswitch (t->method) {\n\t\tcase PHP_CURL_USER: {\n\t\t\tzval argv[3];\n\t\t\tzval retval;\n\t\t\tint  error;\n\t\t\tzend_fcall_info fci;\n\n\t\t\tZVAL_RES(&argv[0], ch->res);\n\t\t\tZ_ADDREF(argv[0]);\n\t\t\tZVAL_STRING(&argv[1], pattern);\n\t\t\tZVAL_STRING(&argv[2], string);\n\n\t\t\tfci.size = sizeof(fci);\n\t\t\tfci.function_table = EG(function_table);\n\t\t\tZVAL_COPY_VALUE(&fci.function_name, &t->func_name);\n\t\t\tfci.object = NULL;\n\t\t\tfci.retval = &retval;\n\t\t\tfci.param_count = 3;\n\t\t\tfci.params = argv;\n\t\t\tfci.no_separation = 0;\n\t\t\tfci.symbol_table = NULL;\n\n\t\t\tch->in_callback = 1;\n\t\t\terror = zend_call_function(&fci, &t->fci_cache);\n\t\t\tch->in_callback = 0;\n\t\t\tif (error == FAILURE) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Cannot call the CURLOPT_FNMATCH_FUNCTION\");\n\t\t\t} else if (!Z_ISUNDEF(retval)) {\n\t\t\t\t_php_curl_verify_handlers(ch, 1);\n\t\t\t\trval = zval_get_long(&retval);\n\t\t\t}\n\t\t\tzval_ptr_dtor(&argv[0]);\n\t\t\tzval_ptr_dtor(&argv[1]);\n\t\t\tzval_ptr_dtor(&argv[2]);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn rval;\n}\n/* }}} */\n#endif\n\n/* {{{ curl_progress\n */\nstatic size_t curl_progress(void *clientp, double dltotal, double dlnow, double ultotal, double ulnow)\n{\n\tphp_curl *ch = (php_curl *)clientp;\n\tphp_curl_progress *t = ch->handlers->progress;\n\tsize_t\trval = 0;\n\n#if PHP_CURL_DEBUG\n\tfprintf(stderr, \"curl_progress() called\\n\");\n\tfprintf(stderr, \"clientp = %x, dltotal = %f, dlnow = %f, ultotal = %f, ulnow = %f\\n\", clientp, dltotal, dlnow, ultotal, ulnow);\n#endif\n\n\tswitch (t->method) {\n\t\tcase PHP_CURL_USER: {\n\t\t\tzval argv[5];\n\t\t\tzval retval;\n\t\t\tint  error;\n\t\t\tzend_fcall_info fci;\n\n\t\t\tZVAL_RES(&argv[0], ch->res);\n\t\t\tZ_ADDREF(argv[0]);\n\t\t\tZVAL_LONG(&argv[1], (zend_long)dltotal);\n\t\t\tZVAL_LONG(&argv[2], (zend_long)dlnow);\n\t\t\tZVAL_LONG(&argv[3], (zend_long)ultotal);\n\t\t\tZVAL_LONG(&argv[4], (zend_long)ulnow);\n\n\t\t\tfci.size = sizeof(fci);\n\t\t\tfci.function_table = EG(function_table);\n\t\t\tZVAL_COPY_VALUE(&fci.function_name, &t->func_name);\n\t\t\tfci.object = NULL;\n\t\t\tfci.retval = &retval;\n\t\t\tfci.param_count = 5;\n\t\t\tfci.params = argv;\n\t\t\tfci.no_separation = 0;\n\t\t\tfci.symbol_table = NULL;\n\n\t\t\tch->in_callback = 1;\n\t\t\terror = zend_call_function(&fci, &t->fci_cache);\n\t\t\tch->in_callback = 0;\n\t\t\tif (error == FAILURE) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Cannot call the CURLOPT_PROGRESSFUNCTION\");\n\t\t\t} else if (!Z_ISUNDEF(retval)) {\n\t\t\t\t_php_curl_verify_handlers(ch, 1);\n\t\t\t\tif (0 != zval_get_long(&retval)) {\n\t\t\t\t\trval = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tzval_ptr_dtor(&argv[0]);\n\t\t\tzval_ptr_dtor(&argv[1]);\n\t\t\tzval_ptr_dtor(&argv[2]);\n\t\t\tzval_ptr_dtor(&argv[3]);\n\t\t\tzval_ptr_dtor(&argv[4]);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn rval;\n}\n/* }}} */\n\n/* {{{ curl_read\n */\nstatic size_t curl_read(char *data, size_t size, size_t nmemb, void *ctx)\n{\n\tphp_curl *ch = (php_curl *)ctx;\n\tphp_curl_read *t = ch->handlers->read;\n\tint length = 0;\n\n\tswitch (t->method) {\n\t\tcase PHP_CURL_DIRECT:\n\t\t\tif (t->fp) {\n\t\t\t\tlength = fread(data, size, nmemb, t->fp);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase PHP_CURL_USER: {\n\t\t\tzval argv[3];\n\t\t\tzval retval;\n\t\t\tint  error;\n\t\t\tzend_fcall_info fci;\n\n\t\t\tZVAL_RES(&argv[0], ch->res);\n\t\t\tZ_ADDREF(argv[0]);\n\t\t\tif (t->res) {\n\t\t\t\tZVAL_RES(&argv[1], t->res);\n\t\t\t\tZ_ADDREF(argv[1]);\n\t\t\t} else {\n\t\t\t\tZVAL_NULL(&argv[1]);\n\t\t\t}\n\t\t\tZVAL_LONG(&argv[2], (int)size * nmemb);\n\n\t\t\tfci.size = sizeof(fci);\n\t\t\tfci.function_table = EG(function_table);\n\t\t\tZVAL_COPY_VALUE(&fci.function_name, &t->func_name);\n\t\t\tfci.object = NULL;\n\t\t\tfci.retval = &retval;\n\t\t\tfci.param_count = 3;\n\t\t\tfci.params = argv;\n\t\t\tfci.no_separation = 0;\n\t\t\tfci.symbol_table = NULL;\n\n\t\t\tch->in_callback = 1;\n\t\t\terror = zend_call_function(&fci, &t->fci_cache);\n\t\t\tch->in_callback = 0;\n\t\t\tif (error == FAILURE) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Cannot call the CURLOPT_READFUNCTION\");\n#if LIBCURL_VERSION_NUM >= 0x070c01 /* 7.12.1 */\n\t\t\t\tlength = CURL_READFUNC_ABORT;\n#endif\n\t\t\t} else if (!Z_ISUNDEF(retval)) {\n\t\t\t\t_php_curl_verify_handlers(ch, 1);\n\t\t\t\tif (Z_TYPE(retval) == IS_STRING) {\n\t\t\t\t\tlength = MIN((int) (size * nmemb), Z_STRLEN(retval));\n\t\t\t\t\tmemcpy(data, Z_STRVAL(retval), length);\n\t\t\t\t}\n\t\t\t\tzval_ptr_dtor(&retval);\n\t\t\t}\n\n\t\t\tzval_ptr_dtor(&argv[0]);\n\t\t\tzval_ptr_dtor(&argv[1]);\n\t\t\tzval_ptr_dtor(&argv[2]);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn length;\n}\n/* }}} */\n\n/* {{{ curl_write_header\n */\nstatic size_t curl_write_header(char *data, size_t size, size_t nmemb, void *ctx)\n{\n\tphp_curl *ch = (php_curl *) ctx;\n\tphp_curl_write *t = ch->handlers->write_header;\n\tsize_t length = size * nmemb;\n\n\tswitch (t->method) {\n\t\tcase PHP_CURL_STDOUT:\n\t\t\t/* Handle special case write when we're returning the entire transfer\n\t\t\t */\n\t\t\tif (ch->handlers->write->method == PHP_CURL_RETURN && length > 0) {\n\t\t\t\tsmart_str_appendl(&ch->handlers->write->buf, data, (int) length);\n\t\t\t} else {\n\t\t\t\tPHPWRITE(data, length);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase PHP_CURL_FILE:\n\t\t\treturn fwrite(data, size, nmemb, t->fp);\n\t\tcase PHP_CURL_USER: {\n\t\t\tzval argv[2];\n\t\t\tzval retval;\n\t\t\tint  error;\n\t\t\tzend_fcall_info fci;\n\n\t\t\tZVAL_RES(&argv[0], ch->res);\n\t\t\tZ_ADDREF(argv[0]);\n\t\t\tZVAL_STRINGL(&argv[1], data, length);\n\n\t\t\tfci.size = sizeof(fci);\n\t\t\tfci.function_table = EG(function_table);\n\t\t\tZVAL_COPY_VALUE(&fci.function_name, &t->func_name);\n\t\t\tfci.symbol_table = NULL;\n\t\t\tfci.object = NULL;\n\t\t\tfci.retval = &retval;\n\t\t\tfci.param_count = 2;\n\t\t\tfci.params = argv;\n\t\t\tfci.no_separation = 0;\n\n\t\t\tch->in_callback = 1;\n\t\t\terror = zend_call_function(&fci, &t->fci_cache);\n\t\t\tch->in_callback = 0;\n\t\t\tif (error == FAILURE) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Could not call the CURLOPT_HEADERFUNCTION\");\n\t\t\t\tlength = -1;\n\t\t\t} else if (!Z_ISUNDEF(retval)) {\n\t\t\t\t_php_curl_verify_handlers(ch, 1);\n\t\t\t\tlength = zval_get_long(&retval);\n\t\t\t}\n\t\t\tzval_ptr_dtor(&argv[0]);\n\t\t\tzval_ptr_dtor(&argv[1]);\n\t\t\tbreak;\n\t\t}\n\n\t\tcase PHP_CURL_IGNORE:\n\t\t\treturn length;\n\n\t\tdefault:\n\t\t\treturn -1;\n\t}\n\n\treturn length;\n}\n/* }}} */\n\nstatic int curl_debug(CURL *cp, curl_infotype type, char *buf, size_t buf_len, void *ctx) /* {{{ */\n{\n\tphp_curl *ch = (php_curl *)ctx;\n\n\tif (type == CURLINFO_HEADER_OUT) {\n\t\tif (ch->header.str) {\n\t\t\tzend_string_release(ch->header.str);\n\t\t}\n\t\tif (buf_len > 0) {\n\t\t\tch->header.str = zend_string_init(buf, buf_len, 0);\n\t\t}\n\t}\n\n\treturn 0;\n}\n/* }}} */\n\n#if CURLOPT_PASSWDFUNCTION != 0\n/* {{{ curl_passwd\n */\nstatic size_t curl_passwd(void *ctx, char *prompt, char *buf, int buflen)\n{\n\tphp_curl *ch = (php_curl *) ctx;\n\tzval *func = &ch->handlers->passwd;\n\tzval  argv[3];\n\tzval  retval;\n\tint   error;\n\tint   ret = -1;\n\n\tZVAL_RES(&argv[0], ch->res);\n\tZ_ADDREF(argv[0]);\n\tZVAL_STRING(&argv[1], prompt);\n\tZVAL_LONG(&argv[2], buflen);\n\n\terror = call_user_function(EG(function_table), NULL, func, &retval, 2, argv);\n\tif (error == FAILURE) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Could not call the CURLOPT_PASSWDFUNCTION\");\n\t} else if (Z_TYPE(retval) == IS_STRING) {\n\t\tif (Z_STRLEN(retval) > buflen) {\n\t\t\tphp_error_docref(NULL, E_WARNING, \"Returned password is too long for libcurl to handle\");\n\t\t} else {\n\t\t\tmemcpy(buf, Z_STRVAL(retval), Z_STRLEN(retval) + 1);\n\t\t}\n\t} else {\n\t\tphp_error_docref(NULL, E_WARNING, \"User handler '%s' did not return a string\", Z_STRVAL_P(func));\n\t}\n\n\tzval_ptr_dtor(&argv[0]);\n\tzval_ptr_dtor(&argv[1]);\n\tzval_ptr_dtor(&argv[2]);\n\tzval_ptr_dtor(&retval);\n\n\treturn ret;\n}\n/* }}} */\n#endif\n\n/* {{{ curl_free_string\n */\nstatic void curl_free_string(void **string)\n{\n\tefree((char *)*string);\n}\n/* }}} */\n\n/* {{{ curl_free_post\n */\nstatic void curl_free_post(void **post)\n{\n\tcurl_formfree((struct HttpPost *)*post);\n}\n/* }}} */\n\n/* {{{ curl_free_slist\n */\nstatic void curl_free_slist(zval *el)\n{\n\tcurl_slist_free_all(((struct curl_slist *)Z_PTR_P(el)));\n}\n/* }}} */\n\n/* {{{ proto array curl_version([int version])\n   Return cURL version information. */\nPHP_FUNCTION(curl_version)\n{\n\tcurl_version_info_data *d;\n\tzend_long uversion = CURLVERSION_NOW;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|l\", &uversion) == FAILURE) {\n\t\treturn;\n\t}\n\n\td = curl_version_info(uversion);\n\tif (d == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tarray_init(return_value);\n\n\tCAAL(\"version_number\", d->version_num);\n\tCAAL(\"age\", d->age);\n\tCAAL(\"features\", d->features);\n\tCAAL(\"ssl_version_number\", d->ssl_version_num);\n\tCAAS(\"version\", d->version);\n\tCAAS(\"host\", d->host);\n\tCAAS(\"ssl_version\", d->ssl_version);\n\tCAAS(\"libz_version\", d->libz_version);\n\t/* Add an array of protocols */\n\t{\n\t\tchar **p = (char **) d->protocols;\n\t\tzval protocol_list;\n\n\t\tarray_init(&protocol_list);\n\n\t\twhile (*p != NULL) {\n\t\t\tadd_next_index_string(&protocol_list, *p);\n\t\t\tp++;\n\t\t}\n\t\tCAAZ(\"protocols\", &protocol_list);\n\t}\n}\n/* }}} */\n\n/* {{{ alloc_curl_handle\n */\nstatic php_curl *alloc_curl_handle()\n{\n\tphp_curl *ch               = ecalloc(1, sizeof(php_curl));\n\tch->to_free                = ecalloc(1, sizeof(struct _php_curl_free));\n\tch->handlers               = ecalloc(1, sizeof(php_curl_handlers));\n\tch->handlers->write        = ecalloc(1, sizeof(php_curl_write));\n\tch->handlers->write_header = ecalloc(1, sizeof(php_curl_write));\n\tch->handlers->read         = ecalloc(1, sizeof(php_curl_read));\n\tch->handlers->progress     = NULL;\n#if LIBCURL_VERSION_NUM >= 0x071500 /* Available since 7.21.0 */\n\tch->handlers->fnmatch      = NULL;\n#endif\n\tch->clone \t\t\t\t   = emalloc(sizeof(uint32_t));\n\t*ch->clone                 = 1;\n\n\tmemset(&ch->err, 0, sizeof(struct _php_curl_error));\n\n\tzend_llist_init(&ch->to_free->str,   sizeof(char *),          (llist_dtor_func_t)curl_free_string, 0);\n\tzend_llist_init(&ch->to_free->post,  sizeof(struct HttpPost *), (llist_dtor_func_t)curl_free_post,   0);\n\n\tch->to_free->slist = emalloc(sizeof(HashTable));\n\tzend_hash_init(ch->to_free->slist, 4, NULL, curl_free_slist, 0);\n\n\treturn ch;\n}\n/* }}} */\n\n#if LIBCURL_VERSION_NUM >= 0x071301 /* Available since 7.19.1 */\n/* {{{ create_certinfo\n */\nstatic void create_certinfo(struct curl_certinfo *ci, zval *listcode)\n{\n\tint i;\n\n\tif (ci) {\n\t\tzval certhash;\n\n\t\tfor (i=0; i<ci->num_of_certs; i++) {\n\t\t\tstruct curl_slist *slist;\n\n\t\t\tarray_init(&certhash);\n\t\t\tfor (slist = ci->certinfo[i]; slist; slist = slist->next) {\n\t\t\t\tint len;\n\t\t\t\tchar s[64];\n\t\t\t\tchar *tmp;\n\t\t\t\tstrncpy(s, slist->data, 64);\n\t\t\t\ttmp = memchr(s, ':', 64);\n\t\t\t\tif(tmp) {\n\t\t\t\t\t*tmp = '\\0';\n\t\t\t\t\tlen = strlen(s);\n\t\t\t\t\tadd_assoc_string(&certhash, s, &slist->data[len+1]);\n\t\t\t\t} else {\n\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Could not extract hash key from certificate info\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tadd_next_index_zval(listcode, &certhash);\n\t\t}\n\t}\n}\n/* }}} */\n#endif\n\n/* {{{ _php_curl_set_default_options()\n   Set default options for a handle */\nstatic void _php_curl_set_default_options(php_curl *ch)\n{\n\tchar *cainfo;\n\n\tcurl_easy_setopt(ch->cp, CURLOPT_NOPROGRESS,        1);\n\tcurl_easy_setopt(ch->cp, CURLOPT_VERBOSE,           0);\n\tcurl_easy_setopt(ch->cp, CURLOPT_ERRORBUFFER,       ch->err.str);\n\tcurl_easy_setopt(ch->cp, CURLOPT_WRITEFUNCTION,     curl_write);\n\tcurl_easy_setopt(ch->cp, CURLOPT_FILE,              (void *) ch);\n\tcurl_easy_setopt(ch->cp, CURLOPT_READFUNCTION,      curl_read);\n\tcurl_easy_setopt(ch->cp, CURLOPT_INFILE,            (void *) ch);\n\tcurl_easy_setopt(ch->cp, CURLOPT_HEADERFUNCTION,    curl_write_header);\n\tcurl_easy_setopt(ch->cp, CURLOPT_WRITEHEADER,       (void *) ch);\n#if !defined(ZTS)\n\tcurl_easy_setopt(ch->cp, CURLOPT_DNS_USE_GLOBAL_CACHE, 1);\n#endif\n\tcurl_easy_setopt(ch->cp, CURLOPT_DNS_CACHE_TIMEOUT, 120);\n\tcurl_easy_setopt(ch->cp, CURLOPT_MAXREDIRS, 20); /* prevent infinite redirects */\n\n\tcainfo = INI_STR(\"openssl.cafile\");\n\tif (!(cainfo && cainfo[0] != '\\0')) {\n\t\tcainfo = INI_STR(\"curl.cainfo\");\n\t}\n\tif (cainfo && cainfo[0] != '\\0') {\n\t\tcurl_easy_setopt(ch->cp, CURLOPT_CAINFO, cainfo);\n\t}\n\n#if defined(ZTS)\n\tcurl_easy_setopt(ch->cp, CURLOPT_NOSIGNAL, 1);\n#endif\n}\n/* }}} */\n\n/* {{{ proto resource curl_init([string url])\n   Initialize a cURL session */\nPHP_FUNCTION(curl_init)\n{\n\tphp_curl *ch;\n\tCURL \t *cp;\n\tchar \t *url = NULL;\n\tsize_t\t\t  url_len = 0;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|s\", &url, &url_len) == FAILURE) {\n\t\treturn;\n\t}\n\n\tcp = curl_easy_init();\n\tif (!cp) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Could not initialize a new cURL handle\");\n\t\tRETURN_FALSE;\n\t}\n\n\tch = alloc_curl_handle();\n\n\tch->cp = cp;\n\n\tch->handlers->write->method = PHP_CURL_STDOUT;\n\tch->handlers->read->method  = PHP_CURL_DIRECT;\n\tch->handlers->write_header->method = PHP_CURL_IGNORE;\n\n\t_php_curl_set_default_options(ch);\n\n\tif (url) {\n\t\tif (php_curl_option_url(ch, url, url_len) == FAILURE) {\n\t\t\t_php_curl_close_ex(ch);\n\t\t\tRETURN_FALSE;\n\t\t}\n\t}\n\n\tZVAL_RES(return_value, zend_register_resource(ch, le_curl));\n\tch->res = Z_RES_P(return_value);\n}\n/* }}} */\n\n/* {{{ proto resource curl_copy_handle(resource ch)\n   Copy a cURL handle along with all of it's preferences */\nPHP_FUNCTION(curl_copy_handle)\n{\n\tCURL\t\t*cp;\n\tzval\t\t*zid;\n\tphp_curl\t*ch, *dupch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"r\", &zid) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tcp = curl_easy_duphandle(ch->cp);\n\tif (!cp) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Cannot duplicate cURL handle\");\n\t\tRETURN_FALSE;\n\t}\n\n\tdupch = alloc_curl_handle();\n\n\tdupch->cp = cp;\n\tZ_ADDREF_P(zid);\n\tif (!Z_ISUNDEF(ch->handlers->write->stream)) {\n\t\tZ_ADDREF(ch->handlers->write->stream);\n\t}\n\tdupch->handlers->write->stream = ch->handlers->write->stream;\n\tdupch->handlers->write->method = ch->handlers->write->method;\n\tif (!Z_ISUNDEF(ch->handlers->read->stream)) {\n\t\tZ_ADDREF(ch->handlers->read->stream);\n\t}\n\tdupch->handlers->read->stream  = ch->handlers->read->stream;\n\tdupch->handlers->read->method  = ch->handlers->read->method;\n\tdupch->handlers->write_header->method = ch->handlers->write_header->method;\n\tif (!Z_ISUNDEF(ch->handlers->write_header->stream)) {\n\t\tZ_ADDREF(ch->handlers->write_header->stream);\n\t}\n\tdupch->handlers->write_header->stream = ch->handlers->write_header->stream;\n\n\tdupch->handlers->write->fp = ch->handlers->write->fp;\n\tdupch->handlers->write_header->fp = ch->handlers->write_header->fp;\n\tdupch->handlers->read->fp = ch->handlers->read->fp;\n\tdupch->handlers->read->res = ch->handlers->read->res;\n#if CURLOPT_PASSWDDATA != 0\n\tif (!Z_ISUNDEF(ch->handlers->passwd)) {\n\t\tZVAL_COPY(&dupch->handlers->passwd, &ch->handlers->passwd);\n\t\tcurl_easy_setopt(ch->cp, CURLOPT_PASSWDDATA, (void *) dupch);\n\t}\n#endif\n\tif (!Z_ISUNDEF(ch->handlers->write->func_name)) {\n\t\tZVAL_COPY(&dupch->handlers->write->func_name, &ch->handlers->write->func_name);\n\t}\n\tif (!Z_ISUNDEF(ch->handlers->read->func_name)) {\n\t\tZVAL_COPY(&dupch->handlers->read->func_name, &ch->handlers->read->func_name);\n\t}\n\tif (!Z_ISUNDEF(ch->handlers->write_header->func_name)) {\n\t\tZVAL_COPY(&dupch->handlers->write_header->func_name, &ch->handlers->write_header->func_name);\n\t}\n\n\tcurl_easy_setopt(dupch->cp, CURLOPT_ERRORBUFFER,       dupch->err.str);\n\tcurl_easy_setopt(dupch->cp, CURLOPT_FILE,              (void *) dupch);\n\tcurl_easy_setopt(dupch->cp, CURLOPT_INFILE,            (void *) dupch);\n\tcurl_easy_setopt(dupch->cp, CURLOPT_WRITEHEADER,       (void *) dupch);\n\n\tif (ch->handlers->progress) {\n\t\tdupch->handlers->progress = ecalloc(1, sizeof(php_curl_progress));\n\t\tif (!Z_ISUNDEF(ch->handlers->progress->func_name)) {\n\t\t\tZVAL_COPY(&dupch->handlers->progress->func_name, &ch->handlers->progress->func_name);\n\t\t}\n\t\tdupch->handlers->progress->method = ch->handlers->progress->method;\n\t\tcurl_easy_setopt(dupch->cp, CURLOPT_PROGRESSDATA, (void *) dupch);\n\t}\n\n/* Available since 7.21.0 */\n#if LIBCURL_VERSION_NUM >= 0x071500\n\tif (ch->handlers->fnmatch) {\n\t\tdupch->handlers->fnmatch = ecalloc(1, sizeof(php_curl_fnmatch));\n\t\tif (!Z_ISUNDEF(ch->handlers->fnmatch->func_name)) {\n\t\t\tZVAL_COPY(&dupch->handlers->fnmatch->func_name, &ch->handlers->fnmatch->func_name);\n\t\t}\n\t\tdupch->handlers->fnmatch->method = ch->handlers->fnmatch->method;\n\t\tcurl_easy_setopt(dupch->cp, CURLOPT_FNMATCH_DATA, (void *) dupch);\n\t}\n#endif\n\n\tefree(dupch->to_free->slist);\n\tefree(dupch->to_free);\n\tdupch->to_free = ch->to_free;\n\tefree(dupch->clone);\n\tdupch->clone = ch->clone;\n\n\t/* Keep track of cloned copies to avoid invoking curl destructors for every clone */\n\t(*ch->clone)++;\n\n\tZVAL_RES(return_value, zend_register_resource(dupch, le_curl));\n\tdupch->res = Z_RES_P(return_value);\n}\n/* }}} */\n\nstatic int _php_curl_setopt(php_curl *ch, zend_long option, zval *zvalue) /* {{{ */\n{\n\tCURLcode error = CURLE_OK;\n\tzend_long lval;\n\n\tZVAL_DEREF(zvalue);\n\tswitch (option) {\n\t\t/* Long options */\n\t\tcase CURLOPT_SSL_VERIFYHOST:\n\t\t\tlval = zval_get_long(zvalue);\n\t\t\tif (lval == 1) {\n#if LIBCURL_VERSION_NUM <= 0x071c00 /* 7.28.0 */\n\t\t\t\tphp_error_docref(NULL, E_NOTICE, \"CURLOPT_SSL_VERIFYHOST with value 1 is deprecated and will be removed as of libcurl 7.28.1. It is recommended to use value 2 instead\");\n#else\n\t\t\t\tphp_error_docref(NULL, E_NOTICE, \"CURLOPT_SSL_VERIFYHOST no longer accepts the value 1, value 2 will be used instead\");\n\t\t\t\terror = curl_easy_setopt(ch->cp, option, 2);\n\t\t\t\tbreak;\n#endif\n\t\t\t}\n\t\tcase CURLOPT_AUTOREFERER:\n\t\tcase CURLOPT_BUFFERSIZE:\n\t\tcase CURLOPT_CONNECTTIMEOUT:\n\t\tcase CURLOPT_COOKIESESSION:\n\t\tcase CURLOPT_CRLF:\n\t\tcase CURLOPT_DNS_CACHE_TIMEOUT:\n\t\tcase CURLOPT_DNS_USE_GLOBAL_CACHE:\n\t\tcase CURLOPT_FAILONERROR:\n\t\tcase CURLOPT_FILETIME:\n\t\tcase CURLOPT_FORBID_REUSE:\n\t\tcase CURLOPT_FRESH_CONNECT:\n\t\tcase CURLOPT_FTP_USE_EPRT:\n\t\tcase CURLOPT_FTP_USE_EPSV:\n\t\tcase CURLOPT_HEADER:\n\t\tcase CURLOPT_HTTPGET:\n\t\tcase CURLOPT_HTTPPROXYTUNNEL:\n\t\tcase CURLOPT_HTTP_VERSION:\n\t\tcase CURLOPT_INFILESIZE:\n\t\tcase CURLOPT_LOW_SPEED_LIMIT:\n\t\tcase CURLOPT_LOW_SPEED_TIME:\n\t\tcase CURLOPT_MAXCONNECTS:\n\t\tcase CURLOPT_MAXREDIRS:\n\t\tcase CURLOPT_NETRC:\n\t\tcase CURLOPT_NOBODY:\n\t\tcase CURLOPT_NOPROGRESS:\n\t\tcase CURLOPT_NOSIGNAL:\n\t\tcase CURLOPT_PORT:\n\t\tcase CURLOPT_POST:\n\t\tcase CURLOPT_PROXYPORT:\n\t\tcase CURLOPT_PROXYTYPE:\n\t\tcase CURLOPT_PUT:\n\t\tcase CURLOPT_RESUME_FROM:\n\t\tcase CURLOPT_SSLVERSION:\n\t\tcase CURLOPT_SSL_VERIFYPEER:\n\t\tcase CURLOPT_TIMECONDITION:\n\t\tcase CURLOPT_TIMEOUT:\n\t\tcase CURLOPT_TIMEVALUE:\n\t\tcase CURLOPT_TRANSFERTEXT:\n\t\tcase CURLOPT_UNRESTRICTED_AUTH:\n\t\tcase CURLOPT_UPLOAD:\n\t\tcase CURLOPT_VERBOSE:\n#if LIBCURL_VERSION_NUM >= 0x070a06 /* Available since 7.10.6 */\n\t\tcase CURLOPT_HTTPAUTH:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070a07 /* Available since 7.10.7 */\n\t\tcase CURLOPT_FTP_CREATE_MISSING_DIRS:\n\t\tcase CURLOPT_PROXYAUTH:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070a08 /* Available since 7.10.8 */\n\t\tcase CURLOPT_FTP_RESPONSE_TIMEOUT:\n\t\tcase CURLOPT_IPRESOLVE:\n\t\tcase CURLOPT_MAXFILESIZE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070b02 /* Available since 7.11.2 */\n\t\tcase CURLOPT_TCP_NODELAY:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070c02 /* Available since 7.12.2 */\n\t\tcase CURLOPT_FTPSSLAUTH:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070e01 /* Available since 7.14.1 */\n\t\tcase CURLOPT_IGNORE_CONTENT_LENGTH:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070f00 /* Available since 7.15.0 */\n\t\tcase CURLOPT_FTP_SKIP_PASV_IP:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070f01 /* Available since 7.15.1 */\n\t\tcase CURLOPT_FTP_FILEMETHOD:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070f02 /* Available since 7.15.2 */\n\t\tcase CURLOPT_CONNECT_ONLY:\n\t\tcase CURLOPT_LOCALPORT:\n\t\tcase CURLOPT_LOCALPORTRANGE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071000 /* Available since 7.16.0 */\n\t\tcase CURLOPT_SSL_SESSIONID_CACHE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071001 /* Available since 7.16.1 */\n\t\tcase CURLOPT_FTP_SSL_CCC:\n\t\tcase CURLOPT_SSH_AUTH_TYPES:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071002 /* Available since 7.16.2 */\n\t\tcase CURLOPT_CONNECTTIMEOUT_MS:\n\t\tcase CURLOPT_HTTP_CONTENT_DECODING:\n\t\tcase CURLOPT_HTTP_TRANSFER_DECODING:\n\t\tcase CURLOPT_TIMEOUT_MS:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071004 /* Available since 7.16.4 */\n\t\tcase CURLOPT_NEW_DIRECTORY_PERMS:\n\t\tcase CURLOPT_NEW_FILE_PERMS:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071100 /* Available since 7.17.0 */\n\t\tcase CURLOPT_USE_SSL:\n#elif LIBCURL_VERSION_NUM >= 0x070b00 /* Available since 7.11.0 */\n\t\tcase CURLOPT_FTP_SSL:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071100 /* Available since 7.17.0 */\n\t\tcase CURLOPT_APPEND:\n\t\tcase CURLOPT_DIRLISTONLY:\n#else\n\t\tcase CURLOPT_FTPAPPEND:\n\t\tcase CURLOPT_FTPLISTONLY:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071200 /* Available since 7.18.0 */\n\t\tcase CURLOPT_PROXY_TRANSFER_MODE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071300 /* Available since 7.19.0 */\n\t\tcase CURLOPT_ADDRESS_SCOPE:\n#endif\n#if LIBCURL_VERSION_NUM >  0x071301 /* Available since 7.19.1 */\n\t\tcase CURLOPT_CERTINFO:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071304 /* Available since 7.19.4 */\n\t\tcase CURLOPT_PROTOCOLS:\n\t\tcase CURLOPT_REDIR_PROTOCOLS:\n\t\tcase CURLOPT_SOCKS5_GSSAPI_NEC:\n\t\tcase CURLOPT_TFTP_BLKSIZE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071400 /* Available since 7.20.0 */\n\t\tcase CURLOPT_FTP_USE_PRET:\n\t\tcase CURLOPT_RTSP_CLIENT_CSEQ:\n\t\tcase CURLOPT_RTSP_REQUEST:\n\t\tcase CURLOPT_RTSP_SERVER_CSEQ:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071500 /* Available since 7.21.0 */\n\t\tcase CURLOPT_WILDCARDMATCH:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071504 /* Available since 7.21.4 */\n\t\tcase CURLOPT_TLSAUTH_TYPE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071600 /* Available since 7.22.0 */\n\t\tcase CURLOPT_GSSAPI_DELEGATION:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071800 /* Available since 7.24.0 */\n\t\tcase CURLOPT_ACCEPTTIMEOUT_MS:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071900 /* Available since 7.25.0 */\n\t\tcase CURLOPT_SSL_OPTIONS:\n\t\tcase CURLOPT_TCP_KEEPALIVE:\n\t\tcase CURLOPT_TCP_KEEPIDLE:\n\t\tcase CURLOPT_TCP_KEEPINTVL:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071f00 /* Available since 7.31.0 */\n\t\tcase CURLOPT_SASL_IR:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072400 /* Available since 7.36.0 */\n\t\tcase CURLOPT_EXPECT_100_TIMEOUT_MS:\n\t\tcase CURLOPT_SSL_ENABLE_ALPN:\n\t\tcase CURLOPT_SSL_ENABLE_NPN:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072500 /* Available since 7.37.0 */\n\t\tcase CURLOPT_HEADEROPT:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072900 /* Available since 7.41.0 */\n\t\tcase CURLOPT_SSL_VERIFYSTATUS:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072a00 /* Available since 7.42.0 */\n\t\tcase CURLOPT_PATH_AS_IS:\n\t\tcase CURLOPT_SSL_FALSESTART:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072b00 /* Available since 7.43.0 */\n\t\tcase CURLOPT_PIPEWAIT:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072e00 /* Available since 7.46.0 */\n\t\tcase CURLOPT_STREAM_WEIGHT:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x073000 /* Available since 7.48.0 */\n\t\tcase CURLOPT_TFTP_NO_OPTIONS:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x073100 /* Available since 7.49.0 */\n\t\tcase CURLOPT_TCP_FASTOPEN:\n#endif\n#if CURLOPT_MUTE != 0\n\t\tcase CURLOPT_MUTE:\n#endif\n\t\t\tlval = zval_get_long(zvalue);\n#if LIBCURL_VERSION_NUM >= 0x71304\n\t\t\tif ((option == CURLOPT_PROTOCOLS || option == CURLOPT_REDIR_PROTOCOLS) &&\n\t\t\t\t(PG(open_basedir) && *PG(open_basedir)) && (lval & CURLPROTO_FILE)) {\n\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"CURLPROTO_FILE cannot be activated when an open_basedir is set\");\n\t\t\t\t\treturn 1;\n\t\t\t}\n#endif\n# if defined(ZTS)\n\t\t\tif (option == CURLOPT_DNS_USE_GLOBAL_CACHE) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"CURLOPT_DNS_USE_GLOBAL_CACHE cannot be activated when thread safety is enabled\");\n\t\t\t\treturn 1;\n\t\t\t}\n# endif\n\t\t\terror = curl_easy_setopt(ch->cp, option, lval);\n\t\t\tbreak;\n\t\tcase CURLOPT_SAFE_UPLOAD:\n\t\t\tlval = zval_get_long(zvalue);\n\t\t\tif (lval == 0) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Disabling safe uploads is no longer supported\");\n\t\t\t\treturn FAILURE;\n\t\t\t}\n\t\t\tbreak;\n\n\t\t/* String options */\n\t\tcase CURLOPT_CAINFO:\n\t\tcase CURLOPT_CAPATH:\n\t\tcase CURLOPT_COOKIE:\n\t\tcase CURLOPT_EGDSOCKET:\n\t\tcase CURLOPT_INTERFACE:\n\t\tcase CURLOPT_PROXY:\n\t\tcase CURLOPT_PROXYUSERPWD:\n\t\tcase CURLOPT_REFERER:\n\t\tcase CURLOPT_SSLCERTTYPE:\n\t\tcase CURLOPT_SSLENGINE:\n\t\tcase CURLOPT_SSLENGINE_DEFAULT:\n\t\tcase CURLOPT_SSLKEY:\n\t\tcase CURLOPT_SSLKEYPASSWD:\n\t\tcase CURLOPT_SSLKEYTYPE:\n\t\tcase CURLOPT_SSL_CIPHER_LIST:\n\t\tcase CURLOPT_USERAGENT:\n\t\tcase CURLOPT_USERPWD:\n#if LIBCURL_VERSION_NUM >= 0x070e01 /* Available since 7.14.1 */\n\t\tcase CURLOPT_COOKIELIST:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070f05 /* Available since 7.15.5 */\n\t\tcase CURLOPT_FTP_ALTERNATIVE_TO_USER:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071101 /* Available since 7.17.1 */\n\t\tcase CURLOPT_SSH_HOST_PUBLIC_KEY_MD5:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071301 /* Available since 7.19.1 */\n\t\tcase CURLOPT_PASSWORD:\n\t\tcase CURLOPT_PROXYPASSWORD:\n\t\tcase CURLOPT_PROXYUSERNAME:\n\t\tcase CURLOPT_USERNAME:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071304 /* Available since 7.19.4 */\n\t\tcase CURLOPT_NOPROXY:\n\t\tcase CURLOPT_SOCKS5_GSSAPI_SERVICE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071400 /* Available since 7.20.0 */\n\t\tcase CURLOPT_MAIL_FROM:\n\t\tcase CURLOPT_RTSP_STREAM_URI:\n\t\tcase CURLOPT_RTSP_TRANSPORT:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071504 /* Available since 7.21.4 */\n\t\tcase CURLOPT_TLSAUTH_PASSWORD:\n\t\tcase CURLOPT_TLSAUTH_USERNAME:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071506 /* Available since 7.21.6 */\n\t\tcase CURLOPT_ACCEPT_ENCODING:\n\t\tcase CURLOPT_TRANSFER_ENCODING:\n#else\n\t\tcase CURLOPT_ENCODING:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071800 /* Available since 7.24.0 */\n\t\tcase CURLOPT_DNS_SERVERS:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071900 /* Available since 7.25.0 */\n\t\tcase CURLOPT_MAIL_AUTH:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072200 /* Available since 7.34.0 */\n\t\tcase CURLOPT_LOGIN_OPTIONS:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072700 /* Available since 7.39.0 */\n\t\tcase CURLOPT_PINNEDPUBLICKEY:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072b00 /* Available since 7.43.0 */\n\t\tcase CURLOPT_PROXY_SERVICE_NAME:\n\t\tcase CURLOPT_SERVICE_NAME:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072d00 /* Available since 7.45.0 */\n\t\tcase CURLOPT_DEFAULT_PROTOCOL:\n#endif\n\t\t{\n\t\t\tzend_string *str = zval_get_string(zvalue);\n\t\t\tint ret = php_curl_option_str(ch, option, ZSTR_VAL(str), ZSTR_LEN(str), 0);\n\t\t\tzend_string_release(str);\n\t\t\treturn ret;\n\t\t}\n\n\t\t/* Curl nullable string options */\n\t\tcase CURLOPT_CUSTOMREQUEST:\n\t\tcase CURLOPT_FTPPORT:\n\t\tcase CURLOPT_RANGE:\n#if LIBCURL_VERSION_NUM >= 0x070d00 /* Available since 7.13.0 */\n\t\tcase CURLOPT_FTP_ACCOUNT:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071400 /* Available since 7.20.0 */\n\t\tcase CURLOPT_RTSP_SESSION_ID:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072100 /* Available since 7.33.0 */\n\t\tcase CURLOPT_DNS_INTERFACE:\n\t\tcase CURLOPT_DNS_LOCAL_IP4:\n\t\tcase CURLOPT_DNS_LOCAL_IP6:\n\t\tcase CURLOPT_XOAUTH2_BEARER:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072800 /* Available since 7.40.0 */\n\t\tcase CURLOPT_UNIX_SOCKET_PATH:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071004 /* Available since 7.16.4 */\n\t\tcase CURLOPT_KRBLEVEL:\n#else\n\t\tcase CURLOPT_KRB4LEVEL:\n#endif\n\t\t{\n\t\t\tif (Z_ISNULL_P(zvalue)) {\n\t\t\t\terror = curl_easy_setopt(ch->cp, option, NULL);\n\t\t\t} else {\n\t\t\t\tzend_string *str = zval_get_string(zvalue);\n\t\t\t\tint ret = php_curl_option_str(ch, option, ZSTR_VAL(str), ZSTR_LEN(str), 0);\n\t\t\t\tzend_string_release(str);\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\t/* Curl private option */\n\t\tcase CURLOPT_PRIVATE:\n\t\t{\n\t\t\tzend_string *str = zval_get_string(zvalue);\n\t\t\tint ret = php_curl_option_str(ch, option, ZSTR_VAL(str), ZSTR_LEN(str), 1);\n\t\t\tzend_string_release(str);\n\t\t\treturn ret;\n\t\t}\n\n\t\t/* Curl url option */\n\t\tcase CURLOPT_URL:\n\t\t{\n\t\t\tzend_string *str = zval_get_string(zvalue);\n\t\t\tint ret = php_curl_option_url(ch, ZSTR_VAL(str), ZSTR_LEN(str));\n\t\t\tzend_string_release(str);\n\t\t\treturn ret;\n\t\t}\n\n\t\t/* Curl file handle options */\n\t\tcase CURLOPT_FILE:\n\t\tcase CURLOPT_INFILE:\n\t\tcase CURLOPT_STDERR:\n\t\tcase CURLOPT_WRITEHEADER: {\n\t\t\tFILE *fp = NULL;\n\t\t\tphp_stream *what = NULL;\n\n\t\t\tif (Z_TYPE_P(zvalue) != IS_NULL) {\n\t\t\t\twhat = (php_stream *)zend_fetch_resource2_ex(zvalue, \"File-Handle\", php_file_le_stream(), php_file_le_pstream());\n\t\t\t\tif (!what) {\n\t\t\t\t\treturn FAILURE;\n\t\t\t\t}\n\n\t\t\t\tif (FAILURE == php_stream_cast(what, PHP_STREAM_AS_STDIO, (void *) &fp, REPORT_ERRORS)) {\n\t\t\t\t\treturn FAILURE;\n\t\t\t\t}\n\n\t\t\t\tif (!fp) {\n\t\t\t\t\treturn FAILURE;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\terror = CURLE_OK;\n\t\t\tswitch (option) {\n\t\t\t\tcase CURLOPT_FILE:\n\t\t\t\t\tif (!what) {\n\t\t\t\t\t\tif (!Z_ISUNDEF(ch->handlers->write->stream)) {\n\t\t\t\t\t\t\tzval_ptr_dtor(&ch->handlers->write->stream);\n\t\t\t\t\t\t\tZVAL_UNDEF(&ch->handlers->write->stream);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tch->handlers->write->fp = NULL;\n\t\t\t\t\t\tch->handlers->write->method = PHP_CURL_STDOUT;\n\t\t\t\t\t} else if (what->mode[0] != 'r' || what->mode[1] == '+') {\n\t\t\t\t\t\tzval_ptr_dtor(&ch->handlers->write->stream);\n\t\t\t\t\t\tch->handlers->write->fp = fp;\n\t\t\t\t\t\tch->handlers->write->method = PHP_CURL_FILE;\n\t\t\t\t\t\tZVAL_COPY(&ch->handlers->write->stream, zvalue);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"the provided file handle is not writable\");\n\t\t\t\t\t\treturn FAILURE;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase CURLOPT_WRITEHEADER:\n\t\t\t\t\tif (!what) {\n\t\t\t\t\t\tif (!Z_ISUNDEF(ch->handlers->write_header->stream)) {\n\t\t\t\t\t\t\tzval_ptr_dtor(&ch->handlers->write_header->stream);\n\t\t\t\t\t\t\tZVAL_UNDEF(&ch->handlers->write_header->stream);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tch->handlers->write_header->fp = NULL;\n\t\t\t\t\t\tch->handlers->write_header->method = PHP_CURL_IGNORE;\n\t\t\t\t\t} else if (what->mode[0] != 'r' || what->mode[1] == '+') {\n\t\t\t\t\t\tzval_ptr_dtor(&ch->handlers->write_header->stream);\n\t\t\t\t\t\tch->handlers->write_header->fp = fp;\n\t\t\t\t\t\tch->handlers->write_header->method = PHP_CURL_FILE;\n\t\t\t\t\t\tZVAL_COPY(&ch->handlers->write_header->stream, zvalue);;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"the provided file handle is not writable\");\n\t\t\t\t\t\treturn FAILURE;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase CURLOPT_INFILE:\n\t\t\t\t\tif (!what) {\n\t\t\t\t\t\tif (!Z_ISUNDEF(ch->handlers->read->stream)) {\n\t\t\t\t\t\t\tzval_ptr_dtor(&ch->handlers->read->stream);\n\t\t\t\t\t\t\tZVAL_UNDEF(&ch->handlers->read->stream);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tch->handlers->read->fp = NULL;\n\t\t\t\t\t\tch->handlers->read->res = NULL;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tzval_ptr_dtor(&ch->handlers->read->stream);\n\t\t\t\t\t\tch->handlers->read->fp = fp;\n\t\t\t\t\t\tch->handlers->read->res = Z_RES_P(zvalue);\n\t\t\t\t\t\tZVAL_COPY(&ch->handlers->read->stream, zvalue);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase CURLOPT_STDERR:\n\t\t\t\t\tif (!what) {\n\t\t\t\t\t\tif (!Z_ISUNDEF(ch->handlers->std_err)) {\n\t\t\t\t\t\t\tzval_ptr_dtor(&ch->handlers->std_err);\n\t\t\t\t\t\t\tZVAL_UNDEF(&ch->handlers->std_err);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (what->mode[0] != 'r' || what->mode[1] == '+') {\n\t\t\t\t\t\tzval_ptr_dtor(&ch->handlers->std_err);\n\t\t\t\t\t\tZVAL_COPY(&ch->handlers->std_err, zvalue);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"the provided file handle is not writable\");\n\t\t\t\t\t\treturn FAILURE;\n\t\t\t\t\t}\n\t\t\t\t\t/* break omitted intentionally */\n\t\t\t\tdefault:\n\t\t\t\t\terror = curl_easy_setopt(ch->cp, option, fp);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\t/* Curl linked list options */\n\t\tcase CURLOPT_HTTP200ALIASES:\n\t\tcase CURLOPT_HTTPHEADER:\n\t\tcase CURLOPT_POSTQUOTE:\n\t\tcase CURLOPT_PREQUOTE:\n\t\tcase CURLOPT_QUOTE:\n\t\tcase CURLOPT_TELNETOPTIONS:\n#if LIBCURL_VERSION_NUM >= 0x071400 /* Available since 7.20.0 */\n\t\tcase CURLOPT_MAIL_RCPT:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071503 /* Available since 7.21.3 */\n\t\tcase CURLOPT_RESOLVE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072500 /* Available since 7.37.0 */\n\t\tcase CURLOPT_PROXYHEADER:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x073100 /* Available since 7.49.0 */\n\t\tcase CURLOPT_CONNECT_TO:\n#endif\n\t\t{\n\t\t\tzval *current;\n\t\t\tHashTable *ph;\n\t\t\tzend_string *val;\n\t\t\tstruct curl_slist *slist = NULL;\n\n\t\t\tph = HASH_OF(zvalue);\n\t\t\tif (!ph) {\n\t\t\t\tchar *name = NULL;\n\t\t\t\tswitch (option) {\n\t\t\t\t\tcase CURLOPT_HTTPHEADER:\n\t\t\t\t\t\tname = \"CURLOPT_HTTPHEADER\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CURLOPT_QUOTE:\n\t\t\t\t\t\tname = \"CURLOPT_QUOTE\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CURLOPT_HTTP200ALIASES:\n\t\t\t\t\t\tname = \"CURLOPT_HTTP200ALIASES\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CURLOPT_POSTQUOTE:\n\t\t\t\t\t\tname = \"CURLOPT_POSTQUOTE\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CURLOPT_PREQUOTE:\n\t\t\t\t\t\tname = \"CURLOPT_PREQUOTE\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CURLOPT_TELNETOPTIONS:\n\t\t\t\t\t\tname = \"CURLOPT_TELNETOPTIONS\";\n\t\t\t\t\t\tbreak;\n#if LIBCURL_VERSION_NUM >= 0x071400 /* Available since 7.20.0 */\n\t\t\t\t\tcase CURLOPT_MAIL_RCPT:\n\t\t\t\t\t\tname = \"CURLOPT_MAIL_RCPT\";\n\t\t\t\t\t\tbreak;\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071503 /* Available since 7.21.3 */\n\t\t\t\t\tcase CURLOPT_RESOLVE:\n\t\t\t\t\t\tname = \"CURLOPT_RESOLVE\";\n\t\t\t\t\t\tbreak;\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072500 /* Available since 7.37.0 */\n\t\t\t\t\tcase CURLOPT_PROXYHEADER:\n\t\t\t\t\t\tname = \"CURLOPT_PROXYHEADER\";\n\t\t\t\t\t\tbreak;\n#endif\n#if LIBCURL_VERSION_NUM >= 0x073100 /* Available since 7.49.0 */\n\t\t\t\t\tcase CURLOPT_CONNECT_TO:\n\t\t\t\t\t\tname = \"CURLOPT_CONNECT_TO\";\n\t\t\t\t\t\tbreak;\n#endif\n\t\t\t\t}\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"You must pass either an object or an array with the %s argument\", name);\n\t\t\t\treturn FAILURE;\n\t\t\t}\n\n\t\t\tZEND_HASH_FOREACH_VAL(ph, current) {\n\t\t\t\tZVAL_DEREF(current);\n\t\t\t\tval = zval_get_string(current);\n\t\t\t\tslist = curl_slist_append(slist, ZSTR_VAL(val));\n\t\t\t\tzend_string_release(val);\n\t\t\t\tif (!slist) {\n\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Could not build curl_slist\");\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t} ZEND_HASH_FOREACH_END();\n\n\t\t\tif (slist) {\n\t\t\t\tif ((*ch->clone) == 1) {\n\t\t\t\t\tzend_hash_index_update_ptr(ch->to_free->slist, option, slist);\n\t\t\t\t} else {\n\t\t\t\t\tzend_hash_next_index_insert_ptr(ch->to_free->slist, slist);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\terror = curl_easy_setopt(ch->cp, option, slist);\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase CURLOPT_BINARYTRANSFER:\n\t\t\t/* Do nothing, just backward compatibility */\n\t\t\tbreak;\n\n\t\tcase CURLOPT_FOLLOWLOCATION:\n\t\t\tlval = zval_get_long(zvalue);\n#if LIBCURL_VERSION_NUM < 0x071304\n\t\t\tif (PG(open_basedir) && *PG(open_basedir)) {\n\t\t\t\tif (lval != 0) {\n\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"CURLOPT_FOLLOWLOCATION cannot be activated when an open_basedir is set\");\n\t\t\t\t\treturn FAILURE;\n\t\t\t\t}\n\t\t\t}\n#endif\n\t\t\terror = curl_easy_setopt(ch->cp, option, lval);\n\t\t\tbreak;\n\n\t\tcase CURLOPT_HEADERFUNCTION:\n\t\t\tif (!Z_ISUNDEF(ch->handlers->write_header->func_name)) {\n\t\t\t\tzval_ptr_dtor(&ch->handlers->write_header->func_name);\n\t\t\t\tch->handlers->write_header->fci_cache = empty_fcall_info_cache;\n\t\t\t}\n\t\t\tZVAL_COPY(&ch->handlers->write_header->func_name, zvalue);\n\t\t\tch->handlers->write_header->method = PHP_CURL_USER;\n\t\t\tbreak;\n\n\t\tcase CURLOPT_POSTFIELDS:\n\t\t\tif (Z_TYPE_P(zvalue) == IS_ARRAY || Z_TYPE_P(zvalue) == IS_OBJECT) {\n\t\t\t\tzval *current;\n\t\t\t\tHashTable *postfields;\n\t\t\t\tzend_string *string_key;\n\t\t\t\tzend_ulong  num_key;\n\t\t\t\tstruct HttpPost *first = NULL;\n\t\t\t\tstruct HttpPost *last  = NULL;\n\t\t\t\tCURLFORMcode form_error;\n\n\t\t\t\tpostfields = HASH_OF(zvalue);\n\t\t\t\tif (!postfields) {\n\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Couldn't get HashTable in CURLOPT_POSTFIELDS\");\n\t\t\t\t\treturn FAILURE;\n\t\t\t\t}\n\n\t\t\t\tZEND_HASH_FOREACH_KEY_VAL(postfields, num_key, string_key, current) {\n\t\t\t\t\tzend_string *postval;\n\t\t\t\t\t/* Pretend we have a string_key here */\n\t\t\t\t\tif (!string_key) {\n\t\t\t\t\t\tstring_key = zend_long_to_str(num_key);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tzend_string_addref(string_key);\n\t\t\t\t\t}\n\n\t\t\t\t\tZVAL_DEREF(current);\n\t\t\t\t\tif (Z_TYPE_P(current) == IS_OBJECT &&\n\t\t\t\t\t\t\tinstanceof_function(Z_OBJCE_P(current), curl_CURLFile_class)) {\n\t\t\t\t\t\t/* new-style file upload */\n\t\t\t\t\t\tzval *prop, rv;\n\t\t\t\t\t\tchar *type = NULL, *filename = NULL;\n\n\t\t\t\t\t\tprop = zend_read_property(curl_CURLFile_class, current, \"name\", sizeof(\"name\")-1, 0, &rv);\n\t\t\t\t\t\tif (Z_TYPE_P(prop) != IS_STRING) {\n\t\t\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Invalid filename for key %s\", ZSTR_VAL(string_key));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpostval = Z_STR_P(prop);\n\n\t\t\t\t\t\t\tif (php_check_open_basedir(ZSTR_VAL(postval))) {\n\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprop = zend_read_property(curl_CURLFile_class, current, \"mime\", sizeof(\"mime\")-1, 0, &rv);\n\t\t\t\t\t\t\tif (Z_TYPE_P(prop) == IS_STRING && Z_STRLEN_P(prop) > 0) {\n\t\t\t\t\t\t\t\ttype = Z_STRVAL_P(prop);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprop = zend_read_property(curl_CURLFile_class, current, \"postname\", sizeof(\"postname\")-1, 0, &rv);\n\t\t\t\t\t\t\tif (Z_TYPE_P(prop) == IS_STRING && Z_STRLEN_P(prop) > 0) {\n\t\t\t\t\t\t\t\tfilename = Z_STRVAL_P(prop);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tform_error = curl_formadd(&first, &last,\n\t\t\t\t\t\t\t\t\t\t\tCURLFORM_COPYNAME, ZSTR_VAL(string_key),\n\t\t\t\t\t\t\t\t\t\t\tCURLFORM_NAMELENGTH, ZSTR_LEN(string_key),\n\t\t\t\t\t\t\t\t\t\t\tCURLFORM_FILENAME, filename ? filename : ZSTR_VAL(postval),\n\t\t\t\t\t\t\t\t\t\t\tCURLFORM_CONTENTTYPE, type ? type : \"application/octet-stream\",\n\t\t\t\t\t\t\t\t\t\t\tCURLFORM_FILE, ZSTR_VAL(postval),\n\t\t\t\t\t\t\t\t\t\t\tCURLFORM_END);\n\t\t\t\t\t\t\tif (form_error != CURL_FORMADD_OK) {\n\t\t\t\t\t\t\t\t/* Not nice to convert between enums but we only have place for one error type */\n\t\t\t\t\t\t\t\terror = (CURLcode)form_error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tzend_string_release(string_key);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tpostval = zval_get_string(current);\n\n\t\t\t\t\t/* The arguments after _NAMELENGTH and _CONTENTSLENGTH\n\t\t\t\t\t * must be explicitly cast to long in curl_formadd\n\t\t\t\t\t * use since curl needs a long not an int. */\n\t\t\t\t\tform_error = curl_formadd(&first, &last,\n\t\t\t\t\t\t\t\t\t\t CURLFORM_COPYNAME, ZSTR_VAL(string_key),\n\t\t\t\t\t\t\t\t\t\t CURLFORM_NAMELENGTH, ZSTR_LEN(string_key),\n\t\t\t\t\t\t\t\t\t\t CURLFORM_COPYCONTENTS, ZSTR_VAL(postval),\n\t\t\t\t\t\t\t\t\t\t CURLFORM_CONTENTSLENGTH, ZSTR_LEN(postval),\n\t\t\t\t\t\t\t\t\t\t CURLFORM_END);\n\n\t\t\t\t\tif (form_error != CURL_FORMADD_OK) {\n\t\t\t\t\t\t/* Not nice to convert between enums but we only have place for one error type */\n\t\t\t\t\t\terror = (CURLcode)form_error;\n\t\t\t\t\t}\n\t\t\t\t\tzend_string_release(postval);\n\t\t\t\t\tzend_string_release(string_key);\n\t\t\t\t} ZEND_HASH_FOREACH_END();\n\n\t\t\t\tSAVE_CURL_ERROR(ch, error);\n\t\t\t\tif (error != CURLE_OK) {\n\t\t\t\t\treturn FAILURE;\n\t\t\t\t}\n\n\t\t\t\tif ((*ch->clone) == 1) {\n\t\t\t\t\tzend_llist_clean(&ch->to_free->post);\n\t\t\t\t}\n\t\t\t\tzend_llist_add_element(&ch->to_free->post, &first);\n\t\t\t\terror = curl_easy_setopt(ch->cp, CURLOPT_HTTPPOST, first);\n\t\t\t} else {\n#if LIBCURL_VERSION_NUM >= 0x071101\n\t\t\t\tzend_string *str = zval_get_string(zvalue);\n\t\t\t\t/* with curl 7.17.0 and later, we can use COPYPOSTFIELDS, but we have to provide size before */\n\t\t\t\terror = curl_easy_setopt(ch->cp, CURLOPT_POSTFIELDSIZE, ZSTR_LEN(str));\n\t\t\t\terror = curl_easy_setopt(ch->cp, CURLOPT_COPYPOSTFIELDS, ZSTR_VAL(str));\n\t\t\t\tzend_string_release(str);\n#else\n\t\t\t\tchar *post = NULL;\n\t\t\t\tzend_string *str = zval_get_string(zvalue);\n\n\t\t\t\tpost = estrndup(ZSTR_VAL(str), ZSTR_LEN(str));\n\t\t\t\tzend_llist_add_element(&ch->to_free->str, &post);\n\n\t\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_POSTFIELDS, post);\n\t\t\t\terror = curl_easy_setopt(ch->cp, CURLOPT_POSTFIELDSIZE, ZSTR_LEN(str));\n\t\t\t\tzend_string_release(str);\n#endif\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase CURLOPT_PROGRESSFUNCTION:\n\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_PROGRESSFUNCTION,\tcurl_progress);\n\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_PROGRESSDATA, ch);\n\t\t\tif (ch->handlers->progress == NULL) {\n\t\t\t\tch->handlers->progress = ecalloc(1, sizeof(php_curl_progress));\n\t\t\t} else if (!Z_ISUNDEF(ch->handlers->progress->func_name)) {\n\t\t\t\tzval_ptr_dtor(&ch->handlers->progress->func_name);\n\t\t\t\tch->handlers->progress->fci_cache = empty_fcall_info_cache;\n\t\t\t}\n\t\t\tZVAL_COPY(&ch->handlers->progress->func_name, zvalue);\n\t\t\tch->handlers->progress->method = PHP_CURL_USER;\n\t\t\tbreak;\n\n\t\tcase CURLOPT_READFUNCTION:\n\t\t\tif (!Z_ISUNDEF(ch->handlers->read->func_name)) {\n\t\t\t\tzval_ptr_dtor(&ch->handlers->read->func_name);\n\t\t\t\tch->handlers->read->fci_cache = empty_fcall_info_cache;\n\t\t\t}\n\t\t\tZVAL_COPY(&ch->handlers->read->func_name, zvalue);\n\t\t\tch->handlers->read->method = PHP_CURL_USER;\n\t\t\tbreak;\n\n\t\tcase CURLOPT_RETURNTRANSFER:\n\t\t\tlval = zval_get_long(zvalue);\n\t\t\tif (lval) {\n\t\t\t\tch->handlers->write->method = PHP_CURL_RETURN;\n\t\t\t} else {\n\t\t\t\tch->handlers->write->method = PHP_CURL_STDOUT;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase CURLOPT_WRITEFUNCTION:\n\t\t\tif (!Z_ISUNDEF(ch->handlers->write->func_name)) {\n\t\t\t\tzval_ptr_dtor(&ch->handlers->write->func_name);\n\t\t\t\tch->handlers->write->fci_cache = empty_fcall_info_cache;\n\t\t\t}\n\t\t\tZVAL_COPY(&ch->handlers->write->func_name, zvalue);\n\t\t\tch->handlers->write->method = PHP_CURL_USER;\n\t\t\tbreak;\n\n#if LIBCURL_VERSION_NUM >= 0x070f05 /* Available since 7.15.5 */\n\t\tcase CURLOPT_MAX_RECV_SPEED_LARGE:\n\t\tcase CURLOPT_MAX_SEND_SPEED_LARGE:\n\t\t\tlval = zval_get_long(zvalue);\n\t\t\terror = curl_easy_setopt(ch->cp, option, (curl_off_t)lval);\n\t\t\tbreak;\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071301 /* Available since 7.19.1 */\n\t\tcase CURLOPT_POSTREDIR:\n\t\t\tlval = zval_get_long(zvalue);\n\t\t\terror = curl_easy_setopt(ch->cp, CURLOPT_POSTREDIR, lval & CURL_REDIR_POST_ALL);\n\t\t\tbreak;\n#endif\n\n#if CURLOPT_PASSWDFUNCTION != 0\n\t\tcase CURLOPT_PASSWDFUNCTION:\n\t\t\tzval_ptr_dtor(&ch->handlers->passwd);\n\t\t\tZVAL_COPY(&ch->handlers->passwd, zvalue);\n\t\t\terror = curl_easy_setopt(ch->cp, CURLOPT_PASSWDFUNCTION, curl_passwd);\n\t\t\terror = curl_easy_setopt(ch->cp, CURLOPT_PASSWDDATA,     (void *) ch);\n\t\t\tbreak;\n#endif\n\n\t\t/* the following options deal with files, therefore the open_basedir check\n\t\t * is required.\n\t\t */\n\t\tcase CURLOPT_COOKIEFILE:\n\t\tcase CURLOPT_COOKIEJAR:\n\t\tcase CURLOPT_RANDOM_FILE:\n\t\tcase CURLOPT_SSLCERT:\n#if LIBCURL_VERSION_NUM >= 0x070b00 /* Available since 7.11.0 */\n\t\tcase CURLOPT_NETRC_FILE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071001 /* Available since 7.16.1 */\n\t\tcase CURLOPT_SSH_PRIVATE_KEYFILE:\n\t\tcase CURLOPT_SSH_PUBLIC_KEYFILE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071300 /* Available since 7.19.0 */\n\t\tcase CURLOPT_CRLFILE:\n\t\tcase CURLOPT_ISSUERCERT:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071306 /* Available since 7.19.6 */\n\t\tcase CURLOPT_SSH_KNOWNHOSTS:\n#endif\n\t\t{\n\t\t\tzend_string *str = zval_get_string(zvalue);\n\t\t\tint ret;\n\n\t\t\tif (ZSTR_LEN(str) && php_check_open_basedir(ZSTR_VAL(str))) {\n\t\t\t\tzend_string_release(str);\n\t\t\t\treturn FAILURE;\n\t\t\t}\n\n\t\t\tret = php_curl_option_str(ch, option, ZSTR_VAL(str), ZSTR_LEN(str), 0);\n\t\t\tzend_string_release(str);\n\t\t\treturn ret;\n\t\t}\n\n\t\tcase CURLINFO_HEADER_OUT:\n\t\t\tlval = zval_get_long(zvalue);\n\t\t\tif (lval == 1) {\n\t\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_DEBUGFUNCTION, curl_debug);\n\t\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_DEBUGDATA, (void *)ch);\n\t\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_VERBOSE, 1);\n\t\t\t} else {\n\t\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_DEBUGFUNCTION, NULL);\n\t\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_DEBUGDATA, NULL);\n\t\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_VERBOSE, 0);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase CURLOPT_SHARE:\n\t\t\t{\n\t\t\t\tphp_curlsh *sh;\n\t\t\t\tif ((sh = (php_curlsh *)zend_fetch_resource_ex(zvalue, le_curl_share_handle_name, le_curl_share_handle))) {\n\t\t\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_SHARE, sh->share);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\n#if LIBCURL_VERSION_NUM >= 0x071500 /* Available since 7.21.0 */\n\t\tcase CURLOPT_FNMATCH_FUNCTION:\n\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_FNMATCH_FUNCTION, curl_fnmatch);\n\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_FNMATCH_DATA, ch);\n\t\t\tif (ch->handlers->fnmatch == NULL) {\n\t\t\t\tch->handlers->fnmatch = ecalloc(1, sizeof(php_curl_fnmatch));\n\t\t\t} else if (!Z_ISUNDEF(ch->handlers->fnmatch->func_name)) {\n\t\t\t\tzval_ptr_dtor(&ch->handlers->fnmatch->func_name);\n\t\t\t\tch->handlers->fnmatch->fci_cache = empty_fcall_info_cache;\n\t\t\t}\n\t\t\tZVAL_COPY(&ch->handlers->fnmatch->func_name, zvalue);\n\t\t\tch->handlers->fnmatch->method = PHP_CURL_USER;\n\t\t\tbreak;\n#endif\n\n\t}\n\n\tSAVE_CURL_ERROR(ch, error);\n\tif (error != CURLE_OK) {\n\t\treturn FAILURE;\n\t} else {\n\t\treturn SUCCESS;\n\t}\n}\n/* }}} */\n\n/* {{{ proto bool curl_setopt(resource ch, int option, mixed value)\n   Set an option for a cURL transfer */\nPHP_FUNCTION(curl_setopt)\n{\n\tzval       *zid, *zvalue;\n\tzend_long        options;\n\tphp_curl   *ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"rlz\", &zid, &options, &zvalue) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (options <= 0 && options != CURLOPT_SAFE_UPLOAD) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Invalid curl configuration option\");\n\t\tRETURN_FALSE;\n\t}\n\n\tif (_php_curl_setopt(ch, options, zvalue) == SUCCESS) {\n\t\tRETURN_TRUE;\n\t} else {\n\t\tRETURN_FALSE;\n\t}\n}\n/* }}} */\n\n/* {{{ proto bool curl_setopt_array(resource ch, array options)\n   Set an array of option for a cURL transfer */\nPHP_FUNCTION(curl_setopt_array)\n{\n\tzval\t\t*zid, *arr, *entry;\n\tphp_curl\t*ch;\n\tzend_ulong\toption;\n\tzend_string\t*string_key;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"ra\", &zid, &arr) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tZEND_HASH_FOREACH_KEY_VAL(Z_ARRVAL_P(arr), option, string_key, entry) {\n\t\tif (string_key) {\n\t\t\tphp_error_docref(NULL, E_WARNING,\n\t\t\t\t\t\"Array keys must be CURLOPT constants or equivalent integer values\");\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\tif (_php_curl_setopt(ch, (zend_long) option, entry) == FAILURE) {\n\t\t\tRETURN_FALSE;\n\t\t}\n\t} ZEND_HASH_FOREACH_END();\n\n\tRETURN_TRUE;\n}\n/* }}} */\n\n/* {{{ _php_curl_cleanup_handle(ch)\n   Cleanup an execution phase */\nvoid _php_curl_cleanup_handle(php_curl *ch)\n{\n\tsmart_str_free(&ch->handlers->write->buf);\n\tif (ch->header.str) {\n\t\tzend_string_release(ch->header.str);\n\t\tch->header.str = NULL;\n\t}\n\n\tmemset(ch->err.str, 0, CURL_ERROR_SIZE + 1);\n\tch->err.no = 0;\n}\n/* }}} */\n\n/* {{{ proto bool curl_exec(resource ch)\n   Perform a cURL session */\nPHP_FUNCTION(curl_exec)\n{\n\tCURLcode\terror;\n\tzval\t\t*zid;\n\tphp_curl\t*ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"r\", &zid) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\t_php_curl_verify_handlers(ch, 1);\n\n\t_php_curl_cleanup_handle(ch);\n\n\terror = curl_easy_perform(ch->cp);\n\tSAVE_CURL_ERROR(ch, error);\n\t/* CURLE_PARTIAL_FILE is returned by HEAD requests */\n\tif (error != CURLE_OK && error != CURLE_PARTIAL_FILE) {\n\t\tsmart_str_free(&ch->handlers->write->buf);\n\t\tRETURN_FALSE;\n\t}\n\n\tif (!Z_ISUNDEF(ch->handlers->std_err)) {\n\t\tphp_stream  *stream;\n\t\tstream = (php_stream*)zend_fetch_resource2_ex(&ch->handlers->std_err, NULL, php_file_le_stream(), php_file_le_pstream());\n\t\tif (stream) {\n\t\t\tphp_stream_flush(stream);\n\t\t}\n\t}\n\n\tif (ch->handlers->write->method == PHP_CURL_RETURN && ch->handlers->write->buf.s) {\n\t\tsmart_str_0(&ch->handlers->write->buf);\n\t\tRETURN_STR_COPY(ch->handlers->write->buf.s);\n\t}\n\n\t/* flush the file handle, so any remaining data is synched to disk */\n\tif (ch->handlers->write->method == PHP_CURL_FILE && ch->handlers->write->fp) {\n\t\tfflush(ch->handlers->write->fp);\n\t}\n\tif (ch->handlers->write_header->method == PHP_CURL_FILE && ch->handlers->write_header->fp) {\n\t\tfflush(ch->handlers->write_header->fp);\n\t}\n\n\tif (ch->handlers->write->method == PHP_CURL_RETURN) {\n\t\tRETURN_EMPTY_STRING();\n\t} else {\n\t\tRETURN_TRUE;\n\t}\n}\n/* }}} */\n\n/* {{{ proto mixed curl_getinfo(resource ch [, int option])\n   Get information regarding a specific transfer */\nPHP_FUNCTION(curl_getinfo)\n{\n\tzval\t\t*zid;\n\tphp_curl\t*ch;\n\tzend_long\toption = 0;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"r|l\", &zid, &option) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (ZEND_NUM_ARGS() < 2) {\n\t\tchar *s_code;\n\t\t/* libcurl expects long datatype. So far no cases are known where\n\t\t   it would be an issue. Using zend_long would truncate a 64-bit\n\t\t   var on Win64, so the exact long datatype fits everywhere, as\n\t\t   long as there's no 32-bit int overflow. */\n\t\tlong l_code;\n\t\tdouble d_code;\n#if LIBCURL_VERSION_NUM >  0x071301\n\t\tstruct curl_certinfo *ci = NULL;\n\t\tzval listcode;\n#endif\n\n\t\tarray_init(return_value);\n\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_EFFECTIVE_URL, &s_code) == CURLE_OK) {\n\t\t\tCAAS(\"url\", s_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_CONTENT_TYPE, &s_code) == CURLE_OK) {\n\t\t\tif (s_code != NULL) {\n\t\t\t\tCAAS(\"content_type\", s_code);\n\t\t\t} else {\n\t\t\t\tzval retnull;\n\t\t\t\tZVAL_NULL(&retnull);\n\t\t\t\tCAAZ(\"content_type\", &retnull);\n\t\t\t}\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_HTTP_CODE, &l_code) == CURLE_OK) {\n\t\t\tCAAL(\"http_code\", l_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_HEADER_SIZE, &l_code) == CURLE_OK) {\n\t\t\tCAAL(\"header_size\", l_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_REQUEST_SIZE, &l_code) == CURLE_OK) {\n\t\t\tCAAL(\"request_size\", l_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_FILETIME, &l_code) == CURLE_OK) {\n\t\t\tCAAL(\"filetime\", l_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_SSL_VERIFYRESULT, &l_code) == CURLE_OK) {\n\t\t\tCAAL(\"ssl_verify_result\", l_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_REDIRECT_COUNT, &l_code) == CURLE_OK) {\n\t\t\tCAAL(\"redirect_count\", l_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_TOTAL_TIME, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"total_time\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_NAMELOOKUP_TIME, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"namelookup_time\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_CONNECT_TIME, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"connect_time\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_PRETRANSFER_TIME, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"pretransfer_time\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_SIZE_UPLOAD, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"size_upload\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_SIZE_DOWNLOAD, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"size_download\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_SPEED_DOWNLOAD, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"speed_download\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_SPEED_UPLOAD, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"speed_upload\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_CONTENT_LENGTH_DOWNLOAD, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"download_content_length\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_CONTENT_LENGTH_UPLOAD, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"upload_content_length\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_STARTTRANSFER_TIME, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"starttransfer_time\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_REDIRECT_TIME, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"redirect_time\", d_code);\n\t\t}\n#if LIBCURL_VERSION_NUM >= 0x071202 /* Available since 7.18.2 */\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_REDIRECT_URL, &s_code) == CURLE_OK) {\n\t\t\tCAAS(\"redirect_url\", s_code);\n\t\t}\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071300 /* Available since 7.19.0 */\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_PRIMARY_IP, &s_code) == CURLE_OK) {\n\t\t\tCAAS(\"primary_ip\", s_code);\n\t\t}\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071301 /* Available since 7.19.1 */\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_CERTINFO, &ci) == CURLE_OK) {\n\t\t\tarray_init(&listcode);\n\t\t\tcreate_certinfo(ci, &listcode);\n\t\t\tCAAZ(\"certinfo\", &listcode);\n\t\t}\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071500 /* Available since 7.21.0 */\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_PRIMARY_PORT, &l_code) == CURLE_OK) {\n\t\t\tCAAL(\"primary_port\", l_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_LOCAL_IP, &s_code) == CURLE_OK) {\n\t\t\tCAAS(\"local_ip\", s_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_LOCAL_PORT, &l_code) == CURLE_OK) {\n\t\t\tCAAL(\"local_port\", l_code);\n\t\t}\n#endif\n\t\tif (ch->header.str) {\n\t\t\tCAASTR(\"request_header\", ch->header.str);\n\t\t}\n\t} else {\n\t\tswitch (option) {\n\t\t\tcase CURLINFO_HEADER_OUT:\n\t\t\t\tif (ch->header.str) {\n\t\t\t\t\tRETURN_STR_COPY(ch->header.str);\n\t\t\t\t} else {\n\t\t\t\t\tRETURN_FALSE;\n\t\t\t\t}\n#if LIBCURL_VERSION_NUM >= 0x071301 /* Available since 7.19.1 */\n\t\t\tcase CURLINFO_CERTINFO: {\n\t\t\t\tstruct curl_certinfo *ci = NULL;\n\n\t\t\t\tarray_init(return_value);\n\n\t\t\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_CERTINFO, &ci) == CURLE_OK) {\n\t\t\t\t\tcreate_certinfo(ci, return_value);\n\t\t\t\t} else {\n\t\t\t\t\tRETURN_FALSE;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n#endif\n\t\t\tdefault: {\n\t\t\t\tint type = CURLINFO_TYPEMASK & option;\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase CURLINFO_STRING:\n\t\t\t\t\t{\n\t\t\t\t\t\tchar *s_code = NULL;\n\n\t\t\t\t\t\tif (curl_easy_getinfo(ch->cp, option, &s_code) == CURLE_OK && s_code) {\n\t\t\t\t\t\t\tRETURN_STRING(s_code);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tRETURN_FALSE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CURLINFO_LONG:\n\t\t\t\t\t{\n\t\t\t\t\t\tzend_long code = 0;\n\n\t\t\t\t\t\tif (curl_easy_getinfo(ch->cp, option, &code) == CURLE_OK) {\n\t\t\t\t\t\t\tRETURN_LONG(code);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tRETURN_FALSE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CURLINFO_DOUBLE:\n\t\t\t\t\t{\n\t\t\t\t\t\tdouble code = 0.0;\n\n\t\t\t\t\t\tif (curl_easy_getinfo(ch->cp, option, &code) == CURLE_OK) {\n\t\t\t\t\t\t\tRETURN_DOUBLE(code);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tRETURN_FALSE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n#if LIBCURL_VERSION_NUM >= 0x070c03 /* Available since 7.12.3 */\n\t\t\t\t\tcase CURLINFO_SLIST:\n\t\t\t\t\t{\n\t\t\t\t\t\tstruct curl_slist *slist;\n\t\t\t\t\t\tarray_init(return_value);\n\t\t\t\t\t\tif (curl_easy_getinfo(ch->cp, option, &slist) == CURLE_OK) {\n\t\t\t\t\t\t\twhile (slist) {\n\t\t\t\t\t\t\t\tadd_next_index_string(return_value, slist->data);\n\t\t\t\t\t\t\t\tslist = slist->next;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurl_slist_free_all(slist);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tRETURN_FALSE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n#endif\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tRETURN_FALSE;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n/* }}} */\n\n/* {{{ proto string curl_error(resource ch)\n   Return a string contain the last error for the current session */\nPHP_FUNCTION(curl_error)\n{\n\tzval\t\t*zid;\n\tphp_curl\t*ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"r\", &zid) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tch->err.str[CURL_ERROR_SIZE] = 0;\n\tRETURN_STRING(ch->err.str);\n}\n/* }}} */\n\n/* {{{ proto int curl_errno(resource ch)\n   Return an integer containing the last error number */\nPHP_FUNCTION(curl_errno)\n{\n\tzval\t\t*zid;\n\tphp_curl\t*ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"r\", &zid) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tRETURN_LONG(ch->err.no);\n}\n/* }}} */\n\n/* {{{ proto void curl_close(resource ch)\n   Close a cURL session */\nPHP_FUNCTION(curl_close)\n{\n\tzval\t\t*zid;\n\tphp_curl\t*ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"r\", &zid) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (ch->in_callback) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Attempt to close cURL handle from a callback\");\n\t\treturn;\n\t}\n\n\tif (Z_REFCOUNT_P(zid) <= 2) {\n\t\tzend_list_close(Z_RES_P(zid));\n\t}\n}\n/* }}} */\n\n/* {{{ _php_curl_close_ex()\n   List destructor for curl handles */\nstatic void _php_curl_close_ex(php_curl *ch)\n{\n#if PHP_CURL_DEBUG\n\tfprintf(stderr, \"DTOR CALLED, ch = %x\\n\", ch);\n#endif\n\n\t_php_curl_verify_handlers(ch, 0);\n\n\t/*\n\t * Libcurl is doing connection caching. When easy handle is cleaned up,\n\t * if the handle was previously used by the curl_multi_api, the connection\n\t * remains open un the curl multi handle is cleaned up. Some protocols are\n\t * sending content like the FTP one, and libcurl try to use the\n\t * WRITEFUNCTION or the HEADERFUNCTION. Since structures used in those\n\t * callback are freed, we need to use an other callback to which avoid\n\t * segfaults.\n\t *\n\t * Libcurl commit d021f2e8a00 fix this issue and should be part of 7.28.2\n\t */\n\tcurl_easy_setopt(ch->cp, CURLOPT_HEADERFUNCTION, curl_write_nothing);\n\tcurl_easy_setopt(ch->cp, CURLOPT_WRITEFUNCTION, curl_write_nothing);\n\n\tcurl_easy_cleanup(ch->cp);\n\n\t/* cURL destructors should be invoked only by last curl handle */\n\tif (--(*ch->clone) == 0) {\n\t\tzend_llist_clean(&ch->to_free->str);\n\t\tzend_llist_clean(&ch->to_free->post);\n\t\tzend_hash_destroy(ch->to_free->slist);\n\t\tefree(ch->to_free->slist);\n\t\tefree(ch->to_free);\n\t\tefree(ch->clone);\n\t}\n\n\tsmart_str_free(&ch->handlers->write->buf);\n\tzval_ptr_dtor(&ch->handlers->write->func_name);\n\tzval_ptr_dtor(&ch->handlers->read->func_name);\n\tzval_ptr_dtor(&ch->handlers->write_header->func_name);\n#if CURLOPT_PASSWDFUNCTION != 0\n\tzval_ptr_dtor(&ch->handlers->passwd);\n#endif\n\tzval_ptr_dtor(&ch->handlers->std_err);\n\tif (ch->header.str) {\n\t\tzend_string_release(ch->header.str);\n\t}\n\n\tzval_ptr_dtor(&ch->handlers->write_header->stream);\n\tzval_ptr_dtor(&ch->handlers->write->stream);\n\tzval_ptr_dtor(&ch->handlers->read->stream);\n\n\tefree(ch->handlers->write);\n\tefree(ch->handlers->write_header);\n\tefree(ch->handlers->read);\n\n\tif (ch->handlers->progress) {\n\t\tzval_ptr_dtor(&ch->handlers->progress->func_name);\n\t\tefree(ch->handlers->progress);\n\t}\n\n#if LIBCURL_VERSION_NUM >= 0x071500 /* Available since 7.21.0 */\n\tif (ch->handlers->fnmatch) {\n\t\tzval_ptr_dtor(&ch->handlers->fnmatch->func_name);\n\t\tefree(ch->handlers->fnmatch);\n\t}\n#endif\n\n\tefree(ch->handlers);\n\tefree(ch);\n}\n/* }}} */\n\n/* {{{ _php_curl_close()\n   List destructor for curl handles */\nstatic void _php_curl_close(zend_resource *rsrc)\n{\n\tphp_curl *ch = (php_curl *) rsrc->ptr;\n\t_php_curl_close_ex(ch);\n}\n/* }}} */\n\n#if LIBCURL_VERSION_NUM >= 0x070c00 /* Available since 7.12.0 */\n/* {{{ proto bool curl_strerror(int code)\n      return string describing error code */\nPHP_FUNCTION(curl_strerror)\n{\n\tzend_long code;\n\tconst char *str;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"l\", &code) == FAILURE) {\n\t\treturn;\n\t}\n\n\tstr = curl_easy_strerror(code);\n\tif (str) {\n\t\tRETURN_STRING(str);\n\t} else {\n\t\tRETURN_NULL();\n\t}\n}\n/* }}} */\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070c01 /* 7.12.1 */\n/* {{{ _php_curl_reset_handlers()\n   Reset all handlers of a given php_curl */\nstatic void _php_curl_reset_handlers(php_curl *ch)\n{\n\tif (!Z_ISUNDEF(ch->handlers->write->stream)) {\n\t\tzval_ptr_dtor(&ch->handlers->write->stream);\n\t\tZVAL_UNDEF(&ch->handlers->write->stream);\n\t}\n\tch->handlers->write->fp = NULL;\n\tch->handlers->write->method = PHP_CURL_STDOUT;\n\n\tif (!Z_ISUNDEF(ch->handlers->write_header->stream)) {\n\t\tzval_ptr_dtor(&ch->handlers->write_header->stream);\n\t\tZVAL_UNDEF(&ch->handlers->write_header->stream);\n\t}\n\tch->handlers->write_header->fp = NULL;\n\tch->handlers->write_header->method = PHP_CURL_IGNORE;\n\n\tif (!Z_ISUNDEF(ch->handlers->read->stream)) {\n\t\tzval_ptr_dtor(&ch->handlers->read->stream);\n\t\tZVAL_UNDEF(&ch->handlers->read->stream);\n\t}\n\tch->handlers->read->fp = NULL;\n\tch->handlers->read->res = NULL;\n\tch->handlers->read->method  = PHP_CURL_DIRECT;\n\n\tif (!Z_ISUNDEF(ch->handlers->std_err)) {\n\t\tzval_ptr_dtor(&ch->handlers->std_err);\n\t\tZVAL_UNDEF(&ch->handlers->std_err);\n\t}\n\n\tif (ch->handlers->progress) {\n\t\tzval_ptr_dtor(&ch->handlers->progress->func_name);\n\t\tefree(ch->handlers->progress);\n\t\tch->handlers->progress = NULL;\n\t}\n\n#if LIBCURL_VERSION_NUM >= 0x071500 /* Available since 7.21.0 */\n\tif (ch->handlers->fnmatch) {\n\t\tzval_ptr_dtor(&ch->handlers->fnmatch->func_name);\n\t\tefree(ch->handlers->fnmatch);\n\t\tch->handlers->fnmatch = NULL;\n\t}\n#endif\n\n}\n/* }}} */\n\n/* {{{ proto void curl_reset(resource ch)\n   Reset all options of a libcurl session handle */\nPHP_FUNCTION(curl_reset)\n{\n\tzval       *zid;\n\tphp_curl   *ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"r\", &zid) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (ch->in_callback) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Attempt to reset cURL handle from a callback\");\n\t\treturn;\n\t}\n\n\tcurl_easy_reset(ch->cp);\n\t_php_curl_reset_handlers(ch);\n\t_php_curl_set_default_options(ch);\n}\n/* }}} */\n#endif\n\n#if LIBCURL_VERSION_NUM > 0x070f03 /* 7.15.4 */\n/* {{{ proto void curl_escape(resource ch, string str)\n   URL encodes the given string */\nPHP_FUNCTION(curl_escape)\n{\n\tchar       *str = NULL, *res = NULL;\n\tsize_t        str_len = 0;\n\tzval       *zid;\n\tphp_curl   *ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"rs\", &zid, &str, &str_len) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif ((res = curl_easy_escape(ch->cp, str, str_len))) {\n\t\tRETVAL_STRING(res);\n\t\tcurl_free(res);\n\t} else {\n\t\tRETURN_FALSE;\n\t}\n}\n/* }}} */\n\n/* {{{ proto void curl_unescape(resource ch, string str)\n   URL decodes the given string */\nPHP_FUNCTION(curl_unescape)\n{\n\tchar       *str = NULL, *out = NULL;\n\tsize_t     str_len = 0;\n\tint        out_len;\n\tzval       *zid;\n\tphp_curl   *ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"rs\", &zid, &str, &str_len) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (str_len > INT_MAX) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif ((out = curl_easy_unescape(ch->cp, str, str_len, &out_len))) {\n\t\tRETVAL_STRINGL(out, out_len);\n\t\tcurl_free(out);\n\t} else {\n\t\tRETURN_FALSE;\n\t}\n}\n/* }}} */\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071200 /* 7.18.0 */\n/* {{{ proto void curl_pause(resource ch, int bitmask)\n       pause and unpause a connection */\nPHP_FUNCTION(curl_pause)\n{\n\tzend_long       bitmask;\n\tzval       *zid;\n\tphp_curl   *ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"rl\", &zid, &bitmask) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tRETURN_LONG(curl_easy_pause(ch->cp, bitmask));\n}\n/* }}} */\n#endif\n\n#endif /* HAVE_CURL */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: fdm=marker\n * vim: noet sw=4 ts=4\n */\n"], "fixing_code": ["/*\n   +----------------------------------------------------------------------+\n   | PHP Version 7                                                        |\n   +----------------------------------------------------------------------+\n   | Copyright (c) 1997-2016 The PHP Group                                |\n   +----------------------------------------------------------------------+\n   | This source file is subject to version 3.01 of the PHP license,      |\n   | that is bundled with this package in the file LICENSE, and is        |\n   | available through the world-wide-web at the following url:           |\n   | http://www.php.net/license/3_01.txt                                  |\n   | If you did not receive a copy of the PHP license and are unable to   |\n   | obtain it through the world-wide-web, please send a note to          |\n   | license@php.net so we can mail you a copy immediately.               |\n   +----------------------------------------------------------------------+\n   | Author: Sterling Hughes <sterling@php.net>                           |\n   +----------------------------------------------------------------------+\n*/\n\n/* $Id$ */\n\n#define ZEND_INCLUDE_FULL_WINDOWS_HEADERS\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n\n#if HAVE_CURL\n\n#include <stdio.h>\n#include <string.h>\n\n#ifdef PHP_WIN32\n#include <winsock2.h>\n#include <sys/types.h>\n#endif\n\n#include <curl/curl.h>\n#include <curl/easy.h>\n\n/* As of curl 7.11.1 this is no longer defined inside curl.h */\n#ifndef HttpPost\n#define HttpPost curl_httppost\n#endif\n\n/* {{{ cruft for thread safe SSL crypto locks */\n#if defined(ZTS) && defined(HAVE_CURL_SSL)\n# ifdef PHP_WIN32\n#  define PHP_CURL_NEED_OPENSSL_TSL\n#  include <openssl/crypto.h>\n# else /* !PHP_WIN32 */\n#  if defined(HAVE_CURL_OPENSSL)\n#   if defined(HAVE_OPENSSL_CRYPTO_H)\n#    define PHP_CURL_NEED_OPENSSL_TSL\n#    include <openssl/crypto.h>\n#   else\n#    warning \\\n\t\"libcurl was compiled with OpenSSL support, but configure could not find \" \\\n\t\"openssl/crypto.h; thus no SSL crypto locking callbacks will be set, which may \" \\\n\t\"cause random crashes on SSL requests\"\n#   endif\n#  elif defined(HAVE_CURL_GNUTLS)\n#   if defined(HAVE_GCRYPT_H)\n#    define PHP_CURL_NEED_GNUTLS_TSL\n#    include <gcrypt.h>\n#   else\n#    warning \\\n\t\"libcurl was compiled with GnuTLS support, but configure could not find \" \\\n\t\"gcrypt.h; thus no SSL crypto locking callbacks will be set, which may \" \\\n\t\"cause random crashes on SSL requests\"\n#   endif\n#  else\n#   warning \\\n\t\"libcurl was compiled with SSL support, but configure could not determine which\" \\\n\t\"library was used; thus no SSL crypto locking callbacks will be set, which may \" \\\n\t\"cause random crashes on SSL requests\"\n#  endif /* HAVE_CURL_OPENSSL || HAVE_CURL_GNUTLS */\n# endif /* PHP_WIN32 */\n#endif /* ZTS && HAVE_CURL_SSL */\n/* }}} */\n\n#define SMART_STR_PREALLOC 4096\n\n#include \"zend_smart_str.h\"\n#include \"ext/standard/info.h\"\n#include \"ext/standard/file.h\"\n#include \"ext/standard/url.h\"\n#include \"php_curl.h\"\n\nint  le_curl;\nint  le_curl_multi_handle;\nint  le_curl_share_handle;\n\n#ifdef PHP_CURL_NEED_OPENSSL_TSL /* {{{ */\nstatic MUTEX_T *php_curl_openssl_tsl = NULL;\n\nstatic void php_curl_ssl_lock(int mode, int n, const char * file, int line)\n{\n\tif (mode & CRYPTO_LOCK) {\n\t\ttsrm_mutex_lock(php_curl_openssl_tsl[n]);\n\t} else {\n\t\ttsrm_mutex_unlock(php_curl_openssl_tsl[n]);\n\t}\n}\n\nstatic unsigned long php_curl_ssl_id(void)\n{\n\treturn (unsigned long) tsrm_thread_id();\n}\n#endif\n/* }}} */\n\n#ifdef PHP_CURL_NEED_GNUTLS_TSL /* {{{ */\nstatic int php_curl_ssl_mutex_create(void **m)\n{\n\tif (*((MUTEX_T *) m) = tsrm_mutex_alloc()) {\n\t\treturn SUCCESS;\n\t} else {\n\t\treturn FAILURE;\n\t}\n}\n\nstatic int php_curl_ssl_mutex_destroy(void **m)\n{\n\ttsrm_mutex_free(*((MUTEX_T *) m));\n\treturn SUCCESS;\n}\n\nstatic int php_curl_ssl_mutex_lock(void **m)\n{\n\treturn tsrm_mutex_lock(*((MUTEX_T *) m));\n}\n\nstatic int php_curl_ssl_mutex_unlock(void **m)\n{\n\treturn tsrm_mutex_unlock(*((MUTEX_T *) m));\n}\n\nstatic struct gcry_thread_cbs php_curl_gnutls_tsl = {\n\tGCRY_THREAD_OPTION_USER,\n\tNULL,\n\tphp_curl_ssl_mutex_create,\n\tphp_curl_ssl_mutex_destroy,\n\tphp_curl_ssl_mutex_lock,\n\tphp_curl_ssl_mutex_unlock\n};\n#endif\n/* }}} */\n\nstatic void _php_curl_close_ex(php_curl *ch);\nstatic void _php_curl_close(zend_resource *rsrc);\n\n\n#define SAVE_CURL_ERROR(__handle, __err) (__handle)->err.no = (int) __err;\n\n#define CAAL(s, v) add_assoc_long_ex(return_value, s, sizeof(s) - 1, (zend_long) v);\n#define CAAD(s, v) add_assoc_double_ex(return_value, s, sizeof(s) - 1, (double) v);\n#define CAAS(s, v) add_assoc_string_ex(return_value, s, sizeof(s) - 1, (char *) (v ? v : \"\"));\n#define CAASTR(s, v) add_assoc_str_ex(return_value, s, sizeof(s) - 1, \\\n\t\tv ? zend_string_copy(v) : ZSTR_EMPTY_ALLOC());\n#define CAAZ(s, v) add_assoc_zval_ex(return_value, s, sizeof(s) -1 , (zval *) v);\n\n#if defined(PHP_WIN32) || defined(__GNUC__)\n# define php_curl_ret(__ret) RETVAL_FALSE; return __ret;\n#else\n# define php_curl_ret(__ret) RETVAL_FALSE; return;\n#endif\n\nstatic int php_curl_option_str(php_curl *ch, zend_long option, const char *str, const int len, zend_bool make_copy)\n{\n\tCURLcode error = CURLE_OK;\n\n\tif (strlen(str) != len) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Curl option contains invalid characters (\\\\0)\");\n\t\treturn FAILURE;\n\t}\n\n#if LIBCURL_VERSION_NUM >= 0x071100\n\tif (make_copy) {\n#endif\n\t\tchar *copystr;\n\n\t\t/* Strings passed to libcurl as 'char *' arguments, are copied by the library since 7.17.0 */\n\t\tcopystr = estrndup(str, len);\n\t\terror = curl_easy_setopt(ch->cp, option, copystr);\n\t\tzend_llist_add_element(&ch->to_free->str, &copystr);\n#if LIBCURL_VERSION_NUM >= 0x071100\n\t} else {\n\t\terror = curl_easy_setopt(ch->cp, option, str);\n\t}\n#endif\n\n\tSAVE_CURL_ERROR(ch, error)\n\n\treturn error == CURLE_OK ? SUCCESS : FAILURE;\n}\n\nstatic int php_curl_option_url(php_curl *ch, const char *url, const int len) /* {{{ */\n{\n\t/* Disable file:// if open_basedir are used */\n\tif (PG(open_basedir) && *PG(open_basedir)) {\n#if LIBCURL_VERSION_NUM >= 0x071304\n\t\tcurl_easy_setopt(ch->cp, CURLOPT_PROTOCOLS, CURLPROTO_ALL & ~CURLPROTO_FILE);\n#else\n\t\tphp_url *uri;\n\n\t\tif (!(uri = php_url_parse_ex(url, len))) {\n\t\t\tphp_error_docref(NULL, E_WARNING, \"Invalid URL '%s'\", url);\n\t\t\treturn FAILURE;\n\t\t}\n\n\t\tif (uri->scheme && !strncasecmp(\"file\", uri->scheme, sizeof(\"file\"))) {\n\t\t\tphp_error_docref(NULL, E_WARNING, \"Protocol 'file' disabled in cURL\");\n\t\t\tphp_url_free(uri);\n\t\t\treturn FAILURE;\n\t\t}\n\t\tphp_url_free(uri);\n#endif\n\t}\n\n\treturn php_curl_option_str(ch, CURLOPT_URL, url, len, 0);\n}\n/* }}} */\n\nvoid _php_curl_verify_handlers(php_curl *ch, int reporterror) /* {{{ */\n{\n\tphp_stream *stream;\n\n\tZEND_ASSERT(ch && ch->handlers);\n\n\tif (!Z_ISUNDEF(ch->handlers->std_err)) {\n\t\tstream = (php_stream *)zend_fetch_resource2_ex(&ch->handlers->std_err, NULL, php_file_le_stream(), php_file_le_pstream());\n\t\tif (stream == NULL) {\n\t\t\tif (reporterror) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"CURLOPT_STDERR resource has gone away, resetting to stderr\");\n\t\t\t}\n\t\t\tzval_ptr_dtor(&ch->handlers->std_err);\n\t\t\tZVAL_UNDEF(&ch->handlers->std_err);\n\n\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_STDERR, stderr);\n\t\t}\n\t}\n\tif (ch->handlers->read && !Z_ISUNDEF(ch->handlers->read->stream)) {\n\t\tstream = (php_stream *)zend_fetch_resource2_ex(&ch->handlers->read->stream, NULL, php_file_le_stream(), php_file_le_pstream());\n\t\tif (stream == NULL) {\n\t\t\tif (reporterror) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"CURLOPT_INFILE resource has gone away, resetting to default\");\n\t\t\t}\n\t\t\tzval_ptr_dtor(&ch->handlers->read->stream);\n\t\t\tZVAL_UNDEF(&ch->handlers->read->stream);\n\t\t\tch->handlers->read->res = NULL;\n\t\t\tch->handlers->read->fp = 0;\n\n\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_INFILE, (void *) ch);\n\t\t}\n\t}\n\tif (ch->handlers->write_header && !Z_ISUNDEF(ch->handlers->write_header->stream)) {\n\t\tstream = (php_stream *)zend_fetch_resource2_ex(&ch->handlers->write_header->stream, NULL, php_file_le_stream(), php_file_le_pstream());\n\t\tif (stream == NULL) {\n\t\t\tif (reporterror) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"CURLOPT_WRITEHEADER resource has gone away, resetting to default\");\n\t\t\t}\n\t\t\tzval_ptr_dtor(&ch->handlers->write_header->stream);\n\t\t\tZVAL_UNDEF(&ch->handlers->write_header->stream);\n\t\t\tch->handlers->write_header->fp = 0;\n\n\t\t\tch->handlers->write_header->method = PHP_CURL_IGNORE;\n\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_WRITEHEADER, (void *) ch);\n\t\t}\n\t}\n\tif (ch->handlers->write && !Z_ISUNDEF(ch->handlers->write->stream)) {\n\t\tstream = (php_stream *)zend_fetch_resource2_ex(&ch->handlers->write->stream, NULL, php_file_le_stream(), php_file_le_pstream());\n\t\tif (stream == NULL) {\n\t\t\tif (reporterror) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"CURLOPT_FILE resource has gone away, resetting to default\");\n\t\t\t}\n\t\t\tzval_ptr_dtor(&ch->handlers->write->stream);\n\t\t\tZVAL_UNDEF(&ch->handlers->write->stream);\n\t\t\tch->handlers->write->fp = 0;\n\n\t\t\tch->handlers->write->method = PHP_CURL_STDOUT;\n\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_FILE, (void *) ch);\n\t\t}\n\t}\n\treturn;\n}\n/* }}} */\n\n/* {{{ arginfo */\nZEND_BEGIN_ARG_INFO_EX(arginfo_curl_version, 0, 0, 0)\n\tZEND_ARG_INFO(0, version)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_curl_init, 0, 0, 0)\n\tZEND_ARG_INFO(0, url)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_copy_handle, 0)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_setopt, 0)\n\tZEND_ARG_INFO(0, ch)\n\tZEND_ARG_INFO(0, option)\n\tZEND_ARG_INFO(0, value)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_setopt_array, 0)\n\tZEND_ARG_INFO(0, ch)\n\tZEND_ARG_ARRAY_INFO(0, options, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_exec, 0)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_curl_getinfo, 0, 0, 1)\n\tZEND_ARG_INFO(0, ch)\n\tZEND_ARG_INFO(0, option)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_error, 0)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_errno, 0)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_close, 0)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n\n#if LIBCURL_VERSION_NUM >= 0x070c01 /* 7.12.1 */\nZEND_BEGIN_ARG_INFO(arginfo_curl_reset, 0)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n#endif\n\n#if LIBCURL_VERSION_NUM > 0x070f03 /* 7.15.4 */\nZEND_BEGIN_ARG_INFO(arginfo_curl_escape, 0)\n\tZEND_ARG_INFO(0, ch)\n\tZEND_ARG_INFO(0, str)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_unescape, 0)\n\tZEND_ARG_INFO(0, ch)\n\tZEND_ARG_INFO(0, str)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_multi_setopt, 0)\n\tZEND_ARG_INFO(0, sh)\n\tZEND_ARG_INFO(0, option)\n\tZEND_ARG_INFO(0, value)\nZEND_END_ARG_INFO()\n#endif\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_multi_init, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_multi_add_handle, 0)\n\tZEND_ARG_INFO(0, mh)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_multi_remove_handle, 0)\n\tZEND_ARG_INFO(0, mh)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_curl_multi_select, 0, 0, 1)\n\tZEND_ARG_INFO(0, mh)\n\tZEND_ARG_INFO(0, timeout)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_curl_multi_exec, 0, 0, 1)\n\tZEND_ARG_INFO(0, mh)\n\tZEND_ARG_INFO(1, still_running)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_multi_getcontent, 0)\n\tZEND_ARG_INFO(0, ch)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_curl_multi_info_read, 0, 0, 1)\n\tZEND_ARG_INFO(0, mh)\n\tZEND_ARG_INFO(1, msgs_in_queue)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_multi_close, 0)\n\tZEND_ARG_INFO(0, mh)\nZEND_END_ARG_INFO()\n\n#if LIBCURL_VERSION_NUM >= 0x070c00 /* Available since 7.12.0 */\nZEND_BEGIN_ARG_INFO(arginfo_curl_strerror, 0)\n\tZEND_ARG_INFO(0, errornum)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_multi_strerror, 0)\n\tZEND_ARG_INFO(0, errornum)\nZEND_END_ARG_INFO()\n#endif\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_share_init, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_share_close, 0)\n\tZEND_ARG_INFO(0, sh)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO(arginfo_curl_share_setopt, 0)\n\tZEND_ARG_INFO(0, sh)\n\tZEND_ARG_INFO(0, option)\n\tZEND_ARG_INFO(0, value)\nZEND_END_ARG_INFO()\n\n#if LIBCURL_VERSION_NUM >= 0x071200 /* Available since 7.18.0 */\nZEND_BEGIN_ARG_INFO(arginfo_curl_pause, 0)\n\tZEND_ARG_INFO(0, ch)\n\tZEND_ARG_INFO(0, bitmask)\nZEND_END_ARG_INFO()\n#endif\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_curlfile_create, 0, 0, 1)\n\tZEND_ARG_INFO(0, filename)\n\tZEND_ARG_INFO(0, mimetype)\n\tZEND_ARG_INFO(0, postname)\nZEND_END_ARG_INFO()\n/* }}} */\n\n/* {{{ curl_functions[]\n */\nconst zend_function_entry curl_functions[] = {\n\tPHP_FE(curl_init,                arginfo_curl_init)\n\tPHP_FE(curl_copy_handle,         arginfo_curl_copy_handle)\n\tPHP_FE(curl_version,             arginfo_curl_version)\n\tPHP_FE(curl_setopt,              arginfo_curl_setopt)\n\tPHP_FE(curl_setopt_array,        arginfo_curl_setopt_array)\n\tPHP_FE(curl_exec,                arginfo_curl_exec)\n\tPHP_FE(curl_getinfo,             arginfo_curl_getinfo)\n\tPHP_FE(curl_error,               arginfo_curl_error)\n\tPHP_FE(curl_errno,               arginfo_curl_errno)\n\tPHP_FE(curl_close,               arginfo_curl_close)\n#if LIBCURL_VERSION_NUM >= 0x070c00 /* 7.12.0 */\n\tPHP_FE(curl_strerror,            arginfo_curl_strerror)\n\tPHP_FE(curl_multi_strerror,      arginfo_curl_multi_strerror)\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070c01 /* 7.12.1 */\n\tPHP_FE(curl_reset,               arginfo_curl_reset)\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070f04 /* 7.15.4 */\n\tPHP_FE(curl_escape,              arginfo_curl_escape)\n\tPHP_FE(curl_unescape,            arginfo_curl_unescape)\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071200 /* 7.18.0 */\n\tPHP_FE(curl_pause,               arginfo_curl_pause)\n#endif\n\tPHP_FE(curl_multi_init,          arginfo_curl_multi_init)\n\tPHP_FE(curl_multi_add_handle,    arginfo_curl_multi_add_handle)\n\tPHP_FE(curl_multi_remove_handle, arginfo_curl_multi_remove_handle)\n\tPHP_FE(curl_multi_select,        arginfo_curl_multi_select)\n\tPHP_FE(curl_multi_exec,          arginfo_curl_multi_exec)\n\tPHP_FE(curl_multi_getcontent,    arginfo_curl_multi_getcontent)\n\tPHP_FE(curl_multi_info_read,     arginfo_curl_multi_info_read)\n\tPHP_FE(curl_multi_close,         arginfo_curl_multi_close)\n#if LIBCURL_VERSION_NUM >= 0x070f04 /* 7.15.4 */\n\tPHP_FE(curl_multi_setopt,        arginfo_curl_multi_setopt)\n#endif\n\tPHP_FE(curl_share_init,          arginfo_curl_share_init)\n\tPHP_FE(curl_share_close,         arginfo_curl_share_close)\n\tPHP_FE(curl_share_setopt,        arginfo_curl_share_setopt)\n\tPHP_FE(curl_file_create,         arginfo_curlfile_create)\n\tPHP_FE_END\n};\n/* }}} */\n\n/* {{{ curl_module_entry\n */\nzend_module_entry curl_module_entry = {\n\tSTANDARD_MODULE_HEADER,\n\t\"curl\",\n\tcurl_functions,\n\tPHP_MINIT(curl),\n\tPHP_MSHUTDOWN(curl),\n\tNULL,\n\tNULL,\n\tPHP_MINFO(curl),\n\tPHP_CURL_VERSION,\n\tSTANDARD_MODULE_PROPERTIES\n};\n/* }}} */\n\n#ifdef COMPILE_DL_CURL\nZEND_GET_MODULE (curl)\n#endif\n\n/* {{{ PHP_INI_BEGIN */\nPHP_INI_BEGIN()\n\tPHP_INI_ENTRY(\"curl.cainfo\", \"\", PHP_INI_SYSTEM, NULL)\nPHP_INI_END()\n/* }}} */\n\n/* {{{ PHP_MINFO_FUNCTION\n */\nPHP_MINFO_FUNCTION(curl)\n{\n\tcurl_version_info_data *d;\n\tchar **p;\n\tchar str[1024];\n\tsize_t n = 0;\n\n\td = curl_version_info(CURLVERSION_NOW);\n\tphp_info_print_table_start();\n\tphp_info_print_table_row(2, \"cURL support\",    \"enabled\");\n\tphp_info_print_table_row(2, \"cURL Information\", d->version);\n\tsprintf(str, \"%d\", d->age);\n\tphp_info_print_table_row(2, \"Age\", str);\n\n\t/* To update on each new cURL release using src/main.c in cURL sources */\n\tif (d->features) {\n\t\tstruct feat {\n\t\t\tconst char *name;\n\t\t\tint bitmask;\n\t\t};\n\n\t\tunsigned int i;\n\n\t\tstatic const struct feat feats[] = {\n#if LIBCURL_VERSION_NUM >= 0x070a07 /* 7.10.7 */\n\t\t\t{\"AsynchDNS\", CURL_VERSION_ASYNCHDNS},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070f04 /* 7.15.4 */\n\t\t\t{\"CharConv\", CURL_VERSION_CONV},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070a06 /* 7.10.6 */\n\t\t\t{\"Debug\", CURL_VERSION_DEBUG},\n\t\t\t{\"GSS-Negotiate\", CURL_VERSION_GSSNEGOTIATE},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070c00 /* 7.12.0 */\n\t\t\t{\"IDN\", CURL_VERSION_IDN},\n#endif\n\t\t\t{\"IPv6\", CURL_VERSION_IPV6},\n\t\t\t{\"krb4\", CURL_VERSION_KERBEROS4},\n#if LIBCURL_VERSION_NUM >= 0x070b01 /* 7.11.1 */\n\t\t\t{\"Largefile\", CURL_VERSION_LARGEFILE},\n#endif\n\t\t\t{\"libz\", CURL_VERSION_LIBZ},\n#if LIBCURL_VERSION_NUM >= 0x070a06 /* 7.10.6 */\n\t\t\t{\"NTLM\", CURL_VERSION_NTLM},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071600 /* 7.22.0 */\n\t\t\t{\"NTLMWB\", CURL_VERSION_NTLM_WB},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070a08 /* 7.10.8 */\n\t\t\t{\"SPNEGO\", CURL_VERSION_SPNEGO},\n#endif\n\t\t\t{\"SSL\",  CURL_VERSION_SSL},\n#if LIBCURL_VERSION_NUM >= 0x070d02 /* 7.13.2 */\n\t\t\t{\"SSPI\",  CURL_VERSION_SSPI},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071504 /* 7.21.4 */\n\t\t\t{\"TLS-SRP\", CURL_VERSION_TLSAUTH_SRP},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072100 /* 7.33.0 */\n\t\t\t{\"HTTP2\", CURL_VERSION_HTTP2},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072600 /* 7.38.0 */\n\t\t\t{\"GSSAPI\", CURL_VERSION_GSSAPI},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072800 /* 7.40.0 */\n\t\t\t{\"KERBEROS5\", CURL_VERSION_KERBEROS5},\n\t\t\t{\"UNIX_SOCKETS\", CURL_VERSION_UNIX_SOCKETS},\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072f00 /* 7.47.0 */\n\t\t\t{\"PSL\", CURL_VERSION_PSL},\n#endif\n\t\t\t{NULL, 0}\n\t\t};\n\n\t\tphp_info_print_table_row(1, \"Features\");\n\t\tfor(i=0; i<sizeof(feats)/sizeof(feats[0]); i++) {\n\t\t\tif (feats[i].name) {\n\t\t\t\tphp_info_print_table_row(2, feats[i].name, d->features & feats[i].bitmask ? \"Yes\" : \"No\");\n\t\t\t}\n\t\t}\n\t}\n\n\tn = 0;\n\tp = (char **) d->protocols;\n\twhile (*p != NULL) {\n\t\t\tn += sprintf(str + n, \"%s%s\", *p, *(p + 1) != NULL ? \", \" : \"\");\n\t\t\tp++;\n\t}\n\tphp_info_print_table_row(2, \"Protocols\", str);\n\n\tphp_info_print_table_row(2, \"Host\", d->host);\n\n\tif (d->ssl_version) {\n\t\tphp_info_print_table_row(2, \"SSL Version\", d->ssl_version);\n\t}\n\n\tif (d->libz_version) {\n\t\tphp_info_print_table_row(2, \"ZLib Version\", d->libz_version);\n\t}\n\n#if defined(CURLVERSION_SECOND) && CURLVERSION_NOW >= CURLVERSION_SECOND\n\tif (d->ares) {\n\t\tphp_info_print_table_row(2, \"ZLib Version\", d->ares);\n\t}\n#endif\n\n#if defined(CURLVERSION_THIRD) && CURLVERSION_NOW >= CURLVERSION_THIRD\n\tif (d->libidn) {\n\t\tphp_info_print_table_row(2, \"libIDN Version\", d->libidn);\n\t}\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071300\n\n\tif (d->iconv_ver_num) {\n\t\tphp_info_print_table_row(2, \"IconV Version\", d->iconv_ver_num);\n\t}\n\n\tif (d->libssh_version) {\n\t\tphp_info_print_table_row(2, \"libSSH Version\", d->libssh_version);\n\t}\n#endif\n\tphp_info_print_table_end();\n}\n/* }}} */\n\n#define REGISTER_CURL_CONSTANT(__c) REGISTER_LONG_CONSTANT(#__c, __c, CONST_CS | CONST_PERSISTENT)\n\n/* {{{ PHP_MINIT_FUNCTION\n */\nPHP_MINIT_FUNCTION(curl)\n{\n\tle_curl = zend_register_list_destructors_ex(_php_curl_close, NULL, \"curl\", module_number);\n\tle_curl_multi_handle = zend_register_list_destructors_ex(_php_curl_multi_close, NULL, \"curl_multi\", module_number);\n\tle_curl_share_handle = zend_register_list_destructors_ex(_php_curl_share_close, NULL, \"curl_share\", module_number);\n\n\tREGISTER_INI_ENTRIES();\n\n\t/* See http://curl.haxx.se/lxr/source/docs/libcurl/symbols-in-versions\n\t   or curl src/docs/libcurl/symbols-in-versions for a (almost) complete list\n\t   of options and which version they were introduced */\n\n\t/* Constants for curl_setopt() */\n\tREGISTER_CURL_CONSTANT(CURLOPT_AUTOREFERER);\n\tREGISTER_CURL_CONSTANT(CURLOPT_BINARYTRANSFER);\n\tREGISTER_CURL_CONSTANT(CURLOPT_BUFFERSIZE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_CAINFO);\n\tREGISTER_CURL_CONSTANT(CURLOPT_CAPATH);\n\tREGISTER_CURL_CONSTANT(CURLOPT_CONNECTTIMEOUT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_COOKIE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_COOKIEFILE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_COOKIEJAR);\n\tREGISTER_CURL_CONSTANT(CURLOPT_COOKIESESSION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_CRLF);\n\tREGISTER_CURL_CONSTANT(CURLOPT_CUSTOMREQUEST);\n\tREGISTER_CURL_CONSTANT(CURLOPT_DNS_CACHE_TIMEOUT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_DNS_USE_GLOBAL_CACHE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_EGDSOCKET);\n\tREGISTER_CURL_CONSTANT(CURLOPT_ENCODING);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FAILONERROR);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FILE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FILETIME);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FOLLOWLOCATION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FORBID_REUSE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FRESH_CONNECT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTPAPPEND);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTPLISTONLY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTPPORT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_USE_EPRT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_USE_EPSV);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HEADER);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HEADERFUNCTION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HTTP200ALIASES);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HTTPGET);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HTTPHEADER);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HTTPPROXYTUNNEL);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HTTP_VERSION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_INFILE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_INFILESIZE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_INTERFACE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_KRB4LEVEL);\n\tREGISTER_CURL_CONSTANT(CURLOPT_LOW_SPEED_LIMIT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_LOW_SPEED_TIME);\n\tREGISTER_CURL_CONSTANT(CURLOPT_MAXCONNECTS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_MAXREDIRS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_NETRC);\n\tREGISTER_CURL_CONSTANT(CURLOPT_NOBODY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_NOPROGRESS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_NOSIGNAL);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PORT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_POST);\n\tREGISTER_CURL_CONSTANT(CURLOPT_POSTFIELDS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_POSTQUOTE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PREQUOTE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PRIVATE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROGRESSFUNCTION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXYPORT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXYTYPE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXYUSERPWD);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PUT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_QUOTE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RANDOM_FILE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RANGE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_READDATA);\n\tREGISTER_CURL_CONSTANT(CURLOPT_READFUNCTION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_REFERER);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RESUME_FROM);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RETURNTRANSFER);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SHARE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLCERT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLCERTPASSWD);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLCERTTYPE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLENGINE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLENGINE_DEFAULT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLKEY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLKEYPASSWD);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLKEYTYPE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSLVERSION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_CIPHER_LIST);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_VERIFYHOST);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_VERIFYPEER);\n\tREGISTER_CURL_CONSTANT(CURLOPT_STDERR);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TELNETOPTIONS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TIMECONDITION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TIMEOUT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TIMEVALUE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TRANSFERTEXT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_UNRESTRICTED_AUTH);\n\tREGISTER_CURL_CONSTANT(CURLOPT_UPLOAD);\n\tREGISTER_CURL_CONSTANT(CURLOPT_URL);\n\tREGISTER_CURL_CONSTANT(CURLOPT_USERAGENT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_USERPWD);\n\tREGISTER_CURL_CONSTANT(CURLOPT_VERBOSE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_WRITEFUNCTION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_WRITEHEADER);\n\n\t/* */\n\tREGISTER_CURL_CONSTANT(CURLE_ABORTED_BY_CALLBACK);\n\tREGISTER_CURL_CONSTANT(CURLE_BAD_CALLING_ORDER);\n\tREGISTER_CURL_CONSTANT(CURLE_BAD_CONTENT_ENCODING);\n\tREGISTER_CURL_CONSTANT(CURLE_BAD_DOWNLOAD_RESUME);\n\tREGISTER_CURL_CONSTANT(CURLE_BAD_FUNCTION_ARGUMENT);\n\tREGISTER_CURL_CONSTANT(CURLE_BAD_PASSWORD_ENTERED);\n\tREGISTER_CURL_CONSTANT(CURLE_COULDNT_CONNECT);\n\tREGISTER_CURL_CONSTANT(CURLE_COULDNT_RESOLVE_HOST);\n\tREGISTER_CURL_CONSTANT(CURLE_COULDNT_RESOLVE_PROXY);\n\tREGISTER_CURL_CONSTANT(CURLE_FAILED_INIT);\n\tREGISTER_CURL_CONSTANT(CURLE_FILE_COULDNT_READ_FILE);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_ACCESS_DENIED);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_BAD_DOWNLOAD_RESUME);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_CANT_GET_HOST);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_CANT_RECONNECT);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_COULDNT_GET_SIZE);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_COULDNT_RETR_FILE);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_COULDNT_SET_ASCII);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_COULDNT_SET_BINARY);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_COULDNT_STOR_FILE);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_COULDNT_USE_REST);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_PARTIAL_FILE);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_PORT_FAILED);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_QUOTE_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_USER_PASSWORD_INCORRECT);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_WEIRD_227_FORMAT);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_WEIRD_PASS_REPLY);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_WEIRD_PASV_REPLY);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_WEIRD_SERVER_REPLY);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_WEIRD_USER_REPLY);\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_WRITE_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_FUNCTION_NOT_FOUND);\n\tREGISTER_CURL_CONSTANT(CURLE_GOT_NOTHING);\n\tREGISTER_CURL_CONSTANT(CURLE_HTTP_NOT_FOUND);\n\tREGISTER_CURL_CONSTANT(CURLE_HTTP_PORT_FAILED);\n\tREGISTER_CURL_CONSTANT(CURLE_HTTP_POST_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_HTTP_RANGE_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_HTTP_RETURNED_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_LDAP_CANNOT_BIND);\n\tREGISTER_CURL_CONSTANT(CURLE_LDAP_SEARCH_FAILED);\n\tREGISTER_CURL_CONSTANT(CURLE_LIBRARY_NOT_FOUND);\n\tREGISTER_CURL_CONSTANT(CURLE_MALFORMAT_USER);\n\tREGISTER_CURL_CONSTANT(CURLE_OBSOLETE);\n\tREGISTER_CURL_CONSTANT(CURLE_OK);\n\tREGISTER_CURL_CONSTANT(CURLE_OPERATION_TIMEDOUT);\n\tREGISTER_CURL_CONSTANT(CURLE_OPERATION_TIMEOUTED);\n\tREGISTER_CURL_CONSTANT(CURLE_OUT_OF_MEMORY);\n\tREGISTER_CURL_CONSTANT(CURLE_PARTIAL_FILE);\n\tREGISTER_CURL_CONSTANT(CURLE_READ_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_RECV_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_SEND_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_SHARE_IN_USE);\n\tREGISTER_CURL_CONSTANT(CURLE_SSL_CACERT);\n\tREGISTER_CURL_CONSTANT(CURLE_SSL_CERTPROBLEM);\n\tREGISTER_CURL_CONSTANT(CURLE_SSL_CIPHER);\n\tREGISTER_CURL_CONSTANT(CURLE_SSL_CONNECT_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLE_SSL_ENGINE_NOTFOUND);\n\tREGISTER_CURL_CONSTANT(CURLE_SSL_ENGINE_SETFAILED);\n\tREGISTER_CURL_CONSTANT(CURLE_SSL_PEER_CERTIFICATE);\n\tREGISTER_CURL_CONSTANT(CURLE_TELNET_OPTION_SYNTAX);\n\tREGISTER_CURL_CONSTANT(CURLE_TOO_MANY_REDIRECTS);\n\tREGISTER_CURL_CONSTANT(CURLE_UNKNOWN_TELNET_OPTION);\n\tREGISTER_CURL_CONSTANT(CURLE_UNSUPPORTED_PROTOCOL);\n\tREGISTER_CURL_CONSTANT(CURLE_URL_MALFORMAT);\n\tREGISTER_CURL_CONSTANT(CURLE_URL_MALFORMAT_USER);\n\tREGISTER_CURL_CONSTANT(CURLE_WRITE_ERROR);\n\n\t/* cURL info constants */\n\tREGISTER_CURL_CONSTANT(CURLINFO_CONNECT_TIME);\n\tREGISTER_CURL_CONSTANT(CURLINFO_CONTENT_LENGTH_DOWNLOAD);\n\tREGISTER_CURL_CONSTANT(CURLINFO_CONTENT_LENGTH_UPLOAD);\n\tREGISTER_CURL_CONSTANT(CURLINFO_CONTENT_TYPE);\n\tREGISTER_CURL_CONSTANT(CURLINFO_EFFECTIVE_URL);\n\tREGISTER_CURL_CONSTANT(CURLINFO_FILETIME);\n\tREGISTER_CURL_CONSTANT(CURLINFO_HEADER_OUT);\n\tREGISTER_CURL_CONSTANT(CURLINFO_HEADER_SIZE);\n\tREGISTER_CURL_CONSTANT(CURLINFO_HTTP_CODE);\n\tREGISTER_CURL_CONSTANT(CURLINFO_LASTONE);\n\tREGISTER_CURL_CONSTANT(CURLINFO_NAMELOOKUP_TIME);\n\tREGISTER_CURL_CONSTANT(CURLINFO_PRETRANSFER_TIME);\n\tREGISTER_CURL_CONSTANT(CURLINFO_PRIVATE);\n\tREGISTER_CURL_CONSTANT(CURLINFO_REDIRECT_COUNT);\n\tREGISTER_CURL_CONSTANT(CURLINFO_REDIRECT_TIME);\n\tREGISTER_CURL_CONSTANT(CURLINFO_REQUEST_SIZE);\n\tREGISTER_CURL_CONSTANT(CURLINFO_SIZE_DOWNLOAD);\n\tREGISTER_CURL_CONSTANT(CURLINFO_SIZE_UPLOAD);\n\tREGISTER_CURL_CONSTANT(CURLINFO_SPEED_DOWNLOAD);\n\tREGISTER_CURL_CONSTANT(CURLINFO_SPEED_UPLOAD);\n\tREGISTER_CURL_CONSTANT(CURLINFO_SSL_VERIFYRESULT);\n\tREGISTER_CURL_CONSTANT(CURLINFO_STARTTRANSFER_TIME);\n\tREGISTER_CURL_CONSTANT(CURLINFO_TOTAL_TIME);\n\n\t/* Other */\n\tREGISTER_CURL_CONSTANT(CURLMSG_DONE);\n\tREGISTER_CURL_CONSTANT(CURLVERSION_NOW);\n\n\t/* Curl Multi Constants */\n\tREGISTER_CURL_CONSTANT(CURLM_BAD_EASY_HANDLE);\n\tREGISTER_CURL_CONSTANT(CURLM_BAD_HANDLE);\n\tREGISTER_CURL_CONSTANT(CURLM_CALL_MULTI_PERFORM);\n\tREGISTER_CURL_CONSTANT(CURLM_INTERNAL_ERROR);\n\tREGISTER_CURL_CONSTANT(CURLM_OK);\n\tREGISTER_CURL_CONSTANT(CURLM_OUT_OF_MEMORY);\n#if LIBCURL_VERSION_NUM >= 0x072001 /* Available since 7.32.1 */\n\tREGISTER_CURL_CONSTANT(CURLM_ADDED_ALREADY);\n#endif\n\n\t/* Curl proxy constants */\n\tREGISTER_CURL_CONSTANT(CURLPROXY_HTTP);\n\tREGISTER_CURL_CONSTANT(CURLPROXY_SOCKS4);\n\tREGISTER_CURL_CONSTANT(CURLPROXY_SOCKS5);\n\n\t/* Curl Share constants */\n\tREGISTER_CURL_CONSTANT(CURLSHOPT_NONE);\n\tREGISTER_CURL_CONSTANT(CURLSHOPT_SHARE);\n\tREGISTER_CURL_CONSTANT(CURLSHOPT_UNSHARE);\n\n\t/* Curl Http Version constants (CURLOPT_HTTP_VERSION) */\n\tREGISTER_CURL_CONSTANT(CURL_HTTP_VERSION_1_0);\n\tREGISTER_CURL_CONSTANT(CURL_HTTP_VERSION_1_1);\n\tREGISTER_CURL_CONSTANT(CURL_HTTP_VERSION_NONE);\n\n\t/* Curl Lock constants */\n\tREGISTER_CURL_CONSTANT(CURL_LOCK_DATA_COOKIE);\n\tREGISTER_CURL_CONSTANT(CURL_LOCK_DATA_DNS);\n\tREGISTER_CURL_CONSTANT(CURL_LOCK_DATA_SSL_SESSION);\n\n\t/* Curl NETRC constants (CURLOPT_NETRC) */\n\tREGISTER_CURL_CONSTANT(CURL_NETRC_IGNORED);\n\tREGISTER_CURL_CONSTANT(CURL_NETRC_OPTIONAL);\n\tREGISTER_CURL_CONSTANT(CURL_NETRC_REQUIRED);\n\n\t/* Curl SSL Version constants (CURLOPT_SSLVERSION) */\n\tREGISTER_CURL_CONSTANT(CURL_SSLVERSION_DEFAULT);\n\tREGISTER_CURL_CONSTANT(CURL_SSLVERSION_SSLv2);\n\tREGISTER_CURL_CONSTANT(CURL_SSLVERSION_SSLv3);\n\tREGISTER_CURL_CONSTANT(CURL_SSLVERSION_TLSv1);\n\n\t/* Curl TIMECOND constants (CURLOPT_TIMECONDITION) */\n\tREGISTER_CURL_CONSTANT(CURL_TIMECOND_IFMODSINCE);\n\tREGISTER_CURL_CONSTANT(CURL_TIMECOND_IFUNMODSINCE);\n\tREGISTER_CURL_CONSTANT(CURL_TIMECOND_LASTMOD);\n\tREGISTER_CURL_CONSTANT(CURL_TIMECOND_NONE);\n\n\t/* Curl version constants */\n\tREGISTER_CURL_CONSTANT(CURL_VERSION_IPV6);\n\tREGISTER_CURL_CONSTANT(CURL_VERSION_KERBEROS4);\n\tREGISTER_CURL_CONSTANT(CURL_VERSION_LIBZ);\n\tREGISTER_CURL_CONSTANT(CURL_VERSION_SSL);\n\n#if LIBCURL_VERSION_NUM >= 0x070a06 /* Available since 7.10.6 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_HTTPAUTH);\n\t/* http authentication options */\n\tREGISTER_CURL_CONSTANT(CURLAUTH_ANY);\n\tREGISTER_CURL_CONSTANT(CURLAUTH_ANYSAFE);\n\tREGISTER_CURL_CONSTANT(CURLAUTH_BASIC);\n\tREGISTER_CURL_CONSTANT(CURLAUTH_DIGEST);\n\tREGISTER_CURL_CONSTANT(CURLAUTH_GSSNEGOTIATE);\n\tREGISTER_CURL_CONSTANT(CURLAUTH_NONE);\n\tREGISTER_CURL_CONSTANT(CURLAUTH_NTLM);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070a07 /* Available since 7.10.7 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_HTTP_CONNECTCODE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_CREATE_MISSING_DIRS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXYAUTH);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070a08 /* Available since 7.10.8 */\n\tREGISTER_CURL_CONSTANT(CURLE_FILESIZE_EXCEEDED);\n\tREGISTER_CURL_CONSTANT(CURLE_LDAP_INVALID_URL);\n\tREGISTER_CURL_CONSTANT(CURLINFO_HTTPAUTH_AVAIL);\n\tREGISTER_CURL_CONSTANT(CURLINFO_RESPONSE_CODE);\n\tREGISTER_CURL_CONSTANT(CURLINFO_PROXYAUTH_AVAIL);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_RESPONSE_TIMEOUT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_IPRESOLVE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_MAXFILESIZE);\n\tREGISTER_CURL_CONSTANT(CURL_IPRESOLVE_V4);\n\tREGISTER_CURL_CONSTANT(CURL_IPRESOLVE_V6);\n\tREGISTER_CURL_CONSTANT(CURL_IPRESOLVE_WHATEVER);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070b00 /* Available since 7.11.0 */\n\tREGISTER_CURL_CONSTANT(CURLE_FTP_SSL_FAILED);\n\tREGISTER_CURL_CONSTANT(CURLFTPSSL_ALL);\n\tREGISTER_CURL_CONSTANT(CURLFTPSSL_CONTROL);\n\tREGISTER_CURL_CONSTANT(CURLFTPSSL_NONE);\n\tREGISTER_CURL_CONSTANT(CURLFTPSSL_TRY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_SSL);\n\tREGISTER_CURL_CONSTANT(CURLOPT_NETRC_FILE);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070c02 /* Available since 7.12.2 */\n\tREGISTER_CURL_CONSTANT(CURLFTPAUTH_DEFAULT);\n\tREGISTER_CURL_CONSTANT(CURLFTPAUTH_SSL);\n\tREGISTER_CURL_CONSTANT(CURLFTPAUTH_TLS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTPSSLAUTH);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070d00 /* Available since 7.13.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_ACCOUNT);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070b02 /* Available since 7.11.2 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_TCP_NODELAY);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070c02 /* Available since 7.12.2 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_OS_ERRNO);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070c03 /* Available since 7.12.3 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_NUM_CONNECTS);\n\tREGISTER_CURL_CONSTANT(CURLINFO_SSL_ENGINES);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070e01 /* Available since 7.14.1 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_COOKIELIST);\n\tREGISTER_CURL_CONSTANT(CURLOPT_COOKIELIST);\n\tREGISTER_CURL_CONSTANT(CURLOPT_IGNORE_CONTENT_LENGTH);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070f00 /* Available since 7.15.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_SKIP_PASV_IP);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070f01 /* Available since 7.15.1 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_FILEMETHOD);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070f02 /* Available since 7.15.2 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_CONNECT_ONLY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_LOCALPORT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_LOCALPORTRANGE);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070f03 /* Available since 7.15.3 */\n\tREGISTER_CURL_CONSTANT(CURLFTPMETHOD_MULTICWD);\n\tREGISTER_CURL_CONSTANT(CURLFTPMETHOD_NOCWD);\n\tREGISTER_CURL_CONSTANT(CURLFTPMETHOD_SINGLECWD);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070f04 /* Available since 7.15.4 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_FTP_ENTRY_PATH);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070f05 /* Available since 7.15.5 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_ALTERNATIVE_TO_USER);\n\tREGISTER_CURL_CONSTANT(CURLOPT_MAX_RECV_SPEED_LARGE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_MAX_SEND_SPEED_LARGE);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071000 /* Available since 7.16.0 */\n\tREGISTER_CURL_CONSTANT(CURLE_SSL_CACERT_BADFILE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_SESSIONID_CACHE);\n\tREGISTER_CURL_CONSTANT(CURLMOPT_PIPELINING);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071001 /* Available since 7.16.1 */\n\tREGISTER_CURL_CONSTANT(CURLE_SSH);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_SSL_CCC);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSH_AUTH_TYPES);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSH_PRIVATE_KEYFILE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSH_PUBLIC_KEYFILE);\n\tREGISTER_CURL_CONSTANT(CURLFTPSSL_CCC_ACTIVE);\n\tREGISTER_CURL_CONSTANT(CURLFTPSSL_CCC_NONE);\n\tREGISTER_CURL_CONSTANT(CURLFTPSSL_CCC_PASSIVE);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071002 /* Available since 7.16.2 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_CONNECTTIMEOUT_MS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HTTP_CONTENT_DECODING);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HTTP_TRANSFER_DECODING);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TIMEOUT_MS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071003 /* Available since 7.16.3 */\n\tREGISTER_CURL_CONSTANT(CURLMOPT_MAXCONNECTS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071004 /* Available since 7.16.4 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_KRBLEVEL);\n\tREGISTER_CURL_CONSTANT(CURLOPT_NEW_DIRECTORY_PERMS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_NEW_FILE_PERMS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071100 /* Available since 7.17.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_APPEND);\n\tREGISTER_CURL_CONSTANT(CURLOPT_DIRLISTONLY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_USE_SSL);\n\t/* Curl SSL Constants */\n\tREGISTER_CURL_CONSTANT(CURLUSESSL_ALL);\n\tREGISTER_CURL_CONSTANT(CURLUSESSL_CONTROL);\n\tREGISTER_CURL_CONSTANT(CURLUSESSL_NONE);\n\tREGISTER_CURL_CONSTANT(CURLUSESSL_TRY);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071101 /* Available since 7.17.1 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSH_HOST_PUBLIC_KEY_MD5);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071200 /* Available since 7.18.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXY_TRANSFER_MODE);\n\tREGISTER_CURL_CONSTANT(CURLPAUSE_ALL);\n\tREGISTER_CURL_CONSTANT(CURLPAUSE_CONT);\n\tREGISTER_CURL_CONSTANT(CURLPAUSE_RECV);\n\tREGISTER_CURL_CONSTANT(CURLPAUSE_RECV_CONT);\n\tREGISTER_CURL_CONSTANT(CURLPAUSE_SEND);\n\tREGISTER_CURL_CONSTANT(CURLPAUSE_SEND_CONT);\n\tREGISTER_CURL_CONSTANT(CURL_READFUNC_PAUSE);\n\tREGISTER_CURL_CONSTANT(CURL_WRITEFUNC_PAUSE);\n\n\tREGISTER_CURL_CONSTANT(CURLPROXY_SOCKS4A);\n\tREGISTER_CURL_CONSTANT(CURLPROXY_SOCKS5_HOSTNAME);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071202 /* Available since 7.18.2 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_REDIRECT_URL);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071300 /* Available since 7.19.0 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_APPCONNECT_TIME);\n\tREGISTER_CURL_CONSTANT(CURLINFO_PRIMARY_IP);\n\n\tREGISTER_CURL_CONSTANT(CURLOPT_ADDRESS_SCOPE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_CRLFILE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_ISSUERCERT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_KEYPASSWD);\n\n\tREGISTER_CURL_CONSTANT(CURLSSH_AUTH_ANY);\n\tREGISTER_CURL_CONSTANT(CURLSSH_AUTH_DEFAULT);\n\tREGISTER_CURL_CONSTANT(CURLSSH_AUTH_HOST);\n\tREGISTER_CURL_CONSTANT(CURLSSH_AUTH_KEYBOARD);\n\tREGISTER_CURL_CONSTANT(CURLSSH_AUTH_NONE);\n\tREGISTER_CURL_CONSTANT(CURLSSH_AUTH_PASSWORD);\n\tREGISTER_CURL_CONSTANT(CURLSSH_AUTH_PUBLICKEY);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071301 /* Available since 7.19.1 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_CERTINFO);\n\tREGISTER_CURL_CONSTANT(CURLOPT_CERTINFO);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PASSWORD);\n\tREGISTER_CURL_CONSTANT(CURLOPT_POSTREDIR);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXYPASSWORD);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXYUSERNAME);\n\tREGISTER_CURL_CONSTANT(CURLOPT_USERNAME);\n\tREGISTER_CURL_CONSTANT(CURL_REDIR_POST_301);\n\tREGISTER_CURL_CONSTANT(CURL_REDIR_POST_302);\n\tREGISTER_CURL_CONSTANT(CURL_REDIR_POST_ALL);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071303 /* Available since 7.19.3 */\n\tREGISTER_CURL_CONSTANT(CURLAUTH_DIGEST_IE);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071304 /* Available since 7.19.4 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_CONDITION_UNMET);\n\n\tREGISTER_CURL_CONSTANT(CURLOPT_NOPROXY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROTOCOLS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_REDIR_PROTOCOLS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SOCKS5_GSSAPI_NEC);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SOCKS5_GSSAPI_SERVICE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TFTP_BLKSIZE);\n\n\tREGISTER_CURL_CONSTANT(CURLPROTO_ALL);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_DICT);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_FILE);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_FTP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_FTPS);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_HTTP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_HTTPS);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_LDAP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_LDAPS);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_SCP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_SFTP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_TELNET);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_TFTP);\n\n\tREGISTER_CURL_CONSTANT(CURLPROXY_HTTP_1_0);\n\n\tREGISTER_CURL_CONSTANT(CURLFTP_CREATE_DIR);\n\tREGISTER_CURL_CONSTANT(CURLFTP_CREATE_DIR_NONE);\n\tREGISTER_CURL_CONSTANT(CURLFTP_CREATE_DIR_RETRY);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071306 /* Available since 7.19.6 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSH_KNOWNHOSTS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071400 /* Available since 7.20.0 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_RTSP_CLIENT_CSEQ);\n\tREGISTER_CURL_CONSTANT(CURLINFO_RTSP_CSEQ_RECV);\n\tREGISTER_CURL_CONSTANT(CURLINFO_RTSP_SERVER_CSEQ);\n\tREGISTER_CURL_CONSTANT(CURLINFO_RTSP_SESSION_ID);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTP_USE_PRET);\n\tREGISTER_CURL_CONSTANT(CURLOPT_MAIL_FROM);\n\tREGISTER_CURL_CONSTANT(CURLOPT_MAIL_RCPT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RTSP_CLIENT_CSEQ);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RTSP_REQUEST);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RTSP_SERVER_CSEQ);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RTSP_SESSION_ID);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RTSP_STREAM_URI);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RTSP_TRANSPORT);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_IMAP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_IMAPS);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_POP3);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_POP3S);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_RTSP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_SMTP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_SMTPS);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_ANNOUNCE);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_DESCRIBE);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_GET_PARAMETER);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_OPTIONS);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_PAUSE);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_PLAY);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_RECEIVE);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_RECORD);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_SET_PARAMETER);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_SETUP);\n\tREGISTER_CURL_CONSTANT(CURL_RTSPREQ_TEARDOWN);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071500 /* Available since 7.21.0 */\n\tREGISTER_CURL_CONSTANT(CURLINFO_LOCAL_IP);\n\tREGISTER_CURL_CONSTANT(CURLINFO_LOCAL_PORT);\n\tREGISTER_CURL_CONSTANT(CURLINFO_PRIMARY_PORT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_FNMATCH_FUNCTION);\n\tREGISTER_CURL_CONSTANT(CURLOPT_WILDCARDMATCH);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_RTMP);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_RTMPE);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_RTMPS);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_RTMPT);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_RTMPTE);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_RTMPTS);\n\tREGISTER_CURL_CONSTANT(CURL_FNMATCHFUNC_FAIL);\n\tREGISTER_CURL_CONSTANT(CURL_FNMATCHFUNC_MATCH);\n\tREGISTER_CURL_CONSTANT(CURL_FNMATCHFUNC_NOMATCH);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071502 /* Available since 7.21.2 */\n\tREGISTER_CURL_CONSTANT(CURLPROTO_GOPHER);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071503 /* Available since 7.21.3 */\n\tREGISTER_CURL_CONSTANT(CURLAUTH_ONLY);\n\tREGISTER_CURL_CONSTANT(CURLOPT_RESOLVE);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071504 /* Available since 7.21.4 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_TLSAUTH_PASSWORD);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TLSAUTH_TYPE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TLSAUTH_USERNAME);\n\tREGISTER_CURL_CONSTANT(CURL_TLSAUTH_SRP);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071506 /* Available since 7.21.6 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_ACCEPT_ENCODING);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TRANSFER_ENCODING);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071600 /* Available since 7.22.0 */\n\tREGISTER_CURL_CONSTANT(CURLAUTH_NTLM_WB);\n\tREGISTER_CURL_CONSTANT(CURLGSSAPI_DELEGATION_FLAG);\n\tREGISTER_CURL_CONSTANT(CURLGSSAPI_DELEGATION_POLICY_FLAG);\n\tREGISTER_CURL_CONSTANT(CURLOPT_GSSAPI_DELEGATION);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071800 /* Available since 7.24.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_ACCEPTTIMEOUT_MS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_DNS_SERVERS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071900 /* Available since 7.25.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_MAIL_AUTH);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_OPTIONS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TCP_KEEPALIVE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TCP_KEEPIDLE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TCP_KEEPINTVL);\n\tREGISTER_CURL_CONSTANT(CURLSSLOPT_ALLOW_BEAST);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071901 /* Available since 7.25.1 */\n\tREGISTER_CURL_CONSTANT(CURL_REDIR_POST_303);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071c00 /* Available since 7.28.0 */\n\tREGISTER_CURL_CONSTANT(CURLSSH_AUTH_AGENT);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071e00 /* Available since 7.30.0 */\n\tREGISTER_CURL_CONSTANT(CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE);\n\tREGISTER_CURL_CONSTANT(CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE);\n\tREGISTER_CURL_CONSTANT(CURLMOPT_MAX_HOST_CONNECTIONS);\n\tREGISTER_CURL_CONSTANT(CURLMOPT_MAX_PIPELINE_LENGTH);\n\tREGISTER_CURL_CONSTANT(CURLMOPT_MAX_TOTAL_CONNECTIONS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071f00 /* Available since 7.31.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_SASL_IR);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072100 /* Available since 7.33.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_DNS_INTERFACE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_DNS_LOCAL_IP4);\n\tREGISTER_CURL_CONSTANT(CURLOPT_DNS_LOCAL_IP6);\n\tREGISTER_CURL_CONSTANT(CURLOPT_XOAUTH2_BEARER);\n\n\tREGISTER_CURL_CONSTANT(CURL_HTTP_VERSION_2_0);\n\tREGISTER_CURL_CONSTANT(CURL_VERSION_HTTP2);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072200 /* Available since 7.34.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_LOGIN_OPTIONS);\n\n\tREGISTER_CURL_CONSTANT(CURL_SSLVERSION_TLSv1_0);\n\tREGISTER_CURL_CONSTANT(CURL_SSLVERSION_TLSv1_1);\n\tREGISTER_CURL_CONSTANT(CURL_SSLVERSION_TLSv1_2);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072400 /* Available since 7.36.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_EXPECT_100_TIMEOUT_MS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_ENABLE_ALPN);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_ENABLE_NPN);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072500 /* Available since 7.37.0 */\n\tREGISTER_CURL_CONSTANT(CURLHEADER_SEPARATE);\n\tREGISTER_CURL_CONSTANT(CURLHEADER_UNIFIED);\n\tREGISTER_CURL_CONSTANT(CURLOPT_HEADEROPT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXYHEADER);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072600 /* Available since 7.38.0 */\n\tREGISTER_CURL_CONSTANT(CURLAUTH_NEGOTIATE);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072700 /* Available since 7.39.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_PINNEDPUBLICKEY);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072800 /* Available since 7.40.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_UNIX_SOCKET_PATH);\n\n\tREGISTER_CURL_CONSTANT(CURLPROTO_SMB);\n\tREGISTER_CURL_CONSTANT(CURLPROTO_SMBS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072900 /* Available since 7.41.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_VERIFYSTATUS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072a00 /* Available since 7.42.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_PATH_AS_IS);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SSL_FALSESTART);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072b00 /* Available since 7.43.0 */\n\tREGISTER_CURL_CONSTANT(CURL_HTTP_VERSION_2);\n\n\tREGISTER_CURL_CONSTANT(CURLOPT_PIPEWAIT);\n\tREGISTER_CURL_CONSTANT(CURLOPT_PROXY_SERVICE_NAME);\n\tREGISTER_CURL_CONSTANT(CURLOPT_SERVICE_NAME);\n\n\tREGISTER_CURL_CONSTANT(CURLPIPE_NOTHING);\n\tREGISTER_CURL_CONSTANT(CURLPIPE_HTTP1);\n\tREGISTER_CURL_CONSTANT(CURLPIPE_MULTIPLEX);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072c00 /* Available since 7.44.0 */\n\tREGISTER_CURL_CONSTANT(CURLSSLOPT_NO_REVOKE);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072d00 /* Available since 7.45.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_DEFAULT_PROTOCOL);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072e00 /* Available since 7.46.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_STREAM_WEIGHT);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x072f00 /* Available since 7.47.0 */\n\tREGISTER_CURL_CONSTANT(CURL_HTTP_VERSION_2TLS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x073000 /* Available since 7.48.0 */\n\tREGISTER_CURL_CONSTANT(CURLOPT_TFTP_NO_OPTIONS);\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x073100 /* Available since 7.49.0 */\n\tREGISTER_CURL_CONSTANT(CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE);\n\tREGISTER_CURL_CONSTANT(CURLOPT_CONNECT_TO);\n\tREGISTER_CURL_CONSTANT(CURLOPT_TCP_FASTOPEN);\n#endif\n\n#if CURLOPT_FTPASCII != 0\n\tREGISTER_CURL_CONSTANT(CURLOPT_FTPASCII);\n#endif\n#if CURLOPT_MUTE != 0\n\tREGISTER_CURL_CONSTANT(CURLOPT_MUTE);\n#endif\n#if CURLOPT_PASSWDFUNCTION != 0\n\tREGISTER_CURL_CONSTANT(CURLOPT_PASSWDFUNCTION);\n#endif\n\tREGISTER_CURL_CONSTANT(CURLOPT_SAFE_UPLOAD);\n\n#ifdef PHP_CURL_NEED_OPENSSL_TSL\n\tif (!CRYPTO_get_id_callback()) {\n\t\tint i, c = CRYPTO_num_locks();\n\n\t\tphp_curl_openssl_tsl = malloc(c * sizeof(MUTEX_T));\n\t\tif (!php_curl_openssl_tsl) {\n\t\t\treturn FAILURE;\n\t\t}\n\n\t\tfor (i = 0; i < c; ++i) {\n\t\t\tphp_curl_openssl_tsl[i] = tsrm_mutex_alloc();\n\t\t}\n\n\t\tCRYPTO_set_id_callback(php_curl_ssl_id);\n\t\tCRYPTO_set_locking_callback(php_curl_ssl_lock);\n\t}\n#endif\n#ifdef PHP_CURL_NEED_GNUTLS_TSL\n\tgcry_control(GCRYCTL_SET_THREAD_CBS, &php_curl_gnutls_tsl);\n#endif\n\n\tif (curl_global_init(CURL_GLOBAL_DEFAULT) != CURLE_OK) {\n\t\treturn FAILURE;\n\t}\n\n\tcurlfile_register_class();\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/* {{{ PHP_MSHUTDOWN_FUNCTION\n */\nPHP_MSHUTDOWN_FUNCTION(curl)\n{\n\tcurl_global_cleanup();\n#ifdef PHP_CURL_NEED_OPENSSL_TSL\n\tif (php_curl_openssl_tsl) {\n\t\tint i, c = CRYPTO_num_locks();\n\n\t\tCRYPTO_set_id_callback(NULL);\n\t\tCRYPTO_set_locking_callback(NULL);\n\n\t\tfor (i = 0; i < c; ++i) {\n\t\t\ttsrm_mutex_free(php_curl_openssl_tsl[i]);\n\t\t}\n\n\t\tfree(php_curl_openssl_tsl);\n\t\tphp_curl_openssl_tsl = NULL;\n\t}\n#endif\n\tUNREGISTER_INI_ENTRIES();\n\treturn SUCCESS;\n}\n/* }}} */\n\n/* {{{ curl_write_nothing\n * Used as a work around. See _php_curl_close_ex\n */\nstatic size_t curl_write_nothing(char *data, size_t size, size_t nmemb, void *ctx)\n{\n\treturn size * nmemb;\n}\n/* }}} */\n\n/* {{{ curl_write\n */\nstatic size_t curl_write(char *data, size_t size, size_t nmemb, void *ctx)\n{\n\tphp_curl *ch = (php_curl *) ctx;\n\tphp_curl_write *t = ch->handlers->write;\n\tsize_t length = size * nmemb;\n\n#if PHP_CURL_DEBUG\n\tfprintf(stderr, \"curl_write() called\\n\");\n\tfprintf(stderr, \"data = %s, size = %d, nmemb = %d, ctx = %x\\n\", data, size, nmemb, ctx);\n#endif\n\n\tswitch (t->method) {\n\t\tcase PHP_CURL_STDOUT:\n\t\t\tPHPWRITE(data, length);\n\t\t\tbreak;\n\t\tcase PHP_CURL_FILE:\n\t\t\treturn fwrite(data, size, nmemb, t->fp);\n\t\tcase PHP_CURL_RETURN:\n\t\t\tif (length > 0) {\n\t\t\t\tsmart_str_appendl(&t->buf, data, (int) length);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase PHP_CURL_USER: {\n\t\t\tzval argv[2];\n\t\t\tzval retval;\n\t\t\tint  error;\n\t\t\tzend_fcall_info fci;\n\n\t\t\tZVAL_RES(&argv[0], ch->res);\n\t\t\tZ_ADDREF(argv[0]);\n\t\t\tZVAL_STRINGL(&argv[1], data, length);\n\n\t\t\tfci.size = sizeof(fci);\n\t\t\tfci.function_table = EG(function_table);\n\t\t\tfci.object = NULL;\n\t\t\tZVAL_COPY_VALUE(&fci.function_name, &t->func_name);\n\t\t\tfci.retval = &retval;\n\t\t\tfci.param_count = 2;\n\t\t\tfci.params = argv;\n\t\t\tfci.no_separation = 0;\n\t\t\tfci.symbol_table = NULL;\n\n\t\t\tch->in_callback = 1;\n\t\t\terror = zend_call_function(&fci, &t->fci_cache);\n\t\t\tch->in_callback = 0;\n\t\t\tif (error == FAILURE) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Could not call the CURLOPT_WRITEFUNCTION\");\n\t\t\t\tlength = -1;\n\t\t\t} else if (!Z_ISUNDEF(retval)) {\n\t\t\t\t_php_curl_verify_handlers(ch, 1);\n\t\t\t\tlength = zval_get_long(&retval);\n\t\t\t}\n\n\t\t\tzval_ptr_dtor(&argv[0]);\n\t\t\tzval_ptr_dtor(&argv[1]);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn length;\n}\n/* }}} */\n\n#if LIBCURL_VERSION_NUM >= 0x071500 /* Available since 7.21.0 */\n/* {{{ curl_fnmatch\n */\nstatic int curl_fnmatch(void *ctx, const char *pattern, const char *string)\n{\n\tphp_curl *ch = (php_curl *) ctx;\n\tphp_curl_fnmatch *t = ch->handlers->fnmatch;\n\tint rval = CURL_FNMATCHFUNC_FAIL;\n\tswitch (t->method) {\n\t\tcase PHP_CURL_USER: {\n\t\t\tzval argv[3];\n\t\t\tzval retval;\n\t\t\tint  error;\n\t\t\tzend_fcall_info fci;\n\n\t\t\tZVAL_RES(&argv[0], ch->res);\n\t\t\tZ_ADDREF(argv[0]);\n\t\t\tZVAL_STRING(&argv[1], pattern);\n\t\t\tZVAL_STRING(&argv[2], string);\n\n\t\t\tfci.size = sizeof(fci);\n\t\t\tfci.function_table = EG(function_table);\n\t\t\tZVAL_COPY_VALUE(&fci.function_name, &t->func_name);\n\t\t\tfci.object = NULL;\n\t\t\tfci.retval = &retval;\n\t\t\tfci.param_count = 3;\n\t\t\tfci.params = argv;\n\t\t\tfci.no_separation = 0;\n\t\t\tfci.symbol_table = NULL;\n\n\t\t\tch->in_callback = 1;\n\t\t\terror = zend_call_function(&fci, &t->fci_cache);\n\t\t\tch->in_callback = 0;\n\t\t\tif (error == FAILURE) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Cannot call the CURLOPT_FNMATCH_FUNCTION\");\n\t\t\t} else if (!Z_ISUNDEF(retval)) {\n\t\t\t\t_php_curl_verify_handlers(ch, 1);\n\t\t\t\trval = zval_get_long(&retval);\n\t\t\t}\n\t\t\tzval_ptr_dtor(&argv[0]);\n\t\t\tzval_ptr_dtor(&argv[1]);\n\t\t\tzval_ptr_dtor(&argv[2]);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn rval;\n}\n/* }}} */\n#endif\n\n/* {{{ curl_progress\n */\nstatic size_t curl_progress(void *clientp, double dltotal, double dlnow, double ultotal, double ulnow)\n{\n\tphp_curl *ch = (php_curl *)clientp;\n\tphp_curl_progress *t = ch->handlers->progress;\n\tsize_t\trval = 0;\n\n#if PHP_CURL_DEBUG\n\tfprintf(stderr, \"curl_progress() called\\n\");\n\tfprintf(stderr, \"clientp = %x, dltotal = %f, dlnow = %f, ultotal = %f, ulnow = %f\\n\", clientp, dltotal, dlnow, ultotal, ulnow);\n#endif\n\n\tswitch (t->method) {\n\t\tcase PHP_CURL_USER: {\n\t\t\tzval argv[5];\n\t\t\tzval retval;\n\t\t\tint  error;\n\t\t\tzend_fcall_info fci;\n\n\t\t\tZVAL_RES(&argv[0], ch->res);\n\t\t\tZ_ADDREF(argv[0]);\n\t\t\tZVAL_LONG(&argv[1], (zend_long)dltotal);\n\t\t\tZVAL_LONG(&argv[2], (zend_long)dlnow);\n\t\t\tZVAL_LONG(&argv[3], (zend_long)ultotal);\n\t\t\tZVAL_LONG(&argv[4], (zend_long)ulnow);\n\n\t\t\tfci.size = sizeof(fci);\n\t\t\tfci.function_table = EG(function_table);\n\t\t\tZVAL_COPY_VALUE(&fci.function_name, &t->func_name);\n\t\t\tfci.object = NULL;\n\t\t\tfci.retval = &retval;\n\t\t\tfci.param_count = 5;\n\t\t\tfci.params = argv;\n\t\t\tfci.no_separation = 0;\n\t\t\tfci.symbol_table = NULL;\n\n\t\t\tch->in_callback = 1;\n\t\t\terror = zend_call_function(&fci, &t->fci_cache);\n\t\t\tch->in_callback = 0;\n\t\t\tif (error == FAILURE) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Cannot call the CURLOPT_PROGRESSFUNCTION\");\n\t\t\t} else if (!Z_ISUNDEF(retval)) {\n\t\t\t\t_php_curl_verify_handlers(ch, 1);\n\t\t\t\tif (0 != zval_get_long(&retval)) {\n\t\t\t\t\trval = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tzval_ptr_dtor(&argv[0]);\n\t\t\tzval_ptr_dtor(&argv[1]);\n\t\t\tzval_ptr_dtor(&argv[2]);\n\t\t\tzval_ptr_dtor(&argv[3]);\n\t\t\tzval_ptr_dtor(&argv[4]);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn rval;\n}\n/* }}} */\n\n/* {{{ curl_read\n */\nstatic size_t curl_read(char *data, size_t size, size_t nmemb, void *ctx)\n{\n\tphp_curl *ch = (php_curl *)ctx;\n\tphp_curl_read *t = ch->handlers->read;\n\tint length = 0;\n\n\tswitch (t->method) {\n\t\tcase PHP_CURL_DIRECT:\n\t\t\tif (t->fp) {\n\t\t\t\tlength = fread(data, size, nmemb, t->fp);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase PHP_CURL_USER: {\n\t\t\tzval argv[3];\n\t\t\tzval retval;\n\t\t\tint  error;\n\t\t\tzend_fcall_info fci;\n\n\t\t\tZVAL_RES(&argv[0], ch->res);\n\t\t\tZ_ADDREF(argv[0]);\n\t\t\tif (t->res) {\n\t\t\t\tZVAL_RES(&argv[1], t->res);\n\t\t\t\tZ_ADDREF(argv[1]);\n\t\t\t} else {\n\t\t\t\tZVAL_NULL(&argv[1]);\n\t\t\t}\n\t\t\tZVAL_LONG(&argv[2], (int)size * nmemb);\n\n\t\t\tfci.size = sizeof(fci);\n\t\t\tfci.function_table = EG(function_table);\n\t\t\tZVAL_COPY_VALUE(&fci.function_name, &t->func_name);\n\t\t\tfci.object = NULL;\n\t\t\tfci.retval = &retval;\n\t\t\tfci.param_count = 3;\n\t\t\tfci.params = argv;\n\t\t\tfci.no_separation = 0;\n\t\t\tfci.symbol_table = NULL;\n\n\t\t\tch->in_callback = 1;\n\t\t\terror = zend_call_function(&fci, &t->fci_cache);\n\t\t\tch->in_callback = 0;\n\t\t\tif (error == FAILURE) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Cannot call the CURLOPT_READFUNCTION\");\n#if LIBCURL_VERSION_NUM >= 0x070c01 /* 7.12.1 */\n\t\t\t\tlength = CURL_READFUNC_ABORT;\n#endif\n\t\t\t} else if (!Z_ISUNDEF(retval)) {\n\t\t\t\t_php_curl_verify_handlers(ch, 1);\n\t\t\t\tif (Z_TYPE(retval) == IS_STRING) {\n\t\t\t\t\tlength = MIN((int) (size * nmemb), Z_STRLEN(retval));\n\t\t\t\t\tmemcpy(data, Z_STRVAL(retval), length);\n\t\t\t\t}\n\t\t\t\tzval_ptr_dtor(&retval);\n\t\t\t}\n\n\t\t\tzval_ptr_dtor(&argv[0]);\n\t\t\tzval_ptr_dtor(&argv[1]);\n\t\t\tzval_ptr_dtor(&argv[2]);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn length;\n}\n/* }}} */\n\n/* {{{ curl_write_header\n */\nstatic size_t curl_write_header(char *data, size_t size, size_t nmemb, void *ctx)\n{\n\tphp_curl *ch = (php_curl *) ctx;\n\tphp_curl_write *t = ch->handlers->write_header;\n\tsize_t length = size * nmemb;\n\n\tswitch (t->method) {\n\t\tcase PHP_CURL_STDOUT:\n\t\t\t/* Handle special case write when we're returning the entire transfer\n\t\t\t */\n\t\t\tif (ch->handlers->write->method == PHP_CURL_RETURN && length > 0) {\n\t\t\t\tsmart_str_appendl(&ch->handlers->write->buf, data, (int) length);\n\t\t\t} else {\n\t\t\t\tPHPWRITE(data, length);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase PHP_CURL_FILE:\n\t\t\treturn fwrite(data, size, nmemb, t->fp);\n\t\tcase PHP_CURL_USER: {\n\t\t\tzval argv[2];\n\t\t\tzval retval;\n\t\t\tint  error;\n\t\t\tzend_fcall_info fci;\n\n\t\t\tZVAL_RES(&argv[0], ch->res);\n\t\t\tZ_ADDREF(argv[0]);\n\t\t\tZVAL_STRINGL(&argv[1], data, length);\n\n\t\t\tfci.size = sizeof(fci);\n\t\t\tfci.function_table = EG(function_table);\n\t\t\tZVAL_COPY_VALUE(&fci.function_name, &t->func_name);\n\t\t\tfci.symbol_table = NULL;\n\t\t\tfci.object = NULL;\n\t\t\tfci.retval = &retval;\n\t\t\tfci.param_count = 2;\n\t\t\tfci.params = argv;\n\t\t\tfci.no_separation = 0;\n\n\t\t\tch->in_callback = 1;\n\t\t\terror = zend_call_function(&fci, &t->fci_cache);\n\t\t\tch->in_callback = 0;\n\t\t\tif (error == FAILURE) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Could not call the CURLOPT_HEADERFUNCTION\");\n\t\t\t\tlength = -1;\n\t\t\t} else if (!Z_ISUNDEF(retval)) {\n\t\t\t\t_php_curl_verify_handlers(ch, 1);\n\t\t\t\tlength = zval_get_long(&retval);\n\t\t\t}\n\t\t\tzval_ptr_dtor(&argv[0]);\n\t\t\tzval_ptr_dtor(&argv[1]);\n\t\t\tbreak;\n\t\t}\n\n\t\tcase PHP_CURL_IGNORE:\n\t\t\treturn length;\n\n\t\tdefault:\n\t\t\treturn -1;\n\t}\n\n\treturn length;\n}\n/* }}} */\n\nstatic int curl_debug(CURL *cp, curl_infotype type, char *buf, size_t buf_len, void *ctx) /* {{{ */\n{\n\tphp_curl *ch = (php_curl *)ctx;\n\n\tif (type == CURLINFO_HEADER_OUT) {\n\t\tif (ch->header.str) {\n\t\t\tzend_string_release(ch->header.str);\n\t\t}\n\t\tif (buf_len > 0) {\n\t\t\tch->header.str = zend_string_init(buf, buf_len, 0);\n\t\t}\n\t}\n\n\treturn 0;\n}\n/* }}} */\n\n#if CURLOPT_PASSWDFUNCTION != 0\n/* {{{ curl_passwd\n */\nstatic size_t curl_passwd(void *ctx, char *prompt, char *buf, int buflen)\n{\n\tphp_curl *ch = (php_curl *) ctx;\n\tzval *func = &ch->handlers->passwd;\n\tzval  argv[3];\n\tzval  retval;\n\tint   error;\n\tint   ret = -1;\n\n\tZVAL_RES(&argv[0], ch->res);\n\tZ_ADDREF(argv[0]);\n\tZVAL_STRING(&argv[1], prompt);\n\tZVAL_LONG(&argv[2], buflen);\n\n\terror = call_user_function(EG(function_table), NULL, func, &retval, 2, argv);\n\tif (error == FAILURE) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Could not call the CURLOPT_PASSWDFUNCTION\");\n\t} else if (Z_TYPE(retval) == IS_STRING) {\n\t\tif (Z_STRLEN(retval) > buflen) {\n\t\t\tphp_error_docref(NULL, E_WARNING, \"Returned password is too long for libcurl to handle\");\n\t\t} else {\n\t\t\tmemcpy(buf, Z_STRVAL(retval), Z_STRLEN(retval) + 1);\n\t\t}\n\t} else {\n\t\tphp_error_docref(NULL, E_WARNING, \"User handler '%s' did not return a string\", Z_STRVAL_P(func));\n\t}\n\n\tzval_ptr_dtor(&argv[0]);\n\tzval_ptr_dtor(&argv[1]);\n\tzval_ptr_dtor(&argv[2]);\n\tzval_ptr_dtor(&retval);\n\n\treturn ret;\n}\n/* }}} */\n#endif\n\n/* {{{ curl_free_string\n */\nstatic void curl_free_string(void **string)\n{\n\tefree((char *)*string);\n}\n/* }}} */\n\n/* {{{ curl_free_post\n */\nstatic void curl_free_post(void **post)\n{\n\tcurl_formfree((struct HttpPost *)*post);\n}\n/* }}} */\n\n/* {{{ curl_free_slist\n */\nstatic void curl_free_slist(zval *el)\n{\n\tcurl_slist_free_all(((struct curl_slist *)Z_PTR_P(el)));\n}\n/* }}} */\n\n/* {{{ proto array curl_version([int version])\n   Return cURL version information. */\nPHP_FUNCTION(curl_version)\n{\n\tcurl_version_info_data *d;\n\tzend_long uversion = CURLVERSION_NOW;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|l\", &uversion) == FAILURE) {\n\t\treturn;\n\t}\n\n\td = curl_version_info(uversion);\n\tif (d == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tarray_init(return_value);\n\n\tCAAL(\"version_number\", d->version_num);\n\tCAAL(\"age\", d->age);\n\tCAAL(\"features\", d->features);\n\tCAAL(\"ssl_version_number\", d->ssl_version_num);\n\tCAAS(\"version\", d->version);\n\tCAAS(\"host\", d->host);\n\tCAAS(\"ssl_version\", d->ssl_version);\n\tCAAS(\"libz_version\", d->libz_version);\n\t/* Add an array of protocols */\n\t{\n\t\tchar **p = (char **) d->protocols;\n\t\tzval protocol_list;\n\n\t\tarray_init(&protocol_list);\n\n\t\twhile (*p != NULL) {\n\t\t\tadd_next_index_string(&protocol_list, *p);\n\t\t\tp++;\n\t\t}\n\t\tCAAZ(\"protocols\", &protocol_list);\n\t}\n}\n/* }}} */\n\n/* {{{ alloc_curl_handle\n */\nstatic php_curl *alloc_curl_handle()\n{\n\tphp_curl *ch               = ecalloc(1, sizeof(php_curl));\n\tch->to_free                = ecalloc(1, sizeof(struct _php_curl_free));\n\tch->handlers               = ecalloc(1, sizeof(php_curl_handlers));\n\tch->handlers->write        = ecalloc(1, sizeof(php_curl_write));\n\tch->handlers->write_header = ecalloc(1, sizeof(php_curl_write));\n\tch->handlers->read         = ecalloc(1, sizeof(php_curl_read));\n\tch->handlers->progress     = NULL;\n#if LIBCURL_VERSION_NUM >= 0x071500 /* Available since 7.21.0 */\n\tch->handlers->fnmatch      = NULL;\n#endif\n\tch->clone \t\t\t\t   = emalloc(sizeof(uint32_t));\n\t*ch->clone                 = 1;\n\n\tmemset(&ch->err, 0, sizeof(struct _php_curl_error));\n\n\tzend_llist_init(&ch->to_free->str,   sizeof(char *),          (llist_dtor_func_t)curl_free_string, 0);\n\tzend_llist_init(&ch->to_free->post,  sizeof(struct HttpPost *), (llist_dtor_func_t)curl_free_post,   0);\n\n\tch->to_free->slist = emalloc(sizeof(HashTable));\n\tzend_hash_init(ch->to_free->slist, 4, NULL, curl_free_slist, 0);\n\n\treturn ch;\n}\n/* }}} */\n\n#if LIBCURL_VERSION_NUM >= 0x071301 /* Available since 7.19.1 */\n/* {{{ create_certinfo\n */\nstatic void create_certinfo(struct curl_certinfo *ci, zval *listcode)\n{\n\tint i;\n\n\tif (ci) {\n\t\tzval certhash;\n\n\t\tfor (i=0; i<ci->num_of_certs; i++) {\n\t\t\tstruct curl_slist *slist;\n\n\t\t\tarray_init(&certhash);\n\t\t\tfor (slist = ci->certinfo[i]; slist; slist = slist->next) {\n\t\t\t\tint len;\n\t\t\t\tchar s[64];\n\t\t\t\tchar *tmp;\n\t\t\t\tstrncpy(s, slist->data, 64);\n\t\t\t\ttmp = memchr(s, ':', 64);\n\t\t\t\tif(tmp) {\n\t\t\t\t\t*tmp = '\\0';\n\t\t\t\t\tlen = strlen(s);\n\t\t\t\t\tadd_assoc_string(&certhash, s, &slist->data[len+1]);\n\t\t\t\t} else {\n\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Could not extract hash key from certificate info\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tadd_next_index_zval(listcode, &certhash);\n\t\t}\n\t}\n}\n/* }}} */\n#endif\n\n/* {{{ _php_curl_set_default_options()\n   Set default options for a handle */\nstatic void _php_curl_set_default_options(php_curl *ch)\n{\n\tchar *cainfo;\n\n\tcurl_easy_setopt(ch->cp, CURLOPT_NOPROGRESS,        1);\n\tcurl_easy_setopt(ch->cp, CURLOPT_VERBOSE,           0);\n\tcurl_easy_setopt(ch->cp, CURLOPT_ERRORBUFFER,       ch->err.str);\n\tcurl_easy_setopt(ch->cp, CURLOPT_WRITEFUNCTION,     curl_write);\n\tcurl_easy_setopt(ch->cp, CURLOPT_FILE,              (void *) ch);\n\tcurl_easy_setopt(ch->cp, CURLOPT_READFUNCTION,      curl_read);\n\tcurl_easy_setopt(ch->cp, CURLOPT_INFILE,            (void *) ch);\n\tcurl_easy_setopt(ch->cp, CURLOPT_HEADERFUNCTION,    curl_write_header);\n\tcurl_easy_setopt(ch->cp, CURLOPT_WRITEHEADER,       (void *) ch);\n#if !defined(ZTS)\n\tcurl_easy_setopt(ch->cp, CURLOPT_DNS_USE_GLOBAL_CACHE, 1);\n#endif\n\tcurl_easy_setopt(ch->cp, CURLOPT_DNS_CACHE_TIMEOUT, 120);\n\tcurl_easy_setopt(ch->cp, CURLOPT_MAXREDIRS, 20); /* prevent infinite redirects */\n\n\tcainfo = INI_STR(\"openssl.cafile\");\n\tif (!(cainfo && cainfo[0] != '\\0')) {\n\t\tcainfo = INI_STR(\"curl.cainfo\");\n\t}\n\tif (cainfo && cainfo[0] != '\\0') {\n\t\tcurl_easy_setopt(ch->cp, CURLOPT_CAINFO, cainfo);\n\t}\n\n#if defined(ZTS)\n\tcurl_easy_setopt(ch->cp, CURLOPT_NOSIGNAL, 1);\n#endif\n}\n/* }}} */\n\n/* {{{ proto resource curl_init([string url])\n   Initialize a cURL session */\nPHP_FUNCTION(curl_init)\n{\n\tphp_curl *ch;\n\tCURL \t *cp;\n\tchar \t *url = NULL;\n\tsize_t\t\t  url_len = 0;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|s\", &url, &url_len) == FAILURE) {\n\t\treturn;\n\t}\n\n\tcp = curl_easy_init();\n\tif (!cp) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Could not initialize a new cURL handle\");\n\t\tRETURN_FALSE;\n\t}\n\n\tch = alloc_curl_handle();\n\n\tch->cp = cp;\n\n\tch->handlers->write->method = PHP_CURL_STDOUT;\n\tch->handlers->read->method  = PHP_CURL_DIRECT;\n\tch->handlers->write_header->method = PHP_CURL_IGNORE;\n\n\t_php_curl_set_default_options(ch);\n\n\tif (url) {\n\t\tif (php_curl_option_url(ch, url, url_len) == FAILURE) {\n\t\t\t_php_curl_close_ex(ch);\n\t\t\tRETURN_FALSE;\n\t\t}\n\t}\n\n\tZVAL_RES(return_value, zend_register_resource(ch, le_curl));\n\tch->res = Z_RES_P(return_value);\n}\n/* }}} */\n\n/* {{{ proto resource curl_copy_handle(resource ch)\n   Copy a cURL handle along with all of it's preferences */\nPHP_FUNCTION(curl_copy_handle)\n{\n\tCURL\t\t*cp;\n\tzval\t\t*zid;\n\tphp_curl\t*ch, *dupch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"r\", &zid) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tcp = curl_easy_duphandle(ch->cp);\n\tif (!cp) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Cannot duplicate cURL handle\");\n\t\tRETURN_FALSE;\n\t}\n\n\tdupch = alloc_curl_handle();\n\n\tdupch->cp = cp;\n\tZ_ADDREF_P(zid);\n\tif (!Z_ISUNDEF(ch->handlers->write->stream)) {\n\t\tZ_ADDREF(ch->handlers->write->stream);\n\t}\n\tdupch->handlers->write->stream = ch->handlers->write->stream;\n\tdupch->handlers->write->method = ch->handlers->write->method;\n\tif (!Z_ISUNDEF(ch->handlers->read->stream)) {\n\t\tZ_ADDREF(ch->handlers->read->stream);\n\t}\n\tdupch->handlers->read->stream  = ch->handlers->read->stream;\n\tdupch->handlers->read->method  = ch->handlers->read->method;\n\tdupch->handlers->write_header->method = ch->handlers->write_header->method;\n\tif (!Z_ISUNDEF(ch->handlers->write_header->stream)) {\n\t\tZ_ADDREF(ch->handlers->write_header->stream);\n\t}\n\tdupch->handlers->write_header->stream = ch->handlers->write_header->stream;\n\n\tdupch->handlers->write->fp = ch->handlers->write->fp;\n\tdupch->handlers->write_header->fp = ch->handlers->write_header->fp;\n\tdupch->handlers->read->fp = ch->handlers->read->fp;\n\tdupch->handlers->read->res = ch->handlers->read->res;\n#if CURLOPT_PASSWDDATA != 0\n\tif (!Z_ISUNDEF(ch->handlers->passwd)) {\n\t\tZVAL_COPY(&dupch->handlers->passwd, &ch->handlers->passwd);\n\t\tcurl_easy_setopt(ch->cp, CURLOPT_PASSWDDATA, (void *) dupch);\n\t}\n#endif\n\tif (!Z_ISUNDEF(ch->handlers->write->func_name)) {\n\t\tZVAL_COPY(&dupch->handlers->write->func_name, &ch->handlers->write->func_name);\n\t}\n\tif (!Z_ISUNDEF(ch->handlers->read->func_name)) {\n\t\tZVAL_COPY(&dupch->handlers->read->func_name, &ch->handlers->read->func_name);\n\t}\n\tif (!Z_ISUNDEF(ch->handlers->write_header->func_name)) {\n\t\tZVAL_COPY(&dupch->handlers->write_header->func_name, &ch->handlers->write_header->func_name);\n\t}\n\n\tcurl_easy_setopt(dupch->cp, CURLOPT_ERRORBUFFER,       dupch->err.str);\n\tcurl_easy_setopt(dupch->cp, CURLOPT_FILE,              (void *) dupch);\n\tcurl_easy_setopt(dupch->cp, CURLOPT_INFILE,            (void *) dupch);\n\tcurl_easy_setopt(dupch->cp, CURLOPT_WRITEHEADER,       (void *) dupch);\n\n\tif (ch->handlers->progress) {\n\t\tdupch->handlers->progress = ecalloc(1, sizeof(php_curl_progress));\n\t\tif (!Z_ISUNDEF(ch->handlers->progress->func_name)) {\n\t\t\tZVAL_COPY(&dupch->handlers->progress->func_name, &ch->handlers->progress->func_name);\n\t\t}\n\t\tdupch->handlers->progress->method = ch->handlers->progress->method;\n\t\tcurl_easy_setopt(dupch->cp, CURLOPT_PROGRESSDATA, (void *) dupch);\n\t}\n\n/* Available since 7.21.0 */\n#if LIBCURL_VERSION_NUM >= 0x071500\n\tif (ch->handlers->fnmatch) {\n\t\tdupch->handlers->fnmatch = ecalloc(1, sizeof(php_curl_fnmatch));\n\t\tif (!Z_ISUNDEF(ch->handlers->fnmatch->func_name)) {\n\t\t\tZVAL_COPY(&dupch->handlers->fnmatch->func_name, &ch->handlers->fnmatch->func_name);\n\t\t}\n\t\tdupch->handlers->fnmatch->method = ch->handlers->fnmatch->method;\n\t\tcurl_easy_setopt(dupch->cp, CURLOPT_FNMATCH_DATA, (void *) dupch);\n\t}\n#endif\n\n\tefree(dupch->to_free->slist);\n\tefree(dupch->to_free);\n\tdupch->to_free = ch->to_free;\n\tefree(dupch->clone);\n\tdupch->clone = ch->clone;\n\n\t/* Keep track of cloned copies to avoid invoking curl destructors for every clone */\n\t(*ch->clone)++;\n\n\tZVAL_RES(return_value, zend_register_resource(dupch, le_curl));\n\tdupch->res = Z_RES_P(return_value);\n}\n/* }}} */\n\nstatic int _php_curl_setopt(php_curl *ch, zend_long option, zval *zvalue) /* {{{ */\n{\n\tCURLcode error = CURLE_OK;\n\tzend_long lval;\n\n\tZVAL_DEREF(zvalue);\n\tswitch (option) {\n\t\t/* Long options */\n\t\tcase CURLOPT_SSL_VERIFYHOST:\n\t\t\tlval = zval_get_long(zvalue);\n\t\t\tif (lval == 1) {\n#if LIBCURL_VERSION_NUM <= 0x071c00 /* 7.28.0 */\n\t\t\t\tphp_error_docref(NULL, E_NOTICE, \"CURLOPT_SSL_VERIFYHOST with value 1 is deprecated and will be removed as of libcurl 7.28.1. It is recommended to use value 2 instead\");\n#else\n\t\t\t\tphp_error_docref(NULL, E_NOTICE, \"CURLOPT_SSL_VERIFYHOST no longer accepts the value 1, value 2 will be used instead\");\n\t\t\t\terror = curl_easy_setopt(ch->cp, option, 2);\n\t\t\t\tbreak;\n#endif\n\t\t\t}\n\t\tcase CURLOPT_AUTOREFERER:\n\t\tcase CURLOPT_BUFFERSIZE:\n\t\tcase CURLOPT_CONNECTTIMEOUT:\n\t\tcase CURLOPT_COOKIESESSION:\n\t\tcase CURLOPT_CRLF:\n\t\tcase CURLOPT_DNS_CACHE_TIMEOUT:\n\t\tcase CURLOPT_DNS_USE_GLOBAL_CACHE:\n\t\tcase CURLOPT_FAILONERROR:\n\t\tcase CURLOPT_FILETIME:\n\t\tcase CURLOPT_FORBID_REUSE:\n\t\tcase CURLOPT_FRESH_CONNECT:\n\t\tcase CURLOPT_FTP_USE_EPRT:\n\t\tcase CURLOPT_FTP_USE_EPSV:\n\t\tcase CURLOPT_HEADER:\n\t\tcase CURLOPT_HTTPGET:\n\t\tcase CURLOPT_HTTPPROXYTUNNEL:\n\t\tcase CURLOPT_HTTP_VERSION:\n\t\tcase CURLOPT_INFILESIZE:\n\t\tcase CURLOPT_LOW_SPEED_LIMIT:\n\t\tcase CURLOPT_LOW_SPEED_TIME:\n\t\tcase CURLOPT_MAXCONNECTS:\n\t\tcase CURLOPT_MAXREDIRS:\n\t\tcase CURLOPT_NETRC:\n\t\tcase CURLOPT_NOBODY:\n\t\tcase CURLOPT_NOPROGRESS:\n\t\tcase CURLOPT_NOSIGNAL:\n\t\tcase CURLOPT_PORT:\n\t\tcase CURLOPT_POST:\n\t\tcase CURLOPT_PROXYPORT:\n\t\tcase CURLOPT_PROXYTYPE:\n\t\tcase CURLOPT_PUT:\n\t\tcase CURLOPT_RESUME_FROM:\n\t\tcase CURLOPT_SSLVERSION:\n\t\tcase CURLOPT_SSL_VERIFYPEER:\n\t\tcase CURLOPT_TIMECONDITION:\n\t\tcase CURLOPT_TIMEOUT:\n\t\tcase CURLOPT_TIMEVALUE:\n\t\tcase CURLOPT_TRANSFERTEXT:\n\t\tcase CURLOPT_UNRESTRICTED_AUTH:\n\t\tcase CURLOPT_UPLOAD:\n\t\tcase CURLOPT_VERBOSE:\n#if LIBCURL_VERSION_NUM >= 0x070a06 /* Available since 7.10.6 */\n\t\tcase CURLOPT_HTTPAUTH:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070a07 /* Available since 7.10.7 */\n\t\tcase CURLOPT_FTP_CREATE_MISSING_DIRS:\n\t\tcase CURLOPT_PROXYAUTH:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070a08 /* Available since 7.10.8 */\n\t\tcase CURLOPT_FTP_RESPONSE_TIMEOUT:\n\t\tcase CURLOPT_IPRESOLVE:\n\t\tcase CURLOPT_MAXFILESIZE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070b02 /* Available since 7.11.2 */\n\t\tcase CURLOPT_TCP_NODELAY:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070c02 /* Available since 7.12.2 */\n\t\tcase CURLOPT_FTPSSLAUTH:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070e01 /* Available since 7.14.1 */\n\t\tcase CURLOPT_IGNORE_CONTENT_LENGTH:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070f00 /* Available since 7.15.0 */\n\t\tcase CURLOPT_FTP_SKIP_PASV_IP:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070f01 /* Available since 7.15.1 */\n\t\tcase CURLOPT_FTP_FILEMETHOD:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070f02 /* Available since 7.15.2 */\n\t\tcase CURLOPT_CONNECT_ONLY:\n\t\tcase CURLOPT_LOCALPORT:\n\t\tcase CURLOPT_LOCALPORTRANGE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071000 /* Available since 7.16.0 */\n\t\tcase CURLOPT_SSL_SESSIONID_CACHE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071001 /* Available since 7.16.1 */\n\t\tcase CURLOPT_FTP_SSL_CCC:\n\t\tcase CURLOPT_SSH_AUTH_TYPES:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071002 /* Available since 7.16.2 */\n\t\tcase CURLOPT_CONNECTTIMEOUT_MS:\n\t\tcase CURLOPT_HTTP_CONTENT_DECODING:\n\t\tcase CURLOPT_HTTP_TRANSFER_DECODING:\n\t\tcase CURLOPT_TIMEOUT_MS:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071004 /* Available since 7.16.4 */\n\t\tcase CURLOPT_NEW_DIRECTORY_PERMS:\n\t\tcase CURLOPT_NEW_FILE_PERMS:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071100 /* Available since 7.17.0 */\n\t\tcase CURLOPT_USE_SSL:\n#elif LIBCURL_VERSION_NUM >= 0x070b00 /* Available since 7.11.0 */\n\t\tcase CURLOPT_FTP_SSL:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071100 /* Available since 7.17.0 */\n\t\tcase CURLOPT_APPEND:\n\t\tcase CURLOPT_DIRLISTONLY:\n#else\n\t\tcase CURLOPT_FTPAPPEND:\n\t\tcase CURLOPT_FTPLISTONLY:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071200 /* Available since 7.18.0 */\n\t\tcase CURLOPT_PROXY_TRANSFER_MODE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071300 /* Available since 7.19.0 */\n\t\tcase CURLOPT_ADDRESS_SCOPE:\n#endif\n#if LIBCURL_VERSION_NUM >  0x071301 /* Available since 7.19.1 */\n\t\tcase CURLOPT_CERTINFO:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071304 /* Available since 7.19.4 */\n\t\tcase CURLOPT_PROTOCOLS:\n\t\tcase CURLOPT_REDIR_PROTOCOLS:\n\t\tcase CURLOPT_SOCKS5_GSSAPI_NEC:\n\t\tcase CURLOPT_TFTP_BLKSIZE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071400 /* Available since 7.20.0 */\n\t\tcase CURLOPT_FTP_USE_PRET:\n\t\tcase CURLOPT_RTSP_CLIENT_CSEQ:\n\t\tcase CURLOPT_RTSP_REQUEST:\n\t\tcase CURLOPT_RTSP_SERVER_CSEQ:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071500 /* Available since 7.21.0 */\n\t\tcase CURLOPT_WILDCARDMATCH:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071504 /* Available since 7.21.4 */\n\t\tcase CURLOPT_TLSAUTH_TYPE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071600 /* Available since 7.22.0 */\n\t\tcase CURLOPT_GSSAPI_DELEGATION:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071800 /* Available since 7.24.0 */\n\t\tcase CURLOPT_ACCEPTTIMEOUT_MS:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071900 /* Available since 7.25.0 */\n\t\tcase CURLOPT_SSL_OPTIONS:\n\t\tcase CURLOPT_TCP_KEEPALIVE:\n\t\tcase CURLOPT_TCP_KEEPIDLE:\n\t\tcase CURLOPT_TCP_KEEPINTVL:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071f00 /* Available since 7.31.0 */\n\t\tcase CURLOPT_SASL_IR:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072400 /* Available since 7.36.0 */\n\t\tcase CURLOPT_EXPECT_100_TIMEOUT_MS:\n\t\tcase CURLOPT_SSL_ENABLE_ALPN:\n\t\tcase CURLOPT_SSL_ENABLE_NPN:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072500 /* Available since 7.37.0 */\n\t\tcase CURLOPT_HEADEROPT:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072900 /* Available since 7.41.0 */\n\t\tcase CURLOPT_SSL_VERIFYSTATUS:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072a00 /* Available since 7.42.0 */\n\t\tcase CURLOPT_PATH_AS_IS:\n\t\tcase CURLOPT_SSL_FALSESTART:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072b00 /* Available since 7.43.0 */\n\t\tcase CURLOPT_PIPEWAIT:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072e00 /* Available since 7.46.0 */\n\t\tcase CURLOPT_STREAM_WEIGHT:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x073000 /* Available since 7.48.0 */\n\t\tcase CURLOPT_TFTP_NO_OPTIONS:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x073100 /* Available since 7.49.0 */\n\t\tcase CURLOPT_TCP_FASTOPEN:\n#endif\n#if CURLOPT_MUTE != 0\n\t\tcase CURLOPT_MUTE:\n#endif\n\t\t\tlval = zval_get_long(zvalue);\n#if LIBCURL_VERSION_NUM >= 0x71304\n\t\t\tif ((option == CURLOPT_PROTOCOLS || option == CURLOPT_REDIR_PROTOCOLS) &&\n\t\t\t\t(PG(open_basedir) && *PG(open_basedir)) && (lval & CURLPROTO_FILE)) {\n\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"CURLPROTO_FILE cannot be activated when an open_basedir is set\");\n\t\t\t\t\treturn 1;\n\t\t\t}\n#endif\n# if defined(ZTS)\n\t\t\tif (option == CURLOPT_DNS_USE_GLOBAL_CACHE) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"CURLOPT_DNS_USE_GLOBAL_CACHE cannot be activated when thread safety is enabled\");\n\t\t\t\treturn 1;\n\t\t\t}\n# endif\n\t\t\terror = curl_easy_setopt(ch->cp, option, lval);\n\t\t\tbreak;\n\t\tcase CURLOPT_SAFE_UPLOAD:\n\t\t\tlval = zval_get_long(zvalue);\n\t\t\tif (lval == 0) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Disabling safe uploads is no longer supported\");\n\t\t\t\treturn FAILURE;\n\t\t\t}\n\t\t\tbreak;\n\n\t\t/* String options */\n\t\tcase CURLOPT_CAINFO:\n\t\tcase CURLOPT_CAPATH:\n\t\tcase CURLOPT_COOKIE:\n\t\tcase CURLOPT_EGDSOCKET:\n\t\tcase CURLOPT_INTERFACE:\n\t\tcase CURLOPT_PROXY:\n\t\tcase CURLOPT_PROXYUSERPWD:\n\t\tcase CURLOPT_REFERER:\n\t\tcase CURLOPT_SSLCERTTYPE:\n\t\tcase CURLOPT_SSLENGINE:\n\t\tcase CURLOPT_SSLENGINE_DEFAULT:\n\t\tcase CURLOPT_SSLKEY:\n\t\tcase CURLOPT_SSLKEYPASSWD:\n\t\tcase CURLOPT_SSLKEYTYPE:\n\t\tcase CURLOPT_SSL_CIPHER_LIST:\n\t\tcase CURLOPT_USERAGENT:\n\t\tcase CURLOPT_USERPWD:\n#if LIBCURL_VERSION_NUM >= 0x070e01 /* Available since 7.14.1 */\n\t\tcase CURLOPT_COOKIELIST:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x070f05 /* Available since 7.15.5 */\n\t\tcase CURLOPT_FTP_ALTERNATIVE_TO_USER:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071101 /* Available since 7.17.1 */\n\t\tcase CURLOPT_SSH_HOST_PUBLIC_KEY_MD5:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071301 /* Available since 7.19.1 */\n\t\tcase CURLOPT_PASSWORD:\n\t\tcase CURLOPT_PROXYPASSWORD:\n\t\tcase CURLOPT_PROXYUSERNAME:\n\t\tcase CURLOPT_USERNAME:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071304 /* Available since 7.19.4 */\n\t\tcase CURLOPT_NOPROXY:\n\t\tcase CURLOPT_SOCKS5_GSSAPI_SERVICE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071400 /* Available since 7.20.0 */\n\t\tcase CURLOPT_MAIL_FROM:\n\t\tcase CURLOPT_RTSP_STREAM_URI:\n\t\tcase CURLOPT_RTSP_TRANSPORT:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071504 /* Available since 7.21.4 */\n\t\tcase CURLOPT_TLSAUTH_PASSWORD:\n\t\tcase CURLOPT_TLSAUTH_USERNAME:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071506 /* Available since 7.21.6 */\n\t\tcase CURLOPT_ACCEPT_ENCODING:\n\t\tcase CURLOPT_TRANSFER_ENCODING:\n#else\n\t\tcase CURLOPT_ENCODING:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071800 /* Available since 7.24.0 */\n\t\tcase CURLOPT_DNS_SERVERS:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071900 /* Available since 7.25.0 */\n\t\tcase CURLOPT_MAIL_AUTH:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072200 /* Available since 7.34.0 */\n\t\tcase CURLOPT_LOGIN_OPTIONS:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072700 /* Available since 7.39.0 */\n\t\tcase CURLOPT_PINNEDPUBLICKEY:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072b00 /* Available since 7.43.0 */\n\t\tcase CURLOPT_PROXY_SERVICE_NAME:\n\t\tcase CURLOPT_SERVICE_NAME:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072d00 /* Available since 7.45.0 */\n\t\tcase CURLOPT_DEFAULT_PROTOCOL:\n#endif\n\t\t{\n\t\t\tzend_string *str = zval_get_string(zvalue);\n\t\t\tint ret = php_curl_option_str(ch, option, ZSTR_VAL(str), ZSTR_LEN(str), 0);\n\t\t\tzend_string_release(str);\n\t\t\treturn ret;\n\t\t}\n\n\t\t/* Curl nullable string options */\n\t\tcase CURLOPT_CUSTOMREQUEST:\n\t\tcase CURLOPT_FTPPORT:\n\t\tcase CURLOPT_RANGE:\n#if LIBCURL_VERSION_NUM >= 0x070d00 /* Available since 7.13.0 */\n\t\tcase CURLOPT_FTP_ACCOUNT:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071400 /* Available since 7.20.0 */\n\t\tcase CURLOPT_RTSP_SESSION_ID:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072100 /* Available since 7.33.0 */\n\t\tcase CURLOPT_DNS_INTERFACE:\n\t\tcase CURLOPT_DNS_LOCAL_IP4:\n\t\tcase CURLOPT_DNS_LOCAL_IP6:\n\t\tcase CURLOPT_XOAUTH2_BEARER:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072800 /* Available since 7.40.0 */\n\t\tcase CURLOPT_UNIX_SOCKET_PATH:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071004 /* Available since 7.16.4 */\n\t\tcase CURLOPT_KRBLEVEL:\n#else\n\t\tcase CURLOPT_KRB4LEVEL:\n#endif\n\t\t{\n\t\t\tif (Z_ISNULL_P(zvalue)) {\n\t\t\t\terror = curl_easy_setopt(ch->cp, option, NULL);\n\t\t\t} else {\n\t\t\t\tzend_string *str = zval_get_string(zvalue);\n\t\t\t\tint ret = php_curl_option_str(ch, option, ZSTR_VAL(str), ZSTR_LEN(str), 0);\n\t\t\t\tzend_string_release(str);\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\t/* Curl private option */\n\t\tcase CURLOPT_PRIVATE:\n\t\t{\n\t\t\tzend_string *str = zval_get_string(zvalue);\n\t\t\tint ret = php_curl_option_str(ch, option, ZSTR_VAL(str), ZSTR_LEN(str), 1);\n\t\t\tzend_string_release(str);\n\t\t\treturn ret;\n\t\t}\n\n\t\t/* Curl url option */\n\t\tcase CURLOPT_URL:\n\t\t{\n\t\t\tzend_string *str = zval_get_string(zvalue);\n\t\t\tint ret = php_curl_option_url(ch, ZSTR_VAL(str), ZSTR_LEN(str));\n\t\t\tzend_string_release(str);\n\t\t\treturn ret;\n\t\t}\n\n\t\t/* Curl file handle options */\n\t\tcase CURLOPT_FILE:\n\t\tcase CURLOPT_INFILE:\n\t\tcase CURLOPT_STDERR:\n\t\tcase CURLOPT_WRITEHEADER: {\n\t\t\tFILE *fp = NULL;\n\t\t\tphp_stream *what = NULL;\n\n\t\t\tif (Z_TYPE_P(zvalue) != IS_NULL) {\n\t\t\t\twhat = (php_stream *)zend_fetch_resource2_ex(zvalue, \"File-Handle\", php_file_le_stream(), php_file_le_pstream());\n\t\t\t\tif (!what) {\n\t\t\t\t\treturn FAILURE;\n\t\t\t\t}\n\n\t\t\t\tif (FAILURE == php_stream_cast(what, PHP_STREAM_AS_STDIO, (void *) &fp, REPORT_ERRORS)) {\n\t\t\t\t\treturn FAILURE;\n\t\t\t\t}\n\n\t\t\t\tif (!fp) {\n\t\t\t\t\treturn FAILURE;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\terror = CURLE_OK;\n\t\t\tswitch (option) {\n\t\t\t\tcase CURLOPT_FILE:\n\t\t\t\t\tif (!what) {\n\t\t\t\t\t\tif (!Z_ISUNDEF(ch->handlers->write->stream)) {\n\t\t\t\t\t\t\tzval_ptr_dtor(&ch->handlers->write->stream);\n\t\t\t\t\t\t\tZVAL_UNDEF(&ch->handlers->write->stream);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tch->handlers->write->fp = NULL;\n\t\t\t\t\t\tch->handlers->write->method = PHP_CURL_STDOUT;\n\t\t\t\t\t} else if (what->mode[0] != 'r' || what->mode[1] == '+') {\n\t\t\t\t\t\tzval_ptr_dtor(&ch->handlers->write->stream);\n\t\t\t\t\t\tch->handlers->write->fp = fp;\n\t\t\t\t\t\tch->handlers->write->method = PHP_CURL_FILE;\n\t\t\t\t\t\tZVAL_COPY(&ch->handlers->write->stream, zvalue);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"the provided file handle is not writable\");\n\t\t\t\t\t\treturn FAILURE;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase CURLOPT_WRITEHEADER:\n\t\t\t\t\tif (!what) {\n\t\t\t\t\t\tif (!Z_ISUNDEF(ch->handlers->write_header->stream)) {\n\t\t\t\t\t\t\tzval_ptr_dtor(&ch->handlers->write_header->stream);\n\t\t\t\t\t\t\tZVAL_UNDEF(&ch->handlers->write_header->stream);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tch->handlers->write_header->fp = NULL;\n\t\t\t\t\t\tch->handlers->write_header->method = PHP_CURL_IGNORE;\n\t\t\t\t\t} else if (what->mode[0] != 'r' || what->mode[1] == '+') {\n\t\t\t\t\t\tzval_ptr_dtor(&ch->handlers->write_header->stream);\n\t\t\t\t\t\tch->handlers->write_header->fp = fp;\n\t\t\t\t\t\tch->handlers->write_header->method = PHP_CURL_FILE;\n\t\t\t\t\t\tZVAL_COPY(&ch->handlers->write_header->stream, zvalue);;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"the provided file handle is not writable\");\n\t\t\t\t\t\treturn FAILURE;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase CURLOPT_INFILE:\n\t\t\t\t\tif (!what) {\n\t\t\t\t\t\tif (!Z_ISUNDEF(ch->handlers->read->stream)) {\n\t\t\t\t\t\t\tzval_ptr_dtor(&ch->handlers->read->stream);\n\t\t\t\t\t\t\tZVAL_UNDEF(&ch->handlers->read->stream);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tch->handlers->read->fp = NULL;\n\t\t\t\t\t\tch->handlers->read->res = NULL;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tzval_ptr_dtor(&ch->handlers->read->stream);\n\t\t\t\t\t\tch->handlers->read->fp = fp;\n\t\t\t\t\t\tch->handlers->read->res = Z_RES_P(zvalue);\n\t\t\t\t\t\tZVAL_COPY(&ch->handlers->read->stream, zvalue);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase CURLOPT_STDERR:\n\t\t\t\t\tif (!what) {\n\t\t\t\t\t\tif (!Z_ISUNDEF(ch->handlers->std_err)) {\n\t\t\t\t\t\t\tzval_ptr_dtor(&ch->handlers->std_err);\n\t\t\t\t\t\t\tZVAL_UNDEF(&ch->handlers->std_err);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (what->mode[0] != 'r' || what->mode[1] == '+') {\n\t\t\t\t\t\tzval_ptr_dtor(&ch->handlers->std_err);\n\t\t\t\t\t\tZVAL_COPY(&ch->handlers->std_err, zvalue);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"the provided file handle is not writable\");\n\t\t\t\t\t\treturn FAILURE;\n\t\t\t\t\t}\n\t\t\t\t\t/* break omitted intentionally */\n\t\t\t\tdefault:\n\t\t\t\t\terror = curl_easy_setopt(ch->cp, option, fp);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\t/* Curl linked list options */\n\t\tcase CURLOPT_HTTP200ALIASES:\n\t\tcase CURLOPT_HTTPHEADER:\n\t\tcase CURLOPT_POSTQUOTE:\n\t\tcase CURLOPT_PREQUOTE:\n\t\tcase CURLOPT_QUOTE:\n\t\tcase CURLOPT_TELNETOPTIONS:\n#if LIBCURL_VERSION_NUM >= 0x071400 /* Available since 7.20.0 */\n\t\tcase CURLOPT_MAIL_RCPT:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071503 /* Available since 7.21.3 */\n\t\tcase CURLOPT_RESOLVE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072500 /* Available since 7.37.0 */\n\t\tcase CURLOPT_PROXYHEADER:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x073100 /* Available since 7.49.0 */\n\t\tcase CURLOPT_CONNECT_TO:\n#endif\n\t\t{\n\t\t\tzval *current;\n\t\t\tHashTable *ph;\n\t\t\tzend_string *val;\n\t\t\tstruct curl_slist *slist = NULL;\n\n\t\t\tph = HASH_OF(zvalue);\n\t\t\tif (!ph) {\n\t\t\t\tchar *name = NULL;\n\t\t\t\tswitch (option) {\n\t\t\t\t\tcase CURLOPT_HTTPHEADER:\n\t\t\t\t\t\tname = \"CURLOPT_HTTPHEADER\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CURLOPT_QUOTE:\n\t\t\t\t\t\tname = \"CURLOPT_QUOTE\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CURLOPT_HTTP200ALIASES:\n\t\t\t\t\t\tname = \"CURLOPT_HTTP200ALIASES\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CURLOPT_POSTQUOTE:\n\t\t\t\t\t\tname = \"CURLOPT_POSTQUOTE\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CURLOPT_PREQUOTE:\n\t\t\t\t\t\tname = \"CURLOPT_PREQUOTE\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CURLOPT_TELNETOPTIONS:\n\t\t\t\t\t\tname = \"CURLOPT_TELNETOPTIONS\";\n\t\t\t\t\t\tbreak;\n#if LIBCURL_VERSION_NUM >= 0x071400 /* Available since 7.20.0 */\n\t\t\t\t\tcase CURLOPT_MAIL_RCPT:\n\t\t\t\t\t\tname = \"CURLOPT_MAIL_RCPT\";\n\t\t\t\t\t\tbreak;\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071503 /* Available since 7.21.3 */\n\t\t\t\t\tcase CURLOPT_RESOLVE:\n\t\t\t\t\t\tname = \"CURLOPT_RESOLVE\";\n\t\t\t\t\t\tbreak;\n#endif\n#if LIBCURL_VERSION_NUM >= 0x072500 /* Available since 7.37.0 */\n\t\t\t\t\tcase CURLOPT_PROXYHEADER:\n\t\t\t\t\t\tname = \"CURLOPT_PROXYHEADER\";\n\t\t\t\t\t\tbreak;\n#endif\n#if LIBCURL_VERSION_NUM >= 0x073100 /* Available since 7.49.0 */\n\t\t\t\t\tcase CURLOPT_CONNECT_TO:\n\t\t\t\t\t\tname = \"CURLOPT_CONNECT_TO\";\n\t\t\t\t\t\tbreak;\n#endif\n\t\t\t\t}\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"You must pass either an object or an array with the %s argument\", name);\n\t\t\t\treturn FAILURE;\n\t\t\t}\n\n\t\t\tZEND_HASH_FOREACH_VAL(ph, current) {\n\t\t\t\tZVAL_DEREF(current);\n\t\t\t\tval = zval_get_string(current);\n\t\t\t\tslist = curl_slist_append(slist, ZSTR_VAL(val));\n\t\t\t\tzend_string_release(val);\n\t\t\t\tif (!slist) {\n\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Could not build curl_slist\");\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t} ZEND_HASH_FOREACH_END();\n\n\t\t\tif (slist) {\n\t\t\t\tif ((*ch->clone) == 1) {\n\t\t\t\t\tzend_hash_index_update_ptr(ch->to_free->slist, option, slist);\n\t\t\t\t} else {\n\t\t\t\t\tzend_hash_next_index_insert_ptr(ch->to_free->slist, slist);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\terror = curl_easy_setopt(ch->cp, option, slist);\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase CURLOPT_BINARYTRANSFER:\n\t\t\t/* Do nothing, just backward compatibility */\n\t\t\tbreak;\n\n\t\tcase CURLOPT_FOLLOWLOCATION:\n\t\t\tlval = zval_get_long(zvalue);\n#if LIBCURL_VERSION_NUM < 0x071304\n\t\t\tif (PG(open_basedir) && *PG(open_basedir)) {\n\t\t\t\tif (lval != 0) {\n\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"CURLOPT_FOLLOWLOCATION cannot be activated when an open_basedir is set\");\n\t\t\t\t\treturn FAILURE;\n\t\t\t\t}\n\t\t\t}\n#endif\n\t\t\terror = curl_easy_setopt(ch->cp, option, lval);\n\t\t\tbreak;\n\n\t\tcase CURLOPT_HEADERFUNCTION:\n\t\t\tif (!Z_ISUNDEF(ch->handlers->write_header->func_name)) {\n\t\t\t\tzval_ptr_dtor(&ch->handlers->write_header->func_name);\n\t\t\t\tch->handlers->write_header->fci_cache = empty_fcall_info_cache;\n\t\t\t}\n\t\t\tZVAL_COPY(&ch->handlers->write_header->func_name, zvalue);\n\t\t\tch->handlers->write_header->method = PHP_CURL_USER;\n\t\t\tbreak;\n\n\t\tcase CURLOPT_POSTFIELDS:\n\t\t\tif (Z_TYPE_P(zvalue) == IS_ARRAY || Z_TYPE_P(zvalue) == IS_OBJECT) {\n\t\t\t\tzval *current;\n\t\t\t\tHashTable *postfields;\n\t\t\t\tzend_string *string_key;\n\t\t\t\tzend_ulong  num_key;\n\t\t\t\tstruct HttpPost *first = NULL;\n\t\t\t\tstruct HttpPost *last  = NULL;\n\t\t\t\tCURLFORMcode form_error;\n\n\t\t\t\tpostfields = HASH_OF(zvalue);\n\t\t\t\tif (!postfields) {\n\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Couldn't get HashTable in CURLOPT_POSTFIELDS\");\n\t\t\t\t\treturn FAILURE;\n\t\t\t\t}\n\n\t\t\t\tZEND_HASH_FOREACH_KEY_VAL(postfields, num_key, string_key, current) {\n\t\t\t\t\tzend_string *postval;\n\t\t\t\t\t/* Pretend we have a string_key here */\n\t\t\t\t\tif (!string_key) {\n\t\t\t\t\t\tstring_key = zend_long_to_str(num_key);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tzend_string_addref(string_key);\n\t\t\t\t\t}\n\n\t\t\t\t\tZVAL_DEREF(current);\n\t\t\t\t\tif (Z_TYPE_P(current) == IS_OBJECT &&\n\t\t\t\t\t\t\tinstanceof_function(Z_OBJCE_P(current), curl_CURLFile_class)) {\n\t\t\t\t\t\t/* new-style file upload */\n\t\t\t\t\t\tzval *prop, rv;\n\t\t\t\t\t\tchar *type = NULL, *filename = NULL;\n\n\t\t\t\t\t\tprop = zend_read_property(curl_CURLFile_class, current, \"name\", sizeof(\"name\")-1, 0, &rv);\n\t\t\t\t\t\tif (Z_TYPE_P(prop) != IS_STRING) {\n\t\t\t\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Invalid filename for key %s\", ZSTR_VAL(string_key));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpostval = Z_STR_P(prop);\n\n\t\t\t\t\t\t\tif (php_check_open_basedir(ZSTR_VAL(postval))) {\n\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprop = zend_read_property(curl_CURLFile_class, current, \"mime\", sizeof(\"mime\")-1, 0, &rv);\n\t\t\t\t\t\t\tif (Z_TYPE_P(prop) == IS_STRING && Z_STRLEN_P(prop) > 0) {\n\t\t\t\t\t\t\t\ttype = Z_STRVAL_P(prop);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprop = zend_read_property(curl_CURLFile_class, current, \"postname\", sizeof(\"postname\")-1, 0, &rv);\n\t\t\t\t\t\t\tif (Z_TYPE_P(prop) == IS_STRING && Z_STRLEN_P(prop) > 0) {\n\t\t\t\t\t\t\t\tfilename = Z_STRVAL_P(prop);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tform_error = curl_formadd(&first, &last,\n\t\t\t\t\t\t\t\t\t\t\tCURLFORM_COPYNAME, ZSTR_VAL(string_key),\n\t\t\t\t\t\t\t\t\t\t\tCURLFORM_NAMELENGTH, ZSTR_LEN(string_key),\n\t\t\t\t\t\t\t\t\t\t\tCURLFORM_FILENAME, filename ? filename : ZSTR_VAL(postval),\n\t\t\t\t\t\t\t\t\t\t\tCURLFORM_CONTENTTYPE, type ? type : \"application/octet-stream\",\n\t\t\t\t\t\t\t\t\t\t\tCURLFORM_FILE, ZSTR_VAL(postval),\n\t\t\t\t\t\t\t\t\t\t\tCURLFORM_END);\n\t\t\t\t\t\t\tif (form_error != CURL_FORMADD_OK) {\n\t\t\t\t\t\t\t\t/* Not nice to convert between enums but we only have place for one error type */\n\t\t\t\t\t\t\t\terror = (CURLcode)form_error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tzend_string_release(string_key);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tpostval = zval_get_string(current);\n\n\t\t\t\t\t/* The arguments after _NAMELENGTH and _CONTENTSLENGTH\n\t\t\t\t\t * must be explicitly cast to long in curl_formadd\n\t\t\t\t\t * use since curl needs a long not an int. */\n\t\t\t\t\tform_error = curl_formadd(&first, &last,\n\t\t\t\t\t\t\t\t\t\t CURLFORM_COPYNAME, ZSTR_VAL(string_key),\n\t\t\t\t\t\t\t\t\t\t CURLFORM_NAMELENGTH, ZSTR_LEN(string_key),\n\t\t\t\t\t\t\t\t\t\t CURLFORM_COPYCONTENTS, ZSTR_VAL(postval),\n\t\t\t\t\t\t\t\t\t\t CURLFORM_CONTENTSLENGTH, ZSTR_LEN(postval),\n\t\t\t\t\t\t\t\t\t\t CURLFORM_END);\n\n\t\t\t\t\tif (form_error != CURL_FORMADD_OK) {\n\t\t\t\t\t\t/* Not nice to convert between enums but we only have place for one error type */\n\t\t\t\t\t\terror = (CURLcode)form_error;\n\t\t\t\t\t}\n\t\t\t\t\tzend_string_release(postval);\n\t\t\t\t\tzend_string_release(string_key);\n\t\t\t\t} ZEND_HASH_FOREACH_END();\n\n\t\t\t\tSAVE_CURL_ERROR(ch, error);\n\t\t\t\tif (error != CURLE_OK) {\n\t\t\t\t\treturn FAILURE;\n\t\t\t\t}\n\n\t\t\t\tif ((*ch->clone) == 1) {\n\t\t\t\t\tzend_llist_clean(&ch->to_free->post);\n\t\t\t\t}\n\t\t\t\tzend_llist_add_element(&ch->to_free->post, &first);\n\t\t\t\terror = curl_easy_setopt(ch->cp, CURLOPT_HTTPPOST, first);\n\t\t\t} else {\n#if LIBCURL_VERSION_NUM >= 0x071101\n\t\t\t\tzend_string *str = zval_get_string(zvalue);\n\t\t\t\t/* with curl 7.17.0 and later, we can use COPYPOSTFIELDS, but we have to provide size before */\n\t\t\t\terror = curl_easy_setopt(ch->cp, CURLOPT_POSTFIELDSIZE, ZSTR_LEN(str));\n\t\t\t\terror = curl_easy_setopt(ch->cp, CURLOPT_COPYPOSTFIELDS, ZSTR_VAL(str));\n\t\t\t\tzend_string_release(str);\n#else\n\t\t\t\tchar *post = NULL;\n\t\t\t\tzend_string *str = zval_get_string(zvalue);\n\n\t\t\t\tpost = estrndup(ZSTR_VAL(str), ZSTR_LEN(str));\n\t\t\t\tzend_llist_add_element(&ch->to_free->str, &post);\n\n\t\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_POSTFIELDS, post);\n\t\t\t\terror = curl_easy_setopt(ch->cp, CURLOPT_POSTFIELDSIZE, ZSTR_LEN(str));\n\t\t\t\tzend_string_release(str);\n#endif\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase CURLOPT_PROGRESSFUNCTION:\n\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_PROGRESSFUNCTION,\tcurl_progress);\n\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_PROGRESSDATA, ch);\n\t\t\tif (ch->handlers->progress == NULL) {\n\t\t\t\tch->handlers->progress = ecalloc(1, sizeof(php_curl_progress));\n\t\t\t} else if (!Z_ISUNDEF(ch->handlers->progress->func_name)) {\n\t\t\t\tzval_ptr_dtor(&ch->handlers->progress->func_name);\n\t\t\t\tch->handlers->progress->fci_cache = empty_fcall_info_cache;\n\t\t\t}\n\t\t\tZVAL_COPY(&ch->handlers->progress->func_name, zvalue);\n\t\t\tch->handlers->progress->method = PHP_CURL_USER;\n\t\t\tbreak;\n\n\t\tcase CURLOPT_READFUNCTION:\n\t\t\tif (!Z_ISUNDEF(ch->handlers->read->func_name)) {\n\t\t\t\tzval_ptr_dtor(&ch->handlers->read->func_name);\n\t\t\t\tch->handlers->read->fci_cache = empty_fcall_info_cache;\n\t\t\t}\n\t\t\tZVAL_COPY(&ch->handlers->read->func_name, zvalue);\n\t\t\tch->handlers->read->method = PHP_CURL_USER;\n\t\t\tbreak;\n\n\t\tcase CURLOPT_RETURNTRANSFER:\n\t\t\tlval = zval_get_long(zvalue);\n\t\t\tif (lval) {\n\t\t\t\tch->handlers->write->method = PHP_CURL_RETURN;\n\t\t\t} else {\n\t\t\t\tch->handlers->write->method = PHP_CURL_STDOUT;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase CURLOPT_WRITEFUNCTION:\n\t\t\tif (!Z_ISUNDEF(ch->handlers->write->func_name)) {\n\t\t\t\tzval_ptr_dtor(&ch->handlers->write->func_name);\n\t\t\t\tch->handlers->write->fci_cache = empty_fcall_info_cache;\n\t\t\t}\n\t\t\tZVAL_COPY(&ch->handlers->write->func_name, zvalue);\n\t\t\tch->handlers->write->method = PHP_CURL_USER;\n\t\t\tbreak;\n\n#if LIBCURL_VERSION_NUM >= 0x070f05 /* Available since 7.15.5 */\n\t\tcase CURLOPT_MAX_RECV_SPEED_LARGE:\n\t\tcase CURLOPT_MAX_SEND_SPEED_LARGE:\n\t\t\tlval = zval_get_long(zvalue);\n\t\t\terror = curl_easy_setopt(ch->cp, option, (curl_off_t)lval);\n\t\t\tbreak;\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071301 /* Available since 7.19.1 */\n\t\tcase CURLOPT_POSTREDIR:\n\t\t\tlval = zval_get_long(zvalue);\n\t\t\terror = curl_easy_setopt(ch->cp, CURLOPT_POSTREDIR, lval & CURL_REDIR_POST_ALL);\n\t\t\tbreak;\n#endif\n\n#if CURLOPT_PASSWDFUNCTION != 0\n\t\tcase CURLOPT_PASSWDFUNCTION:\n\t\t\tzval_ptr_dtor(&ch->handlers->passwd);\n\t\t\tZVAL_COPY(&ch->handlers->passwd, zvalue);\n\t\t\terror = curl_easy_setopt(ch->cp, CURLOPT_PASSWDFUNCTION, curl_passwd);\n\t\t\terror = curl_easy_setopt(ch->cp, CURLOPT_PASSWDDATA,     (void *) ch);\n\t\t\tbreak;\n#endif\n\n\t\t/* the following options deal with files, therefore the open_basedir check\n\t\t * is required.\n\t\t */\n\t\tcase CURLOPT_COOKIEFILE:\n\t\tcase CURLOPT_COOKIEJAR:\n\t\tcase CURLOPT_RANDOM_FILE:\n\t\tcase CURLOPT_SSLCERT:\n#if LIBCURL_VERSION_NUM >= 0x070b00 /* Available since 7.11.0 */\n\t\tcase CURLOPT_NETRC_FILE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071001 /* Available since 7.16.1 */\n\t\tcase CURLOPT_SSH_PRIVATE_KEYFILE:\n\t\tcase CURLOPT_SSH_PUBLIC_KEYFILE:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071300 /* Available since 7.19.0 */\n\t\tcase CURLOPT_CRLFILE:\n\t\tcase CURLOPT_ISSUERCERT:\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071306 /* Available since 7.19.6 */\n\t\tcase CURLOPT_SSH_KNOWNHOSTS:\n#endif\n\t\t{\n\t\t\tzend_string *str = zval_get_string(zvalue);\n\t\t\tint ret;\n\n\t\t\tif (ZSTR_LEN(str) && php_check_open_basedir(ZSTR_VAL(str))) {\n\t\t\t\tzend_string_release(str);\n\t\t\t\treturn FAILURE;\n\t\t\t}\n\n\t\t\tret = php_curl_option_str(ch, option, ZSTR_VAL(str), ZSTR_LEN(str), 0);\n\t\t\tzend_string_release(str);\n\t\t\treturn ret;\n\t\t}\n\n\t\tcase CURLINFO_HEADER_OUT:\n\t\t\tlval = zval_get_long(zvalue);\n\t\t\tif (lval == 1) {\n\t\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_DEBUGFUNCTION, curl_debug);\n\t\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_DEBUGDATA, (void *)ch);\n\t\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_VERBOSE, 1);\n\t\t\t} else {\n\t\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_DEBUGFUNCTION, NULL);\n\t\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_DEBUGDATA, NULL);\n\t\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_VERBOSE, 0);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase CURLOPT_SHARE:\n\t\t\t{\n\t\t\t\tphp_curlsh *sh;\n\t\t\t\tif ((sh = (php_curlsh *)zend_fetch_resource_ex(zvalue, le_curl_share_handle_name, le_curl_share_handle))) {\n\t\t\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_SHARE, sh->share);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\n#if LIBCURL_VERSION_NUM >= 0x071500 /* Available since 7.21.0 */\n\t\tcase CURLOPT_FNMATCH_FUNCTION:\n\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_FNMATCH_FUNCTION, curl_fnmatch);\n\t\t\tcurl_easy_setopt(ch->cp, CURLOPT_FNMATCH_DATA, ch);\n\t\t\tif (ch->handlers->fnmatch == NULL) {\n\t\t\t\tch->handlers->fnmatch = ecalloc(1, sizeof(php_curl_fnmatch));\n\t\t\t} else if (!Z_ISUNDEF(ch->handlers->fnmatch->func_name)) {\n\t\t\t\tzval_ptr_dtor(&ch->handlers->fnmatch->func_name);\n\t\t\t\tch->handlers->fnmatch->fci_cache = empty_fcall_info_cache;\n\t\t\t}\n\t\t\tZVAL_COPY(&ch->handlers->fnmatch->func_name, zvalue);\n\t\t\tch->handlers->fnmatch->method = PHP_CURL_USER;\n\t\t\tbreak;\n#endif\n\n\t}\n\n\tSAVE_CURL_ERROR(ch, error);\n\tif (error != CURLE_OK) {\n\t\treturn FAILURE;\n\t} else {\n\t\treturn SUCCESS;\n\t}\n}\n/* }}} */\n\n/* {{{ proto bool curl_setopt(resource ch, int option, mixed value)\n   Set an option for a cURL transfer */\nPHP_FUNCTION(curl_setopt)\n{\n\tzval       *zid, *zvalue;\n\tzend_long        options;\n\tphp_curl   *ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"rlz\", &zid, &options, &zvalue) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (options <= 0 && options != CURLOPT_SAFE_UPLOAD) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Invalid curl configuration option\");\n\t\tRETURN_FALSE;\n\t}\n\n\tif (_php_curl_setopt(ch, options, zvalue) == SUCCESS) {\n\t\tRETURN_TRUE;\n\t} else {\n\t\tRETURN_FALSE;\n\t}\n}\n/* }}} */\n\n/* {{{ proto bool curl_setopt_array(resource ch, array options)\n   Set an array of option for a cURL transfer */\nPHP_FUNCTION(curl_setopt_array)\n{\n\tzval\t\t*zid, *arr, *entry;\n\tphp_curl\t*ch;\n\tzend_ulong\toption;\n\tzend_string\t*string_key;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"ra\", &zid, &arr) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tZEND_HASH_FOREACH_KEY_VAL(Z_ARRVAL_P(arr), option, string_key, entry) {\n\t\tif (string_key) {\n\t\t\tphp_error_docref(NULL, E_WARNING,\n\t\t\t\t\t\"Array keys must be CURLOPT constants or equivalent integer values\");\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\tif (_php_curl_setopt(ch, (zend_long) option, entry) == FAILURE) {\n\t\t\tRETURN_FALSE;\n\t\t}\n\t} ZEND_HASH_FOREACH_END();\n\n\tRETURN_TRUE;\n}\n/* }}} */\n\n/* {{{ _php_curl_cleanup_handle(ch)\n   Cleanup an execution phase */\nvoid _php_curl_cleanup_handle(php_curl *ch)\n{\n\tsmart_str_free(&ch->handlers->write->buf);\n\tif (ch->header.str) {\n\t\tzend_string_release(ch->header.str);\n\t\tch->header.str = NULL;\n\t}\n\n\tmemset(ch->err.str, 0, CURL_ERROR_SIZE + 1);\n\tch->err.no = 0;\n}\n/* }}} */\n\n/* {{{ proto bool curl_exec(resource ch)\n   Perform a cURL session */\nPHP_FUNCTION(curl_exec)\n{\n\tCURLcode\terror;\n\tzval\t\t*zid;\n\tphp_curl\t*ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"r\", &zid) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\t_php_curl_verify_handlers(ch, 1);\n\n\t_php_curl_cleanup_handle(ch);\n\n\terror = curl_easy_perform(ch->cp);\n\tSAVE_CURL_ERROR(ch, error);\n\t/* CURLE_PARTIAL_FILE is returned by HEAD requests */\n\tif (error != CURLE_OK && error != CURLE_PARTIAL_FILE) {\n\t\tsmart_str_free(&ch->handlers->write->buf);\n\t\tRETURN_FALSE;\n\t}\n\n\tif (!Z_ISUNDEF(ch->handlers->std_err)) {\n\t\tphp_stream  *stream;\n\t\tstream = (php_stream*)zend_fetch_resource2_ex(&ch->handlers->std_err, NULL, php_file_le_stream(), php_file_le_pstream());\n\t\tif (stream) {\n\t\t\tphp_stream_flush(stream);\n\t\t}\n\t}\n\n\tif (ch->handlers->write->method == PHP_CURL_RETURN && ch->handlers->write->buf.s) {\n\t\tsmart_str_0(&ch->handlers->write->buf);\n\t\tRETURN_STR_COPY(ch->handlers->write->buf.s);\n\t}\n\n\t/* flush the file handle, so any remaining data is synched to disk */\n\tif (ch->handlers->write->method == PHP_CURL_FILE && ch->handlers->write->fp) {\n\t\tfflush(ch->handlers->write->fp);\n\t}\n\tif (ch->handlers->write_header->method == PHP_CURL_FILE && ch->handlers->write_header->fp) {\n\t\tfflush(ch->handlers->write_header->fp);\n\t}\n\n\tif (ch->handlers->write->method == PHP_CURL_RETURN) {\n\t\tRETURN_EMPTY_STRING();\n\t} else {\n\t\tRETURN_TRUE;\n\t}\n}\n/* }}} */\n\n/* {{{ proto mixed curl_getinfo(resource ch [, int option])\n   Get information regarding a specific transfer */\nPHP_FUNCTION(curl_getinfo)\n{\n\tzval\t\t*zid;\n\tphp_curl\t*ch;\n\tzend_long\toption = 0;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"r|l\", &zid, &option) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (ZEND_NUM_ARGS() < 2) {\n\t\tchar *s_code;\n\t\t/* libcurl expects long datatype. So far no cases are known where\n\t\t   it would be an issue. Using zend_long would truncate a 64-bit\n\t\t   var on Win64, so the exact long datatype fits everywhere, as\n\t\t   long as there's no 32-bit int overflow. */\n\t\tlong l_code;\n\t\tdouble d_code;\n#if LIBCURL_VERSION_NUM >  0x071301\n\t\tstruct curl_certinfo *ci = NULL;\n\t\tzval listcode;\n#endif\n\n\t\tarray_init(return_value);\n\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_EFFECTIVE_URL, &s_code) == CURLE_OK) {\n\t\t\tCAAS(\"url\", s_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_CONTENT_TYPE, &s_code) == CURLE_OK) {\n\t\t\tif (s_code != NULL) {\n\t\t\t\tCAAS(\"content_type\", s_code);\n\t\t\t} else {\n\t\t\t\tzval retnull;\n\t\t\t\tZVAL_NULL(&retnull);\n\t\t\t\tCAAZ(\"content_type\", &retnull);\n\t\t\t}\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_HTTP_CODE, &l_code) == CURLE_OK) {\n\t\t\tCAAL(\"http_code\", l_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_HEADER_SIZE, &l_code) == CURLE_OK) {\n\t\t\tCAAL(\"header_size\", l_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_REQUEST_SIZE, &l_code) == CURLE_OK) {\n\t\t\tCAAL(\"request_size\", l_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_FILETIME, &l_code) == CURLE_OK) {\n\t\t\tCAAL(\"filetime\", l_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_SSL_VERIFYRESULT, &l_code) == CURLE_OK) {\n\t\t\tCAAL(\"ssl_verify_result\", l_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_REDIRECT_COUNT, &l_code) == CURLE_OK) {\n\t\t\tCAAL(\"redirect_count\", l_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_TOTAL_TIME, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"total_time\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_NAMELOOKUP_TIME, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"namelookup_time\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_CONNECT_TIME, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"connect_time\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_PRETRANSFER_TIME, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"pretransfer_time\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_SIZE_UPLOAD, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"size_upload\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_SIZE_DOWNLOAD, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"size_download\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_SPEED_DOWNLOAD, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"speed_download\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_SPEED_UPLOAD, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"speed_upload\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_CONTENT_LENGTH_DOWNLOAD, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"download_content_length\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_CONTENT_LENGTH_UPLOAD, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"upload_content_length\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_STARTTRANSFER_TIME, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"starttransfer_time\", d_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_REDIRECT_TIME, &d_code) == CURLE_OK) {\n\t\t\tCAAD(\"redirect_time\", d_code);\n\t\t}\n#if LIBCURL_VERSION_NUM >= 0x071202 /* Available since 7.18.2 */\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_REDIRECT_URL, &s_code) == CURLE_OK) {\n\t\t\tCAAS(\"redirect_url\", s_code);\n\t\t}\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071300 /* Available since 7.19.0 */\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_PRIMARY_IP, &s_code) == CURLE_OK) {\n\t\t\tCAAS(\"primary_ip\", s_code);\n\t\t}\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071301 /* Available since 7.19.1 */\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_CERTINFO, &ci) == CURLE_OK) {\n\t\t\tarray_init(&listcode);\n\t\t\tcreate_certinfo(ci, &listcode);\n\t\t\tCAAZ(\"certinfo\", &listcode);\n\t\t}\n#endif\n#if LIBCURL_VERSION_NUM >= 0x071500 /* Available since 7.21.0 */\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_PRIMARY_PORT, &l_code) == CURLE_OK) {\n\t\t\tCAAL(\"primary_port\", l_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_LOCAL_IP, &s_code) == CURLE_OK) {\n\t\t\tCAAS(\"local_ip\", s_code);\n\t\t}\n\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_LOCAL_PORT, &l_code) == CURLE_OK) {\n\t\t\tCAAL(\"local_port\", l_code);\n\t\t}\n#endif\n\t\tif (ch->header.str) {\n\t\t\tCAASTR(\"request_header\", ch->header.str);\n\t\t}\n\t} else {\n\t\tswitch (option) {\n\t\t\tcase CURLINFO_HEADER_OUT:\n\t\t\t\tif (ch->header.str) {\n\t\t\t\t\tRETURN_STR_COPY(ch->header.str);\n\t\t\t\t} else {\n\t\t\t\t\tRETURN_FALSE;\n\t\t\t\t}\n#if LIBCURL_VERSION_NUM >= 0x071301 /* Available since 7.19.1 */\n\t\t\tcase CURLINFO_CERTINFO: {\n\t\t\t\tstruct curl_certinfo *ci = NULL;\n\n\t\t\t\tarray_init(return_value);\n\n\t\t\t\tif (curl_easy_getinfo(ch->cp, CURLINFO_CERTINFO, &ci) == CURLE_OK) {\n\t\t\t\t\tcreate_certinfo(ci, return_value);\n\t\t\t\t} else {\n\t\t\t\t\tRETURN_FALSE;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n#endif\n\t\t\tdefault: {\n\t\t\t\tint type = CURLINFO_TYPEMASK & option;\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase CURLINFO_STRING:\n\t\t\t\t\t{\n\t\t\t\t\t\tchar *s_code = NULL;\n\n\t\t\t\t\t\tif (curl_easy_getinfo(ch->cp, option, &s_code) == CURLE_OK && s_code) {\n\t\t\t\t\t\t\tRETURN_STRING(s_code);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tRETURN_FALSE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CURLINFO_LONG:\n\t\t\t\t\t{\n\t\t\t\t\t\tzend_long code = 0;\n\n\t\t\t\t\t\tif (curl_easy_getinfo(ch->cp, option, &code) == CURLE_OK) {\n\t\t\t\t\t\t\tRETURN_LONG(code);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tRETURN_FALSE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CURLINFO_DOUBLE:\n\t\t\t\t\t{\n\t\t\t\t\t\tdouble code = 0.0;\n\n\t\t\t\t\t\tif (curl_easy_getinfo(ch->cp, option, &code) == CURLE_OK) {\n\t\t\t\t\t\t\tRETURN_DOUBLE(code);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tRETURN_FALSE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n#if LIBCURL_VERSION_NUM >= 0x070c03 /* Available since 7.12.3 */\n\t\t\t\t\tcase CURLINFO_SLIST:\n\t\t\t\t\t{\n\t\t\t\t\t\tstruct curl_slist *slist;\n\t\t\t\t\t\tarray_init(return_value);\n\t\t\t\t\t\tif (curl_easy_getinfo(ch->cp, option, &slist) == CURLE_OK) {\n\t\t\t\t\t\t\twhile (slist) {\n\t\t\t\t\t\t\t\tadd_next_index_string(return_value, slist->data);\n\t\t\t\t\t\t\t\tslist = slist->next;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurl_slist_free_all(slist);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tRETURN_FALSE;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n#endif\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tRETURN_FALSE;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n/* }}} */\n\n/* {{{ proto string curl_error(resource ch)\n   Return a string contain the last error for the current session */\nPHP_FUNCTION(curl_error)\n{\n\tzval\t\t*zid;\n\tphp_curl\t*ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"r\", &zid) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tch->err.str[CURL_ERROR_SIZE] = 0;\n\tRETURN_STRING(ch->err.str);\n}\n/* }}} */\n\n/* {{{ proto int curl_errno(resource ch)\n   Return an integer containing the last error number */\nPHP_FUNCTION(curl_errno)\n{\n\tzval\t\t*zid;\n\tphp_curl\t*ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"r\", &zid) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tRETURN_LONG(ch->err.no);\n}\n/* }}} */\n\n/* {{{ proto void curl_close(resource ch)\n   Close a cURL session */\nPHP_FUNCTION(curl_close)\n{\n\tzval\t\t*zid;\n\tphp_curl\t*ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"r\", &zid) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (ch->in_callback) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Attempt to close cURL handle from a callback\");\n\t\treturn;\n\t}\n\n\tif (Z_REFCOUNT_P(zid) <= 2) {\n\t\tzend_list_close(Z_RES_P(zid));\n\t}\n}\n/* }}} */\n\n/* {{{ _php_curl_close_ex()\n   List destructor for curl handles */\nstatic void _php_curl_close_ex(php_curl *ch)\n{\n#if PHP_CURL_DEBUG\n\tfprintf(stderr, \"DTOR CALLED, ch = %x\\n\", ch);\n#endif\n\n\t_php_curl_verify_handlers(ch, 0);\n\n\t/*\n\t * Libcurl is doing connection caching. When easy handle is cleaned up,\n\t * if the handle was previously used by the curl_multi_api, the connection\n\t * remains open un the curl multi handle is cleaned up. Some protocols are\n\t * sending content like the FTP one, and libcurl try to use the\n\t * WRITEFUNCTION or the HEADERFUNCTION. Since structures used in those\n\t * callback are freed, we need to use an other callback to which avoid\n\t * segfaults.\n\t *\n\t * Libcurl commit d021f2e8a00 fix this issue and should be part of 7.28.2\n\t */\n\tcurl_easy_setopt(ch->cp, CURLOPT_HEADERFUNCTION, curl_write_nothing);\n\tcurl_easy_setopt(ch->cp, CURLOPT_WRITEFUNCTION, curl_write_nothing);\n\n\tcurl_easy_cleanup(ch->cp);\n\n\t/* cURL destructors should be invoked only by last curl handle */\n\tif (--(*ch->clone) == 0) {\n\t\tzend_llist_clean(&ch->to_free->str);\n\t\tzend_llist_clean(&ch->to_free->post);\n\t\tzend_hash_destroy(ch->to_free->slist);\n\t\tefree(ch->to_free->slist);\n\t\tefree(ch->to_free);\n\t\tefree(ch->clone);\n\t}\n\n\tsmart_str_free(&ch->handlers->write->buf);\n\tzval_ptr_dtor(&ch->handlers->write->func_name);\n\tzval_ptr_dtor(&ch->handlers->read->func_name);\n\tzval_ptr_dtor(&ch->handlers->write_header->func_name);\n#if CURLOPT_PASSWDFUNCTION != 0\n\tzval_ptr_dtor(&ch->handlers->passwd);\n#endif\n\tzval_ptr_dtor(&ch->handlers->std_err);\n\tif (ch->header.str) {\n\t\tzend_string_release(ch->header.str);\n\t}\n\n\tzval_ptr_dtor(&ch->handlers->write_header->stream);\n\tzval_ptr_dtor(&ch->handlers->write->stream);\n\tzval_ptr_dtor(&ch->handlers->read->stream);\n\n\tefree(ch->handlers->write);\n\tefree(ch->handlers->write_header);\n\tefree(ch->handlers->read);\n\n\tif (ch->handlers->progress) {\n\t\tzval_ptr_dtor(&ch->handlers->progress->func_name);\n\t\tefree(ch->handlers->progress);\n\t}\n\n#if LIBCURL_VERSION_NUM >= 0x071500 /* Available since 7.21.0 */\n\tif (ch->handlers->fnmatch) {\n\t\tzval_ptr_dtor(&ch->handlers->fnmatch->func_name);\n\t\tefree(ch->handlers->fnmatch);\n\t}\n#endif\n\n\tefree(ch->handlers);\n\tefree(ch);\n}\n/* }}} */\n\n/* {{{ _php_curl_close()\n   List destructor for curl handles */\nstatic void _php_curl_close(zend_resource *rsrc)\n{\n\tphp_curl *ch = (php_curl *) rsrc->ptr;\n\t_php_curl_close_ex(ch);\n}\n/* }}} */\n\n#if LIBCURL_VERSION_NUM >= 0x070c00 /* Available since 7.12.0 */\n/* {{{ proto bool curl_strerror(int code)\n      return string describing error code */\nPHP_FUNCTION(curl_strerror)\n{\n\tzend_long code;\n\tconst char *str;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"l\", &code) == FAILURE) {\n\t\treturn;\n\t}\n\n\tstr = curl_easy_strerror(code);\n\tif (str) {\n\t\tRETURN_STRING(str);\n\t} else {\n\t\tRETURN_NULL();\n\t}\n}\n/* }}} */\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x070c01 /* 7.12.1 */\n/* {{{ _php_curl_reset_handlers()\n   Reset all handlers of a given php_curl */\nstatic void _php_curl_reset_handlers(php_curl *ch)\n{\n\tif (!Z_ISUNDEF(ch->handlers->write->stream)) {\n\t\tzval_ptr_dtor(&ch->handlers->write->stream);\n\t\tZVAL_UNDEF(&ch->handlers->write->stream);\n\t}\n\tch->handlers->write->fp = NULL;\n\tch->handlers->write->method = PHP_CURL_STDOUT;\n\n\tif (!Z_ISUNDEF(ch->handlers->write_header->stream)) {\n\t\tzval_ptr_dtor(&ch->handlers->write_header->stream);\n\t\tZVAL_UNDEF(&ch->handlers->write_header->stream);\n\t}\n\tch->handlers->write_header->fp = NULL;\n\tch->handlers->write_header->method = PHP_CURL_IGNORE;\n\n\tif (!Z_ISUNDEF(ch->handlers->read->stream)) {\n\t\tzval_ptr_dtor(&ch->handlers->read->stream);\n\t\tZVAL_UNDEF(&ch->handlers->read->stream);\n\t}\n\tch->handlers->read->fp = NULL;\n\tch->handlers->read->res = NULL;\n\tch->handlers->read->method  = PHP_CURL_DIRECT;\n\n\tif (!Z_ISUNDEF(ch->handlers->std_err)) {\n\t\tzval_ptr_dtor(&ch->handlers->std_err);\n\t\tZVAL_UNDEF(&ch->handlers->std_err);\n\t}\n\n\tif (ch->handlers->progress) {\n\t\tzval_ptr_dtor(&ch->handlers->progress->func_name);\n\t\tefree(ch->handlers->progress);\n\t\tch->handlers->progress = NULL;\n\t}\n\n#if LIBCURL_VERSION_NUM >= 0x071500 /* Available since 7.21.0 */\n\tif (ch->handlers->fnmatch) {\n\t\tzval_ptr_dtor(&ch->handlers->fnmatch->func_name);\n\t\tefree(ch->handlers->fnmatch);\n\t\tch->handlers->fnmatch = NULL;\n\t}\n#endif\n\n}\n/* }}} */\n\n/* {{{ proto void curl_reset(resource ch)\n   Reset all options of a libcurl session handle */\nPHP_FUNCTION(curl_reset)\n{\n\tzval       *zid;\n\tphp_curl   *ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"r\", &zid) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (ch->in_callback) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Attempt to reset cURL handle from a callback\");\n\t\treturn;\n\t}\n\n\tcurl_easy_reset(ch->cp);\n\t_php_curl_reset_handlers(ch);\n\t_php_curl_set_default_options(ch);\n}\n/* }}} */\n#endif\n\n#if LIBCURL_VERSION_NUM > 0x070f03 /* 7.15.4 */\n/* {{{ proto void curl_escape(resource ch, string str)\n   URL encodes the given string */\nPHP_FUNCTION(curl_escape)\n{\n\tchar       *str = NULL, *res = NULL;\n\tsize_t     str_len = 0;\n\tzval       *zid;\n\tphp_curl   *ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"rs\", &zid, &str, &str_len) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (ZEND_SIZE_T_INT_OVFL(str_len)) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif ((res = curl_easy_escape(ch->cp, str, str_len))) {\n\t\tRETVAL_STRING(res);\n\t\tcurl_free(res);\n\t} else {\n\t\tRETURN_FALSE;\n\t}\n}\n/* }}} */\n\n/* {{{ proto void curl_unescape(resource ch, string str)\n   URL decodes the given string */\nPHP_FUNCTION(curl_unescape)\n{\n\tchar       *str = NULL, *out = NULL;\n\tsize_t     str_len = 0;\n\tint        out_len;\n\tzval       *zid;\n\tphp_curl   *ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"rs\", &zid, &str, &str_len) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (ZEND_SIZE_T_INT_OVFL(str_len)) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif ((out = curl_easy_unescape(ch->cp, str, str_len, &out_len))) {\n\t\tRETVAL_STRINGL(out, out_len);\n\t\tcurl_free(out);\n\t} else {\n\t\tRETURN_FALSE;\n\t}\n}\n/* }}} */\n#endif\n\n#if LIBCURL_VERSION_NUM >= 0x071200 /* 7.18.0 */\n/* {{{ proto void curl_pause(resource ch, int bitmask)\n       pause and unpause a connection */\nPHP_FUNCTION(curl_pause)\n{\n\tzend_long       bitmask;\n\tzval       *zid;\n\tphp_curl   *ch;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"rl\", &zid, &bitmask) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((ch = (php_curl*)zend_fetch_resource(Z_RES_P(zid), le_curl_name, le_curl)) == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tRETURN_LONG(curl_easy_pause(ch->cp, bitmask));\n}\n/* }}} */\n#endif\n\n#endif /* HAVE_CURL */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: fdm=marker\n * vim: noet sw=4 ts=4\n */\n"], "filenames": ["ext/curl/interface.c"], "buggy_code_start_loc": [3520], "buggy_code_end_loc": [3560], "fixing_code_start_loc": [3520], "fixing_code_end_loc": [3564], "type": "CWE-119", "message": "ext/curl/interface.c in PHP 7.x before 7.0.10 does not work around a libcurl integer overflow, which allows remote attackers to cause a denial of service (allocation error and heap-based buffer overflow) or possibly have unspecified other impact via a long string that is mishandled in a curl_escape call.", "other": {"cve": {"id": "CVE-2016-7134", "sourceIdentifier": "cve@mitre.org", "published": "2016-09-12T01:59:12.803", "lastModified": "2017-08-16T01:29:11.320", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "ext/curl/interface.c in PHP 7.x before 7.0.10 does not work around a libcurl integer overflow, which allows remote attackers to cause a denial of service (allocation error and heap-based buffer overflow) or possibly have unspecified other impact via a long string that is mishandled in a curl_escape call."}, {"lang": "es", "value": "ext/curl/interface.c en PHP 7.x en versiones anteriores a 7.0.10 no evita un desbordamiento de entero en libcurl, lo que permite a atacantes remotos provocar una denegaci\u00f3n de servicio (error de localizaci\u00f3n y desbordamiento de b\u00fafer basado en memoria din\u00e1mica) o tener otro posible impacto no especificado a trav\u00e9s de una cadena larga que no es manejada correctamente en una llamada curl_escape."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-119"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.0:*:*:*:*:*:*:*", "matchCriteriaId": "DB6890AF-8A0A-46EE-AAD5-CF9AAE14A321"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.1:*:*:*:*:*:*:*", "matchCriteriaId": "6B90B947-7B54-47F3-9637-2F4AC44079EE"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.2:*:*:*:*:*:*:*", "matchCriteriaId": "35848414-BD5D-4164-84DC-61ABBB1C4152"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.3:*:*:*:*:*:*:*", "matchCriteriaId": "2B1F8402-8551-4F66-A9A7-81D472AB058E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.4:*:*:*:*:*:*:*", "matchCriteriaId": "7A773E8E-48CD-4D35-A0FD-629BD9334486"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.5:*:*:*:*:*:*:*", "matchCriteriaId": "FC492340-79AF-4676-A161-079A97EC6F0C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.6:*:*:*:*:*:*:*", "matchCriteriaId": "F1C2D8FE-C380-4B43-B634-A3DBA4700A71"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.7:*:*:*:*:*:*:*", "matchCriteriaId": "3EB58393-0C10-413C-8D95-6BAA8BC19A1B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.8:*:*:*:*:*:*:*", "matchCriteriaId": "751F51CA-9D88-4971-A6EC-8C0B72E8E22B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.9:*:*:*:*:*:*:*", "matchCriteriaId": "37B74118-8FC2-44CB-9673-A83DF777B2E6"}]}]}], "references": [{"url": "http://openwall.com/lists/oss-security/2016/09/02/9", "source": "cve@mitre.org", "tags": ["Mailing List"]}, {"url": "http://www.php.net/ChangeLog-7.php", "source": "cve@mitre.org", "tags": ["Release Notes"]}, {"url": "http://www.securityfocus.com/bid/92766", "source": "cve@mitre.org"}, {"url": "http://www.securitytracker.com/id/1036680", "source": "cve@mitre.org"}, {"url": "https://bugs.php.net/bug.php?id=72674", "source": "cve@mitre.org", "tags": ["Release Notes"]}, {"url": "https://github.com/php/php-src/commit/72dbb7f416160f490c4e9987040989a10ad431c7?w=1", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch"]}, {"url": "https://security.gentoo.org/glsa/201611-22", "source": "cve@mitre.org"}]}, "github_commit_url": "https://github.com/php/php-src/commit/72dbb7f416160f490c4e9987040989a10ad431c7?w=1"}}