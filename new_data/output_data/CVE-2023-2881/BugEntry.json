{"buggy_code": ["<?php\n\n/**\n * Pimcore\n *\n * This source file is available under two different licenses:\n * - GNU General Public License version 3 (GPLv3)\n * - Pimcore Commercial License (PCL)\n * Full copyright and license information is available in\n * LICENSE.md which is distributed with this source code.\n *\n *  @copyright  Copyright (c) Pimcore GmbH (http://www.pimcore.org)\n *  @license    http://www.pimcore.org/license     GPLv3 and PCL\n */\n\nnamespace CustomerManagementFrameworkBundle\\CustomerView;\n\nuse CustomerManagementFrameworkBundle\\Model\\CustomerInterface;\nuse CustomerManagementFrameworkBundle\\View\\Formatter\\ObjectWrapper;\nuse CustomerManagementFrameworkBundle\\View\\Formatter\\ViewFormatterInterface;\n\nclass DefaultCustomerView implements CustomerViewInterface\n{\n    /**\n     * @var ViewFormatterInterface\n     */\n    protected $viewFormatter;\n\n    /**\n     * @param ViewFormatterInterface $viewFormatter\n     */\n    public function __construct(ViewFormatterInterface $viewFormatter)\n    {\n        $this->viewFormatter = $viewFormatter;\n    }\n\n    /**\n     * @return ViewFormatterInterface\n     */\n    public function getViewFormatter()\n    {\n        return $this->viewFormatter;\n    }\n\n    /**\n     * @param CustomerInterface $customer\n     *\n     * @return string|null\n     */\n    public function getOverviewTemplate(CustomerInterface $customer)\n    {\n        return '@PimcoreCustomerManagementFramework/admin/customers/partials/list_row.html.twig';\n    }\n\n    /**\n     * @return string\n     */\n    public function getOverviewWrapperTemplate()\n    {\n        return '@PimcoreCustomerManagementFramework/admin/customers/partials/list_table.html.twig';\n    }\n\n    public function getFilterWrapperTemplate()\n    {\n        return '@PimcoreCustomerManagementFramework/admin/customers/partials/list_filter/filter_wrapper.html.twig';\n    }\n\n    public function getFieldsFilterTemplate()\n    {\n        return '@PimcoreCustomerManagementFramework/admin/customers/partials/list_filter/fields.html.twig';\n    }\n\n    public function getSegmentsFilterTemplate()\n    {\n        return '@PimcoreCustomerManagementFramework/admin/customers/partials/list_filter/segments.html.twig';\n    }\n\n    /**\n     * Determines if customer has a detail view or if pimcore object should be openend directly\n     *\n     * @param CustomerInterface $customer\n     *\n     * @return bool\n     */\n    public function hasDetailView(CustomerInterface $customer)\n    {\n        return true;\n    }\n\n    /**\n     * @param CustomerInterface $customer\n     *\n     * @return string|null\n     */\n    public function getDetailviewTemplate(CustomerInterface $customer)\n    {\n        return '@PimcoreCustomerManagementFramework/admin/customers/partials/detail.html.twig';\n    }\n\n    /**\n     * @param CustomerInterface $customer\n     *\n     * @return array\n     */\n    public function getDetailviewData(CustomerInterface $customer)\n    {\n        $definition = $customer->getClass();\n\n        $result = [];\n        $vf = $this->viewFormatter;\n\n        foreach ($definition->getFieldDefinitions() as $fd) {\n            if ($fd->getInvisible()) {\n                continue;\n            }\n\n            $getter = 'get'.ucfirst($fd->getName());\n            $value = $vf->formatValueByFieldDefinition($fd, $customer->$getter());\n\n            if (is_object($value)) {\n                $value = $this->wrapObject($value);\n            }\n\n            $result[$vf->getLabelByFieldDefinition($fd)] = $vf->formatValueByFieldDefinition($fd, $value);\n        }\n\n        return $result;\n    }\n\n    /**\n     * Wrap object in a object implementing a __toString method\n     *\n     * @param mixed $object\n     *\n     * @return ObjectWrapper\n     */\n    protected function wrapObject($object)\n    {\n        return new ObjectWrapper($object);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    public function translate($messageId, $parameters = [])\n    {\n        return $this->viewFormatter->translate($messageId, $parameters);\n    }\n}\n"], "fixing_code": ["<?php\n\n/**\n * Pimcore\n *\n * This source file is available under two different licenses:\n * - GNU General Public License version 3 (GPLv3)\n * - Pimcore Commercial License (PCL)\n * Full copyright and license information is available in\n * LICENSE.md which is distributed with this source code.\n *\n *  @copyright  Copyright (c) Pimcore GmbH (http://www.pimcore.org)\n *  @license    http://www.pimcore.org/license     GPLv3 and PCL\n */\n\nnamespace CustomerManagementFrameworkBundle\\CustomerView;\n\nuse CustomerManagementFrameworkBundle\\Model\\CustomerInterface;\nuse CustomerManagementFrameworkBundle\\View\\Formatter\\ObjectWrapper;\nuse CustomerManagementFrameworkBundle\\View\\Formatter\\ViewFormatterInterface;\n\nclass DefaultCustomerView implements CustomerViewInterface\n{\n    /**\n     * @var ViewFormatterInterface\n     */\n    protected $viewFormatter;\n\n    /**\n     * @param ViewFormatterInterface $viewFormatter\n     */\n    public function __construct(ViewFormatterInterface $viewFormatter)\n    {\n        $this->viewFormatter = $viewFormatter;\n    }\n\n    /**\n     * @return ViewFormatterInterface\n     */\n    public function getViewFormatter()\n    {\n        return $this->viewFormatter;\n    }\n\n    /**\n     * @param CustomerInterface $customer\n     *\n     * @return string|null\n     */\n    public function getOverviewTemplate(CustomerInterface $customer)\n    {\n        return '@PimcoreCustomerManagementFramework/admin/customers/partials/list_row.html.twig';\n    }\n\n    /**\n     * @return string\n     */\n    public function getOverviewWrapperTemplate()\n    {\n        return '@PimcoreCustomerManagementFramework/admin/customers/partials/list_table.html.twig';\n    }\n\n    public function getFilterWrapperTemplate()\n    {\n        return '@PimcoreCustomerManagementFramework/admin/customers/partials/list_filter/filter_wrapper.html.twig';\n    }\n\n    public function getFieldsFilterTemplate()\n    {\n        return '@PimcoreCustomerManagementFramework/admin/customers/partials/list_filter/fields.html.twig';\n    }\n\n    public function getSegmentsFilterTemplate()\n    {\n        return '@PimcoreCustomerManagementFramework/admin/customers/partials/list_filter/segments.html.twig';\n    }\n\n    /**\n     * Determines if customer has a detail view or if pimcore object should be openend directly\n     *\n     * @param CustomerInterface $customer\n     *\n     * @return bool\n     */\n    public function hasDetailView(CustomerInterface $customer)\n    {\n        return true;\n    }\n\n    /**\n     * @param CustomerInterface $customer\n     *\n     * @return string|null\n     */\n    public function getDetailviewTemplate(CustomerInterface $customer)\n    {\n        return '@PimcoreCustomerManagementFramework/admin/customers/partials/detail.html.twig';\n    }\n\n    /**\n     * @param CustomerInterface $customer\n     *\n     * @return array\n     */\n    public function getDetailviewData(CustomerInterface $customer)\n    {\n        $definition = $customer->getClass();\n\n        $result = [];\n        $vf = $this->viewFormatter;\n\n        foreach ($definition->getFieldDefinitions() as $fd) {\n            if ($fd->getInvisible() || $fd->getFieldtype() === 'password') {\n                continue;\n            }\n\n            $getter = 'get'.ucfirst($fd->getName());\n            $value = $vf->formatValueByFieldDefinition($fd, $customer->$getter());\n\n            if (is_object($value)) {\n                $value = $this->wrapObject($value);\n            }\n\n            $result[$vf->getLabelByFieldDefinition($fd)] = $vf->formatValueByFieldDefinition($fd, $value);\n        }\n\n        return $result;\n    }\n\n    /**\n     * Wrap object in a object implementing a __toString method\n     *\n     * @param mixed $object\n     *\n     * @return ObjectWrapper\n     */\n    protected function wrapObject($object)\n    {\n        return new ObjectWrapper($object);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    public function translate($messageId, $parameters = [])\n    {\n        return $this->viewFormatter->translate($messageId, $parameters);\n    }\n}\n"], "filenames": ["src/CustomerView/DefaultCustomerView.php"], "buggy_code_start_loc": [113], "buggy_code_end_loc": [114], "fixing_code_start_loc": [113], "fixing_code_end_loc": [114], "type": "CWE-522", "message": "Storing Passwords in a Recoverable Format in GitHub repository pimcore/customer-data-framework prior to 3.3.10.", "other": {"cve": {"id": "CVE-2023-2881", "sourceIdentifier": "security@huntr.dev", "published": "2023-05-25T09:15:11.943", "lastModified": "2023-05-31T19:21:59.860", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Storing Passwords in a Recoverable Format in GitHub repository pimcore/customer-data-framework prior to 3.3.10."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.2, "impactScore": 3.6}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:L/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "LOW", "availabilityImpact": "HIGH", "baseScore": 6.7, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.2, "impactScore": 5.5}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-522"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-257"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:pimcore:customer-data-framework:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.3.10", "matchCriteriaId": "EF09594A-1AB6-48B9-B217-935B045A57C3"}]}]}], "references": [{"url": "https://github.com/pimcore/customer-data-framework/commit/d1d58c10313f080737dc1e71fab3beb12488a1e6", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/db6c32f4-742e-4262-8fd5-cefd0f133416", "source": "security@huntr.dev", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/pimcore/customer-data-framework/commit/d1d58c10313f080737dc1e71fab3beb12488a1e6"}}