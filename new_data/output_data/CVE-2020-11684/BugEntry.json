{"buggy_code": ["/* ----------------------------------------------------------------------------\n *         ATMEL Microcontroller Software Support\n * ----------------------------------------------------------------------------\n * Copyright (c) 2015, Atmel Corporation\n *\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the disclaimer below.\n *\n * Atmel's name may not be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL \"AS IS\" AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE\n * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n#include \"common.h\"\n#include \"secure.h\"\n#include \"aes.h\"\n#include \"debug.h\"\n#include \"string.h\"\n#include \"autoconf.h\"\n\n\nstatic inline void init_keys(at91_aes_key_size_t *key_size,\n\t\t\t     unsigned int *cipher_key,\n\t\t\t     unsigned int *cmac_key,\n\t\t\t     unsigned int *iv)\n{\n#if defined(CONFIG_AES_KEY_SIZE_128)\n\t*key_size = AT91_AES_KEY_SIZE_128;\n#elif defined(CONFIG_AES_KEY_SIZE_192)\n\t*key_size = AT91_AES_KEY_SIZE_192;\n#elif defined(CONFIG_AES_KEY_SIZE_256)\n\t*key_size = AT91_AES_KEY_SIZE_256;\n#else\n#error \"bad AES key size\"\n#endif\n\n\tiv[0]\t\t= CONFIG_AES_IV_WORD0;\n\tiv[1]\t\t= CONFIG_AES_IV_WORD1;\n\tiv[2]\t\t= CONFIG_AES_IV_WORD2;\n\tiv[3]\t\t= CONFIG_AES_IV_WORD3;\n\n\tcipher_key[0]\t= CONFIG_AES_CIPHER_KEY_WORD0;\n\tcmac_key[0]\t= CONFIG_AES_CMAC_KEY_WORD0;\n\tcipher_key[1]\t= CONFIG_AES_CIPHER_KEY_WORD1;\n\tcmac_key[1]\t= CONFIG_AES_CMAC_KEY_WORD1;\n\tcipher_key[2]\t= CONFIG_AES_CIPHER_KEY_WORD2;\n\tcmac_key[2]\t= CONFIG_AES_CMAC_KEY_WORD2;\n\tcipher_key[3]\t= CONFIG_AES_CIPHER_KEY_WORD3;\n\tcmac_key[3]\t= CONFIG_AES_CMAC_KEY_WORD3;\n\n#if defined(CONFIG_AES_KEY_SIZE_192) || defined(CONFIG_AES_KEY_SIZE_256)\n\tcipher_key[4]\t= CONFIG_AES_CIPHER_KEY_WORD4;\n\tcmac_key[4]\t= CONFIG_AES_CMAC_KEY_WORD4;\n\tcipher_key[5]\t= CONFIG_AES_CIPHER_KEY_WORD5;\n\tcmac_key[5]\t= CONFIG_AES_CMAC_KEY_WORD5;\n#endif\n\n#if defined(CONFIG_AES_KEY_SIZE_256)\n\tcipher_key[6]\t= CONFIG_AES_CIPHER_KEY_WORD6;\n\tcmac_key[6]\t= CONFIG_AES_CMAC_KEY_WORD6;\n\tcipher_key[7]\t= CONFIG_AES_CIPHER_KEY_WORD7;\n\tcmac_key[7]\t= CONFIG_AES_CMAC_KEY_WORD7;\n#endif\n}\n\nint secure_decrypt(void *data, unsigned int data_length, int is_signed)\n{\n\tat91_aes_key_size_t key_size;\n\tunsigned int cmac_key[8], cipher_key[8];\n\tunsigned int iv[AT91_AES_IV_SIZE_WORD];\n\tunsigned int computed_cmac[AT91_AES_BLOCK_SIZE_WORD];\n\tunsigned int fixed_length;\n\tconst unsigned int *cmac;\n\tint rc = -1;\n\n\t/* Init keys */\n\tinit_keys(&key_size, cipher_key, cmac_key, iv);\n\n\t/* Init periph */\n\tat91_aes_init();\n\n\t/* Check signature if required */\n\tif (is_signed) {\n\t\t/* Compute the CMAC */\n\t\tif (at91_aes_cmac(data_length, data, computed_cmac,\n\t\t\t\t  key_size, cmac_key))\n\t\t\tgoto exit;\n\n\t\t/* Check the CMAC */\n\t\tfixed_length = at91_aes_roundup(data_length);\n\t\tcmac = (const unsigned int *)((char *)data + fixed_length);\n\t\tif (!consttime_memequal(cmac, computed_cmac, AT91_AES_BLOCK_SIZE_BYTE))\n\t\t\tgoto exit;\n\t}\n\n\t/* Decrypt the whole file */\n\tif (at91_aes_cbc(data_length, data, data, 0,\n\t\t\t key_size, cipher_key, iv))\n\t\tgoto exit;\n\n\trc = 0;\nexit:\n\t/* Reset periph */\n\tat91_aes_cleanup();\n\n\t/* Reset keys */\n\tmemset(cmac_key, 0, sizeof(cmac_key));\n\tmemset(cipher_key, 0, sizeof(cipher_key));\n\tmemset(iv, 0, sizeof(iv));\n\n\treturn rc;\n}\n\nint secure_check(void *data)\n{\n\tconst at91_secure_header_t *header;\n\tvoid *file;\n\n\tif (secure_decrypt(data, sizeof(*header), 0))\n\t\treturn -1;\n\n\theader = (const at91_secure_header_t *)data;\n\tif (header->magic != AT91_SECURE_MAGIC)\n\t\treturn -1;\n\n\tfile = (unsigned char *)data + sizeof(*header);\n\treturn secure_decrypt(file, header->file_size, 1);\n}\n", "/* ----------------------------------------------------------------------------\n *         ATMEL Microcontroller Software Support\n * ----------------------------------------------------------------------------\n * Copyright (c) 2015, Atmel Corporation\n *\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the disclaimer below.\n *\n * Atmel's name may not be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL \"AS IS\" AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE\n * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n#ifndef __SECURE_H__\n#define __SECURE_H__\n\nstruct image_info;\n\n\n#define AT91_SECURE_MAGIC\t0x0000aa55\n\n/* the size of this structure MUST be equal to the size of an AES block */\ntypedef struct at91_secure_header {\n\tunsigned int\t\tmagic;\n\tunsigned int\t\tfile_size;\n\tunsigned int\t\treserved[2];\n} at91_secure_header_t;\n\n\nint secure_decrypt(void *data, unsigned int data_length, int is_signed);\nint secure_check(void *data);\n\n#endif /* #ifdef __SECURE_H__ */\n"], "fixing_code": ["/* ----------------------------------------------------------------------------\n *         ATMEL Microcontroller Software Support\n * ----------------------------------------------------------------------------\n * Copyright (c) 2015, Atmel Corporation\n *\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the disclaimer below.\n *\n * Atmel's name may not be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL \"AS IS\" AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE\n * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n#include \"common.h\"\n#include \"secure.h\"\n#include \"aes.h\"\n#include \"debug.h\"\n#include \"string.h\"\n#include \"autoconf.h\"\n\nstatic unsigned int cipher_key[8] = {\n\tCONFIG_AES_CIPHER_KEY_WORD0,\n\tCONFIG_AES_CIPHER_KEY_WORD1,\n\tCONFIG_AES_CIPHER_KEY_WORD2,\n\tCONFIG_AES_CIPHER_KEY_WORD3,\n#if defined(CONFIG_AES_KEY_SIZE_192) || defined(CONFIG_AES_KEY_SIZE_256)\n\tCONFIG_AES_CIPHER_KEY_WORD4,\n\tCONFIG_AES_CIPHER_KEY_WORD5,\n#endif\n#if defined(CONFIG_AES_KEY_SIZE_256)\n\tCONFIG_AES_CIPHER_KEY_WORD6,\n\tCONFIG_AES_CIPHER_KEY_WORD7,\n#endif\n};\n\nstatic unsigned int cmac_key[8] = {\n\tCONFIG_AES_CMAC_KEY_WORD0,\n\tCONFIG_AES_CMAC_KEY_WORD1,\n\tCONFIG_AES_CMAC_KEY_WORD2,\n\tCONFIG_AES_CMAC_KEY_WORD3,\n#if defined(CONFIG_AES_KEY_SIZE_192) || defined(CONFIG_AES_KEY_SIZE_256)\n\tCONFIG_AES_CMAC_KEY_WORD4,\n\tCONFIG_AES_CMAC_KEY_WORD5,\n#endif\n#if defined(CONFIG_AES_KEY_SIZE_256)\n\tCONFIG_AES_CMAC_KEY_WORD6,\n\tCONFIG_AES_CMAC_KEY_WORD7,\n#endif\n};\n\nstatic unsigned int iv[AT91_AES_IV_SIZE_WORD] = {\n\tCONFIG_AES_IV_WORD0,\n\tCONFIG_AES_IV_WORD1,\n\tCONFIG_AES_IV_WORD2,\n\tCONFIG_AES_IV_WORD3,\n};\n\nstatic int secure_decrypt(void *data, unsigned int data_length, int is_signed)\n{\n\tat91_aes_key_size_t key_size;\n\tunsigned int computed_cmac[AT91_AES_BLOCK_SIZE_WORD];\n\tunsigned int fixed_length;\n\tconst unsigned int *cmac;\n\tint rc = -1;\n\n#if defined(CONFIG_AES_KEY_SIZE_128)\n\tkey_size = AT91_AES_KEY_SIZE_128;\n#elif defined(CONFIG_AES_KEY_SIZE_192)\n\tkey_size = AT91_AES_KEY_SIZE_192;\n#elif defined(CONFIG_AES_KEY_SIZE_256)\n\tkey_size = AT91_AES_KEY_SIZE_256;\n#else\n#error \"bad AES key size\"\n#endif\n\n\t/* Init periph */\n\tat91_aes_init();\n\n\t/* Check signature if required */\n\tif (is_signed) {\n\t\t/* Compute the CMAC */\n\t\tif (at91_aes_cmac(data_length, data, computed_cmac,\n\t\t\t\t  key_size, cmac_key))\n\t\t\tgoto exit;\n\n\t\t/* Check the CMAC */\n\t\tfixed_length = at91_aes_roundup(data_length);\n\t\tcmac = (const unsigned int *)((char *)data + fixed_length);\n\t\tif (!consttime_memequal(cmac, computed_cmac, AT91_AES_BLOCK_SIZE_BYTE))\n\t\t\tgoto exit;\n\t}\n\n\t/* Decrypt the whole file */\n\tif (at91_aes_cbc(data_length, data, data, 0,\n\t\t\t key_size, cipher_key, iv))\n\t\tgoto exit;\n\n\trc = 0;\nexit:\n\t/* Reset periph */\n\tat91_aes_cleanup();\n\n\treturn rc;\n}\n\nstatic void wipe_keys()\n{\n\t/* Reset keys */\n\tmemset(cmac_key, 0, sizeof(cmac_key));\n\tmemset(cipher_key, 0, sizeof(cipher_key));\n\tmemset(iv, 0, sizeof(iv));\n}\n\nint secure_check(void *data)\n{\n\tconst at91_secure_header_t *header;\n\tvoid *file;\n\tint ret = -1;\n\n\tif (secure_decrypt(data, sizeof(*header), 0))\n\t\tgoto secure_wipe_keys;\n\n\theader = (const at91_secure_header_t *)data;\n\tif (header->magic != AT91_SECURE_MAGIC)\n\t\tgoto secure_wipe_keys;\n\n\tfile = (unsigned char *)data + sizeof(*header);\n\tret = secure_decrypt(file, header->file_size, 1);\n\nsecure_wipe_keys:\n\twipe_keys();\n\treturn ret;\n}\n", "/* ----------------------------------------------------------------------------\n *         ATMEL Microcontroller Software Support\n * ----------------------------------------------------------------------------\n * Copyright (c) 2015, Atmel Corporation\n *\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the disclaimer below.\n *\n * Atmel's name may not be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL \"AS IS\" AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE\n * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n#ifndef __SECURE_H__\n#define __SECURE_H__\n\nstruct image_info;\n\n\n#define AT91_SECURE_MAGIC\t0x0000aa55\n\n/* the size of this structure MUST be equal to the size of an AES block */\ntypedef struct at91_secure_header {\n\tunsigned int\t\tmagic;\n\tunsigned int\t\tfile_size;\n\tunsigned int\t\treserved[2];\n} at91_secure_header_t;\n\nint secure_check(void *data);\n\n#endif /* #ifdef __SECURE_H__ */\n"], "filenames": ["driver/secure.c", "include/secure.h"], "buggy_code_start_loc": [34, 43], "buggy_code_end_loc": [142, 45], "fixing_code_start_loc": [35, 42], "fixing_code_end_loc": [147, 42], "type": "CWE-212", "message": "AT91bootstrap before 3.9.2 does not properly wipe encryption and authentication keys from memory before passing control to a less privileged software component. This can be exploited to disclose these keys and subsequently encrypt and sign the next boot stage (such as the bootloader).", "other": {"cve": {"id": "CVE-2020-11684", "sourceIdentifier": "cve@mitre.org", "published": "2020-09-14T14:15:10.680", "lastModified": "2021-07-21T11:39:23.747", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "AT91bootstrap before 3.9.2 does not properly wipe encryption and authentication keys from memory before passing control to a less privileged software component. This can be exploited to disclose these keys and subsequently encrypt and sign the next boot stage (such as the bootloader)."}, {"lang": "es", "value": "AT91bootstrap versiones anteriores a 3.9.2, no limpia apropiadamente las claves de cifrado y autenticaci\u00f3n de la memoria antes de pasar el control a un componente de software menos privilegiado.&#xa0;Esto puede ser explotado para revelar estas claves y posteriormente cifrar y firmar la siguiente etapa de arranque (tal y como el cargador de arranque)"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 9.1, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.2}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 6.4}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-212"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:linux4sam:at91bootstrap:*:*:*:*:*:*:*:*", "versionStartIncluding": "3.7.2", "versionEndExcluding": "3.9.2", "matchCriteriaId": "DD93186D-51E5-4F8C-B833-D1931B06F370"}]}]}], "references": [{"url": "https://github.com/linux4sam/at91bootstrap/commit/45419497309ffbf27c17ea7938499aca99168927", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://labs.f-secure.com/advisories/microchip-at91bootstrap/", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/linux4sam/at91bootstrap/commit/45419497309ffbf27c17ea7938499aca99168927"}}