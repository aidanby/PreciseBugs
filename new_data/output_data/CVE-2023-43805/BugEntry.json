{"buggy_code": ["/**\n * Web Client Server\n */\n\nimport { dirname } from 'node:path';\nimport { fileURLToPath } from 'node:url';\nimport { PathOrFileDescriptor, readFileSync } from 'node:fs';\nimport ms from 'ms';\nimport Koa from 'koa';\nimport Router from '@koa/router';\nimport send from 'koa-send';\nimport favicon from 'koa-favicon';\nimport views from 'koa-views';\nimport sharp from 'sharp';\nimport { createBullBoard } from '@bull-board/api';\nimport { BullAdapter } from '@bull-board/api/bullAdapter.js';\nimport { KoaAdapter } from '@bull-board/koa';\n\nimport { In, IsNull } from 'typeorm';\nimport { fetchMeta } from '@/misc/fetch-meta.js';\nimport config from '@/config/index.js';\nimport { Users, Notes, UserProfiles, Pages, Channels, Clips, GalleryPosts } from '@/models/index.js';\nimport * as Acct from '@/misc/acct.js';\nimport { getNoteSummary } from '@/misc/get-note-summary.js';\nimport { queues } from '@/queue/queues.js';\nimport { genOpenapiSpec } from '../api/openapi/gen-spec.js';\nimport { urlPreviewHandler } from './url-preview.js';\nimport { manifestHandler } from './manifest.js';\nimport packFeed from './feed.js';\n\nconst _filename = fileURLToPath(import.meta.url);\nconst _dirname = dirname(_filename);\n\nconst staticAssets = `${_dirname}/../../../assets/`;\nconst clientAssets = `${_dirname}/../../../../client/assets/`;\nconst assets = `${_dirname}/../../../../../built/_client_dist_/`;\nconst swAssets = `${_dirname}/../../../../../built/_sw_dist_/`;\n\n// Init app\nconst app = new Koa();\n\n//#region Bull Dashboard\nconst bullBoardPath = '/queue';\n\n// Authenticate\napp.use(async (ctx, next) => {\n\tif (ctx.path === bullBoardPath || ctx.path.startsWith(bullBoardPath + '/')) {\n\t\tconst token = ctx.cookies.get('token');\n\t\tif (token == null) {\n\t\t\tctx.status = 401;\n\t\t\treturn;\n\t\t}\n\t\tconst user = await Users.findOneBy({ token });\n\t\tif (user == null || !(user.isAdmin || user.isModerator)) {\n\t\t\tctx.status = 403;\n\t\t\treturn;\n\t\t}\n\t}\n\tawait next();\n});\n\nconst serverAdapter = new KoaAdapter();\n\ncreateBullBoard({\n\tqueues: queues.map(q => new BullAdapter(q)),\n\tserverAdapter,\n});\n\nserverAdapter.setBasePath(bullBoardPath);\napp.use(serverAdapter.registerPlugin());\n//#endregion\n\n// Init renderer\napp.use(views(_dirname + '/views', {\n\textension: 'pug',\n\toptions: {\n\t\tversion: config.version,\n\t\tgetClientEntry: () => process.env.NODE_ENV === 'production' ?\n\t\t\tconfig.clientEntry :\n\t\t\tJSON.parse(readFileSync(`${_dirname}/../../../../../built/_client_dist_/manifest.json`, 'utf-8'))['src/init.ts'],\n\t\tconfig,\n\t},\n}));\n\n// Serve favicon\napp.use(favicon(`${_dirname}/../../../assets/favicon.ico`));\n\n// Common request handler\napp.use(async (ctx, next) => {\n\t// IFrame\u306e\u4e2d\u306b\u5165\u308c\u3089\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\n\tctx.set('X-Frame-Options', 'DENY');\n\tawait next();\n});\n\n// Init router\nconst router = new Router();\n\n//#region static assets\n\nrouter.get('/static-assets/(.*)', async ctx => {\n\tawait send(ctx as any, ctx.path.replace('/static-assets/', ''), {\n\t\troot: staticAssets,\n\t\tmaxage: ms('7 days'),\n\t});\n});\n\nrouter.get('/client-assets/(.*)', async ctx => {\n\tawait send(ctx as any, ctx.path.replace('/client-assets/', ''), {\n\t\troot: clientAssets,\n\t\tmaxage: ms('7 days'),\n\t});\n});\n\nrouter.get('/assets/(.*)', async ctx => {\n\tawait send(ctx as any, ctx.path.replace('/assets/', ''), {\n\t\troot: assets,\n\t\tmaxage: ms('7 days'),\n\t});\n});\n\n// Apple touch icon\nrouter.get('/apple-touch-icon.png', async ctx => {\n\tawait send(ctx as any, '/apple-touch-icon.png', {\n\t\troot: staticAssets,\n\t});\n});\n\nrouter.get('/twemoji/(.*)', async ctx => {\n\tconst path = ctx.path.replace('/twemoji/', '');\n\n\tif (!path.match(/^[0-9a-f-]+\\.svg$/)) {\n\t\tctx.status = 404;\n\t\treturn;\n\t}\n\n\tctx.set('Content-Security-Policy', 'default-src \\'none\\'; style-src \\'unsafe-inline\\'');\n\n\tawait send(ctx as any, path, {\n\t\troot: `${_dirname}/../../../node_modules/@discordapp/twemoji/dist/svg/`,\n\t\tmaxage: ms('30 days'),\n\t});\n});\n\nrouter.get('/twemoji-badge/(.*)', async ctx => {\n\tconst path = ctx.path.replace('/twemoji-badge/', '');\n\n\tif (!path.match(/^[0-9a-f-]+\\.png$/)) {\n\t\tctx.status = 404;\n\t\treturn;\n\t}\n\n\tconst mask = await sharp(\n\t\t`${_dirname}/../../../node_modules/@discordapp/twemoji/dist/svg/${path.replace('.png', '')}.svg`,\n\t\t{ density: 1000 },\n\t)\n\t\t.resize(488, 488)\n\t\t.greyscale()\n\t\t.normalise()\n\t\t.linear(1.75, -(128 * 1.75) + 128) // 1.75x contrast\n\t\t.flatten({ background: '#000' })\n\t\t.extend({\n\t\t\ttop: 12,\n\t\t\tbottom: 12,\n\t\t\tleft: 12,\n\t\t\tright: 12,\n\t\t\tbackground: '#000',\n\t\t})\n\t\t.toColorspace('b-w')\n\t\t.png()\n\t\t.toBuffer();\n\n\tconst buffer = await sharp({\n\t\tcreate: { width: 512, height: 512, channels: 4, background: { r: 0, g: 0, b: 0, alpha: 0 } },\n\t})\n\t\t.pipelineColorspace('b-w')\n\t\t.boolean(mask, 'eor')\n\t\t.resize(96, 96)\n\t\t.png()\n\t\t.toBuffer();\n\n\tctx.set('Content-Security-Policy', 'default-src \\'none\\'; style-src \\'unsafe-inline\\'');\n\tctx.set('Cache-Control', 'max-age=2592000');\n\tctx.set('Content-Type', 'image/png');\n\tctx.body = buffer;\n});\n\n// ServiceWorker\nrouter.get(`/sw.js`, async ctx => {\n\tawait send(ctx as any, `/sw.js`, {\n\t\troot: swAssets,\n\t\tmaxage: ms('10 minutes'),\n\t});\n});\n\n// Manifest\nrouter.get('/manifest.json', manifestHandler);\n\nrouter.get('/robots.txt', async ctx => {\n\tawait send(ctx as any, '/robots.txt', {\n\t\troot: staticAssets,\n\t});\n});\n\n//#endregion\n\n// Docs\nrouter.get('/api-doc', async ctx => {\n\tawait send(ctx as any, '/redoc.html', {\n\t\troot: staticAssets,\n\t});\n});\n\n// URL preview endpoint\nrouter.get('/url', urlPreviewHandler);\n\nrouter.get('/api.json', async ctx => {\n\tctx.body = genOpenapiSpec();\n});\n\nconst getFeed = async (acct: string) => {\n\tconst { username, host } = Acct.parse(acct);\n\tconst user = await Users.findOneBy({\n\t\tusernameLower: username.toLowerCase(),\n\t\thost: host ?? IsNull(),\n\t\tisSuspended: false,\n\t});\n\n\treturn user && await packFeed(user);\n};\n\n// Atom\nrouter.get('/@:user.atom', async ctx => {\n\tconst feed = await getFeed(ctx.params.user);\n\n\tif (feed) {\n\t\tctx.set('Content-Type', 'application/atom+xml; charset=utf-8');\n\t\tctx.body = feed.atom1();\n\t} else {\n\t\tctx.status = 404;\n\t}\n});\n\n// RSS\nrouter.get('/@:user.rss', async ctx => {\n\tconst feed = await getFeed(ctx.params.user);\n\n\tif (feed) {\n\t\tctx.set('Content-Type', 'application/rss+xml; charset=utf-8');\n\t\tctx.body = feed.rss2();\n\t} else {\n\t\tctx.status = 404;\n\t}\n});\n\n// JSON\nrouter.get('/@:user.json', async ctx => {\n\tconst feed = await getFeed(ctx.params.user);\n\n\tif (feed) {\n\t\tctx.set('Content-Type', 'application/json; charset=utf-8');\n\t\tctx.body = feed.json1();\n\t} else {\n\t\tctx.status = 404;\n\t}\n});\n\n//#region SSR (for crawlers)\n// User\nrouter.get(['/@:user', '/@:user/:sub'], async (ctx, next) => {\n\tconst { username, host } = Acct.parse(ctx.params.user);\n\tconst user = await Users.findOneBy({\n\t\tusernameLower: username.toLowerCase(),\n\t\thost: host ?? IsNull(),\n\t\tisSuspended: false,\n\t});\n\n\tif (user != null) {\n\t\tconst profile = await UserProfiles.findOneByOrFail({ userId: user.id });\n\t\tconst meta = await fetchMeta();\n\t\tconst me = profile.fields\n\t\t\t? profile.fields\n\t\t\t\t.filter(filed => filed.value != null && filed.value.match(/^https?:/))\n\t\t\t\t.map(field => field.value)\n\t\t\t: [];\n\n\t\tawait ctx.render('user', {\n\t\t\tuser, profile, me,\n\t\t\tavatarUrl: await Users.getAvatarUrl(user),\n\t\t\tsub: ctx.params.sub,\n\t\t\tinstanceName: meta.name || 'Misskey',\n\t\t\ticon: meta.iconUrl,\n\t\t\tthemeColor: meta.themeColor,\n\t\t});\n\t\tctx.set('Cache-Control', 'public, max-age=15');\n\t} else {\n\t\t// \u30ea\u30e2\u30fc\u30c8\u30e6\u30fc\u30b6\u30fc\u306a\u306e\u3067\n\t\t// \u30e2\u30c7\u30ec\u30fc\u30bf\u304cAPI\u7d4c\u7531\u3067\u53c2\u7167\u53ef\u80fd\u306b\u3059\u308b\u305f\u3081\u306b404\u306b\u306f\u3057\u306a\u3044\n\t\tawait next();\n\t}\n});\n\nrouter.get('/users/:user', async ctx => {\n\tconst user = await Users.findOneBy({\n\t\tid: ctx.params.user,\n\t\thost: IsNull(),\n\t\tisSuspended: false,\n\t});\n\n\tif (user == null) {\n\t\tctx.status = 404;\n\t\treturn;\n\t}\n\n\tctx.redirect(`/@${user.username}${ user.host == null ? '' : '@' + user.host}`);\n});\n\n// Note\nrouter.get('/notes/:note', async (ctx, next) => {\n\tconst note = await Notes.findOneBy({\n\t\tid: ctx.params.note,\n\t\tvisibility: In(['public', 'home']),\n\t});\n\n\tif (note) {\n\t\tconst _note = await Notes.pack(note);\n\t\tconst profile = await UserProfiles.findOneByOrFail({ userId: note.userId });\n\t\tconst meta = await fetchMeta();\n\t\tawait ctx.render('note', {\n\t\t\tnote: _note,\n\t\t\tprofile,\n\t\t\tavatarUrl: await Users.getAvatarUrl(await Users.findOneByOrFail({ id: note.userId })),\n\t\t\t// TODO: Let locale changeable by instance setting\n\t\t\tsummary: getNoteSummary(_note),\n\t\t\tinstanceName: meta.name || 'Misskey',\n\t\t\ticon: meta.iconUrl,\n\t\t\tthemeColor: meta.themeColor,\n\t\t});\n\n\t\tctx.set('Cache-Control', 'public, max-age=15');\n\n\t\treturn;\n\t}\n\n\tawait next();\n});\n\n// Page\nrouter.get('/@:user/pages/:page', async (ctx, next) => {\n\tconst { username, host } = Acct.parse(ctx.params.user);\n\tconst user = await Users.findOneBy({\n\t\tusernameLower: username.toLowerCase(),\n\t\thost: host ?? IsNull(),\n\t});\n\n\tif (user == null) return;\n\n\tconst page = await Pages.findOneBy({\n\t\tname: ctx.params.page,\n\t\tuserId: user.id,\n\t});\n\n\tif (page) {\n\t\tconst _page = await Pages.pack(page);\n\t\tconst profile = await UserProfiles.findOneByOrFail({ userId: page.userId });\n\t\tconst meta = await fetchMeta();\n\t\tawait ctx.render('page', {\n\t\t\tpage: _page,\n\t\t\tprofile,\n\t\t\tavatarUrl: await Users.getAvatarUrl(await Users.findOneByOrFail({ id: page.userId })),\n\t\t\tinstanceName: meta.name || 'Misskey',\n\t\t\ticon: meta.iconUrl,\n\t\t\tthemeColor: meta.themeColor,\n\t\t});\n\n\t\tif (['public'].includes(page.visibility)) {\n\t\t\tctx.set('Cache-Control', 'public, max-age=15');\n\t\t} else {\n\t\t\tctx.set('Cache-Control', 'private, max-age=0, must-revalidate');\n\t\t}\n\n\t\treturn;\n\t}\n\n\tawait next();\n});\n\n// Clip\n// TODO: \u975epublic\u306aclip\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\nrouter.get('/clips/:clip', async (ctx, next) => {\n\tconst clip = await Clips.findOneBy({\n\t\tid: ctx.params.clip,\n\t});\n\n\tif (clip) {\n\t\tconst _clip = await Clips.pack(clip);\n\t\tconst profile = await UserProfiles.findOneByOrFail({ userId: clip.userId });\n\t\tconst meta = await fetchMeta();\n\t\tawait ctx.render('clip', {\n\t\t\tclip: _clip,\n\t\t\tprofile,\n\t\t\tavatarUrl: await Users.getAvatarUrl(await Users.findOneByOrFail({ id: clip.userId })),\n\t\t\tinstanceName: meta.name || 'Misskey',\n\t\t\ticon: meta.iconUrl,\n\t\t\tthemeColor: meta.themeColor,\n\t\t});\n\n\t\tctx.set('Cache-Control', 'public, max-age=15');\n\n\t\treturn;\n\t}\n\n\tawait next();\n});\n\n// Gallery post\nrouter.get('/gallery/:post', async (ctx, next) => {\n\tconst post = await GalleryPosts.findOneBy({ id: ctx.params.post });\n\n\tif (post) {\n\t\tconst _post = await GalleryPosts.pack(post);\n\t\tconst profile = await UserProfiles.findOneByOrFail({ userId: post.userId });\n\t\tconst meta = await fetchMeta();\n\t\tawait ctx.render('gallery-post', {\n\t\t\tpost: _post,\n\t\t\tprofile,\n\t\t\tavatarUrl: await Users.getAvatarUrl(await Users.findOneByOrFail({ id: post.userId })),\n\t\t\tinstanceName: meta.name || 'Misskey',\n\t\t\ticon: meta.iconUrl,\n\t\t\tthemeColor: meta.themeColor,\n\t\t});\n\n\t\tctx.set('Cache-Control', 'public, max-age=15');\n\n\t\treturn;\n\t}\n\n\tawait next();\n});\n\n// Channel\nrouter.get('/channels/:channel', async (ctx, next) => {\n\tconst channel = await Channels.findOneBy({\n\t\tid: ctx.params.channel,\n\t});\n\n\tif (channel) {\n\t\tconst _channel = await Channels.pack(channel);\n\t\tconst meta = await fetchMeta();\n\t\tawait ctx.render('channel', {\n\t\t\tchannel: _channel,\n\t\t\tinstanceName: meta.name || 'Misskey',\n\t\t\ticon: meta.iconUrl,\n\t\t\tthemeColor: meta.themeColor,\n\t\t});\n\n\t\tctx.set('Cache-Control', 'public, max-age=15');\n\n\t\treturn;\n\t}\n\n\tawait next();\n});\n//#endregion\n\nrouter.get('/_info_card_', async ctx => {\n\tconst meta = await fetchMeta(true);\n\n\tctx.remove('X-Frame-Options');\n\n\tawait ctx.render('info-card', {\n\t\tversion: config.version,\n\t\thost: config.host,\n\t\tmeta: meta,\n\t\toriginalUsersCount: await Users.countBy({ host: IsNull() }),\n\t\toriginalNotesCount: await Notes.countBy({ userHost: IsNull() }),\n\t});\n});\n\nrouter.get('/bios', async ctx => {\n\tawait ctx.render('bios', {\n\t\tversion: config.version,\n\t});\n});\n\nrouter.get('/cli', async ctx => {\n\tawait ctx.render('cli', {\n\t\tversion: config.version,\n\t});\n});\n\nconst override = (source: string, target: string, depth = 0) =>\n\t[, ...target.split('/').filter(x => x), ...source.split('/').filter(x => x).splice(depth)].join('/');\n\nrouter.get('/flush', async ctx => {\n\tawait ctx.render('flush');\n});\n\n// streaming\u306b\u975eWebSocket\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u6765\u305f\u5834\u5408\u306bbase html\u3092\u30ad\u30e3\u30b7\u30e5\u4ed8\u304d\u3067\u8fd4\u3059\u3068\u3001Proxy\u7b49\u3067\u305d\u306e\u30d1\u30b9\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u304a\u304b\u3057\u304f\u306a\u308b\nrouter.get('/streaming', async ctx => {\n\tctx.status = 503;\n\tctx.set('Cache-Control', 'private, max-age=0');\n});\n\n// Render base html for all requests\nrouter.get('(.*)', async ctx => {\n\tconst meta = await fetchMeta();\n\tawait ctx.render('base', {\n\t\timg: meta.bannerUrl,\n\t\ttitle: meta.name || 'Misskey',\n\t\tinstanceName: meta.name || 'Misskey',\n\t\tdesc: meta.description,\n\t\ticon: meta.iconUrl,\n\t\tthemeColor: meta.themeColor,\n\t});\n\tctx.set('Cache-Control', 'public, max-age=15');\n});\n\n// Register router\napp.use(router.routes());\n\nexport default app;\n"], "fixing_code": ["/**\n * Web Client Server\n */\n\nimport { dirname } from 'node:path';\nimport { fileURLToPath } from 'node:url';\nimport { PathOrFileDescriptor, readFileSync } from 'node:fs';\nimport ms from 'ms';\nimport Koa from 'koa';\nimport Router from '@koa/router';\nimport send from 'koa-send';\nimport favicon from 'koa-favicon';\nimport views from 'koa-views';\nimport sharp from 'sharp';\nimport { createBullBoard } from '@bull-board/api';\nimport { BullAdapter } from '@bull-board/api/bullAdapter.js';\nimport { KoaAdapter } from '@bull-board/koa';\n\nimport { In, IsNull } from 'typeorm';\nimport { fetchMeta } from '@/misc/fetch-meta.js';\nimport config from '@/config/index.js';\nimport { Users, Notes, UserProfiles, Pages, Channels, Clips, GalleryPosts } from '@/models/index.js';\nimport * as Acct from '@/misc/acct.js';\nimport { getNoteSummary } from '@/misc/get-note-summary.js';\nimport { queues } from '@/queue/queues.js';\nimport { genOpenapiSpec } from '../api/openapi/gen-spec.js';\nimport { urlPreviewHandler } from './url-preview.js';\nimport { manifestHandler } from './manifest.js';\nimport packFeed from './feed.js';\n\nconst _filename = fileURLToPath(import.meta.url);\nconst _dirname = dirname(_filename);\n\nconst staticAssets = `${_dirname}/../../../assets/`;\nconst clientAssets = `${_dirname}/../../../../client/assets/`;\nconst assets = `${_dirname}/../../../../../built/_client_dist_/`;\nconst swAssets = `${_dirname}/../../../../../built/_sw_dist_/`;\n\n// Init app\nconst app = new Koa();\n\n//#region Bull Dashboard\nconst bullBoardPath = '/queue';\n\n// Authenticate\napp.use(async (ctx, next) => {\n\t// %71ueue\u3068\u304b\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u305f\u3089\u56f0\u308b\u305f\u3081\n\tconst url = decodeURI(ctx.path);\n\tif (url === bullBoardPath || url.startsWith(bullBoardPath + '/')) {\n\t\tconst token = ctx.cookies.get('token');\n\t\tif (token == null) {\n\t\t\tctx.status = 401;\n\t\t\treturn;\n\t\t}\n\t\tconst user = await Users.findOneBy({ token });\n\t\tif (user == null || !(user.isAdmin || user.isModerator)) {\n\t\t\tctx.status = 403;\n\t\t\treturn;\n\t\t}\n\t}\n\tawait next();\n});\n\nconst serverAdapter = new KoaAdapter();\n\ncreateBullBoard({\n\tqueues: queues.map(q => new BullAdapter(q)),\n\tserverAdapter,\n});\n\nserverAdapter.setBasePath(bullBoardPath);\napp.use(serverAdapter.registerPlugin());\n//#endregion\n\n// Init renderer\napp.use(views(_dirname + '/views', {\n\textension: 'pug',\n\toptions: {\n\t\tversion: config.version,\n\t\tgetClientEntry: () => process.env.NODE_ENV === 'production' ?\n\t\t\tconfig.clientEntry :\n\t\t\tJSON.parse(readFileSync(`${_dirname}/../../../../../built/_client_dist_/manifest.json`, 'utf-8'))['src/init.ts'],\n\t\tconfig,\n\t},\n}));\n\n// Serve favicon\napp.use(favicon(`${_dirname}/../../../assets/favicon.ico`));\n\n// Common request handler\napp.use(async (ctx, next) => {\n\t// IFrame\u306e\u4e2d\u306b\u5165\u308c\u3089\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\n\tctx.set('X-Frame-Options', 'DENY');\n\tawait next();\n});\n\n// Init router\nconst router = new Router();\n\n//#region static assets\n\nrouter.get('/static-assets/(.*)', async ctx => {\n\tawait send(ctx as any, ctx.path.replace('/static-assets/', ''), {\n\t\troot: staticAssets,\n\t\tmaxage: ms('7 days'),\n\t});\n});\n\nrouter.get('/client-assets/(.*)', async ctx => {\n\tawait send(ctx as any, ctx.path.replace('/client-assets/', ''), {\n\t\troot: clientAssets,\n\t\tmaxage: ms('7 days'),\n\t});\n});\n\nrouter.get('/assets/(.*)', async ctx => {\n\tawait send(ctx as any, ctx.path.replace('/assets/', ''), {\n\t\troot: assets,\n\t\tmaxage: ms('7 days'),\n\t});\n});\n\n// Apple touch icon\nrouter.get('/apple-touch-icon.png', async ctx => {\n\tawait send(ctx as any, '/apple-touch-icon.png', {\n\t\troot: staticAssets,\n\t});\n});\n\nrouter.get('/twemoji/(.*)', async ctx => {\n\tconst path = ctx.path.replace('/twemoji/', '');\n\n\tif (!path.match(/^[0-9a-f-]+\\.svg$/)) {\n\t\tctx.status = 404;\n\t\treturn;\n\t}\n\n\tctx.set('Content-Security-Policy', 'default-src \\'none\\'; style-src \\'unsafe-inline\\'');\n\n\tawait send(ctx as any, path, {\n\t\troot: `${_dirname}/../../../node_modules/@discordapp/twemoji/dist/svg/`,\n\t\tmaxage: ms('30 days'),\n\t});\n});\n\nrouter.get('/twemoji-badge/(.*)', async ctx => {\n\tconst path = ctx.path.replace('/twemoji-badge/', '');\n\n\tif (!path.match(/^[0-9a-f-]+\\.png$/)) {\n\t\tctx.status = 404;\n\t\treturn;\n\t}\n\n\tconst mask = await sharp(\n\t\t`${_dirname}/../../../node_modules/@discordapp/twemoji/dist/svg/${path.replace('.png', '')}.svg`,\n\t\t{ density: 1000 },\n\t)\n\t\t.resize(488, 488)\n\t\t.greyscale()\n\t\t.normalise()\n\t\t.linear(1.75, -(128 * 1.75) + 128) // 1.75x contrast\n\t\t.flatten({ background: '#000' })\n\t\t.extend({\n\t\t\ttop: 12,\n\t\t\tbottom: 12,\n\t\t\tleft: 12,\n\t\t\tright: 12,\n\t\t\tbackground: '#000',\n\t\t})\n\t\t.toColorspace('b-w')\n\t\t.png()\n\t\t.toBuffer();\n\n\tconst buffer = await sharp({\n\t\tcreate: { width: 512, height: 512, channels: 4, background: { r: 0, g: 0, b: 0, alpha: 0 } },\n\t})\n\t\t.pipelineColorspace('b-w')\n\t\t.boolean(mask, 'eor')\n\t\t.resize(96, 96)\n\t\t.png()\n\t\t.toBuffer();\n\n\tctx.set('Content-Security-Policy', 'default-src \\'none\\'; style-src \\'unsafe-inline\\'');\n\tctx.set('Cache-Control', 'max-age=2592000');\n\tctx.set('Content-Type', 'image/png');\n\tctx.body = buffer;\n});\n\n// ServiceWorker\nrouter.get(`/sw.js`, async ctx => {\n\tawait send(ctx as any, `/sw.js`, {\n\t\troot: swAssets,\n\t\tmaxage: ms('10 minutes'),\n\t});\n});\n\n// Manifest\nrouter.get('/manifest.json', manifestHandler);\n\nrouter.get('/robots.txt', async ctx => {\n\tawait send(ctx as any, '/robots.txt', {\n\t\troot: staticAssets,\n\t});\n});\n\n//#endregion\n\n// Docs\nrouter.get('/api-doc', async ctx => {\n\tawait send(ctx as any, '/redoc.html', {\n\t\troot: staticAssets,\n\t});\n});\n\n// URL preview endpoint\nrouter.get('/url', urlPreviewHandler);\n\nrouter.get('/api.json', async ctx => {\n\tctx.body = genOpenapiSpec();\n});\n\nconst getFeed = async (acct: string) => {\n\tconst { username, host } = Acct.parse(acct);\n\tconst user = await Users.findOneBy({\n\t\tusernameLower: username.toLowerCase(),\n\t\thost: host ?? IsNull(),\n\t\tisSuspended: false,\n\t});\n\n\treturn user && await packFeed(user);\n};\n\n// Atom\nrouter.get('/@:user.atom', async ctx => {\n\tconst feed = await getFeed(ctx.params.user);\n\n\tif (feed) {\n\t\tctx.set('Content-Type', 'application/atom+xml; charset=utf-8');\n\t\tctx.body = feed.atom1();\n\t} else {\n\t\tctx.status = 404;\n\t}\n});\n\n// RSS\nrouter.get('/@:user.rss', async ctx => {\n\tconst feed = await getFeed(ctx.params.user);\n\n\tif (feed) {\n\t\tctx.set('Content-Type', 'application/rss+xml; charset=utf-8');\n\t\tctx.body = feed.rss2();\n\t} else {\n\t\tctx.status = 404;\n\t}\n});\n\n// JSON\nrouter.get('/@:user.json', async ctx => {\n\tconst feed = await getFeed(ctx.params.user);\n\n\tif (feed) {\n\t\tctx.set('Content-Type', 'application/json; charset=utf-8');\n\t\tctx.body = feed.json1();\n\t} else {\n\t\tctx.status = 404;\n\t}\n});\n\n//#region SSR (for crawlers)\n// User\nrouter.get(['/@:user', '/@:user/:sub'], async (ctx, next) => {\n\tconst { username, host } = Acct.parse(ctx.params.user);\n\tconst user = await Users.findOneBy({\n\t\tusernameLower: username.toLowerCase(),\n\t\thost: host ?? IsNull(),\n\t\tisSuspended: false,\n\t});\n\n\tif (user != null) {\n\t\tconst profile = await UserProfiles.findOneByOrFail({ userId: user.id });\n\t\tconst meta = await fetchMeta();\n\t\tconst me = profile.fields\n\t\t\t? profile.fields\n\t\t\t\t.filter(filed => filed.value != null && filed.value.match(/^https?:/))\n\t\t\t\t.map(field => field.value)\n\t\t\t: [];\n\n\t\tawait ctx.render('user', {\n\t\t\tuser, profile, me,\n\t\t\tavatarUrl: await Users.getAvatarUrl(user),\n\t\t\tsub: ctx.params.sub,\n\t\t\tinstanceName: meta.name || 'Misskey',\n\t\t\ticon: meta.iconUrl,\n\t\t\tthemeColor: meta.themeColor,\n\t\t});\n\t\tctx.set('Cache-Control', 'public, max-age=15');\n\t} else {\n\t\t// \u30ea\u30e2\u30fc\u30c8\u30e6\u30fc\u30b6\u30fc\u306a\u306e\u3067\n\t\t// \u30e2\u30c7\u30ec\u30fc\u30bf\u304cAPI\u7d4c\u7531\u3067\u53c2\u7167\u53ef\u80fd\u306b\u3059\u308b\u305f\u3081\u306b404\u306b\u306f\u3057\u306a\u3044\n\t\tawait next();\n\t}\n});\n\nrouter.get('/users/:user', async ctx => {\n\tconst user = await Users.findOneBy({\n\t\tid: ctx.params.user,\n\t\thost: IsNull(),\n\t\tisSuspended: false,\n\t});\n\n\tif (user == null) {\n\t\tctx.status = 404;\n\t\treturn;\n\t}\n\n\tctx.redirect(`/@${user.username}${ user.host == null ? '' : '@' + user.host}`);\n});\n\n// Note\nrouter.get('/notes/:note', async (ctx, next) => {\n\tconst note = await Notes.findOneBy({\n\t\tid: ctx.params.note,\n\t\tvisibility: In(['public', 'home']),\n\t});\n\n\tif (note) {\n\t\tconst _note = await Notes.pack(note);\n\t\tconst profile = await UserProfiles.findOneByOrFail({ userId: note.userId });\n\t\tconst meta = await fetchMeta();\n\t\tawait ctx.render('note', {\n\t\t\tnote: _note,\n\t\t\tprofile,\n\t\t\tavatarUrl: await Users.getAvatarUrl(await Users.findOneByOrFail({ id: note.userId })),\n\t\t\t// TODO: Let locale changeable by instance setting\n\t\t\tsummary: getNoteSummary(_note),\n\t\t\tinstanceName: meta.name || 'Misskey',\n\t\t\ticon: meta.iconUrl,\n\t\t\tthemeColor: meta.themeColor,\n\t\t});\n\n\t\tctx.set('Cache-Control', 'public, max-age=15');\n\n\t\treturn;\n\t}\n\n\tawait next();\n});\n\n// Page\nrouter.get('/@:user/pages/:page', async (ctx, next) => {\n\tconst { username, host } = Acct.parse(ctx.params.user);\n\tconst user = await Users.findOneBy({\n\t\tusernameLower: username.toLowerCase(),\n\t\thost: host ?? IsNull(),\n\t});\n\n\tif (user == null) return;\n\n\tconst page = await Pages.findOneBy({\n\t\tname: ctx.params.page,\n\t\tuserId: user.id,\n\t});\n\n\tif (page) {\n\t\tconst _page = await Pages.pack(page);\n\t\tconst profile = await UserProfiles.findOneByOrFail({ userId: page.userId });\n\t\tconst meta = await fetchMeta();\n\t\tawait ctx.render('page', {\n\t\t\tpage: _page,\n\t\t\tprofile,\n\t\t\tavatarUrl: await Users.getAvatarUrl(await Users.findOneByOrFail({ id: page.userId })),\n\t\t\tinstanceName: meta.name || 'Misskey',\n\t\t\ticon: meta.iconUrl,\n\t\t\tthemeColor: meta.themeColor,\n\t\t});\n\n\t\tif (['public'].includes(page.visibility)) {\n\t\t\tctx.set('Cache-Control', 'public, max-age=15');\n\t\t} else {\n\t\t\tctx.set('Cache-Control', 'private, max-age=0, must-revalidate');\n\t\t}\n\n\t\treturn;\n\t}\n\n\tawait next();\n});\n\n// Clip\n// TODO: \u975epublic\u306aclip\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\nrouter.get('/clips/:clip', async (ctx, next) => {\n\tconst clip = await Clips.findOneBy({\n\t\tid: ctx.params.clip,\n\t});\n\n\tif (clip) {\n\t\tconst _clip = await Clips.pack(clip);\n\t\tconst profile = await UserProfiles.findOneByOrFail({ userId: clip.userId });\n\t\tconst meta = await fetchMeta();\n\t\tawait ctx.render('clip', {\n\t\t\tclip: _clip,\n\t\t\tprofile,\n\t\t\tavatarUrl: await Users.getAvatarUrl(await Users.findOneByOrFail({ id: clip.userId })),\n\t\t\tinstanceName: meta.name || 'Misskey',\n\t\t\ticon: meta.iconUrl,\n\t\t\tthemeColor: meta.themeColor,\n\t\t});\n\n\t\tctx.set('Cache-Control', 'public, max-age=15');\n\n\t\treturn;\n\t}\n\n\tawait next();\n});\n\n// Gallery post\nrouter.get('/gallery/:post', async (ctx, next) => {\n\tconst post = await GalleryPosts.findOneBy({ id: ctx.params.post });\n\n\tif (post) {\n\t\tconst _post = await GalleryPosts.pack(post);\n\t\tconst profile = await UserProfiles.findOneByOrFail({ userId: post.userId });\n\t\tconst meta = await fetchMeta();\n\t\tawait ctx.render('gallery-post', {\n\t\t\tpost: _post,\n\t\t\tprofile,\n\t\t\tavatarUrl: await Users.getAvatarUrl(await Users.findOneByOrFail({ id: post.userId })),\n\t\t\tinstanceName: meta.name || 'Misskey',\n\t\t\ticon: meta.iconUrl,\n\t\t\tthemeColor: meta.themeColor,\n\t\t});\n\n\t\tctx.set('Cache-Control', 'public, max-age=15');\n\n\t\treturn;\n\t}\n\n\tawait next();\n});\n\n// Channel\nrouter.get('/channels/:channel', async (ctx, next) => {\n\tconst channel = await Channels.findOneBy({\n\t\tid: ctx.params.channel,\n\t});\n\n\tif (channel) {\n\t\tconst _channel = await Channels.pack(channel);\n\t\tconst meta = await fetchMeta();\n\t\tawait ctx.render('channel', {\n\t\t\tchannel: _channel,\n\t\t\tinstanceName: meta.name || 'Misskey',\n\t\t\ticon: meta.iconUrl,\n\t\t\tthemeColor: meta.themeColor,\n\t\t});\n\n\t\tctx.set('Cache-Control', 'public, max-age=15');\n\n\t\treturn;\n\t}\n\n\tawait next();\n});\n//#endregion\n\nrouter.get('/_info_card_', async ctx => {\n\tconst meta = await fetchMeta(true);\n\n\tctx.remove('X-Frame-Options');\n\n\tawait ctx.render('info-card', {\n\t\tversion: config.version,\n\t\thost: config.host,\n\t\tmeta: meta,\n\t\toriginalUsersCount: await Users.countBy({ host: IsNull() }),\n\t\toriginalNotesCount: await Notes.countBy({ userHost: IsNull() }),\n\t});\n});\n\nrouter.get('/bios', async ctx => {\n\tawait ctx.render('bios', {\n\t\tversion: config.version,\n\t});\n});\n\nrouter.get('/cli', async ctx => {\n\tawait ctx.render('cli', {\n\t\tversion: config.version,\n\t});\n});\n\nconst override = (source: string, target: string, depth = 0) =>\n\t[, ...target.split('/').filter(x => x), ...source.split('/').filter(x => x).splice(depth)].join('/');\n\nrouter.get('/flush', async ctx => {\n\tawait ctx.render('flush');\n});\n\n// streaming\u306b\u975eWebSocket\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u6765\u305f\u5834\u5408\u306bbase html\u3092\u30ad\u30e3\u30b7\u30e5\u4ed8\u304d\u3067\u8fd4\u3059\u3068\u3001Proxy\u7b49\u3067\u305d\u306e\u30d1\u30b9\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u304a\u304b\u3057\u304f\u306a\u308b\nrouter.get('/streaming', async ctx => {\n\tctx.status = 503;\n\tctx.set('Cache-Control', 'private, max-age=0');\n});\n\n// Render base html for all requests\nrouter.get('(.*)', async ctx => {\n\tconst meta = await fetchMeta();\n\tawait ctx.render('base', {\n\t\timg: meta.bannerUrl,\n\t\ttitle: meta.name || 'Misskey',\n\t\tinstanceName: meta.name || 'Misskey',\n\t\tdesc: meta.description,\n\t\ticon: meta.iconUrl,\n\t\tthemeColor: meta.themeColor,\n\t});\n\tctx.set('Cache-Control', 'public, max-age=15');\n});\n\n// Register router\napp.use(router.routes());\n\nexport default app;\n"], "filenames": ["packages/backend/src/server/web/index.ts"], "buggy_code_start_loc": [47], "buggy_code_end_loc": [48], "fixing_code_start_loc": [47], "fixing_code_end_loc": [50], "type": "CWE-287", "message": "Nexkey is a fork of Misskey, an open source, decentralized social media platform. Prior to version 12.121.9, incomplete URL validation can allow users to bypass authentication for access to the job queue dashboard. Version 12.121.9 contains a fix for this issue. As a workaround, it may be possible to avoid this by blocking access using tools such as Cloudflare's WAF.", "other": {"cve": {"id": "CVE-2023-43805", "sourceIdentifier": "security-advisories@github.com", "published": "2023-10-04T21:15:10.203", "lastModified": "2023-10-11T16:28:56.947", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Nexkey is a fork of Misskey, an open source, decentralized social media platform. Prior to version 12.121.9, incomplete URL validation can allow users to bypass authentication for access to the job queue dashboard. Version 12.121.9 contains a fix for this issue. As a workaround, it may be possible to avoid this by blocking access using tools such as Cloudflare's WAF."}, {"lang": "es", "value": "Nexkey es un fork de Misskey, una plataforma de redes sociales descentralizada y de c\u00f3digo abierto. Antes de la versi\u00f3n 12.121.9, la validaci\u00f3n de URL incompleta pod\u00eda permitir a los usuarios omitir la autenticaci\u00f3n para acceder al panel de la cola de trabajos. La versi\u00f3n 12.121.9 contiene una soluci\u00f3n para este problema. Como workaround, es posible evitar esto bloqueando el acceso utilizando herramientas como WAF de Cloudflare."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-287"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:nexryai:nexkey:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "12.121.9", "matchCriteriaId": "68C7C1F9-AD69-45F7-B999-005F4AB9F76D"}]}]}], "references": [{"url": "https://github.com/misskey-dev/misskey/security/advisories/GHSA-9fj2-gjcf-cqqc", "source": "security-advisories@github.com", "tags": ["Not Applicable"]}, {"url": "https://github.com/nexryai/nexkey/commit/d89575c521fd4492f5e2ba5a221c5e8f1382081d", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/nexryai/nexkey/security/advisories/GHSA-g8w5-568f-ffwf", "source": "security-advisories@github.com", "tags": ["Vendor Advisory"]}]}, "github_commit_url": "https://github.com/nexryai/nexkey/commit/d89575c521fd4492f5e2ba5a221c5e8f1382081d"}}