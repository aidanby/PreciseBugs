{"buggy_code": ["<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      load.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (isset($_SESSION['CPM']) === false || (int) $_SESSION['CPM'] !== 1) {\n    die('Hacking attempt...');\n}\n\n// Is maintenance on-going?\nif (\n    isset($SETTINGS['maintenance_mode']) === true\n    && (int) $SETTINGS['maintenance_mode'] === 1\n    && ($session_user_admin === null\n        || (int) $session_user_admin === 1)\n) {\n    ?>\n    <script type=\"text/javascript\">\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('index_maintenance_mode_admin'); ?>',\n            '<?php echo langHdl('information'); ?>', {\n                timeOut: 0\n            }\n        );\n    </script>\n<?php\n}\n?>\n\n<script type=\"text/javascript\">\n    var userScrollPosition = 0,\n        debugJavascript = true;\n    let hourInMinutes = 60;\n\n    /**\n    *   Add 1 hour to session duration\n    **/\n    function IncreaseSessionTime(duration)\n    {\n        duration = duration || hourInMinutes;\n        $.post(\n            'sources/main.queries.php',\n            {\n                type     : 'increase_session_time',\n                type_category: 'action_user',\n                duration : parseInt(duration, 10) * hourInMinutes,\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                if (data[0].new_value !== 'expired') {\n                    $('#temps_restant').val(data[0].new_value);\n                    $('#date_end_session').val(data[0].new_value);\n                    $('#countdown').css('color', 'white');\n                } else {\n                    $(location).attr('href', 'index.php?session=expired');\n                }\n            },\n            'json'\n        );\n    }\n\n    // Start real time\n    // get list of last items\n    if (store.get('teampassUser') !== undefined && parseInt(store.get('teampassUser').user_id) > 0\n        && String('<?php echo $_SESSION['key']; ?>') === store.get('teampassUser').sessionKey\n        && (Date.now() - store.get('teampassUser').sessionStartTimestamp) < (store.get('teampassUser').sessionDuration * 1000)\n    ) {\n        $.when(\n            // Load teampass settings\n            loadSettings()\n        ).then(function() {\n            $.when(\n                // Refresh list of last items shopwn\n                refreshListLastSeenItems()\n            ).then(function() {\n                // Check if new privatekey needs to be adapted\n                var data = {\n                    'user_id': store.get('teampassUser').user_id,\n                    'fields' : 'special, auth_type, is_ready_for_usage, ongoing_process_id, otp_provided',\n                }\n                $.post(\n                    \"sources/main.queries.php\", {\n                        type: \"get_user_info\",\n                        type_category: 'action_user',\n                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) {\n                            console.info('Get user info results:');\n                            console.log(data);\n                        }\n\n                        // update local storage\n                        store.update(\n                            'teampassUser', {},\n                            function(teampassUser) {\n                                teampassUser.special = data.queryResults.special;\n                                teampassUser.auth_type = data.queryResults.auth_type;\n                                teampassUser.is_ready_for_usage = data.queryResults.is_ready_for_usage;\n                                teampassUser.ongoing_process_id = data.queryResults.ongoing_process_id;\n                            }\n                        );\n\n                        if (data.error === false && data.queryResults.special === 'generate-keys') {\n                            // Get generation keys progress status\n                            getGenerateKeysProgress(store.get('teampassUser').user_id);\n\n                            // ----\n                        } else if (data.error === false && data.queryResults.special === 'auth-pwd-change' && data.queryResults.auth_type === 'local') {\n                            // USer's password has been reseted, he shall change it\n                            if (debugJavascript === true) console.log('User has to change his auth password')\n                            // HIde\n                            $('.content-header, .content').addClass('hidden');\n\n                            // Show passwords inputs and form\n                            $('#dialog-user-change-password-info')\n                                .html('<i class=\"icon fa-solid fa-info mr-2\"></i><?php echo langHdl('user_has_to_change_password_info');?>')\n                                .removeClass('hidden');\n                            $('#dialog-user-change-password').removeClass('hidden');\n\n                        // ----\n                        } else if (data.error === false && data.queryResults.special === 'auth-pwd-change' && data.queryResults.auth_type === 'ldap') {\n                            // USer's password has been reseted, he shall change it\n                            if (debugJavascript === true) console.log('LDAP user password has to change his auth password')\n                            // HIde\n                            $('.content-header, .content').addClass('hidden');\n\n                            // Show passwords inputs and form\n                            $('#dialog-ldap-user-change-password-info')\n                                .html('<i class=\"icon fa-solid fa-info mr-2\"></i><?php echo langHdl('ldap_user_has_changed_his_password');?>')\n                                .removeClass('hidden');\n                            $('#dialog-ldap-user-change-password').removeClass('hidden');\n                            \n                            // ----\n                        } else if (\n                            (data.error === false && data.queryResults.special === 'user_added_from_ldap' && data.queryResults.auth_type === 'ldap')\n                            || (typeof data.queryResults !== 'undefined' && data.queryResults.special === 'otc_is_required_on_next_login')\n                            || parseInt(data.queryResults.otp_provided) === 0\n                        ) {\n                            // USer's password has been reseted, he shall change it\n                            if (debugJavascript === true) console.log('NEW LDAP user password - we need to encrypt items')\n                            // HIde\n                            $('.content-header, .content').addClass('hidden');\n\n                            // Show form\n                            $('#dialog-ldap-user-build-keys-database').removeClass('hidden');\n                        } else if (typeof data.queryResults !== 'undefined' && data.queryResults.special === 'recrypt-private-key') {\n                            // USer's password has been reseted, he shall change it\n                            if (debugJavascript === true) console.log('NEW LDAP - we need to encrypt private key')\n                            // HIde\n                            $('.content-header, .content').addClass('hidden');\n\n                            // Show form\n                            $('#dialog-ldap-user-change-password').removeClass('hidden');\n                        }\n                    }\n                );\n            }).then(function() {\n                if (store.get('teampassSettings') === undefined || parseInt(store.get('teampassSettings').enable_tasks_manager) === 0) {\n                    console.log('Now sending emails')\n                    setTimeout(\n                        function() {\n                            $.when(\n                                // send email\n                                $.post(\n                                    \"sources/main.queries.php\", {\n                                        type: \"send_waiting_emails\",\n                                        type_category: 'action_mail',\n                                        key: \"<?php echo $_SESSION['key']; ?>\"\n                                    }\n                                )\n                            ).then(function() {\n                                // send statistics\n                                $.post(\n                                    \"sources/main.queries.php\", {\n                                        type: \"sending_statistics\",\n                                        type_category: 'action_system',\n                                        key: \"<?php echo $_SESSION['key']; ?>\"\n                                    }\n                                );\n                            });\n                        },\n                        3000\n                    );\n                }\n\n                // Save user location\n                //console.info(\"DEBUG - Save user location -\"+store.get('teampassUser').location_stored)\n                if (store.get('teampassUser').location_stored !== 1) {\n                // Save user location\n                    $.post(\n                        \"sources/users.queries.php\", {\n                            type: 'save_user_location',\n                            step: \"perform\",\n                            key: \"<?php echo $_SESSION['key']; ?>\"\n                        },\n                        function(data) {\n                            // update local storage\n                            store.update(\n                                'teampassUser', {},\n                                function(teampassUser) {\n                                    teampassUser.location_stored = 1;\n                                }\n                            );\n                        }\n                    );\n                }\n            });\n        });\n    }\n    //-- end\n\n\n    // Countdown\n    countdown();\n\n    $(\".show_hide_password a\").on('click', function(event) {\n        event.preventDefault();\n        if($('.how_hide_password input').attr(\"type\") === \"text\"){\n            $('.show_hide_password input').attr('type', 'password');\n            $('.show_hide_password i').addClass( \"fa-eye-slash\" );\n            $('.show_hide_password i').removeClass( \"fa-eye\" );\n        }else if($('#show_hide_password input').attr(\"type\") === \"password\"){\n            $('.show_hide_password input').attr('type', 'text');\n            $('.show_hide_password i').removeClass( \"fa-eye-slash\" );\n            $('.show_hide_password i').addClass( \"fa-eye\" );\n        }\n    });\n    \n    if (store.get('teampassUser') !== undefined &&\n        store.get('teampassUser').special === 'generate-keys'\n    ) {\n        // Now we need to perform re-encryption due to LDAP password change\n        /*console.log('User has to regenerate keys')\n        // HIde\n        $('.content-header, .content').addClass('hidden');\n        $('#dialog-user-temporary-code-info').html('<i class=\"icon fa-solid fa-info mr-2\"></i><?php echo langHdl('renecyption_expected');?>');\n\n        // Show passwords inputs and form\n        $('#dialog-user-temporary-code').removeClass('hidden');\n        */\n        \n        // ---\n    } else if (store.get('teampassUser') !== undefined &&\n        store.get('teampassUser').special === 'ldap_password_has_changed_do_reencryption'\n    ) {\n        // Now we need to perform re-encryption due to LDAP password change\n        console.log('show password change')\n        // HIde\n        $('.content-header, .content, #button_do_sharekeys_reencryption').addClass('hidden');\n        $('#warning-text-reencryption').html('<i class=\"icon fa-solid fa-info mr-2\"></i>'.langHdl('ldap_password_change_warning'));\n\n        // Show passwords inputs and form\n        $('#dialog-encryption-keys, .ask-for-previous-password').removeClass('hidden');\n\n        $('#sharekeys_reencryption_target_user').val(store.get('teampassUser').user_id);\n\n        $('#button_do_sharekeys_reencryption').removeClass('hidden');\n        \n        // ---\n    } else if (store.get('teampassUser') !== undefined &&\n        store.get('teampassUser').shown_warning_unsuccessful_login === false\n    ) {\n        // If login attempts experimented\n        // Prepare modal\n        showModalDialogBox(\n            '#warningModal',\n            '<i class=\"fa-solid fa-user-shield fa-lg warning mr-2\"></i><?php echo langHdl('caution'); ?>',\n            '<?php echo langHdl('login_attempts_identified_since_last_connection'); ?>',\n            '<?php echo langHdl('see_detail'); ?>',\n            '<?php echo langHdl('cancel'); ?>'\n        );\n\n        // Actions on modal buttons\n        $(document).on('click', '#warningModalButtonClose', function() {\n            store.update(\n                'teampassUser', {},\n                function(teampassUser) {\n                    teampassUser.shown_warning_unsuccessful_login = true;\n                }\n            );\n        });\n        $(document).on('click', '#warningModalButtonAction', function() {\n            // SHow user\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>');\n\n            // Action\n            store.update(\n                'teampassUser', {},\n                function(teampassUser) {\n                    teampassUser.shown_warning_unsuccessful_login = true;\n                }\n            );\n            document.location.href = \"index.php?page=profile&tab=timeline\";\n        });\n    } else if (store.get('teampassUser') !== undefined &&\n        store.get('teampassUser').special === 'private_items_to_encrypt'\n    ) {\n        // If user has to re-encrypt his personal item passwords\n        $('#dialog-encryption-personal-items-after-upgrade').removeClass('hidden');\n        $('.content, .content-header').addClass('hidden');\n        \n        // Actions on modal buttons\n        $(document).on('click', '#button_do_personal_items_reencryption', function() {\n            // SHow user\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>');\n\n            defusePskRemoval(store.get('teampassUser').user_id, 'psk', 0);\n            \n            function defusePskRemoval(userId, step, start)\n            {\n                if (step === 'psk') {\n                    // Inform user\n                    $(\"#user-current-defuse-psk-progress\").html('<b><?php echo langHdl('encryption_keys'); ?> </b> [' + start + ' - ' + (parseInt(start) + <?php echo NUMBER_ITEMS_IN_BATCH;?>) + '] ' +\n                        '... <?php echo langHdl('please_wait'); ?><i class=\"fa-solid fa-spinner fa-pulse ml-3 text-primary\"></i>');\n\n                    var data = {\n                        'userPsk' : $('#user-current-defuse-psk').val(),\n                            'start': start,\n                            'length': <?php echo NUMBER_ITEMS_IN_BATCH;?>,\n                            'user_id': userId,\n                    };\n                    // Do query\n                    $.post(\n                        \"sources/main.queries.php\", {\n                            'type': \"user_psk_reencryption\",\n                            'type_category': 'action_key',\n                            'data': prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                            'key': '<?php echo $_SESSION['key']; ?>'\n                        },\n                        function(data) {\n                            data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                            if (debugJavascript === true) console.log(data)\n                            if (data.error === true) {\n                                // error\n                                toastr.remove();\n                                toastr.error(\n                                    data.message,\n                                    '<?php echo langHdl('caution'); ?>', {\n                                        timeOut: 5000,\n                                        progressBar: true\n                                    }\n                                );\n\n                                // Enable buttons\n                                $(\"#user-current-defuse-psk-progress\").html('<?php echo langHdl('provide_current_psk_and_click_launch'); ?>');\n                                $('#button_do_sharekeys_reencryption, #button_close_sharekeys_reencryption').removeAttr('disabled');\n                                return false;\n                            } else {\n                                // Start looping on all steps of re-encryption\n                                defusePskRemoval(data.userId, data.step, data.start);\n                            }\n                        }\n                    );\n                } else {\n                    // Finished\n                    $(\"#user-current-defuse-psk-progress\").html('<i class=\"fa-solid fa-check text-success mr-3\"></i><?php echo langHdl('done'); ?>');\n\n                    toastr.remove();\n                }\n            }\n\n        });\n        $(document).on('click', '#button_close_personal_items_reencryption', function() {\n            $('#dialog-encryption-personal-items-after-upgrade').addClass('hidden');\n            $('.content, .content-header').removeClass('hidden');\n        });\n    }\n\n\n    // Show tooltips\n    $('.infotip').tooltip();\n\n    // Sidebar redirection\n    $('.nav-link').click(function() {\n        if ($(this).data('name') !== undefined) {\n            //NProgress.start();\n            document.location.href = \"index.php?page=\" + $(this).data('name');\n        }\n    });\n\n    // User menu action\n    $('.user-menu').click(function() {\n        if ($(this).data('name') !== undefined) {\n            if ($(this).data('name') === 'increase_session') {\n                showExtendSession();\n            } else if ($(this).data('name') === 'sync-new-ldap-password') {\n                // This case permits to handle a case where user has changed his password in LDAP\n                console.log('show sync-new-ldap-password')\n                \n                if (debugJavascript === true) console.log('LDAP user password has to change his auth password')\n                // HIde\n                $('.content-header, .content').addClass('hidden');\n\n                // Show passwords inputs and form\n                $('#dialog-ldap-user-change-password-info')\n                    .html('<i class=\"icon fa-solid fa-info mr-2\"></i><?php echo langHdl('ldap_user_has_changed_his_password');?>')\n                    .removeClass('hidden');\n                $('#dialog-ldap-user-change-password').removeClass('hidden');\n\n                // ----\n            } else if ($(this).data('name') === 'password-change') {\n                //console.log('show password change')\n                // HIde\n                $('.content-header, .content, #button_do_user_change_password').addClass('hidden');\n\n                // Add DoCheck button\n                $('#button_do_user_change_password').after('<button class=\"btn btn-primary\" id=\"button_do_pwds_checks\"><?php echo langHdl('perform_checks'); ?></button>');\n\n                // Show passwords inputs and form\n                $('#dialog-user-change-password-progress').html('<i class=\"icon fa-solid fa-info mr-2\"></i><?php echo langHdl('change_your_password_info_message'); ?>');\n                $('#dialog-user-change-password').removeClass('hidden');\n\n                // Actions\n                $('#button_do_pwds_checks').click(function() {\n                    if ($('#profile-password').val() !== $('#profile-password-confirm').val()) {\n                        $('#button_do_user_change_password').addClass('hidden');\n                        toastr.remove();\n                        toastr.error(\n                            '<?php echo langHdl('passwords_not_the_same'); ?>',\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 3000,\n                                progressBar: true\n                            }\n                        );\n                    } else if (parseInt($('#profile-password-complex').val()) >= parseInt(store.get('teampassSettings').personal_saltkey_security_level)) {\n                        $('#button_do_user_change_password').removeClass('hidden');\n                        $('#button_do_pwds_checks').remove();\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('hit_launch_to_start'); ?>',\n                            '<?php echo langHdl('ready_to_go'); ?>', {\n                                timeOut: 3000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        $('#button_do_user_change_password').addClass('hidden');\n                        toastr.remove();\n                        toastr.error(\n                            '<?php echo langHdl('complexity_level_not_reached'); ?>',\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    }\n                });\n                \n                // ----\n            } else if ($(this).data('name') === 'profile') {\n                // Show profile page\n                document.location.href = \"index.php?page=profile\";\n\n                // ----\n            } else if ($(this).data('name') === 'logout') {\n                // Logout directly to login form\n                window.location.href = \"./includes/core/logout.php?token=<?php echo $_SESSION['key']; ?>\";\n\n                // ----\n            } else if ($(this).data('name') === 'generate-new_keys') {\n                // User wants to generate new keys\n                console.log('show new keys generation');\n                $('#warningModalButtonAction').attr('data-button-confirm', 'false');\n\n                // SHow modal\n                showModalDialogBox(\n                    '#warningModal',\n                    '<i class=\"fa-solid fa-person-digging fa-lg warning mr-2\"></i><?php echo langHdl('generate_new_keys'); ?> <b>',\n                    '<div class=\"form-group\">'+\n                        '<?php echo langHdl('generate_new_keys_info'); ?>' +\n                    '</div>' +\n                    '<div class=\"input-group mb-2 hidden\" id=\"new-encryption-div\">' +\n                        '<div class=\"input-group-prepend\">' +\n                            '<span class=\"input-group-text\"><?php echo langHdl('confirm_password'); ?></span>' +\n                        '</div>' +\n                        '<input id=\"encryption-otp\" type=\"password\" class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').pwd+'\">' +\n                        '<div class=\"input-group-append\">' +\n                            '<button class=\"btn btn-outline-secondary btn-no-click\" id=\"show-encryption-otp\" title=\"<?php echo langHdl('mask_pw'); ?>\"><i class=\"fas fa-low-vision\"></i></button>' +\n                        '</div>' +\n                    '</div>',\n                    '<?php echo langHdl('perform'); ?>',\n                    '<?php echo langHdl('close'); ?>'\n                );\n\n                // Manage show/hide password\n                $('#show-encryption-otp')\n                    .mouseup(function() {\n                        $('#encryption-otp').attr('type', 'password');\n                    })\n                    .mousedown(function() {\n                        $('#encryption-otp').attr('type', 'text');\n                    });\n                $('.btn-no-click')\n                    .click(function(e) {\n                        e.preventDefault();\n                    });\n\n                // Manage click on button PERFORM\n                $(document).on('click', '#warningModalButtonAction', function() {\n                    // On PERFORM click\n                    if ($('#warningModalButtonAction').attr('data-button-confirm') === 'false') {\n                        $(\"#new-encryption-div\").removeClass('hidden');\n                        $('#warningModalButtonAction')\n                            .html('<i class=\"fa-solid fa-triangle-exclamation warning mr-2\"></i><?php echo langHdl('confirm'); ?>')\n                            .attr('data-button-confirm', 'true');\n\n                    } else if ($('#warningModalButtonAction').attr('data-button-confirm') === 'true') {\n                        // As reencryption relies on user's password\n                        // ensure we have it\n                        if ($('#encryption-otp').val() === '') {\n                            // No user password provided\n                            $('#warningModalButtonAction')\n                                .html('<?php echo langHdl('perform'); ?>')\n                                .attr('data-button-confirm', 'false');\n\n                        } else {\n                            // We have the password, start reencryption\n                            $('#warningModalButtonAction')\n                                .addClass('disabled')\n                                .html('<i class=\"fa-solid fa-spinner fa-spin\"></i>');\n                            $('#warningModalButtonClose').addClass('disabled');\n\n                            // update the process\n                            // add all tasks\n                            var parameters = {\n                                'user_id': parseInt(store.get('teampassUser').user_id),\n                                'user_pwd': $('#encryption-otp').val(),\n                                'encryption_key': '',\n                                'delete_existing_keys': true,\n                                'encrypt_with_user_pwd': true,\n                                'send_email_to_user': true,\n                                'email_body': 'email_body_user_config_4',\n                                'generate_user_new_password': false,\n                            };\n                            //console.log(parameters);\n\n                            $.post(\n                                \"sources/main.queries.php\", {\n                                    type: \"user_new_keys_generation\",\n                                    type_category: 'action_key',\n                                    data: prepareExchangedData(JSON.stringify(parameters), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                                    key: \"<?php echo $_SESSION['key']; ?>\"\n                                },\n                                function(data_next1) { \n                                    data_next1 = prepareExchangedData(data_next1, 'decode', '<?php echo $_SESSION['key']; ?>');\n                                    if (debugJavascript === true) console.log(data_next1)\n\n                                    if (data_next1.error !== false) {\n                                        // Show error\n                                        toastr.remove();\n                                        toastr.error(\n                                            data_next1.message,\n                                            '<?php echo langHdl('caution'); ?>', {\n                                                timeOut: 5000,\n                                                progressBar: true\n                                            }\n                                        );\n                                    } else {\n                                        $(\"#new-encryption-div\").after('<div><?php echo langHdl('generate_new_keys_end'); ?></div>');\n                                        // Show warning\n                                        $('#user_not_ready').removeClass('hidden');\n                                        // update local storage\n                                        store.update(\n                                            'teampassUser', {},\n                                            function(teampassUser) {\n                                                teampassUser.is_ready_for_usage = 0;\n                                            }\n                                        );\n                                        $(\"#warningModalButtonAction\").addClass('hidden');\n                                        $('#warningModalButtonClose').removeClass('disabled');\n\n                                        // Get follow up\n                                        setTimeout(\n                                            getGenerateKeysProgress,\n                                            5000,\n                                            store.get('teampassUser').user_id\n                                        );\n                                    }\n                                }\n                            );\n                        }\n                    }\n                });\n            }\n        }\n    });\n\n    $('.close-element').click(function() {\n        $(this).closest('.card').addClass('hidden');\n\n        $('.content-header, .content').removeClass('hidden');\n    });\n\n    /**\n     * When clicking save Personal saltkey\n     */\n    /*\n    $('#button_save_user_psk').click(function() {\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n        );\n\n        // Prepare data\n        var data = {\n            \"psk\": sanitizeString($(\"#user_personal_saltkey\").val()),\n            \"complexity\": $(\"#psk_strength_value\").val()\n        };\n\n        //\n        $.post(\n            \"sources/main.queries.php\", {\n                type: \"store_personal_saltkey\",\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, '<?php echo $_SESSION['key']; ?>');\n\n                // Is there an error?\n                if (data.error === true) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('warning'); ?>',\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    store.update(\n                        'teampassUser',\n                        function(teampassUser) {\n                            teampassUser.pskDefinedInDatabase = 1;\n                        }\n                    )\n\n                    store.update(\n                        'teampassUser',\n                        function(teampassUser) {\n                            teampassUser.pskSetForSession = data.encrypted_psk;\n                        }\n                    )\n\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('alert_page_will_reload'); ?>'\n                    );\n\n                    location.reload();\n                }\n            }\n        );\n    });\n    */\n\n    // For Personal Saltkey\n    $(\"#profile-password\").simplePassMeter({\n        \"requirements\": {},\n        \"container\": \"#profile-password-strength\",\n        \"defaultText\": \"<?php echo langHdl('index_pw_level_txt'); ?>\",\n        \"ratings\": [{\n                \"minScore\": 0,\n                \"className\": \"meterFail\",\n                \"text\": \"<?php echo langHdl('complex_level0'); ?>\"\n            },\n            {\n                \"minScore\": 25,\n                \"className\": \"meterWarn\",\n                \"text\": \"<?php echo langHdl('complex_level1'); ?>\"\n            },\n            {\n                \"minScore\": 50,\n                \"className\": \"meterWarn\",\n                \"text\": \"<?php echo langHdl('complex_level2'); ?>\"\n            },\n            {\n                \"minScore\": 60,\n                \"className\": \"meterGood\",\n                \"text\": \"<?php echo langHdl('complex_level3'); ?>\"\n            },\n            {\n                \"minScore\": 70,\n                \"className\": \"meterGood\",\n                \"text\": \"<?php echo langHdl('complex_level4'); ?>\"\n            },\n            {\n                \"minScore\": 80,\n                \"className\": \"meterExcel\",\n                \"text\": \"<?php echo langHdl('complex_level5'); ?>\"\n            },\n            {\n                \"minScore\": 90,\n                \"className\": \"meterExcel\",\n                \"text\": \"<?php echo langHdl('complex_level6'); ?>\"\n            }\n        ]\n    });\n    $(\"#profile-password\").bind({\n        \"score.simplePassMeter\": function(jQEvent, score) {\n            $(\"#profile-password-complex\").val(score);\n        }\n    }).change({\n        \"score.simplePassMeter\": function(jQEvent, score) {\n            $(\"#profile-password-complex\").val(score);\n        }\n    });\n\n    // Hide sidebar footer icons when reducing sidebar\n    $('a[data-widget=\"pushmenu\"]').click(function(event) {\n        if ($('#sidebar-footer').hasClass('hidden') === true) {\n            setTimeout(function() {\n                $('#sidebar-footer').removeClass('hidden');\n            }, 300);\n        } else {\n            $('#sidebar-footer').addClass('hidden');\n        }\n    });\n\n\n    var clipboardCopy = new ClipboardJS(\".clipboard-copy\", {\n        text: function(trigger) {\n            var elementId = $(trigger).data('clipboard-text');\n            if (debugJavascript === true) console.log($('#' + elementId).val())\n            return String($('#' + elementId).val());\n        }\n    });\n\n    clipboardCopy.on('success', function(e) {\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('copy_to_clipboard'); ?>',\n            '<?php echo langHdl('information'); ?>', {\n                timeOut: 2000\n            }\n        );\n    });\n    \n    // Progress bar\n    setTimeout(\n        function() {\n            $(\".fade\").removeClass(\"out\");\n\n            // Is user not ready\n            if (typeof store.get('teampassUser').is_ready_for_usage !== 'undefined' && parseInt(store.get('teampassUser').is_ready_for_usage) === 0) {\n                $('#user_not_ready').removeClass('hidden');\n            }\n        },\n        5000\n    );\n\n\n    /**\n    * USER HAS DECIDED TO CHANGE HIS AUTH PASSWORD\n     */\n    $(document).on('click', '#dialog-user-change-password-do', function() {\n        // Start by changing the user password and send it by email\n        if ($('#profile-password-confirm').val() !== $('#profile-password').val()) {\n            // Show error\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('index_pw_error_identical'); ?>',\n                '<?php echo langHdl('caution'); ?>', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n        if ($('#profile-current-password').val() !== \"\" && $('#profile-password').val() !== \"\" && $('#profile-password-confirm').val() !== \"\") {\n            // Case where a user is changing his authentication password\n            console.log('Reencryption based upon user decision to change his auth password');\n\n            // Show progress\n            $('#dialog-user-change-password-progress').html('<b><?php echo langHdl('please_wait'); ?></b><i class=\"fa-solid fa-spinner fa-pulse ml-3 text-primary\"></i>');\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n            );\n            \n            // Disable buttons\n            $('#dialog-user-change-password-do, #dialog-user-change-password-close').attr('disabled', 'disabled');\n            \n            data = {\n                'user_id': store.get('teampassUser').user_id,\n                'old_password': $('#profile-current-password').val(),\n                'new_password': $('#profile-password').val(),\n            }\n            if (debugJavascript === true) console.log(data);\n\n            // Check user current password\n            // and change the password\n            // and use the password to re-encrypt the privatekey\n            $.post(\n                'sources/main.queries.php', {\n                    type: 'change_user_auth_password',\n                    type_category: 'action_password',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n\n                        $(\"#dialog-user-change-password-progress\").html('<?php echo langHdl('fill_in_fields_and_hit_launch'); ?>');\n\n                        // Enable buttons\n                        $('#dialog-user-change-password-do, #dialog-user-change-password-close').removeAttr('disabled');\n                    } else {\n                        // SUCCESS\n                        $('#dialog-user-change-password-close').removeAttr('disabled');\n                        toastr.remove();\n                        toastr.success(\n                            data.message,\n                            '<?php echo langHdl('success'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                        $(\"#dialog-user-change-password-progress\").html('');\n                        $('#dialog-user-change-password').addClass('hidden');\n                        $('.content-header, .content').removeClass('hidden');\n                    }\n                }\n            );\n        } else {\n            // Show error\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('password_cannot_be_empty'); ?>',\n                '<?php echo langHdl('caution'); ?>', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n        }\n    });\n    $(document).on('click', '#dialog-user-change-password-close', function() {\n        // HIde\n        $('.content-header, .content').removeClass('hidden');\n\n        // SHow form\n        $('#dialog-user-change-password, #dialog-user-change-password-info').addClass('hidden');\n    });\n    \n\n    /**\n    * ADMIN HAS DECIDED TO CHANGE THE USER'S AUTH PASSWORD\n     */\n    $(document).on('click', '#dialog-admin-change-user-password-do', function() {\n        // When an admin changes the user auth password\n        console.log('Reencryption based upon admin decision to change user auth password');\n\n        // Show progress\n        $('#dialog-admin-change-user-password-progress').html('<b><?php echo langHdl('please_wait'); ?></b><i class=\"fa-solid fa-spinner fa-pulse ml-3 text-primary\"></i>');\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n        );\n        \n        // Disable buttons\n        $('#dialog-admin-change-user-password-do, #dialog-admin-change-user-password-close').attr('disabled', 'disabled');            \n        \n        // ENsure we have a user id\n        if ($('#admin_change_user_password_target_user').val() !== '') {\n            // Case where change is for user's account\n            // update the process\n            // add all tasks\n            var parameters = {\n                'user_id': parseInt($('#admin_change_user_password_target_user').val()),\n                'user_pwd': '',\n                'encryption_key': '',\n                'delete_existing_keys': true,\n                'send_email_to_user': true,\n                'encrypt_with_user_pwd': true,\n                'generate_user_new_password': true,\n                'email_body': 'email_body_user_config_3',\n            };\n\n            $.post(\n                \"sources/main.queries.php\", {\n                    type: \"user_new_keys_generation\",\n                    type_category: 'action_key',\n                    data: prepareExchangedData(JSON.stringify(parameters), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data_next1) { \n                    data_next1 = prepareExchangedData(data_next1, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data_next1)\n\n                    if (data_next1.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data_next1.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Reload table\n                        if (typeof oTable !== 'undefined') {\n                            oTable.ajax.reload();\n                        }\n                        \n                        $(\"#dialog-admin-change-user-password-progress\").html('<?php echo langHdl('generate_new_keys_end'); ?>');\n                        // Show warning\n                        // Enable buttons\n                        $('#dialog-admin-change-user-password-close').removeAttr('disabled');\n                        toastr.remove();\n                    }\n                }\n            );\n        }\n    });\n    $(document).on('click', '#dialog-admin-change-user-password-close', function() {\n        // HIde\n        $('.content-header, .content').removeClass('hidden');\n\n        // SHow form\n        $('#dialog-admin-change-user-password').addClass('hidden');\n    });\n    \n    $(document).on('click', '.temp-button', function() {\n        \n        if ($(this).data('action') === \"show-user-pwd\") {\n            // show password\n            $('#temp-user-pwd').attr('type', 'text');\n            $(this).prop( \"disabled\", true );\n            setTimeout(\n                () => {\n                    $('#temp-user-pwd').attr('type', 'hidden');\n                    $(this).prop( \"disabled\", false );\n                },\n                5000\n            );\n        } else if ($(this).data('action') === \"send-user-pwd\") {\n            // Send email\n            console.log('Preparing for email sending');\n            \n            // Prepare data\n            var data = {\n                'receipt': $('#temp-user-email').val(),\n                'subject': '[Teampass] <?php echo langHdl('your_new_password');?>',\n                'body': '<?php echo langHdl('email_body_temporary_login_password');?>',\n                'pre_replace' : {\n                    '#enc_code#' : $('#temp-user-pwd').val(),\n                }\n            }\n            if (debugJavascript === true) console.log(data);\n            // Prepare form\n            $('#dialog-admin-change-user-password-info').html('<?php echo langHdl('sending_email_message');?>');\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n            );\n\n            // Launch action\n            $.post(\n                'sources/main.queries.php', {\n                    type: 'mail_me',\n                    type_category: 'action_mail',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Fianlize UI\n\n                        $('#dialog-admin-change-user-password-info').html('');\n                        $('#dialog-admin-change-user-password-do, #dialog-admin-change-user-password-close').removeAttr('disabled');\n\n                        // HIde\n                        $('.content-header, .content').removeClass('hidden');\n\n                        // SHow form\n                        $('#dialog-admin-change-user-password').addClass('hidden');\n\n                        store.set(\n                            'teampassUser', {\n                                admin_user_password: '',\n                                admin_user_email: '',\n                            }\n                        );\n                        \n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n        }        \n    });\n    \n\n    /**\n    * USER PROVIDES HIS TEMPORARY CODE TO\n     */\n    $(document).on('click', '#dialog-user-temporary-code-do', function() {\n        // Perform a renecryption based upon a temporary code\n        console.log('Reencryption based upon users temporary code');\n\n        // Show progress\n        $('#dialog-user-temporary-code-progress').html('<b><?php echo langHdl('please_wait'); ?></b><i class=\"fa-solid fa-spinner fa-pulse ml-3 text-primary\"></i>');\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n        );\n        \n        // Disable buttons\n        $('#dialog-user-temporary-code-do, #dialog-user-temporary-code-close').attr('disabled', 'disabled');            \n        \n        // Start by testing if the temporary code is correct to decrypt an item\n        data = {\n            'user_id': store.get('teampassUser').user_id,\n            'password': $('#dialog-user-temporary-code-value').val(),\n        }\n        if (debugJavascript === true) {\n            console.log('Testing if temporary code is correct');\n            console.log(data);\n        }\n        $.post(\n            'sources/main.queries.php', {\n                type: 'test_current_user_password_is_correct',\n                type_category: 'action_password',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    $(\"#dialog-user-temporary-code-progress\").html('<?php echo langHdl('fill_in_fields_and_hit_launch'); ?>');\n\n                    // Enable buttons\n                    $('#dialog-user-temporary-code-do, #dialog-user-temporary-code-close').removeAttr('disabled');\n                } else {\n                    // Change privatekey encryption with user-s password\n                    data = {\n                        'user_id': store.get('teampassUser').user_id,\n                        'current_code': $('#dialog-user-temporary-code-current-password').val(),\n                        'new_code': $('#dialog-user-temporary-code-value').val(),\n                        'action_type' : 'encrypt_privkey_with_user_password',\n                    }\n                    if (debugJavascript === true) console.log(data);\n                    \n                    $.post(\n                        'sources/main.queries.php', {\n                            type: 'change_private_key_encryption_password',\n                            type_category: 'action_key',\n                            data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                            key: \"<?php echo $_SESSION['key']; ?>\"\n                        },\n                        function(data) {\n                            data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                            if (debugJavascript === true) console.log(data);\n\n                            if (data.error !== false) {\n                                // Show error\n                                toastr.remove();\n                                toastr.error(\n                                    data.message,\n                                    '<?php echo langHdl('caution'); ?>', {\n                                        timeOut: 5000,\n                                        progressBar: true\n                                    }\n                                );\n\n                                // Enable buttons\n                                $('#dialog-user-temporary-code-do, #dialog-user-temporary-code-close').removeAttr('disabled');\n                            } else {\n                                // Inform user\n                                // Enable close button\n                                $('#dialog-user-temporary-code-close').removeAttr('disabled');\n                                $('#dialog-user-temporary-code-do').attr('disabled', 'disabled');\n\n                                // Finished\n                                $(\"#dialog-user-temporary-code-progress\").html('<i class=\"fa-solid fa-check text-success mr-3\"></i><?php echo langHdl('done'); ?>');\n                                toastr.remove();\n\n                                store.update(\n                                    'teampassUser', {},\n                                    function(teampassUser) {\n                                        teampassUser.special = 'none';\n                                    }\n                                );\n                            }\n                        }\n                    );\n                }\n            }\n        );\n    });\n    $(document).on('click', '#dialog-user-temporary-code-close', function() {\n        // HIde\n        $('.content-header, .content').removeClass('hidden');\n\n        // SHow form\n        $('#dialog-user-temporary-code').addClass('hidden');\n    });\n\n\n    /**\n    * NEW LDAP USER HAS TO BUILD THE ITEMS DATABASE\n     */\n    $(document).on('click', '#dialog-ldap-user-build-keys-database-do', function() {\n        if ($('#dialog-ldap-user-build-keys-database-code').val() === '') {\n\n            return false;\n        }\n        // Perform a renecryption based upon a temporary code\n        console.log('Building items keys database for new LDAP user');\n\n        // Show progress\n        $('#dialog-ldap-user-build-keys-database-progress').html('<b><?php echo langHdl('please_wait'); ?></b><i class=\"fa-solid fa-spinner fa-pulse ml-3 text-primary\"></i>');\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n        );\n        \n        // Disable buttons\n        $('#dialog-ldap-user-build-keys-database-do, #dialog-ldap-user-build-keys-database-close').attr('disabled', 'disabled');            \n        \n        // Start by testing if the temporary code is correct to decrypt an item\n        data = {\n            'user_id': store.get('teampassUser').user_id,\n            'password' : $('#dialog-ldap-user-build-keys-database-code').val(),\n        }\n        if (debugJavascript === true) {\n            console.log('Testing if temporary code is correct in LDAP user case');\n            console.log(data);\n        }\n\n        $.post(\n            'sources/main.queries.php', {\n                type: 'test_current_user_password_is_correct',\n                type_category: 'action_password',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    $(\"#dialog-ldap-user-build-keys-database-progress\").html('<?php echo langHdl('bad_code'); ?>');\n\n                    // Enable buttons\n                    $('#dialog-ldap-user-build-keys-database-do, #dialog-ldap-user-build-keys-database-close').removeAttr('disabled');\n                } else {\n                    // Change privatekey encryption with user-s password\n                    data = {\n                        'user_id': store.get('teampassUser').user_id,\n                        'current_code': $('#dialog-ldap-user-build-keys-database-code').val(),\n                        'new_code': '',\n                        'action_type' : '',\n                    }\n                    if (debugJavascript === true) console.log(data);\n                    \n                    $.post(\n                        'sources/main.queries.php', {\n                            type: 'change_private_key_encryption_password',\n                            type_category: 'action_key',\n                            data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                            key: \"<?php echo $_SESSION['key']; ?>\"\n                        },\n                        function(data) {\n                            data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                            if (debugJavascript === true) console.log(data);\n\n                            if (data.error !== false) {\n                                // Show error\n                                toastr.remove();\n                                toastr.error(\n                                    data.message,\n                                    '<?php echo langHdl('caution'); ?>', {\n                                        timeOut: 5000,\n                                        progressBar: true\n                                    }\n                                );\n\n                                \n                                $(\"#dialog-ldap-user-build-keys-database-progress\").html('<i class=\"fa-solid fa-exclamation-circle text-danger mr-3\"></i><?php echo langHdl('bad_code'); ?>');\n\n                                // Enable buttons\n                                $('#dialog-ldap-user-build-keys-database-do, #dialog-ldap-user-build-keys-database-close').removeAttr('disabled');\n                            } else {\n                                // Inform user\n                                // Enable close button\n                                $('#dialog-ldap-user-build-keys-database-close').removeAttr('disabled');\n                                $('#dialog-ldap-user-build-keys-database-do').attr('disabled', 'disabled');\n\n                                // Finished\n                                $(\"#dialog-ldap-user-build-keys-database-progress\").html('<i class=\"fa-solid fa-check text-success mr-3\"></i><?php echo langHdl('done'); ?>');\n                                toastr.remove();\n\n                                store.update(\n                                    'teampassUser', {},\n                                    function(teampassUser) {\n                                        teampassUser.special = 'none';\n                                        teampassUser.otp_provided = 1;\n                                    }\n                                );\n\n                                // refresh the page\n                                window.location.href = 'index.php?page=items';\n                            }\n                        }\n                    );\n                }\n            }\n        );\n    });\n    $(document).on('click', '#dialog-user-temporary-code-close', function() {\n        // HIde\n        $('.content-header, .content').removeClass('hidden');\n\n        // SHow form\n        $('#dialog-user-temporary-code').addClass('hidden');\n    });\n\n\n    /**\n    * USER PASSWORD IN LDAP HAS CHANGED\n    */\n    $(document).on('click', '#dialog-ldap-user-change-password-do', function() {\n        // Start by changing the user password and send it by email\n        if ($('#dialog-ldap-user-change-password-old').val() !== \"\" && $('#dialog-ldap-user-change-password-current').val() !== \"\") {\n            // Case where a user is changing his authentication password\n            console.log('Reencryption based upon user auth password changed in LDAP');\n\n            // Show progress\n            $('#dialog-ldap-user-change-password-progress').html('<b><?php echo langHdl('please_wait'); ?></b><i class=\"fa-solid fa-spinner fa-pulse ml-3 text-primary\"></i>');\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n            );\n            \n            // Disable buttons\n            $('#dialog-ldap-user-change-password-do, #dialog-ldap-user-change-password-close').attr('disabled', 'disabled');\n            \n            data = {\n                'user_id': store.get('teampassUser').user_id,\n                'previous_password': $('#dialog-ldap-user-change-password-old').val(),\n                'current_password': $('#dialog-ldap-user-change-password-current').val(),\n            }\n            if (debugJavascript === true) console.log(data);\n\n            // Check user current password\n            // and change the password\n            // and use the password to re-encrypt the privatekey\n            $.post(\n                'sources/main.queries.php', {\n                    type: 'change_user_ldap_auth_password',\n                    type_category: 'action_password',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n\n                        $(\"#dialog-ldap-user-change-password-progress\").html('<?php echo langHdl('fill_in_fields_and_hit_launch'); ?>');\n\n                        // Enable buttons\n                        $('#dialog-ldap-user-change-password-do, #dialog-ldap-user-change-password-close').removeAttr('disabled');\n                    } else {\n                        // SUCCESS\n                        $('#dialog-ldap-user-change-password-close').removeAttr('disabled');\n                        toastr.remove();\n                        toastr.success(\n                            data.message,\n                            '<?php echo langHdl('success'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                        $(\"#dialog-ldap-user-change-password-progress\").html('');\n                    }\n                }\n            );\n        } else {\n            // Show error\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('password_cannot_be_empty'); ?>',\n                '<?php echo langHdl('caution'); ?>', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n        }\n    });\n    $(document).on('click', '#dialog-ldap-user-change-password-close', function() {\n        // HIde\n        $('.content-header, .content').removeClass('hidden');\n\n        // SHow form\n        $('#dialog-ldap-user-change-password, #dialog-ldap-user-change-password-info').addClass('hidden');\n    });\n    // --- END ---\n\n\n    function loadSettings() {\n        return $.post(\n            \"sources/main.queries.php\", {\n                type: \"get_teampass_settings\",\n                type_category: 'action_system',\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                try {\n                    data = prepareExchangedData(\n                        data,\n                        \"decode\",\n                        \"<?php echo $_SESSION['key']; ?>\"\n                    );\n                } catch (e) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('server_answer_error'); ?>',\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true,\n                            positionClass: \"toast-top-right\"\n                        }\n                    );\n                    return false;\n                }\n                if (debugJavascript === true) {\n                    console.log('Loading settings result:');\n                    console.log(data);\n                }\n\n                // Test if JSON object\n                if (typeof data === 'object') {\n                    // Store settings in localstorage\n                    // except sensitive data\n                    var sensitiveData = ['ldap_hosts','ldap_username','ldap_password','ldap_bdn', 'email','bck_script_passkey'];\n\n                    store.remove(\"teampassSettings\");\n\n                    store.update(\n                        'teampassSettings', {},\n                        function(teampassSettings) {\n                            $.each(data, function(key, value) {\n                                const containsKey = sensitiveData.some(element => {\n                                    if (key.includes(element)) {\n                                        return true;\n                                    }\n                                    return false;\n                                });\n\n                                if (containsKey === false) {\n                                    teampassSettings[key] = value;\n                                }\n                            });\n                        }\n                    );\n\n                    // Store some User info\n                    store.update(\n                        'teampassUser', {},\n                        function(teampassUser) {\n                            teampassUser['user_admin'] = <?php echo isset($_SESSION['user_admin']) === true ? (int) $_SESSION['user_admin'] : 0; ?>;\n                            teampassUser['user_id'] = <?php echo isset($_SESSION['user_id']) === true ? (int) $_SESSION['user_id'] : 0; ?>;\n                            teampassUser['user_manager'] = <?php echo isset($_SESSION['user_manager']) === true ? (int) $_SESSION['user_manager'] : 0; ?>;\n                            teampassUser['user_can_manage_all_users'] = <?php echo isset($_SESSION['user_can_manage_all_users']) === true ? (int) $_SESSION['user_can_manage_all_users'] : 0; ?>;\n                            teampassUser['user_read_only'] = <?php echo isset($_SESSION['user_admin']) === true ? (int) $_SESSION['user_read_only'] : 1; ?>;\n                            teampassUser['key'] = '<?php echo isset($_SESSION['key']) === true ? $_SESSION['key'] : 0; ?>';\n                            teampassUser['login'] = \"<?php echo isset($_SESSION['login']) === true ? $_SESSION['login'] : 0; ?>\";\n                            teampassUser['lastname'] = \"<?php echo isset($_SESSION['lastname']) === true ? $_SESSION['lastname'] : 0; ?>\";\n                            teampassUser['name'] = \"<?php echo isset($_SESSION['name']) === true ? $_SESSION['name'] : 0; ?>\";\n                            teampassUser['pskDefinedInDatabase'] = <?php echo isset($_SESSION['user']['encrypted_psk']) === true ? 1 : 0; ?>;\n                            teampassUser['can_create_root_folder'] = <?php echo isset($_SESSION['can_create_root_folder']) === true ? (int) $_SESSION['can_create_root_folder'] : 0; ?>;\n                            teampassUser['pskDefinedInDatabase'] = <?php echo isset($_SESSION['user']['encrypted_psk']) === true ? 1 : 0; ?>;\n                            teampassUser['special'] = '<?php echo isset($_SESSION['user']['special']) === true ? $_SESSION['user']['special'] : 'none'; ?>';\n                        }\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function showExtendSession() {\n        // Prepare modal\n        showModalDialogBox(\n            '#warningModal',\n            '<i class=\"fa-solid fa-clock fa-lg warning mr-2\"></i><?php echo langHdl('index_add_one_hour'); ?>',\n            '<div class=\"form-group\">' +\n            '<label for=\"warningModal-input\" class=\"col-form-label\"><?php echo langHdl('index_session_duration') . ' (' . langHdl('minutes') . ')'; ?>:</label>' +\n            '<input type=\"text\" class=\"form-control\" id=\"warningModal-input\" value=\"<?php echo isset($_SESSION['user']['session_duration']) === true ? (int) $_SESSION['user']['session_duration'] / 60 : 60; ?>\">' +\n            '</div>',\n            '<?php echo langHdl('confirm'); ?>',\n            '<?php echo langHdl('cancel'); ?>'\n        );\n\n        // Actions on modal buttons\n        $(document).on('click', '#warningModalButtonAction', function() {\n            // SHow user\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n            );\n\n            // Perform action\n            $.when(\n                IncreaseSessionTime(\n                    $('#warningModal-input').val()\n                )\n            ).then(function() {\n                toastr.remove();\n                toastr.success(\n                    '<?php echo langHdl('done'); ?>',\n                    '', {\n                        timeOut: 1000\n                    }\n                );\n                $('#warningModal').modal('hide');\n            });\n        });\n    }\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function showPersonalSKDialog() {\n        $('#dialog-request-psk').removeClass('hidden');\n\n        // Hide other\n        $('.content-header, .content').addClass('hidden');\n\n        $('#user_personal_saltkey').focus();\n\n        toastr.remove();\n    }\n\n    /**\n     * Loads the last seen items\n     *\n     * @return void\n     */\n    function refreshListLastSeenItems() {\n        $.post(\n            \"sources/main.queries.php\", {\n                type: 'refresh_list_items_seen',\n                type_category: 'action_user',\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                try {\n                    data = $.parseJSON(data)\n                } catch (e) {\n                    return false;\n                }\n                if (debugJavascript === true) {\n                    console.log('Refresh last item seen result');\n                    console.log(data);\n                }\n                //check if format error\n                if (data.error === '') {\n                    if (data.html_json === null || data.html_json === '') {\n                        $('#index-last-pwds').html('<li><?php echo langHdl('none'); ?></li>');\n                    } else {\n                        // Prepare HTML\n                        var html_list = '';\n                        $.each(data.html_json, function(i, value) {\n                            html_list += '<li onclick=\"showItemCard($(this).closest(\\'li\\'))\" class=\"pointer\" data-item-edition=\"0\" data-item-id=\"' + value.id + '\" data-item-sk=\"' + value.perso + '\" data-item-expired=\"0\" data-item-restricted=\"' + value.restricted + '\" data-item-display=\"1\" data-item-open-edit=\"0\" data-item-reload=\"0\" data-item-tree-id=\"' + value.tree_id + '\" data-is-search-result=\"0\">' +\n                                '<i class=\"fa fa-caret-right mr-2\"></i>' + value.label + '</li>';\n                        });\n                        $('#index-last-pwds').html(html_list);\n                    }\n\n                    // show notification\n                    if (data.existing_suggestions !== 0) {\n                        blink('#menu_button_suggestion', -1, 500, 'ui-state-error');\n                    }\n                } else {\n                    toastr.remove();\n                    toastr.error(\n                        data.error,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Show an item\n     *\n     * @return void\n     */\n    function showItemCard(itemDefinition) {\n        // Show circle-notch\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n        );\n\n        if (window.location.href.indexOf('page=items') === -1) {\n            location.replace('<?php echo $SETTINGS['cpassman_url']; ?>/index.php?page=items&group=' + itemDefinition.data().itemTreeId + '&id=' + itemDefinition.data().itemId);\n        } else {\n            $('#items_list').html('<ul class=\"liste_items\" id=\"full_items_list\"></ul>');\n            Details(itemDefinition, 'show');\n            if (itemDefinition.data().itemTreeId !== $('#open_folder').val()) {\n                ListerItems(itemDefinition.data().itemTreeId, '', 0);\n            }\n\n            // Hide sidebar-mini\n            $('body')\n                .removeClass('control-sidebar-slide-open');\n        }\n    }\n\n    /**\n     * Open defect report page\n     *\n     * @return void\n     */\n    function generateBugReport() {\n        $('#dialog-bug-report-text').html('');\n        $('#dialog-bug-report').removeClass('hidden');\n\n        // Scroll to top\n        $(window).scrollTop(0);\n\n        var data = {\n            'browser_name': platform.name,\n            'browser_version': platform.version,\n            'os': platform.os.family,\n            'os_archi': platform.os.architecture,\n            'current_page': window.location.href.substring(window.location.href.lastIndexOf(\"/\")+1),\n        }\n        \n        $.post(\n            \"sources/main.queries.php\", {\n                type: 'generate_bug_report',\n                type_category: 'action_system',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                // Show data\n                $('#dialog-bug-report-text').html(data.html);\n\n                // Open Github\n                $('#dialog-bug-report-github-button').click(function() {\n                    window.open('https://github.com/nilsteampassnet/TeamPass/issues/new', '_blank');\n                    return false;\n                });\n            }\n        );\n    }\n\n    // This permits to manage the column width of tree/items\n    $(document).on('click', '.columns-position', function() {\n        var colLeft = $('#folders-tree-card').find('.column-left'),\n            colRight = $('#folders-tree-card').find('.column-right'),\n            counterLeft = $(colLeft).attr(\"class\").match(/col-md-[\\w-]*\\b/)[0].split('-')[2],\n            counterRight = $(colRight).attr(\"class\").match(/col-md-[\\w-]*\\b/)[0].split('-')[2];\n\n        // Toogle class\n        if ($('#folders-tree-card').hasClass('hidden') === false) {\n            if ($(this).hasClass('tree-decrease') === true && counterRight < 9) {\n                $(colLeft).toggleClass('col-md-' + counterLeft + ' col-md-' + (parseInt(counterLeft) - 1));\n                $(colRight).toggleClass('col-md-' + counterRight + ' col-md-' + (parseInt(counterRight) + 1));\n            } else if ($(this).hasClass('tree-increase') === true && counterLeft < 9) {\n                $(colLeft).toggleClass('col-md-' + counterLeft + ' col-md-' + (parseInt(counterLeft) + 1));\n                $(colRight).toggleClass('col-md-' + counterRight + ' col-md-' + (parseInt(counterRight) - 1));\n            }\n        }\n    })\n\n    $(function() {\n        // In case that session was expired and login form was reloaded\n        // Force the launchIdentify as if the user has clicked the button\n        if ($(\"#auto_log\").length > 0) {\n            $(\"#but_identify_user\").click();\n        }\n    });\n\n    // Prevent usage of browser back button\n    history.pushState(null, null, location.href);\n    window.onpopstate = function () {\n        const queryString = window.location.search\n        const urlParams = new URLSearchParams(queryString);\n        if (urlParams.get('page') === 'items') {\n            // go back to list\n            // Play with show and hide classes\n            $('.form-item, .form-item-action, .form-folder-action, .item-details-card, .columns-position, #item-details-card-categories, #form-item-upload-pickfilesList, #card-item-expired')\n                .addClass('hidden');\n            $('#folders-tree-card').removeClass('hidden');\n\n            history.go(1);\n        }\n    };\n\n    /**\n     * \n     * @param {integer} duration\n     * \n     */\n    function clearClipboardTimeout(duration) {\n        // Wait for duration\n        $(this).delay(duration * 1000).queue(function() {\n            navigator.clipboard.writeText(\"Cleared by Teampass\").then(function() {\n                // clipboard successfully set\n            }, function() {\n                // clipboard write failed\n            });\n\n            $(this).dequeue();\n        });\n    }    \n    \n    /**\n     * Perform call to get progress status\n     * \n     * @param {integer} userId\n     */\n    function getGenerateKeysProgress(userId) {\n        var data = {\n            'user_id': userId,\n        };\n\n        $.post(\n            \"sources/users.queries.php\", {\n                type: \"get_generate_keys_progress\",\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) {\n                    console.info('Process generation keys status:');\n                    console.log(data);\n                }\n\n                if (data.error === false) {\n                    // Show progress\n                    $('#user_not_ready_progress')\n                        .text('(' + data.status + ')')\n                        .addClass('ml-1');\n                    $('#user_not_ready').removeClass('hidden');\n\n                    if (data.status !== 'finished') {\n                        // If not finished, then run again after 10 seconds\n                        setTimeout(\n                            getGenerateKeysProgress,\n                            10000,\n                            store.get('teampassUser').user_id\n                        );\n                    } else {\n                        // Progress is finished\n                        // We need to finalize user public/private keys\n                        \n                        $('#user_not_ready').addClass('hidden');\n                        $(\"#warningModalButtonAction\").removeClass('hidden');\n                        $('#user_not_ready_progress').html('');\n                        toastr.success(\n                            data.message,\n                            '<?php echo langHdl('done'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    }\n                }\n            }\n        );\n    }\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      logout.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nrequire_once '../../sources/SecureHandler.php';\nsession_name('teampass_session');\nsession_start();\n\n// Load superglobal library\nrequire_once '../../includes/libraries/protect/SuperGlobal/SuperGlobal.php';\n$superGlobal = new protect\\SuperGlobal\\SuperGlobal();\n$get = [];\n$get['user_id'] = $superGlobal->get('user_id', 'GET');\n\n// Update table by deleting ID\nif (isset($_SESSION['user_id']) === true && empty($_SESSION['user_id']) === false) {\n    $user_id = $_SESSION['user_id'];\n} elseif (isset($get['token']) === true && empty($get['token']) === false) {\n    $user_token = $get['token'];\n} else {\n    $user_id = '';\n    $user_token = '';\n}\n\nif (empty($user_id) === false && isset($_SESSION['CPM']) === true) {\n    // connect to the server\n    include_once '../../sources/main.functions.php';\n    include_once '../../includes/config/settings.php';\n    include_once '../../includes/libraries/Database/Meekrodb/db.class.php';\n    DB::$host = DB_HOST;\n    DB::$user = DB_USER;\n    DB::$password = defuseReturnDecrypted(DB_PASSWD, $SETTINGS);\n    DB::$dbName = DB_NAME;\n    DB::$port = DB_PORT;\n    DB::$encoding = DB_ENCODING;\n    DB::$ssl = DB_SSL;\n    DB::$connect_options = DB_CONNECT_OPTIONS;\n    // clear in db\n    DB::update(\n        DB_PREFIX.'users',\n        [\n            'key_tempo' => '',\n            'timestamp' => '',\n            'session_end' => '',\n        ],\n        'id=%i || key_tempo=%s',\n        $user_id,\n        isset($user_token) === true ? $user_token : ''\n    );\n    //Log into DB the user's disconnection\n    if (isset($SETTINGS['log_connections']) === true\n        && (int) $SETTINGS['log_connections'] === 1\n    ) {\n        include_once '../../sources/main.functions.php';\n        logEvents($SETTINGS, 'user_connection', 'disconnect', (string) $user_id, isset($_SESSION['login']) === true ? $_SESSION['login'] : '');\n    }\n}\n\n// erase session table\nsession_destroy();\n$_SESSION = [];\nrequire_once '../../sources/SecureHandler.php';\nsession_name('teampass_session');\nsession_start();\n$_SESSION['CPM'] = 1;\necho '\n    <script type=\"text/javascript\" src=\"../../plugins/store.js/dist/store.everything.min.js\"></script>\n    <script language=\"javascript\" type=\"text/javascript\">\n    <!--\n        // Clear localstorage\n        store.remove(\"teampassApplication\");\n        store.remove(\"teampassSettings\");\n        store.remove(\"teampassUser\");\n        store.remove(\"teampassItem\");\n        sessionStorage.clear();\n        \n        setTimeout(function() {\n            document.location.href=\"../../index.php\"\n        }, 1);\n    -->\n    </script>';\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      index.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nheader('X-XSS-Protection: 1; mode=block');\nheader('X-Frame-Options: SameOrigin');\n// **PREVENTING SESSION HIJACKING**\n// Prevents javascript XSS attacks aimed to steal the session ID\n//ini_set('session.cookie_httponly', 1);\n// **PREVENTING SESSION FIXATION**\n// Session ID cannot be passed through URLs\n//ini_set('session.use_only_cookies', 1);\n// Uses a secure connection (HTTPS) if possible\n//ini_set('session.cookie_secure', 0);\n//ini_set('session.cookie_samesite', 'Lax');\n// Before we start processing, we should abort no install is present\nif (file_exists(__DIR__.'/includes/config/settings.php') === false) {\n    // This should never happen, but in case it does\n    // this means if headers are sent, redirect will fallback to JS\n    if (headers_sent()) {\n        echo '<script language=\"javascript\" type=\"text/javascript\">document.location.replace(\"install/install.php\");</script>';\n    } else {\n        header('Location: install/install.php');\n    }\n    // Now either way, we should stop processing further\n    exit;\n}\n\n// initialise CSRFGuard library\nrequire_once __DIR__.'/includes/libraries/csrfp/libs/csrf/csrfprotector.php';\ncsrfProtector::init();\nsession_id();\n\n// Load config\nif (file_exists(__DIR__.'/includes/config/tp.config.php') === true) {\n    include_once __DIR__.'/includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n// initialize session\nif (isset($SETTINGS['cpassman_dir']) === false || $SETTINGS['cpassman_dir'] === '') {\n    if (isset($SETTINGS['cpassman_dir']) === false) {\n        $SETTINGS = [];\n    }\n    $SETTINGS['cpassman_dir'] = __DIR__;\n}\n\n// Include files\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/config/settings.php';\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/config/include.php';\n// Quick major version check -> upgrade needed?\nif (isset($SETTINGS['teampass_version']) === true && version_compare(TP_VERSION, $SETTINGS['teampass_version']) > 0) {\n    // Perform redirection\n    if (headers_sent()) {\n        echo '<script language=\"javascript\" type=\"text/javascript\">document.location.replace(\"install/install.php\");</script>';\n    } else {\n        header('Location: install/upgrade.php');\n    }\n    // No other way, we should stop processing further\n    exit;\n}\n\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/libraries/protect/SuperGlobal/SuperGlobal.php';\n$superGlobal = new protect\\SuperGlobal\\SuperGlobal();\n\nif (isset($SETTINGS['cpassman_url']) === false || $SETTINGS['cpassman_url'] === '') {\n    $SETTINGS['cpassman_url'] = $superGlobal->get('REQUEST_URI', 'SERVER');\n}\n\n// Include files\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/SplClassLoader.php';\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n// Open MYSQL database connection\nrequire_once './includes/libraries/Database/Meekrodb/db.class.php';\nif (defined('DB_PASSWD_CLEAR') === false) {\n    define('DB_PASSWD_CLEAR', defuseReturnDecrypted(DB_PASSWD, $SETTINGS));\n}\nDB::$host = DB_HOST;\nDB::$user = DB_USER;\nDB::$password = DB_PASSWD_CLEAR;\nDB::$dbName = DB_NAME;\nDB::$port = DB_PORT;\nDB::$encoding = DB_ENCODING;\nDB::$ssl = DB_SSL;\nDB::$connect_options = DB_CONNECT_OPTIONS;\n// Load Core library\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/core.php';\n// Prepare POST variables\n$post_language = filter_input(INPUT_POST, 'language', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n// Prepare superGlobal variables\n$session_user_language = $superGlobal->get('user_language', 'SESSION', 'user');\n$session_user_id = $superGlobal->get('user_id', 'SESSION');\n$session_user_admin = (int) $superGlobal->get('user_admin', 'SESSION');\n$session_user_human_resources = (int) $superGlobal->get('user_can_manage_all_users', 'SESSION');\n$session_name = $superGlobal->get('name', 'SESSION');\n$session_lastname = $superGlobal->get('lastname', 'SESSION');\n$session_user_manager = (int) $superGlobal->get('user_manager', 'SESSION');\n$session_validite_pw = $superGlobal->get('validite_pw', 'SESSION');\n$session_initial_url = $superGlobal->get('initial_url', 'SESSION');\n$session_nb_users_online = $superGlobal->get('nb_users_online', 'SESSION');\n$session_auth_type = $superGlobal->get('auth_type', 'SESSION', 'user');\n\n$server = [];\n$server['request_uri'] = (string) $superGlobal->get('REQUEST_URI', 'SERVER');\n$server['request_time'] = (int) $superGlobal->get('REQUEST_TIME', 'SERVER');\n\n$get = [];\n$get['page'] = $superGlobal->get('page', 'GET') === null ? '' : $superGlobal->get('page', 'GET');\n$get['language'] = $superGlobal->get('language', 'GET') === null ? '' : $superGlobal->get('language', 'GET');\n$get['otv'] = $superGlobal->get('otv', 'GET') === null ? '' : $superGlobal->get('otv', 'GET');\n\n/* DEFINE WHAT LANGUAGE TO USE */\nif ($session_user_id === null && $post_language === null && $session_user_language === null) {\n    //get default language\n    $dataLanguage = DB::queryFirstRow(\n        'SELECT m.valeur AS valeur, l.flag AS flag\n        FROM ' . prefixTable('misc') . ' AS m\n        INNER JOIN ' . prefixTable('languages') . ' AS l ON (m.valeur = l.name)\n        WHERE m.type=%s_type AND m.intitule=%s_intitule',\n        [\n            'type' => 'admin',\n            'intitule' => 'default_language',\n        ]\n    );\n    if (empty($dataLanguage['valeur'])) {\n        $superGlobal->put('user_language', 'english', 'SESSION', 'user');\n        $superGlobal->put('user_language_flag', 'us.png', 'SESSION');\n        $session_user_language = 'english';\n    } else {\n        $superGlobal->put('user_language', $dataLanguage['valeur'], 'SESSION', 'user');\n        $superGlobal->put('user_language_flag', $dataLanguage['flag'], 'SESSION');\n        $session_user_language = $dataLanguage['valeur'];\n    }\n} elseif (isset($SETTINGS['default_language']) === true && $session_user_language === null) {\n    $superGlobal->put('user_language', $SETTINGS['default_language'], 'SESSION', 'user');\n    $session_user_language = $SETTINGS['default_language'];\n} elseif ($post_language !== null) {\n    $superGlobal->put('user_language', $post_language, 'SESSION', 'user');\n    $session_user_language = $post_language;\n} elseif ($session_user_language === null || empty($session_user_language) === true) {\n    if ($post_language !== null) {\n        $superGlobal->put('user_language', $post_language, 'SESSION', 'user');\n        $session_user_language = $post_language;\n    } elseif ($session_user_language !== null) {\n        $superGlobal->put('user_language', $SETTINGS['default_language'], 'SESSION', 'user');\n        $session_user_language = $SETTINGS['default_language'];\n    }\n}\n\nif (isset($SETTINGS['cpassman_dir']) === false || $SETTINGS['cpassman_dir'] === '') {\n    $SETTINGS['cpassman_dir'] = __DIR__;\n    $SETTINGS['cpassman_url'] = (string) $server['request_uri'];\n}\n\n// Load user languages files\nif (file_exists($SETTINGS['cpassman_dir'] . '/includes/language/' . $session_user_language . '.php') === true) {\n    $_SESSION['teampass']['lang'] = include $SETTINGS['cpassman_dir'] . '/includes/language/' . $session_user_language . '.php';\n} else {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n}\n\n// Some template adjust\nif (array_key_exists($get['page'], $mngPages) === true) {\n    $menuAdmin = true;\n} else {\n    $menuAdmin = false;\n}\n\n// Some template adjust\nif (array_key_exists($get['page'], $utilitiesPages) === true) {\n    $menuUtilities = true;\n} else {\n    $menuUtilities = false;\n}\n\n?>\n<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>\n\n<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'>\n\n<head>\n    <meta http-equiv='Content-Type' content='text/html;charset=utf-8' />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\" />\n    <title>Teampass</title>\n    <script type='text/javascript'>\n        //<![CDATA[\n        if (window.location.href.indexOf('page=') === -1 &&\n            (window.location.href.indexOf('otv=') === -1 &&\n                window.location.href.indexOf('action=') === -1)\n        ) {\n            if (window.location.href.indexOf('session_over=true') !== -1) {\n                location.replace('./includes/core/logout.php');\n            }\n        }\n        //]]>\n    </script>\n\n    <!-- IonIcons -->\n    <link rel=\"stylesheet\" href=\"includes/css/ionicons.min.css\">\n    <!-- Theme style -->\n    <link rel=\"stylesheet\" href=\"plugins/adminlte/css/adminlte.min.css\">\n    <link rel=\"stylesheet\" href=\"plugins/pace-progress/themes/corner-indicator.css\" type=\"text/css\" />\n    <link rel=\"stylesheet\" href=\"plugins/select2/css/select2.min.css\" type=\"text/css\" />\n    <link rel=\"stylesheet\" href=\"plugins/select2/css/select2-bootstrap.min.css\" type=\"text/css\" />\n    <!-- Theme style -->\n    <link rel=\"stylesheet\" href=\"includes/css/teampass.css\">\n    <!-- Google Font: Source Sans Pro -->\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"includes/fonts/fonts.css\">\n    <!-- Altertify -->\n    <link rel=\"stylesheet\" href=\"plugins/alertifyjs/css/alertify.min.css\" />\n    <link rel=\"stylesheet\" href=\"plugins/alertifyjs/css/themes/bootstrap.min.css\" />\n    <!-- Toastr -->\n    <link rel=\"stylesheet\" href=\"plugins/toastr/toastr.min.css\" />\n    <!-- favicon -->\n    <link rel=\"shortcut icon\" type=\"image/png\" href=\"<?php echo $SETTINGS['favicon'];?>\"/>\n</head>\n\n\n\n\n<?php\n\n// display an item in the context of OTV link\nif (($session_validite_pw === null\n    || empty($session_validite_pw) === true\n    || empty($session_user_id) === true)\n    && empty($get['otv']) === false)\n    {\n    include './includes/core/otv.php';\n} elseif (\n    $session_validite_pw !== null\n    && $session_validite_pw === true\n    && empty($get['page']) === false\n    && empty($session_user_id) === false\n) {\n    ?>\n\n    <body class=\"hold-transition sidebar-mini layout-navbar-fixed layout-fixed\">\n        <div class=\"wrapper\">\n\n            <!-- Navbar -->\n            <nav class=\"main-header navbar navbar-expand navbar-white navbar-light border-bottom\">\n                <!-- User encryption still ongoing -->\n                <div id=\"user_not_ready\" class=\"alert alert-warning hidden pointer p-2 mt-2\" style=\"position:absolute; left:200px;\">\n                    <span class=\"align-middle infotip ml-2\" title=\"<?php echo langHdl('keys_encryption_not_ready'); ?>\"><?php echo langHdl('account_not_ready'); ?><span id=\"user_not_ready_progress\"></span><i class=\"fa-solid fa-hourglass-half fa-beat-fade mr-2 ml-2\"></i></span>\n                </div>\n\n                <!-- Left navbar links -->\n                <ul class=\"navbar-nav\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" data-widget=\"pushmenu\" href=\"#\"><i class=\"fa-solid fa-bars\"></i></a>\n                    </li>\n                    <?php\n                        if ($get['page'] === 'items') {\n                            ?>\n                        <li class=\"nav-item d-none d-sm-inline-block\">\n                            <a class=\"nav-link\" href=\"#\">\n                                <i class=\"far fa-arrow-alt-circle-right columns-position tree-increase infotip\" title=\"<?php echo langHdl('move_right_columns_separator'); ?>\"></i>\n                            </a>\n                        </li>\n                        <li class=\"nav-item d-none d-sm-inline-block\">\n                            <a class=\"nav-link\" href=\"#\">\n                                <i class=\"far fa-arrow-alt-circle-left columns-position tree-decrease infotip\" title=\"<?php echo langHdl('move_left_columns_separator'); ?>\"></i>\n                            </a>\n                        </li>\n                    <?php\n                        } ?>\n                </ul>\n\n                <!-- Right navbar links -->\n                <ul class=\"navbar-nav ml-auto\">\n                    <!-- Messages Dropdown Menu -->\n                    <li class=\"nav-item dropdown\">\n                        <div class=\"dropdown show\">\n                            <a class=\"btn btn-primary dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\">\n                                <?php\n                                    echo $session_name . '&nbsp;' . $session_lastname; ?>\n                            </a>\n\n                            <div class=\"dropdown-menu dropdown-menu-right\">\n                                <a class=\"dropdown-item user-menu\" href=\"#\" data-name=\"increase_session\">\n                                    <i class=\"far fa-clock fa-fw mr-2\"></i><?php echo langHdl('index_add_one_hour'); ?></a>\n                                <div class=\"dropdown-divider\"></div>\n                                <a class=\"dropdown-item user-menu\" href=\"#\" data-name=\"profile\">\n                                    <i class=\"fa-solid fa-user-circle fa-fw mr-2\"></i><?php echo langHdl('my_profile'); ?>\n                                </a>\n                                <?php\n                                    if (empty($session_auth_type) === false && $session_auth_type !== 'ldap') {\n                                        ?>\n                                    <a class=\"dropdown-item user-menu\" href=\"#\" data-name=\"password-change\">\n                                        <i class=\"fa-solid fa-lock fa-fw mr-2\"></i><?php echo langHdl('index_change_pw'); ?>\n                                    </a>\n                                <?php\n                                    } elseif ($session_auth_type === 'ldap') {\n                                        ?>\n                                    <a class=\"dropdown-item user-menu\" href=\"#\" data-name=\"sync-new-ldap-password\">\n                                        <i class=\"fa-solid fa-key fa-fw mr-2\"></i><?php echo langHdl('sync_new_ldap_password'); ?>\n                                    </a>\n                                <?php\n                                    } ?>\n                                <a class=\"dropdown-item user-menu<?php echo (int) $session_user_admin === 1 ? ' hidden' : '';?>\" href=\"#\" data-name=\"generate-new_keys\">\n                                    <i class=\"fa-solid fa-spray-can-sparkles fa-fw mr-2\"></i><?php echo langHdl('generate_new_keys'); ?>\n                                </a>\n                                <div class=\"dropdown-divider\"></div>\n                                <a class=\"dropdown-item user-menu\" href=\"#\" data-name=\"logout\">\n                                    <i class=\"fa-solid fa-sign-out-alt fa-fw mr-2\"></i><?php echo langHdl('disconnect'); ?>\n                                </a>\n                            </div>\n                        </div>\n                    </li>\n                    <li>\n                        <span class=\"align-middle infotip ml-2 text-info\" title=\"<?php echo langHdl('index_expiration_in'); ?>\" id=\"countdown\"></span>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" data-widget=\"control-sidebar\" data-slide=\"true\" href=\"#\" id=\"controlsidebar\"><i class=\"fa-solid fa-th-large\"></i></a>\n                    </li>\n                </ul>\n            </nav>\n            <!-- /.navbar -->\n\n            <!-- Main Sidebar Container -->\n            <aside class=\"main-sidebar sidebar-dark-primary elevation-4\">\n                <!-- Brand Logo -->\n                <a href=\"<?php echo $SETTINGS['cpassman_url'] . '/index.php?page=' . ((int) $session_user_admin === 1 ? 'admin' : 'items'); ?>\" class=\"brand-link\">\n                    <img src=\"includes/images/teampass-logo2-home.png\" alt=\"Teampass Logo\" class=\"brand-image\">\n                    <span class=\"brand-text font-weight-light\"><?php echo TP_TOOL_NAME; ?></span>\n                </a>\n\n                <!-- Sidebar -->\n                <div class=\"sidebar\">\n                    <!-- Sidebar Menu -->\n                    <nav class=\"mt-2\" style=\"margin-bottom:40px;\">\n                        <ul class=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\n                            <?php\n                                if ($session_user_admin === 0) {\n                                    // ITEMS & SEARCH\n                                    echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"items\" class=\"nav-link', $get['page'] === 'items' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-key\"></i>\n                        <p>\n                            ' . langHdl('pw') . '\n                        </p>\n                        </a>\n                    </li>';\n                                }\n\n    // IMPORT menu\n    if (isset($SETTINGS['allow_import']) === true && (int) $SETTINGS['allow_import'] === 1&& $session_user_admin === 0) {\n        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"import\" class=\"nav-link', $get['page'] === 'import' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-file-import\"></i>\n                        <p>\n                            ' . langHdl('import') . '\n                        </p>\n                        </a>\n                    </li>';\n    }\n    // EXPORT menu\n    if (\n                                    isset($SETTINGS['allow_print']) === true && (int) $SETTINGS['allow_print'] === 1\n                                    && isset($SETTINGS['roles_allowed_to_print_select']) === true\n                                    && empty($SETTINGS['roles_allowed_to_print_select']) === false\n                                    && count(array_intersect(\n                                        explode(';', $superGlobal->get('fonction_id', 'SESSION')),\n                                        explode(',', str_replace(['\"', '[', ']'], '', $SETTINGS['roles_allowed_to_print_select']))\n                                    )) > 0\n                                    && (int) $session_user_admin === 0\n                                ) {\n        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"export\" class=\"nav-link', $get['page'] === 'export' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-file-export\"></i>\n                        <p>\n                            ' . langHdl('export') . '\n                        </p>\n                        </a>\n                    </li>';\n    }\n\n    /*\n    // OFFLINE MODE menu\n    if (isset($SETTINGS['settings_offline_mode']) === true && (int) $SETTINGS['settings_offline_mode'] === 1) {\n        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"offline\" class=\"nav-link', $get['page'] === 'offline' ? ' active' : '' ,'\">\n                        <i class=\"nav-icon fa-solid fa-plug\"></i>\n                        <p>\n                            '.langHdl('offline').'\n                        </p>\n                        </a>\n                    </li>';\n    }\n    */\n\n    if ($session_user_admin === 0) {\n        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"search\" class=\"nav-link', $get['page'] === 'search' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-search\"></i>\n                        <p>\n                            ' . langHdl('find') . '\n                        </p>\n                        </a>\n                    </li>';\n    }\n\n    // Favourites menu\n    if (\n                                    isset($SETTINGS['enable_favourites']) === true && (int) $SETTINGS['enable_favourites'] === 1\n                                    && (int) $session_user_admin === 0\n                                ) {\n        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"favourites\" class=\"nav-link', $get['page'] === 'admin' ? ' favourites' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-star\"></i>\n                        <p>\n                            ' . langHdl('favorites') . '\n                        </p>\n                        </a>\n                    </li>';\n    }\n    /*\n        // KB menu\n        if (isset($SETTINGS['enable_kb']) === true && $SETTINGS['enable_kb'] === '1'\n        ) {\n            echo '\n                        <li class=\"nav-item\">\n                            <a href=\"#\" data-name=\"kb\" class=\"nav-link', $get['page'] === 'kb' ? ' active' : '' ,'\">\n                            <i class=\"nav-icon fa-solid fa-map-signs\"></i>\n                            <p>\n    '.langHdl('kb_menu').'\n                            </p>\n                            </a>\n                        </li>';\n        }\n    */\n    // SUGGESTION menu\n    if (\n                                    isset($SETTINGS['enable_suggestion']) && (int) $SETTINGS['enable_suggestion'] === 1\n                                    && $session_user_manager === 1\n                                ) {\n        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"suggestion\" class=\"nav-link', $get['page'] === 'suggestion' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-lightbulb\"></i>\n                        <p>\n                            ' . langHdl('suggestion_menu') . '\n                        </p>\n                        </a>\n                    </li>';\n    }\n\n    // Admin menu\n    if ($session_user_admin === 1) {\n        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"admin\" class=\"nav-link', $get['page'] === 'admin' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-info\"></i>\n                        <p>\n                            ' . langHdl('admin_main') . '\n                        </p>\n                        </a>\n                    </li>\n                    <li class=\"nav-item has-treeview', $menuAdmin === true ? ' menu-open' : '', '\">\n                        <a href=\"#\" class=\"nav-link\">\n                            <i class=\"nav-icon fa-solid fa-wrench\"></i>\n                            <p>\n                                ' . langHdl('admin_settings') . '\n                                <i class=\"fa-solid fa-angle-left right\"></i>\n                            </p>\n                        </a>\n                        <ul class=\"nav-item nav-treeview\">\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"options\" class=\"nav-link', $get['page'] === 'options' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-check-double nav-icon\"></i>\n                                    <p>' . langHdl('options') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"2fa\" class=\"nav-link', $get['page'] === '2fa' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-qrcode nav-icon\"></i>\n                                    <p>' . langHdl('mfa_short') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"api\" class=\"nav-link', $get['page'] === 'api' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-cubes nav-icon\"></i>\n                                    <p>' . langHdl('api') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"backups\" class=\"nav-link', $get['page'] === 'backups' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-database nav-icon\"></i>\n                                    <p>' . langHdl('backups') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"emails\" class=\"nav-link', $get['page'] === 'emails' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-envelope nav-icon\"></i>\n                                    <p>' . langHdl('emails') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"fields\" class=\"nav-link', $get['page'] === 'fields' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-keyboard nav-icon\"></i>\n                                    <p>' . langHdl('fields') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"ldap\" class=\"nav-link', $get['page'] === 'ldap' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-id-card nav-icon\"></i>\n                                    <p>' . langHdl('ldap') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"uploads\" class=\"nav-link', $get['page'] === 'uploads' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-file-upload nav-icon\"></i>\n                                    <p>' . langHdl('uploads') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"statistics\" class=\"nav-link', $get['page'] === 'statistics' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-chart-bar nav-icon\"></i>\n                                    <p>' . langHdl('statistics') . '</p>\n                                </a>\n                            </li>\n                        </ul>\n                    </li>';\n\n                    if (isset($SETTINGS['enable_tasks_manager']) && (int) $SETTINGS['enable_tasks_manager'] === 1) {\n                        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"tasks\" class=\"nav-link', $get['page'] === 'tasks' ? ' active' : '', '\">\n                        <i class=\"fa-solid fa-tasks nav-icon\"></i>\n                        <p>' . langHdl('tasks') . '</p>\n                        </a>\n                    </li>';\n                    }\n    }\n\n    if (\n                                    $session_user_admin === 1\n                                    || $session_user_manager === 1\n                                    || $session_user_human_resources === 1\n                                ) {\n        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"folders\" class=\"nav-link', $get['page'] === 'folders' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-folder-open\"></i>\n                        <p>\n                            ' . langHdl('folders') . '\n                        </p>\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"roles\" class=\"nav-link', $get['page'] === 'roles' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-graduation-cap\"></i>\n                        <p>\n                            ' . langHdl('roles') . '\n                        </p>\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"users\" class=\"nav-link', $get['page'] === 'users' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-users\"></i>\n                        <p>\n                            ' . langHdl('users') . '\n                        </p>\n                        </a>\n                    </li>\n                    <li class=\"nav-item has-treeview', $menuUtilities === true ? ' menu-open' : '', '\">\n                        <a href=\"#\" class=\"nav-link\">\n                        <i class=\"nav-icon fa-solid fa-cubes\"></i>\n                        <p>' . langHdl('admin_views') . '<i class=\"fa-solid fa-angle-left right\"></i></p>\n                        </a>\n                        <ul class=\"nav nav-treeview\">\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"utilities.renewal\" class=\"nav-link', $get['page'] === 'utilities.renewal' ? ' active' : '', '\">\n                                <i class=\"far fa-calendar-alt nav-icon\"></i>\n                                <p>' . langHdl('renewal') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"utilities.deletion\" class=\"nav-link', $get['page'] === 'utilities.deletion' ? ' active' : '', '\">\n                                <i class=\"fa-solid fa-trash-alt nav-icon\"></i>\n                                <p>' . langHdl('deletion') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"utilities.logs\" class=\"nav-link', $get['page'] === 'utilities.logs' ? ' active' : '', '\">\n                                <i class=\"fa-solid fa-history nav-icon\"></i>\n                                <p>' . langHdl('logs') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"utilities.database\" class=\"nav-link', $get['page'] === 'utilities.database' ? ' active' : '', '\">\n                                <i class=\"fa-solid fa-database nav-icon\"></i>\n                                <p>' . langHdl('database') . '</p>\n                                </a>\n                            </li>\n                        </ul>\n                    </li>';\n    } ?>\n                        </ul>\n                    </nav>\n                    <!-- /.sidebar-menu -->\n                <div class=\"menu-footer\">\n                    <div class=\"\" id=\"sidebar-footer\">\n                        <i class=\"fa-solid fa-clock-o mr-2 infotip text-info pointer\" title=\"<?php echo langHdl('server_time') . ' ' .\n                            date($SETTINGS['date_format'], (int) $server['request_time']) . ' - ' .\n                            date($SETTINGS['time_format'], (int) $server['request_time']); ?>\"></i>\n                        <i class=\"fa-solid fa-users mr-2 infotip text-info pointer\" title=\"<?php echo $session_nb_users_online . ' ' . langHdl('users_online'); ?>\"></i>\n                        <a href=\"<?php echo DOCUMENTATION_URL; ?>\" target=\"_blank\" class=\"text-info\"><i class=\"fa-solid fa-book mr-2 infotip\" title=\"<?php echo langHdl('documentation_canal'); ?>\"></i></a>\n                        <a href=\"<?php echo HELP_URL; ?>\" target=\"_blank\" class=\"text-info\"><i class=\"fa-solid fa-life-ring mr-2 infotip\" title=\"<?php echo langHdl('admin_help'); ?>\"></i></a>\n                        <i class=\"fa-solid fa-bug infotip pointer text-info\" title=\"<?php echo langHdl('bugs_page'); ?>\" onclick=\"generateBugReport()\"></i>\n                    </div>\n                </div>\n                </div>\n                <!-- /.sidebar -->\n            </aside>\n\n            <!-- Content Wrapper. Contains page content -->\n            <div class=\"content-wrapper\">\n\n                <!-- DEFECT REPORT -->\n                <div class=\"card card-danger m-2 hidden\" id=\"dialog-bug-report\">\n                    <div class=\"card-header\">\n                        <h3 class=\"card-title\">\n                            <i class=\"fa-solid fa-bug mr-2\"></i>\n                            <?php echo langHdl('defect_report'); ?>\n                        </h3>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-12\">\n                                <div class=\"mb-2 alert alert-info\">\n                                    <i class=\"icon fa-solid fa-info mr-2\"></i>\n                                    <?php echo langHdl('bug_report_to_github'); ?>\n                                </div>\n                                <textarea class=\"form-control\" style=\"min-height:300px;\" id=\"dialog-bug-report-text\" placeholder=\"<?php echo langHdl('please_wait_while_loading'); ?>\"></textarea>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-primary mr-2 clipboard-copy\" data-clipboard-text=\"dialog-bug-report-text\" id=\"dialog-bug-report-select-button\"><?php echo langHdl('copy_to_clipboard'); ?></button>\n                        <button class=\"btn btn-primary\" id=\"dialog-bug-report-github-button\"><?php echo langHdl('open_bug_report_in_github'); ?></button>\n                        <button class=\"btn btn-default float-right close-element\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n                <!-- /.DEFECT REPORT -->\n\n\n                <!-- USER CHANGE AUTH PASSWORD -->\n                <div class=\"card card-warning m-3 hidden\" id=\"dialog-user-change-password\">\n                    <div class=\"card-header\">\n                        <h3 class=\"card-title\">\n                            <i class=\"fa-solid fa-bullhorn mr-2\"></i>\n                            <?php echo langHdl('your_attention_is_required'); ?>\n                        </h3>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-12\">\n                                <div class=\"mb-5 alert alert-info hidden\" id=\"dialog-user-change-password-info\">\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('provide_your_current_password'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"profile-current-password\">\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('index_new_pw'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"profile-password\">\n                                    <div class=\"input-group-append\" style=\"margin: 0px;\">\n                                        <span class=\"input-group-text\" id=\"profile-password-strength\"></span>\n                                        <input type=\"hidden\" id=\"profile-password-complex\" />\n                                    </div>\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('index_change_pw_confirmation'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"profile-password-confirm\">\n                                </div>\n                                <div class=\"form-control mt-3 font-weight-light grey\" id=\"dialog-user-change-password-progress\">\n                                    <?php echo langHdl('provide_current_psk_and_click_launch'); ?>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-primary\" id=\"dialog-user-change-password-do\"><?php echo langHdl('launch'); ?></button>\n                        <button class=\"btn btn-default float-right\" id=\"dialog-user-change-password-close\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n                <!-- /.USER CHANGE AUTH PASSWORD -->\n\n\n                <!-- LDAP USER HAS CHANGED AUTH PASSWORD -->\n                <div class=\"card card-warning m-3 hidden\" id=\"dialog-ldap-user-change-password\">\n                    <div class=\"card-header\">\n                        <h3 class=\"card-title\">\n                            <i class=\"fa-solid fa-bullhorn mr-2\"></i>\n                            <?php echo langHdl('your_attention_is_required'); ?>\n                        </h3>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-12\">\n                                <div class=\"mb-5 alert alert-info hidden\" id=\"dialog-ldap-user-change-password-info\">\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('provide_your_previous_password'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"dialog-ldap-user-change-password-old\">\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('provide_your_current_password'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"dialog-ldap-user-change-password-current\">\n                                </div>\n                                <div class=\"form-control mt-3 font-weight-light grey\" id=\"dialog-ldap-user-change-password-progress\">\n                                    <?php echo langHdl('provide_current_psk_and_click_launch'); ?>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-primary\" id=\"dialog-ldap-user-change-password-do\"><?php echo langHdl('launch'); ?></button>\n                        <button class=\"btn btn-default float-right\" id=\"dialog-ldap-user-change-password-close\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n                <!-- /.LDAP USER HAS CHANGED AUTH PASSWORD -->\n\n\n                <!-- ADMIN ASKS FOR USER PASSWORD CHANGE -->\n                <div class=\"card card-warning m-3 hidden\" id=\"dialog-admin-change-user-password\">\n                    <div class=\"card-header\">\n                        <h3 class=\"card-title\">\n                            <i class=\"fa-solid fa-bullhorn mr-2\"></i>\n                            <?php echo langHdl('your_attention_is_required'); ?>\n                        </h3>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-12\">\n                                <div class=\"mb-2 alert alert-info\" id=\"dialog-admin-change-user-password-info\">\n                                </div>\n                                <div class=\"form-control mt-3 font-weight-light grey\" id=\"dialog-admin-change-user-password-progress\">\n                                    <?php echo langHdl('provide_current_psk_and_click_launch'); ?>\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"hidden\" id=\"admin_change_user_password_target_user\" value=\"\">\n                        <input type=\"hidden\" id=\"admin_change_user_encryption_code_target_user\" value=\"\">\n                    </div>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-primary\" id=\"dialog-admin-change-user-password-do\"><?php echo langHdl('launch'); ?></button>\n                        <button class=\"btn btn-default float-right\" id=\"dialog-admin-change-user-password-close\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n                <!-- /.ADMIN ASKS FOR USER PASSWORD CHANGE -->\n\n\n                <!-- USER PROVIDES TEMPORARY CODE -->\n                <div class=\"card card-warning m-3 hidden\" id=\"dialog-user-temporary-code\">\n                    <div class=\"card-header\">\n                        <h3 class=\"card-title\">\n                            <i class=\"fa-solid fa-bullhorn mr-2\"></i>\n                            <?php echo langHdl('your_attention_is_required'); ?>\n                        </h3>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-12\">\n                                <div class=\"mb-5 alert alert-info\" id=\"dialog-user-temporary-code-info\">\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('provide_your_current_password'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"dialog-user-temporary-code-current-password\">\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('temporary_encryption_code'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"dialog-user-temporary-code-value\">\n                                </div>\n                                <div class=\"form-control mt-3 font-weight-light grey\" id=\"dialog-user-temporary-code-progress\">\n                                    <?php echo langHdl('provide_current_psk_and_click_launch'); ?>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-primary\" id=\"dialog-user-temporary-code-do\"><?php echo langHdl('launch'); ?></button>\n                        <button class=\"btn btn-default float-right\" id=\"dialog-user-temporary-code-close\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n                <!-- /.USER PROVIDES TEMPORARY CODE -->\n\n\n                <!-- ENCRYPTION KEYS GENERATION -->\n                <div class=\"card card-warning m-3 mt-3 hidden\" id=\"dialog-encryption-keys\">\n                    <div class=\"card-header\">\n                        <h3 class=\"card-title\">\n                            <i class=\"fa-solid fa-bullhorn mr-2\"></i>\n                            <?php echo langHdl('your_attention_is_required'); ?>\n                        </h3>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-12\">\n                                <div class=\"mb-2 alert alert-info\" id=\"warning-text-reencryption\">\n                                    <i class=\"icon fa-solid fa-info mr-2\"></i>\n                                    <?php echo langHdl('objects_encryption_explanation'); ?>\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"hidden\" id=\"sharekeys_reencryption_target_user\" value=\"\">\n                    </div>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-primary\" id=\"button_do_sharekeys_reencryption\"><?php echo langHdl('launch'); ?></button>\n                        <button class=\"btn btn-default float-right\" id=\"button_close_sharekeys_reencryption\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n                <!-- /.ENCRYPTION KEYS GENERATION -->\n\n\n                <!-- ENCRYPTION KEYS GENERATION FOR LDAP NEW USER -->\n                <div class=\"card card-warning m-3 mt-3 hidden\" id=\"dialog-ldap-user-build-keys-database\">\n                    <div class=\"card-header\">\n                        <h3 class=\"card-title\">\n                            <i class=\"fa-solid fa-bullhorn mr-2\"></i>\n                            <?php echo langHdl('your_attention_is_required'); ?>\n                        </h3>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-12\">\n                                <div class=\"mb-2 alert alert-info\" id=\"warning-text-reencryption\">\n                                    <i class=\"icon fa-solid fa-info mr-2\"></i>\n                                    <?php echo langHdl('help_for_launching_items_encryption'); ?>\n                                </div>\n\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('temporary_encryption_code'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"dialog-ldap-user-build-keys-database-code\">\n                                </div>\n                                \n                                <div class=\"form-control mt-3 font-weight-light grey\" id=\"dialog-ldap-user-build-keys-database-progress\">\n                                    <?php echo langHdl('provide_current_psk_and_click_launch'); ?>\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"hidden\" id=\"sharekeys_reencryption_target_user\" value=\"\">\n                    </div>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-primary\" id=\"dialog-ldap-user-build-keys-database-do\"><?php echo langHdl('launch'); ?></button>\n                        <button class=\"btn btn-default float-right\" id=\"dialog-ldap-user-build-keys-database-close\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n                <!-- /.ENCRYPTION KEYS GENERATION -->\n\n                <!-- ENCRYPTION PERSONAL ITEMS GENERATION -->\n                <div class=\"card card-warning m-3 hidden\" id=\"dialog-encryption-personal-items-after-upgrade\">\n                    <div class=\"card-header\">\n                        <h3 class=\"card-title\">\n                            <i class=\"fa-solid fa-bullhorn mr-2\"></i>\n                            <?php echo langHdl('your_attention_is_required'); ?>\n                        </h3>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-12\">\n                                <div class=\"mb-2 alert alert-info\" id=\"warning-text-changing-password\">\n                                    <i class=\"icon fa-solid fa-info mr-2\"></i>\n                                    <?php echo langHdl('objects_encryption_explanation'); ?>\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('personal_salt_key'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"user-current-defuse-psk\">\n                                </div>\n                                <div class=\"form-control mt-3 font-weight-light grey\" id=\"user-current-defuse-psk-progress\">\n                                    <?php echo langHdl('provide_current_psk_and_click_launch'); ?>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-primary\" id=\"button_do_personal_items_reencryption\"><?php echo langHdl('launch'); ?></button>\n                        <button class=\"btn btn-default float-right\" id=\"button_close_personal_items_reencryption\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n                <!-- /.ENCRYPTION PERSONAL ITEMS GENERATION -->\n                \n\n                <?php\n                    if ($session_initial_url !== null && empty($session_initial_url) === false) {\n                        include $session_initial_url;\n                    } elseif ($get['page'] === 'items') {\n                        // SHow page with Items\n                        if ((int) $session_user_admin !== 1) {\n                            include $SETTINGS['cpassman_dir'] . '/pages/items.php';\n                        } elseif ((int) $session_user_admin === 1) {\n                            include $SETTINGS['cpassman_dir'] . '/pages/admin.php';\n                        } else {\n                            $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n                            //not allowed page\n                            include $SETTINGS['cpassman_dir'] . '/error.php';\n                        }\n                    } elseif (in_array($get['page'], array_keys($mngPages)) === true) {\n                        // Define if user is allowed to see management pages\n                        if ($session_user_admin === 1) {\n                            include $SETTINGS['cpassman_dir'] . '/pages/' . $mngPages[$get['page']];\n                        } elseif ($session_user_manager === 1 || $session_user_human_resources === 1) {\n                            if ($get['page'] !== 'manage_main'\n                                && $get['page'] !== 'manage_settings'\n                            ) {\n                                //include $SETTINGS['cpassman_dir'] . '/pages/' . $mngPages[$_GET['page']];\n                            } else {\n                                $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n                                //not allowed page\n                                include $SETTINGS['cpassman_dir'] . '/error.php';\n                            }\n                        } else {\n                            $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n                            //not allowed page\n                            include $SETTINGS['cpassman_dir'] . '/error.php';\n                        }\n                    } elseif (empty($get['page']) === false) {\n                        include $SETTINGS['cpassman_dir'] . '/pages/' . $get['page'] . '.php';\n                    } else {\n                        $_SESSION['error']['code'] = ERR_NOT_EXIST;\n                        //page doesn't exist\n                        include $SETTINGS['cpassman_dir'].'/error.php';\n                    }\n\n    // Case where login attempts have been identified\n    if (isset($_SESSION['unsuccessfull_login_attempts']) === true\n        && $_SESSION['unsuccessfull_login_attempts_nb'] !== 0\n        && $_SESSION['unsuccessfull_login_attempts_shown'] === false\n    ) {\n        ?>\n                    <input type=\"hidden\" id=\"user-login-attempts\" value=\"1\">\n                <?php\n    } ?>\n\n            </div>\n            <!-- /.content-wrapper -->\n\n            <!-- Control Sidebar -->\n            <aside class=\"control-sidebar control-sidebar-dark\">\n                <!-- Control sidebar content goes here -->\n                <div class=\"p-3\">\n                    <h5><?php echo langHdl('last_items_title'); ?></h5>\n                    <div>\n                        <ul class=\"list-unstyled\" id=\"index-last-pwds\">\n                        </ul>\n                    </div>\n                </div>\n            </aside>\n            <!-- /.control-sidebar -->\n\n            <!-- Main Footer -->\n            <footer class=\"main-footer\">\n                <!-- To the right -->\n                <div class=\"float-right d-none d-sm-inline\">\n                    <?php echo langHdl('version_alone'); ?>&nbsp;<?php echo TP_VERSION; ?>\n                </div>\n                <!-- Default to the left -->\n                <strong>Copyright &copy; <?php echo TP_COPYRIGHT; ?> <a href=\"<?php echo TEAMPASS_URL; ?>\"><?php echo TP_TOOL_NAME; ?></a>.</strong> All rights reserved.\n            </footer>\n        </div>\n        <!-- ./wrapper -->\n\n    <?php\n        /* MAIN PAGE */\n        echo '\n<input type=\"hidden\" id=\"temps_restant\" value=\"', $_SESSION['sessionDuration'] ?? '', '\" />';\n// display an item in the context of OTV link\n} elseif (($session_validite_pw === null\n        || empty($session_validite_pw) === true\n        || empty($session_user_id) === true)\n    && empty($get['otv']) === false\n) {\n    // case where one-shot viewer\n    if (empty($superGlobal->get('code', 'GET')) === false && empty($superGlobal->get('stamp', 'GET')) === false\n    ) {\n        include './includes/core/otv.php';\n    } else {\n        $_SESSION['error']['code'] = ERR_VALID_SESSION;\n        $superGlobal->put(\n            'initial_url',\n            filter_var(\n                substr(\n                    $server['request_uri'],\n                    strpos($server['request_uri'], 'index.php?')\n                ),\n                FILTER_SANITIZE_URL\n            ),\n            'SESSION'\n        );\n        include $SETTINGS['cpassman_dir'] . '/error.php';\n    }\n} elseif ((empty($session_user_id) === false\n            && $session_user_id !== null)\n        || empty($session_user_id) === true\n        || $session_user_id === null\n    ) {\n    // case where user not logged and can't access a direct link\n    if (empty($get['page']) === false) {\n        $superGlobal->put(\n            'initialUrl',\n            filter_var(\n                substr($server['request_uri'], strpos($server['request_uri'], 'index.php?')),\n                FILTER_SANITIZE_URL\n            ),\n            'SESSION'\n        );\n        // REDIRECTION PAGE ERREUR\n        echo '\n            <script language=\"javascript\" type=\"text/javascript\">\n            <!--\n                sessionStorage.clear();\n                window.location.href = \"index.php\";\n            -->\n            </script>';\n        exit;\n    }\n    $superGlobal->put('initialUrl', '', 'SESSION');\n\n    // LOGIN form\n    include $SETTINGS['cpassman_dir'] . '/includes/core/login.php';\n}\n\n    ?>\n\n    <!-- Modal -->\n    <div class=\"modal fade\" id=\"warningModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"Caution\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h5 class=\"modal-title\" id=\"warningModalTitle\"></h5>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" id=\"warningModalCrossClose\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div class=\"modal-body\" id=\"warningModalBody\">\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"warningModalButtonClose\"></button>\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"warningModalButtonAction\"></button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n\n    <!-- REQUIRED SCRIPTS -->\n\n    <!-- Font Awesome Icons -->\n    <link href=\"plugins/fontawesome-free-6/css/fontawesome.min.css\" rel=\"stylesheet\">\n    <link href=\"plugins/fontawesome-free-6/css/solid.min.css\" rel=\"stylesheet\">\n    <link href=\"plugins/fontawesome-free-6/css/regular.min.css\" rel=\"stylesheet\">\n    <link href=\"plugins/fontawesome-free-6/css/brands.min.css\" rel=\"stylesheet\">\n    <link href=\"plugins/fontawesome-free-6/css/v5-font-face.min.css\" rel=\"stylesheet\" /> \n    <!-- jQuery -->\n    <script src=\"plugins/jquery/jquery.min.js\"></script>\n    <!-- jQuery UI -->\n    <script src=\"plugins/jqueryUI/jquery-ui.min.js\"></script>\n    <link rel=\"stylesheet\" href=\"plugins/jqueryUI/jquery-ui.min.css\">\n    <!-- Popper -->\n    <script src=\"plugins/popper/umd/popper.min.js\"></script>\n    <!-- Bootstrap -->\n    <script src=\"plugins/bootstrap/js/bootstrap.bundle.min.js\"></script>\n    <!-- AdminLTE -->\n    <script src=\"plugins/adminlte/js/adminlte.min.js\"></script>\n    <!-- Altertify -->\n    <!--<script type=\"text/javascript\" src=\"plugins/alertifyjs/alertify.min.js\"></script>-->\n    <!-- Toastr -->\n    <script type=\"text/javascript\" src=\"plugins/toastr/toastr.min.js\"></script>\n    <!-- STORE.JS -->\n    <script type=\"text/javascript\" src=\"plugins/store.js/dist/store.everything.min.js\"></script>\n    <!-- cryptojs-aesphp -->\n    <script type=\"text/javascript\" src=\"includes/libraries/Encryption/CryptoJs/crypto-js.js\"></script>\n    <script type=\"text/javascript\" src=\"includes/libraries/Encryption/CryptoJs/encryption.js\"></script>\n    <!-- pace -->\n    <script type=\"text/javascript\" data-pace-options='{ \"ajax\": true }' src=\"plugins/pace-progress/pace.min.js\"></script>\n    <!-- clipboardjs -->\n    <script type=\"text/javascript\" src=\"plugins/clipboard/clipboard.min.js\"></script>\n    <!-- select2 -->\n    <script type=\"text/javascript\" src=\"plugins/select2/js/select2.full.min.js\"></script>\n    <!-- simplePassMeter -->\n    <link rel=\"stylesheet\" href=\"plugins/simplePassMeter/simplePassMeter.css\" type=\"text/css\" />\n    <script type=\"text/javascript\" src=\"plugins/simplePassMeter/simplePassMeter.js\"></script>\n    <!-- platform -->\n    <script type=\"text/javascript\" src=\"plugins/platform/platform.js\"></script>\n    <!-- radiobuttons -->\n    <link rel=\"stylesheet\" href=\"plugins/radioforbuttons/bootstrap-buttons.min.css\" type=\"text/css\" />\n    <script type=\"text/javascript\" src=\"plugins/radioforbuttons/jquery.radiosforbuttons.min.js\"></script>\n    <!-- ICHECK -->\n    <!--<link rel=\"stylesheet\" href=\"./plugins/icheck-material/icheck-material.min.css\">-->\n    <link rel=\"stylesheet\" href=\"./plugins/icheck/skins/all.css\">\n    <script type=\"text/javascript\" src=\"./plugins/icheck/icheck.min.js\"></script>\n    <!-- bootstrap-add-clear -->\n    <script type=\"text/javascript\" src=\"plugins/bootstrap-add-clear/bootstrap-add-clear.min.js\"></script>\n    <!-- DOMPurify -->\n    <script type=\"text/javascript\" src=\"plugins/DOMPurify/purify.min.js\"></script>\n\n    <?php\n    $get = [];\n    $get['page'] = $superGlobal->get('page', 'GET') === null ? '' : $superGlobal->get('page', 'GET');\n    if ($menuAdmin === true) {\n        ?>\n        <link rel=\"stylesheet\" href=\"./plugins/toggles/css/toggles.css\" />\n        <link rel=\"stylesheet\" href=\"./plugins/toggles/css/toggles-modern.css\" />\n        <script src=\"./plugins/toggles/toggles.min.js\" type=\"text/javascript\"></script>\n        <!-- InputMask -->\n        <script src=\"./plugins/inputmask/jquery.inputmask.min.js\"></script>\n        <!-- Sortable -->\n        <!--<script src=\"./plugins/sortable/jquery.sortable.js\"></script>-->\n        <!-- PLUPLOAD -->\n        <script type=\"text/javascript\" src=\"includes/libraries/Plupload/plupload.full.min.js\"></script>\n        <!-- DataTables -->\n        <link rel=\"stylesheet\" src=\"./plugins/datatables/css/jquery.dataTables.min.css\">\n        <link rel=\"stylesheet\" src=\"./plugins/datatables/css/dataTables.bootstrap4.min.css\">\n        <script type=\"text/javascript\" src=\"./plugins/datatables/js/jquery.dataTables.min.js\"></script>\n        <script type=\"text/javascript\" src=\"./plugins/datatables/js/dataTables.bootstrap4.min.js\"></script>\n        <link rel=\"stylesheet\" src=\"./plugins/datatables/extensions/Responsive-2.2.2/css/responsive.bootstrap4.min.css\">\n        <script type=\"text/javascript\" src=\"./plugins/datatables/extensions/Responsive-2.2.2/js/dataTables.responsive.min.js\"></script>\n        <script type=\"text/javascript\" src=\"./plugins/datatables/extensions/Responsive-2.2.2/js/responsive.bootstrap4.min.js\"></script>\n        <script type=\"text/javascript\" src=\"./plugins/datatables/plugins/select.js\"></script>\n        <link rel=\"stylesheet\" src=\"./plugins/datatables/extensions/Scroller-1.5.0/css/scroller.bootstrap4.min.css\">\n        <script type=\"text/javascript\" src=\"./plugins/datatables/extensions/Scroller-1.5.0/js/dataTables.scroller.min.js\"></script>\n    <?php\n    } elseif (isset($get['page']) === true) {\n        if (in_array($get['page'], ['items', 'import']) === true) {\n            ?>\n            <link rel=\"stylesheet\" href=\"./plugins/jstree/themes/default/style.min.css\" />\n            <script src=\"./plugins/jstree/jstree.min.js\" type=\"text/javascript\"></script>\n            <!-- SUMMERNOTE -->\n            <link rel=\"stylesheet\" href=\"./plugins/summernote/summernote-bs4.css\">\n            <script src=\"./plugins/summernote/summernote-bs4.min.js\"></script>\n            <!-- date-picker -->\n            <link rel=\"stylesheet\" href=\"./plugins/bootstrap-datepicker/css/bootstrap-datepicker3.min.css\">\n            <script src=\"./plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js\"></script>\n            <!-- time-picker -->\n            <link rel=\"stylesheet\" href=\"./plugins/timepicker/bootstrap-timepicker.min.css\">\n            <script src=\"./plugins/timepicker/bootstrap-timepicker.min.js\"></script>\n            <!-- PLUPLOAD -->\n            <script type=\"text/javascript\" src=\"includes/libraries/Plupload/plupload.full.min.js\"></script>\n            <!-- VALIDATE -->\n            <script type=\"text/javascript\" src=\"plugins/jquery-validation/jquery.validate.js\"></script>\n            <!-- PWSTRENGHT -->\n            <!--<script type=\"text/javascript\" src=\"plugins/jquery.pwstrength/i18next.js\"></script>-->\n            <script type=\"text/javascript\" src=\"plugins/zxcvbn/zxcvbn.js\"></script>\n            <script type=\"text/javascript\" src=\"plugins/jquery.pwstrength/pwstrength-bootstrap.min.js\"></script>\n        <?php\n        } elseif (in_array($get['page'], ['search', 'folders', 'users', 'roles', 'utilities.deletion', 'utilities.logs', 'utilities.database', 'utilities.renewal', 'tasks']) === true) {\n            ?>\n            <!-- DataTables -->\n            <link rel=\"stylesheet\" src=\"./plugins/datatables/css/jquery.dataTables.min.css\">\n            <link rel=\"stylesheet\" src=\"./plugins/datatables/css/dataTables.bootstrap4.min.css\">\n            <script type=\"text/javascript\" src=\"./plugins/datatables/js/jquery.dataTables.min.js\"></script>\n            <script type=\"text/javascript\" src=\"./plugins/datatables/js/dataTables.bootstrap4.min.js\"></script>\n            <link rel=\"stylesheet\" src=\"./plugins/datatables/extensions/Responsive-2.2.2/css/responsive.bootstrap4.min.css\">\n            <script type=\"text/javascript\" src=\"./plugins/datatables/extensions/Responsive-2.2.2/js/dataTables.responsive.min.js\"></script>\n            <script type=\"text/javascript\" src=\"./plugins/datatables/extensions/Responsive-2.2.2/js/responsive.bootstrap4.min.js\"></script>\n            <script type=\"text/javascript\" src=\"./plugins/datatables/plugins/select.js\"></script>\n            <link rel=\"stylesheet\" src=\"./plugins/datatables/extensions/Scroller-1.5.0/css/scroller.bootstrap4.min.css\">\n            <script type=\"text/javascript\" src=\"./plugins/datatables/extensions/Scroller-1.5.0/js/dataTables.scroller.min.js\"></script>\n            <!-- dater picker -->\n            <link rel=\"stylesheet\" href=\"./plugins/bootstrap-datepicker/css/bootstrap-datepicker3.min.css\">\n            <script src=\"./plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js\"></script>\n            <!-- daterange picker -->\n            <link rel=\"stylesheet\" href=\"./plugins/daterangepicker/daterangepicker.css\">\n            <script src=\"./plugins/moment/moment.min.js\"></script>\n            <script src=\"./plugins/daterangepicker/daterangepicker.js\"></script>\n            <!-- SlimScroll -->\n            <script src=\"./plugins/slimScroll/jquery.slimscroll.min.js\"></script>\n            <!-- FastClick -->\n            <script src=\"./plugins/fastclick/fastclick.min.js\"></script>\n        <?php\n        } elseif ($get['page'] === 'profile') {\n            ?>\n            <!-- PLUPLOAD -->\n            <script type=\"text/javascript\" src=\"includes/libraries/Plupload/plupload.full.min.js\"></script>\n        <?php\n        } elseif ($get['page'] === 'export') {\n            ?>\n            <!-- FILESAVER -->\n            <script type=\"text/javascript\" src=\"plugins/downloadjs/download.js\"></script>\n        <?php\n        }\n    }\n    ?>\n    <!-- functions -->\n    <script type=\"text/javascript\" src=\"includes/js/functions.js\"></script>\n    <script type=\"text/javascript\" src=\"includes/js/CreateRandomString.js\"></script>\n\n    </body>\n\n</html>\n\n<script type=\"text/javascript\">\n    //override defaults\n    /*alertify.defaults.transition = \"slide\";\n    alertify.defaults.theme.ok = \"btn btn-primary\";\n    alertify.defaults.theme.cancel = \"btn btn-danger\";\n    alertify.defaults.theme.input = \"form-control\";*/\n\n    toastr.options = {\n        \"closeButton\": false,\n        \"debug\": false,\n        \"newestOnTop\": false,\n        \"progressBar\": false,\n        \"positionClass\": \"toast-bottom-right\",\n        \"preventDuplicates\": true,\n        \"onClick\": \"close\",\n        \"showDuration\": \"300\",\n        \"hideDuration\": \"1000\",\n        \"timeOut\": \"0\",\n        \"extendedTimeOut\": \"0\",\n        \"showEasing\": \"swing\",\n        \"hideEasing\": \"linear\",\n        \"showMethod\": \"fadeIn\",\n        \"hideMethod\": \"fadeOut\"\n    }\n</script>\n\n\n<?php\n$get = [];\n$get['page'] = $superGlobal->get('page', 'GET') === null ? '' : $superGlobal->get('page', 'GET');\n\n// Load links, css and javascripts\nif (\n    isset($_SESSION['CPM']) === true\n    && isset($SETTINGS['cpassman_dir']) === true\n) {\n    include_once $SETTINGS['cpassman_dir'] . '/includes/core/load.js.php';\n    if ($menuAdmin === true) {\n        include_once $SETTINGS['cpassman_dir'] . '/pages/admin.js.php';\n        if ($get['page'] === '2fa') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/2fa.js.php';\n        } elseif ($get['page'] === 'api') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/api.js.php';\n        } elseif ($get['page'] === 'backups') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/backups.js.php';\n        } elseif ($get['page'] === 'emails') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/emails.js.php';\n        } elseif ($get['page'] === 'ldap') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/ldap.js.php';\n        } elseif ($get['page'] === 'uploads') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/uploads.js.php';\n        } elseif ($get['page'] === 'fields') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/fields.js.php';\n        } elseif ($get['page'] === 'options') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/options.js.php';\n        } elseif ($get['page'] === 'statistics') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/statistics.js.php';\n        } elseif ($get['page'] === 'tasks') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/tasks.js.php';\n        }\n    } elseif (isset($get['page']) === true && $get['page'] !== '') {\n        if ($get['page'] === 'items') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/items.js.php';\n        } elseif ($get['page'] === 'import') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/import.js.php';\n        } elseif ($get['page'] === 'export') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/export.js.php';\n        } elseif ($get['page'] === 'offline') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/offline.js.php';\n        } elseif ($get['page'] === 'search') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/search.js.php';\n        } elseif ($get['page'] === 'profile') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/profile.js.php';\n        } elseif ($get['page'] === 'favourites') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/favorites.js.php';\n        } elseif ($get['page'] === 'folders') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/folders.js.php';\n        } elseif ($get['page'] === 'users') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/users.js.php';\n        } elseif ($get['page'] === 'roles') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/roles.js.php';\n        } elseif ($get['page'] === 'utilities.deletion') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/utilities.deletion.js.php';\n        } elseif ($get['page'] === 'utilities.logs') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/utilities.logs.js.php';\n        } elseif ($get['page'] === 'utilities.database') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/utilities.database.js.php';\n        } elseif ($get['page'] === 'utilities.renewal') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/utilities.renewal.js.php';\n        }\n    } else {\n        include_once $SETTINGS['cpassman_dir'] . '/includes/core/login.js.php';\n    }\n}\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      users.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'folders', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n    // Initialization\n    var userDidAChange = false,\n        userTemporaryCode = '',\n        constVisibleOTP = false,\n        userClipboard,\n        ProcessInProgress = false,\n        debugJavascript = false;\n\n    browserSession(\n        'init',\n        'teampassApplication', {\n            foldersSelect: '',\n            complexityOptions: '',\n        }\n    );\n\n    // Prepare tooltips\n    $('.infotip').tooltip();\n\n    // Prepare Select2\n    $('.select2').select2({\n        language: '<?php echo $_SESSION['user_language_code']; ?>'\n    });\n\n    // Prepare iCheck format for checkboxes\n    $('input[type=\"checkbox\"].flat-blue, input[type=\"radio\"].flat-blue').iCheck({\n        radioClass: 'iradio_flat-blue',\n        checkboxClass: 'icheckbox_flat-blue',\n    });\n    $('#form-create-special-folder').iCheck('disable');\n\n    // Prevent submit on button\n    $('.btn-no-click')\n        .click(function(e) {\n            e.preventDefault();\n        });\n\n\n    //Launch the datatables pluggin\n    var oTable = $('#table-users').DataTable({\n        'paging': true,\n        'searching': true,\n        'order': [\n            [1, 'asc']\n        ],\n        'info': true,\n        'processing': false,\n        'serverSide': true,\n        'responsive': false,\n        'select': false,\n        'stateSave': true,\n        'autoWidth': true,\n        'ajax': {\n            url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/users.datatable.php',\n        },\n        'language': {\n            'url': '<?php echo $SETTINGS['cpassman_url']; ?>/includes/language/datatables.<?php echo $_SESSION['user']['user_language']; ?>.txt'\n        },\n        'columns': [{\n                'width': '80px',\n                className: 'details-control',\n                'render': function(data, type, row, meta) {\n                    return '<div class=\"group-btn btn-user-action\">' +\n                        '' +\n                        '<button type=\"button\" class=\"btn btn-info dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fas fa-cog\"></i>&nbsp;' +\n                        '</button>' +\n                        '<ul class=\"dropdown-menu\" role=\"menu\">' +\n                        ($(data).data('auth-type') === 'local' ?\n                            '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"new-password\"><i class=\"fas fa-lock mr-2\"></i><?php echo langHdl('change_login_password'); ?></li>' :\n                            ''\n                        ) +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"edit\"><i class=\"fas fa-pen mr-2\"></i><?php echo langHdl('edit'); ?></li>' +\n                        ($(data).data('otp-provided') !== \"\"?\n                            '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"new-otp\"><i class=\"fas fa-mask mr-2\"></i><?php echo langHdl('generate_new_otp'); ?></li>' :\n                            ''\n                        ) +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\" data-action=\"logs\"><i class=\"fas fa-newspaper mr-2\"></i><?php echo langHdl('see_logs'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"qrcode\"><i class=\"fas fa-qrcode mr-2\"></i><?php echo langHdl('user_ga_code'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"access-rights\"><i class=\"fas fa-sitemap mr-2\"></i><?php echo langHdl('user_folders_rights'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"disable-user\"><i class=\"fas fa-user-slash text-warning mr-2\" disabled></i><?php echo langHdl('disable_enable'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"delete-user\"><i class=\"fas fa-user-minus text-danger mr-2\" disabled></i><?php echo langHdl('delete'); ?></li>' +\n                        '</ul>' +\n                        '</div>';\n                }\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            }\n        ],\n        'preDrawCallback': function() {\n            toastr.info(\n                '<?php echo langHdl('loading'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>',\n                ''\n            );\n        },\n        'drawCallback': function() {\n            // Tooltips\n            $('.infotip').tooltip();\n\n            // Remove progress toast\n            $('.toast').remove();\n        },\n        /*'createdRow': function( row, data, dataIndex ) {\n            var newClasses = $(data[6]).filter('#row-class-' + dataIndex).val();\n            $(row).addClass(newClasses);\n        }*/\n    });\n\n\n\n    $('#form-email').change(function() {\n        //extract domain from email\n        var domain = $(this).val().split('@')[1];\n        if (domain === undefined) {\n            return false;\n        }\n        domain = domain.toLowerCase()\n\n        //check if domain exists\n        $.post(\"sources/users.queries.php\", {\n                type: \"check_domain\",\n                domain: domain\n            },\n            function(data) {\n                data = $.parseJSON(data);\n                if (debugJavascript === true) console.log(data);\n\n                $(\"#new_folder_role_domain\").attr(\"disabled\", \"disabled\");\n                if (data.folder === 'not_exists' && data.role === 'not_exists' && domain !== '') {\n                    $('#form-create-special-folder').iCheck('enable');\n                    $('#form-special-folder').val(domain);\n                } else {\n                    $('#form-create-special-folder').iCheck('disable');\n                    $('#form-special-folder').val('');\n                }\n            }\n        );\n    });\n\n\n\n    /**\n     * \n     */\n    // Fires when user click on button SEND\n    $(document).on('click', '#warningModalButtonClose', function() {\n        // check if uform is the one expected\n        if ($('#warningModal-button-user-pwd').length === 0) {\n            return false;\n        } \n        if (debugJavascript === true) console.log('Closing warning dialog')\n        toastr.remove();\n        $('#warningModal').modal('hide');\n\n        // Fianlize UI\n        // clear form fields\n        $(\".clear-me\").val('');\n        $('.select2').val('').change();\n        //$('#privilege-user').iCheck('check');\n        $('.form-check-input')\n            .iCheck('disable')\n            .iCheck('uncheck');\n\n        // refresh table content\n        oTable.ajax.reload();\n\n        // Show list of users\n        $('#row-form').addClass('hidden');\n        $('#row-list').removeClass('hidden');\n    });\n\n\n    /**\n     * \n     */\n    // Fires when user click on button SEND\n    $(document).on('click', '#warningModalButtonAction', function() {\n        // check if uform is the one expected\n        if ($('#warningModal-button-user-pwd').length === 0) {\n            return false;\n        } \n        //console.log('send email for '+store.get('teampassUser').admin_new_user_temporary_encryption_code)\n        //console.log(store.get('teampassUser'))\n        //console.log(store.get('teampassApplication'))\n\n        showModalDialogBox(\n            '#warningModal',\n            '<i class=\"fas fa-user-shield fa-lg warning mr-2\"></i><?php echo langHdl('caution'); ?>',\n            '<?php echo langHdl('sending_email_message'); ?>',\n            '',\n            '',\n            true,\n            false,\n            false\n        );\n\n        // Prepare data\n        if (store.get('teampassApplication').formUserAction === \"add_new_user\") {\n            var data = {\n                'receipt': $('#form-email').val(),\n                'subject': 'TEAMPASS - <?php echo langHdl('temporary_encryption_code');?>',\n                'body': '<?php echo langHdl('email_body_new_user');?>',\n                'pre_replace' : {\n                    '#code#' : store.get('teampassUser').admin_new_user_temporary_encryption_code,\n                    '#login#' : store.get('teampassUser').admin_new_user_login,\n                    '#password#' : store.get('teampassUser').admin_new_user_password,\n                }\n            }\n        } else {\n            var data = {\n                'receipt': $('#form-email').val(),\n                'subject': 'TEAMPASS - <?php echo langHdl('temporary_encryption_code');?>',\n                'body': '<?php echo langHdl('email_body_temporary_encryption_code');?>',\n                'pre_replace' : {\n                    '#enc_code#' : store.get('teampassUser').admin_new_user_temporary_encryption_code,\n                }\n            }\n        }\n\n        // Launch action\n        $.post(\n            'sources/main.queries.php', {\n                type: 'mail_me',\n                type_category: 'action_mail',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                //console.log(data);\n\n                if (data.error !== false) {\n                    $('#warningModal').modal('hide');\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Fianlize UI\n                    // clear form fields\n                    $(\".clear-me\").val('');\n                    $('.select2').val('').change();\n                    //$('#privilege-user').iCheck('check');\n                    $('.form-check-input')\n                        .iCheck('disable')\n                        .iCheck('uncheck');\n\n                    // Show list of users\n                    $('#row-form').addClass('hidden');\n                    $('#row-list').removeClass('hidden');\n\n                    // Hide dialogbox\n                    $('#warningModal').modal('hide');\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n                    // change the user status to ready to use\n                    data = {\n                        'user_id': store.get('teampassUser').admin_new_user_id,\n                    }\n\n                    $.post(\n                        'sources/main.queries.php', {\n                            type: 'user_is_ready',\n                            type_category: 'action_user',\n                            data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                            key: '<?php echo $_SESSION['key']; ?>'\n                        },\n                        function(data) {\n                            if (debugJavascript === true) console.log('User has been created');\n\n                            // refresh table content\n                            oTable.ajax.reload();\n\n                            // Remove action from store\n                            if (debugJavascript === true) console.log('Clear Store variables')\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                                }\n                            );\n                            store.update(\n                                'teampassUser',\n                                function(teampassUser) {\n                                    teampassUser.admin_new_user_password = '',\n                                    teampassUser.admin_new_user_temporary_encryption_code = '',\n                                    teampassUser.admin_new_user_login = '';\n                                }\n                            );\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * BUILD AND CHECK THE USER LOGIN\n     */\n    $('.build-login').change(function() {\n        // Build login only if it is empty\n        if ($(\"#form-login\").val() === '') {\n            //return false;\n        }\n        // Build login\n        if ($(this).attr('id') !== 'form-login') {\n            $(\"#form-login\").val(\n                $(\"#form-name\")\n                .val()\n                .toLowerCase()\n                .replace(/ /g, \"\") + \".\" + $(\"#form-lastname\").val().toLowerCase().replace(/ /g, \"\")\n            );\n        }\n\n        // Check if login exists\n        $.post(\n            'sources/users.queries.php', {\n                type: 'is_login_available',\n                login: $('#form-login').val(),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Show result\n                    if (data.login_exists === 0) {\n                        $('#form-login')\n                            .removeClass('is-invalid')\n                            .addClass('is-valid');\n                        $('#form-login-conform').val(true);\n                    } else {\n                        $('#form-login')\n                            .removeClass('is-valid')\n                            .addClass('is-invalid');\n                        $('#form-login-conform').val(false);\n                    }\n                }\n            }\n        );\n    });\n\n\n    function userTasksCreation(userId, userPassword, userTemporaryCode)\n    {\n        var data = {\n            user_id: userId,\n            user_pwd: userPassword,\n            user_code: userTemporaryCode,\n        }\n\n        // Do query\n        $.post(\n            \"sources/users.queries.php\", {\n                type: \"create_new_user_tasks\",\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                if (debugJavascript === true)  {\n                    console.info(\"R\u00e9ception des donn\u00e9es :\")\n                    console.log(data);\n                }\n                \n                if (data.error === true) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    dfd.reject();\n                } else {\n                    // show message to user\n                    $('#warningModal').modal('hide');\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 2000\n                        }\n                    );\n\n                    // Reload list of users\n                    oTable.ajax.reload();\n\n                    // Prepare UI\n                    $('#row-list, #group-create-special-folder, #group-delete-user').removeClass('hidden');\n                    $('#row-form').addClass('hidden');\n                }\n            }\n        );\n    }\n\n    /**\n     * \n     */\n    // Launch recursive action to encrypt the keys\n    function callRecursiveUserDataEncryption(\n        userId,\n        step,\n        start\n    ) {\n        var dfd = $.Deferred();\n        ProcessInProgress = true;\n        \n        var stepText = '';\n        if (debugJavascript === true) console.log('Performing '+step)\n\n        // Prepare progress string\n        if (step === 'step0') {\n            stepText = '<?php echo langHdl('inititialization'); ?>';\n        } else if (step === 'step1') {\n            stepText = '<?php echo langHdl('items'); ?>';\n        } else if (step === 'step2') {\n            stepText = '<?php echo langHdl('logs'); ?>';\n        } else if (step === 'step3') {\n            stepText = '<?php echo langHdl('suggestions'); ?>';\n        } else if (step === 'step4') {\n            stepText = '<?php echo langHdl('fields'); ?>';\n        } else if (step === 'step5') {\n            stepText = '<?php echo langHdl('files'); ?>';\n        } else if (step === 'step6') {\n            stepText = '<?php echo langHdl('personal_items'); ?>';\n        }\n\n        if (step !== 'finished') {\n            if (store.get('teampassUser').related_items_number !== null) {\n                $nbItemsToConvert = \" / \" + store.get('teampassUser').related_items_number;\n            } else {\n                $nbItemsToConvert = '';\n            }\n            // Inform user\n            $(\"#warningModalBody\").html('<b><?php echo langHdl('encryption_keys'); ?> - ' +\n                stepText + '</b> [' + start + ' - ' + (parseInt(start) + <?php echo NUMBER_ITEMS_IN_BATCH;?>) + ']<span id=\"warningModalBody_extra\">' + $nbItemsToConvert + '</span> ' +\n                '... <?php echo langHdl('please_wait'); ?><i class=\"fas fa-spinner fa-pulse ml-3 text-primary\"></i>');\n\n            // If expected, show the OPT to the admin\n            if (constVisibleOTP === true) {\n                toastr.info(\n                    '<?php echo langHdl('show_encryption_code_to_admin');?> <div><input class=\"form-control form-item-control flex-nowrap\" value=\"' + userTemporaryCode + '\" readonly></div>'\n                    + '<br /><button type=\"button\" class=\"btn clear\"><?php echo langHdl('close');?></button>',\n                    '<?php echo langHdl('information'); ?>',\n                    {\n                        extendedTimeOut: 0,\n                        timeOut: 0,\n                        tapToDismiss: false,\n                        newestOnTop: true,\n                        preventDuplicates: true,\n                        onHidden: (toast) => {\n                            // prevent against multiple occurances (#3305)\n                            constVisibleOTP = false;\n                        },\n                    }\n                );\n            }\n\n            var data = {\n                action: step,\n                start: start,\n                length: <?php echo NUMBER_ITEMS_IN_BATCH;?>,\n                user_id: userId,\n            }\n            if (debugJavascript === true) {\n                console.info(\"Envoi des donn\u00e9es :\")\n                console.log(data);\n            }\n\n            // Do query\n            $.post(\n                \"sources/main.queries.php\", {\n                    type: \"user_sharekeys_reencryption_next\",\n                    type_category: 'action_key',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                    if (debugJavascript === true) {\n                        console.info(\"R\u00e9ception des donn\u00e9es :\")\n                        console.log(data);\n                    }\n                    \n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n\n                        dfd.reject();\n                    } else {\n                        // Prepare variables\n                        userId = data.userId;\n                        step = data.step;\n                        start = data.start;\n\n                        // Do recursive call until step = finished\n                        callRecursiveUserDataEncryption(\n                            userId,\n                            step,\n                            start\n                        ).done(function(response) {\n                            dfd.resolve(response);\n                        });\n                    }\n                }\n            );\n        } else {\n            // Ask user\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-envelope-open-text fa-lg warning mr-2\"></i><?php echo langHdl('information'); ?>',\n                '<i class=\"fas fa-info-circle mr-2\"></i><?php echo langHdl('send_user_password_by_email'); ?>'+\n                '<div class=\"row\">'+\n                    (store.get('teampassApplication').formUserAction === \"add_new_user\" ?\n                    '<div class=\"col-lg-2\"><button type=\"button\" class=\"btn btn-block btn-secondary mr-2\"  id=\"warningModal-button-user-pwd\"><?php echo langHdl('show_user_password'); ?></button></div>'+\n                    '<div class=\"col-lg-4 hidden\" id=\"warningModal-user-pwd\"><div><?php echo langHdl('user_password'); ?><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_password+'\"></div>'+\n                    '<div><?php echo langHdl('user_temporary_encryption_code'); ?><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_temporary_encryption_code+'\"></div></div>'\n                    :\n                    '<div class=\"col-lg-2\"><button type=\"button\" class=\"btn btn-block btn-secondary mr-2\"  id=\"warningModal-button-user-pwd\"><?php echo langHdl('show_user_temporary_encryption_code'); ?></button></div>'+\n                    '<div class=\"col-lg-4 hidden\" id=\"warningModal-user-pwd\"><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_temporary_encryption_code+'\"></div></div>'\n                    )+\n                '</div>',\n                '<?php echo langHdl('send_by_email'); ?>',\n                '<?php echo langHdl('close'); ?>',\n                true,\n                false,\n                false\n            );\n            $('#warningModal').modal('show');\n\n            $(document).on('click', '#warningModal-button-user-pwd', function() {\n                $('#warningModal-user-pwd').removeClass('hidden');\n                $('#warningModal-button-user-pwd').prop( \"disabled\", true );\n                setTimeout(\n                    () => {\n                        $('#warningModal-user-pwd').addClass('hidden');\n                        $('#warningModal-button-user-pwd').prop( \"disabled\", false );\n                    },\n                    5000\n                );\n            });\n\n            ProcessInProgress = false;\n        }\n        return dfd.promise();\n    }\n\n\n\n    /**\n     * TOP MENU BUTTONS ACTIONS\n     */\n    $(document).on('click', '.tp-action', function() {\n        // Ensure that password strength indicator is reseted\n        //$('#form-password').focus();\n\n        // Hide if user is not admin\n        if (parseInt(store.get('teampassUser').user_admin) === 1 || parseInt(store.get('teampassUser').user_can_manage_all_users) === 1) {\n            $('.only-admin').removeClass('hidden');\n        } else {\n            $('.only-admin').addClass('hidden');\n        }\n\n        if ($(this).data('action') === 'new') {\n            // ADD NEW USER\n            $('#row-list').addClass('hidden');\n            $('#row-form, #group-create-special-folder, .not-for-admin').removeClass('hidden');\n\n            // HIDE FROM FORM ELEMENTS ONLY FOR ADMIN\n            if (parseInt(store.get('teampassUser').user_admin) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n            } else if (parseInt(store.get('teampassUser').user_can_manage_all_users) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n                $('#privilege-admin').iCheck('disable');\n                $('#privilege-hr').iCheck('disable');\n            } else {\n                $('#privilege-admin').iCheck('disable');\n                $('#privilege-hr').iCheck('disable');\n                $('#privilege-manager').iCheck('disable');\n            }\n\n            // Prepare checks\n            $('#privilege-user').iCheck('check');\n            $('#form-create-special-folder').iCheck('disable');\n\n            // Personal folder\n            if (store.get('teampassSettings').enable_pf_feature === '1') {\n                $('#form-create-personal-folder')\n                    .iCheck('enable')\n                    .iCheck('check');\n            } else {\n                $('#form-create-personal-folder').iCheck('disable');\n            }\n            \n            // MFA enabled\n            if (store.get('teampassSettings').duo === '1' || store.get('teampassSettings').google_authentication === '1') {\n                $('#form-create-mfa-enabled')\n                    .iCheck('enable')\n                    .iCheck('check');\n                $('#form-create-mfa-enabled-div').removeClass('hidden');\n            } else {\n                $('#form-create-mfa-enabled').iCheck('disable');\n                $('#form-create-mfa-enabled-div').addClass('hidden');\n            }\n\n            // What type of form? Edit or new user\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = 'add_new_user';\n                }\n            );\n\n        } else if ($(this).data('action') === 'edit') {\n            // SHow user\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // EDIT EXISTING USER\n            $('#row-list, #group-create-special-folder, #group-delete-user').addClass('hidden');\n            $('#row-form').removeClass('hidden');\n            $('.form-check-input').iCheck('enable');\n\n            // Personal folder\n            if (parseInt(store.get('teampassSettings').enable_pf_feature) === 0) {\n                $('#form-create-personal-folder').iCheck('disable');\n            }\n\n            // HIDE FROM FORM ELEMENTS ONLY FOR ADMIN\n            if (parseInt(store.get('teampassUser').user_admin) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n            } else {\n                $('input[type=radio].only-admin').iCheck('disable');\n            }\n\n            // What type of form? Edit or new user\n            var userID = $(this).data('id');\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = 'store_user_changes',\n                        teampassApplication.formUserId = userID; // Store user ID   \n                }\n            );\n\n            var data = {\n                'user_id': userID,\n            };\n\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get_user_info\",\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error === false) {\n                        // Prefil with user data\n                        $('#form-login').val(data.login);\n                        $('#form-email').val(data.email);\n                        $('#form-name').val(data.name);\n                        $('#form-lastname').val(data.lastname);\n                        $('#form-create-root-folder').iCheck(data.can_create_root_folder === 1 ? 'check' : 'uncheck');\n                        $('#form-create-personal-folder').iCheck(data.personal_folder === 1 ? 'check' : 'uncheck');\n                        $('#form-create-mfa-enabled').iCheck(data.mfa_enabled === 1 ? 'check' : 'uncheck');\n\n                        // Case of user locked\n                        if (data.disabled === 1) {\n                            $('#group-delete-user').removeClass('hidden');\n                            $('#form-delete-user-confirm').iCheck('uncheck');\n                        }\n\n                        // Clear selects\n                        $('#form-roles, #form-managedby, #form-auth, #form-forbid')\n                            .find('option')\n                            .remove();\n\n                        var tmp = '';\n                        $(data.foldersAllow).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-auth').append(tmp);\n\n                        tmp = '';\n                        $(data.foldersForbid).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-forbid').append(tmp);\n\n                        tmp = '';\n                        $(data.managedby).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-managedby').append(tmp);\n\n                        tmp = '';\n                        $(data.function).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-roles').append(tmp);\n\n                        // Generate select2\n                        $('#form-roles, #form-managedby, #form-auth, #form-forbid').select2();\n\n                        // User's current privilege\n                        if (data.admin === 1) {\n                            $('#privilege-admin').iCheck('check');\n                            $('.not-for-admin').addClass('hidden');\n                        } else if (data.can_manage_all_users === 1) {\n                            $('#privilege-hr').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else if (data.gestionnaire === 1) {\n                            $('#privilege-manager').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else if (data.read_only === 1) {\n                            $('#privilege-ro').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else {\n                            $('#privilege-user').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        }\n\n                        $('input:radio[name=privilege]').on('ifChanged', function() {\n                            userDidAChange = true;\n                            $(this).data('change-ongoing', true);\n                        });\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    } else {\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                        return false;\n                    }\n                }\n            );\n        } else if ($(this).data('action') === 'submit') {\n            // Loop on all changed fields\n            var arrayQuery = [];\n            $('.form-control').each(function(i, obj) {\n                if ($(this).data('change-ongoing') === true\n                    //|| $('#form-password').val() !== 'do_not_change'\n                ) {\n                    arrayQuery.push({\n                        'field': $(this).prop('id'),\n                        'value': $(this).val(),\n                    });\n                }\n            });\n\n            if (arrayQuery.length > 0) {\n                // Now save\n                // get lists\n                var forbidFld = [],\n                    authFld = [],\n                    groups = [];\n                $(\"#form-roles option:selected\").each(function() {\n                    groups.push($(this).val())\n                });\n                $(\"#form-auth option:selected\").each(function() {\n                    authFld.push($(this).val())\n                });\n                $(\"#form-forbid option:selected\").each(function() {\n                    forbidFld.push($(this).val())\n                });\n\n                // Mandatory?\n                var validated = true,\n                    validEmailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n                $('.required').each(function(i, obj) {\n                    if ($(this).val() === '' && $(this).hasClass('select2') === false) {\n                        $(this).addClass('is-invalid');\n                        validated = false;\n                    } else if ($('#' + $(this).attr('id') + ' :selected').length === 0 && $(this).hasClass('select2') === true) {\n                        $('#' + $(this).attr('id') + ' + span').addClass('is-invalid');\n                        validated = false;\n                    } else if ($(this).hasClass('validate-email') === true) {\n                        if ($(this).val().match(validEmailRegex)) {\n                            $(this).removeClass('is-invalid');\n                        } else {\n                            $(this).addClass('is-invalid');\n                            validated = false;\n                        }\n                    } else {\n                        $(this).removeClass('is-invalid');\n                        $('#' + $(this).attr('id') + ' + span').removeClass('is-invalid');\n                    }\n                });\n                if (validated === false) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('fields_with_mandatory_information_are_missing'); ?>',\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n\n                // SHow user\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n                // Get number of items to treat\n                data_tmp = {\n                    'user_id': <?php echo $_SESSION['user_id']; ?>,\n                }\n                $.post(\n                    'sources/main.queries.php', {\n                        type: 'get_number_of_items_to_treat',\n                        type_category: 'action_system',\n                        data: prepareExchangedData(JSON.stringify(data_tmp), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data_tmp) {\n                        data_tmp = prepareExchangedData(data_tmp, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                        store.update(\n                            'teampassUser',\n                            function(teampassUser) {\n                                teampassUser.related_items_number = data_tmp.nbItems;\n                            }\n                        );\n                    }\n                );\n\n                //prepare data\n                var data = {\n                    'user_id': store.get('teampassApplication').formUserId,\n                    'login': DOMPurify.sanitize($('#form-login').val()),\n                    'name': DOMPurify.sanitize($('#form-name').val()),\n                    'lastname': DOMPurify.sanitize($('#form-lastname').val()),\n                    'email': DOMPurify.sanitize($('#form-email').val()),\n                    'admin': $('#privilege-admin').prop('checked'),\n                    'manager': $('#privilege-manager').prop('checked'),\n                    'hr': $('#privilege-hr').prop('checked'),\n                    'read_only': $('#privilege-ro').prop('checked'),\n                    'personal_folder': $('#form-create-personal-folder').prop('checked'),\n                    'new_folder_role_domain': $('#form-create-special-folder').prop('checked'),\n                    'domain': $('#form-special-folder').val(),\n                    'isAdministratedByRole': $('#form-managedby').val(),\n                    'groups': groups,\n                    'allowed_flds': authFld,\n                    'forbidden_flds': forbidFld,\n                    'action_on_user': 'update',\n                    'form-create-root-folder': $('#form-create-root-folder').prop('checked'),\n                    'form-user-disabled': $('#form-user-disabled').prop('checked'),\n                    'mfa_enabled': $('#form-create-mfa-enabled').prop('checked'),\n                };\n                if (debugJavascript === true) {\n                    console.log(data);\n                    console.log(store.get('teampassApplication').formUserAction);\n                }                \n                var formUserId = store.get('teampassApplication').formUserId;\n                \n                $.post(\n                    'sources/users.queries.php', {\n                        type: store.get('teampassApplication').formUserAction,\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else if (store.get('teampassApplication').formUserAction === 'add_new_user') {\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('new_user_info_by_mail'); ?>',\n                                '', {\n                                    timeOut: 4000\n                                }\n                            );\n                            // ---\n                        } else {\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 2000\n                                }\n                            );\n                        }\n\n                        // Reload list of users\n                        oTable.ajax.reload();\n\n                        // Prepare UI\n                        $('#row-list, #group-create-special-folder, #group-delete-user').removeClass('hidden');\n                        $('#row-form').addClass('hidden');\n\n                        // Clean form\n                        $('.clear-me').val('');\n                        $('.select2').val('').change();\n                        $('.extra-form, #row-folders').addClass('hidden');\n                        $('#row-list').removeClass('hidden');\n\n                        // Prepare checks\n                        $('.form-check-input').iCheck('uncheck');\n\n                        // Remove action from store\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                            }\n                        );\n                    }\n                )\n            } else {\n                // No change performed on form\n                toastr.remove();\n                toastr.success(\n                    '<?php echo langHdl('no_change_performed'); ?>',\n                    '', {\n                        timeOut: 1000\n                    }\n                );\n            }\n        } else if ($(this).data('action') === 'cancel') {\n            $('.clear-me').val('');\n            $('.select2').val('').change();\n            $('.extra-form, #row-folders').addClass('hidden');\n            $('#row-list').removeClass('hidden');\n\n            // Prepare checks\n            $('.form-check-input').iCheck('uncheck');\n\n            // Remove action from store\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = '',\n                        teampassApplication.formUserId = '';\n                }\n            );\n        } else if ($(this).data('action') === 'qrcode') {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // This sends a GA Code by email to user\n            data = {\n                'user_id': $(this).data('id'),\n                'demand_origin': 'users_management_list',\n                'send_email': 1\n            }\n\n            $.post(\n                'sources/main.queries.php', {\n                    type: 'ga_generate_qr',\n                    type_category: 'action_user',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('share_sent_ok'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            // ---\n        } else if ($(this).data('action') === 'new-password') {\n            var userId = $(this).data('id');\n            // Check if no tasks on-going for this user\n            data_to_send = {\n                'user_id': userId,\n            }\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get-user-infos\",\n                    data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    \n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Continue   \n                        if (data.user_infos.ongoing_process_id !== null) {  \n                            toastr.remove();\n                            toastr.warning(\n                                data.message,\n                                '<?php echo langHdl('user_encryption_ongoing'); ?>', {\n                                    timeOut: 10000,\n                                    progressBar: true\n                                }\n                            ); \n                        } else {                 \n                            // HIde\n                            $('.content-header, .content').addClass('hidden');\n\n                            // PRepare info\n                            $('#dialog-admin-change-user-password-info')\n                                .html('<i class=\"icon fas fa-info mr-2\"></i><?php echo langHdl('admin_change_user_password_info'); ?>');\n                            $(\"#dialog-admin-change-user-password-progress\").html('<?php echo langHdl('provide_current_psk_and_click_launch'); ?>');\n\n                            // SHow form\n                            $('#dialog-admin-change-user-password').removeClass('hidden');\n\n                            $('#admin_change_user_password_target_user').val(userId);\n                        }\n                    }\n                }\n            );\n\n            // ---\n        } else if ($(this).data('action') === 'new-enc-code') {\n            // HIde\n            $('.content-header, .content').addClass('hidden');\n\n            // PRepare info\n            $('#dialog-admin-change-user-password-info')\n                .html('<i class=\"icon fas fa-info mr-2\"></i><?php echo langHdl('admin_change_user_encryption_code_info'); ?>');\n            $(\"#dialog-admin-change-user-password-progress\").html('<?php echo langHdl('provide_current_psk_and_click_launch'); ?>');\n\n            // SHow form\n            $('#dialog-admin-change-user-password').removeClass('hidden');\n\n            $('#admin_change_user_encryption_code_target_user').val($(this).data('id'));\n            // ---\n        } else if ($(this).data('action') === 'logs') {\n            $('#row-list, #row-folders').addClass('hidden');\n            $('#row-logs').removeClass('hidden');\n            $('#row-logs-title').text(\n                $(this).data('fullname')\n            )\n            var userID = $(this).data('id');\n\n            //Launch the datatables pluggin\n            var oTableLogs = $('#table-logs').DataTable({\n                'destroy': true,\n                'paging': true,\n                'searching': true,\n                'order': [\n                    [1, 'asc']\n                ],\n                'info': true,\n                'processing': false,\n                'serverSide': true,\n                'responsive': true,\n                'select': true,\n                'stateSave': false,\n                'retrieve': false,\n                'autoWidth': true,\n                'ajax': {\n                    url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/user.logs.datatables.php',\n                    data: function(d) {\n                        d.userId = userID;\n                    }\n                },\n                'language': {\n                    'url': '<?php echo $SETTINGS['cpassman_url']; ?>/includes/language/datatables.<?php echo $_SESSION['user']['user_language']; ?>.txt'\n                },\n                'columns': [{\n                        className: 'dt-body-left'\n                    },\n                    {\n                        className: 'dt-body-left'\n                    },\n                    {\n                        className: 'dt-body-left'\n                    }\n                ],\n                'preDrawCallback': function() {\n                    toastr.remove();\n                    toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                },\n                'drawCallback': function() {\n                    // Tooltips\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                },\n            });\n\n\n        } else if ($(this).data('action') === 'access-rights') {\n            $('#row-list, #row-logs').addClass('hidden');\n            $('#row-folders').removeClass('hidden');\n            $('#row-folders-title').text(\n                $(this).data('fullname')\n            )\n            var userID = $(this).data('id');\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            $('#row-folders-results').html('');\n\n            // Send query\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'user_folders_rights',\n                    user_id: userID,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Show table\n                        $('#row-folders-results').html(data.html);\n\n                        // Prepare tooltips\n                        $('.infotip').tooltip();\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'disable-user') {\n            var userID = $(this).data('id');\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                '<div class=\"form-group\">'+\n                    '<span class=\"mr-3\"><?php echo langHdl('user_disable_status'); ?></span>'+\n                    '<input type=\"checkbox\" class=\"form-check-input form-control flat-blue\" id=\"user-disabled\">' +\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $('input[type=\"checkbox\"].flat-blue').iCheck({\n                checkboxClass: 'icheckbox_flat-blue',\n            });\n            $(document).on('click', '#warningModalButtonAction', function() {                \n\n                // Show spinner\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                $('#warningModal').modal('hide');\n\n                var data = {\n                    'user_id': userID,\n                    'disabled_status': $('#user-disabled').prop('checked') === true ? 1 : 0,\n                };\n\n                // Send query\n                $.post(\n                    'sources/users.queries.php', {\n                        type: 'manage_user_disable_status',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            // Show icon or not\n                            if ($('#user-disabled').prop('checked') === true) {\n                                $('#user-login-'+userID).before('<i class=\"fas fa-user-slash infotip text-danger mr-2\" title=\"<?php echo langHdl('account_is_locked');?>\" id=\"user-disable-'+userID+'\"></i>');\n                            } else {\n                                $('#user-disable-'+userID).remove();\n                            }\n                            \n\n                            // Prepare tooltips\n                            $('.infotip').tooltip();\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n                        }\n                    }\n                );\n            });\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'delete-user') {\n            var userID = $(this).data('id');\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                '<div class=\"form-group\">'+\n                    '<span class=\"mr-3\"><?php echo langHdl('by_clicking_this_checkbox_confirm_user_deletion'); ?></span>'+\n                    '<input type=\"checkbox\" class=\"form-check-input form-control flat-blue\" id=\"user-to-delete\">' +\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $('input[type=\"checkbox\"].flat-blue').iCheck({\n                checkboxClass: 'icheckbox_flat-blue',\n            });\n            $(document).on('click', '#warningModalButtonAction', function() {\n                if ($('#user-to-delete').prop('checked') === false) {\n                    $('#warningModal').modal('hide');\n                    return false;\n                }             \n\n                // Show spinner\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                $('#warningModal').modal('hide');\n\n                var data = {\n                    'user_id': userID,\n                };\n\n                // Send query\n                $.post(\n                    'sources/users.queries.php', {\n                        type: 'delete_user',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            // refresh table content\n                            oTable.ajax.reload();\n\n                            // Prepare tooltips\n                            $('.infotip').tooltip();\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n                        }\n                    }\n                );\n            });\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'refresh') {\n            $('.form').addClass('hidden');\n            $('#users-list').removeClass('hidden');\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n            oTable.ajax.reload();\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'propagate') {\n            $('#row-list, #row-folders').addClass('hidden');\n            $('#row-propagate').removeClass('hidden');\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Load list of users\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'get_list_of_users_for_sharing',\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Build select\n                        var html = '';\n                        $.each(data.values, function(i, value) {\n                            html += '<option value=\"' + value.id + '\" data-groups=\"' + value.groups + '\" data-managed-by=\"' + value.managedBy + '\" data-folders-allowed=\"' + value.foldersAllowed + '\" data-folders-forbidden=\"' + value.foldersForbidden + '\" data-groups-id=\"' + value.groupIds + '\" data-managed-by-id=\"' + value.managedById + '\" data-folders-allowed-id=\"' + value.foldersAllowedIds + '\" data-folders-forbidden-id=\"' + value.foldersForbiddenIds + '\" data-admin=\"' + value.admin + '\" data-manager=\"' + value.manager + '\" data-hr=\"' + value.hr + '\" data-read-only=\"' + value.readOnly + '\" data-personal-folder=\"' + value.personalFolder + '\" data-root-folder=\"' + value.rootFolder + '\">' + value.name + ' ' + value.lastname + ' [' + value.login + ']</option>';\n                        });\n\n                        $('#propagate-from, #propagate-to')\n                            .find('option')\n                            .remove()\n                            .end()\n                            .append(html)\n                            .change();\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'do-propagate') {\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n\n            // destination users\n            var userIds = $('#propagate-to').val();\n\n            if (userIds.length === 0) return false;\n\n            // Prepare data\n            var data = {\n                source_id: $(\"#propagate-from option:selected\").val(),\n                destination_ids: userIds,\n                user_functions: $(\"#propagate-from option:selected\").data('groups-id'),\n                user_managedby: $(\"#propagate-from option:selected\").data('managed-by-id'),\n                user_fldallowed: $(\"#propagate-from option:selected\").data('folders-allowed-id'),\n                user_fldforbid: $(\"#propagate-from option:selected\").data('folders-forbidden-id'),\n                user_admin: $(\"#propagate-from option:selected\").data('admin'),\n                user_manager: $(\"#propagate-from option:selected\").data('manager'),\n                user_hr: $(\"#propagate-from option:selected\").data('hr'),\n                user_readonly: $(\"#propagate-from option:selected\").data('read-only'),\n                user_personalfolder: $(\"#propagate-from option:selected\").data('personal-folder'),\n                user_rootfolder: $(\"#propagate-from option:selected\").data('root-folder'),\n            };\n            if (debugJavascript === true) console.log(data);\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"update_users_rights_sharing\",\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        $('.clear-me').val('');\n                        $('.select2').val('').change();\n                        $('.extra-form, #row-folders').addClass('hidden');\n                        $('#row-list').removeClass('hidden');\n\n                        // Prepare checks\n                        $('.form-check-input')\n                            .iCheck('disable')\n                            .iCheck('uncheck');\n\n                        // Remove action from store\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                            }\n                        );\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-sync') {\n            $('.form').addClass('hidden');\n            $('#row-ldap').removeClass('hidden');\n\n            refreshListUsersLDAP();\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'close') {\n            $('.extra-form').addClass('hidden');\n            $('#users-list').removeClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-existing-users') {\n            refreshListUsersLDAP();\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-add-role') {\n            $('#ldap-users-table').addClass('hidden');\n            $('#ldap-new-role').removeClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'close-new-role') {\n            $('#ldap-users-table').removeClass('hidden');\n            $('#ldap-new-role').addClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'add-new-role') {\n            if ($('#ldap-new-role-selection').val() === '') {\n                // ERROR\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                    '<?php echo langHdl('caution'); ?>', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n            } else {\n                // Add new role to Teampass\n\n                // Prepare data\n                var data = {\n                    'label': DOMPurify.sanitize($('#ldap-new-role-selection').val()),\n                    'complexity': $('#ldap-new-role-complexity').val(),\n                    'allowEdit': 0,\n                    'action': 'add_role',\n                    'folderId' : -1,\n                }\n\n                if (debugJavascript === true) console.log(data);\n                \n                $.post(\n                    'sources/roles.queries.php', {\n                        type: 'change_role_definition',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error === true) {\n                            // ERROR\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            $('#ldap-new-role-selection').val('');\n                            $('#ldap-users-table').removeClass('hidden');\n                            $('#row-ldap-body').html('');\n                            $('#ldap-new-role').addClass('hidden');\n\n                            refreshListUsersLDAP();\n                        }\n                    }\n                );\n\n            }\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'new-otp') {// Check if no tasks on-going for this user\n            data_to_send = {\n                'user_id': $(this).data('id'),\n            }\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get-user-infos\",\n                    data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Continue   \n                        if (data.user_infos.ongoing_process_id !== null) {  \n                            toastr.remove();\n                            toastr.warning(\n                                data.message,\n                                '<?php echo langHdl('user_encryption_ongoing'); ?>', {\n                                    timeOut: 10000,\n                                    progressBar: true\n                                }\n                            ); \n                        } else {  \n                            var userID = data.user_infos.id;\n                            showModalDialogBox(\n                                '#warningModal',\n                                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                                '<div class=\"form-group\">'+\n                                    '<span class=\"mr-3\"><?php echo langHdl('generate_new_otp_informations'); ?></span>'+\n                                '</div>',\n                                '<?php echo langHdl('perform'); ?>',\n                                '<?php echo langHdl('cancel'); ?>'\n                            );\n                            \n                            $(document).on('click', '#warningModalButtonAction', function() {                \n                                // prepare user\n\n                                // Show spinner\n                                toastr.remove();\n                                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n                                // generate keys\n                                generateUserKeys(\n                                    {\n                                        'user_id': userID,\n                                    },\n                                    ''\n                                );\n                            });\n                        }\n                    }\n                }\n            );\n\n            /**/\n            //\n            // --- END\n            //\n        }\n    });\n\n\n    /**\n     * Permit to show some info while selecting a  User\n     */\n    $(document).on('change', '#propagate-from', function() {\n        var selectedOption = $(this).find('option:selected');\n        $('#propagate-user-roles').html($(selectedOption).data('groups'));\n        $('#propagate-user-managedby').html($(selectedOption).data('managed-by'));\n        $('#propagate-user-allowed').html($(selectedOption).data('folders-allowed'));\n        $('#propagate-user-fordidden').html($(selectedOption).data('folders-forbidden'));\n    });\n\n\n    /**\n     * TRACK CHANGES IN FORM\n     */\n    $('#form-user .track-change')\n        .on('change', function() {\n            if ($(this).val() !== null && $(this).val().length > 0) {\n                userDidAChange = true;\n                $(this).data('change-ongoing', true);\n            } else {\n                $(this).data('change-ongoing', false);\n            }\n        })\n        .on('ifChecked', function() {\n            userDidAChange = true;\n            $(this).data('change-ongoing', true);\n        });\n\n    //************************************************************* */\n\n\n\n    /**\n     * EDIT EACH ROW\n     */\n    var currentText = '',\n        item = '',\n        initialColumnWidth = '',\n        actionOnGoing = false,\n        field = '',\n        columnId = '',\n        tableDef = {\n            'login': {\n                'column': 2\n            },\n            'name': {\n                'column': 3\n            },\n            'lastname': {\n                'column': 4\n            },\n            'isAdministratedByRole': {\n                'column': 5\n            },\n            'fonction_id': {\n                'column': 6\n            }\n        };\n\n    /**\n     * EDIT TEXT INPUT\n     */\n    $(document).on('click', '.edit-text', function() {\n        currentText = $(this).text();\n        item = $(this);\n        field = $(this).data('field');\n        columnId = tableDef[field].column;\n\n        $(this)\n            .addClass('hidden')\n            .after('<input type=\"text\" class=\"form-control form-item-control remove-me save-me\" value=\"' + currentText + '\">');\n\n        // Store current width and change it\n        initialColumnWidth = $('#table-users thead th:eq(' + (columnId - 1) + ')').width();\n        $('#table-users thead th:eq(' + (columnId - 1) + ')').width('300');\n        if (debugJavascript === true) console.log('Width ' + initialColumnWidth)\n\n        // Launch save on focus lost\n        $('.save-me')\n            .focus()\n            .focusout(function() {\n                if (actionOnGoing === false) {\n                    actionOnGoing = true;\n                    saveChange(item, currentText, $(this), field);\n                }\n            });\n    });\n\n    /**\n     * EDIT SELECT LIST\n     */\n    $(document).on('click', '.edit-select', function() {\n        currentText = $(this).text();\n        item = $(this);\n        field = $(this).data('field');\n        columnId = tableDef[field].column;\n        if (debugJavascript === true) console.log(columnId)\n\n        $(this).addClass('hidden');\n\n        // Show select\n        $(\"#select-managedBy\")\n            .insertAfter('#' + $(this).attr('id'))\n            .after('<i class=\"fa fa-close text-danger pointer temp-button mr-3\" id=\"select-managedBy-close\"></i>');\n        $('#select-managedBy option[value=\"' + $(this).data('value') + '\"]').prop('selected', true);\n\n        // Store current width and change it\n        initialColumnWidth = $('#table-users thead th:eq(' + (columnId - 1) + ')').width();\n        $('#table-users thead th:eq(' + (columnId - 1) + ')').width('300');\n\n        // Launch save on focus lost\n        $('.save-me')\n            .focus()\n            .focusout(function() {\n                if (actionOnGoing === false) {\n                    actionOnGoing = true;\n                    saveChange(item, currentText, $(this), field);\n                }\n            });\n\n        $('#select-managedBy-close').click(function() {\n            $(\"#select-managedBy\").detach().appendTo('#hidden-managedBy');\n            $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth);\n            $('.edit-select').removeClass('hidden');\n            $('.tmp-loader, .temp-button').remove();\n        });\n    });\n\n\n    /**\n     * MANAGE USER KEYS PRESSED\n     */\n    $(document).keyup(function(e) {\n        if (e.keyCode === 27) {\n            // Escape Key\n            $('.remove-me, .tmp-loader').remove();\n            $('.edit-text').removeClass('hidden');\n        }\n        if (e.keyCode === 13 && actionOnGoing === false) {\n            // Enter key\n            actionOnGoing = true;\n            saveChange(item, currentText, $(':focus'), field);\n        }\n    });\n\n\n    function saveChange(item, currentText, change, field) {\n        if (change.val() !== currentText) {\n            change\n                .after('<i class=\"fa fa-refresh fa-spin fa-fw tmp-loader\"></i>');\n\n            // prepare data\n            var data = {\n                'user_id': item.data('id'),\n                'field': field,\n                'value': change.val()\n            };\n            \n            // Save\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'save_user_change',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    if (change.is('input') === true) {\n                        change.remove();\n                        $('.tmp-loader').remove();\n                        item\n                            .text(change.val())\n                            .removeClass('hidden');\n                        $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n                    } else if (change.is('select') === true) {\n                        $(\"#select-managedBy\").detach().appendTo('#hidden-managedBy');\n                        $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n                        $('.tmp-loader, .temp-button').remove();\n\n                        // Show change\n                        if (debugJavascript === true) console.log(change)\n                        item\n                            .html(change.text())\n                            .attr('data-value', change.val())\n                            .removeClass('hidden');\n                    }\n                    actionOnGoing = false;\n                },\n                'json'\n            );\n        } else {\n            change.remove();\n            $('.tmp-loader').remove();\n            item\n                .text(change.val())\n                .removeClass('hidden');\n            $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n        }\n    }\n\n    /**\n     * Refreshing list of users from LDAP\n     *\n     * @return void\n     */\n    function refreshListUsersLDAP() {\n        // FIND ALL USERS IN LDAP\n        //toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n        $('#row-ldap-body')\n            .addClass('overlay')\n            .html('');\n\n        $.post(\n            \"sources/users.queries.php\", {\n                type: \"get_list_of_users_in_ldap\",\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data)\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // loop on users list\n                    var html = '',\n                        groupsNumber = 0,\n                        userLogin,\n                        group;\n                    var entry;\n                    $.each(data.entries, function(i, entry) {\n                        userLogin = entry[store.get('teampassSettings').ldap_user_attribute] !== undefined ? entry[store.get('teampassSettings').ldap_user_attribute][0] : '';\n                        // CHeck if not empty\n                        if (userLogin !== '') {\n                            html += '<tr>' +\n                                '<td>' + userLogin +\n                                '</td>' +\n                                '<td>' +\n                                '<i class=\"fas fa-info-circle ml-3 infotip text-info pointer text-center\" data-toggle=\"tooltip\" data-html=\"true\" title=\"' +\n                                '<p class=\\'text-left\\'><i class=\\'fas fa-user mr-1\\'></i>' +\n                                (entry.displayname !== undefined ? '' + entry.displayname[0] + '' : '') + '</p>' +\n                                '<p class=\\'text-left\\'><i class=\\'fas fa-envelope mr-1\\'></i>' + (entry.mail !== undefined ? '' + entry.mail[0] + '' : '') + '</p>' +\n                                '\"></i>' +\n                                '</td><td>' +\n                                (entry.userInTeampass === 0 ? '' :\n                                '<i class=\"fas ' + (entry.userAuthType !== undefined && entry.userAuthType === 'ldap' ? 'fa-toggle-on text-info ' : 'fa-toggle-off ') + 'mr-1 text-center pointer action-change-ldap-synchronization\" data-user-id=\"' + entry.userInTeampass + '\" data-user-auth-type=\"' + entry.userAuthType + '\"></i>') +\n                                '</td><td>';\n                            groupsNumber = 0;\n                            $.each(entry.memberof, function(j, group) {\n                                var regex = String(group).replace('CN=', 'cn').match(/(cn=)(.*?),/g);\n                                if (regex !== null) {\n                                    group = regex[0].replace('cn=', '').replace(',', '');\n                                    // Check if this user has this group in Teampass\n                                    if (entry.teampass !== undefined && entry.ldap_groups.filter(p => p.title === group).length > 0) {\n                                        html += group + '<i class=\"far fa-check-circle text-success ml-2 infotip\" title=\"<?php echo langHdl('user_has_this_role_in_teampass'); ?>\"></i><br>';\n                                    } else {\n                                        // Check if this group exists in Teampass and propose to add it\n                                        tmp = data.teampass_groups.filter(p => p.title === group);\n                                        if (tmp.length > 0 && entry.userInTeampass === 0) {\n                                            html += group + '<i class=\"fas fa-user-graduate text-primary ml-2 pointer infotip action-add-role-to-user\" title=\"<?php echo langHdl('add_user_to_role'); ?>\" data-user-id=\"' + entry.userInTeampass + '\" data-role-id=\"' + tmp[0].id + '\"></i><br>';\n                                        } else {\n                                            html += group + '<br>';\n                                        }\n                                    }\n                                    groupsNumber++;\n                                }\n                            });\n                            html += '</td><td>';\n                            // Action icons\n                            html += (entry.userInTeampass === 0 ? '<i class=\"fas fa-user-plus text-warning ml-2 infotip pointer add-user-icon\" title=\"<?php echo langHdl('add_user_in_teampass'); ?>\" data-user-login=\"' + userLogin + '\" data-user-email=\"' + (entry.mail !== undefined ? entry.mail[0] : '') + '\" data-user-name=\"' + (entry.givenname !== undefined ? entry.givenname[0] : '') + '\" data-user-lastname=\"' + (entry.sn !== undefined ? entry.sn[0] : '') + '\"></i>' : '');\n\n                            // Only of not admin\n                            /*if (userLogin !== 'admin') {\n                                html += (entry.teampass.auth === 'ldap' ? '<i class=\"fas fa-link text-success ml-2 infotip pointer auth-local\" title=\"<?php echo langHdl('ldap_user_password_is_used_for_authentication'); ?>\" data-user-id=\"' + entry.teampass.id + '\"></i>' : '<i class=\"fas fa-unlink text-orange ml-2 infotip pointer auth-ldap\" title=\"<?php echo langHdl('local_user_password_is_used_for_authentication'); ?>\" data-user-id=\"' + entry.teampass.id + '\"></i>');\n                            }*/\n\n                            html += '</td></tr>';\n                        }\n                    });\n\n                    $('#row-ldap-body').html(html);\n\n                    $('#row-ldap-body').removeClass('overlay');\n\n                    $('.infotip').tooltip('update');\n\n                    // Build list box of new roles that could be created\n                    $('#ldap-new-role-selection')\n                        .empty()\n                        .append('<option value=\"\">--- <?php echo langHdl('select'); ?> ---</option>');\n                    $.each(data.ldap_groups, function(i, group) {\n                        tmp = data.teampass_groups.filter(p => p.title === group);\n                        if (tmp.length === 0) {\n                            $('#ldap-new-role-selection').append(\n                                '<option value=\"' + group + '\">' + group + '</option>'\n                            );\n                        }\n                    });\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    $('.close-toastr-progress').closest('.toast').remove();\n                }\n            }\n        );\n    }\n\n    /**\n     * Permits to add a role to a Teampass user\n     *\n     * @return void\n     */\n    function addRoleToUser() {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'user_id': $('.selected-role').data('user-id'),\n            'field': 'fonction_id',\n            'value': $('.selected-role').data('role-id'),\n            'context': 'add_one_role_to_user'\n        };\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'save_user_change',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // CHange icon\n                    $('.selected-role')\n                        .removeClass('fas fa-user-graduate text-primary pointer action-add-role-to-user')\n                        .addClass('far fa-check-circle text-success')\n                        .prop('title', '<?php echo langHdl('user_has_this_role_in_teampass'); ?>');\n\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n                $('.selected-role').removeClass('selected-role');\n            }\n        );\n    }\n\n    $(document).on('click', '.action-add-role-to-user', function() {\n        $(this).addClass('selected-role');\n\n        toastr.warning(\n            '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"addRoleToUser()\"><?php echo langHdl('please_confirm'); ?></button>',\n            '<?php echo langHdl('info'); ?>', {\n                positionClass: 'toast-top-center',\n                closeButton: true\n            }\n        );\n    });\n\n    // Enable/disable ldap sync on user\n    $(document).on('click', '.action-change-ldap-synchronization', function() {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'user_id': $(this).data('user-id'),\n            'field': 'auth_type',\n            'value': $(this).hasClass('fa-toggle-off') === true ? 'ldap' : 'local',\n            'context': ''\n        },\n        selectedIcon = $(this);\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'save_user_change',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // CHange icon format\n                    if (selectedIcon.hasClass('fa-toggle-off') === true) {\n                        selectedIcon\n                            .removeClass('fa-toggle-off')\n                            .addClass('fa-toggle-on text-info')\n                            .prop('data-user-auth-type', 'ldap');\n                    } else {\n                        selectedIcon\n                            .removeClass('fa-toggle-on text-info')\n                            .addClass('fa-toggle-off')\n                            .prop('data-user-auth-type', 'local');\n                    }\n\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * Permits to add an AD user in Teampass\n     *\n     * @return void\n     */\n    function addUserInTeampass() {\n        $('#warningModal').modal('hide');\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n        // what roles\n        var roles = [];\n        $(\"#ldap-user-roles option:selected\").each(function() {\n            roles.push($(this).val())\n        });\n\n        // prepare data\n        var data = {\n            'login': DOMPurify.sanitize($('.selected-user').data('user-login')),\n            'name': DOMPurify.sanitize($('.selected-user').data('user-name') === '' ? $('#ldap-user-name').val() : $('.selected-user').data('user-name')),\n            'lastname': DOMPurify.sanitize($('.selected-user').data('user-lastname')),\n            'email': DOMPurify.sanitize($('.selected-user').data('user-email')),\n            'roles' : roles,\n        };\n        if (debugJavascript === true) console.log(data)\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'add_user_from_ldap',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n                userTemporaryCode = data.user_code;\n                constVisibleOTP = data.visible_otp;\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {                    \n                    generateUserKeys(data, userTemporaryCode);\n                }\n            }\n        );\n    }\n\n\n    function generateUserKeys(data, userTemporaryCode)\n    {\n        // manage keys encryption for new user\n        // Case where we need to encrypt new keys for the user\n        // Process is: \n        // 2/ clear all keys for this user\n        // 3/ generate keys for this user with encryption key\n\n        \n        // If expected to create new encryption key\n        var parameters = {\n            'user_id': data.user_id,\n        };\n\n        if (debugJavascript === true) {\n            console.log(parameters);\n            console.info('Prepare TASK for new user encryption keys')\n        }\n        $.post(\n            'sources/main.queries.php', {\n                type: 'generate_temporary_encryption_key',\n                type_category: 'action_key',\n                data: prepareExchangedData(JSON.stringify(parameters), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data_otc) {\n                data_otc = prepareExchangedData(data_otc, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                if (data_otc.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data_otc.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // If expected, show the OPT to the admin\n                    if (data_otc.visible_otp === true) {\n                        showModalDialogBox(\n                            '#warningModal',\n                            '<i class=\"fa-solid fa-user-secret mr-2\"></i><<?php echo langHdl('your_attention_is_required'); ?>',\n                            '<?php echo langHdl('show_encryption_code_to_admin'); ?>' +\n                            '<div><input class=\"form-control form-item-control flex-nowrap ml-2\" value=\"' + data_otc.code + '\" readonly></div>',\n                            '',\n                            '<?php echo langHdl('close'); ?>'\n                        );\n                    }\n\n                    // update the process\n                    // add all tasks\n                    var data_to_send = {\n                        user_id: data.user_id,\n                        user_code: data_otc.code,\n                    }\n\n                    //console.log(data_to_send);\n                    //return false;\n\n                    // Do query\n                    $.post(\n                        \"sources/users.queries.php\", {\n                            type: \"create_new_user_tasks\",\n                            data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                            key: '<?php echo $_SESSION['key']; ?>'\n                        },\n                        function(data_tasks) {\n                            data_tasks = prepareExchangedData(data_tasks, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                            \n                            if (data_tasks.error === true) {\n                                // error\n                                toastr.remove();\n                                toastr.error(\n                                    data_tasks.message,\n                                    '<?php echo langHdl('caution'); ?>', {\n                                        timeOut: 5000,\n                                        progressBar: true\n                                    }\n                                );\n                            } else {\n                                // show message to user\n                                // Finalizing\n                                //$('#warningModal').modal('hide');\n\n                                // Now close in progress toast\n                                $('.close-toastr-progress').closest('.toast').remove();\n                                \n                                // refresh the list of users in LDAP not added in Teampass\n                                refreshListUsersLDAP();    \n\n                                // Rrefresh list of users in Teampass\n                                oTable.ajax.reload();\n\n                                toastr.success(\n                                    '<?php echo langHdl('done'); ?>',\n                                    '', {\n                                        timeOut: 1000\n                                    }\n                                );\n                            }\n                        }\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Permits to change the auth type of the user\n     *\n     * @return void\n     */\n    function changeUserAuthType(auth) {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'id': $('.selected-user').data('user-id'),\n            'auth_type': auth\n        };\n        if (debugJavascript === true) console.log(data)\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'change_user_auth_type',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    refreshListUsersLDAP();\n                }\n            }\n        );\n    }\n\n    $(document)\n        .on('click', '.add-user-icon', function() {\n            var thisElement = $(this);\n            $(thisElement).addClass('selected-user');\n\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-user-plus fa-lg warning mr-2\"></i><?php echo langHdl('new_ldap_user_info'); ?> <b>'+$(this)[0].dataset.userLogin+'</b>',\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('name'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-name\" value=\"'+ $(this).attr('data-user-name')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('lastname'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-lastname\" value=\"'+ $(this).attr('data-user-lastname')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('email'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-email\" value=\"'+ $(this).attr('data-user-email')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-roles\"><?php echo langHdl('roles'); ?></label>'+\n                    '<select id=\"ldap-user-roles\" class=\"form-control form-item-control select2 required\" style=\"width:100%;\" multiple=\"multiple\">'+\n                    '<?php echo $optionsRoles; ?></select>'+\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $(document).on('click', '#warningModalButtonAction', function() {\n                if ($('#ldap-user-name').val() !== \"\" && $('#ldap-user-roles :selected').length > 0) {\n                    addUserInTeampass();\n                    $(thisElement).removeClass('selected-user');\n                }\n            });\n            $(document).on('click', '#warningModalButtonClose', function() {\n                $(thisElement).removeClass('selected-user');\n            });\n        })\n        .on('click', '.auth-ldap', function() {\n            $(this).addClass('selected-user');\n\n            toastr.warning(\n                '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"changeUserAuthType(\\'ldap\\')\"><?php echo langHdl('please_confirm'); ?></button>',\n                '<?php echo langHdl('change_authentification_type_to_ldap'); ?>', {\n                    positionClass: 'toast-top-center',\n                    closeButton: true\n                }\n            );\n        })\n        .on('click', '.auth-local', function() {\n            $(this).addClass('selected-user');\n\n            toastr.warning(\n                '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"changeUserAuthType(\\'local\\')\"><?php echo langHdl('please_confirm'); ?></button>',\n                '<?php echo langHdl('change_authentification_type_to_local'); ?>', {\n                    positionClass: 'toast-top-center',\n                    closeButton: true\n                }\n            );\n        });\n\n\n\n    //]]>\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n * @project   Teampass\n * @file      main.queries.php\n * ---\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n * @copyright 2009-2023 Teampass.net\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n * @see       https://www.teampass.net\n */\n\nset_time_limit(600);\n\nif (isset($_SESSION) === false) {\n    include_once 'SecureHandler.php';\n    session_name('teampass_session');\n    session_start();\n    $_SESSION['CPM'] = 1;\n}\n\nif (isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1) {\n    $_SESSION['error']['code'] = '1004';\n    include __DIR__.'/../error.php';\n    exit();\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php')) {\n    include '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php')) {\n    include './includes/config/tp.config.php';\n} else {\n    throw new Exception(\"Error file '/includes/config/tp.config.php' not exists\", 1);\n}\n\n// Define Timezone\ndate_default_timezone_set(isset($SETTINGS['timezone']) === true ? $SETTINGS['timezone'] : 'UTC');\n\n// DO CHECKS\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/config/include.php';\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\n$post_type = filter_input(INPUT_POST, 'type', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\nif (\n    isset($post_type) === true\n    && ($post_type === 'ga_generate_qr'\n        //|| $post_type === 'recovery_send_pw_by_email'\n        //|| $post_type === 'recovery_generate_new_password'\n        || $post_type === 'get_teampass_settings')\n) {\n    // continue\n    mainQuery($SETTINGS);\n} elseif (\n    isset($_SESSION['user_id']) === true\n    && checkUser($_SESSION['user_id'], $_SESSION['key'], 'home', $SETTINGS) === false\n) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED; //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit();\n} elseif ((isset($_SESSION['user_id']) === true\n        && isset($_SESSION['key'])) === true\n    || (isset($post_type) === true\n        //&& $post_type === 'change_user_language'\n        && null !== filter_input(INPUT_POST, 'data', FILTER_SANITIZE_FULL_SPECIAL_CHARS, FILTER_FLAG_NO_ENCODE_QUOTES))\n) {\n    // continue\n    mainQuery($SETTINGS);\n} else {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED; //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit();\n}\n\n/**\n * Undocumented function.\n */\nfunction mainQuery(array $SETTINGS)\n{\n    header('Content-type: text/html; charset=utf-8');\n    header('Cache-Control: no-cache, must-revalidate');\n    error_reporting(E_ERROR);\n\n\n    // Includes\n    include_once $SETTINGS['cpassman_dir'] . '/includes/language/' . $_SESSION['user']['user_language'] . '.php';\n    include_once $SETTINGS['cpassman_dir'] . '/includes/config/settings.php';\n    include_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n    include_once $SETTINGS['cpassman_dir'] . '/sources/SplClassLoader.php';\n\n    // Connect to mysql server\n    include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Database/Meekrodb/db.class.php';\n\n    DB::$host = DB_HOST;\n    DB::$user = DB_USER;\n    DB::$password = defined('DB_PASSWD_CLEAR') === false ? defuseReturnDecrypted(DB_PASSWD, $SETTINGS) : DB_PASSWD_CLEAR;\n    DB::$dbName = DB_NAME;\n    DB::$port = DB_PORT;\n    DB::$encoding = DB_ENCODING;\n    DB::$ssl = DB_SSL;\n    DB::$connect_options = DB_CONNECT_OPTIONS;\n\n    // User's language loading\n    include_once $SETTINGS['cpassman_dir'] . '/includes/language/' . $_SESSION['user']['user_language'] . '.php';\n\n    // Prepare post variables\n    $post_key = filter_input(INPUT_POST, 'key', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n    $post_type = filter_input(INPUT_POST, 'type', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n    $post_type_category = filter_input(INPUT_POST, 'type_category', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n    $post_data = filter_input(INPUT_POST, 'data', FILTER_SANITIZE_FULL_SPECIAL_CHARS, FILTER_FLAG_NO_ENCODE_QUOTES);\n\n    // Check KEY\n    if (isValueSetNullEmpty($post_key) === true) {\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('key_is_not_correct'),\n            ),\n            'encode'\n        );\n        return false;\n    }\n    \n    // decrypt and retreive data in JSON format\n    $dataReceived = empty($post_data) === false ? prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        $post_data,\n        'decode'\n    ) : '';\n\n    switch ($post_type_category) {\n        case 'action_password':\n            echo passwordHandler($post_type, $dataReceived, $SETTINGS);\n            break;\n\n        case 'action_user':\n            echo userHandler($post_type, $dataReceived, $SETTINGS);\n            break;\n\n        case 'action_mail':\n            echo mailHandler($post_type, $dataReceived, $SETTINGS);\n            break;\n\n        case 'action_key':\n            echo keyHandler($post_type, $dataReceived, $SETTINGS);\n            break;\n\n        case 'action_system':\n            echo systemHandler($post_type, $dataReceived, $SETTINGS);\n            break;\n    }\n    \n    // Manage type of action asked\n    //switch ($post_type) {\n        /*\n         * TODO Check if suggestions are existing\n         */\n        /*\n        case 'is_existings_suggestions':\n            if ($_SESSION['user_manager'] === '1' || $_SESSION['is_admin'] === '1') {\n                $count = 0;\n                DB::query('SELECT * FROM ' . prefixTable('items_change'));\n                $count += DB::count();\n                DB::query('SELECT * FROM ' . prefixTable('suggestion'));\n                $count += DB::count();\n\n                echo '[ { \"error\" : \"\" , \"count\" : \"' . $count . '\" , \"show_sug_in_menu\" : \"0\"} ]';\n                break;\n            }\n            \n            if (isset($_SESSION['nb_item_change_proposals']) && $_SESSION['nb_item_change_proposals'] > 0) {\n                echo '[ { \"error\" : \"\" , \"count\" : \"' . $_SESSION['nb_item_change_proposals'] . '\" , \"show_sug_in_menu\" : \"1\"} ]';\n                break;\n            }\n            \n            echo '[ { \"error\" : \"\" , \"count\" : \"\" , \"show_sug_in_menu\" : \"0\"} ]';\n\n            break;\n        */\n    //}\n}\n\n/**\n * Handler for all password tasks\n *\n * @param string $post_type\n * @param array|null|string $dataReceived\n * @param array $SETTINGS\n * @return string\n */\nfunction passwordHandler(string $post_type, /*php8 array|null|string*/ $dataReceived, array $SETTINGS): string\n{\n    switch ($post_type) {\n        case 'change_pw'://action_password\n            return changePassword(\n                (string) filter_var($dataReceived['new_pw'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                isset($dataReceived['current_pw']) === true ? (string) filter_var($dataReceived['current_pw'], FILTER_SANITIZE_FULL_SPECIAL_CHARS) : '',\n                (int) filter_var($dataReceived['complexity'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['change_request'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                $SETTINGS\n            );\n\n        /*\n        * Change user's authenticataion password\n        */\n        case 'change_user_auth_password'://action_password\n            return changeUserAuthenticationPassword(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['old_password'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (string) filter_var($dataReceived['new_password'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * User's authenticataion password in LDAP has changed\n        */\n        case 'change_user_ldap_auth_password'://action_password\n            return /** @scrutinizer ignore-call */ changeUserLDAPAuthenticationPassword(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                filter_var($dataReceived['previous_password'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                filter_var($dataReceived['current_password'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * test_current_user_password_is_correct\n        */\n        case 'test_current_user_password_is_correct'://action_password\n            return isUserPasswordCorrect(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['password'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * User's password has to be initialized\n        */\n        case 'initialize_user_password'://action_password\n            return initializeUserPassword(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['special'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (string) filter_var($dataReceived['password'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (bool) filter_var($dataReceived['self_change'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * Default case\n        */\n        default :\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                ),\n                'encode'\n            );\n    }\n}\n\n/**\n * Handler for all user tasks\n *\n * @param string $post_type\n * @param array|null|string $dataReceived\n * @param array $SETTINGS\n * @return string\n */\nfunction userHandler(string $post_type, /*php8 array|null|string*/ $dataReceived, array $SETTINGS): string\n{\n    switch ($post_type) {\n        /*\n        * Get info \n        */\n        case 'get_user_info'://action_user\n            return getUserInfo(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['fields'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * Increase the session time of User\n        */\n        case 'increase_session_time'://action_user\n            return increaseSessionDuration(\n                (int) filter_input(INPUT_POST, 'duration', FILTER_SANITIZE_NUMBER_INT)\n            );\n\n        /*\n        * Generate a password generic\n        */\n        case 'generate_password'://action_user\n            return generateGenericPassword(\n                (int) filter_input(INPUT_POST, 'size', FILTER_SANITIZE_NUMBER_INT),\n                (bool) filter_input(INPUT_POST, 'secure_pwd', FILTER_VALIDATE_BOOLEAN),\n                (bool) filter_input(INPUT_POST, 'lowercase', FILTER_VALIDATE_BOOLEAN),\n                (bool) filter_input(INPUT_POST, 'capitalize', FILTER_VALIDATE_BOOLEAN),\n                (bool) filter_input(INPUT_POST, 'numerals', FILTER_VALIDATE_BOOLEAN),\n                (bool) filter_input(INPUT_POST, 'symbols', FILTER_VALIDATE_BOOLEAN),\n                $SETTINGS\n            );\n\n        /*\n        * Refresh list of last items seen\n        */\n        case 'refresh_list_items_seen'://action_user\n            if (isset($_SESSION['user_id']) === false || (int) $_SESSION['user_id'] > 0) {\n                return refreshUserItemsSeenList(\n                    $SETTINGS\n                );\n\n            } else {\n                return json_encode(\n                    array(\n                        'error' => '',\n                        'existing_suggestions' => 0,\n                        'html_json' => '',\n                    ),\n                    JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP\n                );\n            }\n\n        /*\n        * This will generate the QR Google Authenticator\n        */\n        case 'ga_generate_qr'://action_user\n            return generateQRCode(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['demand_origin'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (string) filter_var($dataReceived['send_email'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (string) filter_var($dataReceived['login'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (string) filter_var($dataReceived['pwd'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * This will set the user ready\n        */\n        case 'user_is_ready'://action_user\n            return userIsReady(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (string) $SETTINGS['cpassman_dir']\n            );\n\n        /*\n        * Default case\n        */\n        default :\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                ),\n                'encode'\n            );\n    }\n}\n\n/**\n * Handler for all mail tasks\n *\n * @param string $post_type\n * @param array|null|string $dataReceived\n * @param array $SETTINGS\n * @return string\n */\nfunction mailHandler(string $post_type, /*php8 array|null|string */$dataReceived, array $SETTINGS): string\n{\n    switch ($post_type) {\n        /*\n        * CASE\n        * Send email\n        */\n        case 'mail_me'://action_mail\n            return sendMailToUser(\n                filter_var($dataReceived['receipt'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $dataReceived['body'],\n                (string) filter_var($dataReceived['subject'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (array) filter_var_array(\n                    $dataReceived['pre_replace'],\n                    FILTER_SANITIZE_FULL_SPECIAL_CHARS\n                ),\n                $SETTINGS\n            );\n        \n        /*\n        * Send emails not sent\n        */\n        case 'send_waiting_emails'://mail\n            sendEmailsNotSent(\n                $SETTINGS\n            );\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                    'message' => 'mail_sent',\n                ),\n                'encode'\n            );\n\n        /*\n        * Default case\n        */\n        default :\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                ),\n                'encode'\n            );\n    }\n}\n\n/**\n * Handler for all key related tasks\n *\n * @param string $post_type\n * @param array|null|string $dataReceived\n * @param array $SETTINGS\n * @return string\n */\nfunction keyHandler(string $post_type, /*php8 array|null|string */$dataReceived, array $SETTINGS): string\n{\n    switch ($post_type) {\n        /*\n        * Generate a temporary encryption key for user\n        */\n        case 'generate_temporary_encryption_key'://action_key\n            return generateOneTimeCode(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                $SETTINGS\n            );\n        \n        /*\n        * user_sharekeys_reencryption_start\n        */\n        case 'user_sharekeys_reencryption_start'://action_key\n            return startReEncryptingUserSharekeys(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (bool) filter_var($dataReceived['self_change'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * user_sharekeys_reencryption_next\n        */\n        case 'user_sharekeys_reencryption_next'://action_key\n            return continueReEncryptingUserSharekeys(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (bool) filter_var($dataReceived['self_change'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (string) filter_var($dataReceived['action'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (int) filter_var($dataReceived['start'], FILTER_SANITIZE_NUMBER_INT),\n                (int) filter_var($dataReceived['length'], FILTER_SANITIZE_NUMBER_INT),\n                $SETTINGS\n            );\n\n        /*\n        * user_psk_reencryption\n        */\n        case 'user_psk_reencryption'://action_key\n            return migrateTo3_DoUserPersonalItemsEncryption(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (int) filter_var($dataReceived['start'], FILTER_SANITIZE_NUMBER_INT),\n                (int) filter_var($dataReceived['length'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['userPsk'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * User's public/private keys change\n        */\n        case 'change_private_key_encryption_password'://action_key\n            return changePrivateKeyEncryptionPassword(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['current_code'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (string) filter_var($dataReceived['new_code'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (string) filter_var($dataReceived['action_type'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * Generates a KEY with CRYPT\n        */\n        case 'generate_new_key'://action_key\n            // load passwordLib library\n            $pwdlib = new SplClassLoader('PasswordLib', '../includes/libraries');\n            $pwdlib->register();\n            $pwdlib = new PasswordLib\\PasswordLib();\n            // generate key\n            $key = $pwdlib->getRandomToken(filter_input(INPUT_POST, 'size', FILTER_SANITIZE_NUMBER_INT));\n            return '[{\"key\" : \"' . htmlentities($key, ENT_QUOTES) . '\"}]';\n\n        /*\n        * Launch user keys change on his demand\n        */\n        case 'user_new_keys_generation'://action_key\n            return handleUserKeys(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['user_pwd'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (int) isset($SETTINGS['maximum_number_of_items_to_treat']) === true ? $SETTINGS['maximum_number_of_items_to_treat'] : NUMBER_ITEMS_IN_BATCH,\n                (string) filter_var($dataReceived['encryption_key'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (bool) filter_var($dataReceived['delete_existing_keys'], FILTER_VALIDATE_BOOLEAN),\n                (bool) filter_var($dataReceived['send_email_to_user'], FILTER_VALIDATE_BOOLEAN),\n                (bool) filter_var($dataReceived['encrypt_with_user_pwd'], FILTER_VALIDATE_BOOLEAN),\n                (bool) isset($dataReceived['generate_user_new_password']) === true ? filter_var($dataReceived['generate_user_new_password'], FILTER_VALIDATE_BOOLEAN) : false,\n                (string) filter_var($dataReceived['email_body'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n            );\n\n        /*\n        * Default case\n        */\n        default :\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                ),\n                'encode'\n            );\n    }\n}\n\n/**\n * Handler for all system tasks\n *\n * @param string $post_type\n * @param array|null|string $dataReceived\n * @param array $SETTINGS\n * @return string\n */\nfunction systemHandler(string $post_type, /*php8 array|null|string */$dataReceived, array $SETTINGS): string\n{\n    switch ($post_type) {\n        /*\n        * How many items for this user\n        */\n        case 'get_number_of_items_to_treat'://action_system\n            return getNumberOfItemsToTreat(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                $SETTINGS\n            );\n\n        /*\n        * refresh_folders_categories\n        */\n        case 'refresh_folders_categories'://action_system\n            handleFoldersCategories(\n                []\n            );\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                ),\n                'encode'\n            );\n\n        /*\n        * Sending statistics\n        */\n        case 'sending_statistics'://action_system\n            sendingStatistics(\n                $SETTINGS\n            );\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                ),\n                'encode'\n            );\n\n        /*\n            * Generate BUG report\n            */\n        case 'generate_bug_report'://action_system\n            return generateBugReport(\n                (array) $dataReceived,\n                $SETTINGS\n            );\n\n        /*\n        * get_teampass_settings\n        */\n        case 'get_teampass_settings'://action_system\n            // Encrypt data to return\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array_intersect_key(\n                    $SETTINGS, \n                    array(\n                        'ldap_user_attribute' => '',\n                        'enable_pf_feature' => '',\n                        'clipboard_life_duration' => '',\n                        'enable_favourites' => '',\n                        'copy_to_clipboard_small_icons' => '',\n                        'enable_attachment_encryption' => '',\n                        'google_authentication' => '',\n                        'agses_authentication_enabled' => '',\n                        'yubico_authentication' => '',\n                        'duo' => '',\n                        'personal_saltkey_security_level' => '',\n                        'enable_tasks_manager' => '',\n                    )\n                ),\n                'encode'\n            );\n\n        /*\n            * Generates a TOKEN with CRYPT\n            */\n        case 'save_token'://action_system\n            $token = GenerateCryptKey(\n                null !== filter_input(INPUT_POST, 'size', FILTER_SANITIZE_NUMBER_INT) ? (int) filter_input(INPUT_POST, 'size', FILTER_SANITIZE_NUMBER_INT) : 20,\n                null !== filter_input(INPUT_POST, 'secure', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) ? filter_input(INPUT_POST, 'secure', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) : false,\n                null !== filter_input(INPUT_POST, 'numeric', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) ? filter_input(INPUT_POST, 'numeric', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) : false,\n                null !== filter_input(INPUT_POST, 'capital', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) ? filter_input(INPUT_POST, 'capital', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) : false,\n                null !== filter_input(INPUT_POST, 'symbols', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) ? filter_input(INPUT_POST, 'symbols', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) : false,\n                null !== filter_input(INPUT_POST, 'lowercase', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) ? filter_input(INPUT_POST, 'lowercase', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) : false,\n                $SETTINGS\n            );\n            \n            // store in DB\n            DB::insert(\n                prefixTable('tokens'),\n                array(\n                    'user_id' => (int) $_SESSION['user_id'],\n                    'token' => $token,\n                    'reason' => filter_input(INPUT_POST, 'reason', FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                    'creation_timestamp' => time(),\n                    'end_timestamp' => time() + filter_input(INPUT_POST, 'duration', FILTER_SANITIZE_NUMBER_INT), // in secs\n                )\n            );\n\n            return '[{\"token\" : \"' . $token . '\"}]';\n\n        /*\n        * Default case\n        */\n        default :\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                ),\n                'encode'\n            );\n    }\n}\n\n\n/**\n * Permits to set the user ready\n *\n * @param integer $userid\n * @param string $dir\n * @return string\n */\nfunction userIsReady(int $userid, string $dir): string\n{\n    DB::update(\n        prefixTable('users'),\n        array(\n            'is_ready_for_usage' => 1,\n        ),\n        'id = %i',\n        $userid\n    );\n\n    // Send back\n    return prepareExchangedData(\n        $dir,\n        array(\n            'error' => false,\n        ),\n        'encode'\n    ); \n}\n\n/**\n * Provides the number of items\n *\n * @param int   $userId     User ID\n * @param array $SETTINGS   TeampassSettings\n *\n * @return string\n */\nfunction getNumberOfItemsToTreat(\n    int $userId,\n    array $SETTINGS\n): string\n{\n    // get number of items\n    DB::queryFirstRow(\n        'SELECT increment_id\n        FROM ' . prefixTable('sharekeys_items') .\n        ' WHERE user_id = %i',\n        $userId\n    );\n\n    // Send back\n    return prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n        array(\n            'error' => false,\n            'nbItems' => DB::count(),\n        ),\n        'encode'\n    );\n}\n\n\n/**\n * \n */\nfunction changePassword(\n    string $post_new_password,\n    string $post_current_password,\n    int $post_password_complexity,\n    string $post_change_request,\n    int $post_user_id,\n    array $SETTINGS\n): string\n{\n    // load passwordLib library\n    $pwdlib = new SplClassLoader('PasswordLib', '../includes/libraries');\n    $pwdlib->register();\n    $pwdlib = new PasswordLib\\PasswordLib();\n\n    // Prepare variables\n    $post_new_password_hashed = $pwdlib->createPasswordHash($post_new_password);\n\n    // User has decided to change is PW\n    if ($post_change_request === 'reset_user_password_expected'\n        || $post_change_request === 'user_decides_to_change_password'\n    ) {\n        // Check that current user is correct\n        if ((int) $post_user_id !== (int) $_SESSION['user_id']) {\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n        }\n\n        // check if expected security level is reached\n        $dataUser = DB::queryfirstrow(\n            'SELECT *\n            FROM ' . prefixTable('users') . ' WHERE id = %i',\n            $post_user_id\n        );\n\n        // check if badly written\n        $dataUser['fonction_id'] = array_filter(\n            explode(',', str_replace(';', ',', $dataUser['fonction_id']))\n        );\n        $dataUser['fonction_id'] = implode(',', $dataUser['fonction_id']);\n        DB::update(\n            prefixTable('users'),\n            array(\n                'fonction_id' => $dataUser['fonction_id'],\n            ),\n            'id = %i',\n            $post_user_id\n        );\n\n        if (empty($dataUser['fonction_id']) === false) {\n            $data = DB::queryFirstRow(\n                'SELECT complexity\n                FROM ' . prefixTable('roles_title') . '\n                WHERE id IN (' . $dataUser['fonction_id'] . ')\n                ORDER BY complexity DESC'\n            );\n        } else {\n            // In case user has no roles yet\n            $data = array();\n            $data['complexity'] = 0;\n        }\n\n        if ((int) $post_password_complexity < (int) $data['complexity']) {\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => '<div style=\"margin:10px 0 10px 15px;\">' . langHdl('complexity_level_not_reached') . '.<br>' .\n                        langHdl('expected_complexity_level') . ': <b>' . TP_PW_COMPLEXITY[$data['complexity']][1] . '</b></div>',\n                ),\n                'encode'\n            );\n        }\n\n        // Check that the 2 passwords are differents\n        if ($post_current_password === $post_new_password) {\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('password_already_used'),\n                ),\n                'encode'\n            );\n        }\n\n        // update sessions\n        $_SESSION['last_pw_change'] = mktime(0, 0, 0, (int) date('m'), (int) date('d'), (int) date('y'));\n        $_SESSION['validite_pw'] = true;\n\n        // BEfore updating, check that the pwd is correct\n        if ($pwdlib->verifyPasswordHash($post_new_password, $post_new_password_hashed) === true && empty($dataUser['private_key']) === false) {\n            $special_action = 'none';\n            if ($post_change_request === 'reset_user_password_expected') {\n                $_SESSION['user']['private_key'] = decryptPrivateKey($post_current_password, $dataUser['private_key']);\n            }\n\n            // update DB\n            DB::update(\n                prefixTable('users'),\n                array(\n                    'pw' => $post_new_password_hashed,\n                    'last_pw_change' => mktime(0, 0, 0, (int) date('m'), (int) date('d'), (int) date('y')),\n                    'last_pw' => $post_current_password,\n                    'special' => $special_action,\n                    'private_key' => encryptPrivateKey($post_new_password, $_SESSION['user']['private_key']),\n                ),\n                'id = %i',\n                $post_user_id\n            );\n            // update LOG\n            logEvents($SETTINGS, 'user_mngt', 'at_user_pwd_changed', (string) $_SESSION['user_id'], $_SESSION['login'], $post_user_id);\n\n            // Send back\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                    'message' => '',\n                ),\n                'encode'\n            );\n        }\n        // Send back\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('pw_hash_not_correct'),\n            ),\n            'encode'\n        );\n    }\n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_not_allowed_to'),\n        ),\n        'encode'\n    );\n}\n\n\n\nfunction generateQRCode(\n    $post_id,\n    $post_demand_origin,\n    $post_send_mail,\n    $post_login,\n    $post_pwd,\n    array $SETTINGS\n): string\n{\n    // is this allowed by setting\n    if (isKeyExistingAndEqual('ga_reset_by_user', 0, $SETTINGS) === true\n        && (null === $post_demand_origin || $post_demand_origin !== 'users_management_list')\n    ) {\n        // User cannot ask for a new code\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => \"113 \".langHdl('error_not_allowed_to').\" - \".isKeyExistingAndEqual('ga_reset_by_user', 1, $SETTINGS),\n            ),\n            'encode'\n        );\n    }\n\n    // Check if user exists\n    if (isValueSetNullEmpty($post_id) === true) {\n        // Get data about user\n        $data = DB::queryfirstrow(\n            'SELECT id, email, pw\n            FROM ' . prefixTable('users') . '\n            WHERE login = %s',\n            $post_login\n        );\n    } else {\n        $data = DB::queryfirstrow(\n            'SELECT id, login, email, pw\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_id\n        );\n        $post_login = $data['login'];\n    }\n    // Get number of returned users\n    $counter = DB::count();\n\n    // load passwordLib library\n    $pwdlib = new SplClassLoader('PasswordLib', $SETTINGS['cpassman_dir'] . '/includes/libraries');\n    $pwdlib->register();\n    $pwdlib = new PasswordLib\\PasswordLib();\n\n    // Do treatment\n    if ($counter === 0) {\n        // Not a registered user !\n        logEvents($SETTINGS, 'failed_auth', 'user_not_exists', '', stripslashes($post_login), stripslashes($post_login));\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('no_user'),\n                'tst' => 1,\n            ),\n            'encode'\n        );\n    }\n\n    if (\n        isSetArrayOfValues([$post_pwd, $data['pw']]) === true\n        && $pwdlib->verifyPasswordHash($post_pwd, $data['pw']) === false\n        && $post_demand_origin !== 'users_management_list'\n    ) {\n        // checked the given password\n        logEvents($SETTINGS, 'failed_auth', 'password_is_not_correct', '', stripslashes($post_login), stripslashes($post_login));\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('no_user'),\n                'tst' => $post_demand_origin,\n            ),\n            'encode'\n        );\n    }\n    \n    if (empty($data['email']) === true) {\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('no_email_set'),\n            ),\n            'encode'\n        );\n    }\n    \n    // generate new GA user code\n    include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Authentication/TwoFactorAuth/TwoFactorAuth.php';\n    $tfa = new Authentication\\TwoFactorAuth\\TwoFactorAuth($SETTINGS['ga_website_name']);\n    $gaSecretKey = $tfa->createSecret();\n    $gaTemporaryCode = GenerateCryptKey(12, false, true, true, false, true, $SETTINGS);\n\n    DB::update(\n        prefixTable('users'),\n        [\n            'ga' => $gaSecretKey,\n            'ga_temporary_code' => $gaTemporaryCode,\n        ],\n        'id = %i',\n        $data['id']\n    );\n\n    // Log event\n    logEvents($SETTINGS, 'user_connection', 'at_2fa_google_code_send_by_email', (string) $data['id'], stripslashes($post_login), stripslashes($post_login));\n\n    // send mail?\n    if ((int) $post_send_mail === 1) {\n        sendEmail(\n            langHdl('email_ga_subject'),\n            str_replace(\n                '#2FACode#',\n                $gaTemporaryCode,\n                langHdl('email_ga_text')\n            ),\n            $data['email'],\n            $SETTINGS\n        );\n\n        // send back\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => $post_send_mail,\n                'email' => $data['email'],\n                'email_result' => str_replace(\n                    '#email#',\n                    '<b>' . obfuscateEmail($data['email']) . '</b>',\n                    addslashes(langHdl('admin_email_result_ok'))\n                ),\n            ),\n            'encode'\n        );\n    }\n    \n    // send back\n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => false,\n            'message' => '',\n            'email' => $data['email'],\n            'email_result' => str_replace(\n                '#email#',\n                '<b>' . obfuscateEmail($data['email']) . '</b>',\n                addslashes(langHdl('admin_email_result_ok'))\n            ),\n        ),\n        'encode'\n    );\n}\n\nfunction sendEmailsNotSent(\n    array $SETTINGS\n)\n{\n    if (isKeyExistingAndEqual('enable_send_email_on_user_login', 1, $SETTINGS) === true) {\n        $row = DB::queryFirstRow(\n            'SELECT valeur FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s',\n            'cron',\n            'sending_emails'\n        );\n\n        if ((int) (time() - $row['valeur']) >= 300 || (int) $row['valeur'] === 0) {\n            $rows = DB::query(\n                'SELECT *\n                FROM ' . prefixTable('emails') .\n                ' WHERE status != %s',\n                'sent'\n            );\n            foreach ($rows as $record) {\n                // Send email\n                $ret = json_decode(\n                    sendEmail(\n                        $record['subject'],\n                        $record['body'],\n                        $record['receivers'],\n                        $SETTINGS\n                    ),\n                    true\n                );\n\n                // update item_id in files table\n                DB::update(\n                    prefixTable('emails'),\n                    array(\n                        'status' => $ret['error'] === 'error_mail_not_send' ? 'not_sent' : 'sent',\n                    ),\n                    'timestamp = %s',\n                    $record['timestamp']\n                );\n            }\n        }\n        // update cron time\n        DB::update(\n            prefixTable('misc'),\n            array(\n                'valeur' => time(),\n            ),\n            'intitule = %s AND type = %s',\n            'sending_emails',\n            'cron'\n        );\n    }\n}\n\nfunction generateGenericPassword(\n    int $size,\n    bool $secure,\n    bool $lowercase,\n    bool $capitalize,\n    bool $numerals,\n    bool $symbols,\n    array $SETTINGS\n): string\n{\n    if ((int) $size > (int) $SETTINGS['pwd_maximum_length']) {\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error_msg' => 'Password length is too long! ',\n                'error' => 'true',\n            ),\n            'encode'\n        );\n    }\n    \n    $generator = new SplClassLoader('PasswordGenerator\\Generator', '../includes/libraries');\n    $generator->register();\n    $generator = new PasswordGenerator\\Generator\\ComputerPasswordGenerator();\n\n    // Is PHP7 being used?\n    if (version_compare(PHP_VERSION, '7.0.0', '>=')) {\n        $php7generator = new SplClassLoader('PasswordGenerator\\RandomGenerator', '../includes/libraries');\n        $php7generator->register();\n        $generator->setRandomGenerator(new PasswordGenerator\\RandomGenerator\\Php7RandomGenerator());\n    }\n\n    // Manage size\n    $generator->setLength(($size <= 0) ? 10 : $size);\n\n    if ($secure === true) {\n        $generator->setSymbols(true);\n        $generator->setLowercase(true);\n        $generator->setUppercase(true);\n        $generator->setNumbers(true);\n    } else {\n        $generator->setLowercase($lowercase);\n        $generator->setUppercase($capitalize);\n        $generator->setNumbers($numerals);\n        $generator->setSymbols($symbols);\n    }\n\n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'key' => $generator->generatePasswords(),\n            'error' => '',\n        ),\n        'encode'\n    );\n}\n\nfunction refreshUserItemsSeenList(\n    array $SETTINGS\n): string\n{\n    // get list of last items seen\n    $arr_html = array();\n    $rows = DB::query(\n        'SELECT i.id AS id, i.label AS label, i.id_tree AS id_tree, l.date, i.perso AS perso, i.restricted_to AS restricted\n        FROM ' . prefixTable('log_items') . ' AS l\n        RIGHT JOIN ' . prefixTable('items') . ' AS i ON (l.id_item = i.id)\n        WHERE l.action = %s AND l.id_user = %i\n        ORDER BY l.date DESC\n        LIMIT 0, 100',\n        'at_shown',\n        $_SESSION['user_id']\n    );\n    if (DB::count() > 0) {\n        foreach ($rows as $record) {\n            if (in_array($record['id']->id, array_column($arr_html, 'id')) === false) {\n                array_push(\n                    $arr_html,\n                    array(\n                        'id' => $record['id'],\n                        'label' => htmlspecialchars(stripslashes(htmlspecialchars_decode($record['label'], ENT_QUOTES)), ENT_QUOTES),\n                        'tree_id' => $record['id_tree'],\n                        'perso' => $record['perso'],\n                        'restricted' => $record['restricted'],\n                    )\n                );\n                if (count($arr_html) >= (int) $SETTINGS['max_latest_items']) {\n                    break;\n                }\n            }\n        }\n    }\n\n    // get wainting suggestions\n    $nb_suggestions_waiting = 0;\n    if (isKeyExistingAndEqual('enable_suggestion', 1, $SETTINGS) === true\n        && ((int) $_SESSION['user_admin'] === 1 || (int) $_SESSION['user_manager'] === 1)\n    ) {\n        DB::query('SELECT * FROM ' . prefixTable('suggestion'));\n        $nb_suggestions_waiting = DB::count();\n    }\n\n    return json_encode(\n        array(\n            'error' => '',\n            'existing_suggestions' => $nb_suggestions_waiting,\n            'html_json' => $arr_html,\n        ),\n        JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP\n    );\n}\n\nfunction sendingStatistics(\n    array $SETTINGS\n): void\n{\n    if (\n        isSetArrayOfValues([$SETTINGS['send_statistics_items'], $SETTINGS['send_stats_time']]) === true\n        && isKeyExistingAndEqual('send_stats', 1, $SETTINGS) === true\n        && (int) ($SETTINGS['send_stats_time'] + TP_ONE_DAY_SECONDS) > time()\n    ) {\n        // get statistics data\n        $stats_data = getStatisticsData($SETTINGS);\n\n        // get statistics items to share\n        $statsToSend = [];\n        $statsToSend['ip'] = $_SERVER['SERVER_ADDR'];\n        $statsToSend['timestamp'] = time();\n        foreach (array_filter(explode(';', $SETTINGS['send_statistics_items'])) as $data) {\n            if ($data === 'stat_languages') {\n                $tmp = '';\n                foreach ($stats_data[$data] as $key => $value) {\n                    $tmp .= $tmp === '' ? $key . '-' . $value : ',' . $key . '-' . $value;\n                }\n                $statsToSend[$data] = $tmp;\n            } elseif ($data === 'stat_country') {\n                $tmp = '';\n                foreach ($stats_data[$data] as $key => $value) {\n                    $tmp .= $tmp === '' ? $key . '-' . $value : ',' . $key . '-' . $value;\n                }\n                $statsToSend[$data] = $tmp;\n            } else {\n                $statsToSend[$data] = $stats_data[$data];\n            }\n        }\n\n        // connect to Teampass Statistics database\n        $link2 = new MeekroDB(\n            'teampass.pw',\n            'teampass_user',\n            'ZMlEfRzKzFLZNzie',\n            'teampass_followup',\n            '3306',\n            'utf8'\n        );\n\n        $link2->insert(\n            'statistics',\n            $statsToSend\n        );\n\n        // update table misc with current timestamp\n        DB::update(\n            prefixTable('misc'),\n            array(\n                'valeur' => time(),\n            ),\n            'type = %s AND intitule = %s',\n            'admin',\n            'send_stats_time'\n        );\n\n        //permits to test only once by session\n        $_SESSION['temporary']['send_stats_done'] = true;\n        $SETTINGS['send_stats_time'] = time();\n\n        // save change in config file\n        handleConfigFile('update', $SETTINGS, 'send_stats_time', $SETTINGS['send_stats_time']);\n    }\n}\n\nfunction generateBugReport(\n    array $data,\n    array $SETTINGS\n): string\n{\n    $config_exclude_vars = array(\n        'bck_script_passkey',\n        'email_smtp_server',\n        'email_auth_username',\n        'email_auth_pwd',\n        'email_from',\n        'onthefly-restore-key',\n        'onthefly-backup-key',\n        'ldap_password',\n        'ldap_hosts',\n        'proxy_ip',\n        'ldap_bind_passwd',\n        'syslog_host',\n        'duo_akey',\n        'duo_ikey',\n        'duo_skey',\n        'duo_host'\n    );\n\n    // Get data\n    //$post_data = json_decode($data, true);\n\n    // Read config file\n    $list_of_options = '';\n    $url_found = '';\n    $anonym_url = '';\n    $tp_config_file = '../includes/config/tp.config.php';\n    $data = file($tp_config_file);\n    foreach ($data as $line) {\n        if (substr($line, 0, 4) === '    ') {\n            // Remove extra spaces\n            $line = str_replace('    ', '', $line);\n\n            // Identify url to anonymize it\n            if (strpos($line, 'cpassman_url') > 0 && empty($url_found) === true) {\n                $url_found = substr($line, 19, strlen($line) - 22);\n                if (empty($url_found) === false) {\n                    $tmp = parse_url($url_found);\n                    $anonym_url = $tmp['scheme'] . '://<anonym_url>' . (isset($tmp['path']) === true ? $tmp['path'] : '');\n                    $line = \"'cpassman_url' => '\" . $anonym_url . \"\\n\";\n                } else {\n                    $line = \"'cpassman_url' => \\n\";\n                }\n            }\n\n            // Anonymize all urls\n            if (empty($anonym_url) === false) {\n                $line = str_replace($url_found, $anonym_url, $line);\n            }\n\n            // Clear some vars\n            foreach ($config_exclude_vars as $var) {\n                if (strpos($line, $var) > 0) {\n                    $line = \"'\".$var.\"' => '<removed>'\\n\";\n                }\n            }\n\n            // Complete line to display\n            $list_of_options .= $line;\n        }\n    }\n\n    // Get error\n    $err = error_get_last();\n\n    // Get 10 latest errors in Teampass\n    $teampass_errors = '';\n    $rows = DB::query(\n        'SELECT label, date AS error_date\n        FROM ' . prefixTable('log_system') . \"\n        WHERE `type` LIKE 'error'\n        ORDER BY `date` DESC\n        LIMIT 0, 10\"\n    );\n    if (DB::count() > 0) {\n        foreach ($rows as $record) {\n            if (empty($teampass_errors) === true) {\n                $teampass_errors = ' * ' . date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) $record['error_date']) . ' - ' . $record['label'];\n            } else {\n                $teampass_errors .= ' * ' . date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) $record['error_date']) . ' - ' . $record['label'];\n            }\n        }\n    }\n\n    $link = mysqli_connect(DB_HOST, DB_USER, DB_PASSWD_CLEAR, DB_NAME, (int) DB_PORT, null);\n\n    // Now prepare text\n    $txt = '### Page on which it happened\n' . $data['current_page'] . '\n\n### Steps to reproduce\n1.\n2.\n3.\n\n### Expected behaviour\nTell us what should happen\n\n\n### Actual behaviour\nTell us what happens instead\n\n### Server configuration\n**Operating system**: ' . php_uname() . '\n\n**Web server:** ' . $_SERVER['SERVER_SOFTWARE'] . '\n\n**Database:** ' . ($link === false ? langHdl('undefined') : mysqli_get_server_info($link)) . '\n\n**PHP version:** ' . PHP_VERSION . '\n\n**Teampass version:** ' . TP_VERSION . '\n\n**Teampass configuration file:**\n```\n' . $list_of_options . '\n```\n\n**Updated from an older Teampass or fresh install:**\n\n### Client configuration\n\n**Browser:** ' . $data['browser_name'] . ' - ' . $data['browser_version'] . '\n\n**Operating system:** ' . $data['os'] . ' - ' . $data['os_archi'] . 'bits\n\n### Logs\n\n#### Web server error log\n```\n' . $err['message'] . ' - ' . $err['file'] . ' (' . $err['line'] . ')\n```\n\n#### Teampass 10 last system errors\n```\n' . $teampass_errors . '\n```\n\n#### Log from the web-browser developer console (CTRL + SHIFT + i)\n```\nInsert the log here and especially the answer of the query that failed.\n```\n';\n\n    return prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n        array(\n            'html' => $txt,\n            'error' => '',\n        ),\n        'encode'\n    );\n}\n\n/**\n * Check that the user password is valid\n *\n * @param integer $post_user_id\n * @param string $post_user_password\n * @param array $SETTINGS\n * @return string\n */\nfunction isUserPasswordCorrect(\n    int $post_user_id,\n    string $post_user_password,\n    array $SETTINGS\n): string\n{\n    if (isUserIdValid($post_user_id) === true) {\n        // Check if user exists\n        $userInfo = DB::queryFirstRow(\n            'SELECT public_key, private_key, pw, auth_type\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (DB::count() > 0 && empty($userInfo['private_key']) === false) {\n            // Get itemKey from current user\n            // Get one item\n            $currentUserKey = DB::queryFirstRow(\n                'SELECT object_id, share_key, increment_id\n                FROM ' . prefixTable('sharekeys_items') . ' AS si\n                INNER JOIN ' . prefixTable('items') . ' AS i ON  (i.id = si.object_id)\n                INNER JOIN ' . prefixTable('nested_tree') . ' AS nt ON  (i.id_tree = nt.id)\n                WHERE user_id = %i AND nt.personal_folder = %i',\n                $post_user_id,\n                0\n            );\n            \n            if (DB::count() === 0) {\n                // This user has no items\n                // let's consider no items in DB\n                return prepareExchangedData(\n                    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => false,\n                        'message' => '',\n                        'debug' => '',\n                    ),\n                    'encode'\n                );\n            }\n\n            if ($currentUserKey !== null) {\n                // Decrypt itemkey with user key\n                // use old password to decrypt private_key\n                $_SESSION['user']['private_key'] = decryptPrivateKey($post_user_password, $userInfo['private_key']);\n                $itemKey = decryptUserObjectKey($currentUserKey['share_key'], $_SESSION['user']['private_key']);\n\n                //echo $post_user_password.\"  --  \".$userInfo['private_key']. \";;\";\n\n                if (empty(base64_decode($itemKey)) === false) {\n                    // GOOD password\n                    return prepareExchangedData(\n                        $SETTINGS['cpassman_dir'],\n                        array(\n                            'error' => false,\n                            'message' => '',\n                            'debug' => '',\n                        ),\n                        'encode'\n                    );\n                }\n            }\n            \n            // Use the password check\n            // load passwordLib library\n            $pwdlib = new SplClassLoader('PasswordLib', $SETTINGS['cpassman_dir'] . '/includes/libraries');\n            $pwdlib->register();\n            $pwdlib = new PasswordLib\\PasswordLib();\n            \n            if ($pwdlib->verifyPasswordHash(htmlspecialchars_decode($post_user_password), $userInfo['pw']) === true) {\n                // GOOD password\n                return prepareExchangedData(\n                    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => false,\n                        'message' => '',\n                        'debug' => '',\n                    ),\n                    'encode'\n                );\n            }\n        }\n    }\n\n    return prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('password_is_not_correct'),\n            //'debug' => isset($itemKey) === true ? base64_decode($itemKey) : '',\n            //'debug2' => $_SESSION['user']['private_key'],\n            //'debug3' => $post_user_password,\n        ),\n        'encode'\n    );\n}\n\nfunction changePrivateKeyEncryptionPassword(\n    int $post_user_id,\n    string $post_current_code,\n    string $post_new_code,\n    string $post_action_type,\n    array $SETTINGS\n): string\n{\n    if (empty($post_new_code) === true) {\n        if (empty($_SESSION['user_pwd']) === false) {\n            $post_new_code = $_SESSION['user_pwd'];\n        } else {\n            // no user password???\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_no_user_password_exists'),\n                    'debug' => '',\n                ),\n                'encode'\n            );\n        }\n    }\n\n    if (isUserIdValid($post_user_id) === true) {\n        // Get user info\n        $userData = DB::queryFirstRow(\n            'SELECT private_key\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (DB::count() > 0 && empty($userData['private_key']) === false) {\n            if ($post_action_type === 'encrypt_privkey_with_user_password') {\n                // Here the user has his private key encrypted with an OTC.\n                // We need to encrypt it with his real password\n                $privateKey = decryptPrivateKey($post_new_code, $userData['private_key']);\n                $hashedPrivateKey = encryptPrivateKey($post_current_code, $privateKey);\n            } else {\n                $privateKey = decryptPrivateKey($post_current_code, $userData['private_key']);\n                $hashedPrivateKey = encryptPrivateKey($post_new_code, $privateKey);\n            }\n\n            // Update user account\n            DB::update(\n                prefixTable('users'),\n                array(\n                    'private_key' => $hashedPrivateKey,\n                    'special' => 'none',\n                    'otp_provided' => 1,\n                ),\n                'id = %i',\n                $post_user_id\n            );\n\n            // Load superGlobals\n            include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/protect/SuperGlobal/SuperGlobal.php';\n            $superGlobal = new protect\\SuperGlobal\\SuperGlobal();\n\n            $superGlobal->put('private_key', $privateKey, 'SESSION', 'user');\n        }\n\n        // Return\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n            ),\n            'encode'\n        );\n    }\n    \n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n            'debug' => '',\n        ),\n        'encode'\n    );\n}\n\nfunction initializeUserPassword(\n    int $post_user_id,\n    string $post_special,\n    string $post_user_password,\n    bool $post_self_change,\n    array $SETTINGS\n): string\n{\n    if (isUserIdValid($post_user_id) === true) {\n        // Get user info\n        $userData = DB::queryFirstRow(\n            'SELECT email, auth_type, login\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (DB::count() > 0 && empty($userData['email']) === false) {\n            // If user pwd is empty then generate a new one and send it to user\n            if (isset($post_user_password) === false || empty($post_user_password) === true) {\n                // Generate new password\n                $post_user_password = generateQuickPassword();\n            }\n\n            // If LDAP enabled, then\n            // check that this password is correct\n            $continue = true;\n            if ($userData['auth_type'] === 'ldap' && (int) $SETTINGS['ldap_mode'] === 1) {\n                $continue = ldapCheckUserPassword(\n                    $userData['login'],\n                    $post_user_password,\n                    $SETTINGS\n                );\n            }\n\n            if ($continue === true) {\n                // Only change if email is successfull\n                // GEnerate new keys\n                $userKeys = generateUserKeys($post_user_password);\n\n                // load passwordLib library\n                $pwdlib = new SplClassLoader('PasswordLib', '../includes/libraries');\n                $pwdlib->register();\n                $pwdlib = new PasswordLib\\PasswordLib();\n\n                // Update user account\n                DB::update(\n                    prefixTable('users'),\n                    array(\n                        'special' => $post_special,\n                        'pw' => $pwdlib->createPasswordHash($post_user_password),\n                        'public_key' => $userKeys['public_key'],\n                        'private_key' => $userKeys['private_key'],\n                        'last_pw_change' => time(),\n                    ),\n                    'id = %i',\n                    $post_user_id\n                );\n\n                // Return\n                return prepareExchangedData(\n                    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => false,\n                        'message' => '',\n                        'user_pwd' => $post_user_password,\n                        'user_email' => $userData['email'],\n                    ),\n                    'encode'\n                );\n            }\n            // Return error\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('no_email_set'),\n                    'debug' => '',\n                    'self_change' => $post_self_change,\n                ),\n                'encode'\n            );\n        }\n\n        // Error\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('no_email_set'),\n                'debug' => '',\n            ),\n            'encode'\n        );\n    }\n    \n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n            'debug' => '',\n        ),\n        'encode'\n    );\n}\n\nfunction sendMailToUser(\n    string $post_receipt,\n    string $post_body,\n    string $post_subject,\n    array $post_replace,\n    array $SETTINGS\n): string\n{\n    if (count($post_replace) > 0) {\n        $post_body = str_replace(\n            array_keys($post_replace),\n            array_values($post_replace),\n            $post_body\n        );\n    }\n    \n    $ret = sendEmail(\n        $post_subject,\n        $post_body,\n        $post_receipt,\n        $SETTINGS,\n        '',\n        false\n    );\n\n    $ret = json_decode($ret, true);\n\n    return prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n        array(\n            'error' => empty($ret['error']) === true ? false : true,\n            'message' => $ret['message'],\n        ),\n        'encode'\n    );\n}\n\nfunction generateOneTimeCode(\n    int $post_user_id,\n    array $SETTINGS\n): string\n{\n    if (isUserIdValid($post_user_id) === true) {\n        // Get user info\n        $userData = DB::queryFirstRow(\n            'SELECT email, auth_type, login\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (DB::count() > 0 && empty($userData['email']) === false) {\n            // Generate pwd\n            $password = generateQuickPassword();\n\n            // GEnerate new keys\n            $userKeys = generateUserKeys($password);\n\n            // Save in DB\n            DB::update(\n                prefixTable('users'),\n                array(\n                    'public_key' => $userKeys['public_key'],\n                    'private_key' => $userKeys['private_key'],\n                    'special' => 'generate-keys',\n                ),\n                'id=%i',\n                $post_user_id\n            );\n\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                    'message' => '',\n                    'code' => $password,\n                    'visible_otp' => ADMIN_VISIBLE_OTP_ON_LDAP_IMPORT,\n                ),\n                'encode'\n            );\n        }\n        \n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('no_email_set'),\n            ),\n            'encode'\n        );\n    }\n        \n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n        ),\n        'encode'\n    );\n}\n\nfunction startReEncryptingUserSharekeys(\n    int $post_user_id,\n    bool $post_self_change,\n    array $SETTINGS\n): string\n{\n    if (isUserIdValid($post_user_id) === true) {\n        // Check if user exists\n        DB::queryFirstRow(\n            'SELECT *\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (DB::count() > 0) {\n            // Include libraries\n            include_once $SETTINGS['cpassman_dir'] . '/sources/aes.functions.php';\n\n            // CLear old sharekeys\n            if ($post_self_change === false) {\n                deleteUserObjetsKeys($post_user_id, $SETTINGS);\n            }\n\n            // Continu with next step\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                    'message' => '',\n                    'step' => 'step1',\n                    'userId' => $post_user_id,\n                    'start' => 0,\n                    'self_change' => $post_self_change,\n                ),\n                'encode'\n            );\n        }\n        // Nothing to do\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('error_no_user'),\n            ),\n            'encode'\n        );\n    }\n\n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n        ),\n        'encode'\n    );\n}\n\n/**\n * Permits to encrypt user's keys\n *\n * @param integer $post_user_id\n * @param boolean $post_self_change\n * @param string $post_action\n * @param integer $post_start\n * @param integer $post_length\n * @param array $SETTINGS\n * @return string\n */\nfunction continueReEncryptingUserSharekeys(\n    int     $post_user_id,\n    bool    $post_self_change,\n    string  $post_action,\n    int     $post_start,\n    int     $post_length,\n    array   $SETTINGS\n): string\n{\n    if (isUserIdValid($post_user_id) === true) {\n        // Check if user exists\n        $userInfo = DB::queryFirstRow(\n            'SELECT public_key\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (isset($userInfo['public_key']) === true) {\n            // Include libraries\n            include_once $SETTINGS['cpassman_dir'] . '/sources/aes.functions.php';\n            $return = [];\n\n            // WHAT STEP TO PERFORM?\n            if ($post_action === 'step0') {\n                // CLear old sharekeys\n                if ($post_self_change === false) {\n                    deleteUserObjetsKeys($post_user_id, $SETTINGS);\n                }\n\n                $return['post_action'] = 'step1';\n            }\n            \n            // STEP 1 - ITEMS\n            elseif ($post_action === 'step1') {\n                $return = continueReEncryptingUserSharekeysStep1(\n                    $post_user_id,\n                    $post_self_change,\n                    $post_action,\n                    $post_start,\n                    $post_length,\n                    $userInfo['public_key'],\n                    $SETTINGS\n                );\n            }\n\n            // STEP 2 - LOGS\n            elseif ($post_action === 'step2') {\n                $return = continueReEncryptingUserSharekeysStep2(\n                    $post_user_id,\n                    $post_self_change,\n                    $post_action,\n                    $post_start,\n                    $post_length,\n                    $userInfo['public_key'],\n                    $SETTINGS\n                );\n            }\n\n            // STEP 3 - FIELDS\n            elseif ($post_action === 'step3') {\n                $return = continueReEncryptingUserSharekeysStep3(\n                    $post_user_id,\n                    $post_self_change,\n                    $post_action,\n                    $post_start,\n                    $post_length,\n                    $userInfo['public_key'],\n                    $SETTINGS\n                );\n            }\n            \n            // STEP 4 - SUGGESTIONS\n            elseif ($post_action === 'step4') {\n                $return = continueReEncryptingUserSharekeysStep4(\n                    $post_user_id,\n                    $post_self_change,\n                    $post_action,\n                    $post_start,\n                    $post_length,\n                    $userInfo['public_key'],\n                    $SETTINGS\n                );\n            }\n            \n            // STEP 5 - FILES\n            elseif ($post_action === 'step5') {\n                $return = continueReEncryptingUserSharekeysStep5(\n                    $post_user_id,\n                    $post_self_change,\n                    $post_action,\n                    $post_start,\n                    $post_length,\n                    $userInfo['public_key'],\n                    $SETTINGS\n                );\n            }\n            \n            // STEP 6 - PERSONAL ITEMS\n            elseif ($post_action === 'step6') {\n                $return = continueReEncryptingUserSharekeysStep6(\n                    $post_user_id,\n                    $post_self_change,\n                    $post_action,\n                    $post_start,\n                    $post_length,\n                    $userInfo['public_key'],\n                    $SETTINGS\n                );\n            }\n            \n            // Continu with next step\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                    'message' => '',\n                    'step' => isset($return['post_action']) === true ? $return['post_action'] : '',\n                    'start' => isset($return['next_start']) === true ? $return['next_start'] : 0,\n                    'userId' => $post_user_id,\n                    'self_change' => $post_self_change,\n                ),\n                'encode'\n            );\n        }\n        \n        // Nothing to do\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n                'step' => 'finished',\n                'start' => 0,\n                'userId' => $post_user_id,\n                'self_change' => $post_self_change,\n            ),\n            'encode'\n        );\n    }\n    \n    // Nothing to do\n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n            'extra' => $post_user_id,\n        ),\n        'encode'\n    );\n}\n\nfunction continueReEncryptingUserSharekeysStep1(\n    int $post_user_id,\n    bool $post_self_change,\n    string $post_action,\n    int $post_start,\n    int $post_length,\n    string $user_public_key,\n    array $SETTINGS\n): array \n{\n    // Loop on items\n    $rows = DB::query(\n        'SELECT id, pw\n        FROM ' . prefixTable('items') . '\n        WHERE perso = 0\n        LIMIT ' . $post_start . ', ' . $post_length\n    );\n    foreach ($rows as $record) {\n        // Get itemKey from current user\n        $currentUserKey = DB::queryFirstRow(\n            'SELECT share_key, increment_id\n            FROM ' . prefixTable('sharekeys_items') . '\n            WHERE object_id = %i AND user_id = %i',\n            $record['id'],\n            $_SESSION['user_id']\n        );\n\n        // do we have any input? (#3481)\n        if ($currentUserKey === null || count($currentUserKey) === 0) {\n            continue;\n        }\n\n        // Decrypt itemkey with admin key\n        $itemKey = decryptUserObjectKey($currentUserKey['share_key'], $_SESSION['user']['private_key']);\n        \n        // Encrypt Item key\n        $share_key_for_item = encryptUserObjectKey($itemKey, $user_public_key);\n        \n        // Save the key in DB\n        if ($post_self_change === false) {\n            DB::insert(\n                prefixTable('sharekeys_items'),\n                array(\n                    'object_id' => (int) $record['id'],\n                    'user_id' => (int) $post_user_id,\n                    'share_key' => $share_key_for_item,\n                )\n            );\n        } else {\n            // Get itemIncrement from selected user\n            if ((int) $post_user_id !== (int) $_SESSION['user_id']) {\n                $currentUserKey = DB::queryFirstRow(\n                    'SELECT increment_id\n                    FROM ' . prefixTable('sharekeys_items') . '\n                    WHERE object_id = %i AND user_id = %i',\n                    $record['id'],\n                    $post_user_id\n                );\n\n                if (DB::count() > 0) {\n                    // NOw update\n                    DB::update(\n                        prefixTable('sharekeys_items'),\n                        array(\n                            'share_key' => $share_key_for_item,\n                        ),\n                        'increment_id = %i',\n                        $currentUserKey['increment_id']\n                    );\n                } else {\n                    DB::insert(\n                        prefixTable('sharekeys_items'),\n                        array(\n                            'object_id' => (int) $record['id'],\n                            'user_id' => (int) $post_user_id,\n                            'share_key' => $share_key_for_item,\n                        )\n                    );\n                }\n            }\n        }\n    }\n\n    // SHould we change step?\n    DB::query(\n        'SELECT *\n        FROM ' . prefixTable('items') . '\n        WHERE perso = 0'\n    );\n\n    $next_start = (int) $post_start + (int) $post_length;\n    return [\n        'next_start' => $next_start > DB::count() ? 0 : $next_start,\n        'post_action' => $next_start > DB::count() ? 'step2' : 'step1',\n    ];\n}\n\nfunction continueReEncryptingUserSharekeysStep2(\n    int $post_user_id,\n    bool $post_self_change,\n    string $post_action,\n    int $post_start,\n    int $post_length,\n    string $user_public_key,\n    array $SETTINGS\n): array\n{\n    // Loop on logs\n    $rows = DB::query(\n        'SELECT increment_id\n        FROM ' . prefixTable('log_items') . '\n        WHERE raison LIKE \"at_pw :%\" AND encryption_type = \"teampass_aes\"\n        LIMIT ' . $post_start . ', ' . $post_length\n    );\n    foreach ($rows as $record) {\n        // Get itemKey from current user\n        $currentUserKey = DB::queryFirstRow(\n            'SELECT share_key\n            FROM ' . prefixTable('sharekeys_logs') . '\n            WHERE object_id = %i AND user_id = %i',\n            $record['increment_id'],\n            $_SESSION['user_id']\n        );\n\n        // do we have any input? (#3481)\n        if ($currentUserKey === null || count($currentUserKey) === 0) {\n            continue;\n        }\n\n        // Decrypt itemkey with admin key\n        $itemKey = decryptUserObjectKey($currentUserKey['share_key'], $_SESSION['user']['private_key']);\n\n        // Encrypt Item key\n        $share_key_for_item = encryptUserObjectKey($itemKey, $user_public_key);\n\n        // Save the key in DB\n        if ($post_self_change === false) {\n            DB::insert(\n                prefixTable('sharekeys_logs'),\n                array(\n                    'object_id' => (int) $record['increment_id'],\n                    'user_id' => (int) $post_user_id,\n                    'share_key' => $share_key_for_item,\n                )\n            );\n        } else {\n            // Get itemIncrement from selected user\n            if ((int) $post_user_id !== (int) $_SESSION['user_id']) {\n                $currentUserKey = DB::queryFirstRow(\n                    'SELECT increment_id\n                    FROM ' . prefixTable('sharekeys_items') . '\n                    WHERE object_id = %i AND user_id = %i',\n                    $record['id'],\n                    $post_user_id\n                );\n            }\n\n            // NOw update\n            DB::update(\n                prefixTable('sharekeys_logs'),\n                array(\n                    'share_key' => $share_key_for_item,\n                ),\n                'increment_id = %i',\n                $currentUserKey['increment_id']\n            );\n        }\n    }\n\n    // SHould we change step?\n    DB::query(\n        'SELECT increment_id\n        FROM ' . prefixTable('log_items') . '\n        WHERE raison LIKE \"at_pw :%\" AND encryption_type = \"teampass_aes\"'\n    );\n\n    $next_start = (int) $post_start + (int) $post_length;\n    return [\n        'next_start' => $next_start > DB::count() ? 0 : $next_start,\n        'post_action' => $next_start > DB::count() ? 'step3' : 'step2',\n    ];\n}\n\nfunction continueReEncryptingUserSharekeysStep3(\n    int $post_user_id,\n    bool $post_self_change,\n    string $post_action,\n    int $post_start,\n    int $post_length,\n    string $user_public_key,\n    array $SETTINGS\n): array\n{\n    // Loop on fields\n    $rows = DB::query(\n        'SELECT id\n        FROM ' . prefixTable('categories_items') . '\n        WHERE encryption_type = \"teampass_aes\"\n        LIMIT ' . $post_start . ', ' . $post_length\n    );\n    foreach ($rows as $record) {\n        // Get itemKey from current user\n        $currentUserKey = DB::queryFirstRow(\n            'SELECT share_key\n            FROM ' . prefixTable('sharekeys_fields') . '\n            WHERE object_id = %i AND user_id = %i',\n            $record['id'],\n            $_SESSION['user_id']\n        );\n\n        // do we have any input? (#3481)\n        if ($currentUserKey === null || count($currentUserKey) === 0) {\n            continue;\n        }\n\n        // Decrypt itemkey with admin key\n        $itemKey = decryptUserObjectKey($currentUserKey['share_key'], $_SESSION['user']['private_key']);\n\n        // Encrypt Item key\n        $share_key_for_item = encryptUserObjectKey($itemKey, $user_public_key);\n\n        // Save the key in DB\n        if ($post_self_change === false) {\n            DB::insert(\n                prefixTable('sharekeys_fields'),\n                array(\n                    'object_id' => (int) $record['id'],\n                    'user_id' => (int) $post_user_id,\n                    'share_key' => $share_key_for_item,\n                )\n            );\n        } else {\n            // Get itemIncrement from selected user\n            if ((int) $post_user_id !== (int) $_SESSION['user_id']) {\n                $currentUserKey = DB::queryFirstRow(\n                    'SELECT increment_id\n                    FROM ' . prefixTable('sharekeys_items') . '\n                    WHERE object_id = %i AND user_id = %i',\n                    $record['id'],\n                    $post_user_id\n                );\n            }\n\n            // NOw update\n            DB::update(\n                prefixTable('sharekeys_fields'),\n                array(\n                    'share_key' => $share_key_for_item,\n                ),\n                'increment_id = %i',\n                $currentUserKey['increment_id']\n            );\n        }\n    }\n\n    // SHould we change step?\n    DB::query(\n        'SELECT *\n        FROM ' . prefixTable('categories_items') . '\n        WHERE encryption_type = \"teampass_aes\"'\n    );\n\n    $next_start = (int) $post_start + (int) $post_length;\n    return [\n        'next_start' => $next_start > DB::count() ? 0 : $next_start,\n        'post_action' => $next_start > DB::count() ? 'step4' : 'step3',\n    ];\n}\n\nfunction continueReEncryptingUserSharekeysStep4(\n    int $post_user_id,\n    bool $post_self_change,\n    string $post_action,\n    int $post_start,\n    int $post_length,\n    string $user_public_key,\n    array $SETTINGS\n): array\n{\n    // Loop on suggestions\n    $rows = DB::query(\n        'SELECT id\n        FROM ' . prefixTable('suggestion') . '\n        LIMIT ' . $post_start . ', ' . $post_length\n    );\n    foreach ($rows as $record) {\n        // Get itemKey from current user\n        $currentUserKey = DB::queryFirstRow(\n            'SELECT share_key\n            FROM ' . prefixTable('sharekeys_suggestions') . '\n            WHERE object_id = %i AND user_id = %i',\n            $record['id'],\n            $_SESSION['user_id']\n        );\n\n        // do we have any input? (#3481)\n        if ($currentUserKey === null || count($currentUserKey) === 0) {\n            continue;\n        }\n\n        // Decrypt itemkey with admin key\n        $itemKey = decryptUserObjectKey($currentUserKey['share_key'], $_SESSION['user']['private_key']);\n\n        // Encrypt Item key\n        $share_key_for_item = encryptUserObjectKey($itemKey, $user_public_key);\n\n        // Save the key in DB\n        if ($post_self_change === false) {\n            DB::insert(\n                prefixTable('sharekeys_suggestions'),\n                array(\n                    'object_id' => (int) $record['id'],\n                    'user_id' => (int) $post_user_id,\n                    'share_key' => $share_key_for_item,\n                )\n            );\n        } else {\n            // Get itemIncrement from selected user\n            if ((int) $post_user_id !== (int) $_SESSION['user_id']) {\n                $currentUserKey = DB::queryFirstRow(\n                    'SELECT increment_id\n                    FROM ' . prefixTable('sharekeys_items') . '\n                    WHERE object_id = %i AND user_id = %i',\n                    $record['id'],\n                    $post_user_id\n                );\n            }\n\n            // NOw update\n            DB::update(\n                prefixTable('sharekeys_suggestions'),\n                array(\n                    'share_key' => $share_key_for_item,\n                ),\n                'increment_id = %i',\n                $currentUserKey['increment_id']\n            );\n        }\n    }\n\n    // SHould we change step?\n    DB::query(\n        'SELECT *\n        FROM ' . prefixTable('suggestion')\n    );\n\n    $next_start = (int) $post_start + (int) $post_length;\n    return [\n        'next_start' => $next_start > DB::count() ? 0 : $next_start,\n        'post_action' => $next_start > DB::count() ? 'step5' : 'step4',\n    ];\n}\n\nfunction continueReEncryptingUserSharekeysStep5(\n    int $post_user_id,\n    bool $post_self_change,\n    string $post_action,\n    int $post_start,\n    int $post_length,\n    string $user_public_key,\n    array $SETTINGS\n): array\n{\n    // Loop on files\n    $rows = DB::query(\n        'SELECT id\n        FROM ' . prefixTable('files') . '\n        WHERE status = \"' . TP_ENCRYPTION_NAME . '\"\n        LIMIT ' . $post_start . ', ' . $post_length\n    ); //aes_encryption\n    foreach ($rows as $record) {\n        // Get itemKey from current user\n        $currentUserKey = DB::queryFirstRow(\n            'SELECT share_key\n            FROM ' . prefixTable('sharekeys_files') . '\n            WHERE object_id = %i AND user_id = %i',\n            $record['id'],\n            $_SESSION['user_id']\n        );\n\n        // do we have any input? (#3481)\n        if ($currentUserKey === null || count($currentUserKey) === 0) {\n            continue;\n        }\n\n        // Decrypt itemkey with admin key\n        $itemKey = decryptUserObjectKey($currentUserKey['share_key'], $_SESSION['user']['private_key']);\n\n        // Encrypt Item key\n        $share_key_for_item = encryptUserObjectKey($itemKey, $user_public_key);\n\n        // Save the key in DB\n        if ($post_self_change === false) {\n            DB::insert(\n                prefixTable('sharekeys_files'),\n                array(\n                    'object_id' => (int) $record['id'],\n                    'user_id' => (int) $post_user_id,\n                    'share_key' => $share_key_for_item,\n                )\n            );\n        } else {\n            // Get itemIncrement from selected user\n            if ((int) $post_user_id !== (int) $_SESSION['user_id']) {\n                $currentUserKey = DB::queryFirstRow(\n                    'SELECT increment_id\n                    FROM ' . prefixTable('sharekeys_items') . '\n                    WHERE object_id = %i AND user_id = %i',\n                    $record['id'],\n                    $post_user_id\n                );\n            }\n\n            // NOw update\n            DB::update(\n                prefixTable('sharekeys_files'),\n                array(\n                    'share_key' => $share_key_for_item,\n                ),\n                'increment_id = %i',\n                $currentUserKey['increment_id']\n            );\n        }\n    }\n\n    // SHould we change step?\n    DB::query(\n        'SELECT *\n        FROM ' . prefixTable('files') . '\n        WHERE status = \"' . TP_ENCRYPTION_NAME . '\"'\n    );\n\n    $next_start = (int) $post_start + (int) $post_length;\n    return [\n        'next_start' => $next_start > DB::count() ? 0 : $next_start,\n        'post_action' => $next_start > DB::count() ? 'step6' : 'step5',\n    ];\n}\n\nfunction continueReEncryptingUserSharekeysStep6(\n    int $post_user_id,\n    bool $post_self_change,\n    string $post_action,\n    int $post_start,\n    int $post_length,\n    string $user_public_key,\n    array $SETTINGS\n): array\n{\n    // IF USER IS NOT THE SAME\n    if ((int) $post_user_id === (int) $_SESSION['user_id']) {\n        return [\n            'next_start' => 0,\n            'post_action' => 'finished',\n        ];\n    }\n    \n    // Loop on persoanl items\n    if (count($_SESSION['personal_folders']) > 0) {\n        $rows = DB::query(\n            'SELECT id, pw\n            FROM ' . prefixTable('items') . '\n            WHERE perso = 1 AND id_tree IN %ls\n            LIMIT ' . $post_start . ', ' . $post_length,\n            $_SESSION['personal_folders']\n        );\n        foreach ($rows as $record) {\n            // Get itemKey from current user\n            $currentUserKey = DB::queryFirstRow(\n                'SELECT share_key, increment_id\n                FROM ' . prefixTable('sharekeys_items') . '\n                WHERE object_id = %i AND user_id = %i',\n                $record['id'],\n                $_SESSION['user_id']\n            );\n\n            // Decrypt itemkey with admin key\n            $itemKey = decryptUserObjectKey($currentUserKey['share_key'], $_SESSION['user']['private_key']);\n\n            // Encrypt Item key\n            $share_key_for_item = encryptUserObjectKey($itemKey, $user_public_key);\n\n            // Save the key in DB\n            if ($post_self_change === false) {\n                DB::insert(\n                    prefixTable('sharekeys_items'),\n                    array(\n                        'object_id' => (int) $record['id'],\n                        'user_id' => (int) $post_user_id,\n                        'share_key' => $share_key_for_item,\n                    )\n                );\n            } else {\n                // Get itemIncrement from selected user\n                if ((int) $post_user_id !== (int) $_SESSION['user_id']) {\n                    $currentUserKey = DB::queryFirstRow(\n                        'SELECT increment_id\n                        FROM ' . prefixTable('sharekeys_items') . '\n                        WHERE object_id = %i AND user_id = %i',\n                        $record['id'],\n                        $post_user_id\n                    );\n                }\n\n                // NOw update\n                DB::update(\n                    prefixTable('sharekeys_items'),\n                    array(\n                        'share_key' => $share_key_for_item,\n                    ),\n                    'increment_id = %i',\n                    $currentUserKey['increment_id']\n                );\n            }\n        }\n    }\n\n    // SHould we change step?\n    DB::query(\n        'SELECT *\n        FROM ' . prefixTable('items') . '\n        WHERE perso = 0'\n    );\n\n    $next_start = (int) $post_start + (int) $post_length;\n    return [\n        'next_start' => $next_start > DB::count() ? 0 : $next_start,\n        'post_action' => $next_start > DB::count() ? 'finished' : 'step6',\n    ];\n}\n\nfunction migrateTo3_DoUserPersonalItemsEncryption(\n    int $post_user_id,\n    int $post_start,\n    int $post_length,\n    string $post_user_psk,\n    array $SETTINGS\n) {\n    $next_step = '';  \n    \n    if (isUserIdValid($post_user_id) === true) {\n        // Check if user exists\n        $userInfo = DB::queryFirstRow(\n            'SELECT public_key, encrypted_psk\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (DB::count() > 0) {\n            // check if psk is correct.\n            if (empty($userInfo['encrypted_psk']) === false) {//echo $post_user_psk.\" ;; \".$userInfo['encrypted_psk'].\" ;; \";\n                $user_key_encoded = defuse_validate_personal_key(\n                    html_entity_decode($post_user_psk), // convert tspecial string back to their original characters due to FILTER_SANITIZE_FULL_SPECIAL_CHARS\n                    $userInfo['encrypted_psk']\n                );\n\n                if (strpos($user_key_encoded, \"Error \") !== false) {\n                    return prepareExchangedData(\n                        $SETTINGS['cpassman_dir'],\n                        array(\n                            'error' => true,\n                            'message' => langHdl('bad_psk'),\n                        ),\n                        'encode'\n                    );\n                }\n\n                // Loop on persoanl items\n                $rows = DB::query(\n                    'SELECT id, pw\n                    FROM ' . prefixTable('items') . '\n                    WHERE perso = 1 AND id_tree IN %ls\n                    LIMIT ' . $post_start . ', ' . $post_length,\n                    $_SESSION['personal_folders']\n                );\n                $countUserPersonalItems = DB::count();\n                foreach ($rows as $record) {\n                    if ($record['encryption_type'] !== 'teampass_aes') {\n                        // Decrypt with Defuse\n                        $passwd = cryption(\n                            $record['pw'],\n                            $user_key_encoded,\n                            'decrypt',\n                            $SETTINGS\n                        );\n\n                        // Encrypt with Object Key\n                        $cryptedStuff = doDataEncryption($passwd['string']);\n\n                        // Store new password in DB\n                        DB::update(\n                            prefixTable('items'),\n                            array(\n                                'pw' => $cryptedStuff['encrypted'],\n                                'encryption_type' => 'teampass_aes',\n                            ),\n                            'id = %i',\n                            $record['id']\n                        );\n\n                        // Insert in DB the new object key for this item by user\n                        DB::insert(\n                            prefixTable('sharekeys_items'),\n                            array(\n                                'object_id' => (int) $record['id'],\n                                'user_id' => (int) $post_user_id,\n                                'share_key' => encryptUserObjectKey($cryptedStuff['objectKey'], $userInfo['public_key']),\n                            )\n                        );\n\n\n                        // Does this item has Files?\n                        // Loop on files\n                        $rows = DB::query(\n                            'SELECT id, file\n                            FROM ' . prefixTable('files') . '\n                            WHERE status != %s\n                            AND id_item = %i',\n                            TP_ENCRYPTION_NAME,\n                            $record['id']\n                        );\n                        //aes_encryption\n                        foreach ($rows as $record2) {\n                            // Now decrypt the file\n                            prepareFileWithDefuse(\n                                'decrypt',\n                                $SETTINGS['path_to_upload_folder'] . '/' . $record2['file'],\n                                $SETTINGS['path_to_upload_folder'] . '/' . $record2['file'] . '.delete',\n                                $SETTINGS,\n                                $post_user_psk\n                            );\n\n                            // Encrypt the file\n                            $encryptedFile = encryptFile($record2['file'] . '.delete', $SETTINGS['path_to_upload_folder']);\n\n                            DB::update(\n                                prefixTable('files'),\n                                array(\n                                    'file' => $encryptedFile['fileHash'],\n                                    'status' => TP_ENCRYPTION_NAME,\n                                ),\n                                'id = %i',\n                                $record2['id']\n                            );\n\n                            // Save key\n                            DB::insert(\n                                prefixTable('sharekeys_files'),\n                                array(\n                                    'object_id' => (int) $record2['id'],\n                                    'user_id' => (int) $_SESSION['user_id'],\n                                    'share_key' => encryptUserObjectKey($encryptedFile['objectKey'], $_SESSION['user']['public_key']),\n                                )\n                            );\n\n                            // Unlink original file\n                            unlink($SETTINGS['path_to_upload_folder'] . '/' . $record2['file']);\n                        }\n                    }\n                }\n\n                // SHould we change step?\n                $next_start = (int) $post_start + (int) $post_length;\n                if ($next_start > $countUserPersonalItems) {\n                    // Now update user\n                    DB::update(\n                        prefixTable('users'),\n                        array(\n                            'special' => 'none',\n                            'upgrade_needed' => 0,\n                            'encrypted_psk' => '',\n                        ),\n                        'id = %i',\n                        $post_user_id\n                    );\n\n                    $next_step = 'finished';\n                    $next_start = 0;\n                }\n\n                // Continu with next step\n                return prepareExchangedData(\n                    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => false,\n                        'message' => '',\n                        'step' => $next_step,\n                        'start' => $next_start,\n                        'userId' => $post_user_id\n                    ),\n                    'encode'\n                );\n            }\n        }\n        \n        // Nothing to do\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('error_no_user'),\n            ),\n            'encode'\n        );\n    }\n    \n    // Nothing to do\n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n        ),\n        'encode'\n    );\n}\n\n\nfunction getUserInfo(\n    int $post_user_id,\n    string $post_fields,\n    array $SETTINGS\n)\n{\n    if (isUserIdValid($post_user_id) === true) {\n        // Get user info\n        $userData = DB::queryFirstRow(\n            'SELECT '.$post_fields.'\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (DB::count() > 0) {\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                    'message' => '',\n                    'queryResults' => $userData,\n                ),\n                'encode'\n            );\n        }\n    }\n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n        ),\n        'encode'\n    );\n}\n\n/**\n * Change user auth password\n *\n * @param integer $post_user_id\n * @param string $post_current_pwd\n * @param string $post_new_pwd\n * @param array $SETTINGS\n * @return string\n */\nfunction changeUserAuthenticationPassword(\n    int $post_user_id,\n    string $post_current_pwd,\n    string $post_new_pwd,\n    array $SETTINGS\n)\n{\n    if (isUserIdValid($post_user_id) === true) {\n        // Get user info\n        $userData = DB::queryFirstRow(\n            'SELECT auth_type, login, private_key\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (DB::count() > 0 && empty($userData['private_key']) === false) {\n            // Now check if current password is correct\n            // For this, just check if it is possible to decrypt the privatekey\n            // And compare it to the one in session\n            try {\n                $privateKey = decryptPrivateKey($post_current_pwd, $userData['private_key']);\n            } catch (Exception $e) {\n                return prepareExchangedData(\n                    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => true,\n                        'message' => langHdl('bad_password'),\n                    ),\n                    'encode'\n                );\n            }\n\n            // Load superGlobals\n            include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/protect/SuperGlobal/SuperGlobal.php';\n            $superGlobal = new protect\\SuperGlobal\\SuperGlobal();\n\n            if ($superGlobal->get('private_key', 'SESSION', 'user') === $privateKey) {\n                // Encrypt it with new password\n                $hashedPrivateKey = encryptPrivateKey($post_new_pwd, $privateKey);\n\n                // Generate new hash for auth password\n                // load passwordLib library\n                $pwdlib = new SplClassLoader('PasswordLib', '../includes/libraries');\n                $pwdlib->register();\n                $pwdlib = new PasswordLib\\PasswordLib();\n\n                // Prepare variables\n                $newPw = $pwdlib->createPasswordHash($post_new_pwd);\n\n                // Update user account\n                DB::update(\n                    prefixTable('users'),\n                    array(\n                        'private_key' => $hashedPrivateKey,\n                        'pw' => $newPw,\n                        'special' => 'none',\n                    ),\n                    'id = %i',\n                    $post_user_id\n                );\n\n                $superGlobal->put('private_key', $privateKey, 'SESSION', 'user');\n\n                return prepareExchangedData(\n                    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => false,\n                        'message' => langHdl('done'),'',\n                    ),\n                    'encode'\n                );\n            }\n            \n            // ERROR\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('bad_password'),\n                ),\n                'encode'\n            );\n        }\n    }\n        \n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n        ),\n        'encode'\n    );\n}\n\n            \nfunction changeUserLDAPAuthenticationPassword(\n    int $post_user_id,\n    string $post_previous_pwd,\n    string $post_current_pwd,\n    array $SETTINGS\n)\n{\n    if (isUserIdValid($post_user_id) === true) {\n        // Get user info\n        $userData = DB::queryFirstRow(\n            'SELECT auth_type, login, private_key, special\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        \n        if (DB::count() > 0 && empty($userData['private_key']) === false) {\n            // Now check if current password is correct (only if not ldap)\n            if ($userData['auth_type'] === 'ldap' && $userData['special'] === 'auth-pwd-change') {\n                // As it is a change for an LDAP user\n                \n                // Now check if current password is correct\n                // For this, just check if it is possible to decrypt the privatekey\n                // And compare it to the one in session\n                $privateKey = decryptPrivateKey($post_previous_pwd, $userData['private_key']);\n\n                // Encrypt it with new password\n                $hashedPrivateKey = encryptPrivateKey($post_current_pwd, $privateKey);\n\n                // Update user account\n                DB::update(\n                    prefixTable('users'),\n                    array(\n                        'private_key' => $hashedPrivateKey,\n                        'special' => 'none',\n                    ),\n                    'id = %i',\n                    $post_user_id\n                );\n\n                // Load superGlobals\n                include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/protect/SuperGlobal/SuperGlobal.php';\n                $superGlobal = new protect\\SuperGlobal\\SuperGlobal();\n                $superGlobal->put('private_key', $privateKey, 'SESSION', 'user');\n\n                return prepareExchangedData(\n                    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => false,\n                        'message' => langHdl('done'),'',\n                    ),\n                    'encode'\n                );\n            }\n\n            // For this, just check if it is possible to decrypt the privatekey\n            // And try to decrypt one existing key\n            $privateKey = decryptPrivateKey($post_previous_pwd, $userData['private_key']);\n\n            if (empty($privateKey) === true) {\n                return prepareExchangedData(\n                    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => true,\n                        'message' => langHdl('password_is_not_correct'),\n                    ),\n                    'encode'\n                );\n            }\n\n            // Test if possible to decvrypt one key\n            // Get one item\n            $record = DB::queryFirstRow(\n                'SELECT id, pw\n                FROM ' . prefixTable('items') . '\n                WHERE perso = 0'\n            );\n\n            // Get itemKey from current user\n            $currentUserKey = DB::queryFirstRow(\n                'SELECT share_key, increment_id\n                FROM ' . prefixTable('sharekeys_items') . '\n                WHERE object_id = %i AND user_id = %i',\n                $record['id'],\n                $post_user_id\n            );\n\n            if (count($currentUserKey) > 0) {\n                // Decrypt itemkey with user key\n                // use old password to decrypt private_key\n                $itemKey = decryptUserObjectKey($currentUserKey['share_key'], $privateKey);\n                \n                if (empty(base64_decode($itemKey)) === false) {\n                    // GOOD password\n                    // Encrypt it with current password\n                    $hashedPrivateKey = encryptPrivateKey($post_current_pwd, $privateKey);\n                    \n                    // Update user account\n                    DB::update(\n                        prefixTable('users'),\n                        array(\n                            'private_key' => $hashedPrivateKey,\n                            'special' => 'none',\n                        ),\n                        'id = %i',\n                        $post_user_id\n                    );\n                    \n                    // Load superGlobals\n                    include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/protect/SuperGlobal/SuperGlobal.php';\n                    $superGlobal = new protect\\SuperGlobal\\SuperGlobal();\n                    $superGlobal->put('private_key', $privateKey, 'SESSION', 'user');\n\n                    return prepareExchangedData(\n                        $SETTINGS['cpassman_dir'],\n                        array(\n                            'error' => false,\n                            'message' => langHdl('done'),\n                        ),\n                        'encode'\n                    );\n                }\n            }\n            \n            // ERROR\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('bad_password'),\n                ),\n                'encode'\n            );\n        }\n    }\n\n    // ERROR\n    return prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n        ),\n        'encode'\n    );\n}\n\n\nfunction increaseSessionDuration(\n    int $duration\n): string\n{\n    // check if session is not already expired.\n    if ($_SESSION['sessionDuration'] > time()) {\n        // Calculate end of session\n        $_SESSION['sessionDuration'] = (int) ($_SESSION['sessionDuration'] + $duration);\n        // Update table\n        DB::update(\n            prefixTable('users'),\n            array(\n                'session_end' => $_SESSION['sessionDuration'],\n            ),\n            'id = %i',\n            $_SESSION['user_id']\n        );\n        // Return data\n        return '[{\"new_value\":\"' . $_SESSION['sessionDuration'] . '\"}]';\n    }\n    \n    return '[{\"new_value\":\"expired\"}]';\n}"], "fixing_code": ["<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      load.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (isset($_SESSION['CPM']) === false || (int) $_SESSION['CPM'] !== 1) {\n    die('Hacking attempt...');\n}\n\n// Is maintenance on-going?\nif (\n    isset($SETTINGS['maintenance_mode']) === true\n    && (int) $SETTINGS['maintenance_mode'] === 1\n    && ($session_user_admin === null\n        || (int) $session_user_admin === 1)\n) {\n    ?>\n    <script type=\"text/javascript\">\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('index_maintenance_mode_admin'); ?>',\n            '<?php echo langHdl('information'); ?>', {\n                timeOut: 0\n            }\n        );\n    </script>\n<?php\n}\n?>\n\n<script type=\"text/javascript\">\n    var userScrollPosition = 0,\n        debugJavascript = true;\n    let hourInMinutes = 60;\n\n\n    $(document).ready(function() {\n        //console.log('-- PAGE LOADED --'+$(location).attr('href').includes('?')+\" -- \"+store.get('teampassUser'));\n        if ($(location).attr('href').includes('?') === true && (store.get('teampassUser') === undefined || parseInt(store.get('teampassUser').user_id) <= 0)) {\n            $(location).attr('href', 'index.php?session=expired');\n            return false;\n        }\n\n        // prevent a resubmit on refresh and back button\n        if (window.history.replaceState) {\n            window.history.replaceState(null, null, window.location.href);\n        }\n    });\n\n    /**\n    *   Add 1 hour to session duration\n    **/\n    function IncreaseSessionTime(duration)\n    {\n        duration = duration || hourInMinutes;\n        $.post(\n            'sources/main.queries.php',\n            {\n                type     : 'increase_session_time',\n                type_category: 'action_user',\n                duration : parseInt(duration, 10) * hourInMinutes,\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                if (data[0].new_value !== 'expired') {\n                    $('#temps_restant').val(data[0].new_value);\n                    $('#date_end_session').val(data[0].new_value);\n                    $('#countdown').css('color', 'white');\n                } else {\n                    $(location).attr('href', 'index.php?session=expired');\n                }\n            },\n            'json'\n        );\n    }\n\n    // Start real time\n    // get list of last items\n    if (store.get('teampassUser') !== undefined && parseInt(store.get('teampassUser').user_id) > 0\n        && String('<?php echo $_SESSION['key']; ?>') === store.get('teampassUser').sessionKey\n        && (Date.now() - store.get('teampassUser').sessionStartTimestamp) < (store.get('teampassUser').sessionDuration * 1000)\n    ) {\n        $.when(\n            // Load teampass settings\n            loadSettings()\n        ).then(function() {\n            $.when(\n                // Refresh list of last items shopwn\n                refreshListLastSeenItems()\n            ).then(function() {\n                // Check if new privatekey needs to be adapted\n                var data = {\n                    'user_id': store.get('teampassUser').user_id,\n                    'fields' : 'special, auth_type, is_ready_for_usage, ongoing_process_id, otp_provided',\n                }\n                $.post(\n                    \"sources/main.queries.php\", {\n                        type: \"get_user_info\",\n                        type_category: 'action_user',\n                        data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) {\n                            console.info('Get user info results:');\n                            console.log(data);\n                        }\n\n                        // update local storage\n                        store.update(\n                            'teampassUser', {},\n                            function(teampassUser) {\n                                teampassUser.special = data.queryResults.special;\n                                teampassUser.auth_type = data.queryResults.auth_type;\n                                teampassUser.is_ready_for_usage = data.queryResults.is_ready_for_usage;\n                                teampassUser.ongoing_process_id = data.queryResults.ongoing_process_id;\n                            }\n                        );\n\n                        if (data.error === false && data.queryResults.special === 'generate-keys') {\n                            // Get generation keys progress status\n                            getGenerateKeysProgress(store.get('teampassUser').user_id);\n\n                            // ----\n                        } else if (data.error === false && data.queryResults.special === 'auth-pwd-change' && data.queryResults.auth_type === 'local') {\n                            // USer's password has been reseted, he shall change it\n                            if (debugJavascript === true) console.log('User has to change his auth password')\n                            // HIde\n                            $('.content-header, .content').addClass('hidden');\n\n                            // Show passwords inputs and form\n                            $('#dialog-user-change-password-info')\n                                .html('<i class=\"icon fa-solid fa-info mr-2\"></i><?php echo langHdl('user_has_to_change_password_info');?>')\n                                .removeClass('hidden');\n                            $('#dialog-user-change-password').removeClass('hidden');\n\n                        // ----\n                        } else if (data.error === false && data.queryResults.special === 'auth-pwd-change' && data.queryResults.auth_type === 'ldap') {\n                            // USer's password has been reseted, he shall change it\n                            if (debugJavascript === true) console.log('LDAP user password has to change his auth password')\n                            // HIde\n                            $('.content-header, .content').addClass('hidden');\n\n                            // Show passwords inputs and form\n                            $('#dialog-ldap-user-change-password-info')\n                                .html('<i class=\"icon fa-solid fa-info mr-2\"></i><?php echo langHdl('ldap_user_has_changed_his_password');?>')\n                                .removeClass('hidden');\n                            $('#dialog-ldap-user-change-password').removeClass('hidden');\n                            \n                            // ----\n                        } else if (\n                            (data.error === false && data.queryResults.special === 'user_added_from_ldap' && data.queryResults.auth_type === 'ldap')\n                            || (typeof data.queryResults !== 'undefined' && data.queryResults.special === 'otc_is_required_on_next_login')\n                            || parseInt(data.queryResults.otp_provided) === 0\n                        ) {\n                            // USer's password has been reseted, he shall change it\n                            if (debugJavascript === true) console.log('NEW LDAP user password - we need to encrypt items')\n                            // HIde\n                            $('.content-header, .content').addClass('hidden');\n\n                            // Show form\n                            $('#dialog-ldap-user-build-keys-database').removeClass('hidden');\n                        } else if (typeof data.queryResults !== 'undefined' && data.queryResults.special === 'recrypt-private-key') {\n                            // USer's password has been reseted, he shall change it\n                            if (debugJavascript === true) console.log('NEW LDAP - we need to encrypt private key')\n                            // HIde\n                            $('.content-header, .content').addClass('hidden');\n\n                            // Show form\n                            $('#dialog-ldap-user-change-password').removeClass('hidden');\n                        }\n                    }\n                );\n            }).then(function() {\n                if (store.get('teampassSettings') === undefined || parseInt(store.get('teampassSettings').enable_tasks_manager) === 0) {\n                    console.log('Now sending emails')\n                    setTimeout(\n                        function() {\n                            $.when(\n                                // send email\n                                $.post(\n                                    \"sources/main.queries.php\", {\n                                        type: \"send_waiting_emails\",\n                                        type_category: 'action_mail',\n                                        key: \"<?php echo $_SESSION['key']; ?>\"\n                                    }\n                                )\n                            ).then(function() {\n                                // send statistics\n                                $.post(\n                                    \"sources/main.queries.php\", {\n                                        type: \"sending_statistics\",\n                                        type_category: 'action_system',\n                                        key: \"<?php echo $_SESSION['key']; ?>\"\n                                    }\n                                );\n                            });\n                        },\n                        3000\n                    );\n                }\n\n                // Save user location\n                //console.info(\"DEBUG - Save user location -\"+store.get('teampassUser').location_stored)\n                if (store.get('teampassUser').location_stored !== 1) {\n                // Save user location\n                    $.post(\n                        \"sources/users.queries.php\", {\n                            type: 'save_user_location',\n                            step: \"perform\",\n                            key: \"<?php echo $_SESSION['key']; ?>\"\n                        },\n                        function(data) {\n                            // update local storage\n                            store.update(\n                                'teampassUser', {},\n                                function(teampassUser) {\n                                    teampassUser.location_stored = 1;\n                                }\n                            );\n                        }\n                    );\n                }\n            });\n        });\n    }\n    //-- end\n\n\n    // Countdown\n    countdown();\n\n    $(\".show_hide_password a\").on('click', function(event) {\n        event.preventDefault();\n        if($('.how_hide_password input').attr(\"type\") === \"text\"){\n            $('.show_hide_password input').attr('type', 'password');\n            $('.show_hide_password i').addClass( \"fa-eye-slash\" );\n            $('.show_hide_password i').removeClass( \"fa-eye\" );\n        }else if($('#show_hide_password input').attr(\"type\") === \"password\"){\n            $('.show_hide_password input').attr('type', 'text');\n            $('.show_hide_password i').removeClass( \"fa-eye-slash\" );\n            $('.show_hide_password i').addClass( \"fa-eye\" );\n        }\n    });\n    \n    if (store.get('teampassUser') !== undefined &&\n        store.get('teampassUser').special === 'generate-keys'\n    ) {\n        // Now we need to perform re-encryption due to LDAP password change\n        /*console.log('User has to regenerate keys')\n        // HIde\n        $('.content-header, .content').addClass('hidden');\n        $('#dialog-user-temporary-code-info').html('<i class=\"icon fa-solid fa-info mr-2\"></i><?php echo langHdl('renecyption_expected');?>');\n\n        // Show passwords inputs and form\n        $('#dialog-user-temporary-code').removeClass('hidden');\n        */\n        \n        // ---\n    } else if (store.get('teampassUser') !== undefined &&\n        store.get('teampassUser').special === 'ldap_password_has_changed_do_reencryption'\n    ) {\n        // Now we need to perform re-encryption due to LDAP password change\n        console.log('show password change')\n        // HIde\n        $('.content-header, .content, #button_do_sharekeys_reencryption').addClass('hidden');\n        $('#warning-text-reencryption').html('<i class=\"icon fa-solid fa-info mr-2\"></i>'.langHdl('ldap_password_change_warning'));\n\n        // Show passwords inputs and form\n        $('#dialog-encryption-keys, .ask-for-previous-password').removeClass('hidden');\n\n        $('#sharekeys_reencryption_target_user').val(store.get('teampassUser').user_id);\n\n        $('#button_do_sharekeys_reencryption').removeClass('hidden');\n        \n        // ---\n    } else if (store.get('teampassUser') !== undefined &&\n        store.get('teampassUser').shown_warning_unsuccessful_login === false\n    ) {\n        // If login attempts experimented\n        // Prepare modal\n        showModalDialogBox(\n            '#warningModal',\n            '<i class=\"fa-solid fa-user-shield fa-lg warning mr-2\"></i><?php echo langHdl('caution'); ?>',\n            '<?php echo langHdl('login_attempts_identified_since_last_connection'); ?>',\n            '<?php echo langHdl('see_detail'); ?>',\n            '<?php echo langHdl('cancel'); ?>'\n        );\n\n        // Actions on modal buttons\n        $(document).on('click', '#warningModalButtonClose', function() {\n            store.update(\n                'teampassUser', {},\n                function(teampassUser) {\n                    teampassUser.shown_warning_unsuccessful_login = true;\n                }\n            );\n        });\n        $(document).on('click', '#warningModalButtonAction', function() {\n            // SHow user\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>');\n\n            // Action\n            store.update(\n                'teampassUser', {},\n                function(teampassUser) {\n                    teampassUser.shown_warning_unsuccessful_login = true;\n                }\n            );\n            document.location.href = \"index.php?page=profile&tab=timeline\";\n        });\n    } else if (store.get('teampassUser') !== undefined &&\n        store.get('teampassUser').special === 'private_items_to_encrypt'\n    ) {\n        // If user has to re-encrypt his personal item passwords\n        $('#dialog-encryption-personal-items-after-upgrade').removeClass('hidden');\n        $('.content, .content-header').addClass('hidden');\n        \n        // Actions on modal buttons\n        $(document).on('click', '#button_do_personal_items_reencryption', function() {\n            // SHow user\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>');\n\n            defusePskRemoval(store.get('teampassUser').user_id, 'psk', 0);\n            \n            function defusePskRemoval(userId, step, start)\n            {\n                if (step === 'psk') {\n                    // Inform user\n                    $(\"#user-current-defuse-psk-progress\").html('<b><?php echo langHdl('encryption_keys'); ?> </b> [' + start + ' - ' + (parseInt(start) + <?php echo NUMBER_ITEMS_IN_BATCH;?>) + '] ' +\n                        '... <?php echo langHdl('please_wait'); ?><i class=\"fa-solid fa-spinner fa-pulse ml-3 text-primary\"></i>');\n\n                    var data = {\n                        'userPsk' : $('#user-current-defuse-psk').val(),\n                            'start': start,\n                            'length': <?php echo NUMBER_ITEMS_IN_BATCH;?>,\n                            'user_id': userId,\n                    };\n                    // Do query\n                    $.post(\n                        \"sources/main.queries.php\", {\n                            'type': \"user_psk_reencryption\",\n                            'type_category': 'action_key',\n                            'data': prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                            'key': '<?php echo $_SESSION['key']; ?>'\n                        },\n                        function(data) {\n                            data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                            if (debugJavascript === true) console.log(data)\n                            if (data.error === true) {\n                                // error\n                                toastr.remove();\n                                toastr.error(\n                                    data.message,\n                                    '<?php echo langHdl('caution'); ?>', {\n                                        timeOut: 5000,\n                                        progressBar: true\n                                    }\n                                );\n\n                                // Enable buttons\n                                $(\"#user-current-defuse-psk-progress\").html('<?php echo langHdl('provide_current_psk_and_click_launch'); ?>');\n                                $('#button_do_sharekeys_reencryption, #button_close_sharekeys_reencryption').removeAttr('disabled');\n                                return false;\n                            } else {\n                                // Start looping on all steps of re-encryption\n                                defusePskRemoval(data.userId, data.step, data.start);\n                            }\n                        }\n                    );\n                } else {\n                    // Finished\n                    $(\"#user-current-defuse-psk-progress\").html('<i class=\"fa-solid fa-check text-success mr-3\"></i><?php echo langHdl('done'); ?>');\n\n                    toastr.remove();\n                }\n            }\n\n        });\n        $(document).on('click', '#button_close_personal_items_reencryption', function() {\n            $('#dialog-encryption-personal-items-after-upgrade').addClass('hidden');\n            $('.content, .content-header').removeClass('hidden');\n        });\n    }\n\n\n    // Show tooltips\n    $('.infotip').tooltip();\n\n    // Sidebar redirection\n    $('.nav-link').click(function() {\n        if ($(this).data('name') !== undefined) {\n            //NProgress.start();\n            document.location.href = \"index.php?page=\" + $(this).data('name');\n        }\n    });\n\n    // User menu action\n    $('.user-menu').click(function() {\n        if ($(this).data('name') !== undefined) {\n            if ($(this).data('name') === 'increase_session') {\n                showExtendSession();\n            } else if ($(this).data('name') === 'sync-new-ldap-password') {\n                // This case permits to handle a case where user has changed his password in LDAP\n                console.log('show sync-new-ldap-password')\n                \n                if (debugJavascript === true) console.log('LDAP user password has to change his auth password')\n                // HIde\n                $('.content-header, .content').addClass('hidden');\n\n                // Show passwords inputs and form\n                $('#dialog-ldap-user-change-password-info')\n                    .html('<i class=\"icon fa-solid fa-info mr-2\"></i><?php echo langHdl('ldap_user_has_changed_his_password');?>')\n                    .removeClass('hidden');\n                $('#dialog-ldap-user-change-password').removeClass('hidden');\n\n                // ----\n            } else if ($(this).data('name') === 'password-change') {\n                //console.log('show password change')\n                // HIde\n                $('.content-header, .content, #button_do_user_change_password').addClass('hidden');\n\n                // Add DoCheck button\n                $('#button_do_user_change_password').after('<button class=\"btn btn-primary\" id=\"button_do_pwds_checks\"><?php echo langHdl('perform_checks'); ?></button>');\n\n                // Show passwords inputs and form\n                $('#dialog-user-change-password-progress').html('<i class=\"icon fa-solid fa-info mr-2\"></i><?php echo langHdl('change_your_password_info_message'); ?>');\n                $('#dialog-user-change-password').removeClass('hidden');\n\n                // Actions\n                $('#button_do_pwds_checks').click(function() {\n                    if ($('#profile-password').val() !== $('#profile-password-confirm').val()) {\n                        $('#button_do_user_change_password').addClass('hidden');\n                        toastr.remove();\n                        toastr.error(\n                            '<?php echo langHdl('passwords_not_the_same'); ?>',\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 3000,\n                                progressBar: true\n                            }\n                        );\n                    } else if (parseInt($('#profile-password-complex').val()) >= parseInt(store.get('teampassSettings').personal_saltkey_security_level)) {\n                        $('#button_do_user_change_password').removeClass('hidden');\n                        $('#button_do_pwds_checks').remove();\n                        toastr.remove();\n                        toastr.info(\n                            '<?php echo langHdl('hit_launch_to_start'); ?>',\n                            '<?php echo langHdl('ready_to_go'); ?>', {\n                                timeOut: 3000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        $('#button_do_user_change_password').addClass('hidden');\n                        toastr.remove();\n                        toastr.error(\n                            '<?php echo langHdl('complexity_level_not_reached'); ?>',\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    }\n                });\n                \n                // ----\n            } else if ($(this).data('name') === 'profile') {\n                // Show profile page\n                document.location.href = \"index.php?page=profile\";\n\n                // ----\n            } else if ($(this).data('name') === 'logout') {\n                // Logout directly to login form\n                window.location.href = \"./includes/core/logout.php?token=<?php echo $_SESSION['key']; ?>\";\n\n                // ----\n            } else if ($(this).data('name') === 'generate-new_keys') {\n                // User wants to generate new keys\n                console.log('show new keys generation');\n                $('#warningModalButtonAction').attr('data-button-confirm', 'false');\n\n                // SHow modal\n                showModalDialogBox(\n                    '#warningModal',\n                    '<i class=\"fa-solid fa-person-digging fa-lg warning mr-2\"></i><?php echo langHdl('generate_new_keys'); ?> <b>',\n                    '<div class=\"form-group\">'+\n                        '<?php echo langHdl('generate_new_keys_info'); ?>' +\n                    '</div>' +\n                    '<div class=\"input-group mb-2 hidden\" id=\"new-encryption-div\">' +\n                        '<div class=\"input-group-prepend\">' +\n                            '<span class=\"input-group-text\"><?php echo langHdl('confirm_password'); ?></span>' +\n                        '</div>' +\n                        '<input id=\"encryption-otp\" type=\"password\" class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').pwd+'\">' +\n                        '<div class=\"input-group-append\">' +\n                            '<button class=\"btn btn-outline-secondary btn-no-click\" id=\"show-encryption-otp\" title=\"<?php echo langHdl('mask_pw'); ?>\"><i class=\"fas fa-low-vision\"></i></button>' +\n                        '</div>' +\n                    '</div>',\n                    '<?php echo langHdl('perform'); ?>',\n                    '<?php echo langHdl('close'); ?>'\n                );\n\n                // Manage show/hide password\n                $('#show-encryption-otp')\n                    .mouseup(function() {\n                        $('#encryption-otp').attr('type', 'password');\n                    })\n                    .mousedown(function() {\n                        $('#encryption-otp').attr('type', 'text');\n                    });\n                $('.btn-no-click')\n                    .click(function(e) {\n                        e.preventDefault();\n                    });\n\n                // Manage click on button PERFORM\n                $(document).on('click', '#warningModalButtonAction', function() {\n                    // On PERFORM click\n                    if ($('#warningModalButtonAction').attr('data-button-confirm') === 'false') {\n                        $(\"#new-encryption-div\").removeClass('hidden');\n                        $('#warningModalButtonAction')\n                            .html('<i class=\"fa-solid fa-triangle-exclamation warning mr-2\"></i><?php echo langHdl('confirm'); ?>')\n                            .attr('data-button-confirm', 'true');\n\n                    } else if ($('#warningModalButtonAction').attr('data-button-confirm') === 'true') {\n                        // As reencryption relies on user's password\n                        // ensure we have it\n                        if ($('#encryption-otp').val() === '') {\n                            // No user password provided\n                            $('#warningModalButtonAction')\n                                .html('<?php echo langHdl('perform'); ?>')\n                                .attr('data-button-confirm', 'false');\n\n                        } else {\n                            // We have the password, start reencryption\n                            $('#warningModalButtonAction')\n                                .addClass('disabled')\n                                .html('<i class=\"fa-solid fa-spinner fa-spin\"></i>');\n                            $('#warningModalButtonClose').addClass('disabled');\n\n                            // update the process\n                            // add all tasks\n                            var parameters = {\n                                'user_id': parseInt(store.get('teampassUser').user_id),\n                                'user_pwd': $('#encryption-otp').val(),\n                                'encryption_key': '',\n                                'delete_existing_keys': true,\n                                'encrypt_with_user_pwd': true,\n                                'send_email_to_user': true,\n                                'email_body': 'email_body_user_config_4',\n                                'generate_user_new_password': false,\n                            };\n                            //console.log(parameters);\n\n                            $.post(\n                                \"sources/main.queries.php\", {\n                                    type: \"user_new_keys_generation\",\n                                    type_category: 'action_key',\n                                    data: prepareExchangedData(JSON.stringify(parameters), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                                    key: \"<?php echo $_SESSION['key']; ?>\"\n                                },\n                                function(data_next1) { \n                                    data_next1 = prepareExchangedData(data_next1, 'decode', '<?php echo $_SESSION['key']; ?>');\n                                    if (debugJavascript === true) console.log(data_next1)\n\n                                    if (data_next1.error !== false) {\n                                        // Show error\n                                        toastr.remove();\n                                        toastr.error(\n                                            data_next1.message,\n                                            '<?php echo langHdl('caution'); ?>', {\n                                                timeOut: 5000,\n                                                progressBar: true\n                                            }\n                                        );\n                                    } else {\n                                        $(\"#new-encryption-div\").after('<div><?php echo langHdl('generate_new_keys_end'); ?></div>');\n                                        // Show warning\n                                        $('#user_not_ready').removeClass('hidden');\n                                        // update local storage\n                                        store.update(\n                                            'teampassUser', {},\n                                            function(teampassUser) {\n                                                teampassUser.is_ready_for_usage = 0;\n                                            }\n                                        );\n                                        $(\"#warningModalButtonAction\").addClass('hidden');\n                                        $('#warningModalButtonClose').removeClass('disabled');\n\n                                        // Get follow up\n                                        setTimeout(\n                                            getGenerateKeysProgress,\n                                            5000,\n                                            store.get('teampassUser').user_id\n                                        );\n                                    }\n                                }\n                            );\n                        }\n                    }\n                });\n            }\n        }\n    });\n\n    $('.close-element').click(function() {\n        $(this).closest('.card').addClass('hidden');\n\n        $('.content-header, .content').removeClass('hidden');\n    });\n\n    /**\n     * When clicking save Personal saltkey\n     */\n    /*\n    $('#button_save_user_psk').click(function() {\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n        );\n\n        // Prepare data\n        var data = {\n            \"psk\": sanitizeString($(\"#user_personal_saltkey\").val()),\n            \"complexity\": $(\"#psk_strength_value\").val()\n        };\n\n        //\n        $.post(\n            \"sources/main.queries.php\", {\n                type: \"store_personal_saltkey\",\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, '<?php echo $_SESSION['key']; ?>');\n\n                // Is there an error?\n                if (data.error === true) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('warning'); ?>',\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    store.update(\n                        'teampassUser',\n                        function(teampassUser) {\n                            teampassUser.pskDefinedInDatabase = 1;\n                        }\n                    )\n\n                    store.update(\n                        'teampassUser',\n                        function(teampassUser) {\n                            teampassUser.pskSetForSession = data.encrypted_psk;\n                        }\n                    )\n\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('alert_page_will_reload'); ?>'\n                    );\n\n                    location.reload();\n                }\n            }\n        );\n    });\n    */\n\n    // For Personal Saltkey\n    $(\"#profile-password\").simplePassMeter({\n        \"requirements\": {},\n        \"container\": \"#profile-password-strength\",\n        \"defaultText\": \"<?php echo langHdl('index_pw_level_txt'); ?>\",\n        \"ratings\": [{\n                \"minScore\": 0,\n                \"className\": \"meterFail\",\n                \"text\": \"<?php echo langHdl('complex_level0'); ?>\"\n            },\n            {\n                \"minScore\": 25,\n                \"className\": \"meterWarn\",\n                \"text\": \"<?php echo langHdl('complex_level1'); ?>\"\n            },\n            {\n                \"minScore\": 50,\n                \"className\": \"meterWarn\",\n                \"text\": \"<?php echo langHdl('complex_level2'); ?>\"\n            },\n            {\n                \"minScore\": 60,\n                \"className\": \"meterGood\",\n                \"text\": \"<?php echo langHdl('complex_level3'); ?>\"\n            },\n            {\n                \"minScore\": 70,\n                \"className\": \"meterGood\",\n                \"text\": \"<?php echo langHdl('complex_level4'); ?>\"\n            },\n            {\n                \"minScore\": 80,\n                \"className\": \"meterExcel\",\n                \"text\": \"<?php echo langHdl('complex_level5'); ?>\"\n            },\n            {\n                \"minScore\": 90,\n                \"className\": \"meterExcel\",\n                \"text\": \"<?php echo langHdl('complex_level6'); ?>\"\n            }\n        ]\n    });\n    $(\"#profile-password\").bind({\n        \"score.simplePassMeter\": function(jQEvent, score) {\n            $(\"#profile-password-complex\").val(score);\n        }\n    }).change({\n        \"score.simplePassMeter\": function(jQEvent, score) {\n            $(\"#profile-password-complex\").val(score);\n        }\n    });\n\n    // Hide sidebar footer icons when reducing sidebar\n    $('a[data-widget=\"pushmenu\"]').click(function(event) {\n        if ($('#sidebar-footer').hasClass('hidden') === true) {\n            setTimeout(function() {\n                $('#sidebar-footer').removeClass('hidden');\n            }, 300);\n        } else {\n            $('#sidebar-footer').addClass('hidden');\n        }\n    });\n\n\n    var clipboardCopy = new ClipboardJS(\".clipboard-copy\", {\n        text: function(trigger) {\n            var elementId = $(trigger).data('clipboard-text');\n            if (debugJavascript === true) console.log($('#' + elementId).val())\n            return String($('#' + elementId).val());\n        }\n    });\n\n    clipboardCopy.on('success', function(e) {\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('copy_to_clipboard'); ?>',\n            '<?php echo langHdl('information'); ?>', {\n                timeOut: 2000\n            }\n        );\n    });\n    \n    // Progress bar\n    setTimeout(\n        function() {\n            $(\".fade\").removeClass(\"out\");\n\n            // Is user not ready\n            if (typeof store.get('teampassUser').is_ready_for_usage !== 'undefined' && parseInt(store.get('teampassUser').is_ready_for_usage) === 0) {\n                $('#user_not_ready').removeClass('hidden');\n            }\n        },\n        5000\n    );\n\n\n    /**\n    * USER HAS DECIDED TO CHANGE HIS AUTH PASSWORD\n     */\n    $(document).on('click', '#dialog-user-change-password-do', function() {\n        // Start by changing the user password and send it by email\n        if ($('#profile-password-confirm').val() !== $('#profile-password').val()) {\n            // Show error\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('index_pw_error_identical'); ?>',\n                '<?php echo langHdl('caution'); ?>', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            return false;\n        }\n        if ($('#profile-current-password').val() !== \"\" && $('#profile-password').val() !== \"\" && $('#profile-password-confirm').val() !== \"\") {\n            // Case where a user is changing his authentication password\n            console.log('Reencryption based upon user decision to change his auth password');\n\n            // Show progress\n            $('#dialog-user-change-password-progress').html('<b><?php echo langHdl('please_wait'); ?></b><i class=\"fa-solid fa-spinner fa-pulse ml-3 text-primary\"></i>');\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n            );\n            \n            // Disable buttons\n            $('#dialog-user-change-password-do, #dialog-user-change-password-close').attr('disabled', 'disabled');\n            \n            data = {\n                'user_id': store.get('teampassUser').user_id,\n                'old_password': $('#profile-current-password').val(),\n                'new_password': $('#profile-password').val(),\n            }\n            if (debugJavascript === true) console.log(data);\n\n            // Check user current password\n            // and change the password\n            // and use the password to re-encrypt the privatekey\n            $.post(\n                'sources/main.queries.php', {\n                    type: 'change_user_auth_password',\n                    type_category: 'action_password',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n\n                        $(\"#dialog-user-change-password-progress\").html('<?php echo langHdl('fill_in_fields_and_hit_launch'); ?>');\n\n                        // Enable buttons\n                        $('#dialog-user-change-password-do, #dialog-user-change-password-close').removeAttr('disabled');\n                    } else {\n                        // SUCCESS\n                        $('#dialog-user-change-password-close').removeAttr('disabled');\n                        toastr.remove();\n                        toastr.success(\n                            data.message,\n                            '<?php echo langHdl('success'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                        $(\"#dialog-user-change-password-progress\").html('');\n                        $('#dialog-user-change-password').addClass('hidden');\n                        $('.content-header, .content').removeClass('hidden');\n                    }\n                }\n            );\n        } else {\n            // Show error\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('password_cannot_be_empty'); ?>',\n                '<?php echo langHdl('caution'); ?>', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n        }\n    });\n    $(document).on('click', '#dialog-user-change-password-close', function() {\n        // HIde\n        $('.content-header, .content').removeClass('hidden');\n\n        // SHow form\n        $('#dialog-user-change-password, #dialog-user-change-password-info').addClass('hidden');\n    });\n    \n\n    /**\n    * ADMIN HAS DECIDED TO CHANGE THE USER'S AUTH PASSWORD\n     */\n    $(document).on('click', '#dialog-admin-change-user-password-do', function() {\n        // When an admin changes the user auth password\n        console.log('Reencryption based upon admin decision to change user auth password');\n\n        // Show progress\n        $('#dialog-admin-change-user-password-progress').html('<b><?php echo langHdl('please_wait'); ?></b><i class=\"fa-solid fa-spinner fa-pulse ml-3 text-primary\"></i>');\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n        );\n        \n        // Disable buttons\n        $('#dialog-admin-change-user-password-do, #dialog-admin-change-user-password-close').attr('disabled', 'disabled');            \n        \n        // ENsure we have a user id\n        if ($('#admin_change_user_password_target_user').val() !== '') {\n            // Case where change is for user's account\n            // update the process\n            // add all tasks\n            var parameters = {\n                'user_id': parseInt($('#admin_change_user_password_target_user').val()),\n                'user_pwd': '',\n                'encryption_key': '',\n                'delete_existing_keys': true,\n                'send_email_to_user': true,\n                'encrypt_with_user_pwd': true,\n                'generate_user_new_password': true,\n                'email_body': 'email_body_user_config_3',\n            };\n\n            $.post(\n                \"sources/main.queries.php\", {\n                    type: \"user_new_keys_generation\",\n                    type_category: 'action_key',\n                    data: prepareExchangedData(JSON.stringify(parameters), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data_next1) { \n                    data_next1 = prepareExchangedData(data_next1, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data_next1)\n\n                    if (data_next1.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data_next1.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Reload table\n                        if (typeof oTable !== 'undefined') {\n                            oTable.ajax.reload();\n                        }\n                        \n                        $(\"#dialog-admin-change-user-password-progress\").html('<?php echo langHdl('generate_new_keys_end'); ?>');\n                        // Show warning\n                        // Enable buttons\n                        $('#dialog-admin-change-user-password-close').removeAttr('disabled');\n                        toastr.remove();\n                    }\n                }\n            );\n        }\n    });\n    $(document).on('click', '#dialog-admin-change-user-password-close', function() {\n        // HIde\n        $('.content-header, .content').removeClass('hidden');\n\n        // SHow form\n        $('#dialog-admin-change-user-password').addClass('hidden');\n    });\n    \n    $(document).on('click', '.temp-button', function() {\n        \n        if ($(this).data('action') === \"show-user-pwd\") {\n            // show password\n            $('#temp-user-pwd').attr('type', 'text');\n            $(this).prop( \"disabled\", true );\n            setTimeout(\n                () => {\n                    $('#temp-user-pwd').attr('type', 'hidden');\n                    $(this).prop( \"disabled\", false );\n                },\n                5000\n            );\n        } else if ($(this).data('action') === \"send-user-pwd\") {\n            // Send email\n            console.log('Preparing for email sending');\n            \n            // Prepare data\n            var data = {\n                'receipt': $('#temp-user-email').val(),\n                'subject': '[Teampass] <?php echo langHdl('your_new_password');?>',\n                'body': '<?php echo langHdl('email_body_temporary_login_password');?>',\n                'pre_replace' : {\n                    '#enc_code#' : $('#temp-user-pwd').val(),\n                }\n            }\n            if (debugJavascript === true) console.log(data);\n            // Prepare form\n            $('#dialog-admin-change-user-password-info').html('<?php echo langHdl('sending_email_message');?>');\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n            );\n\n            // Launch action\n            $.post(\n                'sources/main.queries.php', {\n                    type: 'mail_me',\n                    type_category: 'action_mail',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Fianlize UI\n\n                        $('#dialog-admin-change-user-password-info').html('');\n                        $('#dialog-admin-change-user-password-do, #dialog-admin-change-user-password-close').removeAttr('disabled');\n\n                        // HIde\n                        $('.content-header, .content').removeClass('hidden');\n\n                        // SHow form\n                        $('#dialog-admin-change-user-password').addClass('hidden');\n\n                        store.set(\n                            'teampassUser', {\n                                admin_user_password: '',\n                                admin_user_email: '',\n                            }\n                        );\n                        \n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n        }        \n    });\n    \n\n    /**\n    * USER PROVIDES HIS TEMPORARY CODE TO\n     */\n    $(document).on('click', '#dialog-user-temporary-code-do', function() {\n        // Perform a renecryption based upon a temporary code\n        console.log('Reencryption based upon users temporary code');\n\n        // Show progress\n        $('#dialog-user-temporary-code-progress').html('<b><?php echo langHdl('please_wait'); ?></b><i class=\"fa-solid fa-spinner fa-pulse ml-3 text-primary\"></i>');\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n        );\n        \n        // Disable buttons\n        $('#dialog-user-temporary-code-do, #dialog-user-temporary-code-close').attr('disabled', 'disabled');            \n        \n        // Start by testing if the temporary code is correct to decrypt an item\n        data = {\n            'user_id': store.get('teampassUser').user_id,\n            'password': $('#dialog-user-temporary-code-value').val(),\n        }\n        if (debugJavascript === true) {\n            console.log('Testing if temporary code is correct');\n            console.log(data);\n        }\n        $.post(\n            'sources/main.queries.php', {\n                type: 'test_current_user_password_is_correct',\n                type_category: 'action_password',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    $(\"#dialog-user-temporary-code-progress\").html('<?php echo langHdl('fill_in_fields_and_hit_launch'); ?>');\n\n                    // Enable buttons\n                    $('#dialog-user-temporary-code-do, #dialog-user-temporary-code-close').removeAttr('disabled');\n                } else {\n                    // Change privatekey encryption with user-s password\n                    data = {\n                        'user_id': store.get('teampassUser').user_id,\n                        'current_code': $('#dialog-user-temporary-code-current-password').val(),\n                        'new_code': $('#dialog-user-temporary-code-value').val(),\n                        'action_type' : 'encrypt_privkey_with_user_password',\n                    }\n                    if (debugJavascript === true) console.log(data);\n                    \n                    $.post(\n                        'sources/main.queries.php', {\n                            type: 'change_private_key_encryption_password',\n                            type_category: 'action_key',\n                            data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                            key: \"<?php echo $_SESSION['key']; ?>\"\n                        },\n                        function(data) {\n                            data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                            if (debugJavascript === true) console.log(data);\n\n                            if (data.error !== false) {\n                                // Show error\n                                toastr.remove();\n                                toastr.error(\n                                    data.message,\n                                    '<?php echo langHdl('caution'); ?>', {\n                                        timeOut: 5000,\n                                        progressBar: true\n                                    }\n                                );\n\n                                // Enable buttons\n                                $('#dialog-user-temporary-code-do, #dialog-user-temporary-code-close').removeAttr('disabled');\n                            } else {\n                                // Inform user\n                                // Enable close button\n                                $('#dialog-user-temporary-code-close').removeAttr('disabled');\n                                $('#dialog-user-temporary-code-do').attr('disabled', 'disabled');\n\n                                // Finished\n                                $(\"#dialog-user-temporary-code-progress\").html('<i class=\"fa-solid fa-check text-success mr-3\"></i><?php echo langHdl('done'); ?>');\n                                toastr.remove();\n\n                                store.update(\n                                    'teampassUser', {},\n                                    function(teampassUser) {\n                                        teampassUser.special = 'none';\n                                    }\n                                );\n                            }\n                        }\n                    );\n                }\n            }\n        );\n    });\n    $(document).on('click', '#dialog-user-temporary-code-close', function() {\n        // HIde\n        $('.content-header, .content').removeClass('hidden');\n\n        // SHow form\n        $('#dialog-user-temporary-code').addClass('hidden');\n    });\n\n\n    /**\n    * NEW LDAP USER HAS TO BUILD THE ITEMS DATABASE\n     */\n    $(document).on('click', '#dialog-ldap-user-build-keys-database-do', function() {\n        if ($('#dialog-ldap-user-build-keys-database-code').val() === '') {\n\n            return false;\n        }\n        // Perform a renecryption based upon a temporary code\n        console.log('Building items keys database for new LDAP user');\n\n        // Show progress\n        $('#dialog-ldap-user-build-keys-database-progress').html('<b><?php echo langHdl('please_wait'); ?></b><i class=\"fa-solid fa-spinner fa-pulse ml-3 text-primary\"></i>');\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n        );\n        \n        // Disable buttons\n        $('#dialog-ldap-user-build-keys-database-do, #dialog-ldap-user-build-keys-database-close').attr('disabled', 'disabled');            \n        \n        // Start by testing if the temporary code is correct to decrypt an item\n        data = {\n            'user_id': store.get('teampassUser').user_id,\n            'password' : $('#dialog-ldap-user-build-keys-database-code').val(),\n        }\n        if (debugJavascript === true) {\n            console.log('Testing if temporary code is correct in LDAP user case');\n            console.log(data);\n        }\n\n        $.post(\n            'sources/main.queries.php', {\n                type: 'test_current_user_password_is_correct',\n                type_category: 'action_password',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    $(\"#dialog-ldap-user-build-keys-database-progress\").html('<?php echo langHdl('bad_code'); ?>');\n\n                    // Enable buttons\n                    $('#dialog-ldap-user-build-keys-database-do, #dialog-ldap-user-build-keys-database-close').removeAttr('disabled');\n                } else {\n                    // Change privatekey encryption with user-s password\n                    data = {\n                        'user_id': store.get('teampassUser').user_id,\n                        'current_code': $('#dialog-ldap-user-build-keys-database-code').val(),\n                        'new_code': '',\n                        'action_type' : '',\n                    }\n                    if (debugJavascript === true) console.log(data);\n                    \n                    $.post(\n                        'sources/main.queries.php', {\n                            type: 'change_private_key_encryption_password',\n                            type_category: 'action_key',\n                            data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                            key: \"<?php echo $_SESSION['key']; ?>\"\n                        },\n                        function(data) {\n                            data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                            if (debugJavascript === true) console.log(data);\n\n                            if (data.error !== false) {\n                                // Show error\n                                toastr.remove();\n                                toastr.error(\n                                    data.message,\n                                    '<?php echo langHdl('caution'); ?>', {\n                                        timeOut: 5000,\n                                        progressBar: true\n                                    }\n                                );\n\n                                \n                                $(\"#dialog-ldap-user-build-keys-database-progress\").html('<i class=\"fa-solid fa-exclamation-circle text-danger mr-3\"></i><?php echo langHdl('bad_code'); ?>');\n\n                                // Enable buttons\n                                $('#dialog-ldap-user-build-keys-database-do, #dialog-ldap-user-build-keys-database-close').removeAttr('disabled');\n                            } else {\n                                // Inform user\n                                // Enable close button\n                                $('#dialog-ldap-user-build-keys-database-close').removeAttr('disabled');\n                                $('#dialog-ldap-user-build-keys-database-do').attr('disabled', 'disabled');\n\n                                // Finished\n                                $(\"#dialog-ldap-user-build-keys-database-progress\").html('<i class=\"fa-solid fa-check text-success mr-3\"></i><?php echo langHdl('done'); ?>');\n                                toastr.remove();\n\n                                store.update(\n                                    'teampassUser', {},\n                                    function(teampassUser) {\n                                        teampassUser.special = 'none';\n                                        teampassUser.otp_provided = 1;\n                                    }\n                                );\n\n                                // refresh the page\n                                window.location.href = 'index.php?page=items';\n                            }\n                        }\n                    );\n                }\n            }\n        );\n    });\n    $(document).on('click', '#dialog-user-temporary-code-close', function() {\n        // HIde\n        $('.content-header, .content').removeClass('hidden');\n\n        // SHow form\n        $('#dialog-user-temporary-code').addClass('hidden');\n    });\n\n\n    /**\n    * USER PASSWORD IN LDAP HAS CHANGED\n    */\n    $(document).on('click', '#dialog-ldap-user-change-password-do', function() {\n        // Start by changing the user password and send it by email\n        if ($('#dialog-ldap-user-change-password-old').val() !== \"\" && $('#dialog-ldap-user-change-password-current').val() !== \"\") {\n            // Case where a user is changing his authentication password\n            console.log('Reencryption based upon user auth password changed in LDAP');\n\n            // Show progress\n            $('#dialog-ldap-user-change-password-progress').html('<b><?php echo langHdl('please_wait'); ?></b><i class=\"fa-solid fa-spinner fa-pulse ml-3 text-primary\"></i>');\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n            );\n            \n            // Disable buttons\n            $('#dialog-ldap-user-change-password-do, #dialog-ldap-user-change-password-close').attr('disabled', 'disabled');\n            \n            data = {\n                'user_id': store.get('teampassUser').user_id,\n                'previous_password': $('#dialog-ldap-user-change-password-old').val(),\n                'current_password': $('#dialog-ldap-user-change-password-current').val(),\n            }\n            if (debugJavascript === true) console.log(data);\n\n            // Check user current password\n            // and change the password\n            // and use the password to re-encrypt the privatekey\n            $.post(\n                'sources/main.queries.php', {\n                    type: 'change_user_ldap_auth_password',\n                    type_category: 'action_password',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n\n                        $(\"#dialog-ldap-user-change-password-progress\").html('<?php echo langHdl('fill_in_fields_and_hit_launch'); ?>');\n\n                        // Enable buttons\n                        $('#dialog-ldap-user-change-password-do, #dialog-ldap-user-change-password-close').removeAttr('disabled');\n                    } else {\n                        // SUCCESS\n                        $('#dialog-ldap-user-change-password-close').removeAttr('disabled');\n                        toastr.remove();\n                        toastr.success(\n                            data.message,\n                            '<?php echo langHdl('success'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                        $(\"#dialog-ldap-user-change-password-progress\").html('');\n                    }\n                }\n            );\n        } else {\n            // Show error\n            toastr.remove();\n            toastr.error(\n                '<?php echo langHdl('password_cannot_be_empty'); ?>',\n                '<?php echo langHdl('caution'); ?>', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n        }\n    });\n    $(document).on('click', '#dialog-ldap-user-change-password-close', function() {\n        // HIde\n        $('.content-header, .content').removeClass('hidden');\n\n        // SHow form\n        $('#dialog-ldap-user-change-password, #dialog-ldap-user-change-password-info').addClass('hidden');\n    });\n    // --- END ---\n\n\n    function loadSettings() {\n        return $.post(\n            \"sources/main.queries.php\", {\n                type: \"get_teampass_settings\",\n                type_category: 'action_system',\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                try {\n                    data = prepareExchangedData(\n                        data,\n                        \"decode\",\n                        \"<?php echo $_SESSION['key']; ?>\"\n                    );\n                } catch (e) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('server_answer_error'); ?>',\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true,\n                            positionClass: \"toast-top-right\"\n                        }\n                    );\n                    return false;\n                }\n                if (debugJavascript === true) {\n                    console.log('Loading settings result:');\n                    console.log(data);\n                }\n\n                // Test if JSON object\n                if (typeof data === 'object') {\n                    // Store settings in localstorage\n                    // except sensitive data\n                    var sensitiveData = ['ldap_hosts','ldap_username','ldap_password','ldap_bdn', 'email','bck_script_passkey'];\n\n                    store.remove(\"teampassSettings\");\n\n                    store.update(\n                        'teampassSettings', {},\n                        function(teampassSettings) {\n                            $.each(data, function(key, value) {\n                                const containsKey = sensitiveData.some(element => {\n                                    if (key.includes(element)) {\n                                        return true;\n                                    }\n                                    return false;\n                                });\n\n                                if (containsKey === false) {\n                                    teampassSettings[key] = value;\n                                }\n                            });\n                        }\n                    );\n\n                    // Store some User info\n                    store.update(\n                        'teampassUser', {},\n                        function(teampassUser) {\n                            teampassUser['user_admin'] = <?php echo isset($_SESSION['user_admin']) === true ? (int) $_SESSION['user_admin'] : 0; ?>;\n                            teampassUser['user_id'] = <?php echo isset($_SESSION['user_id']) === true ? (int) $_SESSION['user_id'] : 0; ?>;\n                            teampassUser['user_manager'] = <?php echo isset($_SESSION['user_manager']) === true ? (int) $_SESSION['user_manager'] : 0; ?>;\n                            teampassUser['user_can_manage_all_users'] = <?php echo isset($_SESSION['user_can_manage_all_users']) === true ? (int) $_SESSION['user_can_manage_all_users'] : 0; ?>;\n                            teampassUser['user_read_only'] = <?php echo isset($_SESSION['user_admin']) === true ? (int) $_SESSION['user_read_only'] : 1; ?>;\n                            teampassUser['key'] = '<?php echo isset($_SESSION['key']) === true ? $_SESSION['key'] : 0; ?>';\n                            teampassUser['login'] = \"<?php echo isset($_SESSION['login']) === true ? $_SESSION['login'] : 0; ?>\";\n                            teampassUser['lastname'] = \"<?php echo isset($_SESSION['lastname']) === true ? $_SESSION['lastname'] : 0; ?>\";\n                            teampassUser['name'] = \"<?php echo isset($_SESSION['name']) === true ? $_SESSION['name'] : 0; ?>\";\n                            teampassUser['pskDefinedInDatabase'] = <?php echo isset($_SESSION['user']['encrypted_psk']) === true ? 1 : 0; ?>;\n                            teampassUser['can_create_root_folder'] = <?php echo isset($_SESSION['can_create_root_folder']) === true ? (int) $_SESSION['can_create_root_folder'] : 0; ?>;\n                            teampassUser['pskDefinedInDatabase'] = <?php echo isset($_SESSION['user']['encrypted_psk']) === true ? 1 : 0; ?>;\n                            teampassUser['special'] = '<?php echo isset($_SESSION['user']['special']) === true ? $_SESSION['user']['special'] : 'none'; ?>';\n                        }\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function showExtendSession() {\n        // Prepare modal\n        showModalDialogBox(\n            '#warningModal',\n            '<i class=\"fa-solid fa-clock fa-lg warning mr-2\"></i><?php echo langHdl('index_add_one_hour'); ?>',\n            '<div class=\"form-group\">' +\n            '<label for=\"warningModal-input\" class=\"col-form-label\"><?php echo langHdl('index_session_duration') . ' (' . langHdl('minutes') . ')'; ?>:</label>' +\n            '<input type=\"text\" class=\"form-control\" id=\"warningModal-input\" value=\"<?php echo isset($_SESSION['user']['session_duration']) === true ? (int) $_SESSION['user']['session_duration'] / 60 : 60; ?>\">' +\n            '</div>',\n            '<?php echo langHdl('confirm'); ?>',\n            '<?php echo langHdl('cancel'); ?>'\n        );\n\n        // Actions on modal buttons\n        $(document).on('click', '#warningModalButtonAction', function() {\n            // SHow user\n            toastr.remove();\n            toastr.info(\n                '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n            );\n\n            // Perform action\n            $.when(\n                IncreaseSessionTime(\n                    $('#warningModal-input').val()\n                )\n            ).then(function() {\n                toastr.remove();\n                toastr.success(\n                    '<?php echo langHdl('done'); ?>',\n                    '', {\n                        timeOut: 1000\n                    }\n                );\n                $('#warningModal').modal('hide');\n            });\n        });\n    }\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function showPersonalSKDialog() {\n        $('#dialog-request-psk').removeClass('hidden');\n\n        // Hide other\n        $('.content-header, .content').addClass('hidden');\n\n        $('#user_personal_saltkey').focus();\n\n        toastr.remove();\n    }\n\n    /**\n     * Loads the last seen items\n     *\n     * @return void\n     */\n    function refreshListLastSeenItems() {\n        $.post(\n            \"sources/main.queries.php\", {\n                type: 'refresh_list_items_seen',\n                type_category: 'action_user',\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                try {\n                    data = $.parseJSON(data)\n                } catch (e) {\n                    return false;\n                }\n                if (debugJavascript === true) {\n                    console.log('Refresh last item seen result');\n                    console.log(data);\n                }\n                //check if format error\n                if (data.error === '') {\n                    if (data.html_json === null || data.html_json === '') {\n                        $('#index-last-pwds').html('<li><?php echo langHdl('none'); ?></li>');\n                    } else {\n                        // Prepare HTML\n                        var html_list = '';\n                        $.each(data.html_json, function(i, value) {\n                            html_list += '<li onclick=\"showItemCard($(this).closest(\\'li\\'))\" class=\"pointer\" data-item-edition=\"0\" data-item-id=\"' + value.id + '\" data-item-sk=\"' + value.perso + '\" data-item-expired=\"0\" data-item-restricted=\"' + value.restricted + '\" data-item-display=\"1\" data-item-open-edit=\"0\" data-item-reload=\"0\" data-item-tree-id=\"' + value.tree_id + '\" data-is-search-result=\"0\">' +\n                                '<i class=\"fa fa-caret-right mr-2\"></i>' + value.label + '</li>';\n                        });\n                        $('#index-last-pwds').html(html_list);\n                    }\n\n                    // show notification\n                    if (data.existing_suggestions !== 0) {\n                        blink('#menu_button_suggestion', -1, 500, 'ui-state-error');\n                    }\n                } else {\n                    toastr.remove();\n                    toastr.error(\n                        data.error,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Show an item\n     *\n     * @return void\n     */\n    function showItemCard(itemDefinition) {\n        // Show circle-notch\n        toastr.remove();\n        toastr.info(\n            '<?php echo langHdl('in_progress'); ?><i class=\"fa-solid fa-circle-notch fa-spin fa-2x ml-3\"></i>'\n        );\n\n        if (window.location.href.indexOf('page=items') === -1) {\n            location.replace('<?php echo $SETTINGS['cpassman_url']; ?>/index.php?page=items&group=' + itemDefinition.data().itemTreeId + '&id=' + itemDefinition.data().itemId);\n        } else {\n            $('#items_list').html('<ul class=\"liste_items\" id=\"full_items_list\"></ul>');\n            Details(itemDefinition, 'show');\n            if (itemDefinition.data().itemTreeId !== $('#open_folder').val()) {\n                ListerItems(itemDefinition.data().itemTreeId, '', 0);\n            }\n\n            // Hide sidebar-mini\n            $('body')\n                .removeClass('control-sidebar-slide-open');\n        }\n    }\n\n    /**\n     * Open defect report page\n     *\n     * @return void\n     */\n    function generateBugReport() {\n        $('#dialog-bug-report-text').html('');\n        $('#dialog-bug-report').removeClass('hidden');\n\n        // Scroll to top\n        $(window).scrollTop(0);\n\n        var data = {\n            'browser_name': platform.name,\n            'browser_version': platform.version,\n            'os': platform.os.family,\n            'os_archi': platform.os.architecture,\n            'current_page': window.location.href.substring(window.location.href.lastIndexOf(\"/\")+1),\n        }\n        \n        $.post(\n            \"sources/main.queries.php\", {\n                type: 'generate_bug_report',\n                type_category: 'action_system',\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                // Show data\n                $('#dialog-bug-report-text').html(data.html);\n\n                // Open Github\n                $('#dialog-bug-report-github-button').click(function() {\n                    window.open('https://github.com/nilsteampassnet/TeamPass/issues/new', '_blank');\n                    return false;\n                });\n            }\n        );\n    }\n\n    // This permits to manage the column width of tree/items\n    $(document).on('click', '.columns-position', function() {\n        var colLeft = $('#folders-tree-card').find('.column-left'),\n            colRight = $('#folders-tree-card').find('.column-right'),\n            counterLeft = $(colLeft).attr(\"class\").match(/col-md-[\\w-]*\\b/)[0].split('-')[2],\n            counterRight = $(colRight).attr(\"class\").match(/col-md-[\\w-]*\\b/)[0].split('-')[2];\n\n        // Toogle class\n        if ($('#folders-tree-card').hasClass('hidden') === false) {\n            if ($(this).hasClass('tree-decrease') === true && counterRight < 9) {\n                $(colLeft).toggleClass('col-md-' + counterLeft + ' col-md-' + (parseInt(counterLeft) - 1));\n                $(colRight).toggleClass('col-md-' + counterRight + ' col-md-' + (parseInt(counterRight) + 1));\n            } else if ($(this).hasClass('tree-increase') === true && counterLeft < 9) {\n                $(colLeft).toggleClass('col-md-' + counterLeft + ' col-md-' + (parseInt(counterLeft) + 1));\n                $(colRight).toggleClass('col-md-' + counterRight + ' col-md-' + (parseInt(counterRight) - 1));\n            }\n        }\n    })\n\n    $(function() {\n        // In case that session was expired and login form was reloaded\n        // Force the launchIdentify as if the user has clicked the button\n        if ($(\"#auto_log\").length > 0) {\n            $(\"#but_identify_user\").click();\n        }\n    });\n\n    // Prevent usage of browser back button\n    history.pushState(null, null, location.href);\n    window.onpopstate = function () {\n        const queryString = window.location.search\n        const urlParams = new URLSearchParams(queryString);\n        if (urlParams.get('page') === 'items') {\n            // go back to list\n            // Play with show and hide classes\n            $('.form-item, .form-item-action, .form-folder-action, .item-details-card, .columns-position, #item-details-card-categories, #form-item-upload-pickfilesList, #card-item-expired')\n                .addClass('hidden');\n            $('#folders-tree-card').removeClass('hidden');\n\n            history.go(1);\n        }\n    };\n\n    /**\n     * \n     * @param {integer} duration\n     * \n     */\n    function clearClipboardTimeout(duration) {\n        // Wait for duration\n        $(this).delay(duration * 1000).queue(function() {\n            navigator.clipboard.writeText(\"Cleared by Teampass\").then(function() {\n                // clipboard successfully set\n            }, function() {\n                // clipboard write failed\n            });\n\n            $(this).dequeue();\n        });\n    }    \n    \n    /**\n     * Perform call to get progress status\n     * \n     * @param {integer} userId\n     */\n    function getGenerateKeysProgress(userId) {\n        var data = {\n            'user_id': userId,\n        };\n\n        $.post(\n            \"sources/users.queries.php\", {\n                type: \"get_generate_keys_progress\",\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) {\n                    console.info('Process generation keys status:');\n                    console.log(data);\n                }\n\n                if (data.error === false) {\n                    // Show progress\n                    $('#user_not_ready_progress')\n                        .text('(' + data.status + ')')\n                        .addClass('ml-1');\n                    $('#user_not_ready').removeClass('hidden');\n\n                    if (data.status !== 'finished') {\n                        // If not finished, then run again after 10 seconds\n                        setTimeout(\n                            getGenerateKeysProgress,\n                            10000,\n                            store.get('teampassUser').user_id\n                        );\n                    } else {\n                        // Progress is finished\n                        // We need to finalize user public/private keys\n                        \n                        $('#user_not_ready').addClass('hidden');\n                        $(\"#warningModalButtonAction\").removeClass('hidden');\n                        $('#user_not_ready_progress').html('');\n                        toastr.success(\n                            data.message,\n                            '<?php echo langHdl('done'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    }\n                }\n            }\n        );\n    }\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      logout.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nrequire_once '../../sources/SecureHandler.php';\nsession_name('teampass_session');\nsession_start();\n\n// Load superglobal library\nrequire_once '../../includes/libraries/protect/SuperGlobal/SuperGlobal.php';\n$superGlobal = new protect\\SuperGlobal\\SuperGlobal();\n$get = [];\n$get['user_id'] = $superGlobal->get('user_id', 'GET');\n\n// Update table by deleting ID\nif (isset($_SESSION['user_id']) === true && empty($_SESSION['user_id']) === false) {\n    $user_id = $_SESSION['user_id'];\n} elseif (isset($get['token']) === true && empty($get['token']) === false) {\n    $user_token = $get['token'];\n} else {\n    $user_id = '';\n    $user_token = '';\n}\n\nif (empty($user_id) === false && isset($_SESSION['CPM']) === true) {\n    // connect to the server\n    include_once '../../sources/main.functions.php';\n    include_once '../../includes/config/settings.php';\n    include_once '../../includes/libraries/Database/Meekrodb/db.class.php';\n    DB::$host = DB_HOST;\n    DB::$user = DB_USER;\n    DB::$password = defuseReturnDecrypted(DB_PASSWD, $SETTINGS);\n    DB::$dbName = DB_NAME;\n    DB::$port = DB_PORT;\n    DB::$encoding = DB_ENCODING;\n    DB::$ssl = DB_SSL;\n    DB::$connect_options = DB_CONNECT_OPTIONS;\n    // clear in db\n    DB::update(\n        DB_PREFIX.'users',\n        [\n            'key_tempo' => '',\n            'timestamp' => '',\n            'session_end' => '',\n        ],\n        'id=%i || key_tempo=%s',\n        $user_id,\n        isset($user_token) === true ? $user_token : ''\n    );\n    //Log into DB the user's disconnection\n    if (isset($SETTINGS['log_connections']) === true\n        && (int) $SETTINGS['log_connections'] === 1\n    ) {\n        include_once '../../sources/main.functions.php';\n        logEvents($SETTINGS, 'user_connection', 'disconnect', (string) $user_id, isset($_SESSION['login']) === true ? $_SESSION['login'] : '');\n    }\n}\n\n// erase session table\nsession_destroy();\n$_SESSION = [];\nrequire_once '../../sources/SecureHandler.php';\nsession_name('teampass_session');\nsession_start();\n$_SESSION['CPM'] = 1;\necho '\n    <script type=\"text/javascript\" src=\"../../plugins/store.js/dist/store.everything.min.js\"></script>\n    <script language=\"javascript\" type=\"text/javascript\">\n    <!--\n        // Clear localstorage\n        store.remove(\"teampassApplication\");\n        store.remove(\"teampassSettings\");\n        store.remove(\"teampassUser\");\n        store.remove(\"teampassItem\");\n        sessionStorage.clear();\n        localStorage.clear();\n        \n        setTimeout(function() {\n            document.location.href=\"../../index.php\"\n        }, 1);\n    -->\n    </script>';\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      index.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nheader('X-XSS-Protection: 1; mode=block');\nheader('X-Frame-Options: SameOrigin');\nheader(\"Cache-Control: no-cache, no-store, must-revalidate\");\nheader(\"Pragma: no-cache\");\nheader(\"Expires: 0\");\n// **PREVENTING SESSION HIJACKING**\n// Prevents javascript XSS attacks aimed to steal the session ID\n//ini_set('session.cookie_httponly', 1);\n// **PREVENTING SESSION FIXATION**\n// Session ID cannot be passed through URLs\n//ini_set('session.use_only_cookies', 1);\n// Uses a secure connection (HTTPS) if possible\n//ini_set('session.cookie_secure', 0);\n//ini_set('session.cookie_samesite', 'Lax');\n// Before we start processing, we should abort no install is present\nif (file_exists(__DIR__.'/includes/config/settings.php') === false) {\n    // This should never happen, but in case it does\n    // this means if headers are sent, redirect will fallback to JS\n    if (headers_sent()) {\n        echo '<script language=\"javascript\" type=\"text/javascript\">document.location.replace(\"install/install.php\");</script>';\n    } else {\n        header('Location: install/install.php');\n    }\n    // Now either way, we should stop processing further\n    exit;\n}\n\n// initialise CSRFGuard library\nrequire_once __DIR__.'/includes/libraries/csrfp/libs/csrf/csrfprotector.php';\ncsrfProtector::init();\nsession_id();\n\n// Load config\nif (file_exists(__DIR__.'/includes/config/tp.config.php') === true) {\n    include_once __DIR__.'/includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n// initialize session\nif (isset($SETTINGS['cpassman_dir']) === false || $SETTINGS['cpassman_dir'] === '') {\n    if (isset($SETTINGS['cpassman_dir']) === false) {\n        $SETTINGS = [];\n    }\n    $SETTINGS['cpassman_dir'] = __DIR__;\n}\n\n// Include files\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/config/settings.php';\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/config/include.php';\n// Quick major version check -> upgrade needed?\nif (isset($SETTINGS['teampass_version']) === true && version_compare(TP_VERSION, $SETTINGS['teampass_version']) > 0) {\n    // Perform redirection\n    if (headers_sent()) {\n        echo '<script language=\"javascript\" type=\"text/javascript\">document.location.replace(\"install/install.php\");</script>';\n    } else {\n        header('Location: install/upgrade.php');\n    }\n    // No other way, we should stop processing further\n    exit;\n}\n\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/libraries/protect/SuperGlobal/SuperGlobal.php';\n$superGlobal = new protect\\SuperGlobal\\SuperGlobal();\n\nif (isset($SETTINGS['cpassman_url']) === false || $SETTINGS['cpassman_url'] === '') {\n    $SETTINGS['cpassman_url'] = $superGlobal->get('REQUEST_URI', 'SERVER');\n}\n\n// Include files\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/SplClassLoader.php';\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n// Open MYSQL database connection\nrequire_once './includes/libraries/Database/Meekrodb/db.class.php';\nif (defined('DB_PASSWD_CLEAR') === false) {\n    define('DB_PASSWD_CLEAR', defuseReturnDecrypted(DB_PASSWD, $SETTINGS));\n}\nDB::$host = DB_HOST;\nDB::$user = DB_USER;\nDB::$password = DB_PASSWD_CLEAR;\nDB::$dbName = DB_NAME;\nDB::$port = DB_PORT;\nDB::$encoding = DB_ENCODING;\nDB::$ssl = DB_SSL;\nDB::$connect_options = DB_CONNECT_OPTIONS;\n// Load Core library\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/core.php';\n// Prepare POST variables\n$post_language = filter_input(INPUT_POST, 'language', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n// Prepare superGlobal variables\n$session_user_language = $superGlobal->get('user_language', 'SESSION', 'user');\n$session_user_id = $superGlobal->get('user_id', 'SESSION');\n$session_user_admin = (int) $superGlobal->get('user_admin', 'SESSION');\n$session_user_human_resources = (int) $superGlobal->get('user_can_manage_all_users', 'SESSION');\n$session_name = $superGlobal->get('name', 'SESSION');\n$session_lastname = $superGlobal->get('lastname', 'SESSION');\n$session_user_manager = (int) $superGlobal->get('user_manager', 'SESSION');\n$session_validite_pw = $superGlobal->get('validite_pw', 'SESSION');\n$session_initial_url = $superGlobal->get('initial_url', 'SESSION');\n$session_nb_users_online = $superGlobal->get('nb_users_online', 'SESSION');\n$session_auth_type = $superGlobal->get('auth_type', 'SESSION', 'user');\n\n$server = [];\n$server['request_uri'] = (string) $superGlobal->get('REQUEST_URI', 'SERVER');\n$server['request_time'] = (int) $superGlobal->get('REQUEST_TIME', 'SERVER');\n\n$get = [];\n$get['page'] = $superGlobal->get('page', 'GET') === null ? '' : $superGlobal->get('page', 'GET');\n$get['language'] = $superGlobal->get('language', 'GET') === null ? '' : $superGlobal->get('language', 'GET');\n$get['otv'] = $superGlobal->get('otv', 'GET') === null ? '' : $superGlobal->get('otv', 'GET');\n\n/* DEFINE WHAT LANGUAGE TO USE */\nif ($session_user_id === null && $post_language === null && $session_user_language === null) {\n    //get default language\n    $dataLanguage = DB::queryFirstRow(\n        'SELECT m.valeur AS valeur, l.flag AS flag\n        FROM ' . prefixTable('misc') . ' AS m\n        INNER JOIN ' . prefixTable('languages') . ' AS l ON (m.valeur = l.name)\n        WHERE m.type=%s_type AND m.intitule=%s_intitule',\n        [\n            'type' => 'admin',\n            'intitule' => 'default_language',\n        ]\n    );\n    if (empty($dataLanguage['valeur'])) {\n        $superGlobal->put('user_language', 'english', 'SESSION', 'user');\n        $superGlobal->put('user_language_flag', 'us.png', 'SESSION');\n        $session_user_language = 'english';\n    } else {\n        $superGlobal->put('user_language', $dataLanguage['valeur'], 'SESSION', 'user');\n        $superGlobal->put('user_language_flag', $dataLanguage['flag'], 'SESSION');\n        $session_user_language = $dataLanguage['valeur'];\n    }\n} elseif (isset($SETTINGS['default_language']) === true && $session_user_language === null) {\n    $superGlobal->put('user_language', $SETTINGS['default_language'], 'SESSION', 'user');\n    $session_user_language = $SETTINGS['default_language'];\n} elseif ($post_language !== null) {\n    $superGlobal->put('user_language', $post_language, 'SESSION', 'user');\n    $session_user_language = $post_language;\n} elseif ($session_user_language === null || empty($session_user_language) === true) {\n    if ($post_language !== null) {\n        $superGlobal->put('user_language', $post_language, 'SESSION', 'user');\n        $session_user_language = $post_language;\n    } elseif ($session_user_language !== null) {\n        $superGlobal->put('user_language', $SETTINGS['default_language'], 'SESSION', 'user');\n        $session_user_language = $SETTINGS['default_language'];\n    }\n}\n\nif (isset($SETTINGS['cpassman_dir']) === false || $SETTINGS['cpassman_dir'] === '') {\n    $SETTINGS['cpassman_dir'] = __DIR__;\n    $SETTINGS['cpassman_url'] = (string) $server['request_uri'];\n}\n\n// Load user languages files\nif (file_exists($SETTINGS['cpassman_dir'] . '/includes/language/' . $session_user_language . '.php') === true) {\n    $_SESSION['teampass']['lang'] = include $SETTINGS['cpassman_dir'] . '/includes/language/' . $session_user_language . '.php';\n} else {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n}\n\n// Some template adjust\nif (array_key_exists($get['page'], $mngPages) === true) {\n    $menuAdmin = true;\n} else {\n    $menuAdmin = false;\n}\n\n// Some template adjust\nif (array_key_exists($get['page'], $utilitiesPages) === true) {\n    $menuUtilities = true;\n} else {\n    $menuUtilities = false;\n}\n\n?>\n<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>\n\n<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'>\n\n<head>\n    <meta http-equiv='Content-Type' content='text/html;charset=utf-8' />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\" />\n    <title>Teampass</title>\n    <script type='text/javascript'>\n        //<![CDATA[\n        if (window.location.href.indexOf('page=') === -1 &&\n            (window.location.href.indexOf('otv=') === -1 &&\n                window.location.href.indexOf('action=') === -1)\n        ) {\n            if (window.location.href.indexOf('session_over=true') !== -1) {\n                location.replace('./includes/core/logout.php');\n            }\n        }\n\n        //history.pushState(null, null, 'index.php?session=expired');\n        /*function preventBack() {\n            window.history.forward(); \n        }        \n        setTimeout(\"preventBack()\", 0);        \n        window.onunload = function () { null };\n        */\n        //]]>\n    </script>\n\n    <!-- IonIcons -->\n    <link rel=\"stylesheet\" href=\"includes/css/ionicons.min.css\">\n    <!-- Theme style -->\n    <link rel=\"stylesheet\" href=\"plugins/adminlte/css/adminlte.min.css\">\n    <link rel=\"stylesheet\" href=\"plugins/pace-progress/themes/corner-indicator.css\" type=\"text/css\" />\n    <link rel=\"stylesheet\" href=\"plugins/select2/css/select2.min.css\" type=\"text/css\" />\n    <link rel=\"stylesheet\" href=\"plugins/select2/css/select2-bootstrap.min.css\" type=\"text/css\" />\n    <!-- Theme style -->\n    <link rel=\"stylesheet\" href=\"includes/css/teampass.css\">\n    <!-- Google Font: Source Sans Pro -->\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"includes/fonts/fonts.css\">\n    <!-- Altertify -->\n    <link rel=\"stylesheet\" href=\"plugins/alertifyjs/css/alertify.min.css\" />\n    <link rel=\"stylesheet\" href=\"plugins/alertifyjs/css/themes/bootstrap.min.css\" />\n    <!-- Toastr -->\n    <link rel=\"stylesheet\" href=\"plugins/toastr/toastr.min.css\" />\n    <!-- favicon -->\n    <link rel=\"shortcut icon\" type=\"image/png\" href=\"<?php echo $SETTINGS['favicon'];?>\"/>\n</head>\n\n\n\n\n<?php\n\n// display an item in the context of OTV link\nif (($session_validite_pw === null\n    || empty($session_validite_pw) === true\n    || empty($session_user_id) === true)\n    && empty($get['otv']) === false)\n    {\n    include './includes/core/otv.php';\n} elseif (\n    $session_validite_pw !== null\n    && $session_validite_pw === true\n    && empty($get['page']) === false\n    && empty($session_user_id) === false\n) {\n    ?>\n\n    <body class=\"hold-transition sidebar-mini layout-navbar-fixed layout-fixed\">\n        <div class=\"wrapper\">\n\n            <!-- Navbar -->\n            <nav class=\"main-header navbar navbar-expand navbar-white navbar-light border-bottom\">\n                <!-- User encryption still ongoing -->\n                <div id=\"user_not_ready\" class=\"alert alert-warning hidden pointer p-2 mt-2\" style=\"position:absolute; left:200px;\">\n                    <span class=\"align-middle infotip ml-2\" title=\"<?php echo langHdl('keys_encryption_not_ready'); ?>\"><?php echo langHdl('account_not_ready'); ?><span id=\"user_not_ready_progress\"></span><i class=\"fa-solid fa-hourglass-half fa-beat-fade mr-2 ml-2\"></i></span>\n                </div>\n\n                <!-- Left navbar links -->\n                <ul class=\"navbar-nav\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" data-widget=\"pushmenu\" href=\"#\"><i class=\"fa-solid fa-bars\"></i></a>\n                    </li>\n                    <?php\n                        if ($get['page'] === 'items') {\n                            ?>\n                        <li class=\"nav-item d-none d-sm-inline-block\">\n                            <a class=\"nav-link\" href=\"#\">\n                                <i class=\"far fa-arrow-alt-circle-right columns-position tree-increase infotip\" title=\"<?php echo langHdl('move_right_columns_separator'); ?>\"></i>\n                            </a>\n                        </li>\n                        <li class=\"nav-item d-none d-sm-inline-block\">\n                            <a class=\"nav-link\" href=\"#\">\n                                <i class=\"far fa-arrow-alt-circle-left columns-position tree-decrease infotip\" title=\"<?php echo langHdl('move_left_columns_separator'); ?>\"></i>\n                            </a>\n                        </li>\n                    <?php\n                        } ?>\n                </ul>\n\n                <!-- Right navbar links -->\n                <ul class=\"navbar-nav ml-auto\">\n                    <!-- Messages Dropdown Menu -->\n                    <li class=\"nav-item dropdown\">\n                        <div class=\"dropdown show\">\n                            <a class=\"btn btn-primary dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\">\n                                <?php\n                                    echo $session_name . '&nbsp;' . $session_lastname; ?>\n                            </a>\n\n                            <div class=\"dropdown-menu dropdown-menu-right\">\n                                <a class=\"dropdown-item user-menu\" href=\"#\" data-name=\"increase_session\">\n                                    <i class=\"far fa-clock fa-fw mr-2\"></i><?php echo langHdl('index_add_one_hour'); ?></a>\n                                <div class=\"dropdown-divider\"></div>\n                                <a class=\"dropdown-item user-menu\" href=\"#\" data-name=\"profile\">\n                                    <i class=\"fa-solid fa-user-circle fa-fw mr-2\"></i><?php echo langHdl('my_profile'); ?>\n                                </a>\n                                <?php\n                                    if (empty($session_auth_type) === false && $session_auth_type !== 'ldap') {\n                                        ?>\n                                    <a class=\"dropdown-item user-menu\" href=\"#\" data-name=\"password-change\">\n                                        <i class=\"fa-solid fa-lock fa-fw mr-2\"></i><?php echo langHdl('index_change_pw'); ?>\n                                    </a>\n                                <?php\n                                    } elseif ($session_auth_type === 'ldap') {\n                                        ?>\n                                    <a class=\"dropdown-item user-menu\" href=\"#\" data-name=\"sync-new-ldap-password\">\n                                        <i class=\"fa-solid fa-key fa-fw mr-2\"></i><?php echo langHdl('sync_new_ldap_password'); ?>\n                                    </a>\n                                <?php\n                                    } ?>\n                                <a class=\"dropdown-item user-menu<?php echo (int) $session_user_admin === 1 ? ' hidden' : '';?>\" href=\"#\" data-name=\"generate-new_keys\">\n                                    <i class=\"fa-solid fa-spray-can-sparkles fa-fw mr-2\"></i><?php echo langHdl('generate_new_keys'); ?>\n                                </a>\n                                <div class=\"dropdown-divider\"></div>\n                                <a class=\"dropdown-item user-menu\" href=\"#\" data-name=\"logout\">\n                                    <i class=\"fa-solid fa-sign-out-alt fa-fw mr-2\"></i><?php echo langHdl('disconnect'); ?>\n                                </a>\n                            </div>\n                        </div>\n                    </li>\n                    <li>\n                        <span class=\"align-middle infotip ml-2 text-info\" title=\"<?php echo langHdl('index_expiration_in'); ?>\" id=\"countdown\"></span>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" data-widget=\"control-sidebar\" data-slide=\"true\" href=\"#\" id=\"controlsidebar\"><i class=\"fa-solid fa-th-large\"></i></a>\n                    </li>\n                </ul>\n            </nav>\n            <!-- /.navbar -->\n\n            <!-- Main Sidebar Container -->\n            <aside class=\"main-sidebar sidebar-dark-primary elevation-4\">\n                <!-- Brand Logo -->\n                <a href=\"<?php echo $SETTINGS['cpassman_url'] . '/index.php?page=' . ((int) $session_user_admin === 1 ? 'admin' : 'items'); ?>\" class=\"brand-link\">\n                    <img src=\"includes/images/teampass-logo2-home.png\" alt=\"Teampass Logo\" class=\"brand-image\">\n                    <span class=\"brand-text font-weight-light\"><?php echo TP_TOOL_NAME; ?></span>\n                </a>\n\n                <!-- Sidebar -->\n                <div class=\"sidebar\">\n                    <!-- Sidebar Menu -->\n                    <nav class=\"mt-2\" style=\"margin-bottom:40px;\">\n                        <ul class=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\n                            <?php\n                                if ($session_user_admin === 0) {\n                                    // ITEMS & SEARCH\n                                    echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"items\" class=\"nav-link', $get['page'] === 'items' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-key\"></i>\n                        <p>\n                            ' . langHdl('pw') . '\n                        </p>\n                        </a>\n                    </li>';\n                                }\n\n    // IMPORT menu\n    if (isset($SETTINGS['allow_import']) === true && (int) $SETTINGS['allow_import'] === 1&& $session_user_admin === 0) {\n        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"import\" class=\"nav-link', $get['page'] === 'import' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-file-import\"></i>\n                        <p>\n                            ' . langHdl('import') . '\n                        </p>\n                        </a>\n                    </li>';\n    }\n    // EXPORT menu\n    if (\n                                    isset($SETTINGS['allow_print']) === true && (int) $SETTINGS['allow_print'] === 1\n                                    && isset($SETTINGS['roles_allowed_to_print_select']) === true\n                                    && empty($SETTINGS['roles_allowed_to_print_select']) === false\n                                    && count(array_intersect(\n                                        explode(';', $superGlobal->get('fonction_id', 'SESSION')),\n                                        explode(',', str_replace(['\"', '[', ']'], '', $SETTINGS['roles_allowed_to_print_select']))\n                                    )) > 0\n                                    && (int) $session_user_admin === 0\n                                ) {\n        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"export\" class=\"nav-link', $get['page'] === 'export' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-file-export\"></i>\n                        <p>\n                            ' . langHdl('export') . '\n                        </p>\n                        </a>\n                    </li>';\n    }\n\n    /*\n    // OFFLINE MODE menu\n    if (isset($SETTINGS['settings_offline_mode']) === true && (int) $SETTINGS['settings_offline_mode'] === 1) {\n        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"offline\" class=\"nav-link', $get['page'] === 'offline' ? ' active' : '' ,'\">\n                        <i class=\"nav-icon fa-solid fa-plug\"></i>\n                        <p>\n                            '.langHdl('offline').'\n                        </p>\n                        </a>\n                    </li>';\n    }\n    */\n\n    if ($session_user_admin === 0) {\n        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"search\" class=\"nav-link', $get['page'] === 'search' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-search\"></i>\n                        <p>\n                            ' . langHdl('find') . '\n                        </p>\n                        </a>\n                    </li>';\n    }\n\n    // Favourites menu\n    if (\n                                    isset($SETTINGS['enable_favourites']) === true && (int) $SETTINGS['enable_favourites'] === 1\n                                    && (int) $session_user_admin === 0\n                                ) {\n        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"favourites\" class=\"nav-link', $get['page'] === 'admin' ? ' favourites' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-star\"></i>\n                        <p>\n                            ' . langHdl('favorites') . '\n                        </p>\n                        </a>\n                    </li>';\n    }\n    /*\n        // KB menu\n        if (isset($SETTINGS['enable_kb']) === true && $SETTINGS['enable_kb'] === '1'\n        ) {\n            echo '\n                        <li class=\"nav-item\">\n                            <a href=\"#\" data-name=\"kb\" class=\"nav-link', $get['page'] === 'kb' ? ' active' : '' ,'\">\n                            <i class=\"nav-icon fa-solid fa-map-signs\"></i>\n                            <p>\n    '.langHdl('kb_menu').'\n                            </p>\n                            </a>\n                        </li>';\n        }\n    */\n    // SUGGESTION menu\n    if (\n                                    isset($SETTINGS['enable_suggestion']) && (int) $SETTINGS['enable_suggestion'] === 1\n                                    && $session_user_manager === 1\n                                ) {\n        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"suggestion\" class=\"nav-link', $get['page'] === 'suggestion' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-lightbulb\"></i>\n                        <p>\n                            ' . langHdl('suggestion_menu') . '\n                        </p>\n                        </a>\n                    </li>';\n    }\n\n    // Admin menu\n    if ($session_user_admin === 1) {\n        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"admin\" class=\"nav-link', $get['page'] === 'admin' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-info\"></i>\n                        <p>\n                            ' . langHdl('admin_main') . '\n                        </p>\n                        </a>\n                    </li>\n                    <li class=\"nav-item has-treeview', $menuAdmin === true ? ' menu-open' : '', '\">\n                        <a href=\"#\" class=\"nav-link\">\n                            <i class=\"nav-icon fa-solid fa-wrench\"></i>\n                            <p>\n                                ' . langHdl('admin_settings') . '\n                                <i class=\"fa-solid fa-angle-left right\"></i>\n                            </p>\n                        </a>\n                        <ul class=\"nav-item nav-treeview\">\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"options\" class=\"nav-link', $get['page'] === 'options' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-check-double nav-icon\"></i>\n                                    <p>' . langHdl('options') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"2fa\" class=\"nav-link', $get['page'] === '2fa' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-qrcode nav-icon\"></i>\n                                    <p>' . langHdl('mfa_short') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"api\" class=\"nav-link', $get['page'] === 'api' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-cubes nav-icon\"></i>\n                                    <p>' . langHdl('api') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"backups\" class=\"nav-link', $get['page'] === 'backups' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-database nav-icon\"></i>\n                                    <p>' . langHdl('backups') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"emails\" class=\"nav-link', $get['page'] === 'emails' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-envelope nav-icon\"></i>\n                                    <p>' . langHdl('emails') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"fields\" class=\"nav-link', $get['page'] === 'fields' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-keyboard nav-icon\"></i>\n                                    <p>' . langHdl('fields') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"ldap\" class=\"nav-link', $get['page'] === 'ldap' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-id-card nav-icon\"></i>\n                                    <p>' . langHdl('ldap') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"uploads\" class=\"nav-link', $get['page'] === 'uploads' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-file-upload nav-icon\"></i>\n                                    <p>' . langHdl('uploads') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"statistics\" class=\"nav-link', $get['page'] === 'statistics' ? ' active' : '', '\">\n                                    <i class=\"fa-solid fa-chart-bar nav-icon\"></i>\n                                    <p>' . langHdl('statistics') . '</p>\n                                </a>\n                            </li>\n                        </ul>\n                    </li>';\n\n                    if (isset($SETTINGS['enable_tasks_manager']) && (int) $SETTINGS['enable_tasks_manager'] === 1) {\n                        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"tasks\" class=\"nav-link', $get['page'] === 'tasks' ? ' active' : '', '\">\n                        <i class=\"fa-solid fa-tasks nav-icon\"></i>\n                        <p>' . langHdl('tasks') . '</p>\n                        </a>\n                    </li>';\n                    }\n    }\n\n    if (\n                                    $session_user_admin === 1\n                                    || $session_user_manager === 1\n                                    || $session_user_human_resources === 1\n                                ) {\n        echo '\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"folders\" class=\"nav-link', $get['page'] === 'folders' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-folder-open\"></i>\n                        <p>\n                            ' . langHdl('folders') . '\n                        </p>\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"roles\" class=\"nav-link', $get['page'] === 'roles' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-graduation-cap\"></i>\n                        <p>\n                            ' . langHdl('roles') . '\n                        </p>\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a href=\"#\" data-name=\"users\" class=\"nav-link', $get['page'] === 'users' ? ' active' : '', '\">\n                        <i class=\"nav-icon fa-solid fa-users\"></i>\n                        <p>\n                            ' . langHdl('users') . '\n                        </p>\n                        </a>\n                    </li>\n                    <li class=\"nav-item has-treeview', $menuUtilities === true ? ' menu-open' : '', '\">\n                        <a href=\"#\" class=\"nav-link\">\n                        <i class=\"nav-icon fa-solid fa-cubes\"></i>\n                        <p>' . langHdl('admin_views') . '<i class=\"fa-solid fa-angle-left right\"></i></p>\n                        </a>\n                        <ul class=\"nav nav-treeview\">\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"utilities.renewal\" class=\"nav-link', $get['page'] === 'utilities.renewal' ? ' active' : '', '\">\n                                <i class=\"far fa-calendar-alt nav-icon\"></i>\n                                <p>' . langHdl('renewal') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"utilities.deletion\" class=\"nav-link', $get['page'] === 'utilities.deletion' ? ' active' : '', '\">\n                                <i class=\"fa-solid fa-trash-alt nav-icon\"></i>\n                                <p>' . langHdl('deletion') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"utilities.logs\" class=\"nav-link', $get['page'] === 'utilities.logs' ? ' active' : '', '\">\n                                <i class=\"fa-solid fa-history nav-icon\"></i>\n                                <p>' . langHdl('logs') . '</p>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"#\" data-name=\"utilities.database\" class=\"nav-link', $get['page'] === 'utilities.database' ? ' active' : '', '\">\n                                <i class=\"fa-solid fa-database nav-icon\"></i>\n                                <p>' . langHdl('database') . '</p>\n                                </a>\n                            </li>\n                        </ul>\n                    </li>';\n    } ?>\n                        </ul>\n                    </nav>\n                    <!-- /.sidebar-menu -->\n                <div class=\"menu-footer\">\n                    <div class=\"\" id=\"sidebar-footer\">\n                        <i class=\"fa-solid fa-clock-o mr-2 infotip text-info pointer\" title=\"<?php echo langHdl('server_time') . ' ' .\n                            date($SETTINGS['date_format'], (int) $server['request_time']) . ' - ' .\n                            date($SETTINGS['time_format'], (int) $server['request_time']); ?>\"></i>\n                        <i class=\"fa-solid fa-users mr-2 infotip text-info pointer\" title=\"<?php echo $session_nb_users_online . ' ' . langHdl('users_online'); ?>\"></i>\n                        <a href=\"<?php echo DOCUMENTATION_URL; ?>\" target=\"_blank\" class=\"text-info\"><i class=\"fa-solid fa-book mr-2 infotip\" title=\"<?php echo langHdl('documentation_canal'); ?>\"></i></a>\n                        <a href=\"<?php echo HELP_URL; ?>\" target=\"_blank\" class=\"text-info\"><i class=\"fa-solid fa-life-ring mr-2 infotip\" title=\"<?php echo langHdl('admin_help'); ?>\"></i></a>\n                        <i class=\"fa-solid fa-bug infotip pointer text-info\" title=\"<?php echo langHdl('bugs_page'); ?>\" onclick=\"generateBugReport()\"></i>\n                    </div>\n                </div>\n                </div>\n                <!-- /.sidebar -->\n            </aside>\n\n            <!-- Content Wrapper. Contains page content -->\n            <div class=\"content-wrapper\">\n\n                <!-- DEFECT REPORT -->\n                <div class=\"card card-danger m-2 hidden\" id=\"dialog-bug-report\">\n                    <div class=\"card-header\">\n                        <h3 class=\"card-title\">\n                            <i class=\"fa-solid fa-bug mr-2\"></i>\n                            <?php echo langHdl('defect_report'); ?>\n                        </h3>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-12\">\n                                <div class=\"mb-2 alert alert-info\">\n                                    <i class=\"icon fa-solid fa-info mr-2\"></i>\n                                    <?php echo langHdl('bug_report_to_github'); ?>\n                                </div>\n                                <textarea class=\"form-control\" style=\"min-height:300px;\" id=\"dialog-bug-report-text\" placeholder=\"<?php echo langHdl('please_wait_while_loading'); ?>\"></textarea>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-primary mr-2 clipboard-copy\" data-clipboard-text=\"dialog-bug-report-text\" id=\"dialog-bug-report-select-button\"><?php echo langHdl('copy_to_clipboard'); ?></button>\n                        <button class=\"btn btn-primary\" id=\"dialog-bug-report-github-button\"><?php echo langHdl('open_bug_report_in_github'); ?></button>\n                        <button class=\"btn btn-default float-right close-element\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n                <!-- /.DEFECT REPORT -->\n\n\n                <!-- USER CHANGE AUTH PASSWORD -->\n                <div class=\"card card-warning m-3 hidden\" id=\"dialog-user-change-password\">\n                    <div class=\"card-header\">\n                        <h3 class=\"card-title\">\n                            <i class=\"fa-solid fa-bullhorn mr-2\"></i>\n                            <?php echo langHdl('your_attention_is_required'); ?>\n                        </h3>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-12\">\n                                <div class=\"mb-5 alert alert-info hidden\" id=\"dialog-user-change-password-info\">\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('provide_your_current_password'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"profile-current-password\">\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('index_new_pw'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"profile-password\">\n                                    <div class=\"input-group-append\" style=\"margin: 0px;\">\n                                        <span class=\"input-group-text\" id=\"profile-password-strength\"></span>\n                                        <input type=\"hidden\" id=\"profile-password-complex\" />\n                                    </div>\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('index_change_pw_confirmation'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"profile-password-confirm\">\n                                </div>\n                                <div class=\"form-control mt-3 font-weight-light grey\" id=\"dialog-user-change-password-progress\">\n                                    <?php echo langHdl('provide_current_psk_and_click_launch'); ?>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-primary\" id=\"dialog-user-change-password-do\"><?php echo langHdl('launch'); ?></button>\n                        <button class=\"btn btn-default float-right\" id=\"dialog-user-change-password-close\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n                <!-- /.USER CHANGE AUTH PASSWORD -->\n\n\n                <!-- LDAP USER HAS CHANGED AUTH PASSWORD -->\n                <div class=\"card card-warning m-3 hidden\" id=\"dialog-ldap-user-change-password\">\n                    <div class=\"card-header\">\n                        <h3 class=\"card-title\">\n                            <i class=\"fa-solid fa-bullhorn mr-2\"></i>\n                            <?php echo langHdl('your_attention_is_required'); ?>\n                        </h3>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-12\">\n                                <div class=\"mb-5 alert alert-info hidden\" id=\"dialog-ldap-user-change-password-info\">\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('provide_your_previous_password'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"dialog-ldap-user-change-password-old\">\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('provide_your_current_password'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"dialog-ldap-user-change-password-current\">\n                                </div>\n                                <div class=\"form-control mt-3 font-weight-light grey\" id=\"dialog-ldap-user-change-password-progress\">\n                                    <?php echo langHdl('provide_current_psk_and_click_launch'); ?>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-primary\" id=\"dialog-ldap-user-change-password-do\"><?php echo langHdl('launch'); ?></button>\n                        <button class=\"btn btn-default float-right\" id=\"dialog-ldap-user-change-password-close\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n                <!-- /.LDAP USER HAS CHANGED AUTH PASSWORD -->\n\n\n                <!-- ADMIN ASKS FOR USER PASSWORD CHANGE -->\n                <div class=\"card card-warning m-3 hidden\" id=\"dialog-admin-change-user-password\">\n                    <div class=\"card-header\">\n                        <h3 class=\"card-title\">\n                            <i class=\"fa-solid fa-bullhorn mr-2\"></i>\n                            <?php echo langHdl('your_attention_is_required'); ?>\n                        </h3>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-12\">\n                                <div class=\"mb-2 alert alert-info\" id=\"dialog-admin-change-user-password-info\">\n                                </div>\n                                <div class=\"form-control mt-3 font-weight-light grey\" id=\"dialog-admin-change-user-password-progress\">\n                                    <?php echo langHdl('provide_current_psk_and_click_launch'); ?>\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"hidden\" id=\"admin_change_user_password_target_user\" value=\"\">\n                        <input type=\"hidden\" id=\"admin_change_user_encryption_code_target_user\" value=\"\">\n                    </div>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-primary\" id=\"dialog-admin-change-user-password-do\"><?php echo langHdl('launch'); ?></button>\n                        <button class=\"btn btn-default float-right\" id=\"dialog-admin-change-user-password-close\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n                <!-- /.ADMIN ASKS FOR USER PASSWORD CHANGE -->\n\n\n                <!-- USER PROVIDES TEMPORARY CODE -->\n                <div class=\"card card-warning m-3 hidden\" id=\"dialog-user-temporary-code\">\n                    <div class=\"card-header\">\n                        <h3 class=\"card-title\">\n                            <i class=\"fa-solid fa-bullhorn mr-2\"></i>\n                            <?php echo langHdl('your_attention_is_required'); ?>\n                        </h3>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-12\">\n                                <div class=\"mb-5 alert alert-info\" id=\"dialog-user-temporary-code-info\">\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('provide_your_current_password'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"dialog-user-temporary-code-current-password\">\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('temporary_encryption_code'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"dialog-user-temporary-code-value\">\n                                </div>\n                                <div class=\"form-control mt-3 font-weight-light grey\" id=\"dialog-user-temporary-code-progress\">\n                                    <?php echo langHdl('provide_current_psk_and_click_launch'); ?>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-primary\" id=\"dialog-user-temporary-code-do\"><?php echo langHdl('launch'); ?></button>\n                        <button class=\"btn btn-default float-right\" id=\"dialog-user-temporary-code-close\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n                <!-- /.USER PROVIDES TEMPORARY CODE -->\n\n\n                <!-- ENCRYPTION KEYS GENERATION -->\n                <div class=\"card card-warning m-3 mt-3 hidden\" id=\"dialog-encryption-keys\">\n                    <div class=\"card-header\">\n                        <h3 class=\"card-title\">\n                            <i class=\"fa-solid fa-bullhorn mr-2\"></i>\n                            <?php echo langHdl('your_attention_is_required'); ?>\n                        </h3>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-12\">\n                                <div class=\"mb-2 alert alert-info\" id=\"warning-text-reencryption\">\n                                    <i class=\"icon fa-solid fa-info mr-2\"></i>\n                                    <?php echo langHdl('objects_encryption_explanation'); ?>\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"hidden\" id=\"sharekeys_reencryption_target_user\" value=\"\">\n                    </div>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-primary\" id=\"button_do_sharekeys_reencryption\"><?php echo langHdl('launch'); ?></button>\n                        <button class=\"btn btn-default float-right\" id=\"button_close_sharekeys_reencryption\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n                <!-- /.ENCRYPTION KEYS GENERATION -->\n\n\n                <!-- ENCRYPTION KEYS GENERATION FOR LDAP NEW USER -->\n                <div class=\"card card-warning m-3 mt-3 hidden\" id=\"dialog-ldap-user-build-keys-database\">\n                    <div class=\"card-header\">\n                        <h3 class=\"card-title\">\n                            <i class=\"fa-solid fa-bullhorn mr-2\"></i>\n                            <?php echo langHdl('your_attention_is_required'); ?>\n                        </h3>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-12\">\n                                <div class=\"mb-2 alert alert-info\" id=\"warning-text-reencryption\">\n                                    <i class=\"icon fa-solid fa-info mr-2\"></i>\n                                    <?php echo langHdl('help_for_launching_items_encryption'); ?>\n                                </div>\n\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('temporary_encryption_code'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"dialog-ldap-user-build-keys-database-code\">\n                                </div>\n                                \n                                <div class=\"form-control mt-3 font-weight-light grey\" id=\"dialog-ldap-user-build-keys-database-progress\">\n                                    <?php echo langHdl('provide_current_psk_and_click_launch'); ?>\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"hidden\" id=\"sharekeys_reencryption_target_user\" value=\"\">\n                    </div>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-primary\" id=\"dialog-ldap-user-build-keys-database-do\"><?php echo langHdl('launch'); ?></button>\n                        <button class=\"btn btn-default float-right\" id=\"dialog-ldap-user-build-keys-database-close\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n                <!-- /.ENCRYPTION KEYS GENERATION -->\n\n                <!-- ENCRYPTION PERSONAL ITEMS GENERATION -->\n                <div class=\"card card-warning m-3 hidden\" id=\"dialog-encryption-personal-items-after-upgrade\">\n                    <div class=\"card-header\">\n                        <h3 class=\"card-title\">\n                            <i class=\"fa-solid fa-bullhorn mr-2\"></i>\n                            <?php echo langHdl('your_attention_is_required'); ?>\n                        </h3>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-12\">\n                                <div class=\"mb-2 alert alert-info\" id=\"warning-text-changing-password\">\n                                    <i class=\"icon fa-solid fa-info mr-2\"></i>\n                                    <?php echo langHdl('objects_encryption_explanation'); ?>\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><?php echo langHdl('personal_salt_key'); ?></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control\" id=\"user-current-defuse-psk\">\n                                </div>\n                                <div class=\"form-control mt-3 font-weight-light grey\" id=\"user-current-defuse-psk-progress\">\n                                    <?php echo langHdl('provide_current_psk_and_click_launch'); ?>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-primary\" id=\"button_do_personal_items_reencryption\"><?php echo langHdl('launch'); ?></button>\n                        <button class=\"btn btn-default float-right\" id=\"button_close_personal_items_reencryption\"><?php echo langHdl('close'); ?></button>\n                    </div>\n                </div>\n                <!-- /.ENCRYPTION PERSONAL ITEMS GENERATION -->\n                \n\n                <?php\n                    if ($session_initial_url !== null && empty($session_initial_url) === false) {\n                        include $session_initial_url;\n                    } elseif ($get['page'] === 'items') {\n                        // SHow page with Items\n                        if ((int) $session_user_admin !== 1) {\n                            include $SETTINGS['cpassman_dir'] . '/pages/items.php';\n                        } elseif ((int) $session_user_admin === 1) {\n                            include $SETTINGS['cpassman_dir'] . '/pages/admin.php';\n                        } else {\n                            $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n                            //not allowed page\n                            include $SETTINGS['cpassman_dir'] . '/error.php';\n                        }\n                    } elseif (in_array($get['page'], array_keys($mngPages)) === true) {\n                        // Define if user is allowed to see management pages\n                        if ($session_user_admin === 1) {\n                            include $SETTINGS['cpassman_dir'] . '/pages/' . $mngPages[$get['page']];\n                        } elseif ($session_user_manager === 1 || $session_user_human_resources === 1) {\n                            if ($get['page'] !== 'manage_main'\n                                && $get['page'] !== 'manage_settings'\n                            ) {\n                                //include $SETTINGS['cpassman_dir'] . '/pages/' . $mngPages[$_GET['page']];\n                            } else {\n                                $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n                                //not allowed page\n                                include $SETTINGS['cpassman_dir'] . '/error.php';\n                            }\n                        } else {\n                            $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n                            //not allowed page\n                            include $SETTINGS['cpassman_dir'] . '/error.php';\n                        }\n                    } elseif (empty($get['page']) === false) {\n                        include $SETTINGS['cpassman_dir'] . '/pages/' . $get['page'] . '.php';\n                    } else {\n                        $_SESSION['error']['code'] = ERR_NOT_EXIST;\n                        //page doesn't exist\n                        include $SETTINGS['cpassman_dir'].'/error.php';\n                    }\n\n    // Case where login attempts have been identified\n    if (isset($_SESSION['unsuccessfull_login_attempts']) === true\n        && $_SESSION['unsuccessfull_login_attempts_nb'] !== 0\n        && $_SESSION['unsuccessfull_login_attempts_shown'] === false\n    ) {\n        ?>\n                    <input type=\"hidden\" id=\"user-login-attempts\" value=\"1\">\n                <?php\n    } ?>\n\n            </div>\n            <!-- /.content-wrapper -->\n\n            <!-- Control Sidebar -->\n            <aside class=\"control-sidebar control-sidebar-dark\">\n                <!-- Control sidebar content goes here -->\n                <div class=\"p-3\">\n                    <h5><?php echo langHdl('last_items_title'); ?></h5>\n                    <div>\n                        <ul class=\"list-unstyled\" id=\"index-last-pwds\">\n                        </ul>\n                    </div>\n                </div>\n            </aside>\n            <!-- /.control-sidebar -->\n\n            <!-- Main Footer -->\n            <footer class=\"main-footer\">\n                <!-- To the right -->\n                <div class=\"float-right d-none d-sm-inline\">\n                    <?php echo langHdl('version_alone'); ?>&nbsp;<?php echo TP_VERSION; ?>\n                </div>\n                <!-- Default to the left -->\n                <strong>Copyright &copy; <?php echo TP_COPYRIGHT; ?> <a href=\"<?php echo TEAMPASS_URL; ?>\"><?php echo TP_TOOL_NAME; ?></a>.</strong> All rights reserved.\n            </footer>\n        </div>\n        <!-- ./wrapper -->\n\n    <?php\n        /* MAIN PAGE */\n        echo '\n<input type=\"hidden\" id=\"temps_restant\" value=\"', $_SESSION['sessionDuration'] ?? '', '\" />';\n// display an item in the context of OTV link\n} elseif (($session_validite_pw === null\n        || empty($session_validite_pw) === true\n        || empty($session_user_id) === true)\n    && empty($get['otv']) === false\n) {\n    // case where one-shot viewer\n    if (empty($superGlobal->get('code', 'GET')) === false && empty($superGlobal->get('stamp', 'GET')) === false\n    ) {\n        include './includes/core/otv.php';\n    } else {\n        $_SESSION['error']['code'] = ERR_VALID_SESSION;\n        $superGlobal->put(\n            'initial_url',\n            filter_var(\n                substr(\n                    $server['request_uri'],\n                    strpos($server['request_uri'], 'index.php?')\n                ),\n                FILTER_SANITIZE_URL\n            ),\n            'SESSION'\n        );\n        include $SETTINGS['cpassman_dir'] . '/error.php';\n    }\n} elseif ((empty($session_user_id) === false\n            && $session_user_id !== null)\n        || empty($session_user_id) === true\n        || $session_user_id === null\n    ) {\n    // case where user not logged and can't access a direct link\n    if (empty($get['page']) === false) {\n        $superGlobal->put(\n            'initialUrl',\n            filter_var(\n                substr($server['request_uri'], strpos($server['request_uri'], 'index.php?')),\n                FILTER_SANITIZE_URL\n            ),\n            'SESSION'\n        );\n        // REDIRECTION PAGE ERREUR\n        echo '\n            <script language=\"javascript\" type=\"text/javascript\">\n            <!--\n                sessionStorage.clear();\n                window.location.href = \"index.php\";\n            -->\n            </script>';\n        exit;\n    }\n    $superGlobal->put('initialUrl', '', 'SESSION');\n\n    // LOGIN form\n    include $SETTINGS['cpassman_dir'] . '/includes/core/login.php';\n}\n\n    ?>\n\n    <!-- Modal -->\n    <div class=\"modal fade\" id=\"warningModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"Caution\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h5 class=\"modal-title\" id=\"warningModalTitle\"></h5>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" id=\"warningModalCrossClose\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div class=\"modal-body\" id=\"warningModalBody\">\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"warningModalButtonClose\"></button>\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"warningModalButtonAction\"></button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n\n    <!-- REQUIRED SCRIPTS -->\n\n    <!-- Font Awesome Icons -->\n    <link href=\"plugins/fontawesome-free-6/css/fontawesome.min.css\" rel=\"stylesheet\">\n    <link href=\"plugins/fontawesome-free-6/css/solid.min.css\" rel=\"stylesheet\">\n    <link href=\"plugins/fontawesome-free-6/css/regular.min.css\" rel=\"stylesheet\">\n    <link href=\"plugins/fontawesome-free-6/css/brands.min.css\" rel=\"stylesheet\">\n    <link href=\"plugins/fontawesome-free-6/css/v5-font-face.min.css\" rel=\"stylesheet\" /> \n    <!-- jQuery -->\n    <script src=\"plugins/jquery/jquery.min.js\"></script>\n    <!-- jQuery UI -->\n    <script src=\"plugins/jqueryUI/jquery-ui.min.js\"></script>\n    <link rel=\"stylesheet\" href=\"plugins/jqueryUI/jquery-ui.min.css\">\n    <!-- Popper -->\n    <script src=\"plugins/popper/umd/popper.min.js\"></script>\n    <!-- Bootstrap -->\n    <script src=\"plugins/bootstrap/js/bootstrap.bundle.min.js\"></script>\n    <!-- AdminLTE -->\n    <script src=\"plugins/adminlte/js/adminlte.min.js\"></script>\n    <!-- Altertify -->\n    <!--<script type=\"text/javascript\" src=\"plugins/alertifyjs/alertify.min.js\"></script>-->\n    <!-- Toastr -->\n    <script type=\"text/javascript\" src=\"plugins/toastr/toastr.min.js\"></script>\n    <!-- STORE.JS -->\n    <script type=\"text/javascript\" src=\"plugins/store.js/dist/store.everything.min.js\"></script>\n    <!-- cryptojs-aesphp -->\n    <script type=\"text/javascript\" src=\"includes/libraries/Encryption/CryptoJs/crypto-js.js\"></script>\n    <script type=\"text/javascript\" src=\"includes/libraries/Encryption/CryptoJs/encryption.js\"></script>\n    <!-- pace -->\n    <script type=\"text/javascript\" data-pace-options='{ \"ajax\": true }' src=\"plugins/pace-progress/pace.min.js\"></script>\n    <!-- clipboardjs -->\n    <script type=\"text/javascript\" src=\"plugins/clipboard/clipboard.min.js\"></script>\n    <!-- select2 -->\n    <script type=\"text/javascript\" src=\"plugins/select2/js/select2.full.min.js\"></script>\n    <!-- simplePassMeter -->\n    <link rel=\"stylesheet\" href=\"plugins/simplePassMeter/simplePassMeter.css\" type=\"text/css\" />\n    <script type=\"text/javascript\" src=\"plugins/simplePassMeter/simplePassMeter.js\"></script>\n    <!-- platform -->\n    <script type=\"text/javascript\" src=\"plugins/platform/platform.js\"></script>\n    <!-- radiobuttons -->\n    <link rel=\"stylesheet\" href=\"plugins/radioforbuttons/bootstrap-buttons.min.css\" type=\"text/css\" />\n    <script type=\"text/javascript\" src=\"plugins/radioforbuttons/jquery.radiosforbuttons.min.js\"></script>\n    <!-- ICHECK -->\n    <!--<link rel=\"stylesheet\" href=\"./plugins/icheck-material/icheck-material.min.css\">-->\n    <link rel=\"stylesheet\" href=\"./plugins/icheck/skins/all.css\">\n    <script type=\"text/javascript\" src=\"./plugins/icheck/icheck.min.js\"></script>\n    <!-- bootstrap-add-clear -->\n    <script type=\"text/javascript\" src=\"plugins/bootstrap-add-clear/bootstrap-add-clear.min.js\"></script>\n    <!-- DOMPurify -->\n    <script type=\"text/javascript\" src=\"plugins/DOMPurify/purify.min.js\"></script>\n\n    <?php\n    $get = [];\n    $get['page'] = $superGlobal->get('page', 'GET') === null ? '' : $superGlobal->get('page', 'GET');\n    if ($menuAdmin === true) {\n        ?>\n        <link rel=\"stylesheet\" href=\"./plugins/toggles/css/toggles.css\" />\n        <link rel=\"stylesheet\" href=\"./plugins/toggles/css/toggles-modern.css\" />\n        <script src=\"./plugins/toggles/toggles.min.js\" type=\"text/javascript\"></script>\n        <!-- InputMask -->\n        <script src=\"./plugins/inputmask/jquery.inputmask.min.js\"></script>\n        <!-- Sortable -->\n        <!--<script src=\"./plugins/sortable/jquery.sortable.js\"></script>-->\n        <!-- PLUPLOAD -->\n        <script type=\"text/javascript\" src=\"includes/libraries/Plupload/plupload.full.min.js\"></script>\n        <!-- DataTables -->\n        <link rel=\"stylesheet\" src=\"./plugins/datatables/css/jquery.dataTables.min.css\">\n        <link rel=\"stylesheet\" src=\"./plugins/datatables/css/dataTables.bootstrap4.min.css\">\n        <script type=\"text/javascript\" src=\"./plugins/datatables/js/jquery.dataTables.min.js\"></script>\n        <script type=\"text/javascript\" src=\"./plugins/datatables/js/dataTables.bootstrap4.min.js\"></script>\n        <link rel=\"stylesheet\" src=\"./plugins/datatables/extensions/Responsive-2.2.2/css/responsive.bootstrap4.min.css\">\n        <script type=\"text/javascript\" src=\"./plugins/datatables/extensions/Responsive-2.2.2/js/dataTables.responsive.min.js\"></script>\n        <script type=\"text/javascript\" src=\"./plugins/datatables/extensions/Responsive-2.2.2/js/responsive.bootstrap4.min.js\"></script>\n        <script type=\"text/javascript\" src=\"./plugins/datatables/plugins/select.js\"></script>\n        <link rel=\"stylesheet\" src=\"./plugins/datatables/extensions/Scroller-1.5.0/css/scroller.bootstrap4.min.css\">\n        <script type=\"text/javascript\" src=\"./plugins/datatables/extensions/Scroller-1.5.0/js/dataTables.scroller.min.js\"></script>\n    <?php\n    } elseif (isset($get['page']) === true) {\n        if (in_array($get['page'], ['items', 'import']) === true) {\n            ?>\n            <link rel=\"stylesheet\" href=\"./plugins/jstree/themes/default/style.min.css\" />\n            <script src=\"./plugins/jstree/jstree.min.js\" type=\"text/javascript\"></script>\n            <!-- SUMMERNOTE -->\n            <link rel=\"stylesheet\" href=\"./plugins/summernote/summernote-bs4.css\">\n            <script src=\"./plugins/summernote/summernote-bs4.min.js\"></script>\n            <!-- date-picker -->\n            <link rel=\"stylesheet\" href=\"./plugins/bootstrap-datepicker/css/bootstrap-datepicker3.min.css\">\n            <script src=\"./plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js\"></script>\n            <!-- time-picker -->\n            <link rel=\"stylesheet\" href=\"./plugins/timepicker/bootstrap-timepicker.min.css\">\n            <script src=\"./plugins/timepicker/bootstrap-timepicker.min.js\"></script>\n            <!-- PLUPLOAD -->\n            <script type=\"text/javascript\" src=\"includes/libraries/Plupload/plupload.full.min.js\"></script>\n            <!-- VALIDATE -->\n            <script type=\"text/javascript\" src=\"plugins/jquery-validation/jquery.validate.js\"></script>\n            <!-- PWSTRENGHT -->\n            <!--<script type=\"text/javascript\" src=\"plugins/jquery.pwstrength/i18next.js\"></script>-->\n            <script type=\"text/javascript\" src=\"plugins/zxcvbn/zxcvbn.js\"></script>\n            <script type=\"text/javascript\" src=\"plugins/jquery.pwstrength/pwstrength-bootstrap.min.js\"></script>\n        <?php\n        } elseif (in_array($get['page'], ['search', 'folders', 'users', 'roles', 'utilities.deletion', 'utilities.logs', 'utilities.database', 'utilities.renewal', 'tasks']) === true) {\n            ?>\n            <!-- DataTables -->\n            <link rel=\"stylesheet\" src=\"./plugins/datatables/css/jquery.dataTables.min.css\">\n            <link rel=\"stylesheet\" src=\"./plugins/datatables/css/dataTables.bootstrap4.min.css\">\n            <script type=\"text/javascript\" src=\"./plugins/datatables/js/jquery.dataTables.min.js\"></script>\n            <script type=\"text/javascript\" src=\"./plugins/datatables/js/dataTables.bootstrap4.min.js\"></script>\n            <link rel=\"stylesheet\" src=\"./plugins/datatables/extensions/Responsive-2.2.2/css/responsive.bootstrap4.min.css\">\n            <script type=\"text/javascript\" src=\"./plugins/datatables/extensions/Responsive-2.2.2/js/dataTables.responsive.min.js\"></script>\n            <script type=\"text/javascript\" src=\"./plugins/datatables/extensions/Responsive-2.2.2/js/responsive.bootstrap4.min.js\"></script>\n            <script type=\"text/javascript\" src=\"./plugins/datatables/plugins/select.js\"></script>\n            <link rel=\"stylesheet\" src=\"./plugins/datatables/extensions/Scroller-1.5.0/css/scroller.bootstrap4.min.css\">\n            <script type=\"text/javascript\" src=\"./plugins/datatables/extensions/Scroller-1.5.0/js/dataTables.scroller.min.js\"></script>\n            <!-- dater picker -->\n            <link rel=\"stylesheet\" href=\"./plugins/bootstrap-datepicker/css/bootstrap-datepicker3.min.css\">\n            <script src=\"./plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js\"></script>\n            <!-- daterange picker -->\n            <link rel=\"stylesheet\" href=\"./plugins/daterangepicker/daterangepicker.css\">\n            <script src=\"./plugins/moment/moment.min.js\"></script>\n            <script src=\"./plugins/daterangepicker/daterangepicker.js\"></script>\n            <!-- SlimScroll -->\n            <script src=\"./plugins/slimScroll/jquery.slimscroll.min.js\"></script>\n            <!-- FastClick -->\n            <script src=\"./plugins/fastclick/fastclick.min.js\"></script>\n        <?php\n        } elseif ($get['page'] === 'profile') {\n            ?>\n            <!-- PLUPLOAD -->\n            <script type=\"text/javascript\" src=\"includes/libraries/Plupload/plupload.full.min.js\"></script>\n        <?php\n        } elseif ($get['page'] === 'export') {\n            ?>\n            <!-- FILESAVER -->\n            <script type=\"text/javascript\" src=\"plugins/downloadjs/download.js\"></script>\n        <?php\n        }\n    }\n    ?>\n    <!-- functions -->\n    <script type=\"text/javascript\" src=\"includes/js/functions.js\"></script>\n    <script type=\"text/javascript\" src=\"includes/js/CreateRandomString.js\"></script>\n\n    </body>\n\n</html>\n\n<script type=\"text/javascript\">\n    //override defaults\n    /*alertify.defaults.transition = \"slide\";\n    alertify.defaults.theme.ok = \"btn btn-primary\";\n    alertify.defaults.theme.cancel = \"btn btn-danger\";\n    alertify.defaults.theme.input = \"form-control\";*/\n\n    toastr.options = {\n        \"closeButton\": false,\n        \"debug\": false,\n        \"newestOnTop\": false,\n        \"progressBar\": false,\n        \"positionClass\": \"toast-bottom-right\",\n        \"preventDuplicates\": true,\n        \"onClick\": \"close\",\n        \"showDuration\": \"300\",\n        \"hideDuration\": \"1000\",\n        \"timeOut\": \"0\",\n        \"extendedTimeOut\": \"0\",\n        \"showEasing\": \"swing\",\n        \"hideEasing\": \"linear\",\n        \"showMethod\": \"fadeIn\",\n        \"hideMethod\": \"fadeOut\"\n    }\n</script>\n\n\n<?php\n$get = [];\n$get['page'] = $superGlobal->get('page', 'GET') === null ? '' : $superGlobal->get('page', 'GET');\n\n// Load links, css and javascripts\nif (\n    isset($_SESSION['CPM']) === true\n    && isset($SETTINGS['cpassman_dir']) === true\n) {\n    include_once $SETTINGS['cpassman_dir'] . '/includes/core/load.js.php';\n    if ($menuAdmin === true) {\n        include_once $SETTINGS['cpassman_dir'] . '/pages/admin.js.php';\n        if ($get['page'] === '2fa') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/2fa.js.php';\n        } elseif ($get['page'] === 'api') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/api.js.php';\n        } elseif ($get['page'] === 'backups') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/backups.js.php';\n        } elseif ($get['page'] === 'emails') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/emails.js.php';\n        } elseif ($get['page'] === 'ldap') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/ldap.js.php';\n        } elseif ($get['page'] === 'uploads') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/uploads.js.php';\n        } elseif ($get['page'] === 'fields') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/fields.js.php';\n        } elseif ($get['page'] === 'options') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/options.js.php';\n        } elseif ($get['page'] === 'statistics') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/statistics.js.php';\n        } elseif ($get['page'] === 'tasks') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/tasks.js.php';\n        }\n    } elseif (isset($get['page']) === true && $get['page'] !== '') {\n        if ($get['page'] === 'items') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/items.js.php';\n        } elseif ($get['page'] === 'import') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/import.js.php';\n        } elseif ($get['page'] === 'export') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/export.js.php';\n        } elseif ($get['page'] === 'offline') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/offline.js.php';\n        } elseif ($get['page'] === 'search') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/search.js.php';\n        } elseif ($get['page'] === 'profile') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/profile.js.php';\n        } elseif ($get['page'] === 'favourites') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/favorites.js.php';\n        } elseif ($get['page'] === 'folders') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/folders.js.php';\n        } elseif ($get['page'] === 'users') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/users.js.php';\n        } elseif ($get['page'] === 'roles') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/roles.js.php';\n        } elseif ($get['page'] === 'utilities.deletion') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/utilities.deletion.js.php';\n        } elseif ($get['page'] === 'utilities.logs') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/utilities.logs.js.php';\n        } elseif ($get['page'] === 'utilities.database') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/utilities.database.js.php';\n        } elseif ($get['page'] === 'utilities.renewal') {\n            include_once $SETTINGS['cpassman_dir'] . '/pages/utilities.renewal.js.php';\n        }\n    } else {\n        include_once $SETTINGS['cpassman_dir'] . '/includes/core/login.js.php';\n    }\n}\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      users.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'folders', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n    // Initialization\n    var userDidAChange = false,\n        userTemporaryCode = '',\n        constVisibleOTP = false,\n        userClipboard,\n        ProcessInProgress = false,\n        debugJavascript = false;\n\n    browserSession(\n        'init',\n        'teampassApplication', {\n            foldersSelect: '',\n            complexityOptions: '',\n        }\n    );\n\n    // Prepare tooltips\n    $('.infotip').tooltip();\n\n    // Prepare Select2\n    $('.select2').select2({\n        language: '<?php echo $_SESSION['user_language_code']; ?>'\n    });\n\n    // Prepare iCheck format for checkboxes\n    $('input[type=\"checkbox\"].flat-blue, input[type=\"radio\"].flat-blue').iCheck({\n        radioClass: 'iradio_flat-blue',\n        checkboxClass: 'icheckbox_flat-blue',\n    });\n    $('#form-create-special-folder').iCheck('disable');\n\n    // Prevent submit on button\n    $('.btn-no-click')\n        .click(function(e) {\n            e.preventDefault();\n        });\n\n\n    //Launch the datatables pluggin\n    var oTable = $('#table-users').DataTable({\n        'paging': true,\n        'searching': true,\n        'order': [\n            [1, 'asc']\n        ],\n        'info': true,\n        'processing': false,\n        'serverSide': true,\n        'responsive': false,\n        'select': false,\n        'stateSave': true,\n        'autoWidth': true,\n        'ajax': {\n            url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/users.datatable.php',\n        },\n        'language': {\n            'url': '<?php echo $SETTINGS['cpassman_url']; ?>/includes/language/datatables.<?php echo $_SESSION['user']['user_language']; ?>.txt'\n        },\n        'columns': [{\n                'width': '80px',\n                className: 'details-control',\n                'render': function(data, type, row, meta) {\n                    return '<div class=\"group-btn btn-user-action\">' +\n                        '' +\n                        '<button type=\"button\" class=\"btn btn-info dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fas fa-cog\"></i>&nbsp;' +\n                        '</button>' +\n                        '<ul class=\"dropdown-menu\" role=\"menu\">' +\n                        ($(data).data('auth-type') === 'local' ?\n                            '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"new-password\"><i class=\"fas fa-lock mr-2\"></i><?php echo langHdl('change_login_password'); ?></li>' :\n                            ''\n                        ) +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"edit\"><i class=\"fas fa-pen mr-2\"></i><?php echo langHdl('edit'); ?></li>' +\n                        ($(data).data('otp-provided') !== \"\"?\n                            '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"new-otp\"><i class=\"fas fa-mask mr-2\"></i><?php echo langHdl('generate_new_otp'); ?></li>' :\n                            ''\n                        ) +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\" data-action=\"logs\"><i class=\"fas fa-newspaper mr-2\"></i><?php echo langHdl('see_logs'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"qrcode\"><i class=\"fas fa-qrcode mr-2\"></i><?php echo langHdl('user_ga_code'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"access-rights\"><i class=\"fas fa-sitemap mr-2\"></i><?php echo langHdl('user_folders_rights'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"disable-user\"><i class=\"fas fa-user-slash text-warning mr-2\" disabled></i><?php echo langHdl('disable_enable'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"delete-user\"><i class=\"fas fa-user-minus text-danger mr-2\" disabled></i><?php echo langHdl('delete'); ?></li>' +\n                        '</ul>' +\n                        '</div>';\n                }\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            }\n        ],\n        'preDrawCallback': function() {\n            toastr.info(\n                '<?php echo langHdl('loading'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>',\n                ''\n            );\n        },\n        'drawCallback': function() {\n            // Tooltips\n            $('.infotip').tooltip();\n\n            // Remove progress toast\n            $('.toast').remove();\n        },\n        /*'createdRow': function( row, data, dataIndex ) {\n            var newClasses = $(data[6]).filter('#row-class-' + dataIndex).val();\n            $(row).addClass(newClasses);\n        }*/\n    });\n\n\n\n    $('#form-email').change(function() {\n        //extract domain from email\n        var domain = $(this).val().split('@')[1];\n        if (domain === undefined) {\n            return false;\n        }\n        domain = domain.toLowerCase()\n\n        //check if domain exists\n        $.post(\"sources/users.queries.php\", {\n                type: \"check_domain\",\n                domain: domain\n            },\n            function(data) {\n                data = $.parseJSON(data);\n                if (debugJavascript === true) console.log(data);\n\n                $(\"#new_folder_role_domain\").attr(\"disabled\", \"disabled\");\n                if (data.folder === 'not_exists' && data.role === 'not_exists' && domain !== '') {\n                    $('#form-create-special-folder').iCheck('enable');\n                    $('#form-special-folder').val(domain);\n                } else {\n                    $('#form-create-special-folder').iCheck('disable');\n                    $('#form-special-folder').val('');\n                }\n            }\n        );\n    });\n\n\n\n    /**\n     * \n     */\n    // Fires when user click on button SEND\n    $(document).on('click', '#warningModalButtonClose', function() {\n        // check if uform is the one expected\n        if ($('#warningModal-button-user-pwd').length === 0) {\n            return false;\n        } \n        if (debugJavascript === true) console.log('Closing warning dialog')\n        toastr.remove();\n        $('#warningModal').modal('hide');\n\n        // Fianlize UI\n        // clear form fields\n        $(\".clear-me\").val('');\n        $('.select2').val('').change();\n        //$('#privilege-user').iCheck('check');\n        $('.form-check-input')\n            .iCheck('disable')\n            .iCheck('uncheck');\n\n        // refresh table content\n        oTable.ajax.reload();\n\n        // Show list of users\n        $('#row-form').addClass('hidden');\n        $('#row-list').removeClass('hidden');\n    });\n\n\n    /**\n     * \n     */\n    // Fires when user click on button SEND\n    $(document).on('click', '#warningModalButtonAction', function() {\n        // check if uform is the one expected\n        if ($('#warningModal-button-user-pwd').length === 0) {\n            return false;\n        } \n        //console.log('send email for '+store.get('teampassUser').admin_new_user_temporary_encryption_code)\n        //console.log(store.get('teampassUser'))\n        //console.log(store.get('teampassApplication'))\n\n        showModalDialogBox(\n            '#warningModal',\n            '<i class=\"fas fa-user-shield fa-lg warning mr-2\"></i><?php echo langHdl('caution'); ?>',\n            '<?php echo langHdl('sending_email_message'); ?>',\n            '',\n            '',\n            true,\n            false,\n            false\n        );\n\n        // Prepare data\n        if (store.get('teampassApplication').formUserAction === \"add_new_user\") {\n            var data = {\n                'receipt': $('#form-email').val(),\n                'subject': 'TEAMPASS - <?php echo langHdl('temporary_encryption_code');?>',\n                'body': '<?php echo langHdl('email_body_new_user');?>',\n                'pre_replace' : {\n                    '#code#' : store.get('teampassUser').admin_new_user_temporary_encryption_code,\n                    '#login#' : store.get('teampassUser').admin_new_user_login,\n                    '#password#' : store.get('teampassUser').admin_new_user_password,\n                }\n            }\n        } else {\n            var data = {\n                'receipt': $('#form-email').val(),\n                'subject': 'TEAMPASS - <?php echo langHdl('temporary_encryption_code');?>',\n                'body': '<?php echo langHdl('email_body_temporary_encryption_code');?>',\n                'pre_replace' : {\n                    '#enc_code#' : store.get('teampassUser').admin_new_user_temporary_encryption_code,\n                }\n            }\n        }\n\n        // Launch action\n        $.post(\n            'sources/main.queries.php', {\n                type: 'mail_me',\n                type_category: 'action_mail',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                //console.log(data);\n\n                if (data.error !== false) {\n                    $('#warningModal').modal('hide');\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Fianlize UI\n                    // clear form fields\n                    $(\".clear-me\").val('');\n                    $('.select2').val('').change();\n                    //$('#privilege-user').iCheck('check');\n                    $('.form-check-input')\n                        .iCheck('disable')\n                        .iCheck('uncheck');\n\n                    // Show list of users\n                    $('#row-form').addClass('hidden');\n                    $('#row-list').removeClass('hidden');\n\n                    // Hide dialogbox\n                    $('#warningModal').modal('hide');\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n                    // change the user status to ready to use\n                    data = {\n                        'user_id': store.get('teampassUser').admin_new_user_id,\n                    }\n\n                    $.post(\n                        'sources/main.queries.php', {\n                            type: 'user_is_ready',\n                            type_category: 'action_user',\n                            data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                            key: '<?php echo $_SESSION['key']; ?>'\n                        },\n                        function(data) {\n                            if (debugJavascript === true) console.log('User has been created');\n\n                            // refresh table content\n                            oTable.ajax.reload();\n\n                            // Remove action from store\n                            if (debugJavascript === true) console.log('Clear Store variables')\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                                }\n                            );\n                            store.update(\n                                'teampassUser',\n                                function(teampassUser) {\n                                    teampassUser.admin_new_user_password = '',\n                                    teampassUser.admin_new_user_temporary_encryption_code = '',\n                                    teampassUser.admin_new_user_login = '';\n                                }\n                            );\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * BUILD AND CHECK THE USER LOGIN\n     */\n    $('.build-login').change(function() {\n        // Build login only if it is empty\n        if ($(\"#form-login\").val() === '') {\n            //return false;\n        }\n        // Build login\n        if ($(this).attr('id') !== 'form-login') {\n            $(\"#form-login\").val(\n                $(\"#form-name\")\n                .val()\n                .toLowerCase()\n                .replace(/ /g, \"\") + \".\" + $(\"#form-lastname\").val().toLowerCase().replace(/ /g, \"\")\n            );\n        }\n\n        // Check if login exists\n        $.post(\n            'sources/users.queries.php', {\n                type: 'is_login_available',\n                login: $('#form-login').val(),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Show result\n                    if (data.login_exists === 0) {\n                        $('#form-login')\n                            .removeClass('is-invalid')\n                            .addClass('is-valid');\n                        $('#form-login-conform').val(true);\n                    } else {\n                        $('#form-login')\n                            .removeClass('is-valid')\n                            .addClass('is-invalid');\n                        $('#form-login-conform').val(false);\n                    }\n                }\n            }\n        );\n    });\n\n\n    function userTasksCreation(userId, userPassword, userTemporaryCode)\n    {\n        var data = {\n            user_id: userId,\n            user_pwd: userPassword,\n            user_code: userTemporaryCode,\n        }\n\n        // Do query\n        $.post(\n            \"sources/users.queries.php\", {\n                type: \"create_new_user_tasks\",\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                if (debugJavascript === true)  {\n                    console.info(\"R\u00e9ception des donn\u00e9es :\")\n                    console.log(data);\n                }\n                \n                if (data.error === true) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    dfd.reject();\n                } else {\n                    // show message to user\n                    $('#warningModal').modal('hide');\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 2000\n                        }\n                    );\n\n                    // Reload list of users\n                    oTable.ajax.reload();\n\n                    // Prepare UI\n                    $('#row-list, #group-create-special-folder, #group-delete-user').removeClass('hidden');\n                    $('#row-form').addClass('hidden');\n                }\n            }\n        );\n    }\n\n    /**\n     * \n     */\n    // Launch recursive action to encrypt the keys\n    function callRecursiveUserDataEncryption(\n        userId,\n        step,\n        start\n    ) {\n        var dfd = $.Deferred();\n        ProcessInProgress = true;\n        \n        var stepText = '';\n        if (debugJavascript === true) console.log('Performing '+step)\n\n        // Prepare progress string\n        if (step === 'step0') {\n            stepText = '<?php echo langHdl('inititialization'); ?>';\n        } else if (step === 'step1') {\n            stepText = '<?php echo langHdl('items'); ?>';\n        } else if (step === 'step2') {\n            stepText = '<?php echo langHdl('logs'); ?>';\n        } else if (step === 'step3') {\n            stepText = '<?php echo langHdl('suggestions'); ?>';\n        } else if (step === 'step4') {\n            stepText = '<?php echo langHdl('fields'); ?>';\n        } else if (step === 'step5') {\n            stepText = '<?php echo langHdl('files'); ?>';\n        } else if (step === 'step6') {\n            stepText = '<?php echo langHdl('personal_items'); ?>';\n        }\n\n        if (step !== 'finished') {\n            if (store.get('teampassUser').related_items_number !== null) {\n                $nbItemsToConvert = \" / \" + store.get('teampassUser').related_items_number;\n            } else {\n                $nbItemsToConvert = '';\n            }\n            // Inform user\n            $(\"#warningModalBody\").html('<b><?php echo langHdl('encryption_keys'); ?> - ' +\n                stepText + '</b> [' + start + ' - ' + (parseInt(start) + <?php echo NUMBER_ITEMS_IN_BATCH;?>) + ']<span id=\"warningModalBody_extra\">' + $nbItemsToConvert + '</span> ' +\n                '... <?php echo langHdl('please_wait'); ?><i class=\"fas fa-spinner fa-pulse ml-3 text-primary\"></i>');\n\n            // If expected, show the OPT to the admin\n            if (constVisibleOTP === true) {\n                toastr.info(\n                    '<?php echo langHdl('show_encryption_code_to_admin');?> <div><input class=\"form-control form-item-control flex-nowrap\" value=\"' + userTemporaryCode + '\" readonly></div>'\n                    + '<br /><button type=\"button\" class=\"btn clear\"><?php echo langHdl('close');?></button>',\n                    '<?php echo langHdl('information'); ?>',\n                    {\n                        extendedTimeOut: 0,\n                        timeOut: 0,\n                        tapToDismiss: false,\n                        newestOnTop: true,\n                        preventDuplicates: true,\n                        onHidden: (toast) => {\n                            // prevent against multiple occurances (#3305)\n                            constVisibleOTP = false;\n                        },\n                    }\n                );\n            }\n\n            var data = {\n                action: step,\n                start: start,\n                length: <?php echo NUMBER_ITEMS_IN_BATCH;?>,\n                user_id: userId,\n            }\n            if (debugJavascript === true) {\n                console.info(\"Envoi des donn\u00e9es :\")\n                console.log(data);\n            }\n\n            // Do query\n            $.post(\n                \"sources/main.queries.php\", {\n                    type: \"user_sharekeys_reencryption_next\",\n                    type_category: 'action_key',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                    if (debugJavascript === true) {\n                        console.info(\"R\u00e9ception des donn\u00e9es :\")\n                        console.log(data);\n                    }\n                    \n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n\n                        dfd.reject();\n                    } else {\n                        // Prepare variables\n                        userId = data.userId;\n                        step = data.step;\n                        start = data.start;\n\n                        // Do recursive call until step = finished\n                        callRecursiveUserDataEncryption(\n                            userId,\n                            step,\n                            start\n                        ).done(function(response) {\n                            dfd.resolve(response);\n                        });\n                    }\n                }\n            );\n        } else {\n            // Ask user\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-envelope-open-text fa-lg warning mr-2\"></i><?php echo langHdl('information'); ?>',\n                '<i class=\"fas fa-info-circle mr-2\"></i><?php echo langHdl('send_user_password_by_email'); ?>'+\n                '<div class=\"row\">'+\n                    (store.get('teampassApplication').formUserAction === \"add_new_user\" ?\n                    '<div class=\"col-lg-2\"><button type=\"button\" class=\"btn btn-block btn-secondary mr-2\"  id=\"warningModal-button-user-pwd\"><?php echo langHdl('show_user_password'); ?></button></div>'+\n                    '<div class=\"col-lg-4 hidden\" id=\"warningModal-user-pwd\"><div><?php echo langHdl('user_password'); ?><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_password+'\"></div>'+\n                    '<div><?php echo langHdl('user_temporary_encryption_code'); ?><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_temporary_encryption_code+'\"></div></div>'\n                    :\n                    '<div class=\"col-lg-2\"><button type=\"button\" class=\"btn btn-block btn-secondary mr-2\"  id=\"warningModal-button-user-pwd\"><?php echo langHdl('show_user_temporary_encryption_code'); ?></button></div>'+\n                    '<div class=\"col-lg-4 hidden\" id=\"warningModal-user-pwd\"><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_temporary_encryption_code+'\"></div></div>'\n                    )+\n                '</div>',\n                '<?php echo langHdl('send_by_email'); ?>',\n                '<?php echo langHdl('close'); ?>',\n                true,\n                false,\n                false\n            );\n            $('#warningModal').modal('show');\n\n            $(document).on('click', '#warningModal-button-user-pwd', function() {\n                $('#warningModal-user-pwd').removeClass('hidden');\n                $('#warningModal-button-user-pwd').prop( \"disabled\", true );\n                setTimeout(\n                    () => {\n                        $('#warningModal-user-pwd').addClass('hidden');\n                        $('#warningModal-button-user-pwd').prop( \"disabled\", false );\n                    },\n                    5000\n                );\n            });\n\n            ProcessInProgress = false;\n        }\n        return dfd.promise();\n    }\n\n\n\n    /**\n     * TOP MENU BUTTONS ACTIONS\n     */\n    $(document).on('click', '.tp-action', function() {\n        // Ensure that password strength indicator is reseted\n        //$('#form-password').focus();\n\n        // Hide if user is not admin\n        if (parseInt(store.get('teampassUser').user_admin) === 1 || parseInt(store.get('teampassUser').user_can_manage_all_users) === 1) {\n            $('.only-admin').removeClass('hidden');\n        } else {\n            $('.only-admin').addClass('hidden');\n        }\n\n        if ($(this).data('action') === 'new') {\n            // ADD NEW USER\n            $('#row-list').addClass('hidden');\n            $('#row-form, #group-create-special-folder, .not-for-admin').removeClass('hidden');\n\n            // HIDE FROM FORM ELEMENTS ONLY FOR ADMIN\n            if (parseInt(store.get('teampassUser').user_admin) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n            } else if (parseInt(store.get('teampassUser').user_can_manage_all_users) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n                $('#privilege-admin').iCheck('disable');\n                $('#privilege-hr').iCheck('disable');\n            } else {\n                $('#privilege-admin').iCheck('disable');\n                $('#privilege-hr').iCheck('disable');\n                $('#privilege-manager').iCheck('disable');\n            }\n\n            // Prepare checks\n            $('#privilege-user').iCheck('check');\n            $('#form-create-special-folder').iCheck('disable');\n\n            // Personal folder\n            if (store.get('teampassSettings').enable_pf_feature === '1') {\n                $('#form-create-personal-folder')\n                    .iCheck('enable')\n                    .iCheck('check');\n            } else {\n                $('#form-create-personal-folder').iCheck('disable');\n            }\n            \n            // MFA enabled\n            if (store.get('teampassSettings').duo === '1' || store.get('teampassSettings').google_authentication === '1') {\n                $('#form-create-mfa-enabled')\n                    .iCheck('enable')\n                    .iCheck('check');\n                $('#form-create-mfa-enabled-div').removeClass('hidden');\n            } else {\n                $('#form-create-mfa-enabled').iCheck('disable');\n                $('#form-create-mfa-enabled-div').addClass('hidden');\n            }\n\n            // What type of form? Edit or new user\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = 'add_new_user';\n                }\n            );\n\n        } else if ($(this).data('action') === 'edit') {\n            // SHow user\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // EDIT EXISTING USER\n            $('#row-list, #group-create-special-folder, #group-delete-user').addClass('hidden');\n            $('#row-form').removeClass('hidden');\n            $('.form-check-input').iCheck('enable');\n\n            // Personal folder\n            if (parseInt(store.get('teampassSettings').enable_pf_feature) === 0) {\n                $('#form-create-personal-folder').iCheck('disable');\n            }\n\n            // HIDE FROM FORM ELEMENTS ONLY FOR ADMIN\n            if (parseInt(store.get('teampassUser').user_admin) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n            } else {\n                $('input[type=radio].only-admin').iCheck('disable');\n            }\n\n            // What type of form? Edit or new user\n            var userID = $(this).data('id');\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = 'store_user_changes',\n                        teampassApplication.formUserId = userID; // Store user ID   \n                }\n            );\n\n            var data = {\n                'user_id': userID,\n            };\n\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get_user_info\",\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error === false) {\n                        // Prefil with user data\n                        $('#form-login').val(data.login);\n                        $('#form-email').val(data.email);\n                        $('#form-name').val(data.name);\n                        $('#form-lastname').val(data.lastname);\n                        $('#form-create-root-folder').iCheck(data.can_create_root_folder === 1 ? 'check' : 'uncheck');\n                        $('#form-create-personal-folder').iCheck(data.personal_folder === 1 ? 'check' : 'uncheck');\n                        $('#form-create-mfa-enabled').iCheck(data.mfa_enabled === 1 ? 'check' : 'uncheck');\n\n                        // Case of user locked\n                        if (data.disabled === 1) {\n                            $('#group-delete-user').removeClass('hidden');\n                            $('#form-delete-user-confirm').iCheck('uncheck');\n                        }\n\n                        // Clear selects\n                        $('#form-roles, #form-managedby, #form-auth, #form-forbid')\n                            .find('option')\n                            .remove();\n\n                        var tmp = '';\n                        $(data.foldersAllow).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-auth').append(tmp);\n\n                        tmp = '';\n                        $(data.foldersForbid).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-forbid').append(tmp);\n\n                        tmp = '';\n                        $(data.managedby).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-managedby').append(tmp);\n\n                        tmp = '';\n                        $(data.function).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-roles').append(tmp);\n\n                        // Generate select2\n                        $('#form-roles, #form-managedby, #form-auth, #form-forbid').select2();\n\n                        // User's current privilege\n                        if (data.admin === 1) {\n                            $('#privilege-admin').iCheck('check');\n                            $('.not-for-admin').addClass('hidden');\n                        } else if (data.can_manage_all_users === 1) {\n                            $('#privilege-hr').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else if (data.gestionnaire === 1) {\n                            $('#privilege-manager').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else if (data.read_only === 1) {\n                            $('#privilege-ro').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else {\n                            $('#privilege-user').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        }\n\n                        $('input:radio[name=privilege]').on('ifChanged', function() {\n                            userDidAChange = true;\n                            $(this).data('change-ongoing', true);\n                        });\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    } else {\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                        return false;\n                    }\n                }\n            );\n        } else if ($(this).data('action') === 'submit') {\n            // Loop on all changed fields\n            var arrayQuery = [];\n            $('.form-control').each(function(i, obj) {\n                if ($(this).data('change-ongoing') === true\n                    //|| $('#form-password').val() !== 'do_not_change'\n                ) {\n                    arrayQuery.push({\n                        'field': $(this).prop('id'),\n                        'value': $(this).val(),\n                    });\n                }\n            });\n\n            // Sanitize text fields\n            let formLogin = fieldSanitizeStep1('#form-login', false, false, false),\n                formName = fieldSanitizeStep1('#form-name', false, false, false),\n                formLastname = fieldSanitizeStep1('#form-lastname', false, false, false),\n                formEmail = fieldSanitizeStep1('#form-email', false, false, false),\n            if (formLogin === false || formName === false || formLastname === false || formEmail === false) {\n                // Label is empty\n                toastr.remove();\n                toastr.warning(\n                    'XSS attempt detected. Field has been emptied.',\n                    'Error', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            if (arrayQuery.length > 0) {\n                // Now save\n                // get lists\n                var forbidFld = [],\n                    authFld = [],\n                    groups = [];\n                $(\"#form-roles option:selected\").each(function() {\n                    groups.push($(this).val())\n                });\n                $(\"#form-auth option:selected\").each(function() {\n                    authFld.push($(this).val())\n                });\n                $(\"#form-forbid option:selected\").each(function() {\n                    forbidFld.push($(this).val())\n                });\n\n                // Mandatory?\n                var validated = true,\n                    validEmailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n                $('.required').each(function(i, obj) {\n                    if ($(this).val() === '' && $(this).hasClass('select2') === false) {\n                        $(this).addClass('is-invalid');\n                        validated = false;\n                    } else if ($('#' + $(this).attr('id') + ' :selected').length === 0 && $(this).hasClass('select2') === true) {\n                        $('#' + $(this).attr('id') + ' + span').addClass('is-invalid');\n                        validated = false;\n                    } else if ($(this).hasClass('validate-email') === true) {\n                        if ($(this).val().match(validEmailRegex)) {\n                            $(this).removeClass('is-invalid');\n                        } else {\n                            $(this).addClass('is-invalid');\n                            validated = false;\n                        }\n                    } else {\n                        $(this).removeClass('is-invalid');\n                        $('#' + $(this).attr('id') + ' + span').removeClass('is-invalid');\n                    }\n                });\n                if (validated === false) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('fields_with_mandatory_information_are_missing'); ?>',\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n\n                // SHow user\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n                // Get number of items to treat\n                data_tmp = {\n                    'user_id': <?php echo $_SESSION['user_id']; ?>,\n                }\n                $.post(\n                    'sources/main.queries.php', {\n                        type: 'get_number_of_items_to_treat',\n                        type_category: 'action_system',\n                        data: prepareExchangedData(JSON.stringify(data_tmp), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data_tmp) {\n                        data_tmp = prepareExchangedData(data_tmp, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                        store.update(\n                            'teampassUser',\n                            function(teampassUser) {\n                                teampassUser.related_items_number = data_tmp.nbItems;\n                            }\n                        );\n                    }\n                );\n\n                //prepare data\n                var data = {\n                    'user_id': store.get('teampassApplication').formUserId,\n                    'login': formLogin,\n                    'name': formName,\n                    'lastname': formLastname,\n                    'email': formEmail,\n                    'admin': $('#privilege-admin').prop('checked'),\n                    'manager': $('#privilege-manager').prop('checked'),\n                    'hr': $('#privilege-hr').prop('checked'),\n                    'read_only': $('#privilege-ro').prop('checked'),\n                    'personal_folder': $('#form-create-personal-folder').prop('checked'),\n                    'new_folder_role_domain': $('#form-create-special-folder').prop('checked'),\n                    'domain': $('#form-special-folder').val(),\n                    'isAdministratedByRole': $('#form-managedby').val(),\n                    'groups': groups,\n                    'allowed_flds': authFld,\n                    'forbidden_flds': forbidFld,\n                    'action_on_user': 'update',\n                    'form-create-root-folder': $('#form-create-root-folder').prop('checked'),\n                    'form-user-disabled': $('#form-user-disabled').prop('checked'),\n                    'mfa_enabled': $('#form-create-mfa-enabled').prop('checked'),\n                };\n                if (debugJavascript === true) {\n                    console.log(data);\n                    console.log(store.get('teampassApplication').formUserAction);\n                }                \n                var formUserId = store.get('teampassApplication').formUserId;\n                \n                $.post(\n                    'sources/users.queries.php', {\n                        type: store.get('teampassApplication').formUserAction,\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else if (store.get('teampassApplication').formUserAction === 'add_new_user') {\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('new_user_info_by_mail'); ?>',\n                                '', {\n                                    timeOut: 4000\n                                }\n                            );\n                            // ---\n                        } else {\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 2000\n                                }\n                            );\n                        }\n\n                        // Reload list of users\n                        oTable.ajax.reload();\n\n                        // Prepare UI\n                        $('#row-list, #group-create-special-folder, #group-delete-user').removeClass('hidden');\n                        $('#row-form').addClass('hidden');\n\n                        // Clean form\n                        $('.clear-me').val('');\n                        $('.select2').val('').change();\n                        $('.extra-form, #row-folders').addClass('hidden');\n                        $('#row-list').removeClass('hidden');\n\n                        // Prepare checks\n                        $('.form-check-input').iCheck('uncheck');\n\n                        // Remove action from store\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                            }\n                        );\n                    }\n                )\n            } else {\n                // No change performed on form\n                toastr.remove();\n                toastr.success(\n                    '<?php echo langHdl('no_change_performed'); ?>',\n                    '', {\n                        timeOut: 1000\n                    }\n                );\n            }\n        } else if ($(this).data('action') === 'cancel') {\n            $('.clear-me').val('');\n            $('.select2').val('').change();\n            $('.extra-form, #row-folders').addClass('hidden');\n            $('#row-list').removeClass('hidden');\n\n            // Prepare checks\n            $('.form-check-input').iCheck('uncheck');\n\n            // Remove action from store\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = '',\n                        teampassApplication.formUserId = '';\n                }\n            );\n        } else if ($(this).data('action') === 'qrcode') {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // This sends a GA Code by email to user\n            data = {\n                'user_id': $(this).data('id'),\n                'demand_origin': 'users_management_list',\n                'send_email': 1\n            }\n\n            $.post(\n                'sources/main.queries.php', {\n                    type: 'ga_generate_qr',\n                    type_category: 'action_user',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('share_sent_ok'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            // ---\n        } else if ($(this).data('action') === 'new-password') {\n            var userId = $(this).data('id');\n            // Check if no tasks on-going for this user\n            data_to_send = {\n                'user_id': userId,\n            }\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get-user-infos\",\n                    data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    \n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Continue   \n                        if (data.user_infos.ongoing_process_id !== null) {  \n                            toastr.remove();\n                            toastr.warning(\n                                data.message,\n                                '<?php echo langHdl('user_encryption_ongoing'); ?>', {\n                                    timeOut: 10000,\n                                    progressBar: true\n                                }\n                            ); \n                        } else {                 \n                            // HIde\n                            $('.content-header, .content').addClass('hidden');\n\n                            // PRepare info\n                            $('#dialog-admin-change-user-password-info')\n                                .html('<i class=\"icon fas fa-info mr-2\"></i><?php echo langHdl('admin_change_user_password_info'); ?>');\n                            $(\"#dialog-admin-change-user-password-progress\").html('<?php echo langHdl('provide_current_psk_and_click_launch'); ?>');\n\n                            // SHow form\n                            $('#dialog-admin-change-user-password').removeClass('hidden');\n\n                            $('#admin_change_user_password_target_user').val(userId);\n                        }\n                    }\n                }\n            );\n\n            // ---\n        } else if ($(this).data('action') === 'new-enc-code') {\n            // HIde\n            $('.content-header, .content').addClass('hidden');\n\n            // PRepare info\n            $('#dialog-admin-change-user-password-info')\n                .html('<i class=\"icon fas fa-info mr-2\"></i><?php echo langHdl('admin_change_user_encryption_code_info'); ?>');\n            $(\"#dialog-admin-change-user-password-progress\").html('<?php echo langHdl('provide_current_psk_and_click_launch'); ?>');\n\n            // SHow form\n            $('#dialog-admin-change-user-password').removeClass('hidden');\n\n            $('#admin_change_user_encryption_code_target_user').val($(this).data('id'));\n            // ---\n        } else if ($(this).data('action') === 'logs') {\n            $('#row-list, #row-folders').addClass('hidden');\n            $('#row-logs').removeClass('hidden');\n            $('#row-logs-title').text(\n                $(this).data('fullname')\n            )\n            var userID = $(this).data('id');\n\n            //Launch the datatables pluggin\n            var oTableLogs = $('#table-logs').DataTable({\n                'destroy': true,\n                'paging': true,\n                'searching': true,\n                'order': [\n                    [1, 'asc']\n                ],\n                'info': true,\n                'processing': false,\n                'serverSide': true,\n                'responsive': true,\n                'select': true,\n                'stateSave': false,\n                'retrieve': false,\n                'autoWidth': true,\n                'ajax': {\n                    url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/user.logs.datatables.php',\n                    data: function(d) {\n                        d.userId = userID;\n                    }\n                },\n                'language': {\n                    'url': '<?php echo $SETTINGS['cpassman_url']; ?>/includes/language/datatables.<?php echo $_SESSION['user']['user_language']; ?>.txt'\n                },\n                'columns': [{\n                        className: 'dt-body-left'\n                    },\n                    {\n                        className: 'dt-body-left'\n                    },\n                    {\n                        className: 'dt-body-left'\n                    }\n                ],\n                'preDrawCallback': function() {\n                    toastr.remove();\n                    toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                },\n                'drawCallback': function() {\n                    // Tooltips\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                },\n            });\n\n\n        } else if ($(this).data('action') === 'access-rights') {\n            $('#row-list, #row-logs').addClass('hidden');\n            $('#row-folders').removeClass('hidden');\n            $('#row-folders-title').text(\n                $(this).data('fullname')\n            )\n            var userID = $(this).data('id');\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            $('#row-folders-results').html('');\n\n            // Send query\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'user_folders_rights',\n                    user_id: userID,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Show table\n                        $('#row-folders-results').html(data.html);\n\n                        // Prepare tooltips\n                        $('.infotip').tooltip();\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'disable-user') {\n            var userID = $(this).data('id');\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                '<div class=\"form-group\">'+\n                    '<span class=\"mr-3\"><?php echo langHdl('user_disable_status'); ?></span>'+\n                    '<input type=\"checkbox\" class=\"form-check-input form-control flat-blue\" id=\"user-disabled\">' +\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $('input[type=\"checkbox\"].flat-blue').iCheck({\n                checkboxClass: 'icheckbox_flat-blue',\n            });\n            $(document).on('click', '#warningModalButtonAction', function() {                \n\n                // Show spinner\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                $('#warningModal').modal('hide');\n\n                var data = {\n                    'user_id': userID,\n                    'disabled_status': $('#user-disabled').prop('checked') === true ? 1 : 0,\n                };\n\n                // Send query\n                $.post(\n                    'sources/users.queries.php', {\n                        type: 'manage_user_disable_status',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            // Show icon or not\n                            if ($('#user-disabled').prop('checked') === true) {\n                                $('#user-login-'+userID).before('<i class=\"fas fa-user-slash infotip text-danger mr-2\" title=\"<?php echo langHdl('account_is_locked');?>\" id=\"user-disable-'+userID+'\"></i>');\n                            } else {\n                                $('#user-disable-'+userID).remove();\n                            }\n                            \n\n                            // Prepare tooltips\n                            $('.infotip').tooltip();\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n                        }\n                    }\n                );\n            });\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'delete-user') {\n            var userID = $(this).data('id');\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                '<div class=\"form-group\">'+\n                    '<span class=\"mr-3\"><?php echo langHdl('by_clicking_this_checkbox_confirm_user_deletion'); ?></span>'+\n                    '<input type=\"checkbox\" class=\"form-check-input form-control flat-blue\" id=\"user-to-delete\">' +\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $('input[type=\"checkbox\"].flat-blue').iCheck({\n                checkboxClass: 'icheckbox_flat-blue',\n            });\n            $(document).on('click', '#warningModalButtonAction', function() {\n                if ($('#user-to-delete').prop('checked') === false) {\n                    $('#warningModal').modal('hide');\n                    return false;\n                }             \n\n                // Show spinner\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                $('#warningModal').modal('hide');\n\n                var data = {\n                    'user_id': userID,\n                };\n\n                // Send query\n                $.post(\n                    'sources/users.queries.php', {\n                        type: 'delete_user',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            // refresh table content\n                            oTable.ajax.reload();\n\n                            // Prepare tooltips\n                            $('.infotip').tooltip();\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n                        }\n                    }\n                );\n            });\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'refresh') {\n            $('.form').addClass('hidden');\n            $('#users-list').removeClass('hidden');\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n            oTable.ajax.reload();\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'propagate') {\n            $('#row-list, #row-folders').addClass('hidden');\n            $('#row-propagate').removeClass('hidden');\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Load list of users\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'get_list_of_users_for_sharing',\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Build select\n                        var html = '';\n                        $.each(data.values, function(i, value) {\n                            html += '<option value=\"' + value.id + '\" data-groups=\"' + value.groups + '\" data-managed-by=\"' + value.managedBy + '\" data-folders-allowed=\"' + value.foldersAllowed + '\" data-folders-forbidden=\"' + value.foldersForbidden + '\" data-groups-id=\"' + value.groupIds + '\" data-managed-by-id=\"' + value.managedById + '\" data-folders-allowed-id=\"' + value.foldersAllowedIds + '\" data-folders-forbidden-id=\"' + value.foldersForbiddenIds + '\" data-admin=\"' + value.admin + '\" data-manager=\"' + value.manager + '\" data-hr=\"' + value.hr + '\" data-read-only=\"' + value.readOnly + '\" data-personal-folder=\"' + value.personalFolder + '\" data-root-folder=\"' + value.rootFolder + '\">' + value.name + ' ' + value.lastname + ' [' + value.login + ']</option>';\n                        });\n\n                        $('#propagate-from, #propagate-to')\n                            .find('option')\n                            .remove()\n                            .end()\n                            .append(html)\n                            .change();\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'do-propagate') {\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n\n            // destination users\n            var userIds = $('#propagate-to').val();\n\n            if (userIds.length === 0) return false;\n\n            // Prepare data\n            var data = {\n                source_id: $(\"#propagate-from option:selected\").val(),\n                destination_ids: userIds,\n                user_functions: $(\"#propagate-from option:selected\").data('groups-id'),\n                user_managedby: $(\"#propagate-from option:selected\").data('managed-by-id'),\n                user_fldallowed: $(\"#propagate-from option:selected\").data('folders-allowed-id'),\n                user_fldforbid: $(\"#propagate-from option:selected\").data('folders-forbidden-id'),\n                user_admin: $(\"#propagate-from option:selected\").data('admin'),\n                user_manager: $(\"#propagate-from option:selected\").data('manager'),\n                user_hr: $(\"#propagate-from option:selected\").data('hr'),\n                user_readonly: $(\"#propagate-from option:selected\").data('read-only'),\n                user_personalfolder: $(\"#propagate-from option:selected\").data('personal-folder'),\n                user_rootfolder: $(\"#propagate-from option:selected\").data('root-folder'),\n            };\n            if (debugJavascript === true) console.log(data);\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"update_users_rights_sharing\",\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        $('.clear-me').val('');\n                        $('.select2').val('').change();\n                        $('.extra-form, #row-folders').addClass('hidden');\n                        $('#row-list').removeClass('hidden');\n\n                        // Prepare checks\n                        $('.form-check-input')\n                            .iCheck('disable')\n                            .iCheck('uncheck');\n\n                        // Remove action from store\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                            }\n                        );\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-sync') {\n            $('.form').addClass('hidden');\n            $('#row-ldap').removeClass('hidden');\n\n            refreshListUsersLDAP();\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'close') {\n            $('.extra-form').addClass('hidden');\n            $('#users-list').removeClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-existing-users') {\n            refreshListUsersLDAP();\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-add-role') {\n            $('#ldap-users-table').addClass('hidden');\n            $('#ldap-new-role').removeClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'close-new-role') {\n            $('#ldap-users-table').removeClass('hidden');\n            $('#ldap-new-role').addClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'add-new-role') {\n            if ($('#ldap-new-role-selection').val() === '') {\n                // ERROR\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                    '<?php echo langHdl('caution'); ?>', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n            } else {\n                // Add new role to Teampass\n\n                // Prepare data\n                var data = {\n                    'label': DOMPurify.sanitize($('#ldap-new-role-selection').val()),\n                    'complexity': $('#ldap-new-role-complexity').val(),\n                    'allowEdit': 0,\n                    'action': 'add_role',\n                    'folderId' : -1,\n                }\n\n                if (debugJavascript === true) console.log(data);\n                \n                $.post(\n                    'sources/roles.queries.php', {\n                        type: 'change_role_definition',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error === true) {\n                            // ERROR\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            $('#ldap-new-role-selection').val('');\n                            $('#ldap-users-table').removeClass('hidden');\n                            $('#row-ldap-body').html('');\n                            $('#ldap-new-role').addClass('hidden');\n\n                            refreshListUsersLDAP();\n                        }\n                    }\n                );\n\n            }\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'new-otp') {// Check if no tasks on-going for this user\n            data_to_send = {\n                'user_id': $(this).data('id'),\n            }\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get-user-infos\",\n                    data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Continue   \n                        if (data.user_infos.ongoing_process_id !== null) {  \n                            toastr.remove();\n                            toastr.warning(\n                                data.message,\n                                '<?php echo langHdl('user_encryption_ongoing'); ?>', {\n                                    timeOut: 10000,\n                                    progressBar: true\n                                }\n                            ); \n                        } else {  \n                            var userID = data.user_infos.id;\n                            showModalDialogBox(\n                                '#warningModal',\n                                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                                '<div class=\"form-group\">'+\n                                    '<span class=\"mr-3\"><?php echo langHdl('generate_new_otp_informations'); ?></span>'+\n                                '</div>',\n                                '<?php echo langHdl('perform'); ?>',\n                                '<?php echo langHdl('cancel'); ?>'\n                            );\n                            \n                            $(document).on('click', '#warningModalButtonAction', function() {                \n                                // prepare user\n\n                                // Show spinner\n                                toastr.remove();\n                                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n                                // generate keys\n                                generateUserKeys(\n                                    {\n                                        'user_id': userID,\n                                    },\n                                    ''\n                                );\n                            });\n                        }\n                    }\n                }\n            );\n\n            /**/\n            //\n            // --- END\n            //\n        }\n    });\n\n\n    /**\n     * Permit to show some info while selecting a  User\n     */\n    $(document).on('change', '#propagate-from', function() {\n        var selectedOption = $(this).find('option:selected');\n        $('#propagate-user-roles').html($(selectedOption).data('groups'));\n        $('#propagate-user-managedby').html($(selectedOption).data('managed-by'));\n        $('#propagate-user-allowed').html($(selectedOption).data('folders-allowed'));\n        $('#propagate-user-fordidden').html($(selectedOption).data('folders-forbidden'));\n    });\n\n\n    /**\n     * TRACK CHANGES IN FORM\n     */\n    $('#form-user .track-change')\n        .on('change', function() {\n            if ($(this).val() !== null && $(this).val().length > 0) {\n                userDidAChange = true;\n                $(this).data('change-ongoing', true);\n            } else {\n                $(this).data('change-ongoing', false);\n            }\n        })\n        .on('ifChecked', function() {\n            userDidAChange = true;\n            $(this).data('change-ongoing', true);\n        });\n\n    //************************************************************* */\n\n\n\n    /**\n     * EDIT EACH ROW\n     */\n    var currentText = '',\n        item = '',\n        initialColumnWidth = '',\n        actionOnGoing = false,\n        field = '',\n        columnId = '',\n        tableDef = {\n            'login': {\n                'column': 2\n            },\n            'name': {\n                'column': 3\n            },\n            'lastname': {\n                'column': 4\n            },\n            'isAdministratedByRole': {\n                'column': 5\n            },\n            'fonction_id': {\n                'column': 6\n            }\n        };\n\n    /**\n     * EDIT TEXT INPUT\n     */\n    $(document).on('click', '.edit-text', function() {\n        currentText = $(this).text();\n        item = $(this);\n        field = $(this).data('field');\n        columnId = tableDef[field].column;\n\n        $(this)\n            .addClass('hidden')\n            .after('<input type=\"text\" class=\"form-control form-item-control remove-me save-me\" value=\"' + currentText + '\">');\n\n        // Store current width and change it\n        initialColumnWidth = $('#table-users thead th:eq(' + (columnId - 1) + ')').width();\n        $('#table-users thead th:eq(' + (columnId - 1) + ')').width('300');\n        if (debugJavascript === true) console.log('Width ' + initialColumnWidth)\n\n        // Launch save on focus lost\n        $('.save-me')\n            .focus()\n            .focusout(function() {\n                if (actionOnGoing === false) {\n                    actionOnGoing = true;\n                    saveChange(item, currentText, $(this), field);\n                }\n            });\n    });\n\n    /**\n     * EDIT SELECT LIST\n     */\n    $(document).on('click', '.edit-select', function() {\n        currentText = $(this).text();\n        item = $(this);\n        field = $(this).data('field');\n        columnId = tableDef[field].column;\n        if (debugJavascript === true) console.log(columnId)\n\n        $(this).addClass('hidden');\n\n        // Show select\n        $(\"#select-managedBy\")\n            .insertAfter('#' + $(this).attr('id'))\n            .after('<i class=\"fa fa-close text-danger pointer temp-button mr-3\" id=\"select-managedBy-close\"></i>');\n        $('#select-managedBy option[value=\"' + $(this).data('value') + '\"]').prop('selected', true);\n\n        // Store current width and change it\n        initialColumnWidth = $('#table-users thead th:eq(' + (columnId - 1) + ')').width();\n        $('#table-users thead th:eq(' + (columnId - 1) + ')').width('300');\n\n        // Launch save on focus lost\n        $('.save-me')\n            .focus()\n            .focusout(function() {\n                if (actionOnGoing === false) {\n                    actionOnGoing = true;\n                    saveChange(item, currentText, $(this), field);\n                }\n            });\n\n        $('#select-managedBy-close').click(function() {\n            $(\"#select-managedBy\").detach().appendTo('#hidden-managedBy');\n            $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth);\n            $('.edit-select').removeClass('hidden');\n            $('.tmp-loader, .temp-button').remove();\n        });\n    });\n\n\n    /**\n     * MANAGE USER KEYS PRESSED\n     */\n    $(document).keyup(function(e) {\n        if (e.keyCode === 27) {\n            // Escape Key\n            $('.remove-me, .tmp-loader').remove();\n            $('.edit-text').removeClass('hidden');\n        }\n        if (e.keyCode === 13 && actionOnGoing === false) {\n            // Enter key\n            actionOnGoing = true;\n            saveChange(item, currentText, $(':focus'), field);\n        }\n    });\n\n\n    function saveChange(item, currentText, change, field) {\n        if (change.val() !== currentText) {\n            change\n                .after('<i class=\"fa fa-refresh fa-spin fa-fw tmp-loader\"></i>');\n\n            // prepare data\n            var data = {\n                'user_id': item.data('id'),\n                'field': field,\n                'value': change.val()\n            };\n            \n            // Save\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'save_user_change',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    if (change.is('input') === true) {\n                        change.remove();\n                        $('.tmp-loader').remove();\n                        item\n                            .text(change.val())\n                            .removeClass('hidden');\n                        $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n                    } else if (change.is('select') === true) {\n                        $(\"#select-managedBy\").detach().appendTo('#hidden-managedBy');\n                        $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n                        $('.tmp-loader, .temp-button').remove();\n\n                        // Show change\n                        if (debugJavascript === true) console.log(change)\n                        item\n                            .html(change.text())\n                            .attr('data-value', change.val())\n                            .removeClass('hidden');\n                    }\n                    actionOnGoing = false;\n                },\n                'json'\n            );\n        } else {\n            change.remove();\n            $('.tmp-loader').remove();\n            item\n                .text(change.val())\n                .removeClass('hidden');\n            $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n        }\n    }\n\n    /**\n     * Refreshing list of users from LDAP\n     *\n     * @return void\n     */\n    function refreshListUsersLDAP() {\n        // FIND ALL USERS IN LDAP\n        //toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n        $('#row-ldap-body')\n            .addClass('overlay')\n            .html('');\n\n        $.post(\n            \"sources/users.queries.php\", {\n                type: \"get_list_of_users_in_ldap\",\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data)\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // loop on users list\n                    var html = '',\n                        groupsNumber = 0,\n                        userLogin,\n                        group;\n                    var entry;\n                    $.each(data.entries, function(i, entry) {\n                        userLogin = entry[store.get('teampassSettings').ldap_user_attribute] !== undefined ? entry[store.get('teampassSettings').ldap_user_attribute][0] : '';\n                        // CHeck if not empty\n                        if (userLogin !== '') {\n                            html += '<tr>' +\n                                '<td>' + userLogin +\n                                '</td>' +\n                                '<td>' +\n                                '<i class=\"fas fa-info-circle ml-3 infotip text-info pointer text-center\" data-toggle=\"tooltip\" data-html=\"true\" title=\"' +\n                                '<p class=\\'text-left\\'><i class=\\'fas fa-user mr-1\\'></i>' +\n                                (entry.displayname !== undefined ? '' + entry.displayname[0] + '' : '') + '</p>' +\n                                '<p class=\\'text-left\\'><i class=\\'fas fa-envelope mr-1\\'></i>' + (entry.mail !== undefined ? '' + entry.mail[0] + '' : '') + '</p>' +\n                                '\"></i>' +\n                                '</td><td>' +\n                                (entry.userInTeampass === 0 ? '' :\n                                '<i class=\"fas ' + (entry.userAuthType !== undefined && entry.userAuthType === 'ldap' ? 'fa-toggle-on text-info ' : 'fa-toggle-off ') + 'mr-1 text-center pointer action-change-ldap-synchronization\" data-user-id=\"' + entry.userInTeampass + '\" data-user-auth-type=\"' + entry.userAuthType + '\"></i>') +\n                                '</td><td>';\n                            groupsNumber = 0;\n                            $.each(entry.memberof, function(j, group) {\n                                var regex = String(group).replace('CN=', 'cn').match(/(cn=)(.*?),/g);\n                                if (regex !== null) {\n                                    group = regex[0].replace('cn=', '').replace(',', '');\n                                    // Check if this user has this group in Teampass\n                                    if (entry.teampass !== undefined && entry.ldap_groups.filter(p => p.title === group).length > 0) {\n                                        html += group + '<i class=\"far fa-check-circle text-success ml-2 infotip\" title=\"<?php echo langHdl('user_has_this_role_in_teampass'); ?>\"></i><br>';\n                                    } else {\n                                        // Check if this group exists in Teampass and propose to add it\n                                        tmp = data.teampass_groups.filter(p => p.title === group);\n                                        if (tmp.length > 0 && entry.userInTeampass === 0) {\n                                            html += group + '<i class=\"fas fa-user-graduate text-primary ml-2 pointer infotip action-add-role-to-user\" title=\"<?php echo langHdl('add_user_to_role'); ?>\" data-user-id=\"' + entry.userInTeampass + '\" data-role-id=\"' + tmp[0].id + '\"></i><br>';\n                                        } else {\n                                            html += group + '<br>';\n                                        }\n                                    }\n                                    groupsNumber++;\n                                }\n                            });\n                            html += '</td><td>';\n                            // Action icons\n                            html += (entry.userInTeampass === 0 ? '<i class=\"fas fa-user-plus text-warning ml-2 infotip pointer add-user-icon\" title=\"<?php echo langHdl('add_user_in_teampass'); ?>\" data-user-login=\"' + userLogin + '\" data-user-email=\"' + (entry.mail !== undefined ? entry.mail[0] : '') + '\" data-user-name=\"' + (entry.givenname !== undefined ? entry.givenname[0] : '') + '\" data-user-lastname=\"' + (entry.sn !== undefined ? entry.sn[0] : '') + '\"></i>' : '');\n\n                            // Only of not admin\n                            /*if (userLogin !== 'admin') {\n                                html += (entry.teampass.auth === 'ldap' ? '<i class=\"fas fa-link text-success ml-2 infotip pointer auth-local\" title=\"<?php echo langHdl('ldap_user_password_is_used_for_authentication'); ?>\" data-user-id=\"' + entry.teampass.id + '\"></i>' : '<i class=\"fas fa-unlink text-orange ml-2 infotip pointer auth-ldap\" title=\"<?php echo langHdl('local_user_password_is_used_for_authentication'); ?>\" data-user-id=\"' + entry.teampass.id + '\"></i>');\n                            }*/\n\n                            html += '</td></tr>';\n                        }\n                    });\n\n                    $('#row-ldap-body').html(html);\n\n                    $('#row-ldap-body').removeClass('overlay');\n\n                    $('.infotip').tooltip('update');\n\n                    // Build list box of new roles that could be created\n                    $('#ldap-new-role-selection')\n                        .empty()\n                        .append('<option value=\"\">--- <?php echo langHdl('select'); ?> ---</option>');\n                    $.each(data.ldap_groups, function(i, group) {\n                        tmp = data.teampass_groups.filter(p => p.title === group);\n                        if (tmp.length === 0) {\n                            $('#ldap-new-role-selection').append(\n                                '<option value=\"' + group + '\">' + group + '</option>'\n                            );\n                        }\n                    });\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    $('.close-toastr-progress').closest('.toast').remove();\n                }\n            }\n        );\n    }\n\n    /**\n     * Permits to add a role to a Teampass user\n     *\n     * @return void\n     */\n    function addRoleToUser() {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'user_id': $('.selected-role').data('user-id'),\n            'field': 'fonction_id',\n            'value': $('.selected-role').data('role-id'),\n            'context': 'add_one_role_to_user'\n        };\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'save_user_change',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // CHange icon\n                    $('.selected-role')\n                        .removeClass('fas fa-user-graduate text-primary pointer action-add-role-to-user')\n                        .addClass('far fa-check-circle text-success')\n                        .prop('title', '<?php echo langHdl('user_has_this_role_in_teampass'); ?>');\n\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n                $('.selected-role').removeClass('selected-role');\n            }\n        );\n    }\n\n    $(document).on('click', '.action-add-role-to-user', function() {\n        $(this).addClass('selected-role');\n\n        toastr.warning(\n            '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"addRoleToUser()\"><?php echo langHdl('please_confirm'); ?></button>',\n            '<?php echo langHdl('info'); ?>', {\n                positionClass: 'toast-top-center',\n                closeButton: true\n            }\n        );\n    });\n\n    // Enable/disable ldap sync on user\n    $(document).on('click', '.action-change-ldap-synchronization', function() {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'user_id': $(this).data('user-id'),\n            'field': 'auth_type',\n            'value': $(this).hasClass('fa-toggle-off') === true ? 'ldap' : 'local',\n            'context': ''\n        },\n        selectedIcon = $(this);\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'save_user_change',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // CHange icon format\n                    if (selectedIcon.hasClass('fa-toggle-off') === true) {\n                        selectedIcon\n                            .removeClass('fa-toggle-off')\n                            .addClass('fa-toggle-on text-info')\n                            .prop('data-user-auth-type', 'ldap');\n                    } else {\n                        selectedIcon\n                            .removeClass('fa-toggle-on text-info')\n                            .addClass('fa-toggle-off')\n                            .prop('data-user-auth-type', 'local');\n                    }\n\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * Permits to add an AD user in Teampass\n     *\n     * @return void\n     */\n    function addUserInTeampass() {\n        $('#warningModal').modal('hide');\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n        // what roles\n        var roles = [];\n        $(\"#ldap-user-roles option:selected\").each(function() {\n            roles.push($(this).val())\n        });\n\n        // prepare data\n        var data = {\n            'login': DOMPurify.sanitize($('.selected-user').data('user-login')),\n            'name': DOMPurify.sanitize($('.selected-user').data('user-name') === '' ? $('#ldap-user-name').val() : $('.selected-user').data('user-name')),\n            'lastname': DOMPurify.sanitize($('.selected-user').data('user-lastname')),\n            'email': DOMPurify.sanitize($('.selected-user').data('user-email')),\n            'roles' : roles,\n        };\n        if (debugJavascript === true) console.log(data)\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'add_user_from_ldap',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n                userTemporaryCode = data.user_code;\n                constVisibleOTP = data.visible_otp;\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {                    \n                    generateUserKeys(data, userTemporaryCode);\n                }\n            }\n        );\n    }\n\n\n    function generateUserKeys(data, userTemporaryCode)\n    {\n        // manage keys encryption for new user\n        // Case where we need to encrypt new keys for the user\n        // Process is: \n        // 2/ clear all keys for this user\n        // 3/ generate keys for this user with encryption key\n\n        \n        // If expected to create new encryption key\n        var parameters = {\n            'user_id': data.user_id,\n        };\n\n        if (debugJavascript === true) {\n            console.log(parameters);\n            console.info('Prepare TASK for new user encryption keys')\n        }\n        $.post(\n            'sources/main.queries.php', {\n                type: 'generate_temporary_encryption_key',\n                type_category: 'action_key',\n                data: prepareExchangedData(JSON.stringify(parameters), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data_otc) {\n                data_otc = prepareExchangedData(data_otc, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                if (data_otc.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data_otc.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // If expected, show the OPT to the admin\n                    if (data_otc.visible_otp === true) {\n                        showModalDialogBox(\n                            '#warningModal',\n                            '<i class=\"fa-solid fa-user-secret mr-2\"></i><<?php echo langHdl('your_attention_is_required'); ?>',\n                            '<?php echo langHdl('show_encryption_code_to_admin'); ?>' +\n                            '<div><input class=\"form-control form-item-control flex-nowrap ml-2\" value=\"' + data_otc.code + '\" readonly></div>',\n                            '',\n                            '<?php echo langHdl('close'); ?>'\n                        );\n                    }\n\n                    // update the process\n                    // add all tasks\n                    var data_to_send = {\n                        user_id: data.user_id,\n                        user_code: data_otc.code,\n                    }\n\n                    //console.log(data_to_send);\n                    //return false;\n\n                    // Do query\n                    $.post(\n                        \"sources/users.queries.php\", {\n                            type: \"create_new_user_tasks\",\n                            data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                            key: '<?php echo $_SESSION['key']; ?>'\n                        },\n                        function(data_tasks) {\n                            data_tasks = prepareExchangedData(data_tasks, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                            \n                            if (data_tasks.error === true) {\n                                // error\n                                toastr.remove();\n                                toastr.error(\n                                    data_tasks.message,\n                                    '<?php echo langHdl('caution'); ?>', {\n                                        timeOut: 5000,\n                                        progressBar: true\n                                    }\n                                );\n                            } else {\n                                // show message to user\n                                // Finalizing\n                                //$('#warningModal').modal('hide');\n\n                                // Now close in progress toast\n                                $('.close-toastr-progress').closest('.toast').remove();\n                                \n                                // refresh the list of users in LDAP not added in Teampass\n                                refreshListUsersLDAP();    \n\n                                // Rrefresh list of users in Teampass\n                                oTable.ajax.reload();\n\n                                toastr.success(\n                                    '<?php echo langHdl('done'); ?>',\n                                    '', {\n                                        timeOut: 1000\n                                    }\n                                );\n                            }\n                        }\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Permits to change the auth type of the user\n     *\n     * @return void\n     */\n    function changeUserAuthType(auth) {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'id': $('.selected-user').data('user-id'),\n            'auth_type': auth\n        };\n        if (debugJavascript === true) console.log(data)\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'change_user_auth_type',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    refreshListUsersLDAP();\n                }\n            }\n        );\n    }\n\n    $(document)\n        .on('click', '.add-user-icon', function() {\n            var thisElement = $(this);\n            $(thisElement).addClass('selected-user');\n\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-user-plus fa-lg warning mr-2\"></i><?php echo langHdl('new_ldap_user_info'); ?> <b>'+$(this)[0].dataset.userLogin+'</b>',\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('name'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-name\" value=\"'+ $(this).attr('data-user-name')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('lastname'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-lastname\" value=\"'+ $(this).attr('data-user-lastname')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('email'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-email\" value=\"'+ $(this).attr('data-user-email')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-roles\"><?php echo langHdl('roles'); ?></label>'+\n                    '<select id=\"ldap-user-roles\" class=\"form-control form-item-control select2 required\" style=\"width:100%;\" multiple=\"multiple\">'+\n                    '<?php echo $optionsRoles; ?></select>'+\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $(document).on('click', '#warningModalButtonAction', function() {\n                if ($('#ldap-user-name').val() !== \"\" && $('#ldap-user-roles :selected').length > 0) {\n                    addUserInTeampass();\n                    $(thisElement).removeClass('selected-user');\n                }\n            });\n            $(document).on('click', '#warningModalButtonClose', function() {\n                $(thisElement).removeClass('selected-user');\n            });\n        })\n        .on('click', '.auth-ldap', function() {\n            $(this).addClass('selected-user');\n\n            toastr.warning(\n                '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"changeUserAuthType(\\'ldap\\')\"><?php echo langHdl('please_confirm'); ?></button>',\n                '<?php echo langHdl('change_authentification_type_to_ldap'); ?>', {\n                    positionClass: 'toast-top-center',\n                    closeButton: true\n                }\n            );\n        })\n        .on('click', '.auth-local', function() {\n            $(this).addClass('selected-user');\n\n            toastr.warning(\n                '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"changeUserAuthType(\\'local\\')\"><?php echo langHdl('please_confirm'); ?></button>',\n                '<?php echo langHdl('change_authentification_type_to_local'); ?>', {\n                    positionClass: 'toast-top-center',\n                    closeButton: true\n                }\n            );\n        });\n\n\n\n    //]]>\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n * @project   Teampass\n * @file      main.queries.php\n * ---\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n * @copyright 2009-2023 Teampass.net\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n * @see       https://www.teampass.net\n */\n\nset_time_limit(600);\n\nif (isset($_SESSION) === false) {\n    include_once 'SecureHandler.php';\n    session_name('teampass_session');\n    session_start();\n    $_SESSION['CPM'] = 1;\n}\n\nif (isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1) {\n    $_SESSION['error']['code'] = '1004';\n    include __DIR__.'/../error.php';\n    exit();\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php')) {\n    include '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php')) {\n    include './includes/config/tp.config.php';\n} else {\n    throw new Exception(\"Error file '/includes/config/tp.config.php' not exists\", 1);\n}\n\n// Define Timezone\ndate_default_timezone_set(isset($SETTINGS['timezone']) === true ? $SETTINGS['timezone'] : 'UTC');\n\n// DO CHECKS\nrequire_once $SETTINGS['cpassman_dir'] . '/includes/config/include.php';\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\n$post_type = filter_input(INPUT_POST, 'type', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\nif (\n    isset($post_type) === true\n    && ($post_type === 'ga_generate_qr'\n        //|| $post_type === 'recovery_send_pw_by_email'\n        //|| $post_type === 'recovery_generate_new_password'\n        || $post_type === 'get_teampass_settings')\n) {\n    // continue\n    mainQuery($SETTINGS);\n} elseif (\n    isset($_SESSION['user_id']) === true\n    && checkUser($_SESSION['user_id'], $_SESSION['key'], 'home', $SETTINGS) === false\n) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED; //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit();\n} elseif ((isset($_SESSION['user_id']) === true\n        && isset($_SESSION['key'])) === true\n    || (isset($post_type) === true\n        //&& $post_type === 'change_user_language'\n        && null !== filter_input(INPUT_POST, 'data', FILTER_SANITIZE_FULL_SPECIAL_CHARS, FILTER_FLAG_NO_ENCODE_QUOTES))\n) {\n    // continue\n    mainQuery($SETTINGS);\n} else {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED; //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit();\n}\n\n/**\n * Undocumented function.\n */\nfunction mainQuery(array $SETTINGS)\n{\n    header('Content-type: text/html; charset=utf-8');\n    header('Cache-Control: no-cache');\n    error_reporting(E_ERROR);\n\n\n    // Includes\n    include_once $SETTINGS['cpassman_dir'] . '/includes/language/' . $_SESSION['user']['user_language'] . '.php';\n    include_once $SETTINGS['cpassman_dir'] . '/includes/config/settings.php';\n    include_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n    include_once $SETTINGS['cpassman_dir'] . '/sources/SplClassLoader.php';\n\n    // Connect to mysql server\n    include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Database/Meekrodb/db.class.php';\n\n    DB::$host = DB_HOST;\n    DB::$user = DB_USER;\n    DB::$password = defined('DB_PASSWD_CLEAR') === false ? defuseReturnDecrypted(DB_PASSWD, $SETTINGS) : DB_PASSWD_CLEAR;\n    DB::$dbName = DB_NAME;\n    DB::$port = DB_PORT;\n    DB::$encoding = DB_ENCODING;\n    DB::$ssl = DB_SSL;\n    DB::$connect_options = DB_CONNECT_OPTIONS;\n\n    // User's language loading\n    include_once $SETTINGS['cpassman_dir'] . '/includes/language/' . $_SESSION['user']['user_language'] . '.php';\n\n    // Prepare post variables\n    $post_key = filter_input(INPUT_POST, 'key', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n    $post_type = filter_input(INPUT_POST, 'type', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n    $post_type_category = filter_input(INPUT_POST, 'type_category', FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n    $post_data = filter_input(INPUT_POST, 'data', FILTER_SANITIZE_FULL_SPECIAL_CHARS, FILTER_FLAG_NO_ENCODE_QUOTES);\n\n    // Check KEY\n    if (isValueSetNullEmpty($post_key) === true) {\n        echo prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('key_is_not_correct'),\n            ),\n            'encode'\n        );\n        return false;\n    }\n    \n    // decrypt and retreive data in JSON format\n    $dataReceived = empty($post_data) === false ? prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        $post_data,\n        'decode'\n    ) : '';\n\n    switch ($post_type_category) {\n        case 'action_password':\n            echo passwordHandler($post_type, $dataReceived, $SETTINGS);\n            break;\n\n        case 'action_user':\n            echo userHandler($post_type, $dataReceived, $SETTINGS);\n            break;\n\n        case 'action_mail':\n            echo mailHandler($post_type, $dataReceived, $SETTINGS);\n            break;\n\n        case 'action_key':\n            echo keyHandler($post_type, $dataReceived, $SETTINGS);\n            break;\n\n        case 'action_system':\n            echo systemHandler($post_type, $dataReceived, $SETTINGS);\n            break;\n    }\n    \n    // Manage type of action asked\n    //switch ($post_type) {\n        /*\n         * TODO Check if suggestions are existing\n         */\n        /*\n        case 'is_existings_suggestions':\n            if ($_SESSION['user_manager'] === '1' || $_SESSION['is_admin'] === '1') {\n                $count = 0;\n                DB::query('SELECT * FROM ' . prefixTable('items_change'));\n                $count += DB::count();\n                DB::query('SELECT * FROM ' . prefixTable('suggestion'));\n                $count += DB::count();\n\n                echo '[ { \"error\" : \"\" , \"count\" : \"' . $count . '\" , \"show_sug_in_menu\" : \"0\"} ]';\n                break;\n            }\n            \n            if (isset($_SESSION['nb_item_change_proposals']) && $_SESSION['nb_item_change_proposals'] > 0) {\n                echo '[ { \"error\" : \"\" , \"count\" : \"' . $_SESSION['nb_item_change_proposals'] . '\" , \"show_sug_in_menu\" : \"1\"} ]';\n                break;\n            }\n            \n            echo '[ { \"error\" : \"\" , \"count\" : \"\" , \"show_sug_in_menu\" : \"0\"} ]';\n\n            break;\n        */\n    //}\n}\n\n/**\n * Handler for all password tasks\n *\n * @param string $post_type\n * @param array|null|string $dataReceived\n * @param array $SETTINGS\n * @return string\n */\nfunction passwordHandler(string $post_type, /*php8 array|null|string*/ $dataReceived, array $SETTINGS): string\n{\n    switch ($post_type) {\n        case 'change_pw'://action_password\n            return changePassword(\n                (string) filter_var($dataReceived['new_pw'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                isset($dataReceived['current_pw']) === true ? (string) filter_var($dataReceived['current_pw'], FILTER_SANITIZE_FULL_SPECIAL_CHARS) : '',\n                (int) filter_var($dataReceived['complexity'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['change_request'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                $SETTINGS\n            );\n\n        /*\n        * Change user's authenticataion password\n        */\n        case 'change_user_auth_password'://action_password\n            return changeUserAuthenticationPassword(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['old_password'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (string) filter_var($dataReceived['new_password'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * User's authenticataion password in LDAP has changed\n        */\n        case 'change_user_ldap_auth_password'://action_password\n            return /** @scrutinizer ignore-call */ changeUserLDAPAuthenticationPassword(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                filter_var($dataReceived['previous_password'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                filter_var($dataReceived['current_password'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * test_current_user_password_is_correct\n        */\n        case 'test_current_user_password_is_correct'://action_password\n            return isUserPasswordCorrect(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['password'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * User's password has to be initialized\n        */\n        case 'initialize_user_password'://action_password\n            return initializeUserPassword(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['special'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (string) filter_var($dataReceived['password'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (bool) filter_var($dataReceived['self_change'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * Default case\n        */\n        default :\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                ),\n                'encode'\n            );\n    }\n}\n\n/**\n * Handler for all user tasks\n *\n * @param string $post_type\n * @param array|null|string $dataReceived\n * @param array $SETTINGS\n * @return string\n */\nfunction userHandler(string $post_type, /*php8 array|null|string*/ $dataReceived, array $SETTINGS): string\n{\n    switch ($post_type) {\n        /*\n        * Get info \n        */\n        case 'get_user_info'://action_user\n            return getUserInfo(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['fields'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * Increase the session time of User\n        */\n        case 'increase_session_time'://action_user\n            return increaseSessionDuration(\n                (int) filter_input(INPUT_POST, 'duration', FILTER_SANITIZE_NUMBER_INT)\n            );\n\n        /*\n        * Generate a password generic\n        */\n        case 'generate_password'://action_user\n            return generateGenericPassword(\n                (int) filter_input(INPUT_POST, 'size', FILTER_SANITIZE_NUMBER_INT),\n                (bool) filter_input(INPUT_POST, 'secure_pwd', FILTER_VALIDATE_BOOLEAN),\n                (bool) filter_input(INPUT_POST, 'lowercase', FILTER_VALIDATE_BOOLEAN),\n                (bool) filter_input(INPUT_POST, 'capitalize', FILTER_VALIDATE_BOOLEAN),\n                (bool) filter_input(INPUT_POST, 'numerals', FILTER_VALIDATE_BOOLEAN),\n                (bool) filter_input(INPUT_POST, 'symbols', FILTER_VALIDATE_BOOLEAN),\n                $SETTINGS\n            );\n\n        /*\n        * Refresh list of last items seen\n        */\n        case 'refresh_list_items_seen'://action_user\n            if (isset($_SESSION['user_id']) === false || (int) $_SESSION['user_id'] > 0) {\n                return refreshUserItemsSeenList(\n                    $SETTINGS\n                );\n\n            } else {\n                return json_encode(\n                    array(\n                        'error' => '',\n                        'existing_suggestions' => 0,\n                        'html_json' => '',\n                    ),\n                    JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP\n                );\n            }\n\n        /*\n        * This will generate the QR Google Authenticator\n        */\n        case 'ga_generate_qr'://action_user\n            return generateQRCode(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['demand_origin'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (string) filter_var($dataReceived['send_email'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (string) filter_var($dataReceived['login'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (string) filter_var($dataReceived['pwd'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * This will set the user ready\n        */\n        case 'user_is_ready'://action_user\n            return userIsReady(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (string) $SETTINGS['cpassman_dir']\n            );\n\n        /*\n        * Default case\n        */\n        default :\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                ),\n                'encode'\n            );\n    }\n}\n\n/**\n * Handler for all mail tasks\n *\n * @param string $post_type\n * @param array|null|string $dataReceived\n * @param array $SETTINGS\n * @return string\n */\nfunction mailHandler(string $post_type, /*php8 array|null|string */$dataReceived, array $SETTINGS): string\n{\n    switch ($post_type) {\n        /*\n        * CASE\n        * Send email\n        */\n        case 'mail_me'://action_mail\n            return sendMailToUser(\n                filter_var($dataReceived['receipt'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $dataReceived['body'],\n                (string) filter_var($dataReceived['subject'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (array) filter_var_array(\n                    $dataReceived['pre_replace'],\n                    FILTER_SANITIZE_FULL_SPECIAL_CHARS\n                ),\n                $SETTINGS\n            );\n        \n        /*\n        * Send emails not sent\n        */\n        case 'send_waiting_emails'://mail\n            sendEmailsNotSent(\n                $SETTINGS\n            );\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                    'message' => 'mail_sent',\n                ),\n                'encode'\n            );\n\n        /*\n        * Default case\n        */\n        default :\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                ),\n                'encode'\n            );\n    }\n}\n\n/**\n * Handler for all key related tasks\n *\n * @param string $post_type\n * @param array|null|string $dataReceived\n * @param array $SETTINGS\n * @return string\n */\nfunction keyHandler(string $post_type, /*php8 array|null|string */$dataReceived, array $SETTINGS): string\n{\n    switch ($post_type) {\n        /*\n        * Generate a temporary encryption key for user\n        */\n        case 'generate_temporary_encryption_key'://action_key\n            return generateOneTimeCode(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                $SETTINGS\n            );\n        \n        /*\n        * user_sharekeys_reencryption_start\n        */\n        case 'user_sharekeys_reencryption_start'://action_key\n            return startReEncryptingUserSharekeys(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (bool) filter_var($dataReceived['self_change'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * user_sharekeys_reencryption_next\n        */\n        case 'user_sharekeys_reencryption_next'://action_key\n            return continueReEncryptingUserSharekeys(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (bool) filter_var($dataReceived['self_change'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (string) filter_var($dataReceived['action'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (int) filter_var($dataReceived['start'], FILTER_SANITIZE_NUMBER_INT),\n                (int) filter_var($dataReceived['length'], FILTER_SANITIZE_NUMBER_INT),\n                $SETTINGS\n            );\n\n        /*\n        * user_psk_reencryption\n        */\n        case 'user_psk_reencryption'://action_key\n            return migrateTo3_DoUserPersonalItemsEncryption(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (int) filter_var($dataReceived['start'], FILTER_SANITIZE_NUMBER_INT),\n                (int) filter_var($dataReceived['length'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['userPsk'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * User's public/private keys change\n        */\n        case 'change_private_key_encryption_password'://action_key\n            return changePrivateKeyEncryptionPassword(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['current_code'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (string) filter_var($dataReceived['new_code'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (string) filter_var($dataReceived['action_type'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                $SETTINGS\n            );\n\n        /*\n        * Generates a KEY with CRYPT\n        */\n        case 'generate_new_key'://action_key\n            // load passwordLib library\n            $pwdlib = new SplClassLoader('PasswordLib', '../includes/libraries');\n            $pwdlib->register();\n            $pwdlib = new PasswordLib\\PasswordLib();\n            // generate key\n            $key = $pwdlib->getRandomToken(filter_input(INPUT_POST, 'size', FILTER_SANITIZE_NUMBER_INT));\n            return '[{\"key\" : \"' . htmlentities($key, ENT_QUOTES) . '\"}]';\n\n        /*\n        * Launch user keys change on his demand\n        */\n        case 'user_new_keys_generation'://action_key\n            return handleUserKeys(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                (string) filter_var($dataReceived['user_pwd'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (int) isset($SETTINGS['maximum_number_of_items_to_treat']) === true ? $SETTINGS['maximum_number_of_items_to_treat'] : NUMBER_ITEMS_IN_BATCH,\n                (string) filter_var($dataReceived['encryption_key'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                (bool) filter_var($dataReceived['delete_existing_keys'], FILTER_VALIDATE_BOOLEAN),\n                (bool) filter_var($dataReceived['send_email_to_user'], FILTER_VALIDATE_BOOLEAN),\n                (bool) filter_var($dataReceived['encrypt_with_user_pwd'], FILTER_VALIDATE_BOOLEAN),\n                (bool) isset($dataReceived['generate_user_new_password']) === true ? filter_var($dataReceived['generate_user_new_password'], FILTER_VALIDATE_BOOLEAN) : false,\n                (string) filter_var($dataReceived['email_body'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n            );\n\n        /*\n        * Default case\n        */\n        default :\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                ),\n                'encode'\n            );\n    }\n}\n\n/**\n * Handler for all system tasks\n *\n * @param string $post_type\n * @param array|null|string $dataReceived\n * @param array $SETTINGS\n * @return string\n */\nfunction systemHandler(string $post_type, /*php8 array|null|string */$dataReceived, array $SETTINGS): string\n{\n    switch ($post_type) {\n        /*\n        * How many items for this user\n        */\n        case 'get_number_of_items_to_treat'://action_system\n            return getNumberOfItemsToTreat(\n                (int) filter_var($dataReceived['user_id'], FILTER_SANITIZE_NUMBER_INT),\n                $SETTINGS\n            );\n\n        /*\n        * refresh_folders_categories\n        */\n        case 'refresh_folders_categories'://action_system\n            handleFoldersCategories(\n                []\n            );\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                ),\n                'encode'\n            );\n\n        /*\n        * Sending statistics\n        */\n        case 'sending_statistics'://action_system\n            sendingStatistics(\n                $SETTINGS\n            );\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                ),\n                'encode'\n            );\n\n        /*\n            * Generate BUG report\n            */\n        case 'generate_bug_report'://action_system\n            return generateBugReport(\n                (array) $dataReceived,\n                $SETTINGS\n            );\n\n        /*\n        * get_teampass_settings\n        */\n        case 'get_teampass_settings'://action_system\n            // Encrypt data to return\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array_intersect_key(\n                    $SETTINGS, \n                    array(\n                        'ldap_user_attribute' => '',\n                        'enable_pf_feature' => '',\n                        'clipboard_life_duration' => '',\n                        'enable_favourites' => '',\n                        'copy_to_clipboard_small_icons' => '',\n                        'enable_attachment_encryption' => '',\n                        'google_authentication' => '',\n                        'agses_authentication_enabled' => '',\n                        'yubico_authentication' => '',\n                        'duo' => '',\n                        'personal_saltkey_security_level' => '',\n                        'enable_tasks_manager' => '',\n                    )\n                ),\n                'encode'\n            );\n\n        /*\n            * Generates a TOKEN with CRYPT\n            */\n        case 'save_token'://action_system\n            $token = GenerateCryptKey(\n                null !== filter_input(INPUT_POST, 'size', FILTER_SANITIZE_NUMBER_INT) ? (int) filter_input(INPUT_POST, 'size', FILTER_SANITIZE_NUMBER_INT) : 20,\n                null !== filter_input(INPUT_POST, 'secure', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) ? filter_input(INPUT_POST, 'secure', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) : false,\n                null !== filter_input(INPUT_POST, 'numeric', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) ? filter_input(INPUT_POST, 'numeric', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) : false,\n                null !== filter_input(INPUT_POST, 'capital', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) ? filter_input(INPUT_POST, 'capital', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) : false,\n                null !== filter_input(INPUT_POST, 'symbols', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) ? filter_input(INPUT_POST, 'symbols', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) : false,\n                null !== filter_input(INPUT_POST, 'lowercase', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) ? filter_input(INPUT_POST, 'lowercase', FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) : false,\n                $SETTINGS\n            );\n            \n            // store in DB\n            DB::insert(\n                prefixTable('tokens'),\n                array(\n                    'user_id' => (int) $_SESSION['user_id'],\n                    'token' => $token,\n                    'reason' => filter_input(INPUT_POST, 'reason', FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                    'creation_timestamp' => time(),\n                    'end_timestamp' => time() + filter_input(INPUT_POST, 'duration', FILTER_SANITIZE_NUMBER_INT), // in secs\n                )\n            );\n\n            return '[{\"token\" : \"' . $token . '\"}]';\n\n        /*\n        * Default case\n        */\n        default :\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                ),\n                'encode'\n            );\n    }\n}\n\n\n/**\n * Permits to set the user ready\n *\n * @param integer $userid\n * @param string $dir\n * @return string\n */\nfunction userIsReady(int $userid, string $dir): string\n{\n    DB::update(\n        prefixTable('users'),\n        array(\n            'is_ready_for_usage' => 1,\n        ),\n        'id = %i',\n        $userid\n    );\n\n    // Send back\n    return prepareExchangedData(\n        $dir,\n        array(\n            'error' => false,\n        ),\n        'encode'\n    ); \n}\n\n/**\n * Provides the number of items\n *\n * @param int   $userId     User ID\n * @param array $SETTINGS   TeampassSettings\n *\n * @return string\n */\nfunction getNumberOfItemsToTreat(\n    int $userId,\n    array $SETTINGS\n): string\n{\n    // get number of items\n    DB::queryFirstRow(\n        'SELECT increment_id\n        FROM ' . prefixTable('sharekeys_items') .\n        ' WHERE user_id = %i',\n        $userId\n    );\n\n    // Send back\n    return prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n        array(\n            'error' => false,\n            'nbItems' => DB::count(),\n        ),\n        'encode'\n    );\n}\n\n\n/**\n * \n */\nfunction changePassword(\n    string $post_new_password,\n    string $post_current_password,\n    int $post_password_complexity,\n    string $post_change_request,\n    int $post_user_id,\n    array $SETTINGS\n): string\n{\n    // load passwordLib library\n    $pwdlib = new SplClassLoader('PasswordLib', '../includes/libraries');\n    $pwdlib->register();\n    $pwdlib = new PasswordLib\\PasswordLib();\n\n    // Prepare variables\n    $post_new_password_hashed = $pwdlib->createPasswordHash($post_new_password);\n\n    // User has decided to change is PW\n    if ($post_change_request === 'reset_user_password_expected'\n        || $post_change_request === 'user_decides_to_change_password'\n    ) {\n        // Check that current user is correct\n        if ((int) $post_user_id !== (int) $_SESSION['user_id']) {\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_not_allowed_to'),\n                ),\n                'encode'\n            );\n        }\n\n        // check if expected security level is reached\n        $dataUser = DB::queryfirstrow(\n            'SELECT *\n            FROM ' . prefixTable('users') . ' WHERE id = %i',\n            $post_user_id\n        );\n\n        // check if badly written\n        $dataUser['fonction_id'] = array_filter(\n            explode(',', str_replace(';', ',', $dataUser['fonction_id']))\n        );\n        $dataUser['fonction_id'] = implode(',', $dataUser['fonction_id']);\n        DB::update(\n            prefixTable('users'),\n            array(\n                'fonction_id' => $dataUser['fonction_id'],\n            ),\n            'id = %i',\n            $post_user_id\n        );\n\n        if (empty($dataUser['fonction_id']) === false) {\n            $data = DB::queryFirstRow(\n                'SELECT complexity\n                FROM ' . prefixTable('roles_title') . '\n                WHERE id IN (' . $dataUser['fonction_id'] . ')\n                ORDER BY complexity DESC'\n            );\n        } else {\n            // In case user has no roles yet\n            $data = array();\n            $data['complexity'] = 0;\n        }\n\n        if ((int) $post_password_complexity < (int) $data['complexity']) {\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => '<div style=\"margin:10px 0 10px 15px;\">' . langHdl('complexity_level_not_reached') . '.<br>' .\n                        langHdl('expected_complexity_level') . ': <b>' . TP_PW_COMPLEXITY[$data['complexity']][1] . '</b></div>',\n                ),\n                'encode'\n            );\n        }\n\n        // Check that the 2 passwords are differents\n        if ($post_current_password === $post_new_password) {\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('password_already_used'),\n                ),\n                'encode'\n            );\n        }\n\n        // update sessions\n        $_SESSION['last_pw_change'] = mktime(0, 0, 0, (int) date('m'), (int) date('d'), (int) date('y'));\n        $_SESSION['validite_pw'] = true;\n\n        // BEfore updating, check that the pwd is correct\n        if ($pwdlib->verifyPasswordHash($post_new_password, $post_new_password_hashed) === true && empty($dataUser['private_key']) === false) {\n            $special_action = 'none';\n            if ($post_change_request === 'reset_user_password_expected') {\n                $_SESSION['user']['private_key'] = decryptPrivateKey($post_current_password, $dataUser['private_key']);\n            }\n\n            // update DB\n            DB::update(\n                prefixTable('users'),\n                array(\n                    'pw' => $post_new_password_hashed,\n                    'last_pw_change' => mktime(0, 0, 0, (int) date('m'), (int) date('d'), (int) date('y')),\n                    'last_pw' => $post_current_password,\n                    'special' => $special_action,\n                    'private_key' => encryptPrivateKey($post_new_password, $_SESSION['user']['private_key']),\n                ),\n                'id = %i',\n                $post_user_id\n            );\n            // update LOG\n            logEvents($SETTINGS, 'user_mngt', 'at_user_pwd_changed', (string) $_SESSION['user_id'], $_SESSION['login'], $post_user_id);\n\n            // Send back\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                    'message' => '',\n                ),\n                'encode'\n            );\n        }\n        // Send back\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('pw_hash_not_correct'),\n            ),\n            'encode'\n        );\n    }\n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_not_allowed_to'),\n        ),\n        'encode'\n    );\n}\n\n\n\nfunction generateQRCode(\n    $post_id,\n    $post_demand_origin,\n    $post_send_mail,\n    $post_login,\n    $post_pwd,\n    array $SETTINGS\n): string\n{\n    // is this allowed by setting\n    if (isKeyExistingAndEqual('ga_reset_by_user', 0, $SETTINGS) === true\n        && (null === $post_demand_origin || $post_demand_origin !== 'users_management_list')\n    ) {\n        // User cannot ask for a new code\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => \"113 \".langHdl('error_not_allowed_to').\" - \".isKeyExistingAndEqual('ga_reset_by_user', 1, $SETTINGS),\n            ),\n            'encode'\n        );\n    }\n\n    // Check if user exists\n    if (isValueSetNullEmpty($post_id) === true) {\n        // Get data about user\n        $data = DB::queryfirstrow(\n            'SELECT id, email, pw\n            FROM ' . prefixTable('users') . '\n            WHERE login = %s',\n            $post_login\n        );\n    } else {\n        $data = DB::queryfirstrow(\n            'SELECT id, login, email, pw\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_id\n        );\n        $post_login = $data['login'];\n    }\n    // Get number of returned users\n    $counter = DB::count();\n\n    // load passwordLib library\n    $pwdlib = new SplClassLoader('PasswordLib', $SETTINGS['cpassman_dir'] . '/includes/libraries');\n    $pwdlib->register();\n    $pwdlib = new PasswordLib\\PasswordLib();\n\n    // Do treatment\n    if ($counter === 0) {\n        // Not a registered user !\n        logEvents($SETTINGS, 'failed_auth', 'user_not_exists', '', stripslashes($post_login), stripslashes($post_login));\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('no_user'),\n                'tst' => 1,\n            ),\n            'encode'\n        );\n    }\n\n    if (\n        isSetArrayOfValues([$post_pwd, $data['pw']]) === true\n        && $pwdlib->verifyPasswordHash($post_pwd, $data['pw']) === false\n        && $post_demand_origin !== 'users_management_list'\n    ) {\n        // checked the given password\n        logEvents($SETTINGS, 'failed_auth', 'password_is_not_correct', '', stripslashes($post_login), stripslashes($post_login));\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('no_user'),\n                'tst' => $post_demand_origin,\n            ),\n            'encode'\n        );\n    }\n    \n    if (empty($data['email']) === true) {\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('no_email_set'),\n            ),\n            'encode'\n        );\n    }\n    \n    // generate new GA user code\n    include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/Authentication/TwoFactorAuth/TwoFactorAuth.php';\n    $tfa = new Authentication\\TwoFactorAuth\\TwoFactorAuth($SETTINGS['ga_website_name']);\n    $gaSecretKey = $tfa->createSecret();\n    $gaTemporaryCode = GenerateCryptKey(12, false, true, true, false, true, $SETTINGS);\n\n    DB::update(\n        prefixTable('users'),\n        [\n            'ga' => $gaSecretKey,\n            'ga_temporary_code' => $gaTemporaryCode,\n        ],\n        'id = %i',\n        $data['id']\n    );\n\n    // Log event\n    logEvents($SETTINGS, 'user_connection', 'at_2fa_google_code_send_by_email', (string) $data['id'], stripslashes($post_login), stripslashes($post_login));\n\n    // send mail?\n    if ((int) $post_send_mail === 1) {\n        sendEmail(\n            langHdl('email_ga_subject'),\n            str_replace(\n                '#2FACode#',\n                $gaTemporaryCode,\n                langHdl('email_ga_text')\n            ),\n            $data['email'],\n            $SETTINGS\n        );\n\n        // send back\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => $post_send_mail,\n                'email' => $data['email'],\n                'email_result' => str_replace(\n                    '#email#',\n                    '<b>' . obfuscateEmail($data['email']) . '</b>',\n                    addslashes(langHdl('admin_email_result_ok'))\n                ),\n            ),\n            'encode'\n        );\n    }\n    \n    // send back\n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => false,\n            'message' => '',\n            'email' => $data['email'],\n            'email_result' => str_replace(\n                '#email#',\n                '<b>' . obfuscateEmail($data['email']) . '</b>',\n                addslashes(langHdl('admin_email_result_ok'))\n            ),\n        ),\n        'encode'\n    );\n}\n\nfunction sendEmailsNotSent(\n    array $SETTINGS\n)\n{\n    if (isKeyExistingAndEqual('enable_send_email_on_user_login', 1, $SETTINGS) === true) {\n        $row = DB::queryFirstRow(\n            'SELECT valeur FROM ' . prefixTable('misc') . ' WHERE type = %s AND intitule = %s',\n            'cron',\n            'sending_emails'\n        );\n\n        if ((int) (time() - $row['valeur']) >= 300 || (int) $row['valeur'] === 0) {\n            $rows = DB::query(\n                'SELECT *\n                FROM ' . prefixTable('emails') .\n                ' WHERE status != %s',\n                'sent'\n            );\n            foreach ($rows as $record) {\n                // Send email\n                $ret = json_decode(\n                    sendEmail(\n                        $record['subject'],\n                        $record['body'],\n                        $record['receivers'],\n                        $SETTINGS\n                    ),\n                    true\n                );\n\n                // update item_id in files table\n                DB::update(\n                    prefixTable('emails'),\n                    array(\n                        'status' => $ret['error'] === 'error_mail_not_send' ? 'not_sent' : 'sent',\n                    ),\n                    'timestamp = %s',\n                    $record['timestamp']\n                );\n            }\n        }\n        // update cron time\n        DB::update(\n            prefixTable('misc'),\n            array(\n                'valeur' => time(),\n            ),\n            'intitule = %s AND type = %s',\n            'sending_emails',\n            'cron'\n        );\n    }\n}\n\nfunction generateGenericPassword(\n    int $size,\n    bool $secure,\n    bool $lowercase,\n    bool $capitalize,\n    bool $numerals,\n    bool $symbols,\n    array $SETTINGS\n): string\n{\n    if ((int) $size > (int) $SETTINGS['pwd_maximum_length']) {\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error_msg' => 'Password length is too long! ',\n                'error' => 'true',\n            ),\n            'encode'\n        );\n    }\n    \n    $generator = new SplClassLoader('PasswordGenerator\\Generator', '../includes/libraries');\n    $generator->register();\n    $generator = new PasswordGenerator\\Generator\\ComputerPasswordGenerator();\n\n    // Is PHP7 being used?\n    if (version_compare(PHP_VERSION, '7.0.0', '>=')) {\n        $php7generator = new SplClassLoader('PasswordGenerator\\RandomGenerator', '../includes/libraries');\n        $php7generator->register();\n        $generator->setRandomGenerator(new PasswordGenerator\\RandomGenerator\\Php7RandomGenerator());\n    }\n\n    // Manage size\n    $generator->setLength(($size <= 0) ? 10 : $size);\n\n    if ($secure === true) {\n        $generator->setSymbols(true);\n        $generator->setLowercase(true);\n        $generator->setUppercase(true);\n        $generator->setNumbers(true);\n    } else {\n        $generator->setLowercase($lowercase);\n        $generator->setUppercase($capitalize);\n        $generator->setNumbers($numerals);\n        $generator->setSymbols($symbols);\n    }\n\n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'key' => $generator->generatePasswords(),\n            'error' => '',\n        ),\n        'encode'\n    );\n}\n\nfunction refreshUserItemsSeenList(\n    array $SETTINGS\n): string\n{\n    // get list of last items seen\n    $arr_html = array();\n    $rows = DB::query(\n        'SELECT i.id AS id, i.label AS label, i.id_tree AS id_tree, l.date, i.perso AS perso, i.restricted_to AS restricted\n        FROM ' . prefixTable('log_items') . ' AS l\n        RIGHT JOIN ' . prefixTable('items') . ' AS i ON (l.id_item = i.id)\n        WHERE l.action = %s AND l.id_user = %i\n        ORDER BY l.date DESC\n        LIMIT 0, 100',\n        'at_shown',\n        $_SESSION['user_id']\n    );\n    if (DB::count() > 0) {\n        foreach ($rows as $record) {\n            if (in_array($record['id']->id, array_column($arr_html, 'id')) === false) {\n                array_push(\n                    $arr_html,\n                    array(\n                        'id' => $record['id'],\n                        'label' => htmlspecialchars(stripslashes(htmlspecialchars_decode($record['label'], ENT_QUOTES)), ENT_QUOTES),\n                        'tree_id' => $record['id_tree'],\n                        'perso' => $record['perso'],\n                        'restricted' => $record['restricted'],\n                    )\n                );\n                if (count($arr_html) >= (int) $SETTINGS['max_latest_items']) {\n                    break;\n                }\n            }\n        }\n    }\n\n    // get wainting suggestions\n    $nb_suggestions_waiting = 0;\n    if (isKeyExistingAndEqual('enable_suggestion', 1, $SETTINGS) === true\n        && ((int) $_SESSION['user_admin'] === 1 || (int) $_SESSION['user_manager'] === 1)\n    ) {\n        DB::query('SELECT * FROM ' . prefixTable('suggestion'));\n        $nb_suggestions_waiting = DB::count();\n    }\n\n    return json_encode(\n        array(\n            'error' => '',\n            'existing_suggestions' => $nb_suggestions_waiting,\n            'html_json' => $arr_html,\n        ),\n        JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP\n    );\n}\n\nfunction sendingStatistics(\n    array $SETTINGS\n): void\n{\n    if (\n        isSetArrayOfValues([$SETTINGS['send_statistics_items'], $SETTINGS['send_stats_time']]) === true\n        && isKeyExistingAndEqual('send_stats', 1, $SETTINGS) === true\n        && (int) ($SETTINGS['send_stats_time'] + TP_ONE_DAY_SECONDS) > time()\n    ) {\n        // get statistics data\n        $stats_data = getStatisticsData($SETTINGS);\n\n        // get statistics items to share\n        $statsToSend = [];\n        $statsToSend['ip'] = $_SERVER['SERVER_ADDR'];\n        $statsToSend['timestamp'] = time();\n        foreach (array_filter(explode(';', $SETTINGS['send_statistics_items'])) as $data) {\n            if ($data === 'stat_languages') {\n                $tmp = '';\n                foreach ($stats_data[$data] as $key => $value) {\n                    $tmp .= $tmp === '' ? $key . '-' . $value : ',' . $key . '-' . $value;\n                }\n                $statsToSend[$data] = $tmp;\n            } elseif ($data === 'stat_country') {\n                $tmp = '';\n                foreach ($stats_data[$data] as $key => $value) {\n                    $tmp .= $tmp === '' ? $key . '-' . $value : ',' . $key . '-' . $value;\n                }\n                $statsToSend[$data] = $tmp;\n            } else {\n                $statsToSend[$data] = $stats_data[$data];\n            }\n        }\n\n        // connect to Teampass Statistics database\n        $link2 = new MeekroDB(\n            'teampass.pw',\n            'teampass_user',\n            'ZMlEfRzKzFLZNzie',\n            'teampass_followup',\n            '3306',\n            'utf8'\n        );\n\n        $link2->insert(\n            'statistics',\n            $statsToSend\n        );\n\n        // update table misc with current timestamp\n        DB::update(\n            prefixTable('misc'),\n            array(\n                'valeur' => time(),\n            ),\n            'type = %s AND intitule = %s',\n            'admin',\n            'send_stats_time'\n        );\n\n        //permits to test only once by session\n        $_SESSION['temporary']['send_stats_done'] = true;\n        $SETTINGS['send_stats_time'] = time();\n\n        // save change in config file\n        handleConfigFile('update', $SETTINGS, 'send_stats_time', $SETTINGS['send_stats_time']);\n    }\n}\n\nfunction generateBugReport(\n    array $data,\n    array $SETTINGS\n): string\n{\n    $config_exclude_vars = array(\n        'bck_script_passkey',\n        'email_smtp_server',\n        'email_auth_username',\n        'email_auth_pwd',\n        'email_from',\n        'onthefly-restore-key',\n        'onthefly-backup-key',\n        'ldap_password',\n        'ldap_hosts',\n        'proxy_ip',\n        'ldap_bind_passwd',\n        'syslog_host',\n        'duo_akey',\n        'duo_ikey',\n        'duo_skey',\n        'duo_host'\n    );\n\n    // Get data\n    //$post_data = json_decode($data, true);\n\n    // Read config file\n    $list_of_options = '';\n    $url_found = '';\n    $anonym_url = '';\n    $tp_config_file = '../includes/config/tp.config.php';\n    $data = file($tp_config_file);\n    foreach ($data as $line) {\n        if (substr($line, 0, 4) === '    ') {\n            // Remove extra spaces\n            $line = str_replace('    ', '', $line);\n\n            // Identify url to anonymize it\n            if (strpos($line, 'cpassman_url') > 0 && empty($url_found) === true) {\n                $url_found = substr($line, 19, strlen($line) - 22);\n                if (empty($url_found) === false) {\n                    $tmp = parse_url($url_found);\n                    $anonym_url = $tmp['scheme'] . '://<anonym_url>' . (isset($tmp['path']) === true ? $tmp['path'] : '');\n                    $line = \"'cpassman_url' => '\" . $anonym_url . \"\\n\";\n                } else {\n                    $line = \"'cpassman_url' => \\n\";\n                }\n            }\n\n            // Anonymize all urls\n            if (empty($anonym_url) === false) {\n                $line = str_replace($url_found, $anonym_url, $line);\n            }\n\n            // Clear some vars\n            foreach ($config_exclude_vars as $var) {\n                if (strpos($line, $var) > 0) {\n                    $line = \"'\".$var.\"' => '<removed>'\\n\";\n                }\n            }\n\n            // Complete line to display\n            $list_of_options .= $line;\n        }\n    }\n\n    // Get error\n    $err = error_get_last();\n\n    // Get 10 latest errors in Teampass\n    $teampass_errors = '';\n    $rows = DB::query(\n        'SELECT label, date AS error_date\n        FROM ' . prefixTable('log_system') . \"\n        WHERE `type` LIKE 'error'\n        ORDER BY `date` DESC\n        LIMIT 0, 10\"\n    );\n    if (DB::count() > 0) {\n        foreach ($rows as $record) {\n            if (empty($teampass_errors) === true) {\n                $teampass_errors = ' * ' . date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) $record['error_date']) . ' - ' . $record['label'];\n            } else {\n                $teampass_errors .= ' * ' . date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) $record['error_date']) . ' - ' . $record['label'];\n            }\n        }\n    }\n\n    $link = mysqli_connect(DB_HOST, DB_USER, DB_PASSWD_CLEAR, DB_NAME, (int) DB_PORT, null);\n\n    // Now prepare text\n    $txt = '### Page on which it happened\n' . $data['current_page'] . '\n\n### Steps to reproduce\n1.\n2.\n3.\n\n### Expected behaviour\nTell us what should happen\n\n\n### Actual behaviour\nTell us what happens instead\n\n### Server configuration\n**Operating system**: ' . php_uname() . '\n\n**Web server:** ' . $_SERVER['SERVER_SOFTWARE'] . '\n\n**Database:** ' . ($link === false ? langHdl('undefined') : mysqli_get_server_info($link)) . '\n\n**PHP version:** ' . PHP_VERSION . '\n\n**Teampass version:** ' . TP_VERSION . '\n\n**Teampass configuration file:**\n```\n' . $list_of_options . '\n```\n\n**Updated from an older Teampass or fresh install:**\n\n### Client configuration\n\n**Browser:** ' . $data['browser_name'] . ' - ' . $data['browser_version'] . '\n\n**Operating system:** ' . $data['os'] . ' - ' . $data['os_archi'] . 'bits\n\n### Logs\n\n#### Web server error log\n```\n' . $err['message'] . ' - ' . $err['file'] . ' (' . $err['line'] . ')\n```\n\n#### Teampass 10 last system errors\n```\n' . $teampass_errors . '\n```\n\n#### Log from the web-browser developer console (CTRL + SHIFT + i)\n```\nInsert the log here and especially the answer of the query that failed.\n```\n';\n\n    return prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n        array(\n            'html' => $txt,\n            'error' => '',\n        ),\n        'encode'\n    );\n}\n\n/**\n * Check that the user password is valid\n *\n * @param integer $post_user_id\n * @param string $post_user_password\n * @param array $SETTINGS\n * @return string\n */\nfunction isUserPasswordCorrect(\n    int $post_user_id,\n    string $post_user_password,\n    array $SETTINGS\n): string\n{\n    if (isUserIdValid($post_user_id) === true) {\n        // Check if user exists\n        $userInfo = DB::queryFirstRow(\n            'SELECT public_key, private_key, pw, auth_type\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (DB::count() > 0 && empty($userInfo['private_key']) === false) {\n            // Get itemKey from current user\n            // Get one item\n            $currentUserKey = DB::queryFirstRow(\n                'SELECT object_id, share_key, increment_id\n                FROM ' . prefixTable('sharekeys_items') . ' AS si\n                INNER JOIN ' . prefixTable('items') . ' AS i ON  (i.id = si.object_id)\n                INNER JOIN ' . prefixTable('nested_tree') . ' AS nt ON  (i.id_tree = nt.id)\n                WHERE user_id = %i AND nt.personal_folder = %i',\n                $post_user_id,\n                0\n            );\n            \n            if (DB::count() === 0) {\n                // This user has no items\n                // let's consider no items in DB\n                return prepareExchangedData(\n                    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => false,\n                        'message' => '',\n                        'debug' => '',\n                    ),\n                    'encode'\n                );\n            }\n\n            if ($currentUserKey !== null) {\n                // Decrypt itemkey with user key\n                // use old password to decrypt private_key\n                $_SESSION['user']['private_key'] = decryptPrivateKey($post_user_password, $userInfo['private_key']);\n                $itemKey = decryptUserObjectKey($currentUserKey['share_key'], $_SESSION['user']['private_key']);\n\n                //echo $post_user_password.\"  --  \".$userInfo['private_key']. \";;\";\n\n                if (empty(base64_decode($itemKey)) === false) {\n                    // GOOD password\n                    return prepareExchangedData(\n                        $SETTINGS['cpassman_dir'],\n                        array(\n                            'error' => false,\n                            'message' => '',\n                            'debug' => '',\n                        ),\n                        'encode'\n                    );\n                }\n            }\n            \n            // Use the password check\n            // load passwordLib library\n            $pwdlib = new SplClassLoader('PasswordLib', $SETTINGS['cpassman_dir'] . '/includes/libraries');\n            $pwdlib->register();\n            $pwdlib = new PasswordLib\\PasswordLib();\n            \n            if ($pwdlib->verifyPasswordHash(htmlspecialchars_decode($post_user_password), $userInfo['pw']) === true) {\n                // GOOD password\n                return prepareExchangedData(\n                    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => false,\n                        'message' => '',\n                        'debug' => '',\n                    ),\n                    'encode'\n                );\n            }\n        }\n    }\n\n    return prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('password_is_not_correct'),\n            //'debug' => isset($itemKey) === true ? base64_decode($itemKey) : '',\n            //'debug2' => $_SESSION['user']['private_key'],\n            //'debug3' => $post_user_password,\n        ),\n        'encode'\n    );\n}\n\nfunction changePrivateKeyEncryptionPassword(\n    int $post_user_id,\n    string $post_current_code,\n    string $post_new_code,\n    string $post_action_type,\n    array $SETTINGS\n): string\n{\n    if (empty($post_new_code) === true) {\n        if (empty($_SESSION['user_pwd']) === false) {\n            $post_new_code = $_SESSION['user_pwd'];\n        } else {\n            // no user password???\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('error_no_user_password_exists'),\n                    'debug' => '',\n                ),\n                'encode'\n            );\n        }\n    }\n\n    if (isUserIdValid($post_user_id) === true) {\n        // Get user info\n        $userData = DB::queryFirstRow(\n            'SELECT private_key\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (DB::count() > 0 && empty($userData['private_key']) === false) {\n            if ($post_action_type === 'encrypt_privkey_with_user_password') {\n                // Here the user has his private key encrypted with an OTC.\n                // We need to encrypt it with his real password\n                $privateKey = decryptPrivateKey($post_new_code, $userData['private_key']);\n                $hashedPrivateKey = encryptPrivateKey($post_current_code, $privateKey);\n            } else {\n                $privateKey = decryptPrivateKey($post_current_code, $userData['private_key']);\n                $hashedPrivateKey = encryptPrivateKey($post_new_code, $privateKey);\n            }\n\n            // Update user account\n            DB::update(\n                prefixTable('users'),\n                array(\n                    'private_key' => $hashedPrivateKey,\n                    'special' => 'none',\n                    'otp_provided' => 1,\n                ),\n                'id = %i',\n                $post_user_id\n            );\n\n            // Load superGlobals\n            include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/protect/SuperGlobal/SuperGlobal.php';\n            $superGlobal = new protect\\SuperGlobal\\SuperGlobal();\n\n            $superGlobal->put('private_key', $privateKey, 'SESSION', 'user');\n        }\n\n        // Return\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n            ),\n            'encode'\n        );\n    }\n    \n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n            'debug' => '',\n        ),\n        'encode'\n    );\n}\n\nfunction initializeUserPassword(\n    int $post_user_id,\n    string $post_special,\n    string $post_user_password,\n    bool $post_self_change,\n    array $SETTINGS\n): string\n{\n    if (isUserIdValid($post_user_id) === true) {\n        // Get user info\n        $userData = DB::queryFirstRow(\n            'SELECT email, auth_type, login\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (DB::count() > 0 && empty($userData['email']) === false) {\n            // If user pwd is empty then generate a new one and send it to user\n            if (isset($post_user_password) === false || empty($post_user_password) === true) {\n                // Generate new password\n                $post_user_password = generateQuickPassword();\n            }\n\n            // If LDAP enabled, then\n            // check that this password is correct\n            $continue = true;\n            if ($userData['auth_type'] === 'ldap' && (int) $SETTINGS['ldap_mode'] === 1) {\n                $continue = ldapCheckUserPassword(\n                    $userData['login'],\n                    $post_user_password,\n                    $SETTINGS\n                );\n            }\n\n            if ($continue === true) {\n                // Only change if email is successfull\n                // GEnerate new keys\n                $userKeys = generateUserKeys($post_user_password);\n\n                // load passwordLib library\n                $pwdlib = new SplClassLoader('PasswordLib', '../includes/libraries');\n                $pwdlib->register();\n                $pwdlib = new PasswordLib\\PasswordLib();\n\n                // Update user account\n                DB::update(\n                    prefixTable('users'),\n                    array(\n                        'special' => $post_special,\n                        'pw' => $pwdlib->createPasswordHash($post_user_password),\n                        'public_key' => $userKeys['public_key'],\n                        'private_key' => $userKeys['private_key'],\n                        'last_pw_change' => time(),\n                    ),\n                    'id = %i',\n                    $post_user_id\n                );\n\n                // Return\n                return prepareExchangedData(\n                    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => false,\n                        'message' => '',\n                        'user_pwd' => $post_user_password,\n                        'user_email' => $userData['email'],\n                    ),\n                    'encode'\n                );\n            }\n            // Return error\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('no_email_set'),\n                    'debug' => '',\n                    'self_change' => $post_self_change,\n                ),\n                'encode'\n            );\n        }\n\n        // Error\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('no_email_set'),\n                'debug' => '',\n            ),\n            'encode'\n        );\n    }\n    \n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n            'debug' => '',\n        ),\n        'encode'\n    );\n}\n\nfunction sendMailToUser(\n    string $post_receipt,\n    string $post_body,\n    string $post_subject,\n    array $post_replace,\n    array $SETTINGS\n): string\n{\n    if (count($post_replace) > 0) {\n        $post_body = str_replace(\n            array_keys($post_replace),\n            array_values($post_replace),\n            $post_body\n        );\n    }\n    \n    $ret = sendEmail(\n        $post_subject,\n        $post_body,\n        $post_receipt,\n        $SETTINGS,\n        '',\n        false\n    );\n\n    $ret = json_decode($ret, true);\n\n    return prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n        array(\n            'error' => empty($ret['error']) === true ? false : true,\n            'message' => $ret['message'],\n        ),\n        'encode'\n    );\n}\n\nfunction generateOneTimeCode(\n    int $post_user_id,\n    array $SETTINGS\n): string\n{\n    if (isUserIdValid($post_user_id) === true) {\n        // Get user info\n        $userData = DB::queryFirstRow(\n            'SELECT email, auth_type, login\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (DB::count() > 0 && empty($userData['email']) === false) {\n            // Generate pwd\n            $password = generateQuickPassword();\n\n            // GEnerate new keys\n            $userKeys = generateUserKeys($password);\n\n            // Save in DB\n            DB::update(\n                prefixTable('users'),\n                array(\n                    'public_key' => $userKeys['public_key'],\n                    'private_key' => $userKeys['private_key'],\n                    'special' => 'generate-keys',\n                ),\n                'id=%i',\n                $post_user_id\n            );\n\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                    'message' => '',\n                    'code' => $password,\n                    'visible_otp' => ADMIN_VISIBLE_OTP_ON_LDAP_IMPORT,\n                ),\n                'encode'\n            );\n        }\n        \n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('no_email_set'),\n            ),\n            'encode'\n        );\n    }\n        \n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n        ),\n        'encode'\n    );\n}\n\nfunction startReEncryptingUserSharekeys(\n    int $post_user_id,\n    bool $post_self_change,\n    array $SETTINGS\n): string\n{\n    if (isUserIdValid($post_user_id) === true) {\n        // Check if user exists\n        DB::queryFirstRow(\n            'SELECT *\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (DB::count() > 0) {\n            // Include libraries\n            include_once $SETTINGS['cpassman_dir'] . '/sources/aes.functions.php';\n\n            // CLear old sharekeys\n            if ($post_self_change === false) {\n                deleteUserObjetsKeys($post_user_id, $SETTINGS);\n            }\n\n            // Continu with next step\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                    'message' => '',\n                    'step' => 'step1',\n                    'userId' => $post_user_id,\n                    'start' => 0,\n                    'self_change' => $post_self_change,\n                ),\n                'encode'\n            );\n        }\n        // Nothing to do\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('error_no_user'),\n            ),\n            'encode'\n        );\n    }\n\n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n        ),\n        'encode'\n    );\n}\n\n/**\n * Permits to encrypt user's keys\n *\n * @param integer $post_user_id\n * @param boolean $post_self_change\n * @param string $post_action\n * @param integer $post_start\n * @param integer $post_length\n * @param array $SETTINGS\n * @return string\n */\nfunction continueReEncryptingUserSharekeys(\n    int     $post_user_id,\n    bool    $post_self_change,\n    string  $post_action,\n    int     $post_start,\n    int     $post_length,\n    array   $SETTINGS\n): string\n{\n    if (isUserIdValid($post_user_id) === true) {\n        // Check if user exists\n        $userInfo = DB::queryFirstRow(\n            'SELECT public_key\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (isset($userInfo['public_key']) === true) {\n            // Include libraries\n            include_once $SETTINGS['cpassman_dir'] . '/sources/aes.functions.php';\n            $return = [];\n\n            // WHAT STEP TO PERFORM?\n            if ($post_action === 'step0') {\n                // CLear old sharekeys\n                if ($post_self_change === false) {\n                    deleteUserObjetsKeys($post_user_id, $SETTINGS);\n                }\n\n                $return['post_action'] = 'step1';\n            }\n            \n            // STEP 1 - ITEMS\n            elseif ($post_action === 'step1') {\n                $return = continueReEncryptingUserSharekeysStep1(\n                    $post_user_id,\n                    $post_self_change,\n                    $post_action,\n                    $post_start,\n                    $post_length,\n                    $userInfo['public_key'],\n                    $SETTINGS\n                );\n            }\n\n            // STEP 2 - LOGS\n            elseif ($post_action === 'step2') {\n                $return = continueReEncryptingUserSharekeysStep2(\n                    $post_user_id,\n                    $post_self_change,\n                    $post_action,\n                    $post_start,\n                    $post_length,\n                    $userInfo['public_key'],\n                    $SETTINGS\n                );\n            }\n\n            // STEP 3 - FIELDS\n            elseif ($post_action === 'step3') {\n                $return = continueReEncryptingUserSharekeysStep3(\n                    $post_user_id,\n                    $post_self_change,\n                    $post_action,\n                    $post_start,\n                    $post_length,\n                    $userInfo['public_key'],\n                    $SETTINGS\n                );\n            }\n            \n            // STEP 4 - SUGGESTIONS\n            elseif ($post_action === 'step4') {\n                $return = continueReEncryptingUserSharekeysStep4(\n                    $post_user_id,\n                    $post_self_change,\n                    $post_action,\n                    $post_start,\n                    $post_length,\n                    $userInfo['public_key'],\n                    $SETTINGS\n                );\n            }\n            \n            // STEP 5 - FILES\n            elseif ($post_action === 'step5') {\n                $return = continueReEncryptingUserSharekeysStep5(\n                    $post_user_id,\n                    $post_self_change,\n                    $post_action,\n                    $post_start,\n                    $post_length,\n                    $userInfo['public_key'],\n                    $SETTINGS\n                );\n            }\n            \n            // STEP 6 - PERSONAL ITEMS\n            elseif ($post_action === 'step6') {\n                $return = continueReEncryptingUserSharekeysStep6(\n                    $post_user_id,\n                    $post_self_change,\n                    $post_action,\n                    $post_start,\n                    $post_length,\n                    $userInfo['public_key'],\n                    $SETTINGS\n                );\n            }\n            \n            // Continu with next step\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                    'message' => '',\n                    'step' => isset($return['post_action']) === true ? $return['post_action'] : '',\n                    'start' => isset($return['next_start']) === true ? $return['next_start'] : 0,\n                    'userId' => $post_user_id,\n                    'self_change' => $post_self_change,\n                ),\n                'encode'\n            );\n        }\n        \n        // Nothing to do\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => false,\n                'message' => '',\n                'step' => 'finished',\n                'start' => 0,\n                'userId' => $post_user_id,\n                'self_change' => $post_self_change,\n            ),\n            'encode'\n        );\n    }\n    \n    // Nothing to do\n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n            'extra' => $post_user_id,\n        ),\n        'encode'\n    );\n}\n\nfunction continueReEncryptingUserSharekeysStep1(\n    int $post_user_id,\n    bool $post_self_change,\n    string $post_action,\n    int $post_start,\n    int $post_length,\n    string $user_public_key,\n    array $SETTINGS\n): array \n{\n    // Loop on items\n    $rows = DB::query(\n        'SELECT id, pw\n        FROM ' . prefixTable('items') . '\n        WHERE perso = 0\n        LIMIT ' . $post_start . ', ' . $post_length\n    );\n    foreach ($rows as $record) {\n        // Get itemKey from current user\n        $currentUserKey = DB::queryFirstRow(\n            'SELECT share_key, increment_id\n            FROM ' . prefixTable('sharekeys_items') . '\n            WHERE object_id = %i AND user_id = %i',\n            $record['id'],\n            $_SESSION['user_id']\n        );\n\n        // do we have any input? (#3481)\n        if ($currentUserKey === null || count($currentUserKey) === 0) {\n            continue;\n        }\n\n        // Decrypt itemkey with admin key\n        $itemKey = decryptUserObjectKey($currentUserKey['share_key'], $_SESSION['user']['private_key']);\n        \n        // Encrypt Item key\n        $share_key_for_item = encryptUserObjectKey($itemKey, $user_public_key);\n        \n        // Save the key in DB\n        if ($post_self_change === false) {\n            DB::insert(\n                prefixTable('sharekeys_items'),\n                array(\n                    'object_id' => (int) $record['id'],\n                    'user_id' => (int) $post_user_id,\n                    'share_key' => $share_key_for_item,\n                )\n            );\n        } else {\n            // Get itemIncrement from selected user\n            if ((int) $post_user_id !== (int) $_SESSION['user_id']) {\n                $currentUserKey = DB::queryFirstRow(\n                    'SELECT increment_id\n                    FROM ' . prefixTable('sharekeys_items') . '\n                    WHERE object_id = %i AND user_id = %i',\n                    $record['id'],\n                    $post_user_id\n                );\n\n                if (DB::count() > 0) {\n                    // NOw update\n                    DB::update(\n                        prefixTable('sharekeys_items'),\n                        array(\n                            'share_key' => $share_key_for_item,\n                        ),\n                        'increment_id = %i',\n                        $currentUserKey['increment_id']\n                    );\n                } else {\n                    DB::insert(\n                        prefixTable('sharekeys_items'),\n                        array(\n                            'object_id' => (int) $record['id'],\n                            'user_id' => (int) $post_user_id,\n                            'share_key' => $share_key_for_item,\n                        )\n                    );\n                }\n            }\n        }\n    }\n\n    // SHould we change step?\n    DB::query(\n        'SELECT *\n        FROM ' . prefixTable('items') . '\n        WHERE perso = 0'\n    );\n\n    $next_start = (int) $post_start + (int) $post_length;\n    return [\n        'next_start' => $next_start > DB::count() ? 0 : $next_start,\n        'post_action' => $next_start > DB::count() ? 'step2' : 'step1',\n    ];\n}\n\nfunction continueReEncryptingUserSharekeysStep2(\n    int $post_user_id,\n    bool $post_self_change,\n    string $post_action,\n    int $post_start,\n    int $post_length,\n    string $user_public_key,\n    array $SETTINGS\n): array\n{\n    // Loop on logs\n    $rows = DB::query(\n        'SELECT increment_id\n        FROM ' . prefixTable('log_items') . '\n        WHERE raison LIKE \"at_pw :%\" AND encryption_type = \"teampass_aes\"\n        LIMIT ' . $post_start . ', ' . $post_length\n    );\n    foreach ($rows as $record) {\n        // Get itemKey from current user\n        $currentUserKey = DB::queryFirstRow(\n            'SELECT share_key\n            FROM ' . prefixTable('sharekeys_logs') . '\n            WHERE object_id = %i AND user_id = %i',\n            $record['increment_id'],\n            $_SESSION['user_id']\n        );\n\n        // do we have any input? (#3481)\n        if ($currentUserKey === null || count($currentUserKey) === 0) {\n            continue;\n        }\n\n        // Decrypt itemkey with admin key\n        $itemKey = decryptUserObjectKey($currentUserKey['share_key'], $_SESSION['user']['private_key']);\n\n        // Encrypt Item key\n        $share_key_for_item = encryptUserObjectKey($itemKey, $user_public_key);\n\n        // Save the key in DB\n        if ($post_self_change === false) {\n            DB::insert(\n                prefixTable('sharekeys_logs'),\n                array(\n                    'object_id' => (int) $record['increment_id'],\n                    'user_id' => (int) $post_user_id,\n                    'share_key' => $share_key_for_item,\n                )\n            );\n        } else {\n            // Get itemIncrement from selected user\n            if ((int) $post_user_id !== (int) $_SESSION['user_id']) {\n                $currentUserKey = DB::queryFirstRow(\n                    'SELECT increment_id\n                    FROM ' . prefixTable('sharekeys_items') . '\n                    WHERE object_id = %i AND user_id = %i',\n                    $record['id'],\n                    $post_user_id\n                );\n            }\n\n            // NOw update\n            DB::update(\n                prefixTable('sharekeys_logs'),\n                array(\n                    'share_key' => $share_key_for_item,\n                ),\n                'increment_id = %i',\n                $currentUserKey['increment_id']\n            );\n        }\n    }\n\n    // SHould we change step?\n    DB::query(\n        'SELECT increment_id\n        FROM ' . prefixTable('log_items') . '\n        WHERE raison LIKE \"at_pw :%\" AND encryption_type = \"teampass_aes\"'\n    );\n\n    $next_start = (int) $post_start + (int) $post_length;\n    return [\n        'next_start' => $next_start > DB::count() ? 0 : $next_start,\n        'post_action' => $next_start > DB::count() ? 'step3' : 'step2',\n    ];\n}\n\nfunction continueReEncryptingUserSharekeysStep3(\n    int $post_user_id,\n    bool $post_self_change,\n    string $post_action,\n    int $post_start,\n    int $post_length,\n    string $user_public_key,\n    array $SETTINGS\n): array\n{\n    // Loop on fields\n    $rows = DB::query(\n        'SELECT id\n        FROM ' . prefixTable('categories_items') . '\n        WHERE encryption_type = \"teampass_aes\"\n        LIMIT ' . $post_start . ', ' . $post_length\n    );\n    foreach ($rows as $record) {\n        // Get itemKey from current user\n        $currentUserKey = DB::queryFirstRow(\n            'SELECT share_key\n            FROM ' . prefixTable('sharekeys_fields') . '\n            WHERE object_id = %i AND user_id = %i',\n            $record['id'],\n            $_SESSION['user_id']\n        );\n\n        // do we have any input? (#3481)\n        if ($currentUserKey === null || count($currentUserKey) === 0) {\n            continue;\n        }\n\n        // Decrypt itemkey with admin key\n        $itemKey = decryptUserObjectKey($currentUserKey['share_key'], $_SESSION['user']['private_key']);\n\n        // Encrypt Item key\n        $share_key_for_item = encryptUserObjectKey($itemKey, $user_public_key);\n\n        // Save the key in DB\n        if ($post_self_change === false) {\n            DB::insert(\n                prefixTable('sharekeys_fields'),\n                array(\n                    'object_id' => (int) $record['id'],\n                    'user_id' => (int) $post_user_id,\n                    'share_key' => $share_key_for_item,\n                )\n            );\n        } else {\n            // Get itemIncrement from selected user\n            if ((int) $post_user_id !== (int) $_SESSION['user_id']) {\n                $currentUserKey = DB::queryFirstRow(\n                    'SELECT increment_id\n                    FROM ' . prefixTable('sharekeys_items') . '\n                    WHERE object_id = %i AND user_id = %i',\n                    $record['id'],\n                    $post_user_id\n                );\n            }\n\n            // NOw update\n            DB::update(\n                prefixTable('sharekeys_fields'),\n                array(\n                    'share_key' => $share_key_for_item,\n                ),\n                'increment_id = %i',\n                $currentUserKey['increment_id']\n            );\n        }\n    }\n\n    // SHould we change step?\n    DB::query(\n        'SELECT *\n        FROM ' . prefixTable('categories_items') . '\n        WHERE encryption_type = \"teampass_aes\"'\n    );\n\n    $next_start = (int) $post_start + (int) $post_length;\n    return [\n        'next_start' => $next_start > DB::count() ? 0 : $next_start,\n        'post_action' => $next_start > DB::count() ? 'step4' : 'step3',\n    ];\n}\n\nfunction continueReEncryptingUserSharekeysStep4(\n    int $post_user_id,\n    bool $post_self_change,\n    string $post_action,\n    int $post_start,\n    int $post_length,\n    string $user_public_key,\n    array $SETTINGS\n): array\n{\n    // Loop on suggestions\n    $rows = DB::query(\n        'SELECT id\n        FROM ' . prefixTable('suggestion') . '\n        LIMIT ' . $post_start . ', ' . $post_length\n    );\n    foreach ($rows as $record) {\n        // Get itemKey from current user\n        $currentUserKey = DB::queryFirstRow(\n            'SELECT share_key\n            FROM ' . prefixTable('sharekeys_suggestions') . '\n            WHERE object_id = %i AND user_id = %i',\n            $record['id'],\n            $_SESSION['user_id']\n        );\n\n        // do we have any input? (#3481)\n        if ($currentUserKey === null || count($currentUserKey) === 0) {\n            continue;\n        }\n\n        // Decrypt itemkey with admin key\n        $itemKey = decryptUserObjectKey($currentUserKey['share_key'], $_SESSION['user']['private_key']);\n\n        // Encrypt Item key\n        $share_key_for_item = encryptUserObjectKey($itemKey, $user_public_key);\n\n        // Save the key in DB\n        if ($post_self_change === false) {\n            DB::insert(\n                prefixTable('sharekeys_suggestions'),\n                array(\n                    'object_id' => (int) $record['id'],\n                    'user_id' => (int) $post_user_id,\n                    'share_key' => $share_key_for_item,\n                )\n            );\n        } else {\n            // Get itemIncrement from selected user\n            if ((int) $post_user_id !== (int) $_SESSION['user_id']) {\n                $currentUserKey = DB::queryFirstRow(\n                    'SELECT increment_id\n                    FROM ' . prefixTable('sharekeys_items') . '\n                    WHERE object_id = %i AND user_id = %i',\n                    $record['id'],\n                    $post_user_id\n                );\n            }\n\n            // NOw update\n            DB::update(\n                prefixTable('sharekeys_suggestions'),\n                array(\n                    'share_key' => $share_key_for_item,\n                ),\n                'increment_id = %i',\n                $currentUserKey['increment_id']\n            );\n        }\n    }\n\n    // SHould we change step?\n    DB::query(\n        'SELECT *\n        FROM ' . prefixTable('suggestion')\n    );\n\n    $next_start = (int) $post_start + (int) $post_length;\n    return [\n        'next_start' => $next_start > DB::count() ? 0 : $next_start,\n        'post_action' => $next_start > DB::count() ? 'step5' : 'step4',\n    ];\n}\n\nfunction continueReEncryptingUserSharekeysStep5(\n    int $post_user_id,\n    bool $post_self_change,\n    string $post_action,\n    int $post_start,\n    int $post_length,\n    string $user_public_key,\n    array $SETTINGS\n): array\n{\n    // Loop on files\n    $rows = DB::query(\n        'SELECT id\n        FROM ' . prefixTable('files') . '\n        WHERE status = \"' . TP_ENCRYPTION_NAME . '\"\n        LIMIT ' . $post_start . ', ' . $post_length\n    ); //aes_encryption\n    foreach ($rows as $record) {\n        // Get itemKey from current user\n        $currentUserKey = DB::queryFirstRow(\n            'SELECT share_key\n            FROM ' . prefixTable('sharekeys_files') . '\n            WHERE object_id = %i AND user_id = %i',\n            $record['id'],\n            $_SESSION['user_id']\n        );\n\n        // do we have any input? (#3481)\n        if ($currentUserKey === null || count($currentUserKey) === 0) {\n            continue;\n        }\n\n        // Decrypt itemkey with admin key\n        $itemKey = decryptUserObjectKey($currentUserKey['share_key'], $_SESSION['user']['private_key']);\n\n        // Encrypt Item key\n        $share_key_for_item = encryptUserObjectKey($itemKey, $user_public_key);\n\n        // Save the key in DB\n        if ($post_self_change === false) {\n            DB::insert(\n                prefixTable('sharekeys_files'),\n                array(\n                    'object_id' => (int) $record['id'],\n                    'user_id' => (int) $post_user_id,\n                    'share_key' => $share_key_for_item,\n                )\n            );\n        } else {\n            // Get itemIncrement from selected user\n            if ((int) $post_user_id !== (int) $_SESSION['user_id']) {\n                $currentUserKey = DB::queryFirstRow(\n                    'SELECT increment_id\n                    FROM ' . prefixTable('sharekeys_items') . '\n                    WHERE object_id = %i AND user_id = %i',\n                    $record['id'],\n                    $post_user_id\n                );\n            }\n\n            // NOw update\n            DB::update(\n                prefixTable('sharekeys_files'),\n                array(\n                    'share_key' => $share_key_for_item,\n                ),\n                'increment_id = %i',\n                $currentUserKey['increment_id']\n            );\n        }\n    }\n\n    // SHould we change step?\n    DB::query(\n        'SELECT *\n        FROM ' . prefixTable('files') . '\n        WHERE status = \"' . TP_ENCRYPTION_NAME . '\"'\n    );\n\n    $next_start = (int) $post_start + (int) $post_length;\n    return [\n        'next_start' => $next_start > DB::count() ? 0 : $next_start,\n        'post_action' => $next_start > DB::count() ? 'step6' : 'step5',\n    ];\n}\n\nfunction continueReEncryptingUserSharekeysStep6(\n    int $post_user_id,\n    bool $post_self_change,\n    string $post_action,\n    int $post_start,\n    int $post_length,\n    string $user_public_key,\n    array $SETTINGS\n): array\n{\n    // IF USER IS NOT THE SAME\n    if ((int) $post_user_id === (int) $_SESSION['user_id']) {\n        return [\n            'next_start' => 0,\n            'post_action' => 'finished',\n        ];\n    }\n    \n    // Loop on persoanl items\n    if (count($_SESSION['personal_folders']) > 0) {\n        $rows = DB::query(\n            'SELECT id, pw\n            FROM ' . prefixTable('items') . '\n            WHERE perso = 1 AND id_tree IN %ls\n            LIMIT ' . $post_start . ', ' . $post_length,\n            $_SESSION['personal_folders']\n        );\n        foreach ($rows as $record) {\n            // Get itemKey from current user\n            $currentUserKey = DB::queryFirstRow(\n                'SELECT share_key, increment_id\n                FROM ' . prefixTable('sharekeys_items') . '\n                WHERE object_id = %i AND user_id = %i',\n                $record['id'],\n                $_SESSION['user_id']\n            );\n\n            // Decrypt itemkey with admin key\n            $itemKey = decryptUserObjectKey($currentUserKey['share_key'], $_SESSION['user']['private_key']);\n\n            // Encrypt Item key\n            $share_key_for_item = encryptUserObjectKey($itemKey, $user_public_key);\n\n            // Save the key in DB\n            if ($post_self_change === false) {\n                DB::insert(\n                    prefixTable('sharekeys_items'),\n                    array(\n                        'object_id' => (int) $record['id'],\n                        'user_id' => (int) $post_user_id,\n                        'share_key' => $share_key_for_item,\n                    )\n                );\n            } else {\n                // Get itemIncrement from selected user\n                if ((int) $post_user_id !== (int) $_SESSION['user_id']) {\n                    $currentUserKey = DB::queryFirstRow(\n                        'SELECT increment_id\n                        FROM ' . prefixTable('sharekeys_items') . '\n                        WHERE object_id = %i AND user_id = %i',\n                        $record['id'],\n                        $post_user_id\n                    );\n                }\n\n                // NOw update\n                DB::update(\n                    prefixTable('sharekeys_items'),\n                    array(\n                        'share_key' => $share_key_for_item,\n                    ),\n                    'increment_id = %i',\n                    $currentUserKey['increment_id']\n                );\n            }\n        }\n    }\n\n    // SHould we change step?\n    DB::query(\n        'SELECT *\n        FROM ' . prefixTable('items') . '\n        WHERE perso = 0'\n    );\n\n    $next_start = (int) $post_start + (int) $post_length;\n    return [\n        'next_start' => $next_start > DB::count() ? 0 : $next_start,\n        'post_action' => $next_start > DB::count() ? 'finished' : 'step6',\n    ];\n}\n\nfunction migrateTo3_DoUserPersonalItemsEncryption(\n    int $post_user_id,\n    int $post_start,\n    int $post_length,\n    string $post_user_psk,\n    array $SETTINGS\n) {\n    $next_step = '';  \n    \n    if (isUserIdValid($post_user_id) === true) {\n        // Check if user exists\n        $userInfo = DB::queryFirstRow(\n            'SELECT public_key, encrypted_psk\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (DB::count() > 0) {\n            // check if psk is correct.\n            if (empty($userInfo['encrypted_psk']) === false) {//echo $post_user_psk.\" ;; \".$userInfo['encrypted_psk'].\" ;; \";\n                $user_key_encoded = defuse_validate_personal_key(\n                    html_entity_decode($post_user_psk), // convert tspecial string back to their original characters due to FILTER_SANITIZE_FULL_SPECIAL_CHARS\n                    $userInfo['encrypted_psk']\n                );\n\n                if (strpos($user_key_encoded, \"Error \") !== false) {\n                    return prepareExchangedData(\n                        $SETTINGS['cpassman_dir'],\n                        array(\n                            'error' => true,\n                            'message' => langHdl('bad_psk'),\n                        ),\n                        'encode'\n                    );\n                }\n\n                // Loop on persoanl items\n                $rows = DB::query(\n                    'SELECT id, pw\n                    FROM ' . prefixTable('items') . '\n                    WHERE perso = 1 AND id_tree IN %ls\n                    LIMIT ' . $post_start . ', ' . $post_length,\n                    $_SESSION['personal_folders']\n                );\n                $countUserPersonalItems = DB::count();\n                foreach ($rows as $record) {\n                    if ($record['encryption_type'] !== 'teampass_aes') {\n                        // Decrypt with Defuse\n                        $passwd = cryption(\n                            $record['pw'],\n                            $user_key_encoded,\n                            'decrypt',\n                            $SETTINGS\n                        );\n\n                        // Encrypt with Object Key\n                        $cryptedStuff = doDataEncryption($passwd['string']);\n\n                        // Store new password in DB\n                        DB::update(\n                            prefixTable('items'),\n                            array(\n                                'pw' => $cryptedStuff['encrypted'],\n                                'encryption_type' => 'teampass_aes',\n                            ),\n                            'id = %i',\n                            $record['id']\n                        );\n\n                        // Insert in DB the new object key for this item by user\n                        DB::insert(\n                            prefixTable('sharekeys_items'),\n                            array(\n                                'object_id' => (int) $record['id'],\n                                'user_id' => (int) $post_user_id,\n                                'share_key' => encryptUserObjectKey($cryptedStuff['objectKey'], $userInfo['public_key']),\n                            )\n                        );\n\n\n                        // Does this item has Files?\n                        // Loop on files\n                        $rows = DB::query(\n                            'SELECT id, file\n                            FROM ' . prefixTable('files') . '\n                            WHERE status != %s\n                            AND id_item = %i',\n                            TP_ENCRYPTION_NAME,\n                            $record['id']\n                        );\n                        //aes_encryption\n                        foreach ($rows as $record2) {\n                            // Now decrypt the file\n                            prepareFileWithDefuse(\n                                'decrypt',\n                                $SETTINGS['path_to_upload_folder'] . '/' . $record2['file'],\n                                $SETTINGS['path_to_upload_folder'] . '/' . $record2['file'] . '.delete',\n                                $SETTINGS,\n                                $post_user_psk\n                            );\n\n                            // Encrypt the file\n                            $encryptedFile = encryptFile($record2['file'] . '.delete', $SETTINGS['path_to_upload_folder']);\n\n                            DB::update(\n                                prefixTable('files'),\n                                array(\n                                    'file' => $encryptedFile['fileHash'],\n                                    'status' => TP_ENCRYPTION_NAME,\n                                ),\n                                'id = %i',\n                                $record2['id']\n                            );\n\n                            // Save key\n                            DB::insert(\n                                prefixTable('sharekeys_files'),\n                                array(\n                                    'object_id' => (int) $record2['id'],\n                                    'user_id' => (int) $_SESSION['user_id'],\n                                    'share_key' => encryptUserObjectKey($encryptedFile['objectKey'], $_SESSION['user']['public_key']),\n                                )\n                            );\n\n                            // Unlink original file\n                            unlink($SETTINGS['path_to_upload_folder'] . '/' . $record2['file']);\n                        }\n                    }\n                }\n\n                // SHould we change step?\n                $next_start = (int) $post_start + (int) $post_length;\n                if ($next_start > $countUserPersonalItems) {\n                    // Now update user\n                    DB::update(\n                        prefixTable('users'),\n                        array(\n                            'special' => 'none',\n                            'upgrade_needed' => 0,\n                            'encrypted_psk' => '',\n                        ),\n                        'id = %i',\n                        $post_user_id\n                    );\n\n                    $next_step = 'finished';\n                    $next_start = 0;\n                }\n\n                // Continu with next step\n                return prepareExchangedData(\n                    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => false,\n                        'message' => '',\n                        'step' => $next_step,\n                        'start' => $next_start,\n                        'userId' => $post_user_id\n                    ),\n                    'encode'\n                );\n            }\n        }\n        \n        // Nothing to do\n        return prepareExchangedData(\n            $SETTINGS['cpassman_dir'],\n            array(\n                'error' => true,\n                'message' => langHdl('error_no_user'),\n            ),\n            'encode'\n        );\n    }\n    \n    // Nothing to do\n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n        ),\n        'encode'\n    );\n}\n\n\nfunction getUserInfo(\n    int $post_user_id,\n    string $post_fields,\n    array $SETTINGS\n)\n{\n    if (isUserIdValid($post_user_id) === true) {\n        // Get user info\n        $userData = DB::queryFirstRow(\n            'SELECT '.$post_fields.'\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (DB::count() > 0) {\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => false,\n                    'message' => '',\n                    'queryResults' => $userData,\n                ),\n                'encode'\n            );\n        }\n    }\n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n        ),\n        'encode'\n    );\n}\n\n/**\n * Change user auth password\n *\n * @param integer $post_user_id\n * @param string $post_current_pwd\n * @param string $post_new_pwd\n * @param array $SETTINGS\n * @return string\n */\nfunction changeUserAuthenticationPassword(\n    int $post_user_id,\n    string $post_current_pwd,\n    string $post_new_pwd,\n    array $SETTINGS\n)\n{\n    if (isUserIdValid($post_user_id) === true) {\n        // Get user info\n        $userData = DB::queryFirstRow(\n            'SELECT auth_type, login, private_key\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        if (DB::count() > 0 && empty($userData['private_key']) === false) {\n            // Now check if current password is correct\n            // For this, just check if it is possible to decrypt the privatekey\n            // And compare it to the one in session\n            try {\n                $privateKey = decryptPrivateKey($post_current_pwd, $userData['private_key']);\n            } catch (Exception $e) {\n                return prepareExchangedData(\n                    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => true,\n                        'message' => langHdl('bad_password'),\n                    ),\n                    'encode'\n                );\n            }\n\n            // Load superGlobals\n            include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/protect/SuperGlobal/SuperGlobal.php';\n            $superGlobal = new protect\\SuperGlobal\\SuperGlobal();\n\n            if ($superGlobal->get('private_key', 'SESSION', 'user') === $privateKey) {\n                // Encrypt it with new password\n                $hashedPrivateKey = encryptPrivateKey($post_new_pwd, $privateKey);\n\n                // Generate new hash for auth password\n                // load passwordLib library\n                $pwdlib = new SplClassLoader('PasswordLib', '../includes/libraries');\n                $pwdlib->register();\n                $pwdlib = new PasswordLib\\PasswordLib();\n\n                // Prepare variables\n                $newPw = $pwdlib->createPasswordHash($post_new_pwd);\n\n                // Update user account\n                DB::update(\n                    prefixTable('users'),\n                    array(\n                        'private_key' => $hashedPrivateKey,\n                        'pw' => $newPw,\n                        'special' => 'none',\n                    ),\n                    'id = %i',\n                    $post_user_id\n                );\n\n                $superGlobal->put('private_key', $privateKey, 'SESSION', 'user');\n\n                return prepareExchangedData(\n                    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => false,\n                        'message' => langHdl('done'),'',\n                    ),\n                    'encode'\n                );\n            }\n            \n            // ERROR\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('bad_password'),\n                ),\n                'encode'\n            );\n        }\n    }\n        \n    return prepareExchangedData(\n        $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n        ),\n        'encode'\n    );\n}\n\n            \nfunction changeUserLDAPAuthenticationPassword(\n    int $post_user_id,\n    string $post_previous_pwd,\n    string $post_current_pwd,\n    array $SETTINGS\n)\n{\n    if (isUserIdValid($post_user_id) === true) {\n        // Get user info\n        $userData = DB::queryFirstRow(\n            'SELECT auth_type, login, private_key, special\n            FROM ' . prefixTable('users') . '\n            WHERE id = %i',\n            $post_user_id\n        );\n        \n        if (DB::count() > 0 && empty($userData['private_key']) === false) {\n            // Now check if current password is correct (only if not ldap)\n            if ($userData['auth_type'] === 'ldap' && $userData['special'] === 'auth-pwd-change') {\n                // As it is a change for an LDAP user\n                \n                // Now check if current password is correct\n                // For this, just check if it is possible to decrypt the privatekey\n                // And compare it to the one in session\n                $privateKey = decryptPrivateKey($post_previous_pwd, $userData['private_key']);\n\n                // Encrypt it with new password\n                $hashedPrivateKey = encryptPrivateKey($post_current_pwd, $privateKey);\n\n                // Update user account\n                DB::update(\n                    prefixTable('users'),\n                    array(\n                        'private_key' => $hashedPrivateKey,\n                        'special' => 'none',\n                    ),\n                    'id = %i',\n                    $post_user_id\n                );\n\n                // Load superGlobals\n                include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/protect/SuperGlobal/SuperGlobal.php';\n                $superGlobal = new protect\\SuperGlobal\\SuperGlobal();\n                $superGlobal->put('private_key', $privateKey, 'SESSION', 'user');\n\n                return prepareExchangedData(\n                    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => false,\n                        'message' => langHdl('done'),'',\n                    ),\n                    'encode'\n                );\n            }\n\n            // For this, just check if it is possible to decrypt the privatekey\n            // And try to decrypt one existing key\n            $privateKey = decryptPrivateKey($post_previous_pwd, $userData['private_key']);\n\n            if (empty($privateKey) === true) {\n                return prepareExchangedData(\n                    $SETTINGS['cpassman_dir'],\n                    array(\n                        'error' => true,\n                        'message' => langHdl('password_is_not_correct'),\n                    ),\n                    'encode'\n                );\n            }\n\n            // Test if possible to decvrypt one key\n            // Get one item\n            $record = DB::queryFirstRow(\n                'SELECT id, pw\n                FROM ' . prefixTable('items') . '\n                WHERE perso = 0'\n            );\n\n            // Get itemKey from current user\n            $currentUserKey = DB::queryFirstRow(\n                'SELECT share_key, increment_id\n                FROM ' . prefixTable('sharekeys_items') . '\n                WHERE object_id = %i AND user_id = %i',\n                $record['id'],\n                $post_user_id\n            );\n\n            if (count($currentUserKey) > 0) {\n                // Decrypt itemkey with user key\n                // use old password to decrypt private_key\n                $itemKey = decryptUserObjectKey($currentUserKey['share_key'], $privateKey);\n                \n                if (empty(base64_decode($itemKey)) === false) {\n                    // GOOD password\n                    // Encrypt it with current password\n                    $hashedPrivateKey = encryptPrivateKey($post_current_pwd, $privateKey);\n                    \n                    // Update user account\n                    DB::update(\n                        prefixTable('users'),\n                        array(\n                            'private_key' => $hashedPrivateKey,\n                            'special' => 'none',\n                        ),\n                        'id = %i',\n                        $post_user_id\n                    );\n                    \n                    // Load superGlobals\n                    include_once $SETTINGS['cpassman_dir'] . '/includes/libraries/protect/SuperGlobal/SuperGlobal.php';\n                    $superGlobal = new protect\\SuperGlobal\\SuperGlobal();\n                    $superGlobal->put('private_key', $privateKey, 'SESSION', 'user');\n\n                    return prepareExchangedData(\n                        $SETTINGS['cpassman_dir'],\n                        array(\n                            'error' => false,\n                            'message' => langHdl('done'),\n                        ),\n                        'encode'\n                    );\n                }\n            }\n            \n            // ERROR\n            return prepareExchangedData(\n                $SETTINGS['cpassman_dir'],\n                array(\n                    'error' => true,\n                    'message' => langHdl('bad_password'),\n                ),\n                'encode'\n            );\n        }\n    }\n\n    // ERROR\n    return prepareExchangedData(\n    $SETTINGS['cpassman_dir'],\n        array(\n            'error' => true,\n            'message' => langHdl('error_no_user'),\n        ),\n        'encode'\n    );\n}\n\n\nfunction increaseSessionDuration(\n    int $duration\n): string\n{\n    // check if session is not already expired.\n    if ($_SESSION['sessionDuration'] > time()) {\n        // Calculate end of session\n        $_SESSION['sessionDuration'] = (int) ($_SESSION['sessionDuration'] + $duration);\n        // Update table\n        DB::update(\n            prefixTable('users'),\n            array(\n                'session_end' => $_SESSION['sessionDuration'],\n            ),\n            'id = %i',\n            $_SESSION['user_id']\n        );\n        // Return data\n        return '[{\"new_value\":\"' . $_SESSION['sessionDuration'] . '\"}]';\n    }\n    \n    return '[{\"new_value\":\"expired\"}]';\n}"], "filenames": ["includes/core/load.js.php", "includes/core/logout.php", "index.php", "pages/users.js.php", "sources/main.queries.php"], "buggy_code_start_loc": [55, 97, 28, 882, 89], "buggy_code_end_loc": [55, 97, 220, 967, 90], "fixing_code_start_loc": [56, 98, 29, 883, 89], "fixing_code_end_loc": [70, 99, 232, 985, 90], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository nilsteampassnet/teampass prior to 3.0.9.", "other": {"cve": {"id": "CVE-2023-3083", "sourceIdentifier": "security@huntr.dev", "published": "2023-06-03T08:15:08.853", "lastModified": "2023-06-09T14:21:02.083", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository nilsteampassnet/teampass prior to 3.0.9."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 8.7, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.3, "impactScore": 5.8}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 0.9, "impactScore": 5.2}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:teampass:teampass:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.0.9", "matchCriteriaId": "1FBD6586-DC7F-4FD6-BB8D-9874CCFACB2E"}]}]}], "references": [{"url": "https://github.com/nilsteampassnet/teampass/commit/79731553fa305d45dabb7a227f3074d56d7c94c1", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/c6b29e46-02e0-43ad-920f-28ac482ea2ab", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/nilsteampassnet/teampass/commit/79731553fa305d45dabb7a227f3074d56d7c94c1"}}