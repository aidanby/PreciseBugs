{"buggy_code": ["<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2016 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDTool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/* set default action */\nset_default_action();\n\n/* Get the username */\nif (read_config_option('auth_method') == '2') {\n\t/* Get the Web Basic Auth username and set action so we login right away */\n\tset_request_var('action', 'login');\n\n\tif (isset($_SERVER['PHP_AUTH_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['PHP_AUTH_USER']);\n\t}elseif (isset($_SERVER['REMOTE_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['REMOTE_USER']);\n\t}elseif (isset($_SERVER['REDIRECT_REMOTE_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['REDIRECT_REMOTE_USER']);\n\t}elseif (isset($_SERVER['HTTP_PHP_AUTH_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['HTTP_PHP_AUTH_USER']);\n\t}elseif (isset($_SERVER['HTTP_REMOTE_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['HTTP_REMOTE_USER']);\n\t}elseif (isset($_SERVER['HTTP_REDIRECT_REMOTE_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['HTTP_REDIRECT_REMOTE_USER']);\n\n\t}else{\n\t\t/* No user - Bad juju! */\n\t\t$username = '';\n\t\tcacti_log('ERROR: No username passed with Web Basic Authentication enabled.', false, 'AUTH');\n\t\tauth_display_custom_error_message( __('Web Basic Authentication configured, but no username was passed from the web server. Please make sure you have authentication enabled on the web server.') );\n\t\texit;\n\t}\n}else{\n\tif (get_nfilter_request_var('action') == 'login') {\n\t\t/* LDAP and Builtin get username from Form */\n\t\t$username = get_nfilter_request_var('login_username');\n\t}else{\n\t\t$username = '';\n\t}\n}\n\n$username = sanitize_search_string($username);\n$version  = db_fetch_cell('SELECT cacti FROM version');\n\n/* process login */\n$copy_user    = false;\n$user_auth    = false;\n$user_enabled = 1;\n$ldap_error   = false;\n$ldap_error_message = '';\n$realm        = 0;\n\nif (get_nfilter_request_var('action') == 'login') {\n\tif (get_nfilter_request_var('realm') == 'local') {\n\t\t$auth_method = 1;\n\t}else{\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tswitch ($auth_method) {\n\tcase '0':\n\t\t/* No auth, no action, also shouldn't get here */\n\t\texit;\n\n\t\tbreak;\n\tcase '2':\n\t\t/* Web Basic Auth */\n\t\t$copy_user = true;\n\t\t$user_auth = true;\n\t\t$realm = 2;\n\t\t/* Locate user in database */\n\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE username = ? AND realm = 2', array($username));\n\n\t\tif (!$user && read_config_option('user_template') == '0') {\n\t\t\tcacti_log(\"ERROR: User '\" . $username . \"' authenticated by Web Server, but a Template User is not defined in Cacti.  Exiting.\", false, 'AUTH');\n\t\t\t$username = htmlspecialchars($username);\n\t\t\tauth_display_custom_error_message( __('%s authenticated by Web Server, but a Template User is not defined in Cacti.', $username) );\n\t\t\texit;\t\t\t\n\t\t}\n\n\t\tbreak;\n\tcase '3':\n\t\t/* LDAP Auth */\n \t\tif ((get_nfilter_request_var('realm') == 'ldap') && (strlen(get_nfilter_request_var('login_password')) > 0)) {\n\t\t\t/* include LDAP lib */\n\t\t\tinclude_once('./lib/ldap.php');\n\n\t\t\t/* get user DN */\n\t\t\t$ldap_dn_search_response = cacti_ldap_search_dn($username);\n\t\t\tif ($ldap_dn_search_response['error_num'] == '0') {\n\t\t\t\t$ldap_dn = $ldap_dn_search_response['dn'];\n\t\t\t}else{\n\t\t\t\t/* Error searching */\n\t\t\t\tcacti_log('LOGIN: LDAP Error: ' . $ldap_dn_search_response['error_text'], false, 'AUTH');\n\t\t\t\t$ldap_error = true;\n\t\t\t\t$ldap_error_message =  __('LDAP Search Error: %s', $ldap_dn_search_response['error_text']);\n\t\t\t\t$user_auth = false;\n\t\t\t\t$user = array();\n\t\t\t}\n\n\t\t\tif (!$ldap_error) {\n\t\t\t\t/* auth user with LDAP */\n\t\t\t\t$ldap_auth_response = cacti_ldap_auth($username,stripslashes(get_nfilter_request_var('login_password')),$ldap_dn);\n\n\t\t\t\tif ($ldap_auth_response['error_num'] == '0') {\n\t\t\t\t\t/* User ok */\n\t\t\t\t\t$user_auth = true;\n\t\t\t\t\t$copy_user = true;\n\t\t\t\t\t$realm = 1;\n\t\t\t\t\t/* Locate user in database */\n\t\t\t\t\tcacti_log(\"LOGIN: LDAP User '\" . $username . \"' Authenticated\", false, 'AUTH');\n\t\t\t\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE username = ? AND realm = 1', array($username));\n\t\t\t\t}else{\n\t\t\t\t\t/* error */\n\t\t\t\t\tcacti_log('LOGIN: LDAP Error: ' . $ldap_auth_response['error_text'], false, 'AUTH');\n\t\t\t\t\t$ldap_error = true;\n\t\t\t\t\t$ldap_error_message = __('LDAP Error: %s', $ldap_auth_response['error_text']);\n\t\t\t\t\t$user_auth = false;\n\t\t\t\t\t$user = array();\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tbreak;\n\tcase '4':\n\t\tdomains_login_process();\n\n\t\tbreak;\n\tdefault:\n\t\tsecpass_login_process();\n\n\t\tif (!api_plugin_hook_function('login_process', false)) {\n\t\t\t/* Builtin Auth */\n\t\t\t$user = array();\n\t\t\tif ((!$user_auth) && (!$ldap_error)) {\n\t\t\t\t$stored_pass = db_fetch_cell_prepared('SELECT password FROM user_auth WHERE username = ? AND realm = 0', array($username));\n\n\t\t\t\tif ($stored_pass != '') {\n\t\t\t\t\tif (function_exists('password_verify')) {\n\t\t\t\t\t\t$p = get_nfilter_request_var('login_password');\n\n\t\t\t\t\t\tif (password_verify($p, $stored_pass)) {\n\t\t\t\t\t\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE username = ? AND realm = 0', array($username));\n\n\t\t\t\t\t\t\tif (password_needs_rehash($p, PASSWORD_DEFAULT)) {\n\t\t\t\t\t\t\t\t$p = password_hash($p, PASSWORD_DEFAULT);\n\t\t\t\t\t\t\t\tdb_execute_prepared('UPDATE user_auth SET password = ? WHERE username = ?', array($p, $username));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!sizeof($user)) {\n\t\t\t\t\t\t$p = md5(get_nfilter_request_var('login_password'));\n\t\t\t\t\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE username = ? AND password = ? AND realm = 0', array($username, $p));\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t$user = array();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t/* end of switch */\n\n\t/* Create user from template if requested */\n\tif ((!sizeof($user)) && ($copy_user) && (read_config_option('user_template') != '0') && (strlen($username) > 0)) {\n\t\tcacti_log(\"WARN: User '\" . $username . \"' does not exist, copying template user\", false, 'AUTH');\n\t\t/* check that template user exists */\n\t\tif (db_fetch_row_prepared('SELECT id FROM user_auth WHERE username = ? AND realm = 0', array(read_config_option('user_template')))) {\n\t\t\t/* template user found */\n\t\t\tuser_copy(read_config_option('user_template'), $username, 0, $realm);\n\t\t\t/* requery newly created user */\n\t\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE username = ? AND realm = ?', array($username, $realm));\n\t\t}else{\n\t\t\t/* error */\n\t\t\tcacti_log(\"LOGIN: Template user '\" . read_config_option('user_template') . \"' does not exist.\", false, 'AUTH');\n\t\t\tauth_display_custom_error_message( __('Template user %s does not exist.', read_config_option('user_template')) );\n\t\t\texit;\n\t\t}\n\t}\n\n\t/* Guest account checking - Not for builtin */\n\t$guest_user = false;\n\tif ((!sizeof($user)) && ($user_auth) && (read_config_option('guest_user') != '0')) {\n\t\t/* Locate guest user record */\n\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE username = ?', array(read_config_option('guest_user')));\n\t\tif ($user) {\n\t\t\tcacti_log(\"LOGIN: Authenticated user '\" . $username . \"' using guest account '\" . $user['username'] . \"'\", false, 'AUTH');\n\t\t\t$guest_user = true;\n\t\t}else{\n\t\t\t/* error */\n\t\t\tauth_display_custom_error_message( __('Guest user %s does not exist.', read_config_option('guest_user')) );\n\t\t\tcacti_log(\"LOGIN: Unable to locate guest user '\" . read_config_option('guest_user') . \"'\", false, 'AUTH');\n\t\t\texit;\n\t\t}\n\t}\n\n\t/* Process the user  */\n\tif (sizeof($user)) {\n\t\tcacti_log(\"LOGIN: User '\" . $user['username'] . \"' Authenticated\", false, 'AUTH');\n\t\tdb_execute_prepared('INSERT IGNORE INTO user_log (username, user_id, result, ip, time) VALUES (?, ?, 1, ?, NOW())', array($username, $user['id'], $_SERVER['REMOTE_ADDR']));\n\n\t\t/* is user enabled */\n\t\t$user_enabled = $user['enabled'];\n\t\tif ($user_enabled != 'on') {\n\t\t\t/* Display error */\n\t\t\tauth_display_custom_error_message( __('Access Denied, user account disabled.') );\n\t\t\texit;\n\t\t}\n\n\t\t/* remember this user */\n\t\tif (isset_request_var('remember_me') && read_config_option('auth_cache_enabled') == 'on') {\n\t\t\tset_auth_cookie($user);\n\t\t}\n\n\t\t/* set the php session */\n\t\t$_SESSION['sess_user_id'] = $user['id'];\n\n\t\t/* handle 'force change password' */\n\t\tif (($user['must_change_password'] == 'on') && (read_config_option('auth_method') == 1)) {\n\t\t\t$_SESSION['sess_change_password'] = true;\n\t\t}\n\n\t\t$group_options = db_fetch_cell_prepared('SELECT MAX(login_opts)\n\t\t\tFROM user_auth_group AS uag\n\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\tON uag.id=uagm.group_id\n\t\t\tWHERE user_id=?', array($_SESSION['sess_user_id']));\n\n\t\tif ($group_options > 0) {\n\t\t\t$user['login_opts'] = $group_options;\n\t\t}\n\n\t\t$newtheme = false;\n\t\tif (user_setting_exists('selected_theme', $_SESSION['sess_user_id']) && read_config_option('selected_theme') != read_user_setting('selected_theme')) {\n\t\t\tunset($_SESSION['selected_theme']);\n\t\t\t$newtheme = true;\n\t\t}\n\n\t\t/* ok, at the point the user has been sucessfully authenticated; so we must\n\t\tdecide what to do next */\n\t\tswitch ($user['login_opts']) {\n\t\t\tcase '1': /* referer */\n\t\t\t\t/* because we use plugins, we can't redirect back to graph_view.php if they don't\n\t\t\t\t * have console access\n\t\t\t\t */\n\t\t\t\tif (isset($_SERVER[\"REDIRECT_URL\"])) {\n\t\t\t\t\t$referer = $_SERVER[\"REDIRECT_URL\"];\n\t\t\t\t\tif (isset($_SERVER[\"REDIRECT_QUERY_STRING\"])) {\n\t\t\t\t\t\t$referer .= '?' . $_SERVER[\"REDIRECT_QUERY_STRING\"] . ($newtheme ? '?newtheme=1':'');\n\t\t\t\t\t}\n\t\t\t\t} else if (isset($_SERVER['HTTP_REFERER'])) {\n\t\t\t\t\t$referer = $_SERVER['HTTP_REFERER'];\n\t\t\t\t\tif (basename($referer) == 'logout.php') {\n\t\t\t\t\t\t$referer = $config['url_path'] . 'index.php' . ($newtheme ? '?newtheme=1':'');\n\t\t\t\t\t}\n\t\t\t\t} else if (isset($_SERVER['REQUEST_URI'])) {\n\t\t\t\t\t$referer = $_SERVER['REQUEST_URI'];\n\t\t\t\t\tif (basename($referer) == 'logout.php') {\n\t\t\t\t\t\t$referer = $config['url_path'] . 'index.php' . ($newtheme ? '?newtheme=1':'');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$referer = $config['url_path'] . 'index.php' . ($newtheme ? '?newtheme=1':'');\n\t\t\t\t}\n\n\t\t\t\tif (substr_count($referer, 'plugins')) {\n\t\t\t\t\theader('Location: ' . $referer);\n\t\t\t\t} elseif (sizeof(db_fetch_assoc_prepared('SELECT realm_id FROM user_auth_realm WHERE realm_id = 8 AND user_id = ?', array($_SESSION['sess_user_id']))) == 0) {\n\t\t\t\t\theader('Location: graph_view.php' . ($newtheme ? '?newtheme=1':''));\n\t\t\t\t} else {\n\t\t\t\t\theader(\"Location: $referer\" . ($newtheme ? '?newtheme=1':''));\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase '2': /* default console page */\n\t\t\t\theader('Location: ' . $config['url_path'] . 'index.php' . ($newtheme ? '?newtheme=1':''));\n\n\t\t\t\tbreak;\n\t\t\tcase '3': /* default graph page */\n\t\t\t\theader('Location: ' . $config['url_path'] . 'graph_view.php' . ($newtheme ? '?newtheme=1':''));\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tapi_plugin_hook_function('login_options_navigate', $user['login_opts']);\n\t\t}\n\t\texit;\n\t}else{\n\t\tif ((!$guest_user) && ($user_auth)) {\n\t\t\t/* No guest account defined */\n\t\t\tauth_display_custom_error_message( __('Access Denied, please contact you Cacti Administrator.') );\n\t\t\tcacti_log('LOGIN: Access Denied, No guest enabled or template user to copy', false, 'AUTH');\n\t\t\texit;\n\t\t}else{\n\t\t\t/* BAD username/password builtin and LDAP */\n\t\t\tdb_execute_prepared('INSERT IGNORE INTO user_log (username, user_id, result, ip, time) VALUES (?, 0, 0, ?, NOW())', array($username, $_SERVER['REMOTE_ADDR']));\n\t\t}\n\t}\n}\n\n/* auth_display_custom_error_message - displays a custom error message to the browser that looks like\n     the pre-defined error messages\n   @arg $message - the actual text of the error message to display */\nfunction auth_display_custom_error_message($message) {\n\t/* kill the session */\n\tsetcookie(session_name(),'',time() - 3600,'/');\n\t/* print error */\n\tprint '<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">';\n\tprint \"<html>\\n<head>\\n\";\n\tprint '     <title>' . 'Cacti' . \"</title>\\n\";\n\tprint \"     <meta http-equiv='Content-Type' content='text/html;charset=utf-8'>\";\n\tprint \"     <link href=\\\"include/main.css\\\" type=\\\"text/css\\\" rel=\\\"stylesheet\\\">\";\n\tprint \"</head>\\n\";\n\tprint \"<body>\\n<br><br>\\n\";\n\tdisplay_custom_error_message($message);\n\tprint \"</body>\\n</html>\\n\";\n}\n\nfunction domains_login_process() {\n\tglobal $user, $realm, $username, $user_auth, $ldap_error, $ldap_error_message;\n\n\tif (is_numeric(get_nfilter_request_var('realm')) && (strlen(get_nfilter_request_var('login_password')) > 0)) {\n\t\t/* include LDAP lib */\n\t\tinclude_once('./lib/ldap.php');\n\n\t\t/* get user DN */\n\t\t$ldap_dn_search_response = domains_ldap_search_dn($username, get_nfilter_request_var('realm'));\n\t\tif ($ldap_dn_search_response['error_num'] == '0') {\n\t\t\t$ldap_dn = $ldap_dn_search_response['dn'];\n\t\t}else{\n\t\t\t/* Error searching */\n\t\t\tcacti_log('LOGIN: LDAP Error: ' . $ldap_dn_search_response['error_text'], false, 'AUTH');\n\t\t\t$ldap_error = true;\n\t\t\t$ldap_error_message = __('LDAP Search Error: %s', $ldap_dn_search_response['error_text']);\n\t\t\t$user_auth = false;\n\t\t\t$user = array();\n\t\t}\n\n\t\tif (!$ldap_error) {\n\t\t\t/* auth user with LDAP */\n\t\t\t$ldap_auth_response = domains_ldap_auth($username, stripslashes(get_nfilter_request_var('login_password')), $ldap_dn, get_nfilter_request_var('realm'));\n\n\t\t\tif ($ldap_auth_response['error_num'] == '0') {\n\t\t\t\t/* User ok */\n\t\t\t\t$user_auth = true;\n\t\t\t\t$copy_user = true;\n\t\t\t\t$realm = get_nfilter_request_var('realm');\n\t\t\t\t/* Locate user in database */\n\t\t\t\tcacti_log(\"LOGIN: LDAP User '\" . $username . \"' Authenticated from Domain '\" . db_fetch_cell('SELECT domain_name FROM user_domains WHERE domain_id=' . ($realm-1000)) . \"'\", false, 'AUTH');\n\t\t\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE username = ? AND realm = ?', array($username, $realm));\n\n\t\t\t\t/* Create user from template if requested */\n\t\t\t\t$template_user = db_fetch_cell_prepared('SELECT user_id FROM user_domains WHERE domain_id = ?', array(get_nfilter_request_var('realm')-1000));\n\t\t\t\t$template_username = db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array($template_user));\n\t\t\t\tif ((!sizeof($user)) && ($copy_user) && ($template_user != '0') && (strlen($username) > 0)) {\n\t\t\t\t\tcacti_log(\"WARN: User '\" . $username . \"' does not exist, copying template user\", false, 'AUTH');\n\t\t\t\t\t/* check that template user exists */\n\t\t\t\t\tif (db_fetch_row_prepared('SELECT id FROM user_auth WHERE id = ? AND realm = 0', array($template_user))) {\n\t\t\t\t\t\t/* template user found */\n\t\t\t\t\t\tuser_copy($template_username, $username, 0, $realm);\n\t\t\t\t\t\t/* requery newly created user */\n\t\t\t\t\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE username = ? AND realm = ?', array($username, $realm));\n\t\t\t\t\t}else{\n\t\t\t\t\t\t/* error */\n\t\t\t\t\t\tcacti_log(\"LOGIN: Template user '\" . $template_username . \"' does not exist.\", false, 'AUTH');\n\t\t\t\t\t\tauth_display_custom_error_message( __('Template user %s does not exist.', $template_username) );\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t/* error */\n\t\t\t\tcacti_log('LOGIN: LDAP Error: ' . $ldap_auth_response['error_text'], false, 'AUTH');\n\t\t\t\t$ldap_error = true;\n\t\t\t\t$ldap_error_message = __('LDAP Error: %s', $ldap_auth_response['error_text']);\n\t\t\t\t$user_auth = false;\n\t\t\t\t$user = array();\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nfunction domains_ldap_auth($username, $password = '', $dn = '', $realm) {\n\t$ldap = new Ldap;\n\n\tif (!empty($username)) $ldap->username = $username;\n\tif (!empty($password)) $ldap->password = $password;\n\tif (!empty($dn))       $ldap->dn       = $dn;\n\n\t$ld = db_fetch_row_prepared('SELECT * FROM user_domains_ldap WHERE domain_id = ?', array($realm-1000));\n\n\tif (sizeof($ld)) {\n\t\tif (!empty($ld['dn']))                $ldap->dn                = $ld['dn'];\n\t\tif (!empty($ld['server']))            $ldap->host              = $ld['server'];\n\t\tif (!empty($ld['port']))              $ldap->port              = $ld['port'];\n\t\tif (!empty($ld['port_ssl']))          $ldap->port_ssl          = $ld['port_ssl'];\n\t\tif (!empty($ld['proto_version']))     $ldap->version           = $ld['proto_version'];\n\t\tif (!empty($ld['encryption']))        $ldap->encryption        = $ld['encryption'];\n\t\tif (!empty($ld['referrals']))         $ldap->referrals         = $ld['referrals'];\n\t\tif (!empty($ld['group_require']))     $ldap->group_require     = $ld['group_require'];\n\t\tif (!empty($ld['group_dn']))          $ldap->group_dn          = $ld['group_dn'];\n\t\tif (!empty($ld['group_attrib']))      $ldap->group_attrib      = $ld['group_attrib'];\n\t\tif (!empty($ld['group_member_type'])) $ldap->group_member_type = $ld['group_member_type'];\n\n\t\treturn $ldap->Authenticate();\n\t}else{\n\t\treturn false;\n\t}\n}\n\nfunction domains_ldap_search_dn($username, $realm) {\n\t$ldap = new Ldap;\n\n\tif (!empty($username)) $ldap->username = $username;\n\n\t$ld = db_fetch_row_prepared('SELECT * FROM user_domains_ldap WHERE domain_id = ?', array($realm-1000));\n\n\tif (sizeof($ld)) {\n\t\tif (!empty($ld['dn']))                $ldap->dn                = $ld['dn'];\n\t\tif (!empty($ld['server']))            $ldap->host              = $ld['server'];\n\t\tif (!empty($ld['port']))              $ldap->port              = $ld['port'];\n\t\tif (!empty($ld['port_ssl']))          $ldap->port_ssl          = $ld['port_ssl'];\n\t\tif (!empty($ld['proto_version']))     $ldap->version           = $ld['proto_version'];\n\t\tif (!empty($ld['encryption']))        $ldap->encryption        = $ld['encryption'];\n\t\tif (!empty($ld['referrals']))         $ldap->referrals         = $ld['referrals'];\n\t\tif (!empty($ld['mode']))              $ldap->group_require     = $ld['mode'];\n\t\tif (!empty($ld['search_base']))       $ldap->group_dn          = $ld['search_base'];\n\t\tif (!empty($ld['search_filter']))     $ldap->group_attrib      = $ld['search_filter'];\n\t\tif (!empty($ld['specific_dn']))       $ldap->group_member_type = $ld['specific_dn'];\n\t\tif (!empty($ld['specific_password'])) $ldap->group_member_type = $ld['specific_password'];\n\n\t\treturn $ldap->Search();\n\t}else{\n\t\treturn false;\n\t}\n}\n\nif (api_plugin_hook_function('custom_login', OPER_MODE_NATIVE) == OPER_MODE_RESKIN) {\n\treturn;\n}\n?>\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n\t<title><?php print api_plugin_hook_function('login_title', __('Login to Cacti'));?></title>\n\t<meta http-equiv='Content-Type' content='text/html;charset=utf-8'>\n\t<link href='<?php echo $config['url_path']; ?>include/themes/<?php print get_selected_theme();?>/main.css' type='text/css' rel='stylesheet'>\n\t<link href='<?php echo $config['url_path']; ?>include/themes/<?php print get_selected_theme();?>/jquery-ui.css' type='text/css' rel='stylesheet'>\n\t<link href='<?php echo $config['url_path']; ?>images/favicon.ico' rel='shortcut icon'>\n\t<script type='text/javascript' src='<?php echo $config['url_path']; ?>include/js/jquery.js' language='javascript'></script>\n\t<script type='text/javascript' src='<?php echo $config['url_path']; ?>include/js/jquery-ui.js' language='javascript'></script>\n\t<script type='text/javascript' src='<?php echo $config['url_path']; ?>include/js/jquery.cookie.js' language='javascript'></script>\n\t<script type='text/javascript' src='<?php echo $config['url_path']; ?>include/js/jquery.hotkeys.js'></script>\n\t<script type='text/javascript' src='<?php echo $config['url_path']; ?>include/js/jquery.metadata.js'></script>\n\t<script type='text/javascript' src='<?php echo $config['url_path']; ?>include/js/jquery.tablesorter.js'></script>\n\t<script type='text/javascript' src='<?php echo $config['url_path']; ?>include/layout.js'></script>\n\t<script type='text/javascript' src='<?php echo $config['url_path']; ?>include/themes/<?php print get_selected_theme();?>/main.js'></script>\n\t<script type='text/javascript'>var theme='<?php print get_selected_theme();?>';</script>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t\t$('#login_username').focus();\n\t});\n\t</script>\n</head>\n<body class='loginBody'>\n\t<div class='loginLeft'></div>\n\t<div class='loginCenter'>\n\t<div class='loginArea'>\n\t\t<div class='cactiLoginLogo'></div>\n\t\t\t<legend><?php print __('User Login');?></legend>\n\t\t\t<form name='login' method='post' action='<?php print basename($_SERVER['PHP_SELF']);?>'>\n\t\t\t\t<input type='hidden' name='action' value='login'>\n\t\t\t\t<?php api_plugin_hook_function('login_before', \n\t\t\t\t\tarray(\n\t\t\t\t\t\t'ldap_error' => $ldap_error, \n\t\t\t\t\t\t'ldap_error_message' => $ldap_error_message, \n\t\t\t\t\t\t'username' => $username, \n\t\t\t\t\t\t'user_enabled' => $user_enabled, \n\t\t\t\t\t\t'action' => get_nfilter_request_var('action'))); \n\t\t\t\t?>\n\t\t\t\t<div class='loginTitle'>\n\t\t\t\t\t<p><? print __('Enter your Username and Password below');?></p>\n\t\t\t\t</div>\n\t\t\t\t<div class='cactiLogin'>\n\t\t\t\t\t<table class='cactiLoginTable'>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<label for='login_username'><?php print __('Username');?></label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='text' id='login_username' name='login_username' value='<?php print htmlspecialchars($username, ENT_QUOTES); ?>' placeholder='<?php print __('Username');?>'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<label for='login_password'><?php print __('Password');?></label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='password' id='login_password' name='login_password' placeholder='********'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif (read_config_option('auth_method') == '3' || read_config_option('auth_method') == '4') {\n\t\t\t\t\t\t\tif (read_config_option('auth_method') == '3') {\n\t\t\t\t\t\t\t\t$realms = api_plugin_hook_function('login_realms', \n\t\t\t\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t\t\t\t'local' => array(\n\t\t\t\t\t\t\t\t\t\t\t'name' => 'Local', \n\t\t\t\t\t\t\t\t\t\t\t'selected' => false\n\t\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\t\t'ldap' => array(\n\t\t\t\t\t\t\t\t\t\t\t'name' => 'LDAP', \n\t\t\t\t\t\t\t\t\t\t\t'selected' => true\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t$realms = get_auth_realms(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<label for='realm'><?php print __('Realm');?></label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<select id='realm' name='realm'><?php\n\t\t\t\t\t\t\t\t\tif (sizeof($realms)) {\n\t\t\t\t\t\t\t\t\tforeach($realms as $name => $realm) {\n\t\t\t\t\t\t\t\t\t\tprint \"\\t\\t\\t\\t\\t<option value='\" . $name . \"'\" . ($realm['selected'] ? ' selected':'') . '>' . htmlspecialchars($realm['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t<?php } if (read_config_option('auth_cache_enabled') == 'on') { ?>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colspan='2'>\n\t\t\t\t\t\t\t\t<label for='remember_me'><input style='vertical-align:-3px;' type='checkbox' id='remember_me' name='remember_me' <?php print (isset($_COOKIE['cacti_remembers']) ? 'checked':'');?>><?php print __('Keep me signed in');?></label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td cospan='2'>\n\t\t\t\t\t\t\t\t<input type='submit' value='<?php print __('Login');?>'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t<?php api_plugin_hook('login_after'); ?>\n\t\t\t</form>\n\t\t\t<div class='loginErrors'>\n\t\t\t\t<?php\n\t\t\t\tif ($ldap_error) {\n\t\t\t\t\tprint $ldap_error_message;\n\t\t\t\t}else{\n\t\t\t\t\tif (get_nfilter_request_var('action') == 'login') {\n\t\t\t\t\t\tprint __('Invalid User Name/Password Please Retype');\n\t\t\t\t\t}\n\t\t\t\t\tif ($user_enabled == '0') {\n\t\t\t\t\t\tprint __('User Account Disabled');\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t\t?>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class='versionInfo'><?php print __('Version %1$s | %2$s', $version, COPYRIGHT_YEARS_SHORT);?></div>\n\t</div>\n\t<div class='loginRight'></div>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('body').css('height', $(window).height());\n\t\t$('.loginLeft').css('width',parseInt($(window).width()*0.33)+'px');\n\t\t$('.loginRight').css('width',parseInt($(window).width()*0.33)+'px');\n\t});\n\t</script>\n</body>\n</html>\n"], "fixing_code": ["<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2016 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDTool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/* set default action */\nset_default_action();\n\n/* Get the username */\nif (read_config_option('auth_method') == '2') {\n\t/* Get the Web Basic Auth username and set action so we login right away */\n\tset_request_var('action', 'login');\n\n\tif (isset($_SERVER['PHP_AUTH_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['PHP_AUTH_USER']);\n\t}elseif (isset($_SERVER['REMOTE_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['REMOTE_USER']);\n\t}elseif (isset($_SERVER['REDIRECT_REMOTE_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['REDIRECT_REMOTE_USER']);\n\t}elseif (isset($_SERVER['HTTP_PHP_AUTH_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['HTTP_PHP_AUTH_USER']);\n\t}elseif (isset($_SERVER['HTTP_REMOTE_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['HTTP_REMOTE_USER']);\n\t}elseif (isset($_SERVER['HTTP_REDIRECT_REMOTE_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['HTTP_REDIRECT_REMOTE_USER']);\n\n\t}else{\n\t\t/* No user - Bad juju! */\n\t\t$username = '';\n\t\tcacti_log('ERROR: No username passed with Web Basic Authentication enabled.', false, 'AUTH');\n\t\tauth_display_custom_error_message( __('Web Basic Authentication configured, but no username was passed from the web server. Please make sure you have authentication enabled on the web server.') );\n\t\texit;\n\t}\n}else{\n\tif (get_nfilter_request_var('action') == 'login') {\n\t\t/* LDAP and Builtin get username from Form */\n\t\t$username = get_nfilter_request_var('login_username');\n\t}else{\n\t\t$username = '';\n\t}\n}\n\n$username = sanitize_search_string($username);\n$version  = db_fetch_cell('SELECT cacti FROM version');\n\n/* process login */\n$copy_user    = false;\n$user_auth    = false;\n$user_enabled = 1;\n$ldap_error   = false;\n$ldap_error_message = '';\n$realm        = 0;\n\nif (get_nfilter_request_var('action') == 'login') {\n\tif (get_nfilter_request_var('realm') == 'local') {\n\t\t$auth_method = 1;\n\t}else{\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tswitch ($auth_method) {\n\tcase '0':\n\t\t/* No auth, no action, also shouldn't get here */\n\t\texit;\n\n\t\tbreak;\n\tcase '2':\n\t\t/* Web Basic Auth */\n\t\t$copy_user = true;\n\t\t$user_auth = true;\n\t\t$realm = 2;\n\t\t/* Locate user in database */\n\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE username = ? AND realm = 2', array($username));\n\n\t\tif (!$user && read_config_option('user_template') == '0' && read_config_option('guest_user') == '0') {\n\t\t\tcacti_log(\"ERROR: User '\" . $username . \"' authenticated by Web Server, but both Template and Guest Users are not defined in Cacti.  Exiting.\", false, 'AUTH');\n\t\t\t$username = htmlspecialchars($username);\n\t\t\tauth_display_custom_error_message( __('%s authenticated by Web Server, but both Template and Guest Users are not defined in Cacti.', $username) );\n\t\t\texit;\t\t\t\n\t\t}\n\n\t\tbreak;\n\tcase '3':\n\t\t/* LDAP Auth */\n \t\tif ((get_nfilter_request_var('realm') == 'ldap') && (strlen(get_nfilter_request_var('login_password')) > 0)) {\n\t\t\t/* include LDAP lib */\n\t\t\tinclude_once('./lib/ldap.php');\n\n\t\t\t/* get user DN */\n\t\t\t$ldap_dn_search_response = cacti_ldap_search_dn($username);\n\t\t\tif ($ldap_dn_search_response['error_num'] == '0') {\n\t\t\t\t$ldap_dn = $ldap_dn_search_response['dn'];\n\t\t\t}else{\n\t\t\t\t/* Error searching */\n\t\t\t\tcacti_log('LOGIN: LDAP Error: ' . $ldap_dn_search_response['error_text'], false, 'AUTH');\n\t\t\t\t$ldap_error = true;\n\t\t\t\t$ldap_error_message =  __('LDAP Search Error: %s', $ldap_dn_search_response['error_text']);\n\t\t\t\t$user_auth = false;\n\t\t\t\t$user = array();\n\t\t\t}\n\n\t\t\tif (!$ldap_error) {\n\t\t\t\t/* auth user with LDAP */\n\t\t\t\t$ldap_auth_response = cacti_ldap_auth($username,stripslashes(get_nfilter_request_var('login_password')),$ldap_dn);\n\n\t\t\t\tif ($ldap_auth_response['error_num'] == '0') {\n\t\t\t\t\t/* User ok */\n\t\t\t\t\t$user_auth = true;\n\t\t\t\t\t$copy_user = true;\n\t\t\t\t\t$realm = 1;\n\t\t\t\t\t/* Locate user in database */\n\t\t\t\t\tcacti_log(\"LOGIN: LDAP User '\" . $username . \"' Authenticated\", false, 'AUTH');\n\t\t\t\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE username = ? AND realm = 1', array($username));\n\t\t\t\t}else{\n\t\t\t\t\t/* error */\n\t\t\t\t\tcacti_log('LOGIN: LDAP Error: ' . $ldap_auth_response['error_text'], false, 'AUTH');\n\t\t\t\t\t$ldap_error = true;\n\t\t\t\t\t$ldap_error_message = __('LDAP Error: %s', $ldap_auth_response['error_text']);\n\t\t\t\t\t$user_auth = false;\n\t\t\t\t\t$user = array();\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tbreak;\n\tcase '4':\n\t\tdomains_login_process();\n\n\t\tbreak;\n\tdefault:\n\t\tsecpass_login_process();\n\n\t\tif (!api_plugin_hook_function('login_process', false)) {\n\t\t\t/* Builtin Auth */\n\t\t\t$user = array();\n\t\t\tif ((!$user_auth) && (!$ldap_error)) {\n\t\t\t\t$stored_pass = db_fetch_cell_prepared('SELECT password FROM user_auth WHERE username = ? AND realm = 0', array($username));\n\n\t\t\t\tif ($stored_pass != '') {\n\t\t\t\t\tif (function_exists('password_verify')) {\n\t\t\t\t\t\t$p = get_nfilter_request_var('login_password');\n\n\t\t\t\t\t\tif (password_verify($p, $stored_pass)) {\n\t\t\t\t\t\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE username = ? AND realm = 0', array($username));\n\n\t\t\t\t\t\t\tif (password_needs_rehash($p, PASSWORD_DEFAULT)) {\n\t\t\t\t\t\t\t\t$p = password_hash($p, PASSWORD_DEFAULT);\n\t\t\t\t\t\t\t\tdb_execute_prepared('UPDATE user_auth SET password = ? WHERE username = ?', array($p, $username));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!sizeof($user)) {\n\t\t\t\t\t\t$p = md5(get_nfilter_request_var('login_password'));\n\t\t\t\t\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE username = ? AND password = ? AND realm = 0', array($username, $p));\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t$user = array();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t/* end of switch */\n\n\t/* Create user from template if requested */\n\tif ((!sizeof($user)) && ($copy_user) && (read_config_option('user_template') != '0') && (strlen($username) > 0)) {\n\t\tcacti_log(\"WARN: User '\" . $username . \"' does not exist, copying template user\", false, 'AUTH');\n\t\t/* check that template user exists */\n\t\tif (db_fetch_row_prepared('SELECT id FROM user_auth WHERE username = ? AND realm = 0', array(read_config_option('user_template')))) {\n\t\t\t/* template user found */\n\t\t\tuser_copy(read_config_option('user_template'), $username, 0, $realm);\n\t\t\t/* requery newly created user */\n\t\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE username = ? AND realm = ?', array($username, $realm));\n\t\t}else{\n\t\t\t/* error */\n\t\t\tcacti_log(\"LOGIN: Template user '\" . read_config_option('user_template') . \"' does not exist.\", false, 'AUTH');\n\t\t\tauth_display_custom_error_message( __('Template user %s does not exist.', read_config_option('user_template')) );\n\t\t\texit;\n\t\t}\n\t}\n\n\t/* Guest account checking - Not for builtin */\n\t$guest_user = false;\n\tif ((!sizeof($user)) && ($user_auth) && (read_config_option('guest_user') != '0')) {\n\t\t/* Locate guest user record */\n\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE username = ?', array(read_config_option('guest_user')));\n\t\tif ($user) {\n\t\t\tcacti_log(\"LOGIN: Authenticated user '\" . $username . \"' using guest account '\" . $user['username'] . \"'\", false, 'AUTH');\n\t\t\t$guest_user = true;\n\t\t}else{\n\t\t\t/* error */\n\t\t\tauth_display_custom_error_message( __('Guest user %s does not exist.', read_config_option('guest_user')) );\n\t\t\tcacti_log(\"LOGIN: Unable to locate guest user '\" . read_config_option('guest_user') . \"'\", false, 'AUTH');\n\t\t\texit;\n\t\t}\n\t}\n\n\t/* Process the user  */\n\tif (sizeof($user)) {\n\t\tcacti_log(\"LOGIN: User '\" . $user['username'] . \"' Authenticated\", false, 'AUTH');\n\t\tdb_execute_prepared('INSERT IGNORE INTO user_log (username, user_id, result, ip, time) VALUES (?, ?, 1, ?, NOW())', array($username, $user['id'], $_SERVER['REMOTE_ADDR']));\n\n\t\t/* is user enabled */\n\t\t$user_enabled = $user['enabled'];\n\t\tif ($user_enabled != 'on') {\n\t\t\t/* Display error */\n\t\t\tauth_display_custom_error_message( __('Access Denied, user account disabled.') );\n\t\t\texit;\n\t\t}\n\n\t\t/* remember this user */\n\t\tif (isset_request_var('remember_me') && read_config_option('auth_cache_enabled') == 'on') {\n\t\t\tset_auth_cookie($user);\n\t\t}\n\n\t\t/* set the php session */\n\t\t$_SESSION['sess_user_id'] = $user['id'];\n\n\t\t/* handle 'force change password' */\n\t\tif (($user['must_change_password'] == 'on') && (read_config_option('auth_method') == 1)) {\n\t\t\t$_SESSION['sess_change_password'] = true;\n\t\t}\n\n\t\t$group_options = db_fetch_cell_prepared('SELECT MAX(login_opts)\n\t\t\tFROM user_auth_group AS uag\n\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\tON uag.id=uagm.group_id\n\t\t\tWHERE user_id=?', array($_SESSION['sess_user_id']));\n\n\t\tif ($group_options > 0) {\n\t\t\t$user['login_opts'] = $group_options;\n\t\t}\n\n\t\t$newtheme = false;\n\t\tif (user_setting_exists('selected_theme', $_SESSION['sess_user_id']) && read_config_option('selected_theme') != read_user_setting('selected_theme')) {\n\t\t\tunset($_SESSION['selected_theme']);\n\t\t\t$newtheme = true;\n\t\t}\n\n\t\t/* ok, at the point the user has been sucessfully authenticated; so we must\n\t\tdecide what to do next */\n\t\tswitch ($user['login_opts']) {\n\t\t\tcase '1': /* referer */\n\t\t\t\t/* because we use plugins, we can't redirect back to graph_view.php if they don't\n\t\t\t\t * have console access\n\t\t\t\t */\n\t\t\t\tif (isset($_SERVER[\"REDIRECT_URL\"])) {\n\t\t\t\t\t$referer = $_SERVER[\"REDIRECT_URL\"];\n\t\t\t\t\tif (isset($_SERVER[\"REDIRECT_QUERY_STRING\"])) {\n\t\t\t\t\t\t$referer .= '?' . $_SERVER[\"REDIRECT_QUERY_STRING\"] . ($newtheme ? '?newtheme=1':'');\n\t\t\t\t\t}\n\t\t\t\t} else if (isset($_SERVER['HTTP_REFERER'])) {\n\t\t\t\t\t$referer = $_SERVER['HTTP_REFERER'];\n\t\t\t\t\tif (basename($referer) == 'logout.php') {\n\t\t\t\t\t\t$referer = $config['url_path'] . 'index.php' . ($newtheme ? '?newtheme=1':'');\n\t\t\t\t\t}\n\t\t\t\t} else if (isset($_SERVER['REQUEST_URI'])) {\n\t\t\t\t\t$referer = $_SERVER['REQUEST_URI'];\n\t\t\t\t\tif (basename($referer) == 'logout.php') {\n\t\t\t\t\t\t$referer = $config['url_path'] . 'index.php' . ($newtheme ? '?newtheme=1':'');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$referer = $config['url_path'] . 'index.php' . ($newtheme ? '?newtheme=1':'');\n\t\t\t\t}\n\n\t\t\t\tif (substr_count($referer, 'plugins')) {\n\t\t\t\t\theader('Location: ' . $referer);\n\t\t\t\t} elseif (sizeof(db_fetch_assoc_prepared('SELECT realm_id FROM user_auth_realm WHERE realm_id = 8 AND user_id = ?', array($_SESSION['sess_user_id']))) == 0) {\n\t\t\t\t\theader('Location: graph_view.php' . ($newtheme ? '?newtheme=1':''));\n\t\t\t\t} else {\n\t\t\t\t\theader(\"Location: $referer\" . ($newtheme ? '?newtheme=1':''));\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase '2': /* default console page */\n\t\t\t\theader('Location: ' . $config['url_path'] . 'index.php' . ($newtheme ? '?newtheme=1':''));\n\n\t\t\t\tbreak;\n\t\t\tcase '3': /* default graph page */\n\t\t\t\theader('Location: ' . $config['url_path'] . 'graph_view.php' . ($newtheme ? '?newtheme=1':''));\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tapi_plugin_hook_function('login_options_navigate', $user['login_opts']);\n\t\t}\n\t\texit;\n\t}else{\n\t\tif ((!$guest_user) && ($user_auth)) {\n\t\t\t/* No guest account defined */\n\t\t\tauth_display_custom_error_message( __('Access Denied, please contact you Cacti Administrator.') );\n\t\t\tcacti_log('LOGIN: Access Denied, No guest enabled or template user to copy', false, 'AUTH');\n\t\t\texit;\n\t\t}else{\n\t\t\t/* BAD username/password builtin and LDAP */\n\t\t\tdb_execute_prepared('INSERT IGNORE INTO user_log (username, user_id, result, ip, time) VALUES (?, 0, 0, ?, NOW())', array($username, $_SERVER['REMOTE_ADDR']));\n\t\t}\n\t}\n}\n\n/* auth_display_custom_error_message - displays a custom error message to the browser that looks like\n     the pre-defined error messages\n   @arg $message - the actual text of the error message to display */\nfunction auth_display_custom_error_message($message) {\n\t/* kill the session */\n\tsetcookie(session_name(),'',time() - 3600,'/');\n\t/* print error */\n\tprint '<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">';\n\tprint \"<html>\\n<head>\\n\";\n\tprint '     <title>' . 'Cacti' . \"</title>\\n\";\n\tprint \"     <meta http-equiv='Content-Type' content='text/html;charset=utf-8'>\";\n\tprint \"     <link href=\\\"include/main.css\\\" type=\\\"text/css\\\" rel=\\\"stylesheet\\\">\";\n\tprint \"</head>\\n\";\n\tprint \"<body>\\n<br><br>\\n\";\n\tdisplay_custom_error_message($message);\n\tprint \"</body>\\n</html>\\n\";\n}\n\nfunction domains_login_process() {\n\tglobal $user, $realm, $username, $user_auth, $ldap_error, $ldap_error_message;\n\n\tif (is_numeric(get_nfilter_request_var('realm')) && (strlen(get_nfilter_request_var('login_password')) > 0)) {\n\t\t/* include LDAP lib */\n\t\tinclude_once('./lib/ldap.php');\n\n\t\t/* get user DN */\n\t\t$ldap_dn_search_response = domains_ldap_search_dn($username, get_nfilter_request_var('realm'));\n\t\tif ($ldap_dn_search_response['error_num'] == '0') {\n\t\t\t$ldap_dn = $ldap_dn_search_response['dn'];\n\t\t}else{\n\t\t\t/* Error searching */\n\t\t\tcacti_log('LOGIN: LDAP Error: ' . $ldap_dn_search_response['error_text'], false, 'AUTH');\n\t\t\t$ldap_error = true;\n\t\t\t$ldap_error_message = __('LDAP Search Error: %s', $ldap_dn_search_response['error_text']);\n\t\t\t$user_auth = false;\n\t\t\t$user = array();\n\t\t}\n\n\t\tif (!$ldap_error) {\n\t\t\t/* auth user with LDAP */\n\t\t\t$ldap_auth_response = domains_ldap_auth($username, stripslashes(get_nfilter_request_var('login_password')), $ldap_dn, get_nfilter_request_var('realm'));\n\n\t\t\tif ($ldap_auth_response['error_num'] == '0') {\n\t\t\t\t/* User ok */\n\t\t\t\t$user_auth = true;\n\t\t\t\t$copy_user = true;\n\t\t\t\t$realm = get_nfilter_request_var('realm');\n\t\t\t\t/* Locate user in database */\n\t\t\t\tcacti_log(\"LOGIN: LDAP User '\" . $username . \"' Authenticated from Domain '\" . db_fetch_cell('SELECT domain_name FROM user_domains WHERE domain_id=' . ($realm-1000)) . \"'\", false, 'AUTH');\n\t\t\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE username = ? AND realm = ?', array($username, $realm));\n\n\t\t\t\t/* Create user from template if requested */\n\t\t\t\t$template_user = db_fetch_cell_prepared('SELECT user_id FROM user_domains WHERE domain_id = ?', array(get_nfilter_request_var('realm')-1000));\n\t\t\t\t$template_username = db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array($template_user));\n\t\t\t\tif ((!sizeof($user)) && ($copy_user) && ($template_user != '0') && (strlen($username) > 0)) {\n\t\t\t\t\tcacti_log(\"WARN: User '\" . $username . \"' does not exist, copying template user\", false, 'AUTH');\n\t\t\t\t\t/* check that template user exists */\n\t\t\t\t\tif (db_fetch_row_prepared('SELECT id FROM user_auth WHERE id = ? AND realm = 0', array($template_user))) {\n\t\t\t\t\t\t/* template user found */\n\t\t\t\t\t\tuser_copy($template_username, $username, 0, $realm);\n\t\t\t\t\t\t/* requery newly created user */\n\t\t\t\t\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE username = ? AND realm = ?', array($username, $realm));\n\t\t\t\t\t}else{\n\t\t\t\t\t\t/* error */\n\t\t\t\t\t\tcacti_log(\"LOGIN: Template user '\" . $template_username . \"' does not exist.\", false, 'AUTH');\n\t\t\t\t\t\tauth_display_custom_error_message( __('Template user %s does not exist.', $template_username) );\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t/* error */\n\t\t\t\tcacti_log('LOGIN: LDAP Error: ' . $ldap_auth_response['error_text'], false, 'AUTH');\n\t\t\t\t$ldap_error = true;\n\t\t\t\t$ldap_error_message = __('LDAP Error: %s', $ldap_auth_response['error_text']);\n\t\t\t\t$user_auth = false;\n\t\t\t\t$user = array();\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nfunction domains_ldap_auth($username, $password = '', $dn = '', $realm) {\n\t$ldap = new Ldap;\n\n\tif (!empty($username)) $ldap->username = $username;\n\tif (!empty($password)) $ldap->password = $password;\n\tif (!empty($dn))       $ldap->dn       = $dn;\n\n\t$ld = db_fetch_row_prepared('SELECT * FROM user_domains_ldap WHERE domain_id = ?', array($realm-1000));\n\n\tif (sizeof($ld)) {\n\t\tif (!empty($ld['dn']))                $ldap->dn                = $ld['dn'];\n\t\tif (!empty($ld['server']))            $ldap->host              = $ld['server'];\n\t\tif (!empty($ld['port']))              $ldap->port              = $ld['port'];\n\t\tif (!empty($ld['port_ssl']))          $ldap->port_ssl          = $ld['port_ssl'];\n\t\tif (!empty($ld['proto_version']))     $ldap->version           = $ld['proto_version'];\n\t\tif (!empty($ld['encryption']))        $ldap->encryption        = $ld['encryption'];\n\t\tif (!empty($ld['referrals']))         $ldap->referrals         = $ld['referrals'];\n\t\tif (!empty($ld['group_require']))     $ldap->group_require     = $ld['group_require'];\n\t\tif (!empty($ld['group_dn']))          $ldap->group_dn          = $ld['group_dn'];\n\t\tif (!empty($ld['group_attrib']))      $ldap->group_attrib      = $ld['group_attrib'];\n\t\tif (!empty($ld['group_member_type'])) $ldap->group_member_type = $ld['group_member_type'];\n\n\t\treturn $ldap->Authenticate();\n\t}else{\n\t\treturn false;\n\t}\n}\n\nfunction domains_ldap_search_dn($username, $realm) {\n\t$ldap = new Ldap;\n\n\tif (!empty($username)) $ldap->username = $username;\n\n\t$ld = db_fetch_row_prepared('SELECT * FROM user_domains_ldap WHERE domain_id = ?', array($realm-1000));\n\n\tif (sizeof($ld)) {\n\t\tif (!empty($ld['dn']))                $ldap->dn                = $ld['dn'];\n\t\tif (!empty($ld['server']))            $ldap->host              = $ld['server'];\n\t\tif (!empty($ld['port']))              $ldap->port              = $ld['port'];\n\t\tif (!empty($ld['port_ssl']))          $ldap->port_ssl          = $ld['port_ssl'];\n\t\tif (!empty($ld['proto_version']))     $ldap->version           = $ld['proto_version'];\n\t\tif (!empty($ld['encryption']))        $ldap->encryption        = $ld['encryption'];\n\t\tif (!empty($ld['referrals']))         $ldap->referrals         = $ld['referrals'];\n\t\tif (!empty($ld['mode']))              $ldap->group_require     = $ld['mode'];\n\t\tif (!empty($ld['search_base']))       $ldap->group_dn          = $ld['search_base'];\n\t\tif (!empty($ld['search_filter']))     $ldap->group_attrib      = $ld['search_filter'];\n\t\tif (!empty($ld['specific_dn']))       $ldap->group_member_type = $ld['specific_dn'];\n\t\tif (!empty($ld['specific_password'])) $ldap->group_member_type = $ld['specific_password'];\n\n\t\treturn $ldap->Search();\n\t}else{\n\t\treturn false;\n\t}\n}\n\nif (api_plugin_hook_function('custom_login', OPER_MODE_NATIVE) == OPER_MODE_RESKIN) {\n\treturn;\n}\n?>\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n\t<title><?php print api_plugin_hook_function('login_title', __('Login to Cacti'));?></title>\n\t<meta http-equiv='Content-Type' content='text/html;charset=utf-8'>\n\t<link href='<?php echo $config['url_path']; ?>include/themes/<?php print get_selected_theme();?>/main.css' type='text/css' rel='stylesheet'>\n\t<link href='<?php echo $config['url_path']; ?>include/themes/<?php print get_selected_theme();?>/jquery-ui.css' type='text/css' rel='stylesheet'>\n\t<link href='<?php echo $config['url_path']; ?>images/favicon.ico' rel='shortcut icon'>\n\t<script type='text/javascript' src='<?php echo $config['url_path']; ?>include/js/jquery.js' language='javascript'></script>\n\t<script type='text/javascript' src='<?php echo $config['url_path']; ?>include/js/jquery-ui.js' language='javascript'></script>\n\t<script type='text/javascript' src='<?php echo $config['url_path']; ?>include/js/jquery.cookie.js' language='javascript'></script>\n\t<script type='text/javascript' src='<?php echo $config['url_path']; ?>include/js/jquery.hotkeys.js'></script>\n\t<script type='text/javascript' src='<?php echo $config['url_path']; ?>include/js/jquery.metadata.js'></script>\n\t<script type='text/javascript' src='<?php echo $config['url_path']; ?>include/js/jquery.tablesorter.js'></script>\n\t<script type='text/javascript' src='<?php echo $config['url_path']; ?>include/layout.js'></script>\n\t<script type='text/javascript' src='<?php echo $config['url_path']; ?>include/themes/<?php print get_selected_theme();?>/main.js'></script>\n\t<script type='text/javascript'>var theme='<?php print get_selected_theme();?>';</script>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t\t$('#login_username').focus();\n\t});\n\t</script>\n</head>\n<body class='loginBody'>\n\t<div class='loginLeft'></div>\n\t<div class='loginCenter'>\n\t<div class='loginArea'>\n\t\t<div class='cactiLoginLogo'></div>\n\t\t\t<legend><?php print __('User Login');?></legend>\n\t\t\t<form name='login' method='post' action='<?php print basename($_SERVER['PHP_SELF']);?>'>\n\t\t\t\t<input type='hidden' name='action' value='login'>\n\t\t\t\t<?php api_plugin_hook_function('login_before', \n\t\t\t\t\tarray(\n\t\t\t\t\t\t'ldap_error' => $ldap_error, \n\t\t\t\t\t\t'ldap_error_message' => $ldap_error_message, \n\t\t\t\t\t\t'username' => $username, \n\t\t\t\t\t\t'user_enabled' => $user_enabled, \n\t\t\t\t\t\t'action' => get_nfilter_request_var('action'))); \n\t\t\t\t?>\n\t\t\t\t<div class='loginTitle'>\n\t\t\t\t\t<p><? print __('Enter your Username and Password below');?></p>\n\t\t\t\t</div>\n\t\t\t\t<div class='cactiLogin'>\n\t\t\t\t\t<table class='cactiLoginTable'>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<label for='login_username'><?php print __('Username');?></label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='text' id='login_username' name='login_username' value='<?php print htmlspecialchars($username, ENT_QUOTES); ?>' placeholder='<?php print __('Username');?>'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<label for='login_password'><?php print __('Password');?></label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='password' id='login_password' name='login_password' placeholder='********'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif (read_config_option('auth_method') == '3' || read_config_option('auth_method') == '4') {\n\t\t\t\t\t\t\tif (read_config_option('auth_method') == '3') {\n\t\t\t\t\t\t\t\t$realms = api_plugin_hook_function('login_realms', \n\t\t\t\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t\t\t\t'local' => array(\n\t\t\t\t\t\t\t\t\t\t\t'name' => 'Local', \n\t\t\t\t\t\t\t\t\t\t\t'selected' => false\n\t\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\t\t'ldap' => array(\n\t\t\t\t\t\t\t\t\t\t\t'name' => 'LDAP', \n\t\t\t\t\t\t\t\t\t\t\t'selected' => true\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t$realms = get_auth_realms(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<label for='realm'><?php print __('Realm');?></label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<select id='realm' name='realm'><?php\n\t\t\t\t\t\t\t\t\tif (sizeof($realms)) {\n\t\t\t\t\t\t\t\t\tforeach($realms as $name => $realm) {\n\t\t\t\t\t\t\t\t\t\tprint \"\\t\\t\\t\\t\\t<option value='\" . $name . \"'\" . ($realm['selected'] ? ' selected':'') . '>' . htmlspecialchars($realm['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t<?php } if (read_config_option('auth_cache_enabled') == 'on') { ?>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colspan='2'>\n\t\t\t\t\t\t\t\t<label for='remember_me'><input style='vertical-align:-3px;' type='checkbox' id='remember_me' name='remember_me' <?php print (isset($_COOKIE['cacti_remembers']) ? 'checked':'');?>><?php print __('Keep me signed in');?></label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td cospan='2'>\n\t\t\t\t\t\t\t\t<input type='submit' value='<?php print __('Login');?>'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t<?php api_plugin_hook('login_after'); ?>\n\t\t\t</form>\n\t\t\t<div class='loginErrors'>\n\t\t\t\t<?php\n\t\t\t\tif ($ldap_error) {\n\t\t\t\t\tprint $ldap_error_message;\n\t\t\t\t}else{\n\t\t\t\t\tif (get_nfilter_request_var('action') == 'login') {\n\t\t\t\t\t\tprint __('Invalid User Name/Password Please Retype');\n\t\t\t\t\t}\n\t\t\t\t\tif ($user_enabled == '0') {\n\t\t\t\t\t\tprint __('User Account Disabled');\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t\t?>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class='versionInfo'><?php print __('Version %1$s | %2$s', $version, COPYRIGHT_YEARS_SHORT);?></div>\n\t</div>\n\t<div class='loginRight'></div>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('body').css('height', $(window).height());\n\t\t$('.loginLeft').css('width',parseInt($(window).width()*0.33)+'px');\n\t\t$('.loginRight').css('width',parseInt($(window).width()*0.33)+'px');\n\t});\n\t</script>\n</body>\n</html>\n"], "filenames": ["auth_login.php"], "buggy_code_start_loc": [94], "buggy_code_end_loc": [98], "fixing_code_start_loc": [94], "fixing_code_end_loc": [98], "type": "CWE-264", "message": "auth_login.php in Cacti before 1.0.0 allows remote authenticated users who use web authentication to bypass intended access restrictions by logging in as a user not in the cacti database, because the guest user is not considered. NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-2313.", "other": {"cve": {"id": "CVE-2016-10700", "sourceIdentifier": "cve@mitre.org", "published": "2017-11-24T05:29:00.190", "lastModified": "2017-12-11T19:35:45.720", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "auth_login.php in Cacti before 1.0.0 allows remote authenticated users who use web authentication to bypass intended access restrictions by logging in as a user not in the cacti database, because the guest user is not considered. NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-2313."}, {"lang": "es", "value": "auth_login.php en versiones anteriores a la 1.0.0 de Cacti permite que usuarios autenticados remotos que emplean la autenticaci\u00f3n web omitan las restricciones de acceso planeadas iniciando sesi\u00f3n como usuario que no est\u00e1 en la base de datos de Cacti, ya que el usuario invitado no est\u00e1 considerado. NOTA: Esta vulnerabilidad existe debido a una soluci\u00f3n incompleta para CVE-2016-2313."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-264"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:cacti:cacti:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.0.0", "matchCriteriaId": "2FE55913-88BA-4A5F-91D0-B7EC37EAC334"}]}]}], "references": [{"url": "http://bugs.cacti.net/view.php?id=2697", "source": "cve@mitre.org", "tags": ["Broken Link"]}, {"url": "http://www.cacti.net/release_notes_1_0_0.php", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Release Notes", "Vendor Advisory"]}, {"url": "https://github.com/Cacti/cacti/commit/69983495cd41bf0903fe02baeef84b1fa85f2846", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://web.archive.org/web/20160817090458/http://bugs.cacti.net/view.php?id=2697", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Cacti/cacti/commit/69983495cd41bf0903fe02baeef84b1fa85f2846"}}