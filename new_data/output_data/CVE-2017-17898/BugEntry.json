{"buggy_code": ["<?php\n/* Copyright (C) 2005-2011 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2005-2006 Regis Houssin        <regis.houssin@capnetworks.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *      \\file       htdocs/adherents/subscription/info.php\n *      \\ingroup    member\n *      \\brief      Page with information of subscriptions of a member\n */\n\nrequire '../../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/member.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/subscription.class.php';\n\n$langs->load(\"companies\");\n$langs->load(\"bills\");\n$langs->load(\"members\");\n$langs->load(\"users\");\n\nif (!$user->rights->adherent->lire)\n\taccessforbidden();\n\n$rowid=isset($_GET[\"rowid\"])?$_GET[\"rowid\"]:$_POST[\"rowid\"];\n\n\n\n/*\n * View\n */\n\nllxHeader();\n\n$form = new Form($db);\n\n$object = new Subscription($db);\n$result = $object->fetch($rowid);\n\n$head = subscription_prepare_head($object);\n\ndol_fiche_head($head, 'info', $langs->trans(\"Subscription\"), -1, 'payment');\n\n$linkback = '<a href=\"'.DOL_URL_ROOT.'/adherents/subscription/list.php\">'.$langs->trans(\"BackToList\").'</a>';\n\ndol_banner_tab($object, 'rowid', $linkback, 1);\n\nprint '<div class=\"fichecenter\">';\n\nprint '<div class=\"underbanner clearboth\"></div>';\n\nprint '<br>';\n\n$object->info($rowid);\n\nprint '<table width=\"100%\"><tr><td>';\ndol_print_object_info($object);\nprint '</td></tr></table>';\n\nprint '</div>';\n\n\ndol_fiche_end();\n\nllxFooter();\n$db->close();\n", "<?php\n/* Copyright (C) 2007-2008\tJeremie Ollivier\t<jeremie.o@laposte.net>\n * Copyright (C) 2011\t\tLaurent Destailleur\t<eldy@users.sourceforge.net>\n * Copyright (C) 2011\t\tJuanjo Menent\t\t<jmenent@2byte.es>\n * Copyright (C) 2015\t\tRegis Houssin\t\t<regis.houssin@capnetworks.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n$langs->load(\"main\");\n$langs->load(\"bills\");\n$langs->load(\"cashdesk\");\n\n// Object $form must de defined\n\n?>\n\n<script type=\"text/javascript\" src=\"javascript/facturation1.js\"></script>\n<script type=\"text/javascript\" src=\"javascript/dhtml.js\"></script>\n<script type=\"text/javascript\" src=\"javascript/keypad.js\"></script>\n\n<!-- ========================= Cadre \"Article\" ============================= -->\n<fieldset class=\"cadre_facturation\"><legend class=\"titre1\"><?php echo $langs->trans(\"Article\"); ?></legend>\n\t<form id=\"frmFacturation\" class=\"formulaire1\" method=\"post\" action=\"facturation_verif.php\" autocomplete=\"off\">\n\t\t<input type=\"hidden\" name=\"token\" value=\"<?php echo $_SESSION['newtoken']; ?>\" />\n\n\t\t<input type=\"hidden\" name=\"hdnSource\" value=\"NULL\" />\n\n\t\t<table class=\"center\">\n\t\t\t<tr><th class=\"label1\"><?php echo $langs->trans(\"FilterRefOrLabelOrBC\"); ?></th><th class=\"label1\"><?php echo $langs->trans(\"Designation\"); ?></th></tr>\n\t\t\t<tr>\n\t\t\t<!-- Affichage de la reference et de la designation -->\n\t\t\t<td><input class=\"texte_ref\" type=\"text\" id =\"txtRef\" name=\"txtRef\" value=\"<?php echo $obj_facturation->ref() ?>\"\n\t\t\t\tonchange=\"javascript: setSource('REF');\"\n\t\t\t\tonkeyup=\"javascript: verifResultat('resultats_dhtml', this.value, <?php echo (isset($conf->global->BARCODE_USE_SEARCH_TO_SELECT) ? (int) $conf->global->BARCODE_USE_SEARCH_TO_SELECT : 1) ?>);\"\n\t\t\t\tonfocus=\"javascript: this.select(); verifResultat('resultats_dhtml', this.value, <?php echo (isset($conf->global->BARCODE_USE_SEARCH_TO_SELECT) ? (int) $conf->global->BARCODE_USE_SEARCH_TO_SELECT : 1) ?>);\"\n\t\t\t\tonBlur=\"javascript: document.getElementById('resultats_dhtml').innerHTML = '';\"/>\n\t\t\t</td>\n\t\t\t<td class=\"select_design maxwidthonsmartphone\">\n            <?php /*\n            $selected='';\n            $htmlname='idprod';\n            $status=-1;\n            $rice_level=$company->price_level;\n            print ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/product/ajax/products.php', 'outjson=1&price_level='.$price_level.'&type='.$filtertype.'&mode=1&status='.$status.'&finished='.$finished, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT);\n            if (! $hidelabel) print $langs->trans(\"RefOrLabel\").' : ';\n            print '<input type=\"text\" size=\"4\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\" />';\n            */\n            ?>\n\n\t\t\t\t<select id=\"selProduit\" class=\"maxwidthonsmartphone\" name=\"selProduit\" onchange=\"javascript: setSource('LISTE');\">\n\t\t\t\t\t<?php\n                        print '<option value=\"0\">'.$top_liste_produits.'</option>'.\"\\n\";\n\n\t\t\t\t\t\t$id = $obj_facturation->id();\n\n\t\t\t\t\t\t// Si trop d'articles ont ete trouves, on n'affiche que les X premiers (defini dans le fichier de configuration) ...\n\n\t\t\t\t\t\t$nbtoshow = $nbr_enreg;\n\t\t\t\t\t\tif (! empty($conf_taille_listes) && $nbtoshow > $conf_taille_listes) $nbtoshow = $conf_taille_listes;\n\n\t\t\t\t\t\tfor ($i = 0; $i < $nbtoshow; $i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( $id == $tab_designations[$i]['rowid'] )\n\t\t\t\t\t\t\t\t$selected = 'selected';\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t$selected = '';\n\n\t\t\t\t\t\t\t$label = $tab_designations[$i]['label'];\n\n\t\t\t\t\t\t\tprint '<option '.$selected.' value=\"'.$tab_designations[$i]['rowid'].'\">'.dol_trunc($tab_designations[$i]['ref'],16).' - '.dol_trunc($label,35,'middle');\n\t\t\t\t\t\t\tif (! empty($conf->stock->enabled) && !empty($conf_fkentrepot) && $tab_designations[$i]['fk_product_type']==0) print ' ('.$langs->trans(\"CashDeskStock\").': '.(empty($tab_designations[$i]['reel'])?0:$tab_designations[$i]['reel']).')';\n\t\t\t\t\t\t\tprint '</option>'.\"\\n\";\n\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</select>\n\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t</form>\n\n\t<form id=\"frmQte\" class=\"formulaire1\" method=\"post\" action=\"facturation_verif.php?action=ajout_article\" onsubmit =\"javascript: return verifSaisie();\">\n\t\t<input type=\"hidden\" name=\"token\" value=\"<?php echo $_SESSION['newtoken']; ?>\" />\n\t\t<table class=\"center\">\n\t\t\t<tr>\n\t\t\t<th><?php echo $langs->trans(\"Qty\"); ?></th>\n\t\t\t<th><?php echo $langs->trans(\"PriceUHT\"); ?></th>\n\t\t\t<th><?php echo $langs->trans(\"Discount\"); ?> (%)</th>\n            <th><?php echo $langs->trans(\"VATRate\"); ?></th>\n\t\t\t<th></th>\n            </tr>\n\t\t\t<tr>\n\t\t\t\t<td><input class=\"texte1 maxwidth50onsmartphone\" type=\"text\" id=\"txtQte\" name=\"txtQte\" value=\"1\" onkeyup=\"javascript: modif();\" onfocus=\"javascript: this.select();\" />\n<?php print genkeypad(\"txtQte\", \"frmQte\");?>\n\t\t\t\t</td>\n\t\t\t\t<!-- Show unit price -->\n\t\t\t\t<?php // TODO Remove the disabled and use this value when adding product into cart ?>\n\t\t\t\t<td><input class=\"texte1_off maxwidth50onsmartphone\" type=\"text\" name=\"txtPrixUnit\" value=\"<?php echo price2num($obj_facturation->prix(), 'MU'); ?>\" onchange=\"javascript: modif();\" disabled /></td>\n    \t\t\t<!-- Choix de la remise -->\n    \t\t\t<td><input class=\"texte1 maxwidth50onsmartphone\" type=\"text\" id=\"txtRemise\" name=\"txtRemise\" value=\"0\" onkeyup=\"javascript: modif();\" onfocus=\"javascript: this.select();\"/>\n\t\t\t\t\t<?php print genkeypad(\"txtRemise\", \"frmQte\");?>\n    \t\t\t</td>\n                <!-- Choix du taux de TVA -->\n                <td class=\"select_tva center\">\n                <?php\n\t\t\t\t\t$vatrate = $obj_facturation->vatrate;      // To get vat rate we just have selected\n\n\t\t\t\t\t$buyer = new Societe($db);\n\t\t\t\t\tif ($_SESSION[\"CASHDESK_ID_THIRDPARTY\"] > 0) $buyer->fetch($_SESSION[\"CASHDESK_ID_THIRDPARTY\"]);\n\t\t\t\t\techo $form->load_tva('selTva', (isset($_POST[\"selTva\"])?GETPOST(\"selTva\",'alpha',2):$vatrate), $mysoc, $buyer, 0, 0, '', false, -1);\n\t\t\t    ?>\n                </td>\n\t\t\t\t<td></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<!-- Affichage du stock pour l'article courant -->\n\t\t\t<tr>\n\t\t\t\t<td><?php echo $langs->trans(\"Stock\"); ?></td>\n\t\t\t\t<td>\n\t\t\t\t<input class=\"texte1_off maxwidth50onsmartphone\" type=\"text\" name=\"txtStock\" value=\"<?php echo $obj_facturation->stock() ?>\" disabled />\n\t\t\t\t</td>\n\t\t\t\t<td><?php echo $langs->trans(\"TotalHT\"); ?></td>\n    \t\t\t<!-- Affichage du total HT -->\n    \t\t\t<td colspan=\"2\"><input class=\"texte1_off maxwidth50onsmartphone\" type=\"text\" name=\"txtTotal\" value=\"\" disabled /></td><td></td>\n\t\t\t</tr>\n\n\t\t</table>\n\n\t\t<input class=\"button bouton_ajout_article\" type=\"submit\" id=\"sbmtEnvoyer\" value=\"<?php echo $langs->trans(\"AddThisArticle\"); ?>\" />\n\t</form>\n</fieldset>\n\n<!-- ========================= Cadre \"Amount\" ============================= -->\n<form id=\"frmDifference\"  class=\"formulaire1\" method=\"post\" onsubmit=\"javascript: return verifReglement()\" action=\"validation_verif.php?action=valide_achat\">\n\t<input type=\"hidden\" name=\"hdnChoix\" value=\"\" />\n\t<input type=\"hidden\" name=\"token\" value=\"<?php echo $_SESSION['newtoken']; ?>\" />\n<fieldset class=\"cadre_facturation\"><legend class=\"titre1\"><?php echo $langs->trans(\"Amount\"); ?></legend>\n\t\t<table class=\"centpercent\">\n\t\t\t<tr><th class=\"label1\"><?php echo $langs->trans(\"TotalTicket\"); ?></th><th class=\"label1\"><?php echo $langs->trans(\"Received\"); ?></th><th class=\"label1\"><?php echo $langs->trans(\"Change\"); ?></th></tr>\n\t\t\t<tr>\n\t\t\t<!-- Affichage du montant du -->\n\t\t\t<td><input class=\"texte2_off maxwidth100onsmartphone\" type=\"text\" name=\"txtDu\" value=\"<?php echo price2num($obj_facturation->prixTotalTtc(), 'MT'); ?>\" disabled /></td>\n\t\t\t<!-- Choix du montant encaisse -->\n\t\t\t<td><input class=\"texte2 maxwidth100onsmartphone\" type=\"text\" id=\"txtEncaisse\" name=\"txtEncaisse\" value=\"\" onkeyup=\"javascript: verifDifference();\" onfocus=\"javascript: this.select();\" />\n<?php print genkeypad(\"txtEncaisse\", \"frmDifference\");?>\n\t\t\t</td>\n\t\t\t<!-- Affichage du montant rendu -->\n\t\t\t<td><input class=\"texte2_off maxwidth100onsmartphone\" type=\"text\" name=\"txtRendu\" value=\"0\" disabled /></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t</table>\n</fieldset>\n\n<fieldset class=\"cadre_facturation\"><legend class=\"titre1\"><?php echo $langs->trans(\"PaymentMode\"); ?></legend>\n\t\t<div class=\"inline-block\">\n\t\t\t<?php\n\t\t\tprint '<div class=\"inline-block\" style=\"margin: 6px;\">';\n\t\t\tif (empty($_SESSION['CASHDESK_ID_BANKACCOUNT_CASH']) || $_SESSION['CASHDESK_ID_BANKACCOUNT_CASH'] < 0)\n\t\t\t{\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\tprint '<input class=\"bouton_mode_reglement_disabled\" type=\"button\" name=\"btnModeReglement\" value=\"'.$langs->trans(\"Cash\").'\" title=\"'.dol_escape_htmltag($langs->trans(\"ErrorModuleSetupNotComplete\")).'\" />';\n\t\t\t}\n\t\t\telse print '<input class=\"button bouton_mode_reglement\" type=\"submit\" name=\"btnModeReglement\" value=\"'.$langs->trans(\"Cash\").'\" onclick=\"javascript: verifClic(\\'ESP\\');\" />';\n\t\t\tprint '</div>';\n\t\t\tprint '<div class=\"inline-block\" style=\"margin: 6px;\">';\n\t\t\tif (empty($_SESSION['CASHDESK_ID_BANKACCOUNT_CHEQUE']) || $_SESSION['CASHDESK_ID_BANKACCOUNT_CHEQUE'] < 0)\n\t\t\t{\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\tprint '<input class=\"bouton_mode_reglement_disabled\" type=\"button\" name=\"btnModeReglement\" value=\"'.$langs->trans(\"CreditCard\").'\" title=\"'.dol_escape_htmltag($langs->trans(\"ErrorModuleSetupNotComplete\")).'\" />';\n\t\t\t}\n\t\t\telse print '<input class=\"button bouton_mode_reglement\" type=\"submit\" name=\"btnModeReglement\" value=\"'.$langs->trans(\"CreditCard\").'\" onclick=\"javascript: verifClic(\\'CB\\');\" />';\n\t\t\tprint '</div>';\n\t\t\tprint '<div class=\"inline-block\" style=\"margin: 6px;\">';\n\t\t\tif (empty($_SESSION['CASHDESK_ID_BANKACCOUNT_CB']) || $_SESSION['CASHDESK_ID_BANKACCOUNT_CB'] < 0)\n\t\t\t{\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\tprint '<input class=\"bouton_mode_reglement_disabled\" type=\"button\" name=\"btnModeReglement\" value=\"'.$langs->trans(\"CheckBank\").'\" title=\"'.dol_escape_htmltag($langs->trans(\"ErrorModuleSetupNotComplete\")).'\" />';\n\t\t\t}\n\t\t\telse print '<input class=\"button bouton_mode_reglement\" type=\"submit\" name=\"btnModeReglement\" value=\"'.$langs->trans(\"CheckBank\").'\" onclick=\"javascript: verifClic(\\'CHQ\\');\" />';\n\t\t\tprint '</div>';\n\t\t\tprint '<div class=\"clearboth\">';\n\t\t\tprint '<div class=\"inline-block\" style=\"margin: 6px;\">';\n\t\t\t?>\n\t\t\t\t<input class=\"button bouton_mode_reglement\" type=\"submit\" name=\"btnModeReglement\" value=\"<?php echo $langs->trans(\"Reported\"); ?>\" onclick=\"javascript: verifClic('DIF');\" />\n\t\t\t<?php\n\t\t\tprint $langs->trans(\"DateDue\").' :';\n\t\t\tprint $form->select_date(-1,'txtDatePaiement',0,0,0,'paymentmode',1,0,1);\n\t\t\tprint '</div>';\n\t\t\t?>\n\t\t</div>\n</fieldset>\n</form>\n\n<script type=\"text/javascript\">\n/*\tCalendar.setup ({\n\t\tinputField\t: \"txtDatePaiement\",\n\t\tifFormat\t: \"%Y-%m-%d\",\n\t\tbutton\t\t: \"btnCalendrier\"\n\t});\n*/\n\tif (document.getElementById('frmFacturation').txtRef.value) {\n\n\t\tmodif();\n\t\tdocument.getElementById('frmQte').txtQte.focus();\n\t\tdocument.getElementById('frmQte').txtQte.select();\n\n\t} else {\n\n\t\tdocument.getElementById('frmFacturation').txtRef.focus();\n\n\t}\n\n</script>\n", "<?php\n/* Copyright (C) 2007-2008\tJeremie Ollivier\t<jeremie.o@laposte.net>\n * Copyright (C) 2011\t\tJuanjo Menent\t\t<jmenent@2byte.es>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nrequire_once DOL_DOCUMENT_ROOT.'/societe/class/societe.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\n$langs->load(\"main\");\n$langs->load(\"bills\");\n$langs->load(\"cashdesk\");\n\n?>\n\n<div class=\"liste_articles_haut\">\n<div class=\"liste_articles_bas\">\n\n<p class=\"titre\"><?php echo $langs->trans(\"ShoppingCart\"); ?></p>\n\n<?php\n/** add Ditto for MultiPrix*/\n$thirdpartyid = $_SESSION['CASHDESK_ID_THIRDPARTY'];\n$societe = new Societe($db);\n$societe->fetch($thirdpartyid);\n/** end add Ditto */\n\n$tab=array();\n$tab = $_SESSION['poscart'];\n\n$tab_size=count($tab);\nif ($tab_size <= 0) print '<div class=\"center\">'.$langs->trans(\"NoArticle\").'</div><br>';\nelse\n{\n    for ($i=0;$i < $tab_size;$i++)\n    {\n        echo ('<div class=\"cadre_article\">'.\"\\n\");\n        echo ('<p><a href=\"facturation_verif.php?action=suppr_article&suppr_id='.$tab[$i]['id'].'\" title=\"'.$langs->trans(\"DeleteArticle\").'\">'.$tab[$i]['ref'].' - '.$tab[$i]['label'].'</a></p>'.\"\\n\");\n\n        if ( $tab[$i]['remise_percent'] > 0 ) {\n\n            $remise_percent = ' -'.$tab[$i]['remise_percent'].'%';\n\n        } else {\n\n            $remise_percent = '';\n\n        }\n\n        $remise = $tab[$i]['remise'];\n\n        echo ('<p>'.$tab[$i]['qte'].' x '.price2num($tab[$i]['price'], 'MT').$remise_percent.' = '.price(price2num($tab[$i]['total_ht'], 'MT'),0,$langs,0,0,-1,$conf->currency).' '.$langs->trans(\"HT\").' ('.price(price2num($tab[$i]['total_ttc'], 'MT'),0,$langs,0,0,-1,$conf->currency).' '.$langs->trans(\"TTC\").')</p>'.\"\\n\");\n        echo ('</div>'.\"\\n\");\n    }\n}\n\necho ('<p class=\"cadre_prix_total\">'.$langs->trans(\"Total\").' : '.price(price2num($total_ttc, 'MT'),0,$langs,0,0,-1,$conf->currency).'<br></p>'.\"\\n\");\n\n?></div>\n</div>\n", "<?php\n/* Copyright (C) 2007-2008 Jeremie Ollivier      <jeremie.o@laposte.net>\n * Copyright (C) 2008-2010 Laurent Destailleur   <eldy@uers.sourceforge.net>\n * Copyright (C) 2009      Regis Houssin         <regis.houssin@capnetworks.com>\n * Copyright (C) 2011      Juanjo Menent         <jmenent@2byte.es>\n * Copyright (C) 2012      Marcos Garc\u00eda         <marcosgdf@gmail.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\ninclude_once DOL_DOCUMENT_ROOT.'/societe/class/societe.class.php';\ninclude_once DOL_DOCUMENT_ROOT.'/compta/bank/class/account.class.php';\ninclude_once DOL_DOCUMENT_ROOT.'/product/stock/class/entrepot.class.php';\n\n/*if (!empty($_SESSION[\"CASHDESK_ID_THIRDPARTY\"]))\n{\n\t$company=new Societe($db);\n\t$company->fetch($_SESSION[\"CASHDESK_ID_THIRDPARTY\"]);\n\t$companyLink = $company->getNomUrl(1);\n}*/\nif (!empty($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CASH\"]))\n{\n\t$bankcash=new Account($db);\n\t$bankcash->fetch($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CASH\"]);\n\t$bankcash->label=$bankcash->ref;\n\t$bankcashLink = $bankcash->getNomUrl(1);\n}\nif (!empty($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CB\"]))\n{\n\t$bankcb=new Account($db);\n\t$bankcb->fetch($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CB\"]);\n\t$bankcbLink = $bankcb->getNomUrl(1);\n}\nif (!empty($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CHEQUE\"]))\n{\n\t$bankcheque=new Account($db);\n\t$bankcheque->fetch($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CHEQUE\"]);\n\t$bankchequeLink = $bankcheque->getNomUrl(1);\n}\nif (!empty($_SESSION[\"CASHDESK_ID_WAREHOUSE\"]) && ! empty($conf->stock->enabled))\n{\n\t$warehouse=new Entrepot($db);\n\t$warehouse->fetch($_SESSION[\"CASHDESK_ID_WAREHOUSE\"]);\n\t$warehouseLink = $warehouse->getNomUrl(1);\n}\n\n\n$langs->load(\"cashdesk\");\n$langs->load(\"main\");\n\nprint \"\\n\".'<!-- menu.tpl.php -->'.\"\\n\";\nprint '<div class=\"menu_bloc\">';\nprint '<ul class=\"menu\">';\n// Link to new sell\nprint '<li class=\"menu_choix1\"><a href=\"affIndex.php?menutpl=facturation&id=NOUV\"><span class=\"hideonsmartphone\">'.$langs->trans(\"NewSell\").'</span></a></li>';\n// Open new tab on backoffice (this is not a disconnect from POS)\nprint '<li class=\"menu_choix2\"><a href=\"..\" target=\"backoffice\"><span class=\"hideonsmartphone\">'.$langs->trans(\"BackOffice\").'</span></a></li>';\n// Disconnect\nprint '<li class=\"menu_choix0\">'.$langs->trans(\"User\").': '.$_SESSION['firstname'].' '.$_SESSION['lastname'];\nprint ' <a href=\"deconnexion.php\">'.img_picto($langs->trans('Logout'), 'logout.png').'</a><br>';\nprint '<form id=\"frmThirdparty\" class=\"formulaire1 inline-block\" method=\"post\" action=\"facturation_verif.php?action=change_thirdparty\">';\nprint $langs->trans(\"CashDeskThirdParty\").': ';\nprint $form->select_company($_SESSION[\"CASHDESK_ID_THIRDPARTY\"], 'CASHDESK_ID_THIRDPARTY', 's.client IN (1,3)', '', 0, 0, null, 0, 'valignmiddle inline-block');\nprint '<input class=\"button bouton_change_thirdparty inline-block valignmiddle\" type=\"submit\" id=\"bouton_change_thirdparty\" value=\"'.$langs->trans(\"Modify\").'\">';\n//print $companyLink;\nprint '<br>';\nprint '</form>';\n/*print $langs->trans(\"CashDeskBankCash\").': '.$bankcashLink.'<br>';\nprint $langs->trans(\"CashDeskBankCB\").': '.$bankcbLink.'<br>';\nprint $langs->trans(\"CashDeskBankCheque\").': '.$bankchequeLink.'<br>';*/\nprint '<div class=\"clearboth\">';\nif (!empty($_SESSION[\"CASHDESK_ID_WAREHOUSE\"]) && ! empty($conf->stock->enabled) && empty($conf->global->CASHDESK_NO_DECREASE_STOCK))\n{\n\tprint $langs->trans(\"CashDeskWarehouse\").': '.$warehouseLink;\n}\nprint '</div></li></ul>';\nprint '</div>';\nprint \"\\n\".'<!-- menu.tpl.php end -->'.\"\\n\";\n", "<?php\n/* Copyright (C) 2007-2008 Jeremie Ollivier    <jeremie.o@laposte.net>\n * Copyright (C) 2011      Laurent Destailleur <eldy@users.sourceforge.net>\n * Copyright (C) 2012      Marcos Garc\u00eda       <marcosgdf@gmail.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\ninclude_once DOL_DOCUMENT_ROOT.'/compta/facture/class/facture.class.php';\n\n$langs->load(\"main\");\n$langs->load('cashdesk');\n\ntop_httphead('text/html');\n\n$facid=GETPOST('facid','int');\n$object=new Facture($db);\n$object->fetch($facid);\n\n?>\n<html>\n    <head>\n    <title><?php echo $langs->trans('PrintTicket') ?></title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"<?php echo DOL_URL_ROOT;?>/cashdesk/css/ticket.css\">\n</head>\n\n<body>\n\n<div class=\"entete\">\n    <div class=\"logo\">\n        <?php print '<img src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart=mycompany&amp;file='.urlencode('/thumbs/'.$mysoc->logo_small).'\">'; ?>\n    </div>\n    <div class=\"infos\">\n        <p class=\"address\"><?php echo $mysoc->name; ?><br>\n        <?php print dol_nl2br(dol_format_address($mysoc)); ?><br>\n        </p>\n\n        <p class=\"date_heure\"><?php\n        // Recuperation et affichage de la date et de l'heure\n        $now = dol_now();\n        print dol_print_date($now,'dayhourtext').'<br>';\n        print $object->ref;\n        ?></p>\n    </div>\n</div>\n\n<br>\n\n<table class=\"liste_articles\">\n    <thead>\n\t<tr class=\"titres\">\n            <th><?php print $langs->trans(\"Code\"); ?></th>\n            <th><?php print $langs->trans(\"Label\"); ?></th>\n            <th><?php print $langs->trans(\"Qty\"); ?></th>\n            <th><?php print $langs->trans(\"Discount\").' (%)'; ?></th>\n            <th><?php print $langs->trans(\"TotalHT\"); ?></th>\n\t</tr>\n    </thead>\n    <tbody>\n    <?php\n\n    $tab=array();\n    $tab = $_SESSION['poscart'];\n\n    $tab_size=count($tab);\n    for($i=0;$i < $tab_size;$i++)\n    {\n        $remise = $tab[$i]['remise'];\n    ?>\n    <tr>\n        <td><?php echo $tab[$i]['ref'];?></td>\n        <td><?php echo $tab[$i]['label'];?></td>\n        <td><?php echo $tab[$i]['qte'];?></td>\n        <td><?php echo $tab[$i]['remise_percent'];?></td>\n        <td class=\"total\"><?php echo price(price2num($tab[$i]['total_ht'],'MT'),0,$langs,0,0,-1,$conf->currency);?></td>\n    </tr>\n    <?php\n    }\n    ?>\n    </tbody>\n</table>\n\n<table class=\"totaux\">\n<tr>\n    <th class=\"nowrap\"><?php echo $langs->trans(\"TotalHT\");?></th>\n    <td class=\"nowrap\"><?php echo price(price2num($obj_facturation->prixTotalHt(),'MT'),'',$langs,0,-1,-1,$conf->currency).\"\\n\";?></td>\n</tr>\n<tr>\n    <th class=\"nowrap\"><?php echo $langs->trans(\"TotalVAT\").'</th><td class=\"nowrap\">'.price(price2num($obj_facturation->montantTva(),'MT'),'',$langs,0,-1,-1,$conf->currency).\"\\n\";?></td>\n</tr>\n<tr>\n    <th class=\"nowrap\"><?php echo ''.$langs->trans(\"TotalTTC\").'</th><td class=\"nowrap\">'.price(price2num($obj_facturation->prixTotalTtc(),'MT'),'',$langs,0,-1,-1,$conf->currency).\"\\n\";?></td>\n</tr>\n</table>\n\n<script type=\"text/javascript\">\n    window.print();\n</script>\n\n<a class=\"lien\" href=\"#\" onclick=\"javascript: window.close(); return(false);\"><?php echo $langs->trans(\"Close\"); ?></a>\n</body>\n</html>\n", "<?php\n/* Copyright (C) 2007-2008\tJeremie Ollivier\t<jeremie.o@laposte.net>\n * Copyright (C) 2011\t\tJuanjo Menent\t\t<jmenent@2byte.es>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n$langs->load(\"main\");\n$langs->load(\"bills\");\n$langs->load(\"banks\");\n\n// Object $form must de defined\n\n?>\n\n<fieldset class=\"cadre_facturation\"><legend class=\"titre1\"><?php echo $langs->trans(\"Summary\"); ?></legend>\n\n\t<table class=\"table_resume\">\n\n\t\t<tr><td class=\"resume_label\"><?php echo $langs->trans(\"Invoice\"); ?></td><td><?php  echo $obj_facturation->numInvoice(); ?></td></tr>\n\t\t<tr><td class=\"resume_label\"><?php echo $langs->trans(\"TotalHT\"); ?></td><td><?php echo price(price2num($obj_facturation->prixTotalHt(),'MT'),0,$langs,0,0,-1,$conf->currency); ?></td></tr>\n\t\t<?php\n\t\t\t// Affichage de la tva par taux\n\t\t\tif ( $obj_facturation->montantTva() ) {\n\n\t\t\t\techo ('<tr><td class=\"resume_label\">'.$langs->trans(\"VAT\").'</td><td>'.price(price2num($obj_facturation->montantTva(),'MT'),0,$langs,0,0,-1,$conf->currency).'</td></tr>');\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\n\t\t\t\techo ('<tr><td class=\"resume_label\">'.$langs->trans(\"VAT\").'</td><td>'.$langs->trans(\"NoVAT\").'</td></tr>');\n\n\t\t\t}\n\t\t?>\n\t\t<tr><td class=\"resume_label\"><?php echo $langs->trans(\"TotalTTC\"); ?> </td><td><?php echo price(price2num($obj_facturation->prixTotalTtc(),'MT'),0,$langs,0,0,-1,$conf->currency); ?></td></tr>\n\t\t<tr><td class=\"resume_label\"><?php echo $langs->trans(\"PaymentMode\"); ?> </td><td>\n\t\t<?php\n\t\tswitch ($obj_facturation->getSetPaymentMode())\n\t\t{\n\t\t\tcase 'ESP':\n\t\t\t\techo $langs->trans(\"Cash\");\n\t\t\t\t$filtre='courant=2';\n\t\t\t\tif (!empty($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CASH\"]))\n\t\t\t\t\t$selected = $_SESSION[\"CASHDESK_ID_BANKACCOUNT_CASH\"];\n\t\t\t\tbreak;\n\t\t\tcase 'CB':\n\t\t\t\techo $langs->trans(\"CreditCard\");\n\t\t\t\t$filtre='courant=1';\n\t\t\t\tif (!empty($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CB\"]))\n\t\t\t\t\t$selected = $_SESSION[\"CASHDESK_ID_BANKACCOUNT_CB\"];\n\t\t\t\tbreak;\n\t\t\tcase 'CHQ':\n\t\t\t\techo $langs->trans(\"Cheque\");\n\t\t\t\t$filtre='courant=1';\n\t\t\t\tif (!empty($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CHEQUE\"]))\n\t\t\t\t\t$selected = $_SESSION[\"CASHDESK_ID_BANKACCOUNT_CHEQUE\"];\n\t\t\t\tbreak;\n\t\t\tcase 'DIF':\n\t\t\t\techo $langs->trans(\"Reported\");\n\t\t\t\t$filtre='courant=1 OR courant=2';\n\t\t\t\t$selected='';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$filtre='courant=1 OR courant=2';\n\t\t\t\t$selected='';\n\t\t}\n\n\t\t?>\n\t\t</td></tr>\n\n\t\t<?php\n\t\t\t// Affichage des infos en fonction du mode de paiement\n\t\t\tif ( $obj_facturation->getsetPaymentMode() == 'DIF' ) {\n\n\t\t\t\techo ('<tr><td class=\"resume_label\">'.$langs->trans(\"DateDue\").'</td><td>'.$obj_facturation->paiementLe().'</td></tr>');\n\n\t\t\t} else {\n\n\t\t\t\techo ('<tr><td class=\"resume_label\">'.$langs->trans(\"Received\").'</td><td>'.price(price2num($obj_facturation->montantEncaisse(),'MT'),0,$langs,0,0,-1,$conf->currency).'</td></tr>');\n\n\t\t\t}\n\n\t\t\t// Affichage du montant rendu (reglement en especes)\n\t\t\tif ( $obj_facturation->montantRendu() ) {\n\n\t\t\t\techo ('<tr><td class=\"resume_label\">'.$langs->trans(\"Change\").'</td><td>'.price(price2num($obj_facturation->montantRendu(),'MT'),0,$langs,0,0,-1,$conf->currency).'</td></tr>');\n\n\t\t\t}\n\n\t\t?>\n\n\t</table>\n\n\t<form id=\"frmValidation\" class=\"formulaire2\" method=\"post\" action=\"validation_verif.php?action=valide_facture\">\n\t\t<input type=\"hidden\" name=\"token\" value=\"<?php echo $_SESSION['newtoken']; ?>\" />\n\t\t<p class=\"note_label\">\n\t\t\t<?php\n\t\t\t\techo $langs->trans(\"BankToPay\"). \"<br>\";\n\t\t\t\t$form->select_comptes($selected,'cashdeskbank',0,$filtre);\n\t\t\t?>\n\t\t</p>\n\t\t<p class=\"note_label\"><?php echo $langs->trans(\"Notes\"); ?><br><textarea class=\"textarea_note\" name=\"txtaNotes\"></textarea></p>\n\n\t\t<div class=\"center\"><input class=\"button\" type=\"submit\" name=\"btnValider\" value=\"<?php echo $langs->trans(\"ValidateInvoice\"); ?>\" /><br>\n\t\t<br><a class=\"lien1\" href=\"affIndex.php?menutpl=facturation\"><?php echo $langs->trans(\"RestartSelling\"); ?></a>\n\t\t</div>\n\t</form>\n\n\n\n</fieldset>\n", "<?php\n/* Copyright (C) 2007-2008\tJeremie Ollivier\t<jeremie.o@laposte.net>\n * Copyright (C) 2012       Marcos Garc\u00eda       <marcosgdf@gmail.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n$langs->load(\"main\");\n$langs->load(\"bills\");\n\n?>\n\n<div class=\"blocksellfinished\">\n\n<div class=\"cadre_facturation\">\n<h3 class=\"titre1\"><?php echo $langs->trans(\"SellFinished\"); ?></h3><br>\n\n<script type=\"text/javascript\">\n\n\tfunction popupTicket(id,name)\n\t{\n\t\tlargeur = 600;\n\t\thauteur = 500;\n\t\topt = 'width='+largeur+', height='+hauteur+', left='+(screen.width - largeur)/2+', top='+(screen.height-hauteur)/2+'';\n\t\twindow.open('validation_ticket.php?facid='+id,name, opt);\n\t}\n\n\tpopupTicket(<?php echo GETPOST('facid','int'); ?>,'<?php echo $langs->trans('PrintTicket') ?>');\n\n</script>\n\n<p><a class=\"lien1\" href=\"<?php echo DOL_URL_ROOT ?>/compta/facture/card.php?action=builddoc&facid=<?php echo $_GET['facid']; ?>\" target=\"_blank\"><?php echo $langs->trans(\"ShowInvoice\"); ?></a></p>\n<br>\n<p><a class=\"lien1\" href=\"#\" onclick=\"Javascript: popupTicket(); return(false);\"><?php echo $langs->trans(\"PrintTicket\"); ?></a></p>\n\n</div>\n</div>\n<br>\n\n", "<?php\n/* Copyright (C) 2001-2004 Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2012 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2006      Andre Cianfarani  <acianfa@free.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/comm/multiprix.php\n *\t\\ingroup    societe\n *\t\\brief      Onglet choix du niveau de prix\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/contact/class/contact.class.php';\n\n$langs->load(\"orders\");\n$langs->load(\"companies\");\n\n$_socid = $_GET[\"id\"];\n// Security check\nif ($user->societe_id > 0)\n{\n\t$_socid = $user->societe_id;\n}\n\n\n/*\n * Actions\n */\n\nif ($_POST[\"action\"] == 'setpricelevel')\n{\n\t$soc = New Societe($db);\n\t$soc->fetch($_GET[\"id\"]);\n\t$soc->set_price_level($_POST[\"price_level\"],$user);\n\n\theader(\"Location: multiprix.php?id=\".$_GET[\"id\"]);\n\texit;\n}\n\n\n/*\n * View\n */\n\nllxHeader();\n\n$userstatic=new User($db);\n\nif ($_socid > 0)\n{\n\t// On recupere les donnees societes par l'objet\n\t$objsoc = new Societe($db);\n\t$objsoc->id=$_socid;\n\t$objsoc->fetch($_socid,$to);\n\n\tif ($errmesg)\n\t{\n\t\tprint '<div class=\"error\">'.$errmesg.'</div><br>';\n\t}\n\n\n\t/*\n\t * Affichage onglets\n\t */\n\n\t$head = societe_prepare_head($objsoc);\n\n\t$tabchoice='';\n\tif ($objsoc->client == 1) $tabchoice='customer';\n\tif ($objsoc->client == 2) $tabchoice='prospect';\n\n\tprint '<form method=\"POST\" action=\"multiprix.php?id='.$objsoc->id.'\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\tprint '<input type=\"hidden\" name=\"action\" value=\"setpricelevel\">';\n\t\n\tdol_fiche_head($head, $tabchoice, $langs->trans(\"ThirdParty\"), 0, 'company');\n\n\tprint '<table width=\"100%\" border=\"0\">';\n\tprint '<tr><td class=\"tdtop\">';\n\tprint '<table class=\"border\" width=\"100%\">';\n\n\tprint '<tr><td colspan=\"2\" width=\"25%\">';\n\tprint $langs->trans(\"PriceLevel\").'</td><td colspan=\"2\">'.$objsoc->price_level.\"</td></tr>\";\n\n\tprint '<tr><td colspan=\"2\">';\n\tprint $langs->trans(\"NewValue\").'</td><td colspan=\"2\">';\n\tprint '<select name=\"price_level\" class=\"flat\">';\n\tfor($i=1;$i<=$conf->global->PRODUIT_MULTIPRICES_LIMIT;$i++)\n\t{\n\t\tprint '<option value=\"'.$i.'\"' ;\n\t\tif($i == $objsoc->price_level)\n\t\tprint 'selected';\n\t\tprint '>'.$i;\n\t\t$keyforlabel='PRODUIT_MULTIPRICES_LABEL'.$i;\n\t\tif (! empty($conf->global->$keyforlabel)) print ' - '.$langs->trans($conf->global->$keyforlabel);\n\t\tprint '</option>';\n\t}\n\tprint '</select>';\n\tprint '</td></tr>';\n\n\tprint \"</table>\";\n\n\tprint \"</td>\\n\";\n\n\n\tprint \"</td></tr>\";\n\tprint \"</table>\";\n\n\tdol_fiche_end();\n\t\n\tprint '<div align=\"center\"><input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Save\").'\"></div>';\n\n\tprint \"</form>\";\n\n\t\n\tprint '<br><br>';\n\n\n\t/*\n\t * List historic of multiprices\n\t */\n\t$sql  = \"SELECT rc.rowid,rc.price_level, rc.datec as dc, u.rowid as uid, u.login\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"societe_prices as rc, \".MAIN_DB_PREFIX.\"user as u\";\n\t$sql .= \" WHERE rc.fk_soc =\". $objsoc->id;\n\t$sql .= \" AND u.rowid = rc.fk_user_author\";\n\t$sql .= \" ORDER BY rc.datec DESC\";\n\n\t$resql=$db->query($sql);\n\tif ($resql)\n\t{\n\t\tprint '<table class=\"noborder\" width=\"100%\">';\n\t\t$tag = !$tag;\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tprint '<td>'.$langs->trans(\"Date\").'</td>';\n\t\tprint '<td>'.$langs->trans(\"PriceLevel\").'</td>';\n\t\tprint '<td align=\"right\">'.$langs->trans(\"User\").'</td>';\n\t\tprint '</tr>';\n\t\t$i = 0 ;\n\t\t$num = $db->num_rows($resql);\n\n\t\twhile ($i < $num )\n\t\t{\n\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t$tag = !$tag;\n\t\t\tprint '<tr '.$bc[$tag].'>';\n\t\t\tprint '<td>'.dol_print_date($db->jdate($obj->dc),\"dayhour\").'</td>';\n\t\t\tprint '<td>'.$obj->price_level.' </td>';\n\t\t\t$userstatic->id=$obj->uid;\n\t\t\t$userstatic->lastname=$obj->login;\n\t\t\tprint '<td align=\"right\">'.$userstatic->getNomUrl(1).'</td>';\n\t\t\tprint '</tr>';\n\t\t\t$i++;\n\t\t}\n\t\t$db->free($resql);\n\t\tprint \"</table>\";\n\t}\n\telse\n\t{\n\t\tdol_print_error($db);\n\t}\n\n}\n\nllxFooter();\n$db->close();\n", "<?php\n/* Copyright (C) 2001-2006 Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2011 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2005-2011 Regis Houssin        <regis.houssin@capnetworks.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/fourn/index.php\n *\t\\ingroup    fournisseur\n *\t\\brief      Home page of suppliers area\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/fourn/class/fournisseur.commande.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/fourn/class/fournisseur.facture.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n\n$langs->load(\"suppliers\");\n$langs->load(\"orders\");\n$langs->load(\"companies\");\n\n// Security check\n$socid = isset($_GET[\"socid\"])?$_GET[\"socid\"]:'';\nif ($user->societe_id) $socid=$user->societe_id;\n$result = restrictedArea($user, 'societe',$socid,'');\n\n\n/*\n * View\n */\n\n$commandestatic=new CommandeFournisseur($db);\n$facturestatic=new FactureFournisseur($db);\n$companystatic=new Societe($db);\n\nllxHeader(\"\",$langs->trans(\"SuppliersArea\"));\n\nprint load_fiche_titre($langs->trans(\"SuppliersArea\"));\n\n\n//print '<table border=\"0\" width=\"100%\" class=\"notopnoleftnoright\">';\n//print '<tr><td valign=\"top\" width=\"30%\" class=\"notopnoleft\">';\nprint '<div class=\"fichecenter\"><div class=\"fichethirdleft\">';\n\n\n// Orders\n$commande = new CommandeFournisseur($db);\n$sql = \"SELECT count(cf.rowid), cf.fk_statut\";\n$sql.= \" FROM \".MAIN_DB_PREFIX.\"commande_fournisseur as cf,\";\n$sql.= \" \".MAIN_DB_PREFIX.\"societe as s\";\nif (!$user->rights->societe->client->voir && !$socid) $sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"societe_commerciaux as sc ON s.rowid = sc.fk_soc\";\n$sql.= \" WHERE cf.fk_soc = s.rowid \";\nif (!$user->rights->societe->client->voir && !$socid) $sql .= \" AND sc.fk_user = \" .$user->id;\n$sql.= \" AND cf.entity = \".$conf->entity;\n$sql.= \" GROUP BY cf.fk_statut\";\n\n$resql = $db->query($sql);\nif ($resql)\n{\n\t$num = $db->num_rows($resql);\n\t$i = 0;\n\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\"><td>'.$langs->trans(\"Orders\").'</td><td align=\"center\">'.$langs->trans(\"Nb\").'</td><td>&nbsp;</td>';\n\tprint \"</tr>\\n\";\n\t$var=True;\n\n\twhile ($i < $num)\n\t{\n\t\t$row = $db->fetch_row($resql);\n\t\t\n\n\t\tprint '<tr class=\"oddeven\">';\n\t\tprint '<td>'.$langs->trans($commande->statuts[$row[1]]).'</td>';\n\t\tprint '<td align=\"center\">'.$row[0].'</td>';\n\t\tprint '<td align=\"center\"><a href=\"'.DOL_URL_ROOT.'/fourn/commande/list.php?statut='.$row[1].'\">'.$commande->LibStatut($row[1],3).'</a></td>';\n\n\t\tprint \"</tr>\\n\";\n\t\t$i++;\n\t}\n\tprint \"</table>\";\n\tprint \"<br>\\n\";\n\t$db->free($resql);\n}\nelse\n{\n\tdol_print_error($db);\n}\n\n\n// Draft orders\nif (! empty($conf->fournisseur->enabled))\n{\n\t$langs->load(\"orders\");\n\n\t$sql = \"SELECT cf.rowid, cf.ref, cf.total_ttc,\";\n\t$sql.= \" s.nom as name, s.rowid as socid\";\n\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"commande_fournisseur as cf\";\n\t$sql.= \", \".MAIN_DB_PREFIX.\"societe as s\";\n\tif (!$user->rights->societe->client->voir && !$socid) $sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"societe_commerciaux as sc ON s.rowid = sc.fk_soc\";\n\t$sql.= \" WHERE cf.fk_soc = s.rowid\";\n\tif (!$user->rights->societe->client->voir && !$socid) $sql .= \" AND sc.fk_user = \" .$user->id;\n\t$sql.= \" AND cf.entity = \".$conf->entity;\n\t$sql.= \" AND cf.fk_statut = 0\";\n\tif ($socid) $sql .= \" AND cf.fk_soc = \".$socid;\n\n\t$resql = $db->query($sql);\n\tif ($resql)\n\t{\n\t\t$total = 0;\n\t\t$num = $db->num_rows($resql);\n\t\tif ($num)\n\t\t{\n\t\t\tprint '<table class=\"noborder\" width=\"100%\">';\n\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\tprint '<td colspan=\"3\">'.$langs->trans(\"DraftOrders\").' <span class=\"badge\">'.$num.'</span></td></tr>';\n\n\t\t\t$i = 0;\n\t\t\t$var = true;\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\tprint '<tr class=\"oddeven\"><td  class=\"nowrap\">';\n\t\t\t\t$commandestatic->id=$obj->rowid;\n\t\t\t\t$commandestatic->ref=$obj->ref;\n\t\t\t\tprint $commandestatic->getNomUrl(1,'',16);\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td  class=\"nowrap\">';\n\t\t\t\t$companystatic->id=$obj->socid;\n\t\t\t\t$companystatic->name=$obj->name;\n\t\t\t\t$companystatic->client=0;\n\t\t\t\tprint $companystatic->getNomUrl(1,'',16);\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td align=\"right\" class=\"nowrap\">'.price($obj->total_ttc).'</td></tr>';\n\t\t\t\t$i++;\n\t\t\t\t$total += $obj->total_ttc;\n\t\t\t}\n\t\t\tif ($total>0)\n\t\t\t{\n\t\t\t\t\n\t\t\t\tprint '<tr class=\"liste_total\"><td>'.$langs->trans(\"Total\").'</td><td colspan=\"2\" align=\"right\">'.price($total).\"</td></tr>\";\n\t\t\t}\n\t\t\tprint \"</table>\";\n\t\t\tprint \"<br>\\n\";\n\t\t}\n\t}\n}\n\n// Draft invoices\nif (! empty($conf->fournisseur->enabled) && $user->rights->fournisseur->facture->lire)\n{\n\t$sql = \"SELECT ff.ref_supplier, ff.rowid, ff.total_ttc, ff.type\";\n\t$sql.= \", s.nom as name, s.rowid as socid\";\n\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"facture_fourn as ff\";\n\t$sql.= \", \".MAIN_DB_PREFIX.\"societe as s\";\n\tif (!$user->rights->societe->client->voir && !$socid) $sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"societe_commerciaux as sc ON s.rowid = sc.fk_soc\";\n\t$sql.= \" WHERE s.rowid = ff.fk_soc\";\n\tif (!$user->rights->societe->client->voir && !$socid) $sql .= \" AND sc.fk_user = \" .$user->id;\n\t$sql.= \" AND ff.entity = \".$conf->entity;\n\t$sql.= \" AND ff.fk_statut = 0\";\n\tif ($socid)\t$sql .= \" AND f.fk_soc = \".$socid;\n\n\t$resql = $db->query($sql);\n\n\tif ( $resql )\n\t{\n\t\t$num = $db->num_rows($resql);\n\t\tif ($num)\n\t\t{\n\t\t\tprint '<table class=\"noborder\" width=\"100%\">';\n\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\tprint '<td colspan=\"3\">'.$langs->trans(\"DraftBills\").' <span class=\"badge\">'.$num.'</span></td></tr>';\n\t\t\t$i = 0;\n\t\t\t$tot_ttc = 0;\n\t\t\t$var = True;\n\t\t\twhile ($i < $num && $i < 20)\n\t\t\t{\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\t\n\t\t\t\tprint '<tr class=\"oddeven\"><td class=\"nowrap\">';\n\t\t\t\t$facturestatic->ref=$obj->ref;\n\t\t\t\t$facturestatic->id=$obj->rowid;\n\t\t\t\t$facturestatic->type=$obj->type;\n\t\t\t\tprint $facturestatic->getNomUrl(1,'');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td class=\"nowrap\">';\n\t\t\t\t$companystatic->id=$obj->socid;\n\t\t\t\t$companystatic->name=$obj->name;\n\t\t\t\t$companystatic->client=0;\n\t\t\t\tprint $companystatic->getNomUrl(1,'',16);\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td align=\"right\">'.price($obj->total_ttc).'</td>';\n\t\t\t\tprint '</tr>';\n\t\t\t\t$tot_ttc+=$obj->total_ttc;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tprint '<tr class=\"liste_total\"><td align=\"left\">'.$langs->trans(\"Total\").'</td>';\n\t\t\tprint '<td colspan=\"2\" align=\"right\">'.price($tot_ttc).'</td>';\n\t\t\tprint '</tr>';\n\n\t\t\tprint \"</table>\";\n\t\t\tprint \"<br>\\n\";\n\t\t}\n\t\t$db->free($resql);\n\t}\n\telse\n\t{\n\t\tdol_print_error($db);\n\t}\n}\n\n\n//print '</td><td valign=\"top\" width=\"70%\" class=\"notopnoleftnoright\">';\nprint '</div><div class=\"fichetwothirdright\"><div class=\"ficheaddleft\">';\n\n\n/*\n * List last modified supliers\n */\n$max=10;\n$sql = \"SELECT s.rowid as socid, s.nom as name, s.town, s.datec, s.tms, s.prefix_comm, s.code_fournisseur, s.code_compta_fournisseur\";\n$sql.= \", st.libelle as stcomm\";\n$sql.= \" FROM \".MAIN_DB_PREFIX.\"societe as s\";\n$sql.= \", \".MAIN_DB_PREFIX.\"c_stcomm as st\";\nif (!$user->rights->societe->client->voir && !$socid) $sql .= \", \".MAIN_DB_PREFIX.\"societe_commerciaux as sc\";\n$sql.= \" WHERE s.fk_stcomm = st.id\";\n$sql.= \" AND s.fournisseur = 1\";\n$sql.= \" AND s.entity IN (\".getEntity('societe').\")\";\nif (!$user->rights->societe->client->voir && !$socid) $sql .= \" AND s.rowid = sc.fk_soc AND sc.fk_user = \" .$user->id;\nif ($socid) $sql .= \" AND s.rowid = \".$socid;\n$sql.= \" ORDER BY s.tms DESC\";\n$sql .= $db->plimit($max, 0);\n\n$resql = $db->query($sql);\nif ($resql)\n{\n\t$langs->load(\"boxes\");\n\t$num = $db->num_rows($resql);\n\t$i = 0;\n\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\">';\n\tprint '<td colspan=\"2\">'.$langs->trans(\"BoxTitleLastSuppliers\",min($max,$num)).\"</td>\\n\";\n\tprint '<td align=\"right\">'.$langs->trans(\"DateModification\").\"</td>\\n\";\n\tprint \"</tr>\\n\";\n\n\t$var=True;\n\n\twhile ($obj = $db->fetch_object($resql) )\n\t{\n\t\t\n\n\t\tprint '<tr class=\"oddeven\">';\n\t\tprint '<td><a href=\"card.php?socid='.$obj->socid.'\">'.img_object($langs->trans(\"ShowSupplier\"),\"company\").'</a>';\n\t\tprint \"&nbsp;<a href=\\\"card.php?socid=\".$obj->socid.\"\\\">\".$obj->name.\"</a></td>\\n\";\n\t\tprint '<td align=\"left\">'.$obj->code_fournisseur.'&nbsp;</td>';\n\t\tprint '<td align=\"right\">'.dol_print_date($db->jdate($obj->tms),'day').'</td>';\n\t\tprint \"</tr>\\n\";\n\t}\n\tprint \"</table>\\n\";\n\n\t$db->free($resql);\n}\nelse\n{\n\tdol_print_error($db);\n}\n\n\n/*\n * List of suppliers categories\n */\n$companystatic->LoadSupplierCateg();\n$categstatic=new Categorie($db);\n\nif (count($companystatic->SupplierCategories))\n{\n\tprint '<br>';\n\n\tprint '<table class=\"liste\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\"><td colspan=\"2\">';\n\tprint $langs->trans(\"Category\");\n\tprint \"</td></tr>\\n\";\n\t$var=True;\n\n\tforeach ($companystatic->SupplierCategories as $rowid => $label)\n\t{\n\t\t\n\t\tprint \"<tr \".$bc[$var].\">\\n\";\n\t\tprint '<td>';\n\t\t$categstatic->id=$rowid;\n\t\t$categstatic->ref=$label;\n\t\t$categstatic->label=$label;\n\t\tprint $categstatic->getNomUrl(1);\n\t\tprint '</td>'.\"\\n\";\n\t\t// TODO this page not exist\n\t\t/*\n\t\tprint '<td align=\"right\">';\n\t\tprint '<a href=\"stats.php?cat='.$rowid.'\">('.$langs->trans(\"Stats\").')</a>';\n\t\tprint \"</tr>\\n\";\n\t\t*/\n\t}\n\tprint \"</table>\\n\";\n\tprint \"<br>\\n\";\n}\n\n\n//print \"</td></tr></table>\\n\";\nprint '</div></div></div>';\n\nllxFooter();\n\n$db->close();\n", "<?php\n/* Copyright (C) 2002-2007  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2003       Xavier Dutoit           <doli@sydesy.com>\n * Copyright (C) 2004-2015  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Sebastien Di Cintio     <sdicintio@ressource-toi.org>\n * Copyright (C) 2004       Benoit Mortier          <benoit.mortier@opensides.be>\n * Copyright (C) 2005-2015  Regis Houssin           <regis.houssin@capnetworks.com>\n * Copyright (C) 2011-2014  Philippe Grand          <philippe.grand@atoo-net.com>\n * Copyright (C) 2008       Matteli\n * Copyright (C) 2011-2016  Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2012       Christophe Battarel     <christophe.battarel@altairis.fr>\n * Copyright (C) 2014-2015  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2015       Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/main.inc.php\n *\t\\ingroup\tcore\n *\t\\brief      File that defines environment for Dolibarr GUI pages only (file not required by scripts)\n */\n\n//@ini_set('memory_limit', '128M');\t// This may be useless if memory is hard limited by your PHP\n\n// For optional tuning. Enabled if environment variable MAIN_SHOW_TUNING_INFO is defined.\n$micro_start_time=0;\nif (! empty($_SERVER['MAIN_SHOW_TUNING_INFO']))\n{\n    list($usec, $sec) = explode(\" \", microtime());\n    $micro_start_time=((float) $usec + (float) $sec);\n    // Add Xdebug code coverage\n    //define('XDEBUGCOVERAGE',1);\n    if (defined('XDEBUGCOVERAGE')) {\n        xdebug_start_code_coverage();\n    }\n}\n\n// Removed magic_quotes\nif (function_exists('get_magic_quotes_gpc'))\t// magic_quotes_* deprecated in PHP 5.0 and removed in PHP 5.5\n{\n    if (get_magic_quotes_gpc())\n    {\n        // Forcing parameter setting magic_quotes_gpc and cleaning parameters\n        // (Otherwise he would have for each position, condition\n        // Reading stripslashes variable according to state get_magic_quotes_gpc).\n        // Off mode recommended (just do $db->escape for insert / update).\n        function stripslashes_deep($value)\n        {\n            return (is_array($value) ? array_map('stripslashes_deep', $value) : stripslashes($value));\n        }\n        $_GET     = array_map('stripslashes_deep', $_GET);\n        $_POST    = array_map('stripslashes_deep', $_POST);\n        $_FILES   = array_map('stripslashes_deep', $_FILES);\n        //$_COOKIE  = array_map('stripslashes_deep', $_COOKIE); // Useless because a cookie should never be outputed on screen nor used into sql\n        @set_magic_quotes_runtime(0);\n    }\n}\n\n/**\n * Security: SQL Injection and XSS Injection (scripts) protection (Filters on GET, POST, PHP_SELF).\n *\n * @param\t\tstring\t\t$val\t\tValue\n * @param\t\tstring\t\t$type\t\t1=GET, 0=POST, 2=PHP_SELF\n * @return\t\tint\t\t\t\t\t\t>0 if there is an injection\n */\nfunction test_sql_and_script_inject($val, $type)\n{\n    $inj = 0;\n    // For SQL Injection (only GET and POST are used to be included into bad escaped SQL requests)\n    if ($type != 2)\n    {\n        $inj += preg_match('/delete\\s+from/i',\t $val);\n        $inj += preg_match('/create\\s+table/i',\t $val);\n        $inj += preg_match('/update.+set.+=/i',  $val);\n        $inj += preg_match('/insert\\s+into/i', \t $val);\n        $inj += preg_match('/select.+from/i', \t $val);\n        $inj += preg_match('/union.+select/i', \t $val);\n        $inj += preg_match('/into\\s+(outfile|dumpfile)/i',  $val);\n        $inj += preg_match('/(\\.\\.%2f)+/i',\t\t $val);\n    }\n    // For XSS Injection done by adding javascript with script\n    // This is all cases a browser consider text is javascript:\n    // When it found '<script', 'javascript:', '<style', 'onload\\s=' on body tag, '=\"&' on a tag size with old browsers\n    // All examples on page: http://ha.ckers.org/xss.html#XSScalc\n    $inj += preg_match('/<script/i', $val);\n    if (! defined('NOSTYLECHECK')) $inj += preg_match('/<style/i', $val);\n    $inj += preg_match('/base[\\s]+href/si', $val);\n    $inj += preg_match('/<.*onmouse/si', $val);       // onmousexxx can be set on img or any html tag like <img title='...' onmouseover=alert(1)>\n    $inj += preg_match('/onerror\\s*=/i', $val);       // onerror can be set on img or any html tag like <img title='...' onerror = alert(1)>\n    $inj += preg_match('/onfocus\\s*=/i', $val);       // onfocus can be set on input text html tag like <input type='text' value='...' onfocus = alert(1)>\n    $inj += preg_match('/onload\\s*=/i', $val);        // onload can be set on input text html tag like <input type='text' value='...' onfocus = alert(1)>\n    if ($type == 1)\n    {\n        $inj += preg_match('/javascript:/i', $val);\n        $inj += preg_match('/vbscript:/i', $val);\n    }\n    // For XSS Injection done by adding javascript closing html tags like with onmousemove, etc... (closing a src or href tag with not cleaned param)\n    if ($type == 1) $inj += preg_match('/\"/i', $val);\t\t// We refused \" in GET parameters value\n    if ($type == 2) $inj += preg_match('/[;\"]/', $val);\t\t// PHP_SELF is a file system path. It can contains spaces.\n    return $inj;\n}\n\n/**\n * Return true if security check on parameters are OK, false otherwise.\n *\n * @param\t\tstring\t\t\t$var\t\tVariable name\n * @param\t\tstring\t\t\t$type\t\t1=GET, 0=POST, 2=PHP_SELF\n * @return\t\tboolean||null\t\t\t\ttrue if there is an injection. Stop code if injection found.\n */\nfunction analyseVarsForSqlAndScriptsInjection(&$var, $type)\n{\n    if (is_array($var))\n    {\n        foreach ($var as $key => $value)\n        {\n            if (analyseVarsForSqlAndScriptsInjection($value,$type))\n            {\n                $var[$key] = $value;\n            }\n            else\n\t\t\t{\n                print 'Access refused by SQL/Script injection protection in main.inc.php (type='.htmlentities($type).' key='.htmlentities($key).' value='.htmlentities($value).' page='.htmlentities($_SERVER[\"REQUEST_URI\"]).')';\n                exit;\n            }\n        }\n        return true;\n    }\n    else\n    {\n        return (test_sql_and_script_inject($var,$type) <= 0);\n    }\n}\n\n\n// Check consistency of NOREQUIREXXX DEFINES\nif ((defined('NOREQUIREDB') || defined('NOREQUIRETRAN')) && ! defined('NOREQUIREMENU')) dol_print_error('','If define NOREQUIREDB or NOREQUIRETRAN are set, you must also set NOREQUIREMENU or not use them');\n\n// Sanity check on URL\nif (! empty($_SERVER[\"PHP_SELF\"]))\n{\n    $morevaltochecklikepost=array($_SERVER[\"PHP_SELF\"]);\n    analyseVarsForSqlAndScriptsInjection($morevaltochecklikepost,2);\n}\n// Sanity check on GET parameters\nif (! defined('NOSCANGETFORINJECTION') && ! empty($_SERVER[\"QUERY_STRING\"]))\n{\n    $morevaltochecklikeget=array($_SERVER[\"QUERY_STRING\"]);\n    analyseVarsForSqlAndScriptsInjection($morevaltochecklikeget,1);\n}\n// Sanity check on POST\nif (! defined('NOSCANPOSTFORINJECTION'))\n{\n\tanalyseVarsForSqlAndScriptsInjection($_POST,0);\n}\n\n// This is to make Dolibarr working with Plesk\nif (! empty($_SERVER['DOCUMENT_ROOT']) && substr($_SERVER['DOCUMENT_ROOT'], -6) !== 'htdocs')\n{\n\tset_include_path($_SERVER['DOCUMENT_ROOT'] . '/htdocs');\n}\n\n// Include the conf.php and functions.lib.php\nrequire_once 'filefunc.inc.php';\n\n// If there is a POST parameter to tell to save automatically some POST parameters into cookies, we do it\nif (! empty($_POST[\"DOL_AUTOSET_COOKIE\"]))\n{\n\t$tmpautoset=explode(':',$_POST[\"DOL_AUTOSET_COOKIE\"],2);\n\t$tmplist=explode(',',$tmpautoset[1]);\n\t$cookiearrayvalue='';\n\tforeach ($tmplist as $tmpkey)\n\t{\n\t\t$postkey=$tmpautoset[0].'_'.$tmpkey;\n\t\t//var_dump('tmpkey='.$tmpkey.' postkey='.$postkey.' value='.$_POST[$postkey]);\n\t\tif (! empty($_POST[$postkey])) $cookiearrayvalue[$tmpkey]=$_POST[$postkey];\n\t}\n\t$cookiename=$tmpautoset[0];\n\t$cookievalue=json_encode($cookiearrayvalue);\n\t//var_dump('setcookie cookiename='.$cookiename.' cookievalue='.$cookievalue);\n\tsetcookie($cookiename, empty($cookievalue)?'':$cookievalue, empty($cookievalue)?0:(time()+(86400*354)), '/');\t// keep cookie 1 year\n\tif (empty($cookievalue)) unset($_COOKIE[$cookiename]);\n}\n\n// Init session. Name of session is specific to Dolibarr instance.\n$prefix=dol_getprefix();\n$sessionname='DOLSESSID_'.$prefix;\n$sessiontimeout='DOLSESSTIMEOUT_'.$prefix;\nif (! empty($_COOKIE[$sessiontimeout])) ini_set('session.gc_maxlifetime',$_COOKIE[$sessiontimeout]);\nsession_name($sessionname);\nsession_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie\n// This create lock released until session_write_close() or end of page.\n// We need this lock as long as we read/write $_SESSION ['vars']. We can close released when finished.\nif (! defined('NOSESSION'))\n{\n    session_start();\n    if (ini_get('register_globals'))    // Deprecated in 5.3 and removed in 5.4. To solve bug in using $_SESSION\n    {\n        foreach ($_SESSION as $key=>$value)\n        {\n            if (isset($GLOBALS[$key])) unset($GLOBALS[$key]);\n        }\n    }\n}\n\n// Init the 5 global objects, this include will make the new and set properties for: $conf, $db, $langs, $user, $mysoc\nrequire_once 'master.inc.php';\n\n// Activate end of page function\nregister_shutdown_function('dol_shutdown');\n\n// Detection browser\nif (isset($_SERVER[\"HTTP_USER_AGENT\"]))\n{\n    $tmp=getBrowserInfo($_SERVER[\"HTTP_USER_AGENT\"]);\n    $conf->browser->name=$tmp['browsername'];\n    $conf->browser->os=$tmp['browseros'];\n    $conf->browser->version=$tmp['browserversion'];\n    $conf->browser->layout=$tmp['layout'];     // 'classic', 'phone', 'tablet'\n    $conf->browser->phone=$tmp['phone'];\t   // TODO deprecated, use ->layout\n    $conf->browser->tablet=$tmp['tablet'];\t   // TODO deprecated, use ->layout\n    //var_dump($conf->browser);\n\n    if ($conf->browser->layout == 'phone') $conf->dol_no_mouse_hover=1;\n    if ($conf->browser->layout == 'phone') $conf->global->MAIN_TESTMENUHIDER=1;\n}\n\n// Force HTTPS if required ($conf->file->main_force_https is 0/1 or https dolibarr root url)\n// $_SERVER[\"HTTPS\"] is 'on' when link is https, otherwise $_SERVER[\"HTTPS\"] is empty or 'off'\nif (! empty($conf->file->main_force_https) && (empty($_SERVER[\"HTTPS\"]) || $_SERVER[\"HTTPS\"] != 'on'))\n{\n    $newurl='';\n    if (is_numeric($conf->file->main_force_https))\n    {\n        if ($conf->file->main_force_https == '1' && ! empty($_SERVER[\"SCRIPT_URI\"]))\t// If SCRIPT_URI supported by server\n        {\n            if (preg_match('/^http:/i',$_SERVER[\"SCRIPT_URI\"]) && ! preg_match('/^https:/i',$_SERVER[\"SCRIPT_URI\"]))\t// If link is http\n            {\n                $newurl=preg_replace('/^http:/i','https:',$_SERVER[\"SCRIPT_URI\"]);\n            }\n        }\n        else\t// Check HTTPS environment variable (Apache/mod_ssl only)\n        {\n            $newurl=preg_replace('/^http:/i','https:',DOL_MAIN_URL_ROOT).$_SERVER[\"REQUEST_URI\"];\n        }\n    }\n    else\n    {\n        // Check HTTPS environment variable (Apache/mod_ssl only)\n        $newurl=$conf->file->main_force_https.$_SERVER[\"REQUEST_URI\"];\n    }\n    // Start redirect\n    if ($newurl)\n    {\n        dol_syslog(\"main.inc: dolibarr_main_force_https is on, we make a redirect to \".$newurl);\n        header(\"Location: \".$newurl);\n        exit;\n    }\n    else\n    {\n        dol_syslog(\"main.inc: dolibarr_main_force_https is on but we failed to forge new https url so no redirect is done\", LOG_WARNING);\n    }\n}\n\n\n// Loading of additional presentation includes\nif (! defined('NOREQUIREHTML')) require_once DOL_DOCUMENT_ROOT .'/core/class/html.form.class.php';\t    // Need 660ko memory (800ko in 2.2)\nif (! defined('NOREQUIREAJAX') && $conf->use_javascript_ajax) require_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\t// Need 22ko memory\n\n// If install or upgrade process not done or not completely finished, we call the install page.\nif (! empty($conf->global->MAIN_NOT_INSTALLED) || ! empty($conf->global->MAIN_NOT_UPGRADED))\n{\n    dol_syslog(\"main.inc: A previous install or upgrade was not complete. Redirect to install page.\", LOG_WARNING);\n    header(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n    exit;\n}\n// If an upgrade process is required, we call the install page.\nif ((! empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ($conf->global->MAIN_VERSION_LAST_UPGRADE != DOL_VERSION))\n|| (empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ! empty($conf->global->MAIN_VERSION_LAST_INSTALL) && ($conf->global->MAIN_VERSION_LAST_INSTALL != DOL_VERSION)))\n{\n    $versiontocompare=empty($conf->global->MAIN_VERSION_LAST_UPGRADE)?$conf->global->MAIN_VERSION_LAST_INSTALL:$conf->global->MAIN_VERSION_LAST_UPGRADE;\n    require_once DOL_DOCUMENT_ROOT .'/core/lib/admin.lib.php';\n    $dolibarrversionlastupgrade=preg_split('/[.-]/',$versiontocompare);\n    $dolibarrversionprogram=preg_split('/[.-]/',DOL_VERSION);\n    $rescomp=versioncompare($dolibarrversionprogram,$dolibarrversionlastupgrade);\n    if ($rescomp > 0)   // Programs have a version higher than database. We did not add \"&& $rescomp < 3\" because we want upgrade process for build upgrades\n    {\n        dol_syslog(\"main.inc: database version \".$versiontocompare.\" is lower than programs version \".DOL_VERSION.\". Redirect to install page.\", LOG_WARNING);\n        header(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n        exit;\n    }\n}\n\n// Creation of a token against CSRF vulnerabilities\nif (! defined('NOTOKENRENEWAL'))\n{\n    // roulement des jetons car cree a chaque appel\n    if (isset($_SESSION['newtoken'])) $_SESSION['token'] = $_SESSION['newtoken'];\n\n    // Save in $_SESSION['newtoken'] what will be next token. Into forms, we will add param token = $_SESSION['newtoken']\n    $token = dol_hash(uniqid(mt_rand(),TRUE)); // Generates a hash of a random number\n    $_SESSION['newtoken'] = $token;\n}\nif (! defined('NOCSRFCHECK') && empty($dolibarr_nocsrfcheck) && ! empty($conf->global->MAIN_SECURITY_CSRF_WITH_TOKEN))\t// Check validity of token, only if option enabled (this option breaks some features sometimes)\n{\n    if ($_SERVER['REQUEST_METHOD'] == 'POST' && ! GETPOST('token','alpha')) // Note, offender can still send request by GET\n    {\n        print \"Access refused by CSRF protection in main.inc.php. Token not provided.\\n\";\n        print \"If you access your server behind a proxy using url rewriting, you might check that all HTTP header is propagated (or add the line \\$dolibarr_nocsrfcheck=1 into your conf.php file).\\n\";\n        die;\n    }\n    if ($_SERVER['REQUEST_METHOD'] === 'POST')  // This test must be after loading $_SESSION['token'].\n    {\n        if (GETPOST('token', 'alpha') != $_SESSION['token'])\n        {\n            dol_syslog(\"Invalid token in \".$_SERVER['HTTP_REFERER'].\", action=\".GETPOST('action','aZ09').\", _POST['token']=\".GETPOST('token','alpha').\", _SESSION['token']=\".$_SESSION['token'], LOG_WARNING);\n            //print 'Unset POST by CSRF protection in main.inc.php.';\t// Do not output anything because this create problems when using the BACK button on browsers.\n            unset($_POST);\n        }\n    }\n}\n\n// Disable modules (this must be after session_start and after conf has been loaded)\nif (GETPOST('disablemodules','alpha'))  $_SESSION[\"disablemodules\"]=GETPOST('disablemodules','alpha');\nif (! empty($_SESSION[\"disablemodules\"]))\n{\n    $disabled_modules=explode(',',$_SESSION[\"disablemodules\"]);\n    foreach($disabled_modules as $module)\n    {\n        if ($module)\n        {\n        \tif (empty($conf->$module)) $conf->$module=new stdClass();\n        \t$conf->$module->enabled=false;\n        \tif ($module == 'fournisseur')\t\t// Special case\n        \t{\n        \t\t$conf->supplier_order->enabled=0;\n        \t\t$conf->supplier_invoice->enabled=0;\n        \t}\n        }\n    }\n}\n\n\n/*\n * Phase authentication / login\n */\n$login='';\nif (! defined('NOLOGIN'))\n{\n    // $authmode lists the different means of identification to be tested in order of preference.\n    // Example: 'http', 'dolibarr', 'ldap', 'http,forceuser'\n\n    // Authentication mode\n    if (empty($dolibarr_main_authentication)) $dolibarr_main_authentication='http,dolibarr';\n    // Authentication mode: forceuser\n    if ($dolibarr_main_authentication == 'forceuser' && empty($dolibarr_auto_user)) $dolibarr_auto_user='auto';\n    // Set authmode\n    $authmode=explode(',',$dolibarr_main_authentication);\n\n    // No authentication mode\n    if (! count($authmode))\n    {\n        $langs->load('main');\n        dol_print_error('',$langs->trans(\"ErrorConfigParameterNotDefined\",'dolibarr_main_authentication'));\n        exit;\n    }\n\n    // If login request was already post, we retrieve login from the session\n    // Call module if not realized that his request.\n    // At the end of this phase, the variable $login is defined.\n    $resultFetchUser='';\n    $test=true;\n    if (! isset($_SESSION[\"dol_login\"]))\n    {\n        // It is not already authenticated and it requests the login / password\n        include_once DOL_DOCUMENT_ROOT.'/core/lib/security2.lib.php';\n\n        $dol_dst_observed=GETPOST(\"dst_observed\",'int',3);\n        $dol_dst_first=GETPOST(\"dst_first\",'int',3);\n        $dol_dst_second=GETPOST(\"dst_second\",'int',3);\n        $dol_screenwidth=GETPOST(\"screenwidth\",'int',3);\n        $dol_screenheight=GETPOST(\"screenheight\",'int',3);\n        $dol_hide_topmenu=GETPOST('dol_hide_topmenu','int',3);\n        $dol_hide_leftmenu=GETPOST('dol_hide_leftmenu','int',3);\n        $dol_optimize_smallscreen=GETPOST('dol_optimize_smallscreen','int',3);\n        $dol_no_mouse_hover=GETPOST('dol_no_mouse_hover','int',3);\n        $dol_use_jmobile=GETPOST('dol_use_jmobile','int',3);\n        //dol_syslog(\"POST key=\".join(array_keys($_POST),',').' value='.join($_POST,','));\n\n        // If in demo mode, we check we go to home page through the public/demo/index.php page\n        if (! empty($dolibarr_main_demo) && $_SERVER['PHP_SELF'] == DOL_URL_ROOT.'/index.php')  // We ask index page\n        {\n            if (empty($_SERVER['HTTP_REFERER']) || ! preg_match('/public/',$_SERVER['HTTP_REFERER']))\n            {\n                dol_syslog(\"Call index page from another url than demo page (call is done from page \".$_SERVER['HTTP_REFERER'].\")\");\n                $url='';\n                $url.=($url?'&':'').($dol_hide_topmenu?'dol_hide_topmenu='.$dol_hide_topmenu:'');\n                $url.=($url?'&':'').($dol_hide_leftmenu?'dol_hide_leftmenu='.$dol_hide_leftmenu:'');\n                $url.=($url?'&':'').($dol_optimize_smallscreen?'dol_optimize_smallscreen='.$dol_optimize_smallscreen:'');\n                $url.=($url?'&':'').($dol_no_mouse_hover?'dol_no_mouse_hover='.$dol_no_mouse_hover:'');\n                $url.=($url?'&':'').($dol_use_jmobile?'dol_use_jmobile='.$dol_use_jmobile:'');\n                $url=DOL_URL_ROOT.'/public/demo/index.php'.($url?'?'.$url:'');\n                header(\"Location: \".$url);\n                exit;\n            }\n        }\n\n        // Verification security graphic code\n        if (GETPOST(\"username\",\"alpha\",2) && ! empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA))\n        {\n            $sessionkey = 'dol_antispam_value';\n            $ok=(array_key_exists($sessionkey, $_SESSION) === TRUE && (strtolower($_SESSION[$sessionkey]) == strtolower($_POST['code'])));\n\n            // Check code\n            if (! $ok)\n            {\n                dol_syslog('Bad value for code, connexion refused');\n                $langs->load('main');\n                $langs->load('errors');\n\n                $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadValueForCode\");\n                $test=false;\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg='ErrorBadValueForCode - login='.GETPOST(\"username\",\"alpha\",2);\n                // Call of triggers\n                include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n                $interface=new Interfaces($db);\n                $result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n                if ($result < 0) {\n                    $error++;\n                }\n                // End Call of triggers\n\n                // Hooks on failed login\n\t\t        $action='';\n\t\t        $hookmanager->initHooks(array('login'));\n\t\t        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t        $reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t        if ($reshook < 0) $error++;\n\n\t\t        // Note: exit is done later\n            }\n        }\n\n        $usertotest\t\t= (! empty($_COOKIE['login_dolibarr']) ? $_COOKIE['login_dolibarr'] : GETPOST(\"username\",\"alpha\",2));\n        $passwordtotest\t= GETPOST('password','none',2);\n        $entitytotest\t= (GETPOST('entity','int') ? GETPOST('entity','int') : (!empty($conf->entity) ? $conf->entity : 1));\n\n        // Define if we received data to test the login.\n        $goontestloop=false;\n        if (isset($_SERVER[\"REMOTE_USER\"]) && in_array('http',$authmode)) $goontestloop=true;\n        if ($dolibarr_main_authentication == 'forceuser' && ! empty($dolibarr_auto_user)) $goontestloop=true;\n        if (GETPOST(\"username\",\"alpha\",2) || ! empty($_COOKIE['login_dolibarr']) || GETPOST('openid_mode','alpha',1)) $goontestloop=true;\n\n        if (! is_object($langs)) // This can occurs when calling page with NOREQUIRETRAN defined, however we need langs for error messages.\n        {\n            include_once DOL_DOCUMENT_ROOT.'/core/class/translate.class.php';\n            $langs=new Translate(\"\",$conf);\n    \t\t$langcode=(GETPOST('lang','aZ09',1)?GETPOST('lang','aZ09',1):(empty($conf->global->MAIN_LANG_DEFAULT)?'auto':$conf->global->MAIN_LANG_DEFAULT));\n        \t$langs->setDefaultLang($langcode);\n        }\n\n        // Validation of login/pass/entity\n        // If ok, the variable login will be returned\n        // If error, we will put error message in session under the name dol_loginmesg\n        if ($test && $goontestloop)\n        {\n        \t$login = checkLoginPassEntity($usertotest,$passwordtotest,$entitytotest,$authmode);\n        \tif ($login)\n            {\n                $dol_authmode=$conf->authmode;\t// This properties is defined only when logged, to say what mode was successfully used\n                $dol_tz=$_POST[\"tz\"];\n                $dol_tz_string=$_POST[\"tz_string\"];\n                $dol_tz_string=preg_replace('/\\s*\\(.+\\)$/','',$dol_tz_string);\n                $dol_tz_string=preg_replace('/,/','/',$dol_tz_string);\n                $dol_tz_string=preg_replace('/\\s/','_',$dol_tz_string);\n                $dol_dst=0;\n                if (isset($_POST[\"dst_first\"]) && isset($_POST[\"dst_second\"]))\n                {\n                    include_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n                    $datenow=dol_now();\n                    $datefirst=dol_stringtotime($_POST[\"dst_first\"]);\n                    $datesecond=dol_stringtotime($_POST[\"dst_second\"]);\n                    if ($datenow >= $datefirst && $datenow < $datesecond) $dol_dst=1;\n                }\n                //print $datefirst.'-'.$datesecond.'-'.$datenow.'-'.$dol_tz.'-'.$dol_tzstring.'-'.$dol_dst; exit;\n            }\n\n            if (! $login)\n            {\n                dol_syslog('Bad password, connexion refused',LOG_DEBUG);\n                $langs->load('main');\n                $langs->load('errors');\n\n                // Bad password. No authmode has found a good password.\n                // We set a generic message if not defined inside function checkLoginPassEntity or subfunctions\n                if (empty($_SESSION[\"dol_loginmesg\"])) $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadLoginPassword\");\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg=$langs->trans(\"ErrorBadLoginPassword\").' - login='.GETPOST(\"username\",\"alpha\",2);\n                // Call of triggers\n                include_once DOL_DOCUMENT_ROOT.'/core/class/interfaces.class.php';\n                $interface=new Interfaces($db);\n                $result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,GETPOST(\"username\",\"alpha\",2));\n                if ($result < 0) {\n                    $error++;\n                }\n                // End Call of triggers\n\n                // Hooks on failed login\n\t\t        $action='';\n\t\t        $hookmanager->initHooks(array('login'));\n\t\t        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t        $reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t        if ($reshook < 0) $error++;\n\n\t\t        // Note: exit is done in next chapter\n            }\n        }\n\n        // End test login / passwords\n        if (! $login || (in_array('ldap',$authmode) && empty($passwordtotest)))\t// With LDAP we refused empty password because some LDAP are \"opened\" for anonymous access so connexion is a success.\n        {\n            // No data to test login, so we show the login page\n\t\t\tdol_syslog(\"--- Access to \".$_SERVER[\"PHP_SELF\"].\" showing the login form and exit\");\n\t\t\tif (defined('NOREDIRECTBYMAINTOLOGIN')) return 'ERROR_NOT_LOGGED';\n        \telse dol_loginfunction($langs,$conf,(! empty($mysoc)?$mysoc:''));\n            exit;\n        }\n\n        $resultFetchUser=$user->fetch('', $login, '', 1, ($entitytotest > 0 ? $entitytotest : -1));\n        if ($resultFetchUser <= 0)\n        {\n            dol_syslog('User not found, connexion refused');\n            session_destroy();\n            session_name($sessionname);\n            session_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie\n            session_start();    // Fixing the bug of register_globals here is useless since session is empty\n\n            if ($resultFetchUser == 0)\n            {\n                $langs->load('main');\n                $langs->load('errors');\n\n                $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\",$login);\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n            }\n            if ($resultFetchUser < 0)\n            {\n                $_SESSION[\"dol_loginmesg\"]=$user->error;\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg=$user->error;\n            }\n\n            // Call triggers\n            include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n            $interface=new Interfaces($db);\n            $result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n            if ($result < 0) {\n                $error++;\n            }\n            // End call triggers\n\n\t        // Hooks on failed login\n\t        $action='';\n\t        $hookmanager->initHooks(array('login'));\n\t        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t        $reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t        if ($reshook < 0) $error++;\n\n\t        $paramsurl=array();\n\t        if (GETPOST('textbrowser','int')) $paramsurl[]='textbrowser='.GETPOST('textbrowser','int');\n\t        if (GETPOST('nojs','int'))        $paramsurl[]='nojs='.GETPOST('nojs','int');\n\t        if (GETPOST('lang','aZ09'))       $paramsurl[]='lang='.GETPOST('lang','aZ09');\n            header('Location: '.DOL_URL_ROOT.'/index.php'.(count($paramsurl)?'?'.implode('&',$paramsurl):''));\n            exit;\n        }\n    }\n    else\n    {\n        // We are already into an authenticated session\n        $login=$_SESSION[\"dol_login\"];\n        $entity=$_SESSION[\"dol_entity\"];\n        dol_syslog(\"- This is an already logged session. _SESSION['dol_login']=\".$login.\" _SESSION['dol_entity']=\".$entity, LOG_DEBUG);\n\n        $resultFetchUser=$user->fetch('', $login, '', 1, ($entity > 0 ? $entity : -1));\n        if ($resultFetchUser <= 0)\n        {\n            // Account has been removed after login\n            dol_syslog(\"Can't load user even if session logged. _SESSION['dol_login']=\".$login, LOG_WARNING);\n            session_destroy();\n            session_name($sessionname);\n            session_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie\n            session_start();    // Fixing the bug of register_globals here is useless since session is empty\n\n            if ($resultFetchUser == 0)\n            {\n                $langs->load('main');\n                $langs->load('errors');\n\n                $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\",$login);\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n            }\n            if ($resultFetchUser < 0)\n            {\n                $_SESSION[\"dol_loginmesg\"]=$user->error;\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg=$user->error;\n            }\n\n            // TODO @deprecated Remove this. Hook must be used, not this trigger.\n            // Call triggers\n            include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n            $interface=new Interfaces($db);\n            $result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n            if ($result < 0) {\n                $error++;\n            }\n            // End call triggers\n\n\t        // Hooks on failed login\n\t        $action='';\n\t        $hookmanager->initHooks(array('login'));\n\t        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t        $reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t        if ($reshook < 0) $error++;\n\n\t        $paramsurl=array();\n\t        if (GETPOST('textbrowser','int')) $paramsurl[]='textbrowser='.GETPOST('textbrowser','int');\n\t        if (GETPOST('nojs','int'))        $paramsurl[]='nojs='.GETPOST('nojs','int');\n\t        if (GETPOST('lang','aZ09'))       $paramsurl[]='lang='.GETPOST('lang','aZ09');\n            header('Location: '.DOL_URL_ROOT.'/index.php'.(count($paramsurl)?'?'.implode('&',$paramsurl):''));\n            exit;\n        }\n        else\n\t\t{\n\t       // Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n\t       $hookmanager->initHooks(array('main'));\n\n\t       // Code for search criteria persistence.\n\t       if (! empty($_GET['save_lastsearch_values']))    // Keep $_GET here\n\t       {\n               $relativepathstring = preg_replace('/\\?.*$/','',$_SERVER[\"HTTP_REFERER\"]);\n               $relativepathstring = preg_replace('/^https?:\\/\\/[^\\/]*/','',$relativepathstring);     // Get full path except host server\n               // Clean $relativepathstring\n   \t           if (constant('DOL_URL_ROOT')) $relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'),'/').'/', '', $relativepathstring);\n               $relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n               $relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n               //var_dump($relativepathstring);\n\n               if (! empty($_SESSION['lastsearch_values_tmp_'.$relativepathstring]))\n               {\n                   $_SESSION['lastsearch_values_'.$relativepathstring]=$_SESSION['lastsearch_values_tmp_'.$relativepathstring];\n                   unset($_SESSION['lastsearch_values_tmp_'.$relativepathstring]);\n               }\n\t       }\n\n\t       $action = '';\n\t       $reshook = $hookmanager->executeHooks('updateSession', array(), $user, $action);\n\t       if ($reshook < 0) {\n\t\t       setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\t       }\n        }\n    }\n\n    // Is it a new session that has started ?\n    // If we are here, this means authentication was successfull.\n    if (! isset($_SESSION[\"dol_login\"]))\n    {\n        // New session for this login has started.\n    \t$error=0;\n\n    \t// Store value into session (values always stored)\n        $_SESSION[\"dol_login\"]=$user->login;\n        $_SESSION[\"dol_authmode\"]=isset($dol_authmode)?$dol_authmode:'';\n        $_SESSION[\"dol_tz\"]=isset($dol_tz)?$dol_tz:'';\n        $_SESSION[\"dol_tz_string\"]=isset($dol_tz_string)?$dol_tz_string:'';\n        $_SESSION[\"dol_dst\"]=isset($dol_dst)?$dol_dst:'';\n        $_SESSION[\"dol_dst_observed\"]=isset($dol_dst_observed)?$dol_dst_observed:'';\n        $_SESSION[\"dol_dst_first\"]=isset($dol_dst_first)?$dol_dst_first:'';\n        $_SESSION[\"dol_dst_second\"]=isset($dol_dst_second)?$dol_dst_second:'';\n        $_SESSION[\"dol_screenwidth\"]=isset($dol_screenwidth)?$dol_screenwidth:'';\n        $_SESSION[\"dol_screenheight\"]=isset($dol_screenheight)?$dol_screenheight:'';\n        $_SESSION[\"dol_company\"]=$conf->global->MAIN_INFO_SOCIETE_NOM;\n        $_SESSION[\"dol_entity\"]=$conf->entity;\n    \t// Store value into session (values stored only if defined)\n        if (! empty($dol_hide_topmenu))         $_SESSION['dol_hide_topmenu']=$dol_hide_topmenu;\n        if (! empty($dol_hide_leftmenu))        $_SESSION['dol_hide_leftmenu']=$dol_hide_leftmenu;\n        if (! empty($dol_optimize_smallscreen)) $_SESSION['dol_optimize_smallscreen']=$dol_optimize_smallscreen;\n        if (! empty($dol_no_mouse_hover))       $_SESSION['dol_no_mouse_hover']=$dol_no_mouse_hover;\n        if (! empty($dol_use_jmobile))          $_SESSION['dol_use_jmobile']=$dol_use_jmobile;\n\n        dol_syslog(\"This is a new started user session. _SESSION['dol_login']=\".$_SESSION[\"dol_login\"].\" Session id=\".session_id());\n\n        $db->begin();\n\n        $user->update_last_login_date();\n\n        $loginfo = 'TZ='.$_SESSION[\"dol_tz\"].';TZString='.$_SESSION[\"dol_tz_string\"].';Screen='.$_SESSION[\"dol_screenwidth\"].'x'.$_SESSION[\"dol_screenheight\"];\n\n        // TODO @deprecated Remove this. Hook must be used, not this trigger.\n        $user->trigger_mesg = $loginfo;\n        // Call triggers\n        include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n        $interface=new Interfaces($db);\n        $result=$interface->run_triggers('USER_LOGIN',$user,$user,$langs,$conf);\n        if ($result < 0) {\n            $error++;\n        }\n        // End call triggers\n\n        // Hooks on successfull login\n        $action='';\n        $hookmanager->initHooks(array('login'));\n        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginfo'=>$loginfo);\n        $reshook=$hookmanager->executeHooks('afterLogin',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n        if ($reshook < 0) $error++;\n\n        if ($error)\n        {\n            $db->rollback();\n            session_destroy();\n            dol_print_error($db,'Error in some hooks afterLogin (or old trigger USER_LOGIN)');\n            exit;\n        }\n        else\n\t\t{\n            $db->commit();\n        }\n\n        // Change landing page if defined.\n        $landingpage=(empty($user->conf->MAIN_LANDING_PAGE)?(empty($conf->global->MAIN_LANDING_PAGE)?'':$conf->global->MAIN_LANDING_PAGE):$user->conf->MAIN_LANDING_PAGE);\n        if (! empty($landingpage))    // Example: /index.php\n        {\n            $newpath=dol_buildpath($landingpage, 1);\n            if ($_SERVER[\"PHP_SELF\"] != $newpath)   // not already on landing page (avoid infinite loop)\n            {\n                header('Location: '.$newpath);\n                exit;\n            }\n        }\n    }\n\n\n    // If user admin, we force the rights-based modules\n    if ($user->admin)\n    {\n        $user->rights->user->user->lire=1;\n        $user->rights->user->user->creer=1;\n        $user->rights->user->user->password=1;\n        $user->rights->user->user->supprimer=1;\n        $user->rights->user->self->creer=1;\n        $user->rights->user->self->password=1;\n    }\n\n    /*\n     * Overwrite some configs globals (try to avoid this and have code to use instead $user->conf->xxx)\n     */\n\n    // Set liste_limit\n    if (isset($user->conf->MAIN_SIZE_LISTE_LIMIT))\t$conf->liste_limit = $user->conf->MAIN_SIZE_LISTE_LIMIT;\t// Can be 0\n    if (isset($user->conf->PRODUIT_LIMIT_SIZE))\t$conf->product->limit_size = $user->conf->PRODUIT_LIMIT_SIZE;\t// Can be 0\n\n    // Replace conf->css by personalized value if theme not forced\n    if (empty($conf->global->MAIN_FORCETHEME) && ! empty($user->conf->MAIN_THEME))\n    {\n        $conf->theme=$user->conf->MAIN_THEME;\n        $conf->css  = \"/theme/\".$conf->theme.\"/style.css.php\";\n    }\n}\n\n// Case forcing style from url\nif (GETPOST('theme','alpha'))\n{\n\t$conf->theme=GETPOST('theme','alpha',1);\n\t$conf->css  = \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n\n\n// Set javascript option\nif (! GETPOST('nojs','int'))   // If javascript was not disabled on URL\n{\n\tif (! empty($user->conf->MAIN_DISABLE_JAVASCRIPT))\n\t{\n\t\t$conf->use_javascript_ajax=! $user->conf->MAIN_DISABLE_JAVASCRIPT;\n\t}\n}\nelse $conf->use_javascript_ajax=0;\n// Set MAIN_OPTIMIZEFORTEXTBROWSER\nif (GETPOST('textbrowser','int') || (! empty($conf->browser->name) && $conf->browser->name == 'lynxlinks') || ! empty($user->conf->MAIN_OPTIMIZEFORTEXTBROWSER))   // If we must enable text browser\n{\n    $conf->global->MAIN_OPTIMIZEFORTEXTBROWSER=1;\n}\n\n// Set terminal output option according to conf->browser.\nif (GETPOST('dol_hide_leftmenu','int') || ! empty($_SESSION['dol_hide_leftmenu']))               $conf->dol_hide_leftmenu=1;\nif (GETPOST('dol_hide_topmenu','int') || ! empty($_SESSION['dol_hide_topmenu']))                 $conf->dol_hide_topmenu=1;\nif (GETPOST('dol_optimize_smallscreen','int') || ! empty($_SESSION['dol_optimize_smallscreen'])) $conf->dol_optimize_smallscreen=1;\nif (GETPOST('dol_no_mouse_hover','int') || ! empty($_SESSION['dol_no_mouse_hover']))             $conf->dol_no_mouse_hover=1;\nif (GETPOST('dol_use_jmobile','int') || ! empty($_SESSION['dol_use_jmobile']))                   $conf->dol_use_jmobile=1;\nif (! empty($conf->browser->layout) && $conf->browser->layout != 'classic') $conf->dol_no_mouse_hover=1;\nif ((! empty($conf->browser->layout) && $conf->browser->layout == 'phone')\n\t|| (! empty($_SESSION['dol_screenwidth']) && $_SESSION['dol_screenwidth'] < 400)\n\t|| (! empty($_SESSION['dol_screenheight']) && $_SESSION['dol_screenheight'] < 400)\n)\n{\n\t$conf->dol_optimize_smallscreen=1;\n}\n// If we force to use jmobile, then we reenable javascript\nif (! empty($conf->dol_use_jmobile)) $conf->use_javascript_ajax=1;\n// Replace themes bugged with jmobile with eldy\nif (! empty($conf->dol_use_jmobile) && in_array($conf->theme,array('bureau2crea','cameleo','amarok')))\n{\n\t$conf->theme='eldy';\n\t$conf->css  =  \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n//var_dump($conf->browser->phone);\n\nif (! defined('NOREQUIRETRAN'))\n{\n    if (! GETPOST('lang','aZ09'))\t// If language was not forced on URL\n    {\n        // If user has chosen its own language\n        if (! empty($user->conf->MAIN_LANG_DEFAULT))\n        {\n            // If different than current language\n            //print \">>>\".$langs->getDefaultLang().\"-\".$user->conf->MAIN_LANG_DEFAULT;\n            if ($langs->getDefaultLang() != $user->conf->MAIN_LANG_DEFAULT)\n            {\n                $langs->setDefaultLang($user->conf->MAIN_LANG_DEFAULT);\n            }\n        }\n    }\n}\n\nif (! defined('NOLOGIN'))\n{\n    // If the login is not recovered, it is identified with an account that does not exist.\n    // Hacking attempt?\n    if (! $user->login) accessforbidden();\n\n    // Check if user is active\n    if ($user->statut < 1)\n    {\n        // If not active, we refuse the user\n        $langs->load(\"other\");\n        dol_syslog(\"Authentification ko as login is disabled\");\n        accessforbidden($langs->trans(\"ErrorLoginDisabled\"));\n        exit;\n    }\n\n    // Load permissions\n    $user->getrights();\n}\n\n\ndol_syslog(\"--- Access to \".$_SERVER[\"PHP_SELF\"].' - action='.GETPOST('action','az09').', massaction='.GETPOST('massaction','az09'));\n//Another call for easy debugg\n//dol_syslog(\"Access to \".$_SERVER[\"PHP_SELF\"].' GET='.join(',',array_keys($_GET)).'->'.join(',',$_GET).' POST:'.join(',',array_keys($_POST)).'->'.join(',',$_POST));\n\n// Load main languages files\nif (! defined('NOREQUIRETRAN'))\n{\n    $langs->load(\"main\");\n    $langs->load(\"dict\");\n}\n\n// Define some constants used for style of arrays\n$bc=array(0=>'class=\"impair\"',1=>'class=\"pair\"');\n$bcdd=array(0=>'class=\"drag drop oddeven\"',1=>'class=\"drag drop oddeven\"');\n$bcnd=array(0=>'class=\"nodrag nodrop nohover\"',1=>'class=\"nodrag nodrop nohoverpair\"');\t\t// Used for tr to add new lines\n$bctag=array(0=>'class=\"impair tagtr\"',1=>'class=\"pair tagtr\"');\n\n// Define messages variables\n$mesg=''; $warning=''; $error=0;\n// deprecated, see setEventMessages() and dol_htmloutput_events()\n$mesgs=array(); $warnings=array(); $errors=array();\n\n// Constants used to defined number of lines in textarea\nif (empty($conf->browser->firefox))\n{\n    define('ROWS_1',1);\n    define('ROWS_2',2);\n    define('ROWS_3',3);\n    define('ROWS_4',4);\n    define('ROWS_5',5);\n    define('ROWS_6',6);\n    define('ROWS_7',7);\n    define('ROWS_8',8);\n    define('ROWS_9',9);\n}\nelse\n{\n    define('ROWS_1',0);\n    define('ROWS_2',1);\n    define('ROWS_3',2);\n    define('ROWS_4',3);\n    define('ROWS_5',4);\n    define('ROWS_6',5);\n    define('ROWS_7',6);\n    define('ROWS_8',7);\n    define('ROWS_9',8);\n}\n\n$heightforframes=48;\n\n// Init menu manager\nif (! defined('NOREQUIREMENU'))\n{\n\tif (empty($user->societe_id))    // If internal user or not defined\n\t{\n\t\t$conf->standard_menu=(empty($conf->global->MAIN_MENU_STANDARD_FORCED)?(empty($conf->global->MAIN_MENU_STANDARD)?'eldy_menu.php':$conf->global->MAIN_MENU_STANDARD):$conf->global->MAIN_MENU_STANDARD_FORCED);\n\t}\n\telse                        // If external user\n\t{\n\t\t$conf->standard_menu=(empty($conf->global->MAIN_MENUFRONT_STANDARD_FORCED)?(empty($conf->global->MAIN_MENUFRONT_STANDARD)?'eldy_menu.php':$conf->global->MAIN_MENUFRONT_STANDARD):$conf->global->MAIN_MENUFRONT_STANDARD_FORCED);\n\t}\n\n\t// Load the menu manager (only if not already done)\n\t$file_menu=$conf->standard_menu;\n\tif (GETPOST('menu','alpha')) $file_menu=GETPOST('menu','alpha');     // example: menu=eldy_menu.php\n\tif (! class_exists('MenuManager'))\n\t{\n\t\t$menufound=0;\n\t\t$dirmenus=array_merge(array(\"/core/menus/\"),(array) $conf->modules_parts['menus']);\n\t\tforeach($dirmenus as $dirmenu)\n\t\t{\n\t\t\t$menufound=dol_include_once($dirmenu.\"standard/\".$file_menu);\n\t\t\tif (class_exists('MenuManager')) break;\n\t\t}\n\t\tif (! class_exists('MenuManager'))\t// If failed to include, we try with standard eldy_menu.php\n\t\t{\n\t\t\tdol_syslog(\"You define a menu manager '\".$file_menu.\"' that can not be loaded.\", LOG_WARNING);\n\t\t\t$file_menu='eldy_menu.php';\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.\"/core/menus/standard/\".$file_menu;\n\t\t}\n\t}\n\t$menumanager = new MenuManager($db, empty($user->societe_id)?0:1);\n\t$menumanager->loadMenu();\n}\n\n\n\n// Functions\n\nif (! function_exists(\"llxHeader\"))\n{\n    /**\n     *\tShow HTML header HTML + BODY + Top menu + left menu + DIV\n     *\n     * @param \tstring \t$head\t\t\t\tOptionnal head lines\n     * @param \tstring \t$title\t\t\t\tHTML title\n     * @param\tstring\t$help_url\t\t\tUrl links to help page\n     * \t\t                            \tSyntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n     *                                  \tFor other external page: http://server/url\n     * @param\tstring\t$target\t\t\t\tTarget to use on links\n     * @param \tint    \t$disablejs\t\t\tMore content into html header\n     * @param \tint    \t$disablehead\t\tMore content into html header\n     * @param \tarray  \t$arrayofjs\t\t\tArray of complementary js files\n     * @param \tarray  \t$arrayofcss\t\t\tArray of complementary css files\n     * @param\tstring\t$morequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n     * @param   string  $morecssonbody      More CSS on body tag.\n     * @return\tvoid\n     */\n\tfunction llxHeader($head='', $title='', $help_url='', $target='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $morequerystring='', $morecssonbody='')\n\t{\n\t    global $conf;\n\n\t    // html header\n\t\ttop_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss);\n\n        print '<body id=\"mainbody\"'.($morecssonbody?' class=\"'.$morecssonbody.'\"':'').'>' . \"\\n\";\n\n\t\t// top menu and left menu area\n\t\tif (empty($conf->dol_hide_topmenu))\n\t\t{\n\t\t\ttop_menu($head, $title, $target, $disablejs, $disablehead, $arrayofjs, $arrayofcss, $morequerystring, $help_url);\n\t\t}\n\n\t\tif (empty($conf->dol_hide_leftmenu))\n\t\t{\n\t\t\tleft_menu('', $help_url, '', '', 1, $title, 1);\n\t\t}\n\n\t\t// main area\n\t\tmain_area($title);\n\t}\n}\n\n\n/**\n *  Show HTTP header\n *\n *  @param  string  $contenttype    Content type. For example, 'text/html'\n *  @return\tvoid\n */\nfunction top_httphead($contenttype='text/html')\n{\n    global $conf;\n\n    if ($contenttype == 'text/html' ) header(\"Content-Type: text/html; charset=\".$conf->file->character_set_client);\n    else header(\"Content-Type: \".$contenttype);\n    // Security options\n    header(\"X-Content-Type-Options: nosniff\");  // With the nosniff option, if the server says the content is text/html, the browser will render it as text/html (note that most browsers now force this option to on)\n    header(\"X-Frame-Options: SAMEORIGIN\");      // Frames allowed only if on same domain (stop some XSS attacks)\n    if (! empty($conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY))\n    {\n        // For example, to restrict script, object, frames or img to some domains\n        // script-src https://api.google.com https://anotherhost.com; object-src https://youtube.com; child-src https://youtube.com; img-src: https://static.example.com\n        // For example, to restrict everything to one domain, except object, ...\n        // default-src https://cdn.example.net; object-src 'none'\n        header(\"Content-Security-Policy: \".$conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY);\n    }\n\n\n    // On the fly GZIP compression for all pages (if browser support it). Must set the bit 3 of constant to 1.\n    /*if (isset($conf->global->MAIN_OPTIMIZE_SPEED) && ($conf->global->MAIN_OPTIMIZE_SPEED & 0x04)) {\n        ob_start(\"ob_gzhandler\");\n    }*/\n}\n\n/**\n * Ouput html header of a page.\n * This code is also duplicated into security2.lib.php::dol_loginfunction\n *\n * @param \tstring \t$head\t\t\t Optionnal head lines\n * @param \tstring \t$title\t\t\t HTML title\n * @param \tint    \t$disablejs\t\t Disable js output\n * @param \tint    \t$disablehead\t Disable head output\n * @param \tarray  \t$arrayofjs\t\t Array of complementary js files\n * @param \tarray  \t$arrayofcss\t\t Array of complementary css files\n * @param \tint    \t$disablejmobile\t Disable jmobile (No more used)\n * @param   int     $disablenofollow Disable no follow tag\n * @return\tvoid\n */\nfunction top_htmlhead($head, $title='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $disablejmobile=0, $disablenofollow=0)\n{\n    global $user, $conf, $langs, $db;\n\n    top_httphead();\n\n    if (empty($conf->css)) $conf->css = '/theme/eldy/style.css.php';\t// If not defined, eldy by default\n\n    if (! empty($conf->global->MAIN_ACTIVATE_HTML4)) {\n        $doctype = '<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">';\n    }else {\n        $doctype = '<!doctype html>';\n    }\n    print $doctype.\"\\n\";\n    if (! empty($conf->global->MAIN_USE_CACHE_MANIFEST)) print '<html lang=\"'.substr($langs->defaultlang,0,2).'\" manifest=\"'.DOL_URL_ROOT.'/cache.manifest\">'.\"\\n\";\n    else print '<html lang=\"'.substr($langs->defaultlang,0,2).'\">'.\"\\n\";\n    //print '<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"fr\">'.\"\\n\";\n    if (empty($disablehead))\n    {\n        print \"<head>\\n\";\n\t\tif (GETPOST('dol_basehref','alpha')) print '<base href=\"'.dol_escape_htmltag(GETPOST('dol_basehref','alpha')).'\">'.\"\\n\";\n        // Displays meta\n        print '<meta name=\"robots\" content=\"noindex'.($disablenofollow?'':',nofollow').'\">'.\"\\n\";      \t\t\t\t// Do not index\n        print '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">';\t// Scale for mobile device\n        print '<meta name=\"author\" content=\"Dolibarr Development Team\">'.\"\\n\";\n        // Favicon\n\t\t$favicon=dol_buildpath('/theme/'.$conf->theme.'/img/favicon.ico',1);\n        if (! empty($conf->global->MAIN_FAVICON_URL)) $favicon=$conf->global->MAIN_FAVICON_URL;\n        if (empty($conf->dol_use_jmobile)) print '<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"'.$favicon.'\"/>'.\"\\n\";\t// Not required into an Android webview\n        //if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && ! GETPOST('textbrowser','int')) print '<link rel=\"top\" title=\"'.$langs->trans(\"Home\").'\" href=\"'.(DOL_URL_ROOT?DOL_URL_ROOT:'/').'\">'.\"\\n\";\n        if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && ! GETPOST('textbrowser','int')) print '<link rel=\"copyright\" title=\"GNU General Public License\" href=\"http://www.gnu.org/copyleft/gpl.html#SEC1\">'.\"\\n\";\n        if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && ! GETPOST('textbrowser','int')) print '<link rel=\"author\" title=\"Dolibarr Development Team\" href=\"https://www.dolibarr.org\">'.\"\\n\";\n\n        // Displays title\n        $appli=constant('DOL_APPLICATION_TITLE');\n        if (!empty($conf->global->MAIN_APPLICATION_TITLE)) $appli=$conf->global->MAIN_APPLICATION_TITLE;\n\n        if ($title && ! empty($conf->global->MAIN_HTML_TITLE) && preg_match('/noapp/',$conf->global->MAIN_HTML_TITLE)) print '<title>'.dol_htmlentities($title).'</title>';\n        else if ($title) print '<title>'.dol_htmlentities($appli.' - '.$title).'</title>';\n        else print \"<title>\".dol_htmlentities($appli).\"</title>\";\n        print \"\\n\";\n\n        //$ext='';\n        //if (! empty($conf->dol_use_jmobile)) $ext='version='.urlencode(DOL_VERSION);\n        $ext='version='.urlencode(DOL_VERSION);\n\n        if (GETPOST('version','int')) $ext='version='.GETPOST('version','int');\t// usefull to force no cache on css/js\n        if (GETPOST('testmenuhider','int') || ! empty($conf->global->MAIN_TESTMENUHIDER)) $ext.='&testmenuhider='.(GETPOST('testmenuhider','int')?GETPOST('testmenuhider','int'):$conf->global->MAIN_TESTMENUHIDER);\n\n        $themeparam='?lang='.$langs->defaultlang.'&amp;theme='.$conf->theme.(GETPOST('optioncss','aZ09')?'&amp;optioncss='.GETPOST('optioncss','aZ09',1):'').'&amp;userid='.$user->id.'&amp;entity='.$conf->entity;\n        $themeparam.=($ext?'&amp;'.$ext:'');\n        if (! empty($_SESSION['dol_resetcache'])) $themeparam.='&amp;dol_resetcache='.$_SESSION['dol_resetcache'];\n        if (GETPOST('dol_hide_topmenu','int'))           { $themeparam.='&amp;dol_hide_topmenu='.GETPOST('dol_hide_topmenu','int'); }\n        if (GETPOST('dol_hide_leftmenu','int'))          { $themeparam.='&amp;dol_hide_leftmenu='.GETPOST('dol_hide_leftmenu','int'); }\n        if (GETPOST('dol_optimize_smallscreen','int'))   { $themeparam.='&amp;dol_optimize_smallscreen='.GETPOST('dol_optimize_smallscreen','int'); }\n        if (GETPOST('dol_no_mouse_hover','int'))         { $themeparam.='&amp;dol_no_mouse_hover='.GETPOST('dol_no_mouse_hover','int'); }\n        if (GETPOST('dol_use_jmobile','int'))            { $themeparam.='&amp;dol_use_jmobile='.GETPOST('dol_use_jmobile','int'); $conf->dol_use_jmobile=GETPOST('dol_use_jmobile','int'); }\n\n        if (! defined('DISABLE_JQUERY') && ! $disablejs && $conf->use_javascript_ajax)\n        {\n            print '<!-- Includes CSS for JQuery (Ajax library) -->'.\"\\n\";\n            $jquerytheme = 'smoothness';\n            if (!empty($conf->global->MAIN_USE_JQUERY_THEME)) $jquerytheme = $conf->global->MAIN_USE_JQUERY_THEME;\n            if (constant('JS_JQUERY_UI')) print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.JS_JQUERY_UI.'css/'.$jquerytheme.'/jquery-ui.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";  // JQuery\n            else print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/css/'.$jquerytheme.'/jquery-ui.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";    // JQuery\n            if (! defined('DISABLE_JQUERY_TIPTIP')) print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tiptip/tipTip.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";                           // Tooltip\n            if (! defined('DISABLE_JQUERY_JNOTIFY')) print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify-alt.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";          // JNotify\n            /* Removed a old hidden problematic feature never used in Dolibarr. If an external module need datatable, the module must provide all lib it needs and manage version problems with other dolibarr components\n            if (! empty($conf->global->MAIN_USE_JQUERY_DATATABLES) || (defined('REQUIRE_JQUERY_DATATABLES') && constant('REQUIRE_JQUERY_DATATABLES')))     // jQuery datatables\n            {\n                print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/media/css/jquery.dataTables.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n                print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/css/buttons.dataTables.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n                print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/ColReorder/css/colReorder.dataTables.min.css'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }*/\n            if (! defined('DISABLE_SELECT2') && (! empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT')))     // jQuery plugin \"mutiselect\", \"multiple-select\", \"select2\"...\n            {\n            \t$tmpplugin=empty($conf->global->MAIN_USE_JQUERY_MULTISELECT)?constant('REQUIRE_JQUERY_MULTISELECT'):$conf->global->MAIN_USE_JQUERY_MULTISELECT;\n            \tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/'.$tmpplugin.'/'.$tmpplugin.'.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n            }\n            // jQuery Timepicker\n            if (! empty($conf->global->MAIN_USE_JQUERY_TIMEPICKER) || defined('REQUIRE_JQUERY_TIMEPICKER'))\n            {\n            \tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/timepicker/jquery-ui-timepicker-addon.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n            }\n        }\n\n        if (! defined('DISABLE_FONT_AWSOME'))\n        {\n            print '<!-- Includes CSS for font awesome -->'.\"\\n\";\n            print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/theme/common/fontawesome/css/font-awesome.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n        }\n\n        print '<!-- Includes CSS for Dolibarr theme -->'.\"\\n\";\n        // Output style sheets (optioncss='print' or ''). Note: $conf->css looks like '/theme/eldy/style.css.php'\n        $themepath=dol_buildpath($conf->css,1);\n        $themesubdir='';\n        if (! empty($conf->modules_parts['theme']))\t// This slow down\n        {\n\t        foreach($conf->modules_parts['theme'] as $reldir)\n\t        {\n\t        \tif (file_exists(dol_buildpath($reldir.$conf->css, 0)))\n\t        \t{\n\t\t\t\t\t$themepath=dol_buildpath($reldir.$conf->css, 1);\n\t\t\t\t\t$themesubdir=$reldir;\n\t\t\t\t\tbreak;\n\t        \t}\n\t        }\n        }\n        //print 'themepath='.$themepath.' themeparam='.$themeparam;exit;\n        print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.$themepath.$themeparam.'\">'.\"\\n\";\n\t    if (! empty($conf->global->MAIN_FIX_FLASH_ON_CHROME)) print '<!-- Includes CSS that does not exists as a workaround of flash bug of chrome -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" href=\"filethatdoesnotexiststosolvechromeflashbug\">'.\"\\n\";\n\n        // CSS forced by modules (relative url starting with /)\n        if (! empty($conf->modules_parts['css']))\n        {\n        \t$arraycss=(array) $conf->modules_parts['css'];\n        \tforeach($arraycss as $modcss => $filescss)\n        \t{\n        \t\t$filescss=(array) $filescss;\t// To be sure filecss is an array\n        \t\tforeach($filescss as $cssfile)\n        \t\t{\n        \t\t\tif (empty($cssfile)) dol_syslog(\"Warning: module \".$modcss.\" declared a css path file into its descriptor that is empty.\", LOG_WARNING);\n        \t\t\t// cssfile is a relative path\n\t        \t\tprint '<!-- Includes CSS added by module '.$modcss. ' -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" href=\"'.dol_buildpath($cssfile,1);\n\t        \t\t// We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters, so browser cache is not used.\n\t        \t\tif (!preg_match('/\\.css$/i',$cssfile)) print $themeparam;\n\t        \t\tprint '\">'.\"\\n\";\n        \t\t}\n        \t}\n        }\n        // CSS forced by page in top_htmlhead call (relative url starting with /)\n        if (is_array($arrayofcss))\n        {\n            foreach($arrayofcss as $cssfile)\n            {\n            \tprint '<!-- Includes CSS added by page -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" title=\"default\" href=\"'.dol_buildpath($cssfile,1);\n                // We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters and browser cache is not used.\n                if (!preg_match('/\\.css$/i',$cssfile)) print $themeparam;\n                print '\">'.\"\\n\";\n            }\n        }\n\n        // Output standard javascript links\n        if (! defined('DISABLE_JQUERY') && ! $disablejs && ! empty($conf->use_javascript_ajax))\n        {\n            // JQuery. Must be before other includes\n            print '<!-- Includes JS for JQuery -->'.\"\\n\";\n            if (defined('JS_JQUERY') && constant('JS_JQUERY')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY.'jquery.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            else print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            if (! empty($conf->global->MAIN_FEATURES_LEVEL) && ! defined('JS_JQUERY_MIGRATE_DISABLED'))\n            {\n                if (defined('JS_JQUERY_MIGRATE') && constant('JS_JQUERY_MIGRATE')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_MIGRATE.'jquery-migrate.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                else print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-migrate.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            if (defined('JS_JQUERY_UI') && constant('JS_JQUERY_UI')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_UI.'jquery-ui.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            else print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-ui.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            if (! defined('DISABLE_JQUERY_TABLEDND')) print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tablednd/jquery.tablednd.0.6.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            if (! defined('DISABLE_JQUERY_TIPTIP')) print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tiptip/jquery.tipTip.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            // jQuery jnotify\n            if (empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) && ! defined('DISABLE_JQUERY_JNOTIFY'))\n            {\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/jnotify.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            // jQuery blockUI\n            if (! empty($conf->global->MAIN_USE_JQUERY_BLOCKUI) || defined('REQUIRE_JQUERY_BLOCKUI'))\n            {\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/blockUI/jquery.blockUI.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            \tprint '<script type=\"text/javascript\">'.\"\\n\";\n            \tprint 'var indicatorBlockUI = \\''.DOL_URL_ROOT.\"/theme/\".$conf->theme.\"/img/working2.gif\".'\\';'.\"\\n\";\n            \tprint '</script>'.\"\\n\";\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/blockUI.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            // Flot\n            if (empty($conf->global->MAIN_DISABLE_JQUERY_FLOT) && ! defined('DISABLE_JQUERY_FLOT'))\n            {\n                if (constant('JS_JQUERY_FLOT'))\n                {\n                    print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.pie.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.stack.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                }\n                else\n                {\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.pie.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.stack.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                }\n            }\n            // jQuery jeditable\n            if (! empty($conf->global->MAIN_USE_JQUERY_JEDITABLE) && ! defined('DISABLE_JQUERY_JEDITABLE'))\n            {\n            \tprint '<!-- JS to manage editInPlace feature -->'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ui-datepicker.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ui-autocomplete.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\">'.\"\\n\";\n                print 'var urlSaveInPlace = \\''.DOL_URL_ROOT.'/core/ajax/saveinplace.php\\';'.\"\\n\";\n                print 'var urlLoadInPlace = \\''.DOL_URL_ROOT.'/core/ajax/loadinplace.php\\';'.\"\\n\";\n                print 'var tooltipInPlace = \\''.$langs->transnoentities('ClickToEdit').'\\';'.\"\\n\";\t// Added in title attribute of span\n                print 'var placeholderInPlace = \\'&nbsp;\\';'.\"\\n\";\t// If we put another string than $langs->trans(\"ClickToEdit\") here, nothing is shown. If we put empty string, there is error, Why ?\n                print 'var cancelInPlace = \\''.$langs->trans('Cancel').'\\';'.\"\\n\";\n                print 'var submitInPlace = \\''.$langs->trans('Ok').'\\';'.\"\\n\";\n                print 'var indicatorInPlace = \\'<img src=\"'.DOL_URL_ROOT.\"/theme/\".$conf->theme.\"/img/working.gif\".'\">\\';'.\"\\n\";\n                print 'var withInPlace = 300;';\t\t// width in pixel for default string edit\n                print '</script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/editinplace.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ckeditor.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            // jQuery DataTables\n            /* Removed a old hidden problematic feature never used in Dolibarr. If an external module need datatable, the module must provide all lib it needs and manage version problems with other dolibarr components\n            if (! empty($conf->global->MAIN_USE_JQUERY_DATATABLES) || (defined('REQUIRE_JQUERY_DATATABLES') && constant('REQUIRE_JQUERY_DATATABLES')))\n            {\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/media/js/jquery.dataTables.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/dataTables.buttons.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/buttons.colVis.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/buttons.html5.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/buttons.flash.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/buttons.print.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/ColReorder/js/dataTables.colReorder.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jszip/jszip.min.js\"></script>'.\"\\n\";\n            }*/\n            // jQuery Timepicker\n            if (! empty($conf->global->MAIN_USE_JQUERY_TIMEPICKER) || defined('REQUIRE_JQUERY_TIMEPICKER'))\n            {\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/timepicker/jquery-ui-timepicker-addon.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/timepicker.js.php?lang='.$langs->defaultlang.($ext?'&amp;'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            if (! defined('DISABLE_SELECT2') && (! empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT')))     // jQuery plugin \"mutiselect\", \"multiple-select\", \"select2\", ...\n            {\n            \t$tmpplugin=empty($conf->global->MAIN_USE_JQUERY_MULTISELECT)?constant('REQUIRE_JQUERY_MULTISELECT'):$conf->global->MAIN_USE_JQUERY_MULTISELECT;\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/'.$tmpplugin.'/'.$tmpplugin.'.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/select2_locale.js.php?lang='.$langs->defaultlang.($ext?'&amp;'.$ext:'').'\"></script>'.\"\\n\";\n            }\n        }\n\n        if (! $disablejs && ! empty($conf->use_javascript_ajax))\n        {\n            // CKEditor\n            if (! empty($conf->fckeditor->enabled) && (empty($conf->global->FCKEDITOR_EDITORNAME) || $conf->global->FCKEDITOR_EDITORNAME == 'ckeditor') && ! defined('DISABLE_CKEDITOR'))\n            {\n                print '<!-- Includes JS for CKEditor -->'.\"\\n\";\n                $pathckeditor = DOL_URL_ROOT . '/includes/ckeditor/ckeditor/';\n                $jsckeditor='ckeditor.js';\n                if (constant('JS_CKEDITOR'))\t// To use external ckeditor 4 js lib\n                {\n                \t$pathckeditor=constant('JS_CKEDITOR');\n                }\n                print '<script type=\"text/javascript\">';\n                print 'var CKEDITOR_BASEPATH = \\''.$pathckeditor.'\\';'.\"\\n\";\n                print 'var ckeditorConfig = \\''.dol_buildpath($themesubdir.'/theme/'.$conf->theme.'/ckeditor/config.js'.($ext?'?'.$ext:''),1).'\\';'.\"\\n\";\t\t// $themesubdir='' in standard usage\n                print 'var ckeditorFilebrowserBrowseUrl = \\''.DOL_URL_ROOT.'/core/filemanagerdol/browser/default/browser.php?Connector='.DOL_URL_ROOT.'/core/filemanagerdol/connectors/php/connector.php\\';'.\"\\n\";\n                print 'var ckeditorFilebrowserImageBrowseUrl = \\''.DOL_URL_ROOT.'/core/filemanagerdol/browser/default/browser.php?Type=Image&Connector='.DOL_URL_ROOT.'/core/filemanagerdol/connectors/php/connector.php\\';'.\"\\n\";\n                print '</script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.$pathckeditor.$jsckeditor.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n\n            // Browser notifications\n            if (! defined('DISABLE_BROWSER_NOTIF'))\n            {\n                $enablebrowsernotif=false;\n                if (! empty($conf->agenda->enabled) && ! empty($conf->global->AGENDA_NOTIFICATION)) $enablebrowsernotif=true;\n                if ($conf->browser->layout == 'phone') $enablebrowsernotif=false;\n                if ($enablebrowsernotif)\n                {\n                    print '<!-- Includes JS of Dolibarr (brwoser layout = '.$conf->browser->layout.')-->'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/lib_notification.js.php'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                }\n            }\n\n            // Global js function\n            print '<!-- Includes JS of Dolibarr -->'.\"\\n\";\n            print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/lib_head.js.php'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\n            // Add datepicker default options\n            if (! defined('DISABLE_DATE_PICKER'))\n            {\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/datepicker.js.php'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n\n            // JS forced by modules (relative url starting with /)\n            if (! empty($conf->modules_parts['js']))\t\t// $conf->modules_parts['js'] is array('module'=>array('file1','file2'))\n        \t{\n        \t\t$arrayjs=(array) $conf->modules_parts['js'];\n\t            foreach($arrayjs as $modjs => $filesjs)\n\t            {\n        \t\t\t$filesjs=(array) $filesjs;\t// To be sure filejs is an array\n\t\t            foreach($filesjs as $jsfile)\n\t\t            {\n\t    \t    \t\t// jsfile is a relative path\n\t        \t    \tprint '<!-- Include JS added by module '.$modjs. '-->'.\"\\n\".'<script type=\"text/javascript\" src=\"'.dol_buildpath($jsfile,1).'\"></script>'.\"\\n\";\n\t\t            }\n\t            }\n        \t}\n            // JS forced by page in top_htmlhead (relative url starting with /)\n            if (is_array($arrayofjs))\n            {\n                print '<!-- Includes JS added by page -->'.\"\\n\";\n                foreach($arrayofjs as $jsfile)\n                {\n                    if (preg_match('/^http/i',$jsfile))\n                    {\n                        print '<script type=\"text/javascript\" src=\"'.$jsfile.'\"></script>'.\"\\n\";\n                    }\n                    else\n                    {\n                        if (! preg_match('/^\\//',$jsfile)) $jsfile='/'.$jsfile;\t// For backward compatibility\n                        print '<script type=\"text/javascript\" src=\"'.dol_buildpath($jsfile,1).'\"></script>'.\"\\n\";\n                    }\n                }\n            }\n        }\n\n        if (! empty($head)) print $head.\"\\n\";\n        if (! empty($conf->global->MAIN_HTML_HEADER)) print $conf->global->MAIN_HTML_HEADER.\"\\n\";\n\n        print \"</head>\\n\\n\";\n    }\n\n    $conf->headerdone=1;\t// To tell header was output\n}\n\n\n/**\n *  Show an HTML header + a BODY + The top menu bar\n *\n *  @param      string\t$head    \t\t\tLines in the HEAD\n *  @param      string\t$title   \t\t\tTitle of web page\n *  @param      string\t$target  \t\t\tTarget to use in menu links (Example: '' or '_top')\n *\t@param\t\tint\t\t$disablejs\t\t\tDo not output links to js (Ex: qd fonction utilisee par sous formulaire Ajax)\n *\t@param\t\tint\t\t$disablehead\t\tDo not output head section\n *\t@param\t\tarray\t$arrayofjs\t\t\tArray of js files to add in header\n *\t@param\t\tarray\t$arrayofcss\t\t\tArray of css files to add in header\n *  @param\t\tstring\t$morequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n *  @param      string\t$helppagename    \tName of wiki page for help ('' by default).\n * \t\t\t\t     \t\t                Syntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t\t\t\t                   For other external page: http://server/url\n *  @return\t\tvoid\n */\nfunction top_menu($head, $title='', $target='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $morequerystring='', $helppagename='')\n{\n    global $user, $conf, $langs, $db;\n    global $dolibarr_main_authentication, $dolibarr_main_demo;\n    global $hookmanager,$menumanager;\n\n    $searchform='';\n    $bookmarks='';\n\n    // Instantiate hooks of thirdparty module\n    $hookmanager->initHooks(array('toprightmenu'));\n\n    $toprightmenu='';\n\n    // For backward compatibility with old modules\n    if (empty($conf->headerdone))\n    {\n        top_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss);\n        print '<body id=\"mainbody\">';\n    }\n\n    /*\n     * Top menu\n     */\n    if (empty($conf->dol_hide_topmenu) && (! defined('NOREQUIREMENU') || ! constant('NOREQUIREMENU')))\n    {\n        print \"\\n\".'<!-- Start top horizontal -->'.\"\\n\";\n\n        print '<div class=\"side-nav-vert\"><div id=\"id-top\">';\n\n\t    // Show menu entries\n    \tprint '<div id=\"tmenu_tooltip'.(empty($conf->global->MAIN_MENU_INVERT)?'':'invert').'\" class=\"tmenu\">'.\"\\n\";\n    \t$menumanager->atarget=$target;\n\t    $menumanager->showmenu('top', array('searchform'=>$searchform, 'bookmarks'=>$bookmarks));      // This contains a \\n\n\t    print \"</div>\\n\";\n\n\t    // Define link to login card\n        $appli=constant('DOL_APPLICATION_TITLE');\n\t    if (! empty($conf->global->MAIN_APPLICATION_TITLE))\n\t    {\n\t    \t$appli=$conf->global->MAIN_APPLICATION_TITLE;\n\t    \tif (preg_match('/\\d\\.\\d/', $appli))\n\t    \t{\n\t\t\t\tif (! preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) $appli.=\" (\".DOL_VERSION.\")\";\t// If new title contains a version that is different than core\n\t    \t}\n\t    \telse $appli.=\" \".DOL_VERSION;\n\t    }\n\t    else $appli.=\" \".DOL_VERSION;\n\n\t    if (! empty($conf->global->MAIN_FEATURES_LEVEL)) $appli.=\"<br>\".$langs->trans(\"LevelOfFeature\").': '.$conf->global->MAIN_FEATURES_LEVEL;\n\n\t    $logouttext='';\n\t    if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER))\n\t    {\n    \t    //$logouthtmltext=$appli.'<br>';\n    \t    if ($_SESSION[\"dol_authmode\"] != 'forceuser' && $_SESSION[\"dol_authmode\"] != 'http')\n    \t    {\n    \t    \t$logouthtmltext.=$langs->trans(\"Logout\").'<br>';\n\n    \t    \t$logouttext .='<a href=\"'.DOL_URL_ROOT.'/user/logout.php\">';\n    \t        //$logouttext .= img_picto($langs->trans('Logout').\":\".$langs->trans('Logout'), 'logout_top.png', 'class=\"login\"', 0, 0, 1);\n    \t    \t$logouttext .='<span class=\"fa fa-sign-out atoplogin\"></span>';\n    \t        $logouttext .='</a>';\n    \t    }\n    \t    else\n    \t    {\n    \t    \t$logouthtmltext.=$langs->trans(\"NoLogoutProcessWithAuthMode\",$_SESSION[\"dol_authmode\"]);\n    \t        $logouttext .= img_picto($langs->trans('Logout').\":\".$langs->trans('Logout'), 'logout_top.png', 'class=\"login\"', 0, 0, 1);\n    \t    }\n\t    }\n\n\t    print '<div class=\"login_block\">'.\"\\n\";\n\n\t    // Add login user link\n\t    $toprightmenu.='<div class=\"login_block_user\">';\n\n\t    // Login name with photo and tooltip\n\t\t$mode=-1;\n\t    $toprightmenu.='<div class=\"inline-block nowrap\"><div class=\"inline-block login_block_elem login_block_elem_name\" style=\"padding: 0px;\">';\n        $toprightmenu.=$user->getNomUrl($mode, '', true, 0, 11, 0, ($user->firstname ? 'firstname' : -1),'atoplogin');\n        $toprightmenu.='</div></div>';\n\n\t\t$toprightmenu.='</div>';\n\n\t    $toprightmenu.='<div class=\"login_block_other\">';\n\n\t\t// Execute hook printTopRightMenu (hooks should output string like '<div class=\"login\"><a href=\"\">mylink</a></div>')\n\t    $parameters=array();\n\t    $result=$hookmanager->executeHooks('printTopRightMenu',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t\tif (is_numeric($result))\n\t\t{\n\t\t\tif (empty($result)) $toprightmenu.=$hookmanager->resPrint;\t\t// add\n\t\t\telse  $toprightmenu=$hookmanager->resPrint;\t\t\t\t\t\t// replace\n\t\t}\n\t\telse $toprightmenu.=$result;\t// For backward compatibility\n\n    \t// Link to module builder\n\t    if (! empty($conf->modulebuilder->enabled))\n\t    {\n\t        $text ='<a href=\"'.DOL_URL_ROOT.'/modulebuilder/index.php?mainmenu=home&leftmenu=admintools\" target=\"_modulebuilder\">';\n\t        //$text.= img_picto(\":\".$langs->trans(\"ModuleBuilder\"), 'printer_top.png', 'class=\"printer\"');\n\t        $text.='<span class=\"fa fa-bug atoplogin\"></span>';\n\t        $text.='</a>';\n\t        $toprightmenu.=@Form::textwithtooltip('',$langs->trans(\"ModuleBuilder\"),2,1,$text,'login_block_elem',2);\n\t    }\n\n\t\t// Link to print main content area\n\t    if (empty($conf->global->MAIN_PRINT_DISABLELINK) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && empty($conf->browser->phone))\n\t    {\n\t        $qs=dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]);\n\n\t        if (is_array($_POST))\n\t        {\n    \t\t\tforeach($_POST as $key=>$value) {\n    \t\t\t\tif ($key!=='action' && !is_array($value)) $qs.='&'.$key.'='.urlencode($value);\n    \t\t\t}\n\t        }\n\t\t\t$qs.=(($qs && $morequerystring)?'&':'').$morequerystring;\n\t        $text ='<a href=\"'.dol_escape_htmltag($_SERVER[\"PHP_SELF\"]).'?'.$qs.($qs?'&':'').'optioncss=print\" target=\"_blank\">';\n\t        //$text.= img_picto(\":\".$langs->trans(\"PrintContentArea\"), 'printer_top.png', 'class=\"printer\"');\n\t        $text.='<span class=\"fa fa-print atoplogin\"></span>';\n\t        $text.='</a>';\n\t        $toprightmenu.=@Form::textwithtooltip('',$langs->trans(\"PrintContentArea\"),2,1,$text,'login_block_elem',2);\n\t    }\n\n\t    // Link to Dolibarr wiki pages\n\t    if (empty($conf->global->MAIN_HELP_DISABLELINK) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER))\n\t    {\n\t        $langs->load(\"help\");\n\n\t        $helpbaseurl='';\n\t        $helppage='';\n\t        $mode='';\n\n\t        if (empty($helppagename)) $helppagename='EN:User_documentation|FR:Documentation_utilisateur|ES:Documentaci\u00f3n_usuarios';\n\n\t        // Get helpbaseurl, helppage and mode from helppagename and langs\n\t        $arrayres=getHelpParamFor($helppagename,$langs);\n\t        $helpbaseurl=$arrayres['helpbaseurl'];\n\t        $helppage=$arrayres['helppage'];\n\t        $mode=$arrayres['mode'];\n\n\t        // Link to help pages\n\t        if ($helpbaseurl && $helppage)\n\t        {\n\t            $text='';\n\t            $title=$appli.'<br>';\n\t            $title.=$langs->trans($mode == 'wiki' ? 'GoToWikiHelpPage': 'GoToHelpPage');\n\t            if ($mode == 'wiki') $title.=' - '.$langs->trans(\"PageWiki\").' &quot;'.dol_escape_htmltag(strtr($helppage,'_',' ')).'&quot;';\n\t            $text.='<a class=\"help\" target=\"_blank\" href=\"';\n\t            if ($mode == 'wiki') $text.=sprintf($helpbaseurl,urlencode(html_entity_decode($helppage)));\n\t            else $text.=sprintf($helpbaseurl,$helppage);\n\t            $text.='\">';\n\t            //$text.=img_picto('', 'helpdoc_top').' ';\n\t            $text.='<span class=\"fa fa-question-circle atoplogin\"></span>';\n\t            //$toprightmenu.=$langs->trans($mode == 'wiki' ? 'OnlineHelp': 'Help');\n\t            //if ($mode == 'wiki') $text.=' ('.dol_trunc(strtr($helppage,'_',' '),8).')';\n\t            $text.='</a>';\n\t            //$toprightmenu.='</div>'.\"\\n\";\n\t            $toprightmenu.=@Form::textwithtooltip('',$title,2,1,$text,'login_block_elem',2);\n\t        }\n\t    }\n\n\t\t// Logout link\n\t    $toprightmenu.=@Form::textwithtooltip('',$logouthtmltext,2,1,$logouttext,'login_block_elem',2);\n\n\t    $toprightmenu.='</div>';\n\n\t    print $toprightmenu;\n\n\t    print \"</div>\\n\";\n\t\tprint '</div></div>';\n\n\t    //unset($form);\n\n\t\tprint '<div style=\"clear: both;\"></div>';\n        print \"<!-- End top horizontal menu -->\\n\\n\";\n    }\n\n    if (empty($conf->dol_hide_leftmenu) && empty($conf->dol_use_jmobile)) print '<!-- Begin div id-container --><div id=\"id-container\" class=\"id-container'.($morecss?' '.$morecss:'').'\">';\n}\n\n\n/**\n *  Show left menu bar\n *\n *  @param  array\t$menu_array_before \t       \tTable of menu entries to show before entries of menu handler. This param is deprectaed and must be provided to ''.\n *  @param  string\t$helppagename    \t       \tName of wiki page for help ('' by default).\n * \t\t\t\t     \t\t                   \tSyntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t\t\t\t         \t\t       For other external page: http://server/url\n *  @param  string\t$notused             \t\tDeprecated. Used in past to add content into left menu. Hooks can be used now.\n *  @param  array\t$menu_array_after           Table of menu entries to show after entries of menu handler\n *  @param  int\t\t$leftmenuwithoutmainarea    Must be set to 1. 0 by default for backward compatibility with old modules.\n *  @param  string\t$title                      Title of web page\n *  @param  string  $acceptdelayedhtml          1 if caller request to have html delayed content not returned but saved into global $delayedhtmlcontent (so caller can show it at end of page to avoid flash FOUC effect)\n *  @return\tvoid\n */\nfunction left_menu($menu_array_before, $helppagename='', $notused='', $menu_array_after='', $leftmenuwithoutmainarea=0, $title='', $acceptdelayedhtml=0)\n{\n    global $user, $conf, $langs, $db, $form;\n    global $hookmanager, $menumanager;\n\n    $searchform='';\n    $bookmarks='';\n\n    if (! empty($menu_array_before)) dol_syslog(\"Deprecated parameter menu_array_before was used when calling main::left_menu function. Menu entries of module should now be defined into module descriptor and not provided when calling left_menu.\", LOG_WARNING);\n\n    if (empty($conf->dol_hide_leftmenu) && (! defined('NOREQUIREMENU') || ! constant('NOREQUIREMENU')))\n    {\n\t    // Instantiate hooks of thirdparty module\n\t    $hookmanager->initHooks(array('searchform','leftblock'));\n\n\t\tprint \"\\n\".'<!-- Begin side-nav id-left -->'.\"\\n\".'<div class=\"side-nav\"><div id=\"id-left\">'.\"\\n\";\n\n\t    print \"\\n\";\n\n\t    if ($conf->use_javascript_ajax && $conf->browser->layout != 'phone' && empty($conf->global->MAIN_USE_OLD_SEARCH_FORM))\n\t    {\n    \t    if (! is_object($form)) $form=new Form($db);\n    \t    $selected=-1;\n            $searchform.=$form->selectArrayAjax('searchselectcombo', DOL_URL_ROOT.'/core/ajax/selectsearchbox.php', $selected, '', '', 0, 1, 'vmenusearchselectcombo', 1, $langs->trans(\"Search\"), 1);\n\t    }\n\t    else\n\t    {\n    \t    // Define $searchform\n    \t    if ((( ! empty($conf->societe->enabled) && (empty($conf->global->SOCIETE_DISABLE_PROSPECTS) || empty($conf->global->SOCIETE_DISABLE_CUSTOMERS))) || ! empty($conf->fournisseur->enabled)) && $user->rights->societe->lire)\n    \t    {\n    \t        $langs->load(\"companies\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/societe/list.php', DOL_URL_ROOT.'/societe/list.php', $langs->trans(\"ThirdParties\"), 'maxwidth100', 'sall', 'T', 'searchleftt', img_object('','company'));\n    \t    }\n\n    \t    if (! empty($conf->societe->enabled) && $user->rights->societe->lire)\n    \t    {\n    \t        $langs->load(\"companies\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/contact/list.php', DOL_URL_ROOT.'/contact/list.php', $langs->trans(\"Contacts\"), 'maxwidth100', 'sall', 'A', 'searchleftc', img_object('','contact'));\n    \t    }\n\n    \t    if (((! empty($conf->product->enabled) && $user->rights->produit->lire) || (! empty($conf->service->enabled) && $user->rights->service->lire))\n    \t    )\n    \t    {\n    \t        $langs->load(\"products\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/product/list.php', DOL_URL_ROOT.'/product/list.php', $langs->trans(\"Products\").\"/\".$langs->trans(\"Services\"), 'maxwidth100', 'sall', 'P', 'searchleftp', img_object('','product'));\n    \t    }\n\n            if (! empty($conf->projet->enabled) && $user->rights->projet->lire)\n    \t    {\n    \t        $langs->load(\"projects\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/projet/list.php', DOL_URL_ROOT.'/projet/list.php', $langs->trans(\"Projects\"), 'maxwidth100', 'search_all', 'Q', 'searchleftproj', img_object('','projectpub'));\n    \t    }\n\n    \t    if (! empty($conf->adherent->enabled) && $user->rights->adherent->lire)\n    \t    {\n    \t        $langs->load(\"members\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/adherents/list.php', DOL_URL_ROOT.'/adherents/list.php', $langs->trans(\"Members\"), 'maxwidth100', 'sall', 'M', 'searchleftm', img_object('','user'));\n    \t    }\n\n    \t\tif (! empty($conf->user->enabled) && $user->rights->user->user->lire)\n    \t    {\n    \t        $langs->load(\"users\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/user/list.php', DOL_URL_ROOT.'/user/list.php', $langs->trans(\"Users\"), 'maxwidth100', 'sall', 'M', 'searchleftuser', img_object('','user'));\n    \t    }\n\t    }\n\n\t    // Execute hook printSearchForm\n\t    $parameters=array('searchform'=>$searchform);\n\t    $reshook=$hookmanager->executeHooks('printSearchForm',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t\tif (empty($reshook))\n\t\t{\n\t\t\t$searchform.=$hookmanager->resPrint;\n\t\t}\n\t\telse $searchform=$hookmanager->resPrint;\n\n\t\tif ($conf->use_javascript_ajax && $conf->browser->layout == 'phone')\n\t    {\n\t        $searchform='<div class=\"blockvmenuimpair blockvmenusearchphone\"><div id=\"divsearchforms1\"><a href=\"#\" alt=\"'.dol_escape_htmltag($langs->trans(\"ShowSearchFields\")).'\">'.$langs->trans(\"Search\").'...</a></div><div id=\"divsearchforms2\" style=\"display: none\">'.$searchform.'</div>';\n\t        $searchform.='<script type=\"text/javascript\">\n            \tjQuery(document).ready(function () {\n            \t\tjQuery(\"#divsearchforms1\").click(function(){\n\t                   jQuery(\"#divsearchforms2\").toggle();\n\t               });\n            \t});\n                </script>' . \"\\n\";\n\t        $searchform.='</div>';\n\t    }\n\n\t    // Define $bookmarks\n\t    if (! empty($conf->bookmark->enabled) && $user->rights->bookmark->lire)\n\t    {\n\t        include_once (DOL_DOCUMENT_ROOT.'/bookmarks/bookmarks.lib.php');\n\t        $langs->load(\"bookmarks\");\n\n\t        $bookmarks=printBookmarksList($db, $langs);\n\t    }\n\n\t    // Left column\n\t    print '<!-- Begin left menu -->'.\"\\n\";\n\n\t    print '<div class=\"vmenu\"'.(empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)?'':' title=\"Left menu\"').'>'.\"\\n\\n\";\n\n    \t// Show left menu with other forms\n\t    $menumanager->menu_array = $menu_array_before;\n    \t$menumanager->menu_array_after = $menu_array_after;\n\t    $menumanager->showmenu('left', array('searchform'=>$searchform, 'bookmarks'=>$bookmarks)); // output menu_array and menu found in database\n\n        // Dolibarr version + help + bug report link\n\t\tprint \"\\n\";\n\t    print \"<!-- Begin Help Block-->\\n\";\n        print '<div id=\"blockvmenuhelp\" class=\"blockvmenuhelp\">'.\"\\n\";\n\n        // Version\n        if (empty($conf->global->MAIN_HIDE_VERSION))    // Version is already on help picto and on login page.\n        {\n            $doliurl='https://www.dolibarr.org';\n    \t\t//local communities\n    \t\tif (preg_match('/fr/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.fr';\n    \t\tif (preg_match('/es/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.es';\n    \t\tif (preg_match('/de/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.de';\n    \t\tif (preg_match('/it/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.it';\n    \t\tif (preg_match('/gr/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.gr';\n\n            $appli=constant('DOL_APPLICATION_TITLE');\n    \t    if (! empty($conf->global->MAIN_APPLICATION_TITLE))\n    \t    {\n    \t    \t$appli=$conf->global->MAIN_APPLICATION_TITLE; $doliurl='';\n    \t    \tif (preg_match('/\\d\\.\\d/', $appli))\n    \t    \t{\n    \t\t\t\tif (! preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) $appli.=\" (\".DOL_VERSION.\")\";\t// If new title contains a version that is different than core\n    \t    \t}\n    \t    \telse $appli.=\" \".DOL_VERSION;\n    \t    }\n    \t    else $appli.=\" \".DOL_VERSION;\n    \t    print '<div id=\"blockvmenuhelpapp\" class=\"blockvmenuhelp\">';\n    \t    if ($doliurl) print '<a class=\"help\" target=\"_blank\" href=\"'.$doliurl.'\">';\n    \t    else print '<span class=\"help\">';\n    \t    print $appli;\n    \t    if ($doliurl) print '</a>';\n    \t    else print '</span>';\n    \t    print '</div>'.\"\\n\";\n        }\n\n\t\t// Link to bugtrack\n\t\tif (! empty($conf->global->MAIN_BUGTRACK_ENABLELINK))\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\n\t\t\t$bugbaseurl = 'https://github.com/Dolibarr/dolibarr/issues/new';\n\t\t\t$bugbaseurl.= '?title=';\n\t\t\t$bugbaseurl.= urlencode(\"Bug: \");\n\t\t\t$bugbaseurl.= '&body=';\n\t\t\t// TODO use .github/ISSUE_TEMPLATE.md to generate?\n\t\t\t$bugbaseurl .= urlencode(\"# Bug\\n\");\n\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"## Environment\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Version**: \" . DOL_VERSION . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **OS**: \" . php_uname('s') . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Web server**: \" . $_SERVER[\"SERVER_SOFTWARE\"] . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **PHP**: \" . php_sapi_name() . ' ' . phpversion() . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Database**: \" . $db::LABEL . ' ' . $db->getVersion() . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **URL**: \" . $_SERVER[\"REQUEST_URI\"] . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"## Report\\n\");\n\t\t\tprint '<div id=\"blockvmenuhelpbugreport\" class=\"blockvmenuhelp\">';\n\t\t\tprint '<a class=\"help\" target=\"_blank\" href=\"'.$bugbaseurl.'\">'.$langs->trans(\"FindBug\").'</a>';\n\t\t\tprint '</div>';\n\t\t}\n\n        print \"</div>\\n\";\n        print \"<!-- End Help Block-->\\n\";\n        print \"\\n\";\n\n        print \"</div>\\n\";\n        print \"<!-- End left menu -->\\n\";\n        print \"\\n\";\n\n\t    // Execute hook printLeftBlock\n\t    $parameters=array();\n\t    $reshook=$hookmanager->executeHooks('printLeftBlock',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t    print $hookmanager->resPrint;\n\n\t    print '</div></div> <!-- End side-nav id-left -->';\t// End div id=\"side-nav\" div id=\"id-left\"\n    }\n\n    print \"\\n\";\n    print '<!-- Begin right area -->'.\"\\n\";\n\n    if (empty($leftmenuwithoutmainarea)) main_area($title);\n}\n\n\n/**\n *  Begin main area\n *\n *  @param\tstring\t$title\t\tTitle\n *  @return\tvoid\n */\nfunction main_area($title='')\n{\n    global $conf, $langs;\n\n\tif (empty($conf->dol_hide_leftmenu)) print '<div id=\"id-right\">';\n\n    print \"\\n\";\n\n    print '<!-- Begin div class=\"fiche\" -->'.\"\\n\".'<div class=\"fiche\">'.\"\\n\";\n\n    if (! empty($conf->global->MAIN_ONLY_LOGIN_ALLOWED)) print info_admin($langs->trans(\"WarningYouAreInMaintenanceMode\",$conf->global->MAIN_ONLY_LOGIN_ALLOWED));\n}\n\n\n/**\n *  Return helpbaseurl, helppage and mode\n *\n *  @param\tstring\t\t$helppagename\t\tPage name ('EN:xxx,ES:eee,FR:fff...' or 'http://localpage')\n *  @param  Translate\t$langs\t\t\t\tLanguage\n *  @return\tarray\t\tArray of help urls\n */\nfunction getHelpParamFor($helppagename,$langs)\n{\n\t$helpbaseurl='';\n\t$helppage='';\n\t$mode='';\n\n    if (preg_match('/^http/i',$helppagename))\n    {\n        // If complete URL\n        $helpbaseurl='%s';\n        $helppage=$helppagename;\n        $mode='local';\n    }\n    else\n    {\n        // If WIKI URL\n        if (preg_match('/^es/i',$langs->defaultlang))\n        {\n            $helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n            if (preg_match('/ES:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n        }\n        if (preg_match('/^fr/i',$langs->defaultlang))\n        {\n            $helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n            if (preg_match('/FR:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n        }\n        if (empty($helppage))\t// If help page not already found\n        {\n            $helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n            if (preg_match('/EN:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n        }\n        $mode='wiki';\n    }\n    return array('helpbaseurl'=>$helpbaseurl,'helppage'=>$helppage,'mode'=>$mode);\n}\n\n\n/**\n *  Show a search area\n *\n *  @param  string\t$urlaction          Url post\n *  @param  string\t$urlobject          Url of the link under the search box\n *  @param  string\t$title              Title search area\n *  @param  string\t$htmlmorecss        Add more css\n *  @param  string\t$htmlinputname      Field Name input form\n *  @param\tstring\t$accesskey\t\t\tAccesskey\n *  @param  string  $prefhtmlinputname  Complement for id to avoid multiple same id in the page\n *  @param\tstring\t$img\t\t\t\tImage to use\n *  @return\tstring\n */\nfunction printSearchForm($urlaction, $urlobject, $title, $htmlmorecss, $htmlinputname, $accesskey='', $prefhtmlinputname='',$img='')\n{\n    global $conf,$langs;\n\n    if (empty($htmlinputid)) {\n        $htmlinputid = $htmlinputname;\n    }\n\n    $ret='';\n    $ret.='<form action=\"'.$urlaction.'\" method=\"post\" class=\"searchform\">';\n\tif (empty($conf->global->MAIN_HTML5_PLACEHOLDER))\n\t{\n        $ret.='<div class=\"menu_titre menu_titre_search\"';\n    \tif (! empty($conf->global->MAIN_HTML5_PLACEHOLDER)) $ret.=' style=\"display: inline-block\"';\n    \t$ret.='>';\n    \t$ret.='<label for=\"'.$prefhtmlinputname.$htmlinputname.'\">';\n    \t$ret.='<a class=\"vsmenu\" href=\"'.$urlobject.'\">';\n       \tif ($img && ! empty($conf->global->MAIN_HTML5_PLACEHOLDER)) $ret.=$img;\n       \telse if ($img || $title) $ret.=$img.' '.$title;\n    \t$ret.='</a>';\n    \t$ret.='</label>';\n    \t$ret.='</div>';\n\t}\n    $ret.='<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n    $ret.='<input type=\"hidden\" name=\"mode\" value=\"search\">';\n    $ret.='<input type=\"text\" class=\"flat '.$htmlmorecss.'\"';\n    if (! empty($conf->global->MAIN_HTML5_PLACEHOLDER)) $ret.=' style=\"text-indent: 22px; background-image: url(\\''.$img.'\\'); background-repeat: no-repeat; background-position: 3px;\"';\n    $ret.=($accesskey?' accesskey=\"'.$accesskey.'\"':'');\n    if (! empty($conf->global->MAIN_HTML5_PLACEHOLDER)) $ret.=' placeholder=\"'.strip_tags($title).'\"';\t\t// Will work only if MAIN_HTML5_PLACEHOLDER is set to 1\n    else $ret.=' title=\"'.$langs->trans(\"SearchOf\").''.strip_tags($title).'\"';\n    $ret.=' name=\"'.$htmlinputname.'\" id=\"'.$prefhtmlinputname.$htmlinputname.'\" />';\n    $ret.='<input type=\"submit\" class=\"button\" style=\"padding-top: 4px; padding-bottom: 4px; padding-left: 6px; padding-right: 6px\" value=\"'.$langs->trans(\"Go\").'\">';\n    $ret.=\"</form>\\n\";\n    return $ret;\n}\n\n\nif (! function_exists(\"llxFooter\"))\n{\n    /**\n     * Show HTML footer\n     * Close div /DIV class=fiche + /DIV id-right + /DIV id-container + /BODY + /HTML.\n     * If global var $delayedhtmlcontent was filled, we output it just before closing the body.\n     *\n     * @param\tstring\t$comment    A text to add as HTML comment into HTML generated page\n\t * @param\tstring\t$zone\t\t'private' (for private pages) or 'public' (for public pages)\n     * @return\tvoid\n     */\n    function llxFooter($comment='',$zone='private')\n    {\n        global $conf, $langs, $user, $object;\n        global $delayedhtmlcontent;\n\n        // Global html output events ($mesgs, $errors, $warnings)\n        dol_htmloutput_events();\n\n        // Code for search criteria persistence.\n        // Save $user->lastsearch_values if defined (define on list pages when a form field search_xxx exists)\n        if (is_object($user) && ! empty($user->lastsearch_values_tmp) && is_array($user->lastsearch_values_tmp))\n        {\n            // Clean data\n            foreach($user->lastsearch_values_tmp as $key => $val)\n            {\n                unset($_SESSION['lastsearch_values_tmp_'.$key]);\n                if (count($val))\n                {\n                    if (empty($val['sortfield'])) unset($val['sortfield']);\n                    if (empty($val['sortorder'])) unset($val['sortorder']);\n                    dol_syslog('Save lastsearch_values_tmp_'.$key.'='.json_encode($val, 0).\" (systematic recording of last search criteria)\");\n                    $_SESSION['lastsearch_values_tmp_'.$key]=json_encode($val);\n                    unset($_SESSION['lastsearch_values_'.$key]);\n                }\n            }\n        }\n\n        // Core error message\n        if (! empty($conf->global->MAIN_CORE_ERROR))\n        {\n            // Ajax version\n            if ($conf->use_javascript_ajax)\n            {\n                $title = img_warning().' '.$langs->trans('CoreErrorTitle');\n                print ajax_dialog($title, $langs->trans('CoreErrorMessage'));\n            }\n            // html version\n            else\n            {\n                $msg = img_warning().' '.$langs->trans('CoreErrorMessage');\n                print '<div class=\"error\">'.$msg.'</div>';\n            }\n\n            //define(\"MAIN_CORE_ERROR\",0);      // Constant was defined and we can't change value of a constant\n        }\n\n        print \"\\n\\n\";\n\n        print '</div> <!-- End div class=\"fiche\" -->'.\"\\n\"; // End div fiche\n\n\t\tif (empty($conf->dol_hide_leftmenu)) print '</div> <!-- End div id-right -->'; // End div id-right\n\n        print \"\\n\";\n        if ($comment) print '<!-- '.$comment.' -->'.\"\\n\";\n\n        printCommonFooter($zone);\n\n        if (empty($conf->dol_hide_leftmenu) && empty($conf->dol_use_jmobile)) print '</div> <!-- End div id-container -->'.\"\\n\";\t// End div container\n\n        if (! empty($delayedhtmlcontent)) print $delayedhtmlcontent;\n\n        // TODO Move this in lib_head.js.php\n\n        // Wrapper to show tooltips (html or onclick popup)\n        if (! empty($conf->use_javascript_ajax) && empty($conf->dol_no_mouse_hover))\n        {\n    \t\tprint \"\\n<!-- JS CODE TO ENABLE tipTip on all object with class classfortooltip -->\\n\";\n    \t\tprint '<script type=\"text/javascript\">\n            \tjQuery(document).ready(function () {\n            \t\tjQuery(\".classfortooltip\").tipTip({maxWidth: \"'.dol_size(($conf->browser->layout == 'phone' ? 400 : 700),'width').'px\", edgeOffset: 10, delay: 50, fadeIn: 50, fadeOut: 50});\n            \t\tjQuery(\".classfortooltiponclicktext\").dialog({ width: 500, autoOpen: false });\n            \t\tjQuery(\".classfortooltiponclick\").click(function () {\n            \t\t    console.log(\"We click on tooltip for element with dolid=\"+$(this).attr(\\'dolid\\'));\n            \t\t    if ($(this).attr(\\'dolid\\'))\n            \t\t    {\n                            obj=$(\"#idfortooltiponclick_\"+$(this).attr(\\'dolid\\'));\n            \t\t        obj.dialog(\"open\");\n            \t\t    }\n            \t\t});\n                });\n            </script>' . \"\\n\";\n        }\n\n        // Wrapper to manage document_preview\n        if (! empty($conf->use_javascript_ajax) && ($conf->browser->layout != 'phone'))\n        {\n            print \"\\n<!-- JS CODE TO ENABLE document_preview -->\\n\";\n            print '<script type=\"text/javascript\">\n                jQuery(document).ready(function () {\n\t\t\t        jQuery(\".documentpreview\").click(function () {\n            \t\t    console.log(\"We click on preview for element with href=\"+$(this).attr(\\'href\\')+\" mime=\"+$(this).attr(\\'mime\\'));\n            \t\t    document_preview($(this).attr(\\'href\\'), $(this).attr(\\'mime\\'), \\''.dol_escape_js($langs->transnoentities(\"Preview\")).'\\');\n                \t\treturn false;\n        \t\t\t});\n        \t\t});\n            </script>' . \"\\n\";\n        }\n\n        // Wrapper to manage dropdown\n        if (! empty($conf->use_javascript_ajax) && ! defined('JS_JQUERY_DISABLE_DROPDOWN'))\n        {\n            print \"\\n<!-- JS CODE TO ENABLE dropdown -->\\n\";\n            print '<script type=\"text/javascript\">\n                jQuery(document).ready(function () {\n                  $(\".dropdown dt a\").on(\\'click\\', function () {\n                      //console.log($(this).parent().parent().find(\\'dd ul\\'));\n                      $(this).parent().parent().find(\\'dd ul\\').slideToggle(\\'fast\\');\n                      // Note: Did not find a way to get exact height (value is update at exit) so i calculate a generic from nb of lines\n                      heigthofcontent = 21 * $(this).parent().parent().find(\\'dd div ul li\\').length;\n                      if (heigthofcontent > 300) heigthofcontent = 300; // limited by max-height on css .dropdown dd ul\n                      posbottom = $(this).parent().parent().find(\\'dd\\').offset().top + heigthofcontent + 8;\n                      //console.log(posbottom);\n                      var scrollBottom = $(window).scrollTop() + $(window).height();\n                      //console.log(scrollBottom);\n                      diffoutsidebottom = (posbottom - scrollBottom);\n                      console.log(\"heigthofcontent=\"+heigthofcontent+\", diffoutsidebottom (posbottom=\"+posbottom+\" - scrollBottom=\"+scrollBottom+\") = \"+diffoutsidebottom);\n                      if (diffoutsidebottom > 0)\n                      {\n                            pix = \"-\"+(diffoutsidebottom+8)+\"px\";\n                            console.log(\"We reposition top by \"+pix);\n                            $(this).parent().parent().find(\\'dd\\').css(\"top\", pix);\n                      }\n                      // $(\".dropdown dd ul\").slideToggle(\\'fast\\');\n                  });\n                  $(\".dropdowncloseonclick\").on(\\'click\\', function () {\n                     console.log(\"Link has class dropdowncloseonclick, so we close/hide the popup ul\");\n                     $(this).parent().parent().hide();\n                  });\n\n                  $(document).bind(\\'click\\', function (e) {\n                      var $clicked = $(e.target);\n                      if (!$clicked.parents().hasClass(\"dropdown\")) $(\".dropdown dd ul\").hide();\n                  });\n                });\n                </script>';\n        }\n\n        // Wrapper to add log when clicking on download or preview\n        if (! empty($conf->blockedlog->enabled) && is_object($object) && $object->id > 0 && $object->statut > 0)\n        {\n            if (in_array($object->element, array('facture')))       // Restrict for the moment to element 'facture'\n            {\n                print \"\\n<!-- JS CODE TO ENABLE log when making a download or a preview of a document -->\\n\";\n                ?>\n    \t\t\t<script type=\"text/javascript\">\n    \t\t\tjQuery(document).ready(function () {\n    \t\t\t\t$('a.documentpreview').click(function() {\n    \t\t\t\t\t$.post('<?php echo DOL_URL_ROOT.\"/blockedlog/ajax/block-add.php\" ?>'\n    \t\t\t\t\t\t\t, {\n    \t\t\t\t\t\t\t\tid:<?php echo $object->id; ?>\n    \t\t\t\t\t\t\t\t, element:'<?php echo $object->element ?>'\n    \t\t\t\t\t\t\t\t, action:'DOC_PREVIEW'\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t);\n    \t\t\t\t});\n    \t\t\t\t$('a.documentdownload').click(function() {\n    \t\t\t\t\t$.post('<?php echo DOL_URL_ROOT.\"/blockedlog/ajax/block-add.php\" ?>'\n    \t\t\t\t\t\t\t, {\n    \t\t\t\t\t\t\t\tid:<?php echo $object->id; ?>\n    \t\t\t\t\t\t\t\t, element:'<?php echo $object->element ?>'\n    \t\t\t\t\t\t\t\t, action:'DOC_DOWNLOAD'\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t);\n    \t\t\t\t});\n    \t\t\t});\n    \t\t\t</script>\n\t\t\t\t<?php\n    \t\t}\n       \t}\n\n\n\t\t// A div for the address popup\n\t\tprint \"\\n<!-- A div to allow dialog popup -->\\n\";\n\t\tprint '<div id=\"dialogforpopup\" style=\"display: none;\"></div>'.\"\\n\";\n\n        print \"</body>\\n\";\n        print \"</html>\\n\";\n    }\n}\n\n"], "fixing_code": ["<?php\n/* Copyright (C) 2005-2011 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2005-2006 Regis Houssin        <regis.houssin@capnetworks.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *      \\file       htdocs/adherents/subscription/info.php\n *      \\ingroup    member\n *      \\brief      Page with information of subscriptions of a member\n */\n\nrequire '../../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/member.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/subscription.class.php';\n\n$langs->load(\"companies\");\n$langs->load(\"bills\");\n$langs->load(\"members\");\n$langs->load(\"users\");\n\nif (!$user->rights->adherent->lire)\n\taccessforbidden();\n\n$rowid=GETPOST(\"rowid\",'int');\n\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n\nllxHeader();\n\n$object = new Subscription($db);\n$result = $object->fetch($rowid);\n\n$head = subscription_prepare_head($object);\n\ndol_fiche_head($head, 'info', $langs->trans(\"Subscription\"), -1, 'payment');\n\n$linkback = '<a href=\"'.DOL_URL_ROOT.'/adherents/subscription/list.php\">'.$langs->trans(\"BackToList\").'</a>';\n\ndol_banner_tab($object, 'rowid', $linkback, 1);\n\nprint '<div class=\"fichecenter\">';\n\nprint '<div class=\"underbanner clearboth\"></div>';\n\nprint '<br>';\n\n$object->info($rowid);\n\nprint '<table width=\"100%\"><tr><td>';\ndol_print_object_info($object);\nprint '</td></tr></table>';\n\nprint '</div>';\n\n\ndol_fiche_end();\n\nllxFooter();\n$db->close();\n", "<?php\n/* Copyright (C) 2007-2008\tJeremie Ollivier\t<jeremie.o@laposte.net>\n * Copyright (C) 2011\t\tLaurent Destailleur\t<eldy@users.sourceforge.net>\n * Copyright (C) 2011\t\tJuanjo Menent\t\t<jmenent@2byte.es>\n * Copyright (C) 2015\t\tRegis Houssin\t\t<regis.houssin@capnetworks.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n// Protection to avoid direct call of template\nif (empty($langs) || ! is_object($langs))\n{\n\tprint \"Error, template page can't be called as URL\";\n\texit;\n}\n\n\n$langs->load(\"main\");\n$langs->load(\"bills\");\n$langs->load(\"cashdesk\");\n\n// Object $form must de defined\n\n?>\n\n<script type=\"text/javascript\" src=\"javascript/facturation1.js\"></script>\n<script type=\"text/javascript\" src=\"javascript/dhtml.js\"></script>\n<script type=\"text/javascript\" src=\"javascript/keypad.js\"></script>\n\n<!-- ========================= Cadre \"Article\" ============================= -->\n<fieldset class=\"cadre_facturation\"><legend class=\"titre1\"><?php echo $langs->trans(\"Article\"); ?></legend>\n\t<form id=\"frmFacturation\" class=\"formulaire1\" method=\"post\" action=\"facturation_verif.php\" autocomplete=\"off\">\n\t\t<input type=\"hidden\" name=\"token\" value=\"<?php echo $_SESSION['newtoken']; ?>\" />\n\n\t\t<input type=\"hidden\" name=\"hdnSource\" value=\"NULL\" />\n\n\t\t<table class=\"center\">\n\t\t\t<tr><th class=\"label1\"><?php echo $langs->trans(\"FilterRefOrLabelOrBC\"); ?></th><th class=\"label1\"><?php echo $langs->trans(\"Designation\"); ?></th></tr>\n\t\t\t<tr>\n\t\t\t<!-- Affichage de la reference et de la designation -->\n\t\t\t<td><input class=\"texte_ref\" type=\"text\" id =\"txtRef\" name=\"txtRef\" value=\"<?php echo $obj_facturation->ref() ?>\"\n\t\t\t\tonchange=\"javascript: setSource('REF');\"\n\t\t\t\tonkeyup=\"javascript: verifResultat('resultats_dhtml', this.value, <?php echo (isset($conf->global->BARCODE_USE_SEARCH_TO_SELECT) ? (int) $conf->global->BARCODE_USE_SEARCH_TO_SELECT : 1) ?>);\"\n\t\t\t\tonfocus=\"javascript: this.select(); verifResultat('resultats_dhtml', this.value, <?php echo (isset($conf->global->BARCODE_USE_SEARCH_TO_SELECT) ? (int) $conf->global->BARCODE_USE_SEARCH_TO_SELECT : 1) ?>);\"\n\t\t\t\tonBlur=\"javascript: document.getElementById('resultats_dhtml').innerHTML = '';\"/>\n\t\t\t</td>\n\t\t\t<td class=\"select_design maxwidthonsmartphone\">\n            <?php /*\n            $selected='';\n            $htmlname='idprod';\n            $status=-1;\n            $rice_level=$company->price_level;\n            print ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/product/ajax/products.php', 'outjson=1&price_level='.$price_level.'&type='.$filtertype.'&mode=1&status='.$status.'&finished='.$finished, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT);\n            if (! $hidelabel) print $langs->trans(\"RefOrLabel\").' : ';\n            print '<input type=\"text\" size=\"4\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\" />';\n            */\n            ?>\n\n\t\t\t\t<select id=\"selProduit\" class=\"maxwidthonsmartphone\" name=\"selProduit\" onchange=\"javascript: setSource('LISTE');\">\n\t\t\t\t\t<?php\n                        print '<option value=\"0\">'.$top_liste_produits.'</option>'.\"\\n\";\n\n\t\t\t\t\t\t$id = $obj_facturation->id();\n\n\t\t\t\t\t\t// Si trop d'articles ont ete trouves, on n'affiche que les X premiers (defini dans le fichier de configuration) ...\n\n\t\t\t\t\t\t$nbtoshow = $nbr_enreg;\n\t\t\t\t\t\tif (! empty($conf_taille_listes) && $nbtoshow > $conf_taille_listes) $nbtoshow = $conf_taille_listes;\n\n\t\t\t\t\t\tfor ($i = 0; $i < $nbtoshow; $i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( $id == $tab_designations[$i]['rowid'] )\n\t\t\t\t\t\t\t\t$selected = 'selected';\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t$selected = '';\n\n\t\t\t\t\t\t\t$label = $tab_designations[$i]['label'];\n\n\t\t\t\t\t\t\tprint '<option '.$selected.' value=\"'.$tab_designations[$i]['rowid'].'\">'.dol_trunc($tab_designations[$i]['ref'],16).' - '.dol_trunc($label,35,'middle');\n\t\t\t\t\t\t\tif (! empty($conf->stock->enabled) && !empty($conf_fkentrepot) && $tab_designations[$i]['fk_product_type']==0) print ' ('.$langs->trans(\"CashDeskStock\").': '.(empty($tab_designations[$i]['reel'])?0:$tab_designations[$i]['reel']).')';\n\t\t\t\t\t\t\tprint '</option>'.\"\\n\";\n\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</select>\n\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t</form>\n\n\t<form id=\"frmQte\" class=\"formulaire1\" method=\"post\" action=\"facturation_verif.php?action=ajout_article\" onsubmit =\"javascript: return verifSaisie();\">\n\t\t<input type=\"hidden\" name=\"token\" value=\"<?php echo $_SESSION['newtoken']; ?>\" />\n\t\t<table class=\"center\">\n\t\t\t<tr>\n\t\t\t<th><?php echo $langs->trans(\"Qty\"); ?></th>\n\t\t\t<th><?php echo $langs->trans(\"PriceUHT\"); ?></th>\n\t\t\t<th><?php echo $langs->trans(\"Discount\"); ?> (%)</th>\n            <th><?php echo $langs->trans(\"VATRate\"); ?></th>\n\t\t\t<th></th>\n            </tr>\n\t\t\t<tr>\n\t\t\t\t<td><input class=\"texte1 maxwidth50onsmartphone\" type=\"text\" id=\"txtQte\" name=\"txtQte\" value=\"1\" onkeyup=\"javascript: modif();\" onfocus=\"javascript: this.select();\" />\n<?php print genkeypad(\"txtQte\", \"frmQte\");?>\n\t\t\t\t</td>\n\t\t\t\t<!-- Show unit price -->\n\t\t\t\t<?php // TODO Remove the disabled and use this value when adding product into cart ?>\n\t\t\t\t<td><input class=\"texte1_off maxwidth50onsmartphone\" type=\"text\" name=\"txtPrixUnit\" value=\"<?php echo price2num($obj_facturation->prix(), 'MU'); ?>\" onchange=\"javascript: modif();\" disabled /></td>\n    \t\t\t<!-- Choix de la remise -->\n    \t\t\t<td><input class=\"texte1 maxwidth50onsmartphone\" type=\"text\" id=\"txtRemise\" name=\"txtRemise\" value=\"0\" onkeyup=\"javascript: modif();\" onfocus=\"javascript: this.select();\"/>\n\t\t\t\t\t<?php print genkeypad(\"txtRemise\", \"frmQte\");?>\n    \t\t\t</td>\n                <!-- Choix du taux de TVA -->\n                <td class=\"select_tva center\">\n                <?php\n\t\t\t\t\t$vatrate = $obj_facturation->vatrate;      // To get vat rate we just have selected\n\n\t\t\t\t\t$buyer = new Societe($db);\n\t\t\t\t\tif ($_SESSION[\"CASHDESK_ID_THIRDPARTY\"] > 0) $buyer->fetch($_SESSION[\"CASHDESK_ID_THIRDPARTY\"]);\n\t\t\t\t\techo $form->load_tva('selTva', (isset($_POST[\"selTva\"])?GETPOST(\"selTva\",'alpha',2):$vatrate), $mysoc, $buyer, 0, 0, '', false, -1);\n\t\t\t    ?>\n                </td>\n\t\t\t\t<td></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<!-- Affichage du stock pour l'article courant -->\n\t\t\t<tr>\n\t\t\t\t<td><?php echo $langs->trans(\"Stock\"); ?></td>\n\t\t\t\t<td>\n\t\t\t\t<input class=\"texte1_off maxwidth50onsmartphone\" type=\"text\" name=\"txtStock\" value=\"<?php echo $obj_facturation->stock() ?>\" disabled />\n\t\t\t\t</td>\n\t\t\t\t<td><?php echo $langs->trans(\"TotalHT\"); ?></td>\n    \t\t\t<!-- Affichage du total HT -->\n    \t\t\t<td colspan=\"2\"><input class=\"texte1_off maxwidth50onsmartphone\" type=\"text\" name=\"txtTotal\" value=\"\" disabled /></td><td></td>\n\t\t\t</tr>\n\n\t\t</table>\n\n\t\t<input class=\"button bouton_ajout_article\" type=\"submit\" id=\"sbmtEnvoyer\" value=\"<?php echo $langs->trans(\"AddThisArticle\"); ?>\" />\n\t</form>\n</fieldset>\n\n<!-- ========================= Cadre \"Amount\" ============================= -->\n<form id=\"frmDifference\"  class=\"formulaire1\" method=\"post\" onsubmit=\"javascript: return verifReglement()\" action=\"validation_verif.php?action=valide_achat\">\n\t<input type=\"hidden\" name=\"hdnChoix\" value=\"\" />\n\t<input type=\"hidden\" name=\"token\" value=\"<?php echo $_SESSION['newtoken']; ?>\" />\n<fieldset class=\"cadre_facturation\"><legend class=\"titre1\"><?php echo $langs->trans(\"Amount\"); ?></legend>\n\t\t<table class=\"centpercent\">\n\t\t\t<tr><th class=\"label1\"><?php echo $langs->trans(\"TotalTicket\"); ?></th><th class=\"label1\"><?php echo $langs->trans(\"Received\"); ?></th><th class=\"label1\"><?php echo $langs->trans(\"Change\"); ?></th></tr>\n\t\t\t<tr>\n\t\t\t<!-- Affichage du montant du -->\n\t\t\t<td><input class=\"texte2_off maxwidth100onsmartphone\" type=\"text\" name=\"txtDu\" value=\"<?php echo price2num($obj_facturation->prixTotalTtc(), 'MT'); ?>\" disabled /></td>\n\t\t\t<!-- Choix du montant encaisse -->\n\t\t\t<td><input class=\"texte2 maxwidth100onsmartphone\" type=\"text\" id=\"txtEncaisse\" name=\"txtEncaisse\" value=\"\" onkeyup=\"javascript: verifDifference();\" onfocus=\"javascript: this.select();\" />\n<?php print genkeypad(\"txtEncaisse\", \"frmDifference\");?>\n\t\t\t</td>\n\t\t\t<!-- Affichage du montant rendu -->\n\t\t\t<td><input class=\"texte2_off maxwidth100onsmartphone\" type=\"text\" name=\"txtRendu\" value=\"0\" disabled /></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t</table>\n</fieldset>\n\n<fieldset class=\"cadre_facturation\"><legend class=\"titre1\"><?php echo $langs->trans(\"PaymentMode\"); ?></legend>\n\t\t<div class=\"inline-block\">\n\t\t\t<?php\n\t\t\tprint '<div class=\"inline-block\" style=\"margin: 6px;\">';\n\t\t\tif (empty($_SESSION['CASHDESK_ID_BANKACCOUNT_CASH']) || $_SESSION['CASHDESK_ID_BANKACCOUNT_CASH'] < 0)\n\t\t\t{\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\tprint '<input class=\"bouton_mode_reglement_disabled\" type=\"button\" name=\"btnModeReglement\" value=\"'.$langs->trans(\"Cash\").'\" title=\"'.dol_escape_htmltag($langs->trans(\"ErrorModuleSetupNotComplete\")).'\" />';\n\t\t\t}\n\t\t\telse print '<input class=\"button bouton_mode_reglement\" type=\"submit\" name=\"btnModeReglement\" value=\"'.$langs->trans(\"Cash\").'\" onclick=\"javascript: verifClic(\\'ESP\\');\" />';\n\t\t\tprint '</div>';\n\t\t\tprint '<div class=\"inline-block\" style=\"margin: 6px;\">';\n\t\t\tif (empty($_SESSION['CASHDESK_ID_BANKACCOUNT_CHEQUE']) || $_SESSION['CASHDESK_ID_BANKACCOUNT_CHEQUE'] < 0)\n\t\t\t{\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\tprint '<input class=\"bouton_mode_reglement_disabled\" type=\"button\" name=\"btnModeReglement\" value=\"'.$langs->trans(\"CreditCard\").'\" title=\"'.dol_escape_htmltag($langs->trans(\"ErrorModuleSetupNotComplete\")).'\" />';\n\t\t\t}\n\t\t\telse print '<input class=\"button bouton_mode_reglement\" type=\"submit\" name=\"btnModeReglement\" value=\"'.$langs->trans(\"CreditCard\").'\" onclick=\"javascript: verifClic(\\'CB\\');\" />';\n\t\t\tprint '</div>';\n\t\t\tprint '<div class=\"inline-block\" style=\"margin: 6px;\">';\n\t\t\tif (empty($_SESSION['CASHDESK_ID_BANKACCOUNT_CB']) || $_SESSION['CASHDESK_ID_BANKACCOUNT_CB'] < 0)\n\t\t\t{\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\tprint '<input class=\"bouton_mode_reglement_disabled\" type=\"button\" name=\"btnModeReglement\" value=\"'.$langs->trans(\"CheckBank\").'\" title=\"'.dol_escape_htmltag($langs->trans(\"ErrorModuleSetupNotComplete\")).'\" />';\n\t\t\t}\n\t\t\telse print '<input class=\"button bouton_mode_reglement\" type=\"submit\" name=\"btnModeReglement\" value=\"'.$langs->trans(\"CheckBank\").'\" onclick=\"javascript: verifClic(\\'CHQ\\');\" />';\n\t\t\tprint '</div>';\n\t\t\tprint '<div class=\"clearboth\">';\n\t\t\tprint '<div class=\"inline-block\" style=\"margin: 6px;\">';\n\t\t\t?>\n\t\t\t\t<input class=\"button bouton_mode_reglement\" type=\"submit\" name=\"btnModeReglement\" value=\"<?php echo $langs->trans(\"Reported\"); ?>\" onclick=\"javascript: verifClic('DIF');\" />\n\t\t\t<?php\n\t\t\tprint $langs->trans(\"DateDue\").' :';\n\t\t\tprint $form->select_date(-1,'txtDatePaiement',0,0,0,'paymentmode',1,0,1);\n\t\t\tprint '</div>';\n\t\t\t?>\n\t\t</div>\n</fieldset>\n</form>\n\n<script type=\"text/javascript\">\n/*\tCalendar.setup ({\n\t\tinputField\t: \"txtDatePaiement\",\n\t\tifFormat\t: \"%Y-%m-%d\",\n\t\tbutton\t\t: \"btnCalendrier\"\n\t});\n*/\n\tif (document.getElementById('frmFacturation').txtRef.value) {\n\n\t\tmodif();\n\t\tdocument.getElementById('frmQte').txtQte.focus();\n\t\tdocument.getElementById('frmQte').txtQte.select();\n\n\t} else {\n\n\t\tdocument.getElementById('frmFacturation').txtRef.focus();\n\n\t}\n\n</script>\n", "<?php\n/* Copyright (C) 2007-2008\tJeremie Ollivier\t<jeremie.o@laposte.net>\n * Copyright (C) 2011\t\tJuanjo Menent\t\t<jmenent@2byte.es>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n// Protection to avoid direct call of template\nif (empty($langs) || ! is_object($langs))\n{\n\tprint \"Error, template page can't be called as URL\";\n\texit;\n}\n\n\nrequire_once DOL_DOCUMENT_ROOT.'/societe/class/societe.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\n$langs->load(\"main\");\n$langs->load(\"bills\");\n$langs->load(\"cashdesk\");\n\n?>\n\n<div class=\"liste_articles_haut\">\n<div class=\"liste_articles_bas\">\n\n<p class=\"titre\"><?php echo $langs->trans(\"ShoppingCart\"); ?></p>\n\n<?php\n/** add Ditto for MultiPrix*/\n$thirdpartyid = $_SESSION['CASHDESK_ID_THIRDPARTY'];\n$societe = new Societe($db);\n$societe->fetch($thirdpartyid);\n/** end add Ditto */\n\n$tab=array();\n$tab = $_SESSION['poscart'];\n\n$tab_size=count($tab);\nif ($tab_size <= 0) print '<div class=\"center\">'.$langs->trans(\"NoArticle\").'</div><br>';\nelse\n{\n    for ($i=0;$i < $tab_size;$i++)\n    {\n        echo ('<div class=\"cadre_article\">'.\"\\n\");\n        echo ('<p><a href=\"facturation_verif.php?action=suppr_article&suppr_id='.$tab[$i]['id'].'\" title=\"'.$langs->trans(\"DeleteArticle\").'\">'.$tab[$i]['ref'].' - '.$tab[$i]['label'].'</a></p>'.\"\\n\");\n\n        if ( $tab[$i]['remise_percent'] > 0 ) {\n\n            $remise_percent = ' -'.$tab[$i]['remise_percent'].'%';\n\n        } else {\n\n            $remise_percent = '';\n\n        }\n\n        $remise = $tab[$i]['remise'];\n\n        echo ('<p>'.$tab[$i]['qte'].' x '.price2num($tab[$i]['price'], 'MT').$remise_percent.' = '.price(price2num($tab[$i]['total_ht'], 'MT'),0,$langs,0,0,-1,$conf->currency).' '.$langs->trans(\"HT\").' ('.price(price2num($tab[$i]['total_ttc'], 'MT'),0,$langs,0,0,-1,$conf->currency).' '.$langs->trans(\"TTC\").')</p>'.\"\\n\");\n        echo ('</div>'.\"\\n\");\n    }\n}\n\necho ('<p class=\"cadre_prix_total\">'.$langs->trans(\"Total\").' : '.price(price2num($total_ttc, 'MT'),0,$langs,0,0,-1,$conf->currency).'<br></p>'.\"\\n\");\n\n?></div>\n</div>\n", "<?php\n/* Copyright (C) 2007-2008 Jeremie Ollivier      <jeremie.o@laposte.net>\n * Copyright (C) 2008-2010 Laurent Destailleur   <eldy@uers.sourceforge.net>\n * Copyright (C) 2009      Regis Houssin         <regis.houssin@capnetworks.com>\n * Copyright (C) 2011      Juanjo Menent         <jmenent@2byte.es>\n * Copyright (C) 2012      Marcos Garc\u00eda         <marcosgdf@gmail.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n// Protection to avoid direct call of template\nif (empty($langs) || ! is_object($langs))\n{\n\tprint \"Error, template page can't be called as URL\";\n\texit;\n}\n\n\ninclude_once DOL_DOCUMENT_ROOT.'/societe/class/societe.class.php';\ninclude_once DOL_DOCUMENT_ROOT.'/compta/bank/class/account.class.php';\ninclude_once DOL_DOCUMENT_ROOT.'/product/stock/class/entrepot.class.php';\n\n/*if (!empty($_SESSION[\"CASHDESK_ID_THIRDPARTY\"]))\n{\n\t$company=new Societe($db);\n\t$company->fetch($_SESSION[\"CASHDESK_ID_THIRDPARTY\"]);\n\t$companyLink = $company->getNomUrl(1);\n}*/\nif (!empty($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CASH\"]))\n{\n\t$bankcash=new Account($db);\n\t$bankcash->fetch($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CASH\"]);\n\t$bankcash->label=$bankcash->ref;\n\t$bankcashLink = $bankcash->getNomUrl(1);\n}\nif (!empty($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CB\"]))\n{\n\t$bankcb=new Account($db);\n\t$bankcb->fetch($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CB\"]);\n\t$bankcbLink = $bankcb->getNomUrl(1);\n}\nif (!empty($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CHEQUE\"]))\n{\n\t$bankcheque=new Account($db);\n\t$bankcheque->fetch($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CHEQUE\"]);\n\t$bankchequeLink = $bankcheque->getNomUrl(1);\n}\nif (!empty($_SESSION[\"CASHDESK_ID_WAREHOUSE\"]) && ! empty($conf->stock->enabled))\n{\n\t$warehouse=new Entrepot($db);\n\t$warehouse->fetch($_SESSION[\"CASHDESK_ID_WAREHOUSE\"]);\n\t$warehouseLink = $warehouse->getNomUrl(1);\n}\n\n\n$langs->load(\"cashdesk\");\n$langs->load(\"main\");\n\nprint \"\\n\".'<!-- menu.tpl.php -->'.\"\\n\";\nprint '<div class=\"menu_bloc\">';\nprint '<ul class=\"menu\">';\n// Link to new sell\nprint '<li class=\"menu_choix1\"><a href=\"affIndex.php?menutpl=facturation&id=NOUV\"><span class=\"hideonsmartphone\">'.$langs->trans(\"NewSell\").'</span></a></li>';\n// Open new tab on backoffice (this is not a disconnect from POS)\nprint '<li class=\"menu_choix2\"><a href=\"..\" target=\"backoffice\"><span class=\"hideonsmartphone\">'.$langs->trans(\"BackOffice\").'</span></a></li>';\n// Disconnect\nprint '<li class=\"menu_choix0\">'.$langs->trans(\"User\").': '.$_SESSION['firstname'].' '.$_SESSION['lastname'];\nprint ' <a href=\"deconnexion.php\">'.img_picto($langs->trans('Logout'), 'logout.png').'</a><br>';\nprint '<form id=\"frmThirdparty\" class=\"formulaire1 inline-block\" method=\"post\" action=\"facturation_verif.php?action=change_thirdparty\">';\nprint $langs->trans(\"CashDeskThirdParty\").': ';\nprint $form->select_company($_SESSION[\"CASHDESK_ID_THIRDPARTY\"], 'CASHDESK_ID_THIRDPARTY', 's.client IN (1,3)', '', 0, 0, null, 0, 'valignmiddle inline-block');\nprint '<input class=\"button bouton_change_thirdparty inline-block valignmiddle\" type=\"submit\" id=\"bouton_change_thirdparty\" value=\"'.$langs->trans(\"Modify\").'\">';\n//print $companyLink;\nprint '<br>';\nprint '</form>';\n/*print $langs->trans(\"CashDeskBankCash\").': '.$bankcashLink.'<br>';\nprint $langs->trans(\"CashDeskBankCB\").': '.$bankcbLink.'<br>';\nprint $langs->trans(\"CashDeskBankCheque\").': '.$bankchequeLink.'<br>';*/\nprint '<div class=\"clearboth\">';\nif (!empty($_SESSION[\"CASHDESK_ID_WAREHOUSE\"]) && ! empty($conf->stock->enabled) && empty($conf->global->CASHDESK_NO_DECREASE_STOCK))\n{\n\tprint $langs->trans(\"CashDeskWarehouse\").': '.$warehouseLink;\n}\nprint '</div></li></ul>';\nprint '</div>';\nprint \"\\n\".'<!-- menu.tpl.php end -->'.\"\\n\";\n", "<?php\n/* Copyright (C) 2007-2008 Jeremie Ollivier    <jeremie.o@laposte.net>\n * Copyright (C) 2011      Laurent Destailleur <eldy@users.sourceforge.net>\n * Copyright (C) 2012      Marcos Garc\u00eda       <marcosgdf@gmail.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n// Protection to avoid direct call of template\nif (empty($langs) || ! is_object($langs))\n{\n\tprint \"Error, template page can't be called as URL\";\n\texit;\n}\n\n\ninclude_once DOL_DOCUMENT_ROOT.'/compta/facture/class/facture.class.php';\n\n$langs->load(\"main\");\n$langs->load('cashdesk');\n\ntop_httphead('text/html');\n\n$facid=GETPOST('facid','int');\n$object=new Facture($db);\n$object->fetch($facid);\n\n?>\n<html>\n    <head>\n    <title><?php echo $langs->trans('PrintTicket') ?></title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"<?php echo DOL_URL_ROOT;?>/cashdesk/css/ticket.css\">\n</head>\n\n<body>\n\n<div class=\"entete\">\n    <div class=\"logo\">\n        <?php print '<img src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart=mycompany&amp;file='.urlencode('/thumbs/'.$mysoc->logo_small).'\">'; ?>\n    </div>\n    <div class=\"infos\">\n        <p class=\"address\"><?php echo $mysoc->name; ?><br>\n        <?php print dol_nl2br(dol_format_address($mysoc)); ?><br>\n        </p>\n\n        <p class=\"date_heure\"><?php\n        // Recuperation et affichage de la date et de l'heure\n        $now = dol_now();\n        print dol_print_date($now,'dayhourtext').'<br>';\n        print $object->ref;\n        ?></p>\n    </div>\n</div>\n\n<br>\n\n<table class=\"liste_articles\">\n    <thead>\n\t<tr class=\"titres\">\n            <th><?php print $langs->trans(\"Code\"); ?></th>\n            <th><?php print $langs->trans(\"Label\"); ?></th>\n            <th><?php print $langs->trans(\"Qty\"); ?></th>\n            <th><?php print $langs->trans(\"Discount\").' (%)'; ?></th>\n            <th><?php print $langs->trans(\"TotalHT\"); ?></th>\n\t</tr>\n    </thead>\n    <tbody>\n    <?php\n\n    $tab=array();\n    $tab = $_SESSION['poscart'];\n\n    $tab_size=count($tab);\n    for($i=0;$i < $tab_size;$i++)\n    {\n        $remise = $tab[$i]['remise'];\n    ?>\n    <tr>\n        <td><?php echo $tab[$i]['ref'];?></td>\n        <td><?php echo $tab[$i]['label'];?></td>\n        <td><?php echo $tab[$i]['qte'];?></td>\n        <td><?php echo $tab[$i]['remise_percent'];?></td>\n        <td class=\"total\"><?php echo price(price2num($tab[$i]['total_ht'],'MT'),0,$langs,0,0,-1,$conf->currency);?></td>\n    </tr>\n    <?php\n    }\n    ?>\n    </tbody>\n</table>\n\n<table class=\"totaux\">\n<tr>\n    <th class=\"nowrap\"><?php echo $langs->trans(\"TotalHT\");?></th>\n    <td class=\"nowrap\"><?php echo price(price2num($obj_facturation->prixTotalHt(),'MT'),'',$langs,0,-1,-1,$conf->currency).\"\\n\";?></td>\n</tr>\n<tr>\n    <th class=\"nowrap\"><?php echo $langs->trans(\"TotalVAT\").'</th><td class=\"nowrap\">'.price(price2num($obj_facturation->montantTva(),'MT'),'',$langs,0,-1,-1,$conf->currency).\"\\n\";?></td>\n</tr>\n<tr>\n    <th class=\"nowrap\"><?php echo ''.$langs->trans(\"TotalTTC\").'</th><td class=\"nowrap\">'.price(price2num($obj_facturation->prixTotalTtc(),'MT'),'',$langs,0,-1,-1,$conf->currency).\"\\n\";?></td>\n</tr>\n</table>\n\n<script type=\"text/javascript\">\n    window.print();\n</script>\n\n<a class=\"lien\" href=\"#\" onclick=\"javascript: window.close(); return(false);\"><?php echo $langs->trans(\"Close\"); ?></a>\n</body>\n</html>\n", "<?php\n/* Copyright (C) 2007-2008\tJeremie Ollivier\t<jeremie.o@laposte.net>\n * Copyright (C) 2011\t\tJuanjo Menent\t\t<jmenent@2byte.es>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n// Protection to avoid direct call of template\nif (empty($langs) || ! is_object($langs))\n{\n\tprint \"Error, template page can't be called as URL\";\n\texit;\n}\n\n\n$langs->load(\"main\");\n$langs->load(\"bills\");\n$langs->load(\"banks\");\n\n// Object $form must de defined\n\n?>\n\n<fieldset class=\"cadre_facturation\"><legend class=\"titre1\"><?php echo $langs->trans(\"Summary\"); ?></legend>\n\n\t<table class=\"table_resume\">\n\n\t\t<tr><td class=\"resume_label\"><?php echo $langs->trans(\"Invoice\"); ?></td><td><?php  echo $obj_facturation->numInvoice(); ?></td></tr>\n\t\t<tr><td class=\"resume_label\"><?php echo $langs->trans(\"TotalHT\"); ?></td><td><?php echo price(price2num($obj_facturation->prixTotalHt(),'MT'),0,$langs,0,0,-1,$conf->currency); ?></td></tr>\n\t\t<?php\n\t\t\t// Affichage de la tva par taux\n\t\t\tif ( $obj_facturation->montantTva() ) {\n\n\t\t\t\techo ('<tr><td class=\"resume_label\">'.$langs->trans(\"VAT\").'</td><td>'.price(price2num($obj_facturation->montantTva(),'MT'),0,$langs,0,0,-1,$conf->currency).'</td></tr>');\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\n\t\t\t\techo ('<tr><td class=\"resume_label\">'.$langs->trans(\"VAT\").'</td><td>'.$langs->trans(\"NoVAT\").'</td></tr>');\n\n\t\t\t}\n\t\t?>\n\t\t<tr><td class=\"resume_label\"><?php echo $langs->trans(\"TotalTTC\"); ?> </td><td><?php echo price(price2num($obj_facturation->prixTotalTtc(),'MT'),0,$langs,0,0,-1,$conf->currency); ?></td></tr>\n\t\t<tr><td class=\"resume_label\"><?php echo $langs->trans(\"PaymentMode\"); ?> </td><td>\n\t\t<?php\n\t\tswitch ($obj_facturation->getSetPaymentMode())\n\t\t{\n\t\t\tcase 'ESP':\n\t\t\t\techo $langs->trans(\"Cash\");\n\t\t\t\t$filtre='courant=2';\n\t\t\t\tif (!empty($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CASH\"]))\n\t\t\t\t\t$selected = $_SESSION[\"CASHDESK_ID_BANKACCOUNT_CASH\"];\n\t\t\t\tbreak;\n\t\t\tcase 'CB':\n\t\t\t\techo $langs->trans(\"CreditCard\");\n\t\t\t\t$filtre='courant=1';\n\t\t\t\tif (!empty($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CB\"]))\n\t\t\t\t\t$selected = $_SESSION[\"CASHDESK_ID_BANKACCOUNT_CB\"];\n\t\t\t\tbreak;\n\t\t\tcase 'CHQ':\n\t\t\t\techo $langs->trans(\"Cheque\");\n\t\t\t\t$filtre='courant=1';\n\t\t\t\tif (!empty($_SESSION[\"CASHDESK_ID_BANKACCOUNT_CHEQUE\"]))\n\t\t\t\t\t$selected = $_SESSION[\"CASHDESK_ID_BANKACCOUNT_CHEQUE\"];\n\t\t\t\tbreak;\n\t\t\tcase 'DIF':\n\t\t\t\techo $langs->trans(\"Reported\");\n\t\t\t\t$filtre='courant=1 OR courant=2';\n\t\t\t\t$selected='';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$filtre='courant=1 OR courant=2';\n\t\t\t\t$selected='';\n\t\t}\n\n\t\t?>\n\t\t</td></tr>\n\n\t\t<?php\n\t\t\t// Affichage des infos en fonction du mode de paiement\n\t\t\tif ( $obj_facturation->getsetPaymentMode() == 'DIF' ) {\n\n\t\t\t\techo ('<tr><td class=\"resume_label\">'.$langs->trans(\"DateDue\").'</td><td>'.$obj_facturation->paiementLe().'</td></tr>');\n\n\t\t\t} else {\n\n\t\t\t\techo ('<tr><td class=\"resume_label\">'.$langs->trans(\"Received\").'</td><td>'.price(price2num($obj_facturation->montantEncaisse(),'MT'),0,$langs,0,0,-1,$conf->currency).'</td></tr>');\n\n\t\t\t}\n\n\t\t\t// Affichage du montant rendu (reglement en especes)\n\t\t\tif ( $obj_facturation->montantRendu() ) {\n\n\t\t\t\techo ('<tr><td class=\"resume_label\">'.$langs->trans(\"Change\").'</td><td>'.price(price2num($obj_facturation->montantRendu(),'MT'),0,$langs,0,0,-1,$conf->currency).'</td></tr>');\n\n\t\t\t}\n\n\t\t?>\n\n\t</table>\n\n\t<form id=\"frmValidation\" class=\"formulaire2\" method=\"post\" action=\"validation_verif.php?action=valide_facture\">\n\t\t<input type=\"hidden\" name=\"token\" value=\"<?php echo $_SESSION['newtoken']; ?>\" />\n\t\t<p class=\"note_label\">\n\t\t\t<?php\n\t\t\t\techo $langs->trans(\"BankToPay\"). \"<br>\";\n\t\t\t\t$form->select_comptes($selected,'cashdeskbank',0,$filtre);\n\t\t\t?>\n\t\t</p>\n\t\t<p class=\"note_label\"><?php echo $langs->trans(\"Notes\"); ?><br><textarea class=\"textarea_note\" name=\"txtaNotes\"></textarea></p>\n\n\t\t<div class=\"center\"><input class=\"button\" type=\"submit\" name=\"btnValider\" value=\"<?php echo $langs->trans(\"ValidateInvoice\"); ?>\" /><br>\n\t\t<br><a class=\"lien1\" href=\"affIndex.php?menutpl=facturation\"><?php echo $langs->trans(\"RestartSelling\"); ?></a>\n\t\t</div>\n\t</form>\n\n\n\n</fieldset>\n", "<?php\n/* Copyright (C) 2007-2008\tJeremie Ollivier\t<jeremie.o@laposte.net>\n * Copyright (C) 2012       Marcos Garc\u00eda       <marcosgdf@gmail.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n// Protection to avoid direct call of template\nif (empty($langs) || ! is_object($langs))\n{\n\tprint \"Error, template page can't be called as URL\";\n\texit;\n}\n\n\n$langs->load(\"main\");\n$langs->load(\"bills\");\n\n?>\n\n<div class=\"blocksellfinished\">\n\n<div class=\"cadre_facturation\">\n<h3 class=\"titre1\"><?php echo $langs->trans(\"SellFinished\"); ?></h3><br>\n\n<script type=\"text/javascript\">\n\n\tfunction popupTicket(id,name)\n\t{\n\t\tlargeur = 600;\n\t\thauteur = 500;\n\t\topt = 'width='+largeur+', height='+hauteur+', left='+(screen.width - largeur)/2+', top='+(screen.height-hauteur)/2+'';\n\t\twindow.open('validation_ticket.php?facid='+id,name, opt);\n\t}\n\n\tpopupTicket(<?php echo GETPOST('facid','int'); ?>,'<?php echo $langs->trans('PrintTicket') ?>');\n\n</script>\n\n<p><a class=\"lien1\" href=\"<?php echo DOL_URL_ROOT ?>/compta/facture/card.php?action=builddoc&facid=<?php echo $_GET['facid']; ?>\" target=\"_blank\"><?php echo $langs->trans(\"ShowInvoice\"); ?></a></p>\n<br>\n<p><a class=\"lien1\" href=\"#\" onclick=\"Javascript: popupTicket(); return(false);\"><?php echo $langs->trans(\"PrintTicket\"); ?></a></p>\n\n</div>\n</div>\n<br>\n\n", "<?php\n/* Copyright (C) 2001-2004 Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2012 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2006      Andre Cianfarani  <acianfa@free.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/comm/multiprix.php\n *\t\\ingroup    societe\n *\t\\brief      Onglet choix du niveau de prix\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/contact/class/contact.class.php';\n\n$langs->load(\"orders\");\n$langs->load(\"companies\");\n\n$id = GETPOST('id','int');\n$_socid = GETPOST(\"id\",'int');\n// Security check\nif ($user->societe_id > 0)\n{\n\t$_socid = $user->societe_id;\n}\n\n\n/*\n * Actions\n */\n\nif ($_POST[\"action\"] == 'setpricelevel')\n{\n\t$soc = New Societe($db);\n\t$soc->fetch($id);\n\t$soc->set_price_level($_POST[\"price_level\"],$user);\n\n\theader(\"Location: multiprix.php?id=\".$id);\n\texit;\n}\n\n\n/*\n * View\n */\n\nllxHeader();\n\n$userstatic=new User($db);\n\nif ($_socid > 0)\n{\n\t// On recupere les donnees societes par l'objet\n\t$objsoc = new Societe($db);\n\t$objsoc->id=$_socid;\n\t$objsoc->fetch($_socid,$to);\n\n\tif ($errmesg)\n\t{\n\t\tprint '<div class=\"error\">'.$errmesg.'</div><br>';\n\t}\n\n\n\t/*\n\t * Affichage onglets\n\t */\n\n\t$head = societe_prepare_head($objsoc);\n\n\t$tabchoice='';\n\tif ($objsoc->client == 1) $tabchoice='customer';\n\tif ($objsoc->client == 2) $tabchoice='prospect';\n\n\tprint '<form method=\"POST\" action=\"multiprix.php?id='.$objsoc->id.'\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\tprint '<input type=\"hidden\" name=\"action\" value=\"setpricelevel\">';\n\n\tdol_fiche_head($head, $tabchoice, $langs->trans(\"ThirdParty\"), 0, 'company');\n\n\tprint '<table width=\"100%\" border=\"0\">';\n\tprint '<tr><td class=\"tdtop\">';\n\tprint '<table class=\"border\" width=\"100%\">';\n\n\tprint '<tr><td colspan=\"2\" width=\"25%\">';\n\tprint $langs->trans(\"PriceLevel\").'</td><td colspan=\"2\">'.$objsoc->price_level.\"</td></tr>\";\n\n\tprint '<tr><td colspan=\"2\">';\n\tprint $langs->trans(\"NewValue\").'</td><td colspan=\"2\">';\n\tprint '<select name=\"price_level\" class=\"flat\">';\n\tfor($i=1;$i<=$conf->global->PRODUIT_MULTIPRICES_LIMIT;$i++)\n\t{\n\t\tprint '<option value=\"'.$i.'\"' ;\n\t\tif($i == $objsoc->price_level)\n\t\tprint 'selected';\n\t\tprint '>'.$i;\n\t\t$keyforlabel='PRODUIT_MULTIPRICES_LABEL'.$i;\n\t\tif (! empty($conf->global->$keyforlabel)) print ' - '.$langs->trans($conf->global->$keyforlabel);\n\t\tprint '</option>';\n\t}\n\tprint '</select>';\n\tprint '</td></tr>';\n\n\tprint \"</table>\";\n\n\tprint \"</td>\\n\";\n\n\n\tprint \"</td></tr>\";\n\tprint \"</table>\";\n\n\tdol_fiche_end();\n\n\tprint '<div align=\"center\"><input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Save\").'\"></div>';\n\n\tprint \"</form>\";\n\n\n\tprint '<br><br>';\n\n\n\t/*\n\t * List historic of multiprices\n\t */\n\t$sql  = \"SELECT rc.rowid,rc.price_level, rc.datec as dc, u.rowid as uid, u.login\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"societe_prices as rc, \".MAIN_DB_PREFIX.\"user as u\";\n\t$sql .= \" WHERE rc.fk_soc =\". $objsoc->id;\n\t$sql .= \" AND u.rowid = rc.fk_user_author\";\n\t$sql .= \" ORDER BY rc.datec DESC\";\n\n\t$resql=$db->query($sql);\n\tif ($resql)\n\t{\n\t\tprint '<table class=\"noborder\" width=\"100%\">';\n\t\t$tag = !$tag;\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tprint '<td>'.$langs->trans(\"Date\").'</td>';\n\t\tprint '<td>'.$langs->trans(\"PriceLevel\").'</td>';\n\t\tprint '<td align=\"right\">'.$langs->trans(\"User\").'</td>';\n\t\tprint '</tr>';\n\t\t$i = 0 ;\n\t\t$num = $db->num_rows($resql);\n\n\t\twhile ($i < $num )\n\t\t{\n\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t$tag = !$tag;\n\t\t\tprint '<tr '.$bc[$tag].'>';\n\t\t\tprint '<td>'.dol_print_date($db->jdate($obj->dc),\"dayhour\").'</td>';\n\t\t\tprint '<td>'.$obj->price_level.' </td>';\n\t\t\t$userstatic->id=$obj->uid;\n\t\t\t$userstatic->lastname=$obj->login;\n\t\t\tprint '<td align=\"right\">'.$userstatic->getNomUrl(1).'</td>';\n\t\t\tprint '</tr>';\n\t\t\t$i++;\n\t\t}\n\t\t$db->free($resql);\n\t\tprint \"</table>\";\n\t}\n\telse\n\t{\n\t\tdol_print_error($db);\n\t}\n\n}\n\nllxFooter();\n$db->close();\n", "<?php\n/* Copyright (C) 2001-2006 Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2011 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2005-2011 Regis Houssin        <regis.houssin@capnetworks.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/fourn/index.php\n *\t\\ingroup    fournisseur\n *\t\\brief      Home page of suppliers area\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/fourn/class/fournisseur.commande.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/fourn/class/fournisseur.facture.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n\n$langs->load(\"suppliers\");\n$langs->load(\"orders\");\n$langs->load(\"companies\");\n\n// Security check\n$socid = GETPOST(\"socid\", 'int');\nif ($user->societe_id) $socid=$user->societe_id;\n$result = restrictedArea($user, 'societe',$socid,'');\n\n\n/*\n * View\n */\n\n$commandestatic=new CommandeFournisseur($db);\n$facturestatic=new FactureFournisseur($db);\n$companystatic=new Societe($db);\n\nllxHeader(\"\",$langs->trans(\"SuppliersArea\"));\n\nprint load_fiche_titre($langs->trans(\"SuppliersArea\"));\n\n\n//print '<table border=\"0\" width=\"100%\" class=\"notopnoleftnoright\">';\n//print '<tr><td valign=\"top\" width=\"30%\" class=\"notopnoleft\">';\nprint '<div class=\"fichecenter\"><div class=\"fichethirdleft\">';\n\n\n// Orders\n$commande = new CommandeFournisseur($db);\n$sql = \"SELECT count(cf.rowid), cf.fk_statut\";\n$sql.= \" FROM \".MAIN_DB_PREFIX.\"commande_fournisseur as cf,\";\n$sql.= \" \".MAIN_DB_PREFIX.\"societe as s\";\nif (!$user->rights->societe->client->voir && !$socid) $sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"societe_commerciaux as sc ON s.rowid = sc.fk_soc\";\n$sql.= \" WHERE cf.fk_soc = s.rowid \";\nif (!$user->rights->societe->client->voir && !$socid) $sql .= \" AND sc.fk_user = \" .$user->id;\n$sql.= \" AND cf.entity = \".$conf->entity;\n$sql.= \" GROUP BY cf.fk_statut\";\n\n$resql = $db->query($sql);\nif ($resql)\n{\n\t$num = $db->num_rows($resql);\n\t$i = 0;\n\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\"><td>'.$langs->trans(\"Orders\").'</td><td align=\"center\">'.$langs->trans(\"Nb\").'</td><td>&nbsp;</td>';\n\tprint \"</tr>\\n\";\n\t$var=True;\n\n\twhile ($i < $num)\n\t{\n\t\t$row = $db->fetch_row($resql);\n\n\n\t\tprint '<tr class=\"oddeven\">';\n\t\tprint '<td>'.$langs->trans($commande->statuts[$row[1]]).'</td>';\n\t\tprint '<td align=\"center\">'.$row[0].'</td>';\n\t\tprint '<td align=\"center\"><a href=\"'.DOL_URL_ROOT.'/fourn/commande/list.php?statut='.$row[1].'\">'.$commande->LibStatut($row[1],3).'</a></td>';\n\n\t\tprint \"</tr>\\n\";\n\t\t$i++;\n\t}\n\tprint \"</table>\";\n\tprint \"<br>\\n\";\n\t$db->free($resql);\n}\nelse\n{\n\tdol_print_error($db);\n}\n\n\n// Draft orders\nif (! empty($conf->fournisseur->enabled))\n{\n\t$langs->load(\"orders\");\n\n\t$sql = \"SELECT cf.rowid, cf.ref, cf.total_ttc,\";\n\t$sql.= \" s.nom as name, s.rowid as socid\";\n\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"commande_fournisseur as cf\";\n\t$sql.= \", \".MAIN_DB_PREFIX.\"societe as s\";\n\tif (!$user->rights->societe->client->voir && !$socid) $sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"societe_commerciaux as sc ON s.rowid = sc.fk_soc\";\n\t$sql.= \" WHERE cf.fk_soc = s.rowid\";\n\tif (!$user->rights->societe->client->voir && !$socid) $sql .= \" AND sc.fk_user = \" .$user->id;\n\t$sql.= \" AND cf.entity = \".$conf->entity;\n\t$sql.= \" AND cf.fk_statut = 0\";\n\tif ($socid) $sql .= \" AND cf.fk_soc = \".$socid;\n\n\t$resql = $db->query($sql);\n\tif ($resql)\n\t{\n\t\t$total = 0;\n\t\t$num = $db->num_rows($resql);\n\t\tif ($num)\n\t\t{\n\t\t\tprint '<table class=\"noborder\" width=\"100%\">';\n\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\tprint '<td colspan=\"3\">'.$langs->trans(\"DraftOrders\").' <span class=\"badge\">'.$num.'</span></td></tr>';\n\n\t\t\t$i = 0;\n\t\t\t$var = true;\n\t\t\twhile ($i < $num)\n\t\t\t{\n\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\tprint '<tr class=\"oddeven\"><td  class=\"nowrap\">';\n\t\t\t\t$commandestatic->id=$obj->rowid;\n\t\t\t\t$commandestatic->ref=$obj->ref;\n\t\t\t\tprint $commandestatic->getNomUrl(1,'',16);\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td  class=\"nowrap\">';\n\t\t\t\t$companystatic->id=$obj->socid;\n\t\t\t\t$companystatic->name=$obj->name;\n\t\t\t\t$companystatic->client=0;\n\t\t\t\tprint $companystatic->getNomUrl(1,'',16);\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td align=\"right\" class=\"nowrap\">'.price($obj->total_ttc).'</td></tr>';\n\t\t\t\t$i++;\n\t\t\t\t$total += $obj->total_ttc;\n\t\t\t}\n\t\t\tif ($total>0)\n\t\t\t{\n\n\t\t\t\tprint '<tr class=\"liste_total\"><td>'.$langs->trans(\"Total\").'</td><td colspan=\"2\" align=\"right\">'.price($total).\"</td></tr>\";\n\t\t\t}\n\t\t\tprint \"</table>\";\n\t\t\tprint \"<br>\\n\";\n\t\t}\n\t}\n}\n\n// Draft invoices\nif (! empty($conf->fournisseur->enabled) && $user->rights->fournisseur->facture->lire)\n{\n\t$sql = \"SELECT ff.ref_supplier, ff.rowid, ff.total_ttc, ff.type\";\n\t$sql.= \", s.nom as name, s.rowid as socid\";\n\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"facture_fourn as ff\";\n\t$sql.= \", \".MAIN_DB_PREFIX.\"societe as s\";\n\tif (!$user->rights->societe->client->voir && !$socid) $sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"societe_commerciaux as sc ON s.rowid = sc.fk_soc\";\n\t$sql.= \" WHERE s.rowid = ff.fk_soc\";\n\tif (!$user->rights->societe->client->voir && !$socid) $sql .= \" AND sc.fk_user = \" .$user->id;\n\t$sql.= \" AND ff.entity = \".$conf->entity;\n\t$sql.= \" AND ff.fk_statut = 0\";\n\tif ($socid)\t$sql .= \" AND f.fk_soc = \".$socid;\n\n\t$resql = $db->query($sql);\n\n\tif ( $resql )\n\t{\n\t\t$num = $db->num_rows($resql);\n\t\tif ($num)\n\t\t{\n\t\t\tprint '<table class=\"noborder\" width=\"100%\">';\n\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\tprint '<td colspan=\"3\">'.$langs->trans(\"DraftBills\").' <span class=\"badge\">'.$num.'</span></td></tr>';\n\t\t\t$i = 0;\n\t\t\t$tot_ttc = 0;\n\t\t\t$var = True;\n\t\t\twhile ($i < $num && $i < 20)\n\t\t\t{\n\t\t\t\t$obj = $db->fetch_object($resql);\n\n\t\t\t\tprint '<tr class=\"oddeven\"><td class=\"nowrap\">';\n\t\t\t\t$facturestatic->ref=$obj->ref;\n\t\t\t\t$facturestatic->id=$obj->rowid;\n\t\t\t\t$facturestatic->type=$obj->type;\n\t\t\t\tprint $facturestatic->getNomUrl(1,'');\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td class=\"nowrap\">';\n\t\t\t\t$companystatic->id=$obj->socid;\n\t\t\t\t$companystatic->name=$obj->name;\n\t\t\t\t$companystatic->client=0;\n\t\t\t\tprint $companystatic->getNomUrl(1,'',16);\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td align=\"right\">'.price($obj->total_ttc).'</td>';\n\t\t\t\tprint '</tr>';\n\t\t\t\t$tot_ttc+=$obj->total_ttc;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tprint '<tr class=\"liste_total\"><td align=\"left\">'.$langs->trans(\"Total\").'</td>';\n\t\t\tprint '<td colspan=\"2\" align=\"right\">'.price($tot_ttc).'</td>';\n\t\t\tprint '</tr>';\n\n\t\t\tprint \"</table>\";\n\t\t\tprint \"<br>\\n\";\n\t\t}\n\t\t$db->free($resql);\n\t}\n\telse\n\t{\n\t\tdol_print_error($db);\n\t}\n}\n\n\n//print '</td><td valign=\"top\" width=\"70%\" class=\"notopnoleftnoright\">';\nprint '</div><div class=\"fichetwothirdright\"><div class=\"ficheaddleft\">';\n\n\n/*\n * List last modified supliers\n */\n$max=10;\n$sql = \"SELECT s.rowid as socid, s.nom as name, s.town, s.datec, s.tms, s.prefix_comm, s.code_fournisseur, s.code_compta_fournisseur\";\n$sql.= \", st.libelle as stcomm\";\n$sql.= \" FROM \".MAIN_DB_PREFIX.\"societe as s\";\n$sql.= \", \".MAIN_DB_PREFIX.\"c_stcomm as st\";\nif (!$user->rights->societe->client->voir && !$socid) $sql .= \", \".MAIN_DB_PREFIX.\"societe_commerciaux as sc\";\n$sql.= \" WHERE s.fk_stcomm = st.id\";\n$sql.= \" AND s.fournisseur = 1\";\n$sql.= \" AND s.entity IN (\".getEntity('societe').\")\";\nif (!$user->rights->societe->client->voir && !$socid) $sql .= \" AND s.rowid = sc.fk_soc AND sc.fk_user = \" .$user->id;\nif ($socid) $sql .= \" AND s.rowid = \".$socid;\n$sql.= \" ORDER BY s.tms DESC\";\n$sql .= $db->plimit($max, 0);\n\n$resql = $db->query($sql);\nif ($resql)\n{\n\t$langs->load(\"boxes\");\n\t$num = $db->num_rows($resql);\n\t$i = 0;\n\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\">';\n\tprint '<td colspan=\"2\">'.$langs->trans(\"BoxTitleLastSuppliers\",min($max,$num)).\"</td>\\n\";\n\tprint '<td align=\"right\">'.$langs->trans(\"DateModification\").\"</td>\\n\";\n\tprint \"</tr>\\n\";\n\n\t$var=True;\n\n\twhile ($obj = $db->fetch_object($resql) )\n\t{\n\n\n\t\tprint '<tr class=\"oddeven\">';\n\t\tprint '<td><a href=\"card.php?socid='.$obj->socid.'\">'.img_object($langs->trans(\"ShowSupplier\"),\"company\").'</a>';\n\t\tprint \"&nbsp;<a href=\\\"card.php?socid=\".$obj->socid.\"\\\">\".$obj->name.\"</a></td>\\n\";\n\t\tprint '<td align=\"left\">'.$obj->code_fournisseur.'&nbsp;</td>';\n\t\tprint '<td align=\"right\">'.dol_print_date($db->jdate($obj->tms),'day').'</td>';\n\t\tprint \"</tr>\\n\";\n\t}\n\tprint \"</table>\\n\";\n\n\t$db->free($resql);\n}\nelse\n{\n\tdol_print_error($db);\n}\n\n\n/*\n * List of suppliers categories\n */\n$companystatic->LoadSupplierCateg();\n$categstatic=new Categorie($db);\n\nif (count($companystatic->SupplierCategories))\n{\n\tprint '<br>';\n\n\tprint '<table class=\"liste\" width=\"100%\">';\n\tprint '<tr class=\"liste_titre\"><td colspan=\"2\">';\n\tprint $langs->trans(\"Category\");\n\tprint \"</td></tr>\\n\";\n\t$var=True;\n\n\tforeach ($companystatic->SupplierCategories as $rowid => $label)\n\t{\n\n\t\tprint \"<tr \".$bc[$var].\">\\n\";\n\t\tprint '<td>';\n\t\t$categstatic->id=$rowid;\n\t\t$categstatic->ref=$label;\n\t\t$categstatic->label=$label;\n\t\tprint $categstatic->getNomUrl(1);\n\t\tprint '</td>'.\"\\n\";\n\t\t// TODO this page not exist\n\t\t/*\n\t\tprint '<td align=\"right\">';\n\t\tprint '<a href=\"stats.php?cat='.$rowid.'\">('.$langs->trans(\"Stats\").')</a>';\n\t\tprint \"</tr>\\n\";\n\t\t*/\n\t}\n\tprint \"</table>\\n\";\n\tprint \"<br>\\n\";\n}\n\n\n//print \"</td></tr></table>\\n\";\nprint '</div></div></div>';\n\nllxFooter();\n\n$db->close();\n", "<?php\n/* Copyright (C) 2002-2007  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2003       Xavier Dutoit           <doli@sydesy.com>\n * Copyright (C) 2004-2015  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Sebastien Di Cintio     <sdicintio@ressource-toi.org>\n * Copyright (C) 2004       Benoit Mortier          <benoit.mortier@opensides.be>\n * Copyright (C) 2005-2015  Regis Houssin           <regis.houssin@capnetworks.com>\n * Copyright (C) 2011-2014  Philippe Grand          <philippe.grand@atoo-net.com>\n * Copyright (C) 2008       Matteli\n * Copyright (C) 2011-2016  Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2012       Christophe Battarel     <christophe.battarel@altairis.fr>\n * Copyright (C) 2014-2015  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2015       Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/main.inc.php\n *\t\\ingroup\tcore\n *\t\\brief      File that defines environment for Dolibarr GUI pages only (file not required by scripts)\n */\n\n//@ini_set('memory_limit', '128M');\t// This may be useless if memory is hard limited by your PHP\n\n// For optional tuning. Enabled if environment variable MAIN_SHOW_TUNING_INFO is defined.\n$micro_start_time=0;\nif (! empty($_SERVER['MAIN_SHOW_TUNING_INFO']))\n{\n    list($usec, $sec) = explode(\" \", microtime());\n    $micro_start_time=((float) $usec + (float) $sec);\n    // Add Xdebug code coverage\n    //define('XDEBUGCOVERAGE',1);\n    if (defined('XDEBUGCOVERAGE')) {\n        xdebug_start_code_coverage();\n    }\n}\n\n// Removed magic_quotes\nif (function_exists('get_magic_quotes_gpc'))\t// magic_quotes_* deprecated in PHP 5.0 and removed in PHP 5.5\n{\n    if (get_magic_quotes_gpc())\n    {\n        // Forcing parameter setting magic_quotes_gpc and cleaning parameters\n        // (Otherwise he would have for each position, condition\n        // Reading stripslashes variable according to state get_magic_quotes_gpc).\n        // Off mode recommended (just do $db->escape for insert / update).\n        function stripslashes_deep($value)\n        {\n            return (is_array($value) ? array_map('stripslashes_deep', $value) : stripslashes($value));\n        }\n        $_GET     = array_map('stripslashes_deep', $_GET);\n        $_POST    = array_map('stripslashes_deep', $_POST);\n        $_FILES   = array_map('stripslashes_deep', $_FILES);\n        //$_COOKIE  = array_map('stripslashes_deep', $_COOKIE); // Useless because a cookie should never be outputed on screen nor used into sql\n        @set_magic_quotes_runtime(0);\n    }\n}\n\n/**\n * Security: SQL Injection and XSS Injection (scripts) protection (Filters on GET, POST, PHP_SELF).\n *\n * @param\t\tstring\t\t$val\t\tValue\n * @param\t\tstring\t\t$type\t\t1=GET, 0=POST, 2=PHP_SELF\n * @return\t\tint\t\t\t\t\t\t>0 if there is an injection\n */\nfunction test_sql_and_script_inject($val, $type)\n{\n    $inj = 0;\n    // For SQL Injection (only GET and POST are used to be included into bad escaped SQL requests)\n    if ($type != 2)\n    {\n    \t$inj += preg_match('/updatexml^(/i',\t $val);\n    \t$inj += preg_match('/delete\\s+from/i',\t $val);\n        $inj += preg_match('/create\\s+table/i',\t $val);\n        $inj += preg_match('/update.+set.+=/i',  $val);\n        $inj += preg_match('/insert\\s+into/i', \t $val);\n        $inj += preg_match('/select.+from/i', \t $val);\n        $inj += preg_match('/union.+select/i', \t $val);\n        $inj += preg_match('/into\\s+(outfile|dumpfile)/i',  $val);\n        $inj += preg_match('/(\\.\\.%2f)+/i',\t\t $val);\n    }\n    // For XSS Injection done by adding javascript with script\n    // This is all cases a browser consider text is javascript:\n    // When it found '<script', 'javascript:', '<style', 'onload\\s=' on body tag, '=\"&' on a tag size with old browsers\n    // All examples on page: http://ha.ckers.org/xss.html#XSScalc\n    $inj += preg_match('/<script/i', $val);\n    if (! defined('NOSTYLECHECK')) $inj += preg_match('/<style/i', $val);\n    $inj += preg_match('/base[\\s]+href/si', $val);\n    $inj += preg_match('/<.*onmouse/si', $val);       // onmousexxx can be set on img or any html tag like <img title='...' onmouseover=alert(1)>\n    $inj += preg_match('/onerror\\s*=/i', $val);       // onerror can be set on img or any html tag like <img title='...' onerror = alert(1)>\n    $inj += preg_match('/onfocus\\s*=/i', $val);       // onfocus can be set on input text html tag like <input type='text' value='...' onfocus = alert(1)>\n    $inj += preg_match('/onload\\s*=/i', $val);        // onload can be set on input text html tag like <input type='text' value='...' onfocus = alert(1)>\n    if ($type == 1)\n    {\n        $inj += preg_match('/javascript:/i', $val);\n        $inj += preg_match('/vbscript:/i', $val);\n    }\n    // For XSS Injection done by adding javascript closing html tags like with onmousemove, etc... (closing a src or href tag with not cleaned param)\n    if ($type == 1) $inj += preg_match('/\"/i', $val);\t\t// We refused \" in GET parameters value\n    if ($type == 2) $inj += preg_match('/[;\"]/', $val);\t\t// PHP_SELF is a file system path. It can contains spaces.\n    return $inj;\n}\n\n/**\n * Return true if security check on parameters are OK, false otherwise.\n *\n * @param\t\tstring\t\t\t$var\t\tVariable name\n * @param\t\tstring\t\t\t$type\t\t1=GET, 0=POST, 2=PHP_SELF\n * @return\t\tboolean||null\t\t\t\ttrue if there is an injection. Stop code if injection found.\n */\nfunction analyseVarsForSqlAndScriptsInjection(&$var, $type)\n{\n    if (is_array($var))\n    {\n        foreach ($var as $key => $value)\n        {\n            if (analyseVarsForSqlAndScriptsInjection($value,$type))\n            {\n                $var[$key] = $value;\n            }\n            else\n\t\t\t{\n                print 'Access refused by SQL/Script injection protection in main.inc.php (type='.htmlentities($type).' key='.htmlentities($key).' value='.htmlentities($value).' page='.htmlentities($_SERVER[\"REQUEST_URI\"]).')';\n                exit;\n            }\n        }\n        return true;\n    }\n    else\n    {\n        return (test_sql_and_script_inject($var,$type) <= 0);\n    }\n}\n\n\n// Check consistency of NOREQUIREXXX DEFINES\nif ((defined('NOREQUIREDB') || defined('NOREQUIRETRAN')) && ! defined('NOREQUIREMENU')) dol_print_error('','If define NOREQUIREDB or NOREQUIRETRAN are set, you must also set NOREQUIREMENU or not use them');\n\n// Sanity check on URL\nif (! empty($_SERVER[\"PHP_SELF\"]))\n{\n    $morevaltochecklikepost=array($_SERVER[\"PHP_SELF\"]);\n    analyseVarsForSqlAndScriptsInjection($morevaltochecklikepost,2);\n}\n// Sanity check on GET parameters\nif (! defined('NOSCANGETFORINJECTION') && ! empty($_SERVER[\"QUERY_STRING\"]))\n{\n    $morevaltochecklikeget=array($_SERVER[\"QUERY_STRING\"]);\n    analyseVarsForSqlAndScriptsInjection($morevaltochecklikeget,1);\n}\n// Sanity check on POST\nif (! defined('NOSCANPOSTFORINJECTION'))\n{\n\tanalyseVarsForSqlAndScriptsInjection($_POST,0);\n}\n\n// This is to make Dolibarr working with Plesk\nif (! empty($_SERVER['DOCUMENT_ROOT']) && substr($_SERVER['DOCUMENT_ROOT'], -6) !== 'htdocs')\n{\n\tset_include_path($_SERVER['DOCUMENT_ROOT'] . '/htdocs');\n}\n\n// Include the conf.php and functions.lib.php\nrequire_once 'filefunc.inc.php';\n\n// If there is a POST parameter to tell to save automatically some POST parameters into cookies, we do it\nif (! empty($_POST[\"DOL_AUTOSET_COOKIE\"]))\n{\n\t$tmpautoset=explode(':',$_POST[\"DOL_AUTOSET_COOKIE\"],2);\n\t$tmplist=explode(',',$tmpautoset[1]);\n\t$cookiearrayvalue='';\n\tforeach ($tmplist as $tmpkey)\n\t{\n\t\t$postkey=$tmpautoset[0].'_'.$tmpkey;\n\t\t//var_dump('tmpkey='.$tmpkey.' postkey='.$postkey.' value='.$_POST[$postkey]);\n\t\tif (! empty($_POST[$postkey])) $cookiearrayvalue[$tmpkey]=$_POST[$postkey];\n\t}\n\t$cookiename=$tmpautoset[0];\n\t$cookievalue=json_encode($cookiearrayvalue);\n\t//var_dump('setcookie cookiename='.$cookiename.' cookievalue='.$cookievalue);\n\tsetcookie($cookiename, empty($cookievalue)?'':$cookievalue, empty($cookievalue)?0:(time()+(86400*354)), '/');\t// keep cookie 1 year\n\tif (empty($cookievalue)) unset($_COOKIE[$cookiename]);\n}\n\n// Init session. Name of session is specific to Dolibarr instance.\n$prefix=dol_getprefix();\n$sessionname='DOLSESSID_'.$prefix;\n$sessiontimeout='DOLSESSTIMEOUT_'.$prefix;\nif (! empty($_COOKIE[$sessiontimeout])) ini_set('session.gc_maxlifetime',$_COOKIE[$sessiontimeout]);\nsession_name($sessionname);\nsession_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie\n// This create lock released until session_write_close() or end of page.\n// We need this lock as long as we read/write $_SESSION ['vars']. We can close released when finished.\nif (! defined('NOSESSION'))\n{\n    session_start();\n    if (ini_get('register_globals'))    // Deprecated in 5.3 and removed in 5.4. To solve bug in using $_SESSION\n    {\n        foreach ($_SESSION as $key=>$value)\n        {\n            if (isset($GLOBALS[$key])) unset($GLOBALS[$key]);\n        }\n    }\n}\n\n// Init the 5 global objects, this include will make the new and set properties for: $conf, $db, $langs, $user, $mysoc\nrequire_once 'master.inc.php';\n\n// Activate end of page function\nregister_shutdown_function('dol_shutdown');\n\n// Detection browser\nif (isset($_SERVER[\"HTTP_USER_AGENT\"]))\n{\n    $tmp=getBrowserInfo($_SERVER[\"HTTP_USER_AGENT\"]);\n    $conf->browser->name=$tmp['browsername'];\n    $conf->browser->os=$tmp['browseros'];\n    $conf->browser->version=$tmp['browserversion'];\n    $conf->browser->layout=$tmp['layout'];     // 'classic', 'phone', 'tablet'\n    $conf->browser->phone=$tmp['phone'];\t   // TODO deprecated, use ->layout\n    $conf->browser->tablet=$tmp['tablet'];\t   // TODO deprecated, use ->layout\n    //var_dump($conf->browser);\n\n    if ($conf->browser->layout == 'phone') $conf->dol_no_mouse_hover=1;\n    if ($conf->browser->layout == 'phone') $conf->global->MAIN_TESTMENUHIDER=1;\n}\n\n// Force HTTPS if required ($conf->file->main_force_https is 0/1 or https dolibarr root url)\n// $_SERVER[\"HTTPS\"] is 'on' when link is https, otherwise $_SERVER[\"HTTPS\"] is empty or 'off'\nif (! empty($conf->file->main_force_https) && (empty($_SERVER[\"HTTPS\"]) || $_SERVER[\"HTTPS\"] != 'on'))\n{\n    $newurl='';\n    if (is_numeric($conf->file->main_force_https))\n    {\n        if ($conf->file->main_force_https == '1' && ! empty($_SERVER[\"SCRIPT_URI\"]))\t// If SCRIPT_URI supported by server\n        {\n            if (preg_match('/^http:/i',$_SERVER[\"SCRIPT_URI\"]) && ! preg_match('/^https:/i',$_SERVER[\"SCRIPT_URI\"]))\t// If link is http\n            {\n                $newurl=preg_replace('/^http:/i','https:',$_SERVER[\"SCRIPT_URI\"]);\n            }\n        }\n        else\t// Check HTTPS environment variable (Apache/mod_ssl only)\n        {\n            $newurl=preg_replace('/^http:/i','https:',DOL_MAIN_URL_ROOT).$_SERVER[\"REQUEST_URI\"];\n        }\n    }\n    else\n    {\n        // Check HTTPS environment variable (Apache/mod_ssl only)\n        $newurl=$conf->file->main_force_https.$_SERVER[\"REQUEST_URI\"];\n    }\n    // Start redirect\n    if ($newurl)\n    {\n        dol_syslog(\"main.inc: dolibarr_main_force_https is on, we make a redirect to \".$newurl);\n        header(\"Location: \".$newurl);\n        exit;\n    }\n    else\n    {\n        dol_syslog(\"main.inc: dolibarr_main_force_https is on but we failed to forge new https url so no redirect is done\", LOG_WARNING);\n    }\n}\n\n\n// Loading of additional presentation includes\nif (! defined('NOREQUIREHTML')) require_once DOL_DOCUMENT_ROOT .'/core/class/html.form.class.php';\t    // Need 660ko memory (800ko in 2.2)\nif (! defined('NOREQUIREAJAX') && $conf->use_javascript_ajax) require_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\t// Need 22ko memory\n\n// If install or upgrade process not done or not completely finished, we call the install page.\nif (! empty($conf->global->MAIN_NOT_INSTALLED) || ! empty($conf->global->MAIN_NOT_UPGRADED))\n{\n    dol_syslog(\"main.inc: A previous install or upgrade was not complete. Redirect to install page.\", LOG_WARNING);\n    header(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n    exit;\n}\n// If an upgrade process is required, we call the install page.\nif ((! empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ($conf->global->MAIN_VERSION_LAST_UPGRADE != DOL_VERSION))\n|| (empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ! empty($conf->global->MAIN_VERSION_LAST_INSTALL) && ($conf->global->MAIN_VERSION_LAST_INSTALL != DOL_VERSION)))\n{\n    $versiontocompare=empty($conf->global->MAIN_VERSION_LAST_UPGRADE)?$conf->global->MAIN_VERSION_LAST_INSTALL:$conf->global->MAIN_VERSION_LAST_UPGRADE;\n    require_once DOL_DOCUMENT_ROOT .'/core/lib/admin.lib.php';\n    $dolibarrversionlastupgrade=preg_split('/[.-]/',$versiontocompare);\n    $dolibarrversionprogram=preg_split('/[.-]/',DOL_VERSION);\n    $rescomp=versioncompare($dolibarrversionprogram,$dolibarrversionlastupgrade);\n    if ($rescomp > 0)   // Programs have a version higher than database. We did not add \"&& $rescomp < 3\" because we want upgrade process for build upgrades\n    {\n        dol_syslog(\"main.inc: database version \".$versiontocompare.\" is lower than programs version \".DOL_VERSION.\". Redirect to install page.\", LOG_WARNING);\n        header(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n        exit;\n    }\n}\n\n// Creation of a token against CSRF vulnerabilities\nif (! defined('NOTOKENRENEWAL'))\n{\n    // roulement des jetons car cree a chaque appel\n    if (isset($_SESSION['newtoken'])) $_SESSION['token'] = $_SESSION['newtoken'];\n\n    // Save in $_SESSION['newtoken'] what will be next token. Into forms, we will add param token = $_SESSION['newtoken']\n    $token = dol_hash(uniqid(mt_rand(),TRUE)); // Generates a hash of a random number\n    $_SESSION['newtoken'] = $token;\n}\nif (! defined('NOCSRFCHECK') && empty($dolibarr_nocsrfcheck) && ! empty($conf->global->MAIN_SECURITY_CSRF_WITH_TOKEN))\t// Check validity of token, only if option enabled (this option breaks some features sometimes)\n{\n    if ($_SERVER['REQUEST_METHOD'] == 'POST' && ! GETPOST('token','alpha')) // Note, offender can still send request by GET\n    {\n        print \"Access refused by CSRF protection in main.inc.php. Token not provided.\\n\";\n        print \"If you access your server behind a proxy using url rewriting, you might check that all HTTP header is propagated (or add the line \\$dolibarr_nocsrfcheck=1 into your conf.php file).\\n\";\n        die;\n    }\n    if ($_SERVER['REQUEST_METHOD'] === 'POST')  // This test must be after loading $_SESSION['token'].\n    {\n        if (GETPOST('token', 'alpha') != $_SESSION['token'])\n        {\n            dol_syslog(\"Invalid token in \".$_SERVER['HTTP_REFERER'].\", action=\".GETPOST('action','aZ09').\", _POST['token']=\".GETPOST('token','alpha').\", _SESSION['token']=\".$_SESSION['token'], LOG_WARNING);\n            //print 'Unset POST by CSRF protection in main.inc.php.';\t// Do not output anything because this create problems when using the BACK button on browsers.\n            unset($_POST);\n        }\n    }\n}\n\n// Disable modules (this must be after session_start and after conf has been loaded)\nif (GETPOST('disablemodules','alpha'))  $_SESSION[\"disablemodules\"]=GETPOST('disablemodules','alpha');\nif (! empty($_SESSION[\"disablemodules\"]))\n{\n    $disabled_modules=explode(',',$_SESSION[\"disablemodules\"]);\n    foreach($disabled_modules as $module)\n    {\n        if ($module)\n        {\n        \tif (empty($conf->$module)) $conf->$module=new stdClass();\n        \t$conf->$module->enabled=false;\n        \tif ($module == 'fournisseur')\t\t// Special case\n        \t{\n        \t\t$conf->supplier_order->enabled=0;\n        \t\t$conf->supplier_invoice->enabled=0;\n        \t}\n        }\n    }\n}\n\n\n/*\n * Phase authentication / login\n */\n$login='';\nif (! defined('NOLOGIN'))\n{\n    // $authmode lists the different means of identification to be tested in order of preference.\n    // Example: 'http', 'dolibarr', 'ldap', 'http,forceuser'\n\n    // Authentication mode\n    if (empty($dolibarr_main_authentication)) $dolibarr_main_authentication='http,dolibarr';\n    // Authentication mode: forceuser\n    if ($dolibarr_main_authentication == 'forceuser' && empty($dolibarr_auto_user)) $dolibarr_auto_user='auto';\n    // Set authmode\n    $authmode=explode(',',$dolibarr_main_authentication);\n\n    // No authentication mode\n    if (! count($authmode))\n    {\n        $langs->load('main');\n        dol_print_error('',$langs->trans(\"ErrorConfigParameterNotDefined\",'dolibarr_main_authentication'));\n        exit;\n    }\n\n    // If login request was already post, we retrieve login from the session\n    // Call module if not realized that his request.\n    // At the end of this phase, the variable $login is defined.\n    $resultFetchUser='';\n    $test=true;\n    if (! isset($_SESSION[\"dol_login\"]))\n    {\n        // It is not already authenticated and it requests the login / password\n        include_once DOL_DOCUMENT_ROOT.'/core/lib/security2.lib.php';\n\n        $dol_dst_observed=GETPOST(\"dst_observed\",'int',3);\n        $dol_dst_first=GETPOST(\"dst_first\",'int',3);\n        $dol_dst_second=GETPOST(\"dst_second\",'int',3);\n        $dol_screenwidth=GETPOST(\"screenwidth\",'int',3);\n        $dol_screenheight=GETPOST(\"screenheight\",'int',3);\n        $dol_hide_topmenu=GETPOST('dol_hide_topmenu','int',3);\n        $dol_hide_leftmenu=GETPOST('dol_hide_leftmenu','int',3);\n        $dol_optimize_smallscreen=GETPOST('dol_optimize_smallscreen','int',3);\n        $dol_no_mouse_hover=GETPOST('dol_no_mouse_hover','int',3);\n        $dol_use_jmobile=GETPOST('dol_use_jmobile','int',3);\n        //dol_syslog(\"POST key=\".join(array_keys($_POST),',').' value='.join($_POST,','));\n\n        // If in demo mode, we check we go to home page through the public/demo/index.php page\n        if (! empty($dolibarr_main_demo) && $_SERVER['PHP_SELF'] == DOL_URL_ROOT.'/index.php')  // We ask index page\n        {\n            if (empty($_SERVER['HTTP_REFERER']) || ! preg_match('/public/',$_SERVER['HTTP_REFERER']))\n            {\n                dol_syslog(\"Call index page from another url than demo page (call is done from page \".$_SERVER['HTTP_REFERER'].\")\");\n                $url='';\n                $url.=($url?'&':'').($dol_hide_topmenu?'dol_hide_topmenu='.$dol_hide_topmenu:'');\n                $url.=($url?'&':'').($dol_hide_leftmenu?'dol_hide_leftmenu='.$dol_hide_leftmenu:'');\n                $url.=($url?'&':'').($dol_optimize_smallscreen?'dol_optimize_smallscreen='.$dol_optimize_smallscreen:'');\n                $url.=($url?'&':'').($dol_no_mouse_hover?'dol_no_mouse_hover='.$dol_no_mouse_hover:'');\n                $url.=($url?'&':'').($dol_use_jmobile?'dol_use_jmobile='.$dol_use_jmobile:'');\n                $url=DOL_URL_ROOT.'/public/demo/index.php'.($url?'?'.$url:'');\n                header(\"Location: \".$url);\n                exit;\n            }\n        }\n\n        // Verification security graphic code\n        if (GETPOST(\"username\",\"alpha\",2) && ! empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA))\n        {\n            $sessionkey = 'dol_antispam_value';\n            $ok=(array_key_exists($sessionkey, $_SESSION) === TRUE && (strtolower($_SESSION[$sessionkey]) == strtolower($_POST['code'])));\n\n            // Check code\n            if (! $ok)\n            {\n                dol_syslog('Bad value for code, connexion refused');\n                $langs->load('main');\n                $langs->load('errors');\n\n                $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadValueForCode\");\n                $test=false;\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg='ErrorBadValueForCode - login='.GETPOST(\"username\",\"alpha\",2);\n                // Call of triggers\n                include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n                $interface=new Interfaces($db);\n                $result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n                if ($result < 0) {\n                    $error++;\n                }\n                // End Call of triggers\n\n                // Hooks on failed login\n\t\t        $action='';\n\t\t        $hookmanager->initHooks(array('login'));\n\t\t        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t        $reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t        if ($reshook < 0) $error++;\n\n\t\t        // Note: exit is done later\n            }\n        }\n\n        $usertotest\t\t= (! empty($_COOKIE['login_dolibarr']) ? $_COOKIE['login_dolibarr'] : GETPOST(\"username\",\"alpha\",2));\n        $passwordtotest\t= GETPOST('password','none',2);\n        $entitytotest\t= (GETPOST('entity','int') ? GETPOST('entity','int') : (!empty($conf->entity) ? $conf->entity : 1));\n\n        // Define if we received data to test the login.\n        $goontestloop=false;\n        if (isset($_SERVER[\"REMOTE_USER\"]) && in_array('http',$authmode)) $goontestloop=true;\n        if ($dolibarr_main_authentication == 'forceuser' && ! empty($dolibarr_auto_user)) $goontestloop=true;\n        if (GETPOST(\"username\",\"alpha\",2) || ! empty($_COOKIE['login_dolibarr']) || GETPOST('openid_mode','alpha',1)) $goontestloop=true;\n\n        if (! is_object($langs)) // This can occurs when calling page with NOREQUIRETRAN defined, however we need langs for error messages.\n        {\n            include_once DOL_DOCUMENT_ROOT.'/core/class/translate.class.php';\n            $langs=new Translate(\"\",$conf);\n    \t\t$langcode=(GETPOST('lang','aZ09',1)?GETPOST('lang','aZ09',1):(empty($conf->global->MAIN_LANG_DEFAULT)?'auto':$conf->global->MAIN_LANG_DEFAULT));\n        \t$langs->setDefaultLang($langcode);\n        }\n\n        // Validation of login/pass/entity\n        // If ok, the variable login will be returned\n        // If error, we will put error message in session under the name dol_loginmesg\n        if ($test && $goontestloop)\n        {\n        \t$login = checkLoginPassEntity($usertotest,$passwordtotest,$entitytotest,$authmode);\n        \tif ($login)\n            {\n                $dol_authmode=$conf->authmode;\t// This properties is defined only when logged, to say what mode was successfully used\n                $dol_tz=$_POST[\"tz\"];\n                $dol_tz_string=$_POST[\"tz_string\"];\n                $dol_tz_string=preg_replace('/\\s*\\(.+\\)$/','',$dol_tz_string);\n                $dol_tz_string=preg_replace('/,/','/',$dol_tz_string);\n                $dol_tz_string=preg_replace('/\\s/','_',$dol_tz_string);\n                $dol_dst=0;\n                if (isset($_POST[\"dst_first\"]) && isset($_POST[\"dst_second\"]))\n                {\n                    include_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n                    $datenow=dol_now();\n                    $datefirst=dol_stringtotime($_POST[\"dst_first\"]);\n                    $datesecond=dol_stringtotime($_POST[\"dst_second\"]);\n                    if ($datenow >= $datefirst && $datenow < $datesecond) $dol_dst=1;\n                }\n                //print $datefirst.'-'.$datesecond.'-'.$datenow.'-'.$dol_tz.'-'.$dol_tzstring.'-'.$dol_dst; exit;\n            }\n\n            if (! $login)\n            {\n                dol_syslog('Bad password, connexion refused',LOG_DEBUG);\n                $langs->load('main');\n                $langs->load('errors');\n\n                // Bad password. No authmode has found a good password.\n                // We set a generic message if not defined inside function checkLoginPassEntity or subfunctions\n                if (empty($_SESSION[\"dol_loginmesg\"])) $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadLoginPassword\");\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg=$langs->trans(\"ErrorBadLoginPassword\").' - login='.GETPOST(\"username\",\"alpha\",2);\n                // Call of triggers\n                include_once DOL_DOCUMENT_ROOT.'/core/class/interfaces.class.php';\n                $interface=new Interfaces($db);\n                $result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,GETPOST(\"username\",\"alpha\",2));\n                if ($result < 0) {\n                    $error++;\n                }\n                // End Call of triggers\n\n                // Hooks on failed login\n\t\t        $action='';\n\t\t        $hookmanager->initHooks(array('login'));\n\t\t        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t        $reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t        if ($reshook < 0) $error++;\n\n\t\t        // Note: exit is done in next chapter\n            }\n        }\n\n        // End test login / passwords\n        if (! $login || (in_array('ldap',$authmode) && empty($passwordtotest)))\t// With LDAP we refused empty password because some LDAP are \"opened\" for anonymous access so connexion is a success.\n        {\n            // No data to test login, so we show the login page\n\t\t\tdol_syslog(\"--- Access to \".$_SERVER[\"PHP_SELF\"].\" showing the login form and exit\");\n\t\t\tif (defined('NOREDIRECTBYMAINTOLOGIN')) return 'ERROR_NOT_LOGGED';\n        \telse dol_loginfunction($langs,$conf,(! empty($mysoc)?$mysoc:''));\n            exit;\n        }\n\n        $resultFetchUser=$user->fetch('', $login, '', 1, ($entitytotest > 0 ? $entitytotest : -1));\n        if ($resultFetchUser <= 0)\n        {\n            dol_syslog('User not found, connexion refused');\n            session_destroy();\n            session_name($sessionname);\n            session_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie\n            session_start();    // Fixing the bug of register_globals here is useless since session is empty\n\n            if ($resultFetchUser == 0)\n            {\n                $langs->load('main');\n                $langs->load('errors');\n\n                $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\",$login);\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n            }\n            if ($resultFetchUser < 0)\n            {\n                $_SESSION[\"dol_loginmesg\"]=$user->error;\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg=$user->error;\n            }\n\n            // Call triggers\n            include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n            $interface=new Interfaces($db);\n            $result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n            if ($result < 0) {\n                $error++;\n            }\n            // End call triggers\n\n\t        // Hooks on failed login\n\t        $action='';\n\t        $hookmanager->initHooks(array('login'));\n\t        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t        $reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t        if ($reshook < 0) $error++;\n\n\t        $paramsurl=array();\n\t        if (GETPOST('textbrowser','int')) $paramsurl[]='textbrowser='.GETPOST('textbrowser','int');\n\t        if (GETPOST('nojs','int'))        $paramsurl[]='nojs='.GETPOST('nojs','int');\n\t        if (GETPOST('lang','aZ09'))       $paramsurl[]='lang='.GETPOST('lang','aZ09');\n            header('Location: '.DOL_URL_ROOT.'/index.php'.(count($paramsurl)?'?'.implode('&',$paramsurl):''));\n            exit;\n        }\n    }\n    else\n    {\n        // We are already into an authenticated session\n        $login=$_SESSION[\"dol_login\"];\n        $entity=$_SESSION[\"dol_entity\"];\n        dol_syslog(\"- This is an already logged session. _SESSION['dol_login']=\".$login.\" _SESSION['dol_entity']=\".$entity, LOG_DEBUG);\n\n        $resultFetchUser=$user->fetch('', $login, '', 1, ($entity > 0 ? $entity : -1));\n        if ($resultFetchUser <= 0)\n        {\n            // Account has been removed after login\n            dol_syslog(\"Can't load user even if session logged. _SESSION['dol_login']=\".$login, LOG_WARNING);\n            session_destroy();\n            session_name($sessionname);\n            session_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie\n            session_start();    // Fixing the bug of register_globals here is useless since session is empty\n\n            if ($resultFetchUser == 0)\n            {\n                $langs->load('main');\n                $langs->load('errors');\n\n                $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\",$login);\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n            }\n            if ($resultFetchUser < 0)\n            {\n                $_SESSION[\"dol_loginmesg\"]=$user->error;\n\n                // TODO @deprecated Remove this. Hook must be used, not this trigger.\n                $user->trigger_mesg=$user->error;\n            }\n\n            // TODO @deprecated Remove this. Hook must be used, not this trigger.\n            // Call triggers\n            include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n            $interface=new Interfaces($db);\n            $result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n            if ($result < 0) {\n                $error++;\n            }\n            // End call triggers\n\n\t        // Hooks on failed login\n\t        $action='';\n\t        $hookmanager->initHooks(array('login'));\n\t        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t        $reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t        if ($reshook < 0) $error++;\n\n\t        $paramsurl=array();\n\t        if (GETPOST('textbrowser','int')) $paramsurl[]='textbrowser='.GETPOST('textbrowser','int');\n\t        if (GETPOST('nojs','int'))        $paramsurl[]='nojs='.GETPOST('nojs','int');\n\t        if (GETPOST('lang','aZ09'))       $paramsurl[]='lang='.GETPOST('lang','aZ09');\n            header('Location: '.DOL_URL_ROOT.'/index.php'.(count($paramsurl)?'?'.implode('&',$paramsurl):''));\n            exit;\n        }\n        else\n\t\t{\n\t       // Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n\t       $hookmanager->initHooks(array('main'));\n\n\t       // Code for search criteria persistence.\n\t       if (! empty($_GET['save_lastsearch_values']))    // Keep $_GET here\n\t       {\n               $relativepathstring = preg_replace('/\\?.*$/','',$_SERVER[\"HTTP_REFERER\"]);\n               $relativepathstring = preg_replace('/^https?:\\/\\/[^\\/]*/','',$relativepathstring);     // Get full path except host server\n               // Clean $relativepathstring\n   \t           if (constant('DOL_URL_ROOT')) $relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'),'/').'/', '', $relativepathstring);\n               $relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n               $relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n               //var_dump($relativepathstring);\n\n               if (! empty($_SESSION['lastsearch_values_tmp_'.$relativepathstring]))\n               {\n                   $_SESSION['lastsearch_values_'.$relativepathstring]=$_SESSION['lastsearch_values_tmp_'.$relativepathstring];\n                   unset($_SESSION['lastsearch_values_tmp_'.$relativepathstring]);\n               }\n\t       }\n\n\t       $action = '';\n\t       $reshook = $hookmanager->executeHooks('updateSession', array(), $user, $action);\n\t       if ($reshook < 0) {\n\t\t       setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\t       }\n        }\n    }\n\n    // Is it a new session that has started ?\n    // If we are here, this means authentication was successfull.\n    if (! isset($_SESSION[\"dol_login\"]))\n    {\n        // New session for this login has started.\n    \t$error=0;\n\n    \t// Store value into session (values always stored)\n        $_SESSION[\"dol_login\"]=$user->login;\n        $_SESSION[\"dol_authmode\"]=isset($dol_authmode)?$dol_authmode:'';\n        $_SESSION[\"dol_tz\"]=isset($dol_tz)?$dol_tz:'';\n        $_SESSION[\"dol_tz_string\"]=isset($dol_tz_string)?$dol_tz_string:'';\n        $_SESSION[\"dol_dst\"]=isset($dol_dst)?$dol_dst:'';\n        $_SESSION[\"dol_dst_observed\"]=isset($dol_dst_observed)?$dol_dst_observed:'';\n        $_SESSION[\"dol_dst_first\"]=isset($dol_dst_first)?$dol_dst_first:'';\n        $_SESSION[\"dol_dst_second\"]=isset($dol_dst_second)?$dol_dst_second:'';\n        $_SESSION[\"dol_screenwidth\"]=isset($dol_screenwidth)?$dol_screenwidth:'';\n        $_SESSION[\"dol_screenheight\"]=isset($dol_screenheight)?$dol_screenheight:'';\n        $_SESSION[\"dol_company\"]=$conf->global->MAIN_INFO_SOCIETE_NOM;\n        $_SESSION[\"dol_entity\"]=$conf->entity;\n    \t// Store value into session (values stored only if defined)\n        if (! empty($dol_hide_topmenu))         $_SESSION['dol_hide_topmenu']=$dol_hide_topmenu;\n        if (! empty($dol_hide_leftmenu))        $_SESSION['dol_hide_leftmenu']=$dol_hide_leftmenu;\n        if (! empty($dol_optimize_smallscreen)) $_SESSION['dol_optimize_smallscreen']=$dol_optimize_smallscreen;\n        if (! empty($dol_no_mouse_hover))       $_SESSION['dol_no_mouse_hover']=$dol_no_mouse_hover;\n        if (! empty($dol_use_jmobile))          $_SESSION['dol_use_jmobile']=$dol_use_jmobile;\n\n        dol_syslog(\"This is a new started user session. _SESSION['dol_login']=\".$_SESSION[\"dol_login\"].\" Session id=\".session_id());\n\n        $db->begin();\n\n        $user->update_last_login_date();\n\n        $loginfo = 'TZ='.$_SESSION[\"dol_tz\"].';TZString='.$_SESSION[\"dol_tz_string\"].';Screen='.$_SESSION[\"dol_screenwidth\"].'x'.$_SESSION[\"dol_screenheight\"];\n\n        // TODO @deprecated Remove this. Hook must be used, not this trigger.\n        $user->trigger_mesg = $loginfo;\n        // Call triggers\n        include_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n        $interface=new Interfaces($db);\n        $result=$interface->run_triggers('USER_LOGIN',$user,$user,$langs,$conf);\n        if ($result < 0) {\n            $error++;\n        }\n        // End call triggers\n\n        // Hooks on successfull login\n        $action='';\n        $hookmanager->initHooks(array('login'));\n        $parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginfo'=>$loginfo);\n        $reshook=$hookmanager->executeHooks('afterLogin',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n        if ($reshook < 0) $error++;\n\n        if ($error)\n        {\n            $db->rollback();\n            session_destroy();\n            dol_print_error($db,'Error in some hooks afterLogin (or old trigger USER_LOGIN)');\n            exit;\n        }\n        else\n\t\t{\n            $db->commit();\n        }\n\n        // Change landing page if defined.\n        $landingpage=(empty($user->conf->MAIN_LANDING_PAGE)?(empty($conf->global->MAIN_LANDING_PAGE)?'':$conf->global->MAIN_LANDING_PAGE):$user->conf->MAIN_LANDING_PAGE);\n        if (! empty($landingpage))    // Example: /index.php\n        {\n            $newpath=dol_buildpath($landingpage, 1);\n            if ($_SERVER[\"PHP_SELF\"] != $newpath)   // not already on landing page (avoid infinite loop)\n            {\n                header('Location: '.$newpath);\n                exit;\n            }\n        }\n    }\n\n\n    // If user admin, we force the rights-based modules\n    if ($user->admin)\n    {\n        $user->rights->user->user->lire=1;\n        $user->rights->user->user->creer=1;\n        $user->rights->user->user->password=1;\n        $user->rights->user->user->supprimer=1;\n        $user->rights->user->self->creer=1;\n        $user->rights->user->self->password=1;\n    }\n\n    /*\n     * Overwrite some configs globals (try to avoid this and have code to use instead $user->conf->xxx)\n     */\n\n    // Set liste_limit\n    if (isset($user->conf->MAIN_SIZE_LISTE_LIMIT))\t$conf->liste_limit = $user->conf->MAIN_SIZE_LISTE_LIMIT;\t// Can be 0\n    if (isset($user->conf->PRODUIT_LIMIT_SIZE))\t$conf->product->limit_size = $user->conf->PRODUIT_LIMIT_SIZE;\t// Can be 0\n\n    // Replace conf->css by personalized value if theme not forced\n    if (empty($conf->global->MAIN_FORCETHEME) && ! empty($user->conf->MAIN_THEME))\n    {\n        $conf->theme=$user->conf->MAIN_THEME;\n        $conf->css  = \"/theme/\".$conf->theme.\"/style.css.php\";\n    }\n}\n\n// Case forcing style from url\nif (GETPOST('theme','alpha'))\n{\n\t$conf->theme=GETPOST('theme','alpha',1);\n\t$conf->css  = \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n\n\n// Set javascript option\nif (! GETPOST('nojs','int'))   // If javascript was not disabled on URL\n{\n\tif (! empty($user->conf->MAIN_DISABLE_JAVASCRIPT))\n\t{\n\t\t$conf->use_javascript_ajax=! $user->conf->MAIN_DISABLE_JAVASCRIPT;\n\t}\n}\nelse $conf->use_javascript_ajax=0;\n// Set MAIN_OPTIMIZEFORTEXTBROWSER\nif (GETPOST('textbrowser','int') || (! empty($conf->browser->name) && $conf->browser->name == 'lynxlinks') || ! empty($user->conf->MAIN_OPTIMIZEFORTEXTBROWSER))   // If we must enable text browser\n{\n    $conf->global->MAIN_OPTIMIZEFORTEXTBROWSER=1;\n}\n\n// Set terminal output option according to conf->browser.\nif (GETPOST('dol_hide_leftmenu','int') || ! empty($_SESSION['dol_hide_leftmenu']))               $conf->dol_hide_leftmenu=1;\nif (GETPOST('dol_hide_topmenu','int') || ! empty($_SESSION['dol_hide_topmenu']))                 $conf->dol_hide_topmenu=1;\nif (GETPOST('dol_optimize_smallscreen','int') || ! empty($_SESSION['dol_optimize_smallscreen'])) $conf->dol_optimize_smallscreen=1;\nif (GETPOST('dol_no_mouse_hover','int') || ! empty($_SESSION['dol_no_mouse_hover']))             $conf->dol_no_mouse_hover=1;\nif (GETPOST('dol_use_jmobile','int') || ! empty($_SESSION['dol_use_jmobile']))                   $conf->dol_use_jmobile=1;\nif (! empty($conf->browser->layout) && $conf->browser->layout != 'classic') $conf->dol_no_mouse_hover=1;\nif ((! empty($conf->browser->layout) && $conf->browser->layout == 'phone')\n\t|| (! empty($_SESSION['dol_screenwidth']) && $_SESSION['dol_screenwidth'] < 400)\n\t|| (! empty($_SESSION['dol_screenheight']) && $_SESSION['dol_screenheight'] < 400)\n)\n{\n\t$conf->dol_optimize_smallscreen=1;\n}\n// If we force to use jmobile, then we reenable javascript\nif (! empty($conf->dol_use_jmobile)) $conf->use_javascript_ajax=1;\n// Replace themes bugged with jmobile with eldy\nif (! empty($conf->dol_use_jmobile) && in_array($conf->theme,array('bureau2crea','cameleo','amarok')))\n{\n\t$conf->theme='eldy';\n\t$conf->css  =  \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n//var_dump($conf->browser->phone);\n\nif (! defined('NOREQUIRETRAN'))\n{\n    if (! GETPOST('lang','aZ09'))\t// If language was not forced on URL\n    {\n        // If user has chosen its own language\n        if (! empty($user->conf->MAIN_LANG_DEFAULT))\n        {\n            // If different than current language\n            //print \">>>\".$langs->getDefaultLang().\"-\".$user->conf->MAIN_LANG_DEFAULT;\n            if ($langs->getDefaultLang() != $user->conf->MAIN_LANG_DEFAULT)\n            {\n                $langs->setDefaultLang($user->conf->MAIN_LANG_DEFAULT);\n            }\n        }\n    }\n}\n\nif (! defined('NOLOGIN'))\n{\n    // If the login is not recovered, it is identified with an account that does not exist.\n    // Hacking attempt?\n    if (! $user->login) accessforbidden();\n\n    // Check if user is active\n    if ($user->statut < 1)\n    {\n        // If not active, we refuse the user\n        $langs->load(\"other\");\n        dol_syslog(\"Authentification ko as login is disabled\");\n        accessforbidden($langs->trans(\"ErrorLoginDisabled\"));\n        exit;\n    }\n\n    // Load permissions\n    $user->getrights();\n}\n\n\ndol_syslog(\"--- Access to \".$_SERVER[\"PHP_SELF\"].' - action='.GETPOST('action','az09').', massaction='.GETPOST('massaction','az09'));\n//Another call for easy debugg\n//dol_syslog(\"Access to \".$_SERVER[\"PHP_SELF\"].' GET='.join(',',array_keys($_GET)).'->'.join(',',$_GET).' POST:'.join(',',array_keys($_POST)).'->'.join(',',$_POST));\n\n// Load main languages files\nif (! defined('NOREQUIRETRAN'))\n{\n    $langs->load(\"main\");\n    $langs->load(\"dict\");\n}\n\n// Define some constants used for style of arrays\n$bc=array(0=>'class=\"impair\"',1=>'class=\"pair\"');\n$bcdd=array(0=>'class=\"drag drop oddeven\"',1=>'class=\"drag drop oddeven\"');\n$bcnd=array(0=>'class=\"nodrag nodrop nohover\"',1=>'class=\"nodrag nodrop nohoverpair\"');\t\t// Used for tr to add new lines\n$bctag=array(0=>'class=\"impair tagtr\"',1=>'class=\"pair tagtr\"');\n\n// Define messages variables\n$mesg=''; $warning=''; $error=0;\n// deprecated, see setEventMessages() and dol_htmloutput_events()\n$mesgs=array(); $warnings=array(); $errors=array();\n\n// Constants used to defined number of lines in textarea\nif (empty($conf->browser->firefox))\n{\n    define('ROWS_1',1);\n    define('ROWS_2',2);\n    define('ROWS_3',3);\n    define('ROWS_4',4);\n    define('ROWS_5',5);\n    define('ROWS_6',6);\n    define('ROWS_7',7);\n    define('ROWS_8',8);\n    define('ROWS_9',9);\n}\nelse\n{\n    define('ROWS_1',0);\n    define('ROWS_2',1);\n    define('ROWS_3',2);\n    define('ROWS_4',3);\n    define('ROWS_5',4);\n    define('ROWS_6',5);\n    define('ROWS_7',6);\n    define('ROWS_8',7);\n    define('ROWS_9',8);\n}\n\n$heightforframes=48;\n\n// Init menu manager\nif (! defined('NOREQUIREMENU'))\n{\n\tif (empty($user->societe_id))    // If internal user or not defined\n\t{\n\t\t$conf->standard_menu=(empty($conf->global->MAIN_MENU_STANDARD_FORCED)?(empty($conf->global->MAIN_MENU_STANDARD)?'eldy_menu.php':$conf->global->MAIN_MENU_STANDARD):$conf->global->MAIN_MENU_STANDARD_FORCED);\n\t}\n\telse                        // If external user\n\t{\n\t\t$conf->standard_menu=(empty($conf->global->MAIN_MENUFRONT_STANDARD_FORCED)?(empty($conf->global->MAIN_MENUFRONT_STANDARD)?'eldy_menu.php':$conf->global->MAIN_MENUFRONT_STANDARD):$conf->global->MAIN_MENUFRONT_STANDARD_FORCED);\n\t}\n\n\t// Load the menu manager (only if not already done)\n\t$file_menu=$conf->standard_menu;\n\tif (GETPOST('menu','alpha')) $file_menu=GETPOST('menu','alpha');     // example: menu=eldy_menu.php\n\tif (! class_exists('MenuManager'))\n\t{\n\t\t$menufound=0;\n\t\t$dirmenus=array_merge(array(\"/core/menus/\"),(array) $conf->modules_parts['menus']);\n\t\tforeach($dirmenus as $dirmenu)\n\t\t{\n\t\t\t$menufound=dol_include_once($dirmenu.\"standard/\".$file_menu);\n\t\t\tif (class_exists('MenuManager')) break;\n\t\t}\n\t\tif (! class_exists('MenuManager'))\t// If failed to include, we try with standard eldy_menu.php\n\t\t{\n\t\t\tdol_syslog(\"You define a menu manager '\".$file_menu.\"' that can not be loaded.\", LOG_WARNING);\n\t\t\t$file_menu='eldy_menu.php';\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.\"/core/menus/standard/\".$file_menu;\n\t\t}\n\t}\n\t$menumanager = new MenuManager($db, empty($user->societe_id)?0:1);\n\t$menumanager->loadMenu();\n}\n\n\n\n// Functions\n\nif (! function_exists(\"llxHeader\"))\n{\n    /**\n     *\tShow HTML header HTML + BODY + Top menu + left menu + DIV\n     *\n     * @param \tstring \t$head\t\t\t\tOptionnal head lines\n     * @param \tstring \t$title\t\t\t\tHTML title\n     * @param\tstring\t$help_url\t\t\tUrl links to help page\n     * \t\t                            \tSyntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n     *                                  \tFor other external page: http://server/url\n     * @param\tstring\t$target\t\t\t\tTarget to use on links\n     * @param \tint    \t$disablejs\t\t\tMore content into html header\n     * @param \tint    \t$disablehead\t\tMore content into html header\n     * @param \tarray  \t$arrayofjs\t\t\tArray of complementary js files\n     * @param \tarray  \t$arrayofcss\t\t\tArray of complementary css files\n     * @param\tstring\t$morequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n     * @param   string  $morecssonbody      More CSS on body tag.\n     * @return\tvoid\n     */\n\tfunction llxHeader($head='', $title='', $help_url='', $target='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $morequerystring='', $morecssonbody='')\n\t{\n\t    global $conf;\n\n\t    // html header\n\t\ttop_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss);\n\n        print '<body id=\"mainbody\"'.($morecssonbody?' class=\"'.$morecssonbody.'\"':'').'>' . \"\\n\";\n\n\t\t// top menu and left menu area\n\t\tif (empty($conf->dol_hide_topmenu))\n\t\t{\n\t\t\ttop_menu($head, $title, $target, $disablejs, $disablehead, $arrayofjs, $arrayofcss, $morequerystring, $help_url);\n\t\t}\n\n\t\tif (empty($conf->dol_hide_leftmenu))\n\t\t{\n\t\t\tleft_menu('', $help_url, '', '', 1, $title, 1);\n\t\t}\n\n\t\t// main area\n\t\tmain_area($title);\n\t}\n}\n\n\n/**\n *  Show HTTP header\n *\n *  @param  string  $contenttype    Content type. For example, 'text/html'\n *  @return\tvoid\n */\nfunction top_httphead($contenttype='text/html')\n{\n    global $conf;\n\n    if ($contenttype == 'text/html' ) header(\"Content-Type: text/html; charset=\".$conf->file->character_set_client);\n    else header(\"Content-Type: \".$contenttype);\n    // Security options\n    header(\"X-Content-Type-Options: nosniff\");  // With the nosniff option, if the server says the content is text/html, the browser will render it as text/html (note that most browsers now force this option to on)\n    header(\"X-Frame-Options: SAMEORIGIN\");      // Frames allowed only if on same domain (stop some XSS attacks)\n    if (! empty($conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY))\n    {\n        // For example, to restrict script, object, frames or img to some domains\n        // script-src https://api.google.com https://anotherhost.com; object-src https://youtube.com; child-src https://youtube.com; img-src: https://static.example.com\n        // For example, to restrict everything to one domain, except object, ...\n        // default-src https://cdn.example.net; object-src 'none'\n        header(\"Content-Security-Policy: \".$conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY);\n    }\n\n\n    // On the fly GZIP compression for all pages (if browser support it). Must set the bit 3 of constant to 1.\n    /*if (isset($conf->global->MAIN_OPTIMIZE_SPEED) && ($conf->global->MAIN_OPTIMIZE_SPEED & 0x04)) {\n        ob_start(\"ob_gzhandler\");\n    }*/\n}\n\n/**\n * Ouput html header of a page.\n * This code is also duplicated into security2.lib.php::dol_loginfunction\n *\n * @param \tstring \t$head\t\t\t Optionnal head lines\n * @param \tstring \t$title\t\t\t HTML title\n * @param \tint    \t$disablejs\t\t Disable js output\n * @param \tint    \t$disablehead\t Disable head output\n * @param \tarray  \t$arrayofjs\t\t Array of complementary js files\n * @param \tarray  \t$arrayofcss\t\t Array of complementary css files\n * @param \tint    \t$disablejmobile\t Disable jmobile (No more used)\n * @param   int     $disablenofollow Disable no follow tag\n * @return\tvoid\n */\nfunction top_htmlhead($head, $title='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $disablejmobile=0, $disablenofollow=0)\n{\n    global $user, $conf, $langs, $db;\n\n    top_httphead();\n\n    if (empty($conf->css)) $conf->css = '/theme/eldy/style.css.php';\t// If not defined, eldy by default\n\n    if (! empty($conf->global->MAIN_ACTIVATE_HTML4)) {\n        $doctype = '<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">';\n    }else {\n        $doctype = '<!doctype html>';\n    }\n    print $doctype.\"\\n\";\n    if (! empty($conf->global->MAIN_USE_CACHE_MANIFEST)) print '<html lang=\"'.substr($langs->defaultlang,0,2).'\" manifest=\"'.DOL_URL_ROOT.'/cache.manifest\">'.\"\\n\";\n    else print '<html lang=\"'.substr($langs->defaultlang,0,2).'\">'.\"\\n\";\n    //print '<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"fr\">'.\"\\n\";\n    if (empty($disablehead))\n    {\n        print \"<head>\\n\";\n\t\tif (GETPOST('dol_basehref','alpha')) print '<base href=\"'.dol_escape_htmltag(GETPOST('dol_basehref','alpha')).'\">'.\"\\n\";\n        // Displays meta\n        print '<meta name=\"robots\" content=\"noindex'.($disablenofollow?'':',nofollow').'\">'.\"\\n\";      \t\t\t\t// Do not index\n        print '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">';\t// Scale for mobile device\n        print '<meta name=\"author\" content=\"Dolibarr Development Team\">'.\"\\n\";\n        // Favicon\n\t\t$favicon=dol_buildpath('/theme/'.$conf->theme.'/img/favicon.ico',1);\n        if (! empty($conf->global->MAIN_FAVICON_URL)) $favicon=$conf->global->MAIN_FAVICON_URL;\n        if (empty($conf->dol_use_jmobile)) print '<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"'.$favicon.'\"/>'.\"\\n\";\t// Not required into an Android webview\n        //if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && ! GETPOST('textbrowser','int')) print '<link rel=\"top\" title=\"'.$langs->trans(\"Home\").'\" href=\"'.(DOL_URL_ROOT?DOL_URL_ROOT:'/').'\">'.\"\\n\";\n        if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && ! GETPOST('textbrowser','int')) print '<link rel=\"copyright\" title=\"GNU General Public License\" href=\"http://www.gnu.org/copyleft/gpl.html#SEC1\">'.\"\\n\";\n        if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && ! GETPOST('textbrowser','int')) print '<link rel=\"author\" title=\"Dolibarr Development Team\" href=\"https://www.dolibarr.org\">'.\"\\n\";\n\n        // Displays title\n        $appli=constant('DOL_APPLICATION_TITLE');\n        if (!empty($conf->global->MAIN_APPLICATION_TITLE)) $appli=$conf->global->MAIN_APPLICATION_TITLE;\n\n        if ($title && ! empty($conf->global->MAIN_HTML_TITLE) && preg_match('/noapp/',$conf->global->MAIN_HTML_TITLE)) print '<title>'.dol_htmlentities($title).'</title>';\n        else if ($title) print '<title>'.dol_htmlentities($appli.' - '.$title).'</title>';\n        else print \"<title>\".dol_htmlentities($appli).\"</title>\";\n        print \"\\n\";\n\n        //$ext='';\n        //if (! empty($conf->dol_use_jmobile)) $ext='version='.urlencode(DOL_VERSION);\n        $ext='version='.urlencode(DOL_VERSION);\n\n        if (GETPOST('version','int')) $ext='version='.GETPOST('version','int');\t// usefull to force no cache on css/js\n        if (GETPOST('testmenuhider','int') || ! empty($conf->global->MAIN_TESTMENUHIDER)) $ext.='&testmenuhider='.(GETPOST('testmenuhider','int')?GETPOST('testmenuhider','int'):$conf->global->MAIN_TESTMENUHIDER);\n\n        $themeparam='?lang='.$langs->defaultlang.'&amp;theme='.$conf->theme.(GETPOST('optioncss','aZ09')?'&amp;optioncss='.GETPOST('optioncss','aZ09',1):'').'&amp;userid='.$user->id.'&amp;entity='.$conf->entity;\n        $themeparam.=($ext?'&amp;'.$ext:'');\n        if (! empty($_SESSION['dol_resetcache'])) $themeparam.='&amp;dol_resetcache='.$_SESSION['dol_resetcache'];\n        if (GETPOST('dol_hide_topmenu','int'))           { $themeparam.='&amp;dol_hide_topmenu='.GETPOST('dol_hide_topmenu','int'); }\n        if (GETPOST('dol_hide_leftmenu','int'))          { $themeparam.='&amp;dol_hide_leftmenu='.GETPOST('dol_hide_leftmenu','int'); }\n        if (GETPOST('dol_optimize_smallscreen','int'))   { $themeparam.='&amp;dol_optimize_smallscreen='.GETPOST('dol_optimize_smallscreen','int'); }\n        if (GETPOST('dol_no_mouse_hover','int'))         { $themeparam.='&amp;dol_no_mouse_hover='.GETPOST('dol_no_mouse_hover','int'); }\n        if (GETPOST('dol_use_jmobile','int'))            { $themeparam.='&amp;dol_use_jmobile='.GETPOST('dol_use_jmobile','int'); $conf->dol_use_jmobile=GETPOST('dol_use_jmobile','int'); }\n\n        if (! defined('DISABLE_JQUERY') && ! $disablejs && $conf->use_javascript_ajax)\n        {\n            print '<!-- Includes CSS for JQuery (Ajax library) -->'.\"\\n\";\n            $jquerytheme = 'smoothness';\n            if (!empty($conf->global->MAIN_USE_JQUERY_THEME)) $jquerytheme = $conf->global->MAIN_USE_JQUERY_THEME;\n            if (constant('JS_JQUERY_UI')) print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.JS_JQUERY_UI.'css/'.$jquerytheme.'/jquery-ui.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";  // JQuery\n            else print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/css/'.$jquerytheme.'/jquery-ui.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";    // JQuery\n            if (! defined('DISABLE_JQUERY_TIPTIP')) print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tiptip/tipTip.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";                           // Tooltip\n            if (! defined('DISABLE_JQUERY_JNOTIFY')) print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify-alt.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";          // JNotify\n            /* Removed a old hidden problematic feature never used in Dolibarr. If an external module need datatable, the module must provide all lib it needs and manage version problems with other dolibarr components\n            if (! empty($conf->global->MAIN_USE_JQUERY_DATATABLES) || (defined('REQUIRE_JQUERY_DATATABLES') && constant('REQUIRE_JQUERY_DATATABLES')))     // jQuery datatables\n            {\n                print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/media/css/jquery.dataTables.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n                print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/css/buttons.dataTables.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n                print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/ColReorder/css/colReorder.dataTables.min.css'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }*/\n            if (! defined('DISABLE_SELECT2') && (! empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT')))     // jQuery plugin \"mutiselect\", \"multiple-select\", \"select2\"...\n            {\n            \t$tmpplugin=empty($conf->global->MAIN_USE_JQUERY_MULTISELECT)?constant('REQUIRE_JQUERY_MULTISELECT'):$conf->global->MAIN_USE_JQUERY_MULTISELECT;\n            \tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/'.$tmpplugin.'/'.$tmpplugin.'.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n            }\n            // jQuery Timepicker\n            if (! empty($conf->global->MAIN_USE_JQUERY_TIMEPICKER) || defined('REQUIRE_JQUERY_TIMEPICKER'))\n            {\n            \tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/timepicker/jquery-ui-timepicker-addon.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n            }\n        }\n\n        if (! defined('DISABLE_FONT_AWSOME'))\n        {\n            print '<!-- Includes CSS for font awesome -->'.\"\\n\";\n            print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/theme/common/fontawesome/css/font-awesome.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n        }\n\n        print '<!-- Includes CSS for Dolibarr theme -->'.\"\\n\";\n        // Output style sheets (optioncss='print' or ''). Note: $conf->css looks like '/theme/eldy/style.css.php'\n        $themepath=dol_buildpath($conf->css,1);\n        $themesubdir='';\n        if (! empty($conf->modules_parts['theme']))\t// This slow down\n        {\n\t        foreach($conf->modules_parts['theme'] as $reldir)\n\t        {\n\t        \tif (file_exists(dol_buildpath($reldir.$conf->css, 0)))\n\t        \t{\n\t\t\t\t\t$themepath=dol_buildpath($reldir.$conf->css, 1);\n\t\t\t\t\t$themesubdir=$reldir;\n\t\t\t\t\tbreak;\n\t        \t}\n\t        }\n        }\n        //print 'themepath='.$themepath.' themeparam='.$themeparam;exit;\n        print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.$themepath.$themeparam.'\">'.\"\\n\";\n\t    if (! empty($conf->global->MAIN_FIX_FLASH_ON_CHROME)) print '<!-- Includes CSS that does not exists as a workaround of flash bug of chrome -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" href=\"filethatdoesnotexiststosolvechromeflashbug\">'.\"\\n\";\n\n        // CSS forced by modules (relative url starting with /)\n        if (! empty($conf->modules_parts['css']))\n        {\n        \t$arraycss=(array) $conf->modules_parts['css'];\n        \tforeach($arraycss as $modcss => $filescss)\n        \t{\n        \t\t$filescss=(array) $filescss;\t// To be sure filecss is an array\n        \t\tforeach($filescss as $cssfile)\n        \t\t{\n        \t\t\tif (empty($cssfile)) dol_syslog(\"Warning: module \".$modcss.\" declared a css path file into its descriptor that is empty.\", LOG_WARNING);\n        \t\t\t// cssfile is a relative path\n\t        \t\tprint '<!-- Includes CSS added by module '.$modcss. ' -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" href=\"'.dol_buildpath($cssfile,1);\n\t        \t\t// We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters, so browser cache is not used.\n\t        \t\tif (!preg_match('/\\.css$/i',$cssfile)) print $themeparam;\n\t        \t\tprint '\">'.\"\\n\";\n        \t\t}\n        \t}\n        }\n        // CSS forced by page in top_htmlhead call (relative url starting with /)\n        if (is_array($arrayofcss))\n        {\n            foreach($arrayofcss as $cssfile)\n            {\n            \tprint '<!-- Includes CSS added by page -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" title=\"default\" href=\"'.dol_buildpath($cssfile,1);\n                // We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters and browser cache is not used.\n                if (!preg_match('/\\.css$/i',$cssfile)) print $themeparam;\n                print '\">'.\"\\n\";\n            }\n        }\n\n        // Output standard javascript links\n        if (! defined('DISABLE_JQUERY') && ! $disablejs && ! empty($conf->use_javascript_ajax))\n        {\n            // JQuery. Must be before other includes\n            print '<!-- Includes JS for JQuery -->'.\"\\n\";\n            if (defined('JS_JQUERY') && constant('JS_JQUERY')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY.'jquery.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            else print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            if (! empty($conf->global->MAIN_FEATURES_LEVEL) && ! defined('JS_JQUERY_MIGRATE_DISABLED'))\n            {\n                if (defined('JS_JQUERY_MIGRATE') && constant('JS_JQUERY_MIGRATE')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_MIGRATE.'jquery-migrate.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                else print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-migrate.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            if (defined('JS_JQUERY_UI') && constant('JS_JQUERY_UI')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_UI.'jquery-ui.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            else print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-ui.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            if (! defined('DISABLE_JQUERY_TABLEDND')) print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tablednd/jquery.tablednd.0.6.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            if (! defined('DISABLE_JQUERY_TIPTIP')) print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tiptip/jquery.tipTip.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            // jQuery jnotify\n            if (empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) && ! defined('DISABLE_JQUERY_JNOTIFY'))\n            {\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/jnotify.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            // jQuery blockUI\n            if (! empty($conf->global->MAIN_USE_JQUERY_BLOCKUI) || defined('REQUIRE_JQUERY_BLOCKUI'))\n            {\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/blockUI/jquery.blockUI.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            \tprint '<script type=\"text/javascript\">'.\"\\n\";\n            \tprint 'var indicatorBlockUI = \\''.DOL_URL_ROOT.\"/theme/\".$conf->theme.\"/img/working2.gif\".'\\';'.\"\\n\";\n            \tprint '</script>'.\"\\n\";\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/blockUI.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            // Flot\n            if (empty($conf->global->MAIN_DISABLE_JQUERY_FLOT) && ! defined('DISABLE_JQUERY_FLOT'))\n            {\n                if (constant('JS_JQUERY_FLOT'))\n                {\n                    print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.pie.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.stack.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                }\n                else\n                {\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.pie.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.stack.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                }\n            }\n            // jQuery jeditable\n            if (! empty($conf->global->MAIN_USE_JQUERY_JEDITABLE) && ! defined('DISABLE_JQUERY_JEDITABLE'))\n            {\n            \tprint '<!-- JS to manage editInPlace feature -->'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ui-datepicker.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ui-autocomplete.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\">'.\"\\n\";\n                print 'var urlSaveInPlace = \\''.DOL_URL_ROOT.'/core/ajax/saveinplace.php\\';'.\"\\n\";\n                print 'var urlLoadInPlace = \\''.DOL_URL_ROOT.'/core/ajax/loadinplace.php\\';'.\"\\n\";\n                print 'var tooltipInPlace = \\''.$langs->transnoentities('ClickToEdit').'\\';'.\"\\n\";\t// Added in title attribute of span\n                print 'var placeholderInPlace = \\'&nbsp;\\';'.\"\\n\";\t// If we put another string than $langs->trans(\"ClickToEdit\") here, nothing is shown. If we put empty string, there is error, Why ?\n                print 'var cancelInPlace = \\''.$langs->trans('Cancel').'\\';'.\"\\n\";\n                print 'var submitInPlace = \\''.$langs->trans('Ok').'\\';'.\"\\n\";\n                print 'var indicatorInPlace = \\'<img src=\"'.DOL_URL_ROOT.\"/theme/\".$conf->theme.\"/img/working.gif\".'\">\\';'.\"\\n\";\n                print 'var withInPlace = 300;';\t\t// width in pixel for default string edit\n                print '</script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/editinplace.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ckeditor.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            // jQuery DataTables\n            /* Removed a old hidden problematic feature never used in Dolibarr. If an external module need datatable, the module must provide all lib it needs and manage version problems with other dolibarr components\n            if (! empty($conf->global->MAIN_USE_JQUERY_DATATABLES) || (defined('REQUIRE_JQUERY_DATATABLES') && constant('REQUIRE_JQUERY_DATATABLES')))\n            {\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/media/js/jquery.dataTables.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/dataTables.buttons.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/buttons.colVis.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/buttons.html5.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/buttons.flash.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/Buttons/js/buttons.print.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/datatables/extensions/ColReorder/js/dataTables.colReorder.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jszip/jszip.min.js\"></script>'.\"\\n\";\n            }*/\n            // jQuery Timepicker\n            if (! empty($conf->global->MAIN_USE_JQUERY_TIMEPICKER) || defined('REQUIRE_JQUERY_TIMEPICKER'))\n            {\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/timepicker/jquery-ui-timepicker-addon.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/timepicker.js.php?lang='.$langs->defaultlang.($ext?'&amp;'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            if (! defined('DISABLE_SELECT2') && (! empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT')))     // jQuery plugin \"mutiselect\", \"multiple-select\", \"select2\", ...\n            {\n            \t$tmpplugin=empty($conf->global->MAIN_USE_JQUERY_MULTISELECT)?constant('REQUIRE_JQUERY_MULTISELECT'):$conf->global->MAIN_USE_JQUERY_MULTISELECT;\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/'.$tmpplugin.'/'.$tmpplugin.'.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/select2_locale.js.php?lang='.$langs->defaultlang.($ext?'&amp;'.$ext:'').'\"></script>'.\"\\n\";\n            }\n        }\n\n        if (! $disablejs && ! empty($conf->use_javascript_ajax))\n        {\n            // CKEditor\n            if (! empty($conf->fckeditor->enabled) && (empty($conf->global->FCKEDITOR_EDITORNAME) || $conf->global->FCKEDITOR_EDITORNAME == 'ckeditor') && ! defined('DISABLE_CKEDITOR'))\n            {\n                print '<!-- Includes JS for CKEditor -->'.\"\\n\";\n                $pathckeditor = DOL_URL_ROOT . '/includes/ckeditor/ckeditor/';\n                $jsckeditor='ckeditor.js';\n                if (constant('JS_CKEDITOR'))\t// To use external ckeditor 4 js lib\n                {\n                \t$pathckeditor=constant('JS_CKEDITOR');\n                }\n                print '<script type=\"text/javascript\">';\n                print 'var CKEDITOR_BASEPATH = \\''.$pathckeditor.'\\';'.\"\\n\";\n                print 'var ckeditorConfig = \\''.dol_buildpath($themesubdir.'/theme/'.$conf->theme.'/ckeditor/config.js'.($ext?'?'.$ext:''),1).'\\';'.\"\\n\";\t\t// $themesubdir='' in standard usage\n                print 'var ckeditorFilebrowserBrowseUrl = \\''.DOL_URL_ROOT.'/core/filemanagerdol/browser/default/browser.php?Connector='.DOL_URL_ROOT.'/core/filemanagerdol/connectors/php/connector.php\\';'.\"\\n\";\n                print 'var ckeditorFilebrowserImageBrowseUrl = \\''.DOL_URL_ROOT.'/core/filemanagerdol/browser/default/browser.php?Type=Image&Connector='.DOL_URL_ROOT.'/core/filemanagerdol/connectors/php/connector.php\\';'.\"\\n\";\n                print '</script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.$pathckeditor.$jsckeditor.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n\n            // Browser notifications\n            if (! defined('DISABLE_BROWSER_NOTIF'))\n            {\n                $enablebrowsernotif=false;\n                if (! empty($conf->agenda->enabled) && ! empty($conf->global->AGENDA_NOTIFICATION)) $enablebrowsernotif=true;\n                if ($conf->browser->layout == 'phone') $enablebrowsernotif=false;\n                if ($enablebrowsernotif)\n                {\n                    print '<!-- Includes JS of Dolibarr (brwoser layout = '.$conf->browser->layout.')-->'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/lib_notification.js.php'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                }\n            }\n\n            // Global js function\n            print '<!-- Includes JS of Dolibarr -->'.\"\\n\";\n            print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/lib_head.js.php'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\n            // Add datepicker default options\n            if (! defined('DISABLE_DATE_PICKER'))\n            {\n                print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/datepicker.js.php'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n\n            // JS forced by modules (relative url starting with /)\n            if (! empty($conf->modules_parts['js']))\t\t// $conf->modules_parts['js'] is array('module'=>array('file1','file2'))\n        \t{\n        \t\t$arrayjs=(array) $conf->modules_parts['js'];\n\t            foreach($arrayjs as $modjs => $filesjs)\n\t            {\n        \t\t\t$filesjs=(array) $filesjs;\t// To be sure filejs is an array\n\t\t            foreach($filesjs as $jsfile)\n\t\t            {\n\t    \t    \t\t// jsfile is a relative path\n\t        \t    \tprint '<!-- Include JS added by module '.$modjs. '-->'.\"\\n\".'<script type=\"text/javascript\" src=\"'.dol_buildpath($jsfile,1).'\"></script>'.\"\\n\";\n\t\t            }\n\t            }\n        \t}\n            // JS forced by page in top_htmlhead (relative url starting with /)\n            if (is_array($arrayofjs))\n            {\n                print '<!-- Includes JS added by page -->'.\"\\n\";\n                foreach($arrayofjs as $jsfile)\n                {\n                    if (preg_match('/^http/i',$jsfile))\n                    {\n                        print '<script type=\"text/javascript\" src=\"'.$jsfile.'\"></script>'.\"\\n\";\n                    }\n                    else\n                    {\n                        if (! preg_match('/^\\//',$jsfile)) $jsfile='/'.$jsfile;\t// For backward compatibility\n                        print '<script type=\"text/javascript\" src=\"'.dol_buildpath($jsfile,1).'\"></script>'.\"\\n\";\n                    }\n                }\n            }\n        }\n\n        if (! empty($head)) print $head.\"\\n\";\n        if (! empty($conf->global->MAIN_HTML_HEADER)) print $conf->global->MAIN_HTML_HEADER.\"\\n\";\n\n        print \"</head>\\n\\n\";\n    }\n\n    $conf->headerdone=1;\t// To tell header was output\n}\n\n\n/**\n *  Show an HTML header + a BODY + The top menu bar\n *\n *  @param      string\t$head    \t\t\tLines in the HEAD\n *  @param      string\t$title   \t\t\tTitle of web page\n *  @param      string\t$target  \t\t\tTarget to use in menu links (Example: '' or '_top')\n *\t@param\t\tint\t\t$disablejs\t\t\tDo not output links to js (Ex: qd fonction utilisee par sous formulaire Ajax)\n *\t@param\t\tint\t\t$disablehead\t\tDo not output head section\n *\t@param\t\tarray\t$arrayofjs\t\t\tArray of js files to add in header\n *\t@param\t\tarray\t$arrayofcss\t\t\tArray of css files to add in header\n *  @param\t\tstring\t$morequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n *  @param      string\t$helppagename    \tName of wiki page for help ('' by default).\n * \t\t\t\t     \t\t                Syntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t\t\t\t                   For other external page: http://server/url\n *  @return\t\tvoid\n */\nfunction top_menu($head, $title='', $target='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $morequerystring='', $helppagename='')\n{\n    global $user, $conf, $langs, $db;\n    global $dolibarr_main_authentication, $dolibarr_main_demo;\n    global $hookmanager,$menumanager;\n\n    $searchform='';\n    $bookmarks='';\n\n    // Instantiate hooks of thirdparty module\n    $hookmanager->initHooks(array('toprightmenu'));\n\n    $toprightmenu='';\n\n    // For backward compatibility with old modules\n    if (empty($conf->headerdone))\n    {\n        top_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss);\n        print '<body id=\"mainbody\">';\n    }\n\n    /*\n     * Top menu\n     */\n    if (empty($conf->dol_hide_topmenu) && (! defined('NOREQUIREMENU') || ! constant('NOREQUIREMENU')))\n    {\n        print \"\\n\".'<!-- Start top horizontal -->'.\"\\n\";\n\n        print '<div class=\"side-nav-vert\"><div id=\"id-top\">';\n\n\t    // Show menu entries\n    \tprint '<div id=\"tmenu_tooltip'.(empty($conf->global->MAIN_MENU_INVERT)?'':'invert').'\" class=\"tmenu\">'.\"\\n\";\n    \t$menumanager->atarget=$target;\n\t    $menumanager->showmenu('top', array('searchform'=>$searchform, 'bookmarks'=>$bookmarks));      // This contains a \\n\n\t    print \"</div>\\n\";\n\n\t    // Define link to login card\n        $appli=constant('DOL_APPLICATION_TITLE');\n\t    if (! empty($conf->global->MAIN_APPLICATION_TITLE))\n\t    {\n\t    \t$appli=$conf->global->MAIN_APPLICATION_TITLE;\n\t    \tif (preg_match('/\\d\\.\\d/', $appli))\n\t    \t{\n\t\t\t\tif (! preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) $appli.=\" (\".DOL_VERSION.\")\";\t// If new title contains a version that is different than core\n\t    \t}\n\t    \telse $appli.=\" \".DOL_VERSION;\n\t    }\n\t    else $appli.=\" \".DOL_VERSION;\n\n\t    if (! empty($conf->global->MAIN_FEATURES_LEVEL)) $appli.=\"<br>\".$langs->trans(\"LevelOfFeature\").': '.$conf->global->MAIN_FEATURES_LEVEL;\n\n\t    $logouttext='';\n\t    if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER))\n\t    {\n    \t    //$logouthtmltext=$appli.'<br>';\n    \t    if ($_SESSION[\"dol_authmode\"] != 'forceuser' && $_SESSION[\"dol_authmode\"] != 'http')\n    \t    {\n    \t    \t$logouthtmltext.=$langs->trans(\"Logout\").'<br>';\n\n    \t    \t$logouttext .='<a href=\"'.DOL_URL_ROOT.'/user/logout.php\">';\n    \t        //$logouttext .= img_picto($langs->trans('Logout').\":\".$langs->trans('Logout'), 'logout_top.png', 'class=\"login\"', 0, 0, 1);\n    \t    \t$logouttext .='<span class=\"fa fa-sign-out atoplogin\"></span>';\n    \t        $logouttext .='</a>';\n    \t    }\n    \t    else\n    \t    {\n    \t    \t$logouthtmltext.=$langs->trans(\"NoLogoutProcessWithAuthMode\",$_SESSION[\"dol_authmode\"]);\n    \t        $logouttext .= img_picto($langs->trans('Logout').\":\".$langs->trans('Logout'), 'logout_top.png', 'class=\"login\"', 0, 0, 1);\n    \t    }\n\t    }\n\n\t    print '<div class=\"login_block\">'.\"\\n\";\n\n\t    // Add login user link\n\t    $toprightmenu.='<div class=\"login_block_user\">';\n\n\t    // Login name with photo and tooltip\n\t\t$mode=-1;\n\t    $toprightmenu.='<div class=\"inline-block nowrap\"><div class=\"inline-block login_block_elem login_block_elem_name\" style=\"padding: 0px;\">';\n        $toprightmenu.=$user->getNomUrl($mode, '', true, 0, 11, 0, ($user->firstname ? 'firstname' : -1),'atoplogin');\n        $toprightmenu.='</div></div>';\n\n\t\t$toprightmenu.='</div>';\n\n\t    $toprightmenu.='<div class=\"login_block_other\">';\n\n\t\t// Execute hook printTopRightMenu (hooks should output string like '<div class=\"login\"><a href=\"\">mylink</a></div>')\n\t    $parameters=array();\n\t    $result=$hookmanager->executeHooks('printTopRightMenu',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t\tif (is_numeric($result))\n\t\t{\n\t\t\tif (empty($result)) $toprightmenu.=$hookmanager->resPrint;\t\t// add\n\t\t\telse  $toprightmenu=$hookmanager->resPrint;\t\t\t\t\t\t// replace\n\t\t}\n\t\telse $toprightmenu.=$result;\t// For backward compatibility\n\n    \t// Link to module builder\n\t    if (! empty($conf->modulebuilder->enabled))\n\t    {\n\t        $text ='<a href=\"'.DOL_URL_ROOT.'/modulebuilder/index.php?mainmenu=home&leftmenu=admintools\" target=\"_modulebuilder\">';\n\t        //$text.= img_picto(\":\".$langs->trans(\"ModuleBuilder\"), 'printer_top.png', 'class=\"printer\"');\n\t        $text.='<span class=\"fa fa-bug atoplogin\"></span>';\n\t        $text.='</a>';\n\t        $toprightmenu.=@Form::textwithtooltip('',$langs->trans(\"ModuleBuilder\"),2,1,$text,'login_block_elem',2);\n\t    }\n\n\t\t// Link to print main content area\n\t    if (empty($conf->global->MAIN_PRINT_DISABLELINK) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && empty($conf->browser->phone))\n\t    {\n\t        $qs=dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]);\n\n\t        if (is_array($_POST))\n\t        {\n    \t\t\tforeach($_POST as $key=>$value) {\n    \t\t\t\tif ($key!=='action' && !is_array($value)) $qs.='&'.$key.'='.urlencode($value);\n    \t\t\t}\n\t        }\n\t\t\t$qs.=(($qs && $morequerystring)?'&':'').$morequerystring;\n\t        $text ='<a href=\"'.dol_escape_htmltag($_SERVER[\"PHP_SELF\"]).'?'.$qs.($qs?'&':'').'optioncss=print\" target=\"_blank\">';\n\t        //$text.= img_picto(\":\".$langs->trans(\"PrintContentArea\"), 'printer_top.png', 'class=\"printer\"');\n\t        $text.='<span class=\"fa fa-print atoplogin\"></span>';\n\t        $text.='</a>';\n\t        $toprightmenu.=@Form::textwithtooltip('',$langs->trans(\"PrintContentArea\"),2,1,$text,'login_block_elem',2);\n\t    }\n\n\t    // Link to Dolibarr wiki pages\n\t    if (empty($conf->global->MAIN_HELP_DISABLELINK) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER))\n\t    {\n\t        $langs->load(\"help\");\n\n\t        $helpbaseurl='';\n\t        $helppage='';\n\t        $mode='';\n\n\t        if (empty($helppagename)) $helppagename='EN:User_documentation|FR:Documentation_utilisateur|ES:Documentaci\u00f3n_usuarios';\n\n\t        // Get helpbaseurl, helppage and mode from helppagename and langs\n\t        $arrayres=getHelpParamFor($helppagename,$langs);\n\t        $helpbaseurl=$arrayres['helpbaseurl'];\n\t        $helppage=$arrayres['helppage'];\n\t        $mode=$arrayres['mode'];\n\n\t        // Link to help pages\n\t        if ($helpbaseurl && $helppage)\n\t        {\n\t            $text='';\n\t            $title=$appli.'<br>';\n\t            $title.=$langs->trans($mode == 'wiki' ? 'GoToWikiHelpPage': 'GoToHelpPage');\n\t            if ($mode == 'wiki') $title.=' - '.$langs->trans(\"PageWiki\").' &quot;'.dol_escape_htmltag(strtr($helppage,'_',' ')).'&quot;';\n\t            $text.='<a class=\"help\" target=\"_blank\" href=\"';\n\t            if ($mode == 'wiki') $text.=sprintf($helpbaseurl,urlencode(html_entity_decode($helppage)));\n\t            else $text.=sprintf($helpbaseurl,$helppage);\n\t            $text.='\">';\n\t            //$text.=img_picto('', 'helpdoc_top').' ';\n\t            $text.='<span class=\"fa fa-question-circle atoplogin\"></span>';\n\t            //$toprightmenu.=$langs->trans($mode == 'wiki' ? 'OnlineHelp': 'Help');\n\t            //if ($mode == 'wiki') $text.=' ('.dol_trunc(strtr($helppage,'_',' '),8).')';\n\t            $text.='</a>';\n\t            //$toprightmenu.='</div>'.\"\\n\";\n\t            $toprightmenu.=@Form::textwithtooltip('',$title,2,1,$text,'login_block_elem',2);\n\t        }\n\t    }\n\n\t\t// Logout link\n\t    $toprightmenu.=@Form::textwithtooltip('',$logouthtmltext,2,1,$logouttext,'login_block_elem',2);\n\n\t    $toprightmenu.='</div>';\n\n\t    print $toprightmenu;\n\n\t    print \"</div>\\n\";\n\t\tprint '</div></div>';\n\n\t    //unset($form);\n\n\t\tprint '<div style=\"clear: both;\"></div>';\n        print \"<!-- End top horizontal menu -->\\n\\n\";\n    }\n\n    if (empty($conf->dol_hide_leftmenu) && empty($conf->dol_use_jmobile)) print '<!-- Begin div id-container --><div id=\"id-container\" class=\"id-container'.($morecss?' '.$morecss:'').'\">';\n}\n\n\n/**\n *  Show left menu bar\n *\n *  @param  array\t$menu_array_before \t       \tTable of menu entries to show before entries of menu handler. This param is deprectaed and must be provided to ''.\n *  @param  string\t$helppagename    \t       \tName of wiki page for help ('' by default).\n * \t\t\t\t     \t\t                   \tSyntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t\t\t\t         \t\t       For other external page: http://server/url\n *  @param  string\t$notused             \t\tDeprecated. Used in past to add content into left menu. Hooks can be used now.\n *  @param  array\t$menu_array_after           Table of menu entries to show after entries of menu handler\n *  @param  int\t\t$leftmenuwithoutmainarea    Must be set to 1. 0 by default for backward compatibility with old modules.\n *  @param  string\t$title                      Title of web page\n *  @param  string  $acceptdelayedhtml          1 if caller request to have html delayed content not returned but saved into global $delayedhtmlcontent (so caller can show it at end of page to avoid flash FOUC effect)\n *  @return\tvoid\n */\nfunction left_menu($menu_array_before, $helppagename='', $notused='', $menu_array_after='', $leftmenuwithoutmainarea=0, $title='', $acceptdelayedhtml=0)\n{\n    global $user, $conf, $langs, $db, $form;\n    global $hookmanager, $menumanager;\n\n    $searchform='';\n    $bookmarks='';\n\n    if (! empty($menu_array_before)) dol_syslog(\"Deprecated parameter menu_array_before was used when calling main::left_menu function. Menu entries of module should now be defined into module descriptor and not provided when calling left_menu.\", LOG_WARNING);\n\n    if (empty($conf->dol_hide_leftmenu) && (! defined('NOREQUIREMENU') || ! constant('NOREQUIREMENU')))\n    {\n\t    // Instantiate hooks of thirdparty module\n\t    $hookmanager->initHooks(array('searchform','leftblock'));\n\n\t\tprint \"\\n\".'<!-- Begin side-nav id-left -->'.\"\\n\".'<div class=\"side-nav\"><div id=\"id-left\">'.\"\\n\";\n\n\t    print \"\\n\";\n\n\t    if ($conf->use_javascript_ajax && $conf->browser->layout != 'phone' && empty($conf->global->MAIN_USE_OLD_SEARCH_FORM))\n\t    {\n    \t    if (! is_object($form)) $form=new Form($db);\n    \t    $selected=-1;\n            $searchform.=$form->selectArrayAjax('searchselectcombo', DOL_URL_ROOT.'/core/ajax/selectsearchbox.php', $selected, '', '', 0, 1, 'vmenusearchselectcombo', 1, $langs->trans(\"Search\"), 1);\n\t    }\n\t    else\n\t    {\n    \t    // Define $searchform\n    \t    if ((( ! empty($conf->societe->enabled) && (empty($conf->global->SOCIETE_DISABLE_PROSPECTS) || empty($conf->global->SOCIETE_DISABLE_CUSTOMERS))) || ! empty($conf->fournisseur->enabled)) && $user->rights->societe->lire)\n    \t    {\n    \t        $langs->load(\"companies\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/societe/list.php', DOL_URL_ROOT.'/societe/list.php', $langs->trans(\"ThirdParties\"), 'maxwidth100', 'sall', 'T', 'searchleftt', img_object('','company'));\n    \t    }\n\n    \t    if (! empty($conf->societe->enabled) && $user->rights->societe->lire)\n    \t    {\n    \t        $langs->load(\"companies\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/contact/list.php', DOL_URL_ROOT.'/contact/list.php', $langs->trans(\"Contacts\"), 'maxwidth100', 'sall', 'A', 'searchleftc', img_object('','contact'));\n    \t    }\n\n    \t    if (((! empty($conf->product->enabled) && $user->rights->produit->lire) || (! empty($conf->service->enabled) && $user->rights->service->lire))\n    \t    )\n    \t    {\n    \t        $langs->load(\"products\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/product/list.php', DOL_URL_ROOT.'/product/list.php', $langs->trans(\"Products\").\"/\".$langs->trans(\"Services\"), 'maxwidth100', 'sall', 'P', 'searchleftp', img_object('','product'));\n    \t    }\n\n            if (! empty($conf->projet->enabled) && $user->rights->projet->lire)\n    \t    {\n    \t        $langs->load(\"projects\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/projet/list.php', DOL_URL_ROOT.'/projet/list.php', $langs->trans(\"Projects\"), 'maxwidth100', 'search_all', 'Q', 'searchleftproj', img_object('','projectpub'));\n    \t    }\n\n    \t    if (! empty($conf->adherent->enabled) && $user->rights->adherent->lire)\n    \t    {\n    \t        $langs->load(\"members\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/adherents/list.php', DOL_URL_ROOT.'/adherents/list.php', $langs->trans(\"Members\"), 'maxwidth100', 'sall', 'M', 'searchleftm', img_object('','user'));\n    \t    }\n\n    \t\tif (! empty($conf->user->enabled) && $user->rights->user->user->lire)\n    \t    {\n    \t        $langs->load(\"users\");\n    \t        $searchform.=printSearchForm(DOL_URL_ROOT.'/user/list.php', DOL_URL_ROOT.'/user/list.php', $langs->trans(\"Users\"), 'maxwidth100', 'sall', 'M', 'searchleftuser', img_object('','user'));\n    \t    }\n\t    }\n\n\t    // Execute hook printSearchForm\n\t    $parameters=array('searchform'=>$searchform);\n\t    $reshook=$hookmanager->executeHooks('printSearchForm',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t\tif (empty($reshook))\n\t\t{\n\t\t\t$searchform.=$hookmanager->resPrint;\n\t\t}\n\t\telse $searchform=$hookmanager->resPrint;\n\n\t\tif ($conf->use_javascript_ajax && $conf->browser->layout == 'phone')\n\t    {\n\t        $searchform='<div class=\"blockvmenuimpair blockvmenusearchphone\"><div id=\"divsearchforms1\"><a href=\"#\" alt=\"'.dol_escape_htmltag($langs->trans(\"ShowSearchFields\")).'\">'.$langs->trans(\"Search\").'...</a></div><div id=\"divsearchforms2\" style=\"display: none\">'.$searchform.'</div>';\n\t        $searchform.='<script type=\"text/javascript\">\n            \tjQuery(document).ready(function () {\n            \t\tjQuery(\"#divsearchforms1\").click(function(){\n\t                   jQuery(\"#divsearchforms2\").toggle();\n\t               });\n            \t});\n                </script>' . \"\\n\";\n\t        $searchform.='</div>';\n\t    }\n\n\t    // Define $bookmarks\n\t    if (! empty($conf->bookmark->enabled) && $user->rights->bookmark->lire)\n\t    {\n\t        include_once (DOL_DOCUMENT_ROOT.'/bookmarks/bookmarks.lib.php');\n\t        $langs->load(\"bookmarks\");\n\n\t        $bookmarks=printBookmarksList($db, $langs);\n\t    }\n\n\t    // Left column\n\t    print '<!-- Begin left menu -->'.\"\\n\";\n\n\t    print '<div class=\"vmenu\"'.(empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)?'':' title=\"Left menu\"').'>'.\"\\n\\n\";\n\n    \t// Show left menu with other forms\n\t    $menumanager->menu_array = $menu_array_before;\n    \t$menumanager->menu_array_after = $menu_array_after;\n\t    $menumanager->showmenu('left', array('searchform'=>$searchform, 'bookmarks'=>$bookmarks)); // output menu_array and menu found in database\n\n        // Dolibarr version + help + bug report link\n\t\tprint \"\\n\";\n\t    print \"<!-- Begin Help Block-->\\n\";\n        print '<div id=\"blockvmenuhelp\" class=\"blockvmenuhelp\">'.\"\\n\";\n\n        // Version\n        if (empty($conf->global->MAIN_HIDE_VERSION))    // Version is already on help picto and on login page.\n        {\n            $doliurl='https://www.dolibarr.org';\n    \t\t//local communities\n    \t\tif (preg_match('/fr/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.fr';\n    \t\tif (preg_match('/es/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.es';\n    \t\tif (preg_match('/de/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.de';\n    \t\tif (preg_match('/it/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.it';\n    \t\tif (preg_match('/gr/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.gr';\n\n            $appli=constant('DOL_APPLICATION_TITLE');\n    \t    if (! empty($conf->global->MAIN_APPLICATION_TITLE))\n    \t    {\n    \t    \t$appli=$conf->global->MAIN_APPLICATION_TITLE; $doliurl='';\n    \t    \tif (preg_match('/\\d\\.\\d/', $appli))\n    \t    \t{\n    \t\t\t\tif (! preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) $appli.=\" (\".DOL_VERSION.\")\";\t// If new title contains a version that is different than core\n    \t    \t}\n    \t    \telse $appli.=\" \".DOL_VERSION;\n    \t    }\n    \t    else $appli.=\" \".DOL_VERSION;\n    \t    print '<div id=\"blockvmenuhelpapp\" class=\"blockvmenuhelp\">';\n    \t    if ($doliurl) print '<a class=\"help\" target=\"_blank\" href=\"'.$doliurl.'\">';\n    \t    else print '<span class=\"help\">';\n    \t    print $appli;\n    \t    if ($doliurl) print '</a>';\n    \t    else print '</span>';\n    \t    print '</div>'.\"\\n\";\n        }\n\n\t\t// Link to bugtrack\n\t\tif (! empty($conf->global->MAIN_BUGTRACK_ENABLELINK))\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\n\t\t\t$bugbaseurl = 'https://github.com/Dolibarr/dolibarr/issues/new';\n\t\t\t$bugbaseurl.= '?title=';\n\t\t\t$bugbaseurl.= urlencode(\"Bug: \");\n\t\t\t$bugbaseurl.= '&body=';\n\t\t\t// TODO use .github/ISSUE_TEMPLATE.md to generate?\n\t\t\t$bugbaseurl .= urlencode(\"# Bug\\n\");\n\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"## Environment\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Version**: \" . DOL_VERSION . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **OS**: \" . php_uname('s') . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Web server**: \" . $_SERVER[\"SERVER_SOFTWARE\"] . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **PHP**: \" . php_sapi_name() . ' ' . phpversion() . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Database**: \" . $db::LABEL . ' ' . $db->getVersion() . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **URL**: \" . $_SERVER[\"REQUEST_URI\"] . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"## Report\\n\");\n\t\t\tprint '<div id=\"blockvmenuhelpbugreport\" class=\"blockvmenuhelp\">';\n\t\t\tprint '<a class=\"help\" target=\"_blank\" href=\"'.$bugbaseurl.'\">'.$langs->trans(\"FindBug\").'</a>';\n\t\t\tprint '</div>';\n\t\t}\n\n        print \"</div>\\n\";\n        print \"<!-- End Help Block-->\\n\";\n        print \"\\n\";\n\n        print \"</div>\\n\";\n        print \"<!-- End left menu -->\\n\";\n        print \"\\n\";\n\n\t    // Execute hook printLeftBlock\n\t    $parameters=array();\n\t    $reshook=$hookmanager->executeHooks('printLeftBlock',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t    print $hookmanager->resPrint;\n\n\t    print '</div></div> <!-- End side-nav id-left -->';\t// End div id=\"side-nav\" div id=\"id-left\"\n    }\n\n    print \"\\n\";\n    print '<!-- Begin right area -->'.\"\\n\";\n\n    if (empty($leftmenuwithoutmainarea)) main_area($title);\n}\n\n\n/**\n *  Begin main area\n *\n *  @param\tstring\t$title\t\tTitle\n *  @return\tvoid\n */\nfunction main_area($title='')\n{\n    global $conf, $langs;\n\n\tif (empty($conf->dol_hide_leftmenu)) print '<div id=\"id-right\">';\n\n    print \"\\n\";\n\n    print '<!-- Begin div class=\"fiche\" -->'.\"\\n\".'<div class=\"fiche\">'.\"\\n\";\n\n    if (! empty($conf->global->MAIN_ONLY_LOGIN_ALLOWED)) print info_admin($langs->trans(\"WarningYouAreInMaintenanceMode\",$conf->global->MAIN_ONLY_LOGIN_ALLOWED));\n}\n\n\n/**\n *  Return helpbaseurl, helppage and mode\n *\n *  @param\tstring\t\t$helppagename\t\tPage name ('EN:xxx,ES:eee,FR:fff...' or 'http://localpage')\n *  @param  Translate\t$langs\t\t\t\tLanguage\n *  @return\tarray\t\tArray of help urls\n */\nfunction getHelpParamFor($helppagename,$langs)\n{\n\t$helpbaseurl='';\n\t$helppage='';\n\t$mode='';\n\n    if (preg_match('/^http/i',$helppagename))\n    {\n        // If complete URL\n        $helpbaseurl='%s';\n        $helppage=$helppagename;\n        $mode='local';\n    }\n    else\n    {\n        // If WIKI URL\n        if (preg_match('/^es/i',$langs->defaultlang))\n        {\n            $helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n            if (preg_match('/ES:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n        }\n        if (preg_match('/^fr/i',$langs->defaultlang))\n        {\n            $helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n            if (preg_match('/FR:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n        }\n        if (empty($helppage))\t// If help page not already found\n        {\n            $helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n            if (preg_match('/EN:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n        }\n        $mode='wiki';\n    }\n    return array('helpbaseurl'=>$helpbaseurl,'helppage'=>$helppage,'mode'=>$mode);\n}\n\n\n/**\n *  Show a search area\n *\n *  @param  string\t$urlaction          Url post\n *  @param  string\t$urlobject          Url of the link under the search box\n *  @param  string\t$title              Title search area\n *  @param  string\t$htmlmorecss        Add more css\n *  @param  string\t$htmlinputname      Field Name input form\n *  @param\tstring\t$accesskey\t\t\tAccesskey\n *  @param  string  $prefhtmlinputname  Complement for id to avoid multiple same id in the page\n *  @param\tstring\t$img\t\t\t\tImage to use\n *  @return\tstring\n */\nfunction printSearchForm($urlaction, $urlobject, $title, $htmlmorecss, $htmlinputname, $accesskey='', $prefhtmlinputname='',$img='')\n{\n    global $conf,$langs;\n\n    if (empty($htmlinputid)) {\n        $htmlinputid = $htmlinputname;\n    }\n\n    $ret='';\n    $ret.='<form action=\"'.$urlaction.'\" method=\"post\" class=\"searchform\">';\n\tif (empty($conf->global->MAIN_HTML5_PLACEHOLDER))\n\t{\n        $ret.='<div class=\"menu_titre menu_titre_search\"';\n    \tif (! empty($conf->global->MAIN_HTML5_PLACEHOLDER)) $ret.=' style=\"display: inline-block\"';\n    \t$ret.='>';\n    \t$ret.='<label for=\"'.$prefhtmlinputname.$htmlinputname.'\">';\n    \t$ret.='<a class=\"vsmenu\" href=\"'.$urlobject.'\">';\n       \tif ($img && ! empty($conf->global->MAIN_HTML5_PLACEHOLDER)) $ret.=$img;\n       \telse if ($img || $title) $ret.=$img.' '.$title;\n    \t$ret.='</a>';\n    \t$ret.='</label>';\n    \t$ret.='</div>';\n\t}\n    $ret.='<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n    $ret.='<input type=\"hidden\" name=\"mode\" value=\"search\">';\n    $ret.='<input type=\"text\" class=\"flat '.$htmlmorecss.'\"';\n    if (! empty($conf->global->MAIN_HTML5_PLACEHOLDER)) $ret.=' style=\"text-indent: 22px; background-image: url(\\''.$img.'\\'); background-repeat: no-repeat; background-position: 3px;\"';\n    $ret.=($accesskey?' accesskey=\"'.$accesskey.'\"':'');\n    if (! empty($conf->global->MAIN_HTML5_PLACEHOLDER)) $ret.=' placeholder=\"'.strip_tags($title).'\"';\t\t// Will work only if MAIN_HTML5_PLACEHOLDER is set to 1\n    else $ret.=' title=\"'.$langs->trans(\"SearchOf\").''.strip_tags($title).'\"';\n    $ret.=' name=\"'.$htmlinputname.'\" id=\"'.$prefhtmlinputname.$htmlinputname.'\" />';\n    $ret.='<input type=\"submit\" class=\"button\" style=\"padding-top: 4px; padding-bottom: 4px; padding-left: 6px; padding-right: 6px\" value=\"'.$langs->trans(\"Go\").'\">';\n    $ret.=\"</form>\\n\";\n    return $ret;\n}\n\n\nif (! function_exists(\"llxFooter\"))\n{\n    /**\n     * Show HTML footer\n     * Close div /DIV class=fiche + /DIV id-right + /DIV id-container + /BODY + /HTML.\n     * If global var $delayedhtmlcontent was filled, we output it just before closing the body.\n     *\n     * @param\tstring\t$comment    A text to add as HTML comment into HTML generated page\n\t * @param\tstring\t$zone\t\t'private' (for private pages) or 'public' (for public pages)\n     * @return\tvoid\n     */\n    function llxFooter($comment='',$zone='private')\n    {\n        global $conf, $langs, $user, $object;\n        global $delayedhtmlcontent;\n\n        // Global html output events ($mesgs, $errors, $warnings)\n        dol_htmloutput_events();\n\n        // Code for search criteria persistence.\n        // Save $user->lastsearch_values if defined (define on list pages when a form field search_xxx exists)\n        if (is_object($user) && ! empty($user->lastsearch_values_tmp) && is_array($user->lastsearch_values_tmp))\n        {\n            // Clean data\n            foreach($user->lastsearch_values_tmp as $key => $val)\n            {\n                unset($_SESSION['lastsearch_values_tmp_'.$key]);\n                if (count($val))\n                {\n                    if (empty($val['sortfield'])) unset($val['sortfield']);\n                    if (empty($val['sortorder'])) unset($val['sortorder']);\n                    dol_syslog('Save lastsearch_values_tmp_'.$key.'='.json_encode($val, 0).\" (systematic recording of last search criteria)\");\n                    $_SESSION['lastsearch_values_tmp_'.$key]=json_encode($val);\n                    unset($_SESSION['lastsearch_values_'.$key]);\n                }\n            }\n        }\n\n        // Core error message\n        if (! empty($conf->global->MAIN_CORE_ERROR))\n        {\n            // Ajax version\n            if ($conf->use_javascript_ajax)\n            {\n                $title = img_warning().' '.$langs->trans('CoreErrorTitle');\n                print ajax_dialog($title, $langs->trans('CoreErrorMessage'));\n            }\n            // html version\n            else\n            {\n                $msg = img_warning().' '.$langs->trans('CoreErrorMessage');\n                print '<div class=\"error\">'.$msg.'</div>';\n            }\n\n            //define(\"MAIN_CORE_ERROR\",0);      // Constant was defined and we can't change value of a constant\n        }\n\n        print \"\\n\\n\";\n\n        print '</div> <!-- End div class=\"fiche\" -->'.\"\\n\"; // End div fiche\n\n\t\tif (empty($conf->dol_hide_leftmenu)) print '</div> <!-- End div id-right -->'; // End div id-right\n\n        print \"\\n\";\n        if ($comment) print '<!-- '.$comment.' -->'.\"\\n\";\n\n        printCommonFooter($zone);\n\n        if (empty($conf->dol_hide_leftmenu) && empty($conf->dol_use_jmobile)) print '</div> <!-- End div id-container -->'.\"\\n\";\t// End div container\n\n        if (! empty($delayedhtmlcontent)) print $delayedhtmlcontent;\n\n        // TODO Move this in lib_head.js.php\n\n        // Wrapper to show tooltips (html or onclick popup)\n        if (! empty($conf->use_javascript_ajax) && empty($conf->dol_no_mouse_hover))\n        {\n    \t\tprint \"\\n<!-- JS CODE TO ENABLE tipTip on all object with class classfortooltip -->\\n\";\n    \t\tprint '<script type=\"text/javascript\">\n            \tjQuery(document).ready(function () {\n            \t\tjQuery(\".classfortooltip\").tipTip({maxWidth: \"'.dol_size(($conf->browser->layout == 'phone' ? 400 : 700),'width').'px\", edgeOffset: 10, delay: 50, fadeIn: 50, fadeOut: 50});\n            \t\tjQuery(\".classfortooltiponclicktext\").dialog({ width: 500, autoOpen: false });\n            \t\tjQuery(\".classfortooltiponclick\").click(function () {\n            \t\t    console.log(\"We click on tooltip for element with dolid=\"+$(this).attr(\\'dolid\\'));\n            \t\t    if ($(this).attr(\\'dolid\\'))\n            \t\t    {\n                            obj=$(\"#idfortooltiponclick_\"+$(this).attr(\\'dolid\\'));\n            \t\t        obj.dialog(\"open\");\n            \t\t    }\n            \t\t});\n                });\n            </script>' . \"\\n\";\n        }\n\n        // Wrapper to manage document_preview\n        if (! empty($conf->use_javascript_ajax) && ($conf->browser->layout != 'phone'))\n        {\n            print \"\\n<!-- JS CODE TO ENABLE document_preview -->\\n\";\n            print '<script type=\"text/javascript\">\n                jQuery(document).ready(function () {\n\t\t\t        jQuery(\".documentpreview\").click(function () {\n            \t\t    console.log(\"We click on preview for element with href=\"+$(this).attr(\\'href\\')+\" mime=\"+$(this).attr(\\'mime\\'));\n            \t\t    document_preview($(this).attr(\\'href\\'), $(this).attr(\\'mime\\'), \\''.dol_escape_js($langs->transnoentities(\"Preview\")).'\\');\n                \t\treturn false;\n        \t\t\t});\n        \t\t});\n            </script>' . \"\\n\";\n        }\n\n        // Wrapper to manage dropdown\n        if (! empty($conf->use_javascript_ajax) && ! defined('JS_JQUERY_DISABLE_DROPDOWN'))\n        {\n            print \"\\n<!-- JS CODE TO ENABLE dropdown -->\\n\";\n            print '<script type=\"text/javascript\">\n                jQuery(document).ready(function () {\n                  $(\".dropdown dt a\").on(\\'click\\', function () {\n                      //console.log($(this).parent().parent().find(\\'dd ul\\'));\n                      $(this).parent().parent().find(\\'dd ul\\').slideToggle(\\'fast\\');\n                      // Note: Did not find a way to get exact height (value is update at exit) so i calculate a generic from nb of lines\n                      heigthofcontent = 21 * $(this).parent().parent().find(\\'dd div ul li\\').length;\n                      if (heigthofcontent > 300) heigthofcontent = 300; // limited by max-height on css .dropdown dd ul\n                      posbottom = $(this).parent().parent().find(\\'dd\\').offset().top + heigthofcontent + 8;\n                      //console.log(posbottom);\n                      var scrollBottom = $(window).scrollTop() + $(window).height();\n                      //console.log(scrollBottom);\n                      diffoutsidebottom = (posbottom - scrollBottom);\n                      console.log(\"heigthofcontent=\"+heigthofcontent+\", diffoutsidebottom (posbottom=\"+posbottom+\" - scrollBottom=\"+scrollBottom+\") = \"+diffoutsidebottom);\n                      if (diffoutsidebottom > 0)\n                      {\n                            pix = \"-\"+(diffoutsidebottom+8)+\"px\";\n                            console.log(\"We reposition top by \"+pix);\n                            $(this).parent().parent().find(\\'dd\\').css(\"top\", pix);\n                      }\n                      // $(\".dropdown dd ul\").slideToggle(\\'fast\\');\n                  });\n                  $(\".dropdowncloseonclick\").on(\\'click\\', function () {\n                     console.log(\"Link has class dropdowncloseonclick, so we close/hide the popup ul\");\n                     $(this).parent().parent().hide();\n                  });\n\n                  $(document).bind(\\'click\\', function (e) {\n                      var $clicked = $(e.target);\n                      if (!$clicked.parents().hasClass(\"dropdown\")) $(\".dropdown dd ul\").hide();\n                  });\n                });\n                </script>';\n        }\n\n        // Wrapper to add log when clicking on download or preview\n        if (! empty($conf->blockedlog->enabled) && is_object($object) && $object->id > 0 && $object->statut > 0)\n        {\n            if (in_array($object->element, array('facture')))       // Restrict for the moment to element 'facture'\n            {\n                print \"\\n<!-- JS CODE TO ENABLE log when making a download or a preview of a document -->\\n\";\n                ?>\n    \t\t\t<script type=\"text/javascript\">\n    \t\t\tjQuery(document).ready(function () {\n    \t\t\t\t$('a.documentpreview').click(function() {\n    \t\t\t\t\t$.post('<?php echo DOL_URL_ROOT.\"/blockedlog/ajax/block-add.php\" ?>'\n    \t\t\t\t\t\t\t, {\n    \t\t\t\t\t\t\t\tid:<?php echo $object->id; ?>\n    \t\t\t\t\t\t\t\t, element:'<?php echo $object->element ?>'\n    \t\t\t\t\t\t\t\t, action:'DOC_PREVIEW'\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t);\n    \t\t\t\t});\n    \t\t\t\t$('a.documentdownload').click(function() {\n    \t\t\t\t\t$.post('<?php echo DOL_URL_ROOT.\"/blockedlog/ajax/block-add.php\" ?>'\n    \t\t\t\t\t\t\t, {\n    \t\t\t\t\t\t\t\tid:<?php echo $object->id; ?>\n    \t\t\t\t\t\t\t\t, element:'<?php echo $object->element ?>'\n    \t\t\t\t\t\t\t\t, action:'DOC_DOWNLOAD'\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t);\n    \t\t\t\t});\n    \t\t\t});\n    \t\t\t</script>\n\t\t\t\t<?php\n    \t\t}\n       \t}\n\n\n\t\t// A div for the address popup\n\t\tprint \"\\n<!-- A div to allow dialog popup -->\\n\";\n\t\tprint '<div id=\"dialogforpopup\" style=\"display: none;\"></div>'.\"\\n\";\n\n        print \"</body>\\n\";\n        print \"</html>\\n\";\n    }\n}\n\n"], "filenames": ["htdocs/adherents/subscription/info.php", "htdocs/cashdesk/tpl/facturation1.tpl.php", "htdocs/cashdesk/tpl/liste_articles.tpl.php", "htdocs/cashdesk/tpl/menu.tpl.php", "htdocs/cashdesk/tpl/ticket.tpl.php", "htdocs/cashdesk/tpl/validation1.tpl.php", "htdocs/cashdesk/tpl/validation2.tpl.php", "htdocs/comm/multiprix.php", "htdocs/fourn/index.php", "htdocs/main.inc.php"], "buggy_code_start_loc": [39, 20, 18, 20, 18, 17, 18, 33, 36, 84], "buggy_code_end_loc": [50, 20, 18, 20, 18, 17, 18, 131, 304, 85], "fixing_code_start_loc": [39, 21, 19, 21, 19, 18, 19, 33, 36, 84], "fixing_code_end_loc": [49, 29, 27, 29, 28, 26, 27, 132, 304, 86], "type": "CWE-200", "message": "Dolibarr ERP/CRM version 6.0.4 does not block direct requests to *.tpl.php files, which allows remote attackers to obtain sensitive information.", "other": {"cve": {"id": "CVE-2017-17898", "sourceIdentifier": "cve@mitre.org", "published": "2017-12-27T17:08:21.937", "lastModified": "2022-11-17T17:21:59.260", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Dolibarr ERP/CRM version 6.0.4 does not block direct requests to *.tpl.php files, which allows remote attackers to obtain sensitive information."}, {"lang": "es", "value": "Dolibarr ERP/CRM versi\u00f3n 6.0.4 no bloquea peticiones directas en archivos *.tpl.php, lo que permite que atacantes remotos obtengan informaci\u00f3n sensible."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-200"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:dolibarr:dolibarr_erp\\/crm:6.0.4:*:*:*:*:*:*:*", "matchCriteriaId": "C6D63C77-0B7E-4C05-8775-09180DB394ED"}]}]}], "references": [{"url": "https://github.com/Dolibarr/dolibarr/commit/4a5988accbb770b74105baacd5a034689272128c", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/Dolibarr/dolibarr/commit/6a62e139604dbbd5729e57df2433b37a5950c35c", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Dolibarr/dolibarr/commit/4a5988accbb770b74105baacd5a034689272128c"}}