{"buggy_code": ["# Release 2.42.0 27-02-2023\n\n- Add flag --disable_jwt_audience_service_name_check (#779)\n- update go version to 1.18 (#780)\n\n# Release 2.41.0 11-01-2023\n\n- Increase ServiceControl Check cache duration (#773)\n- Bug Fix for not using custom SA in flag \"--service_account_key\" for tracing (#772)\n- Bug Fix for writing trace_id in the endpoint log when trace is disabled (#769)\n- Add flag \"--client_ip_from_forwarded_header\" to enable extracting client IP from forward header (#764)\n- Add keep-alive for upstream http2 connection for 30s interval and 10s timeout (#763)\n\n# Release 2.40.0 05-12-2022\n\n- Add two transcoding flags: \"transcoding_stream_newline_delimited\" and \"transcoding_case_insensitive_enum_parsing\" (#760)\n- Enable jwt cache by default for jwt authentication. (#759)\n- Update envoy to the top of the tree at 11/30/2022 (#758)\n- Increase ID token refetch buffer (#757)\n- Update to Envoy 1.24.0 (#755)\n- Add two jwt_authn flags: \"jwt_cache_size\" and \"jwks_async_fetch_fast_listener\" (#753)\n\n# Release 2.39.0 18-10-2022\n\n- Add a flag \"--backend_cluster_maximum_requests (#736)\n- fix build_envoy_image failure (#737)\n- Update gcloud_build_image script to be more safe. (#730)\n- Enforce the default http rule (#725)\n- Add option TranscodingRejectCollision for transcoding. Default is false. (#723)\n\n# Release 2.38.0 26-07-2022\n\n- Upgrade envoy to v1.23.0. (#720)\n- Update to latest service_control_client (#713)\n\n# Release 2.37.0 16-06-2022\n\n- Added two new options to flag backend_dns_lookup_family and changed its default to \"v4preferred\"  (#705)\n- Update base alpine image to 3.16 (#703)\n- Update service-control-client to 05/31/2022 (#697)\n\n# Release 2.36.0 25-04-2022\n\n- Upgraded Envoy to 1.22.0 (#684)\n- Added response gzip,brotli compression (#675)\n\n# Release 2.35.0 22-03-2022\n\n- Update Envoy to v1.21.1 (#670)\n- Remove envoy runtime flag preserve_downstream_scheme (#667)\n- Correctly escape user-provided regex paths (#664)\n- Expose the `--config-yaml` envoy flag  (#662)\n\n# Release 2.34.0 01-02-2022\n\n- Expose flag `--ads_named_pipe` (#658)\n- Update Envoy to v1.21.0 (#653)\n- Support url templates with variables without wildcard (#654)\n\n# Release 2.33.0 06-01-2022\n\n- Support http.rules in the service config for gRPC transcoding (#640)\n- Update help text for flag `--enable_strict_transport_security` (#642)\n- Disallow colon in url wildcard path segment for route match (#639)\n- Update docker base image to use alpine:3.15 (#638)\n\n# Release 2.32.0 04-11-2021\n\n- Support health check gRPC backend (#629)\n- Support unescape plus in grpc transcoding (#630)\n- Skip google discovery API during config generation. (#632)\n\n# Release 2.31.0 19-10-2021\n\n- Update Envoy to v1.20.0 (#625)\n- Add openssl to the base alpine image (#623)\n- Remove expired DST_Root_CA_X3.crt root ca (#617)\n- Use alpine as base image (#611)\n- Update gcloud_build_image again to support GAR (#613)\n- Update application log format (#608)\n\n# Release 2.30.3 15-09-2021\n\n- Add X-User-Agent as default cors_allow_headers (#598)\n- Add jwt_pad_forward_payload_header flag (#593)\n\n# Release 2.30.2 01-09-2021\n\n- Update Envoy to top of tree at 2021-08-24 (Envoy SHA `6f2726`) (#588)\n- Improve gcsrunner remote dependency handling (#586)\n\n# Release 2.30.1 12-08-2021\n\n- Fix basic CORS with default cors_allow_origin=* (#579)\n\n# Release 2.30.0 03-08-2021\n\n- Update service_control_client_cxx with improved quota cache (#573)\n- Unify route match policy with CORS filter (#575)\n- Add jwks fetch retry flags for jwt authentication (#564)\n- Update Envoy to 1.19.0 (#572)\n\n# Release 2.29.1 14-07-2021\n\n- Support downstream mTLS (#560)\n- Support backendRetryOnStatusCodes (#554)\n\n# Release 2.29.0 30-06-2021\n\n- Restored the old way of setting scheme header according to upstream connection security level (#546)\n\n# Release 2.28.0 15-06-2021\n- Add flag to enable operation name header (#535)\n- Enable jwks async fetch by default (#534)\n- Update envoy to 06/09/2021, revert the breaking change of padding the forward jwt payload header(#532)\n\n# Release 2.27.0 01-06-2021\n- Fix overhead latency calculation for backend timeout (#505)\n- API Gateway: Reduce backoff initial latency. (#520)\n\n# Release 2.26.1 19-05-2021\n\nNo changes involve Cloud Endpoints users.\n\n# Release 2.26.0 13-05-2021\n\n- Upgrade to Envoy v1.18.3\n- Add path normalization options for CVE-2021-29492 (#511)\n- Add flag `--cors_max_age` to support set Access-Control-Max-Age response header (#502)\n- Add perTryTimeout for doing retry when the upstream times out (#509)\n- Support for \"eu\" zone via -z in gcloud_build_image (#490)\n- Propagate trace context headers to Service Control Check (#487)\n\n# Release 2.25.0 23-02-2021\n\n- Add flags to add extra headers (#480)\n\n# Release 2.24.0 01-02-2021\n\n- Respond with HTTP 400 when required headers are omitted in CORS preflight request (#468)\n- Allow backend address override (#464)\n- Propagate trace ID to correlate access logs and traces (#463)\n\n# Release 2.23.0 13-01-2021\n\n- Automatically configure stream idle timeouts (#457)\n- Add 405 directResponse in router (#451)\n- Ensure service-config related errors are actionable (#450)\n- Remove warning with empty requestTypeName (#448)\n- Align behavior of `X-Forwarded-Authorization` and `X-Endpoint-API-UserInfo` headers (#447)\n- Revamp status codes in access log (#444)\n\n# Release 2.22.0 15-12-2020\n\n- Enable fallback to x-cloud-trace-context by default (#439)\n- backend retry config options (#436)\n- Handle trailing backslash for match paths (#435) (#440)\n\n# Release 2.21.0 02-12-2020\n\n- Fix request header size (#425)\n- Update envoy to jwt clock_skew change (#420)\n- Support AuthenticationRule.allow_without_credential (#419)\n- Enable traceparent trace context propagation by default (#416)\n- Envoy changes to use DependencyErrorBehavior in TokenSubscriber (#406)\n\n# Release 2.20.0 05-11-2020\n\n- ConfigMgr changes: Jwt_authn use per-route config, remove path_matcher (#403)\n- Use syntax parsing to generate route match instead of regex (#394)\n- Replace snakeName with jsonName using syntax parsing (#393)\n- Change configmgr to replace backend_routing with path_rewrite filter (#388)\n- Switch ads to unix domain socket (#386)\n- Path rewrite filter: add envoy filter related files. (#384)\n- Add path_rewrite filter config and config_parser (#380)\n- Change backend_auth to use per-route config (#376)\n- Add flags to specify `cipher_suites` for TLS certificate (#379)\n- Add option to disable OpenID Connect Discovery (#378)\n- Fix path extraction for auto-gen cors methods (#377)\n- Use per-route config for ServiceControl filter (#368)\n- Support for complicated http_template in envoy route match (#370)\n- Automatically disable backend auth on non-GCP platforms (#367)\n- Add response code detail in service control report (#349)\n- Support BackendRule deadline configuration in sidecar mode (#364)\n- Enable route config for local backend in sidecar mode (#358)\n- Increase API version to v9 (#360)\n\n# Release 2.19.0 29-09-2020\n\n- b/169095072: Fix path matcher misleading error message (#350)\n- Deprecated flag --service_control_network_fail_open (#348)\n- Add flag `--connection_buffer_limit_bytes` (#344)\n- Enable gRPC when downstream is HTTP/1.1 (#336)\n- Add grpc_metadata_scrubber filter (#328)\n\n# Release 2.18.0 16-09-2020\n\n- Add name prefix for backend/jwtProvider cluster (#330)\n- Split specifying root certs for backend vs sidestream SSL clients (#325)\n- Fix reading the remote client IP when deploying ESPv2 on Cloud Run (#318)\n- Rich access logging of http request information (#316)\n- Support IP in backend address (#323)\n- For Cloud Run, report location with region instead of zone (#314)\n\n# Release 2.17.0 02-09-2020\n\n- Support GCP deployment with service account key (#308)\n- Add default location in Report call for non_gcp (#307)\n- Set API version in autogenerated CORS methods (#311)\n- Better naming of healthz and cors operations (#302)\n- Add ApiKeyState into report log entry (#305)\n- Fix error with reporting invalid API Keys (#295)\n- Remove grpc_stats filter (#299)\n- Cleanup un-used metrics in report (#296, #300)\n- Reduce noise of Envoy logs with `--enable_debug` (#293)\n\n# Release 2.16.0 18-08-2020\n\n- Add more port restrictions for usability (#281)\n- Add retry mechanism on callgoogleapis when it comes into 429 (#278)\n\n# Release 2.15.0 11-08-2020\n\n- Support wildcards in envoy route matching with dynamic routing (#262)\n- For local backend address, use HTTP as default schema (#263)\n- Fix tracing sample rate (#249)\n- Set `x-envoy-original-path` in backend routing filter for access logging (#241)\n- Add api_key in filter_state for access logging (#233)\n- Support ESP versions in `gcloud_build_image` (#229)\n\n# Release 2.14.0 20-07-2020\n\n- Config versioning v6 to v7 (#226)\n- Move snake to json segment mapping to per-operation instead of global (#218)\n\n# Release 2.13.0 08-07-2020\n\n- Update envoy to 7/6/2020 (#217)\n- Fix a rare use-after-free by creating FilterStats in client_cache (#212)\n- Support api config versioning: add v6 to api folder name and package name (#210)\n\n# Release 2.12.0 24-06-2020\n\n- Send error message as JSON format in response (#206)\n- Add consumer-type and consumer-number headers (#200)\n- Increase IMDS access token timeout to 30s (#198)\n- More stats for Backend Auth, handle rejections properly. (#191)\n- Add flag to control production prefix in generated headers (#184)\n\n# Release 2.11.0 03-06-2020\n\n- Fix grpc-web: move grpc-web filter in front of transcoder (#176)\n- Migrate Envoy configs from api/v2 to api/v3 (#169, #175, #174)\n- Ensure all consumer/producer errors are logged in stats (#166)\n- Update envoy to 2020-05-26 (#165)\n- Handle errors and test stats in Backend Routing (#164)\n- Implement `denied_consumer_quota` and `denied_producer_error` stats (#163)\n\n# Release 2.10.0 18-05-2020\n\n- Implement `denied_consumer_blocked` and `denied_consumer_error` stats (#156)\n- Implement `denied_control_plane_fault` (#155)\n- Add statistical counter for check/allocateQuota/report call status (#151)\n- Add latency in ServiceControl statistics (#146)\n\n# Release 2.9.0 30-04-2020\n\n- Forward `Authorization` header in JWT Authn filter (#141)\n- Add flag: `dns_resolver_address` (#133)\n- Add flags: `access_log` and `access_log_format` (#129)\n- Covert non-5xx sidestream errors to 500 Internal Server Error (#122)\n- Add flag: `underscores_in_headers` (#119)\n\n# Release 2.8.0 07-04-2020\n\n- Apply retry and `network_fail_open` for failed server response properly (#110)\n- Align `--cloud_trace_url_override` with ESPv1 (#107)\n- Support `generate_self_signed_certificate` (#105)\n- Support websocket (#102)\n- TLS support for grpcs backend (#95)\n\n# Release 2.7.0 25-03-2020\n\n- Add `X-Forwarded-Authorization` header (#90)\n- Detect rolloutId change from Google Service Control (#83)\n- Support custom JWT locations (#44)\n- Add missing logEntries for report (#68)\n- Support strict transport security (#77)\n- Add mTLS support for upstream connection (#52)\n- Add flag `--disable_cloud_trace_auto_sampling` (#81)\n- Add flags for print options in JSON transcoder (#57)\n- Add flags for unknown query parameters in JSON transcoder\u2026 (#79)\n- Add flags for Admin control (#67)\n- Add flags `ssl_minimum_protocol` and `ssl_maximum_protocol` for downstream (#58)\n- Suppress envoy debug headers when `--enable_debug=false` (#82)\n\n# Release 2.6.0 04-03-2020\n\n- Signal ready only when all tokens are successfully retried (#37)\n- Include SA email in fetched iam id token (#40)\n- Add TLS support for downstream (#32)\n- Support HTTP protocols (#36)\n- Remove backend protocol flag (#31)\n- Support auto binding for grpc transcoding (#33)\n\n# Release 2.5.0 19-02-2020\n\n- Auto-generate JWT Audience if no audiences are set in service config\n- Retry after failed token fetch\n- Handle `disable_auth` in endpoint service config\n- Add `listener_port` and `http2_port` flags\n\n# Release 2.4.0 06-02-2020\n\n- Fix a crash on race condition during config change.\n- Fix CORS bug by adding a CORS route for Envoy cors filter\n- Support root path / in service config.\n- Increase max program size limit for regex matching in Envoy\n- Support http, https, grpc and grpcs scheme in BackendRule address\n- Use IAM with delegation in backend auth and service control\n- Support deadlines in BackendRule\n- Add trace events when checking service control cache\n\n# Release 2.2.0 22-01-2020\n\n- Fix bug in support for multiple services (APIs) in one service config\n- Update CORS selector display names with path suffix instead of index\n- Support `additional_binding` options for gRPC-JSON transcoding\n- Fix bug in OpenID Connect Discovery\n- Add x509 support for JWT authentication\n- Deprecated `--enable_backend_routing` flag; automatically set based on service configuration\n\n# Release 2.1.0 07-01-2020\n\n- Add support for healthz\n- Support multiple services(apis) in one service config\n- Solve the permission denied when open /etc/endpoints/service.json\n- Improve error message if service config is not found\n- Handle missing :path or :method headers in service control filter\n\n# Release 2.0.0 17-12-2019\n"], "fixing_code": ["# Release 2.43.0 28-03-2023\n\n- move x-http-method-override to beginning of filter chain (#801)\n- Reduce default jwt_cache_size to 1000 (#798)\n- improve parsing and handling of ServiceControlUrl (#800)\n\n# Release 2.42.0 27-02-2023\n\n- Add flag --disable_jwt_audience_service_name_check (#779)\n- update go version to 1.18 (#780)\n\n# Release 2.41.0 11-01-2023\n\n- Increase ServiceControl Check cache duration (#773)\n- Bug Fix for not using custom SA in flag \"--service_account_key\" for tracing (#772)\n- Bug Fix for writing trace_id in the endpoint log when trace is disabled (#769)\n- Add flag \"--client_ip_from_forwarded_header\" to enable extracting client IP from forward header (#764)\n- Add keep-alive for upstream http2 connection for 30s interval and 10s timeout (#763)\n\n# Release 2.40.0 05-12-2022\n\n- Add two transcoding flags: \"transcoding_stream_newline_delimited\" and \"transcoding_case_insensitive_enum_parsing\" (#760)\n- Enable jwt cache by default for jwt authentication. (#759)\n- Update envoy to the top of the tree at 11/30/2022 (#758)\n- Increase ID token refetch buffer (#757)\n- Update to Envoy 1.24.0 (#755)\n- Add two jwt_authn flags: \"jwt_cache_size\" and \"jwks_async_fetch_fast_listener\" (#753)\n\n# Release 2.39.0 18-10-2022\n\n- Add a flag \"--backend_cluster_maximum_requests (#736)\n- fix build_envoy_image failure (#737)\n- Update gcloud_build_image script to be more safe. (#730)\n- Enforce the default http rule (#725)\n- Add option TranscodingRejectCollision for transcoding. Default is false. (#723)\n\n# Release 2.38.0 26-07-2022\n\n- Upgrade envoy to v1.23.0. (#720)\n- Update to latest service_control_client (#713)\n\n# Release 2.37.0 16-06-2022\n\n- Added two new options to flag backend_dns_lookup_family and changed its default to \"v4preferred\"  (#705)\n- Update base alpine image to 3.16 (#703)\n- Update service-control-client to 05/31/2022 (#697)\n\n# Release 2.36.0 25-04-2022\n\n- Upgraded Envoy to 1.22.0 (#684)\n- Added response gzip,brotli compression (#675)\n\n# Release 2.35.0 22-03-2022\n\n- Update Envoy to v1.21.1 (#670)\n- Remove envoy runtime flag preserve_downstream_scheme (#667)\n- Correctly escape user-provided regex paths (#664)\n- Expose the `--config-yaml` envoy flag  (#662)\n\n# Release 2.34.0 01-02-2022\n\n- Expose flag `--ads_named_pipe` (#658)\n- Update Envoy to v1.21.0 (#653)\n- Support url templates with variables without wildcard (#654)\n\n# Release 2.33.0 06-01-2022\n\n- Support http.rules in the service config for gRPC transcoding (#640)\n- Update help text for flag `--enable_strict_transport_security` (#642)\n- Disallow colon in url wildcard path segment for route match (#639)\n- Update docker base image to use alpine:3.15 (#638)\n\n# Release 2.32.0 04-11-2021\n\n- Support health check gRPC backend (#629)\n- Support unescape plus in grpc transcoding (#630)\n- Skip google discovery API during config generation. (#632)\n\n# Release 2.31.0 19-10-2021\n\n- Update Envoy to v1.20.0 (#625)\n- Add openssl to the base alpine image (#623)\n- Remove expired DST_Root_CA_X3.crt root ca (#617)\n- Use alpine as base image (#611)\n- Update gcloud_build_image again to support GAR (#613)\n- Update application log format (#608)\n\n# Release 2.30.3 15-09-2021\n\n- Add X-User-Agent as default cors_allow_headers (#598)\n- Add jwt_pad_forward_payload_header flag (#593)\n\n# Release 2.30.2 01-09-2021\n\n- Update Envoy to top of tree at 2021-08-24 (Envoy SHA `6f2726`) (#588)\n- Improve gcsrunner remote dependency handling (#586)\n\n# Release 2.30.1 12-08-2021\n\n- Fix basic CORS with default cors_allow_origin=* (#579)\n\n# Release 2.30.0 03-08-2021\n\n- Update service_control_client_cxx with improved quota cache (#573)\n- Unify route match policy with CORS filter (#575)\n- Add jwks fetch retry flags for jwt authentication (#564)\n- Update Envoy to 1.19.0 (#572)\n\n# Release 2.29.1 14-07-2021\n\n- Support downstream mTLS (#560)\n- Support backendRetryOnStatusCodes (#554)\n\n# Release 2.29.0 30-06-2021\n\n- Restored the old way of setting scheme header according to upstream connection security level (#546)\n\n# Release 2.28.0 15-06-2021\n- Add flag to enable operation name header (#535)\n- Enable jwks async fetch by default (#534)\n- Update envoy to 06/09/2021, revert the breaking change of padding the forward jwt payload header(#532)\n\n# Release 2.27.0 01-06-2021\n- Fix overhead latency calculation for backend timeout (#505)\n- API Gateway: Reduce backoff initial latency. (#520)\n\n# Release 2.26.1 19-05-2021\n\nNo changes involve Cloud Endpoints users.\n\n# Release 2.26.0 13-05-2021\n\n- Upgrade to Envoy v1.18.3\n- Add path normalization options for CVE-2021-29492 (#511)\n- Add flag `--cors_max_age` to support set Access-Control-Max-Age response header (#502)\n- Add perTryTimeout for doing retry when the upstream times out (#509)\n- Support for \"eu\" zone via -z in gcloud_build_image (#490)\n- Propagate trace context headers to Service Control Check (#487)\n\n# Release 2.25.0 23-02-2021\n\n- Add flags to add extra headers (#480)\n\n# Release 2.24.0 01-02-2021\n\n- Respond with HTTP 400 when required headers are omitted in CORS preflight request (#468)\n- Allow backend address override (#464)\n- Propagate trace ID to correlate access logs and traces (#463)\n\n# Release 2.23.0 13-01-2021\n\n- Automatically configure stream idle timeouts (#457)\n- Add 405 directResponse in router (#451)\n- Ensure service-config related errors are actionable (#450)\n- Remove warning with empty requestTypeName (#448)\n- Align behavior of `X-Forwarded-Authorization` and `X-Endpoint-API-UserInfo` headers (#447)\n- Revamp status codes in access log (#444)\n\n# Release 2.22.0 15-12-2020\n\n- Enable fallback to x-cloud-trace-context by default (#439)\n- backend retry config options (#436)\n- Handle trailing backslash for match paths (#435) (#440)\n\n# Release 2.21.0 02-12-2020\n\n- Fix request header size (#425)\n- Update envoy to jwt clock_skew change (#420)\n- Support AuthenticationRule.allow_without_credential (#419)\n- Enable traceparent trace context propagation by default (#416)\n- Envoy changes to use DependencyErrorBehavior in TokenSubscriber (#406)\n\n# Release 2.20.0 05-11-2020\n\n- ConfigMgr changes: Jwt_authn use per-route config, remove path_matcher (#403)\n- Use syntax parsing to generate route match instead of regex (#394)\n- Replace snakeName with jsonName using syntax parsing (#393)\n- Change configmgr to replace backend_routing with path_rewrite filter (#388)\n- Switch ads to unix domain socket (#386)\n- Path rewrite filter: add envoy filter related files. (#384)\n- Add path_rewrite filter config and config_parser (#380)\n- Change backend_auth to use per-route config (#376)\n- Add flags to specify `cipher_suites` for TLS certificate (#379)\n- Add option to disable OpenID Connect Discovery (#378)\n- Fix path extraction for auto-gen cors methods (#377)\n- Use per-route config for ServiceControl filter (#368)\n- Support for complicated http_template in envoy route match (#370)\n- Automatically disable backend auth on non-GCP platforms (#367)\n- Add response code detail in service control report (#349)\n- Support BackendRule deadline configuration in sidecar mode (#364)\n- Enable route config for local backend in sidecar mode (#358)\n- Increase API version to v9 (#360)\n\n# Release 2.19.0 29-09-2020\n\n- b/169095072: Fix path matcher misleading error message (#350)\n- Deprecated flag --service_control_network_fail_open (#348)\n- Add flag `--connection_buffer_limit_bytes` (#344)\n- Enable gRPC when downstream is HTTP/1.1 (#336)\n- Add grpc_metadata_scrubber filter (#328)\n\n# Release 2.18.0 16-09-2020\n\n- Add name prefix for backend/jwtProvider cluster (#330)\n- Split specifying root certs for backend vs sidestream SSL clients (#325)\n- Fix reading the remote client IP when deploying ESPv2 on Cloud Run (#318)\n- Rich access logging of http request information (#316)\n- Support IP in backend address (#323)\n- For Cloud Run, report location with region instead of zone (#314)\n\n# Release 2.17.0 02-09-2020\n\n- Support GCP deployment with service account key (#308)\n- Add default location in Report call for non_gcp (#307)\n- Set API version in autogenerated CORS methods (#311)\n- Better naming of healthz and cors operations (#302)\n- Add ApiKeyState into report log entry (#305)\n- Fix error with reporting invalid API Keys (#295)\n- Remove grpc_stats filter (#299)\n- Cleanup un-used metrics in report (#296, #300)\n- Reduce noise of Envoy logs with `--enable_debug` (#293)\n\n# Release 2.16.0 18-08-2020\n\n- Add more port restrictions for usability (#281)\n- Add retry mechanism on callgoogleapis when it comes into 429 (#278)\n\n# Release 2.15.0 11-08-2020\n\n- Support wildcards in envoy route matching with dynamic routing (#262)\n- For local backend address, use HTTP as default schema (#263)\n- Fix tracing sample rate (#249)\n- Set `x-envoy-original-path` in backend routing filter for access logging (#241)\n- Add api_key in filter_state for access logging (#233)\n- Support ESP versions in `gcloud_build_image` (#229)\n\n# Release 2.14.0 20-07-2020\n\n- Config versioning v6 to v7 (#226)\n- Move snake to json segment mapping to per-operation instead of global (#218)\n\n# Release 2.13.0 08-07-2020\n\n- Update envoy to 7/6/2020 (#217)\n- Fix a rare use-after-free by creating FilterStats in client_cache (#212)\n- Support api config versioning: add v6 to api folder name and package name (#210)\n\n# Release 2.12.0 24-06-2020\n\n- Send error message as JSON format in response (#206)\n- Add consumer-type and consumer-number headers (#200)\n- Increase IMDS access token timeout to 30s (#198)\n- More stats for Backend Auth, handle rejections properly. (#191)\n- Add flag to control production prefix in generated headers (#184)\n\n# Release 2.11.0 03-06-2020\n\n- Fix grpc-web: move grpc-web filter in front of transcoder (#176)\n- Migrate Envoy configs from api/v2 to api/v3 (#169, #175, #174)\n- Ensure all consumer/producer errors are logged in stats (#166)\n- Update envoy to 2020-05-26 (#165)\n- Handle errors and test stats in Backend Routing (#164)\n- Implement `denied_consumer_quota` and `denied_producer_error` stats (#163)\n\n# Release 2.10.0 18-05-2020\n\n- Implement `denied_consumer_blocked` and `denied_consumer_error` stats (#156)\n- Implement `denied_control_plane_fault` (#155)\n- Add statistical counter for check/allocateQuota/report call status (#151)\n- Add latency in ServiceControl statistics (#146)\n\n# Release 2.9.0 30-04-2020\n\n- Forward `Authorization` header in JWT Authn filter (#141)\n- Add flag: `dns_resolver_address` (#133)\n- Add flags: `access_log` and `access_log_format` (#129)\n- Covert non-5xx sidestream errors to 500 Internal Server Error (#122)\n- Add flag: `underscores_in_headers` (#119)\n\n# Release 2.8.0 07-04-2020\n\n- Apply retry and `network_fail_open` for failed server response properly (#110)\n- Align `--cloud_trace_url_override` with ESPv1 (#107)\n- Support `generate_self_signed_certificate` (#105)\n- Support websocket (#102)\n- TLS support for grpcs backend (#95)\n\n# Release 2.7.0 25-03-2020\n\n- Add `X-Forwarded-Authorization` header (#90)\n- Detect rolloutId change from Google Service Control (#83)\n- Support custom JWT locations (#44)\n- Add missing logEntries for report (#68)\n- Support strict transport security (#77)\n- Add mTLS support for upstream connection (#52)\n- Add flag `--disable_cloud_trace_auto_sampling` (#81)\n- Add flags for print options in JSON transcoder (#57)\n- Add flags for unknown query parameters in JSON transcoder\u2026 (#79)\n- Add flags for Admin control (#67)\n- Add flags `ssl_minimum_protocol` and `ssl_maximum_protocol` for downstream (#58)\n- Suppress envoy debug headers when `--enable_debug=false` (#82)\n\n# Release 2.6.0 04-03-2020\n\n- Signal ready only when all tokens are successfully retried (#37)\n- Include SA email in fetched iam id token (#40)\n- Add TLS support for downstream (#32)\n- Support HTTP protocols (#36)\n- Remove backend protocol flag (#31)\n- Support auto binding for grpc transcoding (#33)\n\n# Release 2.5.0 19-02-2020\n\n- Auto-generate JWT Audience if no audiences are set in service config\n- Retry after failed token fetch\n- Handle `disable_auth` in endpoint service config\n- Add `listener_port` and `http2_port` flags\n\n# Release 2.4.0 06-02-2020\n\n- Fix a crash on race condition during config change.\n- Fix CORS bug by adding a CORS route for Envoy cors filter\n- Support root path / in service config.\n- Increase max program size limit for regex matching in Envoy\n- Support http, https, grpc and grpcs scheme in BackendRule address\n- Use IAM with delegation in backend auth and service control\n- Support deadlines in BackendRule\n- Add trace events when checking service control cache\n\n# Release 2.2.0 22-01-2020\n\n- Fix bug in support for multiple services (APIs) in one service config\n- Update CORS selector display names with path suffix instead of index\n- Support `additional_binding` options for gRPC-JSON transcoding\n- Fix bug in OpenID Connect Discovery\n- Add x509 support for JWT authentication\n- Deprecated `--enable_backend_routing` flag; automatically set based on service configuration\n\n# Release 2.1.0 07-01-2020\n\n- Add support for healthz\n- Support multiple services(apis) in one service config\n- Solve the permission denied when open /etc/endpoints/service.json\n- Improve error message if service config is not found\n- Handle missing :path or :method headers in service control filter\n\n# Release 2.0.0 17-12-2019\n"], "filenames": ["CHANGELOG.md"], "buggy_code_start_loc": [0], "buggy_code_end_loc": [0], "fixing_code_start_loc": [1], "fixing_code_end_loc": [7], "type": "CWE-287", "message": "ESPv2 is a service proxy that provides API management capabilities using Google Service Infrastructure. ESPv2 2.20.0 through 2.42.0 contains an authentication bypass vulnerability. API clients can craft a malicious `X-HTTP-Method-Override` header value to bypass JWT authentication in specific cases.\n\nESPv2 allows malicious requests to bypass authentication if both the conditions are true: The requested HTTP method is **not** in the API service definition (OpenAPI spec or gRPC `google.api.http` proto annotations, and the specified `X-HTTP-Method-Override` is a valid HTTP method in the API service definition. ESPv2 will forward the request to your backend without checking the JWT. Attackers can craft requests with a malicious `X-HTTP-Method-Override` value that allows them to bypass specifying JWTs. Restricting API access with API keys works as intended and is not affected by this vulnerability.\n\nUpgrade deployments to release v2.43.0 or higher to receive a patch. This release ensures that JWT authentication occurs, even when the caller specifies `x-http-method-override`. `x-http-method-override` is still supported by v2.43.0+. API clients can continue sending this header to ESPv2.", "other": {"cve": {"id": "CVE-2023-30845", "sourceIdentifier": "security-advisories@github.com", "published": "2023-04-26T21:15:09.277", "lastModified": "2023-05-09T16:08:02.997", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "ESPv2 is a service proxy that provides API management capabilities using Google Service Infrastructure. ESPv2 2.20.0 through 2.42.0 contains an authentication bypass vulnerability. API clients can craft a malicious `X-HTTP-Method-Override` header value to bypass JWT authentication in specific cases.\n\nESPv2 allows malicious requests to bypass authentication if both the conditions are true: The requested HTTP method is **not** in the API service definition (OpenAPI spec or gRPC `google.api.http` proto annotations, and the specified `X-HTTP-Method-Override` is a valid HTTP method in the API service definition. ESPv2 will forward the request to your backend without checking the JWT. Attackers can craft requests with a malicious `X-HTTP-Method-Override` value that allows them to bypass specifying JWTs. Restricting API access with API keys works as intended and is not affected by this vulnerability.\n\nUpgrade deployments to release v2.43.0 or higher to receive a patch. This release ensures that JWT authentication occurs, even when the caller specifies `x-http-method-override`. `x-http-method-override` is still supported by v2.43.0+. API clients can continue sending this header to ESPv2."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 8.2, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 4.2}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-287"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:google:espv2:*:*:*:*:*:*:*:*", "versionStartIncluding": "2.20.0", "versionEndExcluding": "2.43.0", "matchCriteriaId": "A20AE068-D587-4CD1-AA65-AC686DDF6E4D"}]}]}], "references": [{"url": "https://github.com/GoogleCloudPlatform/esp-v2/commit/0bcdfc024ce96b34db4e1b4f2211b509d9be93cd", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/GoogleCloudPlatform/esp-v2/commit/e95670146f5e96bb5565b0a9c1e153886b3e04ce", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/GoogleCloudPlatform/esp-v2/commit/e98061ee4527a564506ba4e814c0ecf324dc2c6f", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/GoogleCloudPlatform/esp-v2/security/advisories/GHSA-6qmp-9p95-fc5f", "source": "security-advisories@github.com", "tags": ["Vendor Advisory"]}]}, "github_commit_url": "https://github.com/GoogleCloudPlatform/esp-v2/commit/0bcdfc024ce96b34db4e1b4f2211b509d9be93cd"}}