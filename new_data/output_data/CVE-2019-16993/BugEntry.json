{"buggy_code": ["<?php\n/**\n*\n* This file is part of the phpBB Forum Software package.\n*\n* @copyright (c) phpBB Limited <https://www.phpbb.com>\n* @license GNU General Public License, version 2 (GPL-2.0)\n*\n* For full copyright and license information, please see\n* the docs/CREDITS.txt file.\n*\n*/\n\n/**\n* @ignore\n*/\nif (!defined('IN_PHPBB'))\n{\n\texit;\n}\n\nclass acp_bbcodes\n{\n\tvar $u_action;\n\n\tfunction main($id, $mode)\n\t{\n\t\tglobal $db, $user, $auth, $template, $cache, $request, $phpbb_dispatcher;\n\t\tglobal $config, $phpbb_root_path, $phpbb_admin_path, $phpEx;\n\n\t\t$user->add_lang('acp/posting');\n\n\t\t// Set up general vars\n\t\t$action\t= request_var('action', '');\n\t\t$bbcode_id = request_var('bbcode', 0);\n\n\t\t$this->tpl_name = 'acp_bbcodes';\n\t\t$this->page_title = 'ACP_BBCODES';\n\t\t$form_key = 'acp_bbcodes';\n\n\t\tadd_form_key($form_key);\n\n\t\t// Set up mode-specific vars\n\t\tswitch ($action)\n\t\t{\n\t\t\tcase 'add':\n\t\t\t\t$bbcode_match = $bbcode_tpl = $bbcode_helpline = '';\n\t\t\t\t$display_on_posting = 0;\n\t\t\tbreak;\n\n\t\t\tcase 'edit':\n\t\t\t\t$sql = 'SELECT bbcode_match, bbcode_tpl, display_on_posting, bbcode_helpline\n\t\t\t\t\tFROM ' . BBCODES_TABLE . '\n\t\t\t\t\tWHERE bbcode_id = ' . $bbcode_id;\n\t\t\t\t$result = $db->sql_query($sql);\n\t\t\t\t$row = $db->sql_fetchrow($result);\n\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\tif (!$row)\n\t\t\t\t{\n\t\t\t\t\ttrigger_error($user->lang['BBCODE_NOT_EXIST'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t}\n\n\t\t\t\t$bbcode_match = $row['bbcode_match'];\n\t\t\t\t$bbcode_tpl = htmlspecialchars($row['bbcode_tpl']);\n\t\t\t\t$display_on_posting = $row['display_on_posting'];\n\t\t\t\t$bbcode_helpline = $row['bbcode_helpline'];\n\t\t\tbreak;\n\n\t\t\tcase 'modify':\n\t\t\t\t$sql = 'SELECT bbcode_id, bbcode_tag\n\t\t\t\t\tFROM ' . BBCODES_TABLE . '\n\t\t\t\t\tWHERE bbcode_id = ' . $bbcode_id;\n\t\t\t\t$result = $db->sql_query($sql);\n\t\t\t\t$row = $db->sql_fetchrow($result);\n\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\tif (!$row)\n\t\t\t\t{\n\t\t\t\t\ttrigger_error($user->lang['BBCODE_NOT_EXIST'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t}\n\n\t\t\t// No break here\n\n\t\t\tcase 'create':\n\t\t\t\t$display_on_posting = request_var('display_on_posting', 0);\n\n\t\t\t\t$bbcode_match = request_var('bbcode_match', '');\n\t\t\t\t$bbcode_tpl = htmlspecialchars_decode(utf8_normalize_nfc(request_var('bbcode_tpl', '', true)));\n\t\t\t\t$bbcode_helpline = utf8_normalize_nfc(request_var('bbcode_helpline', '', true));\n\t\t\tbreak;\n\t\t}\n\n\t\t// Do major work\n\t\tswitch ($action)\n\t\t{\n\t\t\tcase 'edit':\n\t\t\tcase 'add':\n\n\t\t\t\t$tpl_ary = array(\n\t\t\t\t\t'S_EDIT_BBCODE'\t\t=> true,\n\t\t\t\t\t'U_BACK'\t\t\t=> $this->u_action,\n\t\t\t\t\t'U_ACTION'\t\t\t=> $this->u_action . '&amp;action=' . (($action == 'add') ? 'create' : 'modify') . (($bbcode_id) ? \"&amp;bbcode=$bbcode_id\" : ''),\n\n\t\t\t\t\t'L_BBCODE_USAGE_EXPLAIN'=> sprintf($user->lang['BBCODE_USAGE_EXPLAIN'], '<a href=\"#down\">', '</a>'),\n\t\t\t\t\t'BBCODE_MATCH'\t\t\t=> $bbcode_match,\n\t\t\t\t\t'BBCODE_TPL'\t\t\t=> $bbcode_tpl,\n\t\t\t\t\t'BBCODE_HELPLINE'\t\t=> $bbcode_helpline,\n\t\t\t\t\t'DISPLAY_ON_POSTING'\t=> $display_on_posting,\n\t\t\t\t);\n\n\t\t\t\t$bbcode_tokens = array('TEXT', 'SIMPLETEXT', 'INTTEXT', 'IDENTIFIER', 'NUMBER', 'EMAIL', 'URL', 'LOCAL_URL', 'RELATIVE_URL', 'COLOR');\n\n\t\t\t\t/**\n\t\t\t\t* Modify custom bbcode template data before we display the add/edit form\n\t\t\t\t*\n\t\t\t\t* @event core.acp_bbcodes_edit_add\n\t\t\t\t* @var\tstring\taction\t\t\tType of the action: add|edit\n\t\t\t\t* @var\tarray\ttpl_ary\t\t\tArray with custom bbcode add/edit data\n\t\t\t\t* @var\tint\t\tbbcode_id\t\tWhen editing: the bbcode id,\n\t\t\t\t*\t\t\t\t\t\t\t\twhen creating: 0\n\t\t\t\t* @var\tarray\tbbcode_tokens\tArray of bbcode tokens\n\t\t\t\t* @since 3.1.0-a3\n\t\t\t\t*/\n\t\t\t\t$vars = array('action', 'tpl_ary', 'bbcode_id', 'bbcode_tokens');\n\t\t\t\textract($phpbb_dispatcher->trigger_event('core.acp_bbcodes_edit_add', compact($vars)));\n\n\t\t\t\t$template->assign_vars($tpl_ary);\n\n\t\t\t\tforeach ($bbcode_tokens as $token)\n\t\t\t\t{\n\t\t\t\t\t$template->assign_block_vars('token', array(\n\t\t\t\t\t\t'TOKEN'\t\t=> '{' . $token . '}',\n\t\t\t\t\t\t'EXPLAIN'\t=> ($token === 'LOCAL_URL') ? $user->lang(array('tokens', $token), generate_board_url() . '/') : $user->lang(array('tokens', $token)),\n\t\t\t\t\t));\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\tbreak;\n\n\t\t\tcase 'modify':\n\t\t\tcase 'create':\n\n\t\t\t\t$sql_ary = $hidden_fields = array();\n\n\t\t\t\t/**\n\t\t\t\t* Modify custom bbcode data before the modify/create action\n\t\t\t\t*\n\t\t\t\t* @event core.acp_bbcodes_modify_create\n\t\t\t\t* @var\tstring\taction\t\t\t\tType of the action: modify|create\n\t\t\t\t* @var\tarray\tsql_ary\t\t\t\tArray with new bbcode data\n\t\t\t\t* @var\tint\t\tbbcode_id\t\t\tWhen editing: the bbcode id,\n\t\t\t\t*\t\t\t\t\t\t\t\t\twhen creating: 0\n\t\t\t\t* @var\tbool\tdisplay_on_posting\tDisplay bbcode on posting form\n\t\t\t\t* @var\tstring\tbbcode_match\t\tThe bbcode usage string to match\n\t\t\t\t* @var\tstring\tbbcode_tpl\t\t\tThe bbcode HTML replacement string\n\t\t\t\t* @var\tstring\tbbcode_helpline\t\tThe bbcode help line string\n\t\t\t\t* @var\tarray\thidden_fields\t\tArray of hidden fields for use when\n\t\t\t\t*\t\t\t\t\t\t\t\t\tsubmitting form when $warn_text is true\n\t\t\t\t* @since 3.1.0-a3\n\t\t\t\t*/\n\t\t\t\t$vars = array(\n\t\t\t\t\t'action',\n\t\t\t\t\t'sql_ary',\n\t\t\t\t\t'bbcode_id',\n\t\t\t\t\t'display_on_posting',\n\t\t\t\t\t'bbcode_match',\n\t\t\t\t\t'bbcode_tpl',\n\t\t\t\t\t'bbcode_helpline',\n\t\t\t\t\t'hidden_fields',\n\t\t\t\t);\n\t\t\t\textract($phpbb_dispatcher->trigger_event('core.acp_bbcodes_modify_create', compact($vars)));\n\n\t\t\t\t$warn_text = preg_match('%<[^>]*\\{text[\\d]*\\}[^>]*>%i', $bbcode_tpl);\n\t\t\t\tif (!$warn_text || confirm_box(true))\n\t\t\t\t{\n\t\t\t\t\t$data = $this->build_regexp($bbcode_match, $bbcode_tpl);\n\n\t\t\t\t\t// Make sure the user didn't pick a \"bad\" name for the BBCode tag.\n\t\t\t\t\t$hard_coded = array('code', 'quote', 'quote=', 'attachment', 'attachment=', 'b', 'i', 'url', 'url=', 'img', 'size', 'size=', 'color', 'color=', 'u', 'list', 'list=', 'email', 'email=', 'flash', 'flash=');\n\n\t\t\t\t\tif (($action == 'modify' && strtolower($data['bbcode_tag']) !== strtolower($row['bbcode_tag'])) || ($action == 'create'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$sql = 'SELECT 1 as test\n\t\t\t\t\t\t\tFROM ' . BBCODES_TABLE . \"\n\t\t\t\t\t\t\tWHERE LOWER(bbcode_tag) = '\" . $db->sql_escape(strtolower($data['bbcode_tag'])) . \"'\";\n\t\t\t\t\t\t$result = $db->sql_query($sql);\n\t\t\t\t\t\t$info = $db->sql_fetchrow($result);\n\t\t\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\t\t\t// Grab the end, interrogate the last closing tag\n\t\t\t\t\t\tif ($info['test'] === '1' || in_array(strtolower($data['bbcode_tag']), $hard_coded) || (preg_match('#\\[/([^[]*)]$#', $bbcode_match, $regs) && in_array(strtolower($regs[1]), $hard_coded)))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttrigger_error($user->lang['BBCODE_INVALID_TAG_NAME'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (substr($data['bbcode_tag'], -1) === '=')\n\t\t\t\t\t{\n\t\t\t\t\t\t$test = substr($data['bbcode_tag'], 0, -1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$test = $data['bbcode_tag'];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!preg_match('%\\\\[' . $test . '[^]]*].*?\\\\[/' . $test . ']%s', $bbcode_match))\n\t\t\t\t\t{\n\t\t\t\t\t\ttrigger_error($user->lang['BBCODE_OPEN_ENDED_TAG'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (strlen($data['bbcode_tag']) > 16)\n\t\t\t\t\t{\n\t\t\t\t\t\ttrigger_error($user->lang['BBCODE_TAG_TOO_LONG'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (strlen($bbcode_match) > 4000)\n\t\t\t\t\t{\n\t\t\t\t\t\ttrigger_error($user->lang['BBCODE_TAG_DEF_TOO_LONG'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (strlen($bbcode_helpline) > 255)\n\t\t\t\t\t{\n\t\t\t\t\t\ttrigger_error($user->lang['BBCODE_HELPLINE_TOO_LONG'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql_ary = array_merge($sql_ary, array(\n\t\t\t\t\t\t'bbcode_tag'\t\t\t\t=> $data['bbcode_tag'],\n\t\t\t\t\t\t'bbcode_match'\t\t\t\t=> $bbcode_match,\n\t\t\t\t\t\t'bbcode_tpl'\t\t\t\t=> $bbcode_tpl,\n\t\t\t\t\t\t'display_on_posting'\t\t=> $display_on_posting,\n\t\t\t\t\t\t'bbcode_helpline'\t\t\t=> $bbcode_helpline,\n\t\t\t\t\t\t'first_pass_match'\t\t\t=> $data['first_pass_match'],\n\t\t\t\t\t\t'first_pass_replace'\t\t=> $data['first_pass_replace'],\n\t\t\t\t\t\t'second_pass_match'\t\t\t=> $data['second_pass_match'],\n\t\t\t\t\t\t'second_pass_replace'\t\t=> $data['second_pass_replace']\n\t\t\t\t\t));\n\n\t\t\t\t\tif ($action == 'create')\n\t\t\t\t\t{\n\t\t\t\t\t\t$sql = 'SELECT MAX(bbcode_id) as max_bbcode_id\n\t\t\t\t\t\t\tFROM ' . BBCODES_TABLE;\n\t\t\t\t\t\t$result = $db->sql_query($sql);\n\t\t\t\t\t\t$row = $db->sql_fetchrow($result);\n\t\t\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\t\t\tif ($row)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$bbcode_id = $row['max_bbcode_id'] + 1;\n\n\t\t\t\t\t\t\t// Make sure it is greater than the core bbcode ids...\n\t\t\t\t\t\t\tif ($bbcode_id <= NUM_CORE_BBCODES)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$bbcode_id = NUM_CORE_BBCODES + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$bbcode_id = NUM_CORE_BBCODES + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($bbcode_id > BBCODE_LIMIT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttrigger_error($user->lang['TOO_MANY_BBCODES'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$sql_ary['bbcode_id'] = (int) $bbcode_id;\n\n\t\t\t\t\t\t$db->sql_query('INSERT INTO ' . BBCODES_TABLE . $db->sql_build_array('INSERT', $sql_ary));\n\t\t\t\t\t\t$cache->destroy('sql', BBCODES_TABLE);\n\n\t\t\t\t\t\t$lang = 'BBCODE_ADDED';\n\t\t\t\t\t\t$log_action = 'LOG_BBCODE_ADD';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$sql = 'UPDATE ' . BBCODES_TABLE . '\n\t\t\t\t\t\t\tSET ' . $db->sql_build_array('UPDATE', $sql_ary) . '\n\t\t\t\t\t\t\tWHERE bbcode_id = ' . $bbcode_id;\n\t\t\t\t\t\t$db->sql_query($sql);\n\t\t\t\t\t\t$cache->destroy('sql', BBCODES_TABLE);\n\n\t\t\t\t\t\t$lang = 'BBCODE_EDITED';\n\t\t\t\t\t\t$log_action = 'LOG_BBCODE_EDIT';\n\t\t\t\t\t}\n\n\t\t\t\t\tadd_log('admin', $log_action, $data['bbcode_tag']);\n\n\t\t\t\t\ttrigger_error($user->lang[$lang] . adm_back_link($this->u_action));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tconfirm_box(false, $user->lang['BBCODE_DANGER'], build_hidden_fields(array_merge($hidden_fields, array(\n\t\t\t\t\t\t'action'\t\t\t\t=> $action,\n\t\t\t\t\t\t'bbcode'\t\t\t\t=> $bbcode_id,\n\t\t\t\t\t\t'bbcode_match'\t\t\t=> $bbcode_match,\n\t\t\t\t\t\t'bbcode_tpl'\t\t\t=> htmlspecialchars($bbcode_tpl),\n\t\t\t\t\t\t'bbcode_helpline'\t\t=> $bbcode_helpline,\n\t\t\t\t\t\t'display_on_posting'\t=> $display_on_posting,\n\t\t\t\t\t\t)))\n\t\t\t\t\t, 'confirm_bbcode.html');\n\t\t\t\t}\n\n\t\t\tbreak;\n\n\t\t\tcase 'delete':\n\n\t\t\t\t$sql = 'SELECT bbcode_tag\n\t\t\t\t\tFROM ' . BBCODES_TABLE . \"\n\t\t\t\t\tWHERE bbcode_id = $bbcode_id\";\n\t\t\t\t$result = $db->sql_query($sql);\n\t\t\t\t$row = $db->sql_fetchrow($result);\n\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\tif ($row)\n\t\t\t\t{\n\t\t\t\t\tif (confirm_box(true))\n\t\t\t\t\t{\n\t\t\t\t\t\t$db->sql_query('DELETE FROM ' . BBCODES_TABLE . \" WHERE bbcode_id = $bbcode_id\");\n\t\t\t\t\t\t$cache->destroy('sql', BBCODES_TABLE);\n\t\t\t\t\t\tadd_log('admin', 'LOG_BBCODE_DELETE', $row['bbcode_tag']);\n\n\t\t\t\t\t\tif ($request->is_ajax())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$json_response = new \\phpbb\\json_response;\n\t\t\t\t\t\t\t$json_response->send(array(\n\t\t\t\t\t\t\t\t'MESSAGE_TITLE'\t=> $user->lang['INFORMATION'],\n\t\t\t\t\t\t\t\t'MESSAGE_TEXT'\t=> $user->lang['BBCODE_DELETED'],\n\t\t\t\t\t\t\t\t'REFRESH_DATA'\t=> array(\n\t\t\t\t\t\t\t\t\t'time'\t=> 3\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconfirm_box(false, $user->lang['CONFIRM_OPERATION'], build_hidden_fields(array(\n\t\t\t\t\t\t\t'bbcode'\t=> $bbcode_id,\n\t\t\t\t\t\t\t'i'\t\t\t=> $id,\n\t\t\t\t\t\t\t'mode'\t\t=> $mode,\n\t\t\t\t\t\t\t'action'\t=> $action))\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\t$u_action = $this->u_action;\n\n\t\t$template_data = array(\n\t\t\t'U_ACTION'\t\t=> $this->u_action . '&amp;action=add',\n\t\t);\n\n\t\t$sql_ary = array(\n\t\t\t'SELECT'\t=> 'b.*',\n\t\t\t'FROM'\t\t=> array(BBCODES_TABLE => 'b'),\n\t\t\t'ORDER_BY'\t=> 'b.bbcode_tag',\n\t\t);\n\n\t\t/**\n\t\t*  Modify custom bbcode template data before we display the form\n\t\t*\n\t\t* @event core.acp_bbcodes_display_form\n\t\t* @var\tstring\taction\t\t\tType of the action: modify|create\n\t\t* @var\tstring\tsql_ary\t\t\tThe SQL array to get custom bbcode data\n\t\t* @var\tarray\ttemplate_data\tArray with form template data\n\t\t* @var\tstring\tu_action\t\tThe u_action link\n\t\t* @since 3.1.0-a3\n\t\t*/\n\t\t$vars = array('action', 'sql_ary', 'template_data', 'u_action');\n\t\textract($phpbb_dispatcher->trigger_event('core.acp_bbcodes_display_form', compact($vars)));\n\n\t\t$result = $db->sql_query($db->sql_build_query('SELECT', $sql_ary));\n\n\t\t$template->assign_vars($template_data);\n\n\t\twhile ($row = $db->sql_fetchrow($result))\n\t\t{\n\t\t\t$bbcodes_array = array(\n\t\t\t\t'BBCODE_TAG'\t\t=> $row['bbcode_tag'],\n\t\t\t\t'U_EDIT'\t\t\t=> $u_action . '&amp;action=edit&amp;bbcode=' . $row['bbcode_id'],\n\t\t\t\t'U_DELETE'\t\t\t=> $u_action . '&amp;action=delete&amp;bbcode=' . $row['bbcode_id'],\n\t\t\t);\n\n\t\t\t/**\n\t\t\t*  Modify display of custom bbcodes in the form\n\t\t\t*\n\t\t\t* @event core.acp_bbcodes_display_bbcodes\n\t\t\t* @var\tarray\trow\t\t\t\tArray with current bbcode data\n\t\t\t* @var\tarray\tbbcodes_array\tArray of bbcodes template data\n\t\t\t* @var\tstring\tu_action\t\tThe u_action link\n\t\t\t* @since 3.1.0-a3\n\t\t\t*/\n\t\t\t$vars = array('bbcodes_array', 'row', 'u_action');\n\t\t\textract($phpbb_dispatcher->trigger_event('core.acp_bbcodes_display_bbcodes', compact($vars)));\n\n\t\t\t$template->assign_block_vars('bbcodes', $bbcodes_array);\n\n\t\t}\n\t\t$db->sql_freeresult($result);\n\t}\n\n\t/*\n\t* Build regular expression for custom bbcode\n\t*/\n\tfunction build_regexp(&$bbcode_match, &$bbcode_tpl)\n\t{\n\t\t$bbcode_match = trim($bbcode_match);\n\t\t$bbcode_tpl = trim($bbcode_tpl);\n\n\t\t// Allow unicode characters for URL|LOCAL_URL|RELATIVE_URL|INTTEXT tokens\n\t\t$utf8 = preg_match('/(URL|LOCAL_URL|RELATIVE_URL|INTTEXT)/', $bbcode_match);\n\n\t\t$utf8_pcre_properties = phpbb_pcre_utf8_support();\n\n\t\t$fp_match = preg_quote($bbcode_match, '!');\n\t\t$fp_replace = preg_replace('#^\\[(.*?)\\]#', '[$1:$uid]', $bbcode_match);\n\t\t$fp_replace = preg_replace('#\\[/(.*?)\\]$#', '[/$1:$uid]', $fp_replace);\n\n\t\t$sp_match = preg_quote($bbcode_match, '!');\n\t\t$sp_match = preg_replace('#^\\\\\\\\\\[(.*?)\\\\\\\\\\]#', '\\[$1:$uid\\]', $sp_match);\n\t\t$sp_match = preg_replace('#\\\\\\\\\\[/(.*?)\\\\\\\\\\]$#', '\\[/$1:$uid\\]', $sp_match);\n\t\t$sp_replace = $bbcode_tpl;\n\n\t\t// @todo Make sure to change this too if something changed in message parsing\n\t\t$tokens = array(\n\t\t\t'URL'\t => array(\n\t\t\t\t'!(?:(' . str_replace(array('!', '\\#'), array('\\!', '#'), get_preg_expression('url')) . ')|(' . str_replace(array('!', '\\#'), array('\\!', '#'), get_preg_expression('www_url')) . '))!ie'\t=>\t\"\\$this->bbcode_specialchars(('\\$1') ? '\\$1' : 'http://\\$2')\"\n\t\t\t),\n\t\t\t'LOCAL_URL'\t => array(\n\t\t\t\t'!(' . str_replace(array('!', '\\#'), array('\\!', '#'), get_preg_expression('relative_url')) . ')!e'\t=>\t\"\\$this->bbcode_specialchars('$1')\"\n\t\t\t),\n\t\t\t'RELATIVE_URL'\t=> array(\n\t\t\t\t'!(' . str_replace(array('!', '\\#'), array('\\!', '#'), get_preg_expression('relative_url')) . ')!e'\t=>\t\"\\$this->bbcode_specialchars('$1')\"\n\t\t\t),\n\t\t\t'EMAIL' => array(\n\t\t\t\t'!(' . get_preg_expression('email') . ')!ie'\t=>\t\"\\$this->bbcode_specialchars('$1')\"\n\t\t\t),\n\t\t\t'TEXT' => array(\n\t\t\t\t'!(.*?)!es'\t =>\t\"str_replace(array(\\\"\\\\r\\\\n\\\", '\\\\\\\"', '\\\\'', '(', ')'), array(\\\"\\\\n\\\", '\\\"', '&#39;', '&#40;', '&#41;'), trim('\\$1'))\"\n\t\t\t),\n\t\t\t'SIMPLETEXT' => array(\n\t\t\t\t'!([a-zA-Z0-9-+.,_ ]+)!'\t =>\t\"$1\"\n\t\t\t),\n\t\t\t'INTTEXT' => array(\n\t\t\t\t($utf8_pcre_properties) ? '!([\\p{L}\\p{N}\\-+,_. ]+)!u' : '!([a-zA-Z0-9\\-+,_. ]+)!u'\t =>\t\"$1\"\n\t\t\t),\n\t\t\t'IDENTIFIER' => array(\n\t\t\t\t'!([a-zA-Z0-9-_]+)!'\t =>\t\"$1\"\n\t\t\t),\n\t\t\t'COLOR' => array(\n\t\t\t\t'!([a-z]+|#[0-9abcdef]+)!i'\t=>\t'$1'\n\t\t\t),\n\t\t\t'NUMBER' => array(\n\t\t\t\t'!([0-9]+)!'\t=>\t'$1'\n\t\t\t)\n\t\t);\n\n\t\t$sp_tokens = array(\n\t\t\t'URL'\t => '(?i)((?:' . str_replace(array('!', '\\#'), array('\\!', '#'), get_preg_expression('url')) . ')|(?:' . str_replace(array('!', '\\#'), array('\\!', '#'), get_preg_expression('www_url')) . '))(?-i)',\n\t\t\t'LOCAL_URL'\t => '(?i)(' . str_replace(array('!', '\\#'), array('\\!', '#'), get_preg_expression('relative_url')) . ')(?-i)',\n\t\t\t'RELATIVE_URL'\t => '(?i)(' . str_replace(array('!', '\\#'), array('\\!', '#'), get_preg_expression('relative_url')) . ')(?-i)',\n\t\t\t'EMAIL' => '(' . get_preg_expression('email') . ')',\n\t\t\t'TEXT' => '(.*?)',\n\t\t\t'SIMPLETEXT' => '([a-zA-Z0-9-+.,_ ]+)',\n\t\t\t'INTTEXT' => ($utf8_pcre_properties) ? '([\\p{L}\\p{N}\\-+,_. ]+)' : '([a-zA-Z0-9\\-+,_. ]+)',\n\t\t\t'IDENTIFIER' => '([a-zA-Z0-9-_]+)',\n\t\t\t'COLOR' => '([a-zA-Z]+|#[0-9abcdefABCDEF]+)',\n\t\t\t'NUMBER' => '([0-9]+)',\n\t\t);\n\n\t\t$pad = 0;\n\t\t$modifiers = 'i';\n\t\t$modifiers .= ($utf8 && $utf8_pcre_properties) ? 'u' : '';\n\n\t\tif (preg_match_all('/\\{(' . implode('|', array_keys($tokens)) . ')[0-9]*\\}/i', $bbcode_match, $m))\n\t\t{\n\t\t\tforeach ($m[0] as $n => $token)\n\t\t\t{\n\t\t\t\t$token_type = $m[1][$n];\n\n\t\t\t\treset($tokens[strtoupper($token_type)]);\n\t\t\t\tlist($match, $replace) = each($tokens[strtoupper($token_type)]);\n\n\t\t\t\t// Pad backreference numbers from tokens\n\t\t\t\tif (preg_match_all('/(?<!\\\\\\\\)\\$([0-9]+)/', $replace, $repad))\n\t\t\t\t{\n\t\t\t\t\t$repad = $pad + sizeof(array_unique($repad[0]));\n\t\t\t\t\t$replace = preg_replace('/(?<!\\\\\\\\)\\$([0-9]+)/e', \"'\\${' . (\\$1 + \\$pad) . '}'\", $replace);\n\t\t\t\t\t$pad = $repad;\n\t\t\t\t}\n\n\t\t\t\t// Obtain pattern modifiers to use and alter the regex accordingly\n\t\t\t\t$regex = preg_replace('/!(.*)!([a-z]*)/', '$1', $match);\n\t\t\t\t$regex_modifiers = preg_replace('/!(.*)!([a-z]*)/', '$2', $match);\n\n\t\t\t\tfor ($i = 0, $size = strlen($regex_modifiers); $i < $size; ++$i)\n\t\t\t\t{\n\t\t\t\t\tif (strpos($modifiers, $regex_modifiers[$i]) === false)\n\t\t\t\t\t{\n\t\t\t\t\t\t$modifiers .= $regex_modifiers[$i];\n\n\t\t\t\t\t\tif ($regex_modifiers[$i] == 'e')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$fp_replace = \"'\" . str_replace(\"'\", \"\\\\'\", $fp_replace) . \"'\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($regex_modifiers[$i] == 'e')\n\t\t\t\t\t{\n\t\t\t\t\t\t$replace = \"'.$replace.'\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$fp_match = str_replace(preg_quote($token, '!'), $regex, $fp_match);\n\t\t\t\t$fp_replace = str_replace($token, $replace, $fp_replace);\n\n\t\t\t\t$sp_match = str_replace(preg_quote($token, '!'), $sp_tokens[$token_type], $sp_match);\n\n\t\t\t\t// Prepend the board url to local relative links\n\t\t\t\t$replace_prepend = ($token_type === 'LOCAL_URL') ? generate_board_url() . '/' : '';\n\n\t\t\t\t$sp_replace = str_replace($token, $replace_prepend . '${' . ($n + 1) . '}', $sp_replace);\n\t\t\t}\n\n\t\t\t$fp_match = '!' . $fp_match . '!' . $modifiers;\n\t\t\t$sp_match = '!' . $sp_match . '!s' . (($utf8) ? 'u' : '');\n\n\t\t\tif (strpos($fp_match, 'e') !== false)\n\t\t\t{\n\t\t\t\t$fp_replace = str_replace(\"'.'\", '', $fp_replace);\n\t\t\t\t$fp_replace = str_replace(\".''.\", '.', $fp_replace);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// No replacement is present, no need for a second-pass pattern replacement\n\t\t\t// A simple str_replace will suffice\n\t\t\t$fp_match = '!' . $fp_match . '!' . $modifiers;\n\t\t\t$sp_match = $fp_replace;\n\t\t\t$sp_replace = '';\n\t\t}\n\n\t\t// Lowercase tags\n\t\t$bbcode_tag = preg_replace('/.*?\\[([a-z0-9_-]+=?).*/i', '$1', $bbcode_match);\n\t\t$bbcode_search = preg_replace('/.*?\\[([a-z0-9_-]+)=?.*/i', '$1', $bbcode_match);\n\n\t\tif (!preg_match('/^[a-zA-Z0-9_-]+=?$/', $bbcode_tag))\n\t\t{\n\t\t\tglobal $user;\n\t\t\ttrigger_error($user->lang['BBCODE_INVALID'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t}\n\n\t\t$fp_match = preg_replace('#\\[/?' . $bbcode_search . '#ie', \"strtolower('\\$0')\", $fp_match);\n\t\t$fp_replace = preg_replace('#\\[/?' . $bbcode_search . '#ie', \"strtolower('\\$0')\", $fp_replace);\n\t\t$sp_match = preg_replace('#\\[/?' . $bbcode_search . '#ie', \"strtolower('\\$0')\", $sp_match);\n\t\t$sp_replace = preg_replace('#\\[/?' . $bbcode_search . '#ie', \"strtolower('\\$0')\", $sp_replace);\n\n\t\treturn array(\n\t\t\t'bbcode_tag'\t\t\t\t=> $bbcode_tag,\n\t\t\t'first_pass_match'\t\t\t=> $fp_match,\n\t\t\t'first_pass_replace'\t\t=> $fp_replace,\n\t\t\t'second_pass_match'\t\t\t=> $sp_match,\n\t\t\t'second_pass_replace'\t\t=> $sp_replace\n\t\t);\n\t}\n}\n"], "fixing_code": ["<?php\n/**\n*\n* This file is part of the phpBB Forum Software package.\n*\n* @copyright (c) phpBB Limited <https://www.phpbb.com>\n* @license GNU General Public License, version 2 (GPL-2.0)\n*\n* For full copyright and license information, please see\n* the docs/CREDITS.txt file.\n*\n*/\n\n/**\n* @ignore\n*/\nif (!defined('IN_PHPBB'))\n{\n\texit;\n}\n\nclass acp_bbcodes\n{\n\tvar $u_action;\n\n\tfunction main($id, $mode)\n\t{\n\t\tglobal $db, $user, $auth, $template, $cache, $request, $phpbb_dispatcher;\n\t\tglobal $config, $phpbb_root_path, $phpbb_admin_path, $phpEx;\n\n\t\t$user->add_lang('acp/posting');\n\n\t\t// Set up general vars\n\t\t$action\t= request_var('action', '');\n\t\t$bbcode_id = request_var('bbcode', 0);\n\t\t$submit = $request->is_set_post('submit');\n\n\t\t$this->tpl_name = 'acp_bbcodes';\n\t\t$this->page_title = 'ACP_BBCODES';\n\t\t$form_key = 'acp_bbcodes';\n\n\t\tadd_form_key($form_key);\n\n\t\tif ($submit && !check_form_key($form_key))\n\t\t{\n\t\t\ttrigger_error($user->lang['FORM_INVALID'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t}\n\n\t\t// Set up mode-specific vars\n\t\tswitch ($action)\n\t\t{\n\t\t\tcase 'add':\n\t\t\t\t$bbcode_match = $bbcode_tpl = $bbcode_helpline = '';\n\t\t\t\t$display_on_posting = 0;\n\t\t\tbreak;\n\n\t\t\tcase 'edit':\n\t\t\t\t$sql = 'SELECT bbcode_match, bbcode_tpl, display_on_posting, bbcode_helpline\n\t\t\t\t\tFROM ' . BBCODES_TABLE . '\n\t\t\t\t\tWHERE bbcode_id = ' . $bbcode_id;\n\t\t\t\t$result = $db->sql_query($sql);\n\t\t\t\t$row = $db->sql_fetchrow($result);\n\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\tif (!$row)\n\t\t\t\t{\n\t\t\t\t\ttrigger_error($user->lang['BBCODE_NOT_EXIST'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t}\n\n\t\t\t\t$bbcode_match = $row['bbcode_match'];\n\t\t\t\t$bbcode_tpl = htmlspecialchars($row['bbcode_tpl']);\n\t\t\t\t$display_on_posting = $row['display_on_posting'];\n\t\t\t\t$bbcode_helpline = $row['bbcode_helpline'];\n\t\t\tbreak;\n\n\t\t\tcase 'modify':\n\t\t\t\t$sql = 'SELECT bbcode_id, bbcode_tag\n\t\t\t\t\tFROM ' . BBCODES_TABLE . '\n\t\t\t\t\tWHERE bbcode_id = ' . $bbcode_id;\n\t\t\t\t$result = $db->sql_query($sql);\n\t\t\t\t$row = $db->sql_fetchrow($result);\n\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\tif (!$row)\n\t\t\t\t{\n\t\t\t\t\ttrigger_error($user->lang['BBCODE_NOT_EXIST'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t}\n\n\t\t\t// No break here\n\n\t\t\tcase 'create':\n\t\t\t\t$display_on_posting = request_var('display_on_posting', 0);\n\n\t\t\t\t$bbcode_match = request_var('bbcode_match', '');\n\t\t\t\t$bbcode_tpl = htmlspecialchars_decode(utf8_normalize_nfc(request_var('bbcode_tpl', '', true)));\n\t\t\t\t$bbcode_helpline = utf8_normalize_nfc(request_var('bbcode_helpline', '', true));\n\t\t\tbreak;\n\t\t}\n\n\t\t// Do major work\n\t\tswitch ($action)\n\t\t{\n\t\t\tcase 'edit':\n\t\t\tcase 'add':\n\n\t\t\t\t$tpl_ary = array(\n\t\t\t\t\t'S_EDIT_BBCODE'\t\t=> true,\n\t\t\t\t\t'U_BACK'\t\t\t=> $this->u_action,\n\t\t\t\t\t'U_ACTION'\t\t\t=> $this->u_action . '&amp;action=' . (($action == 'add') ? 'create' : 'modify') . (($bbcode_id) ? \"&amp;bbcode=$bbcode_id\" : ''),\n\n\t\t\t\t\t'L_BBCODE_USAGE_EXPLAIN'=> sprintf($user->lang['BBCODE_USAGE_EXPLAIN'], '<a href=\"#down\">', '</a>'),\n\t\t\t\t\t'BBCODE_MATCH'\t\t\t=> $bbcode_match,\n\t\t\t\t\t'BBCODE_TPL'\t\t\t=> $bbcode_tpl,\n\t\t\t\t\t'BBCODE_HELPLINE'\t\t=> $bbcode_helpline,\n\t\t\t\t\t'DISPLAY_ON_POSTING'\t=> $display_on_posting,\n\t\t\t\t);\n\n\t\t\t\t$bbcode_tokens = array('TEXT', 'SIMPLETEXT', 'INTTEXT', 'IDENTIFIER', 'NUMBER', 'EMAIL', 'URL', 'LOCAL_URL', 'RELATIVE_URL', 'COLOR');\n\n\t\t\t\t/**\n\t\t\t\t* Modify custom bbcode template data before we display the add/edit form\n\t\t\t\t*\n\t\t\t\t* @event core.acp_bbcodes_edit_add\n\t\t\t\t* @var\tstring\taction\t\t\tType of the action: add|edit\n\t\t\t\t* @var\tarray\ttpl_ary\t\t\tArray with custom bbcode add/edit data\n\t\t\t\t* @var\tint\t\tbbcode_id\t\tWhen editing: the bbcode id,\n\t\t\t\t*\t\t\t\t\t\t\t\twhen creating: 0\n\t\t\t\t* @var\tarray\tbbcode_tokens\tArray of bbcode tokens\n\t\t\t\t* @since 3.1.0-a3\n\t\t\t\t*/\n\t\t\t\t$vars = array('action', 'tpl_ary', 'bbcode_id', 'bbcode_tokens');\n\t\t\t\textract($phpbb_dispatcher->trigger_event('core.acp_bbcodes_edit_add', compact($vars)));\n\n\t\t\t\t$template->assign_vars($tpl_ary);\n\n\t\t\t\tforeach ($bbcode_tokens as $token)\n\t\t\t\t{\n\t\t\t\t\t$template->assign_block_vars('token', array(\n\t\t\t\t\t\t'TOKEN'\t\t=> '{' . $token . '}',\n\t\t\t\t\t\t'EXPLAIN'\t=> ($token === 'LOCAL_URL') ? $user->lang(array('tokens', $token), generate_board_url() . '/') : $user->lang(array('tokens', $token)),\n\t\t\t\t\t));\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\tbreak;\n\n\t\t\tcase 'modify':\n\t\t\tcase 'create':\n\n\t\t\t\t$sql_ary = $hidden_fields = array();\n\n\t\t\t\t/**\n\t\t\t\t* Modify custom bbcode data before the modify/create action\n\t\t\t\t*\n\t\t\t\t* @event core.acp_bbcodes_modify_create\n\t\t\t\t* @var\tstring\taction\t\t\t\tType of the action: modify|create\n\t\t\t\t* @var\tarray\tsql_ary\t\t\t\tArray with new bbcode data\n\t\t\t\t* @var\tint\t\tbbcode_id\t\t\tWhen editing: the bbcode id,\n\t\t\t\t*\t\t\t\t\t\t\t\t\twhen creating: 0\n\t\t\t\t* @var\tbool\tdisplay_on_posting\tDisplay bbcode on posting form\n\t\t\t\t* @var\tstring\tbbcode_match\t\tThe bbcode usage string to match\n\t\t\t\t* @var\tstring\tbbcode_tpl\t\t\tThe bbcode HTML replacement string\n\t\t\t\t* @var\tstring\tbbcode_helpline\t\tThe bbcode help line string\n\t\t\t\t* @var\tarray\thidden_fields\t\tArray of hidden fields for use when\n\t\t\t\t*\t\t\t\t\t\t\t\t\tsubmitting form when $warn_text is true\n\t\t\t\t* @since 3.1.0-a3\n\t\t\t\t*/\n\t\t\t\t$vars = array(\n\t\t\t\t\t'action',\n\t\t\t\t\t'sql_ary',\n\t\t\t\t\t'bbcode_id',\n\t\t\t\t\t'display_on_posting',\n\t\t\t\t\t'bbcode_match',\n\t\t\t\t\t'bbcode_tpl',\n\t\t\t\t\t'bbcode_helpline',\n\t\t\t\t\t'hidden_fields',\n\t\t\t\t);\n\t\t\t\textract($phpbb_dispatcher->trigger_event('core.acp_bbcodes_modify_create', compact($vars)));\n\n\t\t\t\t$warn_text = preg_match('%<[^>]*\\{text[\\d]*\\}[^>]*>%i', $bbcode_tpl);\n\t\t\t\tif (!$warn_text || confirm_box(true))\n\t\t\t\t{\n\t\t\t\t\t$data = $this->build_regexp($bbcode_match, $bbcode_tpl);\n\n\t\t\t\t\t// Make sure the user didn't pick a \"bad\" name for the BBCode tag.\n\t\t\t\t\t$hard_coded = array('code', 'quote', 'quote=', 'attachment', 'attachment=', 'b', 'i', 'url', 'url=', 'img', 'size', 'size=', 'color', 'color=', 'u', 'list', 'list=', 'email', 'email=', 'flash', 'flash=');\n\n\t\t\t\t\tif (($action == 'modify' && strtolower($data['bbcode_tag']) !== strtolower($row['bbcode_tag'])) || ($action == 'create'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$sql = 'SELECT 1 as test\n\t\t\t\t\t\t\tFROM ' . BBCODES_TABLE . \"\n\t\t\t\t\t\t\tWHERE LOWER(bbcode_tag) = '\" . $db->sql_escape(strtolower($data['bbcode_tag'])) . \"'\";\n\t\t\t\t\t\t$result = $db->sql_query($sql);\n\t\t\t\t\t\t$info = $db->sql_fetchrow($result);\n\t\t\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\t\t\t// Grab the end, interrogate the last closing tag\n\t\t\t\t\t\tif ($info['test'] === '1' || in_array(strtolower($data['bbcode_tag']), $hard_coded) || (preg_match('#\\[/([^[]*)]$#', $bbcode_match, $regs) && in_array(strtolower($regs[1]), $hard_coded)))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttrigger_error($user->lang['BBCODE_INVALID_TAG_NAME'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (substr($data['bbcode_tag'], -1) === '=')\n\t\t\t\t\t{\n\t\t\t\t\t\t$test = substr($data['bbcode_tag'], 0, -1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$test = $data['bbcode_tag'];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!preg_match('%\\\\[' . $test . '[^]]*].*?\\\\[/' . $test . ']%s', $bbcode_match))\n\t\t\t\t\t{\n\t\t\t\t\t\ttrigger_error($user->lang['BBCODE_OPEN_ENDED_TAG'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (strlen($data['bbcode_tag']) > 16)\n\t\t\t\t\t{\n\t\t\t\t\t\ttrigger_error($user->lang['BBCODE_TAG_TOO_LONG'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (strlen($bbcode_match) > 4000)\n\t\t\t\t\t{\n\t\t\t\t\t\ttrigger_error($user->lang['BBCODE_TAG_DEF_TOO_LONG'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (strlen($bbcode_helpline) > 255)\n\t\t\t\t\t{\n\t\t\t\t\t\ttrigger_error($user->lang['BBCODE_HELPLINE_TOO_LONG'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql_ary = array_merge($sql_ary, array(\n\t\t\t\t\t\t'bbcode_tag'\t\t\t\t=> $data['bbcode_tag'],\n\t\t\t\t\t\t'bbcode_match'\t\t\t\t=> $bbcode_match,\n\t\t\t\t\t\t'bbcode_tpl'\t\t\t\t=> $bbcode_tpl,\n\t\t\t\t\t\t'display_on_posting'\t\t=> $display_on_posting,\n\t\t\t\t\t\t'bbcode_helpline'\t\t\t=> $bbcode_helpline,\n\t\t\t\t\t\t'first_pass_match'\t\t\t=> $data['first_pass_match'],\n\t\t\t\t\t\t'first_pass_replace'\t\t=> $data['first_pass_replace'],\n\t\t\t\t\t\t'second_pass_match'\t\t\t=> $data['second_pass_match'],\n\t\t\t\t\t\t'second_pass_replace'\t\t=> $data['second_pass_replace']\n\t\t\t\t\t));\n\n\t\t\t\t\tif ($action == 'create')\n\t\t\t\t\t{\n\t\t\t\t\t\t$sql = 'SELECT MAX(bbcode_id) as max_bbcode_id\n\t\t\t\t\t\t\tFROM ' . BBCODES_TABLE;\n\t\t\t\t\t\t$result = $db->sql_query($sql);\n\t\t\t\t\t\t$row = $db->sql_fetchrow($result);\n\t\t\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\t\t\tif ($row)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$bbcode_id = $row['max_bbcode_id'] + 1;\n\n\t\t\t\t\t\t\t// Make sure it is greater than the core bbcode ids...\n\t\t\t\t\t\t\tif ($bbcode_id <= NUM_CORE_BBCODES)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$bbcode_id = NUM_CORE_BBCODES + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$bbcode_id = NUM_CORE_BBCODES + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($bbcode_id > BBCODE_LIMIT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttrigger_error($user->lang['TOO_MANY_BBCODES'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$sql_ary['bbcode_id'] = (int) $bbcode_id;\n\n\t\t\t\t\t\t$db->sql_query('INSERT INTO ' . BBCODES_TABLE . $db->sql_build_array('INSERT', $sql_ary));\n\t\t\t\t\t\t$cache->destroy('sql', BBCODES_TABLE);\n\n\t\t\t\t\t\t$lang = 'BBCODE_ADDED';\n\t\t\t\t\t\t$log_action = 'LOG_BBCODE_ADD';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$sql = 'UPDATE ' . BBCODES_TABLE . '\n\t\t\t\t\t\t\tSET ' . $db->sql_build_array('UPDATE', $sql_ary) . '\n\t\t\t\t\t\t\tWHERE bbcode_id = ' . $bbcode_id;\n\t\t\t\t\t\t$db->sql_query($sql);\n\t\t\t\t\t\t$cache->destroy('sql', BBCODES_TABLE);\n\n\t\t\t\t\t\t$lang = 'BBCODE_EDITED';\n\t\t\t\t\t\t$log_action = 'LOG_BBCODE_EDIT';\n\t\t\t\t\t}\n\n\t\t\t\t\tadd_log('admin', $log_action, $data['bbcode_tag']);\n\n\t\t\t\t\ttrigger_error($user->lang[$lang] . adm_back_link($this->u_action));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tconfirm_box(false, $user->lang['BBCODE_DANGER'], build_hidden_fields(array_merge($hidden_fields, array(\n\t\t\t\t\t\t'action'\t\t\t\t=> $action,\n\t\t\t\t\t\t'bbcode'\t\t\t\t=> $bbcode_id,\n\t\t\t\t\t\t'bbcode_match'\t\t\t=> $bbcode_match,\n\t\t\t\t\t\t'bbcode_tpl'\t\t\t=> htmlspecialchars($bbcode_tpl),\n\t\t\t\t\t\t'bbcode_helpline'\t\t=> $bbcode_helpline,\n\t\t\t\t\t\t'display_on_posting'\t=> $display_on_posting,\n\t\t\t\t\t\t)))\n\t\t\t\t\t, 'confirm_bbcode.html');\n\t\t\t\t}\n\n\t\t\tbreak;\n\n\t\t\tcase 'delete':\n\n\t\t\t\t$sql = 'SELECT bbcode_tag\n\t\t\t\t\tFROM ' . BBCODES_TABLE . \"\n\t\t\t\t\tWHERE bbcode_id = $bbcode_id\";\n\t\t\t\t$result = $db->sql_query($sql);\n\t\t\t\t$row = $db->sql_fetchrow($result);\n\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\tif ($row)\n\t\t\t\t{\n\t\t\t\t\tif (confirm_box(true))\n\t\t\t\t\t{\n\t\t\t\t\t\t$db->sql_query('DELETE FROM ' . BBCODES_TABLE . \" WHERE bbcode_id = $bbcode_id\");\n\t\t\t\t\t\t$cache->destroy('sql', BBCODES_TABLE);\n\t\t\t\t\t\tadd_log('admin', 'LOG_BBCODE_DELETE', $row['bbcode_tag']);\n\n\t\t\t\t\t\tif ($request->is_ajax())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$json_response = new \\phpbb\\json_response;\n\t\t\t\t\t\t\t$json_response->send(array(\n\t\t\t\t\t\t\t\t'MESSAGE_TITLE'\t=> $user->lang['INFORMATION'],\n\t\t\t\t\t\t\t\t'MESSAGE_TEXT'\t=> $user->lang['BBCODE_DELETED'],\n\t\t\t\t\t\t\t\t'REFRESH_DATA'\t=> array(\n\t\t\t\t\t\t\t\t\t'time'\t=> 3\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconfirm_box(false, $user->lang['CONFIRM_OPERATION'], build_hidden_fields(array(\n\t\t\t\t\t\t\t'bbcode'\t=> $bbcode_id,\n\t\t\t\t\t\t\t'i'\t\t\t=> $id,\n\t\t\t\t\t\t\t'mode'\t\t=> $mode,\n\t\t\t\t\t\t\t'action'\t=> $action))\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\t$u_action = $this->u_action;\n\n\t\t$template_data = array(\n\t\t\t'U_ACTION'\t\t=> $this->u_action . '&amp;action=add',\n\t\t);\n\n\t\t$sql_ary = array(\n\t\t\t'SELECT'\t=> 'b.*',\n\t\t\t'FROM'\t\t=> array(BBCODES_TABLE => 'b'),\n\t\t\t'ORDER_BY'\t=> 'b.bbcode_tag',\n\t\t);\n\n\t\t/**\n\t\t*  Modify custom bbcode template data before we display the form\n\t\t*\n\t\t* @event core.acp_bbcodes_display_form\n\t\t* @var\tstring\taction\t\t\tType of the action: modify|create\n\t\t* @var\tstring\tsql_ary\t\t\tThe SQL array to get custom bbcode data\n\t\t* @var\tarray\ttemplate_data\tArray with form template data\n\t\t* @var\tstring\tu_action\t\tThe u_action link\n\t\t* @since 3.1.0-a3\n\t\t*/\n\t\t$vars = array('action', 'sql_ary', 'template_data', 'u_action');\n\t\textract($phpbb_dispatcher->trigger_event('core.acp_bbcodes_display_form', compact($vars)));\n\n\t\t$result = $db->sql_query($db->sql_build_query('SELECT', $sql_ary));\n\n\t\t$template->assign_vars($template_data);\n\n\t\twhile ($row = $db->sql_fetchrow($result))\n\t\t{\n\t\t\t$bbcodes_array = array(\n\t\t\t\t'BBCODE_TAG'\t\t=> $row['bbcode_tag'],\n\t\t\t\t'U_EDIT'\t\t\t=> $u_action . '&amp;action=edit&amp;bbcode=' . $row['bbcode_id'],\n\t\t\t\t'U_DELETE'\t\t\t=> $u_action . '&amp;action=delete&amp;bbcode=' . $row['bbcode_id'],\n\t\t\t);\n\n\t\t\t/**\n\t\t\t*  Modify display of custom bbcodes in the form\n\t\t\t*\n\t\t\t* @event core.acp_bbcodes_display_bbcodes\n\t\t\t* @var\tarray\trow\t\t\t\tArray with current bbcode data\n\t\t\t* @var\tarray\tbbcodes_array\tArray of bbcodes template data\n\t\t\t* @var\tstring\tu_action\t\tThe u_action link\n\t\t\t* @since 3.1.0-a3\n\t\t\t*/\n\t\t\t$vars = array('bbcodes_array', 'row', 'u_action');\n\t\t\textract($phpbb_dispatcher->trigger_event('core.acp_bbcodes_display_bbcodes', compact($vars)));\n\n\t\t\t$template->assign_block_vars('bbcodes', $bbcodes_array);\n\n\t\t}\n\t\t$db->sql_freeresult($result);\n\t}\n\n\t/*\n\t* Build regular expression for custom bbcode\n\t*/\n\tfunction build_regexp(&$bbcode_match, &$bbcode_tpl)\n\t{\n\t\t$bbcode_match = trim($bbcode_match);\n\t\t$bbcode_tpl = trim($bbcode_tpl);\n\n\t\t// Allow unicode characters for URL|LOCAL_URL|RELATIVE_URL|INTTEXT tokens\n\t\t$utf8 = preg_match('/(URL|LOCAL_URL|RELATIVE_URL|INTTEXT)/', $bbcode_match);\n\n\t\t$utf8_pcre_properties = phpbb_pcre_utf8_support();\n\n\t\t$fp_match = preg_quote($bbcode_match, '!');\n\t\t$fp_replace = preg_replace('#^\\[(.*?)\\]#', '[$1:$uid]', $bbcode_match);\n\t\t$fp_replace = preg_replace('#\\[/(.*?)\\]$#', '[/$1:$uid]', $fp_replace);\n\n\t\t$sp_match = preg_quote($bbcode_match, '!');\n\t\t$sp_match = preg_replace('#^\\\\\\\\\\[(.*?)\\\\\\\\\\]#', '\\[$1:$uid\\]', $sp_match);\n\t\t$sp_match = preg_replace('#\\\\\\\\\\[/(.*?)\\\\\\\\\\]$#', '\\[/$1:$uid\\]', $sp_match);\n\t\t$sp_replace = $bbcode_tpl;\n\n\t\t// @todo Make sure to change this too if something changed in message parsing\n\t\t$tokens = array(\n\t\t\t'URL'\t => array(\n\t\t\t\t'!(?:(' . str_replace(array('!', '\\#'), array('\\!', '#'), get_preg_expression('url')) . ')|(' . str_replace(array('!', '\\#'), array('\\!', '#'), get_preg_expression('www_url')) . '))!ie'\t=>\t\"\\$this->bbcode_specialchars(('\\$1') ? '\\$1' : 'http://\\$2')\"\n\t\t\t),\n\t\t\t'LOCAL_URL'\t => array(\n\t\t\t\t'!(' . str_replace(array('!', '\\#'), array('\\!', '#'), get_preg_expression('relative_url')) . ')!e'\t=>\t\"\\$this->bbcode_specialchars('$1')\"\n\t\t\t),\n\t\t\t'RELATIVE_URL'\t=> array(\n\t\t\t\t'!(' . str_replace(array('!', '\\#'), array('\\!', '#'), get_preg_expression('relative_url')) . ')!e'\t=>\t\"\\$this->bbcode_specialchars('$1')\"\n\t\t\t),\n\t\t\t'EMAIL' => array(\n\t\t\t\t'!(' . get_preg_expression('email') . ')!ie'\t=>\t\"\\$this->bbcode_specialchars('$1')\"\n\t\t\t),\n\t\t\t'TEXT' => array(\n\t\t\t\t'!(.*?)!es'\t =>\t\"str_replace(array(\\\"\\\\r\\\\n\\\", '\\\\\\\"', '\\\\'', '(', ')'), array(\\\"\\\\n\\\", '\\\"', '&#39;', '&#40;', '&#41;'), trim('\\$1'))\"\n\t\t\t),\n\t\t\t'SIMPLETEXT' => array(\n\t\t\t\t'!([a-zA-Z0-9-+.,_ ]+)!'\t =>\t\"$1\"\n\t\t\t),\n\t\t\t'INTTEXT' => array(\n\t\t\t\t($utf8_pcre_properties) ? '!([\\p{L}\\p{N}\\-+,_. ]+)!u' : '!([a-zA-Z0-9\\-+,_. ]+)!u'\t =>\t\"$1\"\n\t\t\t),\n\t\t\t'IDENTIFIER' => array(\n\t\t\t\t'!([a-zA-Z0-9-_]+)!'\t =>\t\"$1\"\n\t\t\t),\n\t\t\t'COLOR' => array(\n\t\t\t\t'!([a-z]+|#[0-9abcdef]+)!i'\t=>\t'$1'\n\t\t\t),\n\t\t\t'NUMBER' => array(\n\t\t\t\t'!([0-9]+)!'\t=>\t'$1'\n\t\t\t)\n\t\t);\n\n\t\t$sp_tokens = array(\n\t\t\t'URL'\t => '(?i)((?:' . str_replace(array('!', '\\#'), array('\\!', '#'), get_preg_expression('url')) . ')|(?:' . str_replace(array('!', '\\#'), array('\\!', '#'), get_preg_expression('www_url')) . '))(?-i)',\n\t\t\t'LOCAL_URL'\t => '(?i)(' . str_replace(array('!', '\\#'), array('\\!', '#'), get_preg_expression('relative_url')) . ')(?-i)',\n\t\t\t'RELATIVE_URL'\t => '(?i)(' . str_replace(array('!', '\\#'), array('\\!', '#'), get_preg_expression('relative_url')) . ')(?-i)',\n\t\t\t'EMAIL' => '(' . get_preg_expression('email') . ')',\n\t\t\t'TEXT' => '(.*?)',\n\t\t\t'SIMPLETEXT' => '([a-zA-Z0-9-+.,_ ]+)',\n\t\t\t'INTTEXT' => ($utf8_pcre_properties) ? '([\\p{L}\\p{N}\\-+,_. ]+)' : '([a-zA-Z0-9\\-+,_. ]+)',\n\t\t\t'IDENTIFIER' => '([a-zA-Z0-9-_]+)',\n\t\t\t'COLOR' => '([a-zA-Z]+|#[0-9abcdefABCDEF]+)',\n\t\t\t'NUMBER' => '([0-9]+)',\n\t\t);\n\n\t\t$pad = 0;\n\t\t$modifiers = 'i';\n\t\t$modifiers .= ($utf8 && $utf8_pcre_properties) ? 'u' : '';\n\n\t\tif (preg_match_all('/\\{(' . implode('|', array_keys($tokens)) . ')[0-9]*\\}/i', $bbcode_match, $m))\n\t\t{\n\t\t\tforeach ($m[0] as $n => $token)\n\t\t\t{\n\t\t\t\t$token_type = $m[1][$n];\n\n\t\t\t\treset($tokens[strtoupper($token_type)]);\n\t\t\t\tlist($match, $replace) = each($tokens[strtoupper($token_type)]);\n\n\t\t\t\t// Pad backreference numbers from tokens\n\t\t\t\tif (preg_match_all('/(?<!\\\\\\\\)\\$([0-9]+)/', $replace, $repad))\n\t\t\t\t{\n\t\t\t\t\t$repad = $pad + sizeof(array_unique($repad[0]));\n\t\t\t\t\t$replace = preg_replace('/(?<!\\\\\\\\)\\$([0-9]+)/e', \"'\\${' . (\\$1 + \\$pad) . '}'\", $replace);\n\t\t\t\t\t$pad = $repad;\n\t\t\t\t}\n\n\t\t\t\t// Obtain pattern modifiers to use and alter the regex accordingly\n\t\t\t\t$regex = preg_replace('/!(.*)!([a-z]*)/', '$1', $match);\n\t\t\t\t$regex_modifiers = preg_replace('/!(.*)!([a-z]*)/', '$2', $match);\n\n\t\t\t\tfor ($i = 0, $size = strlen($regex_modifiers); $i < $size; ++$i)\n\t\t\t\t{\n\t\t\t\t\tif (strpos($modifiers, $regex_modifiers[$i]) === false)\n\t\t\t\t\t{\n\t\t\t\t\t\t$modifiers .= $regex_modifiers[$i];\n\n\t\t\t\t\t\tif ($regex_modifiers[$i] == 'e')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$fp_replace = \"'\" . str_replace(\"'\", \"\\\\'\", $fp_replace) . \"'\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($regex_modifiers[$i] == 'e')\n\t\t\t\t\t{\n\t\t\t\t\t\t$replace = \"'.$replace.'\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$fp_match = str_replace(preg_quote($token, '!'), $regex, $fp_match);\n\t\t\t\t$fp_replace = str_replace($token, $replace, $fp_replace);\n\n\t\t\t\t$sp_match = str_replace(preg_quote($token, '!'), $sp_tokens[$token_type], $sp_match);\n\n\t\t\t\t// Prepend the board url to local relative links\n\t\t\t\t$replace_prepend = ($token_type === 'LOCAL_URL') ? generate_board_url() . '/' : '';\n\n\t\t\t\t$sp_replace = str_replace($token, $replace_prepend . '${' . ($n + 1) . '}', $sp_replace);\n\t\t\t}\n\n\t\t\t$fp_match = '!' . $fp_match . '!' . $modifiers;\n\t\t\t$sp_match = '!' . $sp_match . '!s' . (($utf8) ? 'u' : '');\n\n\t\t\tif (strpos($fp_match, 'e') !== false)\n\t\t\t{\n\t\t\t\t$fp_replace = str_replace(\"'.'\", '', $fp_replace);\n\t\t\t\t$fp_replace = str_replace(\".''.\", '.', $fp_replace);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// No replacement is present, no need for a second-pass pattern replacement\n\t\t\t// A simple str_replace will suffice\n\t\t\t$fp_match = '!' . $fp_match . '!' . $modifiers;\n\t\t\t$sp_match = $fp_replace;\n\t\t\t$sp_replace = '';\n\t\t}\n\n\t\t// Lowercase tags\n\t\t$bbcode_tag = preg_replace('/.*?\\[([a-z0-9_-]+=?).*/i', '$1', $bbcode_match);\n\t\t$bbcode_search = preg_replace('/.*?\\[([a-z0-9_-]+)=?.*/i', '$1', $bbcode_match);\n\n\t\tif (!preg_match('/^[a-zA-Z0-9_-]+=?$/', $bbcode_tag))\n\t\t{\n\t\t\tglobal $user;\n\t\t\ttrigger_error($user->lang['BBCODE_INVALID'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t}\n\n\t\t$fp_match = preg_replace('#\\[/?' . $bbcode_search . '#ie', \"strtolower('\\$0')\", $fp_match);\n\t\t$fp_replace = preg_replace('#\\[/?' . $bbcode_search . '#ie', \"strtolower('\\$0')\", $fp_replace);\n\t\t$sp_match = preg_replace('#\\[/?' . $bbcode_search . '#ie', \"strtolower('\\$0')\", $sp_match);\n\t\t$sp_replace = preg_replace('#\\[/?' . $bbcode_search . '#ie', \"strtolower('\\$0')\", $sp_replace);\n\n\t\treturn array(\n\t\t\t'bbcode_tag'\t\t\t\t=> $bbcode_tag,\n\t\t\t'first_pass_match'\t\t\t=> $fp_match,\n\t\t\t'first_pass_replace'\t\t=> $fp_replace,\n\t\t\t'second_pass_match'\t\t\t=> $sp_match,\n\t\t\t'second_pass_replace'\t\t=> $sp_replace\n\t\t);\n\t}\n}\n"], "filenames": ["phpBB/includes/acp/acp_bbcodes.php"], "buggy_code_start_loc": [35], "buggy_code_end_loc": [41], "fixing_code_start_loc": [36], "fixing_code_end_loc": [48], "type": "CWE-352", "message": "In phpBB before 3.1.7-PL1, includes/acp/acp_bbcodes.php has improper verification of a CSRF token on the BBCode page in the Administration Control Panel. An actual CSRF attack is possible if an attacker also manages to retrieve the session id of a reauthenticated administrator prior to targeting them.", "other": {"cve": {"id": "CVE-2019-16993", "sourceIdentifier": "cve@mitre.org", "published": "2019-09-30T12:15:10.860", "lastModified": "2019-11-21T13:34:48.817", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "In phpBB before 3.1.7-PL1, includes/acp/acp_bbcodes.php has improper verification of a CSRF token on the BBCode page in the Administration Control Panel. An actual CSRF attack is possible if an attacker also manages to retrieve the session id of a reauthenticated administrator prior to targeting them."}, {"lang": "es", "value": "En phpBB versiones anteriores a 3.1.7-PL1, el archivo includes/acp/acp_bbcodes.php presenta una comprobaci\u00f3n inapropiada de un token de CSRF en la p\u00e1gina BBCode en el Panel de Control de Administraci\u00f3n. Un ataque de tipo CSRF real es posible si un atacante tambi\u00e9n logra recuperar el id de sesi\u00f3n de un administrador reautenticado antes de que sea atacado."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpbb:phpbb:*:*:*:*:*:*:*:*", "versionEndIncluding": "3.1.7", "matchCriteriaId": "4AA2974D-B61E-4490-A399-8B9B5898B49D"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:8.0:*:*:*:*:*:*:*", "matchCriteriaId": "C11E6FB0-C8C0-4527-9AA0-CB9B316F8F43"}]}]}], "references": [{"url": "https://github.com/phpbb/phpbb/commit/18abef716ecf42a35416444f3f84f5459d573789", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2019/09/msg00036.html", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2019/10/msg00006.html", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://www.phpbb.com/community/viewtopic.php?t=2352606", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}, {"url": "https://www.phpbb.com/support/documents.php?mode=changelog&version=3#v317", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}]}, "github_commit_url": "https://github.com/phpbb/phpbb/commit/18abef716ecf42a35416444f3f84f5459d573789"}}